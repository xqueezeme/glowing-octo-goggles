{
    "title": "TRC - Lord of the Glass Desert Ch. 16",
    "pages": [
        "Chapter 16\n\nKal and Kashka stood looking at an abandoned digging camp and shared a look between them. Iron pickaxes rusted by the weather leaned against boulders and piles of rock. Canvas bags once used to tote rubble away fluttered in the mild breeze where they were set down. \n\nThese were the remains of a plan to bore a tunnel straight through the bottom of the ridge. Digging stopped a few months after the Reavers moved in. Lassedo didn't have a large enough militia to dislodge the ex-pirates. After Calfera's attempts to remove the brigands failed, no one was willing to fund a costly tunnel they couldn't even use. Upon finding out, they wouldn't get paid, the workers dropped whatever was in their hands and walked away.\n\nThe road turned sharply to the north and made its way up the ridge at an incline much safer for wagons and carts heavy with tradable goods. Kashka scowled at the road. It wasn't very steep, but the exchange for safety was length. From where she and Kal stood, they couldn't even make out the gap where they crossed over to the Boordus jungle side of the ridge.\n\n\"My legs hurt just thinking about walking that far uphill,\" said the cat-girl. \"Hiking out of Lassedo's 'bowl' was bad enough.\"\n\nKal chuckled. \"I did most of my hunting growing up in forested hills that lead into the mountains. The land doesn't flatten out until just north of my farm. Fazal is extremely flat, and we didn't walk much while crossing the desert. Until Lassedo, the savannah was just rolling grasslands. You've been spoiled.\"\n\n\"And you're going to spoil me a little more,\" said Kashka turning toward him and holding her arms out. \"Your mistress wants you to carry her up the hill,\" she stated in an imperious tone. Despite her commanding attitude, there was still a tiny hint of a question in her order.\n\nSmiling, Kal scooped her into his arms and started up the road.\n\n\"Nooo,\" Kashka whined, \"I meant fly us up there. If you're going to just walk, then put me down. I'll walk with you.\" She snuggled into his chest, \"I am liking this, though.\"\n\nThe mage bent down and kissed her on her forehead. His feet lifted a few finger widths off the ground, and they began gliding up the rutted gravel road.\n\n------\n\nThe band of mountain sheep had never seen anything like the small, off-white, triangular structure near the trail that ran along the ridge crest. The sunlight glinted off the morning dew collected by the canvas occasionally ran down in rivulets. The glistening water caught the sheep's attention, and a few of them gathered around the tent to lick it off. A couple even tested whether or not the fibrous material was edible but quickly gave up when their teeth couldn't tear or even loosen the fabric.\n\nInside the tent, Kal stood naked outside the bathroom, watching with amusement as the fuzzy gray and white images cast on the tent's inner walls meandered around outside for a while longer before eventually continuing on their way. The walls returned to their normal color as the sound of wind rushing through trees faded. The tent appeared to interpret the sheep's nibbling as an attack.\n\nChuckling to himself, he walked the handful of steps across the green carpet to his room. Inside he found Kashka sitting on his bed, beckoning him with a finger. Her eyes flicked between Kal's face and his growing erection as he approached. She spread her legs and pointed at the floor as he stopped in front of her.\n\n\"On your knees,\" she said, her voice thick with desire.\n\n\"As you wish,\" Kal replied with a smile as he sank to the floor. The cat hooked an ankle behind his neck and pulled his mouth to her sex. The mage wasted no time and drew his tongue over her outer lips, teasing her until she gripped his hair and directed his mouth to her clit.\n\n\"Lick me there,\" she panted, then leaned back on her elbows and moaned as he dutifully obeyed.\n\nThe mage lapped at her pearl for a few minutes until the cat-girl's hips couldn't stay still. Bringing two fingers up, he collected some of her wetness before slipping them into the tightness of her pussy.\n\nShe looked down at him. \"I didn't tell you you could put your fingers in me,\" she said in half-hearted annoyance.\n\nKashka squeaked as he dragged his tongue over her clit before lifting his head and smirking at her. \"I know you didn't. I think I'm done having a 'Mistress' for now,\" he said before sucking her pearl into his mouth and lashing it with his tongue. At the same time, his fingers curled upward and began lightly massaging the rough, sensitive spot inside her.\n\nThe cat-girl gasped at the pleasurable assault and collapsed to the bed before bringing her hands up to roughly knead her breasts and tease her nipples. \"It's... about... time...\" she said between throaty moans and panting breaths.\n\nKal pressed his tongue flat against her clit and made small circles with his head as he withdrew his fingers and used them to coat her pucker with the cat's natural lubricant. Kashka's breath caught as one of his fingers gradually but insistently pushed through the tight ring of muscle.\n\nThe cat-girl's mind flitted back to her lessons from Laika. She squeezed as hard as possible on the invading digit then bore down to let it slide further in. With very little resistance, Kal's finger slipped all the way into her bottom. By itself, that felt wonderful, but then the mage began sawing his finger in and out while sucking on her clit again.\n\nKashka's world exploded as her climax crashed into her. She only vaguely recognized that Kal's tongue continued to make tiny circles around her pearl despite her unwitting attempts to crush his head between her thighs. She was only slightly more aware of the finger still lodged in her bottom, waiting for her body to relax.\n\nKal continued teasing the cat's clit until she finally released him and pushed his head away. He noted that there was a definite moan of disappointment when his finger slipped free of her ass. No sooner did his tongue leave her clit than she started grasping at him, pulling him up and on top of her.\n\n\"Get inside me, Master. Please, your servant needs to feel you inside her.\"\n\nThe mage suppressed a chuckle at a servant ordering her 'Master' to fuck her and guided his cock to her entrance. After coating the head of his prick with her wetness, he slowly pushed inside. He soon found out he was going too slow for the cat-girl as she wrapped her legs around him and pulled him forward, burying him to the hilt inside her. Kashka's back arched as the sudden rush of pleasure stole her breath.\n\nSettling into a steady but strong rhythm, Kal leaned over the bed and pressed his lips to hers.\n\nWhen he broke their kiss, she looked up at him with pleading, needy eyes. \"Do you love me?\" she asked.\n\nKal slowed his thrusts slightly as he smiled down at her. \"Absolutely.\"\n\n\"I want to be your servant and let you love me like this forever,\" she panted through the pleasure. Reaching up, she wrapped her arms around his neck and looked into his eyes. \"I want to belong to you, Master.\"\n\nKal's eyes widened as he felt the bonding magic rise up from her body and encompass him. He didn't let the sadness reach his face from knowing he would let this moment pass. He was her first love, and there was a whole world out there full of people who could make her happy and, unlike him, be devoted to only her. He swallowed hard as the pain of his decision formed a lump in his throat.\n\nMemories of Elta came thundering to the forefront of his thoughts. He stood in front of his farmhouse as she strode toward him on the astral plane. Her clothes melted away, leaving her naked and radiantly beautiful as she demanded he make love to her; demanded he make it worth giving up her Goddess and magic to save Perra's life.\n\nThe scene changed, and while still surrounded by the grayness of the astral plane, now the cleric stood naked next to Perra. Over the next few seconds, her cleric's robes reappeared. She looked over at him with both the joy of reconnecting with her Goddess and the sadness of losing her bond with him.\n\nGathering Kashka into his arms, he crushed her to his chest and began slamming his cock into her depths. Leaning down, he put his mouth next to her ear.\n\n\"I accept,\" he growled.\n\nThe bond snapped into place as he began filling her sex with his seed.\n\nThe cat's happiness at his words pushed her to the very edge of climax when she felt something change. Kashka didn't get to ponder what was happening as an unexpected orgasm rolled into her. Something felt strange, however, and she became even more confused when it triggered a second, more familiar, climax.\n\nFor the second time that morning, Kashka's world exploded even as she tried to process that the mage formed a bond with her.\n\nKal held her tightly as he continued to fill her sex while scanning the jumble of ecstasy, confusion, and happiness that was the cat-girl's thoughts.\n\nPerhaps it wasn't his greatest idea to form a bond while they were both on the verge of massive climaxes.\n\nKashka's arms wrapped around his back. Nails that scraped across his skin changed into claws that sunk in, switching back and forth uncontrolled as the cat-girl made sense of everything that just happened.\n\nMinutes passed as Kashka mentally adjusted to her new reality. Eventually, she looked up at Kal, who patiently held her throughout her ordeal.\n\nThe mage felt her thoughts dance along the edges of his mind and allowed her a little deeper.\n\n\"You really do love me, don't you,\" she said. It was more of a statement than a question.\n\nHe grinned down at her, \"I do. And I think it's safe to say you love me too.\"\n\nA faint blush tinted her cheeks for a moment. \"You really don't like it when I call you Master.\"\n\n\"Well... I don't want people to think I'm a slave owner, but I don't exactly hate it.\"\n\n\"Yet, you know it makes me feel safe and gives me a sense of security, so you put up with it,\" she said, searching his eyes.\n\nKal shrugged, \"It seems like a small price, and I now know just how much it means to you.\"\n\nThe cat moved her hand from his back to his face, \"Thank you\u2014 you're bleeding!\" Kashka yelled, looking between her hand and the red streak on Kal's cheek.\n\nHolding himself up with one arm, he used the other to draw out the cleansing spell and directed it at her hand. \"You lost control of your transformations for a little while as the bond formed. You don't need to worry. I healed myself as soon as it happened,\" he said, casting the cleaning spell a second time but at himself.\n\n\"But I hurt you...\"\n\nKal tapped his temple, \"Look in here and you'll see I'm not mad, so put it out of your mind.\"\n\n\"That's going to take some getting used to,\" she muttered. \"But I ruined the mood, and I hoped to celebrate by spending the day just like this,\" Kal grunted as her pussy tightened around him, \"with my Master deep inside me.\" She looked down as she felt his half-hard cock twitch inside her.\n\n\"I said I didn't hate it,\" Kal replied sheepishly to her questioning look. \"It's hard not to get a little excited when a beautiful woman stares into your eyes and calls you 'Master.'\" He leaned down and kissed her. \"You didn't ruin anything. We can still celebrate the day like this.\" He said, pulling out and then slowly sliding back into her sex.\n\nKashka pulled him down and said, \"I'd like that,\" before pressing her lips to his.\n\n------\n\nThe cat-girl opened her arms and stretched in the morning sun as Kal emerged from the tent behind her and spoke the command to break down the elven shelter.\n\n\"I can't believe we spent an entire day in bed,\" she giggled.\n\nOnce the tent finished folding in on itself, Kal picked up the canvas square and rolled it into a tube before dropping it into Ria's bag. \"I can't believe you wanted to make it two,\" he said, stepping up behind the cat. Pushing her cloak to the side, he cupped one of her ass cheeks and squeezed before sliding two fingers down and over the material covering her sex. The mage pressed the fabric of her shorts against her pussy lips. \"I know you're sore down here.\"\n\n\"I am.\" Flicking her tail, she swatted the side of his leg while pulling away from his hand, \"that doesn't mean I don't want you to keep making love to me.\" Turning around, she stepped into his arms, \"Everything is so much more intense now that we're bonded.\"\n\nHe leaned down and kissed her head between her ears. \"I realize you are enjoying this, but I'm not going to let you hurt yourself either.\"\n\nKashka sighed and pulled away. \"I thought boys were only supposed to think with the head in their pants.\"\n\nThe mage chuckled as they started down the game trail leading back to the road, \"When Ikuno and I first got together, that was true. I can think of plenty of times when I was still her 'servant' that I showed up wanting nothing more than to spend the entire time inside her.\" Kal enhanced his story by showing the cat a few memories from that time, then quickly stopped when he felt Kashka's arousal spike. Clearing his throat, he continued, \"Unlike a lot of boys my age trying to woo one of the girls in town, I didn't need to talk Ikuno out of her clothes. Most times, she didn't just match my lust but even demanded more of me. When I didn't need to worry about the next time I'd get a woman in bed, learning to ignore the head in my pants became a lot easier.\"\n\nKashka stopped just before the steep slope down to the road. \"It amazes me how there can be two completely different environments so close together,\" she said, looking to either side.\n\n\"Blame it on the ridge,\" said Kal. \"Where we are, most of our weather comes from the west, but a lot of it gets blocked by the mountains east of Fazal. Far south of here, the direction changes and weather comes in from the east. This ridge extends far to the south and channels the warm, moist air from the southern ocean up into the jungle below. The air the ridge doesn't catch spreads out over the southern savannah, which explains why Coovie and Rhim say those lands are a lot wetter.\"\n\nThe cat stared at him, \"How can you possibly know all that?\"\n\n\"I already knew about how weather changes direction the further south you go. The rest is mostly just a guess based on the map Idu showed us of the surrounding lands.\"\n\n\"That was a guess?\"\n\nKal shrugged before picking Kashka up and activating the flight rune pressed against his back, \"Before I started learning magic, I hardly knew anything about the world outside of my little town,\" he explained as they floated down to the road. \"Learning magic and consorting with monster girls opened my eyes to how amazing the world is and have taken me on some interesting journeys.\n\n\"What started as curiosity about how air flows over a harpy's wing led to wondering why they said the air felt 'thick' and was harder to fly through on humid days. I then started looking into how much water air can hold, which then led to clouds and weather, which then led to studying weather systems. My explanation may just be a guess, but I think it's a good one.\"\n\n\"Your guess makes a surprising amount of sense,\" said Kashka as she glanced around where Lassedo cut a gap in the top of the ridge to make the transition from one side to the other smoother.\n\nWith a final glance at the savannah sprawled out behind them, they started down the road into the Boordus Jungle.\n\nThe air thickened as they dropped toward the ridge's treeline. After the dry air of the savannah and the thin, crisp air on top of the ridge, the moist air permeating the rainforest felt heavy. Kal stopped just above the treeline and stared with wonder at the wisps of clouds rising up from the forest canopy. They looked like smoke from the top of the ridge, but Idu warned them of this phenomenon and assured them the jungle was not on fire.\n\nThey reached the treeline and discovered that the rainforest had already begun to reclaim the road. Branches and fronds extended out from the sides, creating a dome-shaped gap above the hard-packed gravel. Kal would need to bend over nearly double to crawl through the space or push his way through the dense vegetation.\n\nHe instead chose a third option. Retrieving his staff from Ria, he turned it into a polearm with a curved blade called a glaive and began slicing through the underbrush.\n\nAfter about an hour, Kal stripped down to just his pants. The strength rune may make him extremely strong, the stamina rune may keep him from getting tired, and the acclimation rune may keep him from sweating to death in hot climates, but none of those prevented him from getting hot and sweaty from constant exertion.\n\nHis biggest distraction was Kashka. The cat kept having vivid daydreams of him tossing the glaive to the side, then spinning around, striding over, tearing her clothes off, and ravishing her right there in the middle of the newly-cleared road.\n\nEither that or the cat would imagine sinking to her knees behind him. Kal would then notice her and similarly toss his glaive to the side before undoing his belt and tugging down his pants before feeding his cock into her mouth and roughly face-fucking her as her smooth non-cat-like tongue swirled around it. The daydream got a little fuzzy since her rough tongue prevented her from experiencing this in real life, and she had no memories to draw from.\n\nThe daydream then shifted to her lying on his bed with her ankles crossed behind her head. Kal's swing faltered. He didn't realize she was that flexible. He stopped and looked back at her as in the daydream she reached down and collected some of her wetness, then rubbed it around the puckered skin of her bottom.\n\n\"It's been so long I think I forgot what it was like being bonded to a monster girl,\" he said, snapping her out of her fantasy.\n\nKashka blushed, \"Sorry, I forgot you could see my thoughts.\"\n\n\"Not that I'm complaining, because those were some very nice daydreams, but we can't be stopping every few hours to fuck, or we'll never get through this rainforest.\"\n\nThe cat-girl took a moment to look disappointed before peering up at the forest canopy. \"I'll keep an eye on things from above. Maybe that'll keep my mind off...\" she smirked as she looked him up and down, \"you.\"\n\nKal chuckled as Kashka kicked off her boots and stepped off the road, disappearing into the vegetation in the direction of a gray, smooth-barked tree. Kal stored the Sandwalker boots on his feet and slipped the Boots of the Traveler back on before returning his attention to the road's overgrowth and raising his glaive.\n\nA mental shout from Kashka spun him around, his eyes darting around searching for danger as the glaive came up defensively. He looked up to where Kashka clung to the side of the tree, looking startled\n\n\"I'm okay,\" she sent him over the bond.\n\n\"What happened?\" he asked.\n\n\"I wasn't expecting to jump this high.\"\n\n\"I know I mentioned that women who are bonded with me get boosts to their powers after we make love.\"\n\n\"I remember. I just never knew there was magic in my jumping ability,\" she replied as she scampered up the tree into the forest canopy.\n\nKal blinked a few times as she seemed to vanish among the branches. He knew her location because of the bond, but now that she was trying to be stealthy, the cat seemed to vanish completely. Even if they did run across some of the ape-type monster girls Ibu and Melir spoke of, they probably wouldn't notice her.\n\nLifting the glaive, Kal again started cutting away the branches and fronds blocking his way.\n\n---\n\n\"At this rate, the garrison you mentioned to Chaldi will need to pay you for clearing their road,\" Kashka sent with the scene of the road behind the mage from her vantage in the trees.\n\nKal glanced behind him. The path was quite a bit thinner than earlier since he started only cutting the vegetation on one side of the road for the sake of speed and to conserve mana. Using so many runes at once drained him more quickly than expected. The day's efforts already burned through two of his mana crystals, and the angle of the sun filtering through the trees indicated it was still early afternoon.",
        "\"Something's coming up the road,\" sent the cat-girl a few seconds before Kal heard something crashing through the underbrush. A moment later, he felt a deathly calm come over the cat-girl as she drew her daggers.\n\nKal backed up and shifted the glaive back into his staff. As the sound grew closer, he made out the familiar cadence of human footfalls.\n\nA man burst out of the vegetation. His ruddy face and arms were covered with scrapes and small cuts from his frantic dash.\n\nKal's eyes went immediately to the tattoo on the man's neck. It matched the drawing Ibu showed him and Kashka, indicating this man was a Reaver. The Reaver's eyes widened in fear upon seeing another human, but his expression quickly turned to one of desperate hope.\n\n\"Please! Please save me!\" he shouted, running towards Kal. \"Lock me up! Whip me! Just don't let her take me!\" The Reaver stumbled against the mage, grabbing Kal's staff to keep from falling.\n\nBefore Kal could push the man away, four forearm-length, needle-like hairs sunk into the Reaver's back.\n\nThe mage forgotten, the man began spinning around, grasping for the hairs that were just barely out of reach. He yelled out in ever-increasing panic before freezing in place. The tortured scream ripped from his throat was only matched by the terror in his eyes. The man continued screaming as he sank to his knees and didn't stop until he collapsed into a heap on the road.\n\nKal paid no attention to the man as his body twitched in its death throes. Instead, he peeked out from behind his magic shield, scanning the rainforest for the Reaver's attacker.\n\n\"You don't have the Reaver's mark. I have no quarrel with you,\" said a female voice from the underbrush. \"Leave here before the bandits kill you.\"\n\n\"I can't do that,\" said Kal. \"I'm hunting those same bandits. If you are doing the same, perhaps we can work together?\"\n\n\"Work to\u2014\" The mage detected a hint of hope in the woman's voice. \"No, no, no, no... We can't work together. I'm hideous. You would run away the moment you saw me, just like all the other men.\"\n\n\"You are a monster girl, right?\"\n\n\"Yes.\"\n\n\"I have many monster girl lovers,\" he said while tracing the spell for a simple illusion. \"I'm not easily frightened by your kind.\" Beside him, an image of Ikuno appeared that shifted to Aradelle, then Perra, Gerda, Kuto. Kal couldn't help smiling as he added Kashka into the rotation. He listened over the bond for the cat-girl's reaction but was met with the frightening stillness of Kashka's mind preparing to kill the unseen woman if necessary.\n\n\"They're all so pretty,\" said the mysterious voice. \"They aren't like me. I'm different. Men take one look and run from me. You will too.\"\n\nKal dropped his shield and stored his staff as a sign he had no intention to harm the woman, \"If you do not want to work together, that's a little disappointing. But since it seems like we are both hunting the Reavers, I'd like to get whatever information you have on them. I should also know what you look like, so I don't end up attacking you by accident.\"\n\n\"Why are you hunting them? Did they wrong you somehow?\" she asked.\n\n\"Someone I knew was killed by bandits. I'm just trying to keep others from going through what she and her father did. What about you?\"\n\n\"The Reavers drove me from my home.\"\n\n\"You lived in the ruins?\"\n\n\"I was born there.\"\n\n\"I couldn't get much information on the ruins or their camp. Anything you might offer would be a huge help.\"\n\nThe voice hesitated for a moment, \"First, tell me something about the Reavers I don't know.\"\n\n\"That may be difficult. Most of what I know came from the Guard Captain in Lassedo,\" said Kal before stepping over to the dead Reaver. Avoiding the needles in the man's back, he shoved the corpse around with his foot until the black tattoo on his neck was visible to the woman. \"This tattoo is a leftover of the Reavers' time as pirates. The circle and the inward teeth supposedly look like the mouth of a giant sea creature called a kraken. The oval in the middle with the wavy line is supposed to be the kraken's beak.\" Kicking the body to the side of the road, he turned to face the mysterious speaker. \"I'm guessing that Gaboh doesn't want his men running away on him. That tattoo marks them on sight as brigands.\"\n\n\"Your information is old. Gaboh is dead by my own hand,\" said the woman.\n\n\"All the more reason we need your help. Perhaps we could pool our information and resources?\"\n\n\"I want to,\" she replied. \"I want my home back. But if I come out, I'll just scare you away. All of my husbands killed themselves as soon as my bite wore off because I was so ugly.\"\n\n\"They killed themselves?\" he asked cautiously.\n\n\"I live up in the forest canopy. After mating with me and the effects of my bite wore off, they threw themselves from my nest. They chose to die rather than be around me.\"\n\nKal shook his head, confused. He couldn't imagine a monster girl being so hideous as to make him want to kill himself. Something wasn't adding up. \"As long as you aren't interested in turning me into your next meal, I won't run away. I promise. Besides, as I said before, if we meet while dealing with the Reavers, I don't want to attack you because I don't know what you look like.\"\n\nThe woman sighed heavily, \"I guess you're right. Just don't say I didn't warn you.\"\n\nA series of dull taps came from the underbrush, followed by the extension of an insectoid leg covered in silky hair. The hair's color surprised him and reminded Kal of the purple left on your fingers after crushing a blackberry. Another leg soon followed the first before the leaves parted and a human torso appeared, but instead of human legs, she had two shorter versions of her spider legs. Despite their placement in relation to her torso, their movements were definitely more insectoid. More legs covered in silky hairs followed, along with a wide, flat carapace and a bulbous abdomen. Her abdomen also sported silky hair, and Kal could see a few of the stiff hairs she used to kill the Reaver sticking up from the backside.\n\nThe mage felt Kashka tense in caution as the spider-girl stepped out from the vegetation but relaxed after observing her for a moment. Kal agreed with the cat's assessment that the arachne showed no intention of attacking. If anything, she looked ready to bolt back into the underbrush.\n\nTwo glass-like domed structures protruded out of purple hair that matched the rest of her body. As she looked around nervously, Kal noted two more just behind her ears that had a slight silver sheen. The arachne didn't wear anything to cover her chest and purple-tinted nipples capped fair-sized breasts. Her stomach was smooth except for a small divot where a belly button would be on a human. Looking lower, he came to a small patch of hair matching that on her head that pointed toward the top of her sex.\n\nFrom the way she spoke of herself, Kal expected the woman to be horribly disfigured, but her human portion was actually quite pretty, even if the spider body did make him uncomfortable. She came to a stop in front of him and nervously covered her breasts with her arm. Her two smaller legs in front dropped to the ground, and she began fidgeting in a very human-like manner.\n\n\"There. You've gotten your eyeful seen how disgusting I am. Now be on your way.\"\n\n\"You're hardly disgusting,\" said Kal, ignoring her demand for him to leave. \"You are certainly different from any monster girl I've ever seen before, but I think you are quite intriguing. Even pretty.\"\n\nThe arachne stared at him in disbelief. \"Men have thrown themselves to their deaths to get away from me. I know how ugly I am. Now you're calling me pretty?\" Her eyes narrowed, \"Why should I believe you?\"\n\n\"Because I haven't run away screaming,\" he replied coolly. \"Earlier, you said your husbands killed themselves once they recovered from your bite. Tell me, how do you eat?\"\n\n\"Um... monkeys, large rodents, occasionally a small boar if one wanders into my hunting grounds,\" she answered, unsure why he would ask such a question.\n\n\"It's good to know humans aren't on that list, but I asked how you eat, not what you eat.\"\n\n\"Small animals like those only require a single one of my hairs to kill. I then gut, skin, and eat them. If I have a place to safely make a fire, I'll cook the meat before eating it.\"\n\n\"Do you know how your smaller, non-monster-girl relatives eat,\" He asked\n\n\"They catch their food, sometimes in a web, eat the insides, then discard the shells.\"\n\n\"What you said is true in essence. However, there's more to it.\" Kal began pacing back and forth across the cleared road. His strength rune lit up as he took a moment to kick the Reaver's corpse off to the side before continuing his explanation. \"When you bite a man, it makes him crazy with lust, correct?\n\nThe arachne nodded.\n\n\"When a small spider bites its prey, two things happen. First, it paralyzes the prey, so it stops struggling and can't fight back. Keep in mind, it only paralyzes the prey, it doesn't kill it. Second, and this part is known to quite a few humans, the venom they use begins liquefying their prey's insides.\" The mage ignored the growing horror on the arachne's face. \"Smaller spiders don't have a mouth like yours that can chew food, so they have to turn everything into a liquid first. Their prey is still alive and awake as it happens. Then there are the spiders that lay their eggs in their prey, so the spiderlings have a fresh meal when they hatch. I won't lie to you. If my options were either of those or throwing myself out of a tree, I'd choose the quick death.\"\n\nThe spider's eyes began to tear up, \"They thought I was going to...\"\n\n\"Probably. It's made worse by the stories of arachnes from back when monster girls were created. The first of your kind wrapped men in a cocoon that only left their dick exposed. After mating with the trapped man, they drained him of all his blood and bodily fluids, leaving a dried husk. Only in the last century have they begun to realize it's safer to let the men go. Humans can be very dangerous in large groups.\"\n\n\"You said you never met one of my kind before. How do you know this?\"\n\n\"One woman I showed you has been alive for a very long time. She's the one who told me.\"\n\n\"I know quite well how dangerous humans can be,\" said the spider with a hint of sadness. \"Yet you are challenging the Reavers alone?\"\n\n\"I'm not alone. My companion is keeping an eye on me in case this meeting goes poorly. Also, I have a few tricks at my disposal, as you have seen.\"\n\nThe arachne looked around suspiciously at the vegetation to either side of the cleared road, then spent a few moments tilting her head at strange angles. After a few seconds, Kal realized the domes on her head were eyes, and she was searching the branches above for Kashka. Touching the cat's mind, he saw the arachne's upward gaze pass over the cat multiple times without seeing her.\n\n\"I have a magical shelter large enough to accommodate you. Perhaps you could join us for supper?\" he asked, drawing her attention again.\n\nThe spider's eyes widened. \"J-join you?\" she stammered, her eyes flicking to his crotch for a brief moment.\n\nBefore he could answer, Kashka's presence blossomed in his mind again as she sheathed her daggers. The cat immediately began searching for something in his mind. Curious, Kal let her go rummage a little deeper until she found an instance where Kashka and Laika were on their knees in front of him. His cock repeatedly disappeared into the pleasure slave's mouth while Kashka dipped down and planted kisses all over his balls.\n\nMoments later, the cat-girl sent him a new image, this time with the arachne staring up at him adoringly as she sucked him off and Kashka rained kisses on his balls.\n\nThe cat mentally crowed with triumph as his pants began to tighten.\n\nDeciding to go along with her idea, Kal adjusted his erection and cleared his throat. \"Yes, I'd like you to join... me.\"\n\nThe spider peeled her eyes away from his groin and the outline of his hardening cock to look at his face. She then blushed nearly as purple as her hair while her jaw worked, but no sound came out. With a final glance at his crotch, she spun around with amazing speed for such a bulky body and crashed through the foliage where she originally emerged.\n\nKal bent down to see the arachne skittering away through the tunnel made by the road's overgrowth, her torso bent forward so she wasn't getting beaten by the jungle's vegetation.\n\n\"Oops,\" sent Kashka. \"I guess that was a little too much for her.\"\n\n\"To be fair, I thought it would work too,\" he replied.\n\n\"I'm going to go after her. I have an idea.\"\n\nKal chuckled as he picked up some of the details. \"Okay then. Be safe.\"\n\nAs the cat-girl darted away, leaping from branch to branch through the canopy, he retrieved his staff from Ria and moments later began clearing the road of vegetation once again.\n\n---\n\n\"Stupid, stupid, stupid,\" mumbled Anika, bouncing her palm against her temple as she climbed up one of the trees that supported her nest. \"You had a male standing right in front of you, and you ran away like an idiot. He even wanted to mate you!\" she said in a breathy moan as flashes of the human's cock straining against his pants flitted across her mind. \"Why? Why did you run away?\" Anika grumbled as she climbed into her nest. Looking up at the silken ceiling of her abode, she asked, \"Why must I be my own worst enemy?\"\n\nA silken thread beneath her back leg vibrated. Her home needed to be large enough to accommodate her bulky body, and the signal strands ran through the entire nest. Carefully anchored to allow vibration to travel their length, the silk alerted her to the presence of potential food passing by from any of her home's chambers. It also warned her when intruders came calling.\n\nAnika cautiously moved back toward her nest's entrance while instinctively keeping a leg on the signal thread at all times. Different vibrations could tell her the source's direction and even approximate size. The arachne peeked out of her nest and looked toward the disturbance. The tree her thread attached to fell within her pouncing distance, and whatever disturbed it hadn't moved. Yet, for some reason, she couldn't see what caused the thread to hum.\n\nShe looked away for a moment in confusion when another strong vibration made her head snap in the tree's direction. Standing on a branch next to the silk's attachment point stood a cat-girl with her finger on the signal thread. When she realized Anika could see her, the feline waved in greeting then bounded from tree to tree until she came to rest on a branch directly across from the opening to the arachne's nest.\n\nThe sudden advance surprised Anika, and she reared up on her back four legs in a threat display while lifting her abdomen to retrieve the glass-like stinging hairs that grew there.\n\nThe feline held her hands up, \"I'm the companion of the human you spoke to earlier. I owe you an apology for running you off like that. It was my idea to entice you into helping us. I hope this way we can speak without any male distractions, as pleasant as they might be,\" she said, putting her hands behind her back and leaning against the tree trunk.\n\n\"Are you sure you didn't come to flaunt how pretty you are?\" said Anika, her tone filled with bitterness. \"Or maybe you're here to make fun of me for running away from the first male who actually showed some interest in becoming my husband?\"\n\n\"Kal meant it when he called you pretty, and I agree with him,\" the cat replied. \"However, don't think of him as a potential husband, or you will be disappointed. He may have some fun with you, but he can't stay with you like a real husband would.\"\n\n\"Only willing to share so much?\" the spider scoffed.\n\nThe cat shook her head, \"Not at all. I'm Kal's lover but also his servant. I'm here to help him on his journey and have no power to make demands as to who he sleeps with.\" The feline's face took on a faraway expression for a few seconds before she smiled at Anika. \"He doesn't seem to agree with me.\"\n\n\"What was that you just did?\" the spider asked, glancing around in suspicion.\n\n\"He and I can speak over long distances. I don't know how it works, and neither does Kal for the most part.\"\n\n\"His name is Kal?\"\n\nThe woman nodded. \"And mine is Kashka.\"\n\n\"Anika.\"\n\n\"That's a pretty name.\"\n\n\"My mother said it was the name of my father's mother. She caught him as he was exploring the ruins, and he even stayed with her for a few weeks after her bite wore off. But he was an explorer at heart and eventually continued down into the catacombs. He never returned.\" She didn't like to think about it, but she was certain she came across her father's skeleton while disabling one of the ancient ruin's traps.\n\n\"The ruins were once your home, weren't they?\" asked Kashka \n\n\"Until the Reavers came.\" Anika reached up and plucked a tuft of old silk from her home's entrance. \"My mother gave me a locket that glowed when I was little and told me to use it for light instead of torches. I never questioned that, even after she died. It wasn't until the Reavers came that I found out why.\" she rolled the tuft of threads into a ball between her fingers. \"Webbing isn't very flammable unless it's something like this,\" she said, indicating her nest, \"where there's enough to sustain a flame. Over the years, my mother and I had coated the walls, ceiling, and floors of the upper ruins with web. A couple of torches was all it took to destroy my home.\"\n\n\"You said your mother died. Did the Reavers kill her?\"\n\nThe arachne shook her head, \"When I was close to coming of age, my mother went off to try finding a new husband. She hoped to give me a little sister. The man she found was actually part of a small party, and his friends wounded her badly enough she barely made it home to say goodbye before dying.\"\n\n\"I lost my mother too,\" said Kashka. \"She died trying to save my sisters and me from slavers.\"\n\n\"And now you're Kal's servant?\"\n\nShe nodded, \"But by my choice this time. He may be my Master, but I chose him. He didn't buy me.\"\n\n\"At least your daughters won't need to worry about their mother running off and getting killed trying to catch a husband.\"\n\n\"I'm not worried about daughters at the moment, and Kal has fathered enough children for a while. Although, if you are really wanting a daughter, then he may help if you ask. As a human who enjoys the company of monster girls, he considers it his duty to give children to those of us who, like you, have difficulty finding mates.\n\n\"But enough about that, what can you tell us about the ruins where you lived?\"\n\nAnika backed up from her nest's entrance, \"Come inside, and I can tell you what I know about the men who took over my home.\" Kashka shifter to feline arms and limbs before nimbly leaping from the branch to Anika's nest. The arachne raised an eyebrow, \"Do you always jump so quickly into the spider's lair?\"\n\nThe cat looked up at her and smiled. \"If you chose to attack me, who do you think would be in the most danger?\" Kashka rested her wrists on her dagger's pommels, and it looked to Anika like the light of life went out in her eyes, leaving behind a cold, calculating, and very dangerous machine.\n\nThe spider backed further into her nest. A shiver ran down her spine at the thought this woman was staring down at her the entire time he spoke with the human. And now she just invited the cat into her home.\n\nThe cat's wrists lifted off her weapons, and the smiling, pleasant Kashka returned. \"Actually, Kal would like to know more about you at the moment.\"\n\nAnika released a breath she didn't realize she was holding. \"About me?\"\n\n\"He says that maybe getting to know each other a little may prevent a repeat of earlier. He also doesn't want you to think he's only interested in what you know about the Reavers. What was it like growing up inside an ancient ruin?\"",
        "\"Um... well... dangerous for the most part. Mother didn't let me wander far from our home, but once she passed, my father's need to explore set in, and I began venturing further down. There aren't many creatures down there, but there are still hundreds of traps. Luckily for me, they were constructed with humans in mind and didn't take into account someone who could walk on the walls or ceiling. I bypassed the triggers of traps that still worked, then found the mechanisms and disabled them permanently.\n\n\"My favorite part was discovering how the ancients made their traps work. In one setup, poisoned darts shoot out of holes in the wall. Then, over the next few minutes, it reloads each of the slots with a freshly poisoned dart before arming the entire system again. Another drops the floor out from under a tomb raider, dropping them into a pit of spikes. Then it uses a huge weight to close up the pit and leave the hallway looking pristine. Whoever built the ruins were amazing engineers.\"\n\nAnika's face fell, \"Unfortunately, the Reavers have used my exploration to their benefit.\"\n\n\"How so?\" Kashka asked.\n\n\"Gaboh lost a bunch of men to the traps I left alone and stopped exploring deeper into the ruins. Once I killed Gaboh, Tavik took over. Tavik is a lot smarter than Gaboh. The first thing he ordered was for a group of men to continue exploring the deep ruins. When spying on their camp, I heard some guards mention Tavik discovered dust trails on the walls and ceiling that told him where the traps were.\"\n\nThe arachne lifted a leg and showed the foot on the end to Kashka, \"My grip by itself isn't enough to keep me attached to a wall, and especially not the ceiling. My feet produce a tiny amount of silk that helps me stick. Tavik discovered where the silk collected dust over time. Without knowing, I created a path down into the catacombs.\n\n\"Not long after they found the armory and the belts worn by the Reaver I killed, the apes-girls who were helping them ran away. Instead of treating them as partners, with the belt's enhanced strength, the Reavers started trying to enslave them. One morning the humans woke up, and all the ape-women were gone.\n\n\"This left the bandits in a tough position. Their source of sex, along with the knowledge of all the traps along the road, just disappeared. Even better, thanks to some upset ape-girls, a good portion of their rum and whiskey barrels leaked through large cracks left by a hammer they found on the way out of the camp.\n\n\"Tavik wanted them dead and sent a party to chase after the women. That was when they found out the belts don't work once you get away from the ruins.\n\n\"Since then, I've been slowly picking them off as a lone Reaver wanders too far from their encampment.\n\n\"Tavik is smart and has been working through the ape-girls' traps quickly. Soon enough, they'll be able to use the road and raid merchant wagons entering Calfera again.\"\n\n\"That's not going to happen,\" growled Kashka. \"We have friends traveling that road. They won't be Tavik's targets.\"\n\nAnika stared at the cat for a moment as she recalled the woman's frightening stillness minutes earlier. Her face broke into a grin at the thought of Tavik in all of his bluster looking down at this short monster girl and for all his cunning, fail to understand he was about to die.\n\n\"One of the things I wanted to ask is if you might be interested in a trade? Everything you know about the ruins and the Reavers in exchange for some alone time with Kal.\" The cat immediately stared past her at a point on the wall before chuckling.\n\n\"What's so funny?\" asked the arachne.\n\n\"Kal is complaining about the servant prostituting out her master for information.\"\n\n\"Are you in trouble?\"\n\nKashka giggled, \"No, if you want some time with him, there are no strings attached. He would take care of your needs even if you offered up no information in return. Although, that doesn't really apply with all you've told us already.\"\n\n\"Why did he want to know about me? Shouldn't he be focusing on the bandits?\"\n\n\"Because Kal doesn't actually like to jump in bed with strangers. He also would like the chance to examine you and thought building a rapport would make you more likely to say yes.\"\n\n\"Examine me? how\u2014\"\n\n\"Before you ask any more questions, would you be okay with him coming here so you can ask him yourself? Being you two's go-between is getting tiring.\"\n\n\"I... I guess he could come up,\" she stammered, blushing.\n\n\"Promise you won't run away again?\"\n\nAnika smiled at the irony of the cat insisting on the same promise she demanded of Kal. I promise, and even if I don't keep it, I'll need to tear a hole in my back wall to go very far.\"\n\n\"Good,\" said Kashka as she began walking back toward the entrance and indicating the spider should follow.\n\nThe shadows had grown long as the sun set in the western sky, throwing the already dim rainforest into darkness that only brightened near the canopy, where they were. Down below, frogs and insects produced a cacophony with their loud mating calls and chirps. As the sun sank, the forest lit up with glowing bugs, fungus, and several flowering plants that depended on nectar-eating bats for pollination and nutrients.\n\nAnika smiled at the show her forest put on every night and how the cat next to her was completely amazed by the display.\n\nOne of her signal threads indicated something heavy landed on the tree where Kashka first spoke to her. A bluish light began illuminating the far side and slowly revealed the human from earlier, stepping carefully from branch to branch around the trunk.\n\nKal stopped on one of the larger branches and laid down something square, then had a short conversation with the light on his shoulder. The mage shrugged and said a word the spider didn't recognize.\n\nKal, Kashka, and Anika all jumped back as a thick rope burst out the top of the canvas square and wrapped around a thick branch high above the human's head followed by a second and then a third, the last two finding similarly sized limbs in the canopy. The ropes lifted the square as it began unfolding downward until it turned into a long, thin triangle. The triangle then began unfolding to the side as the lower edge started floating upward. When the edges of the triangles eventually met again, they fused into a large circle. A few seconds passed before the bottom of the tent dropped down, making the branches above creak and sway. A human-sized doorway appeared directly in front of Kal but quickly widened after a few words from the light on his shoulder.\n\nThe human turned toward them. \"Instead of risking you making a hole in the back of your home, I invite you to join me in here. This way, you can approach at your own pace and always have a way out,\" he called to them before disappearing through the tent's door.\n\nKashka looked up at her, the cat's eyes shining in the fading light. \"I didn't know it could do that, and from the way he jumped, neither did Kal. Are you coming?\"\n\nAnika stared for a few long moments at the open doorway to the mage's tent. \"Yes, I think I am.\""
    ],
    "authorname": "BluDraygn",
    "tags": [
        "oral",
        "monster girl",
        "neko",
        "fingering",
        "trc",
        "magic",
        "non-human"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/trc-lord-of-the-glass-desert-ch-16"
}