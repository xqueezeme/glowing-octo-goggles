{
    "title": "Catering Girl Ch. 07",
    "pages": [
        "Since I know you've already read the prior six chapters (you've been a good reader, right? No skipping to the end?), there's no need for me to tell you of the important character under the age of eighteen in this story. You already know that in order for me to tell the tale of a young single mom, her munchkin has to be in it. But just because she's a single mom, doesn't mean she's irresponsible. She always makes sure the munchkin is safely tucked in her own bed and sleeping while the grownups play. \n\nChapter 7\n\nJennifer\n\nI sat in the hospital waiting room chair, wiping the tears from my eyes. While Madison was sleeping in my lap, Whitney's hand rested on my leg, the reassuring touch helping to calm my nerves. My mind was racing with all kinds of what ifs, and all of them were ending up in that dark, no good corner of my head.\n\nI lifted my head and looked at Whitney and shook it in disbelief. Across the room, Chaplin Harrison and Chief Murkowski sat on a bench. They were trying to give us space but would check in on us from time to time to see if we needed anything.\n\n\"We're going to get through this. Together, I'm right here for you, babe.\" Whit's voice was steady and reassuring.\n\n\"Thanks, I don't know why this is hitting me so hard.\"\n\n\"Jennifer, you've known Dallas your whole life. You went to school with him since when? Kindergarten? First grade?\"\n\n\"Kindergarten,\" I murmured\n\n\"You were best friends. He was your date to the prom, he's the father of your child. Regardless of the status of your relationship to him now, you two will forever be connected because of Madison.\"\n\nI looked at Whit with a blank face. So many things were swirling through my head, I wasn't able to process words.\n\n\"Jenn, you're buzzing.\"\n\n\"Huh?\"\n\n\"Your phone. It's buzzing.\"\n\nI glanced down; it was Dallas' parents. They were walking into the hospital and wondering where I was. I told them which waiting area we were in, how to find it, and a moment later they walked in.\n\nMama O. motioned for me to sit back down.\n\n\"You don't have to stand because I'm here. You have a precious bundle sleeping in your arms. Let's try not to wake her.\"\n\nBut it was too late. Little eyes opened, and a head turned to the sound of a familiar voice. She sat up in my lap and reached out to her Babcia.\n\n\"Have you heard anything yet?\" a tired Papa O. asked.\n\n\"Not yet.\" I glanced at my watch, it was one thirty in the morning. They had made good time getting here. We all slumped back into chairs and waited. Chaplin Harrison and Chief Murkowski came over and introduced themselves to Dallas' parents. The Chief left and returned a few minutes later with a cup of coffee for Papa O.\n\nIt was a couple minutes before two AM when a doctor came around the corner looking for us. I knew what he was going to say by the slowness of his gait and the ashen look on his face. The words which came out of his mouth a moment later confirmed my worst fears.\n\nWhitney\n\n\"I'm not wearing a dress or a skirt, Whitney. I told you, I'm done with them. No more, never again. I don't like them.\"\n\n\"But you can't wear jeans or cargo pants to a funeral, Jennifer.\"\n\n\"I know, I'm going to go find some slacks or a suit. I dunno what, just something.\"\n\nI put another pod in the coffee machine and hit brew. It was going to be one of those days.\n\n\"Can I get anyone a refill?\" I looked over at the table. Mr. Olinski held up his cup.\n\n\"Please.\" The ache in his voice was palpable.\n\n\"Thanks again, dears for letting us spend the night.\" Mama O. said to Jenn and me as I sat back down next to my girl.\n\n\"Of course, there is always room for family.\n\nWe were all tired. Neither Jenn nor I slept well once we got home from the hospital. While Jenn got Madi put down in our bed, I had gotten Madi's queen-sized bed, a bed formerly for guests, ready with some clean sheets so Mr. and Mrs. Olinski could spend the night. I did what I could to help Jenn relax and get some sleep. But she tossed and turned like I'd never seen her do before. Not that I was surprised by it though.\n\nRight then, a little one appeared in the kitchen. She had just woken up and her hair was all askew. She saw her Babcia and climbed into Mama O's lap.\n\n\"Morning sunshine,\" her grandma said softly as she stroked her hair.\n\nI heard Jenn and my phone's ding simultaneously. \"Who's it from?\" I asked Jenn as she looked at her phone. She, more than I, had received many texts from people across the company expressing sympathy for Jenn and Madi. I had left texts with my mom and uncles letting them know what was happening and that neither of us would be in the office. Word was getting out.\n\n\"Captain Eriksen.\" She looked at me. Nothing more needed to be said.\n\nWe sat around the table for a couple more minutes, when Mr. Olinksi broke the silence.\n\n\"Well mother, we should probably get our things ready and head to Port Angeles. We got some work cut out for us.\"\n\n\"Do you need me to come and join you?\" Jennifer said.\n\n\"I think we can manage, dear. We'll let you know if we do. It's mainly Dallas' personal stuff. His place was furnished, so maybe, other than his futon, I don't think he has anything big. And that we will probably find someone there who might like it. I think a few other enlisted personnel live in his building.\n\nWe were standing in the driveway watching Madi's grandparents pull out when a delivery van pulled up. A middle-aged woman got out with a bouquet.\n\n\"Delivery for a Madison DeLuca,\" she said, walking towards us.\n\nJenn pointed down to Madi, who was still in her jammies, even though it was now just past noon.\n\n\"Here you go, sweetie. A little something to brighten your day.\"\n\nJenn plucked the note card out. The flowers were from Ginny and everyone at the Maritime office. It was a nice touch.\n\nWe both attempted to work the next day. I went over a few times to check on Jenn. As did my Mom. Clearly, Jenn was going through the paces and was barely putting one foot in front of the other.\n\nThat afternoon she had gotten a call from Mama O. with some details of the service for Dallas. The public affairs officer at the base was working closely with them to hammer out the details, but it appeared Saturday would be the day of the service. Since Dallas lost his life in the line of duty, it was expected that many people would attend the service, out of respect for his service, if nothing else. And it was turning out to be difficult to find a venue large enough on such short notice.\n\nAs I left the Maritime office to head back to my office from a mid-afternoon visit, I said on my way out, \"Well, tonight then after work, we'll go shopping and find you something.\"\n\nIn the evening, while my parents watched Madi, Jenn insisted we look first at the thrift store to see if there was something she could wear on her budget. Her argument made sense. How many funerals does she plan on going to in the next few years? This was going to be a one and done purchase.\n\nThere was quite a collection of business pant suits, but none of them were of a style and color acceptable for a funeral, or if they were, they were the wrong size. Jenn kept trying and checking out different options, but nothing was working for her. While she kept looking, I went over to the girl's section and found a cute dark navy sailor dress perfect for Madison. Not black, but it was respectful and honored her father's position, I thought. I headed back to a frustrated Jenn.\n\n\"Aargh! There has to be something here that will work.\"\n\n\"Nothing's doing it for you, huh?\"\n\n\"Yeah, I know what I want. I want something along the lines of a men's suit but made for a woman. Like what that artist was wearing at the museum. I've thought about going over to the men's section and trying on a suit or two, but I know the pants will be all wrong.\" Jenn pointed to her hips. \"I might not have a booty like yours, Whit, but my hips are still a mother's hips. I have tried many pairs of men's pants in the past and none of them work for me. They don't feel right.\"\n\n\"Jennifer, I have an idea, but you have to work with me here a bit. I think you will find stuff you like where I want to take you, but you'll probably want to put it on my nickel. However, I think you will find you can use it more than once.\" Jenn looked at the piles on top of the racks she had considered, then looked over to me and bowed her head.\n\n\"Ok, help me put this stuff away, and then we can go to your place.\" She was rather quiet on the drive across town, but we pulled into the small plaza where in the middle was a store with a rainbow sign which simply said SUITS.\n\nJenn was looking around the place as we walked in. It looked like a 1920s haberdashery, somewhere Harry Truman would feel comfortable in, except that every manikin had hips and boobs.\n\n\"Evening, I'm Val. Can I help you?\" A short, butch woman in a three-piece suit approached us.\n\n\"Yeah, my girlfriend says this is the place where I can get a suit for a funeral.\"\n\n\"Oh bummer, I'm sorry for your loss. But you've come to the right place.\" Val began pulling out different suits and laying them out on a table for Jenn to review. As my girl leaned over, her hair fell into her face. Of course, I swooned a bit as she tucked her hair behind her ear which Val also noticed.\n\n\"Wait, let me get a closer look.\" Val came up and looked at the studs in her ear and the small loop at the bottom. \"Do you always wear these earrings?\"\n\n\"Um yeah, why?\"\n\n\"I got the perfect thing for you, hang on.\" We watched Val scurry over to a rack in the corner and pull out a dark gray suit. She carefully laid it out and stuck a white shirt in with it. A simple solid black crossover tie finished the ensemble. It was a three-piece suit, and if you looked carefully, you could see faint lines embroidered in the pattern of three dots, followed by a slightly larger loop. Exactly like Jenn's ear jewelry.\n\nJenn tried it on, and it was perfect, it fit who she was. Especially the vest. It made it pop on her.\n\n\"Will need to do a few alterations. When do you need it?\"\n\n\"The funeral is Saturday, over on the peninsula. Could we get it by Friday afternoon?\"\n\nVal thought the timeframe was tight but doable. She took a few more measurements, and I happily paid the bill. During the drive home, I keep thinking about Jenn in the suit. She is going to look so good in it. Plus, I think we can find another reason for her to wear it. Someday, if I'm lucky, that is.\n\n<p align=\"center\">_|/_</p>\n\nI heard the familiar \"kathunk\" sound as we drove off the ferry heading to Port Angeles, this time with no excitement. We were silent the whole drive to where Dallas' memorial was being held. As much as possible, I held my girl's hand. It was good we got to the high school early. The parking lot was filled with representatives from both military and first responders from all over the region.\n\nThe high school gym was one of the few places they could find on such short notice to host this many people. Jennifer and Madison were quickly recognized and led to the front. We looked around the room and saw along the sides were several large pictures on easels of Dallas. There was the typical official head shot from his Coast Guard file. But my eyes were drawn to one of Dallas and Madison taken at the Father Daughter dance. Both of them looked so happy. I got up and walked over to one while we waited.\n\nUnconsciously, my hand reached out and touched the picture. I saw an older man in a uniform come up to me.\n\n\"Delightful picture. How do you know Petty Officer Olinski?\"\n\nI don't know the rank insignia well, our tug captains don't wear uniforms. But judging by all the ribbons on his uniform and large number of braids on his sleeve, I could tell he was someone important. Then I saw the single star on his lapel and got an idea of who he was.\n\n\"This little girl lives with me. Her mommy is my girlfriend. I was lucky to meet Dallas on several occasions. He was a good man.\"\n\n\"That he was, and he will be sorely missed. I think we had better get back up on the stage, they're about to start.\"\n\nWe found our seats. Madison was sitting between her grandma and Jenn. I held Jenn's hand on one side and a bunch of tissues on the other. I looked around the room. There must be at least 500 people here. Most of the air station and support base were there, as well as many from neighboring stations as well. First responders of all types filled the gym.\n\nOne of his station mates sang a beautiful rendition of Amazing Grace and was followed by a eulogy from the Station's commanding officer. He was followed by the pilot and commander of the crew Dallas served with. At the end, he addressed Madison.\n\n\"Miss Madison, I know nothing we do can replace your daddy. I know he loved you deeply. He talked about how when he was stationed in Hawaii, he got you a special doll for Christmas. I know the doll maker from when I was stationed there as well. I called him the other day, and he made something special, just for you.\"\n\nHe reached into the lectern and pulled out a box. Carefully, he lifted a doll out of it. \"Madison, this is a new doll that is going to join the line of dolls he makes. This one's name is Dallas. He has a rescue swimmer's outfit, complete with a safety helmet and flippers. He wanted you to have the very first one.\"\n\nMadison reached out and accepted the doll. I could see the Admiral I was talking to earlier wipe a tear from his eye. Many of the people in the room were doing the same. I sure did, as Madi gave her doll a hug.\n\n\"I don't know if I can follow that,\" the Admiral said, approaching the lectern a moment later. \"Petty Officer Dallas Olinski loved his country, his family, and the United States Coast Guard. Like all our sailors, we know the challenges we might face when we sign up. Petty Officer Olinski was the model we hope all members of the Coast Guard strive to be.\"\n\n\"It's my privilege and honor to award Petty Officer Olinski with the Coast Guard Medal, the highest award we can give a service member who distinguishes themselves by heroism not involving conflict with an enemy. For the decoration to be awarded, an individual must have performed a voluntary act of heroism in the face of great personal danger or of such a magnitude that it stands out distinctly above normal expectations. Petty Officer Olinski met these requirements in spades. I shall now read the official citation.\"\n\nI watched him pick up a piece of paper, then pause and collect his thoughts for a moment.\n\n\"For heroism on the afternoon of 17 July, while assisting with medical evacuations from a stricken cruise ship in the Puget Sound. Petty Officer Third Class OLINSKI was informed of multiple crew members trapped in the engine compartment of the vessel. Upon arrival in the compartment, Petty Officer OLINSKI found the ship's crew fighting an uncontrolled fire, unable to reach their injured shipmates. Without regard to his own safety, Petty Officer OLINSKI entered the burning engine compartment multiple times and brought six crew members to safety. Five of whom survived the fire because of the efforts of Petty Officer OLINSKI. During his rescue efforts, he suffered many third and fourth degree burns, which claimed his life the following day. Petty Officer OLINSKI's courage, selflessness, and devotion to duty are most heartily commended and are in keeping with the highest traditions of the United States Coast Guard.\"\n\n\"On behalf of the Secretary of Homeland Security and the President of the United States, I award Petty Officer Third Class Dallas Olinksi with the Coast Guard Medal. Normally, if the recipient were with us, I would pin it to his or her uniform. And when the award is posthumous, it is presented to the next of kin, in this case his daughter, Madison. But today, if it's okay with you Madison, may I pin it on your new doll?\"\n\nThe Admiral left the podium and took a knee in front of Madi who had stood up from her chair. She held up her doll as the Admiral pinned the medal to its chest. A few claps and cheers broke the otherwise somber tone of the gathering.\n\n\"Ladies and Gentlemen, I also received a call this morning from the Secretary of Homeland Security. As some of you might know, the Coast Guard signed a contract recently for the next generation of fast cutters. Until now, they were known as the Mark II Sentinel class Cutter. It has been the tradition of the US Coast Guard to name these vessels after heroic enlisted personnel. The secretary has informed me this morning he is going to recommend to the US Congress that this next class's launch vessel will be named the USCGC Dallas Olinksi and the class will be the Olinski Class cutters.\"\n\nA thunderous applause erupted from the gymnasium. Looking down my row, I saw Dallas' father get a big smile on his face and attempt to hold back some tears. A small token of appreciation during this time of grief.\n\nFollowing the service, we hung around for a bit. All kinds of people wanted to express their condolences to the Olinskis, Madi, and to a lesser degree Jenn. All the attention was making Madi tired, and she was anxiously wanting to get into Jenn's arms. Since Jenn was busy talking to one of Dallas' crew mates, I scooped her up.\n\nA moment later, the admiral came over.\n\n\"Well, Miss Madison, are you holding up over here?\"\n\nMadi rested her head on my shoulder and got shy.\n\n\"I think she is, but being around all the strange people is getting to her.\" I tousled her hair and made sure Nani was getting along with the Dallas doll, both of which were securely fixed in her arms.\n\n\"Well, you hang in there, Miss Madison. I wish we could have met under different circumstances.\" He gave Madi a final hand wave and then disappeared into the crowd.\n\nWe joined Madison's grandparents for dinner at a local restaurant. Madi climbed into her grandpa's lap while we waited for our food. The Olinskis were good people, people of simple means and big hearts.\n\n\"When will we next see you all?\" Mama O. asked.\n\n\"I don't know,\" Jenn replied. \"Will have to figure something out. I want to make sure Madi continues to have a connection with you. She needs family in her life, more than just me.\"\n\n\"You both are always welcome to visit us, Jennifer.\"\n\n\"And Whitney too.\" Mr. Olinski chimed in.\n\n\"Thanks,\" I said, and gave Jenn a side hug.\n\n\"I just wish there were others who would want to see us if we came back to Idaho.\" The pain in Jenn's voice made it evident to whom she was referring.\n\n\"I'm sorry about your mom, dear. We heard about what happened. What she did was not right.\"\n\nI could tell that Jenn was trying to hold back her tears.\n\n\"I can deal with her shutting me out. But her ignoring Madison as well pains me. I can't change who I am, and if she wants to be mad at me about it, fine. But she should be here to support her only grandchild.\"\n\nI caught a glimpse of Madison as I pulled her to me, and she buried her face against my shoulder. Muffled sobs poured from her. She was letting go of months of frustration.\n\n\"I love you, babe,\" I whispered in her ear. \"We're here for you.\" It frustrated me that there was not much more I could really do. But just being present for her was the best thing I could do.\n\n\"Thanks.\" Jenn wiped the dampness from her eyes as Mr. Olinski handed her a tissue.\n\n\"Stuck a few of these in my pocket this morning,\" he said wryly.\n\nIt took her a few minutes, but Jenn collected herself and held my hand. The conversation moved on from Jenn's mom, and I got a bit of a grilling about what I did. I think Grandpa was looking out for Madi and indirectly Jenn, to make sure his girls, as he called them, were taken care of.\n\n\"Now Grandpa, they're grown women. They can take care of themselves. And I know our Madison is in excellent hands, aren't you, dear?\"",
        "\"Don't worry, Whitney will look after Madi and me. She is good at that.\" Jenn rested her head on my shoulder a moment and batted her eyelashes at me.\n\nThey asked Jennifer if there was anything Dallas had she might want to keep for Madison someday. She didn't think there might be much, maybe a picture or two, or perhaps a uniform. A few days later, a box arrived at Jenn's desk. Inside was Dallas's dress uniform, his life insurance paperwork naming Madison his beneficiary, and a crayon drawing of Madison holding hands with both Dallas and Jennifer. I was on the other side of Jenn, holding her other hand. A portrait of her family. We went that night to the store and found a nice frame for it. The following morning it was proudly on Jenn's desk at work.\n\nWith the assistance of a tax attorney from my old office, we set up a trust for Madison with the proceeds of Dallas' life insurance. Like mine, she couldn't access it until she was 27, but it could be used before then to pay for college, or to put as a down payment on a house, if it wasn't needed before to help raise her.\n\nJennifer\n\nIt started about two weeks after the funeral. Frankly, I'm surprised it took this long to happen. I didn't recall Whit getting out of bed, but her doing so is probably what shook me out of my deep sleep. It must have been the latter part of the night, as that's when I'm in my deepest sleep. I could see Whit's pillow, and the usual lavender scented pile of brunette goodness was missing.\n\nLooking around the room, I could see the bathroom door was open with the light off. So, she wasn't there. Slipping out of bed, I made my way down the hall. I could hear faint humming coming from Madison's room.\n\nPeeking through the door, there was Whitney, with a sleeping Madison in her lap. She was rocking her back and forth on the edge of the bed. A quick gesture from her told me to keep quiet. Leaning against the doorjamb, I marveled at how much Whitney cared for my daughter and how comfortable Madison was with Whit that she could be comforted by her so easily.\n\nA pale moonbeam illuminated the bed and guided Whitney as she eventually tucked Madison back into bed. We were so quiet, tiptoeing out of the room that neither Madison nor Skipper, who was curled up at the foot of her bed, stirred as we left.\n\n\"Thanks,\" I said as we climbed back into our bed. \"What happened?\"\n\n\"Madison screamed out in terror. I was half awake, but you were dead to the world. Poor thing was having a nightmare.\"\n\n\"I sort of figured that's what happened. I should look into some counseling for her. The first day I picked her up from preschool after the funeral, Paster Sara was waiting for me and gave me some names of some counselors who specialize in childhood trauma.\"\n\nWhit bobbed her head ever so slightly and gave me an understanding and reassuring smile. \"And?\"\n\n\"I looked a couple of them up. One had some videos on their site about how they work with young children. Sounds like most of what they do is to help those who are recovering from their parents' divorcing or sexual assault. I emailed them, and they said they can help Madison as well. And I'm encouraged to be in the first sessions, which, honestly, will make me more comfortable.\"\n\n\"When does she start?\"\n\n\"Next week, Tuesday.\"\n\n<p align=\"center\">_|/_</p>\n\n\"So, Madison, would you like to keep playing with the toys? I'd like to talk to your mommy for a few minutes.\"\n\n\"Yes.\" She continued with the police officer action figure and helicopter. They were props her new councilor, Dr. Prahalla, had been using with her.\n\n\"Thanks for bringing in Madison. Sounds like the two of you have been through a lot in the last year,\" Dr. P. said.\n\nBiting my cheek, I squinted a moment. \"Yeah, there have been some moments. Some were good too, but it's been, um, eventful.\"\n\n\"More than her father passing and having her apartment blown up?\"\n\n\"Those were some of the low moments. But there've been some good ones too. She's also seen her mom fall in love, and we've done some fun things with my girlfriend and her family.\"\n\n\"Girlfriend? Is she okay with her mom being gay?\"\n\n\"I think so. She has said nothing or asked questions other than when we first started dating. She's gone with the flow. Plus, she's gotten attached to Whitney. And it's Whitney that's been calming her at night when she wakes up screaming. Whit's taken it upon herself to comfort her in the middle of the night. Some of it's due to it happening when she's more awake than I, but I think she secretly likes the bonding time with Madi. Makes her feel more like a mom.\"\n\n\"Sounds like an excellent partner.\"\n\n\"Yeah, Whitney's the best. I can't imagine doing life without her now. And her folks love Madison to death as well.\"\n\n\"So it sounds like she's done stuff with your partner's family?\"\n\nI murmured in an affirmative.\n\n\"What about yours?\"\n\n\"Madi was there when I came out to my mom. That didn't go so well. Even though I've tried to call her or text her since then, she's been ignoring me for months now. Didn't hear a peep from her when Dallas died.\"\n\n\"Uff. That's tough. Have you considered counseling on your own? Most people would benefit from talking things out.\"\n\n\"Yeah, I haven't gotten to it yet. Not sure where to go.\"\n\n\"Well, if you need a referral, I know some good ones.\"\n\nIt was about an hour after we got home when Whitney arrived from work. I had dinner going and Madison was up playing in her room.\n\n\"Hi Honey!\"\n\n\"Hey Babe, yum, dinner smells good.\"\n\nI got a quick kiss. She looked sexier than fuck in her tight jeans, blouse, and blazer.\n\n\"So how did it go?\"\n\n\"Good, a lot of getting Madison comfortable with the environment. Dr. P. does everything for kids this age as playtime and games.\"\n\n\"Did anything big come out of the session?\"\n\n\"No, and Dr. P. didn't expect any this time. Probably it will be a few sessions before anything noticeable happens. But I got a referral to another therapist for me to visit. She is also in the same building. I have an appointment for tomorrow morning.\"\n\n\"Wow, that's quick.\"\n\n\"There was some sort of cancelation that opened up a session.\" I picked up a wooden spoon and stirred the contents of the pot simmering on the stove.\n\n\"Well, I'll be interested in hearing how it goes.\"\n\nA hand came to rest on the small of my back. I looked up from the pot and found the gaze of my best friend smiling at me. Putting the spoon down, I wrapped my arms around her neck. My lips reached out and found hers. I don't think we were going on for long when the pitter patter of little feet could be heard coming down the stairs.\n\n\"Mommy I'm hungry. When's\u4e00 Miss Whitney, are you kissing Mommy again?\"\n\nWe quickly untangled ourselves.\n\n\"Nope Munchkin, this time it was your mommy kissing me.\"\n\nI watched a pair of eyes roll at my girl and me.\n\n\"So, how long till dinner Mommy?\"\n\n\"Soon, pumpkin, soon.\" I looked back at Whit, and we both had a giggle.\n\n<p align=\"center\">_|/_</p>\n\n\"So, what was going through your mind when you were crouched in your kitchen?\" My new therapist, Dr. Kirkpatrick's eyes were focused on me. How she kept track of everything, while not taking any notes, amazed me.\n\n\"Two things, I was scared trying to keep Madison safe and thankful Whitney was there with me.\"\n\n\"Whitney again?\" I heard her murmur. She lifted her head and asked me, \"Were you scared for her as well? For Whitney?\"\n\n\"Yes.\"\n\n\"Why? Tell me more.\"\n\n\"Because I love her. And I didn't want to lose her.\" The answer rolled off my tongue so easily.\n\n\"But you told me you had broken up for a while. That you found her frustrating. Is that right?\n\nI shifted uncomfortably in my chair. The chair wasn't uncomfortable; I was. And I wasn't sure why.\n\n\"She does\u4e00\" I looked over at a potted plant, then back at Dr. Kirkpatrick. \"\u4e00no did. Actually, she has gotten a lot better.\" My mind raced as I processed. Were we doing better? I asked myself. I pondered it a moment and concluded we were better. A lot better.\n\n\"How so?\"\n\n\"Like seeking my opinion on things, such as what we want to do, or, for example, when Skipper, that's her cat, shredded a houseplant the other week she waited, and we picked out a new plant together. Frankly, since I moved in, I don't think there have been any decisions made where we were not both involved.\"\n\n\"And how does that make you feel?\"\n\nHere I had to stop and think. How did it make me feel? Not once since I moved in did Whit surprise me. Plus, there was no 'this is how we do it here' kind of thing.\n\n\"Jennifer? How do Whitney's actions make you feel?\"\n\n\"I'm thinking.\" I sat there for a moment to get the right word. \"Respected, I think. Valued? Loved for sure.\"\n\nThe sound of soft chimes rang in the room's corner.\n\n\"Unfortunately, Jennifer, that's the signal to remind us our time today is drawing to a close.\n\n\"Wow, that went fast. I thought we were going to spend more time talking about the explosion or Dallas or something. Not so much Whitney.\"\n\n\"You kept circling back to her, so I figured it was important to you to unpack your relationship. You pointed the light into that corner of the room. I simply helped you open the boxes and unpack them.\"\n\nI picked up my purse and stood up, Dr. Kirkpatrick did as well.\n\n\"Jennifer, I think we had a good session. You opened up more than I typically expect the first time in. Shall we continue this next week?\"\n\n\"Yes, please.\" I slowly made my way towards the door.\n\n\"Great, in the meantime, be thinking about how Whitney makes you feel. And I think in your case it would be okay if you and she talked about it as well. If that works for you.\"\n\nMaybe while Little Miss is out fishing with Papa Ben on Saturday, Whit and I can chat, I thought to myself as I walked out of her office.\n\n<p align=\"center\">_|/_</p>\n\n\"You be good now for Papa Ben Pumpkin and bring us back some fish.\"\n\n\"Okay, Mommy.\"\n\n\"I'll get her home for bedtime Jenn.\"\n\n\"Thanks Ben.\"\n\nI left Madison and Ben in the marina parking lot and headed home. A couple hours later, I put my book down when I heard the door open, and Whit came in from her run. I gave the hot and sweaty mess a little wave and blew her a kiss as she headed for the shower.\n\nMy heart flipped as she came back downstairs. She looked so yummy in her jean shorts and tight tee shirt. Every curve was perfectly accented.\n\n\"So, my sexy girl, what are we doing today?\"\n\nWhit playfully batted her eyelashes. \"The whole place to ourselves, with no Munchkin. Whatever shall we do?\"\n\n\"We can play horny little bunnies this afternoon. I was thinking we could go out to lunch and then have a walk?\"\n\n\"I know just the place I want you to show me,\" she beamed.\n\nAn hour later, she was still happy as she finished her soup.\n\n\"You're right, this is the best French onion soup I've had. And it's good to finally see where you used to work.\"\n\nIt was nice to be back at my old stomping grounds. But staffing turnover being what it is at a place like this, so there were only a few people left I still knew here. Even though it was only a handful of months, but it felt like a lifetime.\n\nWhit paid the bill, and I made sure there was a good cash tip for our server. It was nice having a little wiggle room in my budget to do it. We climbed into the Jeep and headed over to Green Lake. The three-mile walk around was perfect for holding her hand and catching up on life with my girl.\n\nWe weren't far into the walk when I felt Whit squeeze my hand. I squeezed it right back.\n\n\"I love you, babe.\"\n\nIt was great to be with her. It was a constant battle to watch where we were walking and not focus in on those great legs sticking out the bottom of her shorts going all the way down to her cute little white canvas sneakers. I couldn't pull those off, but she could. And it was making me gooey in all the right spots. I looked up into her beautiful brown eyes as we made space for a couple of runners passing us on the path.\n\n\"You know, hon, Dr. Kirkpatrick helped me realize something, and I should share it with you. I really like how you're including me in all your decisions. I hadn't thought about it until she pulled it out of me, but it's churning in my head since then.\"\n\nWhit remained quiet, but the smile on her face said it all.\n\n\"It makes me feel valued, and more importantly, I don't feel like little poor Jennifer around you anymore.\"\n\n\"You felt second class around me?\" a look of concern was on her face.\n\n\"There were moments early on, before we took a break. But now, I don't. I'm sure some of it was me. I don't think you ever intended for it to come across in that way. But now, I can tell you're trying more, and I want to let you know how much I appreciate it.\"\n\nWhit pulled on my hand, and we stood off the side of the path around the lake. She took each of my hands in hers.\n\n\"Jennifer, I know I screwed up early on with us. I was so excited to be with you and wanted to do things for you. And then, when I should have stated what I wanted, I went too far in the other direction to let you have your space and not state my desires. But you made me realize you didn't want a white knight, but a partner. I'm sure I'm going to screw up again sometime. Well, probably many times. But I want you to know I'm doing my best to not do what I want but to think about you and Madison first.\"\n\n\"It's difficult for an only child to do that. I know, I had to adjust when Madi was born.\"\n\nSome people on rollerblades passed us, and we resumed our walk around the lake.\n\n\"But it's easier when the other person is doing the same. You probably don't know, but it meant the world to me the other day when you said you wanted me to come with you when you took Madison to school for her kindergarten orientation.\"\n\n\"Why wouldn't I? You're my girlfriend. You're the second person on the paperwork with the school who can pick her up after class.\"\n\n\"But I'm only your girlfriend, Jennifer. Which means you don't have to, but you choose to, and that means a lot to me.\"\n\n\"It's because I love you. You hot sexy chick.\"\n\nWe rounded a bend and could see her Jeep parked in the distance. It gave me an idea.\n\n\"Last one to the car is the bottom,\" I said as I ran. But I knew I was racing a marathon runner. And she beat me. Which was exactly what I wanted. When we got home, I was happy to be the bottom while we played horny little bunnies.\n\n<p align=\"center\">_|/_</p>\n\n\"What did you say, Madison?\" I overheard Dr. Prahalla ask as I sat across the room and tried to be out of the way and let the two of them have their session. Madi had a little girl doll in her hands while Dr. P. had a doll they had been using as a stand in for Dallas.\n\n\"I'm sad you're gone Daddy.\"\n\n\"Why is that, sweetie?\" the Dallas doll said.\n\nThe two of them have been exploring various events in Madison's life for the last few weeks. They had tried various forms of play, but acting things out with dolls has gotten the most response out of her. They had talked about living in a shelter, losing our apartment, moving in with Whitney, and what being gay meant (in kindergarten appropriate terms mind you) in the prior weeks. But Dr. P. could tell she wasn't ready to talk about her daddy until today.\n\nMadison sat at their little table with a glum look on her face, not saying anything.\n\n\"Do you miss playing with me?\" the doll said.\n\n\"Yeah.\"\n\nDr. P. studied her for a moment. \"Is there something more?\"\n\n\"I wanted you and mommy to get back together.\"\n\nThis caused me to sit up and pay closer attention.\n\n\"Do you not like it with you and Mommy living with Whitney?\" the doll asked.\n\n\"I like Whitney, she makes Mommy happy. But I wanted you and Mommy to live together so I can have a baby brother or sister. My new friend Rachael at school was saying when her Step-Daddy moved in with her and her mommy, she is going to get a little brother soon. I want a little brother or sister.\"\n\n\"I see,\" said the doll.\n\n\"Rachael said you can't have a baby with two mommies. You need a daddy.\"\n\nDr. P. turned her head and caught my eye. She nodded her head from me to Madi. I came over and sat cross-legged on the floor next to Madison.\n\n\"You're sad because Daddy's gone, you believe you're never going to have a little brother or sister?\" I did my best to speak with a calm even tone, even though my heart was breaking inside. I had quietly researched the options available to Whit and me. Even though we hadn't spoken about it, I knew she wanted a family of her own. I wasn't opposed to more kids, either. But the misunderstanding in the five-year-old brain, while understandable, needed gentle correction.\n\nI looked at her and smiled my best reassuring smile. \"You know pumpkin, there are special doctors who can help Mommy or Miss Whitney have a baby.\"\n\n\"Really?\" her little eyes lit up.\n\n\"Really. It's something Whitney and I have to talk about first, though. A lot. But maybe someday you might be a big sister. Is that something you want?\"\n\nShe got a big, toothy smile and nodded her head enthusiastically.\n\n\"Okay Pumpkin. I'll remember this all right? And maybe someday will see about a little brother or sister for you.\"\n\n\"I want a sister. Boys have cooties.\"\n\n\"We'll see Madison.\"\n\n\"Until then, can I have a pet fox, Mommy?\"\n\n\"Um, no. I don't think that will work. You can play with Skipper instead.\"\n\n\"Okay, Mommy.\" There was a bit of dejection in her voice. Foxes had become her favorite animal, and she always pointed them out when she could.\n\nI went back to my chair on the side of the room while Dr. P. and Madi resumed their session. I thought about life with Whit. Having kids with her had crossed my mind before. I didn't have any reservations about her being a mama. Not with how I saw her interact with Madison.\n\nAnd I had no questions any more about her wanting to respect me and include me in decisions, and treat me as an equal. Dr. Kirkpatrick and I had discussed some of my concerns further, and I was feeling better and better about the idea of doing life with Whitney. I still wasn't there yet. Whitney was already there, I think. Probably was since we first met. But I would not stop us from moving in that direction.\n\n<p align=\"center\">_|/_</p>\n\n\"Whit, I'm headed out now. You and Madi have fun this evening. I'll be a few hours.\"\n\n\"We'll be fine, won't we, munchkin? Where are you going again?\"\n\n\"Ah, just to run some errands.\" Don't pry deeper, please, not now. \"Besides, you're always getting out of the house to go run each day. I need a turn to go out without someone in tow and that's not school related.\" I slipped out the door before she could get any more questions in.\n\nMy first stop was a small boutique. It was in the middle of a small strip of businesses. It had a couple of mannequins showing tasteful samples of their wares, but I'm sure there were more risqu\u00e9 items inside. Walking into the well-lit store, I saw all types of leather, lace, and satin. Something for every taste and kink.\n\n\"Can I help you?\" a young goth looking woman approached me.\n\n\"Yeah, I don't know where to begin. I want to get something nice for my girlfriend.\"\n\n\"What size is she?\"\n\n\"Well, it's for me to wear for her.\"\n\n\"Got it. That makes it easier, as you can see if it fits. Were you looking for anything in particular?\"\n\nThe sales lady helped me explore several options, many of which I'm sure Whit would love, but I need one I also felt comfortable in. Eventually, the right set was found. Now the challenge would be to find the right time to wear it for her. I was sure I could figure out something later. I had one more stop to make before heading home though.\n\nEven though I had been here several times now, this was my first time without Whitney. The house still intimidates me. I pulled into the circular drive and parked. It was quiet now, not filled with people. The big bay window had a bit of light coming out of it, but overall the house didn't have many lights on at the moment.",
        "As I rang the doorbell, I noticed I was picking my finger again. Got to stop that habit one of these days. The deadbolt slid out of its chamber and the door creaked open.\n\n\"Jennifer, good to see you, come on in.\"\n\n\"Thanks Edith. How are you and Ben?\" She led me down the hall to the living room. \"We're doing well. Ben is out of town for a couple of days. All the partners are having a planning meeting. He's trying to lay down groundwork for passing the baton on. It's hard for him. He built the firm up from nothing and leaving is going to be hard. How are you? And how is your precious little one doing?\"\n\n\"Madi is doing great. I think she is finally making some peace with losing her daddy. She has had no nightmares about it for a month now. We got her talking to a child therapist, and that has been helpful. She's not had an easy life. I'm hoping things will settle down.\"\n\n\"Let's hope. And how are your classes?\"\n\n\"Doing well. It's a lot, between working full time, being a mom, and taking classes. But it's worth it, I think. Whitney's been so helpful. She works from home in the evening while I'm in class, so she can watch Madison. I don't think I could do it without her.\"\n\n\"She cares a lot for you. And your precious little one.\"\n\n\"I know.\"\n\n\"So, what did you want to talk about?\"\n\n\"About Whitney. I was wondering if...\"\n\nEdith and I spent an hour talking. We covered several questions about how Whit grew up, and I got some key insights into how she is. Mainly confirmation of what I had already figured out. It put my mind at ease. Edith surprised me with one thing though, something that's going to help me a lot with my plans.\n\n<p align=\"center\">_|/_</p>\n\n\"Relax, you are going to do fine today. You did a full test run two weeks ago and finished. You got this.\" I was rubbing her shoulders as we waited in the check in line for the marathon. I could tell she was tense. When Silas let it slip earlier this week that most of the family was going to come out and cheer her on, well, that caused her to get the jitters.\n\nThe registration assistant entered her bib number and recorded it, and motioned her to proceed. I gave a final once over to make sure everything was in place.\n\n\"You got a full bladder of water in the back, and your vest pockets have the energy gel you like.\"\n\n\"Thanks babe. Am I really going to do this?\"\n\n\"Yes, you are, and you're going to rock.\" I slid a hand around the back of her neck and pulled her into a big embrace. I probably would have kissed her longer, except for the hoots and hollers of the surrounding people. I had paid no attention to them until now.\n\nI sheepishly looked around and saw a couple of guys standing next to each other in matching rainbow running attire. They gave us a couple of thumbs up and we smiled back at them.\n\n\"Don't stop because of us,\" the taller one said.\n\n\"She'd better or she'll take all my energy.\"\n\nThat was the first time I'd seen her smile all morning.\n\n\"First time doing a marathon?\"\n\n\"Second, but I did not finish last year.\" Whit put her arm around me, \"but this year I have a cheering section.\"\n\n\"Well, if you like, you can stick with us. We run at a little under a five-hour pace.\"\n\n\"That's about my target time as well. If you don't mind, I'll at least start with you, and we can see.\"\n\n\"Hey Whit, I'm going to head out and find your folks and Little Miss. We'll track you via your watch and the app on my phone. I'll text you when you are getting close to where we are so you can look out for us, okay?\"\n\n\"Text on watch, got it.\"\n\n\"Oh, and honey?\"\n\n\"Yeah babe?\"\n\n\"If you run out of mental energy, I put your locket in the zip pouch on the left shoulder strap. Just give it a rub. I put some extra love in there for you today. But no peeking at it until the end of the race.\"\n\n\"Thanks.\" I got one more hug, a long kiss, and headed out to find the rest of the Whitney Mitchell cheer squad.\n\nWhitney\n\nI watched Jennifer slowly blend into the crowd and disappear. Her cute buns were the last thing I saw.\n\n\"You two are so cute.\" It was the shorter of the gay couple. \"I'm Brad, by the way. This is my husband Gabe.\"\n\n\"Whitney. And the cute blonde who just left, I hope to make my wife someday.\" I realized I had a goofy grin on my face, and I didn't care at all. It was the first time I had vocalized what I had been thinking for a long time. Maybe it was time to broach that with her. Something to think about while I ran.\n\nIt didn't take long before the marshals herded us to the starting area. I stayed in the back with Brad and Gabe. No sense being mowed over by the more hardcore crowd.\n\nThe starting air horn blasted indicating the start. The herd moved, slowly at first, until there was enough room for us to jog. The weather was perfect in my book for a long run. Cool, crisp but amazingly enough for Seattle in November, not raining.\n\nIt was uncomfortable to be running without my ear buds, but they were not allowed during the race. Brad though made up for it. He was a talker. Gabe looked at me and shrugged at one point. Since I was used to running solo, I wasn't used to talking while running. I let Brad ramble on for a while and let my mind wander.\n\nTheir pace was close to mine, maybe a tad slower. I found out they had been doing the race for over ten years, and they met in a LGBT+ running group while both were training for their first marathon.\n\nThere were about 20 people in their group, of which half or so would show up on any given Saturday. A few others from their group joined us and there was a merry crowd running together. I ended up running more with a lesbian couple who were about my age. One was a fifth grade teacher at Madi's school, so it was nice to get to know her.\n\nMy watch chirped.\n\nJennifer: Stay strong, you can do this! \ud83d\ude0a\n\nI smiled at the encouragement. For those who know the Seattle marathon route, at about the five and half mile marker, we break off from a large circular shape route and begin a long out and back stretch. The course runs along Lake Washington, makes a loop in Seward Park, and then doubles back and joins back up to the circular route. It was a little way into this out and back part when my watch chirped with another text from Jenn.\n\nThere was another motivational message for me, and also letting me know they were around the corner on my right. Sure enough, there was Jenn, Madi, and my parents. Both my uncles and aunts were there as well. I waved as I ran past, with my uncles clanging some cow bells to cheer me on. Jenn was holding up a sign saying \"You can do it!\" Madison had another, \"When you need us, touch your locket.\" Reflexively, I touched the spot where the locket was zipped into my shoulder strap. I could feel a small boost of energy, and I powered on.\n\n\"That your girl with the sign?\" one of my new running mates asked.\n\nTrying to keep my breathing going, \"Yep, and her daughter. Much of my family was there cheering me on as well. The obnoxious ones with the cowbells are my uncles.\" I spent the next mile or so telling them how I had tried on my own to complete the race last year, but couldn't make it. This year, I had support and didn't feel like the weight of the world was on me.\n\nWe hit the park where the loop was, and it was a pleasant stretch. The park is a peninsula in the lake, and we ran around the outer edge. We could see a few hardy boaters on the water. A bald eagle was soaring over the lake and dove to get a fish. I could almost feel its strength as it lifted its catch and gracefully flew away.\n\nRunning through the park, my phone dinged again. I had lost count of how many texts I had received from her now.\n\nJennifer: You can do this sexy!\n\nI smiled as I visualized her smile. I could see her flicking some hair behind her ear. Again, I touched my shoulder strap and felt the locket. The surge of mental energy it brought me was amazing. It helped me remember I was loved and cared for.\n\nAs we cleared the park and resumed running along Lake Washington, Brad and Gabe came alongside of me.\n\n\"So, that cute blonde, she's the one?\"\n\n\"Yes.\" I could feel the goofy smile from earlier cross my face.\n\n\"I could tell, your smile is the same one Brad has for me. How long have you been together? You asked her yet?\"\n\n\"It will be a year next month. And no, I've not popped the question, yet.\"\n\n\"Well, take my advice,\" Brad said. \"Don't wait. If she is the one, ask her. Best thing I ever did was say yes to Gabe.\"\n\nI looked over at his partner, who was huffing with a big smile on his face. I looked back at the course as we passed a small group. My hand touched the locket, and I could see an image of Jenn holding up her hand admiring the new ring on it. Madi was in the background, doing a happy dance.\n\n\"Christmas, that's the perfect time.\" I mumbled; my brain half lost in thought.\n\n\"There you go,\" said Brad.\n\nAs we passed the aid station where I collapsed last year, my phone dinged again.\n\nJennifer: Hang in there babe, you got this! \ud83d\ude0a\n\nAnother reminder of how awesome my Jenn is. Thoughts of us together, growing old, seeing Madison off to her prom, and other life events carried me on for the next few miles. That and the support texts every fifteen to twenty minutes.\n\nAs the course rounded a bend and I could see the Space Needle soaring above Lake Union.\n\nJennifer: We're all waiting for you at the finish line. You can do it. Don't forget your locket.\n\nThe locket gave me another boost of energy. I was amazed at how well I was doing. Way better than any of my training runs. Realistically, I knew it wasn't the locket itself, but what it stood for. It was a stand in for us. That cute catering girl, who I now got to snuggle up with each night, wanted to be with me. And her daughter too.\n\nA question crossed my mind, would I be able to wait until Christmas to ask her? That was going to be tough. Harder than this race.\n\nJennifer: You'll see us on your left as you approach the finish line.\n\nSure enough, there they were. Jenn and Madi were right on the barricade, cheering me on. Mom, Dad, and my aunts and uncles were right behind them. I gave my girls a high five as I passed them, and then moments later crossed the finish line.\n\nI spent the next couple of minutes doing a cooldown walk, while sipping some water. I saw Brad and Gabe trying to get my attention.\n\n\"Good luck Whitney, it was fun running with you. You're more than welcome to join our running club if you like, here's our numbers.\"\n\nA hastily written set of phone numbers on a scrap of paper was pressed into my hands.\n\nI made my way over to where I said I would meet Jenn after the race. She was there and Madi was bouncing all around. I don't think I've ever seen her so excited before. Way more than months ago, on her birthday in the bounce houses. Mom, Dad, and my relatives were a few feet away talking but watching us.\n\n\"Congrats dear.\" She looked me over and gave me a side hug. \"You're a sweaty mess.\"\n\n\"Did you expect something different?\"\n\n\"Not really. How're you doing?\"\n\n\"Tired, but not as much as I thought.\"\n\n\"Did you touch your locket?\" A bouncing five-year-old asked.\n\n\"I sure did, munchkin. It was nice of you and mommy to put some love in it for me.\"\n\n\"Did you open it up Miss Whitney?\"\n\n\"No. Should I have?\"\n\n\"Can she open it now, Mommy? Please?\" Those little eyes were begging for all they were worth.\n\n\"Okay, pumpkin.\"\n\n\"You're going to love it Miss Whitney, it's special.\"\n\nI fumbled with the zipper when Jenn swooped in and gave me a hand.\n\n\"Let me help you babe.\"\n\nI watched as she carefully pulled it out and undid the clasp, barely so it was open, but the sides were still together. I looked at her and she had her lower lip curled under her teeth. Madi was still bouncing around and clapping her hands.\n\nCarefully, I opened the locket. The first thing I saw was a carefully folded piece of paper. I lifted it out and my eyes went wide.\n\n\"Jennifer?!?\"\n\n\"Say yes, Miss Whitney, say yes!\" squealed a little girl.\n\nHer squeal was drowned out by one from a thirty-year-old woman. I couldn't believe it was coming from me.\n\n\"How did you get Grandma's ring?\" I said, as I finally collected my thoughts and looked up. But my eyes didn't fully make it up. In front of me, was Jennifer on a knee, reaching out to take my hand. I could see her tear up.\n\n\"Whitney, m-m-m-y love, will you marry me? Will you be my forever girl?\" the emotion behind her words was almost preventing them from coming out.\n\n\"I want nothing more than to be your forever girl, Jenn.\" I watched as she stood up and took the ring from the palm of my right hand, then turned my left hand over and slipped it on. It fit perfectly.\n\nThe tears rolled down my face as she pressed her lips to mine. I could hear my uncles giving fake coughs, but we ignored them.\n\nBut there was one voice I couldn't ignore.\n\n\"Are you going to read my note, Miss Whitney?\" Madi was standing there, her hands folded together, looking at us with eager anticipation.\n\n\"Oh right, the paper in the locket.\" As I carefully opened the note, I saw a sparkle on my hand as the sun caught grandma's diamond.\n\nThe note was carefully written in pencil on thin paper. The letters were in block letters of a small child, with the cases all mixed up.\n\n~~\n\nWhiTNeY,\n\nWill YOU BE My MAMA?\n\nMADisoN \n\n~~\n\nI pursed my lips and squinted as I attempted to hold it together. I looked at Jenn who just smiled and nodded her head at me.\n\nI got down on a knee and held my arms out. Madison dove into them and I hugged my daughter-to-be for the first time.\n\n\"Madi, there's nothing more in this world that I want than to be your Mama. Do you know what that means?\"\n\n\"That you'll love me and Mommy forever.\"\n\n\"Forever munchkin. For-ev-er.\"\n\n\"And we get to live with you forever?\"\n\n\"Yes my munchkin, forever and ever.\"\n\nThis earned me another hug. I was never going to get tired of Mama-Daughter hugs.\n\n\"Congratulations you two,\" Dad's grin went from ear to ear.\n\nMom walked over to Jenn and hugged her. \"Welcome to the family dear, I'm so excited for you two.\"\n\nWe got more hugs and congrats from Silas and Kathleen, and Ruben and Helen. Turns out they were all in on Jenn's plan, and it was why they came to the race. Both Kathleen and Helen had their cameras out and caught the whole thing. I had Helen take a picture with my phone that Jenn had carried for me during the race. Jenn and I crouched down, so we were on an even height with Madison and got a family picture, with Madi making a big deal of pointing to my ring.\n\nI texted it out, and I don't think thirty seconds passed when my phone rang.\n\n\"Whitne-e-e-y!\" screamed Molly through the phone. Of course, I had to take a few minutes to fill her in on the details. And, of course, ask her to be my maid of honor.\n\nEven though I was thoroughly exhausted from the marathon, I was floating on air as we walked back to Jenn's car. I saw Brad and Gabe getting into theirs, a few cars down the lot.\n\n\"Brad! Gabe!\" I hollered to them, dragging Jenn with me as I floated over and stuck out my left hand.\n\n\"E-e-e-e!\" Brad ran over to me and gave me a hug.\n\nGabe was a bit more reserved, or maybe simply more tired. He walked over and shook our hands. \"Congratulations you two.\"\n\nMadi, being shy at the moment around two new people, climbed up into Jenn's arms.\n\nGabe reached out and tousled her hair. \"Are you happy too?\"\n\nMadison smiled. She held out her hand and extended two fingers. \"I get to have two mommies. That's double the snuggles!\" We all had a laugh, said goodbye, and headed for our cars.\n\nBy the time we got home, the adrenaline of the day had worn off, and it was all I could do to head upstairs and take a shower. As we left the Seattle Center where the race ended, Dad had invited everyone to his favorite restaurant for dinner.\n\nI was leaving our bedroom, and about to head downstairs so we could go to dinner, when I heard Madi call my name.\n\n\"Can you help me tie my shoes?\" she pleaded.\n\n\"Of course, Munchkin.\" I bent down, gingerly, and tied her shoes for her.\n\n\"Thanks Miss Whitney.\"\n\nShe looked all cute in the dress and tights she picked out. That, surprisingly for a soon to be kindergartener, matched reasonably well. Then she did something I had never seen her do before. Like her mother, she flicked her hair behind her ear.\n\n\"Madison, you look so cute in that dress. We should get you a hair bow. It would go so well with that dress and help keep the hair out of your face.\"\n\n\"No hair bows!\" Jenn stomped her foot from the doorway.\n\nI jumped and glimpsed the flashing of a stink eye. I recoiled a bit.\n\n\"They're only good on bubbly cheerleader types with names like Stephanie or Kayla. Not on skater chicks.\" Jenn bent down and adjusted Madison's dress for a moment. \"Vans and a dress. Proper and righteous.\"\n\nShe looked up at my stunned face. \"Sorry, that came off stronger than I intended. If we have a daughter together, we can put her in a hair bow. Or at least have that conversation.\"\n\n\"So, more kids are in our future?\" I asked eagerly.\n\n\"I hated being an only child. I don't know about you.\"\n\n\"Being an only child sucked. Something to discuss at a later date. For now, off to dinner with the family.\"\n\n<p align=\"center\">_|/_</p>\n\n\"Ok mystery woman, were we going?\" I looked at Jenn as we pulled out of my parents' driveway. We had dropped off the munchkin with my folks as Dad was taking her crabbing tomorrow. The Department of Fish and Wildlife opened a small winter crab window for a couple of days after being closed for years. Dad would not miss his chance. And of course, his new favorite helper wouldn't miss a chance either. So, they were going to be spending the night on the Miss Whitney to be super ready at the crack of dawn.\n\n\"Just go home. What were you expecting, some sort of big surprise from me? Wasn't a ring last Sunday enough for your surprise quotient for a while?\"\n\nI was hopeful, but not really expecting anything. The last week had been exciting enough. Molly had barged in Monday evening as we were finishing supper and was all excited for us. She was miffed I got hardware before her, but if I got the clues right from what Dylan had said a couple weeks prior when they were over for dinner, she could probably expect hers to appear over the holidays.\n\nOf course, the gossip mill at work was going a mile a minute when people got word that the boss's daughter was engaged. I think Jenn got a bit of a hard time; several of the deck hands still wanted a shot at her. Fat chance on their parts.\n\nWe had also gone out looking for a ring for her. As I had expected, a simple solitaire was what she wanted. My concentration was refocused on Jenn, as she smiled and flashed her dimples at me while she pulled the car into our driveway. As we climbed the stairs, I turned to go into the living room.\n\n\"Um, where do you think you're going, young lady?\" On one hand, the tone was that of scolding mommy, on the other, her face and body language said sexy kitten.\n\n\"Um, I was just going--\" I thought fast \"--to put my keys on the table?\"\n\n\"Your presence is needed upstairs. There's still a surprise for you.\"\n\nWith a quick flick of her wrist, she tucked a few dirty blonde wisps behind her ear, turned, and sprinted up the stairs. I tried to follow, but I was mesmerized by the sight of those tight cute jean clad buns. The cobwebs in my head cleared, and I started up the stairs.\n\nWhen I entered our bedroom, I found my surprise. There, draped across my bed, was the sexiest woman I had ever seen. She was lying on her side, with one arm bent, holding up her head. She had shed her clothes and had on a lilac bra and panty set. I had never seen her in anything other than her simple cotton bralette and boxers.",
        "The fabric was a fine lace and fit her like a glove. The light shade of lilac worked wonders with her skin tone, and I stood there transfixed. I couldn't get enough of my sexy fianc\u00e9e, knowing that she was mine forever and ever. When I thought the view couldn't get any better, she rolled onto her stomach, and I got a good look at her tush. Her bikini bottom was cut perfectly to display it in all its cuteness.\n\n\"So, are you going to stand there, or do you need an invitation?\" Jenn purred.\n\nI was so wishing I had thought ahead and had on something more than my mix matched everyday bra and panties. I shucked those as well as my clothes and crawled onto the bed when Jenn stopped me.\n\n\"Nope, you're missing something.\" She pointed to the nightstand where Big Red was waiting for me.\n\n\"So, it's going to be one of those nights?\" Anticipation dripped from my mouth.\n\n\"I've been thinking about this since you opened the locket.\"\n\nJenn raised her ass into the air as I climbed behind her. The Parfume De Jennifer was moist exquisite tonight. It was almost a shame to remove those panties, but they were an obstacle to nirvana.\n\n\"Oh, my goodness! You shaved.\"\n\n\"Surprise!\" she giggled. \"I know you've been wondering what it might be like. Since I wanted tonight to be special for you, I did a little prep work.\"\n\nI dove in. I think I might have been a bit too eager, but Jenn didn't appear to mind. I controlled myself and savored her nectar. I undid her bra strap and had her roll over.\n\nPlacing a trail of kisses on her delicate skin, I slowly made my way up to her breasts. She writhed as my breath caused goose bumps to appear. I don't think I've ever seen her this turned on.\n\nHer nipples were proudly sticking out and begging for attention, which I gladly gave them. The moans emanating from her as I did so egged me on even more. I wanted her to enjoy every moment of tonight. I think she intended tonight to be about me, but all I wanted to do was please my forever girl.\n\n\"Whitney, please...\" her voice was husky as my hands skittered down her arms and then interlaced with hers.\n\nOur lips met momentarily. Okay, it was a long moment before I pulled myself up a bit and basked in the glow of her face. Her eyes were closed, and I feasted on her with my eyes. Slowly, they fluttered open, and her gaze met mine.\n\n\"Please take me.\"\n\nReluctantly, I broke contact with her and reached out for the harness. Soon, I was ready and positioned myself between her legs. I grabbed a pillow and Jenn lifted her hips as I slid it underneath her.\n\n\"F-u-u-u-c-k!\"\n\nI could see her eyes rolling back as she closed her eyes. I thrusted my hips, slowly causing Big Red to drive her wild. One hand wrapped behind her neck and with the other, I caressed her face. I could feel my arousal heighten as the sight of her pleasure caused my own to peak. The prospect of her approaching bliss was enough tonight for me.\n\n\"Don't stop, please...\" Her voice trailed off, but her hands wrapped around my head and she made sure I was looking straight into her slate blues when magic happened. She didn't say a thing verbally, but her eyes screamed into mine and her body gently shook. It looked as if she was fighting it a bit, like her body wanted her to throw her head back, but she was intent on sharing it with me. The connection we felt was like nothing we had done before.\n\nOur lips reconnected and stayed that way for a long time.\n\n\"Thank you. Thank you for being my forever girl.\" Her fingers worked through my hair, and I felt like the most blessed woman on earth.\n\nWas that it? Was that the secret Jenn code? She needed commitment? I pulled out, and we snuggled for a bit. I got up and was unbuckling the harness when a hand touched mine. I looked into those sexy eyes and saw pure, animalistic lust on her face.\n\n\"Again?\" she asked with a coquettish grin.\n\nAnd who was I to deny her?\n\nEpilogue - Four years later\n\n\"Jennifer Mitchell, Bachelor of Arts, Business Administration.\"\n\nA small cheer erupted around me as my family made as much noise as they could while my wife walked across the stage. I would have made as much noise as my family, but I stayed in my seat and smiled. I didn't want to disturb little Dallas as he suckled under my hooter hider.\n\nMy adopted daughter was jumping up and down, clapping and cheering her mommy. Madi looked so cute in the matching ball cap and jacket she was presented with last month when we all went to the shipyard so she could christen the ship named for her daddy. The cutter's logo, whose patch was on the jacket, had a gold star representing Dallas, and five silver stars, one for each person he saved.\n\nMadi was going to love the surprise Jenn and I had in store for her, along with all my family, when we got to dinner tonight to celebrate. Jenn's test was positive earlier this week, and the obstetrician confirmed it yesterday. Madison and Dallas Mitchell are going to have a baby brother or sister.\n\n<p align=\"center\">_|/_</p>\n\nAuthor's note: Thank you for being a loyal reader. I hope you enjoyed getting to know my friends Whitney, Jennifer, and Madison. If so, please consider providing some feedback. Votes, comments, or PMs are all welcome. Whereas, this is the end of their story, there are more stories in my head that I would like to share with you when time permits. Please follow me, or check my profile page, to be notified when a new story is published. \n\nA special shout out goes to those who helped me behind the scenes with this story at different times: AwkwardMD, Bramblethorn, Bookwormmom, BrokenSpokes, JCMcNeilly, Nellymcboatface, and Rileyworks. Each one of you has given me advice and feedback, which has meant a lot to me as a budding author. Thank you.\n\nIf you are looking for something more to read, check out the authors I follow. Maybe you might find something there that you like."
    ],
    "authorname": "GinnyPPC",
    "tags": [
        "lesbian romance",
        "single mom",
        "marathon",
        "happily ever after",
        "hea",
        "romance",
        "lesbian drama",
        "drama"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/catering-girl-ch-07"
}