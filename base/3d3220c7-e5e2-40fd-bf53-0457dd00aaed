{
    "title": "Rebuilding Eden Ch. 05",
    "pages": [
        "Simon Says:\n\nThis is it. Not planning on anything more after this. Romance, exhibitionism, sort-of threesome content.\n\nThanks for being committed enough to make it this far. :)\n\n++++++\n\nWith just two days until the soft launch families arrived, all were working hard on the final touches in their respective \"stations.\" Kel had really organized the front desk into a very welcoming space. I got her to blush a few times as I raved about it. And I was being honest. Flowers sat out, things organized well, some thoughtful decorations, professional and homey. She also was great on a computer so had developed a more digital means of tracking new guests, which also allowed us to gather some demographic information and so forth. A very smart girl. Her efforts especially pleased Beth, considering her eye for professionalism. In Beth's mind, Kel had hit a homerun.\n\nCami had been on a rampage on making sure things were organized for activates. We bought a few cute little paddle boats and canoes to be made available to be used on the lake. We set up a suggested swimming rope barrier to make sure swimmers would know where the drop-off happened. And we acquired a dozen lounge chairs to place along the grass, and of course the beach, close to the water. \n\nAnd of course Chels did a fantastic job of getting things ready in her exercise and children's activities realms. But she also just became Cami's assistant, working on a program schedule of organized daily activities for anyone interested. We figured most wanted to just lay about and enjoy the environment, but some may want to have a few events to look forward to each day. In essence, this is exactly what Cami hoped Eden Woods would become one day before I got pulled into it.\n\nBeth and I took care of the cabins and general grounds, the more operations side of things, with Trev when he could show. The boy hardly spoke but he proved to be an especially hard worker and never once hesitated to do what was asked. \n\nAnd he was talented. \n\nWhat I could not figure out he successfully tackled quickly. Maybe eventually we could make enough through this venture to bring Trev on full time, offering benefits and such to everyone.\n\n\"Hey ladies. All going ok?\" I walked up behind Chels and Kel as they sat next to each other on the grass next to the lake. They both smiled their pretty smiles at me as they glanced back.\n\nAs with Beth and Cami, and because I am just a dude with pervy tendencies, I enjoyed seeing these two become so comfortable in their own skins. Kel being heavier than Chels, her large breasts with large nipples and thicker middle and bottom were naturally alluring. Her chubbier look made her both cute and sensual. I loved the movement of her body. And no, I did not just stare at her like a drooling perv, but I absolutely could have.\n\nChels, so petit in comparison, with her tiny A-cup breasts and always erect cute little nipples, tiny butt, and cute grin made both an attractive co-worker and a fun-sized little package of a girl to have around. Both girls had removed all hair below their necks, and so with Chels, it felt a little more taboo considering how young she looked. But I knew she was eighteen and every time she opened her mouth, she reminded me how adult-like she actually was.\n\nI had no intentions of anything sexual with either girl for a host of reasons, two being Beth and Cami, but it did not mean I couldn't enjoy these moments of seeing two naked beauties enjoying themselves in the little paradise I helped to create.\n\n\"Hey naked boss. All is great.,\" Kel patted the ground next to her, indicating I should join them.\n\n\"You are just the dude we wanted to talk to,\" Chels piped in from the other side of Kel as I took my place on the grace.\n\nChels had not spoken about the other day at the Eden Kids shelter, prompting her to need some alone time, and then the affectionate hug. It remained unspoken. I think that was ok. But here she was grinning at me, so maybe Kel was right that I said the right thing but she was still working with how to accept it.\n\n\"Oh?\"\n\n\"Yep. We have some inquiries for you. To clear up some confusion. Ready?\"\n\nI chuckled, \"sure, I am mostly an open book, Chels, feel free.\"\n\n\"Right, so it seems like you are dating hot MILF Beth?\"\n\nI guess her and Kel, the two 18 year olds with a curious interest in topics like romance and drama, had observed us.\n\n\"Yes, that's correct.\" No need to deny these things. We hadn't discussed openly whether we would share any info about us with our new employees, but it just made sense to do so.\n\n\"Interesting.\" She smiled almost conspiratorially, \"and weirdly, it seems you are also dating cute bouncy Cami, yes?\"\n\nChels played with her braid as she awaited my answer.\n\nI paused, \"yes, correct.\"\n\n\"Also interesting,\" she said rather coyly.\n\n\"Incidentally we think that is mighty progressive of an older naked dude like yourself,\" added Kel.\n\n\"And don't forget the MILF, Beth is so classy,\" the smiling Chels added, \"who knew she also had a little bit of a kinky streak!\"\n\n\"Well to be clear, I am dating them but they aren't . . . um . . . with each other?\" I kept trying to figure out at what point I should stop this conversation. It felt personal. But then these girls had been added to the family. I said as much, so I wanted to live up to it by being open at some level.\n\n\"Ahhh. So they are allowing you freedom. Interesting.\"\n\n\"Oh, Kel, don't forget about the pretty shy lawyer lady Jeanette? Doesn't seem to be dating there but there seems to be something kinda sexual there too?\"\n\n\"Indeed Chels!\"\n\n\"You are quite the observant ones, huh?\" \n\nChels grinned, \"people assume I am dumb as f . . . as they get. But I am not. So yeah?\"\n\n\"That's complicated and more her story to tell.\"\n\nShe nodded, \"gotcha.\"\n\nThey both paused, \"well we were thinking if you are getting around and everyone is cool with it, we want spots in line.\" I really couldn't tell if they were being serious as both were grinning, but with a little bit of blush on their cheeks.\n\nI smiled and shook my head, \"Chels . . . \"\n\nShe giggled. \"I am only kidding. Well only sort of kidding.\" Kel nodded in agreement, never dropping her grin.\n\n\"Besides, Trev might get upset, right Kel?\" I turned towards Kel.\n\n\"Oh we broke up,\" she shrugged.\n\n\"Again,\" added Chels.\n\n\"This time for good, I think.\"\n\n\"We'll see,\" added Chels again. Kel rolled her eyes at her friend's spoken skepticism.\n\n\"Well it is good to see if the person is long term material or not, and make a clean break if they aren't,\" I explained in my fatherly way.\n\n\"Oh, we never were good for long term material. I mean he has a njce dick and all and was really good with it.\"\n\n\"You said he was good at licking your flower garden too,\" added Chels somehow helpfully, as if they were talking about what kind of salads they ate for lunch. I found myself hoping the conversation would take a turn.\n\n\"Hells yes he was. Great tongue, knew what to flick where ifyouknowwhatImean.\" The girls gave each other high-fives as they giggled. Kel then stared off for a second, maybe remembering it. \"But then that was it. He never shared with me anything about his feelings.\"\n\n\"Well did he share anything at all? He seemed very . . . um quiet,\" I added.\n\n\"Well sure he was quiet, but I guess I don't mind a dude letting me jabber with my girl here, but eventually he needs to tell me what kinda shit he is feeling. Like how he feels about me, the way I look, the way we talk, the way we communicate, about Chels, about you, this place, his job, his future, what car he likes, whether he likes crinkle-cut or standard fries, whether there is an after life and if we were still together would we be together there and if we had little babies would they be there with us too and would we even recognize each other? Oh and if he even wanted babies.\"\n\nShe took a breath.\n\n\"I mean I get a lot of that with Chels here,\" she smiled at Chels, \"but besides kissing and groping boobs, I really prefer dicks a lot more. Like sexually and romantically speaking. I like manliness and dicks and hairy chests where I can run my fingers through it all, and dicks, and man butts, and strong eyes, and deep voices, and a different view point from the girl way of looking at things.\"\n\n\"What she said,\" said Chels, \"plus I really like dicks.\"\n\n\"But a nice dick and a talented tongue are nothing without all those other things. So I will just flick my own bean to take care of my three times daily sex needs, kiss Chels who is really good at it, and focus on me for a bit.\"\n\nShe paused again, \"plus you fill all of those needs too, and you are a dude, so that totally works.\"\n\n\"With a nice dick,\" Chels helpfully added.\n\n\"Yes, with a nice dick,\" Kel agreed oddly with a serious tone, \"but also a really nice heart.\" She sweetly smiled at you. A small glimpse of seriousness and sweetness with those two.\n\n\"So yeah, if you felt like having a couple eighteen year olds to fuck in a romp, we'd be down,\" Chels smiled at me but then got serious, \"but honestly I mostly kinda think of you as like um like a . . . like you know, a dad type.\"\n\n\"Yeah, me sorta too,\" Kel affirmed. \"Well my dad is pretty cool so I don't have like the situation Chels has, but I still see it like that.\"\n\n\"Yeah,\" Chels added, \"like a hot Daddy.\"\n\nShe saw me get kinda uncomfortable, probably mostly because while this conversation felt a bit wrong it still was a bit of a turn-on. But I was STILL not about to do anything with either of these girls.\n\nChels, came over crouched down in front of me, \"we are mostly fucking with you. Like I said, you are like just like uh a . . . \" she paused as if she was searching for a word. Then, after a few beats, she seemingly found the word but didn't seem to want to say it. Finally, she started tearing up again. Instinctively I held my arms out, and she climbed into my lap. I held her.\n\n\"Thanks for being there and putting up with my shit, Daddy,\" she whispered. Sure that term could be sexual, and the fact that this pretty eighteen year old's cute naked ass was sitting squarely on my naked lap as she pressed her small but hard nipples against my bare chest in a long hug could absolutely become sexual, here it really just felt like she needed an older guy in that father role. And this week of working closely together made us into this little make-shift substitute family for her. And maybe a little for Kel too.\n\n\"Any time, sweetheart.\"\n\n\"Hugs any time?\" she asked, not letting me go.\n\n\"Any time.\"\n\nI looked up and Kel was tearing up too, \"see? This is the kinda feeling and sharing shit I was talking about.\" She then stood up and hugged me where I sat, managing to bring my head into her substantial boobs. \n\nLife had gotten pretty awesome.\n\n++++\n\nThe night before the local guests would arrive for our soft launch, we all decided to turn in early. With Cami, Beth, and I sharing a bed, and with the longshore girls knowing about it, I invited Chels and Kel to share one of the rooms in the lodge. \n\nChels hadn't asked yet, but she looked to be overjoyed to have a place to stay on site, so I imagine she would propose an arrangement for her to stay more permanently. I wasn't sure about Kel. Both had been living with their families up to this point, and from what little I knew, Kel's family was decidedly more loving and supportive than Chels's family. Thus she may be happier living with them. \n\nI laid on the bed waiting for my bunkmates to arrive. More than bunkmates, they were my girlfriends. My girlfriends. Like the ring of that. I would be happy with either one, but they really did together make such an amazing little family with me. A family that also at some level included a pretty lawyer who occasionally would be having sex with me, two young women who seemed to enjoy \"fucking with me\" as they put it, and an ex-boyfriend of one of them who has only three words in his entire vocabulary. Maybe my new family would keep expanding?\n\nThe door opened and the first girlfriend paused smiling at me. Cami came over to the bed and climbed on top of me, her whole body lying on top of mine, my soft dick, for now, naturally pressing against her pussy lips. With her there, it would not be long before things would force her to make a decision between moving to give it some room, or allow it to slide right inside of her\n\n\"Hi,\" she smiled at me, her face inches away from mine. Her smaller breasts pressed against my chest. She began to wiggle her hips.\n\nLooks like she wanted the second option. But then we had not made arrangements with Beth for Cami and me to have the room tonight, to be intimate. Sometimes we planned ahead for the entire week and sometimes it was more impromptu. So far, no problems had arisen. \n\nAt that moment, girlfriend #2 opened the door. She stood at the door for a moment, smiled as she watched us, and then turned to leave, \"I will give you a little bit.\"\n\n\"No, please stay.\"\n\nBeth looked at Cami, \"you want me to stay?\"\n\nCami nodded her head, her hips continuing to gyrate, and now my cock began to grow. It could have been because the girl was rubbing her pussy lips on my growing member. It could have been because Beth in all of her gorgeous naked glory was standing right there. Or it could have been because the one girl just asked the other to stick around for whatever sexual encounter was going to be happening.\n\n\"Stay and watch, Beth.\"\n\nBeth looked at me as if to see if I agreed. I didn't know how to answer her, but I could tell she was torn. Maybe secretly deep down she really wanted to do something as kinky as watching two people have sex. But also maybe deep down, maybe this whole sharing thing worked because she didn't see what Cami and I did when she was not in the room. Kinda a denial thing of sorts.\n\nBeth slowly walked to the bed, gently sat down, and crossed her legs facing us. This was very new. Apparently the kinky side won out.\n\nMy eyes stayed on Beth's face as Cami's hips continued to grind her increasingly wetter pussy against my quickly hardening shaft.\n\nCami grinned at me as she slid down my body and engulfed my cock in her mouth. I glanced back at Beth's face, who seemed to be mesmerized by Cami performing some rather enthusiastic and Olympic level oral sex. Her tongue circled my dick as she time and time again pulled it between her lips.\n\nAs I felt Cami's lips kiss down my shaft, I watched Beth's fingers trace designs on her stomach. It looked as if she wanted to touch herself, but she was taking her time getting there. So fucking sexy. I was secretly pulling for her to sensually touch herself, but then I was entering my sexual haze phase as Cami moved me closer to the brink of an explosive release.\n\nBeth's eyes moved back to mine, and her cheeks flushed red a little. Her fingers immediately dropped to her sides.\n\n\"Please don't stop, Beth,\" I whispered to her.\n\nI looked down. Cami had nearly completely swallowed my dick as her eyes looked at me questioningly. She quickly figured out what was happening, popped my dick out of her mouth for a moment, smiled at Beth, and then started sliding up my body.\n\nBeth paused. Our love making up to this point had been somewhat traditional. Taking her from behind doggie style had been one of the more adventurous things we had done. Usually she wanted to have me on top of her, our faces close, our eyes watching each other, more missionary approach. \n\nI had never seen her masturbate. I wasn't even sure if she did.\n\nBut now, I watched the somewhat conflicted Beth return her fingers to her stomach, and slowly slide them down her body. This might have become the most sexually charged moment of my life. It was becoming crazy fucking sexy.\n\nCami had finally climbed my body, my dick ended up poised at her pussy lips. She seemed to be enjoying the tease, as I felt the head of my cock spread her pussy lips, running up and down her slit as she rolled her hips around.\n\nThat was it.\n\nI grabbed her waist, causing her to yelp, and flipped her on her back. I then immediately slid my body forward and pushed my cock into her soaking wet pussy. She moaned in delight as I pressed my dick all the way inside, my balls finally pressing against her body.\n\nI heard a moan. I looked quickly at Beth. Beth massaged her breast and nipple with one hand, the other running fingers along her clitoris. I desperately held back a need to cum, just so this moment would not end.\n\nBeth locked eyes on me, and then shifted her body so that she laid on her side next to Cami. She continued to circle her fingers on her clit. I could hear the wet sounds from both women at this point.\n\nI leaned over, grabbed Beth's neck and brought her into a deep kiss as I continued to pound my dick over and over into Cami.\n\nBeth moaned into my mouth, her fingers tangling in my hair. With her lips pressed against mine, Cami's fingers digging into my ass pulling me into her, and the overwhelming knowledge of this fucking amazing situation, I exploded inside of Cami. \n\nMy dick throbbed inside of her pussy, seemingly causing her pussy walls to throb back in response. She actually bit into my shoulder as she let go to a strong orgasm. I heard Beth make a similar sound, her thighs pressing together with her hand locked onto her pussy. She pinched and pulled her nipple as her body squirmed. I had never seen her do something like that before.\n\nI eventually rolled off of Cami, who then proceeded to latch her body onto mine, her pussy lips now hot and soaking wet pressed against my thigh. Beth immediately did the same on my other side, in a near mirror position. I rubbed both of their backs, necks down to their beautiful asses and back, as all recovered.\n\n\"That was hot, right?\" Cami whispered into my chest.\n\n\"Very,\" Beth responded, also whispering into my chest.\n\nI just grunted. Words hadn't come to me yet. And probably wouldn't for quite some time. Or ever. Still totally worth it though.\n\nBeth's breathing sounded like she was moving towards dosing off.\n\n\"So we are doing it again . . . in like fifteen minutes?\" asked Cami, as if she was checking her day planner.\n\nBeth only whispered, \"I love you Cami.\" I felt the same. I couldn't really move at this point. The young girlfriend was going to have to be understanding for the much older participants in this relationship.\n\nNot sure when we drifted off, but it had to be only moments after.\n\n++++\n\nThe day of the soft launch had arrived. Cami had gotten matching baseball caps, with a cute little logo emblazoned on the front for all of us and a matching scarf for Kel for the front desk, as she really ran the in-doors. She actually looked lovely wearing just the scarf, a very classy look.\n\nWe had opted to gather briefly as a \"staff\" about thirty minutes before the check-in began. Even Trev ended up being there for our opening. He had to work in the paper factory Monday through Wednesday, so really he could only maybe stop by in the evenings for the rest of the week.\n\nBeth stood in front of us leading the meeting, with the rest of us sitting together in a semi-circle on the couches. Trev sat in one chair and Kel sat in another. Trev seemed to be getting along fine with Kel, even with their breakup. But then again, since Trev showed no emotion and hardly spoke, who knows? He might have been inwardly devastated.\n\nCami, me and Chels sat on the couch between the two chairs. Chels had gotten a little clingy, but I was fine with it, and while both Cami and Beth had noticed, they did not seem upset. I think like me, they recognized Chels needed an older dude in her life, seemingly of the platonic variety. Her being physically affectionate just demonstrated what had been sorely lacking in her life, and what I could and would enthusiastically provide.\n\n\"Alright everyone. This is it. What we all worked for. Remember, Eden Woods is all about a safe escape from the real world, a place where all feel comfortable. Tom and Trev, be especially respectful of all of our female guests. And of course we ladies will do the same. We want this to be a place where our guests walk away, and immediately begin planning to return. We want them to fall in love with this place, just like many of us did our first time here.\"",
        "She paused, \"if there are any issues, please immediately let me know. If any guests have questions or needs, then you be the one who makes sure all gets solved.\"\n\nShe smiled at everyone, \"I am so proud to be a part of this, that Cami and Tom invited me to be involved, that others saw how important this place is and wanted to join us.\" Her voice cracked a little, \"we have formed a little family and I have really grown to have so much appreciation for you all.\"\n\n\"We appreciate you too, gorgeous naked mommy figure,\" Chels grinned.\n\nBeth cracked a grin and shook her head. I think Chels had not only gotten to me, but also Beth. Misguided yes, but such an incredibly sweet girl.\n\nWe all stood up and started the hug fest. Even Trev got a few pats on the back. And then we headed towards our battle stations.\n\nCami, Chels and I were to stay in the lodge and help to guide our guests to their cabins. We figured not everyone would show up immediately at 10 am, so with three of us we felt we had enough to escort any and all guests as they arrived.\n\nAnd so right at 10 am, two cars pulled up. The first to step out was Charlotte. Beth had positioned herself at the front of the lodge, in her wonderful naked glory, to welcome each family personally. To think, not long ago she had only just come to grips with Charlotte seeing her naked the first day they met, but now she was welcoming everyone, and seemingly comfortable to do it too. Moments later, the door opened and Charlotte and an accompanying gentleman, likely her husband, walked in.\n\n\"Hi Charlotte. So glad you came.\" I walked immediately towards her and we shared a hug. To his credit, her gentleman friend didn't seem to be too disturbed by a naked dude in his forties hugging her.\n\n\"This is my husband Wallace. Wallace, this is Tom.\" I reached out and gripped his hand in a firm handshake. He smiled back.\n\n\"It's a pleasure, Tom. Charlotte raves about you and this place. Glad we could come out and visit under more, well limited conditions.\"\n\n\"Of course, well let's get you all checked in.\"\n\nKel did her magnificent acting gig, not a single questionable word, while maintaining a very pretty smile throughout. She nailed it. I was very proud. She got all the pertinent information down and our first guests at the new and improved Eden Woods were officially checked in. \n\nI had the pleasure of escorting Charlotte and Wallace back to their cabin. As we walked out, we passed one of the soccer moms, Lisa, and what seemed to be her two teenage daughters. That surprised me a little. The girls initially stared but then averted their eyes. Lisa waved and called out to me. Hopefully all would feel more comfortable soon enough.\n\n\"So what made y'all decide to do this?\" I asked Wallace and Charlotte as we walked back towards Cabin One.\n\nWallace chuckled, \"well, Charlotte fell in love with this place, and then there is the bucket list.\"\n\nCharlotte elaborated, \"Wallace always wanted to do something a little wilder, like go to a nude beach. It is on his bucket list. But I was the one that said no for decades.\"\n\n\"Indeed she did,\" Wallace said smiling.\n\n\"But then you came along with this crazy but beautiful place. So I suppose I softened a bit to trying it.\" She was smiling as we walked.\n\n\"Well I would say you more than softened. You were the first to reserve a spot!\"\n\nShe laughed, \"ok maybe it was more that I got very excited!\"\n\nWe finally arrived at the cabin door. \"Well this is where I leave you.\" I handed the two of them a little handout called \"The Eden Woods New-dist: A Guide for the Newcomer\" put together by Cami and Chels. They put all sorts of good info in there like activities at the resort for each day, but also etiquette topics - carrying around towels to always sit on, the avoidance of gawking and photography, and even the issue of arousal for men. I am obviously the primary cause for that last entry being in there as I am sure Cami thought of me and my semi-perverted ways when writing it up. I could even picture Chels giggling at my expense should Cami relay that story to her.\n\n\"So . . . do we undress immediately?\" Charlotte asked before I could turn around.\n\n\"At your leisure. I think we will be relaxed. And some may opt to wear some clothes, but hopefully all will be comfortable as the day moves along.\"\n\nAnd with a final wave and a smile I headed back.\n\nBy the time I had returned to the lodge, I briefly ran into Lawrence and a lady friend, who he introduced as his wife Patty. She was this slender fair skinned woman about the same age as Lawrence, probably in her sixties. She had this very short haircut, which on her was quite flattering. She looked shyly at me as I briefly welcomed them, but I then let Chels escort them off. \n\nSammi, our furniture supplier, and her husband Bill were next. I liked Sammi early on as she had this very engaging personality, always super outgoingly friendly. Her hair seemed to be two tones -- a dirty blonde and a darker color, which probably was her natural color. She also sported a more natural tan. Her husband seemed quiet and mild-mannered. \n\nAs I escorted them back to their cabin, number four, they told me they had come to Eden Woods as they just wanted to spice things up a bit. They both had turned forty last year and felt they should do something out of the ordinary. They left their kids with grandparents, told only a few people where they were going, and headed out to our little paradise.\n\nThe we-just-wanted-to-do-something-a-little-crazy story seemed to really be developing as a pretty common theme among our attendees. \n\nWhat is interesting to me is that once I fell into this lifestyle, there is nothing crazy or wild about it. It really just made sense. I mean, I had developed very close relationships -- romantic, social, and even new family relationships -- as a result of this lifestyle. Much closer than anything before.\n\nSo crazy? No. Just freeing.\n\nNearly everyone had been escorted back by the time lunch hit. Only one cabin stood empty -- Jenna's. \n\nAt around noon I had decided to take a few minutes and watch from the front porch. Lawrence and Patty had actually fully stripped down and were walking hand-in-hand by the water. They seemed very comfortable, sharing a bit of a sweet moment.\n\nLisa, the soccer mom, actually had also stripped completely and was sitting in one of the lounge chairs by the water. Being a very fair skinned red-head, she looked like she was constantly lathering her body with suntan lotion. She had been joined by her newly naked soccer mom friend Sherry and Sherry's husband, Caleb. They seemed to be a little more comfortable than I figured they would be. How would that go? To see your wife's friend naked? An odd occurrence initially, to be sure.\n\nI watched three small children run naked across the grass, following Chels as if they were little ducklings following a mother duck, one other little girl firmly holding Chels' hand. She caught me watching her as she led them to the shelter, smiled this beautiful joyous smile at me, and then helped the children get into their seats. \n\nThat look of joy sent a major bolt of pleasure through me. I didn't know which parents these children belonged to, but I was glad they were there. And those parents should be glad that they have someone like Chels looking after them.\n\nAnd then I saw Lisa's two red-headed teen daughters, maybe around fourteen or fifteen, walking in bikinis towards the canoes. I didn't know if they would feel more comfortable by the time the experience drew to a close, but I wished the best for them none-the-less. Being a girl that age came with all sorts of insecurities. Undressing completely may even exasperate those insecurities. I was just glad they came with their mom. I am pretty sure I would not have gone to a nudist resort with my mom at that age, but then who knows?\n\nIt was with all of this semi-naked to fully naked activity around me that a car pulled up. Jenna stepped out with her stylish look -- khaki shorts and breezy top, sandals, big Audrey Hepburn style sunglasses, large-brimmed sun hat. She grabbed her small luggage piece out of her car's back seat and walked towards the lodge.\n\nShe caught me smiling at her as she reached the steps.\n\n\"Hi Tom,\" she said, a little hesitantly.\n\n\"Welcome Jenna,\" I returned the greeting. \"I am glad you decided to join us this week.\"\n\n\"Well I changed my mind seventeen times in the last two days . . . \" she put on a surface level grin, now having reached the top step.\n\nI stood in front of her. \"Well I am glad decision number seventeen was to come here,\" I reached out my hand, \"allow me to handle your luggage?\"\n\nShe nodded and smiled, letting me take it from her. I held open the door, escorting her inside.\n\nKel immediately checked her in, smiles and politeness in abundance. \n\nOne Kel had finished working her hospitality magic, I hesitated.\n\n\"Are you comfortable with me escorting you to your cabin, Jenna?\"\n\n\"Absolutely, Tom.\"\n\nWe began the short walk side-by-side.\n\n\"My husband knows I am here,\" she offered, out of nowhere.\n\n\"Oh I didn't doubt it, Jenna,\" I smiled at her reassuringly but then added, \"but he opted to not come?\"\n\n\"He was very opposed to me coming. We had lots of conversations about it. Both good and bad,\" she shifted into this somewhat sad tone, \"he definitely is not ok with it, but . . .\" she turned to look at me, \"he saw how important it was to me, so he eventually stopped fighting me and relented.\"\n\nShe shrugged her shoulders, \"I had started practicing my nudism around the house.\" She giggled, \"I think he liked that part.\" But then her brow furrowed a bit, \"but sadly not enough to join me.\"\n\nShe sighed, \"maybe one day.\"\n\n\"Well at the risk of sounding too patronizing, I am very proud of you.\" She smiled.\n\n\"Here we are! Cabin ten. Cami and Chels wrote up this handy guide for those new to this sort of thing. And now I can leave you to get settled and more comfortable.\"\n\nJenna paused at the door, \"Tom?\"\n\n\"Yes?\"\n\n\"Can you wait while I get . . . changed? Want to walk back to the lodge and could use your support.\"\n\nHer uncertainty was all over her face. \"Want me to go back and get Cami or Beth? They probably . . .\"\n\n\"No,\" she interrupted me. \"I have already experienced this with them. A guy is the next logical step. And you are the logical guy.\"\n\nAnd with that she quickly turned around and disappeared into the cabin.\n\nMoments later, the door opened and Jenna walked down the steps. She had kept her sunhat and sunglasses on, and of course her sandals, but nothing else. \n\nAs with all of my previous friends who I suddenly got to see naked, I didn't suddenly start gawking at her, but out of the corner of my eye I could tell that she looked absolutely lovely. As she descended the stairs to the cabin, with her sunglasses-covered eyes focused on her feet, I took the opportunity to maybe almost gawk - her medium sized breasts moved naturally, jiggling a little, as she came towards me, her lovely hips moved back and forth, and she had kept a small tuft of blond hair at the apex of her thighs. Simply stated, she was lovely.\n\n\"Nothing to say?\" I could not see her eyes but she did sport a small smirk.\n\n\"I didn't want to make you uncomfortable.\"\n\n\"Oh I am uncomfortable already,\" she replied, \"so I think . . . reassurance is welcome.\"\n\n\"Well, you are beautiful, and look very natural,\" I said without obviously physically appraising her, \"and I am a big fan of the hat-only look.\"\n\nShe smiled. \"Thanks Tom. That's . . .\" she paused, \"just thank you . . . for everything.\"\n\nAnd with that she hooked her arm in mine as I escorted her back to the lodge.\n\n++++\n\nThe next two days saw several interesting developments. First, it took about a half day for pretty much all guests at Eden Woods, all brand new to naturism, to become comfortable with the practice of nudism. The only hold outs at all were the teenage girls, but they actually removed their tops by mid-afternoon. And I heard they removed the rest before they left on Wednesday, but they may have done it in a less public spot.\n\nSecond, the Eden Kids program was a HUGE success. Chels really came into her own. And when I say I saw joy on her face, it was the sort of shining, glowing, smiling sort of joy you seldom actually see in life. Probably only someone who had suffered such terrible circumstances could experience real joy like that. Her joy never left.\n\nLater I found out that Chels never really knew her birth father as he was a one-night stand. Her mom married three different guys over the years, each apparently progressively worse than the previous one. She experienced it all -- neglect, forms of physical abuse, certainly emotional abuse, and even some stuff she would not talk about that only Kel knew. And her mom had done the best she could, but it was not nearly good enough, and so her little girl suffered. \n\nBut I got to experience the happiness of introducing Chels to something better -- safe, warm, loving, a place where she can have purpose, she is valued. As Kel would say, that shit made me feel very good inside. \n\nAlso, we discovered people really liked to do activities sorts of things. The two teenage girls really kinda latched onto Cami and Chels and did just about everything those two planned. Some of the other families included children from toddler through elementary school, about ten kids in all. Chels of course was loving life with the little ones, but she also met up with a good crowd of women and one man doing morning yoga with her and Cami had a good turn-out for organized water and hiking activities. Chels even did two guests' hair.\n\nWe all decided that we should look into other types of activities, like the traditional nudist sport of volleyball. We added that to the list -- to brainstorm how to expand that. With the weeks to come seeing a lot more guests than just the 28 during our trial week, we knew we needed to be creative and engaging. Cami and Beth were both right about making sure that we inspired glowing online reviews about Eden Woods.\n\nJenna didn't participate in the activities, choosing instead to mostly just hang around with us. So she shifted between Cami, Beth, me, and Kel depending on who was busy. She progressively got more comfortable as the days progressed and seemed to be planning for how to get her husband on board with all of this. I very much wished her well in that effort.\n\nAnother interesting development -- the need for a day pass system. Even with the cabins filled up, some locals still came in hopes of purchasing a day pass. We hadn't thought about that, so Cami immediately did some research as to how other resorts handled those sorts of things. We tried it on the second to the last day in a limited sort of way and found it could work. We just needed to protect our guests while also offering a controlled means of allowing others to experience Eden Woods -- a win-win balance sort of thing.\n\nWe had to work out some cleaning and room kinks, but overall we were very pleased with how things were turning out. I would grade launch as an A minus, with some overall to dos, some needed brainstorming, but an experience where our team really did provide a great experience for our guests.\n\nAs our guests began to leave, Cami slipped her body underneath my arm and hugged me tight. She kissed my cheek.\n\n\"This is all because of you Tom.\" \n\nI kissed her lips, \"nope. All you, Cami. You converted pretty much everyone here.\"\n\nBeth came up to stand next to us as we watched the cars leave through the trees, I put my other arm around Beth. She smiled and latched onto me too. Life was so good.\n\n++++\n\nThe next three days involved lots of work sessions. We knew a slew of people were coming for the actual opening week -- actually twenty three guest units, which could be a whole family or a single person or a group of friends. So all total we were going to have forty-one adults, nine teenagers, and twenty-nine children aged infant up to twelve. Almost eighty people. Obviously Cami was ecstatic, I mean the rest of us were quite pleased as well, but this was Cami's dream becoming realized.\n\nBecause things had gone so well, there really was not much else to do before the next week's guests arrived. \n\nJeanette stopped by and gave us a general report on how Gary and she were doing. Apparently after our little surrogate experiment, all was still great on their end. And our end too, as I had grown concerned about the long-term impact of that. We all decided we could schedule another \"session\" in the weeks to come. Both Jeanette and I actually blushed as we all sat around to try to plan when the two of us could have sex.\n\nAnd then we made another big decision, one that we hoped would be well received.\n\n\"Hey Chels and Kel, can we talk to both of you for a moment? Beth, Cami and I have made a decision.\"\n\nBoth looked concerned, but then walked into the lodge living room and sat together on the couch.\n\nBeth nodded to me. It was my idea so I guess I got to present it.\n\n\"Ok girls, first off, no panicking. We hope this is a good thing. OK?\" They both nodded, but only slightly less concerned.\n\n\"Chels, we have been talking about you and your situation. We want you to be safe and happy. All of us want that.\" Chels seemed to be a little confused while Kel seemed more hopeful. I think she was getting where this was going.\n\n\"Kel, we know your family is really supportive of you, so you may not need to do this, but Chels . . .\" I leaned forward and took her hand, \"we know things are less than ideal for you, so we would love it if you just moved into the lodge with us. Just make this your home, with us.\"\n\nChels sat shocked, maybe processing, looking at Cami, Beth, and myself, from to face to face, all of us smiling at her. I kept holding her hand but turned to Kel, \"but understand you are welcome . . . um . . . \" Kel was crying. Tears were flowing down her cheeks. I turned back towards Chels, her lip trembling.\n\n\"I . . . I don't . . .deserve . . .\" she began, struggling with each word.\n\nI held her cheeks in my hands, \"you deserve happiness, sweetheart.\"\n\nAnd that was when she collapsed. She fell forward into my arms as she sobbed. We couldn't take away the suffering she had endured, we couldn't erase the pain, but maybe our little paradise could bring some happiness to this girl. \n\nIt really brought happiness to all of us in some form or fashion.\n\nI mean, I now realize how lonely and detached I had been. How misguided I was. How I focused on the less important aspects of things, the transactional ones. But now. Now, I focused firmly on people, relationships, happiness. It gave me such a purpose in life, one that I sorely lacked. \n\nI glanced at Cami and Beth, the two most important people in my life. \n\nBeth's tears streamed down her cheeks. Poised and professional Beth, openly crying. I am sure she felt the same happiness I felt, that we could help Chels, being a part of something 'very lovely' as she put it. Beth had stepped away from that transactional world too, money, buying and selling, acquiring and relinquishing. It had become a people-less world to her. This filled the void for her, just like it did for me. \n\nAnd then there was Cami, wiping tears as well, but it had been merely days before when her own family rejected her. That she felt pain. That she battled heartache. And she got through it because she had her new family in this safe place. Our place. And one day, maybe her mom or dad would come around. Maybe one day they would see the hurt caused and make a concerted effort to try to understand their daughter. Maybe one day they would love her more than they judged her.\n\nAnd now Kel and Chels had a new place for a new beginning, especially for Chels. They were young, but this place offered them what they sought. A new escape from the pain in life. And a place full of people that cared for her.",
        "And Jeanette, while she did not work or live at Eden Woods, it impacted her too. The sheer association with it opened the door to new ways of thinking and living. That her marriage needed something more authentic, more transparent, more giving. And with loving friends at her side, she felt she had the strength to do it.\n\nHeck, maybe even Trev benefited from this place. We likely would never know, but I liked to think he did. I would look closely for a hint of a smile. If I saw such a thing, then I would count it is a monumental win with him.\n\nWas Eden Woods that special? I suppose the idea of it was even more important than the actual physical nature of the place. But it welcomed others as they were, no pretending to be otherwise. \n\nI think it gave us an excuse to be different. Maybe because it proved to be so shockingly alternative compared to what we had grown to accept in our \"regular lives,\" we suddenly found ourselves willing to be in a throuple, to accept an eighteen year old calling you Daddy, and to have sex with a friend to help her marriage. I mean if walking around naked isn't so taboo anymore, then what is? Maybe society is wrong about a lot of stuff. I know I was.\n\nChels finally settled down enough to thank us profusely, over and over and over and over. She alternated between smiling and crying for the rest of the day. Kel said she would come over for some sleepovers at times, but made sure it was clear that Chels' room in the lodge was Chels' room. This was to be her home. Her new home. Her safe home.\n\nSo, I thought Chels was a hard worker before. Now she was a whirlwind of energy. And now every time she looked at me it was with this face of picture-perfect happiness, mixed with some serious affection. Having an officially adopted daughter was pretty awesome. It felt pretty good to be that adored.\n\n+++++\n\nSo, it came to be one morning, with Cami and me enjoying our little breakfast time together on the front porch, looking out on a newly reinvented camp, a new paradise, that we just turned to each other and smiled in satisfaction.\n\nOddly, she and I began this journey just months before. So much had happened -- I had become a naturist, I had fallen for her and Beth simultaneously, I had picked up an unofficially adopted daughter or two in Chels and Kel, I had developed an unconventional friendship with our lawyer, and I had helped to guide members of a community into being open to this world. A pretty productive few months, really, if I don't say so myself. Way to go Tom.\n\nUpon re-entering the lodge to clean up our bowls and such, I caught sight of the beautiful Beth descending the stairs in a breath of naked glory. Never would I get tired of that.\n\nWe cleaned up together, waved at the smiling Kel at the front desk, and then settled into the lodge living room couch. Nothing left to be done but relish in our accomplishments. I ended up with Beth and Cami under each arm, much like the cuddling we did every night, with each woman pressed in close. No words needed to be said as we sat together in those comfortable moments of bliss. This was what happiness felt like.\n\nThis was the day. We had worked towards it for months. We were all ready -- Cami, me, Beth, Trev, Chels, Kel. All of us. We were not collectively nervous, but we were aware that it was an important day. And the best way for us to start this day, the first official day of the resort's re-opening, was to sit together and enjoy each other.\n\nI didn't know how long we sat, but our little peaceful respite finally was interrupted by the lodge door opening behind us, followed by a few footsteps pattering across the flooring, and then Kell's enthusiastic, sweet, and friendly voice cutting through the peaceful atmosphere, \"welcome to Eden Woods! We are so glad you are here! How can I help you today?\""
    ],
    "authorname": "SimonO",
    "tags": [],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/rebuilding-eden-ch-05"
}