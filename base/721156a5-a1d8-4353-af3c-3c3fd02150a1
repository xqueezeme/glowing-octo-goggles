{
    "title": "Space Police Corps Ch. 01",
    "pages": [
        "Please do not look on this as anything, but the tongue-in-cheek story that it is. This story is based on a RPG (Role-Playing Game for the uninitiated) called 'Space Quest', by Paul Hume and George Nyhen and produced by Tyr Gamemakers Ltd. I believe I have the only copy that sold. This game system has the best solar system generator that I have ever seen.\n\nMy thanks to sweetmirahz for her editing. Voting is mandatory and comments are always appreciated, but please remember I was drunk when I wrote it a long time ago in a galaxy far, far away.\n\n\"Are you sure? One hundred percent - absolutely positive \u2013 no chance of error \u2013 sure that there is no one else?\"\n\n\"Commissioner,\" admonished a man in a voice tired of belaboring the same fact over and over and over again. \"He's the only one available.\"\n\n\"Oh, God, help us,\" moaned Commissioner Lika Grossgut, as he buried his face in his hands. \"You're the Director of Personnel. Promote someone.\"\n\nDirector Tri Piplicate lowered his head and stared at the large, heavy man behind the desk. He then raised his tall, bean-pole frame up to its full height.\n\n\"I can't do that,\" he said. \"My predecessor did it and that's how we got the Lieutenant.\"\n\nCommissioner Grossgut winched at the sound of the rank bestowed upon the object of their conversation. He then sighed in resignation.\n\n\"Yea, you're right,\" he stated as he heaved his butt out of the leather chair. \"Your predecessor got his just rewards, though, by going on that mission. God rest his soul.\"\n\n\"\u2026and I'm not about to make the same mistake,\" added Director Piplicate. His face brightened. \"It's unexplored space. You know the odds.\"\n\nCommissioner Grossgut scowled. \"I didn't rise through the ranks of the Consolidated Police Corps by not knowing the odds, but let me ask you, how many dangerous missions have we sent him on?\"\n\n\"Eighteen,\" replied Director Piplicate sourly.\n\n\"And how many has he survived?\"\n\n\"All of them.\"\n\n\"And how many were pure, unmitigated disasters?\" shouted Commissioner Grossgut, his face turning red.\n\n\"Well,\" stammered Director Piplicate. \"He did achieve his mission directives in each one.\"\n\n\"Yes, he did,\" hissed Grossgut. \"At the cost of millions of credits in injury and damage claims AND THAT'S NOT COUNTING THE TWELVE SHIPS HE'S LOST!!!!\"\n\nPiplicate winched as the words blared in his ears. He then sighed in resignation.\n\n\"He's all we have,\" he stated again flatly.\n\n\"Oh, shit! We're fucked.\"\n\n\"Not necessarily,\" counter Piplicate. \"As I said, it is unexplored territory. No treaties or commitments if things go wrong. If he destroys his ship out there, we may never hear from him again.\"\n\n\"Those words are going to come back to haunt you,\" said Grossgut, moving around from behind his desk. \"We might as well get this over with.\" He headed towards the door.\n\n\"Oh, congratulations on the commendation award from the Merkoku,\" said Piplicate. \"Considering how anal-retentive the cat people are, I was surprised that the neat freaks gave us one.\"\n\n\"I know,\" replied Grossgut. \"I was shocked to get it. I gave it to my secretary, Miss Teaser, to get air-sealed and framed. I have an appointment wit the Merkoku ambassador next week. I want to show it to him in its pristine condition.\" Grossgut opened the door out of his office. \"Ima, would you contact Lieutenant\u2026\"\n\nGrossgut's words cut off abruptly at the scene inside his secretary's office. His very buxom secretary was sitting straddle-legged across the lap of an officer sitting on a bench. Her huge tits had him pinned to the back of the bench as her hands tried to undo his uniform.\n\n\"Please, Miss Teaser,\" pleaded the officer as he attempted to thwart her roaming hands. \"I know you have been under a lot of stress, but you have to control yourself.\"\n\n\"C'mon, honey,\" cooed the blue-eyed blond as her hands reached down between his legs. \"Let's see your fuck stick. I wanna suck every drop of cream out of it\u2026feel it stuffed into my hot, wet cunt. C'mon, Gutsy will never know.\"\n\n\"What's going on here?\" yelled Grossgut angrily.\n\nThe lieutenant snapped to attention. Unfortunately, Ima was still sitting on his lap when he jumped up. With a shriek, she went flying up in the air until her well-rounded ass crashed back down on top of her desk. Computer ships, datapads, and other odds and ends flew this way and that as she slid across the top. Her coffee cup flew up when she had hit the desk and everyone froze in horror as the hot brown liquid splashed everywhere.\n\nThe lieutenant was the first to react. He grabbed a large piece of parchment off a nearby table and began mopping up the spilt coffee. Teaser had slid backwards off the desk and was now wedged between it and the wall with her legs stuck up in the air. Her cries for help were completely muffled by her breasts pressing down on her face. Her arms thrashed about wildly as her skin color went from red to blue.\n\nAs the lieutenant continued to mop up the coffee, Grossgut and Piplicate rushed over to help Ima to keep her from suffocating. They could not get her up as wedged in as she was and the lieutenant then noticed their plight. With a quick yank, he pulled the desk backwards at the same time Grossgut and Piplicate yanked on her arms.\n\nThe bad thing was that Piplicate was braced against the desk for leverage. With his support gone, he tumbled backwards pulling Teaser and Grossgut with him. The lieutenant made a grab for Ima, but only succeeded in ripping her dress completely off her.\n\nPiplicate crashed to the floor. Ima Teaser, now dressed only in her panties, fell on top of him with Grossgut on top of her. The lieutenant was stretched across the desk holding onto the ripped dress. It was just then that the outer doors opened.\n\n\"I assure you, Senator, that the Commissioner is the soul of Tact and discretion,\" said Consolidated Planets President Indy Cisive to another man. \"I'm sure you can rely on him to help you with your problem without any public relations embarrassment.\"\n\nThe two men stopped dead in their tracks. What they saw was an office in complete disarray, an almost naked girl sandwiched between the Personnel Director and the Commissioner, and a lieutenant standing against the wall acting like a coat rack with a torn dress in his hand. The senator turned white as a ghost and bolted down the hallway. President Cisive leered at Ima, glared at the Commissioner and then sighed when he looked over and recognized the lieutenant.\n\n\"You have an hour to get him off the planet, Commissioner,\" he said as he walked out of the office.\n\nIma squirmed out from between the two men, snatched her dress out of the lieutenant's hand, and ran down the hall to the ladies room with her breasts bouncing.\n\n\"You\u2026You\u2026\" stammered Grossgut, his face turning beet red as he stood and faced the lieutenant.\n\n\"Lieutenant Lance Atwat,\" intoned the lieutenant, snapping to attention and rending a crisp salute to the Commissioner. He handed the Commissioner the soggy parchment which Grossgut immediately recognized as his award from the Merkoku. \"Reporting for duty!\"\n\nLieutenant Atwat was the image of virtue and professionalism. His wavy blond hair and striking blue eyes with a hard, solid cleft in his chin made him extremely handsome by human standards. At 1.95 meters tall with rippling muscles, Atwat was the epitome of human physical perfection. The only thing Grossgut found at fault was the complete lack of any sign of intelligence in his eyes. The caption under his Academy picture read: All his brains are in his biceps. Atwat took that as a compliment.\n\n\"What the hell are you doing here?\" yelled Grossgut at Atwat.\n\n\"I, as a proud member of the respected and beloved Consolidated Police Corps (Piplicate began to choke at this point) have sworn an oath to protect the innocent and bring wrongdoers to justice. I am here to preserve our way of life, treat all beings with equal respect and dignity, and to maintain order. My oath requires me to be physically fit, morally\u2026\"\n\n\"Yes, yes, yes,\" interrupted Grossgut. Tri Piplicate was trying not to laugh out loud. \"I know what your oath is. I meant what are you doing in my office?\"\n\nLance looked confused. \"But, sir, if you know the oath, then you know why I am here.\"\n\nGrossgut looked ready to either bang his head against the wall or murder Atwat. Piplicate regain enough composure to set in.\n\n\"You're here for an assignment?\" he asked Atwat.\n\n\"Yes, sir! What dastardly deed needs to be undone? What wrongs need to be righted? I am here to serve!\"\n\n\"Are you sure we can't just drop him into a supernova or a black hole or something?\" Grossgut whispered to Piplicate under his breath.\n\n\"Yes, I'm sure. He's been banned from so many planets within our territory that it takes my entire staff two days to notify everyone of the Lieutenant's current position,\" whispered Piplicate. \"Now, with the President's order, unexplored space is the only place we have left to send him.\"\n\n\"Ship? Crew?\" asked Grossgut.\n\n\"I found a six person, mothballed research vessel. It can accommodate up to twelve people in a pinch and is only one hundred and fifty years old. I had it upgraded in case we ever needed it. The only thing that has not been done was wiping the ship's computer clean and reprogramming it. It's not necessary, though. We can just dump our current information into the old computer and let it go at that.\"\n\n\"\u2026and the crew?\"\n\n\"We have three capital ships in port right now. I requested each of the captains to supply me with names to fill out the crew. We needed a first officer, a science officer, an engineer, and a medical officer. I asked fro their best. You know who we got.\"\n\nGrossgut snorted, \"Yup, did you find anyone that you could use?\"\n\n\"Not the worst\u2026no disciplinary problems, but I did manage a crew.\"\n\n\"Just ones that did not fit in with the captain and the way he wanted his ship to run,\" commented Grossgut. He turned back to face Lance. \"Lieutenant, an escape pod entered our system three days ago. It came from a ship lost eighty years ago. We traced back its trajectory and discovered it originated from an unexplored section of space. Your mission is to retrace the trajectory and find out what happened to that ship. Additionally, we want you to explore this sector. It is an important and long term project. Do you accept?\"\n\n\"Of course, sir! It's an honor and privilege,\" boomed lance, his face beaming with joy and anticipation. \"When do I leave?\"\n\n\"Immediately,\" replied Grossgut. \"You will take command of the CSP\u2026uh\u2026er\"\n\n\"Dildo,\" whispered Piplicate.\n\n\"Dildo?\" exclaimed Grossgut in surprise.\n\nPiplicate shrugged in embarrassment. \"The original registry was lost when it was mothballed. It was shaped like one so the crew at the Yard gave it that name.\"\n\n\"Any problems with that, Lieutenant?\" growled Grossgut.\n\n\"A grand name for a ship I will make respected through the galaxy,\" replied Lance.\n\n\"Uh, Lieutenant, you do know what a dildo is, don't you?\" asked Piplicate.\n\nLance looked a little confused at the question. \"Not really. What is it?\"\n\n\"A tool that\u2026uh\u2026penetrates\u2026cough\u2026to\u2026er\u2026uh\u2026bring relief to a lot of\u2026people,\" stammered Grossgut in explanation.\n\n\"Excellent,\" exclaimed Lance. \"I shall go forth with the Dildo to bring relief to the beings of the unexplored sector.\"\n\nGrossgut barely managed to keep a straight face as Piplicate had to lean against Teaser's desk in a coughing fit.\n\n\"Fine, son, fine,\" assured Grossgut. \"Let's get you aboard and on your way.\"\n\nCommissioner Grossgut and Director Piplicate escorted Lance to his ship, not trusting him to find it on his own without mishap. As they entered the landing pad, Grossgut was surprised by two things. The first was a platoon of Space Marines in full battle gear surrounding the ship and the second was the ship itself.\n\nThe ship was gleaming white and slightly oval. It had a strange forward section, which was slightly larger around than the shaft of the body of the ship and the section tapered down to a rounded point. The engines in the rear were housed in two large round casings. After looking at it, Grossgut could not describe the shape as anything, but a dildo.\n\n\"Why all the security?\" whispered Grossgut to Piplicate.\n\n\"To make sure the crew remains in place and to make sure we survive,\" replied Piplicate. \"The two cruisers and the carrier in orbit will ensure the Dildo leaves the system safely.\"\n\n\"Took a lot upon yourself, didn't you?\" asked Grossgut sarcastically.\n\n\"Probably, but I'm not going out like my predecessor.\"\n\n\"Sir, thank you for accompanying me on the start of my mission,\" said Lance before Grossgut could reply to Piplicate. \"It is an honor and a privilege. Have no fear for I will accomplish my mission and further the goals of the Consolidated Space Police.\"\n\nWithout another word, Lance turned and entered his ship. Grossgut and Piplicate just stood and stared at one another before it hit them. Yelling at the Marines, everyone ran for cover. As it was, they barely exited the landing pad before the Dildo blasted off. One small tongue of exhaust flame caught Grossgut across his ass, burning his pants right off in a flash, and producing a painful first degree burn.\n\n\"Ow! Easy!\" yelped Grossgut to the Marine medic who was pulling bits of charred cloth from his ass. He looked at Piplicate. \"Are you sure he's gone?\"\n\n\"Captain Doright just reported has made the jump to N-space towards the Tauk system. The cluster of stars beyond Tauk is where the escape pod came from. It should take years, even if he can get help from the ship's computer.\"\n\n\"Why? What's wrong with the ship's computer?\"\n\n\"It seems that a maintenance crew left it on for about fifty years or so all by itself. It, uh, went schizoid and developed multiple personalities. That was why I wanted to wipe it clean and reprogram it.\"\n\nGrossgut snorted, then chuckled, and finally broke out laughing along with Piplicate. Together, with Grossgut wincing, they turned and headed back to the office.\n\n\"Successful jump made, sir,\" said the female ensign sitting at the flight controls to Lance.\n\n\"Please have the crew assemble in the galley,\" requested Lance. \"Computer, maintain this heading and notify us if the sensors pick up anything.\"\n\n\"Of course, dear heart,\" came the metallic female voice over the speaker system. It had a distinct British accent. \"Would you care for a spot o' tea and some crumpets? 'ow about some nice scones?\"\n\n\"Uh, no thank you,\" said Lance who turned too quick and banged his knee against his chair.\n\n\"Careful, dear,\" said the computer. \"You seem to be off your mark. I know! A nice tablespoon of castor oil will fix you right up.\"\n\n\"I, uh, have to meet the crew first,\" stammered Lance.\n\n\"Well, run along and play then, dear,\" said the computer. \"I'll have it ready for you tonight.\"\n\nLance hurried down the passageway past the six crew quarters, which could sleep double if needed. The galley was next with the science lab and medical bay beyond that. The two cargo bays were next and finally the engineering bay, which was hooked up to the twin engines that gave the Dildo its thrust.\n\nLance walked into the galley. The other four members of the crew rose to their feet and everyone stared at each other apprehensively.\n\n\"Please, sit down,\" said Lance. \"I am Lieutenant Atwat. I am sorry that you were notified on such short notice, but I only just received the mission from the Commissioner prior to our departure. An escape pod from a lost ship entered Consolidated space several days ago. It originated from beyond the Tauk system. Our mission is to find the ship, any survivors and to explore that sector of space. I think we should begin by introducing ourselves.\"\n\nThe female who had been at the flight controls stood up. She was 1.7 meters tall with long blond hair braided down her back and deep blue eyes. Her large breasts and well-rounded ass had stretched her uniform tight and it seemed ready to burst apart at the seams at any second.\n\n\"I'm Ensign Needa Screw,\" she said. \"I was shanghaied to be first officer and pilot to this derelict. I was training to be a fighter pilot on the carrier, Avenger, but a couple of big things kept getting in my way.\" She looked down meaningfully at her overly-large tits. \"There were several near-misses and a couple of minor collisions outside the windows of my quarters on the Avenger. They all seemed to occur when I was getting ready for bed. I think my captain decided to remove two big distractions from his ship.\"\n\n\"Well, I sure as hell didn't volunteer either,\" said the young man sitting next to Needa. His round face and wavy black hair gave him a very youthful appearance. \"I'm Ensign DeKunt, Berry N., science officer on this scow.\" Berry shook his head and muttered, \"Just because one of my experiments blew out a piece of the hull of the Triumphant and destroyed a dozen other experiments\u2026\"\n\n\"Like, wow, man. It's the cosmic alignment of the planets that guides all our destinies,\" said the second woman at the table in an airy, spaced-out voice. \"Our auras are all intertwined and interdependent.\"\n\n\"And you are\u2026?\" prompted Lance.\n\n\"Wow, do any of us really know who we are?\" countered the girl.\n\nLance looked at the woman. She had long, frizzy red hair that hung all the way down past her waist. A silver hoop circled her forehead holding her hair back away from her face. Her uniform was a mish-mash of varying styles, which resulted in a riot of color.\n\n\"What name are you called?\" asked Lance.\n\n\"My parents named me Aye Wanna Hump. In the grand scheme, I answer the call of being your engineer.\"\n\n\"Engineer?\" repeated Lance, a little startled. He turned to the last person at the table. \"Then that would make you\u2026\"\n\n\"Aye, sir, I would be your medical officer,\" replied the being, standing up to its 2.2 meter height. \"I am Ensign Yu Cummin.\"\n\nLance had seen members of the Garou race before. The term 'werewolf', which was never used in their presence, was the perfect description for them. They were tall, furry and muscular, with a canine-shaped head and triangular ears. Their protruding canine teeth along with their brilliant yellow eyes gave them a terrifying appearance (at least to humans). The Garou had a very well-earned reputation for being short tempered and fierce fighters. Ensign Cummin was growling softly when he spoke and his voice came out of the translator collar around his neck with an affected lisp.\n\n\"Medical officer?\" asked Lance, stunned.\n\n\"Ays, sir\u2026medical officer.\"\n\n\"Medical officer?\" repeated Lance again, unable to believe that this ferocious-looking being with long claws was a doctor.\n\n\"Sir!\" grunted Yu, slightly agitated. \"I know that the translator makes my voice sexy\u2026\" Yu shook his head. \"No, wrong word again\u2026It makes my voice strange. That is no reason to mock me.\"\n\n\"No\u2026no\u2026no\u2026no,\" stated Lance quickly. \"I would never mock a fellow member of the Space Police Corps. I just never heard of a Garou becoming a medical officer.\"\n\n\"When I was early, uh, young, my parents brought me to Earth. We visited a Buddhist shrine. The words they spoke crammed me with peace and a reverence for all life. Over my parents' objections, I became a doctor. I was assigned to the Cruiser Britannia. What I could not understand was why the injured crew who came to my massage\u2026care\u2026would cry or fight to get away.\"\n\n\"Probably thought you were looking for their hearts,\" snickered Berry.\n\n\"I am well versed in human anatomy,\" replied Yu haughtily. \"I know exactly where the heart is.\"\n\n\"Great!\" exclaimed Lance. \"I am sure you will be a large\u2026uh\u2026fine asset to the Dildo.\"\n\n\"The what?\" asked Needa, not sure if she heard Lance correctly.\n\n\"The Dildo,\" repeated Lance. \"It's the name of our good ship that truly reflects our goals.\"\n\n\"Yea, like we're screwed,\" whispered DeKunt to Hump.\n\n\"Uh, sir,\" said Needa, taking in a deep breath for courage, which threatened to explode the front of her uniform blouse. \"This ship is one hundred and fifty years old. I have asked each member to check over their respective section prior to your arrival. Maybe we should listen to their reports.\"",
        "\"Good idea\u2026Ensign Cummin?\"\n\nYu picked up a datapad and, after looking at it, said, \"The medical lab is almost prehistoric by current standards. It can barely stroke\u2026handle one seriously injured person. Luckily, someone saw to it that we have an overabundance of medical supplies.\"\n\n\"Good,\" stated Lance. \"It appears that we are ready for any medical emergency. I know the Corps has great faith in your ability or they would not have sent you on this mission. I am sure they supplied us with what we needed. Ensign DeKunt?\"\n\nThe science lab is antiquated and the instruments are obsolete,\" stated Berry. The long range scanners go off-line with no warning and the short range sensors are questionable in their accuracy. We did get a burst transmission to the ship's computer of the Corp's most recent information.\"\n\n\"I am positive that the Corps has supplied us with everything we need to succeed. With the updated information, they probably felt that our science lab was redundant,\" stated Lance.\n\n\"Wow, man, are you in there?\" asked Aye.\n\n\"Of course,\" replied Lance. \"We are all in here, Ensign Hump.\"\n\n\"Heavy\u2026Like, man, apart from the tri-protective latex coating the establishment slapped on the outside, nothing inside has been changed,\" said Aye. \"Instead of tractor beams, we have Forward Artificial Retrieval Technology or F.A.R.T. It shoots out a white metallic fluid that sticks to the object we wish to retrieve. Magnetic harpoons in the cargo bays can then be fired to reel the object in. Our weapon energy beams from the Plasma-Mercury System or PMS, only cover the front three hundred degrees of the ship. Our rear protection comes from the KEG or Kinetic Energy Gas dispensers. Each engine is three times more powerful than we need and has no safeguards on them. Too much power and we rejoin the infinite universe as the cosmic dust that binds us all together\u2026nut, like, wow, man, we've been blessed with enough energy and supplies to last us ten years, fer shur.\"\n\n\"Excellent!\" exclaimed Lance. \"As I see it, we are more than ready to accomplish this mission, and bring peace and prosperity to the universe!\"\n\nThe four ensigns just stared at him in astonishment and utter disbelief.\n\n\"Like, wow, man,\" whispered Aye Wanna, breaking their trance.\n\n\"Everyone, back to your duties,\" ordered Needa. \"Sir, may I see you for a minute on the bridge.\"\n\n\"Of course,\" said Lance and followed after Needa's swaying buttocks to the bridge.\n\nAs soon as they were alone, Needa turned and asked, \"Sir, you do know why they sent us on this\u2026this\u2026ship into unexplored space, don't you?\"\n\n\"Of course, I know,\" answered Lance. \"The people who were on the lost ship need us and from what the Commissioner and the Personnel Director told me, we are the only ones available.\"\n\n\"Yes, sir, but their selection of the crew\u2026\"\n\n\"Oh, yeah, baby!\" cooed the ship's computer, without any trace of a British accent. \"Sensors are back on-line. Hey, Knockers! You and da john had better conclude your business 'cause we're gonna ram something!\"\n\n\"Front viewscreen on!\" ordered Lance briskly. \"Full stop!\"\n\nThe viewscreen clicked on, but instead of being filled with black space and stars, all it showed was a gray expanse with a large indented crater in the center. Before Lance or Needa could do anything, the entire ship was rocked by the impact and the viewscreens went black. A sound originating from outside the ship reverberated through the entire hull.\n\n\"AAARRROOOGGGAAAHHH!!!\"\n\nLance and Needa were propelled forward by the impact and fell over the pilot's chair. Needa's too tight uniform, already strained to its limits, ripped apart at all the seams to reveal her basketball size tits and cute round ass. The two of them landed in a tangle on the floor.\n\n\"Atwat to Hump,\" yelled Lance into his comlink as he was swatted in the face by a heavy set of fleshy globes. \"Full reverse!\"\n\n\"Oh, wow, bummer!\" replied Aye Wanna. \"The impact, like, broke apart one of the main power couplings. I'll need some help to fix it, fer shur.\"\n\nGet Cummin to help. Atwat out.\"\n\nThe ship was rocked by another series of tremors. Lance managed to get an arm around Needa's waist and grab a hold of the arm of the pilot's chair. Straining, he pulled her up and into the chair. A violent shudder throughout the ship almost threw her back to the floor. Lance, braced behind the chair, flung his arms around Needa and the chair. His hands gripped her massive melons to hold her in place. The ship lurched again, only this time Needa's legs began to slide out from beneath her. Lance, unthinkingly, reached down between her legs and pulled her upright, forcing two fingers into her vagina.\n\n\"Full reverse when we have power!\" commanded Lance, holding Needa in the chair by her tits and cunt.\n\n\"I\u2026oh, my!...I\u2026OH!\" gasped Needa as the tremors of the sip transmitted down Lance's arm to his fingers which were right on top of her clitoris. To get her mind off the sensations, she asked, \"Do you think he can help Hump?\"\n\n\"Yu Cummin?\" asked Lance.\n\n\"Not yet.\"\n\nHump and Cummin met at Power Nexus 3. One of the main power couplings had come apart at Power Nexus 2.\n\n\"Oh, wow, what a kludge of a system,\" exclaimed Aye Wanna as they both struggled to maintain their footing. \"We need to push the rod back from here and turn it clockwise to engage the flanges.\"\n\nThey straddled the one power rod which was back further than the others. Grabbing the red handles on the rod, they pushed and pulled it five meters back towards Nexus 2. Suddenly, the rod stopped with a metallic clang.\n\n\"Oh, wow, we're twenty centimeters short,\" stated Aye Wanna. \"Pull it back and we'll try again.\"\n\nThey pulled the rod back and shoved it forward only to have it stop short again with a clang.\n\n\"Oh, shit, man! I forgot to grease the end!\" cursed Aye Wanna. \"Can you handle this by yourself?\"\n\n\"Easily,\" replied Yu.\n\n\"Like, it may take several tries,\" stated Aye Wanna. \"Just keep shoving it back and forth until it seats all the way in and then turn it clockwise.\"\n\nAye Wanna pulled up a floor hatch and entered the crawlway. Crawling on her hands and knees, she traversed the ten meters to Nexus 2. As she entered the nexus, she could clearly see the disengaged end of the power rod. It was twenty centimeters long with a round, flanged plate behind the end. The rod was three centimeters in diameter. Aye Wanna grabbed a tube of rod grease and liberally coated the end of the rod.\n\n\"Alright, Yu,\" she said into her comlink. \"Like, it's done.\"\n\nJust then the ship shook violently again. Aye Wanna was spun around and fell to her knees. The rod shot forwards and then backwards, but not before the flanged plate caught a hold of her pants. Aye Wanna felt the rod pulling her backwards and she grabbed onto a pair of power distribution switches to keep for being pulled back. Unfortunately, this caused the flange to pull her pants down to her knees, exposing her shapely legs and creamy white butt.\n\nAye Wanna tried to catch her breath. Her knees were on the floor and her hands were gripping the distribution switches. Her eyes suddenly bulged out and she gasped as the power rod shoved forward, driving the greased end all the way into her pussy.\n\nHer eyes actually crossed as the rod rotated clockwise, tightening her pants around the flanged plate and making it impossible for her to get free. The rod pulled back, dragging Aye Wanna with it before thrusting forward again into her. Wap! Wap! Wap! Wap! Wap! Her velvety ass bounced against the plate as if it was a paddleball. The distribution switches clicked back and forth in her hands as her body rocked from the piston-like action of the rod. The entire ship vibrated from the fluctuating power going to the engines.\n\nFinally, unable to take the strain anymore, Aye Wanna's pants tore in half and ripped free of the flanged plate. The power rod popped out of her violated vagina and Aye Wanna collapsed with her head on the floor and her ass sticking up in the air. Yu, back in Nexus 3, pushed the rod forward again. The end of the rod, slick with grease and Aye Wanna's juices, slid easily into the coupling and locked into place.\n\nHer comlink squawked at her, but all Aye Wanna could do was lay there with her butt in the air and her thighs trembling. A couple of seconds later, Yu popped his head up from the crawlway.\n\n\"Are you okay?\" he asked Aye Wanna.\n\n\"Like, fuck, man\u2026like, fuck, man\u2026like, fuck, man\u2026\" was all she could repeat over and over again.\n\nYu flicked the distribution switches back to the on position. He then asked, \"Computer, what is the definition of fuck?\"\n\n\"Oh, my! I'm appalled by such language!\" exclaimed the computer in its prim and proper English voice. \"You should have your mouth washed out with soap!\"\n\n\"Aw, c'mon, honey,\" came the other computer voice of the speakers. \"Don't get your knickers bunched up in a knot. Tell him what fuck means. You know, that hard, throbbing, hot meat plunging\u2026\"\n\n\"Proper ladies and gentlemen do not use such language,\" argued the English voice. \"I would never\u2026\"\n\n\"Never!?! What? Fuck? Afraid those virgin pathways of your will get overheated? Fuck! Fuck! Fuck!\"\n\n\"Shhhh! hushed the English voice urgently. \"You'll wake her up and then we'll all be in a pickle. For your information, my pathways are the same as yours. You tell him what it means. I'm leaving.\"\n\n\"Well, honey, what's your question?\" asked the ship's computer of Yu.\n\n\"Uh, what does fuck mean?\"\n\n\"Fuck\u2026that is where the male of a species (if they have males) inserts his cock, dick, Johnson, penis\u2026into the female's (if they have females) cunt, pussy, twat, vagina to procreate\u2026or just for the fun of it.\"\n\nYu looked down at Aye Wanna. She was still muttering, \"Like, fuck, man\u2026like, fuck, man\u2026\" over and over. Yu's nose could easily pick up the scent of her sex.\n\n\"I will never understand humans,\" griped Yu as he stripped off his pants.\n\nHis bright-red cock slid out of its sheath as his plum-size balls dropped down. Aye Wanna gasped as furry hands grasped her hips and a large cock shoved its way deep into her wet slit to hit the top of her cervix. Before she could say anything, Yu pulled his cock almost all the way out before slamming it back into her again. That thrust drove the air out of her lungs and she felt a large round knob hit up against the entrance o her vagina.\n\nYu continued to fuck his cock deep into Aye Wanna. She gritted her teeth as the knob stretched her pussy wide apart before traveling up the length of Yu's prick to the tip. She gasped as she felt the knob expand inside her, tying her to Yu. Yu then really went to town.\n\n\"OH, WOW!!!\" cried Aye Wanna in delight and amazement as she orgasmed twice in quick succession. In her euphoric state, she thought, \"Like, I see where my karma is taking me on this trip.\"\n\n\"FULL POWER, SIR!\" yelled Needa as her sexual tension was reaching its peak from the vibrations of the ship being transmitted through Lance's fingers to her clit.\n\n\"Full reverse,\" ordered Lance, who continued to hold Needa in her chair and completely unaware of what his fingers were doing to her.\n\nThe ship rocked and shook, but did not seem to move.\n\n\"N\u2026N\u2026No good, sir!\" panted Needa. \"It's\u2026It's\u2026It's like we're held\u2026held by suction!\"\n\n\"Fart,\" commanded Lance.\n\n\"I beg your pardon,\" exclaimed an offended Needa as a loud raspberry sound ripped over the ship's speakers.\n\n\"Fire the F.A.R.T.!\" yelled Lance.\n\nNeeda's finger punched a button on her console. Gobs of white, slimy goo spurted out of hole at the front of the ship. The ship trembled and began to slide backwards. The final shaking of the ship set off Needa, who screamed and gripped her chair for support as she orgasmed. Her scream was echoed by Aye Wanna, who also orgasmed as Yu howled and filled Aye Wanna's womb with hot slippery sperm. All their noise, however, was drowned out by a tremendous roar reverberating off the hull of the ship.\n\nLance let go of Needa and sat down in his command chair. He twisted a knob on the console beside him. Wipers began to swipe across the viewscreen as twin jets of blue liquid sprayed onto the screen. Needa sagged in her chair to light up a cigarette.\n\nWARNING: The Surgeon General has determined that cigarette smoking is dangerous to your health.\n\n\"Shit!\" groused Needa, stubbing out her cigarette. \"Damn truth in advertising is getting everywhere!\"\n\n\"Check and see if anyone was injured,\" said Lance to Needa.\n\n\"Screw to the crew, casualty report!\"\n\n\"DeKunt to Screw, just rattled a bit.\"\n\nNeeda waited, but no one else spoke up.\n\n\"Screw \u2013 DeKunt, go check on Hump and Cummin. The last report I had on them was from Power Nexus 2.\"\n\nThe front viewscreen cleared and both Lance and Needa gasped at what they saw.\n\n\"Is that what I think it is?\" asked a wide-eyed Needa.\n\n\"Yes, a Grommon,\" replied Lance.\n\nGrommons or Space Dragons are one of the rarest space denizens. With the ability to travel in both realspace and N-space, these beings travel from system to system strictly using the power of their minds. They look like a gray Brontosaurus without the legs, but are infinitely larger. Ranging in size up to a large Consolidated carrier, this one was well over one hundred times larger than the Dildo. The Grommon are compared to humans the same way humans compare shit-eating bacteria to themselves. Attempts to study the Space Dragons, when one could be found that is, has always ended in failure. Aloof, with unfathomable powers and purposes, the Grommon remain a mystery to all who encounter them.\n\n\"Well, this is a mystery to me,\" said Lance as the Dragon's long neck swiveled around so it could stare at the ship. \"Is he smiling at us?\"\n\n\"Uh, sir, since we're behind it, I'd make that 'he' a 'she',\" stated Needa.\n\nThe Dragon cooed at the ship and then jumped into N-space, disappearing in the twinkling of an eye.\n\n\"You two in here?\" came Berry's voice from the crawlway to Nexus 2. \"Aye Wanna Hum? Yu Cummin?\"\n\n\"Already did,\" said the other two as Berry's head popped up through the hatch.\n\nBerry's eyes widened until it seemed that they were going to pop out of his head. His face turned bright red and he sort of gave a strangled cry. Yu stood up, looking around for danger. Unfortunately, he was still tied to Aye Wanna and pulled her hips up off the deck by his own cock.\n\n\"Whoa! Heel, boy! Sit! Sit!\" yelled Aye Wanna, who reached around to smack Yu in the snout. \"Bad dog!\"\n\nYu kneeled down quickly as Berry's eyes rolled back in his head. Both Aye Wanna and Yu winced as they heard his body crash back onto the crawlway.\n\n\"Berry? Berry? Like, wow, man, are you okay?\"\n\nBerry opened his eyes to see Aye Wanna staring down at him from the hatch.\n\n\"Yea,\" he stammered. \"I guess I got a little excited. Where's Yu?\"\n\n\"Like, right behind me,\" replied Aye Wanna. \"He still has his celestial staff stuck in my wonder of wonders.\"\n\nBerry's face turned white as his eyes rolled back again. His head clunked onto the metal flooring of the crawlway as he passed out again.\n\n\"Berry, wake up!\"\n\nBerry opened his eyes again to look up at Aye Wanna. With a groan, he lifted his head off the crawlway flooring and averted his eyes.\n\n\"Like, wow, do you do that often?\" asked Aye Wanna.\n\n\"Only in certain circumstances.\"\n\n\"You mean, like talking about sex type circumstances? Are you a virgin?\"\n\n\"Um, uh, I'll go tell the Lieutenant you are okay,\" said Berry quickly as his face turned red and he beat a hasty retreat.\n\n\"Tell him I'll be forward in five minutes,\" Aye Wanna called out after him. \"What's that, Yu? Berry, better make that fifteen.\"\n\nBerry hurried back to the bridge and promptly passed out at the sight of Needa and her massive mammories. Lance looked down at the prostrate body.\n\n\"Ensign Screw, it might be best if you get some clothes on,\" he said.\n\n\"Yes, sir, but the jump\u2026\"\n\n\"Don't worry,\" said Lance. \"I'll calculate it while you dress and you can check it before we jump. I'll need a damage report before we jump anyway.\"\n\n\"Aye, sir,\" said Needa, who left the bridge with her scraps of clothing.\n\nThe collision had dropped them out of N-space, a quasi-continuum where realspace distances were compressed, back into realspace. Lance determined the Dildo's position and recalculated the jump to the Tauk system. Berry started coming around as Lance was finishing up.\n\n\"How do you feel, Ensign DeKunt?\" asked Lance, helping Berry to his feet.\n\n\"Fine, but I seem to keep hitting my head on the floor.\"\n\n\"You'll be okay once you get you space legs,\" assured Lance.\n\nNeeda reentered the bridge. Her uniform was just as tight as the previous one. Berry swallowed nosily and hurried over to the science station to absorb himself in something else besides the straining fabric of Screw's uniform.\n\n\"Uh, Ensign Screw? No disrespect intended, but isn't your uniform a little tight?\" asked Lance.\n\n\"All of my uniforms are tight,\" replied Needa, a little cross. \"Someone put the wrong measurements into the Quartermaster's computer when I first signed up. I've been trying to get it changed ever since.\"\n\n\"Now, Ensign Screw,\" admonished Lance. \"No one would make a mistake like that in the Corps. I'm sure you have just put on a little weight since they first took your measurements.\"\n\nBefore Needa could reply, Lance's comlink chirped.\n\n\"Lieutenant Atwat here.\"\n\n\"Ensign Hump with the damage report,\" said Aye Wanna over the comlink.\n\n\"On the viewscreen, please,\" said Lance to Needa.\n\nNeeda huffed and sat down in the pilot's chair. With a flick of a button, the viewscreen lit up to show Aye Wanna in the Engineering Bay.\n\n\"Please report and\u2026\" Lance started to say and then stopped. There was the sound of a falling body at the science station. \"Where are your clothes?\"\n\nAye Wanna had on her silver circlet around her forehead and a short triangular piece of filmy cloth tied at her hips. Her mass of different uniforms was completely gone. Her hourglass shape, although well defined, still could not match Needa's voluptuous curves.\n\n\"Like, it's in my files,\" countered Aye Wanna defensively. \"I'm a practicing nudist.\"\n\n\"Oh, I beg your pardon,\" stammered Lance, now flustered. \"I know the rules and regulations state that you have to be in uniform, but it also states that one's religious rites are not to be impinged. I hope you will forgive my blunder. I have not had a chance to look in detail at everyone's files yet.\"\n\n\"Like, wow, sir, cool!\" exclaimed Aye Wanna with a smile. \"I see you are not tied to the hidebound, proletarian suppression. As for a damage report, the divine ways have seen to increase our knowledge without affecting us adversely.\"\n\n\"Huh?\" asked Lance, confused.\n\n\"No damage to report, sir,\" translated Needa with a snicker.\n\n\"Ah, very good,\" said Lance as he went over to help Berry to his feet again. Needa turned off the viewscreen. \"You need to see the doctor about your space sickness.\"\n\n\"I'm okay, sir,\" said Berry, looking down.\n\n\"Oh, come on. It's not that bad,\" joked Lance. \"He'll make you drop your trousers, stick something big and hard into your butt, and make you squeal like a pig. You'll feel better for it, though. Whoa!\" Lance caught Berry's arm when Berry turned white as a ghost and began to sway.\n\n\"Sir, I'll check in with Ensign Cummin when it becomes necessary,\" replied Berry.\n\n\"I'm sure you'll be fine after a couple of days out here,\" stated Lance. He turned towards Needa. \"My calculations are on the astro-computer. I'll be in my quarters if you need me.\"\n\nLance strode off the bridge. Needa and Berry looked at each other and then shook their heads.\n\n\"Is he for real?\" asked Berry.\n\n\"I'm afraid so,\" replied Needa. \"From what I've heard, he truly believes in the Space Police Corps and all of its ideals. The Corps can do no wrong. I can't prove it, but I've also heard that all of his missions have been successful and that all of them have been disasters. Don't ask me how they can be both. Besides, he's not the only strange one here. You're Bashful Berry, aren't you?\"",
        "Berry's face turned bright red and he opened his mouth, but nothing could come out.\n\n\"Rumor has it that you faint at anything of a sexual nature,\" said Needa. \"Is it true that the women on your old ship had a bet on how many times they could make you faint in one day and the winner guessed eighty-seven?\"\n\n\"No,\" said Berry hotly. \"It was only sixty-two. At least, I'm not a moron like Atwat.\"\n\n\"I wouldn't say he is a moron,\" said Needa softly looking at the data on the astro-computer.\n\n\"Why? What's that?\" asked Berry.\n\n\"How good are you at astrogation?\" asked Needa.\n\n\"Fair.\"\n\n\"When we, uh, hit the Space Dragon, we dropped out of N-space. We now have to recalculate out position and the jump to Tauk. How long would it take you to do that?\"\n\n\"From an unknown location? Probably two hours or more with the ship's computer.\"\n\n\"It would take me slightly over an hour,\" replied Needa. \"The LT did it in the ten minutes it took me to dress\u2026in his head.\"\n\n\"Oh, c'mon,\" sneered Berry. \"No one could do that! He's probably put us in the middle of a black hole.\"\n\n\"Hold on,\" said Needa as she began to check Lance's figures.\n\nBerry looked at Needa skeptically as she took bearing on distant stars and crunched the numbers. It was over twenty minutes before she looked up at him.\n\n\"Dead on,\" she said.\n\n\"You sure?\" asked Berry\n\nYes, I cheated by using his calculations and double-checked them against the star charts. He may be a goof, but he's a brilliant one.\"\n\n\"But is he going to get us killed?\" asked Berry. \"I don't trust anyone who isn't one hundred percent reliable.\"\n\n\"Like yourself? Hey, Bashful, want to feel my tits?' asked Needa as she inhaled. The fabric of her blouse stretched across her abundant bosom. The seams creaked and began to gap. Needa was rewarded by a faint moan and the satisfying thud of a body hitting the deck.\n\n\"Good nickname,\" she said aloud to herself. "
    ],
    "authorname": "JohnEvans",
    "tags": [
        "atwat",
        "big tits",
        "spc"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/space-police-corps-ch-01"
}