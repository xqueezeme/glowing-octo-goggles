{
    "title": "Ebb Tide Ch. 02",
    "pages": [
        "Editing magic performed by KJ24 and Shyqash, plus contributions by the regular gang of brigands and neer-do-wells.\n\nLow tide: The period between the ebb tide and the succeeding rising tide.\n\nThis tale is an espionage fantasy frequently under assault by reality.\n\nThe 'hero' of this tale might be considered a Libertarian, though the label means nothing to him. He is not completely sane (by some people's definition of the term).\n\n A List of the Principal Characters is provided at the end of the chapter.\n\n*****\n\n{A little taste of my un-reality, or 'Why mental health professionals avoid me'}\n\n\"I'm not paranoid. I do have a pathological hatred of surprises.\"\n\nThat was my well-thought out answer to a female lieutenant Naval Psychiatrist asking me to be introspective about my particular view of the world. It has since become my Motto -- my Creed. \n\nFor that session, she had started by asking what I did when I came back to base -- what did I do when I first stepped into my personal quarters? I explained I didn't have a home; I lived \"on base\", which is to say that I used whatever space was temporarily assigned to me. Okay, what did I do to unwind when I entered my room? I explained to her that I prepped for the next mission. Did I relax? Why would I relax? I was on a military base; I had military stuff to do.\n\nWhat was so important that it couldn't wait until I'd unwound a bit? Mostly classified stuff I wasn't sure she had the necessary clearance for me to talk to her about. What did I do when I finished these unspeakable acts? She found it hard to believe that there was always more stuff to do. But out in the field was not the place to realize I'd forgotten to make the proper preparations ahead of time. \n\nDid I leave the base? Not if I could help it. Why? Sigh...I repeated that I had stuff to do. Didn't I want a private life? I first made sure she was talking about having a physical relationship with a woman, not drinking with the guys, or engaging in internet masturbation. I then confirmed I had sex with a red-headed woman that I met at a cougar bar three weeks earlier. Yes, I went there specifically to engage in nameless, guilt-free intercourse before going on my latest mission.\n\nDid I find that sort of thing fulfilling? I guessed so. I got what I wanted. What about the woman's feelings? I asked the shrink if she understood the concept behind having a 'One Night Stand'. I never felt the need to create an emotional bond with a random stranger. I could tell that frustrated the psychiatrist. \n\nShe tried for an oblique attack on the old refrain. She wanted to know what I would do if I checked into a random hotel room. What would I do to relax and unwind there? Like any rational individual, I responded by requesting the specifics of the hotel and the room -- things like:\n\nWhat time of day was it? What day was it? Was it close to any major events/holidays that would increase the capacity of the place/ increase foot and road traffic? You needed to know what sounds were out of place if you were reading, watching TV, or sleeping. Yes, I slept that lightly.\n\nHow close was my car? How close was a major thoroughfare? Was there a back alley? Did the property look out over uncultivated terrain? Was it sitting on a high point, or in a low point? How many landmarks looked down on the location? All basic tactical stuff.\n\nWhat floor was I on? Only idiots took rooms on the first two floors. Anything over the fourth meant you could be trapped...by a fire, or an attacking drug gang fueled by machismo and mind-altering substances. Regulation sleeping platforms had enough sheets so you could rappel down from a third or fourth story balcony/window using only the bedding. I could tie a knot faster than she thought possible. I'd practiced. I wouldn't use towels; I might need them later. Besides, the ratio of knot to length was poor.\n\nWhat was the lay out of the room? Where were the windows? How solid were they? When, if at all, did the sunlight penetrate the room? Why? Shooting into the Sun messed with your aim. Also, if the door was unusable, you needed to know how quickly you could exit an available window.\n\nWhat were the walls made of? You need to know this so you could predict what kinds of rounds would penetrate and how much residual stopping power those rounds would have. Also, you might need to bash your way into a room on either side of you in case the rear window was too small, or covered.\n\nHow close was the room to a fire escape? Not only was that safety-conscious, you need to know from how many directions trouble might come.\n\nHow close was the room to an ice machine? Those things attracted people and made noise.\n\nThat was when she stopped me and asked me if I felt I was unusual. I had to explain to her that on my last assignment I had to snap a man's arm off and ram said limb into his screaming father's mouth, as the father was ALSO trying to kill me. So I caused him to choke out his last moments of life with son's arm in his throat. \n\nWhy did I do something so extreme? My knife was half way across the room, still busy ending someone else's existence, all three of my guns were empty and I needed to kill the son anyway. I tried to explain to her that I had an unusual job that demanded unusual skills, working unusual hours and dealing with unusual enemies.\n\nSo yes, I was unusual and had no problem with that. Did I want to be normal, she asked. I 'qualified' her into a philosophical corner on what 'normal' meant. Not having spent a second inside a college didn't mean I was unread, or ignorant. The basics of psychology were just one part of the many skill-sets housed in the repertoire I felt every Hospital corpsman needed.\n\nDid I think people were out to get me? Sure I did. I was an American -- strike one. I was in the US Armed Forces -- strike two. I had eliminated people that other people loved and missed, so personal revenge against me was a motivation I had to accept as valid -- strike three. So yes, there were people who were out to get me.\n\nDid I believe that there was someone outside that very room ready to off me? No, I felt safe and at ease. I didn't bother telling her that two of my buddies were in the waiting room and that if there had been trouble, I would have heard about it.\n\nDid I regret killing people? No. Why would I? I didn't care if they were bad people, or simply someone in the wrong place at the wrong time. I valued my life and the lives of my teammates far more than the life of some complete stranger. Targets deserved death. Why, she asked. Well...the Pentagon told me they deserved to die. That was a good enough for me.\n\nWas I worried about committing acts that could be construed as War Crimes? Of course not. She wisely explained me that 'I was just following orders' was not an acceptable defense. I snorted at her naivet\u00e9. Being charged with a crime didn't bother me. I wouldn't hang around for any kangaroo court. \n\nThe SERE (Survival, Evasion, Resistance, and Escape) program was a required course for anyone assigned to a SEAL team. It was only logical that I'd already made contingency plans to apply that knowledge if some dick-less bureaucrat ever decided to dildo-fuck me over. I could tell that my intention to use my military training to avoid civil confinement wasn't what she wanted to hear. \n\nNext up: did I like killing people? No. 'Me' killing people meant something had gone wrong. I was the team's hospital corpsman. I was not the #1 choice of the team leader to kill a person. They had specialists for that. Did I have any moral qualms about taking a sentient life? None. I had moral qualms about letting any member of my team die or get hurt. \n\nDid I know how many people I had killed in defense of my team and in the completion of our missions? I didn't know. I never kept count and doing so wasn't part of my job description, though I was sure it was in some computer file somewhere. I could tell her that I had distributed 1,037 Ibuprofen in my career to date; because being accountable for my medication was in my job description.\n\nWas there any type of person I wouldn't kill? Pregnant mothers, the elderly, the very young? No. I had once kicked over a solid wooden crib, replete with quilts, onto a live grenade that had been tossed into the room where I was tending to a wounded teammate. She told me that wasn't something to be ashamed of. Then I told her the baby was still in it. I knew if I removed the infant, I couldn't kick over the crib in time. \n\nThe psychiatrist looked appalled, so I lied to her and said it had been a dud -- the baby lived. It was not a dud, the baby died, my teammate lived and that was what mattered to me. That was one of the very rare times I lied to any superior officer. She looked like she was having a terribly rough day, so I made a conscious decision to not make it worse. She could also take me off of active duty and that wouldn't do either of us any good.\n\nHad I considered jumping on the grenade myself? Of course not. I had a perfectly good crib right next to me. Besides, it was a Dutch V-40 mini-frag. Those bitches have a four second fuse. I was kneeling as it came through the window. I would have had to run around the crib to do so. It would have blown up before I could get to it. \n\nEven if I had been able to throw myself onto it, the blast would have either killed me, or wounded me to the point I was confident that I wouldn't have been capable of resuming my duties. To be fair, I had never even considered that possibility ~ the killing myself thing.\n\nThen she thought she'd be clever and try to trick me. If I had been kneeling and tending to a wounded buddy, how had I known what kind of grenade it was? Hadn't I just heard the noise and reacted instinctively, instead of of risking myself? No. I had exceptional peripheral awareness, I had a clear view of the window it came through and the V-40 is distinctive in its size and shape.\n\nShe asked me to describe to her what was on the shelf behind me without turning around. I did so, though I wasn't sure what that had to do with peripheral awareness. She had me draw a picture of a V-40 to scale. I did, she measured it and then dropped the subject. The rest was routine ~ the same old -- same old. I knew we were both relieved when she ushered me out of her office.\n\nThe next day, my Lieutenant laughingly informed me I had barely skated by on my Psych Eval. Just like all the other times. Again, it was 'recommended I take up a hobby that didn't involve violence, or medicine. I reminded the Lt. that I had already taken up Botany ~ nature had created thousands upon thousands of flora that could fuck with the human body and I wanted to know them all. \n\nI didn't mind being told to do something else. But I was running out of SEAL stuff to do. I was already in line for High Threat Protection Security and Advanced Demolition training (two separate things). I was already qualified on Surreptitious Entry (B&E), Advanced Special Operations (no comment), Tactical Communications and Language School -- three times. I didn't want to be a sniper (I was trained as a spotter), a jump master, dive master, security driver, or instructor.\n\nMy teammates knew I was 'abnormal' and didn't seem to mind. I'd gladly 'seconded' every member of the group, except my Lt. and my MCPO (Master Chief Petty Officer). Not only was I not in the normal chain of command, I didn't want the responsibility. I never complained, never got wounded and didn't seem to mind being shot at.\n\nI was always the first one to get to a wounded teammate's side, screw the shit-heads shooting at us. Being hit never entered into the equation. My guy was in danger and it was my job to make sure he got home alive -- end of story. I brought all my guys home...which has always been my proudest accomplishment. \n\nFor simply doing my job, I was gifted with a sizable collection of medals, ribbons, badges and insignia in my 12 years. A few of the ones they gave me, they took right back -- National Security reasons, they said. They promised the tokens of my Country's esteem would be returned to me one day. I didn't care. \n\nI didn't do what I did for the specious metals, my Nation, my Commander-in-Chief, my Admirals, my Captains, the US Navy, or any of the families involved. I certainly didn't do it for the pay and benefits. For a dozen years, my teams, be they fellow recruits, trainees, Marines, or sailors, were the center of my life -- they were all that mattered to me.\n\nThat was probably the reason I was rootless. My only relationships were with the people in my immediate life. I made a lousy pen-pal. I really didn't care what you did when you left my life. I would remember you, but you'd been replaced on the team and my life went on. One day, a different guy came calling. I could have re-enlisted for another term -- technically I was still mentally and physically fit enough. \n\nHe offered me a unique job opportunity -- a chance to do new and (more) unusual things. I said good-bye to the Navy and joined up with the CIA. Six months later, I was killing people -- no uniform required. For two and a half years, I took lives and I saved lives. I was a damn good combat medic. If a person dropped into my lap, about to expire, I would save them.\n\nOnce, while operating in my cover identity, I was asked to join one of those bleeding heart NGOs (Non-Governmental Organizations). I was told about how wonderful it felt to help out the less fortunate, the people truly in need (in his estimation) and all for a pittance (which was equally idiotic in my view, since I'd grown up poor and hated it). I responded with one question; \"If a terrorist had a gun to a child's head, threatening to kill her (random gender generator) and he was behind the dude and had a scalpel, would he slit the man's throat?\"\n\nHis hesitation was all the answer I needed. It reminded me of my oddness. I never understood people saying 'killing is wrong' and 'violence didn't solve anything'.\n\nViolence and killing certainly solved a bunch of my issues. In the end, it made me rich too. Suddenly I had money. I was 33 years old without any biological relations I cared about, without a regular job I could talk about with...well, anybody; and I realized that from that point forward, I'd be doing the same thing over and over again until my luck ran out, or my warranty expired at age 45.\n\nI'd never be happy as a real member of the CIA. The Special Operations Group (SOG), the unit I had been with for the last three years, were part of the CIA, but not in the same culture. An Analyst with a Master's degree in something useful went over the details and figured out that something had to happen to someone...and thousands of miles away, my little family made it happen.\n\nI didn't know all the people who worked out that decision. I met a few from time to time, but I didn't care to know most of them. They had their jobs and their lives and I had mine. We surreptitiously intersected, which was fine by me. Then along came a Golden Opportunity ... equipped with a Golden Parachute, so I bailed. I had now found a regular job that I knew I would be good at and, after living half my life out of a suitcase, I had a physical location to call home once more.\n\nIt took all of six weeks before I was back to my old pattern. That bothered me. I couldn't tell if it was because I was subconsciously more comfortable living outside the bounds of polite society, or that I might actually have started caring for normal people...just for being people. I had no one I could talk to about this conundrum.\n\nMy Mother and Father had moved to Florida from Las Vegas six years ago. In all my years away, I had written them all of two letters and the second one was punishment duty given to me by my RDC (Recruit Division Commander -- the guy/girl who turns (wo)men into squids). My older sister was married to some schmuck living in Chicago with three kids I'd never met in person. \n\nMy oldest brother was dead, gunned down in Mexico...trying to save another person's life. Go figure. My other brother, also older than me, was still living with Mom and Dad. That fucker was 35 years old, had never held a job for more than six months, never lived on his own and his only noteworthy accomplishment was graduating high school.\n\n{My Current Circumstance}\n\nWhat did I have? Well, what I didn't have was my desired population of ONE living in my fortified hermitage sanctuary. What had gone wrong? For starters, I found myself giving shelter to two women. I hadn't even wanted a pet, much less something that talked back, or snored. I valued my privacy, my peace and quiet. My home had one small bathroom and one queen-sized bed in my roughly 1400 sq. foot bungalow. (It had been bigger, but I had made some security-minded renovations.)\n\nLatest mistake first: there was 26 year old Dabney Curtiss who, three days ago, had been a cherished memory of my youth. Back then, I had been her makeshift guardian, a friend of her older sister Sammi, who was my age. She'd been a quiet squirt of a girl of 11, the last time I saw her...15 years ago. She had been a short, thin tomboy who thought I was great (there-by proving how young she was). I was her first crush.\n\nNow she was searingly hot. She was what 'wet' dreams were made of. She was a high-priced call-girl; an elite sex-trade professional...or had been, before I beat up her pimp and brought her back to the attention of the Vice Lady of Las Vegas -- Circe. \n\nThe pimp, Pablo, was dead now. I hadn't seen him die, but I'd left him in the company of men who were equal to the task. They'd both hated Pablo and also had this crazy notion that I had influence in the Vegas criminal underworld.\n\nWorrying about Pablo's resting place wasn't an issue for me. Before I left him, I'd also blown off his nuts, so continuing to live probably hadn't been a top priority for him...collecting his testicles had been. Sadly, the idiots I'd been temporarily allied with had been right. I did have a link to one of the Vegas Crime Lords and Ladies.\n\nYeah...back in High School, through no fault of my own, I had taken a knife wound meant for her chief lieutenant, her daughter - Reagan Cho. How had I ended up so unfortunate? I had stupidly saved another person's life even earlier...which folded into my OTHER God-damn problem which resulted from my first tragic deviation from my well thought out future.\n\nThat first guy I saved? His name was Ford Pharris and he was my age (now 33). I met his family: Lloyd Pharris, his monstrous, fucking-evil father (now 56), who I utterly despised; Wynn, his cute younger sister (now 31); and his step-mother- Georgianna 'G' Norquist Pharris (22 when I was 16, now 39) who was now back to being 'G' Norquist since her divorce two years ago. \n\nI ended up accidentally buying the house across from the duplex that G had been renting and was being evicted from. I didn't know it was G when I chose to intervene -- it was a case of my not liking civilian law enforcement and I witnessed the two cops bullying the woman. My mouth opened and I blurted out an invitation for G to move in with me for absolutely no reason I could understand.\n\nG had been a trophy wife for ole Lloyd way, way long ago. Age had been kind. G was smart enough to know her primary asset was her looks. Nature had been exceedingly generous (Lloyd would only surround himself with the very best ~ he liked buying people, then destroying them) and she rewarded Nature by taking meticulous care of her features and physique.\n\nG was a statuesque, natural honey/amber blonde who tanned nicely and was a bit on the slender side (for my tastes), which accentuated her D-sized breasts. Sag? Sure. She was almost forty and the only elective work I'd known her to have was getting her smile perfected nearly two decades ago. In hindsight, I decided that I liked her then because she'd accepted her role as arm ornament for a creep ~ doing what was necessary to survive. ",
        "She was never flirtatious and I couldn't imagine her ever being disloyal to her husband ~ she was too smart to think she could get away with that. She was polite, even kind, yet never a false friend. She use to wear her hair straight and longer. Now she wore it cut to shoulder length with cropped bangs. It highlighted her cheekbones and grey eyes. \n\nI also thought the look made people respect her intellect a smidge more...if your eyes ever made it up to her face. She had that kind of cleavage that lured you in, saying 'rejoice in your woodie, Mate. Are you thinking titty fuck, motor-boating, or are you a going to fixate on my thick nipples and large, dark areolas for some in depth suckling?\n\nI wasn't a monk. Beautiful women didn't intimidate me, nor had I ever desired any woman more than common sense allowed. I wasn't going to ravage either of my guests. I could shamelessly masturbate in the bathroom with the best of them. And outside of those two occupying more space in my home than I did as well as snoring, my life was completely on track.\n\nSnoring...yeah...I'd bunked with men, so I was used to night-noises. In time, I'd get used to Dabney making little whimpering sounds interspersed with stuttered-meeps and G's more traditional low, steady snore which was no louder than a cat's purring. Dabney, ignorant of my predilections toward utter silence, was my current problem.\n\nI had bought a queen-sized bed because I accepted the possibility that I'd have female companionship over on rare occasions. I had given my bed to my two female refugees and put a portable cot in my living room. The sofa wasn't made for sleeping and I wanted to be alone. Dabney hadn't figured that out, or maybe she was afraid of not being near me, her rescuer. She was soundly asleep, on my sofa, 18 inches away from me.\n\n{The second day}\n\nMy phone vibrated; again, I didn't like noise, random or planned. It was 6 a.m. and I had a few things to do before I met Lorenzo, my mentor/trainer at my new job, MedicWest. I had an errand to perform, a strict time table to keep and Dabney was sleeping on her stomach. I'd woken up when she exited the bedroom and started coming my way. I watched her through nearly shut eyes. Feigning sleep is a useful knack to pick up.\n\nShe was very scantily clad. Her divinely-inspired ass was tightly contained in faint white bikini briefs with dozens of small smiley faces on it. Her upper-wear consisted of an UNLV (University of Nevada -- Las Vegas) \"Go Runnin' Rebels!\" scarlet jersey cut off between her belly button pierced with a pearl link ( pearl was her June birthstone) and the bottom of her spherical mammalian bountifulness. The name on the back of the jersey read \"Care-Free\". \n\nUgh. I had work to do that involved keeping those two safe -- safer. My home was my fortified sanctum -- my paranoid love nest. I slipped on some gray track pants and a shirt, then double-checked my security before sneaking out the back door. I used the fading night to slip over the back wall and jog to my desolate back-up house. I retrieved my two bits of damage control material (the badges of the two Robbery/Homicide detectives I'd bludgeoned two nights ago), then returned home.\n\nDabney was still sound asleep on the sofa. G was curled up around one of my body-pillows on my bed, also in a blessed dream-state. I left them a few simple instructions ~ 1) Don't steal my car (again). 2) Don't call a taxi to come for you until you are two blocks away from the house, and only then if it is an emergency. 3) Don't make any personal phone calls. 4) Don't answer the door, or the phone. 5) Don't open any windows. 6) Everything you need is in the house.\n\nAfter a quick, healthy breakfast, I was off on my pre-work errand. I had to meet with one Lt. T. (Trixie) Crowe Buchannan of the Las Vegas Metropolitan Police Department (LVMPD) at 400 South Martin Luther King Blvd. \n\nOnce more, using my pirated police log-ons, I had researched officers' case management files (not the individual cases, just the amount of hours put in, caseloads vs. cases closed) to decide which person was both effective, relatively honest and likely to be in the office before the regular 8 a.m. start time. Access was easy. I had a badge and no sane person broke into the Internal Affairs Bureau (IAB) of the LVMPD.\n\nIt was cubicle hell. I detected only two person in the moderately-sized office space. I knew the face of the woman I was looking for. When the other detective on the floor saw me, I asked for Lt. Buchannan and the man showed me the way. Again, no one enters into this place without a damn good reason.\n\n\"Detective Lieutenant Crowe Buchannan?\" I went through the formalities. She had the quick-eyed, coltish gaze of a classic over-achieving misanthrope. Her hazel eyes, set in an oval face, were dissecting me even as she answered. She brushed a stray strand of brown hair out of her face. Most of it was contained in a ponytail that dropped to the bottom of her shoulder blades.\n\n\"Yes, and who would you be?\" she said. Her eyes flickered to the computer screen, most likely making sure that it was in fact 7:35 a.m.\n\n\"Vance Vardanyan,\" I gave a tight grin. \"I want you to do something for me.\"\n\n\"Mr. Vardanyan,\" she clipped off each syllable as she stood, \"Internal Affairs only investigates matters involving the LVMPD. If you have a complaint, we have a procedure...\" That was when I dumped the two badges on her desk and a flash drive.\n\n\"These two drunk detectives stumbled into my yard Sunday night and dropped these before driving off to God knows where,\" I lied. \"I was wondering if you knew why they were attempting to harass me. While you are at it, could you please find out why Assistant Sheriff Mahaulu wants to speak with me, as I am unaware of any criminal proceedings aimed my way.\"\n\n\"I...perhaps I should call him,\" she suggested sarcastically while her inquisitive mind kicked into high gear. \"What is your name again?\"\n\n\"Vardanyan -- Vance. That is v-a-r-d-a-n-y-a-n -- v-a...\" I spelled it out.\n\n\"Vance,\" she interrupted. \"I've got it. What is the nature of your complaint?\"\n\nAt least she was allowing me to cut through most of the crappy paperwork.\n\n\"I don't like police. I don't like police showing up at my door at night. I don't like police yanking me around for no good purpose,\" I explained, \"and threatening me with false charges to force me to meet said Assistant Sheriff. Can I count on you to investigate this, or are am I going to get another round of late night law enforcement abuse of power?\"\n\n\"I need more details,\" she pressed.\n\n\"Good plan. Check out the flash drive. Investigate. I've got to go to work now ~ second day on the job,\" I grinned. \"Best of luck to you, but I have to go.\"\n\n\"You can't drop some vague accusations in my lap and walk away,\" she grumbled.\n\n\"Watch me. As I said, I don't like cops and I have a job to get to. Do what you wish,\" I backed off. \"I've done my civic duty for the week. Good-bye.\"\n\n\"I will need to contact you later,\" she slowly followed me. \"What is your number?\"\n\n\"I'm the only V. Vardanyan in the phone book,\" I waved bye-bye.\n\nOh, I'd lied to her. My listed number went to my cut-out, my address went nowhere and our communication would be done on my time-table, not hers. Her time-table? She had two pictures on her desk -- an older photo of a man in a LVPD uniform and the same man, much older, with Lt. Buchannan on the day she graduated from the LVMPD Recruit Training Academy aka 'The Academy'.\n\nShe had a Bachelor of Arts in Criminal Justice degree and had been working on her Masters in Professional Master of Arts in Criminal Justice for three years. After graduating from the Academy eight years ago, she'd made sergeant in two years and Lieutenant two years after that. Her last two years had been spent in IAB.\n\nI made it to MedicWest early and in time to answer a call from Lt. Buchannan, \"Hello TC (Trixie Crowe ~ why would parents do that to a kid?).\" I had a thing for referring to people by their initials when able. Again, paramedics are licensed.\n\n\"Lt. Buchannan,\" she tried to correct me. \"Your public phone number is an answering service and your official address belongs to someone who claims not to know you,\" Crowe was steamed. She was also interested in my case, which was all I wanted.\n\n\"Okay,\" I responded.\n\n\"Okay?\"\n\n\"Yes, I agree that my phone and address don't lead back to me,\" I sighed. \"Will there be anything else?\"\n\n\"How about a little bit of cooperation, Mr. Vardanyan?\" she grumbled.\n\n\"Did you look at the flash drive?\" I winked to Lorenzo. 'Girl problems', I mouthed. \n\n\"Yes...it is a recording of six officers doing inappropriate things. Maybe if you would come down and fill out a formal complaint, I could move on this,\" she suggested.\n\n\"No thanks. As you have seen for yourself, I have reason to distrust the LVMPD. It is your workplace, not mine. This is your mess, I'm merely giving you a chance to do the right thing and inquire why in a forty-eight hour period I attracted so much unwarranted attention,\" I reiterated the case I'd dumped in her lap. \"Start at the beginning and work your way up.\"\n\n\"I need more than this,\" she hedged.\n\n\"No you don't. You have two cops hassling me and a friend, searching me without cause, two more stumbling around my house after hours and finally two pleasant interactions with yet two more of your patrol officers, the ones who are inviting me to go talk with the Assistant Sheriff,\" I volleyed back.\n\n\"What are you trying to do?\" she hrumpfed.\n\n\"I'm trying to tell Lloyd Pharris to back the fuck up, Lt. Trixie,\" I told her. \"He sent those first two to do his dirty work. The next two were sent to intimidate me. The third two were running private errands for the Assistant Sherriff.\"\n\n\"I'm giving Mr. Pharris a stern reminder that he doesn't rule this city, or the whole police force...or does he?\" I said.\n\n\"Lloyd Pharris?\" she murmured. It wasn't fear -- it was caution I heard in her voice. \"I'm going to need more than this to...\"\n\n\"Do you job and I'll do mine,\" I looked over to Lorenzo who was indicating we needed to take off. \"I've got a service call. Lives need saving. Have a nice day.\" I handed the phone to the equipment officer, swept up my gear and followed my new partner out the doors. We had a call. It sounded like an allergic reaction.\n\n\"You've got one messed up social life,\" Lorenzo nervously chuckled.\n\n\"Tell me about it,\" I laughed. \"Tell me about it.\"\n\nLorenzo didn't stop trying to get inside my life. He was a talker and was the type of guy who wanted all his constant companions to be his friends and projected my refusal to accommodate him as a personal failing on his part.\n\n\"Hey Vance,\" Lorenzo called out to me as I was signing the receipt for the gear I'd returned at the end of shift. Paramedics handled all kinds of substances which were controlled and/or illegal ~ thus valuable. I'd been able to check all my supplies and fill out the paperwork blindfolded for years. Lorenzo, despite five years at this job, still took three times as long.\n\n\"Yeah?\"\n\n\"Me and the wife are having some friends over Saturday for a cookout,\" he said. \"I figured that you might not know anyone...\" That was somewhat desperation on his part.\n\n\"Sure. What time and can I bring my roommates -- two of them?\" I replied.\n\nSince Lorenzo was expecting yet another rebuff, my immediate acquiescence caught him by surprise.\n\n\"Sure. Ah, my wife has a younger sister and she has a friend,\" he grinned. Now he was trying to hook me up. He was doing me a favor I hadn't asked for, in an arena I had shown no interest in. I decided to not burst his bubble by mentioning my roommates were both women.\n\nI was rewarded for making the next three days riding with Lorenzo much easier by spotting a LVMPD patrol car lurking in wait for me. They thought they were being sneaky. My next gift was on my passage side door -- someone had jimmied the lock. I imagined something illegal had been put in my car. Cool. Opening the door had activated the internal surveillance system. I also had two GPS locators and a satellite phone hidden away, but that wasn't relevant at the moment.\n\nI took my time. I had an older looking car and I lived in Las Vegas, so my starting the engine, then standing alongside it while the air conditioning blasted away at the stifling heat that all car develop, wasn't all that unusual. Making a phone call was equally innocuous. The cops were more than willing to wait for me to make it onto W. Delhi Rd. to bust me. \n\n\"Hello?\" Dabney's voice came over the phone.\n\n\"Didn't I leave instructions to not answer the phone?\" I reminded her.\n\n\"Oh...sorry, yeah,\" she moped.\n\n\"That's cool. You need to drive G into work tonight. A bit of trouble has come up and I might be late,\" I said.\n\n\"Oh. Is there anything I can do to help?\" she perked up.\n\n\"Yes. Figure out what you want to do for dinner,\" I told her. \"I'm going to need to do some de-stressing and you know the downtown area far better than me.\" I didn't want to dine out. Giving Dabney a purpose after she'd stayed in the house all day was a concession I had to make to promote my domestic tranquility.\n\n\"Okay, I've got three or four places in mind,\" I could feel her warmth coming through. \"Here is Georgianna.\" The phone switched hands.\n\n\"Hello V? Is there a problem?\" she was nervous.\n\n\"Nothing I can't handle. Go to work. We'll talk when you get home tonight,\" I assured her. \"Take care. I have to go.\"\n\n\"Bye,\" she said. Letting a woman have the last word was a useful expedient. \n\n\"Officer Crowe Buchannan,\" I requested from the operator. It took me a few seconds.\n\n\"Buchannan,\" she grumbled. Definitely not a happy person.\n\n\"Vance Vardanyan here. Are you still looking into that matter we discussed?\" I said politely.\n\n\"This has been a shitload of trouble you've dropped on me,\" she groused. Then, \"Yes, I'm still looking into this.\"\n\n\"Gosh, thanks for doing your job, Lieutenant. I need to download you some more video and then establish a link because I'm about to get busted by officers Rothschild and Shell,\" I informed her.\n\n\"What? Why?\" she flipped from pissed to attentive.\n\n\"Let's find out together,\" I took my seat and shut the door. I flipped my system to broadcast and cut back to the appropriate footage.\n\n\"Here it comes,\" I told her. While I waited, I double-checked shirt collar spy cams. They looked like onyx buttons and were very difficult to detect. From past experience, that would be enough.\n\nIt showed Officer Shell opening my passenger door -- the system hadn't activated until one of the entry points was breeched -- and looking around. At the 53 second mark, he pulled out five packets of what I believed was Meth and stashed it under the driver's seat. He had on gloves but had brushed his head along the rear-view mirror -- trace hair evidence. All of that was captured on video. I put my car in gear and started to pull out.\n\n\"Oh crap,\" she muttered. \"When can you come in? We need to talk about this.\"\n\n\"As I said, I am about to get busted. I should be in Clark County Detention Center within thirty minutes. Meet me there,\" I suggested. She didn't say something stupid like 'are you going to let them arrest you.' I couldn't avoid them, even if I sat in the parking lot.\n\n\"My partner and I will meet you there,\" she grunted. \"Don't do anything stupid.\"\n\n\"I already am,\" I joked. \"I'm putting a single ounce of faith in a cop not being a fascist fucker. If I wasn't in a peaceful frame of mind, I would have dealt with this myself.\"\n\n\"Don't do that,\" she insisted. \n\nI pulled out on to W. Delhi and here came the cops, with a brief flash of lights and a siren wail. Buchannan could hear that. I pulled over, fully prepared to play my role while the video from five camera's recorded and broadcast the events for posterity and IAB's Trixie Crowe. The came at me from both sides, hands resting on the butts of their pistols. Both of my hand were on the top of the steering wheel.\n\n\"Mr. Vardanyan,\" Rothschild addressed. \"Step out of the car carefully. We have been informed that you are transporting drugs in your vehicle.\" \n\n\"I am carrying a firearm and a knife,\" I announced loud and clear before complying. What followed was rote. She found the usual nail clippers, phone and wallet plus my FN45 Tactical pistol. I had my Concealed Carry Permit as well. I had a service knife (licensed too).\n\nShell asked me if he could search my car, I acquiesced ~ in theory I thought my car was clean, right? I was already cuffed and searched by the time Officer Bart Shell made his discovery.\n\n\"What do we have here?\" he gloated, waving five baggies from the far side of the car. He had searched from the passenger side while Rothschild pulled me to the back of my ride and did her thing.\n\nAny response on my part was a waste of words so I kept quiet.\n\n\"Trying to sick Internal Affairs on us was stupid,\" Rothschild whispered in my ear. \"What are these?\" she inquired as the serious pat down began. There went my knife.\n\n\"Arm braces,\" I stated. \"I hurt my arms a few years -- landed hard and broke the bones. If I don't wear them for a period of time and am active, they start to really hurt.\"\n\n\"Sucks to be you. They won't let you keep them in jail,\" she mocked. It would have been bad if I had told her the truth. The leg braces came next. Intelligent people called them forearm and shin guards. They gave me a serious edge in hand-to-hand combat. \"You are going to lose these too.\" Shell was busy calling the 'bust' in and setting the ground work for my sentencing hearing.\n\nRothschild Mirandized me, made sure I knew my rights and I responded by invoking my Right to Council. After they got me in the back seat of their cruiser and started on the trek to the Clark County Detention Center. My blas\u00e9 attitude was concerning Rothschild and angering Shell.\n\n\"So, you think you are hard-core?\" Shell grumbled. What the Hell...\n\n\"I think? Let's keep to the things I know. I am a paramedic. You two are not hired killers. I know both of you are corrupt, arrogant and delusional in believing you are anything more than pawns, Officers Shell and Rothschild,\" I countered. \"You were given a few simple jobs to do and failed to do any of them.\"\n\n\"I don't know,\" he chuckled. \"You are about to go to lock-up. Putting a jailbird like you behind bars is our job.\"\n\n\"Stupid,\" I smiled at Shell, \"you have failed all across the board. You failed to uphold your oaths to protect and serve, you failed to achieve competence on multiple levels, and you are about to fail to provide for you families.\" \n\n\"Let it go, Bart,\" Rothschild cut off her partner's angry retort. The rest of the trip was made in silence. I hadn't gotten under Rothschild's skin, but Shell was letting his emotions cloud his common sense. Exiting the car was rough. With the banging up that was going on, I figured the Corrections Officer was probably part of the problem. I didn't care.\n\nThey three of them got me to booking when the shit hit the fan. I was the first one to realize that my freedom was nigh. The bookings officer was busy cataloging my stuff when she stopped parroting off my possessions as they were handed over and looked past us. Lt. Crowe Buchannan and another female cop, R. Kerr where coming our way.\n\nTheir arrival wasn't the only bad news. Silently those two had flashed their ID's to three other Corrections officers then motioned our way. My peripheral awareness was top self. Since IAB doesn't go after suspects brought in for 'sales weight' drugs charges, they knew one of the cops were about to get it. Rothschild sensed the disturbance at the last second.\n\n\"Officer Bartholomew Shell, you are under arrest,\" Buchannan announced. \"No sudden moves.\" Shell almost got himself shot as he made a rapid half-turned. The two IAB officers and three other officers drew their pistols and pointed at him/us. The Corrections officer who had been my Welcome Wagon Lady slowly backed away.",
        "\"For what?\" Shell blathered.\n\n\"Face away, place your hands spread apart on the counter and spread your legs,\" Trixie Crowe demanded.\n\n\"What is this about?\" Rothschild asked nervously. She backed two steps away from Shell as well.\n\n\"Manning-up is about to have a whole new meaning for you, Bart,\" I chortled. \"See, you just signed in the drugs you planted on me. Felony drug possession, evidence tampering in a felony and filing a false police report involving a felony. That amounts three serious charges you've hung on yourself, Bitch.\" \n\nI got what I wanted. Shell's anger got the better of him, he reached for his piece and Crowe shot him in shoulder from the side. That was an ugly, ugly wound. A projectile could nick a lung. \n\nBart bounced off the property Plexiglas shield protecting the Property room, then collapsed -- screaming.\n\n\"Don't move!\" Trixie Crowe's partner yelled at Rothschild. I was seized with an idea.\n\n\"She had nothing to do with this,\" I stated firmly to Crowe. \"It was all Officer Shell.\"\n\nShell was momentarily incapable of defending himself. Rothschild showed me a stunned look. Crowe and two other officers rushed Shell, shoved him onto his stomach and handcuffed his arms behind his back, which had to hurt like Hell. Lt. Buchannan began reading him his Miranda -- d\u00e9j\u00e0 vu, you Mother-fucker.\n\n\"Officer Rothschild, care to un-cuff me?\" I politely requested.\n\n\"What?\" she and Trixie Crowe's partner both replied.\n\n\"I'm a licensed paramedic,\" I explained. \"I can help.\" The partner, R. Kerr, looked to Trixie Crowe...TC...who nodded. Rothschild saw the gesture and put her key to my handcuffs.\n\nI got to work. A senior corrections officer showed up as did one of their orderlies. I took their stuff without asking and proceeded to make sure that Shell would be able to put both palms on the shower stall while he was being ass-raped.\n\n\"Why in the fuck did you shoot me?\" Shell gasped at TC. She smirked, pulled out her phone and replayed the evidence I'd sent her for his viewing pleasure.\n\n\"You... bastard,\" he seethed at me. \"You set us up.\"\n\n\"No, you set yourself up,\" I calmly related. \"If it hadn't been for your partner, Officer Rothschild, you might have gotten away with it too.\" Kerr had already removed Rothschild from the immediate vicinity, so she couldn't contradict my lie. Buchannan also decided to keep mum. \n\nShe had already figured out what I was up to. Dividing up members of a criminal conspiracy and getting them to turn on one another was basic cop procedure. It was also the basis for tactical misinformation.\n\n\"Bitch,\" he gasped in pain. \"I want a lawyer and my union rep.\"\n\n\"Play it that way if you wish, but our evidence is very compelling and I'm going for a full-court press on this matter,\" TC threatened.\n\n\"It gets better,\" I grinned at TC. \"I'm going for a civil suit against Officer Shell personally. I'm going to bankrupt him and put his family out on the street.\"\n\n\"Mr. Vardanyan...I have no input in a civil manner,\" TC studied me. \"I can assure you that Las Vegas' IAB will fully cooperate with you in this matter.\" She knew I was turning the screws. This time pain helped Shell restrained his outburst. He glared his hate. I ignored him. That was the conclusion of the first Act. \n\nBy saving G, I had stepped into what Lloyd Pharris felt was his arena -- G's life and the destruction he planned for her. He could be clever, yet he hadn't considered me worth any effort. He had unleashed a conceited bull my way, and I had disrespected him ~ mocked him. I had predicted his reaction -- show of force, threats via proxies and finally, corruption of the law.\n\nI'd dealt with this shit from him fifteen years ago. I hadn't been skilled enough to defend myself then. This time it was different. I had waved a red cape in front of Lloyd Pharris, he had goaded the bull and now he was looking at some embarrassing blowback. If he thought this was a warning shot, or a spasmodic reaction, he was terribly mistaken.\n\nI wasn't teaching him a lesson. Despite his keen legal mind and convoluted thinking, he wouldn't take someone like me seriously at this point in our war. That meant I had a slim window of opportunity to cause some real damage. I already knew how. What I needed was time and that meant soaking up some of these attacks.\n\nOh, I had to answer some questions about what might have inspired Officer Shell's actions. He would remain Officer Shell until the LVMPD and District Attorney determined what disciplinary actions matched up to the charges filed. The nature of this investigation was expected: attack the victim. Destroy my credibility and then some spin control and Shell would get a slap on the hand -- a good cop who made a forgivable mistake. \n\nThe problem for them was me. Yes, I had said I hated cops. Yes, I had an encounter with Bart Shell (I was now refusing to call him 'officer'). He had showed up at my domicile for no clear reason and later that night pulled me over at a traffic stop. Since I had retrieved all my 'non-weapons', I worked out a little electronic diagram for the two new IAB detectives (Rick Elkin and Kanani Kaimana) assigned to this case. \n\n\"An unknown source sent those two random officers to my door -- no charges. Randomly pulling me over in a traffic stop -- no citation. Another unknown source randomly sent them to search my car and find drugs there that all the evidence indicated this random officer planted there. How many 'unknowns' and 'randoms' could any sane person be expected to accept?\"\n\nThey went after all the video evidence; \n\nWhy did I have such a set-up? I lived in a free country and had they missed out on the fact that I hated cops and didn't trust them for what proved to be very good reasons.\n\nCould any of the video have been altered? \n\nWhat? By me? No. By this investigative team? Yes, I believed those two were altering their ethics.\n\nNo. Could the video have been faked?\n\nI doubted it, but even if it had been, his wife had been faking for years and he'd never figured that out either. I didn't bring up that the other guy was clearly divorced -- missing wedding band on a finger he rubbed plus his wardrobe's cleanliness was subpar. Neither guy got angry.\n\nI simply parried their insinuations until I took a bathroom break. I called my buddy in the Netherlands with some work for pay. She edited (not altered) everything from Monday afternoon's encounter with Rothschild and Shell to my very recent interrogation. \n\nShe was going to distribute it to various media and legal sources, starting with the ACLU, the Nevada Attorney General's Office, KSNV (NBC-3), KVVU (Fox-5), KLAS (CBS-8), KTNV (ABC-13), KHDF-CA (Una Vex Mas-19), KELV-LP (Entravision-27), KMCC (MundoFox-32) and KVCW (CW-33). She wasn't a fan of our PBS.\n\nThat taken care of, I walked back to the interrogation room to await her call, and deal with these assholes a little longer. Then my lawyer showed up. That was rude of her. I hadn't called for any legal eagle and definitely not her in particular. Her name was Alesia Morton. After a bit of wrangling about me not being under arrest, the two 'other' IAB detectives left us alone.\n\n\"Mr. Vardanyan,\" she began.\n\n\"Credentials,\" I barked. She jumped slightly.\n\n\"I'm here to help you through this matter and to help clarify your possible situation,\" she carried on.\n\n\"Strike one. Credentials,\" I repeated.\n\n\"I don't think you appreciate...\"\n\n\"Strike two. Credentials,\" I said yet again. \"Believe me,\" I said in a low, deadly voice, \"if your next actions are not to show me who you are and who you work for, you will not only have failed in your mission, you will have disappointed me -- shaken my faith in the American Legal Process.\"\n\nHer mouth opened and closed like a fish out of water.\n\n\"I...\" she gulped. My gaze hardened. She pulled her designer wallet out of her very expensive purse (she had an equally pricey briefcase) and showed me her Nevada BAR card. It didn't show me who she worked for. I still examined it, gleaming every bit of useful data I could.\n\n\"Are you a Girl Scout too, or a member of PETA?\" I remained steady. \"Those two and your BAR card are all in the 'that wasn't what I asked for' category. Care to try again?\"\n\n\"I thought you would appreciate some free legal counsel,\" she tried to take the offensive.\n\n\"Alesia, do you really want me to answer that?\" I lightened my mood slightly. For those next five seconds, she thought she was getting somewhere.\n\n\"Of course,\" she smiled, \"If I'm...\"\n\n\"If nothing. You are already ethically compromised, selling your integrity to people you know are wicked. That makes you a whore and a very na\u00efve one at that. Whores never work for free,\" I smirked. \n\n\"You are a whore. Shut up,\" I let the mirth in my eyes die a chilling death. \"You are a whore. You were sent here to prostitute your profession. For some reason, you think you are smarter than me. You may be. I don't know and don't care.\"\n\n\"Since you haven't flashed a corporate card -- you are clearly corporate -- and you were given access to me without protest -- those two detective's faux-outrage was amateurish and insulting -- you work for Lloyd Pharris,\" I laid out my reason. Criminal law was most likely not her favorite subject. Her face and body gave too much away.\n\n\"Mr. Pharris...\" she tried to regroup.\n\n\"Shut up and listen, Alesia. Your boss is a sick, perverted piece of work. I know him. He doesn't know me. Because you are kind of cute, I'm going to give you your two, and only two, options. You can walk away right now, quit the firm and hang your shingle elsewhere.\"\n\n\"Or, follow your instructions and confirm for me you've pledged your body, soul and future to a monster,\" I stated.\n\n\"What if I simply leave, Mr. Vardanyan?\" she bolstered her courage. Deep down in her little mammal brain, she knew I was a killer Wolf and she was a rabbit. She was trying hard.\n\n\"You can't. Leave and you fail. Do you really think the partners at your law firm will understand that someone like me couldn't be fooled by a pro like you?\" I pointed out.\n\n\"Fine,\" she tossed her past-shoulder length brown hair, put her wallet back on her purse and made to leave. As she stood in the open door, she looked back and me and smirked. \n\n\"We'll see how a court-mandated psychological hold influences your willingness to play ball.\" I gave her an overjoyed closed-lipped smile then winked. She left in a huff. My phone rang as the two IAB idiots came back in. The girl in Holland gave me the thumbs up. It was time for me to go.\n\n\"Night gents. I've wasted enough of my time here,\" I stood and waved good-bye.\n\n\"Where to you think you are going?\" the lead schmuck stood to bar my way.\n\n\"Sorry Leslie (a random gender neutral name),\" I slipped past him. He put his hand on the door, trying to shut it. He should have worked more on working out in a gym instead of typing away on a keyboard. \n\n\"You are IAB, not criminal investigators. That would make your restraint of me rather problematic. This whole building is wired for sight and sound, so your current choices are very limited. As I said -- night gents,\" I calmly related as I slipped out the door.\n\nTheir pursuit was short-circuited by...\n\n\"Mr. Vardanyan,\" Lt. Trixie Crow greeted me. \"Just the man I've been trying to see.\" She let her gaze flash over my shoulder at her 'buddies'.\n\n\"Talk as you walk, TC,\" I greeted her with a nod. \"I'm out of here.\"\n\nShe was seriously frustrated with the morass I'd thrown her into. I counted myself lucky that she was such a pernicious bitch. Fate was finally repaying my idiocy involving G and Dabney.\n\n\"Sure,\" she turned and walked at my side. \"Refer to me as Lt. Buchannan.\"\n\n\"No. I can see that all those footprints on your forehead haven't improved your looks, or outlook,\" I joked.\n\n\"You are really damn annoying,\" she groused. We stepped into the elevator.\n\n\"Property Room?\" I looked at her. She glowered then hit one of the buttons. \"If you were under the impression that I am out to befriend you, I'm not.\"\n\n\"Why did you decide to take a colossal shit on my career?\" she reposed. \n\n\"Do you believe honesty is critical to any relationship?\" I countered. She was annoyed alright.\n\n\"Yes.\"\n\n\"Then I'm glad we aren't in a relationship, TC. I'm not going to open up to you. I'm not going to be sympathetic. I asked you to do your job. That is all there is,\" I informed her.\n\n\"Fine...asshole,\" she remarked as we exited on the bottom floor. \"Who are you? What are you?\"\n\n\"I'm Vance Vardanyan, the paramedic. Why do people find that so hard to believe?\"\n\n\"You used to be in the Navy...\" she tried to draw me out. It didn't work. \n\nI remained impassive through the process of me getting my gun and knife back. The rest of my belongings had been returned because they had to unless the charged me with something. Weapons they could hold on to until I decided to leave...like I was now.\n\n\"Yes, I was in the Navy,\" I said as I secured my two dedicated-to-lethality tools. I could kill people with all kinds of things common in a normal room, or with my hands.\n\n\"Smart-ass...\" she grumbled. \"Your service file ran right into the Great Wall of the DOD (Department of Defense).\" \n\n\"Enlisted US Navy, January 1999 -- Honorable discharge -- September 2011. Hospital Corpsmen...Marine Expeditionary Unit...a passel of qualifications...and a lot of blank spaces. Were you some sort of black-ops soldier?\"\n\n\"The navy has sailors, not soldiers. I was a Naval Corpsman,\" I sighed. \"If I did something that the DOD blanked out, there was probably a good reason behind it.\"\n\n\"Okay,\" she allowed. \"What did you do after you left the military?\"\n\n\"I worked as an agronomist,\" I replied. \"I have an Associate of Science Degree in Botany.\" \n\nThat was sort of/kind of true. I had numerous online credits, but I'd never completed all the required non-core curriculum classes. I was still awarded the degree, due to 'extraordinary circumstances'.\n\n\"So you are a medic who studies flowers on the side?\" she narrowed her eyes.\n\n\"So what happened to your parents?\" I switched things around.\n\n\"What makes you think anything happened to my parents?\" she frowned.\n\n\"The man in police uniform on your desk would be too old to be your father, but you are close to him. An older version is out of uniform in your Academy graduation picture. No rings. You're nit-picky, abrupt and barely keep tabs on your looks. You are beyond attentive -- you are obsessive,\" I continued. \n\n\"I imagine most men find your abrupt, aggressive style to be intimidating. You aren't trying to prove anything to anyone else, which suggests you are battling internal demons. I'm guessing it was something traumatic with your parents. Since you aren't a traffic, or patrol officer, I believe it was beyond criminal related.\"\n\nA long gap in the conversation ended with us at her car.\n\n\"Who are you?\" she was truly curious now.\n\n\"I'm a guy who wants to get my car and go home,\" I told her. \"I don't know where you people stuck my car. Is it on the side of the road on Delhi St., or has it been towed someplace?\"\n\n\"So there is something you don't know?\" she huffed. I shrugged, pulled out my phone and checked my car's GPS. Sure enough, it was close-by aka towed.\n\n\"It is over there,\" I pointed across the street. \"Do you want me to walk it?\"\n\n\"Get in,\" she grunted. In I got, and off we went.\n\n\"I don't understand you, but I will,\" she promised herself.\n\n\"That's not your job. If I become your hobby, you are bound to be disappointed,\" I warned her.\n\n\"Does anyone like you? You get off on being obtuse,\" she countered.\n\n\"Like me? Only if they don't know me,\" I joked. \n\nThat was wrong. The only people who liked me were the ones who knew me. I didn't interact with strangers in any meaningful manner if I could help it.\n\n\"Since you are either ignoring the obvious, or trying to wear my alibi down, I will repeat. I don't like cops,\" I restated. \"Today's activities have done nothing to change my attitude.\"\n\n\"I helped you,\" she reminded me.\n\n\"No. You did your job,\" I reposed. \"All I did was dump information in your lap. I didn't make any of those cops corrupt. Since IAB wasn't addressing the issue of their corruption, I forced your hand. I aimed the watchdogs at the lawbreakers then let nature take its course. Had you dealt with this last week, we wouldn't be sharing our mutually disagreeable company.\"\n\n\"Why do you hate cops?\" That question by TC aroused the impound guy's concern.\n\n\"Why wouldn't I?\"\n\n\"Cops help people?\"\n\n\"I don't want your help,\" I grinned. \"I want you and the rest of the fraternal order to leave me alone.\"\n\n\"You help people. Don't you want people to like and respect your profession?\"\n\n\"Not really. What's the point? I am not likely to ever see them again. I do my job because I like it, not because I want children to give me Teddy Bears, or have junkies credit me for them finally going straight,\" I said. \"Honestly, I think you and I are alike.\" She mulled that over.\n\n\"I think you are right,\" she gave a depressed groan. \"That's pathetic.\" I signed some papers, retrieved my car and got ready to part ways with TC.\n\n\"What are you doing for dinner?\" she inquired. The vexatious cunt was asking me out. She was more desperate for male companionship than I thought.\n\n\"I have dinner plans with a friend,\" I answered. She assumed it was a dodge. \"You are welcome to come along.\"\n\n\"Where are you meeting them?\" \n\n\"I'm going home, picking them up -- their choice of restaurants tonight,\" I failed to let her know the 'them' was another woman.\n\n\"Fine,\" she nodded. \"I'll follow you to your place.\" That was reasonable. She didn't ask for a real contact number and she verified that she'd been officially taken off my case. A dedicated professional like TC would never cross the officer-suspect line. I didn't try to shake her and I didn't call Dabney to warn her because that would have been cruel -- making her sit there in my place, afraid to answer the phone, but bored out of her skull.\n\n(Dabney and Trixie)\n\nTo me, the best part of the night that far was the look of fury on TC's face as I headed for the door to my home. Ah, the news outlets had finally gotten around to ask the LVMPD to comment on the data packets my contractor had anonymously dropped in their laps. Dutch Girl was worth every penny. \n\nShe also possessed strong anarchist tendencies, which was another reason for me to trust her. Helping governments and corporations were mortal sins in her book. She only liked me because I'd saved her older brother's life and helped her evade justice. She felt she owed me and I was loath to dissuade her of that opinion. She also felt she could trust me, which she could.\n\n\"What have you done?\" TC snapped as she rushed to catch up. I didn't reveal my code to the door's lock while I answered.\n\n\"Is this your investigation anymore?\"\n\n\"No, but...\"\n\n\"But nothing,\" I cut her off. \"If you still think this case is about you punishing bad cops, let me clear up that for you right now. It isn't. It isn't a matter of me not trusting you -- I don't. It was a matter of you knowing how pernicious this matter is and who it touches. It turns out you are the best person for the job. That is not what your bosses want. They want this problem to go away.\"\n\n\"That's very cynical -- is this what you are truly like?\" she murmured. She was caught off guard by Dabney.\n\nDabney threw herself into my arms, wrapped her body around me and attempted a French kiss. My lips rejected her attempt, so she settled for multiple smaller kisses.\n\n\"V, I missed you so much,\" then...\n\n\"Who's that?\" the both echoed.\n\n\"Dabney, meet Lt. Trixie of the IAB,\" I motioned the cop's way. \"TC, meet Dabney, my childhood friend.\" I recognized the female body language exchange -- 'Whore' vs. 'Cop/Pig'. \n\n\"You failed to mention you have a girlfriend,\" TC grew down-right frigid. I imagine she was prejudiced toward any man failing to live up to her rigid standards.",
        "\"You never asked. Had you asked, I would have told you it was none of your business and Dabney isn't my girlfriend -- she is a girl who is a friend. She has had some personal difficulties, so I'm letting her crash at my place until her life becomes less complicated,\" I opened up a tiny bit.\n\n\"Let me get my sandals,\" Dabney turned around in her super-tight, body flattering jeans and flounced over to the sofa. My manhood grew to 'main mast' proportions. I had this bizarre idea that she'd painted those pants on. That was not where I needed to be focused on at the moment. I entered my domicile, held the door for TC, then shut and locked the screen door unobtrusively. No need to freak the cop out.\n\n\"Get you something to drink?\" I asked Trixie Crowe. She was studying my living room.\n\n\"What is the cot for?\" she pointed at the collapsible bed I had stood against the wall.\n\n\"Oh, that's where Vance sleeps,\" Dabney let her words drip with honey while her eyes shot solar flares at TC. \"He doesn't sleep with me, or Ms. Norquist. We use his bed.\"\n\nTC's eyes flicked to me before dropping a heaping helping of condescension on Dabney. \n\n\"Are you gay?\" TC mumbled.\n\n\"No, he's all man,\" Dabney finished putting on her sandals, then hopped up swiftly enough to put a good deal of bounce in her awesome rack. \n\nDabney wasn't dressed like a whore, yet she couldn't help acting promiscuous and inviting. She started to snuggle next to me.\n\n\"I'll take some water,\" TC requested.\n\n\"Dabney?\"\n\n\"I'd kill for a good, dark beer,\" she teased me. The only alcohol in the house has a more utilitarian purpose. \"V8 please, V.\" I nodded and off I went.\n\n\"So, are you really a cop?\" Dabney asked. The way she used 'cop' made it sound like an insult ~ as in 'so, you say you have chlamydia?'\n\n\"Are you old enough to drink?\" TC shot back.\n\n\"I'm 26,\" Dabney retorted. TC hadn't been giving a compliment. She'd been insinuating that Dabney was being immature. I showed up with the drinks, in glasses, because I prefer to drink from clear glasses whenever possible.\n\n\"Thank you, Mr. Vardanyan.\" TC.\n\n\"Thanks Babe.\" Dabney.\n\n\"Mmmm...this water tastes...tasteless,\" TC observed.\n\n\"I filter all my water -- not a fan of parasites, toxic chemicals, and ground animal bits,\" I stated.\n\n\"The city filters its water,\" TC defended her hometown.\n\n\"Name the five common chemicals they treat the water with? The type of screens they use? How many cycles do they use to flush out contaminants and what is the water to particle ratio that they deem acceptable?\" I tested her.\n\n\"I don't know,\" she confessed. \"Do you?\"\n\n\"Yes.\"\n\n\"Of course he does,\" Dabney rallied to my side for no better reason than to piss TC off.\n\n\"I know because they give tours of the waste and water treatment facilities. All you have to do is ask them,\" I enlightened her.\n\n\"V is one super-smart guy, and he saves lives,\" Dabney rubbed up against me. I doubted Dabney was a nymphomaniac. Sex had been the currency of her life for nearly a decade. Offering up her sexuality for security was her stock and trade. I counteracted that by ruffling her hair as if she was that ten/eleven year old shy kid I used to know. \"Oh, by the way, Dear, how was your day,\" she tacked on.\n\n\"Nothing to write home about. A few bumps, bruises and bad drug reactions,\" I recalled. \n\n\"Let's go out to eat,\" Dabney moved along. \"Is she coming along with us?\"\n\n\"I don't think so,\" TC changed her mind.\n\n\"Trixie Crowe, I'm not dating Dabney, I'm not dating you, and I'm not dating G -- Ms. Norquist,\" I told her. \"Dinner is dinner.\"\n\n\"Okay,\" she reluctantly agreed. \"Where are we going?\"\n\n\"Las Vegas Mini Grand Prix Family Fun Center,\" Dabney sung out. She was clearly psyched about going to a massive arcade complex even though this sort of place was not one of my favorite venue. TC was staring at me.\n\n\"Let's go,\" I shrugged.\n\n\"You'll have fun, Grouchy,\" Dabney teased me. \"So TC, have you ever been there?\"\n\n\"Not since I was nine,\" she snobbishly regarded Dabney.\n\n\"Well...I want to go and Vance needs to unwind, so we are going,\" Dabney sniped. \n\nI put an end to the sniping by issuing an authoritarian command to pile into my car. I put Dabney in the back seat with the suggestion that she could lean forward and rub my shoulder, play with my hair and tickle my ear. Since Henderson is on the South side of Las Vegas and I lived on the north side, we had plenty of time to talk -- ugh. It took Trixie Crowe all of two minutes to start laying into my house.\n\nI had the sneaking suspicion that she thought I was paranoid. I used my standard first line of defense argument: it is better to be prepared and never have a crisis than have a crisis and not be prepared. The fact that she was going out to dinner with me within twelve hours of meeting me spoke volumes against me being a true paranoid. Like most intelligent people, she settled on the idea that I was odd.\n\nDabney was dying to tell TC about our shared history over the past 72 hours, but she was smart enough to know that her story would have too many holes that TC could fill in; things like me blowing up Vegas Fantasies and disposing of Pablo, her old pimp. Instead, she began talking about growing up in the city.\n\nThat mollified TC somewhat. It confirmed that I was also a native ~ I admired her distrustful nature ~ and got her to open up. Then we collided with the iceberg.\n\n\"Buchannan...police...wait, were your parents gunned down by drug dealers?\" Dabney blabbed. TC went rigid. Clearly, I was the only one in the dark. I chose to err on the side of knowledge.\n\n\"What happened, Dabney?\" I spoke softly. Dabney had noticed her faux pa too.\n\n\"I...ummm...TC...I mean, Ms. Buchannan...do you mind?\" Dabney inquired sympathetically.\n\n\"It doesn't matter,\" she grunted. At that point, I would have changed the subject.\n\n\"Your father was an undercover narcotics officer...he was involved with some really important case, but some gang-bangers tracked him home...to your house...\" Dabney worked her way through a difficult recollection. \"They killed your mother and burned your house down too.\"\n\n\"Not gang-bangers,\" TC grumbled.\n\n\"I...the news...\" Dabney stammered.\n\n\"All the news that is fit to print, doesn't mean what you think it means, Dabney,\" I stated. \n\n\"Huh?\" \n\n\"It means there is a gap between what happens and what makes the news,\" I explained.\n\n\"It was Hermosa Pena,\" TC said in a very flat voice. I'd never heard of the guy. That didn't mean anything to me, but I'd never been in the drug crowd and Las Vegas was a big place. \"Two of the killers were gang-bangers. They gave his name up. Pena was shot and killed by the LVMPD evading arrest. Case closed.\"\n\nThat was the point where I knew she was lying, knew she didn't want to talk about it, knew there was more to the case and knew she hadn't let it go, both emotionally and professionally. 'This was not my problem' rang hollow. I was taking on too many people's problems.\n\n\"Is that why you are in IAB?\" I asked.\n\n\"What?\" Trixie looked my way.\n\n\"Nothing,\" I sighed. No words were exchanged for several seconds.\n\n\"I'm sorry,\" Dabney apologized. TC shrugged. Emotionally, the women were moving in different directions. It was not a big deal; I had learned multitasking and situational awareness in a very rough school. \n\nTry being rushed by five different armed assailants from three different directions in a disorganized assault while shoving a syringe full of adrenaline into a comrade's heart because I was having a personal disagreement with Death over his misconception that he can take my guy. If I hesitated more than a few seconds, all my efforts at CPR would have been wasted. \n\nIf I didn't start shooting people, they were going to kill both of us. In that case, I drew my .45, shot the closest, then the most exposed. That bought enough time for me to shove the needle in, remembering to not put the 'just fired' gun on any of my buddy's exposed flesh. Seven seconds of CPR later, I shot the bravest one, then the one who thought running around a confined space with a loaded RPG-7 was a good idea.\n\nHe spasmed, pulled the trigger (the safety had been disengaged), the grenade went flying into the ceiling over his head. The last guy was fried by the back-blast and then had chunks of the upstairs fall on his head. After stabilizing my patient, I sprinted over and finish off that last guy. He'd been concussed, but I still viewed him as a threat. \n\nI made him a 'post-threat' before prepping my teammate for evacuation. Seconds later, my MCPO called me up to see what the explosion was about. \n\n\"I should have Royce (the wounded man's call-sign) stable within the minute (my first priority). Five dead. Declaring our exit route secure seems to have been prematurely optimistic,\" I relayed with all the zest of trimming a hangnail.\n\nI heard chuckling from several of my mates. They'd been worried about Royce and my blithe tone eased their concerns. Balancing two women, one who wanted to sulk and the other, who wanted to unwind in a childish manner, was a walk in the park in comparison. It was also a learning experience. Good cops and good whores share a surprising number of traits.\n\nBoth have to put distance between themselves and the misery they witness. Both have to lie convincingly and notice when others are lying to them. Both have to be alert for conscious and subconscious violent behavior. They differ in how they respond to these situations. Cops look for an advantage. Whores look for a way to mollify the threat.\n\nI could tell TC was studying me, evaluating my words and actions, then reevaluating them as I alternated between engaging her and Dabney. Dabney was trying to make me happy. When that didn't work, she elected to accept the attention I was giving her. She knew I was trying to make her happy, rewarding her for not fucking up all day...yeah...\n\nDabney also took comfort in the fact that I was sexually responsive to her and not to TC. That was what she wanted -- to bridge the gap between the teenage boy she once loved and the creature in front of her now. The more humane I could pretend to be, the more she could ignore my carefully concealed menace. Pimps used subliminal, and direct, coercion to keep girls in line.\n\nShe was deluding herself that this would only be the face I showed the outside world. To her, I was her protector once more; lethality that warded her, not hurt her. In the way of women, she convinced herself that this ruthlessness within me would never be turned her way. Sammi couldn't help her ~ she had her own children to worry about now. I was all Dabney had left. Lucky for her, that particular delusion was based in reality.\n\nTC was a different type of woman. Like Dabney she had been burned by life. Dabney was immersed in the emotion game. TC built up a wall around herself to keep the game at bay. She was unhappy alone, yet less unforgivingly miserable than anywhere else. If I had to make a guess based solely on my experience, it was something -- some promise -- her father made before he died; that unfulfilled promise was a betrayal she could not forgive.\n\nIt wasn't something horrible. It was probably \"I'll see you on Sunday\" and then Sunday never came. My psychological training was primitive. Trauma was what I knew well. After Dabney and I had reveled in two hours experiencing the childhood we wished we'd had, we elected to finish off our night tag-teaming a 40 oz. Slushy. TC decided to offer me an opening.\n\n\"What did you do in the Navy?\" she questioned me again. \n\nI knew I was changing in the same way I'd always changed. I was doing what I needed to do to survive. The truth was, I couldn't stay here and survive on my own. Abandoning Dabney wasn't even something I was considering. The same went for G. It wasn't how my mind worked. Besides, Lloyd wasn't going to let go until he was dealt with.\n\n\"Hospital Corpsmen (TC's frowned deepened) -- Marine Corpsmen -- SARC 'Special Amphibious Reconnaissance Corpsmen' -- SEAL teams -- DEVGRU 'United States Naval Special Warfare Development Group', though you will find no evidence of that and I'll deny it if you ever bring it up again.\" \n\n\"For the past three years, I was with the CIA's SOG -- 'Special Operations Group' which I will categorically deny as well.\" Trixie Crowe wasn't frowning, though she remained dour.\n\n\"That's a lot of 'specials',\" Dabney whispered.\n\n\"Did you kill many people?\" TC asked.\n\n\"Yes.\"\n\n\"Did you ever break the law?\"\n\n\"Yes.\"\n\n\"That's not how I do things,\" TC stood up and shook her head.\n\n\"Tell me about your mother and father's murder,\" I remained still.\n\n\"Are you going to drive me back home, or do I need a cab?\" she glared.\n\n\"Come on, Dabney,\" I tapped the younger woman's hand. \"Let's go.\" We drove away in silence. Dabney was heavy on the affection. She sensed the disturbance coming. \n\nJumping out and running away wasn't going to work for her either, so she curried favor with me instead. I made sure to pet her hand and played a little thumb-tag.\n\n\"Why do you call Dabney, Dabney,\" TC inquired, \"while I'm TC and G is G?\"\n\n\"Memory cues,\" I answered. \"Before I was trained how to organize my mind, I knew Dabney, so now I think of Dabney as Dabney. G was always G.\"\n\n\"I'll rarely call you Lieutenant Buchannan because you aren't a lieutenant in any branch of service I respect, or an authority of any kind, in my book. Constantly calling you 'cop' would get on both our nerves. Your name is Trixie Crowe so I call you TC,\" I responded.\n\n\"Stop doing it. I don't like it.\"\n\n\"I don't care what you like, or dislike. As I keep telling you, I don't like cops. Now I don't like you as a person either,\" I let her know. \"Pain, I understand. Your pain making you stupid is something I don't need.\"\n\n\"What the hell? You don't know anything about me,\" she snapped. Dabney grew worried, so I squeezed her hand.\n\n\"I've seen enough to realize I don't want to know anymore, TC. You are more fucked up than I can handle right now. I gave you a shot and you disappointed me,\" I said.\n\n\"Fuck you! I opened the case on those officers,\" she growled. \"I showed up at the Detention Center in time to get your bacon out of the fire.\"\n\n\"Had I thought you incapable of doing your job, I would have chosen someone else to do it instead,\" I told her. \"Your failing is as a human being, not as a law enforcement agent.\"\n\n\"Oh, so I was supposed to hear about your glorious service record then pour my heart out to you?\" she seethed.\n\n\"You don't date much, do you?\" Dabney muttered just a hair too loud.\n\n\"Shut up, Whore,\" TC started to turn on her. I know how to hurt people in numerous ways that leave little, or no mark. I had also studied acupuncture which wasn't relevant at the moment. I used my hand to chop down on a spot above her left leg. It kicked forward into the bottom of the dashboard quite painfully.\n\n\"Ow!\" she gasped.\n\n\"TC, you have decided you would rather be on the outside, looking in. You don't get to talk to Dabney that way. I don't, G doesn't and Dabney doesn't refer to herself that way and we are the only three opinions that matter,\" I cautioned. \"I didn't tell you my background to get into your pants, or your head.\"\n\n\"I told you my career history to give you a chance to make an informed decision about solving your life's crusade. You chose to be the same friendless bitch you've always been, so that's that.\"\n\n\"You hit me...\" she complained as she rubbed her knee and shin.\n\n\"So? What are you going to do about it?\" I replied. She had to think that over.\n\n\"I'm not afraid of you,\" she simmered.\n\n\"Then you are an idiot,\" I told her. \"Your only protections are your badge, your gun and your reliance on my good behavior. I don't give a fuck about your tin, I can kill you before your hand touches your hip holster and I'm not known for being even a decent human being,\" I said. \"Worse, you now have a clue to what kind of person I can be and you still are acting moronically.\" We finished the drive in a renewed stillness.\n\nDabney wanted to drag me inside the house. A confused, frustrated, pissed-off female cop with a gun was in our driveway. What she saw as a bad thing, I saw as forward progress. I'd put a chink in Trixie's social cocoon.\n\n\"Pena was a cut-out,\" TC spoke into the night air. She was staring off into the starlit sky.\n\n\"The police officer who killed him was on someone's payroll. Four years ago, IAB was closing in on him, but before they could flip him, he 'committed suicide' -- swallowed his piece,\" she let us in. \"The autopsy was flawed. The body -- cremated. I've been backtracking his case history, trying to put pay-offs to faces and figure out where the money goes.\"\n\n\"Do you want my help?\" I offered.\n\n\"I won't break the law to get whomever was behind my Father's death,\" Trixie declared.\n\n\"Of course not. That is what people like me are for,\" I reminded her. \"I am not now, nor ever have been, a mercenary. I've always fought for a cause.\"\n\n\"I don't trust you,\" she insisted.\n\n\"I'm fine with that,\" I shrugged. \"You go consider the numerous courses of investigation you've yet to examine. I'm going inside.\" Dabney slipped an arm around my waist.\n\n\"I didn't say I wouldn't work with you,\" she cooled down. \"But it has to be on my terms.\"\n\n\"I understand you concerns, but you need to meet me half way,\" I stopped and looked her in the eyes. \"I will not inform you of the evil I commit. You won't ask how I do what I do. I'm not interested in convictions. That is your gig.\"\n\n\"I won't break the law, or instigate you breaking the law,\" she stated.\n\n\"I'm okay with that. Can you accept someone stumbling into your office and spilling their guts about all their wrong-doings without pressing too hard on what caused their change of heart?\" I offered.\n\n\"You really think you can pull off something like that?\" she expressed her serious doubts.\n\n\"I think he can,\" Dabney spouted off. TC shot a look her way. It was an 'I'll interrogate you about that later' gaze.\n\n\"I will give you an option; if it ever becomes too much for you, I'll quit,\" I promised. I wasn't worried about that coming to pass. TC was a psychologically haunted soul. The more I proved my usefulness and the closer she got to her goal, the more she would rely on me.\n\nI didn't force people to trust me. I didn't trust others until they proved themselves to me. In the military it was easy. By the time I got to my second year, I knew who I worked with and they knew me. I made a point of getting to know all the people I'd be taking care of. It helped them when they knew my name and I knew about them and what mattered to them.\n\nThis was the same thing. With Dabney, it was easy and she showed her trust in a way most people wouldn't get. When she'd doubled back in that container yard to kick Pablo the pimp repeatedly in his shins then bounced a rock off his skull, she had expressed her trust in me. I would safeguard her from any retaliation -- I had also given her the freedom to express her pain, fear, rage and frustration without being judgmental. \n\nWe had never talked about her actions, or mine. We didn't have to. I'd backed her up in a life and death situation and that was all that mattered. She wanted to turn our relationship sexual. I was warming up to the idea. TC was confused about the proper procedure for parting company. I wasn't a date, a comrade, or a friend. I stepped up and offered my hand. She gave my hand two firm shakes, turned and departed hurriedly.\n\n\"Are we going to see her again?\" Dabney asked as she led me inside.\n\n\"Can you give me a good reason not to?\" I reposed, giving Dabney the sense that her vote counted in the affairs of 'our' household.\n\n\"Since you don't trust her, I guess it would be okay,\" she allowed. \"What now?\" ",
        "Dabney had slowed down as she crossed the living room, still leading me by the hand. I moved my body against her, wrapping both arms around the gentle curve her stomach below the beltline until I linked my fingers right about her pubic region.\n\n\"You aren't little anymore,\" I whispered into her ear. She started faint rumbles of lust.\n\nShe worked out a serpentine motion starting at her ankles and unwinding all the way to her neck. Dabney's body rubbing against me was an incredible turn on. \n\n\"Do you think I'm a whore,\" she sighed.\n\n\"Yes,\" I responded softly. I could feel her soul diminish slightly, so I turned her around.\n\nI tilted her chin up while keeping my left hand on the small of her back, our crotches pressed tightly together.\n\n\"I admire whores, Dabney,\" I explained. She teared-up. \"Whores are survivors. Whores are fighters and they discard trivial shit like honor and morality because those don't pay the bills.\"\n\n\"Dabney, I'm not ethical. I couldn't live with someone who was. I couldn't be honest with them, but I can be honest with you,\" I finished. Two tears tracked down her cheeks.\n\n\"You haven't changed,\" she sniffled. \"You are still watching over me, Vance.\"\n\n\"It is way tougher 'just' watching,\" I teased her. My left hand squeezed a butt cheek while my right hand moved to the back of her head and drew her into a passionate kiss.\n\n\"It took you long enough,\" she sighed happily when we came up for air. She was back to using little movements of her body to further arouse me.\n\n\"I should warn you,\" I murmured as my lips planted small kisses across her cheek and around to her ear. \"I haven't had sex in three months. I'm really ready to go.\"\n\n\"Oh,\" she giggled. \"Three months? I was happy for making it without sex for three days. You must be in agony.\"\n\n\"Save me,\" I mumbled as I sucked on her earlobe. \"Save me Dabney,\" and she did.\n\n{That first big step}\n\nThat first time...it happened in a place no one can remember, in a fight no one even knew we were in and it certainly didn't make the evening news. It was East Timor, November 1999 ~ my first assignment. I was tagging along with my platoon commander while we were making a sweep of a village and its environs, close to the E. Timor/Indonesian border. \n\nThe noises from the company frequency was buzzing in the background. Suddenly shots rang out somewhere I wasn't. We all flinched. Our Staff Sergeant had been in Kosovo. The rest of us were green, young and switching from boredom to fright. With me was one fire team, the Staff Sergeant, Platoon Guide (Sergeant), our radio specialist and the Lt. who was affable and smart; just out of his element at the moment. We were all learning.\n\nI don't think anyone besides the skipper of the USS Belleau Wood even knew were Timor -- East or West -- was before POTUS decided that we, as in Golf Company, 2nd Battalion, 5th Marine Regiment, 31st Marine Expeditionary Unit (MEU), should go there and stop one group of locals from killing the other.\n\nThe Lieutenant was trying to get everyone to calm down so he could figure out what the hell was going on. I heard a Corporal screaming over the air waves about 'Conway' being hit. I was five weeks in the unit, so didn't know most of the guys by name. I'd learn from that mistake as well. One of our fire teams (a Corporal and 4 Marines) had been ambushed by an unknown number of hostiles, a man was down and they couldn't get to him. \n\nThe Lt. had to juggle putting a picture of the action together, possible fire- and/or air-support requests while calling in a medevac helicopter. Our intelligence briefing 'suggested' that there 'might be' Indonesian soldiers out of uniform supporting the pro-Indonesian militias operating in the area. \n\nThe tempo of the fire fight 'suggested' that there 'might be' professional soldiers on the other side of that ambush. I deduced by the volume of rifle fire going off that our guys were in serious trouble. Before that moment, I considered myself an asset -- a tool for the platoon leader to use. In that moment, my instincts took over. I was a corpsman and one of my Marines needed me.\n\nI glanced over to the SSgt. He clearly had pierced the sound baffling caused by the walls of the buildings around us and was looking off in the direction of the firefight. That was another trick I'd pick up in time. I created a mental map of our platoon's patrol area (I paid attention) and figured out where the action most likely was.\n\n\"I got this,\" I said to the Staff Sergeant before sprinting off. I could have sworn my Lt. glared at me, his only corpsman, racing away into the unknown (in his opinion). The SSgt. didn't say a word, though I quickly figured out one member of the team, Lance Corporal Arroyos, was right on my heels. Ten buildings later, we found the Cpl. and three of his four Marines. \n\nOne was on the far side of the main thoroughfare, nervously looking back and forth, up the street and down the alley at his back. The Corporal was struggling to control events and failing. We all could tell. He was trying to communicate his situation to the Lt., who was trying to vector the other teams in the platoon to converge on the rebel militia position. \n\nThe other two members of the fire team were alternating taking pot shots up the road...at who, I couldn't see. The fourth member of the fire team (the Cpl. didn't count) was 12 feet up the road, lying on his back and trying to keep his bloody right arm attached.\n\n\"Where are they?\" I ask the Marine who wasn't currently shooting.\n\n\"Top of the road -- both houses this side of the pigsty,\" he responded without breaking rhythm.\n\n\"Okay.\" It all felt surreal. I knew I should have been scared. I really don't know why I wasn't. I wasn't angry with those Indonesians for shooting at me, or wounding that Marine. Somehow, this was my job and I had to do it. That was the sum of my existence in that instant.\n\n\"Get ready,\" was my only warning. \n\nI stepped half way around the Marine currently shooting and squeezed off 3 round bursts, switching randomly between each house until I emptied the mag. I slipped my M-16A2 on my back, then ran for it. I wasn't sure why no one shot at me and I didn't care. \n\nI slid to a stop by the wounded leatherneck, knelt and began doing a rapid assessment of his condition. The man was alert, in a great deal of pain and in danger of losing his right arm just above the elbow. He had been trying to tilt his head back and around so he could see who was shooting at him, even though he couldn't fire back, so my appearance surprised him.\n\n\"What...what are you doing here?\" he babbled.\n\n\"Can I interest you in Mary Kay?\" I smarmily replied. \"I'm a Navy Hospital Corpsman, you dumb jerk. What do you think I'm doing out here?\" That's when the Indonesians started shooting at me. I no longer flinched. I would never flinch again. \n\nI was on the clock, especially if I was going to help this man keep his arm. I decided with my minimal experience that I could move him. I picked up his M-16A2, put it on his chest and then put his battered arm over that. When I did, he screamed -- no surprise there. A bullet grazed the top of my helmet...which felt odd. I couldn't fireman carry him with his arm in that shape. \n\nMy right arm went between his legs and under his butt while the left cradled his head and right shoulder. Bang! Something hit my shoulder. No penetration, so I yanked the Marine tightly to my chest, stood up and started running back to the Corporal's position. That's when I noticed that all five Marines where shooting back up the street around and passed me. \n\nIt felt good to have friends. When I got him safely behind the building that sheltered the rest of the team, I gently laid him down and started applying my first responder trauma training.\n\n\"Dude, you're nuts,\" L.Cpl. Arroyos, the Marine from the Lt's fire team, laughed nervously. I was too busy to reply.\n\n\"God, it hurts,\" the wounded man groaned.\n\n\"That's what your sister said last night,\" I blathered. A gentile bedside manner was never my strong suit.\n\n\"That's sick, Man,\" he griped, clearly upset. \"My sister is ten.\" That was okay. His anger was focused on me and that helped keep him from going into shock.\n\n\"Well then,\" I began, prepping his arm for immediate transit, with the hope the doctors could save it. They did. \"I'm glad you are the one who's wounded and I'm the one who ain't.\"\n\n\"Ah...oh...sorry...\" he mumbled as the absurdity of his ten year old sister being anywhere near this dump occurred to him.\n\n\"No worries,\" I chuckled. The bleeding had been contained, so it was pain-killer time. I didn't want to slow his heart down too much as I was worried about blood loss. \"I'm giving you something for the pain,\" I advised him. He nodded. His adrenaline was crashing, the blood loss was kicking in and, while my work had saved his arm and life, it still hurt like a bitch, or so I've been told.\n\nThe only part of the ordeal that felt weird to me was the after battle crap. When a Marine Lt. tells a Navy Corpsman that he (me) did something stupid, what else can you say but 'Yes sir'? I had run off in the heat of battle (yes), I hadn't waited for orders (yes) and I'd exposed myself to enemy fire recklessly when I was the 'only' available corpsmen, not a Marine (that was one way to look at it).\n\nThe SSgt. was a different story -- he didn't chew me out. First he talked to Arroyo, the Marine who was sent to watch over me. Arroyo gave him the blow by blow, quips and all. Then the SSgt. turned on me.\n\n\"Did you realize that people would be shooting at you?\" he started questioning me.\n\n\"Yes Staff Sergeant.\"\n\n\"Were you afraid?\" \n\n\"No, Staff Sergeant.\"\n\n\"Why not?\"\n\n\"No clue, Staff Sergeant.\"\n\n\"Are you looking for a medal?\"\n\n\"For doing my job? No Staff Sergeant.\"\n\n\"Would you do it again?\"\n\n\"That depends, Staff Sergeant; am I still the platoon's Corpsman?\"\n\n\"Yes.\"\n\n\"Aye aye Staff Sergeant.\"\n\n\"Good job. I'll take care of this,\" he motioned to the Lt., who was busy talking to the Captain while we loaded the wounded Marine into a Hummer. From there, it would be a short ride to a waiting helicopter and then a hop over to the real doctors on board the Belleau Wood.\n\nWord got around about what I did ~ the Marines looked at me differently after that. Even ones who I hadn't served with earlier. The next day, even the Marine Lieutenant 'corrected' (he couldn't really apologize) his opinion of my participation in the firefight. I eased things for him and the others by requesting that he keep me with his platoon.\n\nI clearly did the right thing with the LT., because the Staff Sergeant came up to me later and gave me the first of several 'you did good kid's'. One of the surgeons gave my permanent record a 'gold star' too. When we got back to San Diego, my Marines (all of Golf Company) took me out for drinks. I paid for some, despite their protests and my poverty. \n\nI reminded them that I was only doing my job and that the five guys who gave me cover fire had done just as much to keep Conway alive and whole as anything I'd done. Apparently my reputation as 'a solid team player' followed me around, as well. It turned out that those factors, along with that 'gold star', came in real handy when I applied for SEAL training, but that came later.\n\n{Don't you dare call me a Hero, damn it!}\n\nThird day on the job. Same old stuff. Our first call was a fifty-two year old woman, riding a bicycle, drunk off her ass at 9 AM, who decided to play chicken with an oncoming Jeep Wrangler. Between the Jeep driver's excellent reflexes and her blood alcohol level of .21, she was only slightly banged up and was feeling no pain.\n\nShe asked for my phone number while insisting she was 'always up for a good time'. I broke her heart by telling her Lorenzo and I were married. Lorenzo and the four LMVPD officers didn't know what to make of that, until my partner vocally (in their presence) reminded me that he and his wife were looking forward to me coming over Saturday and meeting her sister. That made everyone laugh, female cop included.\n\nA heart failure that turned out to be recurring angina and a lesson in why you always keep up with your prescribe drug doses came next. Following that false alarm, we had an eleven year old boy who learned the hard way why you don't run around the edge of a pool. Lorenzo told him that chicks dig scars (the cut on his forehead). \n\nI told the kid that he could tell his on-line buddies it was a shrapnel wound, which he found to be much cooler. I gave him the name and address of a hospital in Gaza, along with the name of an ER physician who worked there -- on his phone for memory's sake. The important thing was the kid being occupied while we stitched him up. \n\nHe could claim to have been treated in a real warzone replete with supporting evidence. Yes, I, who planned to never be a father, was better at understanding the pre-teen male mind than my younger partner.\n\nThe number four call was a disaster: a running gun battle over fourteen blocks that had started out as a botched kidnapping and bad timing for two police officers and several trigger happy Playboy Bloods. Six ambulances were responding. Dispatch pointed us at the center of the action -- as the back-up to the back-up medical team, because I was still the 'trainee'. \n\nWe were greeted by the sound of automatic weapons fire. I made sure my body-cam was activated. Maybe I could learn something new in the after-action replay. As we pulled to a stop two blocks away, I opened the door and leaned out the door for better acoustics. My experienced ear made out the sounds of AK-104's, Mac-11s, and Mossberg's; 9 mms and .40 cals were zinging about.\n\n\"Lorenzo, turn this ambulance around. I want you to drive backwards toward the action,\" I demanded in my detached manner.\n\n\"Vance, that's not...you have a gun?\" he gasped. I did and it complemented my thick, bullet proof vest I was putting on. It was dark blue with 'EMT' spelled out in big white letters on the front and back.\n\n\"Yes -- do it, now,\" I stressed. So that's what he did, bringing us within three houses of the action.\n\nUpwards of twenty patrol cars had responded. In the background radio traffic, another MedicWest wagon was at the original crime scene. One cop dead, one in critical condition. They were stabilizing that guy as they were rushing him to the Summerlin Hospital's ER. \n\nDead cop ~ not good. When Lorenzo braked to a stop, I opened the back doors from the inside and slipped out. Striding God-like over the battlefield is a great way to cash in all your chips, only to have St. Peter tell you they ain't legit. No, I kept my body bent as I sprinted over to the closest two police cars. \n\nThey formed a 'V', pointing toward this single story dwelling that seemed to be at the center of the action. The four guys closest to me weren't firing at the moment. The people in the house weren't as accommodating, taking random shots off in three directions. For a few seconds, I let myself absorb the action then created a plan. \n\nA patrol car had rolled into the curb in front of the house. One officer was unresponsive on the passenger's side. Facing my way, the driver's door was open. The driver was out of the vehicle, sitting up against the back driver's side door. The black officer had a nasty wound in his hip and was bleeding profusely. \n\nNo one was rushing to save him because in the middle of the road was a Cadillac, riddled with bullets. The driver was dead and the front passenger had a pistol, but was in a bad way. In the rear seat was the jackass with the Mac-11. He was alternating between shooting out the already blown out rear window, then out the already shattered front window. Those three guys were Hispanic ~ Playboy Bloods were black. Gang war.\n\nYou couldn't reach the downed policeman without risking fire from those two. On the far side of the conflict, SWAT arrived at the same time we did. On the lawn of the main house were a small collection of bodies. One black male, face-down, was halfway up the concrete stairs that led to a walkway and then the house. Another black male was in the far corner of the yard, on his back. Beside him, on her side, was a Hispanic female, 8 \u00bd months pregnant (by my estimation).\n\nThe police were formulating their own strategy. Four TV vans were there and setting up ~ letting this tragedy play itself out on live feed. The cops weren't reacting fast enough for the black cop bleeding out as he sheltered behind his ride. I ran (bent over) back to my ambulance.\n\n\"Lorenzo, let's get the gurney to the cop cars,\" I told him. I meant the 'V' shaped ones.\n\nHe prepped the gurney to roll while I added a few extras to my kit, plus two bags of plasma and two Saline in a satchel. \n\n\"What's the plan?\" he asked nervously.\n\n\"We go to the cops. I'll cover the ground, block that bleeder then bring the man back to you. We hand him off to another ambulance,\" I informed him.\n\n\"Man...Vance, they are still shooting,\" Lorenzo pointed out. \"It is against company policy to be active participants at a crime scene.\"\n\n\"That officer isn't going to make it much longer,\" I explained. \"I go, or he dies.\"\n\n\"Ummm...okay,\" my partner muttered.\n\nI outlined my analysis of the situation and my future actions to the senior patrolman. While another officer rounded up two spare ballistic vests, he relayed my information up his chain of command. I knew the lead officer on the scene would nix my intentions because law enforcement can't condone sending 'civilians' into harm's way. I crouched down and started running. I rounded the trunk of the farthest police cruiser, then raced for the downed officer.\n\nBy that time, the wounded Hispanic male in the front seat was too far gone to care. The guy in the back seat didn't react fast enough, though he still threw some lead my way. The officer was Sgt. C. (Cedric) Dunston. His hash-marks suggested a 20 year veteran. His dark, dark black complexion was turning waxy and pale. His breathe was coming in ragged gasps. I put my case and bag down. I'd leave them there for the moment.\n\n\"I'm going to cut open you pants leg, apply some 'sealant' that will hurt like a bitch. You've suffered too much blood loss and your pulse is too weak (I had my fingers on his wrist) for me to safely apply a sedative. The second I have your bleeding under control, I'm putting one vest over your head and another over your legs. Then we are getting you out of here. That's the bad news,\" I remained totally professional. \n\n\"The good news is you've just won the Publisher's Clearinghouse $5000 dollars a week for life give-away.\"\n\nHe snorted at that.\n\n\"Bad...tough...wife...tell her...my partner?\" he mumbled.\n\n\"You first, Sgt. Dunston. This wound didn't sever the artery, but it's been gashed pretty badly,\" I told him. Had it been severed, he'd already be dead. \"I'll be back for your partner in a second.\" Dunston made a feeble protest. He knew his partner was in a bad way. It worked out pretty much that way, except when I placed the vests firmly in place, I drew my .45 leaned out from behind the cover of the patrol cruiser and put two bullets into the maniac with the Mac ~ left side jaw and left eye tear duct. The exit wounds were much larger and very fatal.\n\nNow I could get back to Lorenzo without too much risk. I holstered my pistol, positioned the Sgt. for a fireman's carry and off I went. As Lorenzo and I were handing off the wounded officer to two of our MedicWest co-workers, the senior officer on my side waved me over.\n\n\"The Lieutenant in charge wants you to know you might have killed that man in the car,\" he warned me.\n\n\"I put two bullets into him,\" I informed the officer. \"His prognosis isn't promising. Excuse me, I've got to get Sgt. Dunston's partner now.\" Lorenzo had doused the two vests with disinfectant by that time. I didn't want to pass the blood from one patient to another. The senior officer didn't try to stop me. He even warned the other policemen that I was making my move.",
        "On this trip, I had decent cover fire. I was in the driver's seat in a flash. The other policeman's shoulder and head were still exposed so I pulled him to me as gently as I dared. It was hopeless. He'd taken bullets to his temple, bridge of his nose (deforming it) and the fatal wound -- a bullet had caught him under the right underarm and traversed his body. He had a bright, shiny wedding ring. I doubted it was even 2 years old. Officer A. (Ang) Ling was leaving a widow behind.\n\nThe brain is surprising resilient. He might have recovered from the head shot with some of his faculties intact. The nose required reconstructive surgery to correct. The third wound had perforated both lungs and his heart. The hydrostatic shock would have immediately rendered him unconscious and he'd bled out in seconds. I slipped out of the seat, looked back to the senior officer. I signaled I was about to make my exit.\n\n'Him' being dead didn't mean I'd leave him there. I put a vest over his head and chest to disguise his face and the scope of his injuries. Cradling him in my arms, I waited until the senior officer gave me a nod then ran back to the relative safely of the 'V'. It was a common courtesy to let the man's fellow officers make the notification to Officer Ling's widow and to not let her find out about it over the 'Breaking News'.\n\n\"Officer Ling didn't make it,\" I softly informed the senior officer, L. Kelly. The man was close to tears. I didn't like cops. I understood inter-service solidarity though. I motioned the waiting ambulance team. I gave them the bad news then 'suggested' they play along with him still being alive. It took them a few seconds to understand my intent. They complied.\n\nOfficer Kelly went to an alternate frequency to let his Lt. in on the bad news.\n\n\"The lieutenant has ordered you to stop this,\" he looked at me. He was relaying an order that neither he, nor his superior, expected me to obey. I didn't care.\n\n\"Tell him I overpowered you,\" I gave my own sad smile. A little empathy could go a long way.\n\n\"Be careful,\" he said. Two more police ballistic vests appeared by my side.\n\n\"Lorenzo, do you think you can get to the Cadillac safely?\" I caught his gaze.\n\n\"Safely? No. I'll try anyway,\" he gulped.\n\n\"Let me go first. I'm running for the cruiser. I'll get my stuff then make for the pregnant woman. When I do that, make for the Hispanics,\" I directed him. \n\nLorenzo was freaking scared, but he'd do his best. That was the most I could ask for. The senior officer gave me a curt nod. Off I went. The people in the house were more alert this time. I felt a 7.62 mm zip passed my ear before I made it back to the abandoned police car. A few deep breaths later, kneeling by the tail end of the vehicle, I gave a hand signal that I was ready.\n\nI gave the house a little something extra to think about: three .45 caliber reasons to keep their heads down, before I made my next mad dash. The gentle slope of the ground was the only shelter that pregnant woman had. Three more inches and the people in the house would have a clear shot at her. I was a much bigger target. I'd worry about that later.\n\nAs I dove beside her, the girl's eyes flew open. She'd been faking unconsciousness, hoping the guys in the house would leave her alone.\n\n\"Hi, I'm Vance,\" I smiled. \"They can't hit us here. We are in a depression that shelters us.\" She didn't get it. I repeated my words in Spanish. Then she started babbling and crying.\n\n[Spanish] \"Calm down,\" I cooed. \"I'm going to put a vest above you as a shield, just in case. Now, can you tell me where it hurts?\"\n\n[Spanish] \"My back and thigh,\" she grunted. She was wearing faded jeans and a yellow, floral print maternity shirt. The left thigh wound was a crease. Enough blood to look scary, but already clotting.\n\n[Spanish] \"Care to enlighten me why we are all here today?\" I mused. I rolled her slightly toward me so I could get a look at her back without getting my head blown off.\n\n[Spanish] \"I don't know,\" she whispered. An obvious lie.\n\n[Spanish] \"Me neither,\" I joked. \"I was looking for 'Circus Circus', but all these street signs are in American, so I ended up here instead.\"\n\n[Spanish] \"Oh,\" she said after a second. She relaxed minutely. \"You are joking. You are an American.\"\n\n[Spanish] \"Don't tell my girlfriend's mother that. She thinks I'm from Argentina. She doesn't want her daughter marrying a gringo,\" I finished my cursory exam.\n\n[Spanish] \"Ah...really?\"\n\n[Spanish] \"Ha,\" I snorted. \"Nope; no girlfriend. I'm single, though I met a girl a few days ago who might want the distinction.\" She took a calming breathe. \"Your back wound isn't going to be fatal, or even crippling. I know it hurts.\"\n\n[Spanish] \"You are a doctor?\" she asked.\n\n[Spanish] \"I'm a paramedic -- I treat people before they see the doctor. Trust me, I've done things like this before. I was in the military doing this exact same job.\" That helped even more. \"You have a broken Scapula -- that's the bone plate behind and below your shoulder.\n\n[Spanish] \"That bone did its job. It deflected the bullet so it didn't go inside. Give it two months and you should be fine. You'll need to get used to doing things with your left hand for a while. Do you understand?\" I laid out her medical situation. She nodded. She didn't understand most of what I'd said. Dying was her major concern.\n\n[Spanish] \"I'm going to apply some anesthetic and bandages,\" I moved right along. \"Do you want to call anyone to let them know you are okay?\"\n\n[Spanish] \"I don't have a phone,\" she groaned. I gave her mine.\n\n[Spanish] \"You are not with the police?\" she worried. That wasn't good.\n\n[Spanish] \"No, I am not. Do you understand that the police can lie to you about that? They only have to reveal their identity when they are interrogating, or arresting you,\" I explained.\n\n[Spanish] \"Can I call my boyfriend?\" she requested.\n\n[Spanish] \"Go right ahead.\" I went to work. First I cleaned her thigh wound before applying a pressure bandage.\n\nShe gasped then ground her teeth. She stopped that when the man, Ramone Garza, answered her call. Rapid-fire Spanish went back and forth. She was terrified. She wasn't sure who kidnapped her, or where she was. She didn't know me and 'Raul' had been killed when she was grabbed. Her physical distress as I worked on her back drew her phone-companion's attention.\n\n[Spanish] \"There is a man working on my back....okay.\" She tried to hand me the phone. My hands were busy, so I leaned into the phone.\n\n\"Do you speak English?\"\n\n\"Yes. If anything...\" he threatened.\n\n\"Shut up!\" I snapped. \"You aren't important right now. Your girlfriend and unborn child are. Get over yourself. I'll talk to you when I'm done.\" I got back to my business. The girl looked fearful and shocked by my attitude. More rapid fire Spanish followed. She couldn't see my name tag because of my body armor so she settled for describing me.\n\nA Playboy Blood decided that killing me and the girl became a priority. He slipped out a side window the police couldn't cover well and tried to creep up on us. \n\n[Spanish] \"Cover your ears,\" I hissed. It took her a second to comply which was a standard civilian reaction. \n\nThe moment she did, my .45 came out and I put two slugs into his heart. I was not from the 'shoot to wound' school. Before his body had finished flipping onto his back, I'd holstered my piece and gotten back to work. The frantic Spanish picked up again. Corazon, the girl, told Ramone, her bf, that I'd shot at something, but she couldn't see what it was because there was this thick black thing she was using as a shield.\n\n[Spanish] \"Ballistic vest,\" I informed her. She relayed that. The boyfriend decided to calm his lady down while I finished up. I rolled over and motioned for the phone.\n\n\"Here is her status,\" I told Ramone.\n\n\"If...\"\n\n\"Don't be stupid. I have other people to tend to. Your lady is fine. Two non fatal wounds. I've dressed them. I can't get her to the ambulance right now because there are some other assholes trying to shoot her ... us. She'll be fine as long as she stays still. Quickly tell her good-bye. I need my phone back,\" I finished up. Ramone did as directed. I had my phone back and I was crawling over to the closest assailant.\n\nAs I suspected when I first saw him, he was dead. I closes his eyes. I had to take my case over to the third person. More crawling. He'd been shot once; one shot, between the third and fourth rib -- right of the spine. He was in a bad way. It was a through and through, necessitating me plugging both holes and giving him a bag of plasma with a dose of adrenaline to keep him going.\n\nMy problem was how to move him. While I was dealing with Corazon, a police negotiator had attempted a dialogue. Twice they had shot at him and twice they had made unreasonable demands -- namely an armored car to get them out of this standoff and no police pursuit. They threatened to kill the hostages. That implied the homeowner(s) were still alive. \n\n\"In the house,\" I shouted. \"Your guy here is still alive. If he doesn't get to an emergency room in the next fifteen minutes, he's going to die.\"\n\n\"Stop his bleeding, Man!\" someone inside shouted back. I loved amateur healers...\n\n\"A round ~ I think it was a .40 S&W ~ passed through his chest cavity. I've put in an IV of plasma, but that's not going to be enough to deal with his internal bleeding,\" I responded.\n\n\"Fix him!\"\n\n\"You want me to cut your guy open in the dirt, with all these flies around? I might as well overdose him with morphine and get this over with,\" I mocked him.\n\n\"You shot my boy,\" the voice snarled.\n\n\"He was trying to kill me so I shot him first.\"\n\n\"He was a Playboy!\"\n\n\"Are you under some misconception that I give a damn,\" I called out, \"because I don't? I don't care if he was a freaking Brownie, or with AARP. He threatened my life so he inherited two bullet holes.\"\n\n\"You are dead, Cop!\" another knucklehead screamed. \"I'm going to blow your fucking head off.\" That was negative thinking. My pistol came out, I rose up just enough for a quick, two handed shot and put a bullet between the second fucker's eyes. I was down before his friends could retaliate.\n\n\"I'm not a cop. I don't even like cops. I'm a paramedic. That's EMT for you uneducated morons -- Emergency Medical Technician,\" I educated them. \n\n\"Mutha-Fu...\" another jack-ass screamed. A single shot silenced him. Finally, SWAT had gotten off their asses and become involved. I'd counted three shooters up front initially.\n\nThere was no time like the present to resolve this so that my current patient lived. I didn't run for the door; I dove through the window formally occupied by the second Playboy I'd killed. I rolled twice before blowing the last gunman's knee off. He fell backwards, I went to a kneeling position and put two more in his prone form. \n\n\"K-K!\" I heard someone shouting from the next room. I put my pistol away and swept up one of the AK-104's lying around. They had a small gym bag with spare mags. Switching the used one for a fresh 30-round magazine took three seconds.\n\n\"KK?\" the voice called out once more. \n\nI didn't know the building layout, but this front room had two exits besides the front door. One way led to the voice while the other led to the room with the window that other gang-banger had crawled out -- the first Playboy I'd killed. There was no noise that way, so that was the way I went. I padded rapidly yet quietly. I heard the 'caller' walking on the broken glass.\n\nHe was moving out of the left (to me) side room to the front one. The room I was in had a small dining table. The door to my left was open -- a bathroom. The opening in front of me revealed a kitchen and two more Playboys keeping a nervous watch out the back for the police.\n\n\"Shit!\" the first voice called out. \"They killed...\"\n\nThe two Playboys were fatally distracted. I put three-round bursts into each murdering fuckers' chests as they turned around. Shooting them in the back would be suspicious. The only room missing was the bedroom. Two doors -- the door in front of me -- leading out the back -- and the one to the left...I ran back from whence I came. If the guy in the bedroom (the only type of room I hadn't come across yet) had half a brain, he was now focused on the kitchen door where I'd just put down his pals.\n\nI was careful of where I stepped, keeping my progress silent. The guy calling for KK had a whole millisecond to be surprised before he died. I quick-stepped it back around the other way. A frail, thin elderly black woman, was lying dead on the floor. Her dead eyes were open. Her gnomish black husband had male pattern baldness with curly white hair around the sides. \n\nHe was sitting on the floor, holding her head in his lap while he stared off into space. I pushed him to the floor. No time for sympathy at the moment. The (second) door into the bedroom opened outward. I twisted the doorknob, swung the door open while I plastered myself against the wall. \n\nSure enough, the guy was panicking. A hail of bullets came my way. I let him shoot his heart out. When the AK-104 expended its last round, I stepped around the corner and put three in his chest. Problem solved. I put the AK down, then picked up the closest landline phone. I was sure the police were listening in.\n\n\"There are seven opponents down. One hostage -- DOA. One hostage alive and in shock,\" I informed them.\n\n\"Who is this?\"\n\n\"Vance Vardanyan; paramedic with MedicWest. I'll be coming out the front door with the hostage.\" Whatever they said was lost as I dropped the phone. \n\nI cradled the old man into a standing position. We made our way slowly to the door. The moment the front door opened, the police came swarming in. The old guy was swept away as was I -- in a different direction. The press wanted to talk with me. The police lieutenant had priority.\n\n\"Did you get that hostage killed?\" was his first accusation. \n\n\"No. Close contact burn suggests she was shot at close range -- less than a foot -- single shot to the chest. She was dead before she hit the ground,\" I informed him.\n\n\"What possessed you to shoot all those people? The police could have handled it,\" he seethed.\n\n\"I'm sure Sgt. Dunston, that idiot over there,\" I motioned to the Playboy that I hadn't shot, \"and the pregnant lady might disagree.\" \n\n\"You shot nine men,\" he declared as it what I'd done was wrong. \"We already know one is dead.\"\n\n\"It was eight, they had guns, they were engaged in criminal activity, they were an immediate threat to me and others, plus they were stopping me from engaging in my life-saving duties,\" I countered. \"Do you really want to arrest me for this?\"\n\n\"You jumped into the building and shot up the...\"\n\n\"Shot five. Your sniper put a bullet in one and I shot two earlier,\" I filled him in. \"I admit I put two bullets into the exposed body parts that guy in the back seat of the car presented. Now, if you don't mind, I have a job to do.\"\n\n\"Where do you think you are going?\" he muttered.\n\n\"Unless you restrain me, I have a woman to take to the hospital,\" I drew forth my holster with the gun still in it.\n\n\"You will need this for your ballistics tests. The AK-104 I used is resting against the wall in the study, next to the dead woman's body.\" Off I went. Several reporters tried unsuccessfully to trap me. Lorenzo and I switched up in the ambulance. He had retrieved Corazon, placed her on our gurney then put her in the back of the vehicle. \n\nMy partner was better at driving this beast and someone needed to stay with the girl. She looked relieved to see me.\n\n[Spanish] \"I am glad you are alive,\" she gave me a fatigued grin. \"Can I have your phone again?\"\n\nI handed it over. Lorenzo was headed for the hospital when she began talking to Ramone. I took the reprieve to switch out the battery on my camera and upload everything in memory. This model could go for 12 hours, but I erred on the side of caution and I didn't know when I'd be able to make the upload, or battery exchange later.\n\nMore rapid-fire Spanish between the two love-birds then Corazon handed me the phone.\n\n\"Did you just kill all those guys?\" he was more polite this time. The wonders of live TV.\n\n\"How many guys do you think I shot?\" It was impolite to refer to the people I'd shot as dead though I was pretty sure they all were. \"I don't like taking credit for someone else's work.\"\n\n\"You killed that Playboy who was about to shoot my baby's mamma,\" he said.\n\n\"Letting him shoot us would have invalidated all the work I'd done on Corazon,\" I told him. \"I hate having to do a job twice almost as much as I hate doing it on myself.\"\n\n\"You are one crazy Bad-ass,\" he commented. That wasn't flattery. That man was familiar with killing people.\n\n\"My most recent psychological exam disagrees,\" I joked. \"Are we going somewhere with this, or can I get back to doing a check-up on your baby. You lady has gone through a great deal of trauma. Anything in the last month could bring about premature labor. Babies born early face a whole host of developmental problems that I'd like your girlfriend and newborn to avoid. Here is Corazon,\" I signed off. \n\nShe spent the rest of the time talking to him until we arrived at Summerlin's ER. The place was a madhouse. The route of the police pursuit and the two gangs duking it out had left three dozen casualties in its wake. Two cops were dead and four wounded. Both Sgt. Dunston and the first officer brought in (brought in by another ambulance) were in critical condition. \n\nI had barely managed to hand her off to the ER staff and give Corazon's hand a good-bye squeeze when Lorenzo pulled me aside.\n\n\"Dude...uh...they've suspended you,\" he whispered.\n\n\"By that you mean MedicWest has suspended me?\" I sighed. I checked my phone. \n\nOh yes, MedicWest had been burning up my answering service while Corazon was on the phone with the only other person that mattered to her.\n\n\"Well, shit happens,\" I shrugged.\n\n\"It is only a suspension...\" Lorenzo trailed off. \"I mean...\"\n\n\"Lorenzo, this is my trial period. I'm pretty sure they are going to let me go over this,\" I patted him on the shoulder. \"Frankly, I don't care. I did what I did and I'll live with that.\" A LVMPD officer located me. I was supposed to stick around. He hovered close by to make sure I did. MedicWest sent a technician over to catalog my gear, so I could sign out one last time.\n\nMy new ex-partner looked freaked out about the whole ordeal. Lorenzo had to get back to the dispatch center. His ass was on the line too. Not only had he not reined me in, he'd done a little risk-taking as well. Two of the four Hispanic gang members had survived. The driver and the guy I shot were heading to the morgue. There had been a fourth guy in the car, I hadn't seen him. Me and my cop-shadow migrated to the visitor's lounge.\n\nThere, for the viewing pleasure of the whole God-damn world, were the highlights of the firefight. Most notable was the footage of me taking care of Corazon, stopping long enough to send a Playboy into the next life and then going back to Corazon as if nothing had happened. The kicker for me was that some clever sound guy had picked up on the MedicWest frequency.\n\nSince I was wired in for sight and sound, my conversation with Corazon was added for the viewing public's pleasure. They'd actually ponied up their pennies for Spanish to English subtitles.\n\nOfficer Steve Markowitz, my minder, did a few double-takes.\n\n\"Is that you?\" he inquired.\n\n\"Yes.\"\n\n\"Did you really save that officer's life?\"\n\n\"Yes.\"\n\n\"Did you kill that man in the car?\" He meant the Hispanic corpse.\n\n\"Shot him -- yes.\"\n\n\"How did you make that snap shot?\" he asked. I sighed, shook my head and looked at him with amusement.\n\n\"Markowitz, he was five yards away, presenting an upper torso, head and neck profile. How could I miss?\" I stated. "
    ],
    "authorname": "FinalStand",
    "tags": [
        "guns",
        "policewoman",
        "policeman",
        "gangs",
        "paramedic",
        "politics",
        "las vegas",
        "getting fired",
        "espionage",
        "iab"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/ebb-tide-ch-02"
}