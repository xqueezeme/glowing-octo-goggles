{
    "title": "The Cursed Tattoo Pt. 07",
    "pages": [
        "The Librarian\n\nOver time, Eleftheria's literary demands for her research had gotten more and more obscure. Eventually the university library could not supply Ryan with what he was looking for anymore. This led to Ellie seeking out an actual occult society for him to visit. It's amazing what you can find if you live in a big enough city. She had somehow gotten Ryan fast-tracked into a full membership. This gave him access to a surprisingly large secret library and their research reached new levels.\n\nBetter yet, the library was located in an underground cavern. Most of the walls were carved in a Gothic style but a few sections kept their natural rock look. Ryan had been very impressed the first time he saw the whole thing. It was like a movie set.\n\nOut of sorts with her surroundings was the head librarian. She did wear mostly black but other than that she didn't look like an occultist, to Ryan. She was a tiny woman, as short as Lizzy, but even more petite. She was young, gorgeous, and very, very blonde. Bright snow white. To Ryan, she looked more like a saleswoman at a perfume counter or a women's clothing boutique. Maybe a goth one, though. Definitely not a librarian, occult or otherwise, except that she handled her job with great care and dedication. She did wear glasses and she seemed a bit shy and mousy, but that didn't negate the blondness, or the beauty. A pocket-sized demonology barbie, evil Ryan would have thought.\n\nThe first time Ryan met her he was too distracted by the library itself to be nervous. Plus, having a harem had done a lot for his self esteem. He was practically half evil-Ryan now. Who knows, he could have been charming, but with the curse and all, he didn't really get to do much dating. He shook her hand, with his gloves on of course. She didn't ask, but Ryan told her he had some burns anyway. The girl seemed intrigued. It hadn't occurred to Ryan that in the occult world having burns on your hands carried different connotations than in normal life. Usually, people assumed he was clumsy in the kitchen. Who knew what she imagined.\n\nRyan visited the library often, over the next few months. They got to talking. Her name was Erica. It was mostly normal small talk, sometimes occult small talk. Ryan didn't even realize he was flirting. He had some knowledge of occult topics by now. Most of the books were the kind you could not check out so Ryan spent hours at a time there. It was his only free time, a relaxing break from the endless fucking.\n\nSometimes when he was reading he could see Erica hovering or stealing peeks from between the shelves. She always blushed and squirmed when he caught her looking. One time, she asked him about the gloves again. Ryan told her he was mostly okay now but had just gotten used to wearing them. \"They're good for the books, too, right?\" he said.\n\nWhat Ryan didn't realize was that Erica could keep track of what he was reading about. Eventually, she started to form her own ideas on the subject matter of his research. First, she skimmed some of the books he had read, and then all of them. She casually asked what he was into but he told her nothing, only that he was doing some kind of research with a partner. Most of his books were old Mesopotamian stuff so Erica started to look into that on her own time, too.\n\nOne hot summer night Ryan came around again. He had been wearing suits when he first started, like most new members, but was now dressed more casually. He was wearing black jeans and a short leather jacket, and carried a motorcycle helmet on his elbow. His hair was disheveled, as always, and his body was tight and trimmed. He must do a lot of exercise. Very sexy, Erica thought. There was an ease to the way he carried himself. He looked like someone who should be arrogant but wasn't, at least not in an asshole kind of way. He was mostly just neutral toward her.\n\n\"Good evening, Erica, how are you?\"\n\n\"Ha. Same old, same old.\"\n\n\"Is the Nabu-Tammuz treatise still on the table? I don't think I'm finished with it yet.\"\n\n\"It should be where you left it.\"\n\n\"Nice. See you around. Might I say, you are looking very beautiful today.\"\n\nBefore she could answer, he turned away.\n\nTypical. Does he even know he's doing it? she thought. Erica was peeved by how well the nonchalance was working on her.\n\nRyan seemed oblivious. Sometimes people with newfound confidence can be dismissive by accident. In the occult world, newfound confidence was especially alluring, and it was definitely Erica's favorite flavor. She'd always been attracted to moderately bad boys, but usually from afar. Ryan might have just defined her new weakness: the unintentional-bad-boy book-nerd.\n\nErica almost swallowed her own tongue when she saw it. She felt like she couldn't breathe. Ryan had stopped before rounding the corner, and had stretched as high as he could, with a big yawn. Erica had seen his tattoo. The glimpse had been quick and by the time she recovered Ryan was gone. But the tattoo had looked very much like an actual ancient curse.\n\nErica's stomach twisted with fear and excitement as she peeked around the corner. There he was, sitting in the same chair as always. The tattoo must be fake, a real tattoo but a fake curse, Erica thought.\n\nIt did make sense, however. Someone with a curse like that would wear gloves. It could all be a pretentious affectation, but Ryan was so sincere in his efforts, genuinely interested in finding answers. Could he really be affected by actual magic?\n\nErica had a lifelong love of the occult but she'd never witnessed anything undeniably supernatural. If Ryan was for real it would be her first, and maybe only, chance to talk to someone involved with the real thing.\n\nHe noticed her again. The tingles almost made her piss her skirts. Come on girl. For once, you can do this, it's now or never, she thought. Erica forced herself to move, slowly at first, but then she couldn't stop. \"Hey Ryan, I noticed your tattoo. It's a Sumerian design, right, or is it Greek? Can I see it? I think it looks really nice.\"\n\n\"Um... Sure, I guess, just don't touch it.\"\n\n\"Why?\" Butterflies ripped through her stomach.\n\n\"Uh, because, it's sore, from the, uh, gym?\"\n\nOh my god, this looks real, she thought. Ryan got up and raised his jacket and shirt. The tattoo looked perfectly authentic. \"Nice,\" she said, and made a hasty escape.\n\nRyan almost got the sense that the girl might be interested in him. He let the idea go later, though. He wasn't used to women being interested in him, at least not hot ones like Erica. Ryan's harem at home was an exception, of course, but they were a huge exception in everything else, too. Ryan also later considered the sense of showing the tattoo to Erica at all. But since nothing came of it, he soon forgot about the whole incident.\n\nErica, however, did not forget. She paid even closer attention to Ryan, and the books he read. That carried her into doing her own research and a few weeks later she found a certain diagram in an ancient book of spells. She ran her fingers over the image with trembling hands. There it was. The design was identical. A curse of... lust. Carnal servitude. Her knees gave way. This is like a bad romance novel. If this is just a trick to pick up girls, it seems awfully tailor-made toward me, specifically.\n\nShe spent hours staring at that picture of the symbol in the book. Her whole life ran through her mind: all the teenage embarrassments, all the failed relationships. She was desperate to find a reality beyond the mundane and this could be her chance. So what if she had to do some carnal lusting with Ryan? That sounded sexy to her, in theory. But what if he is some kind of a serial killer? This is real life, and fantasies are often best left as fantasies.\n\nThere was a chance she could end up battered and bruised but she couldn't believe that of Ryan. They were friends, kind of. No, the worst thing that could happen to her was that she just embarrassed herself once again by being a creep and alienating yet another hot guy. Been there, done that. It was easily worth the risk because the best thing that could happen was almost unimaginable.\n\nFrom then on, she waited for the right moment to approach him. Time went by. Erica soon realized there might not be a \"the right moment\" for something like this. She even considered following Ryan home but found the idea hard to do in practice. An unintended side effect of all this was that she started acting weird when Ryan was around. That made approaching him even harder.\n\nOne night, she saw her chance. Ryan had fallen asleep. He was actually drooling on a five hundred year old manuscript. Erica made her way toward him slowly, trembling, and almost wheezing. She had taken her shoes off to make less sound. She was right next to him now. As far as she knew, she could touch him anywhere and the curse should just work.\n\nThis was the moment of truth, and she froze. In a split second, with one hasty touch, she might change her whole life forever. Her mind was a storm but her curiosity got the better of her.\n\nShe grabbed one of his gloves and tried to peel it off, carefully. She wanted to see if he actually had any burns or if he had been lying. Ryan snapped awake. He grabbed her by the wrists, his eyes furious.\n\n\"What are you doing?\" he shouted. \"Don't touch me!\" He was grabbing her hard and Erica had been a mental mess to begin with so she fell to her knees and started crying.\n\n\"Oh, no. No no no. Don't cry. I mean, it's not a don't-touch-me like that. You're fine. It's just that it might be dangerous to... I can't explain it, but just don't...\"\n\n\"I know what you are!\"\n\n\"What do you mean? If you think you know what's going on, then you why would you try to touch me?\"\n\n\"I don't care! I want it. I want to see something real, for once in my life.\"\n\nRyan loosened his grip, a little bit, and let her calm down.\n\nAfter a while, he let her go and sat back down. He'd instinctively clamped down on his flow when he'd woken up, but now, as he relaxed, the flow came back. He was used to letting it be on all the time now. In the beginning, he had held back a lot, but now that his girls had all gotten acclimated he had no reason to regulate the flow. \"Look,\" he started, but before he could finish he felt a warm palm on his tattoo.\n\nThe jolt of ecstasy was magnificent. Erica had never felt anything like it. It was like being embraced by the goddess of love, but on the inside. Every atom of her body was embraced and accepted in a way only a god could grant. This was home, this was love, this was life. This was Magic. She knew she had made the right choice. She cried again, but this time, it was tears of joy.\n\nRyan tried to push her back, and clamp the flow, but she begged for more.\n\nThe damage had already been done so he let her hold him. He knew he was in trouble. Ellie would kill him for this. He would never be allowed to leave the apartment again. He had been rigorous in dividing his life into home and away for months now. It felt like he was cheating, letting an outsider touch him while the girls were waiting for him at home.\n\nRyan felt his body heat up. Fucking Erica right now would be wrong, but she was his now, and eventually it would have to happen anyway. Her fate was already sealed. How about a quick blowjob from a hot librarian, in a fancy library, that sounds hot. He could feel a lumbering erection in his pants. No. No more mistakes. He had done enough mistakes for one night.\n\n\"Come on, you're coming with me. You can hold me while we're on the bike,\" he said. He felt taking her home with him was the safest option. There, he could beg Ellie for help.\n\n\"Whatever you say, Master. Your wish is my command,\" the mousy hottie said, in her cute voice.\n\nHere we go again, Ryan thought.\n\nThe motorcycle was a new purchase. Ryan wondered if Ellie even knew how dangerous it could be. If he got into a crash, who knows who could touch him. Then again, you could have an accident in a car, or just walking. At least the bike was cool. Or what if he died? How would the girls get their cum, then?\n\nErica was holding on to him like an Olympic wrestler. Her shift wasn't even over. The clear air cooled Ryan's mind and he focused on riding. No words were said as they spliced through the evening traffic.\n\nRyan opened the door and let Erica into his apartment. Just as he had thought, there were naked women everywhere.\n\nErica had been in a daze since she'd touched Ryan's tattoo but her mind had started to clear in the elevator. Ryan had had let go of her hand to dig out his keys. She was suitably shocked, and impressed, by what she saw now.\n\nThere was an elegant and voluptuous blonde cooking in the kitchen area, wearing nothing but a smile, an apron, and stiletto heels. Were it not for the outfit, she could have been a doctor or something -- a sexy doctor, though.\n\nTwo goth girls were giggling and pillow fighting around the sofas in the middle of the open plan living space. They were both in nothing but their panties. Actually, only one of them looked like a \"real\" punk-goth-whatever. She had more tattoos and piercings than the other, even her nipples were pierced. She also had purple hair and wore a collar. And wow was she a magazine perfect beauty. The other girl was beautiful, too. Shorter, but even shapelier. She didn't have any piercings, only earrings, and much less tattoos. One of hers seemed to say \"property of Ryan,\" however, or something to that effect. She was very attractive, too, even next to the taller one.\n\nThen there was a fourth woman, in the other end of the room, sitting in a chair with a book. Her hair was a natural shade of ginger and her body like that of Venus. She was just as beautiful as the purple punk girl, but in a different way. She wasn't as skinny but all the difference was where it mattered. Those boobs had to be perfect. She was one of those one in a million girls, who have those boobs that are so full and round and firm it's almost impossible to believe they're not fake.\n\nWay to go, Master, Erica thought, even though she felt a pang of jealousy.\n\nRight now, the redhead was looking at Erica with a very worried expression on her kind face.\n\nErica had been in the occult scene long enough to have seen a bit of weird stuff, such as gratuitous nudity for example. Usually, the people into that kind of stuff took themselves way too seriously. This didn't feel at all like one of those pretentious fake orgies. This felt more like a home, where people were happy.\n\nThen everyone stopped, and the giggling stopped. To Erica, it felt like even the sound of the boiling water faded. The silence lasted until Ryan broke it.\n\n\"Hey girls. This is Erica. There's been a bit of a situation. There was a thing and a thing, and long story short, I might have touched her, accidentally.\"\n\nThere was a shared gasp.\n\nThat's not how I remember it going, Erica thought.\n\n\"Uh, hi. I assume you are also...\" she said, but the room didn't feel receptive. Erica shut up, taking in more of the scenery. Everyone had turned to look at a statue in the corner. It was a very realistic depiction of some ancient angelic figure, or something. Then, the statue came alive, and came straight for Erica and Ryan.\n\n\"Oh shit! Is that Eleftheria the R...\"\n\n\"Silence! Ryan, why have you brought a stranger into our home? How have I not made clear the basic rules of your situation?\"\n\n\"Look, Ellie, I touched her. It was an accident, just kill me now. Then help her.\"\n\nEleftheria looked at Ryan with real hate, and then at Erica, with measured coldness. \"Why do you speak my name, stranger?\" she asked her.\n\n\"I recognize you from a book about the...\"\n\n\"That's enough. You are the keeper of the society library, are you not?\"\n\n\"Yes.\"\n\n\"I recognize you now. Do not presume to know truth from legend, and do not speculate on my history. I can see why Ryan failed you, though. You are just as picturesque as the others.\"\n\n\"Oh, come on, I didn't choose anyone. I didn't even know I had any powers when I met the others. It was all an accident,\" Ryan said.\n\n\"Come now fallen soul, look around you. Do these ladies look like ordinary women?\"\n\nRyan had no answer. There was a silence.\n\n\"A... actually, it was all my fault,\" Erica confessed.\n\n\"What?\" Ellie asked.\n\n\"Ryan didn't do anything to me. He didn't fall or fail, or anything. I saw his tattoo and recognized it, and I touched it on purpose, even though he tried to stop me.\"\n\n\"Why in the heavens would you do something like that, girl?\"\n\n\"Because it's Magic. It's all I ever wanted, and I know I made the right choice. I've already felt it, and I wouldn't give it away.\"\n\n\"Ryan. Is this true?\" Ellie said.\n\n\"Oh, come on Ellie. She's not an enemy. Your job is to protect the girls, right? So that includes her now, too. In your mind it's always me that's the bad guy. And even though what she said is kind of true, I'll still take the blame on this one. I could have avoided this if I'd been more cautious. So, I'm going to be on indefinite house arrest from now on, as part of my punishment, and you can start by explaining Erica here the basics of this whole curse thing. And hey, I don't even need to run your errands anymore, since we have a librarian now.\"\n\n\"Wait, Eleftheria is your research partner? You're collaborating with an...\" Erica said.\n\n\"Silence, lady. Did I not tell you to stop the speculation? Whatever you think you have read about me is false. Ryan, I accept your terms. You are still my assistant, but are not allowed to leave the home anymore.\"\n\nRyan laughed.\n\n\"Pray tell me, what amuses you so?\" Ellie said.\n\n\"Claudia is going to have a field day with this. As soon as she hears I made a new slave girl and I'm on house arrest, she going to rip me a new one. Ha. And.. uh, sorry, I didn't mean like a slave slave, just, that's how she would see it, or, see me seeing it, so... I'm just going to shut up now.\"\n\n\"Wait, there's more? How many girls are there?\" Erica said.\n\n\"Oh? No, just five. Well, six now, with you. If you ask Ellie, I'm sure she will tell you that she is not one of you, she is just here to protect you.\"\n\n\"I'm sure when Claudia shows up, it'll be you ripping her a new one, as always,\" Remy quipped, joining the conversation. She was the first of the others to start recovering from her shock.\n\nEllie explained the most essential features of the curse to Erica in a very concise and elegant manner.\n\nThe other girls were somewhat embarrassed about their casual nudity, except for Remy, but they all got over it quickly. They got on with their evening, although in a slightly more reserved manner. Eleftheria's lessons had gone through to them and there was very little \"unnecessary bashfulness\" in the house these days. Ryan never understood what Ellie was after with that. Maybe she really believed it was somehow \"efficient.\"\n\nAs Ryan should have guessed, Erica seemed to know a lot about the curse already.\n\nRyan went around and apologized to the girls, but they all agreed that Erica's motivations made their own kind of sense, and that she had been brave to confess the truth. There was all kinds of hugging, that then turned into all kinds of kissing and groping, but Ryan tried his best to keep things low key, for now, though, so as not to scare the new girl.\n\nEllie was eventually done with Erica and she went back to her post in the corner.\n\n\"That is actual, real magic,\" Ryan said, pointing to Ellie, \"I'm just a guy with a curse.\"\n\n\"No, I felt it. Your magic is real and I'm still glad I was brave enough to do it, but I now realize I was selfish to force myself on you. This is your home and this is your life, and I'm an intruder here. You didn't invite me. I invited myself into your home and that was wrong of me.\"",
        "\"Apology accepted. I think this curse has a way of working itself out, and six girls is not that bad. If I can manage five, I can manage six. If there were like a hundred of you, then I would be in real trouble.\"\n\n\"Oh yeah, is that what you do? You manage us?\" asked Lizzy.\n\n\"I manage the situation. You, little minxes, I manhandle.\"\n\nErica blushed severely.\n\n\"Oh, sorry, I'm just joking,\" Ryan said.\n\n\"No, it's like I said, it's your house, all of yours, and I should have known what I might be stepping into. I'm glad you all seem so happy here.\"\n\n\"Yeah, except Claudia, she's only happy afterwards. The rest of us, though, are always happy,\" Remy said.\n\n\"Who's this Claudia?\"\n\n\"She's Ryan's ex boss,\" Remy said, and laughed.\n\nThe girls did a round of introductions and they all shared their stories of how they ended up with Ryan. There were some hugs. Remy went into way more detail on the actual sex acts than anyone else and Ryan had to twist her nipple to shut her up. She got off on that, a bit too much. Only after, Ryan considered how that must have had looked, to Erica.\n\nTo his surprise, Erica got up and walked right to him. With trembling hands, she started to undo her dress. \"Well, I guess it's only fair for me to get with the dress code.\"\n\n\"No, you don't have to do anything you don't want to do. There's no hurry. You can do whatever you want, when you want. And there's no dress code. The curse will eventually do it's thing and then you can just come to me and ask me to help you, but other than that, you don't need to do anything for me.\"\n\n\"Thanks, but I want to. I chose this so I'm doing it.\" Erica dropped her cardigan and then her dress. She stepped out of her shoes to take off her pantyhose and then stepped back into the shoes. Her work shoes were somewhat sensible but they did have fairly high heels. Ryan guessed she was one of those girls who always wanted to wear heels because of how short she was.\n\nHer shoes were nothing compared to the ridiculous stiletto heels the others were used to wearing these days, though. Ryan honestly felt like he had had nothing to do with that. It was always Remy. She was the first to stop wearing shirts, stop wearing skirts, switch to fancy lingerie, start with the heels, go topless, and so on. And eventually the other girls always followed. Everything just became the new normal. They'd probably be down to nothing by now if he hadn't stopped them by saying he liked the heels-and-lingerie look.\n\nRyan snapped back to reality when Erica's shaking hands went for the clasp of her bra. She dropped it and instinctively went to cover up her breasts, but then turned the motion into a sexy rub.\n\nHer breasts were small but not insignificant, well proportioned to her slim body. She was unbearably cute, all tiny and blushing. She was very much classically beautiful but also just super adorable because she was so shy and petite. She sighed as Ryan took off her glasses.\n\nThere she was, near enough naked, with everyone watching, and she seemed to be able to handle it. After her breathing had evened out and her blush had faded, Ryan opened his arms in the universal I-want-to-hug-you gesture. Erica was quick to throw herself into his embrace. The flow of energy was an instant reward for her. It came from wherever their skin touched, and she soon pulled up his shirt to get more surface to contact -- something all the girls had done many times.\n\nLizzy, watching by, felt like she was the only one to appreciate the raw Pavlovianism of the whole thing. Was there ever a more absolute form of action and reward? Take clothes off, receive pure happiness. No wonder most of the girls loved Ryan, the man, by now, along with the energy. Lizzy was feeling it, too, and she didn't care. Happiness was still happiness, even when it was used as a blunt instrument. Despite seeing through what was happening to all of them, she was genuinely happy for the new girl. The energy felt so huge it was hard to imagine there not being enough for everyone.\n\nThere was a new round of welcome-hugs from the other girls, this time warmer and more sincere. New girl Erica's bravery was rewarded again, and she was already on her way to integrating with the group.\n\nIt was all very beautiful and heart-warming, sure, but there were also lots of boobies rubbing into other boobies, Ryan noticed. Erect nipples sliding up and down, other people's nipple piercings rubbing into other people's smooth skin. There were asses there, practically naked, or actually naked, and lots of bending over when the taller girls hugged the tiny ones, all with their high heels on. Those things really did work magic on all those calves and thighs and buttocks. Such a beautiful invention, Ryan mused.\n\n\"So, Erica, there is the matter of...\"\n\n\"Yes.\"\n\n\"Because if you want to go to work and stuff you'll need me to...\"\n\n\"Yes.\"\n\n\"So, right now?\"\n\n\"Yes.\"\n\n\"I do have a bedroom, you know, it's right there.\"\n\n\"Yes...\" she said, and kissed him. It was a deep and sloppy face sucking thing.\n\n\"...or am I cutting in line here, or how does this usually work?\" she asked, after catching her breath.\n\n\"No. It's pretty much just you come ask me and it's my duty to serve you.\"\n\n\"Oh, that is so hot.\"\n\n\"Okay, ladies, see you in a bit. We'll be in the bedroom,\" Ryan said, his focus already narrowing to the point where it was hard for him to focus on anything other than scent of Erica's naked flesh.\n\nErica was now all over him. The rising sexual tension had revealed to her the true nature of her newfound happiness. It was a horny, orgasmic kind of bliss.\n\nRyan was, in general, able to control himself quite well these days, but he didn't want to do so now. He grabbed the new girl by her butt cheeks and lifted her into his lap. He could feel the damp spot on her panties with the tips of his fingers as he carried her to the bedroom.\n\nRyan was too busy with his hands to close the door but that wasn't a big deal in this home anymore. He laid Erica on the bed and started licking her legs up and down. Her moans came out as little wavering squeaks. She was biting her finger.\n\nHe made his way all the way up to the seam of her panties, and then stopped to undress himself. Erica had no time recover before he dove back in. Ryan could feel the energy flow through his face and his tongue. It was hot, powerful, and arousing. He knew it was supposed to be even better for the girls, based on what they'd told him, but he could not imagine how that could be.\n\nDespite still being angry for the stunt Erica had pulled, and how she had weaseled her way into his life, Ryan wanted to fuck her. She was hot. He'd wanted her since he'd first seen her, it was now safe to admit. He pulled her panties off and spun her around in one smooth motion. He burrowed his face between her butt cheeks and made some obscene noises. Erica's first orgasms started shaking her body.\n\nErica was in a dream-like state and the jolt felt like it should have woken her, but instead, she fell deeper and deeper. Ryan soon became just an abstract wall of pleasure to her, washing over her very soul.\n\nShe was totally limp on the bed. Ryan had given her way too much. He was used to the other girls having their tolerance now and had forgotten how delicate they had been in the beginning.\n\nHe rolled her over, to her back, and pushed her legs up for better access. He laid his cock on her cute little belly and took a look at her. She really was beautiful, like a little angel with her shock-white hair. He gave a gentle twist to a rock hard nipple and a little slap on her cheek. Nothing. She just smiled and gave a happy little giggle. No need to bother with any of that then, Ryan thought, and got on with it.\n\nErica's pussy was as cute and tiny as the rest of her. His bulging cock looked grotesque, rubbing against it. How is this even going to work? He pushed firmly, but not too fast. She was definitely tighter than any of the other girls. Luckily, she was also gushing wet, so he got halfway in. Erica was now shaking and moaning because of all the small orgasms. Ryan started to move, keeping a slow but firm pace. Eventually he started getting deeper and deeper. It was amazing to see such a petite body take all of him. Once he got balls deep, he started to go faster and harder. He pushed Erica's knees toward her lovely face and her willing body yielded under his touch.\n\nRyan continued to roll her around, into different positions, penetrating her from every angle.\n\nHe didn't want to overdo it, however, because it was her first time with him. In what was quite soon for him, he pushed deep, one last time, and released a sizable load. He waited a few moments to let things settle. Her pussy convulsed as he pulled his cock out. Ryan left the limp girl on the bed.\n\nAs he turned, he saw Annie, Lizzy, and Remy standing in the doorway, rubbing each others' tits and asses. Ryan had expected this and he was ready to challenge them with his gaze. His cock was rock hard.\n\nRemy was the first to obey, as always, and took two steps forward. She got on her knees, opened her mouth wide, and stuck her tongue out. She attached a chain to her collar, and offered the other end to Ryan. He took it and pulled it tight as he stepped toward her, pushing his cock straight down her throat, all the way. He knew she could take it. He grabbed her hair and fucked her mouth hard, keeping the leash tight.\n\nLizzy had always had a morbid fascination with porn. It had read to her more like a psychological study, rather than just naughty entertainment. It was a commentary on the human condition, a concentrated form of all the things polite society wanted to suppress. Animal instincts and power games were amplified for shock value. Borders had to be pushed. Her own taste had been softer and cuter, but she could understand why some people would be fascinated with the more extreme stuff.\n\nHow times had changed, she thought, as she watched her best friend take that fat cock down her throat. Goo was dripping onto Remy's chest. But this was not a porn set, this was Lizzy's own real life now. Remy had been a wild girl before all this, however, and they would've never become friends if not for the curse. Lizzy would have had no reason to try and make friends with someone like her.\n\nRemy liked to drink and party, but in private Lizzy had found her surprisingly wise and philosophical. Melinda and Claudia were more intelligent and educated, more cultured in their own way, but Remy seemed to secretly be the deepest thinker of the whole bunch, next to Lizzy herself, of course.\n\nThe contrast here was striking, between having deep, beautiful thoughts inside your mind and having a thick, juicy cock jammed deep down your throat. Oh, how times have changed, Lizzy thought, as she felt the need to go lick some of that juicy goop off of Remy's pierced nipples. She got on all fours and started crawling toward the smell of sex.\n\nAnnie watched her go. She had never been able to figure Lizzy out. Lizzy always seemed so unfazed by everything, even bored. How could she be like that, with everything going on? And then, when it came to the sex, Lizzy was still always there, going along with Ryan's every whim, just like the rest of them. She obviously feels his power so why isn't she showing more love for him?\n\nAnnie had had a few friends like that, growing up -- people who just liked to think and talk, and never really did anything. But look at her go now, sucking on Remy's nipple, with her eyes closed. Lizzy always looked so happy and dedicated when doing all the sex things, but afterward, she went back to looking like she needed to cure cancer, or solve world hunger, or something, before she could take it easy and just smile a little. Annie didn't get it.\n\nLooking at Lizzy go to town on that nipple, though, made Annie want to join her. What is it with this? It was Ryan she loved and Ryan she wanted, but watching him degrade the other women always made Annie so horny she could lick a bookshelf, or even the floor. Maybe it was because she knew how the girls felt, no matter what it looked like to a bystander.\n\nAnnie's fingers were deep inside her own pussy now. Lizzy's ass started to look more and more inviting. The little pearl of wetness between her pussy lips sat there like dewdrop on a flower. Annie knelt behind Lizzy and gently caressed her ass. Carefully, she put her lips on her pussy, and gave a little kiss. Annie knew it would smell nice and clean down there because they had just showered together. It was nice to be physically close to someone even if you didn't understand how their mind worked. Annie buried her tongue into Lizzy's pussy and she could feel the residual energy flowing into her, first through Remy and then through Lizzy.\n\nRyan gagged Remy until she started to pass out. Not from the energy, but from actual lack of oxygen. She had told him once the rush felt like a shot of tequila for her. Ryan was happy to oblige. He let her fall slack on the floor. As soon as she caught her breath, she was laughing.\n\nRyan moved on. Lizzy was next in line. She mumbled some token words of fake resistance as he plunged into her face, but Ryan knew to go easier on her. His hold on her hair was gentler, and his pace slower and more deliberate. Soon, Lizzy's body relaxed and he could get deeper down her throat, too.\n\nAs soon as Ryan felt her orgasm, he flipped Lizzy around and went hard with his thumb on her clit. Lizzy howled like a lunatic and let out a big squirt. \"Uh, you bastard, this is so unfair,\" Lizzy moaned. \"How can you always do that?\"\n\nRyan was proud of this recent new discovery. \"I think I'm going to fuck you in the ass tonight. That will give you something to complain about,\" he said.\n\nLizzy gasped in fake horror, giving Ryan exactly the response he had wanted. She didn't say anything. She knew she would love it. To her, heterosexual anal sex was all about dominance and submission, and she wasn't into that. But she didn't hate it, either. Considering the circumstance, it kind of made sense. Ryan didn't like throwing the s-word around, but Lizzy knew she was a slave, as far as sex was concerned, no question.\n\nLizzy liked to offer token resistance, as a game in a safe environment, just to see how Ryan reacted. Some of the other girls seemed to like anal for real, but with the energy, it didn't matter. With the energy, everything felt good, and Ryan was obsessed with anal. He always had to do it, at least a little bit. Even when they'd fucked normally for hours, he sometimes slipped the monster into Lizzy's ass just to cum there. He always put a thumb in, or one or two fingers, or one of the many toys from Remy's treasure chest. Secretly, Lizzy was starting to like it. She certainly didn't mind it.\n\nShe could see all the girls becoming more and more perverted. It was not just Ryan turning this apartment into and endless porn set, it was all of them.\n\nRyan fucked Annie next. He went hard and fast and held her by the neck, one hand constantly manipulating her ample boobies.\n\nErica was awake again and she watched on with a newfound understanding. This was not how she would've guessed her evening was going to go. She had not counted on finding spiritual enlightenment in the hands of a one man orgy machine. The energy flow had been nice to feel, but now that she had it inside her, she finally understood the whole situation. This was the happiest she had ever been. In the middle of this strange domestic orgy, she had found her home, too.\n\nRyan rotated the girls. He piled them up and then pushed them over, going from hole to hole. He choked Remy, twisted her nipples, and rode her ass hard. At some point, Erica started kissing and licking Ryan's feet. Ryan made good on his promise to fuck Lizzy in the ass, too, but he made her ride him so that she was the one doing it to herself. He rubbed his whole slimy crotch all over her face afterward.\n\nRyan had decided that this was a special occasion so Annie ended up taking it in the ass, too. This was a rare treat and took the help of the whole gang. Remy was the fluffer and Lizzy held Annie's hand. Ryan went slow and careful -- and with lots of natural lubrication, provided by Annie's own pussy, Ryan's cock, and Remy's face -- and also with some store-bought lube. They had loads of that stuff around the apartment now.\n\nUsually, Annie only took fingers or toys. Her breathing was shallow and she could not help but let a few tears roll down, but her orgasms were sharp and powerful. She was happy she could give him so much of herself to Ryan.\n\nThrough this all, Erica kissed and licked Ryan's feet. She had already learned to pace herself so as not to let the power knock her out all the time.\n\nA Bit of Self Discovery\n\n\"What do you mean, you won't let me in, asshole?\" Claudia hissed. \"You have to. I need you to... I need the thing and you have to give it to me.\"\n\n\"No. Not unless you wear the plug,\" Ryan said.\n\n\"That was a stupid bet in your stupid card game. You can't be serious about that,\" Claudia said.\n\n\"I'm dead serious. You made a promise to me and I need you to honor it,\" Ryan said.\n\n\"No. The curse supersedes that. Stop your stupid games and give me cum,\" Claudia said. \"Ellie? Ellie, are you there? Ryan is refusing me his...\" she started to yell.\n\n\"Okay, okay. We try it your way. No games,\" Ryan said.\n\nClaudia pushed her way in, frowning. She grabbed him by the arm and dragged him straight in the bedroom, not even saying hi to the other girls.\n\n\"Get naked,\" she said.\n\nRyan had no problem obeying. He was comfortable with Claudia's temper by now. Claudia took her own clothes off and pushed Ryan onto the bed.\n\n\"Get hard,\" she said, and slapped his balls.\n\nIt stung a little but Ryan kept his cool. \"Make me,\" he said.\n\nClaudia gave him an awesome blowjob. It was wet and thorough. It didn't occur to her to do anything except her absolute best even though she was angry. She really got into it. Once Ryan reached his full glory Claudia gave him a victorious smirk, as if she'd proven something. She sat on the cock and it sunk snugly into her dripping pussy.\n\n\"You don't do anything. I'll handle this,\" she said. She began to grind herself on him, up and down, twisting her hips. Claudia was soon lost to pleasure and she didn't protest when Ryan squeezed one of her rock hard nipples.\n\nAfter a small orgasm, Claudia said \"come,\" but Ryan had no intention of letting her off so easily. He kept the energy on a slow trickle, too. Claudia started to fuck him harder. She got more and more frantic as she realized she was not having the effect she had hoped on him.\n\n\"Come on, you bastard. Give me that cum,\" she grunted.\n\n\"No. You need to earn it,\" Ryan said.\n\nClaudia knew what he meant, she could feel in her ass. It was a physical sensation. As much as she loved the cock in her pussy, it was not enough for her, not anymore. Something had broken inside her brain. She needed the extra humiliation now, to push her over the edge. Her body knew there would be more raw pleasure to be had for her if she chose to go there. Even just the thought of fingering her ass, right in front of Ryan, was enough to push her agonizingly close to a proper climax, the kind she was used to now.\n\n\"You fuck! What have you done to me? You've ruined me,\" she said. \"Please, just...\" She felt her scrotum pulsate and she slid her hand there. Claudia gasped in shock when she realized her asshole was already winking open, wide enough to welcome several of her fingers.\n\nRyan laughed out loud as Claudia came from fingering her own ass.\n\n\"Please, give me your cum,\" she said.\n\n\"You wanted to do it yourself. You know what to do.\"\n\nClaudia's asshole found its way around it's favorite cock. It lowered itself on it and hugged it tight. The physical sensation was familiar and comforting, but in her brain it was the idea, the humiliation, which aroused Claudia on a completely different level. She could only whimper as she felt her body move on it's own. It knew what it wanted. Claudia bent her head back and wailed in anguish.",
        "Then she let go.\n\nEven without much of the magical energy, a different kind of warmth spread through her body. Her orgasms came slow and deep, in a constant stream. The more it humiliated her to be such a blatant butt whore, the harder she shuddered.\n\nIt took her a long time to finally exhaust herself but she eventually collapsed onto Ryan's sweaty chest. It felt good. It felt right. It was a safe and familiar resting place for her now, even without getting her magical load of cum -- a load that would release her from her torrent of conflicting emotions.\n\nShe let a little tear roll down her cheek but even Ryan could tell it was a not a big deal. It was out of relief, or maybe just exhaustion. Inside her mind, Claudia really wanted to hate how normal it felt to surrender.\n\n\"Promise me you'll be a good girl, and do what you're told,\" Ryan whispered, gently.\n\nClaudia mumbled in the affirmative. When she realized Ryan was waiting for more, she said \"I promise,\" out loud.\n\n\"Promise me that from now on, whenever you come here, you will wear your buttplug,\" he said.\n\nTingles shot through Claudia's tired body at the mere thought. The plug would be an extension of Ryan, never letting her forget the disgraceful amount of power he held over her body now -- no, not just her body, but all of her.\n\n\"I promise,\" she said. \"I want it. I'm sorry I don't have it. I can go home and get it.\"\n\n\"No. But next time,\" Ryan said. He let the energy loose.\n\nA resplendent wave of euphoria washed away all of Claudia's worries, and like a bird of fire from the ashes, her revived body rose again to serve her Master. But this time, she would do it shamelessly. She pumped herself up and down, hard, on that cock again. It was still in her ass and had never gone soft. Ryan pushed up to meet her thrusts and fucked her right back.\n\nClaudia's orgasms were even harder than before and she screamed in joy as she felt his gift fill her. She stopped keeping score. The battle was lost. But she would never tell him that.\n\n---\n\nRyan was doing well. He was happy. He had settled into his new life and Erica, the petite blonde librarian, had settled into the family nicely. Almost too nicely, he sometimes feared.\n\nErica was crazy. Ryan could see it in her eyes. She literally worshiped him. The rest of the girls were there because the curse made them love the sex. Erica was there to touch the divine. Every time Ryan entered the room Erica looked like she wanted to prostrate and grovel. And often, she did.\n\nIf she brought him a bowl of cereal, she would kneel, cast her eyes down, and offer it to him as if it was a sacrificial gift.\n\nThe other women were at the point where they liked to hang around topless, but in heels and lingerie. They'd followed Remy to that point. Erica, however, preferred to be completely naked. It seemed to pain her to hide her body from the subject of her adoration.\n\nAt least she was clever enough to not stop wearing makeup. Ryan liked to see how beautiful his women were naturally, too -- in the mornings or after a shower, and so on -- but they were even more gorgeous when they put some effort into their eyeliners and mascaras.\n\nRyan was lounging on the couch, watching a movie. Annie was laying across his lap, topless. Ryan didn't have any pants on and Annie was idly caressing his semi-hard member. Annie and Lizzy were the most likely to just lounge around and chill out on the sofa with Ryan.\n\nErica was at Ryan's feet. \"Please, Master, can I touch you?\" she said.\n\n\"Stop groveling. Do what you want,\" Ryan said.\n\nErica gasped from joy and started to give him a foot massage. Every now and then she would kiss the foot and then continue rubbing it, like it was Aladdin's lamp or something.\n\n\"You know he's just a man, right?\" a sudden voice said. Eleftheria had taken a few steps toward them and she was staring at Erica. The two had not got on well, which was strange, since Ellie didn't usually care at all about what the mere mortals were up to.\n\n\"He may not be up in your Pantheons, but that's good. He's right here and I can touch him. What more could a girl want than someone to actually touch?\" Erica said.\n\nEllie kept her icy stare.\n\n\"What's the matter?\" Erica said. \"Are you jealous? Do you have someone somewhere you want to worship like this?\" She kissed Ryan's foot again. \"Or are you too much of an outcast to ever be allowed back?\"\n\n\"You know nothing, human,\" Eleftheria hissed. \"You presume to know me, but you know nothing.\"\n\nThere was a silent indignation boiling inside Ellie, under the surface. It was the most emotional Ryan had ever seen her.\n\n\"Well, he definitely fucks like a god,\" Remy quipped. She was on her knees on the floor, too, and she was wearing her slave collar, and her buttplug.\n\nEleftheria ignored her comment.\n\nErica lifted Ryan's foot between her breasts and kept rubbing it.\n\n\"Are you all right?\" Ryan asked Ellie.\n\n\"What? Why would I not be? Your personal affairs are beneath me,\" she said.\n\n\"I'm sorry about her. I didn't mean to take her. But it's not her fault,\" Ryan said.\n\n\"That's not what... I don't care. If she wants to worship you, then it's to her own embarrassment. Childish,\" Ellie said. She turned around and made her way back to her spot.\n\n\"I think she's jealous,\" Erica whispered. She was blushing. Ryan thought it might be from Ellie accosting her but Erica was also just really into that foot of his.\n\n\"I'm really not worth all this. Not even a little bit. You don't have to be this... zealous about things. It's kind of weird, even. Sometimes,\" Ryan said.\n\nErica smiled. \"I don't care. I'm sure you'll learn to love it,\" she said.\n\nRemy scooped in and took Ryan's other foot.\n\nThe two were always trying to out-grovel and out-submit the other, which was fun, especially in the bedroom. But here, just chilling, it was weird.\n\nOver the next few weeks, the household got used to Erica's behavior. It was still a shock to Ryan when Erica first offered to be footstool for him. He tried to keep his weight off of her at first, but she would have none of that. She wanted him to lean on her, she wanted to feel the weight.\n\nIt came as zero surprise to anyone when Erica got her own copy of the tattoo. How did she get Remy to do it for her, though? Marking her must have been more important to both of them than their budding rivalry.\n\nAndy to the Rescue\n\nAndy had been close to going up to the apartment to call on Ellie many times. Early on, he had been paranoid about the mission she had given him. He'd seen \"suspicious\" people everywhere. He'd been seconds away from getting up and going there. That's what she'd told him to do: just ring the doorbell and ask for Ellie. Andy had to admit he was curious to see what went on in there. The pressure of his obligation had weighed on him. How was he supposed to know what qualified as an emergency? Or what if he missed it?\n\nNow, however, he was sure. Even an idiot couldn't miss it. Now he understood what Ellie had meant by obvious threats: There were literal ninjas crawling up the side of the building. Or, at least, these people were hooded, dressed in all black, and able to scale walls with their bare hands. Andy got up, gathered his stuff, and left the cafe.\n\nHe crossed the street, taking great care to look anywhere except at the van. It had parked there just a minute ago and several people -- or, ninjas -- had silently slipped out the back. In a spy game masterstroke, Andy managed to snap a photo of the van's license plate with his phone. He also did his best not to look up. He'd already seen enough to be sure the ninjas were there, and that they were real. He kept his eyes to the pavement and went in the front door.\n\nAndy knew the floor and apartment number so he went straight for the elevator. He hurried to the door and rang the bell.\n\nPurple Girl opened. She was wearing a large tee and white panties. Her smile was radiant, but as soon as she saw Andy she turned serious. \"Who are you and what do you want?\" she asked him.\n\n\"I must speak to Ellie, it's and emergency.\"\n\n\"How would you know Ellie, exactly?\"\n\nAndy was desperate. He could tell now that Ellie had not told about him to the others. \"Sorry, excuse me, I'm really sorry about this,\" he said, as he shoved Remy back and forced himself into the apartment.\n\n\"Ellie? Ellie!\" he shouted, as he looked around.\n\nRemy was angry. She was definitely the kind of woman who didn't take kindly to men pushing her around.\n\nThe shop clerk, Lizzy, was also there. She was on the sofa, topless, and covering herself with her arms now. There were clear sounds of sex coming from the bedroom. Andy saw Ellie standing in the corner. She was wearing an antique style white tunic, a thin and skimpy one, and she was holding a spear. The look complimented her personality perfectly.\n\n\"Ellie! Something's coming, some kind of ninjas or something are climbing up the walls.\"\n\nEllie woke up from her stasis and looked at him. Remy was still cursing at him, and just as she was about to slap Andy there was the sound of breaking glass from the bedroom.\n\nEllie dashed to the other room with superhuman speed, she broke the door completely off it's hinges on her way. Andy heard screaming and shouting and he could see flashes of black as one of the ninjas dashed across the now open doorway.\n\nRemy ran to Lizzy and grabbed her into a hug. She lifted her over the back of the sofa and pulled her down with her. The girls held their embrace as they crouched behind the sofa, to hide.\n\nAndy was frozen where he stood, just a few feet from the front door. He just stared as one of the ninjas came to view again. The assassin stared at Andy for a half a second and then snatched a throwing star from his belt. He aimed at Andy and let loose, but a golden spear tip flashed against the intruder's head.\n\nTwo stars hit the door behind Andy, but he was spared. He flinched and ducked, long after the stars had hurled past him, and then crawled to where Remy and Lizzy were hiding.\n\nThe melee was over fast. Andy could hear a car speeding away outside. As the noise of fighting and chaos died down he lifted his head to see what was going on.\n\nRyan was in the bedroom doorway. He seemed fitter and more muscular than Andy would have assumed. He also had a surprisingly big cock, still sporting a rock hard erection. He actually looked somehow surprisingly hot now and Andy was absently noting that maybe it would not be completely impossible for him to actually be dating one of these girls -- but still not all of them, never all of them. No man could do that.\n\n\"What the hell are you doing here?\" Ryan said.\n\n\"I came to warn you. Ellie told me to. She said if I saw something I should come and tell her.\"\n\nThe hiding girls got up and ran to Ryan as soon as they heard his voice. They held him tight and clung to him, like to a barbarian king on a fantasy poster. They kissed him everywhere. Their relief was palpable.\n\nAnnie and the new girl, Erica, emerged from behind Ryan. They hugged him, too. They were both naked. This was the first time Andy had seen Annie anywhere near naked, and his whole body trembled. Andy had dreamed about her, but still, she was more beautiful than he could have imagined. Her long body bent as she threw her arms around Ryan's neck. Erica went to her knees and wrapped herself around his leg.\n\nAndy could only stare as the four gorgeous women expressed their adoration for his former colleague.\n\nRyan stopped kissing Annie and turned his eyes back to Andy. Annie followed his gaze, and gasped as she saw him. The other girls turned to look, also. Everyone was staring at him now, but Andy could only stare back.\n\nAnnie blushed, and flinched, as if she wanted to cover herself, but then decided to keep her hands where they were: around Ryan's neck. The look on her face turned confrontational, as if she was silently challenging Andy to dare judge her.\n\nLizzy moved behind Ryan, for cover, but kept her hands on his hips. Remy turned to face Andy. She leaned on Ryan's shoulder with one arm and put the other on her hip, which she cocked out. The pose was like a photo model's but the look on her face was the same as Annie's, defiant.\n\nJust about at the moment someone should have said something, anything, Ellie came out of the bedroom, dragging the bodies of three ninjas behind her. She dumped them on the dead one, the one that had tried to kill Andy, and started to tie them all up with some rope from Remy's treasure chest.\n\nRyan wiggled himself free from the girls and went to get some boxers from the bedroom. Annie, Lizzy and Erica skulked into the other bedroom and soon reemerged with some clothes on. Annie had put on a loose, baggy cardigan that mostly hid her form. Lizzy had jeans and a tee shirt. Erica only wore a thong.\n\nTurns out, the ninjas were actually still alive. Ellie had only knocked them out. She searched them and found an interesting ancient amulet on one of them.\n\nRyan and Ellie argued about something that went right over Andy's head. He just ogled at all the pretty ladies. Annie looked like she wanted to say something to him, but did not do so. Eventually, Ellie thanked Andy for his help and ushered him out.\n\nThe next day at work Annie demanded an explanation from him. She was angry, but Andy managed to convince her that Ellie had enlisted him out of the blue. \"You know her, right? Would you dare say no to her?\""
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "library",
        "workplace",
        "group sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-07"
}