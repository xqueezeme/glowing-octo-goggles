{
    "title": "I Love You Ch. 10",
    "pages": [
        "Darleen sat on her toasted coconut colored suede love seat, directly across from the large couch her nephew sat on. Darleen sat there barely able to control the tears burning the surface of her eyes. She was beside herself with grief as she looked at him through new eyes. It broke her heart to have to finally admit that he had fully gone off the deep end. She had so much hope for him and had never stopped praying for a miracle. Now her hope was destroyed along with her respect.\n\n\"Jakub Dorian Stone, what have you done?\" she asked her eyes so full of pain that Jake couldn't bare to look in them. He put his head down, filled with the shame of knowing that he was the reason she felt this way. He felt like a bad child who knew he had done wrong and wished there was some way to rectify his actions or at least attempt to hide them. He could do neither.\n\n\"She was at the abortion clinic Aunt Dar-.\"\n\n\"So you fly off the handle and abduct her?\" she cut him off \"Was that your solution Jakub?\" she shook her head in disgust, \"What were you thinking?\" she scolded him.\n\n\"I wasn't thinking.\" he said surprising the hell out of her. He had never once said those words nor had he ever taken any blame for anything he had ever done wrong. \n\n\"Where is she now?\" she demanded and he hesitated for a moment before looking up at her.\n\n\"Chained up in the guest wing.\" he said completely ashamed to admit it. funny how it made so much sense to lock her up at the time, but now trying to explain it to his angry aunt made him feel like a jack ass.\n\n\"WHAT?!\" she yelled, appalled by his actions.\n\n\"I honestly didn't know what else to do,\" he said feeling the disgust of his actions and the frustrations by his severe over reactions. \"I just didn't want her to kill my baby.\" he said his eyes glazing with tears.\n\n\"You have to unchain her.\"\n\n\"I can't, she could still have the abortion.\"\n\n\"Jakub, this is serious, she's pregnant!\" she tried to reason with her, \"Do you have any idea how many complications that come along with pregnancy? What if something happens to her or the baby? There should be a doctor on the premises at all times! Especially when she's under such stress!\"\n\n\"I did hire a new maid who was a former nurse for over 5 years. She's been taking care of her and making sure she is healthy.\"\n\n\"And you trust this women enough to take care of the woman pregnant with your first child?\" she asked \"how long have you known this nurse?\"\n\n\"I met her the day I interviewed her for the job.\"\n\n\"So you're telling me you left her in the hands of a complete stranger?\"\n\n\"She had excellent references.\"\n\n\"References are easy to fake!\" she snapped ready to throttle her nephew, \"please tell me you've been keeping a close eye on her.\" she asked having a strong suspicion that he had not.\n\n\"no.\" he put his head back down and Darleen's hands began to shake in her frustrated fury.\n\n\"Dam it Jakub!\" she yelled and Jake's eyes widened, he had never heard his aunt curse before.\n\n\"I couldn't face her at first.\" he finally admitted.\n\n\"Well you have to face up to what you've done.\" she said realizing that this was hard for him. He had been so emotionally withdrawn his whole life, so this whole new wave of emotions and feelings were probably hard for him to comprehend and accept. He had done such horribly vicious things growing up and had never once showed or felt an ounce of remorse. It was almost reassuring to see him like this, for the first time he seemed almost human. \"You can't keep her locked up until the baby is born or until your shame subsides.\"\n\n\"I know.\"\n\n\"What you did was beyond wrong!\" she snapped.\n\n\"I know.\"\n\n\"And illegal.\" she shook her head wanting nothing more than to slap some sense into him.\n\n\"I know.\"\n\n\"And I expect you to rectify this problem. You can't just go around abducting pregnant women, for health reasons alone I demand that you let her go.\" she said.\n\n\"How?\" he looked back up at her, tears threatening to spill from his eyes. \"I can't let her go; I've tried over and over. I don't know what to do anymore. If I let her go, I know I'll loose her forever and I know she'll have that abortion! I can't live with that aunt Darleen.\"\n\n\"You go home; you unchain her and than you let that girl go.\"\n\n\"But-\"\n\n\"No buts', you set her free Jakub, I mean it! If she loves you than she'll-\"\n\n\"She doesn't love me.\" he cut her off.\n\n\"Well do you think keeping her prisoner will make her love you?\"\n\n\"no, nothing could make her love me again.\" he said feeling his heart clawing through his ribs and his lungs, jumping from the huge hole in his chest than falling dead to the floor, never to beat again. \"I know that now.\"\n\n\"You can't hold her against her will and you can't force her love Jakub. You just have to let her go.\"\n\n\"I know.\"\n\n\"Immediately!\" she insisted\n\n\"I know.\" he said, his head hung low and a spiked fist deep in his gut, grabbing and twisting.\n\n***\n\n\"Beatrix, come here!\" Geoff whispered loudly to his wife. Bea scuffled as fast as she could with the large tray of tea in her hands\n\n\"What is it?\" she asked\n\n\"look.\" he said and they both watched as Ludvine crept upstairs.\n\n\"She has no reason to be going back up that set of stairs.\" Bea said than handed the tray to her husband. \"Wait here I'm going to watch the monitor.\" Bea ran into her room and lifted the laptop. She waited for a full 5 minutes seeing no trace of Ludvine.\n\n\"Do you see her?\" Geoff asked still carrying the tray.\n\n\"No, she didn't go upstairs.\"\n\n\"Well she didn't come back down.\" Geoff shrugged his shoulders. \n\n\"I'm going to keep watch for a little while just to make sure.\" she said. Something was wrong, she could feel it in her bones, something just wasn't right.\n\n***\n\nJenna was on Harvey the minute he waked through the door.\n\n\"Where the hell have you been? I have been waiting here for you all day!\" she snapped at him.\n\n\"I'm sorry I-\"\n\n\"Did you go see Jake?\" she cut him off, in no mood for any of his bullshit excuses. \n\n\"Yes.\"\n\n\"You did?\" she asked incredulously \"Well does he know where Jezzy is?\"\n\n\"Yes.\" He admitted after a silent debate with himself.\n\n\"Well?\" she asked, her hands on her hips as she tapped her foot impatiently against the floor.\n\n\"She's with him.\" He reluctantly confessed.\n\n\"Is she?\" she asked automatically suspicious.\n\n\"Yes.\"\n\n\"Voluntarily?\" she asked already knowing the answer.\n\n\"Yes.\" He answered, automatically over whelmed with grief for lying to her.\n\n\"Liar!\" she yelled \"He's got her locked up doesn't he?\"\n\n\"Jenna calm down.\"\n\n\"No, you tell me the truth right now Harvey!\" he saw the fear in her red rimmed eyes; the tears now pouring down her cheeks. He couldn't keep doing this to her, he loved her to much to continue to lie.\n\n\"He has her chained up in the guest wing.\" He just spit it out.\n\n\"Oh god.\" she felt the air sucked from her lungs. \"She'll go crazy locked up like that.\" her eyes widened like a fearful child's. \"She can't be locked up like before.\"\n\n\"Before?\" he questioned.\n\n\"We have to get her out of there now!\" she started to panic, remembering what happened last time they were locked in the closet for to long, \"you don't know what she's capable of when she's cornered.\" Jenna grabbed her jacket.\n\n\"Jenna wait-\"\n\n\"No fuck you Harvey! If you try to stop me this time I will never ever speak to you again.\"\n\n\"No, I'm not going to stop you, I want to come.\"\n\n\"No, your ulterior motive would be to prevent me from reaching my destination.\"\n\n\"No I won't, I promise.\" he said and walked out of the room, \"just let me get my jacket.\" he walked into the living room, grabbed both his and her set of keys, scurried through the room and out the door than locked it once he was outside.\n\nJenna looked up hearing the front door close than lock. She ran to the living room and straight for the door.\n\n\"Harvey!\" she pounded on the door than went over to the window, he was standing right there. \"Let me out.\" she said\n\n\"Jenna baby we have to let them sort it out! We can't keep meddling.\"\n\n\"Meddling? He abducted her you schmuck! How is that trying to work things out?\" she smacked the window where his face was and he pulled back quickly.\n\n\"Jen!\"\n\n\"You better unlock that dam door right now Harvey or I swear-\"\n\n\"Jenna please, let them handle it, you knows he's not going to hurt her, he's just a brute who goes to extremes to get his point across!\" he shook his head, \"he really does love her Jen, he will not hurt her!\"\n\n\"I already know that stupid,\" she shook her head in disgust. \"It's not just her I'm worried about!\"\n\n***\n\nWhen the door opened back up, Jezebel was ready to re-start her battle with Jake. She was furious that he had believed that rotten whore of a maid over her and she wanted to hurt him so he felt as horrible and foolish as she did. So when Ludvine walked in, Jezebel felt her anger instantly re-direct itself.\n\nLudvine had waited until Jake got into his car and left to see his aunt. She knew she had a little bit of time to get some real trouble rolling. Her plan was well thought out and would make Ludvine seem like the innocent victim being bullied by a hot headed, big mouth, she devil. She was there with the intentions of getting Jezebel to become violent and getting her good and paranoid. She knew exactly what to say to provoke her and make her act out. Than when Jezebel went to Jake accusing Ludvine of saying such ridiculous things, her story would seem to far fetched to believe and Ludvine would point that out as she denied everything. \n\nJake was intelligent and sensible, he would believe his soft spoken, diligent and submissive maid over his shrewish, big mouth, over bearing, stubborn, semi psychotic ex-girlfriend. It was a fool proof plan.\n\n\"I thought he fired you.\" Jezebel looked at Ludvine with a repulsion that bordered on amusement.\n\n\"He could never fire me,\" she smiled shutting the door behind her, \"he's falling in love with me.\" she said and Jezebel burst out in laughter, infuriating Ludvine enough to start telling more lies. \n\n\"You're such a silly simpleton.\" Jezebel's grin was mocking.\n\n\"I'm a simpleton? You're the only one dumb enough to believe that having sex with Jake could actually make him change his mind.\" it was her turn to chuckle as Jezebel's eye brow raised, \"Yes he told me alll about that. I honestly didn't think you would stoop that low, but he assured me that you were such a slut that it would be impossible for you to resist that old trick.\"\n\n\"Liar.\"\n\n\"Can't you see he is trying to break you Jezebel? It obviously worked; you do seem more docile today.\"\n\n\"You're so desperate, it's pathetic really. I could almost feel bad for you.\" than her grin changed \"almost.\"\n\n\"Instead of making fun of me you should be thanking me.\" she spat\n\n\"Thanking you?\" she could not stop grinning, the bolder Ludvine became, the less sense she made.\n\n\"Yes!\"\n\n\"Alright, thank you Ludvine for being such a ridiculously gullible bitch and giving me a good laugh.\" she smiled ear to ear.\n\n\"Good girl, now thank me for talking Jake into letting the baby live.\" she said and Jezebel stopped laughing.\n\n\"What did you say?\" Jezebel rose slowly from the bed, the thick chain around her ankle making a loud thud as it hit the floor. \n\n\"You heard me, Jake's decided to keep the baby, and the minute it's born,\" she smiled viciously; thrilled to deliver the lie to Jezebel, \"he's putting you out on the street.\"\n\n\"Bullshit.\" she said walking very slowly over to the cut off line that kept her from getting Ludvine, her eyes never leaving the maid's. \"Don't forget the only reason he locked me in here was to make sure I didn't abort this baby.\"\n\n\"You know as well as I do that the only reason Jake wants this baby is because you don't; and the only reason he locked you in here is to prove to you he has total control over you.\" she raised her chin as she continued, \"and what better way to prove that control than by forcing you to have his child.\"\n\n'You're like the shining example of constant contradiction. You really will say anything won't you. \"\n\n\"Its true Jezebel, he had a great payback plan for you, he was going to keep you in here until the last date you had to legally abort that baby than he was going to take you to the clinic himself to get rid of it.\" she grinned \"Just another one of Jake's Jedi mind tricks.\"\n\n\"You sick lying bitch.\" she shook her head, \"I know Jake better than that.\"\n\n\"Than you should know he will go to any lengths to prove his power over his victim; but even I felt that he was being unreasonable, it was way to cruel. You should be thanking your lucky stars he listened to Me.\" she lied so convincingly, Jezebel was almost impressed with her ability to deceive so fluidly. \"I told him that to get back at you he should make you give birth than take the baby.\" she smiled and Jezebel looked like she was caught between laughter and murder. Ludvine, mistaking Jezebel's silence as submission continued her taunts. \"That's why he is going to have a doctor here and force you to give birth in this room than kick you out on the street the minute it's born.\"\n\n\"He would never do that.\"\n\n\"your wrong, see he's knows how much you want to get rid of this baby and he is afraid to let you near that baby once it's born, he's said he knows you and he knows you will try to hurt it just to spite him. Even though he doesn't really want it, he doesn't want you to have it either.\"\n\n\"You're lying, he never said that.\" Jake knew her better than that, didn't he? What had this chick been telling him? She brainwashed him.\n\n\"He did, that's why he asked me to be the baby's full time, live in nanny.\" she smiled smugly.\n\n\"No fucking way.\" she shook her head, refusing to believe this girls manipulation.\n\n\"Ask him yourself.\" she bluffed with a confidence that was almost convincing. \"he said he needed a good woman around the house to help him.\" she took another step towards her, loving the look of defeat on Jezebel's face as she continued to taunt her, \"He hates you.\" she shrugged with a smugness that made Jezebels skin twist. \"Especially now that he knows about Peter.\"\n\n\"Oh yes, the elusive Pete.\" she produced a genuine smile \"that was exceedingly clever of you.\" Jezebel changed her tactics wanting to catch her off guard, praying she took another step closer to the cut off point. Jezebel had stepped back a little bit more, letting Ludvine step forward. Ludvine, shocked by Jezebel's admission, now felt over powered and in control of this situation. She finally had Jezebel right where she wanted her.\n\n\"I know.\" she whispered and winked at Jezebel. \"Face it Jezebel he needs me now, that baby is going to need a good mother,\" she boldly took another step forward, unable to resist. Jezebel silently withheld her glee, letting Ludvine run her mouth as she foolishly and unknowingly inched closer. \"And if things keep going according to my plan, by this time next year I will be his wife and the mother to the baby you tried to murder!\" \n\nThat had been the very moment when Ludvine realized she had gone to far with her words and her actions. seeing the fury on Jezebels face let her know that the verbal assault had cut deep; than she realized, a moment to late, that she had stepped to far as she stood face to face with her enemy.\n\nA thick blinding red cloud flashed before Jezebel's eyes and without another thought in her head, she hauled off and punched the girl right across the face. The blow had stunned Ludvine and she stumbled forward enough for Jezebel to grab her and take her down to the ground. Jezebel punched her a few more times, than dragged her over to the bed giving her more than enough chain to do what she needed to do. Jezebel held her tight from behind, wrapping her legs around Ludvine's waist than looped the excess chain around Ludvine's neck, holding her still while choking her from behind. \n\n\"I told you I'd get loose.\" her voice was low and evil enough to make Ludvine start to cry.\n\n\"Please-\"\n\n\"What do you mean please? Where's that big bad bitch that was talking all that shit to me?\" she hissed than when Ludvine squealed; Jezebel chuckled condescendingly.\n\n\"I'm sorry!\" she cried,\n\n\"I know you are. You see, Jake has this certain thing about him, a swag if you will. He is an impressive specimen of brutality and to females with a similar sadistic streak, he's a form of a god.\" she spoke keeping the chain tight around the maid's neck. \"You simply fell victim to it and were willing to go to any lengths to get him all to yourself.\"\n\n\"Your right, please forgive me!\" she whined. \"I just couldn't help myself.\" \n\n\"And I can't help myself.\" she pulled the chain tighter and dug her heels in Ludvine's belly. \"You took advantage of my current situation, you tried to poison me!\"\n\n\"Please don't kill me.\"\n\n\"I should.\" she pulled the chain tighter, \"I fucking hate bullies, but I especially hate punk-pathetic-little parasites that hide behind their shit-talking bully-badge screaming obscenities at me from the side of the room they know I can't reach!\" she felt her rage boiling just thinking about what this little bitch had done to her. \"But you know what I really hate? The fact that you forgot that Jake is undeniably and indisputably mine. Whether I hate him or I love him, whether I fuck him or I kill him, he is mine, not yours!\" she yanked the chain tighter and Ludvine gasped, crying hysterically. \"You don't have any right trying to take what belongs to me. And for that offense I am going to fracture your fucking neck.\"\n\n\"NO!\" she squealed, tears running down her face, \"wait!\" she tried to reach for the chain on her neck, but it wouldn't budge. The way she was positioned, she couldn't even reach behind her and try to grab Jezebel. Ludvine's heart started to race and she felt like she would vomit, this crazy bitch was actually going to kill her.\n\n\"You have 3 seconds to move your hand or I will break your fucking finger!\" Jez snapped and when Ludvine hesitated as moment to long, Jezebel grabbed her finger bending it back hard enough to sprain it, but not break it. Ludvine screamed and Jezebel let go, \"Do it again bitch and I will break it.\"\n\n\"Please let me go, please!\" she wailed. \n\n\"The only way you're stopping this chain from popping your stringy-haired head off those skin covered bones you call a body is if you give me the key right now. I know you still have it. Your probably sleep with it you fucking freak.\"\n\n\"I can't, Jake will never forgive me, he'll fire me!' she cried.\n\n\"I don't give a fuck if he's firing you or scraping your head off the wall bitch, you have about 30 seconds to produce that key!\" she pulled the chain even tighter and Ludvine started to struggle again, \"you'll cut your time in half if you fight it stupid.\" she held tight as Ludvine gurgled and struggled a little more before she finally settled down.\n\n\"Alright, alright!\" she managed to croak, than reached down into her bra and pulled out the small golden key. Luckily every time Jake left the house, he left the key to the leg shackle with Ludvine, in case of an emergency. Last time he had left he had neglected to get it back from her and she had been holding onto it ever since. Ludvine refused to die like this, she would try her hardest to make amends to Jake, but at this point she had no choice but to do what Jezebel told her to do. Ludvine tried to hand the key to Jezebel but Jezebel refused to release her grip on the chain.\n\n\"You unlock it.\" she snapped, unlocking her leg from around Ludvine's chest to hold her ankle before her. Ludvine struggled to unlock the cuff for a moment, but finally managed to free Jezebel. Jezebel in return loosened her grip on the chain around Ludvine's neck, but not enough for her to move. \"Now put it on.\" \n\n\"What?\" she began to panic. / \"Put it on.\"\n\n\"no.\" she started to cry again\n\n\"Either you put that cuff on your ankle or I will make sure it fits around your throat.\" Jezebel warned her and it was obvious to Ludvine that she was more than happy to make good on her threat.",
        "\"I can't!\" she whined and Jezebel tightened the chain to the point Ludvine could feel her skin tearing.\n\n\"If you don't, I'll wait until you black out and do it myself,\" she chuckled, \"if your larynx is still in tact.\" \n\nLudvine, afraid her larynx was already severely damaged, quickly put the cuff around her ankle than securely locked it in place.\n\n\"Smart girl.\" Jezebel grinned letting go of the chain, she stood up and stepped away from Ludvine, looking down at the maid cowering on the floor, \"By the way, thanks for letting me go, I'll be sure to tell Jake just how helpful you were in my escape.\"\n\n\"You wouldn't dare!\" she hissed.\n\n\"I'll tell him you were so consumed with jealousy you orchestrated the whole thing, right down to you being chained up to make it look realistic. To bad it backfired on you and I got the upper hand.\"\n\n\"You bitch!\" she cried slapping the floor with her hand.\n\n\"absolutely.\" she smiled with pride, \"oh and one last thing.\" She smiled deviously clenching her fist as she walked towards the maid.\n\n***\n\nBeatrix looked up as she heard the blood curdling scream. Geoffrey ran into the kitchen his face red and flushed\n\n\"What was that?\" he gasped\n\n\"I have no idea?\" she said jumping a bit as the next horrible scream echoed through the house.\n\n\"It sounds like Ludvine.\" another scream rocked the room.\n\n\"it is Ludvine.\" they heard a door slam and scrambled back into the dining room, they peeped out of the door to see Jezebel running down the stairs than going towards Jake's office.\n\n\"Oh no.\" Geoff said with dread.\n\n\"Shhh.\" Bea put her finger to her lips and Geoff nodded. \n\n\"This is bad.\"\n\n\"Be quiet Geoff.\" she whispered. A few minutes later Jezebel walked through with a bag filled with god knows what, than ran back up the stairs.\n\n\"Ugh oh.\" Geoffrey gasped again, \"Should we do something?\"\n\n\"Not a chance,\" Bea smiled, \"that girl gets what she deserves. Look at the horrible things she did to Jez, while she was defenseless.\" she walked into the kitchen humming as she went back to fixing the meal. Geoffrey took one last look up stairs than went back to his own duties. \n\n\"I guess.\" Geoff said wondering if he should do something regardless of his wife.\n\n\"Besides, how do we know what's going on, we have been to busy doing our job to notice Jezebel is loose.\"\n\n\"I don't know Bea; I have a really bad feeling about this.\"\n\n\"Don't worry, Jake called a little while ago, he's on his way back, he should be here any minute now! He will take care of it.\"\n\n***\n\nJake had gone way too far and he knew it, he was man enough to admit that and he would not only admit it to Jezebel but he would apologize to her as well. Yes the very word he avoided for fear of his tongue shriveling up than falling out of his mouth. He contemplated his words carefully as he pulled in front of his house. He quickly ran inside than went straight for the stairs that would lead to her bedroom door. \n\nHe opened it to see a bruised and bloodied Ludvine stripped and chained to the floor, her hands tied behind her back with her own bra and what appeared to be her panties in her mouth preventing her from talking. But she sure was crying up a storm. Jezebel had also managed to wrap the chain that was clearly hooked around her ankle around her body and even managed to some how fasten her ankles to her wrists, completely immobilizing her. Jake looked at the big \"fuck you\" written on her forehead in lipstick. He grinned before the lights went out and the room went black.\n\n***\n\n\"Come on Davis.\" Darleen said.\n\n\"Where are we going?\" Davis asked.\n\n\"To Jake's.\"\n\n\"I thought he just left.\"\n\n\"He did, but I need to make sure he lets that girl go.\"\n\n\"But mom-\"\n\n\"No buts' you're taking me to Jake's!\" Darleen demanded and Davis nodded.\n\n***\n\n\"I'm going up there.\"\n\n\"Geoff no, please, Jake's up there with her now, its fine.\"\n\n\"Something's not right Beatrix.\"\n\n\"Give them a little space.\" She tried to persuade him.\n\n\"But Ludvine went up, than Jez came down, than went back up with a big bag of something I know is dangerous, than Jake came and-\" he began to mumble almost incoherently, his anxieties and his need to do the right thing were acting up\n\n\"Geoff, sweet heart, just calm down, everything is alright.\" she cut him off, holding his shoulders. \"Jake's up there, I guarantee you he has it all under control.\" \n\n\"I don't know Bea-\" he said with that strange feeling of unease settling over him.\n\n\"You worry to much.\" she shook her head; she smiled than kissed his cheek \"everything is going to be just fine now.\""
    ],
    "authorname": "redwitch",
    "tags": [
        "drama",
        "conflict",
        "abduction",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/i-love-you-ch-10"
}