{
    "title": "My Education Ch. 02",
    "pages": [
        "Chapter 02 - Birthday Surprises\n\nMy thanks to everyone who left comments and wrote emails. My apologies for this next chapter taking as long as it did. The bulk of it was spent figuring out where I wanted the characters to go, and that took quite a bit of time. I hope everyone will find it to be as fun of a ride as I do. Finally, there will not be a two-month waiting time between the chapters that follow. Nick.\n\n* * * * * * * *\n\nIt was the Thursday after my encounter with Professor Grant. The next day was my birthday. Three members of our crowd were going back to their schools tomorrow morning, so we decided to go out tonight. Daryl, Jeff, and Sheila all went to Ivy League schools. Carla, David, Heidi, Sarah, Tony, and I all went to schools local to us in California with Carla and David going to a different UC campus.\n\nHeidi and Sarah had decided upon a club called 'Zen'. The fact that Heidi's brother was the manager and let us in certainly didn't hurt. Rick, Heidi's brother, was like a big brother to us all and knew we wouldn't do anything out of control. Rick had only one condition though: we had to leave all our keys with him and he would check to see how much we had to drink before giving them back. Carla didn't drink at all, so she had driven her parents van and drove everyone but Sarah and I. We were seated at a large corner table to keep us away from casual eyes.\n\nThe ride over was an interesting one. I have known Sarah since for twelve years. We were extremely close friends, bordering on being family. We knew each other so well that at times it was scary. I keep things pretty close to the vest, even from my friends. I cannot keep things from Sarah. She took one look at me and somehow knew that I had gotten laid. Sarah was relentless in her attempts to ascertain the identity of the girl in question. Evidently, I was glowing and she had to know who caused it. I finally had to tell her that I gave my word to the person in question that I would never reveal her identity. In twelve years, Sarah has never known me to break a promise once I give it, even when it has cost me personally. Hearing this, Sarah finally relented and then I made her promise me not to share this with others in our group. I did not want to turn around and defend myself all night long. She made it abundantly clear that her curiosity was piqued but gave me her word that she would keep it to herself.\n\nWe got to the club and the gathering of old friends took her mind off the question. The club was hopping and everyone seemed to be enjoying themselves. I was surprised at the mix of people as there were people in their 20s, 30s, and 40s here. While I'm not too big on dancing, I certainly cannot complain when two girls at a time are taking me to the dance floor and focusing solely on me. Plus the evening went on, the girls got a bit more flirtatious on the dance floor, which delighted me to no end. Of course, since none of them was going to finish me off, it was going to make for a long drive home later. Sarah and Sheila in particular enjoyed dancing with me. I was closest to them, going back to events in high school. While we would never date, we thoroughly enjoyed teasing each other to no end. As if I was going to complain. I had Sarah behind me, pushing her large, firm tits into my back and Sheila in front of me, grinding her ass against the bulge in my jeans. If she did not have a boyfriend back at Harvard, she would have made certain I went home with a happy conclusion to the night. Like I said, we would never date, but that didn't stop Sheila and I from helping each other out from time to time. \n\nWhen we got back to the table, we saw that the gang had put down another round of shots. We were having a good time. There was the tales of our years in high school and stories of our college adventures to that point. Everyone had a horror story to tell about a particular professor. Heidi started with Professor Grant. Chemistry was not easy for Heidi, and it took no small amount of effort from the rest of us to get her through Professor Grant's class with a B. She was almost done sharing the experience of that class when her smile faded and all the color drained from her face.\n\n\"Oh shit,\" Heidi said.\n\n\"What?\" Tony asked.\n\n\"Professor Grant is here,\" Heidi stated. \"And she's coming this way.\"\n\nWe all turned to look. Heidi was correct. There was Erin Grant; and she was dressed to the nine's. All of the events from last Friday ripped through my brain like a storm and my cock was hard in seconds. Professor Grant and two other women walked over to our table, Heidi quickly related the story of the Chemistry Professor from hell. With all the alcohol in her, Heidi was beginning to freak over the thought that Professor Grant might call the cops or something else to bring attention to the fact that underage kids were in the club drinking.\n\n\"Don't you think you're just a little too young to be in here?\" Professor Grant asked.\n\nHeidi launched into a stream of words about how sorry she was when Professor Grant cut her off.\n\n\"Relax Ms. Taylor,\" she replied with a smile. \"I'm not going to say anything. Actually, I came over here to apologize to a few of you. May we sit down?\"\n\nHeidi just nodded.\n\n\"Of course Professor Grant,\" I said. \n\nTo make room, Sarah jumped into my lap and Sheila jumped into Tony's. I hoped she wouldn't say anything about what a hard seat she had. Sarah just looked at me and smiled as she took a sip of her drink. The women took their seats and joined us at our table.\n\n\"And please, for the next few hours, I would like you all to call me Erin,\" Professor Grant said.\n\nHeidi just nodded again.\n\n\"This is my sister Allison,\" Erin stated looking at the brunette with blue eyes who sat down to left of her.\n\n\"Good evening,\" Allison said. \"I hope you don't mind us crashing your table.\"\n\n\"And this is one of my closest friends Maria,\" Erin continued indicating the dark haired woman on the other side of Allison.\n\n\"I don't think they mind,\" Maria said with a grin and a nod.\n\nWe followed her nod to David and Jeff who were openly staring at the three sets of breasts that just joined our party. Sheila started laughing out loud, while Sarah just smiled and explained that David and Jeff didn't get out much. Carla was definitely annoyed. Sitting between the two guys, she pinched both of them in the arm. David and Jeff immediately realized they had been caught and the women just started laughing. The two of them just turned a bright shade of crimson. I can't really say I blamed either of them.\n\nIf Erin Grant was one side of a coin, then Allison was the other. While Erin was a blonde, Allison was a brunette but both shared those amazing blue eyes. I think Erin was just a little shorter, but since all the ladies were wearing heels I couldn't be certain. I have no doubt that like me, Daryl, David, Jeff, and Tony all noticed that Allison had slightly smaller breasts than her sister. Not that it really mattered because she was still stacked. She just wasn't as stacked as Erin and Maria.\n\nWhere both Allison and Erin were fair-skinned, Maria had slightly darker complexion. Without knowing any more about her, I would guess that Maria was from the Italian or Spanish regions of the Mediterranean. Maria was definitely taller than either Allison or Erin by three or four inches. All three women were dressed elegantly, but each outfit did provide enough of a view to perceive the curves hidden beneath. I am certain that every male at our table noticed that the swell of Maria's bust was every bit equal to Erin's.\n\n\"You seem to have him house broken though,\" Allison commented to Sarah.\n\n\"I wouldn't say he's house broken,\" Sarah replied. \"Justin's much better at looking without being caught, but trust me when I say part of him has definitely noticed your arrival.\"\n\nNow it was my turn to blush while the ladies laughed. Sarah emphasized her point by wiggling in my lap and now everyone joined in. When my eyes drifted to Erin, she was laughing but looking straight at Sarah. If I didn't know any better, I would have thought Erin was actually jealous of Sarah.\n\n\"But he isn't mine,\" Sarah continued. \n\nI looked up at Sarah and her looking right back at Erin. I wondered if Sarah saw the same thing in Erin's eyes. Fortunately, Heidi kept the conversation going.\n\n\"You said something about an apology?\" she inquired.\n\n\"Do you mind?\" Erin asked while indicating a round of vodka shots that had just been delivered to the table.\n\nSarah leaned forward and handed one of the shots to Erin and made offers to Allison and Maria as well. Sarah took one and together the four women downed the shots in one quick motion. I looked over at Heidi and I was beginning to think someone was going to have to slap her back to reality. When they were finished, Erin raised her hand and ordered another round for everyone. She then took a deep breath and began to speak.\n\n\"Thinking back to the events this past quarter, and I believe I have been more than a little ... tough on your class. I have no excuse and I apologize for being as harsh as I was.\"\n\nWe all sat in silence.\n\n\"Why?\" a voice asked.\n\nIt was Heidi who had spoken.\n\n\"Why was I such a bitch?\" Erin said, finishing Heidi's question.\n\n\"Well yes,\" Heidi responded.\n\nWithout pause, Erin offered her explanation. She spoke of her ex-husband and the divorce that she went through. Her ex, the dirt-bag that he was, had taken up with his secretary. The secretary was of course much younger. But that was only the tip of the iceberg. Erin recounted their last few years together.\n\nShe had been clueless as to the affair. When he stopped being affectionate, Erin had joined a gym. When he stopped initiating sex, Erin tried lingerie and other outfits to peak his interest. She had just about accepted that she was in a sexless marriage when he dropped the bomb and told her he wanted a divorce. He stated her failures as a wife. In his mind, she had placed her career above their marriage and family when she spent six years getting her doctorate degrees. Because of that, she had been a horrible role model to their daughters. Because of the energy she poured into pursuing her degrees, she had left their bed cold and empty. The dirt-bag even went so far as to tell that it didn't really matter because she wasn't that good in bed anyway. His last comment before leaving was to tell her that as he looked back on their marriage, she had lost the one thing that attracted him to her in the first place: her looks.\n\nIf he had wanted to devastate Erin, he had all but succeeded. She was in tears and it was then that they heard the gasps. They turned to find that their daughters had returned early from the mall. Before either girl could say a word, the man lashed out at them for eavesdropping. Then he left. At first they thought he would be back, but after looking in the den and master bedroom they saw that he had already taken those things that were important to him. Family pictures remained, but his clothes, awards, degrees, and other personal affects were gone. In his wake, he left the three of them wondering if they had ever truly known this man.\n\nFortunately, Erin's daughters were there for her. They spent the next few weeks watching out for their mother. They took over the day-to-day activities of maintaining a home. The two cooked and cleaned. They also made certain their mother knew not only much they loved her, but also how great of role model she had been. Her daughters were also there in another and all-too-critical way. While she had been clueless her husband's activities, her daughters had not. They never said anything because they never had any concrete proof and they did not want to destroy their family over suspicions. In a few short minutes, their father had torn himself away from their family. His words freed them to act on what they did know, and act they did.\n\nWhile Erin was struggling to keep some semblance of a life for her daughters, they had gone to work putting together the pieces of his activities the previous year. Then, they took what they had to three women who were childhood friends of Erin; friends who were also attorneys in a mid-sized law firm. Even if they weren't motivated, these women were efficient in their tasks. Within three weeks, they had everything they needed to take him to the cleaners.\n\n\"They took that lousy dirt-bag to town,\" Maria interjected. \"Because he tried to hide it all, she got the house, the cars, the cabin in Arrowhead, the two townhomes, and half of the little nest egg he thought he had safely hidden.\"\n\nTo speed up the divorce, Erin agreed to no alimony but he was going to have to pay child support. When he found out his children had played a part in his loss, he went nuts. Right there in the courtroom, he called his own daughters \"ungrateful little whores who wouldn't get a fucking cent from him.\" Of course, the judge saw it differently. He doubled the child support and extended it through college. Then there was the cherry on the sundae. The soon-to-be ex-husband stormed out of the court, slamming the doors in the process. The judge looked at the bailiffs and told them to go get him. When he was brought back, the man was yelling about his rights. Although his lawyer managed to shut him up, the judge placed him in contempt of court and fined him $1,000. His response was less than complimentary. It took the judge increasing the fine to $5,000 and ordering him serve five days in jail before he finally shut his mouth.\n\nWith a final bang of the judge's gavel, Erin had won but it was a hollow victory. The man Erin planned to grow old with had crushed her emotionally. She felt betrayed and hurt. She had just started to get past the pain when she saw him with his new wife this past New Year's Eve. The new wife decided to try to even things out. She rubbed it in about the vacation they had just taken to Bora Bora and Italy. These were two places Erin had always wanted to vacation at, but he never had the time to take her. Evidently, the dirt-bag had made time with her. This was what finally pushed Erin over the edge. All the negative feelings just boiled to the surface and came out. \n\n\"Two days later, I was informed that I was going to be teaching a freshman class in addition to my normal course load,\" Erin said. \"Regrettably, I believe I took it out on those kids. I took it out on four of you. I can't apologize to everyone in that class, but when I saw you four sitting here I just had to come over and say something.\"\n\n\"It wasn't really your fault,\" Sarah said. \"I imagine I would have probably done the same thing.\"\n\n\"Maria was right,\" I said. \"What a dirt-bag.\"\n\nThe rest of our crowd agreed, as we all offered comments reflecting our newfound low opinion of Erin's ex-husband. Heidi and Sarah went over to Erin and gave her a hug. It must have been a woman thing, because I really did not understand the significance of that.\n\n\"So did Justin's actions last week with your daughter have anything to do with your revelation,\" Sarah asked.\n\n\"Yes,\" Erin replied. \"I would have never believed that a man would help my girls or me and not expect anything out of it.\"\n\n\"So you're the one who helped Michelle?\" Allison asked.\n\n\"Yes,\" I said.\n\nWithin seconds, I found myself getting a hug from her. I tried my best to hide the fact that I really liked feeling her mash her chest against me. She pulled back and gave me a light peck on the cheek and I could see Erin smiling over her shoulder. If my chest burned from having her breasts pressed against, my back burned from the envy of Daryl, David, Jeff, and Tony. Carla, Heidi, Sarah, and Sheila gushed about what a nice guy I was. Then they teased me about being a man now. Everyone laughed at that, but I didn't mind because it lightened the mood.\n\n\"That was pretty cool of the judge to throw him in jail too,\" Tony said. \"I didn't know they could do that.\"\n\n\"Oh yes,\" Allison said. \"We have broad authority in the courtroom, especially when someone goes too far and is declared in contempt of court.\"\n\n\"Oh shit,\" Heidi said.\n\nShe was just verbalizing what we were all thinking. Allison said \"we\" meaning she was a judge as well. Sarah was 21, but the rest of us were underage. Here was a sitting judge and there were underage people consuming alcohol. It seemed the night could take a decidedly bad turn for us and an even worse one for Rick since he had let us in.\n\n\"Oh shit is right,\" Allison said. \"I cannot condone underage drinking.\"\n\n\"ALLIE,\" Erin exclaimed. \"You can't really ...\"\n\nAllison cut her off with a wave of her hand.\n\n\"However, since two of you appear to be designated drivers and because Justin did such a decent thing for my niece last week, I would be willing to overlook it this one time on two conditions.\"\n\nI think even Erin had joined the nine of us in sitting on the edge of our seats.\n\n\"One: that someone take my sister out on the dance floor. It's her birthday and I want ...\"\n\n\"No way,\" Sarah interrupted. \"Tomorrow is Justin's birthday.\"\n\n\"That seals it young man,\" Allison stated while pointing at me. \"You are taking my sister on the dance floor.\"\n\nSmiling at me, Erin said, \"Well if you insist Allie, I suppose I can settle for him out there\".\n\n\"I'd like to see you dancing with one of your students,\" Maria commented. \"How very ... taboo.\"\n\nAllison just giggled at that comment.\n\n\"Yes,\" Allison said almost purring. \"That would be so out of character for you sis.\"\n\nIn the next instant, I could feel all eyes upon me. The girls obviously loved the prospect of seeing me out on the dance floor with the Professor Grant. The guys were, I think, envious of my nomination. Older or not, Erin Grant was a goddess. I have no doubt any of them would have stepped on to the dance floor with Erin.\n\n\"Two,\" Allison said adding a dramatic pause.\n\nAll eyes were back on her now.\n\n\"You let me buy the next round.\"\n\nA bunch of sighs came from around the group.\n\n\"Bitch,\" Maria said while laughing.\n\n\"Hag,\" Allison replied and just stuck her tongue out at her.\n\nAllison ordered a round of tequila shots, requesting something called Patron. Maria asked for two glasses of water for everyone seated. While we waited, I asked how Michelle was. A few others asked what happened last Friday, so I recounted the story from last Friday: Michelle's accident; me showing up late; Officer Coles driving me up to the Chemistry building and then relaying what had occurred to Erin; and Erin's decision to let me take some extra time to finish the exam. Of course, I left out what happened after I turned in my final exam.\n\n\"So is Michelle alright?\" I asked.\n\nErin filled in the blanks. Officer Coles had relayed the extent of Michelle's injuries and that the paramedics had said they were superficial. Erin would have liked to leave to go to the hospital, but all of the other Chemistry exams had finished Wednesday meaning most of the faculty would not have been on campus. Using her radio, Officer Coles discovered that Michelle had already called her sister from the hospital to pick her up. When we got back to her office, Erin had called her house. Her other daughter Kathryn had already picked Michelle up and they were both at home. Michelle suffered a cut over her eye and some bruises but that was the extent of her injuries. She was already planning to go down to San Diego to join her friends for Spring Break the next day. All of this was a great relief to Erin.\n\nThe shots arrived and Allison quickly passed them around. She explained that Patron was new but that it was very good. She offered cheers to the birthday girl. Erin offered cheers to the birthday boy while nodding in my direction. Then all the shot glasses tilted back. I've never been much of a drinker and I really don't go for tequila, but I have to admit the Patron was really good. As we downed the shots, \"I Love Rock N' Roll\" by Joan Jett started playing. Erin stood up and took two steps to me. She took my hand, said, \"I believe you are mine Mr. Rhodes\" before leading me to the dance floor. I don't know if my friends were saying anything, because my brain was reliving the hours I spent with Erin in her office last Friday.",
        "When we hit the floor, Erin spun around and put her wrists on my shoulders. My hands went for her hips and we were moving. For the first few moments, I simply stared into her eyes. Damn, she looked good tonight. She wore some mascara and dark eyeliner, which only seemed to add to her allure. The lip-gloss had worn a bit with the drinks we had taken, but still made her soft lips stand out that much more. She didn't need to wear any make-up though. Erin was simply breathtaking. I wanted to take her in my arms and kiss her deeply. And I almost didn't care who saw.\n\n\"I want to kiss you as well,\" she said.\n\nI just smiled and enjoyed being this close to her again.\n\n\"I have to tell you,\" she started.\n\n\"I've been thinking about you non-stop since Friday,\" I finished.\n\nShe just moved closer as we continued to sway to the beat of the music.\n\n\"Yes. I can't tell you how much I needed that.\"\n\n\"You don't have to. I can see it in your eyes now as much as I saw it last Friday.\"\n\nShe smiled at me, leaned in, and then spun around as the song changed. Her hands reached back and grabbed my belt. She used the advantage to grind herself against me. Damn she smelled good. But that paled in comparison to how she felt. Her ass rubbed up and down my front side, and it felt damn good. I know she felt it because she started concentrating her efforts on bulge in my jeans. I know that song only lasted a little more than four minutes, but what a great four minutes. The song ended, but our dance continued into the next. Erin turned again and hooked her arms around my neck. She just stared into my eyes with that same look from last Friday. It's as if she was taking a quick minute to think over something. Then her eyes changed ... and Erin Grant smiled the softest smile I have ever seen. I could feel my heart pounding in my chest.\n\n\"Since it's my birthday today and yours tomorrow, we should celebrate,\" she stated.\n\n\"You mean more than we are right now?\"\n\n\"Yes. Right now is for the people close to us. They celebrating the occasion with us, but I believe we should commemorate our birthdays in a far more ... personal way.\"\n\nThe dramatic pause she used with those last two words conveyed exactly what she hand in mind.\n\n\"I couldn't wish for a better way to celebrate my birthday.\"\n\n\"When you are done with your friends this evening, could you stop by?\"\n\n\"Erin, I would love to stop by.\"\n\nMy answer was received in the exact manner I had hoped. She just moaned and stared deeply into my eyes. She gave me her address, which was relatively close to the University and to Sarah's apartment complex. It would be a short drive after I dropped Sarah off. And all of sudden I was glad Sheila had a boyfriend back at Harvard.\n\nWith that, we noticed most of the others joining us on the dance floor. With a peck to my cheek, Erin thanked me for the dance as her friends and mine moved in around us. Over the next few hours, it took everything I had not to steal glances at her. Fortunately, there were plenty of people to keep me occupied. Sarah and Sheila did their dance again with me. Not to be outdone, Allison, Erin, and Maria gave me their version. Talk about jaw dropping. Eventually, we all made our way back to the table, knowing the evening had to end.\n\nAs we approached the table, Allison and Maria discussed dropping off Erin before heading back across town to where they both lived. While it was only a 20-minute drive, it was clear that they were in the opposite direction. As if the night couldn't get any better, Sarah offered a ride to Erin. She explained that her apartment complex was near campus and since Erin's place was in the same direction, it was silly to have them drop her off only to drive back across town. And just like that, I was driving Erin and Sarah home. The night was getting better and better. From the gleam in Erin's eyes, I could tell she felt the same.\n\nSarah and the other gals headed for the bathroom. I would never understand that group bathroom thing. Tony and I went to the bathroom as well, while Erin and Allison headed outside. As I exited the restroom, I bumped into Maria and Sarah. We made our way outside and the first thing that caught our eyes was some guy speaking loudly at Erin. He wasn't yelling, but it was obvious he didn't care who heard him.\n\n\"It's the dirt-bag,\" Maria said. \"Her ex.\"\n\nI looked at Sarah and I could see she was pissed. She looked back at me and told me to follow her lead. And then Sarah did something that was just so ... Sarah. She walked right up to Erin and kissed her full on the lips. I walked up in time to participate in a conversation that most people pay money to see in the movies.\n\n\"Are you ready to go?\" Sarah asked as she pulled away from Erin.\n\nI could see her mouth \"trust me\" to Erin.\n\n\"Who the hell are you?\" the Erin's ex-husband asked.\n\nIgnoring him completely, Erin simply answered \"yes.\"\n\nThe dirt-bag repeated his question with more anger in his voice and took a step towards Sarah. I stepped between them.\n\n\"Hi,\" I said. \"I'm Justin. This is Sarah. I will ask to you to be more respectful when addressing a lady.\"\n\n\"Whatever. What are you doing kissing ...\"\n\n\"You would be Paul?\" Sarah asked cutting him off.\n\n\"Yes.\"\n\nSarah slowly turned around and stepped to my left side. She looked Paul and the woman next to him up and down before she continued speaking.\n\n\"Well Paul, since you are divorced I don't see how it is any of your business who I am or who I am kissing. But since I have grown so fond of Erin, I'll tell you anyway. My name is Sarah. Justin is my boyfriend and I love him with every single fiber of my being.\"\n\nPaul, like everyone else there, had to be wondering where in the world this was going.\n\n\"And while he has never asked, I know that like any other red-blooded man on the planet he would love to spend an evening with two women. So for his birthday, I wanted to arrange just that and I have spent weeks searching for just right the person to bring to our bed. And I have had zero luck in finding just the right person until tonight when Erin walked in.\"\n\nPaul started laughing.\n\n\"Is this what you have stooped to? Begging for sex with people half your age.\"\n\n\"Listen pencil dick, let me make this crystal clear,\" Sarah continued. \"I spent over an hour this evening feeling Erin out on the subject before I spent another hour quite literally begging her to go through with it. That's right. I ... begged ... her. I mean just look at her. She is fucking gorgeous. After my pleading with her, Erin finally relented and let me tell you something. It's not going to be something she will ever regret: Justin and I are going to take her home and spend the next 24 hours worshipping this woman for what she is: a real-life, down-to-earth goddess. Fuck I'm getting wet just thinking about it.\"\n\nPaul was getting visibly upset by this time. Erin stepped to my right side at this point.\n\n\"Oh yeah, let me give you one more little detail about what's in store for Justin. He has no problem going three or four times in a night. With that in mind, Erin and I have devised a number of surprises for him and this is one of them.\"\n\nSarah turned to face me presenting her side to Paul and the woman with him.\n\n\"After he fucks that goddess and fills her with his cum, he is going to finally get my tight 21 year-old virgin ass.\"\n\nI would later hear from Allison and Maria who were behind us that as Sarah said that, she slid her arm down her body. She traced it over her hips and stopped at her ass. She then patted it a few times to emphasize the point.\n\nI turned to look down at Sarah in genuine shock. She was looking up at me.\n\n\"That's right baby, you finally get my ass. But more than that, Erin has agreed to let me eat your cum out of her while you finally take my ass. Because I cannot imagine anything hotter for my man than letting you have Erin ... and then letting you watch me devour your cum out of her as you sink your thick cock into me and take my last cherry. I love you baby.\"\n\nAllison and Maria told us later that the look in Paul's eyes said everything. At the time I couldn't see his reaction though. Sarah was kissing me. As she pulled away, Sarah whispered, \"Kiss her.\"\n\n\"Erin, I can't thank you enough. Damn baby, I am dripping. Can we go now?\"\n\n\"You ready?\" I asked Erin before I leaned over and kissed her softly on the lips.\n\nErin was staring straight up at me. Her eyes said it all. Paul the dirt-bag was part of her past. She didn't even look at him when she finally answered.\n\n\"Absolutely,\" she said with a mischievous look in her eye. \"Sarah isn't the only one dripping right now.\"\n\nPaul grabbed the hand of the woman next to him and stormed past us. Erin never took her eyes off mine the entire time. When he got inside, everyone burst out laughing. Everyone that is, but Erin. She pulled Sarah and me into a tender embrace: a silent measure of thanks for the comeuppance that had been meted out on her behalf. While she held us, she started laughing as well.\n\n\"Now that was worth waiting for,\" Allison said as she walked up and hugged her sister.\n\nMaria came up and kissed me on the cheek.\n\n\"That's for what you just did for Erin. Where in the hell did that come from?\"\n\n\"Ask Sarah.\"\n\n\"On behalf of my friend, how can I ever thank you?\" Maria inquired.\n\n\"Are you kidding me,\" Sarah said grinning. \"Thank me? I would have paid money to say all of that to such a pathetic little man.\"\n\nAllison hugged me tightly and then hugged Sarah.\n\n\"Thank you both. That was priceless.\"\n\nWe all continued laughing out to the parking lot. It turned out that the scene was a jaw dropper for everyone. Allison and Maria told us of the look on Paul's face at the precise moment when Sarah patted her ass. Nor could they believe that Paul had effective been one-upped in a way he would never be able to top. My friends couldn't believe I actually leaned over and kissed my professor on the lips. They said it was priceless watching Paul's reaction because in their view, it was the \"cherry on the sundae\" when I kissed Erin. Heidi in particular would not stop going on and on about what she just saw.\n\nFor my part, I absolutely loved the fact that I got to kiss Erin Grant in public ... in front of my friends ... and hers. I knew I would never be able to tell anyone what happened last Friday or what would happen later tonight. But for a few minutes, I got to indulge the idea that this was a common place thing; that it would be acceptable to show Erin that kind of affection in front of the people that mattered to me. It may sound strange, but in those minutes, I knew Erin felt the same.\n\nGoodbyes were exchanged shortly thereafter, and I led the ladies to my car. Indulging the women just a bit, I opened the read doors on each side to allow them to sit in the back while I drove them home. I started the engine and the three of us were on our way. The girls sat in the back going back and forth over what had occurred. Erin directed me as needed to make turns as I headed to drop her off first. At one point, Erin asked, \"When you said all of that, how did you know Justin would follow your lead so well?\"\n\n\"We've known each other since he was seven and I was nine. I know him forwards and backwards, just as he knows me. When I told him to follow my lead, I knew he wouldn't give up my bluff.\"\n\nSarah reached up and patted my shoulder at that.\n\n\"I know very little about him, but what I do know tells me he has a lot of character,\" Erin added.\n\n\"Oh yes. If he gives you his word, you can take it to the bank.\"\n\n\"I'm not the only one,\" I interjected. \"Sarah's word is her bond. She'll go through heaven and hell to keep it.\"\n\nSarah simply smiled, but it was true. In our group, she knew almost everything about me. In fact, there were only two things she didn't know. Or rather two people: Erin and Morena.\n\n\"Since we're being so honest here, I have a confession to make.\"\n\nThat comment got Erin's attention and mine.\n\n\"My vibrator is going to get quite a workout tonight.\"\n\nWithout hesitation, Erin said, \"Yours isn't the only one Sarah.\"\n\nThey started laughing and Sarah saw my smile at that comment. She told me to take those thoughts home and enjoy. In the rearview mirror, I grinned at her: if she only knew why. Sarah was just looking at me and I saw her lips slowly form a very mischievous smile. Maybe it was the alcohol. Maybe it was the emotional high over what she had just pulled off. Maybe it was a combination of the two. Whatever it was, even I didn't see her next comment coming.\n\n\"Why use a vibrator? I have a much better idea. Take the birthday boy home instead.\"\n\nErin's just stared at her. I just stared at her. Sarah just continued.\n\n\"Seriously. From Justin's reaction to your arrival this evening, I know you turn him on.\"\n\nErin's eyes glanced up at mine in the mirror. I was looking straight at her.\n\n\"Erin, in the past few hours, I have developed a true fondness for you. I know what if feels like to deal with that level of betrayal and disappointment. Outside of school, I could actually see us being close friends.\"\n\n\"Really. I was thinking the same about you Sarah.\"\n\nAs I came to a stop at a street light, the two hugged with that exchange.\n\n\"So if you're worried about anyone ever finding out, I promise I would never say a thing.\"\n\n\"But Sarah, I have to ask. Could I trust Justin with such a secret?\"\n\n\"Absolutely,\" Sarah replied. \"Get him to look you in the eyes and promise. He has never made a promise and broken it.\"\n\n\"Well Mr. Rhodes?\" Erin said looking at my eyes in the rearview mirror.\n\nI turned to face Erin Grant. I repeated the words I said to her last Friday.\n\n\"I won't tell a soul Erin. Not one. Not ever.\"\n\nErin smiled and then looked down. She was really considering letting Sarah in on the meeting we arranged for later this evening. The light turned green, so I started driving again. Sarah could see that she was on the fence too. She said one final thing in an effort to convince Erin to go for it.\n\n\"After everything you have been through Erin, do yourself this favor. Make it a birthday treat. Let your hair down.\"\n\nI could not believe how hard Sarah was selling the idea to Erin. In the rearview mirror, my eyes looked at Sarah with genuine gratitude. Whatever Erin's decision, Sarah had really gone to bat for me tonight. Friends like that were few and far between.\n\nMy eyes moved to Erin. She was looking up and had a gleam in her eye. She was really going to do it. She was going to tell Sarah that she would take me home. My mind raced with the thought. There would be one person I would be able to talk to about in regards to Erin. It wasn't about gloating or bragging. It was about being able to tell just one person how much Erin had rocked my world. I hoped I would be able convey to Erin how much that meant to me. \n\n\"Okay,\" Erin said. \"I'll take him home.\"\n\n'YES!' I thought.\n\n\"You hear that Justin. This woman is counting on you to make her birthday truly memorable. You better fuck her senseless.\"\n\nMaybe it was the alcohol. Maybe it was the emotional high over she had from finally seeing her ex-husband on the losing end of the stick. Maybe it was a combination of the two. Whatever it was, even I didn't see Erin's next comment coming.\n\n\"Since we're being so honest here Sarah, I have a confession to make. He already has.\"\n\nSarah's eyes darted to the rearview mirror.\n\n\"Oh my ...,\" Sarah started.\n\nShe could see it in my eyes. She looked back at Erin.\n\n\"You were last Friday?\"\n\nErin just smiled. I might have been worried that she thought I had said something to Sarah, but I could see it in her eyes. Erin knew better.\n\n\"You were last Friday,\" Sarah repeated.\n\nIt wasn't a question this time. After following her directions for the past ten minutes, Erin finally said her house was the next one on the right. I got out of the car to open Erin's door for her and Sarah joined me. As we stood in front of Erin's house, Sarah looked me dead in the eyes.\n\n\"I know you would have never told me who it was, but answer me this: I've seen you after you've gotten laid, but I have never seen you glow before. Last Friday was more than sex for you wasn't it?\"\n\nMy eyes darted to see Erin's looking at me with both affection and hope. I kept her gaze when I replied.\n\n\"Sarah, last Friday I connected with Erin on levels I would have never believed possible. There is a corner of my heart that will always belong to her.\"\n\nI saw Erin's eyes grow a little misty when I said that. Sarah threw her arms around me and hugged me tight. She knew that I have had crushes. She knew there had been a couple people I really liked. But she also knew I had never said anything like that about someone before.\n\n\"Okay then my good friend; I have a birthday present for you.\"\n\n\"I think you have done enough,\" I said.\n\n\"You're staying at my place until Sunday.\"\n\nBefore I could react, she added, \"At least that is what I am going to tell your parents.\"\n\nShe looked at Erin.\n\n\"His parents love me. His mom even takes me shopping a couple times a year. I am going tell them he is staying with me until Sunday. That is if you think you can handle having him for a few days straight.\"\n\n\"I think I can keep him occupied for a few days,\" Erin replied with a big smile.\n\n\"Good, because this comes with a condition for each of you. Erin: you and I are going to have a sit down soon. I have never seen my best friend gush over anyone this much before so I expect you to treat him well. I want to hear all about last Friday as well as this weekend. I want to know what you did to turn him upside down.\"\n\n\"Deal,\" Erin replied.\n\n\"Okay, I need your number in case I have to get a message to Justin ... and I need your keys so your car can stay at my place to give this little hoax the illusion of believability.\"\n\nI gave Sarah my keys while they exchanged numbers.\n\n\"As for you Justin,\" Sarah directed towards me.\n\n\"Yes?\"\n\n\"Wreck her,\" Sarah commanded me.\n\nI just smiled. Sarah winked at me, got in my car, and started to drive off. Erin took me by the hand and led me inside in her home. She didn't say a word. She just unlocked her door, pulled me inside, and locked the door again. She leaned up and kissed me deeply. I returned her kiss. I felt her pour every once of affection and every urge of lust that we had shared last Friday into that kiss. She pulled away, turned, and took four steps to the couch that was but a few feet away. The couch was one of two in the room. Each one faced the other. The one she chose had its back to the foyer we had just stepped through. She bent over the arm and looked over at me. However, the woman that looked back at me wasn't just Erin the goddess. The woman that looked back at me wasn't just Professor Grant. In her eyes I saw a beast; a wild beast whose eyes were telling me to do one thing. Those eyes said only three words: fuck ... me ... now.\n\nBy the time I reached the couch, my jeans were unbuttoned and unzipped. My left hand pulled up her dress over her waist, while my right started pushing my jeans and underwear down my legs. I switched hands. My left hand pushed the other side of my clothes down past my hips while my right hand caressed her ass. She moaned at my touch. As my cock sprang free, I reached into the black thong Erin was wearing and tore it from her body. She groaned her approval. As I slid the head to the opening of her pussy, I could tell Erin was soaking. I felt her hand meet my cock and guide it in. As I pushed into her pussy, I moaned at the feeling. My goddess was hot. My goddess was wet. I looked up and saw that her eyes were on fire. We had plenty of time to make love. Right now, Erin Grant needed to be fucked. To be perfectly honest, I wanted to do nothing more than that.\n\n'Five minutes. Just let me last five minutes.'",
        "I remember thinking that as I started stroking in and out of her. Part of me wanted to pleasure her. Part of me needed to pleasure her, to make my goddess cum and cum hard. I hoped five minutes would be enough to achieve this goal because being inside Erin again already had my balls boiling. Then I looked down into her eyes and saw the beast staring back at me. When I saw those eyes, the part of me that wanted to pleasure her was no longer in control. My hips just started moving of their own accord.\n\nIf her eyes were on fire, then her pussy was a furnace. It felt so right to have her hot flesh wrapped around my cock like this. My hands were on her hips. One of Erin's arms was holding the arm of the couch, giving her just a little advantage. She wasn't pushing back at me. She was doing everything she could to stay in that perfect spot ... so I could fuck her as hard and fast as possible. I know her other arm was beneath her body because I could feel her fingertips every now and then. She was grunting every time I slammed into her. I wasn't in her for a minute when her groans got louder. A small part of me registered that she was getting close to orgasm. I could hear that small voice in the distance.\n\n'Four minutes. Just four more minutes.'\n\nA far larger part of me didn't knowing anything of her orgasm or about time. All it knew was the instinctive need to keep pounding my shaft into her over and over. And pound her I did. I could feel her pussy getting wetter. I could even hear the squishing sounds of our coupling over the sounds of my flesh slapping against hers. She was so close and yet so very much of me didn't care. She was a woman who needed to be fucked. I was a man who needed to fuck her. Her head shot up as she screamed through her orgasm. I was grunting as I fucked her through her cum. She shuddered over and over, not that I cared. I was fucking her like I had paid for her. Then the small voice seemed to get a little louder.\n\n'Three minutes. Just three more minutes.'\n\nI knew what that little voice wanted. It wanted to give her one more orgasm before I came. The little part of me wanted to pleasure her again before I took my own. It might have won if not for one thing: Erin had subtly changed the position of her body. Erin was bent over the side of the couch, but now she had her ass as high in the air as she could hold it. This told me everything I wanted to know at that moment. Erin was offering her body to me now for my pleasure. The thought made me drive my cock into her pussy harder and harder. I was grunting loudly now and I could feel the burn. I was going to cum soon. Very soon. I wasn't going to make three minutes. I wasn't going make it through another 30 seconds. Then a voice spoke.\n\n\"Do it ... right fucking ... now ... cum in my cunt\"\n\nShe knew the effect her words would have on me. She knew it would only feed that part of me that was fucking her for my pleasure not hers. She knew it and she continued egging me on.\n\n\"Fuck me and ... fuck me and cum dammit,\" she said with labored breaths.\n\nI drove hard into her and pulled back. My balls felt like they were on fire now.\n\n\"I want it ... want to feel it\"\n\nI drove into her again and pulled back. I could feel the cum beginning to race up my shaft.\n\n\"Feel it shooting in me ... in my cunt\"\n\nI drove into her one final time. Erin wailed her final pleas to me.\n\n\"Where your cum belongs Justin ... WHERE IT FUCKING BELONGS\"\n\nI felt my cock explode. My hands held her hips so tightly my knuckles were white. My body heaved against hers, that primal instinct to drive my seed as deep into her as I could. And each time my body heaved against hers, Erin's body shuddered. She was cumming with me. That thought made me drive my cock into her that much more.\n\nAs my orgasm faded, so did my strength. I fell over, just to the right of her. The left half of my body half covered hers. My right arm went over the back of the couch. My head was hanging down between the back of couch and Erin. Somehow, through all of it, Erin managed enough strength to push herself up on one arm and cradle her cheek up against mine. I could feel her labored breathing matching my own. Life was good.\n\nEventually, we both caught our breath. As if sharing the same thought, we both turned to share a kiss. She pulled back and looked at me in a way that just melted me.\n\n\"Can you do something for me?\" she asked in a voice so soft it was barely audible.\n\n\"Anything,\" I replied.\n\n\"Carry me to my bed,\" she said. \"Carry me to my bed and love me ... and claim me ... and take me ... and own me.\"\n\nSo I did. Her words gave me renewed strength. I stood up, picked her up, and she melted into my arms.\n\n\"The door at the end of the hallway,\" she whispered.\n\nAnd like a man carrying his wife across the threshold, I carried Erin upstairs and to her bedroom. For the next few hours, we made love twice before falling asleep. She woke me up just after four in the morning for a more frenzied encore that was just as intimate as the ones before. In those hours, I fell for Erin Grant. By the look in her eyes, I could see that she had fallen for me too. In those hours, I loved her ... and claimed her ... and took her ... until I owned her ... and she owned me.\n\n* * * * * * * *\n\nI woke up with the sun coming through the window and an empty bed. I sat up thinking that it had all been a dream. Upon looking around the room, I realized it wasn't mine and I smiled. It wasn't a dream. I was really in Erin's home. As I started to wonder where she was, the smell of food hit my nose. I looked over and saw my clothes folded on a chair. Lying next to them was a pair of sweat shorts. After using the bathroom and rinsing my mouth out with mouthwash, I grabbed my underwear, my shirt, and the sweat shorts. I never had the opportunity to ask last night if her daughters were home. Somehow, I didn't think it would go over well to have me walking around the house naked if they were. I dressed and went downstairs.\n\nI walked into the kitchen to find Erin at the oven making omelets.\n\n\"Good morning,\" she said with a big smile.\n\n\"Good morning to you,\" I said and kissed her softly.\n\nShe pulled back after the quick kiss and looked at me. She put down the spatula and turned to me. Erin leaned up and kissed me deeply.\n\n\"You never cease to surprise me, do you know that?\" she said as she resumed her efforts on preparing breakfast.\n\n\"How so?\"\n\n\"No morning breath,\" she said. \"I've never had anyone do that before: get rid of the morning breath.\"\n\nI walked behind her and whispered \"you're welcome\" into her ear. The toaster dinged and four halves of English muffins shot up. I moved over to pull them out and place them on the plate left on the counter. I walked them over to the small table that had been mostly set. She had cut up some fresh fruit and placed a few jams on the table, but the beverages were missing.\n\n\"What are you having to drink?\" I asked.\n\n\"Orange juice,\" she said and looked over at a cabinet above and to the right of the sink. \"Glasses are over there.\"\n\nI got two glasses and walked to the fridge. I grabbed the orange juice and headed for the table. She met me there with two plates. Each had an omelet on it. I pulled her chair back for her and I took my seat after she sat down. Although we kept looking at each other, the plates were empty in minutes. Erin had made breakfast, so I took the dishes to the sink and started rinsing them off. When I had finished putting them in the dishwasher, I turned to find her grinning at me.\n\n\"Now that we've eaten, it's time for a shower,\" she said.\n\nAs we walked up the stairs, I asked, \"Where are your daughters?\"\n\nShe just giggled.\n\n\"They're both in San Diego. Michelle talked Kathryn into joining her for Spring Break. They won't be back until Sunday night, so you have two more days to fuck me in every room of the house.\"\n\n\"Now that sounds like a great way to spend a weekend,\" I said.\n\n\"Doesn't it though?\"\n\nShe beat me into the shower and by the time I joined her, the water was perfect. I pulled her to me and kissed her deeply. As she returned the kiss, she pulled us both under the water. It felt great to have that water cascading over us as we kissed.\n\n\"You were wrong about one thing though,\" I said as she pulled away from that kiss.\n\nShe just cocked her head and looked at me.\n\n\"You said 'now that we've eaten' but we haven't,\" I continued with a grin. \"I've been fed, but I have yet to eat.\"\n\nI started to kneel down when she pushed me against the wall.\n\n\"You're right,\" she said with a fire in her eyes. \"But this is my home and I will be eating first Mr. Rhodes.\"\n\nWith that she sank to her knees. She didn't look up. My professor, Erin Grant, knelt before me in her shower, and took my cock into her mouth. I felt her hand cup my balls and gently roll them in her fingers. She pushed her lips further down my shaft, until I felt the head of my cock pop into her throat. I felt her swallow around the head and take the remainder of my shaft into her mouth. Fuck, she was good at this. She held my cock there, fully buried in her wonderful mouth for a few seconds before pulling back. As she pulled back, her hand followed and she fell into that exquisite pattern of stroking and sucking me. On the sixth stroke, Erin would take me completely into her mouth again. With her lips around the root of my shaft and my cockhead in her throat, she would make swallowing motions as she gently kneaded my balls. Ten seconds later, she again pulled back and worked my shaft in that stroking and sucking fashion. And again on the sixth repetition, she buried my cock in her throat. And again ten seconds later she pulled back.\n\nI looked down, but Erin wasn't looking up at me. My goddess was intent on her task. Again she stroked and sucked me. Again she took me deep on the sixth repetition. I was getting very close. She must have felt it because I felt her hum 'mmm-hmmm' around my cock. As she pulled back this time, she sucked my head harder than before and jacked my cock with her fist. My balls began to tighten up and I nearly jumped when I felt her free hand grab mine. She placed it in her hair and began sucking me deep one last time. I realized that she was giving herself to me. Erin trusted me to hold her head down on my cock when I came, knowing that I would never forcefully choke her. I brought my other hand to her head and held her there. My cock was in her throat for only a second when it exploded. Through it all, Erin never moved, never wavered. She didn't just swallow my seed. She swallowed me.\n\nWhen I was done giving her all that I had, I removed my hands. She slowly let my cock out of her mouth, sucking it the entire way. I pulled her up to me and kissed her deeply. She wrapped her arms around my neck and returned the kiss. Slowly I spun her around, placing her back against the wall. Then I knelt before her. I placed her left knee over my shoulder, revealing her sex to me. Even now she was wet, and it had little to do with the steam from the hot water. I leaned forward and flicked my tongue over her clit. Erin just moaned. Then I wrapped my lips around her swollen button and sucked it into my mouth. I slowly pushed my left hand up her body until it cupped her right breast. As I continued to work her clit, I let her hard nipple fall between the middle and ring fingers of my hand. I pinched gently and the action elicited the response I wanted; Erin moaned loudly.\n\nHer moans continued as I worked her body. My hand was squeezing her tit-flesh. My fingers gently pinched her nipple. My mouth and tongue worked her sensitive little button. All three labored together, in a rhythm. Erin's moans followed that rhythm. As I sucked her clit, pinched her nipple, and squeezed her breast, Erin moaned loudly. As I backed off of all three of those spots, the moan died off as she took in air. My pace never changed, but I gradually increased the pressure. Only minutes passed before I felt her body begin to shake. Erin was there, on the edge of the cliff waiting for the wave to wash over her. She read my mind when her hands wrapped themselves in my hair. I could feel her beginning to tremble harder now. She needed the leverage and she needed to know that I was giving myself to her as she had to me. My hand squeezed hard one final time. My fingers grabbed their prize and held it. And I bit down gently on her clit, trapping it between my teeth and tongue. With her hands in my hair, Erin let the wave wash over her. She shook and moaned constantly for what seemed like minutes. In reality, I know it was only 20 seconds or so. It didn't matter. I wanted that orgasm to crash down over her.\n\nHer hands let go of my hair. I slid up her body. She just gazed into my eyes when I picked her up. She put her arms around my shoulders for leverage and wrapped her legs around me. I just started her eyes as she stared into mine. Silently, we both savored the feeling as she lowered her pussy down onto my hard cock. When I was fully rooted in her, she wrapped her legs tightly around me. I pushed her against the wall. There in her shower, we made love. In that position, I could only manage to get a few inches of movement back and forth. Pinned against the wall with her legs wrapped around me, those few inches were all she needed.\n\nBetween my thick shaft splitting her open and my body grinding against her clit, Erin started cumming almost immediately ... and she didn't stop. One seemed to follow the next. She kissed me, moaning into my mouth. I kept thrusting. A couple of minutes later, she pulled back. Her moans had grown more powerful and she needed the air. I kept thrusting. Erin's moaning turned into wailing as the orgasms flowed one into the next. I kept thrusting. Over the next fifteen minutes, I managed to keep a measured pace, making certain I kept hitting all the right spots on her body. Eventually, her strength began to wane. Her breathing was beyond heavy and she was sobbing at this point. I started to slow my pace, but she pleaded with me not to stop until I came in her. I was so close that I just closed my eyes and kept pumping into her. It didn't take long. Soon my cock was pulsing deep within her, sending my seed as far into her welcoming body as possible. With each pulse, Erin just kept moaning \"yes\" over and over.\n\n\"YES!\" I heard her shriek and I opened my eyes to look at her.\n\nOnly Erin was looking at me and by the look on her face it was evident that she hadn't made the last sound. Over the sounds of the shower, we could hear moaning offset by the occasional cry of joy. It was clear that these sounds of passion were coming from another woman. I would have been concerned, but Erin put her finger over her lips and then mouthed \"follow me\" before slowly lowering herself to the floor. She left the water running and cautiously opened the door. Taking two towels from the rack, she handed me one and wrapped the other around her body. We both listened and could still hear continued moaning from our as yet unknown guest. At least she was unknown to me. By Erin's body language, I had the feeling she knew who it was that had intruded on our moment. From the gleam in her eye, I knew she intended to return the favor. We walked to the door, which was half open. Looking in the mirror, I could see the form of a woman who was half-dressed on the bed. Another cry of joy was let loose and Erin just grinned at me.\n\nShe looked at me and mouthed, \"One ... two ... three.\"\n\nOn three, she opened the door and walked out into her room. Since she had not told me to stay put, I followed her. I only got two steps before I stopped in my tracks. The woman was lying on her back, with her blouse open. A bra similar to the one Erin wore last Friday was opened exposing two large breasts. Both were covered with a light sheen of sweat. One of her hands was tweaking her dark nipple, rolling it back and forth in her fingers. Her other hand was between her legs. Legs which were spread open revealing a hand which was working her pussy furiously. A thong was halfway down her left leg. I couldn't see her face, but I was certain I knew the voice. Then it hit me. The large breasts and the darker complexion meant one thing. It had to be ...\n\n\"Are you enjoying yourself Maria?\" Erin asked loudly.\n\nMaria bolted up right to find both Erin and I looking at her. Towels covered our bodies, but hers was still exposed.\n\n\"Yes Erin,\" Maria replied matter-of-factly. \"I was.\"\n\nMaria didn't blush nor did she make any attempt to hide her breasts. She simply stood up, tucked her truly marvelous tits back into her bra, and buttoned up her blouse.\n\nAs she did this, Erin asked, \"How much did you see?\"\n\n\"From just before you finished blowing him. I had come over to see how you were after last night.\"\n\nMaria looked over at me and smiled.\n\n\"And it's obvious that you are doing just marvelous. Or should I say 'being done marvelously?' Watching him make you cum so quickly with his tongue got me wet. Watching him take you against the wall was divine. But listening to you wail while he continued to take you was just too much and the next thing I knew I found myself on your bed just listening and playing.\"\n\nShe walked over to her friend and hugged her tightly. She whispered something to Erin that made Erin blush and smile.\n\nMaria looked at me and said, \"I'm sorry to have intruded on your moment.\"\n\n\"Not at all,\" I replied. \"Erin's lucky to have such a good friend.\"\n\n\"And she's lucky to have found someone who could make her cum like that,\" she said while flashing her eyes at me.\n\nI blushed and grinned all at the same time. It was flattering to know that I could drive Erin to such pleasures. Both women were just smiling at me. Maria did so because I took her compliment with a measure of humility. Erin did so because she was happy to be with me. At least I hoped that's why they were smiling.\n\n\"I have to get to the office. I didn't have any early appointments, so I wanted to drop by. Are you still making lunch tomorrow?\"\n\nI put my arm around Erin and looked down into her eyes.\n\n\"No,\" she replied. \"Can you cover for me?\"\n\n\"Of course,\" Maria replied. \"But you know Allison will want a good explanation.\"\n\n\"I know,\" Erin said hugging her friend.\n\n\"Dinner ... Monday night,\" Maria said to Erin.\n\n\"Monday night,\" Erin replied.\n\n\"And I expect every delicious detail,\" Maria added as she walked out the door.\n\nThen she popped her head back around the corner, looked at me, and said, \"So make certain she has a lot to tell me.\"\n\nErin leaned up against me as we listened to the sounds of footsteps then the door opening and closing.\n\n\"She has a key,\" Erin said. \"I'm sorry.\"\n\n\"For what?\" I replied. \"It's obvious you didn't know she was coming over.\"\n\nErin leaned up and kissed me. She asked me to go shut off the water and then come to bed. I went into the bathroom and shut off the water. I quickly dried myself off and re-entered the bedroom. Erin was just slipping into bed, her towel on the floor a few feet away. I crawled into her bed and held my arm up. Within seconds she was curled up against me. Just seconds after that, her eyes were closed. Erin was asleep soon after, her body in need of some measure of rest after the shower. I found it flattering that this woman could trust me so much as to be able fall asleep so quickly in my arms. I lay back and closed my eyes as well, joining my goddess in a peaceful sleep.\n\nSome time later I awoke. Erin was still curled up against me. I leaned down and gently kissed her forehead. Looking over at the clock, I could see that it was just past noon. I spent the next half-hour with my eyes closed listening to the soft sounds of Erin breathing and savoring the feeling of her body against mine. In some ways, this seemed so surreal. If it was a dream, then I wanted it to enjoy this reality as long as possible. I felt Erin stir. I looked down at her face, staring into her eyes. I wanted to watch them open. They did and she smiled softly at me.",
        "\"Can I ask a favor?\" she whispered.\n\n\"Of course you can.\"\n\n\"Water please. You'll have to go downstairs to the kitchen.\"\n\nI got out of bed and enjoyed the reluctance I felt in her grasp. She didn't want me to leave, but she wanted water and knew I would return. I grabbed the sweat shorts from the floor in the event there were other surprise visitors and started for the kitchen. I returned with two large glasses of water. I handed her one and sat on the bed. With one hand holding the covers to her breasts, she accepted the glass and drank it greedily. She wasn't alone. Our activities did exact a price on both us physically and if we were to continue, we would need to pay attention to our physical needs as well as our carnal ones. When both glasses were empty, she placed hers on the nightstand. I did the same. She lay back on the bed and motioned me to join her with her finger. As I moved to join her, she mouthed \"no shorts\", so I stood and took them off before slipping under the covers with her. She pulled me to her, putting her left leg over my shoulder while stroking my rapidly inflating cock. As she put the head to the lips of her sex, she just mouthed, \"Use me.\" I put her other leg over her should and did just that. Erin stared into my eyes the entire time. It started as whispering, but when we finished together, she was yelling sweet obscenities at me. My cock pulsed so hard it hurt as I shot my seed into her. My eyes never left hers and she leaned up to kiss me deeply as we finished riding out our orgasms.\n\nWe didn't clean up. We barely moved. I rolled to her side and Erin curled up against me, laying partly on her side and partly on me. Her left arm was draped across my chest and her left leg was across my left leg. Her head was tucked against me and as before, she was asleep quickly. As before, I joined her.\n\n* * * * * * * *\n\nI awoke this time to find Erin staring at me. It was later in the afternoon, approaching evening. It felt so right to fall asleep with her and then to wake up with her there in my arms. We just stared into each other's eyes for a while before the phone rang. Erin looked over at her phone and I didn't think she was going to answer it. Then she said, \"It might be Sarah\" and reached over to pick up the phone.\n\n\"Hello,\" she said into the receiver.\n\nShe mouthed \"Allie\" and \"water\" to me. I gave her a peck on the forehead and got out of bed. I took both glasses to the bathroom, using the faucet there to fill them. I handed one to her and she sipped it while listened to her sister talk. I drank mine quickly because a fun thought crossed my mind. I put my glass on the nightstand and crawled under the covers. As I got between Erin's legs, the covers flew open and I looked up to see her looking at me with a devilish grin. She spread her legs and nodded her head. With an open invitation, I started kissing my way up her right thigh. The conversation continued, not that I was surprised. A woman of Erin's intelligence should be able to multitask.\n\nI grabbed a pillow and put it under Erin's ass to hold her body at a perfect angle. She continued talking with Allison, but looked down at me and smiled. I stared right into her eyes as I flicked my tongue across her clit. She closed her eyes and smiled, but continued talking. After three or four seconds, her eyes open and stared down at mine. The look was one of absolute contentment. My tongue made many swaths across her button, each time achieving the same result: her would close, the conversation would continue, and three seconds later they would open again always filled with that look of absolute joy.\n\nI let my licks grow longer, slowly tracing my tongue around her lips and then moving to her clit. Her eyes closed once again, but she was biting her lower lip as I finished that longer motion. This time when she opened her eyes, I could see the spark that would start the fire in them. So I continued this over and over. I have to admit, I would never tire of eating Erin's pussy, but it was so delicious to see that fire building hotter and hotter every time she opened her eyes. This time, I pushed my tongue between her lips before moving upwards to her clit.\n\nErin groaned out loud, \"Ohhhhhhhh.\"\n\nShe looked down at me. The fire was there in her eyes. She was biting her lip, but I could tell she was perfectly happy with what I was doing. So I continued. I pushed my tongue between her lips once more and in my peripheral vision, I saw her hold the phone away from her mouth. The receiver was still pressed against her ear as she attempted to listen to her sister. I knew her concentration was elsewhere. As I moved up at an excruciatingly slow pace, I noticed her hand over her mouth. Her eyes were squeezed shut. It took her longer to open her eyes this time. The fire was in full burn.\n\n\"What,\" she said into the phone. \"I didn't catch that last part.\"\n\nOnce again I plunged my tongue into her, pushing my face into her wet sex. I got my tongue as far into her as I could manage, perhaps two inches. From the muffled moans she was making, I knew Erin's hand was covering her mouth. Again, I deliberately took my time moving to her clit. This time, instead of licking her clit I wrapped my tongue around and sucked it gently. She groaned even louder this time. As I pulled back, I blew gently across her clit. The effect it had was instantaneous. Her hips shot up in an effort to push her clit against my tongue, but it was out of reach.\n\nJust for a moment, I gazed upon the blond-covered pussy that was mere inches from me. Many times, I have noted that Erin Grant was a dirty blonde. Her hair was three or four inches past her shoulders and only a very short portion of the hair that adorned her head was dark. The remainder was very much blonde. The soft hair that surrounded her pussy was the same color. The roots were dark, but the rest was very much blonde. In addition, this soft patch of hair was quite short. I don't think it was trimmed, it just wasn't long. Once more, I blew softly across her sex. She groaned again.\n\n\"Allie, I need to go,\" she said into the phone.\n\nFrom three feet away, I could hear Allison continue to talk. From the look in Erin's eyes, I knew what she wanted. She was, at most, two more licks away from cumming. I buried my tongue into her wet sex once more. Fuck, she tasted good. I wanted to drink from her, but I could hear the need in her voice.\n\n\"Allie, really ... mmmmmm ... I need to ... mmmmmm ... go.\"\n\nErin pulled the phone completely away from her head and groaned loudly. Part of her was trying to keep what was going on from her sister and part of her was no longer caring if Allison knew. I slowly moved my mouth up and Erin arched her back to push her sex against my mouth. Her body was rigid when I got to her clit. Again, I pulled back and blew softly across her sex. This time, her hips actively pumped up as I pulled away. I looked up at her and the fire was now a furnace. Erin was on the edge of an orgasm. Her hips were pumping up at my face as I continued to blow softly.\n\nBefore she could end it, I grabbed her free hand and held it, denying her attempt to find the release her body so craved. She glared down at me. It wasn't anger that filled her eyes, but frustration. The frustration that comes with being denied something so desperately needed. I looked down. Her clit was a deep red, as were her lips. Just watching her engorged sex thrusting up and down at my mouth had my cock so hard it was twitching. I heard something from the phone, but I was too busy concentrating on her sex to hear. I did hear Erin quite clearly though.\n\n\"What has me so distracted?\" she said loudly into the telephone. \"What has me so distracted?\"\n\nI took a very deep breath of air and then buried my tongue into her. Erin dropped the phone and just started moaning. I wrapped my arms around her legs. She grabbed the back of my head with both hands. There was no way I was pulling away this time, not that I planned on it. While I had my tongue in her pussy, I opened my mouth a bit more. This allowed me to put my entire mouth around her inflamed lips as well. Her hips seemed to take on a life of their own and started pumping into my mouth. Her hands were gripping the back of my head. I heard Erin Grant, my professor with two doctorate degrees, grunting and moaning like a whore. The sounds only inspired me that much more. I began sucking as I pumped my tongue in and out between her lips. It was barely enough to pull her lips into my mouth. That was enough to make her lose it. Her body began shuddering as she came hard. Each quake that ran through her body was by a deep cry of passion, and I have no doubt that Allison knew fell well what had her younger sister so distracted. After eight or nine such body-tremors, one of Erin's hands let go of my head.\n\n\"What has me so distracted sister dearest is one of the most talented tongues I have ever known,\" she said.\n\nShe let me pull back enough to breathe again. I looked up to see the phone in her hand and the fire still burning brightly in her eyes.\n\n\"Now if you will excuse me Allie, I'm hoping he can do that again.\"\n\nWith that, she hung up the phone and looked down into my eyes.\n\n\"Well Mr. Rhodes,\" she said using that commanding tone that just sends sweet shivers throughout my body.\n\n\"Yes Professor Grant,\" I replied.\n\nI took another deep breath as the hand that had been holding the phone joined the other on head. I wrapped my arms tight around her thighs and prepared myself. My tongue, my mouth, and my fingers brought my professor to orgasm once more. This one was harder than the first. If my arms weren't around her thighs, I would never have been able to keep my mouth on her pussy.\n\nI crawled up her body when she was done cumming. We were both breathing ragged, each of our bodies in need of oxygen. From the burning in my lungs, I had to guess I went for 30 seconds without air. From the look of sheer contentment on Erin's face, it was definitely 30 seconds well spent. Perhaps I would have to work on holding my breath longer. A few minutes later, we were almost breathing normally when the phone rang again.\n\n\"Yes Allie,\" Erin said into the phone. \"Oops. Hi Sarah ... no, my sister was being somewhat persistent in keeping me on the phone ... yeah, I was distracted ... yes, he is being a very good guest.\"\n\nThat last comment was accompanied by a kiss on my cheek.\n\n\"Yes ... okay, I'll have him call home ... thanks, you too.\"\n\nErin hung up the phone and handed the receiver to me. Then she crawled down besides me and began fondling my balls with one hand. The effect it had on my cock was immediate. She licked the head of my cock a few times and then paused as if she was waiting for something.\n\nLooking up at me, she said, \"Don't you have a call to make?\"\n\nTurnabout is fair play so I dialed the number for home. As I began dialing, Erin started licking my shaft. Her hand was holding base of my cock with the palm of her hand pressed against one of my balls. The feeling of her tongue running up and down my cock was incredible and I almost didn't hear my mom answer the phone. When I said hello, Erin just sucked the head of my cock into her mouth. Although my mom was wishing me Happy Birthday, I would not have been able to repeat what she was saying. The sight between my legs was simply too incredible to block out of my mind.\n\nIn the times before now, Erin used a stroking and sucking technique that was incredible. She had been able to take my cock into her throat. Her tongue and throat would literally milk my shaft. Between that milking and the jerking motion her hand was doing, she had always been able to make my dick explode in mere minutes. What Erin was doing this time was different. I looked down at one of the most erotic sights I have ever seen: a 41-year-old goddess named Erin Grant who was making love to my cock with her mouth.\n\n\"I'm having a great time,\" I said.\n\nErin responded by taking my cock out of her mouth. She kept her lips pressed against it along with her tongue. In very slow motions, she moved her mouth up and down my shaft. Erin's mouth and tongue were so wet with saliva that her mouth made a soft slurping sound as she moved her head up and down. Occasionally, her eyes open but only to focus on the cock she was working over. On the fifth up-and-down motion, she let the head slip back into her mouth. She only took the head and perhaps another inch of my shaft, but I was far from disappointed. With her lips locked around my shaft, Erin had her tongue fluttering over the head of my cock while she sucked gently. The feeling was incredible.\n\n\"All I can say is that my host is taking excellent care of me.\"\n\nMy mother talked at length about how all the things she remembered about me growing up. Erin pulled the head out of her mouth and started the shaft slurping again. I could feel the difference between her lips and tongue, as she loved me with her mouth. I could also feel her sucking gently. She was working every part of my cock. Damn it felt good. More than that, I realized that it was deliberate. In times past, Erin made me cum quickly; she was always in control. She was still in control this time as well. Now, she was intentionally delaying the culmination. She was prolonging her fun and my orgasm. As I looked down at her face, I could see it. She enjoyed giving head. At that moment, her eyes snapped open and looked directly into mine as if to correct my statement. In her blue eyes, I could see my error. Erin Grant absolutely loved giving me head.\n\n\"No mom, I am getting the royal treatment.\"\n\nUpon hearing those words, Erin smiled at me with her eyes. Then she closed her eyes, moved her mouth down past her hand, and moved her hand up to encircle my cock. As she started slowly stroking my shaft, Erin sucked my left ball into her mouth. I sat there in awe as I watched her work her mouth over my testicle in the same manner she worked the head of my cock. The impact was immediate: my cock throbbed in her hand and I groaned loudly.\n\n\"No ... what ... sorry,\" I said into the phone. \"Sarah flashed me.\"\n\nErin must have heard my mother laughing because her hand squeezed my cock. She moved her mouth over to my right testicle and began to pleasure it in the same fashion. Her hand continued to stroke me slowly. She was deliberate in the action, because she took extra care to caress her fingers over the head of my cock on the up strokes. I was getting close.\n\n\"Mmmm-hmmm,\" I managed to get out.\n\nErin let my testicle drop from her mouth and she moved up to the tip of my cock. She just looked up at me with those deep blue eyes. Her hand was at the root of my cock and squeezed. My goddess was in control. As if I could hear her telling me to push back, I could feel the pressure to cum subsiding. She licked up and down my cock with just the tip of her tongue, looking directly into my eyes the entire time. When she decided that I had calmed down enough, Erin started her efforts again.\n\n\"No mom,\" I said while looking down at Erin. \"I'm having the time of my life.\"\n\nErin just smiled and kissed the tip of my cock. Then she looked at me and sucked my cock down into her throat. She stared up into my eyes as she milked me with her throat and tongue.\n\n\"Okay mom, let me talk to dad.\"\n\nMy dad was quicker on the phone than my mother had been. I then spoke to each of my sisters, my younger brother, and my uncle and his wife who had stopped by to borrow some tools from my father. Everyone was asking what I was doing for my birthday, how it felt to be one year away from the big 2-0. The entire time, Erin continued to alternate between milking me in her mouth and then slurping me with her mouth. As I got close to cumming, Erin would back off and let me cool down. Then she would start anew on building the fire within me. Although the need to cum would go away when she let me cool down, the pressure was definitely building in my balls. From the look in Erin's eyes, I knew she could feel the throbbing in my balls getting stronger and stronger. It was exquisite torture.\n\nAs I said my goodbyes, Erin let go of my cock and walked into the bathroom. She walked back in holding a bottle in her hand as I hung up the phone. She lay down on the bed beside me and held the bottle up for display. It was a bottle of baby oil. My cock twitched and she saw it.\n\n\"That's right Mr. Rhodes,\" Erin said falling back into her professor voice. \"You get to do something I am certain every boy on campus wants to do.\"\n\nMy eyes flashed down to her magnificent tits.\n\n\"You are going to fuck my tits Mr. Rhodes.\"\n\nI loved it when she said \"Mr. Rhodes\" in that this is your professor speaking voice. I know my jaw was hanging open as she poured some of the oil onto her breasts and started working the oil into her flesh.\n\n\"So get up here Mr. Rhodes.\"\n\nI was straddling her body in seconds. Erin reached back and propped her head up on a pillow. Then she looked up while cupping her tits and spoke.\n\n\"Just to add to your thrill young man,\" she said while squeezing her now shiny tits. \"These measure thirty-six ... \"\n\nErin paused for just a second ...\n\n\"... double-D.\"\n\nMy cock twitched again.\n\n\"Yes,\" she purred at me. \"That's the response I wanted.\"\n\nI leaned forward and let my cock slide between her tits. Erin wrapped her slick soft tits around my dick and started moving them up and down. My cock twitched again. I put my hands on her tits, squeezing them together and Erin just purred at me.\n\nShe looked up at me and said, \"Now Mr. Rhodes, I have worked very hard to keep my body fit so I expect you to worship my breasts and worship them well. You will do so by fucking them good and proper ...\"\n\nMy hips started thrusting of their own accord. Erin's eyes and words were in control of my body.\n\n\"... and ultimately cumming all fucking over my tits ... and my face. That's why I kept you from exploding earlier. I expect nothing less than a very impressive load from your young balls.\"\n\nMy hands gripped her tits a little harder. My hips started thrusting faster.\n\n\"Don't disappoint me Mr. Rhodes,\" she said in her professor voice. \"Paint my tits with your fucking seed.\"\n\nMy goddess just lay there ... staring at my cock thrust between her magnificent globes ... and talking to me.\n\n\"That's it Mr. Rhodes, fuck those puppies. Don't they feel so good around that hard cock?\"\n\nI was beside myself with lust. I didn't even realize my fingers were pinching her nipples until I heard her hissing at me to \"pinch them harder\".\n\n\"How many times did you look at me in class and think about this? How many times did you think about fucking my tits?\"\n\nI just groaned as I continued to push my cock back and forth in her tit-flesh.\n\n\"Does it surprise you to know that I love tit-fucking?\"\n\nI looked down at her only to see Erin looking up at me like a woman possessed.\n\n\"I love feeling a hard cock between my jugs, fucking them. Using them.\"\n\nI just kept thrusting.\n\n\"For all my achievements, I am still a fucking woman. Every now and then, I just want a man to grab me and claim me.\"\n\nMy hips were moving faster now. I could see in Erin's eyes that her words were having as much of an effect on her as much as they were on me.\n\n\"Would you like that Mr. Rhodes? To cum on me? To shoot your hot, sticky cum all over your professor?\"\n\n\"Fuck yes ... I would ... Professor ... Grant ... love ... to ... cum ... on ...\"\n\n\"So do it Mr. Rhodes. Empty those young balls all over me. Paint me with your seed.\"\n\nAs I looked down, I could see that I would holding her tits so hard my knuckles were white. My hips started bucking erratically as my orgasm started.\n\n\"I'm begging you. Do it. Paint me with your cum Justin. Mark me with your fucking seed. Claim me as your woman ... your bitch ... your personal whore.\"\n\nThat was it. I came all over her. Her work earlier while I was on the phone paid off. I came so hard my balls hurt. I looked down and watched as my cock spewed multiple streaks of cum on her face and neck. Then she helped squeeze her tits together and milked a pool of cum between her tits. When my cock stopped shooting, she grabbed my ass, leaned forward, and took just the head into her mouth. I felt my goddess suck so hard it hurt, but my body responded. My cock pulsed a few more times, feeding her oral cavity with what little cum I had left.",
        "Finally drained, I dropped over to the side of her and watched as Erin worked the pool of cum that was between her tits into her flesh. With her other hand, she was using her fingers to pick up the larger drops of cum and then sucked her fingers clean. And she just stared at me the entire time. When she was done, she just leaned up and kissed me on the lips. I returned her kiss, undeterred by the taste of my cum.\n\n\"Stay,\" she said.\n\nShe got up and went to the bathroom. As she returned with the two glasses filled with water, I could see cum drying on her flesh. I smiled at the thought that Erin Grant had let me mark her in such a way. We both drank them until empty. She turned on her television and curled up with me as we mindlessly watched the rest of a movie. Eventually we got out of bed and went downstairs for dinner. Erin didn't clean up at all. The look in her eyes told me she liked wearing my cum and letting me know that I had marked her as mine. I have no doubt that if we had ordered pizza, she would have answered the door just as she was: naked and wearing my cum like a badge of honor.\n\nErin opened up a bottle of wine and poured the wine into a decanter. I watched as Erin did most of the work in making dinner. As I set dinner on the table, she poured two glasses of wine. Her toast was simple but it still made me blush. It made me realize that this weekend we were sharing meant as much to her as it did to me. As she did the cooking, I did the cleaning and she watched me the entire time. I realized that her ex-husband had stopped just spending time with her like this a long time ago. The man was a total fool.\n\nThe conversation start-to-finish was both light and serious, but always playful. We talked about what got each of us interested in Chemistry, why she enjoyed teaching, what my plans might be with my degree, and where each of us would love to travel. Small stories intertwined these topics and I found myself truly enjoying her company. To say that Erin was simply amazing sexually was an understatement, but I found it completely fulfilling on another level to be able to talk so openly. After dinner, we found To Catch a Thief starting on a classic movie channel. Neither of us spoke, we just enjoyed the closeness of each other as Cary Grant and Grace Kelly danced around one another for the two hours. When the movie was over, we went to her bed and made love very slowly before falling asleep.\n\n* * * * * * * *\n\nI awoke very early Saturday morning to find Erin on her side looking at me. There was a very hopeful look in her eyes as her hand played with my hard cock.\n\n\"Would you mind doing something for me I have wanted to do since I moved into this house?\"\n\n\"How can I refuse a request like that Erin?\"\n\n\"Balcony,\" she said.\n\nI followed her out to the balcony, which overlooked her backyard. It was still dark out, but some things were plainly visible. The large pool and equally large Jacuzzi were below us and to the right. What appeared to be a garden was below us and to the left. Directly below was a spacious patio complete with an outside bar and fireplace. I could make out a barbeque next to the fireplace.\n\nWhat really caught my eye was the view. Erin's house was one of a few near the top of hill and it covered an expansive plot of land located in a cul-de-sac. The backyard looked down that hill towards the northeast. While the silhouettes of other homes were visible, it was obvious that her yard was rather isolated from her neighbors and from those houses located further down the hill. In addition, the design of her home made it nearly impossible for anyone to see her balcony unless of course that someone was in her yard. I turned to comment on the view to Erin only to find that she was completely naked.\n\n\"The sun will be up soon,\" she said.\n\nIt was obvious what Erin wanted.\n\n\"I would love to make love to you while watching the sunrise,\" I said looking right into her eyes.\n\nShe walked the three steps to me and wrapped her arms around me. Her head turned to the side as she put her cheek against my chest. I kissed her gently on the forehead as I listened to her breath in deeply. Her left hand began to stroke my cock gently. Just knowing I was standing next to Erin and feeling her nude form against mine was erotic. What she was doing with her hand was intimate. It was loving. My right hand reached up and cupped her left breast. I tried to pour that same emotion into how my fingers were caressing her flesh. When she looked up into my eyes, I knew I had succeeded.\n\nWithout losing her grasp on my cock, she turned and stood against the balcony railing. She pulled me in behind her and then put her hands on the railing. I knew what my goddess wanted. Erin put her feet apart by only a foot. Standing behind her, I crouched just enough to let my cockhead slip between her legs. Her pussy was wet. I could feel the heat of her sex against my shaft as I pushed, letting my cock go between her legs but not inside her. Not yet. I slowly stroked back and forth. The moans that Erin made said everything. The feeling her lips dragging across the top of my shaft felt exquisite.\n\nWe stared out towards the east, savoring the both the view and each other. I felt her hand on the tip of my cock, gently pushing it back. It was time. I pulled back and felt her position the head and her lips. I gave her a second to put her hand on the balcony. Then I pushed in. Damn she felt good; hot and wet. As I pushed into her, I felt her squeeze my shaft with her muscles. I moaned into her ear. She reached back and put her hands on my hips. This had the effect of driving her magnificent breasts out and I reached around to cup them both. She sighed and began moving with me. With her body standing upright, I only managed to get about half of my shaft inside her. It was enough though. Her pussy walls were already fluttering as we grinded against one another. That sensation alone was making my balls boil.\n\nThere on her balcony, we made love and watched the sun come up. She didn't have the body wracking orgasms that had consumed in her in the shower yesterday. These were smaller by comparison, but they did roll over her every few minutes. With each one, Erin's pussy grew hotter and wetter. Combined with the endless quivering her sex was going through, it was getting harder and harder to hold back. As light broke over the horizon, Erin turned and smiled up at me. She closed her eyes as another orgasm washed over her. I pushed into her as far as we could get in this position, and let go my orgasm. As she felt the pulsing of my cock inside her, I saw her smile again. Neither her pleasure nor mine was the most physical intensive of our time together. I knew that this encounter on her balcony meant as much to her as anything would that weekend. As we shared that sunrise and each other, I felt the same way.\n\nThe rest of Saturday was spent in a much more fevered pace. Having sated her heart, Erin turned the rest of the day into one continuous fuck fest. We ate breakfast and then she hopped up on the counter so I could eat her. She returned the favor but instead of letting cum in her mouth, she took me to Kathryn's room. Evidently, Kathryn had enjoyed a rather vigorous romp with her boyfriend four years ago ... in Erin's bed. Erin got home before they had a chance to clean up, so Erin thought a little payback was in order. We didn't leave her daughters bed until I fucked her twice, filling her pussy with my seed both times. It took an hour, but it was worth the effort. Kathryn's sheets were thrashed. Erin left a little note that read \"Now we're even, love mom\" on her pillow and then shut the door behind her.\n\nWe napped for a few hours and then Erin woke me up so I could go downstairs to watch part of the NCAA Men's Championship game. Of course, it wasn't as simple as that. She spent the entire first half working me into a complete frenzy. She sat on the opposite end of the couch. Her left leg was up on the couch while her right leg was on the floor, which gave me a clear view of her pussy. I had already cum three times so I thought I would be able to resist temptation. Erin had other plans. As the game started, she introduced a slender dildo to the equation. While the game was on, she sat there fucking herself silly with it. Whenever a commercial came on, her mouth was on my cock. The commercials would end and she was back to pleasuring herself with the dildo. This continued back and forth. Erin came quite a few times, but she deliberately kept me from cumming. With two minutes remaining in the first half, she tipped the scales entirely in her favor. My professor, a woman with two doctorate degrees, lay back just a little bit further and slid that dildo into her ass. For the next 120 seconds, the only thing I was conscious of was that slender red toy moving in and out of her nether hole. When the half was over, she stood up. With the toy still in her ass, she told me that she was going for a shower and if I cared to join her that \"I could pull the dildo out and replace it with my cock.\" Let's see: finish the game or fuck the \"goddess that is my 41 year-old professor\" in the ass. We were in that shower until the hot water ran out.\n\nAfter another much-needed nap, Erin prepared steaks for an early dinner and herself for dessert. My professor demanded that I give her an hour of pleasure with my tongue. Who was I to argue with my teacher? Being an overachiever, she got 90 minutes. My tongue was numb and my neck was sore, but my goddess deserved no less. We ended the day in her Jacuzzi. She gave me one of her stroking-and-sucking blowjobs, but didn't stop when I was done cumming. She kept me hard and then bent over. With all the orgasms the day had seen, I spent almost an hour working her through three hard orgasms of her own before my balls emptied what little remained in them into her pussy. We were in bed just before 10PM that night.\n\nOn Sunday, I woke with my goddess still in my arms. Minutes later, she was straddling me. For the next hour, Erin made love to me. I could see it in her eyes and I know she could see it in mine. Neither of us wanted it to end. She drained me two more times of my seed and joined me in that final cum with one of her body wracking orgasms. I carried her to the shower, where we washed one another. In silence, we slowly clean one another. We toweled each other dry and then dressed one another. It was both loving and torturing all at the same time. It was during breakfast that she finally spoke to me for the first time that morning.\n\n\"I wish,\" she started. \"I wish I could put into words how much the past few days have meant to me.\"\n\n\"You don't have to Erin. I could see it in your eyes. I just hope you could see the same in mine.\"\n\nShe practical jumped across the table to kiss me deeply before she curled up into my lap and continued.\n\n\"In three days, you have shown me more affection than I have known in the past ten years. I needed that, to feel adored and loved. But I also needed the other part; the pure carnal fucking. It was primal. It was lustful. Moreover, I needed that almost as much as the romance. I needed the acknowledgement that an attractive and virile man was in interested in me just as a woman. When I wanted to lead, you followed. When I needed to follow, you led. I have laughed and cried. You have stroked every corner of my being Justin: my body, my heart, my mind, my soul. You've made me feel more alive than I have in so long, and I've needed that so much. I still need all of that. I know I have to let go, but every part of me doesn't want to.\"\n\nHer eyes were filling with tears.\n\n\"I wanted to say ... thank you ...\"\n\nTears were flowing down her face now.\n\n\"I just wanted ... to thank you ... and ... to say ... to say that I ... that I ...\"\n\n\"I love you too Erin.\"\n\nShe wrapped her arms around me, burying her face into my shoulder.\n\n\"I do. I love you. I really do love you. Oh God, this is crazy. I mean we're over 20 years ap...\"\n\nI kissed her and cut her off. Time seemed to stop as we held each other.\n\nThen she pulled back quickly. Although they were still swollen from crying, her blue eyes were now lit up brightly. She asked me to clean the table as she raced upstairs to check something. She came back down ten minutes later. She had a smile that was bright as the sun.\n\n\"I have a way to make it work,\" she said. \"For us to continue to see one another.\"\n\nMy heart started pounding at the thought of being able to continue with Erin.\n\n\"What is it?\"\n\nShe just looked up into my eyes.\n\n\"I am ninety percent certain about this, but I won't know for sure until I can inquire about it tomorrow.\"\n\n\"Come on, tell me. You have me sitting on the edge of my seat ...\"\n\n\"No,\" she said. \"It will work better if you don't know until it happens.\"\n\nNow I was beside myself with curiosity.\n\n\"Are you kidding me Erin? You can't say something like that and then leave me hanging. That's just ....\"\n\n\"Mr. Rhodes,\" she said with that professor voice. \"In 41 years, I have never been guilty of leaving some one ... hanging.\"\n\nErin opened her blouse and unsnapped her bra.\n\n\"So I can assure young man, I am not about to start now.\"\n\nShe lifted her skirt and seconds later, her panties were around her ankles.\n\n\"So here's what we are going to do.\"\n\nShe loosened my jeans and then started pushing them and my underwear down my legs.\n\n\"I am going to suck your 19 year-old cock to one last erection.\"\n\nErin's hand was quickly stroking my rapidly swelling cock.\n\n\"When I am satisfied it is good and hard, I am going to bend over the arm of this couch and you will fuck me like you own me.\"\n\nMy cock was hard as steel at this point. She leaned up and put her mouth at my ear.\n\n\"Because you do own me Justin,\" she whispered. \"You own me completely.\"\n\nNot five seconds after that my goddess was on her knees with my shaft in her mouth. For the next minute, she sucked my cock as if her life depending on it. Soon after that, she was bent over the couch and I was fucking her as if I owned her. With everything we had done, it should have taken me far longer to cum than it did. It only took five minutes and my goddess was having one body wrecking orgasm after another the entire time. Erin was wailing loudly when I came with a roar. Not a minute after that, the doorbell rang. We both dressed quickly and Erin opened the door as I was buttoning my jeans. Sarah walked through door and she was grinning. Obviously, she heard. Erin, for her part, absolutely glowed as she and Sarah discussed postponing lunch. She leaned and whispered something in Sarah's ear that made Sarah look at her incredulously. Erin just nodded. \n\n\"Okay stud, time to go,\" Sarah said giggling.\n\nErin just walked over to me and kissed me deeply. Nothing needed to be said. Sarah and I walked to my car. As we drove away, I watched Erin in the rearview mirror until I couldn't see her anymore. We were almost at Sarah's apartment, when she broke the silence.\n\n\"By the way,\" Sarah said. \"Mission accomplished.\"\n\n\"What?\" I asked.\n\n\"You do remember your mission don't you?\"\n\nI just smiled as I pulled up to her apartment.\n\nSarah turned to look at me and said, \"Erin told me, and I quote, 'I've never felt so thoroughly fucked and thoroughly loved at the same time in all my life.'\"\n\nThen she just patted me on the head and smiled at me as if I was a child who just got great grades.\n\n\"Now get home before your mom sends a search party. She's called me twice this morning.\"\n\nShe got out of the car and closed the door. I was just putting the car into first gear when she leaned down and looked at me through the passenger side window.\n\n\"But you sooo owe me details later this week,\" she added before turning and walking away.\n\nI spent 30 minutes driving home and the only thing I could think about was what Erin was planning to do. "
    ],
    "authorname": "NicholasTemplar",
    "tags": [
        "college",
        "teacher",
        "professor",
        "older woman",
        "younger man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/my-education-ch-02"
}