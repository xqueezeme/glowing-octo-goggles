{
    "title": "The Conference",
    "pages": [
        "Tray tables rattled and the entire plane shook as it descended on our final approach to Las Vegas. \n\nI looked up from my book, catching expressions of shock on a handful of the first timers -- their dreams of a wild time in Vegas evaporated into visions of a shocking plane crash.\n\nMy eyes went back to my book as I smiled to myself. The desert air frequently makes for a bumpy landing and this was nothing unusual. But shortly after our wheels touched down safely.\n\nThe moment of tension past, the vibrant energy that is almost unique to a plane bound for Vegas returned. A very different feel than the hung over, weary looks you see on so many on the outbound flights. And with a little surprise, I realized I shared their excitement. \n\nEven though this was a work trip, I had committed to myself to have a little fun. This political conference had been an annual event for me for nearly a decade and it was always the same. A lot of speaking panels and a lot of making friendly small talk at receptions to make business connections. It was fine and good, and it had rewarded the bottom line of my small business for years. But it was a bit of a rat race that left you tired and bored by the second day.\n\nAs I gathered my belongings and made my way off the plane, I thought about my resolution to try to enjoy the city a little more this time. Maybe I would try my hand at a table game or even take in a show if I could find a friend to go with me.\n\nThe last year had been a difficult, but good one. My kids were finally transitioning into full-on teenagers who had lost all interest in their parents. My business had turned a corner; shifting from an incessant need to grow to a steady, stable flow of work. Even my wife and I had made some real progress in our relationship that had brought us even closer together. Life was good and I was determined to reward myself.\n\nI collected my bag from baggage claim and caught a ride to the casino where the conference was being held. Pulling up, I marveled at the thoughtful elegance of the establishment -- one of the newest in town. \n\nFor several years the conference had been held at one of the older casinos -- a focus on keeping down costs for those less able to afford it. The promotional materials for this year had emphasized the amazing deal they had been able to secure because the location wanted to promote itself to new customers. \n\nAs I got out of the car, I fully appreciated the wisdom of their strategy. Reflecting pools accented a beautiful marble entrance that led into a large lobby populated with tasteful couches and chairs. Carrying my bag, I made my way over to the line to check in. It was a considerable wait, not surprising, as it was clear this large property was hosting several conferences and events. I waited my turn and then approached the counter.\n\n\"Hi, I'm here to check in,\" I told the receptionist, handing her my credit card and ID. She smiled at me and began typing my information into her keyboard. I saw her smile fade to confusion as she continued to press buttons and read the monitor. I began to become genuinely worried when her confusion turned to annoyance and irritation. \n\n\"Is everything ok?\" I asked, fearful of her answer. \n\n\"It's just ... hold on,\" she responded, walking away from the desk to talk to a manager. They talked in hushed voices I couldn't hear over the other conversations and activity at the counter. My stomach started to sink and I wondered if this would derail my plans for the weekend. At one point, the manager turned her head to look at me and then turned back to receptionist and nodded. The girl nodded back and came back to the counter.\n\n\"Mr. Jones, I am truly sorry for the delay,\" she started, the pit in my stomach starting to grow. \"Although I can see your reservation in your system, we are now completely sold out of the rooms you requested. We've been running some promotions and as you can see we are operating near capacity.\"\n\nGreat, I thought. I wondered where I was going to find another room on such short notice and how big of a hassle it would be to schlep back and forth to the conference.\n\n\"Luckily for you, we always make good on our reservations -- even if we have to upgrade you to a better room. Part of our appeal is offering a wide range of rooms to meet our customers' discriminating tastes,\" she said with a small smile on her face. \"In fact, the reason I needed to talk to my manager is that we are sold out of all the rooms that were comparable to yours. You'll be enjoying a pretty nice stay, if I do say so myself.\"\n\nWorry dissolved into excitement. I wondered what kind of room they were checking me in to. \n\n\"Oh that's great!\" I exclaimed, perhaps a little too enthusiastically. \n\n\"Yup, I think this one definitely worked out in your favor,\" she said with a wink. \"The elevator is down that way and on your right. Don't hesitate to ask if there is anything else we can do to help you enjoy your stay.\" She handed me a key and pointed the way.\n\nI thanked her and headed in the direction she had indicated, noting that it was not the main bank of elevators to reach the rooms. Arriving, I pressed the button to call an elevator. It failed to light. I tried again and nothing happened.\n\n\"Oh you need to use your key to access these elevators,\" said another guest who had walked up behind me. \"Are you in the right place?\"\n\n\"I don't know, let's find out,\" I responded, turning to see the woman was gorgeous and in her mid thirties. \n\nI inserted my key into the slot. The door opened, and we both boarded.\n\n\"This place is pretty amazing, but there are a few things that are a little tricky,\" she added as we pressed the buttons for our respective floors. \"Is this your first time here?\"\n\nI nodded, noting that this elevator only went from the lobby to floors 30-40.\n\n\"Yeah, us too. This part of the hotel is separated from the other guests. They really came up with some nice ways to treat their VIPs,\" she continued, smiling at me. \"Are you here for a big stakes game or something?\"\n\n\"No, just a lucky guy who is here for a conference and got upgraded,\" I answered as we reached my floor. I stepped off and turned back to her. \"Thanks for the tip, I would have been waiting down there a long time.\"\n\n\"My pleasure. Hope you have a great time, lucky guy,\" she said as the doors closed. \n\nMe too, I said to myself, turning back to the deserted hallway. Unsurprisingly deserted as I saw that there were only entrances to two rooms, each on the opposing wall. Using my keycard, I let myself into the right one.\n\nI stepped inside to find a short hallway leading to the left. Unlike typical hotel carpet, this suite was outfitted with soft, deep pile in a shade of gold. I kicked off my shoes to enjoy the feel on my feet. Down the hallway I could see a chestnut coffee table with a love seat and two chairs upholstered in a dark purple, royal blue, and creamy white pattern. I proceeded down the hallway, which soon opened into a large room. Turning the corner, I found myself looking out floor-to-ceiling windows that went the length of the wall. The city and the Nevada desert lay before me as I peered down.\n\nThe center of the room was taken up by a king bed sitting on a platform that was upholstered with the same purple, blue, and white cloth. There was a bar behind the love seat with a coffee setup on at one end. The walls were adorned with black and white pictures of the performers of old Las Vegas. It was a pretty nice place.\n\nUpon entering the bathroom, I found it was larger than my own at home. There was a large, oval shaped tub set within a raised rectangular deck that was tiled in the same gray slate as the rest of the floor. A separate shower with glass walls and a rainforest nozzle stood in the corner. Here too most of one wall was a massive bank of glass windows that I imagined would be make for a stunning view once the sun went down. \n\nI whistled in appreciation, the echo rebounding off the walls.\n\n--\n\nAfter unpacking, I decided to head out to check in to the conference and get some supplies. A room like this needed a few amenities to truly enjoy it.\n\nTaking the elevator back to the lobby, I made my way to the convention section of the facility. But after seeing a massive line at the registration table, I decided to go shopping first and return when things might have slowed down.\n\nHailing a cab, I headed to a nearby megastore. Strolling the aisles, I picked out a nice bottle of vodka, grapefruit juice and club soda for mixers, a couple of limes, strawberries to snack on and a chocolate sauce to dip them in. I checked out and made my way back to my room to store the supplies.\n\nWhen I got back downstairs, the line had shortened to a small handful of folks. Joining the end of it, I pulled up the conference information in my email and realized that the check-in desk was scheduled to close in a few minutes.\n\nI stepped forward when it was my turn and was greeted by the staffer behind the desk.\n\n\"Hi, I'm Tom Jones here to check-in,\" I said warmly. I waited to see if there would be a joke about the singer of the same name, but guessing the age of the young woman helping me I realized it was very doubtful.\n\n\"Oh yes, Mr. Jones. I have you right here,\" she said, all down to business. \"Here is your pass for the three days and the updated schedule of events. \n\n\"If you want,\" she continued. \"To go with the new location we have added a new part of this year's conference -- an ice-breaker activity right here at the registration. Now earlier we broke people out based on their professional focus, but as you are the last group for today we are just going to ask everyone to form one group. Do you want to participate?\"\n\nI was thinking about getting the hell out of there. And in years past I would have. But as I paused, I looked over to the group of about a dozen people obviously waiting for the session. My eyes fell on a young Latina standing near the edge of the group taking to another woman. \n\nHer dark, straight hair hung down below her shoulders with bangs that curved around to frame her face. Her complexion was that of well-milked hot chocolate and her eyes were brown to match. The patterned dress she wore showed her slender figure, with the neckline revealing generous breasts for her frame. Light blue tights showed off long legs. She stood with one leg turned to the side and a hand on her hip as she spoke expressively to her companion. I watched, appreciating how her body language conveyed the conviction with which she spoke. \n\n\"Yes, I would be happy to,\" I replied, surprising myself as I said it. But I had committed myself to trying new things and here was a perfect opportunity.\n\n\"Great, go over there and wait with them,\" she said as she waved in the direction of the group.\n\nI made my way over and joined them, reviewing the materials I had received. I snuck a peek at the girl, but quickly dropped my eyes again when she returned my gaze. I smiled to myself, surprised that making eye contact had left my blood rushing to my ears. With a quick glance up again I saw that she also had a small smile on her face as she continued talking to her friend.\n\n\"Ok, in this session we are going to let you briefly introduce yourself to all of your fellow participants,\" said a staff member who approached the group with a clipboard. \"Now normally we would have then broken you out into smaller groups for a longer conversation based on shared interests in politics. But because you are the last group of the day, we are going to instead randomly assign each you four one-on-one conversations.\" \n\nAs she directed, we gathered in a circle and went around, each introducing ourselves in turn. I told them about my small political consulting business and learned about the various organizations, politicians, and firms they were connected to. The woman worked for a voters rights' group, and her friend for one that advocated for reproductive rights.\n\nWe were then each handed a piece of paper with four numbers on it, which it was explained matched the numbers on our passes. I proceeded to sit down for three very cordial conversations with people I'd probably never interact with again. I think I remember one was very excited about the latest in using data to better target voters.\n\nHolding up the paper as I scanned others' passes for my final conversation, I found myself face to face with the girl who was holding up a paper with my number on it. She smirked and I felt my body temperature rise a few degrees, making me worry if I was visibly blushing. \n\n\"Hi, I'm Tom,\" I said, shaking the hand she had extended to me.\n\n\"Hi, I'm Alexandra,\" she replied, her grip soft but firm. \"It's nice to meet you.\"\n\nWe spent the next ten minutes learning about each other, our backgrounds, and our interests. Alexandra had been working in politics for the past six years, first as an environmental activist and now trying to protect and expand voting rights in Southern California. \"Ultimately, I really wanted to do something that would directly impact the people in the communities I grew up in,\" was how she explained it.\n\n\"That makes sense. Believe it or not, that is one of the things that I think really makes my job worthwhile -- helping people improve their lives,\" I replied.\n\n\"Oh really. Isn't that the same line the capitalists in the oil and chemical companies use?\" she challenged back.\n\n\"Well, I try to stay away from the purely evil clients. I like to think the corporate paychecks help me cut my rates when working for non-profits,\" I countered, ready to tread this familiar back and forth I'd had with activists countless times. But then I noticed that same smirk again forming at the corners of her mouth.\n\n\"Oh, I'm just giving you shit,\" she said, breaking out into a light laugh. \"It's always pretty funny to see the privileged white guys put on the defensive.\"\n\n\"And to be fair, we do need to be called out on our shit pretty frequently,\" I chuckled, and as we both broke into laughter. My heart raced a bit faster as she brought her hand up to rest briefly on my arm.\n\nWe continued talking as I told her about my progression from activist to staffer to strategist to consultant. It's a common evolution, but she seemed interested and it quickly turned into a lively conversation about what it meant to stay true to yourself while working in politics.\n\nAs our discussion turned to our values and why we did what we did for living, the physical distance between us shrunk. Twice again she placed her hand on my arm, at one point leaning in close and dropping her voice to a nearly a whisper as she told me about the egotistical, asshole men that too often become leaders in the environmental movement. \n\nSadly our time was up too soon. Her friend, having wrapped up her own conversation, joined us. Alexandra introduced her as Tova and I learned she worked in the San Francisco Bay area. They were sharing a hotel room for the conference.\n\nWhere Alexandra was tall, Tova was short -- not much over 5 feet I estimated. She had green eyes and pale skin, with her curly hair forming tight ringlets that came down to below her chin. A slight girl with peach-sized breasts, her hips flared to show a gorgeous rump that you hoped you would be lucky enough to have rubbed against you.\n\nI quickly realized that our time together was about to come to an end and struggled to seize the moment.\n\n\"So, what are you doing later?\" I asked, trying to find an excuse to see them again.\n\n\"Oh probably this opening reception,\" Tova replied. \"I hear they have some free food and it going to be outside.\"\n\n\"That sounds fun,\" I said, and then remembered that I had already scheduled a dinner during that time. It was something I had committed to a long ago-- a bunch of guys I had worked with at an advertising agency with years ago. Each year we got back together to swap war stories and remember the good old days. My mind scrambled. \"But I actually have a dinner at that time. Any interest in meeting up after that?\"\n\nI saw them exchange looks, Tova searching Alexandra's face to see if this a welcome offer or not.\n\n\"Sounds good,\" Alexandra said, dissolving my nervousness. \"Here, let me send a text to my number so we can find each other later.\" I willingly handed over my phone. She sent a message and after checking it on hers, returned mine. She came in close for a hug and I was intoxicated by the faint scent of cinnamon.\n\nTova gave me a final once over with her eyes, and seeming to accept the idea, said \"See you later.\"\n\nI nodded to both of them and went back to my room to prepare for dinner.\n\n----\n\nIt was a lively affair, six guys in a restaurant at another casino on the strip. We sat at a big table, drank, laughed a lot, and ate a fantastic meal. \n\nWe had all met as junior staffers who had been part of a crazy election year where the firm took on way too much work. We worked incredible hours, sometimes crashing on a couple of cots in the break room. And that caffeine-fueled, sleep-deprived environment made for tons of jokes and pranks and other bonding experiences as we turned out materials, mailers, and commercials for our clients. We also had a crazy boss who acted like he was in an abusive relationship with us, alternating almost hourly between screaming and threatening violence and then trying to win us back with promises of massive bonuses and big opportunities after the election.\n\nAt the end of the election cycle, most of us moved on after the boss's promises evaporated. But we stayed in touch over the years as we made our way in politics, even occasionally finding ways to work together. This conference had been the annual opportunity for us all to meet up.\n\nIt was a great dinner, but my friend Mark seemed a little quiet and reserved throughout the meal. As we bid our farewells and promised to talk more at the conference tomorrow, I took the opportunity to walk Mark out of the casino and suggested we share a cab back to the conference hotel.\n\n\"It seems like something's wrong,\" I told him as the driver pulled out into traffic. \"How are you doing?\"\n\n\"Not great, Tom,\" he said after a brief pause. \"I just feel like I'm losing all connection to my wife. We don't talk. We don't have sex. Normally, I look forward to these trips as a chance to get away. Now I'm worried what she's actually doing when I'm gone.\"\n\n\"I know how that can feel,\" I told him. \"Really, I do.\"\n\n\"Seriously?\" He looked me in the eye, probing me to see what I meant. \n\n\"Yes, and I can tell you that for me what made all the difference was being honest with my wife. Really and truly honest,\" I said putting my hand on his shoulder.\n\nHe turned to the window and I could tell he was giving it some serious thought.\n\nWe finished the cab ride is silence. After we exited, he turned to me and said, \"Maybe you're right. Thanks for the advice.\"\n\nWe gave each other a hug goodbye and parted ways.\n\nI looked down at my phone. It was well past the time the reception had ended. I hoped I had not missed my chance to hang out with the girls. I texted Alexandra.\n\n\"Finally done. What are you up to?\"\n\n\"Hanging out at a bar w friends. U should join.\"\n\n\"Perfect. Where are you?\"\n\nShe replied with one of the lounges off the main floor of the casino and I made my way there. I found them seated at a table in the back. I noticed that like me the girls had changed into eveningwear, with both adorned in attractive blouses and slacks.\n\nIt was a larger table with a booth bench on one side and a couple of chairs on the other side. Alexandra and Tova were seated on the bench, with a young man and woman sitting in the seats. Alexandra patted the bench next to her and I sat down.\n\nThey introduced the man and woman, Jeremy and Kim, as friends they had known from their days in the environmental movement. The two were now a couple that lived in the Chicago area and worked in local politics. ",
        "I ordered a drink and settled into the conversation. It was mostly about current events and I tried to inject a little humor where I could, not an easy task for a group of progressives bemoaning the state of the world. I managed to get a few good laughs out of everyone -- particularly when I regaled them with a couple of tales of my idealistic youth. Tova was my toughest audience and I caught her studying me carefully a few times.\n\nI noticed Jeremy and Kim were a couple that liked to touch each other a lot. They regularly put a hand or arm on the other one when referencing each other, exchanged handful of kisses, and held hands a lot of the time. I could sense Alexandra responding to their public displays of affection as she scooted a little closer to me. Soon our legs were touching. A few times I rubbed mine against hers and she responded in kind rather than moving away. \n\nJeremy checked the time and announced it was time for them to go to bed, though the way he said it made me think sleep was not his first order of business. We said our goodbyes and it was just the girls with me at the table.\n\nThe server came and asked if we wanted another round. I deferred to the women. They ordered again and so I did as well.\n\nInitially our conversation returned to what I had talked with Alexandra about earlier in the day -- idealism versus realism, passion versus pragmatism. I tried to hold up my end of the discussion, but now that it was two against one I was soon on the defensive. \n\n\"All right, alright, I agree sometimes you get so caught up in trying to win the day that you lose sight of what really matters,\" I admitted at one point, holding up my hands in a peace offering.\n\n\"That's ok. We can tell you're one of the good ones,\" Alexandra said cheerily, grabbing my hand in hers and holding it for a bit too long.\n\nSuddenly, Tova got up from the bench and took the seat immediately across from me. Her face showed serious determination and I waited for the question that had been looming all evening.\n\n\"So, what's up with you flirting with my girl here without even bothering to take off your wedding ring? Are you that much of a dog that you don't even try to hide it?\" she said in a voice that was low and direct. Alexandra let go of my hand and I felt her body move away from me just a little as she waited for me to answer.\n\n\"No, I'm not trying to hide anything,\" I replied calmly. \"I love my wife very much and I'm sure she'd have no problem with what we're doing here.\"\n\n\"So what are we 'doing here'?\" Tova pushed on, using air quotes to drive home her skepticism. \"Don't you have friends your own age to hang out with?\"\n\n\"Not really,\" I admitted candidly. \"I know people here like the guys I had dinner with and we can have a great time hanging out, but I wouldn't consider them close friends. This is a tough business and too often you are pitted against your friends. It takes a toll.\"\n\nTova stared at me like she didn't believe any of it. At least Alexandra didn't move any farther away from me.\n\n\"The truth is that I came to this conference looking to do something a little different -- to try to have fun and find people to have fun with,\" I continued. \"I really liked you both from the beginning and I'm glad we can spend some time together tonight. And I'm sure whatever we get up to, my wife will be fine with it.\"\n\n\"Bullshit,\" Tova said, her face growing angrier by the second. \"I don't believe for a second that your wife is fine with you making passes at young women.\"\n\n\"Well, we kind of figured that, which is why she agreed to record a video,\" I said, trying not to crack a smile as I finished. It did seem pretty fantastical. \"A little over a year ago, my wife and I had a weekend by ourselves and it did not go well. We had nothing to talk about, other than arguing over what we were going to do or what we were going to watch. I guess we could have let it escalate into a big fight, but instead we got up the last morning and agreed to really talk to each other.\n\n\"It turned out that she was pretty lonely. I had been engrossed in my job, and even when I was home my mind wasn't there,\" I explained. \"And for me, I think home life had become just another list of tasks to get done. We didn't connect -- both when we talked and in the bedroom. She admitted that her interest in sex had gone down and that she knew I was frustrated by that but didn't know what to do about it.\n\n\"Rather than separating, we agreed to make some changes. We committed to making more time for each other and I agreed that when we were together, we would really be together -- no distractions or obligations to compete with the family. And she agreed that if the one or two times a month she wanted to have sex wasn't enough, I could find other ways to scratch that itch -- with a few conditions. Which is why she recorded this.\"\n\nI proceeded to pull up the video from the carefully hidden folder on my phone. My wife's half smiling face filled the screen and I turned it so they could both see it.\n\n\"Hi, this is Tom's wife, Mary. If you are watching this I can imagine you have a few questions, so let me try to answer them,\" she said in a friendly voice into the camera. \"First, I am fine with whatever y'all choose to do together -- just be careful. Second, I don't want to know about it and don't want to know you, no offense. And finally, take good care of Tom. At heart he is really a good guy and I'd like him back in one piece if you don't mind.\"\n\nThe video ended as I saw thoughts whirring through Tova and Alexandra's mind as they processed it all.\n\n\"Wait, so do you two still have sex?\" Tova probed, apparently happy to delve into all the personal details. \n\n\"Absolutely, and when we do it's fantastic. Some of the best sex of my life,\" I assured her. \"But a big part of that is we only do it when she wants it and I find other opportunities to fulfill my own needs.\"\n\n\"So, is this like you finding your yearly conference hook up?\" Alexandra asked. I could sense a little hurt behind the question as she wondered if there was a real attraction here.\n\n\"To be honest, this is something new for us. And this is my first conference since we made the agreement,\" I explained. \"I didn't come here with a plan, but I did know that I had some new found freedom if I ran into a beautiful girl like yourself.\"\n\nIt was the first time I'd shown explicit romantic interest in her and I could tell Alexandra liked it by the way she looked down and tried to cover the smile on her face.\n\n\"What I would suggest is that we just go back to enjoying the evening and let things figure themselves out. Sound good?\" I asked, looking at them each in turn. Alexandra quickly nodded, and after a pause, Tova did as well -- looking me carefully in the eye as she did.\n\n\"Great, then let's see what else we can find to do in this place. I hear there is an amazing view of the strip at night from the terrace outside the conference space,\" I suggested, applying some online research I had done on the property.\n\nI paid the tab and we made our way back through the massive space. We managed to get a little lost at one point, following a long bank of slot machines until we realized we were headed for a parking lot. \n\nWe had a great time, despite the misstep, as we marveled at the bedazzled and bedraggled people that make up today's Vegas clientele. The three of us swapped jokes and quiet exclamations as we checked out the extremes of humanity that inhabit a casino at night. I learned that though Alexandra had a piercing wry wit, Tova would drop raunchy, hilarious comments under her breath so often that we were all in tears before we reached the elevator up to the conference area.\n\nThe place was deserted at this time of day other than some cleaning staff. We found the terrace deserted and the view everything that the reviews had promised. You could see nearly a dozen of the major casinos laid out before us, lit up like the daytime with the light of countless bulbs. I felt Alexandra find my hand with hers and hold it as we stared out at the brilliant sights under the night sky.\n\nThe desert is chilly after dark and Tova visibly shivered in the cold, dry air. I offered her an arm and wrapped it around her, rubbing her shoulder and arm to warm her up. Alexandra quickly followed suit. I let them both snuggle in close as we looked out at the night, saying nothing.\n\nAfter a minute or two, I felt Alexandra's free arm move against me and come up to touch my chin and turn my face towards her. She met it with a soft kiss on my lips, my eyes closing to savor the moment. It was electric.\n\nThe kiss continued, but I felt Tova suddenly stiffen against me. For a second I thought it was discomfort at the public display of affection, but then I remembered how she stared a little too much when Jeremy and Kim were touching. She wasn't uncomfortable; this was a touch of jealousy.\n\nMy mind made a quick calculus and decided to risk everything to try for a truly memorable experience. I broke the kiss with Alexandra, and turning to Tova, brought my free hand up to guide her face to mine. \n\nWhen our lips connected I could tell she was still trying process what was happening. But a split second later her desire kicked in as she returned my kiss and melted against my body. Alexandra stiffened against me, but as I continued to rub her shoulder I felt the tension pass as she brought her head down to rest on my shoulder.\n\nMy kiss with Tova ended and we went back to watching the lights, no words really needing to be spoken.\n\nAfter a couple of minutes had passed, Tova jumped out in front of us, and turning exclaimed, \"Hey, I know what we need to do. This place has a foam dance club upstairs. Please, please, please can we go check it out?\"\n\nI didn't know what to think, but this enthusiastic, playful side of Tova was one I had not seen yet and I wanted to do whatever I could to encourage it. I turned to Alexandra with a 'why not?' expression on my face and she nodded her assent. \n\nWe made our way back inside the building and found our way up to the club, which was packed with young people. Electronic dance music blared, multicolored lights flashed, and foam cascaded down on the dance floor from cannons above. I wondered what I was doing here and then dived in.\n\nWith so many folks on the dance floor, we needed to stay close together to prevent getting separated. We danced in a tight knot, mostly as a triangle but occasionally I would pair off with one or the other. Each was a great dancer in their own way and I did the best I could to keep up. It was hard to tell when one song ended and the next began as we dissolved into a gyration of sweaty bodies. \n\nIt didn't take long before a tight knot became a conjoined trio with each of the girls rubbing and grinding against me. One nice thing about the foam was that it made for great lubrication as the girls slid their sticky, soapy bodies up and down mine. \n\nIn time we stopped to grab some waters and rehydrate at a small cocktail table by the bar. \n\n\"Whew, this was great,\" Alexandra shouted over the music. \"I hate to call it a night, but I know we will both need to shower when we get to our room We have a busy day at the conference tomorrow. But we should do this again.\"\n\n\"Yeah, that'd be great,\" I yelled back, my mind churning for a way to test if this really was the end of the evening. \"Of course, you could use my bath to save time -- plenty of room for two. You really should check out the room I was upgraded to, I had no idea a hotel room could be so nice.\"\n\nAlexandra's face showed she appreciated the suggestion, but saw it for it was. Tova's said the same, but also that she didn't really care.\n\n\"I think that is great idea. Don't you think?\" Tova said, turning to Alexandra and grabbing her hand. \n\nThey exchanged a look and Alexandra's expression changed as she chimed in, \"Sure. If this room is so incredible, I'm going to have to find out why we weren't the ones upgraded.\"\n\n\"White male privilege strikes again,\" I said gravely and we shared a laugh as we made our way to the exit.\n\nWe cruised back through the complex until we found my private elevator and it whisked us up to my room. I used my key card and ushered them in.\n\n\"Wow, you weren't kidding,\" Alexandra exclaimed as they checked out the opulent digs. Tova wandered over to run her hands over the upholstery, while Alexandra moved to the check out the view from the windows.\n\n\"Yeah, I was pretty blown away myself when I first arrived. Some folks really like to live it up when they are here, I guess,\" I noted, heading to the bar. \"Can I fix you both another drink?\"\n\nThey nodded as they continued to explore the room. I made vodka and sodas with a lime. Soon Tova ducked her head in the bathroom and returned to declare, \"That tub is bigger than the entire bathroom in my apartment!\" \n\nI finished the drinks and brought them over to the two women. I slipped into the bathroom and began filling the tub.\n\n\"There are some robes in here if you want to change out of those wet clothes,\" I offered. They joined me in the bathroom, each migrating to where four plush terry cloth robes hung neatly on hooks on the wall. I exited back to the main room so they could change in privacy. \n\nThey closed the door, so I could only hear the muted sounds of them talking. But I did hear a little giggling, which I took as a sign that I wasn't being too forward. I grabbed my own vodka and soda. I sat on the love seat, took off my shoes and socks, and nursed my drink as I waited for them to return.\n\nIt didn't take long. They both entered wearing just the robes and reflecting the giddiness I had heard through the door. I noticed a small ringlet of flowers tattooed on Alexandra's ankle and wondered what other tattoos the robe was covering up. The neckline of Tova's robe broke in a way that I could see the top of a lacy pattern tattooed across her chest that was mostly hidden by the cloth. \n\nThey each took a seat as we sipped our drinks. A silence settled on us, only broken by the sound of the tub filling in the other room. I realized it was my job to maintain the mood before one of them got cold feet about what was happening.\n\n\"I hope I wasn't too forward in sharing that video,\" I declared, deciding that leaning into the subject was probably the best approach.\n\n\"I didn't mind. I put you on the spot,\" said Tova. \n\n\"Yeah, it's actually kind of sexy, shows you actually care about your partner,\" added Alexandra, her reluctance from the club apparently dissipating.\n\n\"So, how much does you take advantage of this arrangement?\" Tova queried, direct as always.\n\n\"To be honest, not that much. I tried out the dating thing a bit at first, but I think I had forgotten how hard it is to be single,\" I told them. \"What's happened is there are a handful of single women in my professional life back home who I've come to an agreement with to discretely scratch our mutual itches from time to time. Not a lot, just every now and then.\"\n\nTova rose from her seat, and sat down next to me on the love seat -- her luscious rump pressed against my side. \n\n\"Sounds like this weekend is chance to catch up on lost opportunities,\" she said softly to me. She lifted her hand and turned my face down towards hers. My eyes closed as she placed her lips on mine and we began to kiss softly. Our tongues came out, slowly exploring the taste and feel of a new lover.\n\nWe separated, and both turned to check Alexandra's reaction. It was hard to read, but I didn't see any anger or discomfort. I raised my hand towards her, encouraging her to join us. She sighed ever so slightly, got up from her own seat and perched herself on the arm of the loveseat. She leaned down and embraced me in a passionate kiss of her own.\n\nTova didn't wait for us to finish, using her hands to begin touching my leg and chest through my clothes. I continued to make out with Alexandra, one hand coming up to lightly grip her leg through the robe and the other sliding down to begin exploring where the robe had parted to reveal Tova's lower thighs. \n\nI switched back to kissing Tova and felt Alexandra beginning working to undo the buttons on my shirt. Tova's hands moved to undo my belt, and then the top of my pants. \n\nAlexandra succeeded in releasing the last of the buttons, slid her hands up my bare chest and redirected my face to resume kissing her. Tova used the opportunity to pull my zipper down and began fishing in my underwear for my increasingly hard cock. She quickly located it, pulling it out for both of them to study.\n\n\"Not bad Tom, I think we can get some use out of this thing tonight,\" Tova said, beginning to slowly jack me off.\n\n\"Let's see if that bath is ready,\" Alexandra added, leaning back to better eye the prick peeking out from my pants. She smiled, and lifted herself off the arm of the loveseat. Pausing with her back to us, she undid the tie and let her robe drop to the floor.\n\nHer naked body was breathtaking. Thin, toned legs led up to sculpted buttocks that sat up perkily, almost begging to be spanked. The left buttock was punctuated by tattoo of a red rose and I saw that she also had two sugar skull tattoos that were normally carefully hidden on her side below her armpit. She looked back at us over her shoulder and sashayed into the bathroom, her bottom wiggling in time with each step. \n\nTova and I rose to follow her. I shrugged off the shirt and she helped guide me out of my pants and underwear, my cock springing free. Tova placed her hand on it and used it to gently pull me to the bathroom.\n\nWhen we entered, I saw that Alexandra had already descended into the water. It came up to below her breasts as she sat on the bench that ran along the interior of one side of the tub. They were the size of small melons with stiff nipples standing straight out from her. The sight made my prick twitch in Tova's hand.\n\nTova and I took the steps up to the deck so we could lower ourselves in easily. She faced me, looking me straight in the eye as she dropped the robe from her body. I was surprised at the curves and contours compacted into such a small body. Thin legs transitioned into tight thighs that complemented her bubble butt. A narrow waist transitioned to a pair of high-set breasts with large, pink areolas and bright red nipples the size of thimbles. Across her chest and down into the cleft between her breasts I could see the full lace tattoo that included two red roses. \n\nShe smiled at me, and slid down into the tub -- taking a spot on the opposite side of the bench. I dropped down between them, feeling the hot water rush over my skin.\n\nThey each slid closer, our naked bodies rubbing against each other. I lifted up my arms, bringing them down on their shoulders like when we watched the lights from the terrace. This time I was more shameless, stroking their hair, ears, face and neck, before moving down to their chests and breasts.\n\nWe kissed intermittently, though with more intensity and passion. I felt both them bring a hand around my dick. They each sought to work it under the water before Alexandra shifted to focus on the head and shaft, while Tova played with my balls. \n\n\"Yeah, you like getting played with, don't you?\" Tova said dirtily, breaking up the growing sighs and groans as our excitement grew.\n\n\"Oh god yes,\" I grunted in reply before Alexandra attacked my mouth with her own.\n\nMy hands moved south from cupping and massaging their breasts to migrate between their legs.\n\nAlexandra initially kept hers closed, letting me gently rub and caress the small, trim patch of pubic hair that dissolved into creases of her thighs. Tova went out of her way to offer entr\u00e9e, spreading her legs as I approached to ensure easy access to her bits.\n\nThe girls continued to stroke and fondle me as we traded kisses. I began working Tova's lips around her clit -- offering soft touches that gradually increased in intensity. Meanwhile my other hand continued its migration up and down the inside of Alexandra's thighs and her Mons. Her resistance came down as she opened her legs to let me stroke between her thighs and up to her swelling labia.",
        "Soon we were all panting as we drove each other towards climax. My hand drifted lower on Tova, working the sensitive skin around her vagina with a couple fingers as I continue rubbing and tugging the skin protecting her hardening clit with my thumb. She responded approvingly, particularly as my pinkie repeatedly grazed the flesh leading to her rear rosebud. Tova even folded up one leg and brought her knee up to her face to expose herself more fully to my ministrations. Soon my pinkie was gently working the rim of her asshole as I rolled her engorged clit back and forth between my thumb and forefinger. \n\nTova gave a deep groan and closed her eyes shut tight. She quickly opened them and formed her mouth into an open O as the orgasm swept across her body. It lasted several seconds as both Alexandra and I observed with keen interest.\n\nWhen she came down, Tova laid her head back against the lip of the tub and slid down further trying to recover. Alexandra and I continued kissing and fondling each other, but she broke away and said quite seriously, \"I don't think I'm going to be able to come this way.\"\n\n\"Well that's good because I've been looking forward for hours to eating your pussy,\" I replied, hoping out of the tub. I collected a few towels off the rack and put them down on the deck next to the tub so that Alexandra had something comfortable to lie on. \n\n\"Lay down here with your feet resting on the edge of the tub,\" I instructed her. She did so, lying on her back with her knees up and feet braced on the tub. I knelt on the bench and slid the top half of my torso up onto the platform so that I was properly positioned between her legs. \n\nBefore commencing, I marveled at the beauty before me. Her skin was bare of hair below the Mons and her pussy lips stood out from her body, a captivating umber color that begged to be sucked. \n\nI got to work, using my tongue to carefully caress the outer labia and folds around her honey pot. I left the clit and inner lips alone, increasing her desire and anticipation as she waited for me to touch those most sensitive spots.\n\nI continued my work, hearing her exclamations grow as I sought out the pleasure points around her pussy. She gasped loudly as my tongue and lips began working directly on the lips surrounded her swollen clit. And I myself gasped as Tova began rubbing and fondling my exposed ass.\n\nI redoubled my efforts, beginning to work my tongue down to directly stimulate the exposed clit and dip inside to work under the hood. Tova also pushed things further, bringing her fingers closer and closer to my crack with each pass.\n\nTo show I didn't object to the treatment, I shifted my knees slightly to expose myself to her further. Tova cued in immediately, moving her fingers to begin directly circling and stroking the folds at my back entrance.\n\n\"Yes, this feels so fucking good. Oh yeah, my clit, oh god, my clit,\" Alexandra moaned a steady stream of encouragement as I felt her thighs and pelvis began to tremble in anticipation of the coming release.\n\nThe fingers working me suddenly changed to warm, wet licks and kisses as Tova switched to her mouth. I felt a tremble go through me as she brought her tongue firmly to my anus and tried to open it up.\n\nBefore it could go further, Alexandra's orgasm came in full force. Her thighs tightened around my head as I continued working her. The sounds of her cries became muffled. After several more convulsions, she relaxed her legs and gently pushed my face away. She lifted her head slightly off the platform to look me lustily in the eye and say, \"I need that cock in me. Right now.\"\n\nWe quickly toweled off as we migrated back to the platform bed in the main room. I looked at the lights out the window again as I climbed up onto the bed with the two beautiful women. Alexandra pushed me down on to the bed so I was lying on my back. Without comment or fanfare, she climbed on top and slid down onto my cock as she positioned it with one of her hands. I gasped as she encased my prick in her satin pussy. She brought her hands up to my chest and bending forward looked me carefully in the eye and said, \"Now remember, you absolutely cannot come in me, got it?\"\n\nI nodded and she began to rise and fall, working my dick inside her. I shuddered in ecstasy and lay back, looking at the ceiling.\n\nTova appeared above me, shuffling over on her knees. \"Don't worry, you can come in me as many times as you like, it's safe,\" she reassured me. And then shuffled to bring her pussy down on my mouth, saying, \"Now show me how you made her scream like that.\"\n\nMy world shrunk to the space adjacent to Tova's snatch as I began working her undercarriage with my tongue and lips. Having already come once, she responded well to rougher treatment as I sucked her labial lips into my mouth and gently tugged on them with my teeth. \n\nThe room was filled with the sound of Alexandra's skin slapping into me as she worked me over and the shared crises of both of them as sought their second orgasm. The experience was incredibly hot and I found myself involuntarily thrusting up into Alexandra, even as I resisted the urge to avoid accidently coming inside her. We pushed on, past the point of seduction and new connections, now wantonly using each other to reach new plateaus of pleasure.\n\nTova broke first, my tongue furiously circling directly around her rock hard button. \"Oh shit, that is fucking incred -- aaaaaaaaah,\" she declared before sinking into a scream that eventually shrunk to a low moan. She lifted off me and flopped down on her side.\n\nMy vision now clear, I was drawn to the deep arousal electrifying Alexandra's gaze. Her hips continued to work at a feverish pace and she grabbed my arms firmly to help give herself more leverage. \n\n\"Fuck me. Fuck me. Fuck me,\" she began to repeat over and over in a quiet voice. In time, Alexandra gave an excited squeal right as I felt a fresh wave of wetness around my prick. She rode me through her orgasm and then collapsed down my chest. After a second or two, she collected herself and climbed off saying, \"Ok T, your turn on this ride.\" \n\nTova didn't need a second invitation and taking a seat on me, lined up our parts and shoved me in. Her pussy muscles gripped me tightly as she adjusted positions slightly.\n\nWhile Alexandra focused on the feeling of me sliding in and out of her, Tova sought a much fuller range of sensation. She brought herself down to lie on me, and as we made out, she took my cock in circles around and around inside her. She lifted up again, this time leaning back to the limits of what our physiology allowed. Bringing a hand down to where we connected, she used it alternately to wrap around my cock as I slid in and out of her and to play with own now hypersensitive clit.\n\nMy dick was stroked, tugged, ground, and twisted in all sorts of directions as I felt the onrushing wave of a climax.\n\nI continued breathing deeply, hoping to extend my final ascent. \n\nThe blood rushed in my ears. My vision shrank and then disappeared as my eyes were drawn closed with the intensity of the sensations flowing from my cock.\n\nI felt my body quake a bit and my upper body was pulled upwards as if by an invisible string tied to the ceiling. I ended up hitting my zenith, connecting with her lips in an electric kiss, just as my cock began spasming jets deep insider her. She backed off the kiss to look me in the eyes with a welcoming, satisfied smile as her hips continued to work and grind me, sucking the last drops of cum out of me.\n\nWe both flopped over on our sides, my penis sliding out of her as we shifted. We cuddled a little closer in a spoon and Alexandra came in close, draping her arm over me. \n\nMy mind floated away as we drifted off to sleep.\n\n---\n\nI was awoken to a body slowly rubbing against my backside. Opening my eyes, I saw Alexandra continuing to doze in front of me and concluded it must be Tova whose hand had snaked around to stimulate my growing cock. \n\nIt was still night outside. I turned my head slowly and made eye contact with Tova in the dim light.\n\n\"Oh good, I was beginning to wonder if I needed to be more aggressive,\" she whispered, coming in to to give me a quick kiss. \"I didn't really get my fill of this earlier and was hoping you could give me more.\"\n\nMy prick twitched in her hand and almost immediately achieved full stiffness. I heard her coo in response as she caressed my ear with her lips.\n\nShe shifted, rising up on all fours and facing away from me. She swayed her ass a few times, offering me an invitation to take it.\n\nWasting no time, I moved up to kneel behind her. Using one hand on her hip, I used the other to line up my cock and slide it in.\n\nOur earlier exploits had left her lubricated and after two strokes I was buried in her to the root. Applying my hands to the top of her hips, I began slowly sliding in and out of her warm pussy. \n\nTova put her head down to the mattress and thrust herself back into me, starting to softy softly sigh and moan.\n\nI began to speed up my stroke. Grabbing her hips more firmly, I began pulling her back into me, helping her keep up with the accelerating rhythm. My balls swung back and forth, bouncing against her lips and clit.\n\nI worked her hard, knowing I had already come once that night. My hands migrated up her body to firmly grasp her breasts. She grunted in pleasure. \n\nI felt the bed shift behind us, and shortly Alexandra's face appeared over my right shoulder. She studied where I was disappearing into Tova with great interest.\n\n\"That looks fun,\" Alexandra said. She turned my face towards hers and our lips met in a smoldering kiss. \n\nI brought my hands down to Tova's butt cheeks as Alexandra and I began exploring each other with our tongues. My hands clasped down, massaging the delectable booty. Slowly they crept closer to Tova's crack as I continued to saw in and out of her.\n\nAlexandra's hands came over my shoulders and her hands began stroking my chest and nipples. She brought her mouth down to begin planting light kisses on my ear, neck, and shoulder.\n\nMy hands closed the final distance as I began to brush them against the sides of Tova's asshole. She shuddered and pushed herself harder back onto my dick. I shifted one hand to bring it around under her and touch where I continued to slide my swollen staff into her juicy pussy. Collecting some moisture on my fingertips, I returned them to her crinkled anus and began using the lube to massage around her rear passage.\n\n\"Oooh, you're nasty,\" Alexandra whispered in my ear as she again leaned over my shoulder and peeked down at what was happening below.\n\n\"Can I play with your ass?\" I asked almost as an afterthought, continuing to play with Tova's rubbery ring. I let the tip of one finger slide inside her to punctuate the question.\n\n\"Yesssss,\" Tova hissed, arching her back in response to the additional penetration.\n\nTova's cunt was now practically sopping, letting us fall into a steady, noisy rhythm as I continue to plow her with firm thrusts. Using her elbows, she matched my pace, pushing back into me with each stroke. My hands continued worked her asshole, stretching it and loosening it until a finger slid easily into the second knuckle. She shuddered again, as an orgasm broke across her body and fine drops of sweat began to appear on her skin.\n\nWe pushed on and soon a second finger was firmly rooted inside Tova's behind as I began to use them to rub the thin membrane next to her pussy walls. Alexandra kept a close watch on all of this, though I realized that her hands had now become busy serving her own pussy as her breathing intensified and a new soft squelching filled the air. \n\n\"I've never been with a guy who took his time to make that feel good,\" Alexandra murmured in my ear, her breath becoming more labored.\n\nTova's hands gripped the sheets as she transitioned into a second climax that followed on quickly from the first. She buried her face in the mattress and howled a cry of intense release. Coming down, she slid forward off me and onto her stomach -- turning her face and shoulder to look at us with an expression of deep satisfaction and blissful arousal. \n\nAlexandra brought her hand around to begin sliding it up and down my dick that was still slick with Tova's juices. \n\n\"Would you fuck me face to face?\" Alexandra asked in a tone that suggesting she would take it any way I wanted.\n\n\"I would love to,\" I replied, turning to face her. We made out briefly, both of us now on our knees, chest to chest with my cock trapped against her belly.\n\nAlexandra lay back on the bed, spreading her legs to invite me to move on top of her. Her auburn hair strewn across the sheets in a beautiful pattern that framed her enchanting face.\n\nI paused for a moment, staring down at her exquisite breasts. Even on her back, they managed to lie nicely as two soft pillows capped by dimpled nipples that matched the umber color of her twat. I bent my face down to capture them in my mouth and suck gently on each. She pushed her chest forward, clearly savoring the sensation.\n\nBut it was also clear Alexandra was hungry for more. Her hand found my prick and guided it to the opening between her legs. Her expression implored me to come inside her, and feeling no resistance from her well-moistened labia, I pushed in. Her response was nearly immediate, as an initial gasp became a steady stream of moans and soft cries.\n\nMy face came together with Alexandra's in a kiss as my dick explored the inside of her vagina. I alternated between long, slow strokes and staying deeply embedded in her as my groin ground against her clit. Her arms came up to hug me in an embrace with her fingernails digging into me each time my pubic bone rubbed against her.\n\nTova shifted from her prone position to lie on her side next to us -- slowly fingering herself as she watched the show. Lifting myself up on my hands, I leaned my torso over to share a brief kiss with her. She shifted herself closer to us, touching our sides with her stretched out body.\n\nWe all fell into an easy rhythm, building towards Alexandra's orgasm. My head came back down to again begin smooching Alexandra and then trailed a series of kisses along her neck and shoulder until I shifted to continue them along an invisible line that ran up Tova's chest and neck to her eagerly waiting lips. I repeated this pattern back and forth, with Tova each time bringing her face closer to Alexandra's and my own. Soon I was simply swapping kisses with them, their faces just inches apart.\n\nI decided to be a little bolder and positioned my mouth so that I was kissing part of each of theirs simultaneously. They responded as I had hoped, each moving their mouths slightly closer to create better connection. Suddenly we were in a three-way kiss, with tongues snaking out to begin exploring this new, exciting sensation.\n\nAlexandra hesitated, drawing her face back for a brief second to study both of us in the dim light. And then she brought her mouth forward again to engage Tova in a sultry kiss. Tova groaned and they made out for a second, before we began again a steady pattern of mixing and matching kissing partners. My cock pulsed with the excitement of it all and thrust into Alexandra harder, driven by the passion of the moment. Alexandra responded and soon we almost rutting, my movement making it harder to maintain our oral connections. \n\nTova broke off and sat up to better watch us fuck. Soon she brought a hand up to begin cupping and massaging my buttocks as they flexed and released with each thrust into Alexandra. Her hand drifted down to begin playing with the valley between the cheeks. We made eye contact, my expression telling her how much her touch was appreciated. She smiled back as her fingers drifted lower to begin gliding around my anus. Finding it slick with sweat, she had no trouble beginning to work the sensitive area. I groaned in response.\n\nAlexandra brought her legs up and folded them so she could hold her knees, letting me penetrate her more deeply. My motion became more aggressive as I worked to drive my cock into her pussy with force. It also exposed my back door more completely, helping Tova began to slip a fingertip in and out of the opening with each pass.\n\n\"Fuck. Fuck. Fuck,\" Alexandra began repeating in a low voice, each vocalization timed to me bottoming out in her. Her head shot up momentarily from the mattress and then, falling back, she tilted her head back to stare out the window into the Nevada night.\n\nTova's efforts succeeded to the point where she was able to begin smoothly sliding a finger in and out of me, ending each motion with a bump against my prostate -- sending a thrill through me to the very tip of dick. I began releasing guttural growls that seemed to come from deep in my throat.\n\nWe continued on with this quite a while. Tova added a second finger and began finishing each push into me with a firm stroking of my aroused prostate. It was heavenly. My dick was embedded in a stunningly beautiful woman who was giving herself to me completely, willing me to fuck her with every ounce of strength in me. All while her enticing best friend was relentlessly working her fingers into me.\n\nI felt a twitch in my balls and knew this could not last forever. And I knew that I needed Alexandra to come before I had to pull out of her. I gave a small roar, and grabbed Alexandra's legs to bring them fully upright. I began slamming my rod into her. As I shifted positions to get up on spread knees for a better angle, I felt Tova's fingers slide out of me. I began brutalizing Alexandra's pussy from this new position.\n\nThe force caused Alexandra's slight frame to began sliding up and down on the sheets. I turned to Tova and directed her to go hold Alexandra in place by the shoulders. Without a word she complied. The intensity of Alexandra's \n\nexclamations intensified, become near barks of surprise and submission.\n\nI used one arm to wrap and hold Alexandra's legs and brought the other down to grab and paw at her breasts and nipples roughly. I was stalling at best I could, but I knew I didn't have much longer. \n\nThen abruptly, Alexandra came. Her head and neck continued to be angled away from us, but her legs buckled back into me. Her high pitch wail reverberated around the walls of the room, descending into a stream of weakening cries. It was a sight to behold. Her legs came down and Tova shuffled back a little to appreciate her as she lay there in a state of bliss.\n\nKnowing I was close, I decided that decorating Alexandra as she was spread out like a puddle on my bed was a fine end to the evening. I leaned a little forward and began stroking myself towards completion.\n\n\"Hold on, stud,\" Tova said, bringing a hand down onto mine, encircling my dick. \"I've got one more use for this, if you're up for it.\"\n\n\"Sure,\" I smiled. \"But I may not be able to last that much longer.\"\n\n\"Not to worry, we'll take it slow,\" Tova said mischievously. Her hands came to my chest and she pushed me down on to my back.\n\nShe wasted no time, climbing on top of me like a cowgirl. She lined up my penis with her hand and then slid her vagina down onto me. Up and down she went a couple of times.\n\n\"Just a few strokes for lubrication,\" she added, describing to both of us what she was doing. Then, pulling out, she grabbed my dick again and lined it up at her back door. I could feel the moisture from our previous activities, but I knew that for what she wanted to do it wasn't going to be nearly enough. \n\n\"Hold on just a sec,\" I slowed her roll. \"Let's do this right so it will feel really good.\"\n\nI scooted off the bed and went to the bathroom to dig through my toiletries. Lacking actual lube, I grabbed the small tube of petroleum jelly that I traveled with. I returned with it to the bedroom. \n\nAlexandra was still lying on her back, though she was now observing us as she recovered.",
        "\"Why don't you start on your knees so I can make sure you are ready for this,\" I suggested, hopping back up on the bed. Tova obliged me, looking back at me from over her shoulder. I moved behind her, and grabbing her two cheeks in my hand, brought my mouth down to make a seal with her asshole. My tongue went to work, sliding and expanding her butt to be ready for my cock. She was quite responsive, opening herself willing to me and so after a few minutes I moved my mouth away.\n\nSquirting a healthy dollop of petroleum jelly on my fingers, I began working them around and then into her rectum. We took it slow and steady, never forcing or pulling. Just smooth, steady motion until two fingers sat easily insider her up to the second knuckle. Satisfied with my efforts, I lay back down and motioned for Tova to try again.\n\n\"Thanks, I guess I figured it was supposed to hurt a bit at the beginning,\" she said, a little abashed.\n\n\"Well, hopefully not,\" I said encouragingly. \"But you should take it any pace you want, I'm sure I'll have a good time.\"\n\nShe returned to her position, and again brought my cock into contact with her anus. She exhaled and let herself drop until part of my head was lodged inside her. She lifted and dropped slightly again three more times, bringing my full head into her welcoming, tight chute. Her muscles flared, gripping my prick and making me fear I would come right then. But the moment passed and she continued working me up and down, shifting to feel the cock working up inside her.\n\nAfter a minute or two, we had full penetration, her ass sitting on my crotch as we made out passionately. She lifting herself up and began an earnest stroke, while I alternated fondling her tits and rubbing her clit. It was quite a show: Tova on display. The bed shifted again and I realized Alexandra had sat up to fully enjoy the view.\n\nTova began fucking me, much as she had earlier in the night -- though this time with me crammed into her much tighter hole. Once she had achieved the looseness to ride me she would with her cunt, her hand came down to begin frenetically fondling her own clit. \n\n\"I'm close,\" I warned her. \n\n\"Good, me too,\" she replied in an excited tone.\n\nMy balls tightened and I began uncontrollably thrusting up in to her, my cock directing my actions now. I felt her pause, taking in the new assault and then shoving herself down on my cock in time as she was drove herself over the edge. Her hand was a blur on her pussy and she began to rock her pelvis back and forth as I continued driving up into her.\n\nMy cock felt like it was suddenly wrapped in white-hot heat as it began spurting its contents into Tova's rectum. I continued with pulse after pulse as I stared up at Tova's face. Her eyes were wide open, staring out into space as the sensation nearly overwhelmed her. Her mouth fell open and her pupils floated up into her head. She began use her fingers to pull along her clitoral hood from the top to the bottom, rolling the clit underneath between her fingers. I tried to continue pushing into her even as my climax concluded, but I lost the rhythm and let her resume control of the strokes.\n\nSoon she also came to a rest still sitting on my dick. She bent forward to lie on me. My arms embraced her and my now flaccid dick slid free. We looked over and Alexandra was sitting cross legged, watching us through hooded eyelids.\n\n\"That was some kinky shit,\" she remarked, a teasing smile in the corner of her mouth.\n\n\"You fucking loved it,\" Tova shot back, rolling off me to smack her friend playfully on the arm.\n\nI got up and pulled the blackout curtains closed on the window.\n\nI hopped back in bed. We shifted around a bit, swapping kisses, and getting comfortable. Soon sleep overtook us again.\n\n---\n\nI awoke to the sound of Alexandra cursing. Opening my eyes, I saw her sitting on the edge of the bed as she looked at her phone in disbelief.\n\n\"It's almost noon. We overslept and now we've missed the whole morning,\" she said in a state of panic. Next to me Tova stirred and began disentangling herself from the sheet.\n\nI got up and pulled back the curtains, letting that glaring desert sunshine into the room. \n\n\"Mmmph, It's ok -- my thing isn't until this afternoon,\" Tova said, rubbing her eyes as she sat adorably naked on the bed, still partially wrapped in a sheet.\n\n\"Well, that's good. There were just a lot of interesting panels this morning I was going to check out,\" Alexandra said, already beginning to calm down.\n\n\"What is happening now?\" I asked, trying to be helpful and focus her on what to do now -- rather than what had caused us to sleep late.\n\n\"Um,\" she said, consulting the schedule on her phone. \"It looks like this is a networking lunch to connect with people with similar interests.\"\n\n\"Hmm, I think I've found all the people with similar interests I wanted to meet at this conference,\" I joked. They were both pulling on their clothes now. Tova paused to give me a smirk, before resuming pulling on her pants. \n\n\"What if you both go change and then we meet up for brunch?\" I asked. \"After that you can attend the afternoon sessions or whatever sounds good to you.\"\n\nI saw Tova check Alexandra's face and then, looking back to me, gave a shrug that suggested she was game. But it was clear we were both leaving this up to Alexandra.\n\n\"Yeah, that does sounds better than having to make small talk right after I woke up,\" Alexandra relented, breaking out her beautiful smile to show she was also glad our time together wasn't ending.\n\nThey departed for their room, and I dressed and freshened up. I checked the reviews of the many restaurants in the casino and found the one that best suited our needs. I texted it to Alexandra, and she replied that they would meet me there in 20 minutes.  \n\nI tidied up the room, taking note of the chocolate and strawberries still untouched in the fridge. I headed downstairs and wandering around the massive complex for a bit. I even dropped $20 into a slot machine. Two minutes later, it was gone and I was looking for something else to do.\n\nI made the way to the dining spot and secured us a table for three. The girls arrived soon after, Tova was now attired in a navy blue pencil skirt and cream silk blouse and Alexandra wore a yellow summer dress with a revealing neckline. \n\nWe picked out a nice meal and I convinced them to join me in ordering mimosas. We toasted our new friendship and compared our schedules for the day.\n\n\"Well, I have to attend a panel during the next session. My boss is on it, so I'll be expected to be there for support,\" said Tova. \"After that, I might go check out this workshop on social media strategy.\"\n\n\"Oh yeah, that looked kind of interesting,\" I replied. \"I had marked down this voter data presentation that starts soon, but I have to admit my heart isn't really into it.\"\n\nI smiled at both of them, and reached out to hold Alexandra's hand on the table. She gave me a little squeeze in response, but then withdrew her hand to study the schedule on her phone.\n\n\"Well, I was going to...\" she trailed off, scanning the options. \"No, that one seems boring. And I'm not really interested in hearing a panel of white folks talk about racial diversity.\" She bit her lip and looked up at both of us.\n\n\"I guess I'm not sure what I am going to do,\" she continued. \"I know there is a team dinner this evening that I have to attend. But maybe Tom you'd be interested in just wandering around a bit and seeing what catches our eye?\"\n\nTova looked down into her lap, trying to hide the smile that crept across her face. \n\nI nodded, smiling as well.\n\n\"I'd love to. I'd never turn down a chance to spend more time with a charming woman like yourself,\" I said, keeping eye contact with Alexandra as I spoke.\n\n\"That's great, I'll just stay in touch to see what y'all are doing when I am free,\" Tova added, clearly encouraging this development. \"Oh shoot, I think I left my watch in your room. Can you run up with me and get it?\"\n\n\"Why don't you just take my card key and you can give it back when we see you later. I can just get another from the desk,\" I suggested, sliding the card over to her.\n\n\"Oh sure, that works,\" said Tova, picking it up. \"Ok, I better go if I am going to make this panel. See you both later!\" She rose and departed after I assured her I was happy to pick up the bill.\n\n\"So, what were you thinking?\" I asked Alexandra.\n\n\"Let's see what the vendor booths have to offer, sometimes there are some really cool ideas being promoted,\" she proposed. It wasn't my first thought about what we could do with this time, but I was happy to let her decide. \n\n\"Sounds great,\" I said. I paid the check and we were soon wandering around a massive conference room exploring the many products and services being hawked. We laughed at some amusingly shaped stress balls that were in the likenesses of major conservative leaders. And found ourselves \"specially selected\" for an in-person demonstration of new app technologies before we found a way to politely disengage.\n\nAfter a while, I noticed Alexandra seemed distracted by something. Rather than avoid the subject, I suggested we take a walk outside to get away from the din of the conference. Surprisingly, she agreed.\n\nWe exited into the bright desert sunlight and made our way down the street, gawking at the kaleidoscope of humanity displayed in the visitors and vendors that packed the sidewalk. We laughed at some of the more unusual sights, but I could still feel something drawing her attention away.\n\n\"Are you ok? Feeling guilty we aren't back at the conference?\" I probed gently.\n\n\"Yes. I mean, no. I mean, yeah I'm ok,\" she stumbled over her words and then let out a long sigh. \"The truth is I haven't been completely honest with you. I have a boyfriend at home and I'm not sure what to feel about the last 24 hours.\"\n\n\"Hmm, I understand that. Relationships are complicated and pretty hard to explain to people who aren't a part of them,\" I said gently, trying to coax her to say more.\n\n\"We've been together for a couple of years now. We live together and I do really think I love him,\" she continued. \"But it also feels like things are in a rut. We each are busy with work. We don't talk like we did. And when we make love it isn't like it used to be.\n\n\"Sorry, this is stupid,\" she added, dabbing her eye to catch a tear that had formed there. \"You don't want to hear about all of this. We can just go back to the conference.\"\n\n\"No, this seems way more important,\" I answered. \"I'm sorry if I took advantage of you last night. I should have just let you go to your room. Now I feel like the ass.\"\n\nAlexandra stopped short. She turned to me, and grabbed my hand.\n\n\"No, don't apologize. I am glad that happened,\" she said with a serious look in her eyes. \"That's just the thing. It was one of the best nights I've had in a long time.\"\n\nWe continued walking, but she kept my hand in hers as we continued stroll.\n\n\"At home, I like the sex. I really do. At least I used to. I mean sometimes it is still good. Oh fuck, what am I saying?\" she said, debating herself. \"I mean I really do like him and I think he cares for me. It's just lately I feel like there is this distance, particularly when we are, you know.\n\n\"And last night was, well, it was pretty great,\" she continued. \"At first I was just playing along because I could tell Tova really wanted some. She's always been like that, looking to scratch that itch and then move on. But by the time we got up to your room I realized that I was really into it too. You've got some good moves for a married guy.\"\n\nWe both smiled at her little joke.\n\n\"Had you ever done something like that with her before?\" I couldn't resist asking.\n\n\"Oh no. I mean we used to talk about our sex lives when we were together all the time, but we never, ever both hooked up with a guy together,\" Alexandra disclosed, a little red showing on her cheeks. \n\n\"Well, it seemed like you both enjoyed that chance to kiss, or did I miss something?\" I pushed it a little farther, seeing what she would do.\n\nHer face turned bright red for a second and then she saw that I was testing her a bit.\n\n\"Yeah, I guess that was kind of fun. We've never done anything like that before,\" Alexandra admitted, giving me a good shot in the ribs with her elbow. \n\n\"Well, I thought it was pretty hot,\" I shared my perspective. \"But on a more serious note, I do hope that you find a way to work things out with your boy. I told you last night that being honest with my partner about our relationship was one of the best things I ever did.\"\n\n\"That is good advice,\" she replied, wrapping her arm around mine to come in close as we walked. \"But I do have to confess that I can't remember the last time I came as hard as last night.\"\n\n\"Oh really?\" I said dumbly, trying to track where this was going.\n\n\"Uh huh. It is usually hard for me to come and takes a long time,\" she confessed. \"But something about last night. Well, I enjoyed it.\"\n\nAlexandra brought my face down to kiss me passionately as the wave of people parted to continue walking around us.\n\n\"Me too,\" I shared once we came up for air. \"I'm looking forward to tonight, if you are game.\"\n\n\"Why wait for tonight?\" she asked, taking my hand and leading me back to the hotel.\n\n---\n\nWe grabbed another keycard at the desk and made our way up the private elevator.\n\nOnce in my room, I wasted no time pushing her down on to the bed. My hands were in her hair as our tongues entwined. As we continued to trade kisses, I brought one hand down and felt along her leg -- letting my fingers stimulate the sensitive sides of her thighs. She adjusted, spreading them further apart to give me easy access.\n\nI pushed up to support myself with my hands and began trailing kisses down her neck and chest. Taking my time, I ended up nestled in the glen between her magnificent globes. As I continued to lick and suck at the inner contours of her cleavage, she sighed with satisfaction. I was honored that she wanted to be with me after everything she had disclosed, and I wanted to make this worth her while.\n\nLifting up, I sat on her waist and began undoing the buttons on her dress. Removing the ones I could, I slid the dress down over her shoulders and revealing a cornflower blue bra with lacey detail that exposed the top of her breasts. My hands massaged her breasts gently through the material of the bra. Her sighs turned into soft gasps.\n\nI moved off of her, and removed the rest of the buttons to slide back the dress and reveal a matching pair of hipsters. Reaching an arm out, I helped her sit up. Alexandra shrugged off the dress and reached around behind to release her bra. Even though I had seen them less than 24 hours early, I felt my breath escape me as she let the bra drop into her lap. The curvature of her breasts was stunning, punctuated by dimpled nipples that begged to be aroused. I groaned audibly to let her know the effect they had on me. My cock grew stiff in my pants, straining against the constricting fabric. She smiled and guided my face to her chest. I opened my mouth and brought it down to cup around a nipple. I suckled gently, feeling it stiffen and grow in response. \n\nAfter giving each mammary the attention it deserved, I guided her to lie back down.\n\n\"Wait here a second,\" I said, rising off the bed. I made my way to the bathroom and removed a waist tie from one of the robes. Returning to the bed, I showed it to Alexandra -- my expression seeking her permission. She smiled in response and I tied it around her head, covering her eyes.\n\nI retrieved the strawberries and chocolate sauce. Taking a berry, I ran it along her cheek and brought it to her lips. \n\n\"Taste,\" I directed, holding it so she could nibble with her teeth.\n\n\"Mmmm,\" she replied. \n\nI switched to the chocolate, drizzling a small amount over each nipple. She shivered a little in response.\n\n\"Is that ok?\" I asked.\n\n\"A little cold,\" she sighed softly.\n\n\"Well, let me warm them back up,\" I offered. \n\nI brought my lips down to lick and suckle each breast in turn until they were clean. Alexandra cooed and sighed as I worked. I brought my mouth up to kiss her and her tongue snaked out to lick the stray spots of chocolate left on my lips. \n\n\"Yum,\" she gasped as our mouths parted. She brought her hand up, removed the blindfold, and then placed her fingers on my chest. \"Now let me take care of you.\"\n\nShe guided me down onto the bed so I was lying on my back. Shrugging off her socks, she climbed on me to take a seat on me wearing nothing but her hipsters. One by one the buttons on my shirt came free. She slid it off me, planting soft kisses down my chest as she went. My hands came up to fondle her buttocks, fingers slipping under the fabric of her hipsters to explore her naked skin.\n\nShe rose off me and undoing my pants, pulled them and my underwear down. My cock sprang free, pointing up towards the ceiling. She continued to pull the slacks and boxers down until my naked body was exposed before her hungry eyes.\n\nA hand came down and began slowly jacking me off as she moved up to kneel next to me. She leaned forward to kiss me again as she played with my prick. I enjoyed letting her take charge, feeling her fingers as they glided over the sensitive skin of my tip and shaft. She tightened her grip and my hips thrust up slightly, responding to her touch. Breaking our lip lock, she turned to bring her lips down to suck the tip of my hard penis as her hand continued to work its base. I groaned loudly, loving the attention. Her hand came down to scratch the sensitive skin of my scrotum as she worked me further into her mouth. She came back up and released my cock with an audible pop.\n\n\"Can I also take care of you while you do that?\" I asked. She just smiled, lifting her knee and bringing it over me to position herself on top, facing my feet. Her pussy lips sat inches from my face and I brought my mouth forward to begin licking them. She plunged my prick back into her welcoming mouth and renewed her sucking. \n\nWe continued like this for a good while, taking our time and enjoying the pleasure we were providing each other. My lips and tongue worked first the outside and then inside of her labia, migrating up to tease the edge of her vaginal entrance and slip under the hood to work the sides of her clit. Her mouth kept up a steady rhythm on me, periodically working me deep and then going back to lick, suck, and flick the head. Her hand kept up a steady play with my balls, using her fingers to firmly rub the hardening prostate underneath. \n\nHer thighs began to give a periodic shudder, suggesting an orgasm was approaching. I kept up my routine, but as I came up to work her tasty twat I ventured further to slide my tongue once around her exposed asshole. Her whole body froze, my dick still in her mouth. I kept up my routine, moving down to begin working her labia and the clit again. She began moving slowly, giving my dick half-hearted licks. But I could tell she was waiting to see what I was going to do next.\n\nI continued using my tongue to roughly stroke her lips and work it underneath to rub the clit. And then began my trip to visit her wet pussy and beyond. This time when I reached her ass I felt her pause again, but her body did not tense as it had the last time. I offered soft, gentle licks focused on the dark umber skin where the edge of her hole began. Working in a whirling motion, I brought my finger up to begin also softly tugging and rubbing her clit through her lips. \n\n\"Oh wow, that feels good,\" Alexandra uttered, dislodging my cock from her mouth and turning back to look back at me over her shoulder. \n\nI nodded slightly, before refocusing my attention to work my way back down to her labia and clit. I kept my fingers in the mix, sliding them down to work the base of her clit where her lips connected to the Mons. She began to gently buck herself into me, seeking me out as her body pushed for release. I threw myself into the moment, quickening the pace as I continued to work her clit, pussy, and ass. My fingers kept up a continual stimulation of the clit and soon her legs where trembling uncontrollably in excitement.",
        "My lips closed over her clit as I sucked it up into my mouth and she gasped loudly. \n\n\"Oh fuck, I'm coming,\" she exclaimed, continuing to grind herself into me as if she was trying to fuck my face. I copied her rhythm, alternating rough and soft licking as my fingers continued rubbing. She lasted a long time, but eventually came to rest prone on top of me -- my dick forgotten in the intensity of the moment. \n\nWe both took a moment to catch our breath, enjoying the sensation of full body contact. She rolled off of me to lie on her back. She kept one leg flat along the bed, while the knee of the other came up to form an angle pointed at the ceiling, openly exposing her naked sex to me. She beckoned to me with her finger and I wasted no time obliging her.\n\nMy cock slid easily in to her sopping pussy and we began making slow, passionate love. We kept our faces closes, occasionally kissing as I ground my dick inside her. We periodically made adjustments to move the position of our legs, our torsos, and hands, all the while keeping eye contact as we fucked. After a few minutes, we began talking -- clearly neither of us rushing to achieve a climax.\n\n\"I can't believe your wife doesn't want to do this with you more,\" she said lustily. \"You really know how to please your partner.\"\n\n\"Thank you,\" I replied, grinning. \"It is hard not to want to please a goddess like you.\"\n\nShe blushed a little, but I could tell she'd liked it.\n\n\"Well if it was me I'd want to do it everyday,\" she added. \"Speaking of which, you really surprised me when you went to my ass. After a few horrible experiences, I've shut that down at home. But what you did felt really good.\"\n\n\"Yeah, it's a little more delicate. But I really do love ass play. Tova and I had a good time last night,\" I shared.\n\nMy stroke must have just then found the right spot because Alexandra's eyes closed and she brought her hands to my chest as she savored the feeling. \n\nOpening them, she said, \"Yeah. I liked watching that. It made me want to try it myself.\"\n\n\"Really?\" I questioned, knowing that if you think anal sex is going to be bad it almost always is. She nodded seriously. \"Ok, well let's add that to the to-do list.\"\n\nWe continued fucking, but it was clear neither of us were particularly close to coming from our soft, sensual activities.\n\n\"I think I'm going to need more to come again. Do you want to have your way with me?\" she asked, again sharing an inner desire.\n\n\"I'd love to. Why don't you lean over the side of the bed,\" I instructed her.\n\nWe disentangled and she stood on the side of the platform, bending down at the waist to lay her torso on the bed, face down. Her delicious booty stuck out behind her, inviting me to take it. I moved in and spread her legs a little farther apart to bring her pussy to the right height. I scooted forward and slowly, with a few adjustments, entered her. \n\nI began slowly as we found the right position and I made sure she was ready for the assault to come. My hands came down to massage her ass cheeks and lower back. Her soft gasps affirmed that she was enjoying the position as my dick stroked her insides. I brought my hands to her hips, and holding them steady, and began increasing the force of my thrusts. After the first few, she grunted in response and flared her ass towards me a little more to offer a better target. My hands gripped her harder and my groin began making a slapping noise as I came back into her.\n\n\"Oh yeah, fuck me like that. Fuck me hard,\" she exclaimed in a strong voice.\n\nI drove at her harder still, trying to give her everything I had. One hand moved up from her hip to roughly grab her breast and tug the nipple between my fingers. She gave a stifled cry in response. Then dropped her face down into the mattress and screamed loudly. \n\nLooking to push her over the brink completely, I brought my hands up to grab the hair that was cascading down her back. Holding it firmly, I began pulling her back towards me in time with my thrusts into her. At first her body tensed, but then relaxed with a quiver as she responded to the combined force of the motion. Soon we were furiously slapping away, her perfect rump absorbing the force of my blows as I repeatedly speared her.\n\nTightening my grip on her hair, I began pulling her head up and back towards me. Her back arched, letting herself be forcefully fucked on my now swollen member. The whole scene was intensely arousing and I felt a faint ache in my balls as a climax approached. \n\nShe brought her hands out to support herself as she arched farther back towards me. I continued drawing her hair towards me, wrapping it around my hand for a better grip. \n\nAlexandra was now fully separated from the bed at about her belly button, using my hold on her hair and her hands for balance. Her voice was a steady stream of cries. I brought my free hand around to again play with her taunt nipple. She lifted one hand off the bed, and reaching behind her, grabbed my arm. My hand encircled her arm as we shared a new physical bond, holding each other as our midsections relentlessly crashed together. Her quaking body spasmed and the fingernails on her hand dug into my arm, announcing her climax had arrived.\n\nI kept driving into her, willing an orgasm what would leave her satisfied. She responded as her ass tried to ram itself harder back into me, quickly losing the rhythm as the experience overwhelmed her. She let go of my arm, bringing it back to the bed for better balance. I continued thrusting into her aggressively, slowly reducing my strokes and releasing her hair so she could come back down onto the bed. \n\nI expected her to be spent, but instead she turned back to me with a dirty look in her eye and declared, \"Put it in my ass.\"\n\n\"Well, let's make sure that feels really, really good,\" I replied. I gave her ass cheek a playful slap and pulled out. \"Can you kneel on all fours so I can lick you?\"\n\nAlexandra clambered up on bed and got on her hands and knees, presenting her pussy and ass to me at near eye level. I came forward and planted my mouth squarely on her asshole, licking and sucking it gently. I brought my hand between her legs and began slowly tugging my fingers down her labia, working the hardened clit underneath. She groaned again in pleasure.\n\nMy tongue soon loosened her ass so that I could work it into her tight hole. I kept up my work, continuing to lubricate and stretch the tissues. In time, the opening allowed me to fully insert my tongue into her. Adding the fingers of my free hand, I began tugging the edges of her ring -- further expanding her to receive my waiting cock. \n\nI paused, telling Alexandra to \"wait here a second\" as I went to the bathroom and returned with the lube. I squeezed a generous portion on to a couple of fingers and slid them down and around her relaxed asshole. One slid in easily as I began working the lube inside her. She let out a soft \"Oh\" and I brought my other hand back to massage her clit through her lower lips. \n\nMy fingers continued to work inside her, helping her loosen and relax to receive me. Soon I could move both around in her easily with little resistance. She was ready.\n\n\"Ok, ready?\" I asked. She nodded. \"Great, why don't you set the pace for this.\"\n\nI climbed up on the bed myself and applied some of the petroleum jelly to my prick, making sure it was well prepared for her. She came over and squatted over me, a look of nervous anticipation in her eyes. I held my dick steady at the base and she found the tip and began sliding it against her sticky asshole.\n\nAlexandra moved slightly and the end of the tip sunk into her. I felt her asshole clench around it. \n\n\"Try a deep breath out as you push down like you're pushing out a poop,\" I suggested. She looked at me with an expression of disbelief, but I nodded confirmation and she giggled. \n\nI watched her face, which suddenly grew tight with determination. She breathed out and suddenly I felt her sink down, taking the entire head into her ass. I smiled encouragement and she grinned back.\n\n\"Oh wow, that feels tight, but it didn't hurt,\" she confessed. She began lifting herself up and down slowly, working me harder into her tight cavity. I used my hands to massage her breasts and rub her clit. Soon she had buried my pole inside her, her ass molded to the contours of my lap. Using her knees and thighs, she started a gentle rise and fall, working herself on my cock.\n\nWe both froze to the sound of the room door unlocking and then opening. Neither of us moved as we heard steps down the entry hallway. Tova appeared, using a jaunty walk to make her way over to the bed.\n\n\"I thought I might find you guys here...\" she started, but her tone changed suddenly. \"Oh shit, is he inside your ass?\"\n\nAlexandra nodded sheepishly and I grinned. \n\n\"Well, don't let me interrupt you. I could use a bath after having to sit through that. I'll be in the tub when you finish,\" Tova continued, walking on in to the bathroom. We heard her turn on the tub and we were alone again.\n\nAlexandra renewed her focus, starting to again ease my cock in and out of her tight rectum. She slowly picked up the pace, beginning to work me firmly. She brought her face forward to kiss me softly and I toyed with her nipples. But then she rose up again to begin dropping herself on to me. Now fully loosened, her asshole offered little resistance.\n\nShe found a good rhythm and used her hands to rub and scratch my chest. The full sensation was intoxicating. The tingle in my balls soon returned, her luscious ass coaxing the spunk out of me.\n\n\"I'm close,\" I warned her. \n\n\"Good,\" Alexandra answered. \"I've been waiting to feel what it is like to have you unload inside me.\" \n\nShe adjusted her position to lean a little forward to dangle her breasts before my face. I leaned my head up and caught one in my mouth, suckling it hard. My prick, recognizing the impending release, began thrusting up into Alexandra -- meeting her as she descended and driving me even deeper into her.\n\nMy orgasm swept over me with tingles extending from my groin out to my extremities. My teeth ached and my eyes closed, overcome with sensation. Alexandra kept pace, continuing to work me inside her even as jet after jet arced into her. \n\nWhen it subsided, she tilted forward again to kiss me softly.\n\n\"Wow, that felt wonderful,\" she whispered in my ear, coming to rest on top of me. \"You do know how to make that feel really, really good.\"\n\nMy cock popped out of her and I felt a little mess oozing out of her and onto the bed.\n\nThe sound of Tova clapping startled us. She stood in the bathroom doorway naked, looking at us with a teasing expression on her face.\n\n\"Sorry, this tub takes a while to fill and I couldn't resist checking out the better view in here,\" she said, smirking at us. \n\n\"You lying bitch!\" Alexandra flew off me and was soon playfully poking her friend. I laughed, enjoying the teasing moment between them.\n\nWe all migrated to the tub and shortly were all relaxing together, bodies lightly caressing as we savored the feel of the hot water.\n\n\"That was a pretty racy thing to come back to,\" Tova mused. \"Seems like you two had a nice time checking out the conference.\"\n\n\"It wasn't bad, but we took off for a walk outside,\" I explained.\n\n\"Oh, I get it. Very romantic,\" was her retort. I could tell she was teasing, but there was also something else below the surface.\n\nWe discussed the panel she'd attended and how a discussion about advancing reproductive rights became hijacked by yet another discussion about how to appeal to people in the red, Republican parts of the country.\n\n\"By the end, my boss is up there trying to play 'let' make a deal' with this conservative putz consultant from somewhere in the Midwest about what we can all agree on. It's like we are back to fighting the same fights we had 50 years ago,\" Tova said, her anger rising again as she thought back on it.\n\n\"Tell me about it. Tonight we are going to go to dinner with a bunch of consultants my bosses think walk on water,\" Alexandra agreed. \"And then we'll spend all night listening to them tell us a bunch of stuff we already know. Then they'll charge us a ton of money to oversee us while we do all that stuff. It's total bullshit.\"\n\nThey both looked at me with accusatory looks. \n\n\"I know, I know, I hate most consultants too,\" I said, agreeing with their frustrations. \"But occasionally our old age and experience can be useful.\" I brought a hand to each of their shoulders and began giving the best dual backrub I could muster. They each smiled, satisfied they had won the argument and sinking down deeper into the water to let me do my work.\n\nAlexandra rose and used her phone to check the time.\n\n\"Shit, I've got to go get changed. What are you two going to do?\" she asked us.\n\nI looked over to Tova, who had a blank look on her face.\n\n\"I don't know. There is a trivia contest social mixer with conference attendees. I was thinking about checking that out I guess,\" Tova said, with a distinct lack of enthusiasm. \n\n\"Ok, well I will text you both when I am done so we can meet up later,\" Alexandra added, getting out of the bath and quickly drying off. She gave Tova a quick peck on the cheek and came in to give me a firm kiss on the lips. Then she left the bathroom and soon we heard the front door open and close.\n\nI turned to Tova, trying to read her mood. I decided to chance it.\n\n\"So... before I met both of you, I made a promise to treat myself this weekend: go out to a nice dinner, take in a show. Any interest in being my date for the evening?\" I asked her.\n\n\"Yeah, that'd be cool I guess,\" Tova said after a momentary pause.\n\nHer body language betrayed her as I felt her perk up under my massaging touch. \n\n\"Great, I'm really hoping for a fun night,\" I said, genuinely grateful for her companionship.\n\nWe soon exited the bath and after exchanging numbers, agreed to meet back down in the lobby in half an hour.\n\nI freshened up and put on a nice pressed shirt and slacks. Noticing I had a little extra time, I went down to the lobby and picked out a small gift for Tova in one of the shops. It was a simple silver chain bracelet, but I liked the pattern and thought she would like it too. I killed time people watching, but luckily I didn't run into any I knew from the conference.\n\nTova arrived just a few minutes late and was well worth the wait. I saw her enter the lobby and did a double take. She had changed into a plum dress with latticework on the chest that hinted at her cleavage and the tattooed roses. She wore strappy silver sandals, dark red lipstick, and smoky eyeliner. It was an impressive combination.\n\nShe saw me and made her way over. Tova's arms came up to hug me, her curls pressed against me. I brought her in and held her close.\n\n\"Hey there, stranger,\" she said in a happy voice.\n\n\"Hey there yourself, missy,\" I joked back.\n\nWe separated and I offered her the gift. She grinned and eagerly tried it on. \n\n\"Very nice. I guess you do know how to treat a lady,\" Tova said, her tone testing the line between teasing and sincerity.\n\n\"It seemed the least I could do before you had to put up with me for an evening,\" I replied, seeing how long she would continue this banter. \n\n\"That's true. I'm passing up a chance to get hit on by nerds all night,\" she sighed in mock disappointment.\n\n\"Hey, why are you badmouthing my fellow nerds?\" I pushed back.\n\n\"Ok, I see. Well apparently I get the best of both worlds tonight,\" she remarked, her grin widening. \"Ready to go?\" She offered her arm, and I took it as we made our way to catch a cab.\n\n\"Where are we going?\" she asked as we sped away from the casino. \n\n\"A great Italian restaurant at a place down the Strip,\" I shared. \"Unless you'd prefer somewhere else.\"\n\n\"Oh no, that's great. I grew up eating a lot of Italian,\" she said, looking out the window.\n\nI grabbed her hand and squeezed it. She squeezed back and looked over at me, before we returned to checking out the sights. \n\nIn a few minutes, the cab pulled up and we entered another massive casino and resort. Making our way through the gaming, we found the restaurant. The d\u00e9cor was Tuscan villa with lots of dark reds. The hostess took us to our table, a quiet location in the corner and far from the noise and activity outside. \n\n\"What do you want to drink?\" I asked, scanning her face.\n\nShe grabbed the wine menu and pointed to a very nice red. \"That'll do,\" she added.\n\nWhen our server came, I ordered the bottle. Returning, he opened it and offered me the first taste.\n\n\"The young lady should be the judge of that,\" I instructed him. Her eyes smiled at me as she brought the glass up to her lips.\n\n\"Yes, that is quite nice,\" she said, after savoring the flavor for a second.\n\nThe server filled our glasses and promised to return to take our orders.\n\n\"What shall we drink to?\" she asked, her eyebrow cocked, showing sincere interest in how I would respond.\n\n\"How about to gorgeous girls that should wear plum more often?\" I complemented her. She blushed a little in the low lighting of the restaurant. \n\n\"How about to doing something new?\" she parried back.\n\n\"That sounds lovely,\" I acceded. We clinked glasses and sipped the wine. \n\n\"So, I've been dying to ask you: what exactly are you getting out of this conference?\" she said, leaning in a little closer from across the table. The smile on her face revealed she was intentionally trying to provoke me.\n\n\"Well, here's the thing,\" I said, leaning back in my chair and shrugging my shoulders. \"I've done this conference a lot. I did years where I attended every session and stayed afterwards to introduce myself to speakers, done all the social functions, I've even talked on a panel a few times.\n\n\"But now I've figured out my practice. I have a couple employees and a set of long-term clients I really like,\" I continued. \"If something new comes along, I only pick it up if I'm interested. So I'm happy to come down now and just do what I want to do and forget the rest. Seeing that group of buddies I was out with last night is half the reason I even bother coming. And this year, I found something way more engaging than the scheduled agenda.\"\n\nI reached out and grabbed one of her hands, bringing it up to kiss it softly.\n\n\"So, what show is it you were talking about?\" she asked, changing the subject.\n\n\"I really hadn't picked. It isn't usually my thing, I wasn't even sure I was going to do it,\" I replied. \"I was looking a little earlier and this one did catch my eye.\"\n\nI pulled out my phone and showed her a page promoting a cirque-style show that was heavy on the burlesque and bawdiness. She took it and scrolled through the page.\n\n\"Looks fun,\" Tova said, sliding the phone back to me and adding with a twinkle in her eye, \"Maybe we'll get some ideas.\" \n\nNow it was my turn to blush a bit. I bought two nice tickets and put the phone away.\n\nWe ordered and ate a fantastic meal of pasta, chicken cacciatore and a desert of lemon sorbet. As we ate, we talked and learned about each other's past. Tova had grown up in New York and then gone to college in California. After graduating, she stayed out West and signed up for a training program for jobs in the environmental movement. That is where her and Alexandra had become friends. The program was tough and you moved around a lot. They became close and still saw each other at least a few times a year. They had even gone on a trip to Europe together.\n\n\"But last night was the first time you ever hooked up with her?\" I asked, pushing a bit to see what she would reveal.\n\n\"Well, there was this one guy in Spain that we each slept with on different nights. And we talked about his amazing dick. But yeah, last night was new,\" she admitted. \"I, uh, may have thought about it a few times, but I never thought Alex would be down for that.\"",
        "\"I thought it was pretty hot,\" I shared.\n\n\"Ok, so I've told you all about me, but I haven't learned anything about you,\" Tova challenged me, turning the tables.\n\n\"Fair enough. What do you want to know?\" \n\n\"I'm not going to waste time asking about your boring career or what your kids are like. Let's focus on the juicy stuff.\"\n\n\"Sounds good. Like what?\"\n\n\"Like, tell me more about what you like in bed. You didn't seem to mind having my fingers up your ass.\"\n\n\"No, that was delectable. It seems all of us of enjoys a little ass play.\"\n\nHer next move surprised me as she took control of the conversation. She kicked me hard in the shins with her shoe underneath the table. It stung a bit. She grabbed my hand and fixed my eyes with a piercing gaze.\n\n\"Don't fuck around with that evasive bullshit. I asked you what turns you on.\"\n\nTova continued tightening her grip a bit and my hand smarted. She never broke eye contact.\n\n\"Uh, this does a little bit,\" I said quietly, looking down to break eye contact. I wasn't lying as my dick was now stirring against the constriction of my pants.\n\n\"I thought so,\" she said, smiling triumphantly. \"Tell me more.\"\n\n\"Well, I do enjoy letting someone take charge, giving up control. I also like giving pleasure or taking care of my partner.\"\n\n\"Oh yes, you're actually pretty good at that.\"\n\nTova's tone changed again, her toes slowly slid up my leg and began stroking my inner thighs.\n\n\"But I really enjoy trying new things, new experiences,\" I added.\n\n\"Well, I'm all for that,\" she replied approvingly, apparently now satisfied with my answer.\n\nI paid the check and soon we were en route to the show.\n\nEntering yet another casino, we made our way to the theater and were shown our seats. The lights soon came down and the show began.\n\nThe performers weren't shy about leaning into the adult themes of the production. It started with a combination of dance and acrobatics, as several clowns humorously acted out the rituals of seduction in the foreground. \n\nThe next act featured a very attractive man and woman, minimally attired, on a trapeze. As it evolved, they simulated several sexual positions, both oral and vaginal. Costumes came off to reveal nude color undergarments, leaving little to the imagination. \n\nDuring the next one, I felt Tova's hand begin to caress my leg. We were watching a group of performers use a series of cloth straps hanging down from the ceiling to wrap each other up into a various bondage positions. Her hand moved up until it settled on my quickly stiffening cock. I tried to shift to make it less noticeable to the other people in the row. Her lips came over to my ear and she whispered, \"Seems like you find this is as hot as I do.\" Her lips closed to kiss the lobe and her tongue traced along the edge.\n\nThe clowns returned. A female clown drew a male clown into her bed, only to quickly place handcuffs on him. She proceeded to strip and torture him with a peacock feather to the great amusement of the crowd.\n\nTova showed me her phone with a text from Alexandra. \"Dinner now becoming mandatory drinks. I'll join when I can.\"\n\nAs the next group of performers formed an undulating sea of bodies flowing in and out of each other as a writhing mass, Tova again leaned close to my ear. \"I think I'm done watching. Ready to go back and put on our own private show?\"\n\nI turned, kissed her softly on the lips and nodded in agreement. We made our way to the exit and were soon in a cab on our way back to the conference property.\n\nIn the back of the car Tova slid up close to me and began working a hand under my belt, searching for my dick. She quickly found it and began willing it to grow in her hand. Within seconds I was almost painfully stiff.\n\n\"Tell me everything you and Alex did this afternoon,\" she breathed into my ear, continuing to stroke slowly inside my pants.\n\nI told her. About the blindfolding, the mutual oral sex, the lovemaking, and pounding Alexandra over the side of the bed. \n\n\"And you got to watch what happened after that,\" I added, groaning as she began to work the underside of the tip up and down with her thumb.\n\n\"Yeah, that was pretty hot. I was impressed she did that. She must really trust you,\" Tova lustily whispered. \"And you're giving me a lot of fun ideas for tonight.\"\n\nThe cab arrived and I paid the driver. We made our way through the lobby to the exclusive elevator. As we waited for it to arrive, the woman who had showed me how to use my key card joined us in waiting. She was wearing a gorgeous, glittery cocktail dress and sparkly high heels. We made eye contact, but she did not speak. She looked Tova over and gave me a slight nod of approval. \n\nThe elevator arrived. We boarded and took the ride in silence. When we arrived at my floor, we exited. I caught the woman's eye as we were leaving and she gave me a wink. Then the doors closed and she was gone.\n\nOnce we were in the room, Tova quickly took command of the situation.\n\n\"Why don't you make us a couple of drinks while I freshen up. I'd love a vodka and soda,\" she instructed, disappearing to the bathroom.\n\nI had just finished when she returned. She was stripped down to her underwear, a black thong and matching bra. In her hands was a tie for one of the robes. \n\n\"Thanks baby,\" she said, taking one of the drinks. \"Why don't you sit down there?\"\n\nI followed her direction to the love seat. I sipped my drink, excitement growing at what would happen next.\n\nShe walked behind me and placed the terry cloth strip over my eyes, tying it tight.\n\n\"Trust me to take care of you for a bit,\" she whispered in my ear, sparking a sudden shudder of excitement in my body as butterflies filled my stomach.\n\nTova removed the drink from my hand and I heard her place it on an end table. Her hands tousled my hair and then scratched my scalp. She brought them down, rubbing and caressing my chest. She took her time undoing the buttons then slid the shirt off me. \n\nI heard Tova move around to the front of me. Her hands worked open my belt and then helped slide my pants and briefs down to my ankles, pulling them free so that I was sitting naked, blindfolded.\n\n\"That's a yummy sight,\" she declared, reaching out to close her hand around my stiff rod. \"Here, take a drink.\" She lifted the vodka and soda up and I took another sip.\n\n\"Come with me,\" she directed, taking my hand in hers. I stood up uncertainly, letting her help me. I realized that I was very much in her power right now.\n\nShe guided me over to the bed and had me sit on the edge. She left me there for a few minutes, my mind racing and ears straining to hear what she was doing. \n\nI heard Tova walk across the room and then return to me. Her hand gently touched the side of my face and lifted it up slightly. She brought something to my mouth and said, \"Taste.\"\n\nI bit down and discovered it was a strawberry dipped in chocolate sauce. I savored it, licking chocolate off my lips. She moved slightly and then repositioned my head. Bringing it forward, she again instructed me, \"Taste.\"\n\nMy mouth found her nipple, slathered in the chocolate sauce. I licked and sucked, eliciting coos and sighs from her. She moved again and I waited in the darkness for what was to come next.\n\nTova's hands guided me to stand and then helped me awkwardly climb on the bed, bringing me to a kneeling position. I felt the mattress shift as she joined me. Again her hand came to my head, wrapping around the back of it and pulling me forward. \"Eat,\" she commanded as my face discovered her pussy just inches in front of me.\n\nI began eagerly working her, wetting the outer folds and exploring where I could reach with my tongue from this angle. I worked down to circle around the entrance to her honeypot and then back up to where her lips joined together at the top. As they began to grow, I slipped under her lips to tease the hardening clit -- eliciting a quiet gasp from Tova.\n\nShe kept her hand on the back of my head, stroking and playing with my hair, gently pulling me into her further. She adjusted her stance slightly and she thrust her pelvis forward, giving me better access to service her. \n\nMy tongue was now passing freely over her slicked down twat, playing more roughly with the skin protecting her clit. I sucked it up into my mouth and gently flicked it, bringing forth a deep groan from her throat. Her hand tightened, grabbing my hair in a firmer grip. \n\nTova's growing excitement was interrupted by a buzz from nearby on the bed. Her hand released my head and her body disengaged for a second. \n\n\"Alex is waiting downstairs. I guess you should go get her,\" she said with a twinge of regret in her voice. She pulled the blindfold off, revealing her standing above me on the bed in all her naked glory.\n\nI quickly threw on enough clothes to be decent and grabbed a key card so I could get back in the room. I kissed Tova and promised to finish what we had started. \n\n\"Oh, we'll find a way to make it up to me,\" Tova said, as I headed out the door. \n\nWhen the elevator arrived, I stepped onto the car and discovered the same woman who had helped me the first day. She was with an attractive guy and it looked like they were going back out for a night on the town. We made eye contact and she smiled, but then showed concern.\n\n\"All alone again?\" she asked.\n\n\"Oh no, she's still up in the room. I just need to go get something,\" I replied.\n\n\"Oh good, rooms like these are really best enjoyed with company,\" she said with a saucy undertone. \n\nWe rode the rest of the way down in silence. The doors opened and Alexandra was waiting there, her face breaking into a big smile when she saw me. The couple exited first and I let Alexandra bound into elevator rather than exiting myself. She threw her arms around me and gave me an enthusiastic kiss. Looking over her shoulder, I saw the woman looking back at us. We made eye contact and she gave me an appreciative smile and a thumbs up. The doors closed as the elevator made its way back to our floor.\n\n\"Did you guys have a good time at dinner?\" she asked as we ascended.\n\n\"We had a good talk and then saw a nice show,\" I said, choosing not to give too much away.\n\n\"Well, I'm sorry I missed it,\" she replied, kissing me again.\n\nOnce we were back in the suite, Alexandra wasted no time joining in. She and I began quickly stripping down as Tova watched us, naked, from the bed.\n\n\"Perfect timing,\" Tova called to Alexandra. \"I needed some help keeping him in line.\"\n\nAlexandra and I finished shedding our clothes, and joining hands, walked over to the bed. I climbed on, followed by Alexandra. Tova brought out the robe tie again and restored it as a blindfold around my eyes. The last thing I saw was the look of bemusement and interest in Alexandra's eyes. Then darkness.\n\nI felt Tova push me down so I was laying on my back and then a shifting of the mattress as they left the bed. A clink of glass told me they were at the bar as I heard them quietly whispering to each other. \n\nSoon they returned, with two sets of hands exploring my naked body. A hand firmly grasped my erect prick, and then released it. Lips came down to plant a few kisses on my chest and nipples. I sighed in response as their touches continued in new and unexpected places.\n\nFingers were suddenly replaced by the cold, wet hardness of an ice cube. I sucked in my breath as I responded to the intense stimulation. The freezing square traced its way over my chest, bringing each nipple into taunt hardness. Then it worked its way down my abdomen to the inner thighs, before being applied to my genitals. It felt cold against my cock, and I heard a murmur from them both as it caused my scrotum to shrink to the touch. And just as I felt I could stand it no longer, the sensation disappeared -- replaced by two warm mouths.\n\n\"Drink,\" I heard Tova direct as a hand came under to lift and support my neck. The glass was placed to my lips and I sipped a little of my cocktail. The hand retreated, letting my head return to the mattress. \n\n\"Now we are going to have a little taste test,\" Tova continued. \"Tell us who it is if you can.\"\n\nA pair of thighs settled around my head as one of them brought their snatch down to my lips. I began licking and sucking their sex. The shape of the thighs and taste that I had enjoyed just a few minutes earlier left little doubt it was Tova riding my face, but I decided to play along for a while.\n\nAfter a minute or two, the legs lifted and their pussy retreated. \n\n\"Well, which was it?\" Alexandra asked directly over me, trying to throw me off.\n\n\"Uh, I can't say that I have a definitive answer. I'm starting to get a feel for the question, so maybe with a little more time I could say with certainty,\" I teased. They giggled.\n\n\"Oh very well,\" Tova said. The thighs and twat returned, this time it was clearly Alexandra. I tried to bring my hands up to massage her ass, but they were swatted down. Tova exclaimed, \"No hints!\"\n\nAlexandra rocked her self slowly on my face, helping my tongue reach her from front to back. As I licked and then began sucking her clit into my mouth, her lips stiffened and became slick with moisture. \n\n\"That's enough stud,\" Alexandra said, as the legs came up and slit retreated. \"Surely you must have a guess by now.\"\n\n\"I would hate to make the wrong guess on impulse,\" I deadpanned. \"Perhaps a final taste to finalize the decision.\"\n\n\"That's it, get him,\" Tova commanded. I felt both of their bodies come down on me, hands grabbing my arms and legs to pin me to the bed. Free hands went to begin tickling me on my neck, armpits, and inner thighs. I squirmed and bucked uncontrollably as the girls laughed uproariously. \n\nI shouted out, begging for mercy. But a hand came to cover my mouth. The hand was quickly replaced by a soft mouth, kissing me as her partner in crime continued the tickle torture. It was more than I could bear as my hands scrambled to push them off and protect my most sensitive areas.\n\nSuddenly it stopped. I heard them whisper quietly for a second and then I was gently pushed back down to the bed on my back. I felt the mattress adjust as they moved again. A pair of thighs I was pretty sure were Alexandra's settled again around my head, and I felt the other girl settle on top of my waist. Each adjusted, Alexandra bringing her pussy to my lips as Tova settled hers onto my cock. And each let out a contented sigh as they began to work themselves on me.\n\nThey each found their own rhythm, Tova rising up until I almost fell out of her and then slowing sliding back down while Alexandra again rocked herself on my face. It felt sublime and I let them wantonly use my body for their own gratification. My lips and tongue kept up their stimulation of Alexandra's twat, exploring each of her inner folds and relentlessly seeking out her clit. We continued like this for some time, the sounds of passion growing in the silent room.\n\nMy ears detected a new noise: the soft smack of kisses above me. I brought my hands up to explore and, encountering no resistance, I ran them over Alexandra's exquisite tummy, chest, and breasts before arriving at her neck. From the angle, I could tell she was tilted forward to bring her lips to Tova's as they made out over me. I moved my hands back down to cover her breasts and begin stroking and rubbing her erect nipples. The exclamations from each woman grew as they reached a new level of arousal.\n\nSoon another pair of hands joined mine as Tova shifted to begin playing with Alexandra's breasts, eliciting a gasp of excitement in response. We worked together as I expanded the area of my attention to the tops of her cleavage and the sensitive undersides of her boobs. Encountering Alexandra's arm in passing, I realized she had reached out to share the same feeling with Tova. It was incredibly hot and I couldn't help beginning to thrust up into Tova despite my best intentions.\n\nAfter bumping into their hands a few times, I brought mine down to explore the Tova's bikini area. My hands roved the smooth skin and my fingers settled into the folds where the top of her labia began splitting away from the body. Adjusting to her steady up and down rhythm, I brought my thumb to begin gently kneading the aroused clit underneath. \n\nThe combined efforts of Alexandra and myself soon had their impact, bringing Tova to the edge of orgasm. She squealed in recognition of what was coming, and accelerated to a frantic pace. She was now impaling herself on my cock, stuffing it in and then pulling back. Tova struggled to keep her balance, both arms coming forward to lean on Alexandra's shoulders for additional support. I kept up with her tempo, my thumb becoming a blur.\n\nThe climax washed over Tova as she slammed herself down firmly on me and then trembled in our collective arms she rode the wave of feeling. After the initial surge, she resumed riding me -- continuing throughout the aftershocks. She slid off me to the side, flopping down on the bed. Alexandra also withdrew from across my face, and then lifted off the blindfold. We each lay there in a pile across the bed, catching our breath.\n\n\"You still haven't come yet, have you?\" Tova asked Alexandra.\n\n\"No, not yet,\" replied Alexandra sheepishly.\n\n\"Well ... could I try?\" Tova asked softly.\n\nThe question was greeted by a long silence as Alexandra pondered the question.\n\n\"Yes, I want to try that,\" came her eventual answer \n\nTova rose on to all fours and padded over to where Alexandra was laying on her back, using her elbows to prop herself up. Alexandra stared down at the girl now positioned between her legs with a mixture of hesitation and excitement. Tova's tongue snaked out and dragged a long lick over Alexandra's closed lips. The initiator giggled, while the receiver offered up a murmur of appreciation.\n\nHaving had a taste, Tova dove in -- kissing and licking her friend. I watched with rapt attention as they explored this new connection. Alexandra alternated between closely observing what Tova was doing and leaning her head back to revel in the sensation.  \n\nShortly Tova broke contact and turned to me to say, \"Why don't you make yourself useful back there?\" She nodded to her rear and resumed her efforts on Alexandra.\n\nI followed her direction, moving behind her and lining my prick up with her waiting slit. I sunk in easily and began a steady, gentle stroke, helping Tova adjust to the thrusts against her rump. We found a good rhythm and maintained a steady pace. Our collective groans and gasps grew as we experimented with this new position.\n\nMy eyes connected with Alexandra's, her expression one of lust and open abandon. She smiled widely at me, fully enraptured by this unlikely conjunction. I smiled back and began driving more firmly into Tova, roughly palming her butt cheeks for good measure. \n\nWe kept up our endeavors for several minutes. Tova came again, and then Alexandra arrived. Her hand came down to Tova's head, using it to keep contact as she rode through her orgasm. Eventually coming down, she pushed Tova away from her.\n\nTova turned back to look at me with a lecherous grin and began grinding herself back into me. One of her hands came back to capture and begin stroking my balls. I stared down at my meat disappearing and then reappearing from inside her. Her hands came up to rub the aroused prostate just below the skin between my scrotum and asshole. I leaned back, using the angle to drive into her deeper and better presenting my balls for her play. The feeling was intoxicating and soon my seed was boiling, waiting to be released. \n\nMy scrotum retracted and Tova cooed in excitement.\n\n\"Come in me. Fill me up,\" she directed, her fingers carefully positioned to feel the sperm once it began shooting up my shaft. I groaned and released a geyser, coming again and again inside her as her hand helped coax every drop out of me. ",
        "When I was done I fell backwards to sit on my knees, then keeled over onto my side as I continued to breath heavily.\n\n\"That was incredible,\" Alexandra declared. \"But I was hoping for a little time with Tom inside me tonight.\"\n\n\"Oh, I think we can get him back in action pretty quick,\" Tova predicted confidently.\n\nTheir hands came over and rolled me onto my back. Mouths came down to begin reviving my shrinking prick. I began to protest that it was far too soon, but the excitement of two beautiful women taking turns servicing my manhood pushed those thoughts away. And as they began to lick and suck my rapidly reviving cock, the pulses of pleasure enticed me to give it another go.\n\nThey cleaned any residual cum off and started bringing me back to full hardness. In a short time, they were trading my stiff penis between them as they took turns working me over. I moved up to kneel on my knees, my red, hard prick demanding attention as it jutted out from my body. \n\nBack and forth they passed it, licking it like an ice cream cone -- carefully stimulating the sensitive skin on the underside and around the base of the crown. Tova engulfed my prick with her mouth, bringing it into her throat before releasing it with a loud pop. I shuddered in response, bringing my hands down to stroke and run them through their hair. In no time at all, I was longing to place it back inside Alexandra's welcoming cunt.\n\nI used my hand to guide Alexandra up to her knees, and shift her body so that it was facing away from me. Tova broke contact, letting me move forward until my penis was lodged between Alexandra's resplendent ass cheeks. I moved down a bit as she leaned forward a little and my cock slid smoothly into her slick pussy. She brought herself back up on her knees and then leaned back against me, tilting her head around to bring her lips to mine and snake her tongue into my mouth. We kissed passionately as she began grinding herself on my pole. I lifted my hands to cup her breasts and support her weight, while her hands went over her head to play with my hair as our tongues continued to dance. \n\nI began tilting my pelvis to drive up into Alexandra with short, firm strokes. She broke the connection with my mouth and groaned to show the effect it was having on her. I dropped one of my hands down to play with the exposed folds of her pussy.\n\nTova moved so that she was behind me, rubbing her hands up and down my back and kneading my buttocks. Her lips came up to my ear and began whispering a steady torrent of dirty comments about what we were doing. \n\n\"That's right, ram that hard prick in her. Look at her getting off, working your pole. You two are such sexy fucks. You're so hot it's making me drip,\" she breathed into my ear, her own arousal infecting the tone of her voice.\n\nTova moved closer, bringing her chest and midsection flush against my back and rear. The hard nubs of her nipples pressed up against me, and her hands came around to stroke my chest.\n\n\"Mmmm, I like being against this hard body. Feeling your ass flex each time you push into her,\" Tova continued her torrent of smut in my ear. \"I want to feel it all.\"\n\nHer hands drifted from my chest, to reach around to Alexandra's front. My hand continued to play with Alexandra's labia and clit, but was soon joined by Tova's hands that gently pushed mine away. From Alexandra's grunt in response, I realized Tova was taking a much firmer approach than I had. And shortly her fingers snaked down to begin exploring where I was entering Alex. I felt the pads of her fingers working their way along Alexandra's split lips, rubbing my shaft as it worked in and out.\n\nWe continued this way, Alexandra and I thrusting into each other as Tova worked Alex's clit and my cock. My hands wandered freely to Alexandra's thighs, breasts and hair, and then behind me to stroke Tova's booty and curly head of hair. I twisted my face backwards and forwards, alternating passionate kisses with each of them. Tova kept up her handwork, firmly tugging and rubbing Alexandra's clit before again dipping down to where I was pistoning in and out. Sweat began to glisten on our bodies as we sought release. \n\n\"Come for us,\" Tova said breathily in Alexandra's ear.\n\nThe response caught Alexandra by surprise as she let out a gasp and then began desperately pushing herself down on to me to maximize the sensation. I felt Tova's fingers shift as she focused roughly on the clit, extending and intensifying the orgasm. Alexandra shuddered and then her climax subsided. I continued thrusting away, keeping the steady stroke I had been using for the last several minutes.\n\nAlexandra used her hand to push Tova away from her now overly sensitive clit, but continued trying to keep time with me as I kept pushing my hard penis into her. Tova shifted, detaching herself from my backside and coming around front to watch us. She lay on the bed and began slowly frigging herself as she watched through hooded eyes. \n\nInitially Tova and I kept our eyes locked on each other, each drinking in the desire pouring between us. But then her eyes shifted and as her and Alexandra were pulled into each other's gaze. From this position, I saw Tova's eyes and expression change slightly as she and Alexandra communicated silently. Alexandra's head and neck bent slightly, down towards her friend. I brought my hand up to her shoulder, and with a gentle push, encouraged Alexandra to bend down fully towards Tova's splayed legs and exposed pussy. She did so smoothly, dropping to all fours as I continued to ride her from behind. \n\nWith her face now just a little way from Tova's twat, Alexandra grew more pensive. I felt her body tighten, suddenly a little nervous. Tova shifted what she was doing with her hands to open and display herself to Alexandra. I brought my hand around to play softly with Alexandra's clit. She sighed in response and began to relax again. Slowly, carefully, she brought her face down towards Tova's folds. Both Tova and myself looked on with eager anticipation as Alexandra brought her tongue out and took a careful lick of her friend's wet peach. Tova hissed in response and Alexandra let out a little gasp. \n\nTentatively, Alexandra brought her lips down to begin carefully licking and kissing Tova's sex. Tova rolled her head back, looking up to the ceiling and laughed with joy. Her head came back down and she brought her hand to Alexandra's head, stroking and tousling the hair. Alexandra warmed to the endeavor, moving her lips closer to begin sucking and nuzzling Tova's privates. The picture they presented made my cock stiffen even more and I began wantonly thrusting it into Alexandra, overcome by the image before me. \n\nAny inhibitions left far behind, we began again working ourselves feverishly -- seeking out a mutual climax. Alexandra alternated between covering Tova's slit to take it into her mouth and backing up slightly to lick it from top to bottom. Tova's hand had moved down to the back of Alexandra's head, using it to pull her in closer working the hungry cunt. My hands were clamped down on Alexandra's hips as I used them to drive myself into her at a furious pace, creating a pitter pat as I slapped against her ass.\n\nTova let out a growl and then lifted her legs into the air, trying to give Alexandra greater access to her entire pussy. Alexandra responded with an enthusiastic cry that was muffled as her head went down again between Tova's firm thighs. I myself began a steady stream of groans as I could feel a new climax stirring inside.\n\n\"Oh fuck, yes!\" Tova exclaimed, her eyes losing focus as the wave of pleasure hit her. She tightened her grip on Alexandra's head, grabbing a mat of hair as she mercilessly ground Alex's face into her spasming snatch. As the surges ended, she released the hair and slid her head and legs back to the mattress.\n\nBut while Tova's moment was ending, Alexandra and I were still ascending. Without anything competing for her attention, Alexandra became an equal participant in our fucking, throwing herself back into me in equal time. My prick speared her red lips, her ass cheeks flaring to display her asshole winking up at me. I dug my nails into the dip under her hips and shoved myself into her as deep I could go. She cried out in response, reaching to grab Tova's legs for support as she braced herself for the onslaught. \n\nI let go of any care for decorum or sensitivity. My mouth spewed a series of foul-mouthed obscenities as I sawed into Alexandra, trying to push her beyond her limits. Instead, she looked over her shoulder and smiled wickedly before exclaiming, \"Fuck me. Fuck. Me. Hard.\"\n\nI roared in response, slamming myself against her again and again. Each time she would brace and absorb the blow, before shoving back against me -- begging for more. She issued a stream of cries and moans and then gasped for air as a quaking orgasm shook her suddenly limp body. I didn't let up, pushing her climax to the limit as the telltale signs of my own arrived. Alexandra hit the end of her peak of pleasure and flopped her head down to the mattress, contentedly letting me frantically plow her pussy.\n\nMy climax rushing up, I pulled out and began furiously stroking myself over Alexandra's back. Tova took notice, sitting up to watch the final display.\n\n\"Oh, he's about to come all over you,\" Tova exclaimed, grinning at Alexandra. Alex lifted her head weakly from the mattress to watch my cock with a look of fascination and relief in her eyes.\n\nI shot my load, the first spurts flying up to land on Alexandra's back, with the rest forming a small pool at the base of her spine and the top of her ass. It was a great orgasm, capping an unforgettable day with these amazing women. \n\nWe showered together to clean up, leading to more touching and kissing as we soaped up and washed off. We toweled off and soon were snuggled fast asleep in a close puddle.\n\n---\n\nI awoke to an empty bed. Sitting up, I saw that Tova and Alexandra were each in robes and making coffee at the tea service at the bar. They were talking in hushed tones. \n\n\"Oh good, you're awake,\" said Alexandra, looking over to the bed. She waved me over as Tova poured the coffee. I donned a robe of my own and joined them at the coffee table. We sat, sipping our drinks quietly, each of us lost in thought about the last two days. \n\n\"What are you thinking about?\" Tova broke the silence, directing her question towards me.\n\n\"I was thinking back to last night. Well, actually the entire weekend really,\" I replied. \"I wanted to make this trip special. I never imagined something like this.\"\n\nEach of them smiled, nodding in reply.\n\n\"Yeah, I don't think any of us saw this coming,\" Alexandra commented.\n\n\"It was truly amazing. Thank you,\" Tova added, looking at me with a look of sincere appreciation.\n\n\"So, I have a later flight than Tova,\" Alexandra shared. \"I was going to go pack and let you two say goodbye so that the two of us have some time for ourselves later. Does that sound good?\"\n\nI nodded, impressed that they had already planned this all out.\n\nAlexandra rose, and, shedding her robe, quickly got dressed. She came back to the loveseat. I got up and we embraced.\n\n\"I'll text you later to meet up,\" she said as she walked down the hallway and out the door.\n\nI sat back down and Tova snuggled up against me on the loveseat. Her curly hair rubbed against my neck and face as she burrowed down to place her head on my shoulder. We again sat in silence, finishing the last of our coffee. \n\n\"You've really had an impact on her -- and me too,\" Tova said in a quiet confession. \"I didn't know what to think when I saw you first talking to her at the orientation. But you are a special guy. I mean, really special.\"\n\nI felt a couple of tears fall on my chest through the gap in my robe. Bringing my fingers to her chin, I lifted her face up to discover her eyes were wet. She wore an embarrassed expression on her face and quickly looked away, muttering \"Sorry\" under her breath. Again I brought her face back to mine, looking her softly in the eyes.\n\n\"Don't be sorry. What's wrong?\" I asked gently.\n\n\"Oh, it's stupid. I just don't understand why I only meet guys like you like this, where you're totally unavailable and I have to get on a plane in a few hours.\"\n\n\"Hey, you are a strong, sexy, smart woman. Any guy would be lucky to have you, including me,\" I said firmly.\n\n\"You say that, but you'd be surprised how some guys treat me,\" she said, her voice betraying her doubts.\n\n\"Oh, I'm not surprised. A lot of guys are idiots, particularly at your age,\" I said confidently. \"But give them time and I bet sooner or later the right one will come along. The truth is most of them don't know what they are doing so they think it is smart to hurt you before you hurt them. It isn't right, but it also isn't usually about you.\"\n\n\"Yeah, you're right I suppose,\" she sighed, sitting up straight. \"And a few of you are ok I guess. Thanks. For talking, and for everything.\" \n\nShe grabbed my hand, and guided me off the couch and towards the bathroom.\n\n\"Let's take a bath,\" she suggested, her sexy voice creeping back in as she turned on the water.\n\nWe both moved to the window as we waited for the tub to fill. Coming up behind her, I brought my hands down across her robe to wrap her in an embrace. We both looked out over the busy whir of activity below in silence. Tova lifted her lips up to me and we kissed tenderly. We alternated checking out the view and kissing as the tub continued to fill.\n\nSoon the bath was ready. We dropped our robes and slid into the hot water. Quickly Tova moved to take a seat on my lap as I rested on the bench inside the tub. Her hand came down to wrap around my quickly hardening cock and my hands moved to her breasts as we again began kissing passionately.\n\n\"That was pretty exciting what you and Alexandra did last night,\" I shared between kisses.\n\n\"Yeah, I never thought that would happen,\" Tova replied, moving down to kiss and nuzzle my neck. \"Never thought Alexandra would go for that.\"\n\n\"Well, I was glad to be there for it,\" I hissed as she tightened her grip on me, pulling harder with each stroke.\n\nI brought my fingers down to explore the folds around her clit, rubbing and tugging her under the water. That continued for a while as we worked to get each other off, our bodies sending small ripples cascading around the tub.\n\n\"Let me eat you out like I did with Alexandra that first night,\" I proposed.\n\nTova shifted off of me. But rather than lie back on the platform, she hopped up to sit on the lip of the tub, and, using the bench for support, spread her legs wide. Turning around and sliding my lower body down in the tub, I brought my face up and attacked her bare pussy. \n\nOur previous play had brought her lips and clit to full arousal, red with anticipation. I worked her determinedly, licking hard and then sucking her up into my mouth with lewd noises that echoed around the bathroom. I flicked her clit with my tongue, eliciting a deep groan from Tova. She grabbed my hair in her hand and used it to pull me into her harder -- rubbing herself against my mouth as I continued to work.\n\n\"Oh yes, that feel so good. Eat me. Drink me in,\" she exclaimed in a low growl, grinding me against her sex.\n\nMy tongue found the sensitive space above her clit and under the hood and began a relentless assault. I worked it up and down, inside and out. Round and round I went against her engorged clit. She gasped.\n\n\"Suck it, suck it as hard as you can,\" she commanded. I obliged, giving it far rougher treatment than I normally would. Her legs trembled and her back arched announcing the start of her climax. Her hips bucked up from the lip of the tub, thrusting into me like we were fucking. I continued my furious efforts, using the timing of her thrusts to synch my suction with the crests of her orgasm. The aftershocks continued for quiet some time, as she unbent her back and came forward to watch me as I helped her finish. \n\nHer foot slipped off the bench and lost her balance, falling forward onto me and into the tub. We both went under the water and came up giggling and laughing as we embraced and began kissing again. I continued holding her in my arms as she came back down. \n\nThe water in the tub had now cooled so we exited and toweled off, making our way in the nude back to the main room. Tova mused she was in the mood for a morning drink and I agreed. I made us two greyhounds and brought them over to the window where she was again staring down at the strip and the desert.\n\nWe clinked glasses and sipped them as we watched the sunny day unfolding before us. I again moved in behind her, bringing my chest to her back. She leaned against me, enjoying the physical contact. We kissed and sipped, enjoying the moment. \n\nTova moved a hand down and finding my cock, quickly brought it back to full mast. She took the drink out of my hand and placed them on the coffee table. Returning to the window, she turned to me and hugged me tight.\n\n\"Please fuck me against this window,\" she whispered in my ear. \n\nI reached down and brought a hand under each ass cheek. Tova went up on her toes and then used them to bounce up and wrap her legs around me, my hands now helping to carry her weight. With a little effort, we guided my prick to the entrance of her vagina and I let her sink down on me. We embraced closely and I pushed her up against the window. Using it for leverage, I began fucking up in to her as I continued to hold her. She cried out in happiness and brought her mouth down to begin biting my shoulder. \n\nIt was fun and gravity added real force when she slid back down on me, but I knew I could not maintain this position for long. In time, I moved away from the window, my dick sliding out in the process. She brought her legs back down to support herself and I released her.\n\nI took one of the chairs and moved it in front of the window, facing it in towards the room. I patted the seat and helped kneel on it, her view out at the desert. She poked her ass out invitingly. I brought my cock into the right place and carefully worked it inside her.\n\nI began slow, making sure the angle was right. She came down a bit to improve the angle and I slid into the hilt. My pelvis began thrusting up into her, pushing her forward as she gripped the back of the chair for resistance. But it started to tip forward a bit until I righted her. I slid the chair forward slightly and she shifted her hands and chest to the window itself for stability. I imagined the sight she must be presenting, breasts smashed against the glass framed by her hard, red nipples. I grunted in approval at the image and drove into her harder.\n\nWe fucked like that for a few minutes, but it was clear neither of us was going to arrive in this position. I pulled out and taking her by the hand, led her over to the loveseat. Patting the armrest, I motioned for her to lay herself over it. She did, bending over to expose herself from behind while the top of her body made an acute angle as she rested her face on the seat. I moved in behind and sunk in.\n\nFrom this position, I entered her deeply and began stroking the sensitive parts of her clitoris inside the vagina. My efforts were quickly rewarded as Tova began a guttural grunting that only fueled my passion. I abandoned myself to the moment, knowing this was the last time we'd be together.\n\nI fucked her roughly, slamming my prick into her time and again. In this position she could do little more than take it, her groans and moans urging me on. I grabbed and kneaded her ass, then slapped it with my open palm. She shuddered in response, pushing herself out a little more to take another blow. I struck her in a pattern alternating with my thrusts, letting her push back into me as my prick speared her again and again. \n\n\"Yes. Yes. Yes,\" she wailed again and again until her pussy seized as it began its final ascent to a shattering climax, grabbing my cock in a tight embrace. Tova went silent as I continued my animalistic activities, now quietly absorbing my thrusts as her orgasm radiated out through her body. ",
        "The added sensation on my penis was all that it took to push me over the edge as well. I shouted hoarsely as I felt myself let go in her, my cock disgorging its milky seed in pulse after pulse. We rode our shared orgasms together, slowly subsiding until I also came to rest, lying on her bent form on top of the armrest. I moved the hair away from her ear and whispered, \"You are incredible.\"\n\n\"Oh, you did all of that, but thank you,\" she said softly in reply.\n\nI pulled out and we rolled off to cuddle on the couch, finishing our drinks. \n\nTova looked at her phone and a flash of panic spread over her face. \n\n\"Dammit. I've got to leave for the airport in 20 minutes,\" she declared, jumping up. She raced to the bedroom to grab her clothes from the night before. I helped her collect her things as she pulled on her dress and shoes. \n\nA sudden whirlwind, she raced towards the door. I caught her arm and pulled her back to me. I held her in my embrace and kissed her delicately on the lips.\n\n\"You are an amazing woman. You deserve the very best. Thank you for giving me so much this weekend,\" I said, looking her deep into the eyes.\n\nShe stiffened, driven by the urgency to pack and catch her plane, and then relaxed. \n\n\"Thank you, Tom,\" she said, returning my gaze. \"It was truly special for me too.\"\n\nThen she was gone, racing out the door. \n\n\"Until next time,\" she called as the door slammed shut, leaving me standing naked and alone in the center of the suite.\n\n\"Tova's on her way down,\" I texted Alexandra.\n\n\"Got it. I already got her stuff together 4 her. What u doing now?\" she sent back.\n\n\"Getting dressed, packing up my room. Then I'll probably get some food. Want to join?\"\n\n\"Sounds great. 30 min?\"\n\n\"Perfect. I'll text u when I am down in the lobby\"\n\nShe texted back a kiss emoji. I smiled and got to work. \n\nSoon I was dressed and packed. I looked at the time and realized we'd be done eating pretty close to check out time. I decided to bring my bag down, leaving the rest of my purchased amenities for housekeeping to do with what they wished.\n\nAlexandra was waiting in the lobby, wearing a fetching green pastel athletic tank top that showed off her svelte arms with an attractive white tennis skirt. She also had her luggage in tow. We hugged and found a restaurant nearby to eat.\n\n\"So, how was your goodbye with Tova?\" Alexandra asked, a little coyly but also with genuine interest.\n\n\"It was good. I think she was a little skeptical of me at first, but I feel like we really made a connection,\" I said.\n\n\"Oh I know, she showed me her ass cheek as she was changing to go to the airport,\" Alexandra said, her smirk breaking into a broad grin. I blushed and looked down at my lap.\n\n\"No, in all seriousness, I think this was a really special weekend for her. I saw a pep in her step that I haven't seen in a long time,\" she added, reaching out to hold my hand for emphasis.\n\n\"That's great. She really deserves someone who appreciates her. Are things between you two going to be ok after last night?\" I queried. Now it was her turn to blush. \n\n\"Oh that. Well the last couple nights were very special, but I think that is going to be a one-time thing. We've been friends a long time and I wouldn't want to screw that up,\" she explained, almost as if she was convincing herself. \"But I will hand it to you, you got us pretty far out of the friend zone.\" \n\n\"I thought it was pretty special what you shared. But I get how sex can complicate things,\" I said supportively. \"Speaking of which, what are you going to do when you get home?\"\n\nAlexandra withdrew her hand in response and I could tell I had ventured into dangerous waters. She bit her lip, thinking carefully before she responded.\n\n\"The last few days have been amazing. I mean that, amazing,\" she grabbed my hand again as she said it. \"But I do care about him so much that I really want to make it work.\"\n\n\"Good,\" I encouraged her. \"As long as you know what you want and can tell your partner, I know you will make the right decision.\"\n\n\"Honestly, that is why I so appreciate of what you've shared with us these past few days,\" she added. \"I do know what I want. I just need to be more able to say it out loud and help him fulfill it.\" I nodded in agreement.\n\n\"That is really great to hear. He's a really lucky guy. I have really enjoyed your company,\" I said.\n\n\"He is. But I really enjoy your company too. This trip has given me a lot of perspective and I have you to thank,\" she said, rubbing her fingers across my hand.\n\n\"Best conference I've been to in a long time,\" I added.\n\n\"So I think we should just try to enjoy the time we have left,\" she offered, a little twinkle appearing in her eye.\n\n\"Oh definitely,\" I agreed. \n\nWe wolfed down the rest of our food and I paid the bill. We made our way back to hotel registration, which was considerably quieter than when I had checked in a few days ago.\n\nWhen it was our turn at the counter, we were greeted by a young man whose name was Chris according to his nametag.\n\n\"Hey, how can I help you?\" Chris asked in a friendly way.\n\n\"Hi Chris, we had a late night and I was wondering if there way any way to do late check out so we could get in a little nap before our flights?\" I asked.\n\nTaking my keycard, he began typing away on his keyboard.\n\n\"Hmmm, unfortunately we have another party that has booked that room for tonight so I need to get the cleaning crew in there,\" he said, deflating our plans. \"But, I could offer you a resting room for a few hours as a courtesy. It isn't nearly as nice as the room you were staying in, but it should let you recharge a bit before your trip.\"\n\n\"That would be great,\" I agreed. He gave me a different keycard, and as I turned to go, a little wink. I smiled back appreciatively as we collected our bags and headed to the new room.\n\nIt was nothing special, a couple of queens and a partially blocked view of the Nevada desert. But the two of us could have cared less. The moment the door closed we were on each other, hands roaming freely as our lips came together in passionate kisses. We quickly shed our clothes, helping each other out of our garments.\n\nAlexandra and I fell together onto one of the beds. Our arms and legs entwined as we lay on our sides kissing and staring into each other's eyes. My hands moved up and down her light brown skin, caressing arms, breasts, and buttocks. Hers did the same, roving and gently touching my body. I gasped as her hand settled with a firm grip on my cock, beginning to jack me off. My hand slipped down between her legs, searching up into her inner folds. Fingertips discovered her lips were wet and firm with arousal.\n\nI shifted us, bringing my body on top of hers -- our faces inches apart. My cock found her opening and slid in smoothly, eliciting a sigh of contentment from her lips. We stayed in a close embrace, my penis making small movements inside her welcoming pussy. Our faces shared expressions of true attachment and caring as we savored this final session of lovemaking. \n\nI lifted myself up on my hands to look down at Alexandra's stunning body as my prick slid in and out of her just below the cute crop of black pubic hair. I lowered my mouth down to kiss and suckle her breasts until her nipples were standing at stiff attention. \n\nAlexandra brought one leg up to her chest, letting me enter her more deeply. She groaned as I moved my arms to encircle the leg and her body. I pushed in more firmly and brought my pelvis forward to rock my cock in and out of her. She brought the other leg up next to our closely conjoined bodies, helping me sink in even deeper. Her eyes and mouth opened widely as I bottomed out in our new position. I stroked her several times more, eliciting a loud gasp each time I drove myself home.\n\nPulling out, I shifted myself back to sit on my haunches. I took both of Alexandra's legs and helped her extend them towards the ceiling. Using a hand to help support them, I used the other to guide myself back into her. She brought her legs forward to lightly rest on my chest as I began thrusting into her. The picture of her looking up at me, her hair laid out across the bed, her breasts and nipples standing at attention, and her silky toned legs rubbing against my chest and hands brought me to ecstasy. \n\nIn time, she moved her legs down and I shifted forward to again return to a missionary position. We entwined our legs and using the leverage rolled over to end with her on top, my cock still buried in her snatch. \n\nAlexandra sat up, lazily riding me. Her pussy gripped me as she rose and then relented to my hard prick as she slid back down. She brushed her hair back behind her ears and smiled down at me, her breasts giggling as she worked herself on my prick. She leaned back, supporting herself on her hands and exposing where my cock met the V of her pussy as she moved up and down. It was an exciting sight and I found myself thrusting up into her in response. She shifted her weight and brought one hand around to feel the contours of where her pussy ended and the smooth skin of my prick began. She giggled with glee, beginning to strum her clit as continued to work.\n\n\"Can I take a video of this for later? I would never show anyone,\" she asked breathily, voice sincere and imploring.\n\n\"Sure, as long as you keep my face out of it,\" I said.\n\n\"Of course,\" she replied, reaching over to grab her phone off the nightstand. \n\nAlexandra brought the camera down, focusing on where we came together and her pelvis was riding up and down on top of me. She slowed her pace, adjusting the size and angle of the shot until she was happy with the result reflected on the screen. She tapped the red record button and we were making our own porno.\n\nAlexandra resumed her steady rhythm, lifting up as her lips kept their hold on me, and then descending as my prick spread them back apart. The phone she held above us was focused on our chests and our connected middles, zoomed in sufficiently to show each detail of our corresponding parts coming together. It was exciting and I relished the thought that she would watch this again and again.\n\nWanting to put on a show, Alexandra accelerated - showing the camera that she was aggressively forcing herself down on me and then lifting back up to the peak. Her trim tummy strained with the motion, flexing and retracting time and again. I gasped at the new sensation, adding to the soundtrack of her soft sighs and groans in our own private movie. \n\nThe force and pace of her movements caused her to lose balance slightly and I brought a hand up to her hip for added stability. I used the other to take the phone from her and hold it steady. Alexandra smiled down and redoubled her efforts. On and on she pushed, driving herself towards a climax. Her eyes shut tight as she focused on the sensation between her legs. My hand on her hip felt a quiver beneath the skin as her muscles began to spasm in her final ascent. The quiver became a tremble, visible now in her bikini line as her body began acting on its own.\n\nAlexandra's orgasm swept over her, her eyes still screwed shut. I tried to keep the phone steady as she convulsed, her body still rising and falling in time with the crests of her climax. It continued for a good while, before she came to rest sitting on me with my stiff prick still buried inside her. She grabbed the phone and turned off the recording. Bending forward, she laid herself on top of me, kissing me softly and making quiet noises of contentment. Every few seconds she would constrict her pussy muscles around me, bringing new pleasure to my cock. Bringing the phone up next to our faces, she quickly scrolled though the video for our mutual benefit.\n\n\"That is so hot. I'm going to play that again and again when I have private moments to myself,\" she sighed, giving my dick an extra squeeze to emphasize the point. She put the phone on the nightstand. \"Now, I'd like to have you take me from behind one more time. I really love the feeling of your balls slapping against my pussy.\"\n\nMy prick twitched inside her in response. Alexandra lifted herself off me. She moved to her hands and knees, reaching back between her legs to spread her lips for me -- offering a pink, perfect target. I quickly repositioned myself and drove in. She was slick from our previous coupling and I was soon ramming myself into her with quick, hard strokes. Her mouth issued a string of gasps and groans, telling me the impact I was having. As predicted, my balls swung freely -- coming up to repeatedly smack against her.\n\nWe did not speak, letting our bodies do the communicating. I summoned all the energy left in a body taxed by long weekend of fucking, pouring everything I had into my final consummation with Alexandra. Sweat began to bead across my body as a dull ache began to throb deep in my rod. I pushed on, still driven wild by the desire of the Latina beauty in front me furiously seeking release on my pistoning pole. Her hands gripped the bedspread tightly and her head was tilted up to the ceiling, hair spilling down across her back as she shoved herself roughly back into me. A relentless \"slap, slap, slap\" was the theme music for our encounter, helping both of us keep time as we continued working.\n\nDespite my growing soreness, I was desperate to give her a final climax. She also seemed almost fevered in her desire to cap off our weekend as she pushed us both to the limit. \n\nAnd then she crested, letting out a high whine that punctuated her arriving at her destination. Her rhythm faltered as she became lost in the moment. I used my hands on her hips to keep forcing her back into me until the orgasm ended and her face slid down to the mattress. \n\nBut even then, she surprised me. She slid forward, leaving my still swollen cock suddenly cold and wanting for touch. Alexandra whipped around, coming up on her knees before me.\n\n\"Here, let me finish you in my mouth,\" she directed gently, using her hand to bring me towards her waiting lips. She opened and took me in deeply. If her own taste bothered her, she gave no sign and she began working the top with her lips and tongue, as her her hand continued working the bottom of the shaft.\n\nThe incredible softness of this new orifice relieved any ache in my tired cock, which seemed to melt like butter on her tongue. Her other hand came forward to help push me into her as she deep throated me, lips near my root. She let me fuck her like this for a few strokes, before coming up for air and resuming her work with her lips, tongue, and hand. \n\nAt this point, it didn't take long. A few circuits of this rotation and I felt myself pass the tipping point, the come left in my balls, racing towards release.\n\n\"I'm going to come,\" I groaned, before sinking into a low roar expressing the strength of my orgasm.\n\nWordlessly, Alexandra brought me in a little further, accelerating her hand to intensify my experience. Despite the numerous times I'd already come this weekend, I shot off splash after splash into her willing mouth. She continued sucking and swallowing until I pulled my cock free, my overstimulation hitting its max.\n\nWe collapsed together on the bed, the sweat on our bodies mixing together as we embraced. Our sexual congress ended, we sought out the close contact of each other's body -- ending up together in a tight knot. We lay there for several minutes in the quiet. My mind floated freely, various moments from the previous weekend running in and out in a random pattern. The first time I'd seen Alexandra. Our kisses together on the terrace and then in my room. Watching the show with Tova. Our bodies slick with bubbles at the dance club. This morning with Tova pushed against the window. Alexandra slowing lowering herself down as I penetrated her ass.\n\nEventually, I checked the time and suggested we clean up before we had to go. We got into the shower together. It was a tight fit, nothing compared to the luxurious one in my suite. We soaped and cleaned each other, savoring our final chance to touch and caress each other's bodies. Even though my cock showed no sign of life, it was still heavenly to embrace her exquisite body and taste her beautiful lips. Soon though we exited, toweling off and fixing ourselves up for the trip home. We dressed in near silence, again lost in thought.\n\nWe agreed to take a cab to the airport together and soon were on our way. Both of us stared out the window, uncertain of what to say in these final moments. She brought her hand to mine and we held hands in the back seat, smiling quietly at each other. As a sign signaled we were close to our destination, she broke the silence.\n\n\"Is it wrong if I tell you I really want to see you again?\" she asked hesitantly.\n\n\"No, not at all,\" I quickly replied. \"I feel the same, but wasn't sure how to tell you that. This was really special for me.\"\n\n\"Me too,\" she said. \"Maybe in a different time, in a different place...\" She trailed off. \n\n\"I know,\" I said, not needing her to finish. I leaned in and we shared a long, deep kiss.\n\nAnd then the taxi was at the curb, ready for us to depart. We unloaded our bags and I paid the driver. We each stood outside the terminal, uncertain what to do next.\n\n\"Can we do this again next year?\" she proposed suddenly. \n\n\"Of course, but I think Tova might feel left out,\" I said, trying to lighten the mood.\n\n\"Oh, I wouldn't want to leave her out of anything,\" Alexandra replied, her sincerity and loyalty to her friend showing through.\n\n\"Good, let's do it,\" I said encouragingly. \n\nWe embraced in a long hug. My hands ran over her body, tracing the curves and implanting them in my memory one last time. Then she turned and was gone in the crowd, off to check in for her flight. I gathered my stuff and did the same.\n\nAs we lifted off, I noted the dazed and weary look of many of my fellow travelers -- the tell tale signs of a weekend in Vegas. I realized that I had a stupid grin on my face that I would need to lose before I got home. My wife was incredible when it came to this arrangement, but I found it was best kept out of sight and out of mind. I looked out the window, watching the skyline of the strip fade from view as we took to the skies.\n\nUpon landing at home, I turned my phone back on. It immediately buzzed with a message. Glancing down, I saw it was group text with Alexandra and Tova.\n\n\"Confirmed we are all a go for next year's conference,\" Alexandra wrote. Apparently her and Tova had already been discussing this privately.\n\n\"So looking forward to it. Maybe I'll get in on the video making this time,\" Tova wrote back. Of course Alexandra had shared it with her.\n\n\"Sounds great. Maybe we even rent a cabin or something more private,\" I replied back.\n\n\"Yes please!\" Tova wrote.\n\n\"Love it!\" added Alexandra. And then she added a private text just to me, \"Love you, not sure I can wait a whole year to see you again.\"\n\n\"Well, let's find a way to fix that,\" I shot back.\n\nHer last text just said \"Absolutely\" with a smiley face blowing a kiss."
    ],
    "authorname": "rainydaypeople",
    "tags": [
        "threesome",
        "anal",
        "oral",
        "oral sex",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-conference-37"
}