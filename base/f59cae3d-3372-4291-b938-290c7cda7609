{
    "title": "Counter Surveillance",
    "pages": [
        "One - Lexi\n\nSharon 'Shaz' Johnson purred and rolled over to give me a last, long, lingering kiss. There was still some residue of her husband Richard's cum on her cheek and there was certainly still plenty of it on mine. She glanced at him, kneeling on the floor next to the bed we were entwined upon, his once impressive erection now a thing of memory, a last dribble of cum that we somehow had missed dripping onto his inner thigh.\n\n\"Well pay the nice lady then, ya tight-arsed little shit!\" Her gravelly Cockney accent always grated on me, but she was great in bed and the way we teased poor old Richard was right up my street. We had cavorted in front of him for almost an hour while he watched on, tied and helpless until Shaz was finally sated and allowed him release.\n\nHe knelt up, sweat glistening on his chest and matting his silvery grey hair. His voice was very different to hers - refined and mellifluous. \"Certainly, my sweet.\" He reached into the pocket of his jacket hanging on the back of the bedroom door and pulled out his phone. Within a few seconds, I heard a chime on my own phone to say that the transfer had gone through.\n\nI nodded. \"Thank you, Richard.\"\n\nShaz glared at him, her huge false eyelashes batting. \"Now you fuckin' well thank the nice lady or I don't blow smoke on yer cock next time!\"\n\nRichard looked at me clearly embarrassed, his lined faced reddening. \"Apologies. Thank you, Miss Lexi. That was most satisfactory as ever.\" He hastily began to get dressed.\n\nFive hundred pounds for around ninety minutes. I didn't consider it to be work - why should I? I was getting paid for something I loved doing anyway. I was making up for lost time. I'd had seventeen years of sterile, boring sex with the guy who had been my childhood sweetheart and became my husband far too young. The last four years since my divorce had been far more fun and if as they say, life begins at forty, I only had a few months left until I could let my hair down and really begin to enjoy myself.\n\nShaz's strident voice lifted me from my reverie. \"Love this new place o' yours, Lexi - right cosy like. Much better than bloody London! See ya in four weeks then!\" She was stuffing her oversized, over-enhanced breasts into a bra that could have doubled for a hammock. Just the thought of having that sort of work done to me made my eyes water and when she had told me how much Richard had paid, they almost started bleeding.\n\nDespite being the epitome of the word 'chav', I always looked forward to the sex with Shaz, but I was also usually glad to see the back of her and her rich husband. She was a bit of rough alright, with her fake tan, enhanced breasts and lips and piercings in places that made me shudder just to think about. But boy, could she fuck and the torrent of filth that emerged from those over inflated lips as she commentated on our sessions not only drove poor Richard to the brink, but spurred me on as well.\n\nOnce I heard the front door close, I turned out the remaining dim lights and walked to the window. She was tottering down my driveway on high heels that she could barely walk in, the inevitable cigarette on the go, chattering away in her abrasive accent; the complete antithesis to her gentlemanly, refined husband.\n\nHe was wealthy, much older than her and she had him around her little finger. She was late twenties and he was just one side or other of sixty. She loved cuckolding him as much as he loved it himself. \n\nSimilar to my story, when he was widowed in his fifties, he decided to fulfil all his pent-up fantasies and more or less paid Shaz to be his wife and tormentor. I knew they saw escorts other than myself and judging by the marks I had seen on Richard's thighs and buttocks on occasions, I could only imagine what went on. It appeared that he loved to hear her tales of dogging and 'fuckin' anyfink wiv a pulse', in her own inimitable words. He was like a puppy on a leash and if she had free reign to do as she pleased, she certainly made sure all of his little perversions were very well taken care of.\n\nShe had told me once when we were alone that she was purely in it for the money. \"He's alright, bless 'is little 'eart. I Iove teasin' the shit out o' the poor old bastard but once 'e pops 'is clogs, I'm set up fer life!\" \n\nBut he was happy and that was all that mattered to me. He had never so much as touched me in all our liaisons - when Shaz told him it was time, he would tear the tissue paper bonds that held him captive and obediently walk over to her and unload on her paean to the breast-surgeons skills. The tissue paper made it all the harder for him; we had started with him being strapped to the chair arms with Velcro, but Shaz had decided that wasn't nearly enough. Even one session with ribbons had not made it hard enough for him, so she decided on tissue paper. If he so much as tore a single millimetre of it, he would not be allowed his release - at least not on Shaz's tits. Sometimes his knuckles were white as he gripped the chair-arms, desperate not to tear his bonds and forfeit his prize as he watched us turn each other inside out. So far, he had been successful and I had always got to share his load with Shaz as I licked her breasts clean and we swapped the cum from mouth to mouth.\n\nI saw her take one last drag and grind out her cigarette under her heel as she got into their very upmarket silver car, her boobs bursting out of a leopard-skin print dress. I turned away, brought up the lights a notch and went into the bathroom to clean up the last of his mess before a nice long session with a large glass of Chablis and a sex toy the size of a cucumber.\n\nI thought about doing one of my dirty-talking masturbation videos - maybe with a few naughty jerk-off instructions thrown in - but it was getting a bit late to set up the cameras. Instead, I got myself comfortable, sipped my wine and fired up my fave rabbit vibe.\n\nI had come a long way in a short time, and in that time, I had come more often than the previous seventeen years combined.\n\nIt was both a kick in the teeth and a relief when I found out the reason I had been so neglected in the bedroom for so long. My dear husband was fucking the living shit out of his secretary and had been for years - doing all the nasty things to her he should have been doing to me. It was she that told me, the smug little cow. At least she wouldn't have been able to blow him for a while with a split lip. I nearly broke my bloody hand doing it, but it was worth it.\n\nOh well, at least the pent-up frustrations that had been building in me over the years could now be acted upon. It only took me two weeks after the split to begin to make up for lost time. I picked up a guy in my hotel on a business trip to America. I did more things in the three nights we spent together than I had done in seventeen years of courtship and marriage. When he went down on me, I almost wept when I thought of never having had that done to me before. My dear husband could never bring himself to do it, and as for me going down on him - that was what whores did, apparently. Whores and his secretary of course.\n\nWell, I certainly became a whore on those three nights with Grant Palmer from Chicago Illinois, and my life was never the same again. One feel of that silky, smooth head sliding between my lips and I was hooked. My first attempt at sucking cock was at thirty-five years old, and by my third attempt, Grant was mewling like a baby as he shot across my cheek and I sucked him dry.\n\nA few weeks later, I was on another business trip to Berlin. I hadn't a clue that the bar I was in was a preferred haunt of those who liked the company of their own sex. A dark-eyed, tousle-haired girl came onto me and instead of running like hell, I decided to go with it and see where it took me. If I thought Grant had felt good between my legs, Birgitte was ten times better. I barely spoke German, she barely spoke English, but we understood each other perfectly.\n\nAs she left my hotel room, I grinned up at her and held up a single, sticky finger. \"First time - vir gut!\"\n\nShe had grinned back, a slip of a thing almost half my age. \"Fucking gut, ja. Not last?\"\n\nNo dear Birgitte, wherever you are. It was certainly not my last and it was fucking good.\n\nMy first year post 'Big-D' as I called it was a blur. I stopped thinking negatively about wasted years and lived for the moment. My job took me to many exotic locations and soon I had lovers of both sexes in most of them. In Munich, another German girl introduced me to light bondage and I became addicted to that. She took me to sex clubs and I got off with complete strangers and had my first threesome with her and her well-hung boyfriend. She asked me if I had done it with two guys before and I said no. Three nights later, I was able to say yes and it was wonderful. Ingrid watched on as her boyfriend Gerd and his friend Alex spit roasted me. I had my first cum-swap with her and have her to thank for so much. We haven't seen each other for a couple of years, but we keep in constant touch and our little WhatsApp group is very active indeed.\n\nIt was when I got overlooked for a well-earned promotion that I decided I'd had enough of the daily grind. I mean the work kind- the other daily grind was becoming an absolute necessity. I was sick of travelling despite the obvious attractions at the far end and it was getting to be a chore to even work from home I hated the place so much.\n\nOver the previous two and a half years, I had built up a wardrobe of all sorts of clothes to satisfy my lovers and myself. There was a nice little collection of fetish gear, a wide range of sex toys and if what I kept hearing from my widening circle of intimate friends was true, Alexis 'Lexi' Kennedy was becoming very accomplished indeed in the art of sexuality.\n\nThere was no doubt in my mind what my next job was going to be.\n\nI looked at websites that offered escort services around the London area and, as my American boss used to say, did the math. To use another of his clich\u00e9s, it was a no-brainer.\n\nMy notice period was three months and for the latter two I was working two jobs - one handing over to a new sales liaison officer with an international finance house, the other as a newbie, high-class escort.\n\nWithin weeks I was getting rave reviews and my portfolio of things I would do expanded rapidly. The work was incredible, the people I met were wonderful and the agency were a dream to work for. I sold my old terraced house in the western suburbs that was my half of the divorce settlement and set up in a lovely little village in the countryside about fifteen miles out of the city. It was easy to get back into London for outcalls and overnighters and the house seemed discreet, down a pretty little lane on the edge of the village. There was only one other property, so my home visits were kept nicely private and away from prying eyes. I loved the fact that my house had a name, not a number and my new address of The Willows, Foxholes Lane, Leybridge made me feel quite proud that I was moving up in the world. It certainly sounded better than 189 Molton Street, East Croydon.\n\nI usually worked solo, doing everything from quickies for visiting businessmen, through all kinds of classy cosplay to light bondage and tease and denial. Those were amongst my favourites and I loved edging and long slow blowjobs that kept the guy on the brink for an eternity.\n\nBut my absolute favourite jobs were the dinner dates. Fine food and wine at one of the top London restaurants followed by a long, depraved evening in a sumptuous Park Lane hotel. And of course getting paid big bucks for it. What was not to like?\n\nOccasionally I teamed up with other girls when something a little raunchier was called for. My favourites to work with were Faye and Zdenka. I adored Faye and loved to slowly part her gorgeous dark-brown pussy lips to reveal the pink coral wonder within, watching from close range as a long hard cock slid home and she groaned in genuine ecstasy. Zdenka, also known to us as 'Zed', could suck a golf ball through a metre of hosepipe and shared my insatiable appetite for cum-play. I was doing a foursome with her soon and couldn't wait to see that wide, sultry mouth in action once more.\n\nIt took hard work and dedication though, and I kept myself fit with at least five gym sessions a week and a couple of runs. I had signed up for a local 10k charity run to make sure I stayed with the programme and was getting my times down to well under an hour so was pretty pleased. \n\nAlso pretty pleased was the local beauty salon in the village, Abigail's Beauty Spot, as I became their new best customer. Abigail soon became a confidante of mine and when I was the only one in the salon, or down the pub after hours, she loved me to regale her with tales of my latest exploits. She was married with two small children and had no inclinations to do anything similar herself, but said it spurred her on in her own bedroom and her husband was very pleased indeed with the changes in her.\n\nI also had a reminder of my rebirth. Zed had been with me when I'd had a phoenix rising from the flames tattooed on my right shoulder blade with the year beneath in Roman numerals. I'd never been a fan of tattoos, but I needed something to mark my transition and it seemed appropriate.\n\nAs my faithful rabbit did its work, I gasped as I felt myself flood onto the towel I had strategically placed on the bed for such eventualities. I purred as I removed it, licked it clean and washed it down with a big gulp of Chablis. I relaxed my stiffened muscles - my legs had been taught as my buttocks rose from the bed in my orgasm - and let out a long sigh.\n\nThen my heart nearly stopped as I heard a tap on the window.\n\nI looked up in disbelief as I saw a drone hovering outside my bedroom window. A fucking drone!\n\nMaybe my new little bolthole wasn't as private and discreet as I had thought after all.\n\nI was being watched and I had probably just been seen by someone sucking a load of cum from another woman's tits then wanking myself silly.\n\nIn a daze, I turned off the bedside light, got up and walked towards the window. I saw a flash as the drone shot upwards and out of sight. I peered out into the winter gloom but nothing was revealed to me.\n\nI drew the curtains and went back to bed. During my second session with the rabbit, I realised I should be appalled, but was quite turned on. I love being watched. I love watching.\n\nI knew it couldn't have been Abigail - she had sworn herself to secrecy and I trusted her. But someone was watching me and somehow I had to find out who the fuck it was and how long it had been going on.\n\nTwo - Ben\n\nAlthough we were close to London, it was still a pretty small village, and to be honest, at my age it was a complete bore. There were no girls of my age locally and once Becky, my girlfriend from school had gone to University, I was single once more. I was nineteen, working part time in a music shop a few miles away, failing dismally to get a band together and craving for someone to spend long, blissful nights with. I had deferred going to Uni for a year as there had been a great chance of joining a local, upcoming band as rhythm guitarist, but after what seemed like interminable auditions and false promises, I was ditched in favour of a seventeen-year-old girl who knew about three chords.\n\nThe singer took me to one side. \"Sorry Ben, but she'll learn. She can do great backing vocals and she's fucking hot.\" I've seen them on YouTube and she certainly is hot and can sing, but she's a bloody useless guitar player.\n\nJust about the only ray of sunshine on the horizon as winter set in was the arrival in the village of a new resident. And if the girl that got my place in the band was hot, this lady was fucking incendiary.\n\nShe moved into the house down the lane from us on the southern edge of the village and I kept catching sight of her as I practised my guitar and tried to hone up on my keyboard skills as a backup. \n\nMy bedroom window overlooked the lane and I got frequent glimpses of her as she walked to the station or got into or out of taxis, usually with an overnight bag in tow. I had no idea what she did for a living, or whether she was single, married, divorced or in a polygamous relationship with half of Surrey.\n\nThe one thing I did know however was her first name. I was doing something in the front garden one morning to help out my folks when she came by in a rush, booted feet crunching on the gravel. I could see her tapping agitatedly at her phone and she sounded flustered as she spoke. \"Hi, it's Lexi - look, sorry but I'm running a bit late-\"\n\nThe rest was lost to me as she moved out of earshot, but at least I now knew her to be Lexi. I would have said she was mid- to late-thirties and it was the swirl of deep red hair that did it for me the most. Shoulder length, it seemed to flow around her like silk and when the sun shone, it also shone. The contrast with her amber coloured eyes was gorgeous. She was always immaculately made-up and dressed and as the last vestiges of autumn turned to winter, I never saw her without her long leather boots.\n\nOne pair were the deepest red, matching her hair. Another pair were shiny patent leather. There was a dark brown pair with laces up the front and another dark grey pair with buckles and rivets everywhere. The one thing I could never determine was how far they went up her legs, but I could only imagine. She always wore knee length coats and as far as I could tell, the boots were still going strong as they disappeared beneath her hemline.\n\nI began to imagine those boots sliding over my back as I lapped at her flaming red bush, Lexi calling my name as she flooded into my mouth before taking me in hers. I had a big thing for redheads and an even bigger thing for leather. I have no idea why, but it got to me every time. When Becky had bought a pair of boots one winter, I could barely keep my hands off her and in the end, I practically had to beg her to keep them on when we were making out. In hindsight, it was probably part of the reason I became history when she went to Uni. \n\nI kept hoping some hot rock chick would turn up at the music store, but it was usually little kids with parents buying trainer violins or ukuleles. I longed to be able to show a wannabe Lady Gaga or Ellie Rowsell around the guitar section, but as usual, my dreams went unfulfilled. I played ditties on the uke for children, not Gaga or Wolf Alice covers for sexy babes.\n\nI couldn't work out Lexi at all. Sometimes I'd not see her for days, then there would be a flurry of activity - visitors to her house at all sorts of strange times. I would hear the crunch of tyres on the gravel and strain my eyes to see who was calling. There were a few single men, the odd woman by herself and there were a few couples - none of them I recognised from the village. One particular couple struck me as being very strange - a younger woman with an almost laughably fake orange tan, huge boobs and lips that looked like they had been inflated with a bicycle pump. The dresses she wore showed off her impressive assets, but they looked tacky - usually leopard-skin print or bedecked in shimmering sequins. The man with her must have been her father but looked totally different to her, with silvery-grey hair and immaculately dressed in a blazer and tie.\n\nMy mum had seen a few comings and goings and she assumed the woman was some sort of business consultant. Her son Benjamin began to have other ideas and decided to try and do a little detective work to see just what the new lady in the village was really about.\n\nI got my first chance a couple of weeks later when my folks went up to London one Saturday for a meal and a show. My older sister had moved out a couple of years before and my twin brother had more sense than me and went to University at the first time of asking. Sometimes I found it all a bit lonely, but at times like this, I could crank up the volume. With no neighbours to worry about, the walls were soon shaking and the windows rattling as I started working on an idea I'd had. The rough bass and drum machine tracks thundered along as I tried out all sorts of guitar effects, but for some reason nothing was gelling. ",
        "I was playing so loud I missed the tell-tale sound of tyres on gravel, but as the car passed by, I could see headlights as the afternoon darkened into evening. If this Lexi lady really was a business consultant, it was a strange time to be having a visitor. Down the lane, I saw the car come to a stop on her wide parking area. It was about sixty or so yards from our house, so I couldn't see much, but I certainly saw a pool of light as her front door opened and she welcomed her guest inside - a man on his own, but I couldn't tell much else from that distance.\n\nI played on for a couple of minutes and was about to have a break and grab a beer from the fridge when I saw a light come on in the upstairs of Lexi's house. It was partially hidden by trees so once again I could see very little. The problem was, I needed to see a lot more as I was now extremely intrigued.\n\nAs came back up with my beer, I passed the door to Adam's room. He was a keen bird watcher and had a very expensive birding scope. I was sure he wouldn't have taken it to Uni with him as it was his pride and joy and cost him a fortune. Sure enough, it was by his window, pointing into our back garden, awaiting his return.\n\nTwo minutes later it was in my bedroom and I was frustrated as I managed to get the window nicely framed in the scope, but the trees were still obscuring the view. I sat, racking my brains - there had to be some way of getting a decent view. There was probably nothing to see, but I was on a roll now and needed to know. \n\nThen I had an idea. It took a while to come to fruition, but it just about worked. Getting the bird scope safely up a loft ladder and through a narrow hatch into our attic was not the easiest thing to do on my own and I dreaded dropping it. I then needed to prop it up on something so I could see out of the high dormer window. I managed to pile up a few packing crates that had goodness knows what in them and got the scope pointing vaguely in the right direction through the window. Now I needed something to support my weight so had to go back down to get our ladder stool from the kitchen. That also took some getting into the attic and I imagined my folks returning from their day out to find their son dangling from the hatch with Adam's scope in bits on the floor.\n\nFinally I was set up and stepped onto the stool. There was still a bit of the window obscured by trees, but I was able to frame it pretty well. To my delight, the angle was perfect. I twiddled the focus knob and was aware of a voice saying, \"You've got to be fucking kidding!\"\n\nIt took me a moment to realise I had said it out loud. I felt my eyebrow bumping against the eyepiece of the scope as I began to tremble, my heart now racing. I swallowed hard as I fine-tuned the focus. I began to harden down below as I watched what was unfolding a few yards down the road from my house.\n\nI now knew what the visitors to Lexi's house were doing.\n\nThey were having sex with her.\n\nIn watched for ten minutes, my mouth open, my heart thundering and my erection straining at my trousers. Lexi had her back to me and was obviously straddling her visitor. Her long back was arching as she slowly rode on him, her buttocks gyrating each time she came back down. They were being gripped by big hands and she had her head back, her glorious red hair cascading down, her own hands seemingly clamped to her breasts. Her mouth opened wide and I groaned out loud as she began to go harder, her hair now flying around her head. I wished I could hear her cries of ecstasy, but it was like watching a porn movie with the sound turned down - something I was quite used to doing. She jerked and spasmed her body three, four times, her hair falling across her face and fell forwards, still obscuring her visitor. Her head began to bob and I moaned again as I realised how this was going to end. As he lifted his buttocks from the bed, I saw a fleeting glimpse of his erection in her mouth before her hair covered her face again and he sank back down.\n\nI couldn't help myself. It barely took one touch and I was shooting my load into my underpants, hanging onto the scope with the other hand, desperately trying not to knock it over from its precarious perch.\n\nShe flopped down beside her lover and a big arm went around her. He looked a fair bit older than her - just an ordinary middle-aged guy.\n\nAn ordinary, lucky middle-aged bastard that had just been fucked by this redheaded Goddess and come in her mouth on a late Saturday afternoon. If he had been at home, my Dad would be watching the football results. This guy had just driven from heaven-knew-where to have sex with a drop-dead gorgeous woman called Lexi and a sad nineteen-year-old called Ben Laidlaw had just watched him do it and come in his fucking pants.\n\nIt took me half an hour to get everything back down. Firstly, I washed the worst from my undies. I then spent ten minutes drying them off with Mum's hairdryer before gingerly getting Adam's scope back into his room without wrecking it, then retrieving the ladder-stool without braining myself.\n\nI was vaguely aware that my folks were back somewhere around eleven, but by that time I was on my third video of a redhead blowing a guy. Once again there was no sound, but at least I was more in control of how and when I came. As I did, in my mind Lexi was calling my name as I unloaded between those lovely lips.\n\nThree days later, she did say something to me. It was only, \"Hi,\" and I kind of set it up, but at least she had acknowledged my existence. I was just finishing getting ready to head for the bus into the local town for a day at the music store when I glanced out of my window. I saw her front door open and there was a flash of red as she emerged into a crisp, sunny morning. She would be walking in the same direction as me - at least for a short while - so urgent action was needed. I grabbed my coat, raced downstairs, shouted goodbye to my Mum and timed my emergence from our drive onto the lane perfectly as I heard her boots on the gravel, approaching fast.\n\nI almost whimpered when I saw her. Her hair was held back in a yellow band and she was wearing a tight leather jacket that seemed to cling to her curves. For once, she was wearing jeans and for the second time in a few days, I almost shot in my pants as I saw boots over the jeans - my favourite dark grey pair, this time in all their glory. They went to just past her knees and had a little turnover on them. Already I knew how my late-evening fantasy was going to unfold. As always when on the move she had her phone in her hand. As she passed me, she was holding it up to her ear. She saw me standing at the end of our drive and her head turned. Those lovely pink lips that I had last seen wrapped around a middle-aged man's erection opened slightly and she gave me a little smile. I barely heard the semi-whispered, breathy \"Hi,\" as she quickly turned away and began to talk into her phone as I nodded shyly back at her. She was wearing red leather gloves and I wanted nothing more than to feel her take me in her gentle grip as she guided me to those soft lips.\n\nDisappointed I wasn't going to be able to walk alongside her and maybe even rustle up the courage to say something more meaningful, I set off behind her, trying not to crunch the gravel too hard so as to hear what she was saying. \n\nHearing her talk for the first time properly, I liked the sound of her voice. It was low, sensual and just a little husky. I heard her say, \"Hello,\" then there was a longish silence. I strained my ears to hear her. \"Yes, I've got Shaz and Richard at eight but don't mind doubling up. Two-thirty, Thursday then. Yep no probs, thanks Jenny - he's usually pretty quick!\" There was a bit of giggling then, \"Yes, busy day ahead - just heading to Abigail's to look pretty then it's off to Richmond. Nice easy train journey but I'll need a taxi back after those two are done with me!\"\n\nShe reached the end of the lane and walked into the village towards Abigail's Beauty Spot. My mind was racing as I got on the bus. It all sounded so innocent until you put the pieces together. I could only assume she was heading into Richmond later for a threesome in some hotel. I wondered if it would be two guys double-teaming her or two women and a guy. Whatever, I wanted to be one of those guys - preferably in the second scenario. I was working on Thursday afternoon so I would miss her two-thirty; but the evening with Shaz and Richard? No problems. Mum and Dad had a bridge tournament in Reading. It was miles away - they'd be late back and I'd have the place to myself.\n\nI couldn't risk Adam's scope again. There had to be another way. Luckily for me it was a school holiday week. Luckily for me, as the bus pulled out of the village, I saw twelve-year-old Maisie Weaver throwing a ball to their dog Archie in their front garden. Luckily for me, her thirteen-year-old brother Tommy was trying to film it all from his drone and poor old Archie was frantically trying to catch the ball or the drone, whichever came closest. \n\nThere was a bit of laughter on the bus at the poor dog's torment, but in the front seat on the upper deck, a nineteen-year-old boy was laughing at his own ingenuity. He couldn't afford a particularly flashy model, but it didn't have to be flashy. All it needed to do was hover outside of Lexi's window while he controlled it from the attic a few yards away.\n\nIt was delivered by Amazon Prime early the next morning. My folks were at work, and instead of my usual guitar practice, I was out in the back garden, learning how to control my new acquisition. It took me a few hours with a good few battery recharges, but in the end, I was getting quite good at it. I just prayed I would be able to control it from the attic when it was hopefully relaying pictures of the divine Lexi in action. I reckoned I would get about ten to twelve minutes of battery use for each of the two batteries I had, which wasn't as much as I had hoped for, but it would have to do.\n\nThere was plenty of time between my folks leaving for their tournament and eight o'clock. I got myself set up in the attic and waited for the crunch of tyres along the lane. I had come to love that gravel. It was primarily there as an intruder alarm - no-one could walk quietly on it, but now it was a Lexi-proximity sensor for me and it was a Godsend.\n\nI didn't get much from the first voyage of my new toy as it took me a few of the precious minutes of battery life to get it into a decent position. It was just a huge relief that she hadn't closed her curtains.\n\nThis time, the view was much better than the scope. I positioned the drone so that it was just under her eaves, pitched downwards so that it took in the scene below perfectly. It was the odd couple I had seen arriving a few weeks earlier. They must be regulars and it took me a moment to recall their names - this must be the Shaz and Richard Lexi had mentioned on the phone.\n\nRichard - assuming it was he - was sat in an upright chair with his back to the window and facing the bed. He was sitting impassively, his arms on the chair arms, watching the scene that unfolded in front of him.\n\nAnd what a scene it was. The big-boobed girl was between Lexi's legs, her hair in a tight ponytail. Her back and arms were heavily tattooed and now I could see more of the fake orange tan, she really was pretty gross. I felt sorry for Lexi, but she seemed to be enjoying the girl's ministrations. Her lovely mouth was open and now I could see her breasts, they were utterly gorgeous. Pointed and conical, they were the complete opposite of Shaz's. They changed position and as Lexi moved on top, her hair swung away from her shoulder and I saw a small tattoo there, again so much more elegant than anything adorning Shaz, who's boobs were now fully on show and I almost burst out laughing at the size of them. They were truly ridiculous and looked like they would pop at any moment.\n\nThe girl was looking straight at the guy in the chair and I could see her mouth moving as she spoke to him, pointing from her boobs to Lexi, who now moved up and began to suck on the fat, puffy nipples. As they began to kiss, Shaz was moving her hand in a masturbating movement and I expected the guy to begin, but he still sat impassively.\n\nI missed the next few minutes as I need to change the battery, so I plugged in a fresh one and sent it back to do its job while recharging the first one. By the time I was back in business, the women had upped the ante and Lexi was firing into Shaz from behind with a large strap-on. Her huge tits should have been bouncing and wobbling under the barrage, but they were immobile and stiff as boards. It looked like she was keeping up her tirade at poor inanimate Richard and I had no idea what his role in this was other than to suffer as badly as I was doing.\n\nLexi pulled out and dragged Shaz round by the ponytail. The woman went down on the dildo, taking the whole thing down her throat. It was huge and despite finding her unattractive, the thought of her doing that to me got me stroking myself down below until I managed to regain control of myself before I lost control of the drone.\n\nJust when I was getting a little worried that I may have to recall it without seeing the endgame, Shaz knelt up and beckoned Richard forward. He stood unsteadily and walked the few steps separating them. For his age, his erection was pretty impressive and made me feel a little inadequate. Shaz snarled an instruction at him and he jerked himself twice. She looked at him in contempt as he shot over those two silicone monstrosities and slumped to his knees. Shaz held them up to Lexi, who began to lick and suck at the mess he had made. I prayed the battery would last as they began to share the cum between their eager mouths, kissing and spitting it at each other until there was none left.\n\nThe last thing I saw was Shaz snarling at Richard a second time and him reaching for a mobile phone before I hit the recall button.\n\nI was dying to see the results on a bigger screen, but that would have to wait. Fifteen minutes later I saw the bedroom light go off and a pool of light appear at the front door. I could just make out the couple walking to Lexi's parking area, the glow of a cigarette in the dark. Then the headlights came on, the gravel crunched and assuming the show was over, I was about to pack up and re-watch the evening's action. Then the bedroom light came on again and stayed on.\n\nI waited another twenty minutes until the spare battery was cooked and sent my little friend back out into the night. Lexi was lying on her back, legs wide apart, showing her beautifully trimmed red Brazilian. I ached to get down there and smell and taste her.\n\nAgain I was so tempted to play with myself as I watched, but I dared not lose control of the drone. It hadn't really occurred to me the trouble I'd be in if I was discovered. Instead, I watched on as she used a wicked looking vibrator on herself. Her buttocks arched off the bed, her legs braced, and her mouth flew open. She shuddered a few times in that position then smiling, stretched out, reaching for a wine glass on her dresser.\n\nIt was then that I made my mistake and jerked the joystick a little too hard. The drone shot forward and hit the top of the window. The look on the woman's face must have mirrored my own as I realised what I had done. I saw her scramble up off the bed and as the bedroom light went out, I hit the recall button praying she wouldn't be able to follow the flight path in the darkness.\n\nI couldn't bring myself to look at my footage that night - I was still in shock at my error. Once I had recovered my equilibrium, I went through it again the next night and despite the pneumatic Shaz, found myself getting very turned on, especially the ending with their cummy kiss. I must have replayed Lexi's solo orgasm a dozen times and tried on the last occasion to time my own with hers. I had deleted the last minute when my indiscretion was discovered and wondered if I would ever have to courage - or more likely stupidity - to try a stunt like that again.\n\nThree - Lexi\n\nI wasn't around for most of the next week. I had a few hotel assignations up in London, one of which involved a two-star Michelin restaurant followed by a night with a large American lady who had an appetite for fine food and drink that certainly matched her appetite for sex. \n\nThen there was one of my favourite new scenarios. It was an outcall and I had done it twice before, but it got better each time. It was a little chilly to start with, but I soon got warmed up when I was caned for smoking. It began in the back garden, with me in a schoolgirl uniform unlike any I had ever worn in my younger days. My fishnets were ripped, my boots were past my knees, my shirt undone and my tie hanging round my neck. It was bloody cold, and I couldn't wait to get indoors and start the real action. As my 'teacher' rounded the corner, I had a cigarette dangling from the corner of my mouth. I still didn't like that bit, but he paid me well for it. I was made to lean over his desk and my punishment began. Six of the best with a cane that at least he had modified with some foam rubber so it didn't hurt too much. Again, not my favourite thing, but with every swish I thought of the extra twenty pounds I was earning for each small tap on my bottom.\n\nHe was a little younger than me, fit and pretty good looking. Back in the day he really was a teacher and told me he had once had to discipline a girl for smoking. Of course it ended in detention, not caning her and fucking her brains out, but it had left a lasting desire in him that lingered long after he left the job.\n\nAs the last blow struck home, I braced myself. I had prepared well with an enema at home and had applied lube liberally before I went out into the garden. He leaned in and whispered in my ear. \"What is your punishment to be, Alexis?\"\n\nI looked over my shoulder at him, my voice hoarse, almost unable to wait for the pleasure to come. \"Fucking fuck my arse Sir. Fuck my arse until I scream then shoot you fucking load on my face.\"\n\nI gripped the desk edge and screamed in ecstasy as he slammed home into my darker passage, his balls hitting my buttocks as I forced myself back onto him. He did exactly what I had asked and took over twenty minutes to do it. Three years earlier I had never so much as had a finger inserted in there. Now I couldn't get enough of it. I came so hard I thought I wouldn't be able to speak for a week as he slammed home, his big meaty hand rubbing at my slippery crack as I squeezed my clitoris and shouted the place down.\n\nThen I knelt in front of him and ripping his condom off, face-fucked him until I could taste his pre-cum. He came as hard as I had done and as I cleaned up in the bathroom, I heard my phone notification inform me of more incoming cash.\n\nGetting paid for an arse-fuck like that? It was just ridiculous and I still sometimes couldn't believe my luck.\n\nBetween my sessions, I started to put my mind to who might be behind my little drone strike. It took me very little time to realise I had no real clue, so I decided to confide in Abigail. We had just finished a facial of the more genteel kind and I walked with her to the primary school where she picked up her two kids aged four and six. We had become good friends and I liked her a lot. It was nice to be able to talk to someone about what I did and not get judged. The kids were good as gold as we sat in the pub, playing happily as their mother and I discussed very different matters in hushed tones. \n\nAbigail pondered for a moment. \"Seems a bit weird to me. Never heard of anything like it and I've lived here most of my life. I know the Weaver kids have got a drone, but they mainly use it to scare the daylights out of their poor pets.\" She sipped her lager and helped Aggie colour in a cat in a vivid shade of green. \"No, not sure I can help, Lex.\"",
        "I took a drink and shook my head. \"I don't know anyone else really. I've no real idea how far drones can go or how long they can fly for.\"\n\nAbigail carefully coloured in a blue sheep. \"Not long I don't think - no more than a few minutes, so they can't have got much footage. Not sure about range, but I expect they'd have to be fairly close by.\" She looked up. \"Pretty sure there's rules on getting near people and property, so it's a dead cert they're breaking the law.\"\n\nI had checked and that was certainly the case. I had no idea what I would do if I did find out. It wouldn't exactly be easy to go to the police and tell them I had been filmed by someone whilst having paid sex with an elderly man and his trophy wife, then fetching myself off with a big blue rabbit vibrator.\n\nI took a long pull on my lager. \"What about the lad that lives near me? Only seen him a couple of times but I hear him playing his guitar. Seems a nice lad and he sounds pretty good.\"\n\n\"Ben Laidlaw, lives in The Larches. Yeah, a good lad. Still can't tell him and his twin brother Adam apart after all these years. Helps now Adam's away at Uni! He was on the brink of getting into a local band destined for big things but he got shafted. Shame really, coz he is pretty good. Nice family - I do his Mum's hair and his sister still pops in when she's in the area.\" She finished her drink. \"Can't imagine it's him, but he does live close enough.\" She began gathering up the colouring books and pencils that covered the table. \"Right, thanks for the drink. Time to get these tinkers back for their tea. Hope you find the culprit soon, Lex and sorry I couldn't help.\"\n\nI stayed on for another drink before heading home. I had a quiet night in store for a change so I was going to settle down and catch up with some programmes I had missed over a bottle of wine and some leftover curry I had taken out of the freezer. As I walked down the lane to the house, I looked up at light coming from an upstairs window of what I now knew to be the Laidlaw residence. I could see Ben, headphones clamped to his ears, right arm hammering at what looked like a Rickenbacker guitar. At his age, I thought it must be a copy - my ex-husband had always lusted after one and I knew they were expensive. I laughed ruefully as I thought that if he had lusted after me as much, we may still be together. \n\nOh well, every cloud has a silver lining, eh?\n\nAs I looked up, Ben gazed out and saw me. I had only said hello to him once, but I raised my hand and smiled. He smiled back and it was warm and shy. He was quite handsome in a youthful way - tall and angular with curly hair almost to his shoulders and a light, but well-kept beard. I pressed on and reached my front door, counting the steps as part of my detective work. I am quite tall but I doubt my stride would be a yard. I counted seventy steps, so probably fifty or sixty yards between our houses. He was certainly a possibility.\n\nLater, all caught up with my drama series, I sipped my wine and got to thinking. It was probably best to draw the curtains when entertaining clients in future. I decided that if I found out who it was, how I reacted was going to depend upon the culprit. I began to hope it might be Ben Laidlaw. He was a fit young lad and I seemed to be mainly sleeping with older men at the moment. It might be nice to have a little toy-boy on my doorstep. In that case, I'd leave the curtains open when going solo. Not tonight though - just a little me time and no prying eyes.\n\nI picked up my rabbit. Yeah, please let it be Ben - then I can really have some fun!\n\nFour - Ben\n\nI thought it best to keep a low profile after my little accident with the drone. Luckily for me she wasn't around much for a week or so. I had read the regulations and would really be in deep do's if I was found out. I kind of knew that before anyway, but the trouble was, it was like an addiction. I kept replaying the footage of her bottom arching off the bed, that look on her face. Then the loop I had edited of her slamming into Shaz from behind - the cum-swapping at the end. It was different to porn. There was much better-quality stuff out there of course - this was grainy and fairly wobbly, but I had made those movies and I had actually witnessed it live and longed to see more. \n\nIt didn't help when one night I was practising and saw her coming down the lane. I tried not to stare, but of course it was a forlorn hope. I glanced out of the window just as she smiled and raised a red-gloved left hand. She tucked her red hair behind her ear as she walked on down the lane and I could only give her a shy smile back. I waited for the bedroom light to come on, but it never did that night. I didn't get much more practising done either.\n\nWhen I plucked up the courage to do it again - or more accurately, the desperation took me over, I was disappointed. I heard the tell-tale crunch along the lane, waited for the bedroom light to go on and picked up my faithful little nightrider. As I did, I saw the light fade as the curtains were drawn. She was obviously taking no chances and I was denied.\n\nI had to wait another week until I got my chance. Thank goodness my folks were social animals so I had the place to myself a lot. Their bridge addiction helped and they were always travelling around the area playing in tournaments and on this occasion, they were including an overnight stay.\n\nThere was no crunch of gravel tonight and I had almost given up hope by the time I saw the bedroom light go on around ten o'clock. I stopped my backing track, put down my guitar and hoped. I waited with bated breath for ten minutes and no curtains were drawn. Was I going to get lucky tonight? Could I keep the drone hidden and avoid trying to crash land it through her window onto her bed?\n\nIt was almost ten-thirty by the time I was set up but at least no-one would be coming back to disturb me. I let the drone out through the skylight and it embarked on its third voyage across the lane, flying into the same position I had captured my images from before. As it approached the window, I could see a shape lying on the bed in the low light. I held my breath as it got closer. As it did so, there was a bright flash from the upper corner of the window. I froze in horror as I saw Lexi kneel up on the bed. My first reaction was to recall the drone, but I stood there stunned as if the flash had paralysed me. \n\nOn the monitor, I saw Lexi reach onto the bed and hold a large piece of white card up to the window. It took me a moment to focus on it and when I read the words, I felt ice in my veins. The words were written in huge, red block capitals.\n\nDO NOT RECALL OR\n\nWILL CALL POLICE\n\nShe held it there for a moment then turned the card over.\n\nWHO THE FUCK \n\nARE YOU?\n\nI stood there shaking like a leaf. The last time I had been in this position, I had come in my pants. \n\nThis time, I thought I would wet them a different way.\n\nShe put down the card and picked up a second one. It was a mobile phone number. She held it there for maybe thirty seconds then turned that card over as she had done with the first. I saw her giggle for a split second as she realised she was holding it upside down. She turned it the right way up trying to suppress her laugh. Laughing was that last thing I had on my mind. I was utterly terrified. I read the words and my heart sank deeper.\n\nRING THAT NUMBER\n\nIN 15 MINS.\n\nNOW RECALL\n\nAs she moved towards the window, she ran her tongue around her lips and smiled into the drone camera, gripping her breasts. The last thing I saw before I hit recall was her smiling, blowing a kiss to the camera.\n\nI tried to stay calm and not kill myself on the way down from the attic, but I managed to knock one of the propellers off the drone in my haste. It didn't matter - its job was done, one way or the other.\n\nI carefully wrote down the number she had shown me and picked up my phone. I could barely hit the numbers for trembling and I had to correct myself at least five times. I checked it thoroughly twice before I hit the call button and as I had done when looking through the scope at her, I could feel the phone rattling against my ear and temple I was shaking so badly.\n\nIt seemed to ring for an eternity then there was a moment of silence. Finally I heard her voice. It sounded strangely calm in my ear.\n\n\"Who are you?\"\n\nI swallowed hard. My mouth was bone dry and my throat felt tight. I could feel the blood surging through my veins, my heart pounding. I tried to speak, but nothing came out.\n\nShe spoke again, this time more firmly. \"Who... the... fuck?\"\n\nI managed to find my voice and it all came out in a garbled rush. \"Ben. I'm Ben. Over the lane. Sorry, I... I...\"\n\nI tailed off in an incoherent babble and heard a little laugh down the phone. \"Oh, Ben Laidlaw! Hi Ben, how's it going?\" She sounded chirpy, as if she were talking to an old friend and before I could respond, she went on. \"How's life in stalker-land, eh? How's the creepy little peeping Tom today? Thought he might get off on the hot redhead sucking a big fat dick did he? Expect to see her licking cum from silicone enhanced tits again maybe?\"\n\nI tried to say something, but she interrupted me. \"Don't say a fucking word, Ben. This is my show, remember? You are going to do as I say from now on. You are mine to do as I please with. You are going to be my plaything and you are going to pay dearly for spying on me. Do you understand?\"\n\nI managed some sort of squeak down the phone that hopefully indicated my comprehension.\n\n\"Good. Now here is what is going to happen. If you do not do as I say in the next few minutes, I will call the police and tell them exactly what has happened here. Thanks to my infra-red camera trap, I now have a lovely image of your drone hovering above my window. Technology is a wonderful thing, as you well know. Surveillance, counter-surveillance. All so easy these days, eh? Just a click away!\"\n\nShe paused and sighed. \"But I need a little insurance, Ben. You probably have some nice juicy images of me, is that correct?\"\n\nAnother squeak. Oh shit, what was coming next?\n\nWhen she explained what she wanted me to do, I almost passed out in fear. \n\nDespite that, I did everything she asked then took the picture she requested and sent it to her phone.\n\nThen I didn't sleep a wink for two nights.\n\nFive - Lexi\n\nI wasn't sure if the camera-trap would work, but it was my best hope. It hadn't cost much and seemed like a good idea anyway. If anyone tried to get in through the window, there would be a nice mug shot for the local Constabulary and you never know - I might get some shots of cute little fox cubs in the back garden in the summer.\n\nIt was the fourth time since I had set it all up that he took the bait. I had lain on the bed with my little cue-cards waiting for the incriminatory flash to go off on three other occasions before getting bored and closing the curtains. I was beginning to think it was never going to happen, but I should have known he would be unable to resist.\n\nI have to admit, I nearly shit myself in shock when I saw the flash and realisation dawned that I was going to have to go through with my plan. I held my first card up praying whoever it was would be able to read it. When the drone didn't move, I turned the card over, politely asking for their identity.\n\nThen my phone number - it was from an old phone I kept for emergencies. No way were they getting my main number. Not yet anyway.\n\nI almost ruined the mood when I turned over my last card and it was upside-down. I managed not to fall into hysterics as the absurdity of the situation washed over me.\n\nI was relieved when I found out it was Ben. At least this was now controllable and it wasn't some gang of extortionists or blackmailers. Just a kid getting his kicks spying on a woman he fancied. I'd give him his kicks, but I'd make him sweat it. I'd eventually let him do the things he had probably dreamed about, but he'd pay for it and I'd have a great deal of fun extracting my 'revenge'. I wasn't going to hurt him - not physically, anyway. But Ben Laidlaw was going to have to be a very good boy and work very, very hard before he got to see my face coated in his cum.\n\nAnd that started right now. As I gave him his instructions, I tried to visualise his reaction. When the photograph came in, I texted him back.\n\n'Thank you, Ben. I now have insurance. Goodnight, sleep well. I will be in touch.' \n\nI looked at the picture and smiled. On a side table, there was a drone with one propeller missing, a control box and monitor screen with an image of a woman masturbating on it. It was grainy, but the woman had red hair and looked a lot like a high-class escort named Lexi Kennedy who lived at The Willows, Foxholes Lane in the village of Leybridge in Surrey. The boy in the picture - who had just ejaculated into his handkerchief whilst looking at the image - looked very much like nineteen-year-old Benjamin Laidlaw who lived across and up the lane from her at The Larches. \n\nI was sure that forensic evidence could determine the location as being the upstairs middle bedroom of The Larches - the guitars in the background and the band posters were a giveaway, and the picture on the screen could certainly be traced back to my bed, with my flaming red hair and the black satin sheets.\n\nI had my insurance ok, just in case Ben decided to pass the images on. The picture was a doozy and as incriminating as I needed. I poured the last of my Sauvignon Blanc and decided upon my own fair fingers that evening. I was wet just thinking about how I was going to torture poor Ben. He'd get his reward, but in my own good time. Before that, I'd put him through seven kinds of hell. I'd had plenty of experience of making grown men whimper over the last few years.\n\nA nineteen-year-old kid with a crush on me?\n\nPiece of fucking cake!\n\nI had told him I would contact him next, and any attempt to contact me would mean police involvement. I made him stew and waited until I'd had my next assignment before I got in touch. The assignment was the one involving Zdenka and I needed a specific image of us just to spice up his life a little.\n\nWhen I saw her sitting in the hotel wine bar, my heart lurched. For the first time in a long time, I thought of my wasted years. The once a week, then once a month missionary bump and grind. How had I come to be making love to strangers and working with Goddesses like Zed and Faye in such a short time? I suppose the blame was partly mine. Falling in love and getting married so young meant I didn't know anything else. It was only as time went on and frustrations grew that realisation dawned. I had begun to see things on the internet that made me feel differently, but it was too late at home. When Wendy Ingram had graphically told me one night what she and my husband got up to and I had smacked her in the mouth, the world changed. \n\nI initially thought it had caved in.\n\nThen I realised the cave-in had created an escape hole for me. I used the rocks and rubble around the hole to build myself a new life and emerged through that hole a different person. I looked different, I dressed differently and people looked at me differently. They began to notice me and that made me feel bloody good about myself after years of invisibility.\n\nPeople were certainly noticing me now as I approached Zed's table. I was wearing a dark blue silk geisha-style dress with a high collar and no sleeves. My favourite red boots set it off perfectly. I knew Christian loved me to wear them, so it was an easy decision. She rose and we hugged, air-kissing where in a few hours we would be sucking cum from each other and our kisses would be a little more urgent. She looked amazing - her sleek blonde hair contrasting with a simple, elegant black cocktail dress. She was tall and willowy with high cheek bones and a wide, sensuous mouth. I couldn't wait to see Jason's big cock slide in there later.\n\nWe would not be meeting our clients for a while so it gave us time to catch up. She regaled me with a tale of she and another girl blowing six guys on a rich-boys stag party which turned into a bukkake orgy. It made my schoolgirl tale sound a bit tame but she was purring by the end of it. When I told her about my drone strike, she looked dumbfounded.\n\n\"Jeez, Lexi - what the hell are you going to do with him?\"\n\nI laughed and took a sip of martini. \"Not altogether sure yet, but can I send him a pic of one of our cum-kisses later? I had an idea on the way up here!\"\n\nShe narrowed her eyes. \"Ok, but lips only. No way I can be id'ed, yeah?\" She paused. \"And only if you take the DP tonight. My ass is still sore from yesterday.\"\n\nAt least mine had settled down from my schoolgirl session so I agreed to her terms. And I knew now what was going to happen when I next contacted Ben.\n\nDinner was amazing and the foursome afterwards even better. Christian and Jason were old business friends who got together every few months when Jason was over from America. They were wealthy, gentlemanly and suave - both in their early forties, good looking and great physical specimens.\n\nAt least they were gentlemen until we got upstairs, then all hell broke loose. It always started a little like Shaz and I going at it, with Zdenka and I doing a little warm-up for the guys, although these two were not tied and teased like poor Richard. They were soon in the game and we were tossed like ragdolls between them, taking it in every hole, my favourite part being when we were both being taken from behind so I could kiss that gorgeous, pouting mouth of hers. It got even better when I straddled Jason and began to fuck in my favourite position. Zed face-sat him, facing me so we could suck our faces off and I moaned into her mouth as Christian slid effortlessly into my lubed-up arsehole.\n\nI grinned at Zed. \"Debt paid madame, I am penetrated doubly!\"\n\nThe feel of the two cocks stretching me was incredible. They were slow, gentle, and well-practised, so their rhythm was perfect as I fondled Zed's breasts, sucked on her tongue and thumbed her clit as Jason's tongue worked on her. She came, flooding onto his face, screaming into my open mouth, her long blonde tresses flying as she bucked on him. It spurred him on inside me and I knew it wouldn't be long. Christian pulled out and let his load fly as Zed and I kissed. Now free to go like the wind, I began to hammer down on Jason's erection.\n\nZed was licking the thick, sticky cum from my lips, and it was my turn to scream as I came hard, squeezing myself down against Jason's cock as I felt him spasm, his moans muffled by Zed's gorgeous pussy. Panting, I pulled off him and Zed lay on the bed. I stood over her and lowered myself slowly down, trembling at the thought of what was going to happen in a few seconds. I screamed anew as she began to suck Jason's cum from my pussy, her long tongue probing, her lips slick against my sopping wet, sticky pussy lips. She went on for ages, making sure I was fully cleaned out and I could feel Christian's cum dripping from my chin onto the bed.\n\nAt last, she came up for air and we lost ourselves in each other for minutes on end as the two guys gazed on in wonder at the things we did. Jason provided the picture on my phone I needed for Ben - my face clearly visible, only Zed's lips on the other side of the image. Between us was a long, thick strand of cum that joined us together. Once the picture was taken, it didn't last long and two very happy, very cum-drunk ladies sank back on the bed fondling, giggling and kissing.\n\nJason gave us a moment and I heard a champagne cork pop. I licked a last drop from Zed's nose as I fought back a tear at the sheer euphoria I was feeling. I still couldn't equate the old Lexi with the girl I had been over the last hour or so. I recalled the moment as Jason had slid into Zed's mouth - the bulge in her cheek followed by his ecstatic reaction as her lips pursed, her cheeks hollowed and she began to suck, those high cheekbones accentuating the beauty of the scene. There was something about her I found utterly mesmerising and it was a joy to work with her.",
        "I was trying to learn from her, but she was on a different planet. But I was doing it, and I was getting there, assignment by assignment. I had been parsecs behind her when I started; now it was down to only a few lightyears.\n\nAs Jason held out a glass, Zed rose to her knees. \"Think we ladies need to clean up a little first.\" She nodded to the champagne. \"Then bubbles...\" She moved to the bathroom door. \"Then we'll be nice and ready for round two, guys!\"\n\nAfterwards, I was about to call a taxi when she whispered to me, \"My place?\"\n\nI had nothing on the next day and I was elated she had asked me. I was feeling something of a spark when with her - maybe she was feeling something too? We were too exhausted to do anything more that night, but my early morning wake-up call involved a long tongue, a blonde head between my legs and nimble fingers squeezing my nipples. I got home an awful lot later than I expected, but I didn't mind. It had been a night and a morning to remember and I had the picture I needed.\n\nAs the taxi dropped me back at Foxholes Lane, I glanced up at the window of The Larches. It was in darkness and I had hoped I may be able to give Ben a cheery wave to set a few alarm bells ringing. I went inside, had a very long shower, ordered a pizza delivery and cracked a bottle of Merlot.\n\nI then spent a couple of hours planning my strategy with Ben. There were still a few things to iron out; a few contingencies to cater for reactions different to those I was expecting. This was still a volatile playing field and theoretically anything could happen. But I had the framework there and I looked longingly at the picture of Zdenka and I cum-kissing.\n\nI hadn't intended to, but I could help myself. I picked up my rabbit, cranked it up to eleven and wiped one out with my eyes glued to the screen. Then I got a fit of giggles as I came and thought about what was going unfold when I made contact again with Ben.\n\nSix - Ben\n\nIt was the worst few days of my life. I could barely think about anything else and I felt so tired from not being able to sleep. I had no idea what she was planning and I was wishing I had never been so stupid. My practice became a disaster area and I was reprimanded at the music store for being rude to a little kid during a ukulele lesson.\n\nI felt wretched, scared and stupid. When I thought about it, it was just about how I should have felt. That kind of cheered me up a little in a strange way. I was partly dreading, partly screaming in anticipation for Lexi's next contact.\n\nShe certainly kept me hanging on. It was five days after our first contact that she got in touch again. It was by text and she had obviously been doing her research. The text was to the point and emotionless. \n\nYour parents play bridge. When are you next alone? \n\nI racked my brain to think when their next tournaments were. I texted back.\n\nTues and Thurs next wk. Will be away until late. They are out during the day if that helps\n\nI waited a moment and my screen flashed.\n\nDaytime no good. Needs to be dark for what I have planned. Txt you Thurs with instructions\n\nI read the text and went cold once more. What the hell was she planning that needed it to be dark? And Thursday - why did it have to be the later of the two days? It was nearly a week away and this was turning into a nightmare.\n\nIf the days between contacts dragged, the next week was purgatory. At last the day came around and I sat staring at my phone most of the day, thankful that it was a quiet day in the store. Of course it was during a guitar lesson that I heard my phone chime. I think I played more bum notes than the fourteen-year-old thereafter and it felt like someone was hanging onto the hands of the clock.\n\nAt last I was able to get free and ran to the toilet for some privacy. It wasn't what I was expecting.\n\nMy front garden. 9 pm\n\nIt was a cold night, so I wore a large jacket. It felt like the gravel was pulling me down into the ground as I walked the short distance to Lexi's house. As I stepped onto the drive, a proximity light came on. I had never seen it before and it made me jump.\n\nI jumped again as my phone rang. Wolf Alice's 'My Love is Cool' blasting out into the still, cold night. I put it to my ear and heard her voice. \"That prox light is because of you, Ben. Another cost to add to your not inconsiderable debt to me.\"\n\nAs usual, as I tried to speak, she went on. \"It's a bit fucking scary, Ben. Being spied on. A turn-on in a strange kind of way, but still a bit scary. Why did you do it?\"\n\nI froze for a moment and looked up at the bedroom window, expecting to see her there staring down at me. I bowed my head. \"So sorry - I never wanted to scare you. I just never thought...\"\n\n\"I just never thought.\" She mocked my tone and her voice was harsh. \"That's what's wrong with the world, Ben. No-one ever fucking well thinks of the consequences of their actions anymore. It's why we are all in the shit. Why our leaders are fuckwits and we are even bigger ones for electing them.\" Her voice rose to an angry roar. \"No-one fucking thinks anymore!\"\n\nShe let out a long, disgusted sigh and I could imagine her shaking her head in frustration. \"What am I going to do with you, Ben?\" I looked up as the bedroom light came on. Now she did come into view, almost silhouetted as she stood in the window staring down at me. \"Eh? What the fuck am I going to do with a dirty little peeping Tom? Tell your folks? Tell the police?\" She started pacing up and down in the window and pointed down at me. \"You've still not said why. Do you fancy me?\"\n\nI looked up at her and stammered into the phone. \"Of course I do - why else...\" I tailed off.\n\nShe sounded amused. \"Good start, Ben. Tell me more.\"\n\nIt came out in a rush like the first time we had spoken. \"Oh God, the way you look, your subtle make-up. I love red hair and yours is so shiny. You smelled gorgeous the twice we've passed. The way you dress - elegant, sexy. Those boots.\"\n\nShe interrupted. \"Which boots, Ben?\"\n\n\"All of them.\"\n\n\"These?\" She raised her leg so that her foot was on the window ledge and I saw a long grey boot going way above her knee. I had to pinch myself to believe I was in this woman's garden, on the phone to her, telling her why I had stalked her with a drone.\n\nI was stammering again. \"Yes, those... they're so...\"\n\n\"So what, Ben.\"\n\n\"So fucking sexy.\" I groaned, appalled at myself. \"Sorry. Sorry.\"\n\nShe laughed. \"Don't apologise - they're meant to be fucking sexy, Ben. They feel sexy, they look sexy. Imagine them rubbing across your back while you put your head here.\"\n\nI stifled another groan as I looked up and saw her put a hand to her pubic area.\n\n\"Would you like that, Ben? Like to stick your tongue in my pussy? Feel my leather boots raking your back as I call your name.\" Her voice rose as if she was about to come. \"Oh Ben, that's so fucking good, come on baby, suck me! Fuck me, oh Ben!\"\n\nThen she stopped and let out a little bark of a laugh. \"Yeah, as if...\"\n\nI felt like falling to my knees. I was ashamed, turned on, frightened. I had no idea how to respond.\n\nShe looked at me for a long moment, her hand running across her chin as if pondering. At last she spoke. \"Round the back - there's a gate on the side to your right.\"\n\nAs I hesitated, she went on. \"Fucking move, Ben. There's a lot to discuss and although this is quiet, it's not quiet enough. Round the back, now!\" The phone went dead.\n\nI felt like a puppet that had its strings cut. I could barely drag myself the few yards to the gate and I was shaking from the cold and fear. As I reached the rear of the house, another proximity light came on and my phone rang once more. This time I got to it more quickly. \n\n\"Hello again Ben. Look up.\"\n\nAs I looked up, I gasped. A light in the room above came on and this time I could see her perfectly. She was naked from the waist up, her shiny hair falling around her shoulders, those gorgeous breasts pointing provocatively at me.\n\n\"You watched me with the girl with the big tits, didn't you Ben?\"\n\nI tried to swallow my fear and talk to her as normally as I could. \"Yes, I did.\"\n\n\"And?\"\n\nI thought for a moment. \"One girl was utterly breath-taking, the other wasn't.\"\n\nShe laughed. \"Damn, thought you liked me, Ben! So Shaz is breath-taking, is she?\"\n\nI realised she was teasing me and tried a little laugh back. \"No, you are...\" I was about to say her name but thought it best not to. \"She was... a bit gross.\"\n\n\"Not your type then?\"\n\n\"No, not really.\"\n\n\"Am I?\"\n\nThis time I did manage a little laugh. \"It appears so.\" I couldn't take my eyes off her.\n\nShe put a hand to her breast and despite my predicament, I felt myself begin to harden. \"I like that you like me, Ben. I spent a long time when men didn't give me a second look, but now... well, let's say I like the idea of nice men eating out of the palm of my hand.\" She rubbed her hand across the breast and sighed as she squeezed a nipple. \"Like you are going to be doing for quite a long time, young Benjamin. Quite a debt you have built up - going to be a long time repaying it.\" She laughed. \"May be worthwhile in the end, who knows?\"\n\nMy throat felt constricted. \"What's going to happen?\"\n\nShe leaned forward, her forehead almost touching the windowpane. \"Depends on you really. Your obedience, your compliance. You seem like a nice lad, Ben. Quite fit - not bad looking. Maybe a bit young for me. I prefer older men, you see. More experience. Better in bed. Last longer. Make me come harder.\"\n\nBefore I knew what I was saying, it was out of my mouth. \"I'd love to make you come, Lexi.\" I felt myself redden and cursed myself for my impetuosity. \"Fuck, I'm sorry - it's just what you're saying is so bloody sexy, I can barely think straight.\"\n\nShe stood regarding me from her lofty perch for a long time and began pacing again as she had done around the front of the house. \"I only said 'maybe'. Never say never, eh? Well, it's been fun talking, Ben. I think I know you a little better now.\" She stopped and pointed down at me with her free hand, her voice now a low snarl. \"Oh and one thing - don't fucking well call me Lexi, got it?\"\n\nI hung my head. \"Sorry, I just... oh God, I am so fucking sorry I started this. It's just you are so drop-dead stunningly gorgeous I couldn't help myself. Please don't tell anyone.\"\n\nAgain that little laugh and her voice softened. \"Does it look like I'm going to tell anyone? Standing up here with my tits on show to a young lad who wants to do all sorts of dirty things to me? No, Ben. We are going to have some fun together and when I think you have earned my forgiveness, I am going to let you have the night of your life. I'm flattered by your attentions. It's nice to think that at nearly forty years old, a young boy half my age thinks I am beautiful enough to wank over...\" She paused as if remembering something. \"Oh, silly me I forgot. This is for you Ben. Please look.\"\n\nA message came in on my phone. I took it from my ear and if I was in a state before, I was now almost turned inside out. It was one of the most beautiful, erotic, sexy and heart-stopping images I had ever seen. Those glazed mouths, the look in Lexi's eyes. I longed to see the other girl's face but only her lips were on view. The strand of cum between their lips was utterly mesmeric. I looked up at her and shook my head in disbelief. \n\nShe merely nodded as if to say, 'Yes, it's me.' She indicated for me to put the phone back to my ear. \"She's called Zdenka. She's Polish and hot as fuck. A guy had just pulled out of my arsehole and come on our faces. The guy that took the pic had been in my pussy at the same time and she sucked his cum from out of me and I nearly fucking fainted it was so good. Which guy would you rather be, Ben - arse or pussy?\"\n\nI couldn't think straight. \"To be either one of them would be a privilege.\"\n\nShe inclined her head. \"Nice answer. I want you to masturbate looking at that photograph, Ben.\"\n\nJust try and stop me! I nodded. \"As soon as I get back, I promise.\"\n\nThis time her laugh was full-on. \"No, why wait, Ben. Come on, let's see you right here, right now. Show me how much you like me, Ben Laidlaw. Wank for me.\"\n\nI closed my eyes in disbelief. Doing the picture for her 'insurance' was one thing, but this? Then I thought of what she had said about giving me the night of my life. I spoke in a quiet voice. \"Really?\"\n\n\"Really. Only way Ben. Only way it's going to happen. I'm going to ring off now and watch you for a change. Come on Ben, come for me. Come for Lexi. Start repaying your debt.\"\n\nThe phone went dead in my hand again. I had no choice. With cold hands, I brought up the stunning picture she had just sent me. I put the phone on the ground for a moment and unzipped myself. I took the phone back in one hand and took myself in the other. It took me a few moments to get hard enough but glancing between the phone and the scene above me, I managed to get a decent erection. After that, it didn't take me long. I gasped as I shot a looping arc of cum onto her garden lawn, trying to imagine her kneeling there in front of me. The phone picture was a thing of beauty but I wanted to be looking at the real thing as I came. I stood with my hand around my rapidly diminishing erection, the last few drops dripping down and gazed into her eyes as I caught my breath.\n\nShe smiled at me and nodded her approval. I could see her mouth the words, \"Good boy.\" She lifted a booted leg onto the windowsill and I could now see her red Brazilian in all its glory. She slipped a finger inside herself and I saw her face flicker as she did so. She brought it out and pointed it at me before licking it clean. She grinned, blew me as kiss and gave me a little wave.\n\nShe walked out of sight and the light went out. I was alone on a cold, dark winter's night in my neighbour's back garden. I had just masturbated to a picture of her cum-swapping with another woman at her command and once again I had no idea what was coming next.\n\nI went home in a daze, transferred the photo from my phone onto a safe backup and looked at it for half an hour wishing it was me that had just got her into that state.\n\nThen she sent me a link to her website and I just about flipped.\n\nSeven - Lexi\n\nI have to say that it was just so much fun watching poor Ben squirm. I had a rough idea where I wanted to take it, but it couldn't have panned out better if I had written it that way. I stood in the darkness of my bedroom watching the guy on my front drive as I told him how scared I had been. It wasn't exactly true but he wasn't to know that. I felt like I had him on a skewer and could turn him any way I wanted depending upon the answers he gave me.\n\nOne thing that was really genuine was my reaction when he told me how attractive he found me. It really made me feel great, despite my job and the things I had done there. The last time I'd had sex with a nineteen-year-old, I was a year younger and he was my husband. The thought of a boy of that age wanting to have sex with me some twenty years on made me feel incredibly grateful that things had gone the way they had. Within seconds of his answer I knew I was going to let him have free rein someday - but of course he was going to have to get there the hard way. \n\nIt felt so wonderful to be standing there high above him, getting my little barbs in here and there, building him up then letting him down. Drawing him out bit by bit and getting him to blurt out that he wanted to make me come. Right there and then, I was tempted but that wouldn't have worked for either of us. Whilst I was prepared to let him loose one day, this wasn't the time. He had to see he had done something wrong.\n\nAs I had told him, people don't think. By the time I had finished with him, I'd make sure he was a very deep thinker indeed.\n\nThe look on his face when I raised my booted foot almost set me off. It was true that I'd had the sensor and light installed as a result of what he had done. It had made me realise how isolated I was down Foxholes Lane, and whilst that had certain advantages, I could now see there was a potential downside. One thing was for sure - I'd be upping my security measures over the next few weeks.\n\nBut to see him there, in the glare of my new spotlight, mouth wide open as he ogled my lovely gunmetal boots made the installation cost seem all worthwhile.\n\nThen I sent him around the back of the house. It was surrounded by trees, so I was sure that my little show and tell in the window and his subsequent release onto my lawn would go completely unseen. Again, the look on his face as he saw the picture of Zed and I almost had me in hysterics. It had blown me away when I saw it and I was involved in the making of it. I shuddered to think what kind of reaction it must have triggered in Ben. \n\nThen the look of almost abject horror when I told him what to do next would live with me forever. Bless him, he didn't last long, but when I went down the next morning, there was quite an impressive thick patch of frost that definitely stood out from the otherwise light covering in the garden.\n\nAs he had been so compliant, I decided to reward him and sent him a link to my webpage on the agency site. The poor guy was probably in overload by now, but I couldn't resist it.\n\nAll I sent was the link. I waited until the next morning to send him another text.\n\nBen, you know what I do now and who I am. You have images of me in compromising situations; I have some of you that are just as compromising. I think I can trust you, Ben. You don't seem the type of guy who would share them. You can trust me too. Rest assured, I am going to put you through the wringer, but you will come out the other side a different person. It may take a long time, but if you are prepared to come on a journey with me, I promise that what you saw in that picture I sent you will become reality. So... over to you, Ben. Either you come with me, or this ends right now. Just answer the following two questions with Yes or No. Are you in? Can I trust you?\n\nI had barely hit send when the reply came in.\n\nYes and Yes. Utterly, totally - I swear\n\nI sipped my coffee and thought of the young man a few yards down the lane and wondered what he must be feeling. I responded.\n\nGood boy. At the moment, this is one-way. I talk, you respond. Await instructions. Understood?\n\nUnderstood. And thank you so much.\n\nI looked in the bedroom mirror and took a long look at the woman gazing back at me. I shook my head and began to laugh. \"Way to go, Alexis Helena Kennedy. Now what the fuck are you going to do?\"\n\nA few hours later, I was under the tender care of Abigail. She waited until her assistant Claire had got her client under the hairdryer and sent her out for coffee from the village shop. All through our session I could see she was itching to know if I had found out.\n\nShe still whispered in case the woman under the dryer could hear anything beneath what sounded like the engine of a Jumbo Jet. \"So, any news on the... you know!\"\n\nI nodded and whispered back. \"Yes, a gang of Albanian extortionists. I'm going to be sold as a sex slave if I don't pay a million-pound ransom!\"\n\nGrinning, Abigail pulled my wet hair rather harder than I'd have liked. \"Yeah right. More likely it were the Weaver kids trying to see if you had a pet kitten to torment!\"\n\nI closed my eyes. \"It was who we discussed at the end. It's sorted, Abi. Thanks for the support.\"\n\nShe mouthed the word, \"Ben?\" and I nodded.\n\n\"Fucking hell, that's a bit of a shocker. Ben? What you gonna do?\"\n\nI smiled at her pretty, anxious face in the mirror. \"Not quite sure yet, Abs. But give me a few weeks and I may have a little tale to tell you in the Silver Fox one night!\"\n\nEight - Ben",
        "I was barely able to come to terms with what I had just done when she dropped her next bomb on me - a link to her bloody escort webpage. I was glad I was not at the music store the next morning as by the time I finally managed to succumb to sleep, I had gone through her profile about a million times. In between, I had found Zdenka's and knew a fair bit about most of the other girls that worked for 'Dreamgirl Inc.' into the bargain. Most were younger than Lexi - all of them utterly stunning - but she still shone brighter than any of them in my eyes.\n\nI couldn't decide whether to look at her photos first or read her bio. It didn't take long for the visual aspect to win out. I was surprised that the photos of her were not censored in some way - some of the girls had pixelated faces and some only showed themselves from the mouth down. Obviously, Lexi wasn't too bothered about being recognised.\n\nThere were twelve in all and by the time I had finished, I had right clicked them and saved them to the same safe place in which the photo of her and Zdenka now resided. Little did I know then that by the end of the week, my collection would have grown dramatically.\n\nThe main profile shot showed her smiling into the camera, that soft red hair framing her gorgeous face. Her eye makeup was stunning - dark, smoky and set those incredible amber eyes off perfectly. In the next few after that she was in elegant dresses, the best a glorious dark-blue silky number with a flower pattern. It was high necked and sleeveless and with a long finger hooked coyly into the corner of her mouth, I couldn't imagine a man on earth who wouldn't want to be with her.\n\nThen there were some of her in lingerie and soft leather, which also left me reeling. They began with silk stockings, suspenders and a silky basque and by the final one, I was unable to contain myself. The sight of the woman I was infatuated with wearing a shiny, one-piece vinyl catsuit was too much to bear. I tried to imagine coming in that mouth of hers whilst my cum dripped down onto the sleek red vinyl and Zdenka moved in to lick it off.\n\nIt took me a few minutes to find Zdenka's profile. When Lexi had mentioned her name on the phone, I was in such a state I barely could recall what she had said. I had to use the site's search engine and selected 'Polish' as nationality to find her. I shook my head in disbelief as I saw the long blonde hair, the arrogant look on her face, those high cheekbones and wide, pouting mouth.\n\nLexi had said she was going to put me through hell. If these two were the reward at the end of the line, I would crawl a mile naked over broken glass and hot coals to claim that reward. Whatever she had in store for me, I would take it.\n\nOnce I had finished with Zdenka, I paged back to Lexi and began to read her bio and details. She was described as a 'fun loving, vivacious mature redhead who loves the finer things in life.' It went on to say she was 'sophisticated', which in my limited knowledge of those kind of terms meant 'utterly filthy'. Beneath it was a long list of abbreviations with tick boxes against the majority of them. I needed to do a bit of Googling to find out what most of them meant, but by the time I was done, I was in no doubt that there were very few things that Lexi was not prepared to do.\n\nMy initial puzzlement as to why her academic qualifications were included was answered when I Googled that 'A-levels' and 'O-levels' were in fact indications of her willingness to partake in anal and oral sex, not her secondary-school grades. A few more abbreviations made it clear that if anyone wanted to come on or in her, it would cost extra, but there were no limits. Her orientation was described as 'Bi', she was willing to work with couples and was also a 'Party Girl.'\n\nIt took me a few minutes to work out from the terminology that she was prepared to give full bondage but would not be restrained herself unless accompanied, and some 'light correction' was possible. She was a non-smoker but would smoke 'on request'. Under the heading, 'Works with:' I was not surprised to see the name of a tall, blonde Polish girl and there was also the name 'Faye'.\n\nOk, another profile to look up and another girl who sent my senses into overdrive. Faye was tall and black with long braided hair almost as long as Zdenka's. She smouldered out of her webpage in leather and latex and she too seemed to have few limits.\n\nThen back on Lexi's page, I got my reality check. I scrolled down past the list of naughty things she did for a living and saw just how much she got paid for doing those naughty things to people. My eyes nearly popped out of my head as I saw the cost per hour. Then the little extras like coming on her face or in her mouth; a little more for anal, a supplement for couples. The overnight rate was eye-watering and it was no wonder she could afford to dress so well and look so good. I supposed she had to and it was an overhead of the job. When I did a quick calculation based upon the number of assignments I imagined she had per week, there was no doubt she was earning an awful lot of money for doing something she clearly loved.\n\nI went back to the pages of the other two girls and right clicked some of their images and stored them away, then set them going as a slideshow.\n\nI shot my load before the short slideshow had finished and was horrified to think that if I could afford even a half-hour slot with Lexi, I'd need to find a way to fill the other twenty-eight minutes if I was going to come that quickly.\n\nNext morning, she sent me her message. When I saw the words 'I promise that what you saw in that picture I sent you will become reality', nothing else in the world mattered at that moment. In elation, I sent my response.\n\nThen heard nothing from her for two days, when her next text was short and to the point.\n\nCan you afford my overnight rate?\"\n\nMy heart sank. The only way I was going to get that sort of money was by knocking over the local village shop. Although given the number of contactless payments they took, it was probable I'd have to do it every day for a month.\n\nI decided to make light of it.\n\nI could rob a bank...\n\nHer response was a grinning smiley. Not necessary. You can earn credits towards it. A long road, but a worthwhile journey, no? \n\nRelieved, I responded. Very worthwhile. Your website is stunning. Zdenka and Faye are beautiful too. There are some very lucky people out there. I desperately want to be lucky too.  \n\nYou make your own luck, Ben. \n\nI held my breath as I tapped out my next message. What do I need to do? \n\nWave to me in an hour when I head to the station for starters...\n\nI was waiting for her and saw her front door open. She was carrying an overnight bag on her shoulder and I wondered who was going to get lucky - or who had the kind of money to afford her on what I now knew to be called an 'outcall', which was another of her services that required a premium. She drew level with our drive and I saw her take a phone from the pocket of her leather jacket. Her hair was covered by a huge green woolly hat and rather than her usual elegance, she looked cute and almost girlish. She smiled up at me and held a finger to her lips. I took it that I was not permitted to speak.\n\nI stabbed the accept button so hard I nearly dislocated my finger. That soft, seductive voice was in my ear once more. She started with a big sigh. \"Someone can afford an overnighter, Ben. Shame you can't. Me and Faye this time.\" She waved to me and I waved back and I thought she was going to ring off as she turned and walked out of sight up the lane to the village. But she went on. \"Yep, a real cum-fest this one, but first dinner at the Fat Duck. Heard of it? Costs almost as much as I do, but they are paying so all the better. Oh, I love my job Ben - it's just so much fun! Think of me as I am taking it up the shitter and sucking succulent black pussy!\" She began to sing. \"Brown sugar - how come you taste so good...\" \n\nShe tailed off giggling and once again, she had me squirming. I was desperate to respond in some way but didn't dare jeopardise my chances. She went on. \"Getting to the main road now, so need to tone it down a bit! So to answer your earlier question about what you need to do. You chose to watch me, so you need to look and listen, Ben. Just look and listen, that's all. Nice and simple. Bye for now!\"\n\nAnd she was gone. I had no idea what I was supposed to look at or listen to.\n\nWhen the pictures started arriving and the phone calls began, it wasn't long before I knew exactly what she meant. For the next week I had to keep my phone on vibrate otherwise my folks would have been getting woken up at all hours.\n\nJust like I was.\n\nThe first call came at one in the morning and I nearly fell out of bed trying to grab my phone. For a few seconds there was silence, then a long, drawn out moan. Oh God, what was I going to be put through now? I didn't have long to wait for my answer as an urgent voice began to give out explicit instructions.\"\n\n\"Oh fuck, Lexi - yeah, like that. Suck baby, come on - suck that pussy. Finger me, come on - three - get them in, oh fuck!\"\n\nI closed my eyes and bit my lip as the woman went on. This had to be Faye and I recalled her image from the website, those long braids and her gorgeous coffee-coloured skin; her clear eyes and wide smile. I tried to imagine her with Lexi between her legs when she upped the ante.\n\n\"Yeah, Bruno - harder baby, fuck my ass. Jeez, come on!\" There was a short interlude of panting and moaning, then, \"Oh Leo, come on man - fuck her like you mean it!\" \n\nI heard a shriek from what I assumed to be Lexi as Leo did as he was told as Faye screamed that she was \"fucking coming!\" and tailed off into high pitched squeals. It went on for a minute or so, becoming more and more frantic and I thought I was going to make a mess of my bed any second. When she subsided and spoke her final phrase before the call ended, I almost did.\n\nHer voice was hoarse as she gasped out the words. \"Oh fuck, Lexi - look at that cum all over your face, you dirty girl. Come here, bitch!\"\n\nI was finished in thirty seconds. It was one thing to hear that sort of stuff on a video, but knowing it was actually happening live and Lexi was part of it took me over the edge. I was just getting back to sleep when the first photo came in.\n\nIt showed Lexi's smiling face between a pair of coffee-coloured thighs. Her lips and chin were coated in cum and she was holding a semi-erect penis next to her cheek. Her other hand was held up in a wave to the camera. They had captioned it, 'Wish You Were Here?'\n\nOh fuck, one of my favourite songs of all time and now it would be forever linked with that picture and that phone call. I had played it with a group of kids the previous week in a guitar lesson. I'd need to shelve it for a while. I saved the picture. It was utterly mind-blowing and I wanted to be that guy in her hand more than anything else in the world.\n\nBy the end of the week, I'd had seventeen more calls and twenty-two photographs. One call was at four-thirty in the morning and the shortest was just a screamed, \"Oh fuck!\" One was two minutes of slurping and liquid sounds and I couldn't tell whether the recipient was male or female. Another with similar sounds had the gentle buzzing of a vibrator in the background and I was under no illusions on that one.\n\nPerversely, my favourite photo was of Lexi in a travesty of a schoolgirl outfit, wearing a long blonde pigtailed wig. She had a cigarette dangling from her mouth and a hand up her short skirt. It was just so diametrically opposed to her usual elegance that it captivated me. If I had not known it was her, I'd have barely recognised her.\n\nHer final call of the week to me was not erotic. At eight on the Friday evening, I picked up expecting to hear more lascivious sounds and heard a chirpy, upbeat voice. \"Good evening Ben, trust you enjoyed Sound and Vision week!\"\n\nI waited for her to go on, but obviously this time I was expected to respond. \"Erm, yeah - wow. You sounded like you were having a great time.\"\n\nShe purred. \"Oh I was, Ben. Like the pix?\"\n\n\"They're beautiful. I want to be the man in the one with Faye.\"\n\n\"Did you like the slut one?\"\n\n\"Yes.\"\n\n\"Did you wank to it?\"\n\n\"Yes.\"\n\n\"Excellent, I love being a chameleon - changing my look, becoming a tart.\" She suddenly changed tack. \"So Ben - another week, another little bit of debt paid. It's coming down nicely. I wonder what next week has in store for us, hmmm? I'll be in touch on Monday. Have a nice weekend. I'm off to an orgy in Kensington tonight, so you won't be disturbed.\" \n\nShe chuckled. \"I will, though. Bye-eee!\"\n\nNine - Lexi\n\nI was bloody exhausted after the Friday night. It was full-on and I got back to the house very late and had a long, hot bath. The next week was pretty quiet and I only had one evening session and that was an in-call on the Friday night. As the Sound and Vision week had gone so well and he liked my little transformation, I decided to let Ben see me in various guises over the week.\n\nI had a wonderful little showstopper in mind for the finale and was hatching a plot to really blow his mind for the following Wednesday. I wasn't quite there with it yet, but the strands were coming together nicely.\n\nWhen I first started my new life, the first few weeks went by in a bit of a blur. I decided that I needed to keep track of my activities, so I started a diary of sorts. I suppose it is a bit of a blog, but it is private and only I get to see it. It is a nice way to remember things that can sometimes get jumbled into each other and I have spent many a quiet evening with a glass of wine remembering some heady days and nights.\n\nThe diary entries for the coming week went as follows.\n\nMonday\n\nGreat little plan worked out for the week. Told him to be round the back of the house every night @ eight. Any no-shows or if he touches himself, game over. It's not of course, coz I want this as much as he does. He's closer than he thinks, bless him. I've put him through it, but he's doing well and besides, I really want to give him a good seeing to.\n\nHe liked my schoolgirl slut so she's going to make a brief appearance. Just before eight, get into long grey boots, ripped fishnets and tiny plaid skirt. Make sure white shirt is unbuttoned, tits are virtually hanging out and get my wig on. Makeup still pristine from earlier vanilla session with older guy, so smudge it, get my lippy across my cheek and add a bit of extra gunk to my eyes. Load up on bright blue eyeshadow that looks more like billiard chalk than make-up, but it adds to the effect.\n\nPacket of bubble gum and cigarette and all set to go.\n\nBang on time he's silhouetted in the kitchen window. Light's off so he can't see me yet. I'm leaning on the central pillar in the kitchen next to the Aga. Light the cig, as ever grimacing at the acrid taste and smell. Still can't get used to it, but it does a job. Let it dangle from my lips and hitch up skirt. One hand goes down my knickers, the other flicks on the kitchen light and I begin to fiddle, completely ignoring him, eyes squinting from the smoke. Work on myself for a minute or so then look up and pretend I see him for the first time.\n\nNarrow my eyes and walk slowly to the window, the cig now held up between my fingers. Blowing bubbles and popping them as I go. Get to the window, take a big drag and blow it in his direction. Mouth three words making sure they are clear and obvious.\n\n\"Fuck off, loser!\" \n\nI cup my hand and cock my wrist in a 'wanker' motion, raise my middle finger and blow more smoke at him. Unfortunately can't see his reaction. Back away, hand going under skirt again. Pop one more bubble, make an 'L' sign on my forehead with finger and thumb and flick the light off.\n\nGet rid of the cig, clean up and crack a bottle of Cab Sauv wondering what the fuck the poor guy made of that.\n\nTuesday\n\nLying on the kitchen table when he arrives. Legs wide, cucumber slides in beautifully. Really feels fucking amazing. Give him ten minutes of torment then walk out the room licking it and finish myself off over a nice cold beer for a change. \n\nWednesday\n\nThe red latex catsuit tonight. That should be enough on its own. Just potter about making myself a cup of tea, completely ignoring him. Seven minutes from switching on light to taking tea next door.\n\nWell he did want to watch me, so I'm letting him watch! \n\nThursday\n\nChange of plan tonight. Fucking freezing outside so don't want him catching his death in garden. Instead, text him and tell him to send drone over. Straddling big blue dildo when a flash from camera trap tells me it's there. Got my back to the window and go to town on it. A few seconds in, call him and give a full-monty commentary on what I'm doing, laying it on thick. \n\nGive it about eight minutes going hard then turn around to face the window. Just as he thinks he's getting to see the end of it, hold up card saying, 'RECALL NOW!' and make the poor guy listen to the end without seeing it.\n\nI really can be a cruel bitch at times, but it's so much fucking fun! \n\nFriday\n\nBeen looking forward to this one all week. Told him to be on standby any time after nine tonight and when I say 'move', move fast. Normally see to clients upstairs but tonight, Charles is getting his BJ on the living room sofa. Need to give him an extra bonus one upstairs afterwards for what I'm about to do. He's cool with it - who wouldn't be, getting bonus hour at my rates, lol!\n\nText is already set up. All I have to do is hit the button. Charlie-boy likes to come on my face, but make sure his load is all safely gathered in. Leave him lying there, his little belly heaving and press 'send'. Ben better be fucking quick.\n\nSure enough, see his silhouette in the window right on cue. Switch kitchen light on and walk towards him naked. Wish I could see his expression when I reach the window and slowly purse my lips. Let the cum dribble out slowly, first at the corner so it goes down my chin. Try to smile and some more squidges out the other side. Let out a big blob that slides down and begins to hang, stretching down towards my tits. Shake my head a bit and it drops, splattering nicely onto my left nipple.\n\nSqueeze out half of what is left and let it drop onto my right tit. The rest goes down the middle onto my chest.\n\nBegin to rub it in, playing with it, tormenting him, letting my fingers run over the sticky stuff, licking them, sucking on them. Scoop some off my chin back into my mouth and swallow it. Never liked swallowing much, but like the cigs, adds to the effect. \n\nReach my head down and push my left tit up, sucking on the nipple for a minute. Straighten up and look out into the darkness at his silhouette. Fold my arms across my chest and stare at him for a full minute then retreat to the light switch, blow a kiss and my week's work is done.\n\nWell, except for Charles' second BJ anyway.\n\nHe's a grateful little bunny for his bonus then text Ben to say he has just paid for a man to come in my mouth and it was added to his debt.\n\nHe doesn't know it yet, but he's only got one more ordeal to go through before he gets the prize.\n\nBut it's a hell of an ordeal, and even after that he won't get the prize for a while, coz I booked my Christmas trip to Munich today. Not seen Ingrid for so long and it'll be a fucking blast. Still hoping Faye or Zed will come for some of it. Wait and see!\n\nTen - Ben\n\nBy the end of that week, I didn't know whether I was coming or going. I really began to wonder if I could take much more. She had blown me away with the slutty schoolgirl, but to see her just wandering around making tea in that catsuit was so erotic. Doing something so normal in that getup was just so incongruous that it had me utterly mesmerised.",
        "Then the Friday night. Just standing there watching it ooze from her mouth had me weak at the knees. The look on her face as she rubbed it into her breasts, scooped it up and swallowed it. Back home I was searching for redheads and cum-play most of the night.\n\nThen she told me it had added to my debt. I just hoped she wasn't charging interest.\n\nI didn't hear from her again until the next Tuesday and when I did, I thought my moment had come.\n\nTomorrow, 8pm sharp. Back door will be open. Lock it after you, come upstairs. \n\nAt eight sharp I had my hand on the back-door handle and my heart was in my mouth. Was this really going to be it? For the first time, I let myself into her house and carefully latched the door behind me. I thought it best to leave my shoes at the door so removed them, hoping someone else would be removing the rest of my attire. I had showered and put on my best chinos and checked shirt. It wasn't much, but it was the best I could do.\n\nI looked around the kitchen and thought of the little scenarios that had played out there the previous week. There was the pillar she started her slutty schoolgirl act leaning against. I ran my hand over the wooden table where she had fucked herself with a cucumber. I felt like opening the fridge to see if it was still there.\n\nFeeling nervous as a six-week old kitten, I reached the bottom of the stairs. I took a deep breath and began to ascend. As I turned the corner at the top I could see the door to the bedroom. It was open and soft light was spilling out onto the lush hallway carpet.\n\nOnce again I took in surroundings that were strangely familiar. The huge bed, the black satin sheets, the large picture window through which I had spied upon her and set all of this in motion. Tonight, the curtains were drawn.\n\nThere was a handwritten note on the bed.  'Hi Ben, make yourself comfy and lie down. Soon! So soon! x'\n\nI did as I was told and waited, wondering where she was. I looked around the room - it was sparsely furnished with a few erotic prints on the walls. I had been expecting racks of whips and all sorts of infernal machines, but unless they were behind the door that led off to the right, there was no evidence of anything like that.\n\nThen I realised there was a light shining from the crack under the door and I heard a tap running. A bathroom, then - not a dedicated sex-room. She must be in there preparing herself for me. My heart was pounding and it almost stopped as I saw the handle turn.\n\nThis was it - she was about to emerge in her red latex and all my fantasies would come true. The door began to open slowly and a long leg emerged, clad in sheer nylon. In my addled state, it never occurred to me that the skin was way too dark to belong to Lexi. The leg was joined by an arm and this time I really did notice that unless Lexi had suddenly become the owner of a full-arm sleeve tattoo, this was not her.\n\nAs the head popped round the door grinning at me, it took me a moment to recognise her. The over-inflated lips, the long false eyelashes, the hair pulled back in a tight ponytail accentuating the hardness of her face.\n\nThe door opened fully and she was revealed in all her gory glory. \"'Ello, darlin'. Ready fer a bit'o rough?\"\n\nOh, for fucks sake, here I am expecting a night of sexual bliss with the woman of my dreams and fucking Silicone Shaz walks in. I could feel myself recoil and move away up the bed. Lexi had set me up royally and I could almost hear her laughing at me.\n\nShe stood, hands on her hips, those ridiculous over-sized inflatables standing proud. I thought that if I hit them with a baseball bat, they'd not move and inch. \n\n\"Whoa, Sexy Lexi - what ya had delivered for Shaz then? Hello Benji - I hear you've been a naughty boy!\"\n\nShe gripped her tits and tried to wobble them in my direction but failed miserably. \"Seen these before, ain't ya, Peepin' Ben!\" She took a step towards the bed leering at me. \"Cor, fit young lad. Haven't I seen you doggin' down Carshalton on a Sat'd'y night?\"\n\nShe let out a harsh cackle. \"Lexi says to give yer a night to remember and Shaz's a girl of her word. Betcha can't wait to get that dick up between these little puppies!\"\n\nPuppies? The fucking things were more like Saint Bernards on steroids.\n\nRealising I probably had no option but to go through with this, I manage a weak smile. \"Hi Shaz. What a nice surprise!\"\n\nShe narrowed her eyes and waved a finger at me. \"Liar liar - I can see it in yer eyes. Yer shit-scared, Benji ain't ya!\" She slid onto the bed beside me, running her hand across the satin. \"Fuck, these sheets are gorge!\" She lay on her side and faced me, her boobs defying gravity. Her voice softened and she held out an arm and touched me on the cheek. \"I ain't Lexi, Ben but I can give you a good time, darlin'.\" She touched a long, red fingernail to my lips. \"Come on, don't be shy. I may look rough, but I got a heart o' gold and I fuck an' suck like an angel.\"\n\nShe slowly unbuttoned my shirt, letting those long fingernails rake gently across my chest. Despite my misgivings, I felt a stirring down below. One hand went to that exact spot and she frowned. \"Ooh, looks like we needs a bit o' encouragement, eh?\"\n\nShe unbuttoned the top of my chinos and pulled the zip down. Her face was close to mine now and I could smell her perfume, pungent and heady. There was a faint smell of cigarettes on her breath. Her hand went inside my trousers and her mouth closed on mine. I was frozen for a second then began to reciprocate. If those lips and tongue felt like they did on my mouth, what they going to feel like wrapped around my erection?\n\nThe answer was, 'incredible.'\n\nHer fingers gripped me, her tongue squirmed in my mouth and I felt her breasts press against me. Just as we got started, she released her hold on me and knelt up laughing. \"Oops, just one more fing before we get goin'!\"\n\nShe reached behind her and picked up a little bottle from the bedside table. She shook something into her hand and held it up to me. \"Little blue pill. Fink ya might need that, Benji-boy. Does wonders fer my old man's old man if yer catch my drift. Keep ya goin' all night!\"\n\nShe pressed her fingers into my mouth and I had no option but to dry swallow it. She got off the bed and tugged my trousers off, throwing them over her shoulder. My boxers were next and she pulled me down into the middle of the bed by my ankles, surprisingly strong for her size. She lay down alongside me but in the opposite direction. I could smell the tantalising aroma from her nether regions and noticed there was more jewellery inserted down there and in her belly button than my mother and sister possessed between them. She took me in her hand and squeezed gently, her mouth opening. \n\nShe grinned back at me, her voice a harsh whisper. \"Want me to suck yer dick, Ben?\"\n\nI swallowed hard and despite everything, whispered, \"Yes please, Shaz.\" I reached out and touched her left breast for the first time. It was like nothing I had felt before. It was hard and unyielding and the tight skin felt like vinyl. There was something strangely alluring about the feel of it; the sleekness of the skin and the hardness of her prominent nipples. She let out a little gasp as I pinched a nipple and I began to relax a little. Maybe it was getting a reaction from her, maybe the pill was having an effect, but whatever - I was starting to enjoy it. Her breath was hot on the glans of my erection now, and something told me this may not be too bad after all.\n\nAs Shaz Johnson's thick lips closed around my cock, I briefly forgot about Lexi. I ran my hands over those enormous orbs and slipped a finger into her hot, wet snatch, trying to avoid the metal and rhinestones that populated most of the area.\n\nShe began to work on me and everything changed. How many movies had I watched with some tattooed, pierced and enhanced girl turning me on? I let myself fall under her spell and she did things to me that I had only dreamed about until then.\n\nAt three in the morning I was utterly spent as I lay on Lexi's black satin sheets with my head on her breasts. In musical terms, Shaz was to Lexi what my junior guitar class was to the Beatles.\n\nBut the only thought in my mind was that if Shaz was that good, just what the fucking hell was Lexi going to be like?\n\nEleven - Lexi\n\nWhen Ben entered my bedroom, I was watching it all less than a mile away. I have some very discreet and powerful cameras hidden around that room - one on each bedpost, one in the ceiling light and another over the bedhead. They afforded me and my host for the evening a fine array of views as proceedings unfolded.\n\nAs we waited for the appointed time, Abigail was getting fidgety. We had all but finished our Chinese takeaway and were already halfway through our first bottle of wine. Her husband Steve, a long-distance lorry driver, was somewhere in the depths of Bavaria - oddly enough, not far from where I would soon be spending Christmas with Ingrid. Abi had packed the kids off to her mum's place for the night.\n\nShe took a big sip of wine and for what seemed like the fiftieth time said, \"Mmm, nice - don't get to do this often!\" She giggled nervously. \"Can't wait to see poor Ben!\" She speared a last piece of sweet and sour with a chopstick. \"Gonna be funny watching someone doing it live. Me and Steve watch a bit sometimes - you know, to get us in the mood, but this...\" She turned to me. \"Suppose you're used to it. Probably seem quite tame.\"\n\nI looked at her, such a sweet lady with a lovely, almost white mop of short, unruly hair that her assistant Claire made look so natural. She had an elfin face and lovely blue eyes that her kids had inherited. She was thirty-two and had taken the beauty salon on from her mother when she retired.\n\nI felt her stiffen beside me on the sofa as Ben entered the room. \"Oh God, there he is bless him. Is she really that bad, Lex?\"\n\nI laughed. \"No, not when you get to know her. Brash as hell, but she's all show. Gives it her all though - he may not think it but he's in for a treat.\"\n\nHer reaction as Shaz entered had me in hysterics. \"Fucking hell, no way! My kids could use those for water wings!\" She then took in the girl's arm and back tattoos. \"At least he's got something to read if her gets bored!\"\n\nAs things progressed, I could sense Abigail getting more and more aroused. The wine was flowing and she could barely take her eyes off the screen. She bit her lip as Shaz took Ben in her mouth and went all the way down. He wasn't huge, but Abigail swallowed hard. \"How the fuck? Can you do that, Lex?\"\n\nI look at her nonchalantly. \"Get me your biggest vibe and I'll show you!\"\n\nShe shook her head. \"Haven't got one, but if I tried to do that with Steve, I'd choke to death.\"\n\n\"Didn't know he was a big lad.\"\n\n\"No, he's not - about the same as Ben there, but I've only got a little mouth.\"\n\nWe went on in the same vein for a while and when Ben finally erupted onto Shaz's prized assets, lasting far longer than I expected thanks to the little blue pill, she giggled. \"Whoa, nice shot, but hard to miss!\"\n\nIt was during their second round, when Shaz was trying to coax Ben back to life, that I sensed Abigail was now really into it. She sat with rapt attention as Shaz lit a cigarette and began to blow smoke on Ben's cock. He quivered and put his hand in her hair. It was down now and softened her face a little. She had asked me if she could smoke during their session and she was doing me such a favour I could hardly refuse her.\n\nAnd besides, it was turning me on, never mind Ben who was clearly mesmerised by the experience. He squirmed in her embrace as the smoke billowed from her mouth and I wondered if this was something that I should be including in my repertoire given his reaction. As she sat, bouncing on his now revived cock, his hands gripping those immovable rocks, Abigail turned to me.\n\nHer voice was quiet. \"Lexi, what's it like to sleep with another girl?\"\n\nI looked at her, unsure where this was going. I could see her eyes were glazed with lust. She was a little tipsy and I got a slightly uncomfortable feeling. \"It's great, Abi. Totally different, but just... softer, gentler. Always seems more intimate to me; though a few ladies I know break that rule!\" \n\nShe sat impassively for a moment until I spoke again. \"You... never?\"\n\nShe fixed her eyes on the screen as if she dared not look at me and shook her head. She let out a little moan as Shaz raised her buttocks and Ben's now condomed cock rammed into her backside. Her voice sounded distant, as if she was somewhere else in her head. \"Steve does that to me when I'm on. Hated it at first but fucking love it now.\"\n\nWith her eyes still on the action, I barely heard her next words. I had to ask her to repeat them.\n\nShe turned and put her hand in the hair that a couple of hours earlier she had been tending to as my hairdresser and beautician. Her voice was still a whisper. She put her head on my shoulder. \"I said, 'show me', Lexi.\" She raised her head to me and stroked my cheek, her eyes wide. \"Please...\"\n\nI hadn't been expecting that when she had offered to host our little picture show. \"You sure, Abi?\"\n\nShe nodded her head quickly three times and pulled me onto her mouth. I forgot all about Shaz and Ben for a while - I would have the recording to watch anyway. When we pulled apart, I asked her again and she said yes once more.\n\nI switched off my iPad, leaving the two lovers going at it like rabbits in my bedroom and took her by the hand. She led me into her bedroom and for the next two hours, I showed Abigail Cross exactly what it was like to sleep with another woman.\n\nShe was so taken with my vibrator that I left it with her for her for when Steve was away. Or maybe even when he was there - it was up to her. It was only my emergency handbag standby and at the last count I had twenty-three, so I was hardly going to miss it.\n\nNext morning she gave me a sheepish little smile. \"Morning Steve, looking a bit different today!\"\n\nI went to snuggle into her, but she shook her head and held her palm up to me. \"It was amazing Lex, but curiosity is satisfied. I can say I've done it - well, not to anyone but you and me, but I have done it!\" She hung her head. \"You don't mind, do you?\"\n\nI reached up a hand and stroked her cheek. \"Course not Abi - my pleasure!\"\n\nShe smiled and kissed my fingers. \"Besides, couldn't afford your rates!\"\n\n\"Give me a free hairdo any time you want a repeat.\"\n\nShe got up and suddenly shy, covered her modesty with her nightdress that had until now been superfluous to requirements. \"Thanks, Lex - it really was...\" She wiped away a tear. \"...fucking amazing. So gentle like you said.\"\n\n\"Told you. And never say never, Abi. If ever...\" I shrugged. \"Just saying, yeah?\"\n\nShe looked down at me lying where her husband usually lay. As she had done when she first asked me, she looked a million miles away. \"Yeah. Yeah... coffee?\"\n\nShe was quiet as we drank our coffee but she had perked up by the time I walked her to the salon. She unlocked the door and looked up at me. \"Thanks again - it was truly wonderful.\" She dropped to a whisper. \"And thanks for the little buzzy-buzz!\"\n\n\"It was wonderful for me too, Abi. I'm pleased it was me you experienced it with. And have fun with the buzzy-buzz!\" I was still a little concerned though. \"No regrets?\"\n\nShe put her mouth into a little moue. \"Not at the minute, but when Steve gets back or I see the kids...\"\n\nI shook my head. \"You'll be fine, Abs. Our little secret, yeah? See you next Tuesday before I head off to Deutschland.\"\n\nShe stepped into the salon. \"Free one for services rendered.\"\n\n\"Fuck off - I wasn't working last night. It was purely for pleasure and that is exactly what it was.\"\n\n\"What was?\" We jumped as Claire arrived, slightly out of breath as she hopped off her bicycle. \n\nAbigail looked a bit embarrassed. \"Oh nothing, Claire. Just a nice girly night in Lexi and I had with Steve and the kids and being away. Made a nice change!\"\n\nI walked home and cleared up the slight mess that Shaz and Ben had left. At least the condoms and cigarette ends had gone. Judging by the state of my satin sheets, it had been a fine night indeed.\n\nI texted Ben once I had settled down to a relaxing day. \n\nHope you enjoyed your ride on the inflatables. Just a little gift for being a good boy. Not so gross now, is she? Unfortunately, the Lexi-Express is closing down for the Christmas period and relocating to Germany. Not for the Xmas markets or gl\u00fchwein, but for sex, sin and debauchery. Abnormal service will be resumed in the New Year. Festive Greetings to you and yours, all my love, Alexis H. Kennedy \n\nI signed off with a kissy smiley.\n\nHe'd get one more text early in the New Year.\n\nThen Ben Laidlaw was all mine.\n\nTwelve - Ben\n\nThe Christmas holidays came and life returned to a relative norm. Adam was back and we jammed continuously, with him picking up ideas on his bass from my guitar lines and me playing off his echoed guitar riffs on the keyboard. It was great to be back in real life after a crazy few weeks. My sister Sally and her husband and their new arrival Maisie-Ann added to the festive air and for a while I almost forgot about Lexi. There was no crunch of gravel down Foxholes Lane and no late-night calls or explicit photographs.\n\nFor a while, I was grateful. Then I began to miss them.\n\nIt was New Year's Eve that did it for me. Adam had an invite to a party and I went with him reluctantly. I'm not a party animal. I just want to be with a few friends, hopefully making what we think is great music and chilling with a beer or two. It was the usual house party - far too many people, most of them off their heads. Wishing each other a great New Year whilst stumbling into it barely able to remember what year it was; waking up unable to recall a thing about the night. I had been kept interested past the midnight chimes of Big Ben by a couple of shy smiles from a cute green-haired Emo girl. When I went to get her a drink as a tribal offering, I returned to find her in the embrace of my younger brother. \n\nWell, he's the younger by ten minutes, and I'm a way better guitar player than him. Of course, he pulls the hot little babe with the green hair and the nose ring. It stung like hell. I thought of pulling the stunt we used to do at school and swap places with him to fool the teachers, but I left them to it and trudged the six miles home in the early hours as flakes of snow began to swirl around me.\n\nHappy New Year, Ben. Your identical twin brother has won the cute girl's heart, your tormentor is somewhere in Bavaria getting taken from all angles by all and sundry, and you have a long, cold walk home to a few pictures of a woman who has you on a piece of string at her beck and call.\n\nI wallowed in a pit of self-misery for a few days as more snow descended and my jam sessions with Adam were curtailed by his infatuation with his new love. I longed for some contact with Lexi, however much it tormented me, but I didn't even have that small discomfort to distract me.\n\nThen a few days into the Brave New Year, my phone rang at two in the afternoon. I didn't recognize the number and hoped it would be Lexi calling from Germany with explicit sounds and deep breathing.\n\nIt was almost as good.\n\nI hit the accept button and merely said, 'Hello.' For the next couple of minutes, I couldn't get a word in edgeways as a now familiar voice went off on a stream of consciousness.\n\n\"Hiya, Benji-boy. Missed me, 'ave ya? Gotcha number from Lexi. Having a ball in Moonik she is, lucky old cow. Anyways, me old man's off in France seein' 'is old Mum fer a few days. Ninety-free she is. Fuck can yer imagine! Ninety-fucking-free, Ben! Me tits'll be bouncin' off me knees if I last half that long!\" ",
        "I heard a wheezy cackle but had no time to interject before Shaz was off again. \"Poor old dear knows nuffink abaht me so 'e goes alone. Prob'ly put the poor fucker in her grave if she clapped eyes on lovely little Shazzer, eh? So dear old Dicky is dahn in Bordeaux with Maman-dearest and poor little me is all alone in Carshalton wiv an itchy puss.\" There was a short pause. \"So, bottom line, Benjy babes - I'm gaggin' fer it. Fancy a bit 'o doggin'?\"\n\nWith horror, I recalled her quip from our first meeting about dogging in Carshalton. I was about to plead illness, prior engagements or severe weather conditions - possibly all three, when she outlined her plan and I was in.\n\nAn hour later, a taxi on Richard's account dropped me outside the gates of a very posh looking house on the edge of what appeared to be a large gated community somewhere on the outskirts of South London. Looking forward to meeting Shaz again, I pressed the intercom button on the gatepost.\n\nThere was a crackle, then \"Rahnd the back...\" The pedestrian gate swung open.\n\nI followed the path round the back of the house marvelling at the opulence of the place. No wonder Shaz was happy with her situation. It was dusk now and as I rounded the corner of the house, I took in a huge double garage. There was a vintage Jaguar outside one of the bays and the engine was idling.\n\nShaz was splayed across the vast bonnet of the car, her legs wide apart, the long, spiked heels of her short red boots barely touching the gravel. She was wearing a black, full body latex catsuit with the odd revealing opening for easy access. Her hair was held up in a tight band and one hand was digging in the dirt. Her face was a mask of pure lust.\n\nA few weeks earlier, I had been repulsed by her. Now I'd have licked every inch of the driveway between us clean in return for one sweet drop of her pussy juice. I quickly looked around and realised as with Lexi's garden, we were well out of sight of prying eyes.\n\nShe took a long pull on her cigarette as I approached and smiled up at me. \"Cor, this bonnet makes me arse lovely an' warm on a fuckin' freezin' afternoon. Come an' warm the rest o' me up, eh Benji?\"\n\nI didn't say a word as I approached, unzipping myself. Her eyes narrowed as I took myself in my right hand. She took a last drag on her cigarette and flicked the end out into the cold early-evening air. She let out a feral grunt as I slid effortlessly into her. Her booted, latexed legs clamped themselves around my buttocks and I sucked the last of the smoke from her open mouth. \n\nThe next few minutes were purely animalistic. There was no finesse, no subtlety - just a headlong rush for release. I pinned her arms to the bonnet and went at it as if I was trying to push the car back into the garage. She fought to release herself from my grasp and tore at me, her long fingernails raking at me. I was glad I had a thick shirt on or I'd have had welts like whiplashes down my back. It was like sinking into warm velvet and she was so wet, there was virtually no friction. I could hear the front suspension creaking and groaning beneath our onslaught. Being so close to other properties, she barely made a sound and that turned me on more than her filthy talk from our first time. She just stared at me with those big brown eyes, her head nodding encouragement against the dark green metal, the heels of her boots digging against my buttocks like a champion jockey urging her horse on to the line. Little gasps escaped her lips as she bit her lip and thrust hard against me.\n\nWhen I reached the line, her mouth was wide open and I felt her flood over me as I shot load after load into her and her muscles contracted and squeezed down on me. It was utterly cathartic and we sucked the breath from each other as I lay on top of her and the sweat we had generated began to cool on us in the almost sub-zero temperature.\n\nAfterwards, we lay on the soft, vintage leather of the back seat, smoke from her cigarette curling up between us. We had not said a word since I entered her. She stroked my hair and broke the silence. \"Can't beat a bit o' rough, eh?\"\n\nShe had seemed gross to me the first time I saw her with Lexi, but I had changed my mind. She was no Lexi, but beneath the brash exterior, she was anything but rough and I told her so. I tried to imagine her a little less 'pumped up' and thought she could look quite attractive instead of just being an over-inflated real-life sex doll.\n\nOf course, Shaz being Shaz, the small talk didn't last for long. She finished her cigarette and scrambled out of the car, pulling me after her. It had not been easy to get into and it was even harder getting out. \"Come on, selfie time. Richard needs to see what I'm up to and you need to get one back on Sexy Lexi.\"\n\nShe hung out of the car window, cigarette in one hand, my rapidly hardening cock in the other. We snapped selfies of her blowing smoke onto my erection before running into the house laughing. She sent hers to France and I sent mine to Germany with the caption, 'Who let the dogs out?'\n\nTen minutes later I got a text back.\n\nLMFAO! Oh Ben - that is so fucking sexy. You've just paid off another little part of your debt. Now fuck her bloody brains out! \n\nI was there a very long time, and we did indeed fuck our brains out and thanks to another of her little blue pills, I was still going strong long into the night. At two in the morning, she rolled on top of me once more after coaxing me back to life with her tongue and cigarette smoke. It still felt weird but wonderful, and I was getting to like it a lot.\n\nAlmost an hour later I came up between those huge breasts and thanks to the pill, some of my spoils made it to her chin. She pulled me off the bed. \"Come on, let me show yer how Richard gets me cleaned up...\"\n\nAs she knelt in the shower, I thought I wouldn't be able to do as she asked. She assured me she loved it, and the sight of my cum sluicing from her as I directed my jet across her breasts and the latex catsuit was such a turn on. Afterwards, she did it to me and I was surprised as to how good it felt as she arched her back and her hot jet cascaded over my body. She stripped off her catsuit and we showered before tumbling back into bed, gently caressing each other to sleep.\n\nWe made gentle, slow love in the morning and afterwards I sat in the kitchen, watching her sip her coffee, gazing out pensively into the garden. She inhaled deeply and let out a long plume of smoke, her eyes glazing over with tears. \"You know sumfink, Ben? I once told Lexi I'm only in it fer the money. But truth is, I love the silly old bugger. He's a gentleman - a fucking diamond, and I'm a piece of fool's gold with stupid big tits and more fucking silicone in me body than the local hardware store sells in a year.\"\n\nShe waved a hand around and pointed to the huge garden. \"Look at this, Ben. How fucking lucky is little old Shaz Lafferty, born an' dragged up on a sink estate in Croydon, to be livin' 'ere, eh?\"\n\nI held out a hand and touched her shoulder. \"You're a fucking diamond too, Shaz. You may be gaining from it, but you're making an old guy very happy indeed. As you said to me the first time, you've got a heart of gold and if it means anything, I like you a lot - and not just for the sex.\"\n\nShe smiled at me and touched my cheek. \"Fanks, Ben - yeah, it does mean a lot. And yeah, e's an 'appy little camper. And with the help o' them pills, he's a bloody good shag, so I'm 'appy too! And I get to do all sorts o' pervy things to who I like!\" \n\nWith a rueful smile on her face, she gripped her huge tits. \"I'm having these things reduced though. I went far too far as per usual. And me lips. Be nice to suck dick without a ton o' collagen in the way.\"\n\nShe sighed and stubbed out her cigarette. \"Come on lover-boy - let's get you 'ome before they send out search-parties and I get done fer kidnappin' instead of me usual public indecency!\"\n\nShe dropped me at the edge of the village after a terrifying ten-mile ordeal in which she seemed to think the country lanes of Surrey were in fact a one-way rally track made just for her. She waved as she gunned the engine and roared off up the road and I got one last look at the bonnet that she had sprawled across so provocatively as she rounded the bend. She had promised to be in touch and I really hoped she would be.\n\nI prayed I had not been seen, but my prayer was in vain. I heard an amused voice behind me. \"Thought you found her gross!\"\n\nI turned in shock to find Abigail Cross walking up behind me, a huge grin on her face. She took my arm as we walked. \"Don't worry, won't tell you Mum when she's in the salon on Saturday!\"\n\nI stopped dead. I had known Abigail since I was a kid when I used to help sweep up hair from the floor when my Mum was under the dryer and she was a teenaged apprentice to her own Mum. This was just plain weird. \"What's going on, Abi... how d'you know? It was-\"\n\nShe cut me off laughing and we began to walk again. \"I was watching with Lexi when you and Shaz were at it. Nice little girly night in, it was! Quite the home movie - not exactly a chick-flick, but very entertaining. She sent me your selfie last night. Very sexy!\"\n\nI was squirming. I knew how hairdressers loved to gossip. \"Look Abi, please don't tell anyone. It's a small village - it would-\"\n\nAgain she cut me off. \"Secret's safe, Ben, trust me. All have our little secrets, eh?\" We had reached the end of Foxholes Lane and this time she stopped me. \"I thought I'd never be able to tell anyone this, but since I know your little secret, I can get something off my chest.\"\n\nTwo minutes later I let myself into the house reeling from the revelation that thirty-something Abigail Cross, happily married with two young children, had lost her Sapphic cherry to Lexi Kennedy whilst watching me and Shaz make out.\n\nIt had been a weird few weeks and I sat on my bed with my head in my hands for a very long time trying to take in all of what had happened.\n\nThen a text came in.\n\nIt's fkng freezing in Munich but I'm keeping very, very warm indeed ;o) Done a count up - debt repaid in full after last night with Shazza. Await instructions x \n\nThirteen - Lexi\n\nMunich was everything I hoped it would be. Ingrid had learned a few new tricks in the two years since we had met, and I certainly had a full new repertoire. I'd had my first full-on BDSM evening and whilst I was never going to include it in my portfolio, in the right conditions with the right people, I'd certainly go through the pain barrier again to achieve orgasms like those. At one stage I had been strapped to a bench in a dungeon with a funnel in my mouth while a guy with a ten-inch cock fucked the life out of me. Ingrid was tied above me, another huge cock in her arse, a Hitachi pressed hard to her clit. I was screaming my lungs out, barely able to breathe as her juices poured into the funnel and straight into my mouth.\n\nOn the flight back, I began to turn my thoughts to Ben and what I was going to do. I had put him through a lot, and he had seen almost every side of me, but from a distance. Shaz had done wonders and I was glad I had got her onboard. She had sent me glowing reports about her two nights with him. \"Just pop 'im a pill and he'll be at it like a jack rabbit and 'e loves all me dirty little tricks too, so 'e does!\"\n\nAs I gazed down at the hills and forests of Bavaria beneath me, I realised there was one side of me that Ben had never seen.\n\nI prepared the text at thirty-thousand feet and sent it when we touched down.\n\nSaturday, seven-thirty. Back door will be open. Me this time - I promise x \n\nFourteen - Ben\n\nThe huge bed was covered in those amazing black satin sheets again. I lay down as instructed by a note on the pillow and put on the blindfold that had been alongside it accompanied by a blue pill. The note had said. 'Get comfy. Take one and wear the other. Preferably the right way around.' I laughed as I popped the pill and put myself into darkness.\n\nAfter all that had happened, I quite honestly didn't know how I felt. I was nervous, but thanks to Shaz, I was more confident in being able to at least hold my own and hopefully thanks to the pill, not disgrace myself.\n\nI lay trying to imagine what she had in store for me. When I found out, it was the last thing I expected.\n\nAfter what seemed like an eternity, I heard the toilet flush in the adjoining bathroom. Then a sink running and after a couple of minutes I held my breath as I heard the handle turn. I expected - and hoped - to hear the click of bootheels on the wooden floor, but all I heard was a soft padding sound. When she spoke, her voice was quiet and I assumed she was standing at the foot of the bed.\n\n\"Hello Ben. So we finally find ourselves in the same room at last. It's been quite a journey, hasn't it? I hope you enjoyed it as much as I did. You've seen me in quite a few of my many guises and usually, as you know, people pay a very large sum of money for that privilege.\" She laughed. \"Do you feel privileged, Ben?\"\n\nI swallowed. I had rehearsed what I was going to say so many times. \"I'm sorry that I made a stupid mistake and I'm grateful that you didn't go the police and have responded the way you have. I feel that I don't really deserve your understanding. It was a crass and ignorant thing to do and I'm sorry I scared you. If you tell me to go now and nothing happens between us, I'll fully understand. If something happens, then yes - I feel it is a privilege.\"\n\nI heard a shuffling movement and when she spoke again, her voice sounded nearer. \"Glad you realise that Ben, but I'm not going to send you away.\" A small laugh. \"At least not yet.\" There was a pause and she sighed deeply. \"Which me do you prefer, Ben? The slutty schoolgirl? The latex vamp? The cum dribbling whore? You see, they are all little personas that have developed and I love them all, but they are layers that sit on top of the real me. They are an act - an illusion to appeal to the baser instincts.\" \n\nAgain more shuffling, and again she seemed closer, now above me and slightly to my right. \"I thought long and hard about which persona to be with you tonight, Ben. Then I realised there was only one that you hadn't seen. The one with everything stripped away. The real Lexi Kennedy, not the exquisitely made-up mature escort who dresses to kill and takes men and women to heaven and back for a living.\"\n\nShe was so close now I could feel her breath on me and my body stiffened as I wondered what was coming next. I felt hands go to my temples and grip the stretch fabric of the blindfold. Her mouth was close to my ear and she whispered the last few words. \n\n\"You'll get to meet as many of the fantasy Lexis as you want, Ben. But first you'll have to go through the real one...\"\n\nI blinked as she removed the blindfold and I did a double take. She was kneeling on the bed beside me, smiling down almost shyly. Her normally lustrous red hair was bound up on top of her head in a tight band, red wisps escaping in all directions. There wasn't a trace of make-up on her face and this close, beneath a pair of large, dark-rimmed glasses, I could see tiny crow's feet around her eyes, slightly betraying her age. Her eyes looked a little tired, though they still sparkled. Her skin was pale and there were little freckles on her nose. Where I had hoped for her latex suit or leather boots, she was wearing a long, cotton pyjama top with pale and darker blue stripes. The only other thing I could see she was wearing were fluffy little house slippers. As with when I had seen her in the lane in her big baggy hat, she looked almost girlish despite her almost forty years.\n\nShe held out her arms. \"So, c'est moi. The girl beneath the veneer. Will the real Lexi Kennedy please stand up? This is me, Ben - this is how I usually make my tea - not in a red latex catsuit. I don't usually walk towards the window dressed as a schoolgirl or with my mouth full of cum.\"\n\nShe got up and stood by the bed. She shook her hair down and it fell back to her shoulders in a ragged bundle. She leaned forward and pointed to the slightly darkened roots, flecked here and there with a hint of grey. \"Abigail has to work fucking hard on those, Ben. She pressed her tummy. \"I have to work fucking hard to keep this down. I drink too much and I eat too much fine food. The sex helps, but I need to work bloody hard otherwise.\" She unbuttoned her pyjama top and let it fall open. Her usually immaculate Brazilian was a little ragged around the edges. \"I've had a week off work since I got back from Germany. Recharge the batteries and all, but as you can see, I've let things go a little - mainly for your benefit.\" \n\nShe closed her pyjamas around her again, covering herself back up. \"To let you see the real Lexi, warts and all.\" She sighed. \"It's great fun doing what I do, don't get me wrong, Ben - but like all jobs it has a downside. Sometimes I just want to be me again.\" She shrugged. \"Most of the time, I love being the other Lexi. The escort, the call-girl, the whore, the prostitute - call me what you will, I don't fucking well care. It fucking turns me on, Ben - it liberates me and I do things with people I never thought I was capable of.\"\n\nShe bit her lip and shook her head, her hands on her hips. \"So, here we are then, eh? You finally get to see and watch the real Lexi.\" She closed her eyes. \"Still fancy me, Ben?\"\n\nMy heart pounding at her honesty and candour, I got up and stood next to her. For the first time in almost two months, I got to touch Lexi Kennedy. I took her lovely heart-shaped face in my hands and placed a tiny kiss on her pale lips. There was no spectacular aroma from her, no sheen to her hair as I ran my hand through it. No leather, no latex. Just a woman in her late thirties in a pyjama top and fluffy slippers. Her eyes had misted over a little behind her glasses.\n\nI stood back and took a deep breath, staring into her clear amber eyes. \"Thank you for letting me see the real you, Lexi.\"\n\nShe held my gaze. \"And?\"\n\n\"I want to fuck her personas until they scream and I unload onto their faces, in their mouths. I want to take the slutty schoolgirl up her arse as she smokes her cigarette - I want to feel those boots raking my skin as I suck that red-trimmed pussy until she passes out with joy. I want to lie beside her as she dribbles my cum into Zdenka's mouth before they squirt their juices over my face as they pleasure each other.\"\n\nTo my astonishment, I could see her trembling slightly as I went on. \"But this Lexi - she's every bit as beautiful as any of her other personas.\" I took hold of the collar of her pyjama top and pulled her gently towards me. \"This Lexi, I just want to make love to.\"\n\nOver the last few weeks, she had done things that had sent me almost mad with lust. Now, the smile she gave me almost melted my heart. She gently pushed me down onto the bed and lay down next to me. She put her glasses on the bedside table. It took us twenty minutes to get naked and it was at least ten of those minutes until we even touched each other down below. \n\nThere was no coming in mouths or bed-rattling ferocity as there had been with Shaz. Just a gentle, insistent rhythm that we both picked up on, and if I thought Shaz was like velvet, I didn't have the words to describe the feel of being inside Lexi.\n\nHer eyes were shining when she came - I couldn't believe I had lasted so long and as I took her from behind as we lay on our sides, she guided me in how to touch her to help make her come. As I gripped her hips and ground into her as slowly as I could, I could feel her pushing back against me. She squeezed her muscles hard and I felt a euphoric rush as I pulled on her nipples and I cried out her name as I released into her. She was seconds behind me, our combined fingers working on her clit as she shuddered and spasmed in my grasp.",
        "She let out a long sigh as I slipped out of her. She rolled over to face me, her face flushed and her voice breathless. \"That was amazing, Ben. It's so good to be intimate again.\" We kissed for a very long time and I could feel tears on her cheeks.\n\nI pulled away and touched her on the nose. \"You ok?\"\n\nShe nodded. \"Yeah - just reminded me that sometimes in all the spectacular stuff, I just need it to be personal bit more often.\"\n\nThen her face changed. Her mouth fixed itself hard line and she pointed to the door. \"Right, that's it - we're done. You got what you came for. Now fuck off and don't ever come within a fucking mile of me again or I'll call the police.\"\n\nI recoiled in horror and disbelief. \"Lexi - what? After what we just did - that's it?\"\n\nStunned at her reaction and sudden change, I got up and stood by the bed, my erection now flaccid and still coated in her thick juices. I held out a placatory hand to her. \"Please, Lexi-\"\n\nHer face was now a mask of fury. \"Don't fucking 'Lexi' me, get out you pervert!\" \n\nShocked beyond belief and almost in tears, I reached down to pick up my clothes from the floor next to the bed. As I rose back up, she was curled in a ball on the bed in hysterics. She pointed at me. \"Fooled you! Oh, your face! Poor Ben, come back here you lovely boy, I'm nowhere near finished with you yet!\"\n\nNow I almost cried in relief. I dropped my balled-up clothes and she shuffled to the edge of the bed and took me in her mouth. I gasped as she sucked and licked the mess from me before giving me a little kiss on the tip.\n\nShe smiled up at me and shook her head. \"So gullible! Now, be a good boy and go down and get a couple of beers from the fridge. Shaz said you and she did it five times. Got to beat that - can't let her win, can we?\"\n\nGrinning I went downstairs in sheer relief. When I returned, Lexi had gone. In her place, lying on the bed was a schoolgirl with long blonde pigtails, wearing a micro skirt, ripped fishnet tights and long grey boots. \n\nShe smiled up at me. \"That woman that just left said you were pretty damned good. What are you like at arse-fucking a slut?\"\n\nFrom the sounds she made, I was pretty good at that too. By morning, I had met three more of Lexi's personas and I finally knew what it felt like to have her boots rake my back while I sucked on her. As the sun rose, we went back to how we had started all those hours before, and satisfied we had beaten Shaz, fell into a deep sleep until well past midday.\n\nThen I got to see her make her tea in her pyjamas and glasses and it was almost as sexy as the girl in the latex. We sat in her lounge drinking tea and she told me her story. It took her a while and by the end of it, we had switched to beer. She ordered a Chinese takeaway and we fed it to each other with the chopsticks at her kitchen table. Then I got to do to her what she had done to herself with the cucumber and this time I was in the room with her as she dribbled cum from her mouth and rubbed it around herself. Another small difference was that it was my cum and the feeling as I shot into her mouth will live with me until my dying day.\n\nOver the next few weeks, I got to meet all of Lexi's personas on her nights and some afternoons off, but we always made sure we ended with the real, stripped back Lexi. I wasn't infatuated with her anymore. I wasn't in love. I was just building a deep friendship with a strange, contradictory woman who could rage like a hurricane or blow like a gentle zephyr.\n\nIt had felt strange making out with a girl in front of another man, but when Shaz had asked if I'd join them in the torment of poor Richard, I could not refuse. The newly deflated Shaz looked so much better and despite her lip-reduction, she could still suck like an angel. I came, squeezed up between tits that were still big, but much better proportioned. They actually now moved in a natural way, and given how Shaz usually went for it, it was a spectacular sight. I moved away to allow her husband to add to the mess I had made and retreated to the shadows to watch a show beyond compare as Lexi and she got to work on each other. Shaz had tried to negotiate me half of the fee, but Lexi was having none of it. Apparently my payment was the pleasure of partaking and I couldn't argue with that.\n\nShaz had texted me from the car. He's away at Maman's again next week. Fancy a shag in a Bentley? . \n\nI did indeed and it was amazing.\n\nThen one night, Lexi led me into the bedroom blindfolded and bound my hands to the bedhead with Velcro straps. She had done it a number of times before and I loved her teasing me. I felt a tongue probe at the head of my erection and sighed. Then I felt an electric jolt as a second tongue began to worm its way up to join the first and my blindfold was removed. I looked down in amazement as a blue-eyed blonde in an electric blue latex catsuit smiled back at me, her long tongue flicking at the head of my cock.\n\nLexi was in her red latex. She smiled up at me too. \"Don't think we need any introductions, do we?\"\n\nZdenka took me in her mouth and I groaned in pleasure. She worked for a moment then purred at me. \"Hi Ben - remember that photo we sent you?\"\n\nMy throat was so tight, I could only nod back at her. It seemed like a lifetime ago.\n\nShe winked at me. \"About time we made our own version, yeah?\"\n\nEpilogue - Lexi\n\nBen finally went to University a few months ago and he is getting along just fine. His band are going great guns and they have had loads of downloads on YouTube. Their first digital EP is just out and going well on Spotify. One of the tracks has me in floods every time. You'll see why in a minute.\n\nI am lying in bed now, watching one of their gigs at the Uni and I feel so proud I could fucking well burst. As the penultimate song of their set ends, Amie, the lead singer walks back to the mike, her electric violin in her hand. She is tall, with a vast tumble of auburn hair to her waist. She's almost thirty - a post grad student doing her PhD; but then again Ben always did have a thing for older women.\n\nShe thanks the audience and introduces the next song. \"Cheers guys. Ok this is our last one tonight and it's the title track of our new - and first EP. Available now at all good downloaders near you. Maybe one day we'll make a vinyl version - which is quite appropriate really as this one is for a very special lady and was written by Ben over there on the guitar and keyboards. It's called 'Drone Strike', and it's a bugger to play, but hopefully it goes something like this...\"\n\nI feel a tear trickle down my cheek as Ben plays the intro on his keyboard. It is a sample of the Mellotron, the old tape-driven monster that adorns Nights in White Satin and Space Oddity; two of my all-time faves. The other-worldly sound of the shimmering, wavering strings sends a shiver down my spine, especially when Amie joins in on her violin. The bass player begins a loping riff underneath and Shaun the drummer picks up the beat on the hi-hat, adding a few snare cracks as the track gains impetus. There are bits in 5/4 then 7/8 and other timings I cannot fathom from my old music lessons way back in the day. All I know is, it sounds sensational.\n\nAs Ben begins to pick off chords on his Rickenbacker twelve-string, the song takes off and Amie's violin heads into the stratosphere. It rages for a minute or so then reaches a crescendo and crashes to a halt. Back in straight 4/4, Ben is back on the keyboard and Amie moves to the mike. Her voice is rich and mellow and suits the music perfectly.\n\nIt silently flies on a cold winter's night, hovering, watching forbidden delights\n\nThe guilt, the elation, that face oh so fair, enslaved and enraptured, perfection so rare\n\nInfatuation, impulse, desire, slave to her every move, flying me higher\n\nShe takes me to heaven right under her spell, but for each second there, I spend ten more in hell\n\nAnother tear escapes me and I hear a sigh from my right as a long, elegant, red-tipped finger reaches up to wipe it away. Ben then does something amazing with a D Minor shift and Amie takes off with the chorus, Chloe on the bass harmonising her vocal lines and Ben providing ringing chords as the other guitarist Gary goes into grunge mode. I feel myself shaking with emotion as the glorious melody unwinds from the chorus into the middle eight.\n\nForgive me my sins as I watched uninvited, let me atone and let misdeeds be righted\n\nThe things that you gave I can never repay, your beauty will live with me for all of my days\n\nI flew in your airspace, you shot me to earth, you put me through hell and then gave me rebirth\n\nUnworthy and craven, I came to your door, defeated and empty, I crawled on the floor\n\nThe beauty inside you could not be denied, you gave me your all and held on as I cried\n\nMy sins are forgiven, my new love is true, my guardian angel, this song is for you\n\nThe look Amie gives Ben as she sings the penultimate line sends more shivers through me and at the last line, I let out a little sob. How did something so strange end up this way? \n\nWe watch and listen as the instrumental break takes off into more weird time signatures and the mellotron washes beneath Amie's violin before Gary joins her on lead guitar for a glorious minute of soaring harmonies. The chorus is repeated then it drops back to the introductory melody and shivers to a halt as Amie sings the last line of the middle eight once more. \n\nMy guardian angel, this song is for you\n\nFour minutes and fifty-two seconds of sheer bliss, and twenty-year old Benjamin Alexander Laidlaw wrote it for me on the beautiful Rickenbacker twelve-string I bought for him as a thank-you for a memorable year.\n\nThen the absolute kicker. The bit I've watched over and over since Ben sent me the link. He walks across and joins Amie at her mike. He stands there, his long hair in a ponytail, his beard a little fuller and slightly less unruly. Amie is obviously having a good influence on him. He smiles at the crowd who have clearly enjoyed the show.\n\n\"Thanks for being a great audience. See you next time. We've been 'Lexicon' and we hope you enjoyed us. Goodnight!\"\n\nI'm in absolute bits now. Not only has Ben written a song about me, but he's even called the band after me. Zdenka puts her arm around me. \"It's so beautiful, Lexi. Wish someone would write a song about me, but it would probably rhyme 'suck' with 'fuck!'\" \n\nZed always knows when to make me laugh and I was elated when she agreed to move in with me. At first, she had said 'no' - she didn't think she'd make a good lodger. Then I told her I didn't want a lodger. I told her my feelings for her and she had cried. She'd had no inkling I felt that way, and to be honest, it all kind of crept up on me unannounced. \n\nI used to get the odd strange look in the village and now we get even more, but we don't care and Abigail keeps threatening to take on a new assistant the amount of work we put her way. I see the way she looks at Zed in the mirror occasionally and hope she may whisper something in my ear about Steve being away, but so far that little fantasy has not come true.\n\nI put the iPad down and snuggle into Zed's embrace. We've got a big weekend coming up - we are going to be Party Girls and that means lots of fun.\n\nBut first, I have her all to myself for tonight. I begin to lick her ear, the chorus of the song still ringing in my mine. \n\nBen will be back for the Christmas break soon. His folks are going to be away and his brother is staying at his Uni with his girlfriend.\n\nBen and Amie will be alone just up the lane from us.\n\nAt least they'll be alone some of the time. Ben has promised he'll keep the curtains open.\n\nI'm planning a little drone-strike of my own and I'm looking forward to thanking him for writing the song and Amie for singing so beautifully about me.\n\nBut that's a little while off yet. In the meantime, I have my gorgeous, pneumatic Polish girlfriend named Zdenka to attend to.\n\nSo - as I think we've just about covered everything, if you don't mind..."
    ],
    "authorname": "BarracudaSwordfish",
    "tags": [
        "group sex",
        "inexperience",
        "lesbian sex",
        "mature",
        "revenge",
        "spying",
        "stalking"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/counter-surveillance"
}