{
    "title": "Slightly, Once Ch. 05",
    "pages": [
        "So much fun to write. I start with a blank screen and the title, not really knowing where it's going. I have two characters, one of whom bewitches me. Strap in.\n\n\n\nI awoke to find a tall, sleeping form cuddled into my backside, arm across my waist. I could hear her deep breathing. I dared not move. She needed her sleep, especially after last night. Incendiary sex, followed by the most gentle lovemaking, had tuckered us out, to say the least. The feelings of love were thick in the air.\n\nI tried to stifle the need to urinate, which worked, for a while. Finally, I slipped away silently, taking my clothes into the bathroom. A quick shower felt refreshing, and I was fully awake. I'm not sure whose toothbrush I used, but I tried to wash it thoroughly afterwards. When I snuck back into Kim's bedroom, I saw blue eyes peeking at me from the covers.\n\n\"Good morning, bright eyes,\" I said. \"It's a new day, and I'm happy that I'm in love with the most wonderful woman in the world.\"\n\nThat earned me a smile, and teasing. \"And who would that be?\" she said, voice muffled by the pulled-up covers. \"Where is she? I'll rip her apart.\"\n\nHer last night's shyness was gone, thank heaven. The burden of leadership was uncomfortable on my shoulders. \"Now, now,\" I wagged my finger. \"No need for self abuse.\"\n\n\"Yeah,\" she said, as she emerged from the covers to stretch an arm high and yawn. She was naked, and I admired her breasts. \"Why abuse myself when I have you to do it to me, like last night?\"\n\nI was a little surprised. \"Are you calling last night abuse?\"\n\n\"Well, you carry me to my bed, force me to give you oral sex, remove my clothes, and sex me until I scream. What would you call it?\"\n\n\"Blissful.\"\n\n\"Hmm. I guess you're right. If that was abuse, call me a confirmed masochist. Kiss me, you fool.\" She held out her arm to beckon me. I jumped onto the bed, and on hands and knees, bent to smooch her. She was immediately aware of morning mung mouth. She covered her mouth with her hands \"I must taste terrible.\"\n\n\"You taste like you've just awakened from a deep sleep. I take no offense, and in fact I'm delighted to be able to taste you first thing in the morning.\"\n\nShe jumped out of bed, grabbed some clothes from her dresser, and ran into the bathroom, slamming the door. For my part, it was fun to watch her run around naked.\n\nI went downstairs and found the stuff for making tea, and got the water heating. I was just pouring two cups when Kim came down the stairs, toweling her long hair. And oh, my. She wore a long white T-shirt that came partway, but only partway, down her long thighs. And the newly-beloved hot pink leg warmers.\n\n\"You look nice,\" I said. \"I like your outfit.\n\n\"You just think my leg warmers are sexy,\" she said with mock petulance.\n\n\"You're right, I do,\" I said.\n\nShe came up to me, standing close, her face inches from mine, hands at her sides. \"Oh yeah? Then whatcha gonna do about it?\"\n\nI put my hands on her shoulders, and gave her a gentle kiss. Toothpaste. \"Do you really want to find out?\"\n\nShe nodded, slightly, once.\n\nI moved in, took her in my arms, and kissed her. She melted into me, and went up on tippy-toes with her arms around me. As we kissed, I had to do some reconnaissance. My hands worked their way down her back, and found their way under the T-shirt, grabbing what I thankfully found to be bare cheeks. This would be easy.\n\n\"I think, fair maiden, that I need to abuse you.\"\n\n\"Oh, please, sir knight, spear me with your lance!\"\n\n\"'Spear me with your lance?'\" As in I Can't Believe You Just Said That.\n\n\"You know what I mean.\"\n\n\"I think I know what you want.\"\n\nAs we continued to kiss, I peeked and saw the route, and began to slowly back her towards a kitchen chair. When we got to it, still kissing, I maneuvered us around to where the backs of my knees were against the seat. I broke our kiss. \"Pull down my pants.\"\n\nShe resumed our kiss, but her hands worked my belt, snap and zipper. She pulled down jeans and briefs in one swift move. She laughed. \"I'm getting better at this!\"\n\nMy pants at my ankles, I sat on the chair. Taking her by the waist under the shirt, I had a brief glimpse of pussy before she spread her legs to the outside of the chair (with the leg warmers rubbing the outside of my thighs. Yum.) and settled her down. Her hand guided my cock to her opening and I slid inside, her sitting on my lap, impaled. I quickly lifted her shirt off, and then my own. We were naked on the chair (except for those leg warmers), entwined.\n\nWe just settled in. I caressed the outside of the leg warmers. I could move my head down slightly and take a breast in my mouth, which I did. Kim took my head in her hands and pressed me to her chest. I sucked each nipple in turn. I sniffed. I looked up at her, smiling. \n\n\"You put perfume in your cleavage,\" I said. \"For me?\"\n\nShe smiled down at me, and wiggled her butt a little to stimulate me. \"I wanted to be irresistible,\" she said, remembering what she asked me when I gave it to her on Christmas Eve.\n\n\"Kim, you are irresistible all by yourself,\" I said. \"You don't need perfume for me. But that said,\" I licked a long lick up between her breasts. \"I like it.\" I pressed my nose between her breasts and inhaled for emphasis.\n\nShe held me there. \"Oh, David, I love you so much.\" She set up a gentle rocking on my lap. My arms encircled her, and as we made love. I felt her back with my hands. The smooth skin, the muscles, the curve where her back met her buttocks. I held her hips, and just let my hands follow the movement of our soft thrusts. Her pussy was so tight on my cock, all warm, and slick. I could feel her inner contours, feel my helmet as it slid up and down her vagina. My hands went to her shoulders and pulled her down, kissing her, my tongue searching for, and finding hers in her mouth. We reversed and her tongue entered, licking under mine and circling it, I bit down softly and she giggled, but stayed inside my mouth. All the while, we rocked a steady, slow rhythm.\n\nThen, she just melted into me. What had been close became closer. I could feel her skin against the length of my chest and belly, feel her hard nipples poke me. Her arms pulled me closer, our lips locked. I moved my hands and grabbed her cheeks, and began to move her back and forth, sliding myself in and out of her nether lips.\n\nJust as I thought we couldn't be any closer, she moaned, shuddered, and pressed even closer as she climaxed. That was too much for me, and my cum came shooting up. It caught her by surprise and she jumped.\n\n\"Oh, Dave, I can feel it! I can feel you shooting inside me! Oh, Dave, making love to you is so wonderful.\" She pulled me tight and ground her pussy against me, milking every drop.\n\nWe clenched each other in the tightest of hugs for several minutes. Then, she looked at me. \"Worked up an appetite yet? I want to make you a special breakfast.\" She clambered off me (with my hands sliding on the leg warmers as she did), put on her T-shirt, and set about a frenzy of activity making Belgian waffles with whipped cream and strawberries. As she worked, I glumly handed her a cup of tea.\n\n\"The tea is cold,\" I complained. \"It wasn't a while ago.\"\n\n\"Oh!\" she mocked. \"Poor David! What happened?\"\n\n\"We got distracted,\" I moaned, in mock despair. \"Now, it's cold.\"\n\nShe came to me, and put her arms around my neck. \"Well, sometimes the price of love is high.\" She kissed my nose. \"Was it worth having your tea get cold?\"\n\nI smiled. \"You are worth any price. I love you, Kim.\" With that, I kissed her.\n\n\"Mmm. Nice. But let's eat. Waffles are ready.\"\n\nWaffles and cold tea were tasty. My admiration for her cooking skills increased. While I did the dishes, Kim disappeared. As I was drying the last plate, she returned.\n\n\"Where have you been?\" I asked cheerily.\n\n\"Well,\" she said thoughtfully, \"So far, we've made love in the family room, in my bedroom, and in the kitchen. I was scouting our next location.\"\n\nI almost dropped the plate. \"Our next location?\"\n\n\"Yeah, where I want you to screw me next time.\"\n\n\"Such language from such an elegant lady!\"\n\n\"Don't want to be a lady. Wanna fuck!\"\n\n\"Tut! Tut!\" I admonished in mock horror. \"And what did you decide?\n\n\"Dining room table. I think it's about the right height.\"\n\n\"Oh. OK. And when did you have in mind?\"\n\nShe took me by the hand. \"Starting about two minutes ago.\" She led me into the dining room, and turning around, sat on the edge of the table, having thoughtfully placed a towel underneath her tush. She once again dropped my pants, even more smoothly than before, and pulled my shirt over my head. She peeled off her own shirt, and, grabbing me by the hips, nestled me in between those leg warmers. She kissed me.\n\n\"Dave?\"\n\n\"Yes, Kimmie?\"\n\n\"Dave, first of all, don't ever call me 'Kimmie' again.\"\n\n\"Oh, sorry.\"\n\n\"No apologies. But Dave, would you...would you kiss me down there?\"\n\n\"I would be most happy to!\" And wasting no time, I dropped to my knees, put her legs on my shoulders (feeling the leg warmers against my ears) and proceeded to make a frontal assault on her pussy. Licking, sucking nipping, I ran my hands on her hips, down her thighs, and up to cup her breasts. She moved to press herself against my mouth, moaned, cradled my head in her hands, and sighed. I could feel her climax building, and I didn't want to disappoint. Finally, she bucked into my face and shuddered, pulling my head into her snatch. She clamped her thighs, and I thought she might crush my head. Leg warmers. Wonderful.\n\n\"Oh, Dave, I'm cummmmming!\" She cried.\n\nI slowed my activities, and held my tongue against her clit. That sent her over the edge again, and she had a second less powerful orgasm. She stroked my hair as she came down.\n\n\"That was so good. Can I suck you?\" \n\nI got up, and moving forward, kissed her. \"If it's all the same to you, my most darling love, I want to be inside you.\"\n\nHer smile was radiant. \"Use the 'L' word with me, and I'm putty in your hands.\" She took me by the waist and pulled me forward. The aim was true, and I slid in all the way. Her arms moved up to my shoulders. I started stroking in and out in a slow-ish rhythm.\n\n\"Fast or slow? Soft or hard? What does my lady desire?\"\n\n\"Your lady desires to be fucked by her man any and all ways he wants,\" Her breathing was ragged already. \"Fuck me, David! Fuck me and love me and screw me and pork me and shag me! Let me feel your cock! Let me feel your cum!\"\n\nSounded like fast and hard to me. I obliged, picking up the pace and energy. She leaned back on the table, supported by her elbows, while I stood between her legs and repeatedly filled her full of fat, hard cock. I took her legs and raised them, holding them wide apart as I thrust. I put her ankles on my shoulders and found I could go even deeper. She took me by the biceps and pulled me, screaming while cumming hard. Once again, I marveled at the feeling of my shaft sliding in and out, feeling the warmth and wetness, the tightness of her pussy muscles as she clamped them. I slid my hands between her cheeks and the towel, taking two hands full of flesh. She wrapped her legs around my waist and put her arms around my neck, lifting herself into my arms. I straightened, and supported her, holding her ass in my hands. She bounced up and down on my cock, fucking me. I just held on for dear life, having a vision of her breaking off my dick were she to tumble.\n\nShe tried kissing me, but her bouncing was too much, and she chose instead to just hug me tightly to her chest and rock her hips. I helped, taking her cheeks and lifting and pulling her to me. We fucked away. She came again, and just as I was feeling that my legs would give out, my cum roared up from my balls and sprayed into her pussy. She felt it, and it took her to new heights, crushing me with her arms, legs, and vagina. It was intense. I put her down on the table, but didn't leave. I stayed deep inside, but still.\n\nHer body wracked, as if it were a sob. I pulled back from my hug and looked at her. She was crying. My hands cradled her face.\n\n\"Kim, what's wrong? Did I hurt you? What's the matter?\"\n\n\"I'm sorry,\" she said. \"But sometimes I can't help it. I feel so much love for you I want to burst! And just now, making love, it welled up from somewhere and I just couldn't help it. I needed to cry. But there's nothing wrong, my love. Just the opposite. You mean so much to me. I need you so badly. I love to love you, to give you my body, to feel you inside me, to have you make me climax, to feel your sperm. It is so much more than I ever imagined or fantasized. I don't ever want it to end. \" She clung to me and sobbed. I held her close, my dick softening and slipping out of her.\n\n\"Come with me.\" I led her by the hand into the family room, where I motioned her to the sofa. She lay down and I took the throw from the back of a nearby chair, and lying beside her, covered us. I wrapped my arms around her and held her close. She burrowed into me and cried and cried. I had no words. After a long while, she quieted, sniffling slightly. There was a box of Kleenex on the side table, I offered her the box and she took one, blowing her nose. We resumed cuddling.\n\n\"I don't know what I can say,\" I ventured. \"Getting to know you, getting to date you, falling in love with you have been the most wonderful things that have ever happened to me. You have become more precious to me than anything else. It has been a privilege to be your friend, and blissful to have become your lover. I love every square inch of you, Kim, more than you know. More than I know how to say. You lift my heart with every word you say to me, every glimpse I get of you. I love your eyes. When I see you looking at me I just want to melt.\n\n\"You had a hard season during basketball. My heart bled for you when I saw how much pressure you had to endure, how high everyone's expectations were of you. How you had to become the leader quickly, and take on the responsibility of everyone looking to you. And you did it with such grace, style, and class. You bore it all, and the pressure never showed. I've never seen you get angry, or impatient, or bossy, or arrogant. And all the while, most amazingly to me, was that you loved me. Cared for me. I still don't really understand why. But I wake up every morning and spend time being grateful that I can be with you, spend time with you, and love you.\"\n\nShe looked at me for a long time. \"David, you never cease to surprise me. You were my rock. You were the one person I felt I could completely trust, completely rely on to always be there with a gentle word, a hug, or to hold my hand. I truly, honestly don't know what I would have done without you. Yeah. It was pretty terrible at times, and I didn't know if I could keep it together. But somehow every time I was about to lose it, magically, you would appear and say exactly the right thing, or have flowers, or tickle me, or do something that would say 'there, there, Kim, this, too, will pass.' You seem to instinctively know who I am, what I need, how to help. What woman wouldn't fall deeply in love with someone like that? There's no mystery to me, David. You are an incredibly special man, and I love you with every last bit of my heart.\"\n\nShe kissed me, tenderly.\n\nI needed to change the subject. \"Can I tell you something?\"\n\n\"Of course, my love. You can tell me anything.\"\n\n\"I was talking to my guidance counselor the other day. It looks like I'm going to be valedictorian.\"\n\nKim gasped. \"David! I had no idea! You've never even hinted! I knew you were a good student, but I didn't know you were a genius! I'm so proud of you!\" She hugged me there on the sofa, almost crushing me. \"Why didn't you tell me before? Keeping secrets, huh?\" she teased. \"Secrets! Does that mean you have another woman tucked in the closet?\" She laughed. \"Don't look so...so...David-ish. I'm only kidding. But I don't know what to say, except that I'm proud of my man!\"\n\n\"Well,\" I said. \"The rankings change almost every semester, and while I've always been near the top, it was always a gamble whether I'd land on top at the end. But it's looking good, or else my counselor wouldn't have told me. And besides, it's not like I'm an All-American.\"\n\n\"It is to me,\" she said. \"It matters to me if it's important to you.\"\n\n\"I've thought about it a lot. It's important, and not important. I guess I'm competitive enough that it matters to me. But I don't like the spotlight, and am quite happy in your shadow.\"\n\n\"You're not in my shadow.\"\n\n\"I certainly am. Everyone is. It is because you are so truly radiant. You walk into a room and everyone casts a shadow on the wall, with you as the source of light. It's amazing to watch. Friends of my grandparents say they saw President Kennedy once, and they said he glowed. So I think it's true, and I think you have what it takes to light up a room.\"\n\nShe cuddled in, and I could feel her cheek against my chest, hot. My girl was blushing.\n\n\"We need to celebrate you,\" she said. \"This is important. This is huge.\"\n\n\"I think I know of something better to celebrate.\"\n\n\"What's that?\"\n\nThe Bomb. The Unasked Question. \"Where are you going to go to college?\"\n\n\"Dave, I don't want to talk about that,\" Kim said abruptly.\n\n\"No, let's talk about it,\" I said.\n\n\"But Dave, I don't want to talk about it. It makes me sad because we'll be separated! I'll never get to see you! I'll lose you!\"\n\n\"Kim, this is important. What's your top school at the moment?\"\n\nTears rolled down her cheeks. \"It's still Duke, I think.\"\n\n\"How interesting. I got a full academic scholarship offer from them three weeks ago.\"\n\n\"What?\"\n\n\"What's your second choice?\"\n\n\"UConn. Dave, what did you just say?\"\n\n\"Hmm, my full scholarship offer from them came last week.\"\n\n\"Dave! You're kidding me!\"\n\n\"Third choice?\"\n\n\"Tennessee.\"\n\n\"A month ago. Do we need to go on?\"\n\nKim hugged me tight. \"What did you do?\"\n\n\"I listened carefully. I followed your recruiting agonies. Remember all those conversations about the schools you were interested in? I applied to those I thought you were most interested in, and applied for academic scholarships. Turns out there's more value to being valedictorian than just having your girlfriend think you're a genius. I have already turned down full rides to Princeton, Brown, and Amherst College. They recruited me, but they weren't on your list.\"\n\nShe shook her head. \"David, you never fail to surprise me.\"\n\n\"I won't let you get away that easily. You taught me how to use the 'L' word, and apply it to the most wonderful girl in the world. I won't let you go. You're stuck with me.\"\n\n\"That's good. You have no idea how good. What can we do to celebrate?\"\n\n\"Right now, or later?\"\n\n\"Both. What do you want to do?\"\n\n\"Well, later, I want to take you out to dinner. Well go someplace special. Right now? Well, uh, do you think, uh, well, that you could kiss me down there?\"\n\nThose blue eyes looked into mine, and I saw the love. She nodded slightly, once, and sank to the attack.\n\nI hoped I survived.\n\n\n\nI was going to leave these two here, on the verge of a happy ending. But I just can't let go of this spectacular lady. Maybe one more episode. Thanks for reading."
    ],
    "authorname": "Balrog",
    "tags": [
        "drama"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/slightly-once-ch-05"
}