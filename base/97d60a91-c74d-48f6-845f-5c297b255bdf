{
    "title": "Hitting the Bottom Ch. 05",
    "pages": [
        "Author's note: \n\nIn previous chapters: Dan, a cop, had attempted suicide after assaulting his ex-wife/sub, and then ended up at the hospital where he met Nurse Sandra. Their relationship grew over the weeks following his release when she provided homecare services and they became lovers after Sandra all but jumped Dan at her place. Sandra rather enjoys the occasional glimpses of Dan's true dominant nature, while Dan struggles as he fears succumbing to it would put Sandra at risk. \n\nIn this chapter: Dan works to find a new equilibrium with the help of his shrink, Dr. Pappas, Sandra messes it up with some fun ideas of her own. \n\nThank you for reading, hope you enjoy it! \n\nPS - Grovel to my co-creator and editor, the one and only Brit! ;-) \n\n~~~~~~~ \n\nBrits' note: \n\nBeer and grovel would be better :-) \n\n~~~~~~~ \n\nI gradually become aware that the sweet-smelling warm nakedness I've been hugging closely to my stirring midsection isn't part of my dream, but rather belongs to a living, breathing, sleeping beauty. With my eyes still closed I spoon myself closer to her curvy backside letting my stiffening dick nestle snugly between her smooth ass cheeks and bury my nose in the hair at her nape, breathing in her scent. \n\nGod she smells so good. She feels so good in my arms. \n\n\"Mmmm...\" \n\nSandra's sleepy murmur is muffled by the pillow as she wiggles her ass back at me, apparently enjoying my swelling member rubbing along her crack. I wrap my arm more tightly around her waist and palm her breast, cradling its heaviness and kneading it gently while my hips start rocking shallowly back and forth. Sandra stretches, the movement pushing her breast more firmly into my hand while her butt rubs me in slow circles. I hug her even closer to nuzzle her neck, pushing her hair to the side, exposing that sensitive patch of skin which beckons me to kiss and nibble it. \n\n\"Mmmm...!\" \n\nI chuckle at her much-more-excited murmur and the even harder wiggle of her delicious derriere against my semi-hard cock. I kiss down her neck to her shoulder and she responds by turning her cheek into her pillow while leaning her whole body towards me, thus exposing the length of her neck in obvious invitation. Smiling I let my mouth trail back up the side of her slender throat, watching goosebumps flare down towards her chest and her nipples harden, their areolas crinkling and darkening around them. \n\nTaking one hard nubbin and rolling it between my thumb and forefinger I watch it elongate while her whole breast swells under my palm, begging for more. Keeping my touch light and teasing I turn to take her tender earlobe between my lips and suck on it gently, and then graze it with my teeth, and am rewarded with a slight shudder and an open-mouthed gasp. \n\nA moment later her hand sneaks back and slides down between our spooned bodies until she finds and circles my dick, tightening her hold around me as she starts pumping slowly up and down my shaft. \n\n\"Aarrggghhh...!\" \n\nNow it's my turn to gasp and jerk against her hand, my head thrown back to inhale sharply at the sweet pressure quickly building in my loins. After a few sharp draws of air my head clears enough to regain some measure of control over myself. \n\n\"So this is how you like to play this baby...? I'm game for that...\" \n\nMy hand leaves her breast to slide down her hip and along her thigh to just above her knee, where I grab hold and nudge her leg open, thrusting my own thicker, rougher thigh in between her smoothness and planting my foot on the bed, hooking her leg back behind my upturned knee and opening her pretty pussy to my touch in one decisive motion. \n\nSandra makes a breathy little squeal that sounds much more delighted than protesting and her hand tightens even further around my cock, intensifying her pumping. I lift myself onto my elbow and peek over her shoulder and down her heaving torso to her beautifully spread-open folds and my fingers tingle with their need to plunge right into her hot dampness, but I resist. \n\nNot yet. \n\nInstead I bring them up to her face and glide lightly along her succulent lips. Immediately her tongue sneaks out to lick my fingertips and invite them in. I oblige, letting Sandra dictate the pace as she slowly dips her head and sucks my fingers deep into her mouth, her eyes closed as she savors the taste and texture of my skin as if it were candy, her tongue rubbing deliciously up and down the length of my digits. \n\nShe times her sucking to the pumping of her fist around my now-throbbing dick and for a moment I am almost overwhelmed with sensation. Breathing sharply through my nose I pull my glistening fingers from her mouth and bring them down to pinch her nipple with just a tiny more pressure than before. Her eyes fly open and she yelps, and at the same time I can see her nether lips flutter in response and a glimmer of wetness appear at her exposed opening. \n\n\"Please...\" \n\n\"Mmmm... what, baby? Tell me what you want.\" \n\nShe can't seem to respond in words; instead she clenches her ass and pushes her pelvis forward, opening herself even more. \n\n\"Please... Please!\" \n\nGod how I'd love to make her say it. \n\nYou can't Dom her, Dan. \n\nDamn. \n\nWith a muttered curse I reach my hand down to her splayed pussy and slide my fingers, wet from her mouth, along her engorged labia. Sandra releases my cock completely and rolls fully onto her back, arching up, pressing herself into my fingers, forgetting anything and everything as all of her senses focus on the pleasure building between her legs. I feel a surge of satisfaction rise and sweep through me at her abandoned submission to my control over her body, over the pace and direction of our lovemaking. \n\nThat's it babygirl. Give yourself to me. \n\nI stroke up and down, long and full, letting my calloused fingers graze her clit in every passage. The little nubbin swells under my touch, and when my fingertips reach her tight opening they are sucked in by the squeezing pulses of her inner muscles, gathering her cream and smearing it back up her slit on their return trip. \n\n\"Oh God yes, please... yes...\" \n\nSandra bucks her hips in time to my strokes as I keep sliding my fingers along her slit letting her pussy suck them in deeper and deeper, indulging myself in the unbelievable softness. God I've missed the feeling of hot, wet, super-soft woman under my fingers. Her vaginal walls tighten with every plunge trying to lock my fingers inside her and with every squeeze she lets out a small whimper, lifting her ass even higher, screwing herself onto my hand. I curl my fingers to start rubbing her g-spot and her hips buck sharply at the contact, a small gush of girl juice soaking my fingers at the same time. \n\n\"Oooh-oooh-oooh... ohmygod...!\" \n\nSandra's voice raises a half-octave to make small mewling sounds while I focus my touch on that sweet spot inside of her. Her hand which was stroking my cock earlier is now trapped under the small of her back, the other one still buried under her pillow. Her whole body is stretched open before me, writhing and quivering, every supple curve glistening with sheen of sweat. \n\nSo fucking beautiful. I feel my breath catch in the back of my throat as my eyes roam up and down her body. Fuck. So perfect. Sandra's small gasps and moans become higher, breathier, more desperate, her belly flexing, her thighs shaking with her effort as she strives to reach for her climax. \n\n\"That's it baby... there you go... you wanna cum baby?\" \n\n\"Fffffuck yeah.. yes please, please, please...!\" \n\nShe's almost incoherent and I just barely keep myself from blowing my load all over her bucking hips. Fuck but I love hearing her beg for me to make her cum. \n\nI keep rubbing that same spot just inside her tight, soaked tunnel, fast and hard now, my fingers making loud wet noises and my palm bumping into her labia, adding small spanks to her protruding, dark-red clit in tandem with the relentless inner massage. \n\n\"You're such a good girl baby... go ahead, cum for me baby... that's it, cum for me babygirl...\" \n\nSandra's whole body starts to jerk a little harder, a little less coordinated, her muscles shaking slightly with her effort and I feel her bear down and swell inside until with a loud cry she starts cumming, her pussy spasming hard enough to hurt around my fingers and flooding with hot, creamy girl cum that coats my whole hand and then drips down to her ass crack and further down to soak into the bed sheet below. \n\nI keep stroking inside her drenched folds, slowing my movements when I feel her shudders subside and become soft and sporadic. Finally I let my fingers slip out of her clenching insides and instead go back to rubbing gently up and down her glistening slit, cushioning her descent. \n\nThe tension has mostly left her body and she lies back lethargically except for her still-heavy breathing and the light tremors passing through her body. Her legs are splayed wide open with her knee still hooked behind mine, one hand trapped under her hips and between our bodies, the other under her pillow. An abundance of hot feminine flesh generously offered to my hungry eyes. \n\nGod she's so fucking beautiful like that. All sweet, sweaty, satiated woman. Damn! \n\nNow that my focus is no longer on pleasuring her I become aware of just how burning my own need had become. My dick is throbbing, pressing hard into her soft hip seeking some kind of relief and drooling precum all over. \n\nI need to fuck her, NOW. \n\nI shift back to untangle our legs and then move over to settle between Sandra's thighs, pulling her hands out and placing them around my neck before leaning down into a slow, deep kiss. The slide of her tongue against mine almost pushes me over the edge and I break our kiss and throw my head back, inhaling sharply. I just barely manage to stop myself from exploding. \n\nFuck! \n\nWhen I open my eyes and look down at her I catch her smile - equal parts temptation and pure womanly smugness, just begging to be challenged and shown her match. \n\n\"Oh baby... you don't know what you're doing looking at me like that.\" \n\nSliding my aching, pulsing cock along her slit I split her creamy folds open, feeling them kiss and cling to my sensitive underside like an enthusiastically sucking mouth. I lower my forehead to rest against hers as we both look down, watching my dark-red, gleaming cockhead, its small slit oozing clear pre-cum, disappearing and reappearing between our bodies, sliding along her swollen pussy. I press down even harder as I continue to torture us both, rubbing up and down over Sandra's hyper-sensitive clit with my painfully erect dick, relishing the spike of pleasure that shoots straight into my heavy balls with each passage. \n\nSandra's body - which only moments ago was laying soft and spent against the bedding - tenses up again, her arms holding onto my neck and shoulders as she starts rocking her pelvis against mine, beginning her ascent towards another peak. I hold myself still and let her work for it, work for me, suck my rigid shaft with her nether lips until I can feel my cum starting to boil again in my balls and I break her hold to kneel back, putting some space between our bodies and letting the cool air swirl around my bobbing cock and chill me for just a moment. \n\n\"Noooo... come back to me!\" \n\nHer arms reach up to me and her voice sounds desperate, needy. Just the way I like it. I feel a smile tug at the corner of my mouth. Catching her hands before they make contact with my throbbing cock, ignoring my own burning need for just another moment, I bring them up to place a soft kiss on their knuckles. She bucks and sways her hips seductively; I ignore the blatant invitation. \n\n\"What do you want baby?\" \n\n\"You, please... please I want you!\" \n\n\"You have me right here baby.\" \n\nMy smile widens and so do her eyes when she catches onto my little game. Her throat convulses when she swallows hard, closing her eyes, but then she opens them and they shine bright blue light at me, meeting my challenge with fierce determination. \n\n\"Please Dan, I need you to fuck me so bad... Please, please, please fuck me hard, please...!\" \n\nMy smile turns feral. Fuck yeah. Holding onto my sanity by a thread I keep still and answer in a low, almost-steady voice: \n\n\"That's my good girl... you beg so beautifully baby. It will be my absolute pleasure to fuck you as hard as you want; Now reach over and grab me a condom will you?\" \n\nWith an enthusiastic nod she half-rolls towards her nightstand and stretches as far as she can to reach the small cardboard box in the drawer, and with trembling fingers she fumbles for the condom while I draw deep pleasure both from the view of her generous curves and from her apparent lack of control over her finer movements. \n\n\"There!\" \n\nSandra pushes the slippery rubber into my hand, barely coherent, desire smoldering in her eyes. \n\n\"Thank you baby. You may play with yourself while I get this fucking thing on...\" \n\nSandra doesn't need to be told twice; her hands move up to knead and pinch at her breasts, tweaking and pulling at her nipples harder than I'd have thought she'd like, and then her right hand slides down over her belly to find her clit and start circling it with the flat of her fingers. Every few moments she slides her slender digits further down to fuck herself as deep as she can reach, getting them coated in thick, clear honey before sliding back up to rub her red, protruding clit again. It distracts me so badly I almost tear the condom trying to put it on. \n\nFinally I get that damned protection properly seated. I guess I should be thankful for the necessary pause; it would give me a chance to hold on long enough. \n\nI take my covered dick in my hand and place it at her glistening opening. Her fingers increase their pace over her clit until all I can see is a blur of movement, her back arching and small gasps and mewls escape her open mouth. \n\nI sink into her slowly, savoring the incredibly wet slickness parting and wrapping itself around my throbbing cock. Her body draws me into her heat. I stretch out over her putting my weight on my forearms under her shoulders and feel her legs come up to wrap around my hips and her arms reach up to tighten at my neck pulling me down onto her, into her. I follow her lead and sink deeper still until I'm fully sheathed inside her and her pliant, warm body cushions mine from chest to hips. \n\nI hold her head in my hands, our faces mere inches apart and our shallow gasps blending together as I start to rock slowly against her. The feel of her tunnel squeezing and milking my dick is phenomenal, but it is the full-body skin-to-skin sensation that makes my breath catch in my throat. It feels like every inch of my body is hugged in welcome, wholeheartedly accepted. \n\nIt feels right. \n\nOur eyes lock together as my hips start moving harder, backing up only to thrust in stronger, fuller strokes. She responds honestly, openly, uninhibited in her need, arching up and angling herself to take me wholly into her body, her thighs locking me to her, her hips rising to meet mine, her mouth open and panting with her rising passion. \n\n\"Ohmygod Dan it feels so good, please fuck me harder, please, please fuck me harder!\" \n\nDamn but her begging gets to me. I feel my balls tingling and my cock throbbing to the beat of my heart. \n\n\"Fuck yeah baby. Hold on tight.\" \n\nI grab her shoulders and brace my knees against the bed and start fucking her for real, my whole body moving, driving my cock harder and faster into her. Sandra holds me tighter still, throwing her head back and crying out every time my pistoning cock plunges into her hot cunt - \n\n\"Oh - oh - oh - oh - ooooooh!!\" \n\nThat last one comes out as a high-pitched squeal as her tunnel spasms and squeezes my cock rhythmically, sending me flying into my own impending climax. The cum that had been boiling in my balls rushes up my shaft and shoots out in thick spurts, filling the condom up to capacity as pleasure explodes and sweeps through me, leaving my skin burning, flushed and sweaty. \n\nHer sweet pussy keeps milking me and I jerk in response, almost too sensitive now but unable to refuse her anything, grinding myself against her, watching her flushed face thrown back in abandon, her expression somewhere between exuberance and agony as she presses herself up into me and tightens her inner walls one last time before she lets go and releases me to lie back spent and heaving on the rumpled, damp sheets. \n\nI become aware of the slight trembling in the muscles of my arms and shoulders and roll over to my side before collapsing, too, huffing and puffing as if I'd just run a mile. \n\nThe room spins slowly around me while I wait for my breathing to return to normal but I can't bring myself to mind about the dizziness when everything else feels so damn good. Once it passes I open my eyes and look at Sandra, finding her eyes smiling contentedly at me. \n\n\"That sure beat my alarm clock. I may wanna keep you around.\" \n\nI feel the smile spread on my own face as I cup her shoulder and lean down to playfully bite and then kiss that intriguing spot where her breast disappears into her armpit, getting a breathy giggle in response. Raising my head I look over her to the night stand. \n\n\"Got time for a quick dinner before your night shift starts? \n\nHer smile widens. \"Absolutely. Shower first?\" \n\n* \n\n* \n\n* \n\nAfter eating at a cozy cafe seated at an outside table on the sidewalk and watching the people walking up and down the street, we stroll our way to the hospital. We say our goodbyes with a hug and a kiss that turn almost inappropriate for the public setting and then part with a small laugh when a colleague of Sandra's sounds a wolf's whistle loud enough to break into the lustful haze clouding our brains. \n\n\"Have a good night shift, baby. Talk tomorrow?\" \n\n\"Sure. I'll probably sleep the morning off but will give you a call when I get up. You got any plans for your Sunday afternoon?\" \n\n\"Nothing major. Probably going to see Jon at some point but haven't firmed up yet.\" \n\n\"Okay, we'll talk tomorrow then. Have a good night, too.\" \n\nSandra reaches up and gives me another soft kiss before turning on her heel and walking into the hospital building, the automatic sliding doors opening and closing behind her back. I watch through the glass panels until she turns the corner at the end of the wide corridor and disappears from my view. \n\nDamn. \n\nI feel like a schoolboy completely taken with his first crush, and it's not entirely a bad feeling. \n\n* \n\n* \n\n* \n\nWe find ourselves following a routine similar to the one we had the week before, when Sandra was still my home care nurse. Working around her busy schedule between her shifts and her school we find time to be together every day. But now we mostly meet at Sandra's place as it minimizes her commute time, and I enjoy the walks to and from my own apartment earlier in the morning or later in the evening when the sun isn't blazing and there's a bit of breeze in the humid air. \n\nI find it easier to think as I walk. The monotony of my paces seems to clear my mind and calm my emotions, making everything seem so much simpler: I really like Sandra. She seems to like me, too. As long as I don't let my dominant side run amok we should be fine. \n\nOr so I hope. \n\nDamn. Not good enough. \n\nI need to talk with Dr. Pappas. \n\n* \n\n* \n\n* \n\n\"So, Dan, what have you been up to in the last few days?\" \n\nIt is my Friday appointment, my fourth shrink session overall. On Tuesday we pretty much picked up from where we left off last week and talked mainly about the problems Naomi and I had trying to get pregnant; the problems which eventually lead to our divorce. ",
        "It was a tough conversation in which I had to face quite a few uncomfortable truths about myself. For one I was confronted with how weak I'd been - how submissive - in my compliance to my father's wishes, which dictated producing a son to carry on the family line above all other duties. At the time I had embraced those 'family values' that he'd talked about with the same zeal that the old man did. But following the thought process laid out by Dr. Pappas' deceptively simple questions I quickly came to see what was, until that point, a huge blind spot: Ten years into our marriage, Naomi had every right to expect herself to be my main familial loyalty. \n\nBut she wasn't. No wonder she never contested the divorce but rather just picked up and left. Smart lady. \n\nMy self-reproach returned with a vengeance and I almost had another panic attack right there in the cozy little clinic. Dr. Pappas took it as an opportunity to practice relaxation techniques. He kept telling me that 'it's not about judging what you did before; it's about deciding what you're going to do from now on', but I still felt like kicking myself in the balls. Those 'what if's' are damn hard to ignore. \n\nWhen I got my emotions under control again we talked a bit about my post-divorce depression and how my father's illness and death had contributed to it. Putting that title to it - \"depression\" - was something I had objected to quite firmly; Dr. Pappas calmly countered that \"if it walks like a duck and quacks like a duck...\" He softened his words by saying it didn't make me 'a crazy person', but rather meant I was 'a person experiencing mental difficulties' that were 'actually quite common'. I wasn't sure I was buying it but we agreed to continue talking about it on the next session. \n\n* \n\nAnd now the next session had arrived and I don't want to talk about my depression anymore. Or rather I do, but with a very specific goal in mind. \n\nI want to know if there's a risk I'd go crazy again and hurt another woman - Sandra this time. So when Dr. Pappas asks me what I've been up to I take the opportunity to push straight to the heart of the matter. \n\n\"Well doc, actually, I've been seeing a woman. And I wanted to talk to you about it.\" \n\nDr. Pappas eyebrows shoot up in interest and he leans forward in his chair. \n\n\"All right Dan. Tell me about her then.\" \n\n* \n\n* \n\n* \n\n\"Sandra, we need to talk.\" \n\nWe're cuddled together on the couch watching our national soccer team struggle to score on its second game of the World Cup. We know we're not going to even make it to the top sixteen but it's still fun to watch, and we've turned it into a bit of a party, wearing our flag-colored jerseys over boxer shorts, beer and munchies on the low coffee table, enjoying the Mundial atmosphere in Sandra's living room. \n\nIt's now close to midnight on Friday night and I've been working up my courage to start this conversation ever since I got back from the clinic. As the game draws to its inevitable close - putting a lid on our national hopes for the tournament - I can no longer postpone our talk. I know we can't go to bed tonight without speaking first. \n\nSandra tenses up at my words and turns her alarmed eyes at me. \"Are- are you dumping me?\" \n\n\"I - what?! No. No! I'm not... Shit, I didn't mean it to freak you out baby. I'm sorry. I just want us to talk. I've been doing some thinking... about us.\" \n\nShe relaxes only a little, her face still marred with her unease. \"Okay... It's just that in my experience a conversation that starts with 'we need to talk' never ends well.\" \n\nI try to smile reassuringly although in truth I'm nervous as hell, too. \"I promise you that I want you very much baby. That's a given, alright?\" \n\nSandra nods and smiles briefly. \"Okay, I guess that sounds a little less scary. And just so we're clear on the subject you should now that I want you, too.\" \n\n\"Thanks baby. But - but here's the thing...\" I gulp and cough, then start again. \"Why? Why would you want me?\" \n\nI'd asked her a similar question before, when she was nice enough to hang out with me at the hospital, that night when I couldn't sleep. She said then I was good company and she liked me, but that's not enough to explain the way she all but propositioned me last week, effectively pushing our relationship to the next level. And though I can guess why she was interested in me I need her to tell me so that I know for sure. Then we could build from there, or so Dr. Pappas said. \n\n'Honest communication, Dan. Be clear about what you want from each other, about what each one of you is looking for, and about what you can and cannot do in this relationship.' \n\nSandra stiffens under my arm and looks down at her hands, picking her fingers absently. Finally she mumbles under her breath: \n\n\"You know why, Dan.\" \n\nI feel my breath catch. Damn. I was afraid she'd say that. I lift her head back up to look at me. \n\n\"Because you're looking for someone who'd dominate you in bed.\" I state quietly, repeating what she revealed to me back at the hospital. The soft-spoken words still ring between us in the suddenly quiet apartment. \n\nShe blinks - clear blue eyes locked with mine, her surprise turning into a fierce, unapologetic look. \"Yes. I'm looking for a man who would dominate me sexually, and who would at the same time respect me as his equal outside of the bedroom. Like I feel that you do.\" \n\nI nod. \"Yeah. I do.\" and then I add, trying to keep my self-doubts out of my voice but failing miserably - \"but how would you ever be able to fully trust me - knowing what I did?\" \n\nHer expression softens at the pain in my words. \"Dan... Yes, I know what you did. I also know how deeply you regret it, and the steps you've been taking to make sure you never do it again. I know how committed you are to that. I know the lengths you go to to keep yourself from risking anybody. I admire you for that.\" \n\nI shrug her praise off. I am so far from being worthy of any admiration it's not even funny. \n\n\"What, talking to the shrink twice a week? I wouldn't call that going to any lengths.\" \n\n\"I mean attempting suicide as a preventative measure to keep others safe. I mean denying yourself the right to Dom anyone - even an eager partner - because you feel it may push you down a slippery slope that would end as badly as your last relationship.\" \n\nHer eyes now shine with her conviction as they lock with mine. Her ferocious defense of my character humbles me, and I find myself choking back a wave of emotion before I can reply. \n\n\"I, I - thank you for that, Sandra.\" I clear my throat before I continue. \"But still... If we were to play together - if I were to dominate you in any way and still keep you safe - it would need to be under my terms.\" \n\nShe bursts out laughing - \"I wouldn't have it any other way!\" - and it takes me a moment to figure out what's so funny. When I do I find myself chuckling despite myself, shaking my head ruefully. \n\n\"Yeah, I guess that would be a given, huh?\" \n\nSandra nods, still smiling, and I grimace and try again. \"What I meant is there are things you may expect to happen in a scene - that would seem pretty basic to you - that I won't be willing to do.\" \n\n\"You mean limits?\" \n\nMy head snaps up, startled at her question. \"I - I hadn't thought about it like that but - yeah, I guess so. With my baggage... there are quite a few more limits for me than you'd expect from a Dom.\" \n\nSandra bows her head and focuses on her fingers, wringing again in her lap. Finally she looks up at me. \n\n\"Okay. Just so you know though... I'm not that experienced a submissive. I really wouldn't know what's 'expected' to happen in a scene, or what kind of limits Doms usually have. I've never even talked about it with anyone before. I had a few boyfriends who would occasionally spank me or blindfold me or be rough with me, but I don't think I'd ever been in a real 'scene'.\" \n\nWell DAMN. I was so focused on myself, my issues and my insecurities, that I completely lost sight of her. Shit. \n\nStrike one, Dan. \n\nThe kick of adrenaline realizing my mistake makes my heart pound faster and my muscles twitch restlessly. I feel like jumping up from the couch and pacing, but instead I take a deep breath and release it slowly, consciously relaxing my body, employing one of those little techniques Dr. Pappas had me practice. I'm half-surprised to find how well it works. \n\nAfter another moment I'm calm enough to speak again. I look back into Sandra's face and see her worrying her lower lip with her teeth, clearly uneasy with her confessed lack of experience. I let the back of my fingers trace down her downy-soft cheek to her chin and with my thumb I release the offended lip from the sharp grip holding it captive. \n\n\"Baby, thank you for telling me that. I admit I assumed you had a bit more experience given how clear you were on what you were looking for... that was my mistake; I shouldn't have assumed anything. Now I do want us to have a proper conversation about limits - both yours and mine - but I think we should take a little more time preparing for it. Especially as it's going to be your first time really thinking it through.\" \n\nShe looks a bit disappointed but then answers with a tongue-in-cheek \"yes, sir!\" which makes my cock twitch and my heart skip a beat at the same time. Fuck! \n\nWith a low growl I take her face in my hands and kiss her deeply, my tongue delving in between her still-smiling lips. A moment later I feel her moan into my mouth and return the favor, letting her tongue explore and glide along mine, her soft lips open and pliant under my mouth. \n\nFuck yeah. That's more like it, baby. \n\nSandra's hands snake under my shirt and around my torso and she scratches my back lightly, pressing closer to me as we kiss, and while I keep one hand buried in her sweet-smelling hair I reach down with the other, gliding along her side - her waist, her hip, her thigh - curving around and sinking into the soft naked skin at the back of her leg and urging her to move over me and straddle me on the sofa. \n\nAs soon as she does she starts rocking her hips gently back and forth, her tight cotton boxers clinging to the contours of her pussy between her widely-spread legs. My dick responds to the sight and the sweet movement with enthusiasm. Sandra smile and reaches down between us starting to rub up and down my quickly-swelling bulge. I groan my appreciation and grab the hem of her jersey. \n\n\"Hands up baby. Just for a moment I promise, and then you can go back to it...\" \n\nWith a smirk she shifts her weight back and raises her arms obediently. I feel my cock twitch again at the sight and take my time getting the jersey off, raising the hem inch by inch. Once her glorious tits are fully exposed I bunch the material in my left hand behind her back, tightening it across her chest, and with my right hand I cup and lift one heavy globe, holding it up as I bend down to take the pretty pink tip into my mouth. \n\nSandra's head rolls back as a gasp escapes her arched throat, while her hands drop to hold onto my shoulders. Fuck she's sexy like that. I spend long, luxurious moments lost in the heaven of her creamy breasts with their cherry-pink nipples, licking, sucking and nibbling on them until I hear a soft little whine and her hips rock harder, pressing and grinding her pussy onto my hard cock through our underwear. \n\nThe jolt of pleasure from that sweet contact makes me gasp, releasing her puckered nipple from my lips. Looking up at her flushed face I smile and shift my hand down to her hip. Grabbing hold at her hip bone I start guiding her pelvis as it rocks against mine, keeping the rhythm nice and easy. \n\n\"So, babygirl... as long as we haven't yet had that conversation... how about some vanilla fun tonight?\" \n\nThe mischievous glint in her eyes should have tipped me off, but her answer still manages to steal my breath for a moment when it comes through her wide, smug smile. \n\n\"Ooooh absolutely yes, sir!\" \n\nThe playful little spank that lands on her cotton-covered tush draws a surprised squeal out of her throat. I rub the tiny sting away as I lean closer to her ear. \n\n\"Smart-mouth... keep up the bratty attitude and you'll need those limits sooner than you realize...\" \n\nShe responds by grinding her pussy onto my cock again and it is all I can do not to flip her on her back and fuck her senseless right there on the couch. Instead I press her even harder into me and kiss her lush, smiling lips again, and it's another minute before either one of us draws enough air to speak. \n\n\"Bedroom, now.\" Is all I can get through the haze of lust in my head. \n\n\"Yes, sir!\" comes her now-to-be-expected reply, openly giggling at my mock-thunderous scowl. Damn but my palm itches. She wiggles quickly off my lap and dashes into the bedroom, getting the jersey completely off and waving it behind her back before throwing it carelessly to the floor as she disappears behind the door. \n\nFlopping back against the cushion I take another moment to compose myself taking deep, slow breaths. I'm going to keep it vanilla tonight if it kills me. The rate that she's going, it just might - for real. Shaking my head at myself I follow Sandra into the darkened room. \n\n* \n\n* \n\n* \n\nWe made a date to talk about our limits on the next Friday so that we'd each have plenty of time to think it through, and also for me to have a couple more meetings with Dr. Pappas before we actually took that next step. He had already reassured me that he didn't see any immediate risk in my playing a more dominant role with Sandra, and promised we would continue to re-evaluate the situation on every meeting for as long as we both deemed it necessary. \n\nI learned that the evaluation focused on identifying violent emotions towards others, and specifically towards Sandra. When Dr. Pappas first took me through it we had stumbled upon some difficulties considering questions like \"Do you feel like you'd want to physically hit this person if you were alone in a room with them?\". \n\nQuickly enough, though, we figured out the necessary tweaks - e.g. adding \"without their consent\" to every given situation, or change the word 'hit' to 'harm'. That worked; I'd passed my first evaluation - late on Tuesday morning - with flying colors and was feeling much, much better with myself as I was driving through the busy city streets over to Sandra's place after stopping in my own apartment for a quick wash and a change of clothes. \n\nThis could really work. Dr. Pappas knows what he's doing; if he says he's confident about Sandra's safety with me, then so am I. \n\nTrust and hope. \n\n* \n\n* \n\n* \n\nTaking the stairs up to Sandra's apartment I am nervous again. Showered, scrubbed and cleanly shaved - colloquially known as the 4 S's - I stand on her doorstep gathering the courage to ring the bell. Why I should be nervous I'm not quite sure. The last few days were a dream. We've been seeing each other every day and have truly enjoyed each other's company - not to mention the sex has been hot as hell. I'm sure she has a real connect with me as I know I certainly do with her, but the fear that something will go wrong - even 'normal' wrong, regardless of my special circumstances - still clamps my stomach. \n\nStupid I know, but I feel like a teenager on a date again. She had to work last night so we haven't seen each other in over 24 hours and already I miss her. I know her afternoon should be free so I'm here to whisk her away for a few hours of romantic walks in the country and hopefully a repeat of the bedroom athletics, maybe outdoors this time... \n\nKeeping it vanilla doesn't mean we can't spice it up in other fun ways! \n\nThe sound of the bell makes me start even though it is me that has pushed the button. \n\nGet a grip Dan. \n\nSandra's silhouette appears in the frosted glass of the door and something instantly niggles at me; when she opens it I see why. \n\nShe is dressed in her Nurse's uniform. That lovely white dress that reaches just above her knees. \n\nOh Fuck. She's going to work! Why didn't I ring and check first? \n\n\"Oh hi Dan, you look good! Come on in!\" she reaches up on her toes, puts her arms around my neck, leans forward and opens her soft lips against mine giving me a slow, warm, welcoming kiss. \n\n\"Hi Sandra\" I eventually manage to say when she pulls back for breath. \"Glad to see you, too.\" \n\nIf she'd been leaning at the right angle she would have noticed exactly how pleased I was to see her, but fortunately she was slightly sideways so my right hip got the pleasure of her thighs, and I was spared the discomfort of appearing quite so eager. \n\nI'm not some horny kid, dammit. Well, not a kid, at least. \n\n\"Mmm... You smell lovely, all spruced and after-shaved just for me. A girl can't help but be impressed.\" She takes my hand and leads me into her kitchen. \n\nWe stand by the sink, side by side but not touching, and to be honest it feels a bit awkward for some reason. Neither of us speaks, just looking into each other's eyes - I wish I could read her mind right now - my fingers gripping the smooth, cold ceramic by my hips, and eventually I break the silence with the first thought that comes to mind. \n\n\"So your sink stopped leaking?\" \n\nThere's a moment's silence before she breaks out in peals of laughter. \"And who said romance was dead. I'm gonna buy you 101 ways to woo your woman for Christmas!\" \n\nI nod, smiling at the thought of her buying me anything for Christmas, a few good months away from today - \"that could come in handy, thank you!\" - and with that the tension seems to disappear so I decide to confess about my plans for the afternoon. \n\n\"Er, I was hoping we could go out for a picnic or something. I've actually prepared some food and there's a nice bottle of wine in the cool box down in my car, but it looks like you'd be working instead. What happened?\" \n\n\"Yeah... I'm sorry about that. I should've called and let you know but I was just checking back on my paperwork for the week and realized that I had a discharged patient under my care who hadn't had his final medical. It needs to be done and dated today or I will be in breach of regulations. I'm sorry baby, but it can't wait. It must be done pronto. But it should only take about an hour or so.\" \n\nI keep my disappointment in check and glue a smile to my face. \"No problem baby, work must come first. It's only midday so perhaps we can go out when you're finished?\" I think she sees past my brave face as I can't quite keep the hopeful ring out of my voice, but truth is I don't really mind her knowing how much I want to spend time with her. \n\nShe leans into me, plants her soft breasts against my chest, looks me in the eye and whispers: \"A picnic later sounds fantastic, and thank you for being so understanding. For now go upstairs, get undressed and lay face up on the bed. I will be with you shortly.\" \n\nI blink, unsure I heard her correctly, and then look at her in shock. \"But your appointment?\" \n\n\"Just go and do as I tell you.\" \n\nThe look in her eyes and her tone of voice tell me I shouldn't argue - not if I know what's good for me - so with a curious glance in her direction I cross the kitchen and walk to her bedroom, feeling my heartbeat picking up to a quick gallop. \n\nWhat the hell is going on here? Has she got time for a quickie? Is she going to leave me waiting? \n\nI slowly undress and do as I'd been instructed. As I lie there my brain is working ten to the dozen, but with the ticking of time my mind drifts off as I enjoy the smooth, cool sheets under my back and the faint scent of Sandra that wraps around me, teasing me, hinting of possibilities to come. ",
        "After about ten minutes I hear sounds in the hallway and then the door opens to admit Sandra, still dressed in her nurse's uniform, but with some noticeable adjustments that make my heart kick-start again. \n\nThe top of her dress is now open to the button just under her bust, the deep, wide V revealing a creamy swell of feminine flesh along with the top of her pink bra. Her little hat is now askew and tendrils of blond hair escape from the sides, caressing her blushing cheeks. Her skirt had been somehow folded into itself to about two inches below her interesting bits, and makes what I would call a 'pussy pelmet'. She's also carrying her nurse's bag. \n\nAnd her lips... Oh my dear God in heaven. Her luscious lips are colored a bright, shimmering firehouse red, as slutty and obvious as they come. \n\nDamn but this shit works. I feel my earlier ardor return with a vengeance. \n\nMy instant impression is that she looks like a woman on the prowl for a victim. I just gawp at her, mouth open waiting to catch any passing flies. \n\n\"Yes Mr. Moreno, it is your final medical that needs doing today, and as you are being such a good patient by not getting upset with the delay to your picnic I have decided to take this opportunity and give you a complete head to toe checkup. I shall require you to cooperate fully and hopefully this won't take too long. Do you have any questions?\" \n\nThe sultry tone and look of desire on her face, combined with the obvious outfit and the total unexpectedness of her words and actions, rob me of any coherent thought and I just shake my head in answer to her question. \n\n\"That's good Mr. Moreno, and as you seem to be having a problem closing your mouth I shall begin there.\" \n\nWith those words she kneels on the bed next to my head, her shapely bare leg so close I can feel the heat of her skin warming my ear. She opens her bag and takes out a wooden tongue depressor from its sterile wrap. \n\n\"Say ahhhh.\" she asks as she gently inserts it into my mouth. \n\n\"Aghrrhhrerrer\" is the sound that I manage to produce, but that seems to satisfy her. \n\n\"Tonsils good and the tongue a nice healthy color. Any pain from your jaw and lips?\" \n\n\"Ot erry uch ut schtil hurths to o'en I outh.\" \n\nShe giggles, and the sound tickles down my spine all the way to my balls. \n\n\"Sorry! I guess it would help if I removed the depressor. Now try.\" \n\n\"Ahm - not very much but it still hurts to open my mouth very wide.\" \n\nShe nods sympathetically. \"It will do for a while yet as your jaw heals, but I can see you aren't in any real discomfort. Let's have a look at your head.\" \n\nHer fingers gently feel their way through my close-cropped hair, prodding around for about a minute before declaring that wound healing nicely as well. \n\nMeantime my arousal is mounting by the second. Her scent is driving me crazy, her thigh gently rubbing against my shoulder and her succulent, half exposed breasts swaying inches from my eyes, it's all too much. I raise my hand and start to caress the top of her bare thigh, just below her panties. Sandra immediately leaps to her feet and stands at the side of the bed, glaring at me with her best outraged nurse's expression, though the twinkle in her eyes rather undoes the seriousness of her look. \n\n\"MR. Moreno! What do you think you're doing?! I require you to behave yourself while I give you this thorough and professional examination. If you continue in this manner I shall be forced to report you to the authorities. Now, will you behave or do I need to restrain you?\" \n\nRestrain me! FUCK NO. My eyes widen at the suggestion, and I decide to play along - even if it's only to be on the safe side. \n\n\"I will behave Nurse. I promise.\" \n\n\"Hmpphh, we shall see. Now, I need to check your upper body. Behave!\" \n\nShe opens her nurse's case again, gives it a quick rummage and produces a stethoscope. It's the real McCoy and knowing nurses don't get issued them I surmise she had either bought it or half inched it from a doctor especially for our little medical. \n\nShe's full of surprises, isn't she? \n\nThe sight of it hanging round her neck with the tail end dangling between her breasts is enough to raise my blood pressure another couple of notches. Fuck knows what it will be when she finally gets to testing it. Leaning forward she puts the earpieces in, huffs onto the business end and then rubs it in her palm a few times, and finally places the warmed metal onto my chest. \n\n\"There now, wasn't that nice of me to warm it up just for you, sir?\" \n\nHer sweet lustful smile tells me she's fully enjoying the game being played. I feel myself respond to it - and to the way she uses 'sir' in this sassy tone of voice. Even more adrenaline pumps into my veins. \n\nBring it on, babygirl. \n\n\"Big breaths please and then slowly release them.\" \n\nFor the next couple of minutes she carefully listens to my breathing, a frown of concentration etched on her face. The only thing betraying her calm, professional fa\u00e7ade is that every now and again she happens to 'accidentally' brush my bare, tight nipples as she moves the base. It's exquisite torture, and I can do nothing about it. Not without stepping out of my role, which I find myself rather enjoying - against any of my preconceived ideas. \n\nSo this was what it's like to be under the power of a mistress, give her total control over me. And the real shocker is that I am as turned on as I'd ever been. FUCK. I don't even know how I should feel about that. \n\n\"Okay Mr. Moreno, while I have you in this position I think it's time to check your blood pressure. Give me your arm please.\" \n\nI obey wordlessly and she wraps the cuff around my bicep and starts pumping. Again she's being very professional except while leaning over me to adjust the cuff she gently rubs her breasts along my ribs, her nipples poking hard through the cotton of her uniform. My breath catches and my dick twitches and swells further, now more than half-hard. \n\nSandra looks down my body before meeting my eye and says lightly: \"Relax Mr. Moreno and ignore what I am doing. We wouldn't want to raise your blood pressure at this stage now, would we?\" \n\nRELAX! Fat chance. Ha! \n\n\"Hmmm, BP is a little high sir, so I think we should try and lower it a bit before taking another reading. Roll over onto your stomach please.\" \n\nI do so with a low moan of half-relief, half-frustration as the weight of my pelvis settles over my engorged member making it sink into the mattress below. I hold myself in tight check not to dry-hump the bed. \n\nThere's a limit to how low I'll get. Humping her bed is most definitely out of the question. \n\nSandra moves over to straddle my hips and I do my best not to think about her pretty pussy pressing against my butt through her hot pink panties. Try not to think about pink elephants. Go ahead, try. But then her warm hands come in contact with my shoulders and every thought evaporates from my mind altogether. \n\nThe next twenty minutes are spent in my receiving the most relaxing and sensuous massage of my life. Sandra's hands glide across my skin and gently rub away the knots in my muscles. I'm in heaven. \n\n\"There now, isn't that better Mr. Moreno?\" Her sweet voice lilts melodically in my ear, and another quick check of the blood pressure apparently confirms things are normal again. \n\n\"Now, while you are in this position it's time to check another vital function, one that is important in middle aged males, and if a problem is found early enough it can be easily cured.\" \n\nThis statement is followed by the sound of her little bag of tricks opening again and something being removed. \n\nMy relaxed brain had perked up by this stage though it hasn't grasped her exact meaning, but it fires into life as recognition hits me like a sledgehammer with one simple sound: \n\nSNAP! goes the rubber glove around her wrist, and instant memories of me conducting cavity searches on detainees surge through my brain. \n\n\"WHAT THE FU...!\" \n\nI roar up and am about to flip over when Sandra's soft weight presses all along my back and her hot breath tickles as she speaks close to my ear. \n\n\"Shhh... relax Mr. Moreno. I promise you will enjoy this. The prostate is the center of your body's pleasure zone.\" \n\nHer breasts press into my shoulder blades as she kisses me lightly on the back of the neck, tiny butterfly kisses that send shivers of pleasure up to my scalp and almost make me forget about her declared, devious intent. \n\nAlmost. \n\nAll my muscles tense as my mind struggles with itself. It's not like I've never had my rear end checked before - being in the service did actually entail full medicals every couple of years - but letting her do it - in a sexual context - is a completely different beast. I'd never had a lover penetrate me in any way, shape or form; never felt even remotely inclined to experience it. \n\nAnd yet the thought of denying Sandra, of disappointing her by not playing along, stops me from turning around and putting a swift end to it. \n\nBesides, I might even enjoy it. \n\nYeah. That's exactly what I'm afraid of. \n\nAs if reading my mind Sandra licks and nibbles on the spot where my neck and shoulder meet and then goes back to speaking quietly in my ear: \"Trust me baby... trust and relax. I'm going to make you feel so, so good...\" \n\nI gulp a lump down my dry throat, give her a curt, almost imperceptible nod, and try to regulate my quickened breath. I don't protest any further. In some distant corner of my mind I figure this is probably a good way to build her trust in me... and if I'm being completely honest with myself I'd also have to admit I'm now curious as to what she has planned. I sink into the covers and at her gentle push open my legs to give her access. \n\nMy cheeks are slowly pried apart and cold lube drizzles onto my ring. A gloved, slim finger touches my tight star and is immediately - if gently - inserted, gliding in easily with all that lube, and then is carefully turned so that it's facing towards my front. \n\nSo far so good. \n\nA moment later I cry out in surprised pleasure when the most incredible feeling shoots through my cock, created by her finger gently massaging the walnut-sized gland at the base of my balls. \n\n\"Aaarrrggghhh FUCK that feels good...!\" \n\nI'm not sure if I blurted it out loud or not until I hear Sandra's delighted chuckle as she leans over to speak into my ear again. \n\n\"Told ya you're gonna like it baby... now be quiet and enjoy the ride...\" \n\nNow I am really in utter heaven, and after a couple of minutes I can no longer avoid humping my hips against the duvet, whether or not I mean to. The gentle laugh from behind me only increases the tempo of my bucking hips. \n\n\"Oooooh yesss... I think you really, really like it. Maybe a bit too much, hmm?\" and in the next moment her clever finger withdraws, leaving me silently begging for more of her gentle, knowing touch. I grind my teeth hard to keep that thought to myself. \n\nI'd be damned if I begged a woman to finger my ass. I don't care how good it feels, there's a hard limit right there! \n\n\"Time to continue the examination I think.\" she says it after a little pause, which I suspect was meant to give me the opportunity to speak up. \n\nDammit. Just hurry up and finish already before I make a total mess of your sheets, lady. \n\nI hear the glove being removed and discarded in the bin followed by the rustling of clothes being shed, raising my hopes way up before I suddenly receive a sharp, surprising slap on my right buttock. \n\nWhat the HELL?! She's going to spank me now? NO WAY. \n\nBut before my jumbled mind can decide how to best broadcast that message across I feel her soft palm rub gently at the tingling spot, her fingertips just barely grazing my aching balls from behind causing the tingle to spread and intensify all through my groin. \n\n\"Please turn over, sir, and keep your hands by your sides.\" \n\nShe sounds polite and professional again - respectful, almost - and I respond without conscious thought. I turn, my cock springing up to a straight-backed salute to the beautiful, gloriously topless nurse standing next to me. Her firm and ample breasts are flushed along the top and both nipples are tightly erect, almost like miniature dried grapes. Hard, wrinkled, and by the looks of it - throbbing. \n\n\"Having done the prostate exam it is now time to check your ejaculatory function. As you can see, I have decided to help your arousal by giving you some visual stimulation. Is that agreeable to you, sir?\" \n\nI nod dumbly though I can see she doesn't wait for my reply but already climbs onto the bed and kneels down between my legs, leans forward with swaying breasts, and gently takes the helmet of my cock into her mouth, starting to lick and suck with the lightest of touches. \n\n\"OH DEAR GOD, OH FUCK.\" \n\nMy hips jerk irregularly with every swipe of her soft, wet tongue, and after no more than 30 seconds of this incredible sensation I blow...and I blow ...and I blow. It seems as if I am cumming for a whole fucking minute, and the whole time Sandra just gently suckles and swallows, using absolutely the minimum of pressure on my bell end. \n\nFUCK! \n\nThe whole blow job from start to finish lasted maybe a minute, and not once had Sandra taken more than the head of my dick into her mouth. She barely even touched me! But even with that thought it is all I can do to just lie there in a cloud of orgasmic bliss, totally drained, my fingers and toes still tingling from the effect. \n\n\"Well, Mr. Moreno, it seems your ability to cum hasn't suffered with your injuries. I would say that you are in full and fine working order.\" \n\nShe sounds satisfied. Smug. I feel the urge to reclaim the upper hand, to dominate her and take control rise inside of me, and silently I push it back down in my mind. She topped you and she did a fine damned job of it. Handle it. It's not like you didn't like it. \n\nMy voice still sounds funny when I try to reply with some measure of coherency. \"Bit damned quick though... I'm sorry, baby. I haven't come that fast since I was a teenager wanking to the latest edition of Penthouse.\" \n\nA soft chuckle sounds in my ear as she slowly slithers her way up my spent body and nestles into my good side. \n\n\"Oh, I'm surprised you even lasted as long as you did after the prostate massage. I was trying to judge it so that I stopped just short of you cumming. Looks like I got that bit right!\" I can hear the smile in her voice. \n\nLifting my arms from the duvet for the first time since she told me to keep them there, I wrap them around her and pull her in close. \n\n\"So... It looks as if not only do I have a lovely little subbie to play with, but a kinky little wannabe Domme as well. Did you enjoy that, my pretty pervy nurse?\" \n\nI feel her grin widen on my chest. \"I did - more than I expected to, to be honest - but it isn't something I'd want to do all the time. I definitely like being dominated by a strong man, but I figured the occasional change wouldn't hurt any.\" She turns her eyes up at me, and for the first time since she walked into the room I can see some insecurity in them. \"Right?\" \n\nI grin and hug her close, kissing her upturned lips lightly. \"Hmm. I would reluctantly admit to having enjoyed your little game... but I'd caution you from getting too used to it. There were a couple of moments there where I was seriously tempted to show you who's the real boss.\" \n\nShe sticks her chin out, one delicate eyebrow arching up in challenge. \"So why didn't you?\" \n\nWhen I answer her all playfulness is gone; this is too important to joke about. \"Because we hadn't talked about limits yet. I was serious about that being mandatory before I would ever Dom you, baby.\" \n\nSandra nods and bites her lip before speaking again. \"I can't wait.\" \n\nI smile, kissing her lips lightly, reassuringly. \"Yes you can baby. And you will.\" \n\nSandra says nothing but hugs me close in response, and I think I feel her nodding into my chest before she pulls back and props herself on her elbow. \n\n\"So, my lovely hunky fixer of sinks, did you mention something about a picnic? I'm starving after all that exertion.\" \n\nI smile up at her. \"I certainly did. Wanna go for a walk somewhere remote, or do I bring it up here?\" \n\n\"Hmm...\" She seems to consider her options as her free hand travels down the side of her body, massaging her breast before dipping lower over her belly and straight into her pink panties, where she starts rubbing small circles at the top of her slit. \n\n\"Why don't you bring it up here... and while you do that I'll work on preparing my own very special dessert just for you... Maybe you could even convince me to have your treat before dinner...\" \n\nI groan deep in my chest and roll myself to stand up beside the bed, watching Sandra prop herself back against a couple of fluffy pillows, spread her legs wide, pull her panties to one side with her left hand and wet the fingers of her right hand in her mouth before going back to masturbating right in front of my very appreciative eyes. \n\n\"God but you're pushing it baby... keep that up and I may decide to tease and then deny you just to remind you how it's going to be very, very soon.\" \n\nI watch her eye widen and turn a smoldering grey-blue and her breath catch in her throat. \n\nGotcha, babygirl. \n\n\"Now you keep playing with this pretty pussy of yours so that it's hot and creamy for me when I'm back with our food, but I don't want you cumming just yet... all right?\" \n\nHer fingers quicken their pace across her clit and then slow down to slide up and down her slit, making me almost forget all about the darned picnic basket. She gasps softly when her fingertips hit that sweet spot halfway between her clit and her tight hole and her eyes roll back and close for a moment before opening to lock with mine again. \n\n\"Yes sir, I think I can do that, but please be quick.\" \n\nI smile and keep watching as I get into my boxers and jeans, sitting down on the bed to put on my shoes not bothering with socks, and then grabbing my T-shirt and moving towards the door. \n\n\"Oh don't worry baby, there's nothing that would keep me away knowing what's waiting for me up here. I'll be back in five minutes; think you can hold off till then?\" \n\nWith another breathy sigh and a sweet arch of her back she picks up her pace again and murmurs: \n\n\"Y-yes, sir.\" \n\n\"Good girl.\" \n\nI leave the room, only recognizing my own words halfway down the stairs. \n\nFUCK. Friday couldn't come fast enough. \n\n* \n\n* \n\n* \n\nAuthor's note: Did you like this chapter? Tell me, please! VOTE, FAVORITE and COMMENT. Thanks!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "domination",
        "submission",
        "mdom",
        "fsub",
        "reluctant dom",
        "nurse",
        "medical",
        "roleplay",
        "blowjob",
        "tease"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-05"
}