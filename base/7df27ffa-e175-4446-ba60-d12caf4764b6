{
    "title": "My Little Ventrue Pt. 06 Ch. 15",
    "pages": [
        "~~Jack~~\n\nThank god. Thank. Fucking. God.\n\nHe breathed in the smell of her, and chuckled between his sobs. She was undead, like him, but he could still smell a bit of her, the old her, the living her, the person he grew up with, the person who raised him. Memories crashed into him, him sitting on the couch with her watching movies, waiting at the table while she cooked, reading a book on the couch while she decorated the Christmas tree with Mary. Her. It was her.\n\n\"Mom,\" he said, his eyes buried in her neck. When was the last time he did this, hugged her while he cried? When Dad died, just once. After that, he'd drawn into himself, and hugging became a thing of the past. So many years, so many fucking years, he'd built up those walls, kept himself safe from feeling anything, especially where family was concerned.\n\nWaking up to see her eyes blinking down at him, shattered those walls.\n\n\"Jack! Oh god, Jack.\"\n\nThey hugged each other for a good couple minutes. It wasn't until Antoinette shifted her legs a bit that Jack remembered she was there.\n\n\"M-Mom... I... how much\u2014\"\n\n\"She knows nothing, my little Ventrue.\" The Prince reached out, and pat his shoulder, drawing his head out of the neck of his mother. \"And, while I loath to end this moment, we should explain to Samantha the realities of the situation.\"\n\nThe situation. Oh fucking god, the situation. Jack pushed away, slowly, gently, and had to fight against his mother's squeezing arms a bit to do so. But after he tapped her on the shoulder a few times, she released him, and he smiled at her as he forced himself to stand.\n\n\"You were dead!\" His mother jumped up with him, and set a hand on his shoulder, squeezing it as if he was a ghost.\n\n\"Sort of? I know I disappeared two years ago, and\u2014\"\n\n\"No, Jack, just now. You were dead! There was a... a stick in your chest.\"\n\nJack raised a brow, and looked down at the floor, then to Antoinette. A wooden stake was in her hand.\n\nThe realities of the situation, she'd said. In that moment, he thought she meant purely about telling his mom about her new life as a vampire; and she probably did also mean that. But she also meant a private conversation had to happen, about what he did.\n\nThe soft, heavenly, simple memories of his first life, when he was young, living with his mother, disappeared under murky waters. The hard, cruel, complex memories of his second life sucker punched him, and he grimaced as he looked at Antoinette. Julias, dead. Angela and Elen escaped, once again, for the last fucking time. S\u00e1ndor was captured, and Antoinette probably had him locked up.\n\nAll of that faded into background noise, as he dug through the chaos of the event, and found the horrendous truth buried within. Something inside him had summoned an army of crows, and had slaughtered several hunters. Something inside him, something twisted and fucked up, had practically danced upon the blood and corpses. Something inside him, lurking beneath the surface, had lost its grip on Jack when he saw his mom in bed, and disappeared into him. It was still there.\n\nAnd Antoinette knew it hadn't been him. She knew it, Damien knew it, and to be careful, they staked him. Ouch.\n\n\"I...\" He looked at Antoinette, and waited. This whole situation was paralyzing, and he didn't know where to begin.\n\n\"Samantha, you have been brought into our world at a rather chaotic time. I can only offer my deepest apologies for how expedient we must be, but I cannot ease you into this.\" The Prince met their gazes, steady, strong, a pillar for Samantha to rely on. \"Two years ago, Jack was stabbed and killed by an enemy of his friend Julias Mire. Julias resurrected him, in the same way... that I have resurrected you.\"\n\n\"Res... surrected?\" Mom said.\n\nNodding, Jack winced as he looked down, and noticed his mom was still wearing her hospital gown under the robe. \"Yeah. Look at me, Mom. Look at her. Pale as fuck, and... well, check yourself for a pulse.\" It was how it sank in for him, seeing himself in the mirror, and then checking for a pulse. Something about seeing the difference of yourself, and the lack of a heartbeat, shattered any willful ignorance.\n\nHis mom did just that. She blinked at him as she felt her wrist, then her other wrist, then her neck, and then her chest. \"I... I don't... have a pulse.\"\n\n\"None of us do,\" Jack said. \"I\u2014\" He stopped, and looked to his love. \"Sorry, I'm sort of just taking over the conversation.\"\n\n\"It is understandable. I am a stranger to her, while Julias was... was not a stranger to you.\" The weight of her voice hit him, and his head lowered again.\n\nHis mom, fighting through her dry sobs, set a hand on his shoulder, and squeezed. \"Julias is dead? I remember him, and... he... he was a business man, wasn't he?\"\n\n\"He was a vampire, Mom. We... we all are.\"\n\nThe grip she had on his shoulder loosened, and she started to sway. He caught her, kept her standing, and offered a weak smile as he pat her on the shoulder. Ok, that was a bit much for her, but like Antoinette said, no time to ease her into this.\n\n\"Vampires? You mean... like... T-Twilight?\"\n\nHe groaned, so did Antoinette, until he couldn't help but laugh. \"No, not like Twilight. More like Dracula.\"\n\n\"That movie with Gary Oldman and Keanu Reeves?\"\n\n\"Yep.\" Close enough. Nodding, he helped guide his mom toward the door, following after Antoinette once she started to leave. Keep talking, explain things to her, it was better than thinking about Julias, or letting her think about Mary. \"Well, I meant the book, but, yeah. We're vampires. That's what happened to me. Another vampire who hated Julias tried to kill me, and Julias had to turn me, so that I didn't permanently die. It all happened so fast, that... that I had to disappear.\"\n\n\"So you've been... like this, for two years? Alive, or... or... whatever you are now?\"\n\n\"Yep.\"\n\n\"But... but... you could have told me! You could have come back, told your mother you were still alive!\" She wasn't getting it. He was just saying words to her, and they weren't sinking in. Vampire was a little too fantasy for her to accept, while seeing her son still alive was something her mind could latch onto.\n\n\"He could not,\" Antoinette said. \"It is a secret society, Samantha Terry. Your son was pulled into a hidden world, with no say in the matter.\"\n\nSamantha's head fell, and she dragged a little behind, trying to process everything happening to her. It was a lot to wake up to.\n\nWorse, was that Antoinette kept glancing Jack's way, and he could see grains of suspicion there. Warranted. He could remember what he did in the hallway, could remember referring to her as 'Annie', and remember how callous he'd been at the time about Julias's death, and S\u00e1ndor, and the bodies. He could remember how different he'd been, how good it felt to be free, how natural it felt to be that cruel.\n\nHe'd been a different person, but not. He'd had his memories, knew who he was, but he'd been someone else at the same time. God. Fucking god. Fucking shit fucking god shit fuck, oh god.\n\nNo, focus. Multiple personalities can wait. First, he had to help his mom adjust to her new life; and be happy that she was alive! Or rather, undead. Be happy! Be happy that... that Julias's sacrifice wasn't in vain.\n\n\"We're vampires, Mom. Julias was my sire, and... and he died, saving you, just last night. Saving you from that woman who stabbed Mary. Or, I mean, I've been assuming it was Angela.\"\n\n\"Glass eye?\" she said.\n\n\"Yeah, that's her.\" So she had been lying to her fellow hunters, then. They didn't know Angela was doing the shit she was doing. She was manipulating them. \"She went to the hospital where you were in a coma. She was going to kidnap you, so she could get to me, force me to tell her information. We stopped her. Antoinette here turned you, embraced you, same as Julias did for me.\"\n\nHis poor mom. She didn't know how to process a wave of information like this. Hell, she thought The Matrix was confusing. He loved her, but she wasn't the sharpest tool in the shed, and she showed that as her eyes drifted down, with a small frown of mental exertion. He had to dumb it down for her.\n\n\"Vampires have a secret society, and that society is at war, Mom. You and Mary got caught in the middle. And I... I... couldn't let you die.\"\n\nThat got through to her. She lifted her eyes, and she looked like she was about to burst into tears, caught somewhere between a big smile and sobs.\n\n\"And... M-Mary?\"\n\n\"... dead.\"\n\n\"B-But\u2014\"\n\n\"Dead, Mom. No one could... could... save her.\" He reached back behind him, and held his hand open.\n\nSlowly, with a shaking palm, his mom reached out, and took it, as they started up the stairs. \"I can't cry! I... I can't cry. Why\u2014\"\n\n\"You're a vampire now. Things are different. And don't worry, we'll explain everything. For now, you\u2014\"\n\n\"You should feed.\" Antoinette looked over her shoulder down at them, before they finally finished with the stairs and entered the lobby. Into the elevator they went. \"I have stored blood that will tide you over.\"\n\nJack frowned at that. It certainly didn't tide him over on his first night. But then, last night pretty much proved that his inner monster was a whole different Beast than anyone expected. Fucking lovely.\n\n\"Blood?\" Mom said. \"I... what?\"\n\nJack couldn't help but chuckle again, and once his mom was settled in the elevator with them, he pointed at her hand. The rest of her was covered in Antoinette's robe, but he could see her hands at least.\n\n\"You have no pulse.\"\n\n\"I know, but\u2014\"\n\n\"You're pale, mom. You can't cry. And I bet you're hungry.\"\n\n\"I know! I know, but... but... it's all so...\"\n\nJack opened his mouth, pulled back his cheek with a finger, and with a little will, caused his canines to grow into fangs. Samantha gasped and stepped back, before coming closer and looking intently, until he closed his mouth.\n\n\"It all sounds like a fantasy, I know. But...\" He pulled up his shirt, and showed where the stab scars were, earning another gasp from her. \"I'm not lying. I was stabbed, was dying, and Julias\"\u2014he couldn't keep the flinch off his face that time\u2014\"sired me, turned me, moments later, to save my life. I... I asked Antoinette to do the same for you.\"\n\nThe lights were turning on in her head, each causing his mom's eyes to grow wider. She lifted her head after a time, up to the white-haired Prince, and gulped\u2014and coughed in result. Dry gulps were hard to get used to.\n\n\"Th... thank... you.\"\n\n\"You are welcome, my childe.\"\n\n\"Child?\"\n\n\"Childe, with an E at the end,\" Jack said. \"She's your sire. You're her childe. It... it's not a normal relationship, and it's very unusual to be made this way. Julias got to know me for years, right? Groomed me, prepared me, though he didn't tell me why. I asked Antoinette to embrace a stranger. It's... yeah, unusual circumstances\"\n\nHis mom continued to look up at Antoinette, and after a while, drew up a smile. \"I'm sorry, I... it's all so... I'm so...\"\n\n\"Give it time, Samantha Terry. We have asked you to accept more in fifteen minutes, than most must accept in a lifetime.\" After a nod, the elevator dinged, and Antoinette stepped out. She opened the first, large office double door, and Samantha gasped in awe as she was introduced to just one of Antoinette's offices. There, Daniel was waiting, and he had a bottle of red at the table, along with glasses. In the back of the room, the curtain was pulled aside, showing the giant glass window, and the city skyline lit up with lights.\n\nThe man looked at Jack, adjusted his glasses, and watched him, like a sniper watches a potential target. Antoinette must have told him. Shit.\n\n\"My love and I have fed recently, Samantha. Please, help yourself to as much as you wish.\"\n\n\"Um... thanks.\" Samantha walked around the glass table in the center of the room, and sat down. Her hands were shaking as she took a glass. They didn't stop as Daniel filled it with red, and her eyes stared at the thick liquid. \"Um... uh... s-so, this is your, uh, boyfriend?\" she said, nodding to Daniel. \"Hello, Mister...?\"\n\nAntoinette raised a brow, looking to Daniel, then to Jack, then to Samantha. After a moment, she groaned, and set a couple fingers against her forehead. \"Merde.\"\n\n\"You're going to make her head explode, with too many revelations at once, my Prince,\" Jack said, unable to stop a smile sneaking through. Of all the shit, of all the horrible shit that was burying him, and the Prince by relation, there was something delightfully funny about her accidentally revealing that he was Antoinette's lover.\n\nHis mom looked at Jack, caught the smile, and her eyes went wider than any time before. She looked to Antoinette, then back to him, and completed the circuit twenty times, before she downed the glass of blood without attempting to taste it.\n\n\"I need... alcohol...\"\n\n\"Sorry,\" Jack said, sitting down next to his mom, and patting her on the shoulder. \"Sorry for... for a lot of things. Sorry I couldn't tell you about any of this. Sorry that... that our night war spilled over, and got... Mary killed. Sorry that I couldn't tell you I've been dating the Prince of Dolareido for over a year.\" He nodded to Antoinette, eyes still on his mom. \"Sorry, but you can't drink alcohol either. Only blood.\"\n\nHis mom stared down at the empty glass in her hand. \"Are... are you sure? I think now would be the perfect time to become an alcoholic.\"\n\n\"Agreed. But, yeah, no alcohol, unless you want to vomit it up.\"\n\nSighing, she took the bottle Daniel had set on the massive glass table, and poured herself more. Apparently, she liked it, or at least, liked the way it felt in her stomach. \"S-So, um... uh... the Prince?\"\n\nAntoinette sat down at the head of the table, and leaned back in her luxurious chair as she combed her white hair over her chest with her fingers. \"A gender neutral title, specific to Kindred. Vampires. This is my city, Samantha Terry, and I must apologize yet again. I have failed to keep the peace, to deal with invaders, to expunge the filth, and that has led to this situation. Ideally, you would have lived your life, blissfully unaware\u2014\"\n\n\"Blissful?\" Mom set her glass down, and glared at Antoinette, sparing only a second for Daniel. \"My son disappeared. Both of the most important men in my life were dead. I was... I... was...\"\n\nSilence fell on the room, and Jack, without realizing, put his hand on his mom's wrist. With a squeeze for her shaking limb, he scooted his chair in a little closer.\n\n\"It's the way it is, Mom. The way it has to be. Lot of vamps go through this problem, abandoning their families. We have to keep it secret, this night life. We're undead.\" Ok, his mom was his mom, and trying to explain to her things like the machinations of ancient elders, the harsh intentions of hunters, and the possible extinction of their race if they became known worldwide, was too much for now. Keep it simple, keep it succinct.\"If... if we became public, the sort of people who killed Mary, would be here in droves with pitchforks and torches. Worse, shotguns and flamethrowers. They'd hunt us down.\"\n\n\"But...b-but I thought vampires were the bad guys? I mean, I know it's not that simple in Twilight, but... but that's just a story...\"\n\nJack winced and looked to Antoinette, only to find her gesturing to him. This was a prime opportunity for her to learn about his mother through observation, while at the same time, let him handle tough questions. Smart. Evil of her, but smart.\n\n\"We can be. We're usually somewhere in the gray, Mom. Yeah, we drink blood, but we don't have to kill anyone. And Antoinette has pushed hard for Dolareido to be a peaceful city, compared to others.\"\n\n\"Vampires... are in other cities?\"\n\nHe nodded, and poured his mom another glass of blood. She was going through it quickly, which was a good sign. \"Basically every city. There's hundreds of Kindred in Dolareido. It's a society, with its own rules, its own history, its own... political parties, and its own enemies.\"\n\n\"And... and... I'm... in that society now?\"\n\n\"Sort of. You're a fledgling, brand new. Just do what Antoinette tells you, and everything will be fine. You've got the most powerful Kindred in the city as your sire.\"\n\n\"... and... apparently, she's your girlfriend?\"\n\nHe winced, and scratched his buzzed hair. \"She is. We love each other, quite a bit.\"\n\nHis mom squinted at him, trying to read him in that way she always used to, making no effort to hide her attempts to decipher his face. Her gaze turned to Antoinette again after a while, and she spent a little more time looking at her, at how she looked, at the seat she was in, the office she owned, the window she owned, and the man in the trench coat.\n\n\"Who... who's he?\"\n\n\"This is Daniel, my sheriff,\" Antoinette said.\n\n\"Sheriff?\"\n\n\"Yes, my childe. As my little Vent\u2014as Jack has explained, this is my city. When matters must be handled with force, Daniel is my right hand.\"\n\nMom shrank, and took another gulp of her drink. At least she was getting lost in other things, and not getting stuck on the whole 'drinking blood' hurdle a lot of vampires struggled to get over. She might hit it later, especially when she had to feed on an actual person, but for now, this was good.\n\n\"I... I don't have any say in this, do I?\"\n\nSighing, Jack sat up straight, and withdrew his hand. \"Not really, no. I asked Antoinette to sire you, to save your life. You were dying in that bed.\" The unspoken choice was obvious of course. Kill herself. He dared not say it. His mom had to be volatile at the moment; a stiff breeze would shatter her. She wasn't grieving over Mary, because she didn't have time. Hell, he wasn't grieving over Julias, because he didn't have time.\n\nSamantha reached out, and took his hand. She put it back on the table, held it, and managed to smile at him as she, again, gulped down some more blood with her shaking hand. \"I'm sorry Jack. I'm just... struggling to wrap my mind around all this.\"\n\n\"You have all the time in the world now. You're immortal.\"\n\n\"Immortal?\"\n\n\"One the perks. Antoinette and Daniel are both centuries old.\"\n\nSamantha raised her eyes at that; then again, she'd been raising her eyes at everything, and he could tell it was starting to lose meaning for her. \"I... I need to... to stop... and think...\"\n\nAntoinette smiled at her new childe, nodding, and motioned to Daniel. \"Daniel, please go with Jack, and check the prisoner. Keep an eye on him.\" A small glance Jack's way added the double meaning. 'Him' meant both S\u00e1ndor, and Jack. Yeah, that was understandable. \"Jack my dear, I know you must report to the Invictus as soon as possible, but please spare a moment for Beatrice. I have invited her to the tower, and I imagine she will arrive within the next thirty minutes.\"\n\nOh fuck. Oh fucking god. He lowered his head, and with heavy shoulders, forced himself to stand.\n\nBeatrice. Her name crashed into him, broke him open, spilled his guts, and left him defenseless. Julias was dead, and he had to tell her. Julias was dead, and he had to tell the Invictus. Julias was dead, and the closest thing he had to a father, was gone.\n\nWhen the rage rose up within him, this time, it didn't come as a faceless wave. It came up, and it was obvious something else came with it, was pushing it, driving it, forcing it to bubble up through him. His Beast was out of the box, off its leash, and for some fucking reason, it came with its own personality.\n\nLet's go hunting, Jack. Let me drive, and I'll rip the hunters apart. I can find them them. I can find them, and we can rip them into pieces. You don't know how good it feels, to feast until you overflow. We can find that Angela bitch, rape her until she cries, stab her, rip her open, fuck her while we drain her and\u2014\n\nHe shook his head, hard, hard enough to hurt his neck. What in the ever living fuck?",
        "When he opened his eyes, Daniel had unfolded his arms from his chest, and one looked ready to reach over his shoulder. He kept a sword back there, a very long sword, hidden inside the trench coat, and he was prepared to use it on him.\n\nThey didn't trust him. No, that wasn't true. They trusted him a lot, actually. They trusted him more than they should have, considering his behavior when Antoinette and Damien had found him. Seeing his mom had shattered its hold on him, like ice water to the face and spine. That was why Antoinette had brought her when waking him up, so he'd wake to her face. It was a good idea. It wasn't a good idea to trust Jack with talking to S\u00e1ndor; but then, Daniel could kill him instantly if he started acting out, or at least stab him with a stake. Maybe.\n\nIf Jack was Antoinette, and a Kindred he knew had done what he did, summoned an army of crows, and had a personality shift, he'd have them locked up, hung them up, blindfolded them, and staked them, until he knew what was happening. Christ, the crows. That was a massive Masquerade violation, and it'd take a lot of media manipulation to pass that off as something natural or explainable. The Invictus were going to have his head for that.\n\nHe really hoped Scully and Mulder were fine. Would they even still trust him, after seeing what he did?\n\nDaniel came forward, and walked past him before motioning for him to follow. He did, unable to look the man in the eyes. A flicker of the man's gaze said it all: Daniel was more than ready to kill him, and if anything, the man looked offended that Jack had put him in this position. Daniel cared about Antoinette above all, with the only exception being his childe. Jack was now an unknown factor, who spent every night in her bed. If he did anything to make Daniel think he was dangerous, the best he could hope for was a stake to the heart.\n\n\"Damien and Natasha are waiting for us, Jack.\"\n\n\"They are? I\u2014oh, Mom?\" He looked over his shoulder back at the two women. A moment of worry was on Antoinette's face, and he caught it; an arrow to the fucking heart, and not a nice, pink one in the shape of a heart. Antoinette was worried about him, very worried, and she was putting that conversation on hold so she could handle her new childe, and everything else. \"Stay with Antoinette. She's your sire, and she'll be taking care of you.\"\n\n\"You're going?\" She almost jumped out of her chair, until Jack motioned for her to sit.\n\n\"I sleep here basically every day, and spend a lot of my time here. I'll see you all the time, ok? I might leave the tower sometime tonight, but I'll explain the situation to my bosses, and I'll be back.\"\n\n\"Oh... ok... p-please, come back?\"\n\nAnd his heart shattered. The Beast inside him, demanding he be angry, growling and roaring and looking to unleash its hate toward Angela, went quiet. That strange voice in his head vanished. The sight of his mom's face, half panicked with the thought of losing the son she'd just got back, when the rest of her life was in ruin, buried the Beast and the rage it rode. Remember that face, Jack.\n\n\"I will. Don't worry.\" With a nod, he stepped out of the office, and joined Daniel in the elevator.\n\n\"Something happened to you,\" the sheriff said. Oh boy, a conversation with the sheriff, when no one else was around. This was bound to end well.\n\n\"Yeah. Something... did.\"\n\n\"You know what?\"\n\n\"Kind of? It's... it's a blur. Trying to remember a dream.\" Sighing, he put both his hands against the elevator door, and felt the vibrations of its descent. \"Something's inside me, and it isn't supposed to be there. It's... it's something, from the past, something that's been in my bloodline for centuries, I guess. Some... something... something fucked up.\" Something with a voice of its own.\n\nDaniel stared at him, face as still and expressionless as stone, before he adjusted his glasses. \"Does it mean us harm?\"\n\n\"No. It means the hunters harm.\"\n\n\"I see.\" That seemed to alleviate Daniel's concern a bit. \"Is this something you can control, or should we stake you?\" Thank god Daniel didn't give two shits about being gentle with Jack. Antoinette might have wanted to avoid the hard questions, but the sheriff didn't hesitate.\n\n\"I can feel it, something underneath my skin, lurking, hungry.\"\n\n\"Sounds like the Beast all Kindred deal with.\"\n\n\"Yeah, except... except, now, it doesn't feel like some mindless animal, you know? Now it feels... feels like... like something else.\" Like something intelligent. Being hunted by an animal was a scary thing. Being hunted by an intelligent entity, on the other hand, was fucking terrifying. Made him feel like he was a helpless kine, in the middle of the woods, in the dark, being hunted by a monster that knew his name.\n\nThe elevator opened, and Damien and Natasha stood there, waiting. Damien took one glance at him, and sighed relief. Natasha, on the other hand, ran up to him, and hugged him.\n\n\"Jack!\" She buried her face in his chest, and squeezed him. \"Jack, oh god, I'm so sorry. I... I...\"\n\nHe blinked down at the tiny woman. This was new, and he wasn't sure\u2014\n\nJack, you're doing it again. A horrible death haunts you, and you close yourself off. Don't do that. Don't go backward.\n\nSighing, he closed his eyes, and hugged her back, before opening them again and looking to Damien. \"Thanks, for helping the Prince.\"\n\n\"We ran into each other,\" he said, shrugging. \"And you... you didn't need our help.\"\n\n\"Yes, I did.\" He shook his head, and pat Natasha's back a couple times. She was content to keep hugging him, which seemed very uncharacteristic of her, considering she was just as antisocial as he was. Then again, she'd changed, too. \"If you guys hadn't shown up, I don't know if... if I'd... have snapped back.\"\n\nNatasha lifted her head and blinked up at him. \"What?\"\n\nSighing again, Jack explained what he could to the three Mekhets. He left out the detail that he'd chosen to let this Beast out, that he decided to do it, and decided to let it off the leash. He also left out the detail that, apparently, it could whisper to him now. Everything else, he explained in as much detail as he could. The attack on the hospital, Julias's last stand, Jack's blurry dream, his cursed ancestor, and how Jack defeated the hunters.\n\n\"It's g-good you didn't kill S\u00e1ndor,\" Natasha said, nodding and smiling as she stepped away from him, though he could see the weight behind it. Better to focus on their prisoner, than Julias's death, she probably thought. \"We think he's b-b-being controlled, by Elen.\" She squirmed a bit when she looked at him, and her eyes fell. She knew about his rage issues, and when he returned her gaze, the glance was enough for her to realize the two issues were connected; likely connected.\n\nJack drew his head back. \"Really? Controlled?\"\n\n\"Mhmm. There's s-s-something carved into his back, b-by Elen. And... he's... he's like a zombie, when t-talking to her.\"\n\nThat definitely sounded like brainwash behavior. Daniel nodded, and began the walk down the stairs to the lower depths of the tower, where Antoinette kept her prisoners.\n\n\"Damien,\" Jack said. \"Did\u2014\"\n\n\"I've already sent a message to Maria and Jessy. They know about the hunter attack, and... your sire's death.\" His eyes fell as he said it, but only for a moment. He knew better than to stew in the pain of it, or rather, to let Jack stew in it. \"They also know you killed three hunters, and that you captured their Begotten enforcer. They... also know about the crows.\"\n\nJack winced. Masquerade violation, and a massive one. The fact he'd dealt the hunters a massive blow, and that he was the only Kindred who'd managed to do so ever, let alone thrice, meant he was valuable to the Invictus. That was probably the only thing that kept them from tying him to a rooftop and leaving him there for sunrise, for that degree of violation. It was the sort of violation that'd hit the media, and there'd be no other way to spin it than 'swarm of crows attack hospital'. It was the sort of media that went viral, and in this day and age, that meant within twenty-four hours of its occurrence, hunters around the world would read about it. Fuck, they'd get to see it on camera footage.\n\nDamien told them, because it was bound to come out eventually anyway. Hell, the thralls probably reported it during the daily reports they prepped for dusk. Still, it was painful knowing his friend had told them, and not let him do it, no matter how justifiable it was.\n\n\"Mom's upstairs with Antoinette now. It's... it's pretty rough. She looks like she's ready to break down.\"\n\n\"B-But she was happy to see you, right?\" Tash said.\n\n\"Yeah, overjoyed. But then I had to tell her about Mary, and that she's a vampire, and... it's a lot. I want to get back up there, be with her, help walk her through this.\"\n\n\"Trust in the Prince.\" Daniel guided the three of them down the hall, not bothering to look back as he spoke. \"She can handle your mother's situation.\"\n\nThe hallway had a cell at the end of it, but unlike the cell they'd kept Jack in, no other cells lined the hallway. It was also a deeper level of the tower, one Jack had been discouraged from exploring. What sort of secrets did the dragons keep down here? What sort of strange experiments did they perform behind closed doors. Antoinette had made it clear in the past that, while she considered Dolareido her city, and enforced her policies, her role in the Ordo Dracul had nothing to do with it.\n\nOther elders, Jack had learned from her, spent their wealth and power fighting to maintain power. They fought the other covenants, and they fought invaders, like hunters. Antoinette had created a different sort of city, a peaceful one, where she could pursue her dragon interests without having to devote her effort to wars or dictatorship. In retrospect, that was backfiring. No vamp in the city was prepared for this hunter threat, and even if they had been, these hunters were absurdly organized, skilled, and informed.\n\nBut the vampires would win. After what happened last night, Jack would make sure they'd win, even if he had to let out his inner monster. No way was he letting Angela, or Elen, or even Jeremiah get out of this city alive.\n\nYeah, that's what I like to hear. Find them, kill them. Have fun while you're doing it, too. Angela's a pretty thing, and I bet she'd scream and scream as we slowly rip out her entrails.\n\nJack grit his teeth, and ignored the voice; or tried to. He knew it wasn't him, and it was fucking sick and twisted. Ignore it.\n\nDaniel pulled open the door. Like Jack's cell door, it was absurdly thick, capable of withstanding a nuke, or at least the punches of any paranormal. But once inside, the similarities ended.\n\nNatasha and Jack gasped, Damien frowned, and Daniel stood as the statue he always was. The room, lit only by the hallway light, took a second to reveal its secrets, but Kindred eyes adjusted eventually. The walls were metal, the same sort of metal the door was made of, ceiling and floor included. Upon the floor was some sort of painting, or carving, or... engraving. Carved into the metal, was a circle, and a circle around that, and a circle around that. A seven-pointed star cut across the circle, and stars sat within their points, then symbols he didn't recognize, except that they looked mathematical. Patterns upon patterns.\n\nThe symbols and signs Elen used were less mathematical, and more blatant in their occult nature. Hearts, skulls, bones, things like that. Whatever the Prince had set up here, was very different. If there'd been a Fibonacci sequence on the floor, it'd have fit in perfectly.\n\nS\u00e1ndor knelt in the middle. Both his arms were out to his side, pulled out and raised higher than his shoulders. Metal cuffs wrapped his wrists, and chains connected the cuffs to high points on the walls, refusing to let his hands fall. His head hung forward, and a small pool of blood sat around his knees. A black bandage circled his head and covered his eyes. He was breathing, but it was easy to see each breath was labored.\n\nRage stirred inside Jack, and the voice came with it again, a whispering, dark voice in the back of his brain.\n\nRip his arm off, Jack. That'll make him talk. Better yet, you remember that book, 1984? Summon some rats, and have some fun. All sorts of interesting ways you can torture people with rats.\n\nJack shook his head again, and forced the voice down and out of his thoughts as best he could. He couldn't embrace it, couldn't let the rage well up anymore, couldn't feed the furnace. Not now, not yet. But later, when Angela was in his sights.\n\nDaniel stepped around behind the man, and gestured to his back. \"This symbol has been carved into his back, as Natasha described in her report.\"\n\n\"Report?\" Jack said.\n\n\"I r-ran into S\u00e1ndor, and Elen, and some hunters... not even an hour b-before... you...\"\n\nWincing, Jack walked around behind the Begotten, and looked at his back. Sure enough, there was a symbol carved there, a circle with an upside-down pentagram, and various things cut into the corners, predictable things, like a realistic heart, and a skull. \"Did they use some sort of portal?\"\n\n\"Yeah! And, it... it took us int-to some sort of... flesh chamber.\"\n\nA flesh chamber. Ok, that needed a little more explanation, but it could wait. Throw it in the 'Elen's crazy magic' category for now.\n\n\"That's what Angela did then. She opened a portal, using a sacrifice; killed one of our thralls to use her blood for the symbols. S\u00e1ndor and Elen came out, and... that's what turned the tide,\" Jack said. Natasha's eyes went wide, but before she could say anything, Jack shook his head and raised a hand. \"You know it's not your fault, Tash. No one knew how they were getting around.\"\n\nShe sighed but nodded. \"We... we d-do, now. I have a report f-for... for the Invictus, to give you, or D-Damien, before you go.\"\n\nDamien nodded, but his eyes were locked on the Begotten. \"Is he awake?\"\n\nDaniel reached around the Begotten's face, and flicked him in the nose. As the man groaned, Tash squirmed, shifting her weight back and forth on her heels and toes. Yeah, flicking a man in his broken nose was a painful way to test if they were awake. A groan was all that it pulled from him though.\n\n\"He can't do some trick,\" Jack said, \"and slip into a nightmare chamber from here?\"\n\n\"No. This symbol creates a barrier between our world and the Shadow realm.\" Daniel came around, and squatted down in front of the Begotten. If he was awake, he was either refusing to talk, or Julias's last moments had been damaging enough to leave the monster borderline comatose; probably both. \"We've discovered it causes interference for things that... attempt to cross realms, not just the Shadow realm. It should work on him.\"\n\nThat didn't sound terribly reliable, but since S\u00e1ndor was still here, either it was good enough, or the Begotten couldn't escape in his current situation anyway. Fiona had said they couldn't simply go 'poof' and arrive in their nightmare chambers, certain prerequisites were required.\n\nJack squatted down beside the sheriff. A bit presumptuous of him, acting like he was going to be a part of this on even ground, like two detectives interrogating a suspect. But, Daniel had brought him. In fact, Daniel nodded to Jack, and waited. Considering the last thing S\u00e1ndor got to experience was a swarm of crows killing his comrades, maybe Jack could strike a little fear into the fear monster.\n\n\"S\u00e1ndor,\" Jack said. \"We know you're awake. We know you can hear us.\"\n\nThe man continued to dangle, body wanting to fall but unable to with how his hands were out and strung up by the chains. If he was being controlled, and Tash seemed adamant that he was, then he wasn't a traitor. Hell, he was a victim, someone they should try and save.\n\n\"Damien, try cutting through the symbol on his back.\"\n\nWithout protest or hesitation, Damien walked behind the prisoner, drew his small sword, and deftly cut across S\u00e1ndor's back. It earned another groan from the man, and a few shudders, but otherwise did nothing. Yeah, it figured. It'd have been great if that was all it took to break the spell holding the man, but then, it'd probably have broken easily in the past. However the symbol worked, it was more than skin deep.\n\nTash came around to stand beside Damien. Frowning, she leaned down and looked at the symbol carved between the prisoner's shoulder blades. \"Elen said that she... she had to carve this m-m-multiple times. Said he healed from it t-too quickly.\"\n\nJack leaned in close, and gently pushed the man's head up by his forehead. His hair was buzzed short, like Jack's, and he had a build of lean, solid muscle, also like Jack. A lot of physical similarities, though S\u00e1ndor was of average height, and probably had forty pounds of bone and solid muscle on Jack. It was hard to tell anything else about him without eye contact.\n\n\"Can I take off the bandage?\"\n\nDaniel adjusted his glasses, looked at him, then at the man in chains. \"If I think the monster is going to escape somehow, I will cut off his head.\"\n\n\"How strong are the chains?\"\n\n\"Neither Antoinette or Jacob would be able to break them.\"\n\nJack, Damien, and Natasha all whistled at the same time. Those were strong chains.\n\nWith a wince, Jack reached out, and undid the man's bandage, exposing his eyes. They were closed, and remained closed. Sighing, Jack pushed his head up by his forehead with one hand, and slid open one of his eyes with a thumb.\n\nThis fucker was the reason Julias was dead. If he hadn't had shown up randomly through a fucking Hell portal in a god damn wall, Julias would still be alive. It took every ounce of will Jack had, to not picture his sire on his knees, not picture the warm smile he had before a hunter shot him in the back of the fucking head at Angela's command. He frowned, squeezed his eyes shut, pushed the images down, and looked into the Begotten's eye.\n\n\"He's conscious,\" Jack said. \"His horror won't let him die from these wounds. Though, from what I know, he won't be able to heal from them, not easily, until he gets back into his lair. I'm guessing he's not talking because of Tash's theory.\"\n\n\"What's the plan, then?\" Damien said.\n\nWith a deep, useless breath, Jack put both hands on the man's face, holding his head up while also holding his eyelids up using his thumbs. A quiet growl rumbled in Jack's throat, as he forced the Begotten to look him in the eye, and he smashed his will into the man's mind.\n\nCold. Something ice cold stood between Jack and the creature's thoughts, like a gate of frozen metal. Touching it with his will sent pain back into Jack, the sort of shock pain jumping into ice cold water caused. And normally, that'd be enough to make Jack back off; who didn't scamper out of water when it was so cold, it made every nerve in your body feel like it was on fire? Tonight, it might as well have been a cool shower. He threw his will against it again, and again, and again, each slam hitting Jack in his guts, and sending more of that cold fire up his spine, but he didn't stop.\n\nSomething inside the Begotten growled from within his thoughts. In Jack's mind, in the connection he made with the nightmare incarnate, he could feel something stir beyond the icy gate, and it rumbled its frustration. It didn't like that Jack was trying to break through. Jack didn't care. He slammed his will against the gate again, and the monster beyond, hidden in the endless depths of mental chaos and undefinable darkness, snarled. But, through the bars, he could see \u2014 or feel \u2014 the horror awaiting him. A nightmare, a beast, a titanic gargoyle lurked beyond the gate, and it was ready to defend itself against anyone who managed to break through the strange barrier. Beating it, defeating this man's will, his very essence, would be difficult.",
        "It didn't matter, ultimately. A strange, red circle flashed in Jack's eyes, and he stopped. The symbols on the circle, inside and around it, were familiar. One of Elen's circles. He let go of the Begotten's head, and fell back, body shaking, muscles clenching.\n\n\"You o-ok?\" Tash said.\n\n\"Yeah, yeah I'm fine.\" Jack stood up, and stared down at the limp man. \"He's guarded, by more than just his own nightmare horror thing. Elen's circle is blocking me. I can't get at his mind, let alone break it. Maybe... maybe Julias could have.\"\n\nCome on, Jack. Let me out. Let me do it. You think I can't smash through a fucking ward? I'll rip his mind to bits.\n\nJack gulped, and blinked several times, as he digested that. Ok... maybe he could talk to... it.\n\nYou'll destroy him. He doesn't deserve to be turned into an invalid.\n\nYes he does. He's been captured and turned into a fucking robot, serving his masters, hunters. Any paranormal who fucks up that bad deserves to die.\n\nJack growled and shook his head hard, earning some glances from the others. Talking to himself was natural, and he'd been doing it since long before he was a vampire. But when himself starting talking back, especially when not prompted, that was unacceptable. A back and forth between his inner self? Christ, it was so clich\u00e9. Doctor Jekyll, meet Mister Hyde.\n\nHe didn't tell the others his Beast came with a voice now, and he wasn't going to. He'd told them enough. This was his burden, and he could manage it. And, much as he hated to admit it, he needed this monster lurking underneath his skin. Once Angela, Jeremiah, and Elen were dead, he could tell the others, and let them lock him away; or dissect his brain, or whatever they'd do.\n\n\"What do we do then?\" Damien said.\n\nJack shrugged as he looked down at the prisoner. \"The Prince would have a better chance of breaking him than any Ventrue currently... alive, in the city.\" There were never that many Ventrue in Dolareido, and they lost the greatest of them last night. \"Her Majesty discipline might do it. Even if it can't, she's gotta have a plan, right?\"\n\n\"If she doesn't,\" Daniel said, \"she will have one soon. We didn't expect to capture the Begotten alive.\"\n\nNodding, Jack circled the Begotten a couple times, looking for details he may have missed. \"Last night's encounter set them back a lot.\"\n\n\"Us too,\" Damien said.\n\nJack winced, but nodded. \"Yeah... us too.\" Stop it. Don't think about it. Think about it later. \"We have to lick our wounds, and so do they. Gives us some time to see if maybe we can get through to the Begotten, or figure out a plan.\"\n\n\"Agreed.\" Damien turned for the door, but glanced back to look at the prisoner. \"We should probably get him drink and food. He's not a vampire. His body will starve.\"\n\n\"Agreed.\" Jack retied the bandage around the monster's eyes, and looked to Daniel for confirmation. The elder nodded, and the four of them left the room.\n\nWhat a waste of time. If they couldn't get through to S\u00e1ndor, either with Disciplines or words, he wouldn't be of use. Torture was unlikely to work, considering who and what he was, and from how the man was basically a zombie.\n\n\"Elen said she had t-to redraw the symbol, after he healed it,\" Tash said. \"M-Maybe if we wait, he'll... he'll b-b-break free on his own?\"\n\nJack nodded, and once Daniel began leading them again, the four of them started up the stairs back to the lobby. Maybe S\u00e1ndor would heal and eventually be free of his magical binding, if that was the case. It was hard to believe any sort of curse could be permanent, when used on something as powerful as a Begotten; Jack's certainly wasn't permanent. And this S\u00e1ndor, he was brutally strong. If Jack and Julias had faced him in the nightmare, it wouldn't have been a fight at all. And\u2014shit.\n\nThe Fates hated Jack. They despised him. As if discovering his new life with Antoinette had pissed them off, and now he was doomed to suffer eternally, everything conspiring against him. Maybe they'd summoned Angela, to destroy him, break him, ruin him. Whatever happened, his life was becoming one unending string of bullshit, perfectly timed to bring the worst possible pain. His torture, his mother's assault, Mary's death, Julias's death, it was a string of Hell. And it never stopped.\n\nAs he stepped out of the stairway, and up into the fancy, massive lobby of the Elysium Tower, someone came up from around the front desk. Jack knew who it was, even before his eyes recognized her. Half because Antoinette said she was coming, half because he knew the Fates wanted to make sure he suffered until the end of time.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nStanding by her window, hands behind her, she watched Beatrice approach her tower. The woman knew what floor to come to, and Antoinette suspected the Nosferatu would be suspicious of the meeting. She had not talked to her lover, Julias, and would be looking for him, or awaiting his response to her messages to him. Antoinette would have to explain the reality, and she did not look forward to hurting her so. She still trusted the woman, all fire and energy, to reach Jacob, and pull her old friend back from his dark agendas. But after tonight, that would, perhaps, be a lost hope.\n\nHopefully, with a touch of luck, Jack would be able to handle the situation better than her. She did not want to bury the boy in yet more pain, but Beatrice deserved to hear this from him. And, she needed to know, how this new Jack would respond.\n\nSamantha stood beside the Prince, the small creature sipping from her glass, robe still wrapped around her. She gasped once or twice as she stared over the city landscape, its colorful horizon of lights and lit signs, and the desert that lay beyond.\n\n\"I still can't really believe it.\"\n\n\"You saw the condition of your son's suit, Samantha.\"\n\n\"I... I didn't... I didn't really, honestly.\"\n\nAntoinette chuckled at that, and looked down at her new childe. \"It was filled with gunshot wounds, Samantha. Last night, your son, and his sire, fought perhaps eight hunters, to save your life.\"\n\n\"Hunters?\"\n\n\"I... I suppose Jack will be better equipped to explain the circumstances in terms you can understand. Media, television and video, I have not remained enlightened as to modern storytelling.\"\n\n\"Modern... storytelling?\"\n\n\"I am very old, Samantha Terry. I moved to a quaint little village hundreds of years ago, and I grew it into the Dolareido you see today. As your son explained, we are immortal.\"\n\nThe glass in her hands began to tremble, and Antoinette reached out to set her hand underneath it. Touching its bottom was enough to awaken her childe from her shock, and regain her grip on the glass.\n\n\"It really is your city?\"\n\n\"Indeed.\"\n\n\"And... and I'm... your childe?\"\n\n\"Indeed.\" Antoinette waved a dismissing hand. \"For now, you need only concern yourself with becoming comfortable with your new existence. Your old life is gone, and... and while nothing can undo the horrible pains inflicted upon you, or return to you that which has been stolen, you must understand that you have been reborn. You are now a creature of the night, Samantha Terry, and now you are to begin your second life.\"\n\n\"Second life...\" The small woman took a sip, before stepping closer to the glass, and looking down at the garden maze far below. \"My old life ended only an hour ago, for me, miss... I'm sorry, you never told me your last name.\"\n\n\"A thing lost to the annals of time.\"\n\n\"You lost your last name?\"\n\n\"If I contacted my order, or if I searched through decrepit journals from my past, I am sure I could recover it, but it is not necessary, or desired.\" She turned, and walked back to the glass table. Sitting down upon her large chair, she motioned for Samantha to join her once again. \"My second life began many centuries ago, Samantha. My last name is an artifact from ancient days that no longer have meaning to me.\"\n\n\"B-But, your family, I\u2014\"\n\nAntoinette shook her head, and leaned back in her chair again, pulling her hair over her shoulder to begin combing it. \"Unfortunately, one of the negatives of our long lives, is that our memory fades, and is suspect. That which occurred over a hundred years ago has faded somewhat. Two hundred years, is quite blurry. Three hundred years, I have only the faintest, drifting images. Before that, it is... gone.\"\n\nSamantha stared at her, eyes wide and wider still. The poor woman's eyes were going to slip free of her skull if she continued.\n\n\"And... s-someone like you... is Jack's...love?\"\n\nOf course, the mother could not help but wonder about the woman dating her son.\n\n\"Your son is an amazing man, Samantha Terry. He has affected this city, influenced it and its denizens of the night, and made great strides in many facets, including his political power, financial security, and abilities as a vampire.\"\n\nJack's mother frowned, and looked down at the drink in her hand. \"And that's why you love him?\"\n\nAh, she was concerned about the sort of woman Antoinette was underneath the skin, concerned for her son. It was terribly cute, and the Prince smiled at her new childe.\n\n\"No. I love your son because I have met few, in my many years of unlife, that have his conviction, his commitment to honesty with himself and others, and yet, he somehow remains sensitive and sincere. I can always trust your son to be genuine, Samantha. We Kindred, we have an instinct to deceive and to manipulate, and yet your son resists this urge.\" She sighed, and let her head lean back onto the spine of her chair, as she smiled. \"He is a diamond in the rough, Samantha. You raised a wonderful man.\"\n\n\"Diamond... I...\" The fledgling found a smile, a real smile buried underneath her misery, and it sneaked its way onto her lips as she took another sip of her drink. \"I always told him, growing up, that he needed to be honest, with himself and everyone else. His dad, he... he taught him how to think, before he died. Challenged him, you know? When Jack would ask 'Why's the sky blue?', he'd say 'Dunno, why is the sky blue? See if you can find out.' And Jack would stay up late on the computer, rotting his eyes and brain, but sure enough, the next day, he'd give James a big explanation about something scientific, and... and... and Mary would roll her eyes. Call him a nerd.\" Her shoulders began to shake, and she set the glass down on the table before she dropped it. \"I can't believe she's gone.\"\n\nAntoinette reached out, poured herself a glass of blood, and took a sip as she leaned back in her chair once more. \"There is no misery greater, than a parent losing their child.\"\n\n\"I... I didn't think... I didn't think I'd have to face it again. At least this time, there's closure. M-Mary is... is gone.\"\n\n\"And your son Jack, is alive.\" After another sip, Antoinette offered her childe her gaze. Let her peer into her soul, and she her in return. For Antoinette, it was as if looking upon an icy desert of pain. For Samantha, hopefully, there was stability and honesty found in Antoinette's eyes. \"There will be plenty of time to grieve, Samantha, but for now, I must explain to you the role you play in your new life.\"\n\n\"D... do I get a say in this?\" She looked down at her drink, a hint of fear in her eyes.\n\n\"No. Well... I suppose that is not true. You will always have the choice to end your own life, if you so desire.\"\n\nShe snapped her head up and blinked at her, as if it were the most absurd suggestion she had ever heard. Bien.\n\n\"I wouldn't... I... I couldn't... now that Jack...\" Now that Jack was alive, she would not consider it.\n\n\"Then you are my childe, and for now, I am responsible for you.\"\n\n\"How long does that last for?\"\n\n\"For the first year or two of your life, you are considered a fledgling, and your sire is held accountable for your actions. After, once you have proven capable of survival and respecting the Masquerade, you are a neonate, until you are about fifty years old, in Kindred years. Your covenant will be your guide in those years. Generally, from fifty to about one hundred and fifty years old, you are ancilla, and you will be a key figure within your covenant, trusted with difficult tasks, and important decisions. After, you are what we consider an elder, and you will be a key figure within whatever city you reside, respected and feared by all.\" She chuckled as she watched Samantha reel with the massive numbers. \"Though, by the time you reach such an age, I suspect many of us will be within spaceships, and will have to discover new ways to approach our nightlife.\"\n\nShe downed her drink, and poured herself another. \"Good god... Masquerade?\"\n\n\"The veil of secrecy we Kindred hold dear. If you announce the existence of vampires publicly to humans, which we call kine, you will be killed. If you perform an act that would draw the suspicion of the kine, you will be punished.\" Before her childe could begin inevitable panic, Antoinette smiled and shook her head. \"Do not fret. I will guide you.\"\n\n\"H... how many vampires are in Dolareido?\"\n\n\"Less than three hundred, at the moment. I have allowed siring to recommence, to repopulate.\"\n\n\"Three hundred, and you run the city? You, alone? But there are millions of people in Dolareido.\"\n\nAntoinette leaned toward her childe, and grinned. \"You are a creature of the night now, little Terry. You will grow into powers you can not even begin to comprehend.\" She held up a hand, open palm, four fingers and thumb spread outward. \"There are primarily five types of Kindred, childe, and since you are my childe, you share in my bloodclan. We are Daeva.\"\n\n\"Daeva?\"\n\n\"Mmm, oui.\" She increased the sensuality of her words, her expressions, and took another sip of her drink. \"Of two of the many shared disciplines, we are naturals: strength, and speed.\"\n\n\"Like... those superhero movies?\"\n\n\"Quite. All Kindred share in common disciplines, and all bloodclans find they are naturals at two of them. Speed, strength, resilience, the ability to cloak ourselves from sight, and the ability to talk to, summon, and control animals.\"\n\n\"... I... I can't even...\"\n\nThis was delightful. As much as the poor woman had to manage the greatest moment of chaos in her life, misery and joy mixing, it was pleasing to see the wonder and surprise on her face. Antoinette had not taken the time to explain to a fresh vampire the enchanting aspects of their Kindred species, in many, many years.\n\n\"Bloodclans also have unique abilities. We, the Daeva, can bend the minds of others, into adoration.\"\n\n\"Adoration?\"\n\n\"The Nosferatu can haunt the minds of others with nightmares, and make them feel fear. Gangrel can transform into hideous beasts, and alter their bodies in many ways. Mekhet can see into the truth of people, events, and objects, even so far as seeing glimpses of the past. Ventrue, like your son, can break the minds of others, and turn them into obedient servants. Particularly skilled Ventrue can wipe memories, change them, manipulate them. While you and I, Samantha Terry, can drown ourselves in sin and pleasure with but a flick of our wrist and wink of the eye. I could, within a single month, teach you to turn any kine you wish into an adoring fan for the night, someone who would do whatever you wished of them. Anything.\"\n\n\"You m-mean... s-s-s-s\u2014\"\n\n\"You are a vampire, Samantha. You feed on humans, and while that may sound horrible, I assure you it need not be. We call it the Kiss, and it is exquisite. It is more pleasurable than sex, and there is nothing to stop you from indulging in both, at the same time. For Daeva, this is particularly effortless, as we can use the discipline Majesty to turn any kine into a dotting, enraptured admirer.\" With a playful wink, she took another sip of her drink. \"And, if you take your time, build the moment, and let your hunger emerge as a creature of lust, rather than aggression, the Kiss becomes overwhelmingly blissful for the kine. Many, if not most of the Kindred in my city enjoy feeding during sex, and indulge in total freedom in their pursuits of pleasure.\"\n\n\"Oh... god...W-Wait, I'm not blushing! I should be blushing.\" The woman pat her cheeks, likely seeking the heat that did not come.\n\nAntoinette chuckled again, and nodded. \"You will learn how to, as we call it, Blush Life, and with a smattering of will and energy, force your body to behave as it once did, before you were turned.\"\n\nShe continued, and took delicate moments to explain to her childe the nuances of a Kindred's life. The Blush of Life, feeding, torpor, and avoiding fire and sunlight. Required knowledge, before she dared let Samantha out of her sight.\n\nBeatrice did not come to meet her, doubtless having run into Jack, or the three Mekhet. Sorrow gripped Antoinette, pulling at her, demanding she give it her attention. She refused. Julias's death, and Beatrice's inevitable misery, were not as important as preparing her new childe for her second life, her requiem.\n\nAnd once the Nosferatu learned of her lover's death, God have mercy on the fool who stumbled onto her path tonight.\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nShe did not like this.\n\nWalking up to the Elysium Tower never felt good, but that was normal for any Nosferatu. The tower represented peace, and younger Kindred hung around in the gardens, free from any covenant disputes. A no-violence zone. If Kindred wanted to show up, talk, get to know each other, this was where they'd do it. Nosferatu didn't show up, because they were ugly as fuck, and that startled other young Kindred. So they hung out by themselves for the first few years of their embrace, and longer, hiding in sewers and whatnot until they were strong enough to Cloak themselves easily.\n\nTimes were different. She was different. She was a witch now, Jacob's student, and that put her on Antoinette's radar in a way she didn't necessarily like. She'd helped Jack when dealing with that strange spider monster in the sewers, so she had that to put her in Antoinette's favor, at least. Antoinette had also asked her to actually do her a favor, for Jacob, so there was that, too. And now she was dating one of the Invictus council, putting her on everyone's radar, which was probably what this call was about. The fuck did Julias do now?\n\nShe'd sent him a message before going to sleep yesterday, since he wasn't at the mansion. Still no reply. Strange. Ugh, did the man piss off the Prince somehow? Or lose his phone. Julias wasn't the type to forget his phone, or lose it, but who knew.\n\n\"Let me know how it goes,\" Jen said. She moved over to a bench, and sat nearby some other Kindred. The chance of hunters coming to Elysium was none, but still, the buddy system wasn't going away until the hunters were gone. Vamps had to stick together.\n\nNodding, Triss walked up the stairs. Once through the front door, she frowned at the thrall behind the front desk. A fat guy, bald, and he offered her a small wave.\n\n\"Miss Damor? Hey, come on in. You're expected.\"\n\n\"... thanks.\" She didn't bother Cloaking to hide herself from him, but it'd never be easy, revealing her mutations to a kine. The fat man did a double take once he noticed her cheeks, or lack there of, and the crocodile teeth that sat where cheeks were supposed to be, but quickly went back to his computer \u2014 and donuts \u2014 once he saw that she saw.\n\nGod damn, the tower was a fancy thing. The Invictus tower was all black marble, but the Elysium Tower was black marble with white veins, fucking everywhere. It was gorgeous, and imposing. And\u2014oh, Jack and crew. Four Kindred came up from the stairs in the back of the big lobby, and turned to face her, Jack at the forefront. Tash, Damien, and Daniel followed him, probably the three most powerful Mekhet in the city. Scary.\n\nShe met Jack's eyes, and froze.\n\nThe boy stood there, and while she could see he struggled with it, he was forcing himself to look at her. The other three couldn't, avoiding her gaze, as if catching her snake eyes would set them on fire. Even Daniel, the fucking statue, had picked something else to look at, rather than meet her eyes.",
        "\"Natasha, come with me,\" Daniel said. \"Thralls have been at the hospital all day, Invictus and ours, and we should join them. The Invictus council have sent Vicky Goldman and Bruce Vanna, and we should oversee the results.\"\n\nVicky and Bruce were Ventrue, and if they were going somewhere, with the sheriff too, then they were handling a cleanup. Ventrue would use their Dominate to control the situation, rewrite some kine memories, and deal with fallout. But, like with Eric's first transformation, if it was a serious situation, Julias was the Ventrue they'd send.\n\nShe was paralyzed. She couldn't move. Her feet were stuck to the floor, and her arms hung at her sides, limp, chains tying them to the Earth. As the two Mekhets walked past her, they continued to avoid her eyes, and Tash looked like she carried a weight on her back.\n\n\"I'm heading to the Invictus HQ,\" Damien said. As he walked past Jack, he looked over his shoulder, and Beatrice could see the grimace in the muscles of his jaw. \"Michael and Maria will need a more thorough report.\" He didn't wait for Jack's response, leaving, gaze on the floor.\n\nThe kid nodded, but didn't take his eyes off hers, even as Damien walked past her, leaving the two of them alone. They both stood there, looking at each other, and listened to the footsteps on the hard floor. A minute went by, and then another. Jack swallowed hard, several times, a habit he couldn't seem to break, and it made his discomfort obvious. More than discomfort. The kid was oozing agony from every pore, to the point he might as well have bled black.\n\nOh fuck. Please god, please, don't let it be that. Anything, fucking anything other than what she could see in the kid's eyes.\n\n\"... Triss,\" the kid said, and the waver in his voice broke through her ribs and ripped out her heart with a splatter of gore and and anguish. \"I\u2014\"\n\n\"How?\"\n\n\"What?\"\n\n\"How did it happen?\" No dancing around it, avoiding it, going into denial about it. Get it out of the way. Rip the bandaid off, even if it took all her skin with it.\n\n\"I...\" Finally, the kid broke, and his eyes fell. His shoulders trembled for a moment, and she could see he was fighting off the urge to cry. \"I was at the hospital, visiting Mary and Mom. He came to see me, and then hunters showed up, with Angela. Then Elen and S\u00e1ndor showed up using some sort of portal, and it ruined... ruined everything. They were... going to take Mom, and... and use her to... get to me.\" His fingers squeezed, tightening into fists as the kid forced down the shaking until it was gone. \"We stopped them. Killed three hunters, maybe four, and even captured S\u00e1ndor. But... but Julias... he...\"\n\n\"Died doing a valiant last stand, right?\"\n\n\"Yeah... yeah.\"\n\n\"And your mom?\"\n\nJack lifted his eyes, and dug through the cesspit of misery he was swimming through, to find a small smile for her. \"He saved her. She's upstairs, with Antoinette, sire and childe.\"\n\nShe nodded, and let her eyes drop. Yeah, that sounded like Julias, sacrificing himself to save someone else. His childe's mom? Definitely a Julias move.\n\nJulias was dead.\n\nShe felt her long tongue press against the top of her mouth, and her throat constrict. Julias was dead. The words meant nothing at first, even as she ran them through her head several times. Julias was dead. Just three words that bounced off of her, as if spoken in an unknown language. Julias. Was. Dead.\n\nAs seconds slowly trickled by, meaning came to the words, context creeping in, no matter how much she didn't want it to. Julias was dead, which meant, the man who first showed her her disfigurement wasn't the problem she thought it was, was gone. The man who held her tight, hugged her, made her feel safe, was gone. The man who made her laugh, took her out to feed on kine, danced with her, was gone. The man who didn't mind her kinks, enjoyed and embraced them, inviting her friend into their bed, was gone. The man who pampered her, made her feel like a princess, and laughed when she acted like a spoiled one, was gone. The man who loved her, was gone.\n\nHer white knight, her Superman, was dead.\n\nJack gasped as she threw herself at him. Her claws found his shoulders, and she sank them into flesh as she grabbed him, crashing his back to elevator door behind him. She picked him up, pinning him to the door, and glared at him, as the cold tremors started to work through her. Rage. She'd managed to skip right over denial then, like she wanted to. Yeap, sounded like her, sprinting out of the gate and then tripping a moment later.\n\n\"You!\" She bashed the man against the elevator door, slamming him into it several times. \"He died helping you!\" She squeezed harder, and stared into the man's eyes as pain hit him. \"He died because of you!\" She knew she lost control. Deep down, past the icy pain that now coursed through her, she knew this wasn't fair. Didn't care, didn't matter. Pain. Rage. She had to get it out, had to before she exploded.\n\nFootsteps forced her head to look over her shoulder, and the fat guard came closer, a pistol in his hands.\n\n\"Ma'am, put down Mister Terry, before I\u2014\"\n\n\"It's ok, Chunk,\" Jack said, shaking his head at the thrall. \"Go back to your desk, and pretend you didn't see anything.\"\n\n\"Um, are you sure Mister Terry? She\u2014\"\n\n\"Go, Chunk. Now.\"\n\nThe thrall frowned, but put his pistol away, and walked back to his desk. Good. If he'd fired, Triss knew she'd have ripped the tubby fucker into bits.\n\nShe glared back up at Jack as her tremors grew. Her whole body was shaking, and her fingers tightened around his shoulders, claws getting through his suit. And\u2014\n\nHis suit. Holy shit, his suit. He was covered in holes, and dried blood. He must have been shot a couple dozen times, and from the amount of blood on him, he must have been swimming in death.\n\nThis kid. This fucking, god damn kid. Ruin followed him wherever he went. Julias almost died that night when Rebecca fought him helping Tony, and Triss saved him. Twice! Viktor and Tony died around Jack in that confrontation. Then Lucas, and a host of other young Kindred. A hunt for a spider monster turned into two, randomly, and it'd gone ballistic trying to kill Jack. Then Angela and the hunters, not even in the city for him, were now suddenly trying to destroy his life.\n\nThe kid was cursed.\n\nShe lowered him, and stopped squeezing, letting her claws slip free of his flesh. But looking into his eyes soon proved too much, the honest green opening his soul to her. Pain. Christ, the kid was in pain, and she was blaming him, hurting him. Fuck. Fuck fuck fuck. Blame someone! She had to blame someone, anyone.\n\nThis wasn't happening. This couldn't be happening.\n\nHer head fell, dangling in front of her, and her clutching hands shook Jack lightly. Strength vanished. An icy cold blanket, heavy, painful, covered her from head to toe, and pulled her down toward the floor. No matter how hard she tried, she couldn't find strength anymore, and her palms slid down Jack's arms. Soon, her knees met the floor, and her hands continued to slide down Jack's legs, until they fell to the floor as well. She tried to lift her head again, and she managed a few inches, enough to look up at Jack. Mistake. The kid, helpless to his own god damn honesty, met her eyes, and she crumbled.\n\nHe was broken. He was destroyed. But he was carrying on, despite it. She couldn't.\n\n\"He... he can't be dead,\" she said, voice choking against rising sobs. \"He can't be! I... I need him... I... I can't... please, I can't... I can't!\" Back to denial, then.\n\n\"He's dead.\" The wasteland of death and ice that surrounded them both, broke apart under the crashing weight of his words. And beneath it, all that awaited her, was a freezing cold, dark, endless abyss.\n\n\"Don't say that!\"\n\n\"He's... he's gone, Triss.\"\n\n\"He's not gone! I need him! He can't be gone. No! He's not! He's not! He's\u2014\"\n\n\"Gone... he... he's gone.\" Jack's back pressed to the elevator door, and he started to slide down it. Soon he was sitting on the floor, legs apart, her between them. \"He's dead.\"\n\n\"He's not dead! No! He'll... he... he had a plan, right? He'll\u2014\"\n\n\"He's gone! He's... he's gone, Triss. He's dead, and... and I couldn't save him...\"\n\nHer whole body trembled, no matter how much she tried to stop it. \"He's not! He's not... not...\" She reached out, grabbed his ruined suit, and tried to shake him. She might as well have been trying to shake a mountain. \"I can't... I can't...\"\n\nHis hands found hers, and his gentle grip wrapped her wrists. \"He's gone... he's dead, Triss. He's dead, and... and... it's my fault.\"\n\nAgain, his words cut through her body like he wielded a sword. The hurt ran deep, into her guts, into her fucking bones, until it buried every inch of her. There was no escaping it. Even if she curled up and covered herself, protected herself, it wouldn't help. It was coming at her from the inside.\n\nShe forced herself to look at the small man sitting on the floor with her, and managed to find enough strength to glare. His fault. He said it. He took responsibility. It was his fault! His fault Superman was dead. His fault. His fault. His fault. She tried to shake him, tried to use her claws, tried to do something, but nothing worked. Her body was broken, strength gone. She was broken. \n\nThe rage began to fade.\n\n\"It's not,\" she managed to say, after a few weeping minutes of quiet. \"You know it's not. You damn well know it's not, Jack. That fucking idiot just couldn't help himself. And... and I knew it'd happen, too. I knew it'd happen. I fucking knew it'd happen eventually.\" And she hated herself for it, for letting her walls down, for letting him get close, closer than anyone ever. Stupid. How could she be so stupid, to fall in love with someone like that?\n\nJack let go of her wrists, and the two of them sat quiet, until they stopped trembling.\n\n\"Triss... Julias, he... he wanted me to tell you\u2014\"\n\n\"He was going to make some sort of grand, sweeping, romantic gesture, wasn't he?\"\n\nHe blinked at her. \"Yeah...\"\n\n\"I knew it. Fucker was... was smiling way too much, when he looked at me.\"\n\n\"He wanted to marry you. Said he was... going to use the last secret, some sort of bet, to tell you?\"\n\nShe choked as a sob and laugh fought to come out at the same time. \"Of course he fucking did. The stupid bastard. I\u2014\" She almost made a joke about her wearing a white dress or something, but the thought came with an image, of her and Julias, cuddling in bed, wedding dress hanging on the wall. They'd be together, forever.\n\nAnd now that was gone. Everything she loved about him, everything she loved, was gone.\n\nShe got up, and walked away. She half expected Jack to say something, but a quick glance over her shoulder showed he was forcing himself back up onto his feet, and watching her leave. He looked broken and ruined, and she knew she looked the same. But he got up, and was ready to push forward. Something came out of all this misery for him: capturing a key enemy figure, and saving his mom. No way the kid was going to let this break him totally, when his mother probably balanced on the edge of a psychological knife as was. There was a good side to Julias's death for him, something that made his sacrifice worth it.\n\nThere was nothing for her.\n\nOnce she was outside, Jennifer caught her eyes, and ran over to her.\n\n\"Triss?\"\n\nBeatrice managed to look her friend in the eyes, before her head fell, and she almost started wailing, screaming, crying, and destroying. But a quick glance around showed there were watching Kindred, young neonates, eyes wide and taking in both her disturbed expression, and Jennifer's rather revealing, mostly open suit jacket.\n\n\"He... he's... Julias, he's...\"\n\n\"Oh... oh god... I\u2014\"\n\n\"Not here. Not... not here.\" She started walking, and wrapped the two of them in a Cloak of Night. No interruptions, from anyone, would be tolerated. She needed to get out, away, needed to go where she could cry, and rage.\n\nJennifer managed a small squeak, before following after her.\n\n~~~~~~~~~~~~~~~~~~~~~~~\n\nThe catacombs beneath South Hill Cemetery. Three Kings Cemetery got all the attention, but South Hill was still a great place for any vampire who was looking to be sneaky. She'd spent many years in it, scaring off punks who wanted to fuck with it, break in and do graffiti and whatnot. The Prince built the city, and had made sure to slip in some classic cemeteries when she did, because hey, old vampires be old.\n\nTriss managed a small smile as she stepped down into her old hideout. Coffins on the walls in shelves cut out of the stone, everything covered in dust and dirt, and a few skulls and other bones sat out in artistic-yet-totally-not-manually-placed spots. For any Kindred who wanted to be alone, and reflect on their second life, their requiem, this was the perfect place.\n\n\"Triss,\" Jen said, following her down into the darkness, \"you... you're sure?\"\n\n\"Jack was sure. Saw it in his eyes. Kid was rocked, absolutely fucking wrecked. Julias is... is...\" As she tried to get the word out, she collapsed. Weight slammed down against her, drove her knees into the stone floor of the catacomb, and her claws raked against it. \"Oh god... no... I... I can't...\"\n\nJen came over to her and reached out, but Triss slapped her hand away. \"Triss, please, you\u2014\"\n\n\"He's dead, Jennifer! He's dead! The... the... the man... the only man I... He's fucking... fucking... d... d...\" In the depths of the Earth in the catacomb, in the darkness and stone, in the presence of dozens of corpses, she let go of what small shred of composure she'd managed to hold onto. Her wails came out, and she slammed her hands against the stone floor again, and again, and again.\n\nJennifer said nothing. Good. Much as Triss loved her, and even wanted her here, she didn't want to be soothed, didn't want to be placated, didn't want to have someone tell her it was going to be ok. It was not going to be ok. It was all ruined, all destroyed, gone, fucking gone.\n\nTriss got up, and walked up to one of the coffins. She grabbed it, ripped out the massive hunk of wood, and shattered it against a nearby wall. The corpse within was nothing but bone and a very old suit, and they shattered along with the shards of wood. Jen raised an arm to stop the flying splinters from hitting her, doing her best to block them in the dark, as Triss walked up to another coffin. Needed to do something, needed to destroy, to break, needed to let out some rage before she killed every kine within a mile.\n\nJen's eyes were wide, and her mouth parted. It was almost enough to give Triss pause, but she didn't. She marched over to another coffin, sank her claws into it, and whipped it out. A few hundred pounds of heavy, thick, solid wood, plus corpse, and she threw it across the stone room hard enough that it exploded as it collided with a wall. A sob worked up through her, forced her throat to clench tight, and made each heave her lungs forced get stuck. All she managed were growling sobs, grunts and grumbles mixing into her crying, as she let out another scream. She walked over to another coffin, and started to tear into it, claws slicing against the stone around it, scratching, but her claws couldn't break stone. The wood, on the other hand, was helpless, and she ripped the thick, heavy thing into bits in seconds.\n\nDead. He was dead. He'd never hold her again, never smile at her again, never fuck her, never kiss her, never pamper her, never tease her, never play with her, never beat her at poker, never cuddle with her, never\u2014\n\n\"This is where you first met Julias, right?\" Jen said, ready to duck if she needed to.\n\nTriss stopped her rampage long enough to look Jen's away. With a long, weary sigh, she set her hands down on the shelf edge, and her head dangled in front of her, between her shoulders.\n\n\"Not... not exactly, but it's where we first talked. He'd... he almost died in a fire, knocked into torpor by Rebecca. I saved him, brought him here, and fed him some criminal fuckwad.\" Chuckles managed to break through her quieting sobs. \"He... he showed... interest, in me. It was the first time I'd ever felt... wanted by someone, since my embrace.\"\n\n\"You know\u2014\"\n\n\"Yeah, I know, I really overestimated how badly Kindred reacted to Nosferatu. But he was still... he... it wasn't just about attraction. He... he... made me feel... different, and...\" She slowly turned around, and sat down, back to the wall behind her, knees up to her chest. \"He was so stupid. I called him a tragedy freak, someone who got off on the drama. He... called me out on my own bullshit, later, and... and...\"\n\nJen came over, and sat down next to her, an inch between them. She emulated her sitting position too, wrapping her arms around her legs. \"I can't believe he's gone.\"\n\nTriss draped an arm across her knees, and let her forehead rest on it, as her sobs became wails once again. It wasn't a sound she was familiar with. Crying, sure, what girl didn't cry every now and then? But this wailing sound, this banshee cry, she'd never made it before in her whole life. It filled the catacomb, echoed through it, and anyone in the cemetery was going to think some fucking ghost was haunting it.\n\n\"... Angela,\" she said, forcing some words out between her cries. If she'd been Blushing Life, tears and snot would have been dripping off her chin. \"Jack says she... attacked the hospital to get to his mom, so they... could manipulate him.\"\n\n\"Really?\"\n\n\"Yeah. Elen showed up... with S\u00e1ndor, using that portal we went through. Or another one like it, I guess.\"\n\n\"Oh... oh god. If we had\u2014\"\n\n\"We didn't know, and we... we didn't...\" Every part of her wanted to blame herself, and Jen, and Aaron and Othello and Natasha and Antoinette and Jacob and Garry and Daniel and Maria and Michael and who the fuck else, for her Superman's death. Above all, she wanted to blame Jack. But that was a road down stupidity lane, and she couldn't let herself go there, no matter how much she wanted to. \"Jack captured S\u00e1ndor.\"\n\n\"Jack did?\"\n\n\"Yeah, he... he did... somehow.\" Her crying sobs started to settle, and with a few more minutes, she got herself under control. Quiet whimpers refused to die, but for now, that was fine. \"I\u2014\"\n\n\"Now, why on Earth, would a pretty lady like yourself, be makin' such a fuss?\" the darkness said in a Southern drawl.\n\n \n"
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "slow",
        "vampire",
        "violence",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-06-ch-15"
}