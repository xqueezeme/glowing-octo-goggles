{
    "title": "The Liberation of Amy",
    "pages": [
        "This time it was her. I had been called in twice before to see if the poor waif in the morgue was my errant wife and each time the young woman was someone else's tragedy. They were each almost the same as my Sara: blond hair, blue eyes, short at 5' 2\", petite build, but larger boobs, pretty. It is surprising how similar they look when they are like this, after a lengthy time on the streets and the ravages of drugs. One was almost identical but upon a second look and the fact she didn't have the butterfly birthmark under her right arm as my Sara, I had to shake my head 'no'; but... this time it was her.\n\nI had been prepared for this moment, or thought I was. I thought I would cry, I thought I would mourn, but all I felt at this moment was a profound sadness. The loss of what could have been before mental illness and heroin took their toll. Who knew which came first but each ravaged this woman's tortured life, beyond my ability to help or even understand. \n\nWe had met in college and she was a beautiful vivacious woman who, I learned after our marriage, had a tortured past in the foster care system. People didn't talk as much of such things in those days but she was raped and sodomized in more than one of the homes she was assigned from the age of four. In others she received enough nurturing to actually grow up fairly normal and so when I met her, I fell hopelessly in love and we married as soon as I graduated from college.\n\nWe had Gracie 10 months later and 2 years after that we had Gordon Jr. Both beautiful, tiny replicas of their parents, lovely and precious. Sara suffered Postpartum Depression after Gordon was born and that seemed to degenerate into what I later learned was schizophrenia, The two were actually not connected but I didn't know that at the time. The drugs available for schizophrenia helped but they left her in a daze much of the time. Unknown to me, she sought solace in pills and before too long was shooting heroin. \n\nOne day, I came home from work at the University to babies messy and crying and a rapidly scrawled note in an erratic hand: \"I can't do this,\" on the kitchen counter, no signature, no explanation, nothing. I discovered that she had not been taking her medications for a couple of weeks. I blamed myself for being too busy to notice her agony.\n\nI had a few friends on the police force who saw her from time to time on the streets. They kept me more or less informed about where she was and what she was doing but they were always vague and looked nervous about telling me anything at all. I sensed it was much worse than what they conveyed. Now, a little more than a year after she left us she was here, at the morgue, a thin and worn wraith that was once my lovely wife. \n\nShe was still beautiful, or rather her basic beauty still showed. She was rough looking, too many months on the streets, too many needles in her arm. I didn't have to imagine too much to figure how she paid for her drug habit. She must have tried to keep her looks so she could preserve her only source income. \n\nSo after I identified her as Sara Grayson, my missing wife, I signed the necessary papers and arranged for a small ceremony. I knew almost no one would be there, she had no known family but me and the kids. I never knew her to have a friend, or even co-workers at her several jobs before our marriage. After we became a family and bought a house she wanted to stay at home and raise the babies, something she was determined to do, probably out of her own deprivations as a child. \n\n\"No child of mine will be raised by a babysitter!\" She proclaimed emphatically! So she had no one at the memorial service except me, and the kids and my sister Jess.\n\nAfter the funeral, I went home and Jess took the children to stay with her a week or so. I didn't let them see their Mom. I couldn't let them see the specter that she had become. They were 'too young to remember' people said, but I feared maybe not, I had vague glimpses of memories that I was told happened when I was asyoung as two, so you never know. I didn't know how I would handle the story of their Mom when they began to ask in a few years, it was too much to think on right then. Jessica had been watching the kids for me but she had her own life to live and a new job starting the next week. So at that moment I didn't know how I was going to raise two kids under 3 years of age and work at the same time. I sat at the kitchen table with my head in my hands too tired to think, too sad to cry, too spent to do anything but worry. \n\nMy sister Jessica and I were very close growing up. Our birth dates are in the same year., not particularly rare but pretty unusual just the same. Jessica was a mere 11 months older than I. She was born in January on the 15th day of 1960 and I was born exactly 11 months later on the 15th of December. \n\nIn those days there were only three ways to prevent pregnancy. One was using a condom, or 'rubber' in the parlance of the day, but they had a bad habit of breaking as one did when Jessica was conceived a mere two weeks after Dad and Mom married. The second was the rhythm method which almost every set of parents of the day had tried...yes the joke is true. I was conceived under that method. There was also a vasectomy which at the time neither Mom or Dad had previously considered because of their youth and later on Dad still refused it out of hand. \n\nTotal abstinence was the only foolproof method, but Dad was of the old school, he had his rights as a husband and a man: Mom was his wife and had no say and that was that! That is until she found herself pregnant with me within weeks of delivering Jessica. After that she insisted he either have a vasectomy or her legs would be permanently closed. This became the greatest issue between them. Dad refused and she held to her pledge. Dad did the only thing he could, he had affairs. Mom knew and figured that as long as he brought home the paycheck and did his duties as a father she was willing to loan out the sexual duties to any floozie who would keep him busy. As far as I know they never resolved the issue until the day they died. \n\nSome years later when Jess and I were away at college there was a power outage back home that left the house in sub-freezing temperatures, Dad tried to heat the house with a kerosine heater and he and Mom both succumbed to carbon monoxide poisoning. So by age 19 we were orphans.\n\nJess and I were sharing an apartment at University when we got the news. We were devastated, of course, We hardly knew our Dad, he had always been distant, but Mom was our anchor. She kept us going in the right direction, made sure we did our homework and that we kept to our responsibilities. She made sure our clothes were clean and were reasonably fashionable. She kept us grounded. We both were at a loss when she was gone.\n\nThe day we were informed of Mom's and Dad's death was awful. The planning of the funerals was worse, the funeral and wake the worst, until everyone went home and then it was just Jess and I in the house. That was what did us in. We both collapsed into each other's arms and cried for what seemed hours. We cried until we ran out of tears. \n\nWe continued our college, but it was an effort to keep going. We found ourselves clinging to one another too much, jealous of any intrusion into our much abbreviated family. Jess was the first to make the break declaring she loved me but she had to get out in the world. She was right of course, soon we each were dating and exploring other relationships. We had to, out of necessity, loosen our emotional hold on each other and build our own lives, probably one of the hardest things I've ever had to do.\n\nIt was about this time that I met Sara James and Jess met Steve Williams, her husband. We continued to be close but not like before. \n\nSteve and Jess were very much in love, both anxious to become parents. After two years and no babies were forthcoming they began to seek answers. It turned out that Jess had a congenital condition in which her Fallopian tubes were deformed and unable to function. Jess would never bear children. Steve was disappointed, but promised they would adopt instead. \n\nJess was depressed, she so wanted to bear a child of her own and resisted the idea of adoption but eventually she agreed. In the meantime, unfortunately, Steve found a younger woman who got pregnant every time she dropped her knickers and Steve divorced Jess with little thought to the matter. Jess was depressed even more and almost dropped out of my life completely. \n\nI was having my own difficulties about that time. Sara was beginning to hear voices and doing bazaar things, I even feared for the safety of the children a little, though there never was an incident that alarmed me too much. Still, she became more depressed after Gordon Jr, was born and disappeared a few days over the next several months. She always came home again, asking forgiveness and promised to get on her medications and stay there, only to disappear again. Finally as I mentioned before, she just left and the next time I saw her was 7 days ago at the morgue. \n\nNow I sat at the table in my modest home. I was already used to Sara's absence from this place but the knowledge that there was no hope at all of her return seemed to make the place emptier than before. I tried to make excuses for her, but the pain of her betrayals and deceptions were too great at the moment. I wandered through the house trying to remember her here but mostly failed. I came to the big mirror behind the couch and did remember her buying it and helping me hang it. I think we were really happy that day. But now I was startled at the man looking back at me in that big mirror and hardly recognized him. He stood 5' 11', like myself, average build, light brown hair that I noticed was tinged with grey at the temples. I wondered when that happened? The man in the mirror looked sad, profoundly sad. His features drooped to a near constant frown...I needed to change that for the sake of my kids. I tell myself that but it is hard when your heart isn't into it. I continued my impromptu tour about the house looking at all the other decorations and furnishings that she had placed when we moved in here that now seemed to mock the happiness that so alluded her. I decided to redecorate as soon as I had caught my breath but I wouldn't throw them away, instead I would box them up and put them in the attic, for now anyway. Maybe someday, I would understand better and be able to look at them and remember the good I saw in her albeit so briefly.\n\nAs I mused on these things, the doorbell rang. I glanced at the clock on the wall. It was 7 pm, a little late for anyone but a family member so I answered the door to see what Jess needed, She probably needed some diapers for Gordy so I grabbed a few as I headed to the front door. \n\nWhen I opened the door, I almost had a heart attack! Standing there was Sara, or so was my first thought. I regained my composure enough to look again, the woman standing there looked amazingly like Sara, but as Sara would look if she was in her thirties instead of 23.\n\nI was speechless and must have been standing there with my mouth agape.\n\n\"I'm so sorry to startle you like this, I didn't know what else to do, may I come in and talk to you, Gordon?\" said the woman. She even sounded like Sara. All I could do was motion with my hand that was full of diapers for her to come in. I had no voice at that moment.\n\nShe smiled a little and said, \"Oh my, I have shaken you up a bit haven't I?\"\n\n\"Yes,\" was all I managed to utter.\n\n\"May I take off my jacket?\" She asked as she started to remove the blue denim garment.\n\n\"Yes, of course, where are my manners.\"\n\n\"Don't be too hard on yourself, you didn't expect to see me.\"\n\n\"That is certainly an understatement!\"\n\n\"You didn't even know about me, did you?\"\n\n\"No, I can unequivocally say I didn't know about you. Are you Sara's sister?\"\n\n\"No, My name is Amy James, I'm actually Sara's mother.\"\n\n\"Muh...mother?\" That bombshell nearly knocked me off my feet. I just managed to guide her into the kitchen and pulled out a chair for her.\n\n\"Ah...she DIDN\"T tell you about me. I'm not surprised.\"\n\nSurprised was the word that described everything that had happened in the last five minutes! Here sitting in my kitchen was a person I didn't even know existed and she is my mother-in-law, evidently! I was stunned and just sat there for a minute when I finally remembered my manners as a host.\n\n\"Can I get you something? Coffee, a beer, wine?\"\n\n\"I'll share a beer with you, I can't usually drink a whole bottle or, I should say, I SHOULDN'T drink a whole bottle,\" She declared with a giggle, it was Sara's infectious little laugh that I remembered so well, one of the good memories.\n\nI handed her a beer and opened one for myself.\n\n\"I owe you an explanation,\" she said after she took a small sip from the bottle. \"I had Sara when I was fourteen years old. I didn't sleep around, oh no, I was a good girl! My step father came into my room one night and...\" her voice caught for a moment, the memory still hard for her these years later \"and raped me. He called it 'making love', HA! What a joke! He didn't know the first thing about love and I think he knew even less about sex!\" She mocked wryly. \"Anyway he came in many nights after that and there was nothing I could do to stop him. I told Mom and she didn't believe me, I told my Pastor and my teachers, none believed me. My step father was an important man, why would he do such a terrible thing!\"\n\nI just listened. I got the distinct feeling that very few people had ever listened to her story. She told it with less bitterness than I could have mustered had it happened to me but still she had a deep hurt there that no one had tried to sooth. \n\n\"It took me years of therapy and tears to function again normally as a woman. It was during that time I volunteered at the Hospital Day Care and discovered I have a talent for dealing with small children.\"\n\nShe looked up at me and took a deep swig of her beer, \"I'm so sorry to unload that on you, you didn't need to hear that right now.\"\n\nI really didn't mind, maybe her pain made mine seem a little less monolithic.\n\n\"Anyway,\" she continued, \"they wouldn't let me keep Sara. I cried and cried but they insisted I give her up. She ended up in an orphanage. When that closed down she became a foster child and I had trouble keeping track of her. I met her once or twice and tried to tell her how sorry I was but she hated me and told me she never wanted to see me again.\" \n\n\"I tried to find her again and had just got a line on her when she disappeared from your house. I did find her on the street one more time but she saw me coming and went the other way and screamed at me to leave her alone. I think my presence added to her delusions. So I decided to stay away and just keep track as best I could. Then I heard of her death. I was there at the cemetery but you didn't see me. I stayed back a ways. You gave her a very nice ceremony, Gordon, I know it was hard for you.\"\n\n\"Yes, it was,\" was all I could say. I did vaguely remember seeing a slight figure behind a family mausoleum and thinking it strange. \n\nShe sat for a long moment and fidgeted with her necklace. I hadn't really looked at her closely until just then. She was really quite lovely, maybe even more beautiful that Sara. I figured for a moment: if she was fourteen when Sara was born that would make her 37 years old now only 7 or 8 years older than I. She looked much younger than 37. I knew women my age who looked older than her. She was a little shorter than Sara, maybe 5' 1\" or 2 and quite petite. She had honey blond hair like Sara but she wore her's a little shorter to just at her shoulder with gentle waves and curls that framed her oval face. She had pleasant smile lines at the corner of each of her very round eyes. Her lashes must have been naturally long since she wore minimal makeup, if any at all. Her eyes were a deep blue and her eyebrows were neatly shaped. Her lips were pink and full, identical to Sara's and she had straight white teeth that shown whenever she smiled. Her smile reminded him of Sara's and that made her feel familiar. \n\nHer shoulders were exposed by her sleeveless blouse of a pretty floral print of pink and red roses on a background of white daisies. She wore the blouse with the top two buttons undone showing a modest amount of her cleavage. Her breasts caused the top button that was fastened to pull tight across her chest. She had smaller breasts than Sara but not by much. Sara had been 5' 2\" with 34C bra size, I knew this because I had looked in her underwear drawer for her sizes to buy her much needed bras and panties right after Gordy was born when she was too depressed to shop for herself. Amy's legs were quite long for such a short woman and gave her an elegant, graceful look. She had nice legs, their shape plainly visible from the tight denim dungarees she wore. She wasn't tall enough to be a model but she had the right proportions with all the curves in the right places.\n\nI realized I had been staring at her when she shifted uncomfortably in her chair. I looked up at her to see she was looking intently at me with a small grin on her face. She had to know I was checking her out. \n\nI blushed and cleared my throat, \"So, why have you come here today?\" It sounded rude and defensive and I regretted how I said it immediately but she didn't give any indication she was offended.\n\n\"I wanted to meet you and was hoping I could meet my grandkids and maybe offer to help you in some way.\"\n\n\"The kids are at my sister's for a day or two, while I get arrangements done, you know Social Security, insurance, death certificates and so on.\"\n\n\"Oh,\" she seemed disappointed. \"Can I meet them soon?\" She looked so lost I felt a surge of compassion for her...she was my mother-in-Law after all, my children's grandmother.\n\n\"I will pick them up tomorrow evening at my sister's, You can come by about 6:30 and see them and maybe help me put them to bed, if you like?\"\n\n\"Oh that would be wonderful.\" \n\n\"What kind of help did you have in mind?\"\n\n\"Help?\"\n\n\"Yes, you offered to help in some way, what did you have in mind?\"\n\n\"Well, I don't want to be presumptuous, but I have made my living as a nanny the last ten years or so. It occurs to me you may be in need of a nanny right now.\"\n\n\"I could definitely use one, the only problem is I can't afford a nanny.\"\n\n\"It's not a problem, I will work for room and board.\"\n\n\"You want to stay here?\"\n\n\"I've been living in a motel room that I rent by the week and the week ends tomorrow so I could use some accommodations if you have the space?\"\n\n\"I have an extra room right next to the kid's that just needs some sheets, and a pillow and you can be set, Do you want to see it?\n\n\"Sure.\" She said and scooted off the chair, she wasn't much taller than when she had been sitting. I touched her shoulder to guide her toward the hallway and goose bumps appeared on her arms.\n\n\"Oh sorry,\" I said, fearing the touch was too forward.\n\n\"For what?' She asked innocently, looking up at me with her beautiful blue and round eyes. The look was stunning, giving an impression of innocence and maybe even lust had the circumstances been different. I really doubt she realized how she had reacted to my touch.\n\n\"Oh nothing. Right this way,\" I motioned with my other hand as I kept my hand on the back of her shoulder. It felt nice to touch an adult who was soft and warm and who's voice was higher than my own.\n\nI opened the door for her and let her enter the room as I held onto the door knob. She passed through and her shoulder brushed gently against my arm, probably by accident. She looked around and noticed the room had its own bathroom or rather it shared the bathroom with the kid's room. ",
        "\"Nice,\" she nodded her head and smiled \"this will do very nicely! And that's the kids room there?\" She passed through the bathroom and walked into the kids room. She looked about, then picked up a picture of Sara from happier days. After a long moment with a tear forming in the corners of those round eyes she turned and asked \"I would like a copy of this photo if you are willing.\" Then she turned abruptly and went into the hallway. She stopped in front of my room. The door was wide open. I was embarrassed knowing it was a total wreck because of the last few days. She smiled wryly, \"And your room?\" she said as more of a statement than a question.\n\n\"Yes,\" I affirmed.\n\n\"Gordon, you have done real well for the kids. I can help you, I think. Let me help you. I can cook, do light housework, and keep the kids clean and well dressed, I hope I can earn your trust enough to be able to buy what we need for groceries and supplies. I promise I won't spend more than the budget we agree upon and I won't try to take over your authority. I just want to be a part of the family. I want to know my grandchildren.\" Her plea was of a family member, and not that of a hopeful prospective employee.\n\n\"Amy, I would love to have you here, I do need help right now and it seems you are the answer to my prayers. I agree you have a right to know your grandchildren. But please understand, I don't know you at all! I think I need to be a little careful before I hand over my children to anyone before I've checked them out. Do you have identification, references and recommendations? I feel terrible for asking, but these are my kids!\"\n\n\"Yes, I understand. I do have references and I will bring them to you tomorrow, can I bring my stuff and move in tomorrow afternoon? \n\n\"Why don't we meet for lunch and I'll look at your references and then decide. Would that be acceptable?\"\n\n\"Yes, I guess it will have to be. I really don't blame you, I would be careful, too. But you'll see, I will be the best thing that happens to your life!\"\n\nI showed Amy to the door and we agreed to meet at Gerome's for lunch the next day. I opened the door and she stepped forward and kissed me on the cheek and then hugged me lightly. She smelled of a most captivating perfume and her lips were soft and warm on my check. I couldn't help but blush. She stepped out into the night. I noticed how nice her ass fit in her jeans and how it wiggled as she gracefully walked away. Sara's mom was very intriguing, it was a little strange that Sara lied to me about her family, but again I have been forced over the last year or so to admit that Sara had not been what she seemed to be.\n\n*********\n\nThe next day I arrived at Gerome's at our appointed time and Amy was already there, waiting in the foyer. \n\n\"Sorry I'm late,\" I said, though I knew I really wasn't.\n\n\"No, You aren't late, I'm early. I am just so excited to show you my references and qualifications.\"\n\nShe was excited, too. She could barely contain her exuberance. She reminded me of a school girl anxious to show her artwork. It was quite cute and I had to chuckle to myself. I saw her now in broad daylight and she was even more beautiful than she had been last night. She smiled as she hugged a large manila envelope to her chest, \n\n\"I think you will be quite impressed!\" she chimed as we took a seat in a booth.\n\n\"I am already and I haven't even seen them yet.\" I smiled at her as she pulled a large bundle of papers from the envelope. She had quite a few references from various families and childcare institutions where she had worked.\n\n\"This one I worked as a nanny for about 6 years, I cried when they no longer needed me, I loved their little girl, Claire like my own.\" She was still a moment as she remembered her former charge or perhaps she remembered Sara and what could have been. \"This one was for two years. They moved to Florida. The rest were shorter jobs for various reasons. In between jobs I searched for Sara.\"\n\nI looked over the recommendations that were all glowing evaluations of Amy's skills as a nanny. Everyone of them listed first her great love for their children. She was compared by more than one of her employers as a virtual 'Mary Poppins'. She was right, I was really impressed.\n\n\"So?\" She looked at me expectantly with a large grin on her lovely face. Her large round eyes were framed by amazingly long eyelashes which appeared to be completely natural. She wore little if any makeup except for a pale lipstick that accentuated her sensuous lips. I looked at her intently as she pulled more and more references from her large envelope without looking at me but when she finally looked up at me I had to turn my eyes away, I didn't want her to see that in spite of myself, I was quite attracted to her. Was it because of her resemblance to Sara or was it that she was so beautiful and animated in her own right? It was very confusing.\n\n\"I don't see anything here that would make me turn you away. So, I would be glad to have you move into my house and care for my children...er, and your grandchildren. \n\nAmy clapped her hands several times in excitement. \"I'm so happy! When can I start?\"\n\n\"As I mentioned yesterday, I will be picking up Gracie and Gordon Jr. (I call him Gordy) from my sister's home in a few hours. In the meantime you can get your things and move into your room. I'll give you the extra key that Sar...\". The actual thinking of Sara in the past tense caught me off guard and I had a momentary stabbing of the pain of loss.\n\nAmy laid her hand on my arm and gave it a light squeeze and, you know, I felt better!\n\nI looked up at her and she smiled at me sympathetically. Something about her smile and demeanor reassured me. I guess because her life contained so much pain too, it showed through as genuine empathy. I remembered a phrase I happened to read as I glanced through her recommendations, \"She has the ability to sooth a child or even a parent who are distraught and suffering.``. I could definitely feel that quality as she looked deeply into my own pain, it was her pain too, the loss of a daughter she never knew, who rejected her, and died before she could make amends.\n\n\"I have everything I own with me,\" Amy smiled. She had a rather large purse and a large duffle bag nearby that I had barely noticed, they reminded me of those owned by Mary Poppins.\n\n\"Oh..., well, do you need to go anywhere or check out or anything?\n\n\"No, I'm ready to start now. Take me to our home and I'll move in.\" She smiled with a slight emphasis on the word 'our'.\n\nI paid our bill and headed to my car. \"I don't need to pick up the kids until this evening so you have plenty of time to get settled. Do we need to pick up anything for you: toiletries, women's things, personal items, anything?\n\n\"No I am good for the next few days at least. We will need to talk more about what is expected of me, my duties and responsibilities.\"\n\nWe arrived at my car and I opened the door for her. While she settled in, I put her suitcase in the back of my SUV and sat behind the steering wheel.\n\n\"You can drive, I assume?\"\n\n\"Yes, I have a current license and everything\" she laughed, \"it was in my portfolio, didn't you read it?\"\n\nShe was toying with me and I laughed, it was the first time I had laughed since the morgue.\n\n\"I must have missed that amongst all the glowing reports of your miraculous abilities, Mary Poppins.\" It was her turn to laugh and I found her merriment infectious. We were off to a good start!\n\n\"OK,\" she said, \"Normally I don't do heavy housework, and redecorating stuff like painting and hanging pictures and things like that, but since I am actually a part of the family in a way, I kind of think my position in the family will need to be more flexible, do you mind that?\"\n\n\"No, not at all. You are a part of the family, so, do you mind cooking and cleaning?\"\n\n\"Well...\" \n\nI had to glance at her to see that she was smiling. \"When you get a taste of my cooking you will jump at the chance.\" I declared.\n\n\"Oh, it can't be that bad!\"\n\n\"The neighborhood dogs won't eat it, they run away when I come out the back door with a skillet or plate.\" She started laughing...\"No kidding, It is really that bad!\"\n\n\"And you have been feeding my grandchildren this swill?\" She was still laughing.\n\n\"It must be nutritious, they have very little experience for comparison so thus far they haven't complained. Then again, I'm not certain about that, they both seem to fuss a lot at dinner time.\" She laughed some more, I was on a roll.\n\n\"Stop.\" she said playfully slapping my arm, \"My sides are starting to ache.\"\n\nI looked at her and liked her very much, she was going to fit in well, I decided.\n\n\"On a more serious note,\" I began, \"Besides me the kids have only had my sister as a caretaker, they may be a little unsettled at first.\"\n\n\"I am used to coming into families that are in a difficult situation, it is part of my training and experience, I think we will get along just fine.\"\n\n\"Well, here we are,\" I announced as I pulled into my short driveway. I turned off the engine and ran around to open her door. I noticed she started to get out on her own but as I came around she stopped and waited. \n\n\"I can get out of the car myself,\" she chided me playfully, \"we aren't on a date.\"\n\nI suddenly felt uncomfortable, like I had crossed a line maybe. She saw the dismay on my face and immediately added. \"I'm sorry, it's okay, I was teasing you, Gordon. You are a real gentleman, there are not many around these days.\"\n\nWe came to the door and I used Sara's key to open the door then handed it to Amy. She looked at it almost as if a relic, a memory of her daughter who led an even more tortured life than she. I could see it made her sad. I opened the door and she stepped into the house and my life would be forever changed.\n\n*********\n\nAmy spent most of the afternoon in her room, moving furniture and settling in. I helped her reposition the bed so she could see out the window, and that move required the shifting of a dresser and vanity.\n\n\"I like to look at the stars as I go to sleep,\" she explained. I didn't mind, it would be her room and she had a right to have it her way, besides, I like to look at the night sky, too.\n\n\"If you need anything put it on a list and we'll buy it as we can afford it.\"\n\n\"I am really good with household finances,\" Amy volunteered, \"When you know that you can trust me, I'll offer my services.\"\n\nI didn't answer one way or the other, I did need to develop a level of trust before taking that step but just the same, that was music to my ears. If there is any job I hate it's the balancing of checkbooks and keeping track of finances. Sara had been good at it too, until she started thinking that the bank was embezzling money from us, then she accused me of spending huge sums of money on hookers. That was when I insisted she start seeking treatment. It was the beginning of the end for us..., for her as it turned out.\n\nAbout 3:30 Amy came into the kitchen where I was finishing up cleaning counters and submitting high chairs to their weekly thorough cleaning and sterilization.\n\n\"Can I help?\" Amy asked.\n\n\"Actually, I'm about done with this. Why don't you get us a beer out of the fridge and we'll take a break for a few minutes.\n\nShe brought me a beer and grabbed a diet cola for herself, I remembered she wasn't much of a beer drinker.\n\n\"I think there is some wine in there, too,\" I added \n\n\"No, this is fine. I'd rather drink a cola than a beer any day.\"\n\nWe sat for a minute without speaking. It felt good to have another adult here even if for nothing else than for the company. I looked at her at last and she was looking intently at me, I didn't know for how long.\n\n\"I can see why Sara was attracted to you,' she said candidly, \"Not only are you a handsome man but you have a stillness about you, a peace that fills the room about you.\"\n\nI was a bit taken aback, I had never heard anyone say these things about me, in my hearing anyway, but I hoped she was accurate. I did feel at peace right then.\n\n\"Thank you, I hope that is a good thing.\"\n\n\"Oh yes! It is a required quality for a Nanny and a very good quality for a parent. I've had parents who were just the opposite and their kids are holy terrors to manage.\"\n\n\"My kids are really good kids,\" I said confidently.\n\n\"I would be surprised if they weren't,\" Amy was smiling at me and it made me feel good that she approved of me. \n\nI had to admit I was also a little pleased to hear her say she thought I was handsome. You kind of lose track of being just a man when you are a full time parent to two small, demanding children, no matter how wonderful they are and how much you love them.\n\n\"Gordon?\" She looked at me waiting for a response. I looked at her and wordlessly let her know she had my full attention, \"May I came with you to pick up the children, I am so anxious to meet them!\"\n\nI thought for a moment but saw no reason to deny her request, \"Sure! I don't see why not.\" The joy that spread across her face was worth the affirmative answer.\n\nThen she suddenly looked fearful, \"What if they don't like me?\" She fretted.\n\n\"They are three and one, they may be a little fearful at first but they have always liked the people they meet. Gracie is a little too friendly sometimes, she seems to have no fear. Gordy just goes along.\n\n\"When do we go?\" She asked next. \n\nI looked at the wall clock as I spoke, \"I am supposed to pick them up at 5:00 pm and it is 4:00 now so we'll leave in about 40 minutes, Jessica lives not far from here.\"\n\n\"Jessica is your sister, right?\" She asked.\n\n\"Yes, she has been very helpful. I couldn't have made it without her.\"\n\n\"Does she know about me yet?\"\n\nI suddenly was a bit fearful because I had not let Jess know that I had made arrangements now for full time care of the children. Jess had stepped up big time for me over the last two years. She was my child care provider whenever I worked and she was my shoulder to cry on and my prop to hold me up when I was too weak to stand on my own. I owed it to her to tell her what was happening.\n\n\"Amy excuse me I need to call her and fill her in on the last couple of days. I'm afraid I have been very negligent about keeping her informed. I hope she isn't upset.\" \n\nI left the room, went out into the back yard and took a seat on the patio to call Jess.\n\n\"Hello, Gordon. The kids are doing fine!\" Jess was always like that.\n\n\"Jess, I have some pretty big news, I hope you will be pleased.\"\n\n\"What?\" I could hear apprehension in her voice.\n\n\"I have a live-in nanny for the kids!\" I tried to make it sound like the great news it really was.\n\n\"Oh Gordy! Did you go out and meet some young girl who was willing to live with you?\" She chided me. She only called me Gordy when she wanted to mock me. I think she thought maybe I was joking or had gotten 'lucky' over the weekend. She had been pressuring me to try to get out and socialize. \"You were supposed to just have a little fling, work off some steam, not get serious and bring home a woman to keep track of your kids!\" I let her finish her japes.\n\n\"No, really. I'll tell you all about it later when I come to get the kids. I know you're going to like her. I do want you to meet her.\" Jess was quiet for a long moment. \n\n\"Jess? Are you still there?\"\n\n\"Yes...you're serious.\"\n\n\"Yes, I'll tell you all about it later. I just wanted to give you a heads up. I know you have put your own business on hold while you took care of Gracie and Gordy. I want you to know I couldn't have made it without you.\"\n\nThen the questions began: \"Who is this woman? How did you meet her? Why didn't you tell me you were thinking about getting a Nanny. Shit Gordon, this isn't like you to go off half ass like this without talking with me first. What the hell?\"\n\n\"I'll tell you later, Jess. I'll be over a little early so we can talk a bit. You'll see when we get there. Bye\"\n\n\"Don't you hang up on me, dammit Gordon I have about two dozen goddamn questions, Don't forget, I love these kids too, just like they are my own...\"\n\n\"I'll tell you all about it when I get there, Bye,\" then I hung up. It was the only way. I wanted to tell her about Amy face to face.\n\nAmy became like a little child, excited for a new adventure. \"I want to fix foods they like for my first meal with them, So what can I fix?\" She asked.\n\n\"Both of them really like macaroni cheese and hotdogs. The only vegetable they will eat is cream peas. Good luck with anything else that is green.\"\n\nAs I finished cleaning the high chairs, tables and counter. Amy familiarized herself with the kitchen and pantry. She turned and looked at me with some skepticism.\n\n\"What? Are you looking for something?\"\n\n\"There is a lot of processed foods here, I hope you will let me shop for healthier foods for the children... and for you\" She smiled at me looking for my reaction.\n\n\"I needed to get by on what was easy,\" I said a little defensively. To be honest Jess had criticized my choice of foods as well.\n\n\"Well, now that I'm here, you don't have to look for 'easy', we'll look at healthy instead. I promise you will like what I fix.\"\n\n\"Not having to fix it myself is a big plus right off.\" I said.\n\nAmy soon had the menu planned and the pots and pans she needed on the stove top, the plates and silverware out on the counter, and Gordy's bottle ready to be filled. I was surprised how quickly she adapted to my kitchen.\n\nShe was a bundle of energy, which I attributed to her excitement over the impending introduction to her grandchildren. Her energy was infectious and for the first time since Gordy was born, I couldn't wait to pick up my children too. Don't get me wrong, I love them more than life itself but the weight of single parenthood, especially in the circumstance of abandonment due to a partner's drug addiction and the guilt and self abasement that goes with it, was so heavy that any time without the responsibility was like a vacation. But that weight was lifting now and the freedom I felt was lifting my spirits far above what I thought possible. I hadn't realized how heavy it had been until now.\n\n\"Hell, we're all prepared here, lets go get the children!\" I suggested.\n\nAmy jumped up and clapped her hands together in glee, then jumped into my arms and hugged me. Her height was such that she was standing on her tip toes to reach around my neck with her arms. I could have easily lifted her off the ground. The hug didn't last long but it was long enough I felt the heat from her body and the shape of her breasts against my chest. Her softness against me made me feel safe, and to my chagrin, I became aroused.\n\nWhen she let go of me and settled to the ground she bounded toward the door, seemingly unaware of my reaction to the close contact with her. \"This is not good.\" I thought to myself, \"I can't start lusting after my mother in-law even one who looks and feels as good as Amy.\" I dismissed those feelings out of hand and followed her toward the car. \"I will ignore that hug, it never happened. My feelings will go away, They have to!\" I told myself. \n\nWe drove the short distance to Jessica's. When we pulled in the drive, Ray Davis, Jess's new boyfriend was waiting on the front steps. he stood and approached us as we got out of the car. \n\n\"Gordon, you better go in alone first, Jess is pretty upset.\" He warned, \"Hello. I'm Jess's boyfriend and you are...\n\n\"Ray, this is Amy, my new nanny and more significantly, the children's grandmother.\"\n\nAmy smiled and extended her hand in greeting. Ray smiled and shook her hand. \"I'm sure it is nothing personal toward you, Amy, I just think Gordon here made an error in judgement in the way he handled this. You better stay out here with me, there are likely to be fireworks in there.\" He was looking at Amy but he was talking to me. I didn't know him well, as yet, but I was impressed with his reception of Amy and how he warned me of the impending battle. I hadn't figured that Jess would be upset...but I was wrong and I was really wrong!",
        "I entered the house as quietly as I could, but encountered Jessica in the entrance to the living room. I knew her better than anyone else on earth and I could tell right away I was in real trouble.\n\n\"What in the hell, is going on with this Nanny business without asking me or even telling me what you are up to?\"\n\nI didn't say anything yet, I knew better. I learned as a child that I had to let her vent awhile before I spoke so I just put on my contrite look and took it like a man.\n\n\"...and how in the hell did you find a nanny who would work for room and board. What kind of nanny would work for just room and board instead of a wages have you gone completely out of your mind. Did you get references and recommendations?\"\n\n\"Yes, she showed me a whole big envelope full of references and stuff.\"\n\n\" 'SHE showed you?' Oh God, Gordon.those could be fake. Did you at least go through some agency?\"\n\nI cringed, \"No, she came to me.\"\n\n\"SHE CAME TO YOU? Oh for crying out loud, Gordon, you've been caught up in some kind of scam. She found your name in the obituary and is after your money.\n\n\"I don't have any money.\"\n\n\"Well your house then\"\n\n\"All they would get is a mortgage that is underwater!\"\n\n\"Well, she's after something! Who is this bimbo anyway? Are you sleeping with her?\"\n\n\"Wait a minute,\" I had to answer her now, \"that isn't right, you haven't even met her. She isn't a bimbo!\"\n\n\"I don't think I really want to meet her but if she is going to be in contact with my kids...\"\n\n\"MY kids,\" I interrupted\n\nJess glowered at me, \"...YOUR kids, then I better meet the gold digging bitch!\n\n\"Quiet she'll hear you\" I warned speaking in a half whisper.\n\n\"SHE'S HERE?\" Screamed Jessica. She was really on a roll now. \"Oh my God, Gordon have you lost your mind? What are you thinking? We were doing just fine with the kids, what the hell are you messing things up for?\"\n\nFinally I'd had it. I was getting mad and would soon say things that I didn't mean and hurt the only member left of my immediate family.\n\n\"LOOK! It is ultimately my responsibility not yours!\" I knew that would hurt her feelings. Jess had been great with the kids since Sara had abandoned them and felt like they were hers as well, but I had to set her in her place! \"I know you have done a great job helping me but it is time you got on with your life with Ray, he seems like a good man! Amy has tons of references all of which says she's practically a goddam 'Mary Poppins'. 'We are doing just fine,' is that what you said? Jessica, I have been like a raw piece of meat on a hook for almost two years now and I finally have a good break and feel some peace after failing Sara so badly...\" and that is where I lost it. I broke down and started crying. I hadn't cried since Mom had died and now the entire misery of the last few years crashed on my head and I couldn't hold it together any longer. \n\nJessica stood gaping at me for a minute longer then her expression softened and soon tears filled her eyes and she rushed to hold me. I cried a good five minutes, the strain and tension from the last months rending my soul and pouring out into the room.\n\n\"Oh Gordy, I'm so sorry. I know it has been tough on you, I have enjoyed being a mommy figure a little too much I guess.\"\n\nAfter I had stopped crying, Jess continued to hold me a while longer rubbing my back and gently swaying back and forth.\n\n\"I'm okay now.\" I said finally.\n\n\"So she is right outside, right now?\"\n\n\"Yes, Ray is keeping her company. Are the kids up from nap yet?\"\n\n\"I think Grace may be awake but Gordy is asleep or was until all the racket.\" She looked sheepishly at me and smiled a little,\n\n\"Let me introduce Amy to you...Ray, you can bring Amy in now.\" I called out.\n\nThe door opened and Amy stepped in. Not until that moment did I consider the effect that she may have on Jess. I had almost forgotten how much she looked like Sara.\n\n\"OH, MY GOD!\" gasped Jess loudly, she nearly fell over backward, had it not been for Ray who had come to stand by her, she would have. \"What the hell Gordy? Who is she?\" Jess looked like she had seen a ghost.\n\n\"This is Amy James, she is Sara's mother...the children's grandma.\"\n\n\"But Sara doesn't have any family.\"\n\n\"She evidently didn't want anyone to know about me,\" spoke Amy extending her hand to Jessica. \"I think I almost sent Gordon to the hospital when I showed up at his door yesterday.\" She smiled and glanced at me.\n\n\"Sara didn't know about Amy until she was older and then blamed her for giving her up when she was born.\" I explained. \n\n\"Basically,\" continued Amy, \"there is more to the story, but that would be best to leave for another time.\"\n\nJessica finally shook Amy's hand, then drew her in and hugged her. Jessica always had a sense about someone's painful past, even when she didn't know the details, I think she must have seen the pain behind Amy's eyes when she talked of Sara.\n\n\"I'll get the kids, Gordy come help me, please.\"\n\nI followed Jess to the kids's bedroom. She stopped in the hallway and turned to me, \"My God Gordon she looks so much like Sara, I just about peed my pants, you could have warned me,\" she whispered.\n\n\"I'm sorry, She looks and even sounds like Sara but she is so much more vibrant and animated than Sara ever was. I really like her, I think the kids will too.\"\n\nJess looked at me suspiciously, \"You aren't starting to fall for her are you? Because that would be a little weird.\"\n\n\"I've only known her for about 24 hours.\" I replied, I didn't tell her about the hug from earlier today. \n\n\"Keep your head on straight, Gordon. She looks young for a grandma!\"\n\n\"She was repeatedly raped by her step father and had Sara when she was just 14 years old. Then the bastard wouldn't let her keep her baby and left Sara to go through the hell she experienced in her foster homes.\"\n\n\"Oh Jesus!\" Jess exclaimed and put her hand over her mouth. She is a Christian so the exclamation wasn't meant as a swear word. \n\n\"I think she must be about 36 or 37 but she looks much younger.\" I conjectured.\n\n\"Yes, my immediate impression was that she must be Sara's sister, it was a stunner that she is her mother.\"\n\n\"She wants to have a relationship with her grand kids, Jess, she is willing to live with us and help with feeding and caring for the kids and me. She comes with great references. I've seen them. Give her a chance.\"\n\n\"I don't see that I have a choice. I would like to get to know her better.\"\n\n\"Well, so would I.\"\n\n\"Watch yourself, Gordon, she's not just any woman. She is your deceased wife's mother, as young as she looks, AND she looks so much like Sara that it could be confusing for you. Be careful of your feelings.\"\n\nI hadn't thought about that. It is a bit confusing. I already have some feelings germinating in me that may be residual feelings for Sara. I would do well to examine them to figure out my own heart. It wasn't just a bit confusing, it was damn well confusing!\n\nWe continued into the kid's bedroom and as Jess had predicted Gracie was awake but lying in the bed playing with her dolly \"Maggy\". \n\n\"Hi Daddy,\" smiled Gracie and raised her arms for me to pick her up. I never refused her, they are so soon too big to hold and soon enough don't want that kind of attention. I picked her up and the best feeling in the world wrapped her little arms around my neck and kissed my cheek. \"I missed you, daddy. Are we going home now?\" \n\n\"Yes, Gracie we'll go home as soon as you give your Auntie Jess a hug and a kiss.\"\n\nGordy woke up as we entered the room, and began to whimper. He had felt the upset of the last few days and had been out of sorts. He normally would wake up with a smile and babble only knows what. He had whole conversations in some language I didn't know. Gordy wanted to be held, too. I was still able to pick them both up but it was inevitable that they would soon be too big for such family 'get togethers'. But until I could no longer do it, I was game. I loved when they both cuddled into my neck and laughed when I pinched their chubby little legs.\n\n\"I have a new friend that I want you to meet.\"\n\n\"Is it Tracy?\" Asked Gracie, in her small voice.\n\n\"No, it's not Tracy, Tracy is not a new friend.\n\nAmy stood as I carried my precious baggage into Jess's living room. They were both giggling and talking as we arrived making Amy smile and I noted a tear form in the corner of her eyes. I put Gracie down as she looked up at Amy. Her blue eyes grew in amazement.\n\n\"She's mommy but with happy eyes!\" She squealed with delight and rushed into Amy's arms and hugged her tightly. Amy had tears running down her cheeks but her smile was full of joy. I had a knot in my throat too. \n\nGordy wanted down too, but his desire to get close to Amy was tempered by his shyness. He took a couple of steps toward her then whimpered and scooted behind my legs. He grabbed hold of my pant leg and peered around at Amy, who smiled and extended an inviting arm toward him. I had to nudge him a little but at last he extended his little hand out to hers and she gently pulled him into her arms with his sister. Amy was overcome with joy and actually sobbed a little. \n\nI saw Jess wipe her eyes and she slipped her arm around my waste. \n\n\"You know, this may work out fine after all,\" she spoke through her tears. \"I'll get their stuff together.\" Jess began to busy herself packing the kid's extra cloths and bottles into the ubiquitous diaper bag.\n\nAmy reluctantly began to extricate herself from the tight grasp of the two love hungry toddlers. \n\n\"Let's go home.\" She said to Gracie. \n\n\"Are you going to live at my house?\"\n\n\"Yes, I am. Will that be alright with you?\"\n\nGracie looked at her and took her hand. \"Um huh, I'll show you my room.\"\n\n\"I'll look at it with you as soon as we get there.\"\n\nGracie began to lead Amy toward the front door. I handed her dolly to her and said \"Don't forget Maggie.\" Gracie clutched her dolly in one arm while she led Amy through the front door.\n\n\"You better kiss your Auntie Jess,\" reminded Amy and loosened herself from Gracie's grip. \n\n\"Good bye, Aunt Jess, I love you,\" and she raised her face to receive Jess's kiss. Jess scooped up Gordy and kissed and nuzzled him to his gleeful giggles and laughter. I took my son from Jess's arms to place him in his car seat. He immediately began to fuss. Amy leaned over him after buckling Gracie into her seat and began humming in his ear as she stroked the sides of his head around his ears. Gordon went still as if listening to a lost memory as Amy hummed and caressed him. Soon he was cooing and babbling.\n\n\"That was amazing!\" I exclaimed, \"He's never calmed that quickly!\"\n\nAmy just smiled and kissed his forehead. She came around and was about to slide in the seat next to me when she stopped and stepped toward Jess. She spoke a few words I couldn't quite make out then the two women hugged and waved goodbye.\n\n\"What did you say to her?\" I asked Amy.\n\n\"Oh, just woman talk, we're going to be the best of friends.\"\n\n*******\n\nWhen we arrived home, I took Gordy as Amy released Gracie who was struggling to learn how to unfasten the seat belt. Inside, Amy went straight to the kitchen and started preparing the dinner she had planned for us while I got the kids in the tub to take a bath. They loved bathing together and played, splashed and laughed. I dried them up and sent them off to play until Amy had dinner ready. I followed Gordy as he toddled into the living room. He had been walking for a little over a week and walked with his arms raised above his head and staggered like a drunken sailor. I plopped myself down in the middle of the floor and my darlings piled on me like a giant that needed to be pinned down, laughing and squealing when I pinched their behinds, toes and knees. We played like that until I was out of breath and as I stood, they glommed onto my legs to ride my feet as I walked away. I could barely lift my leg with Gracie attached which made me sad that soon this special play would be coming to an end.\n\n\"Do the giant, Daddy, Do the Giant!\" Gracie shrieked.\n\n\"Madle glagee dada wongie,\" squealed Gordy. I didn't understand him but by his laughter I surmised that he too wanted the \"Giant\". \n\nSo I roared my biggest and deepest roar and spoke in as big a voice as I could muster, \"FE, FI, FO, FACIE, I'm going to stomp and tickle GRACIE!\" With that I reached down and tickled Gracie which caused her to squirm away from my hand on one side and then the other. screaming and laughing the whole time.\n\n\"FE, FI, FO (Gordy began to squeal loudly knowing he was next) FORDY, I gonna steal the nose off GORDY!\" I pinched his little nose and tickled his neck and under his arms. It was too much for him and he let go, rolling across the floor into Amy's feet.\n\n\"My! What a lot of racket! Is anyone here hungry?\" Amy exclaimed and began laughing a the site of us. She scooped up Gordy and laughed as he wiggled in her arms. She hugged him close, unable to resist his cherub cheeks and rosy nose and pinched it again softly and stuck her thumb out between her knuckles, \"I got your nose!\" She cried with her big eyes opened wide in mock amazement.\n\nGordy put his hand on his nose then reached for Amy's hand. \n\nAmy said, \"Oh look, I already have a nose so here I'm going to give this back to you!\" And she pinched his nose again.\n\nShe stood up straight and put her hands on her hips, \"Dinner is ready to eat,\" she declared and headed toward the dining area. It was obvious we were expected to follow so we got up and followed her into the dining area. I came along side Amy, who looked at me with pride and smiled. It made me feel good that she was proud of me as a Dad and perhaps as a man. Sara had never looked at me with that look, and now it felt good. It warmed my heart that she so honored me, and I wanted her to look at me like that all the time.\n\n\"Let me guess where each of you sit.\" She said as if decoding a great puzzle. \"Gordy is easy. He is the only one who gets a high chair. So this one is Gordy's.\" Amy picked him up and set him in the chair and strapped him in. I'll bet the one next to him on the end is Daddies chair so he can keep a watch on Gordy. Am I right?\n\n\"Correct on both so far!\" I spoke up.\n\n\"Now the next one is harder, I'll bet this one...\". She walked over behind the chair on the other side of mine facing Gordy, \"is Gracies seat because it is also close to Daddy but on the other side.''\n\n\"Where are you going to sit?\" shouted Gracie with unbridled excitement to have someone new sit with us for dinner. \"Please sit next to me, Please!\"\n\n\"Alright Gracie, I'll sit next to you!\" Amy leaned over and gave Gracie a little kiss on the forehead, \"Do we give thanks for our meal?\" I cringed. Sara had trained us all to say grace but in her absence from our home, I had let the custom slide. I was just so busy making the food I rarely sat when the kids sat. But now Amy looked expectantly about the table and we all bowed our heads. \"Tomorrow Daddy will either lead the prayer or call on someone to pray but for now I'll ask Gracy? Can you pray for us Gracy?\n\nGracie folded her little hands in front of her face and closed her eyes and in the most sincere angelic voice began:\n\n\"Thank you for the World so sweet,\n\nThan you for the food we eat,\n\nThank you for the birds that sing, \n\nThank you God for everything.\n\n...and thank you God for Daddy and Mommy.\"\n\nThen she looked up with pride and smiled at Amy.\n\nI looked intently at my little angel, then at Amy. Amy had tears in her eyes. Neither of us corrected Gracie. We looked at each other and smiled. I felt a little guilty that I didn't clear up the confusion with her but she is just three. She has at this moment, sitting at our table the first real mother she will remember. Sara was a good enough mother during Gracie's infancy but thereafter was a void. She will remember almost nothing about Sara, thankfully, for her memories of her real Mom would not be good ones. So I thought \"Let her have this time...there will be time enough later to face the truth.\" So I said nothing and just smiled at her.\n\n\"Thank you, Gracie. Where did you learn that prayer?\" asked Amy. \n\n\"From Auntie Jess, she said we should always thank God when we eat\"\n\n\"You are correct, Gracie. We should always thank God.\"\n\nSo the meal went, just like a real family two parents and two kids. I know it wasn't quite a real family, but I, like the kids, was enjoying the tranquility of the whole scene.\n\nThe new normal soon became routine, We got the kids up and fed, I got dressed for work, Amy would make a lunch for me and hand it to me at the door. I would give her a friendly hug on the way out and the kids would wave goodbye. I returned home had some play time with the kids, then sat for dinner. Then the kids were sent off to bed. I helped Amy clean up the kitchen and dishes and then retired to the living room for some TV and to read the paper. Amy would either come and sit and talk with me a while or go directly to her room to read. It was a pleasant existence.\n\nAmy was taking on the role of a partner in the home, doing the shopping for food and clothing for the kids. Once she bought a new shirt for me that she thought would look good on me, it did and it became my favorite. She reminded me of bills that needed payment and eventually did some of the payments herself, having me sign the check before she mailed them out. I soon thought of her as an indispensable part of the family.\n\nAmy and I had many conversations along the way, she had many stories of her former positions and the children she cared for. She told of parents that were great to work for and those she couldn't stand. \n\nWhat she never mentioned was anything about her personal life. I learned of her favorite color: turquoise; her favorite food: pizza; and her favorite movies: anything black and white. I never heard her mention past loves or lovers and she only mentioned her parents that first time I met her. She would get quiet when the subject of Sara came up which wasn't often. I saw to it since it pained her so, therefore I avoided venturing into that bit of her history. I was curious as hell, but it was her personal information and not really my business.\n\nAfter nearly six months of our lives together, things had stayed relatively normal, we were comfortable in our routine and our respective roles in raising my children. Then there were several things that happened within a few weeks to change everything.\n\nOne evening after the kids were in bed asleep and Amy had gone to her bedroom, I crept in to check on my children. I didn't bother to turn on the lights since a small nightlight on the wall illuminated their beds enough to see. I put my hand on Gordy's tummy as he slept and felt his gentle deep breathing, I brushed back his golden locks and kissed his forehead. He had a bruise there like usual. The kid bonked his head on everything...he was at just that table top counter height. Then I went to look at my Gracie. As she slept she reminded me of Amy and I planted a small kiss on her forehead also...then I realized that I had thought of how she reminded me of Amy instead of Sara, it was puzzling. \n\nAs I stood there, the light in the adjoining bathroom came on. The door was open about half way allowing me a full view of the small room from the reflection in the mirror. I was more or less hidden in the dark of the kid's room. Amy walked into the bath in a long silk robe of luxuriant turquoise. She seemed to be nude otherwise. She wore her long blond hair down instead of her usual pony tail. It had grown longer since she had moved in and now it fell about her shoulders. \n\nI knew I was wrong to watch her in such a personal moment, I felt like a pervert voyeur but I was mesmerized by her grace and beauty, the easy way she moved and the flow of her hair as she washed her face with some green stuff. Sara had never allowed me to watched her do her beauty regimen so I was fascinated with every aspect.",
        "She pumped some white creamy substance in her hand then propped her foot onto the commode and began to rub it into the skin of her leg. She brushed the silk material of her robe behind her revealing her right leg from just below her waist down. Her leg was very shapely ending in a plump but firm buttock. She rubbed the lotion over every inch of her long leg then switched legs and turned her attention to her left leg. I could see her inner thigh and I caught a glimpse of her womanhood. I did see that her pubic hair was very fine and quite sparse. It was only a shade darker than the hair on her head but didn't hide the shape of her vulva and the small protrusion of her labia. Her pussy looked pink, soft,...and beautiful. \n\nWhen she finished with her legs, she stood and in one motion dropped both arms by her side and the robe fell from her shoulders and piled up onto the floor behind her feet. She stood in all her magnificence, totally nude, the most beautiful woman I had ever seen on film stage or in person. I had often looked at Playboy and Penthouse when I was in college and thought that Sara was the most beautiful creature I had ever known, but Amy was by far more incredible looking than her daughter! Her breasts were now both visible and matched exactly. Her aureoles were about the size of a half dollar and slightly oval. They were pink with slightly darker nipples standing erect from their center. Her breasts were what I would call perky, full and round and pointing up at the nipples. \n\nShe squirted more of the lotion into her hand and began rubbing it in on her thin waist and sides. Eventually she took another palm full of the lotion and rubbed it on both her breasts. She let her fingers knead her mounds and when she squeezed her nipples she jerked suddenly, closed her eyes and drew a deep breath. Soon she was repeating the process and dropping one hand down over her abdomen to her pussy.\n\nI realized that she was about to masturbate! I pulled a baby wipe from the dispenser by Gordy's crib and tugged my engorged cock from my pants. I was incredibly aroused by this time. I stroked my cock slowly wanting to cum when she did. I hoped she wouldn't take too long as I was almost ready to cum by the time I got my cock out of my fly. \n\nShe was working her pussy in rapid circulator motions with the fingers of her right hand while pinching first one nipple then the other with her left. I heard her whimper and sputter, trying to stifle a scream and she quivered all over as her orgasm racked her beautiful body. Her breasts shook and bounced and the muscles in her thighs flexed and released. Right on schedule my climax arrived and I filed the wipe with my cum. I went slightly limp and had to catch myself before I fell to the floor. I watched through half closed eyes as she recomposes herself and bent down to retrieve her robe. After she slipped it on she stood and went into her bedroom, turning the light out as she left.\n\nI was feeling incredibly guilty and chastised myself for my weakness. I tiptoed quietly to my own bathroom and masturbated again playing it over in my mind.\n\nA few days later we prepared for the day as usual. This was a day designated as a 'weekend' off for Amy so the kids were going to spend all day Friday and the weekend with Jessie who showed up as I was about to leave. Amy gave Gordy a little kiss on the forehead as Jess carried him out the door. Gracie stood on her tippy toes and kissed Amy on the cheek then offered her's for Amy in return. The kids were down the sidewalk and I approached for my send off from Amy. I took my lunch from her hands and thanked her but instead of leaning in for the usual small hug, I leaned over and gently kissed Amy on the lips. Not a passionate kiss but a goodbye kiss like you would share with a spouse. To be honest, I didn't even realize what I had done until I was halfway down the walk. When the reality of what had just happened sunk in, I stopped and turned around just in time to see the door close behind me, she must have stood in the open doorway for a few moments, probably bewildered.\n\nI licked my lips thinking of the feel of her lips on my mouth. She had been surprised I was sure but she had kissed me back. Her lips were warm and soft and seemed to welcome my surprising intimacy, as inappropriate as it was. I went on to work but I couldn't get the kiss out of my mind. I mulled it over during the day and decided I needed to apologize to her. I didn't want her to think I was taking advantage of her as a quasi employer or as a man. \n\nI was afraid I wouldn't see her much since she was \"off duty\" this weekend, but when I arrived home she met me at the door and shooed me into my bathroom.\n\n\"Shower and shave,\" she said, \"I can tell you've had a hard day and you need to change clothes and relax in the living room. I have your paper on the ottoman and a nice wine on the end table.\"\n\nI didn't know what to make of the whole thing, she had never done these things to this extent before. Indeed she had brought my paper, she had poured me a wine, she had fixed a nice dinner but not all of them together with the preamble to shower and shave.\n\nI did as I was told and settled into my chair to read the paper when she stuck her head in the room and said that dinner was ready. \n\nAmy had removed the leaf in the table and made it just big enough for two. The places were set with wine glasses, napkins and the good silver, she must have found in the hall buffet.\n\nThere were two candles burning in the middle of the table even though there was plenty of light in the room even with the overhead lights turned off. I looked at her as I entered the room. She was wearing cut off denim shorts folded up a few times and a floral pattern sleeveless shirt with the top three buttons undone. The button that held her shirt together was pulled tight across her bosom. She wore her hair up, as usual but up loosely, it looked like it could fall down at any moment. She wore her usual necklace with a white gold heart shaped locket that contained a small picture of Sara when she was a newborn. \n\nI sat down and watched her as she made the last minute preparations for what I could tell by the sweet aroma was my favorite dinner, rib eye steak with saut\u00e9ed mushrooms and onions, baked potatoes with sour cream and chives, and grilled asparagus rolled in dry Ranch dressing mix. I saw an apple pie for dessert on little plates waiting on the counter.\n\n\"What's the occasion?\" I asked fearing I had forgotten something. \n\n\"I didn't expect you to remember but we have been together 6 months today.\" She announced proudly. \n\nIt was a little strange to put it that way, but I said nothing. \"Oh my it has gone so fast, I can hardly remember when you weren't with the family.\" I could see she was disappointed in how I replied but I couldn't quite figure what was happening. She was noticeably less affable.\n\n\"Did I say something wrong?\" I asked\n\n\"No, not at all, like I said I didn't expect you to remember. Pass the asparagus please, I'm excited to try your favorite vegetable dish.\" \n\nThe meal went well. It was delicious. Amy was definitely a better cook than Sara and I had grown accustomed to her palate. I thoroughly enjoyed the meal. We talked about the kids about my day, about her day, and about things that needed attention about the house. We laughed and joked together. \n\nWhen we finished our meal I helped put away the leftovers and clean off the table. Once or twice, when it didn't seem as though I was doing it on purpose. I let my hand linger on hers a moment longer than necessary, or touched her shoulder as I walked by her or grazed her thigh when I stood near her. I remembered her in the bathroom a few nights ago and found that I was becoming more and more attracted to her. But I felt guilty for my adolescent fantasies and even lamer \"cheap thrills\" that I was pursuing. I was sure that if she knew that I was lusting for her she would be appalled and offended. So I refrained from anything that would be obvious.\n\nIt was more than lust though, I found I was thinking of her most of the time! Images of her filled my imagination and daydreams, the way she moved, the flash of her smile, the way she batted her eye lashes when she spoke to me, the sound of her voice all filled my thoughts as I worked at the college and read the paper at home and, just about every waking moment! It was all the signs of falling in love. But I knew she would not be interested in me in the slightest, I had been married to her daughter for crying out loud! She was 10 years older than me and I knew, quite frankly, she was out of my league.\n\nWe finished cleaning up and she sent me in to choose a movie to watch this evening. I left her there by the sink, her small form scrubbing on something before putting it into the dishwasher..why did she want to clean something before putting it in the machine designed to clean it? The question left my mind as I turned and saw her beautifully round rear shake back and forth as if doing a subdued hula. Her elbows were splayed out as she reached over the edge of the sink, its height well above what was comfortable for her stature. I could see through her sleeveless shirt most of her bra covered boob as they swayed from her movements. I drew a quick breath which she evidently heard. \n\nShe turned her head, looked at me and said simply, \"What?\" and smiled inquisitively.\n\n\"Do you still need help?\" I asked trying to cover my lustful expression.\n\n\"No, just go choose a movie. How about a Romantic comedy or something?\" She suggested.\n\n\"A chick flick\" I thought. I looked through our videos and came across one of that I didn't know we owned, it must have been one of Amy's. It was called \"An Affair to Remember\" with Cary Grant and Deborah Kerr. I wasn't familiar with the film but it seemed to fit the bill: a Romantic film and if it was Amy's, she must like it.\n\nI pushed the movie into the VCR and pushed play. I sat on the couch just a little toward the center to be closer to Amy but not enough, I hoped, to be obvious. The video went through the various trailers for new and upcoming releases and finally got to the film itself just as Amy walked in.\n\n\"Oh, I love this movie! It is so romantic!\" She raved. She came to the couch with two glasses of wine, handed me one then sat down near me on the couch, not quite next to me but closer than I expected. She took a small sip of her wine, looking over the top of the glass at me and blinked a few times and smiled. She was absolutely adorable! \n\nI took a big sip from my glass and settled back to watch the movie. Amy kicked off her shoes and stretched her feet and toes. \"My feet just ache so much,\" she moaned, \"I've been on them all day long.\"\n\n\"Why don't you lay back and let me massage them for you?\" I offered.\n\n\"Would you do that?\"\n\n\"Sure, come on...put them up her in my lap.\" I motioned for her. She hesitated thinking for a moment, so I reached down and scooped up her legs and put her feet in my lap. She leaned back into the cushions and looked at me in anticipation. Her feet were very small and dainty. They were perfectly proportioned with pretty nails that she had polished light pink.\n\n\"You're sure you're alright with this?\" She asked.\n\nIn answer I just started massaging each of her toes. She moaned softly, lay her head back and closed her eyes. I went from toe to toe, from the pinky to the big toe, then moved on to the ball of her foot.\n\n\"Oh, that feels marvelous\" she whispered hoarsely.\n\nI went on to the instep and the arch of her foot. \"Right there that is the sore spot right there, yes that really feels good.\" She began to wiggle each foot in my lap.\n\nI had never been this close or intimate with her and I found rubbing her feet immensely arousing. Her heels were digging and moving in my lap so I had to struggle to keep her from feeling the hard-on that had come to dominate my lap. I finished by massaging and stroking her calf and shin. I marveled at how soft and smooth her skin was under my fingers.\n\nI continued on the other foot starting in the same fashion toes, instep, heel, calf and when I finished she left her feet in my lap as we watched the movie. About half way through she sat up and put her feet on the floor.\n\n\"Can you pause it for a little bit, I need to visit the restroom.\" She asked sweetly.\n\n\"Sure, I need to go, too.\" I did but I doubted I could get anything to happen with the erection I had. I let her go first so that I could get up and adjust myself without her noticing, but I think she checked me out as she passed in front of me. I was embarrassed and blushed, I could feel the heat in my cheeks.\n\nI did manage to lose my erection enough to urinate and as I washed my hands I looked myself in the eyes and told myself that I should really cool it, she wasn't interested in me in that way, I was too young for her to have any real interest in an intimate relationship, and if I continued the way I was going I would do or say something stupid and completely ruin the good thing we had going, but I wanted her...I wanted her in every way that term implies, I had to admit I was falling in love with her. I was miserable.\n\nI heard her pass by my bathroom and go into the kitchen. So I returned to the couch and sat again just about in the middle. Evidently my talk to myself just minutes ago did little to abate my lust for Amy, my nanny and beautiful mother-in-law. Soon Amy returned with our glasses refreshed with more wine. She almost stumbled and came close to spilling the glasses.\n\n\"Oops...\" she giggled. She sounded like a school girl, \"I must be a little tipsy!\" She handed one glass to me, set her's down on the end table where she had reclined for her foot rub. She sat again but this time much nearer me almost touching thighs. She turned and smiled at me and fluttered her eyelids a few times. Her big round blue eyes looked even bigger with the slightly dilated pupils making them look bigger still...and 'dreamy'. I was in trouble and I knew it. I hoped I had enough strength to resist her delicious looking lips, her infectious smile and those eyes, those big, sexy, dreamy eyes.\n\nI turned the movie back on and we continued watching, that is, she continued watching, I was watching her. God, she was so beautiful almost more in profile than straight on... almost. I looked at her clothing. She wore a simple sleeveless button up shirt with two pockets one atop each of her breasts. She had it pulled around and tied in the front just under her breasts exposing her midriff. I hadn't noticed that detail before. She had on shorts that were rolled up exposing most of her legs. I expected she thought her legs her best feature as well she should, she had spectacular, long and shapely legs. I was tempted to stroke every inch of those creamy gams but I feared I would offend her, or worse, scare her away. No! I must control my urges or risk our whole arrangement. But she was making it hard...literally!\n\n\"This movie just makes me feel so romantic,\" she cooed, then looked at me again with those eyes, \"What about you?\"\n\n\"Huh? Oh, oh yeah...me too.\" Actually I had never seen the movie before but it was very good, and yes, I was rooting for the couple to meet on the Empire State Building and pained to see the tragedy that befell Deborah Kerr. \n\nJust then she leaned toward me and laid her head on my shoulder. \n\n\"Oh, my head is just spinning, can I lean on you?\"\n\nI was just getting used to her there when she spoke again, \"Do you need more wine?\"\n\nThe question was accompanied by her hand coming to rest on my thigh and a gentle squeeze, I guess, to let me know it was no accident.\n\nNow I was caught in a moral conundrum, Here was a woman I had just admitted to myself to love and desire, who was making all the moves to tell me she was thinking similar thoughts but thoughts fueled by too much wine, and a romantic dream. \n\nWhat should I do? If I followed my heart and took her to my bed, and oh, how I wanted that, I would be taking advantage of her alcohol addled inhibitions. If I ignored her, I may offend her feelings of self worth in whatever self awareness the alcohol had left untouched. As it turned out, she made the decision for me, for good or ill.\n\n\"No, I don't need any more wine, I think I've had too much already.\" \n\nShe turned her face towards mine, her lips just inches away, \"Are you sure? You could have more if you want it, you could have it now if you want?\" \n\nI was fairly certain she wasn't talking about wine at that point and I did indeed want it, I wanted it all and I wanted it badly! But it would be ungentlemanly to move on her in her present state of inebriation. She wasn't a drinker and the wine had hit her hard. \n\nSimultaneously, the movie had come to it's dramatic climax, Cary Grant found the painting! He realized she was crippled and he scooped her up and kissed her! The music was sweeping and climactic.\n\nJust at that moment, she breached the inches that separated us and kissed me on the lips. My resistance, as fragile as it was, crumbled to dust along with my noble thoughts and gentlemanly logic. I took her in my arms and kissed her soundly. I pulled her body to me as her lips separated slightly inviting my tongue to meet hers half way. She drew a deep breath and moaned as our kissing intensified. I tried to keep my hands \"G\" rated but soon she pulled my hand over to one of her breasts, and jerked a little when I found her nipple. \n\nAs the credits rolled on the screen. I pulled her on top of me. I stroked her naked back and down under the waist band of her shorts to her bum. I grabbed it firmly. It was indeed as firm as any of the college girls I had dated in my youth and pulled her crotch to align with my own engorged cock.\n\nShe took a deep breath, and raised her head and said, \"This would be more comfortable in your bedroom.\" I had lost the battle.\n\nI didn't move immediately however, I wanted to confirm she knew what she was doing, though I was certain she was at least a bit drunk.\n\n\"Are you sure this is what you want?\" I asked.\n\n\"Yes, I know that you aren't like him at all, you are a kind and considerate man.\"\n\n\"'Him' who?\"\n\n\"My pig of a step dad that raped me.\"\n\nI sat up and separated us slightly but still held her in my arms. It took me a few moments to process what she had said.\n\n\"You have had lovers since him haven't you?\"\n\n\"No, after the counseling I was ready to fall in love, but I wanted it to be with someone I really cared about, so I saved myself. There really was little opportunity anyway.\n\n\"You have actually been celibate for 24 years?\"\n\n\"Yes, Oh, a few of the fathers tried but I wanted no part of that. It could ruin my career.\"\n\n\"Oh my God! You're a virgin.\"\n\n\"No, I'm not, that pig took my virginity when I was 13 and that's something you can't get back.\"\n\n\"No, no no! If you didn't give it, it can't be taken, it was stolen. If I own a car and someone steals it, it doesn't mean I no longer own the car.\" I must not have been as drunk as I thought, I don't know how I ever came up with that analogy, \"You are still a virgin, and you have the ability and the right to give it to whoever you choose.\"\n\n\"I choose you.\"\n\nShe was making it hard, my conundrum just turned into a moral crisis. Damn! Damn, damn, damn!\n\n\"I really shouldn't\"\n\n\"Gordon, I want you to take me to your room and make love to me. I have waited my whole life for this, don't turn me down. I know you want it too.\"\n\nYes, you are right, I thought, but what I said was, \"But you are drunk right now. It wouldn't be right for me to...\" before I could finish she leapt upon me and started kissing me again and wriggling on top of me. I could stand it no more and scooped up her small but perfect body and carried her to my bedroom. She couldn't have weighed more than 110-115 pounds and she was not difficult for me to carry at all, except the whole time we were kissing and I began to run out of breath. I finally got to the bed and set her on the edge.",
        "\"Now, since you are a virgin, I am going to take this nice and slow and make it as good for you as possible. You will not have the pain as you did when that pig tore your hymen, but it has been a long time since a penis has been inside you so we'll take it easy, OK.?\"\n\nShe just looked at me with a lustful little grin and nodded her head letting me know she understood. I took her hand and stood her up held her close and kissed her standing against me. She ground her pelvis into me and felt my cock right away.\n\n\"Is that for me?\" She asked sheepishly as she started to unbuckle my belt. I tried to stop her but she held my wrists, \"Let me do this.\" She insisted. I let her unbuckle my belt and unbuttoned my jeans and she let them drop to my ankles. She pulled me a step closer to her.\n\n\"My turn,\" I insisted. I unbuttoned her shirt and slowly untied the shirt tail that was knotted just below her breasts. I slid the garment over the top of her shoulders and she let it fall to the floor with a tremble. I unfastened her shorts and unzipped them so they loosened on her waist, however I had to peel them off her hips before they would fall to the floor. I followed her example and pulled her toward me so she would step out of the small pile that laid about her ankles. \n\n\"Now me again.\" she chimed, while she ran her fingers up my abdomen under my shirt. She unbuttoned me one handed as her fingers toyed with the hair on my chest. When my shirt was loose she pulled on one sleeve and then the other removing it entirely and tossing it aside where it joined all my other clothes. Now we both stood facing each other in our underwear. I pulled her to me and kissed her mouth with all the passion I could muster. She did the same, our tongues dancing together in total union.\n\n\"Stand still, Amy,\" I commanded gently, \"I want to worship your beautiful body for the first time.\" I unsnapped her bra that connected in the front between her ample breasts. And pulled her bra from her shoulders. I help it to my face and smelled the aroma of her mixed with her perfume. It was a smell I will remember forever, it was her in her simple perfection. I adored her. I took each breast in my hands gently gliding my palms over those soft orbs, feeling the texture of her flesh and the stiffness of her nipples. It caught my breath away as I bent over to kiss the top of one breast right across through the valley of her cleavage to kiss the other. I grasped her left boob while I kissed and sucked her right breast then switched when I felt her tremble and her knees nearly buckle. \n\nI kissed down the valley between each breast and along the side of each and just on underside where her breast attaches to her chest. As I did this I allowed her breast to lay across my face then kissed my way up to her nipple again and sucked on it long and hard. When I had done the same to her other breast I kissed and licked on down over her navel, lingering there to kiss her when she trembled once again. \n\nI was kneeling in front of her with my hands around her slender waist as I kept kissing down her torso. When I reached her panties with my lips, I bit the waist band with my teeth and pulled them down with a little help from my hands. My nose slid through her fine pubic hair and then nestled very gently against her sex. She put her hands on my shoulders to steady herself as her knees buckled again from the contact. I drew her panties on down her legs kissing and licking as I went stopping just by her knees. From there my hands traveled the remainder of her slender yet shapely legs then around her ankles and up the back of her legs to her buttocks. I cupped each cheek and gently but firmly pulled her pelvis into my face.\n\n\"Oh, no, goodness what are you doing?\" She said with a small panic in her voice. She resisted me until my tongue made contact with her outer labia. When I began to work my tongue over her pussy she melted into me.\n\n\"Oh my god, that...that...that is like...hea...heaven. O my god!\" She gasped softly as her pelvis began to gyrate instinctively. I pushed her slowly back onto the bed and lifted her by the waist until her upper body was on the bed and her legs over the edge. I lifted each leg up over my upper arms and dove into her vagina with vigor. I licked up between her inner and outer labia avoiding for the moment her hot little clitoris, I drove my tongue deep as I could into her pussy and sucked her outer and inner labia into my mouth. \n\nWith each new lick and tonguing she gasped and mewled. I felt her body quivering and chose that time to seek out and devour her clitoris. When I did her reaction was immediate and decisive. She humped my mouth with her pussy and chirped small cries of utter pleasure with each stroke of my tongue. It took a while of this tonguing which I thoroughly enjoyed, until eventually she grasped my hair and let out a loud moan that was nearly a scream as her orgasm ravished her senses. She moaned with each wave of the powerful climax when finally she could stand no more and pushed my head away. I watched as her body convulsed from one end to the other, shaking her boobs, then her abdomen, then her thighs, then her boobs again. She held her hands out above her wiggling her fingers as if playing a tune on a piano. She kept her eyes closed and kept gasping until the waves finally subsided and she rested her hands on her chest just below her boobs and opened her eyes,\n\n\"My god that was incredible, where did you learn to do that, more to the point, how could she have let you go?\"\n\nI just smiled and stroked her legs. I didn't want to mention that Sara had taught me how to please her when we dated and now, evidently I have affirmed it works on all women, well, at least on her mother. \n\nShe smiled at me and pulled me next to her. I propped my head on my hand next to her and ran my hand up and down the entire length of her body from knee to earlobe. Soon she was gently writhing to my petting like an affectionate feline. I was getting urgently turned on so I moved between her legs and began to insert my hard cock into her. She opened her legs for me and cupped my face in her small palms as I inched into her wet pussy. I moved slowly as I had promised in spite of the almost overwhelming urge to drive my rock hard member into her up to the hilt. Slowly, Slowly I delved deeper into her silky smooth pussy. She breathed more heavily and occasionally let out a gasp.\n\n\"Am I hurting you?\" I asked sincerely.\n\n\"Not at all, it is just so big in me. It feels so... full...I love it!\n\n\"You are very tight!\"\n\n\"Is that bad?\"\n\n\"No, my dear, that is very good!\" She smiled with satisfaction.\n\nAt last I was all the way in. She was extremely tight and very warm and felt like velvet. \"I'm all the way in now are you okay?\"\n\n\"Yes, wonderful, please just do it,...fuck me Gordon.\"\n\nI was surprised by her sudden vulgarity but was turned on all the more. \n\n\"Fuck me, Gordon, Please, fuck me hard! Don't hold anything back!\"\n\nI began slowly but picked up speed and intensity and soon I was thrusting into her with all my might. Her hair swayed with each thrust. My cock slid in and out of her tight pussy causing her to grunt lightly as my balls slapped against her bottom. As I continued thrusting, her grunts raised in pitch and volume and was occasionally interrupted with words of encouragement.\n\n\"Yes, Yes Gordon...Oh, that is so good...ugh.. ugh... just like that! Yes!\"\n\nI kept up my motion, slowing once or twice and repositioning from time to time. As She approached another orgasm she reverted to short grunts and one word interjections. I was nearing my climax as well and intensified my thrusts. \n\n\"I'm cumming again!\" she whispered hoarsely and then started to whoop loudly as the orgasmic convulsions washed over her body. \n\n\"I'm not far!\" I exclaimed quickly. Her orgasm soon spurred my own. I uttered loud meaningless groans as I burst inside her pussy. The sperm shot from my cock a half dozen times each less intense than the one before. I lost control of my movements and ended just laying on top of her still inside her delicious cunt. I kissed her ears and her cheeks and her lips as I gently stroked her hair, her arms and her abdomen. I adored her and tried to show her in actions.\n\n\"That was marvelous.\" She said thickly, \"can we do it again?\"\n\n\"I'll need a few minutes to recover,\" I told her, I tried not to think of what I had just done. I wanted to have her at least once more before she realized that I had taken advantage of her or before I started feeling too guilty about it to get it up again.\n\n\"Was it good for you?\" She asked suddenly.\n\n\"Of course! It was amazing!\" I answered honestly.\n\n\"It doesn't bother you that I am used?\"\n\n\"What!?\"\n\n\"The pig that raped and molested me tried to keep me by telling me I was \"used goods\" and no man wants a 'used' woman.\"\n\nOH! MY! GOD! That asshole really did a number on her! I decided then and there the information I had surreptitiously gathered on this piece of shit for my own curiosity of what he had done would not remain locked away in my safe. I was going to make this man, State Senator Bradford P. Foster, who was too important to be brought to justice, I would make him pay for what he had done to Amy and Sara, and to me and my children by extension. However, now was not the time to discuss it with Amy, But I promised myself it would be done, and soon. \n\nEvidently, my anger and indignation showed on my face.\n\n\"What are you thinking, Gordon?\"\n\n\"I'm really pissed for what that piece of shit did to you. My answer to your question Amy; No, it doesn't bother me at all, except I wish the lying bastard was here right now, I'd beat him senseless!\" \n\n\"Oh, I don't! I never want to see him again! I wish I could just forget about him.\"\n\nI let the matter drop for now but I was determined to rectify the wrong done this woman I love even though she is so far out of my league.\n\nI stroked her cheek and wiped the small tear that had formed at the corner of her eye. I tenderly kissed her cheeks and her mouth. Her lips parted and we kissed deeply as our passion began to build again. This time there would be no holding back, we would let our passion carry us to our ultimate climax once again. \n\nShe kissed down my neck this time and stroked my biceps and shoulders. I'm not a very muscular man but I was not flabby either. She traced her fingers down my abdomen and through my pubic hair then wrapped them around my awakening penis and stroked it slowly. \n\nSooner than I expected, I was hard again aided by her hand motion. She looked out the top of her eye lids through her hair as it hung like drapes framing her beautiful face. Then she deliberately took my cock into her mouth and swished her tongue around my glans. I shivered and thrusted involuntarily. \n\n\"Have you ever done this before?\" I asked.\n\n\"Not willingly, until now. Am I doing it right?\" \n\n\"Oh my God Amy, yes!\"\n\n\"Well I guess I can thank the pig for teaching me something worthwhile.\"\n\n\"You don't have to do this.\" I tried to pull away but she had her mouth on me again.\n\n\"No, No, I want to do this! For the first time, I really want to!\"\n\nHoly shit, she was good at it! Sara was not, and didn't really like doing it. Personally, I would rather have pussy. As if she read my mind, she swung her long leg over me and leaned forward guiding my cock into her hot box. Amy settled down on my cock, impaled to my full length. Her eyes rolled back slightly as she leaned forward over me allowing her hair to brush over my chest and pleasuring herself by rubbing her nipples round and round my chest. She held my wrists with her small hands forbidding me to grab her boobs and pinch those hard buttons as she continued pleasing both of us simultaneously. She was torturing me with her tits! And I was loving it!\n\nShe began to rock her pelvis so that our pelvis bones ground together with her clit in between. There was minimal in and out on my cock but it was enough to get me on my way. She shivered and moaned and picked up her pace. \n\nI was amazed at what seemed to be her natural uninhibited sexuality. She seemed to instinctively know what to do to get the most pleasure from sexual intercourse. She, by her own admission, was of very limited sexual experience but I had never experienced anyone as good at fucking, or more properly, love making, than Amy James!\n\nShe increased the pressure and speed of her humping and I was getting close. Quite suddenly she gasped loudly.\n\n\"Oh My God! I'm cumming! Oh! Oh! Oh! Oh!\" She screamed in pleasure then she lowered her chest on top of me. She stayed on her knees so I was able to slam up into her pussy another ten or fifteen times before I too came with my most powerful orgasm of the night. Then she collapsed on top of me breathing heavily. We lay that way for a long while until I eventually realized she had fallen asleep. I thought to roll her off me, but decided I liked her where she was and fell asleep myself.\n\n********\n\nWhen I awoke, I was in the bed alone. Instantly two thoughts came to me one right after the other: The first was the pleasant memory of our passion the night before, but immediately thereafter was the guilt and regret for taking advantage of her drunken state and victimizer her once more.\n\nI had to apologize to her but every reason or excuse just came across lame. What could I do to preserve our relationship, as damaged as it may be? In spite of the fact that I was in love with her, I had to find a way that she would stay and be here for the children. It would be a risk but I just had to let her know that It was wrong and won't happen again.\n\nJust then she poked her head in and said \"Oh you're awake.\" She was wearing the silk robe from the bathroom a few nights ago. Damn, she was beautiful. I really wanted to make love to her again but what I said was, \"Listen, Amy, I am so sorry about what happened last night.\"\n\n\"Sorry...?\" She started to reply but I cut her off.\n\n\"It was a big mistake ...\n\n\"mistak...?\"\n\n\"and I promise it won't happen again. I was drunk and you were drunk..\n\n\"but I wasn't...\"\n\n\"and I am sorry I took advantage of you.\"\n\n\"but...'\n\n\"I know there was no excuse for my behavior.\"\n\n\"but...\"\n\nI was so upset with myself by that time I just had to leave the room. I hurried to the bathroom and took a quick shower. I dressed and quickly went down the hall hoping to avoid her for a day or two. I grabbed my golf clubs on the way and as I passed the kitchen, I could smell that she was fixing eggs and bacon for breakfast. The last thing I could handle this morning was sitting across from her for a meal. \n\n\"I'll get something on the way to the driving range. I'm going to hit a couple of buckets of balls,\" I explained as I barely paused to even look at her. I was too ashamed.\n\nI drove to McDonald's and got a breakfast McMuffin with some coffee. It certainly wasn't as good as what Amy was cooking when I left. I took my time and read the paper though I don't remember a thing I read. Then I headed to the driving range.\n\nI enjoy playing golf but I am probably the world's worst golfer. My golfing buddies tell me I don't play golf. I ask them what am I doing then and they answer, \"We don't know but it ain't golf!\" They always chided me for my lousy drives, they chided me for my putting, they chided me for my chipping. I need friends that are closer to my level of playing. Or maybe just new friends.\n\nAt the driving range, I was awful as always. I kept slicing so severely the ball bounced off the suspended netting. One time it sliced so badly it almost beaned another driver about 12 booths down. That's when I gave up. I handed my remaining balls to the guy waiting behind me. \"You can have the rest of my balls if you keep your comments to yourself!\"\n\nThe guy threw up his hands, \"I've had those days, too\" he tried real hard to keep from laughing. I sat in the car a while and thought about Amy. \n\nDamn, I loved that woman and there was nothing I could do about it! It suddenly occurred to me, I could just tell her, what could happen? She would probably laugh in my face but at least she would know I wasn't a sexual predator. I drove toward home and actually was getting excited, there was at least a possibility she could love me back, she wasn't cruel so she would let me down easy.\n\nI parked the car in the drive and rushed into the house.\n\n\"Amy!\" I called out. I looked in the kitchen and she wasn't there, then I checked her room and there was no answer when I knocked. I checked the laundry room and called to her again. Puzzled I walked into the kitchen and that's when I saw the note.\n\nMy heart sank...letters are never good news!\n\nDear Gordan,\n\nI hereby resign the position as nanny for Gracie and Gordy.\n\nI love you and the children, so I hope I will be able to still \n\nhave a relationship with you, but it is obvious that I will not\n\nbe able to continue as I have, living in the same house.\n\nI will contact you or Jessica to arrange visitation.\n\nThank you for letting me be part of your lives these seven months.\n\nSincerely,\n\nAmy James\n\n\"AAAAAHHHGHHH!\" I heard myself yell in remorse! \"No oh no!\" \n\nMy worst fear had happened! What was I to do? How can I get along without her? No, no! I had to find her! I had to explain! I had to beg her to forgive me and come back for the kid's sake...for MY sake! My heart ached! It hurt more than I can remember ever hurting. I had lost my wife but that was a slow ache tinged with anger and resentment. But this..., this was like pulling out my very heart, the center of my being, one of three things that are of the most value in my existence. How could I go on without her? What could I tell the kids? What could I tell Jess?\n\nJess! Jess would know what to do. She is a woman and can explain to me where I went wrong and may know what to do about it. I had to talk to Jess!\n\nI took the note and ran out to my car, I drove the short distance to her house but it seemed to take forever. Slow drivers! Pedestrians! Can there be any more obstacles? Oh My God, a traffic accident! I finally was able to make it to my sister's home and pulled into her drive a little faster than I should. \n\nRay was trimming the bay berry hedge and looked at me quizzically, \"Hey Gord, What's up?\"\n\nI didn't answer and just asked him, \"Where's Jess?\"\n\n\"She's out back with your kids, is everything alright?\"\n\n\"I just need to talk to Jess right away, can you watch the kids for a while?\"\n\n\"Sure.\" Ray looked at me with concern. He knew something was wrong, I'm not usually so emotional and emotional was what I was. I was on the edge. \n\n\"I need to talk to Jess alone and I can't if the kids are clamoring around, can you just go out back and send her in while you keep the kids safe...and busy.\"\n\n\"Sure thing\" He smiled and put a reassuring hand on my shoulder. Ray was a good man. I hoped he and Jess would marry soon. He walked around the house to the back yard while I went into the kitchen to wait. I watched as he explained to Jess. She looked a little exasperated.\n\nShe came into the kitchen with a stern look on her face, \"I knew that you would have troubles when you told me of this arrangement, I'm only surprised you lasted this long.\"\n\n\"Jess, dammit, I need you advice. I need you to tell me what to do. Amy left me.\"\n\n\"Left you?\" Jess suddenly looked interested. \"Okay, what happened?\"\n\nI explained everything leaving out my shameful voyeurism and the details of our lovemaking last night. I showed her the note and she looked at me with a barely detectable smirk on her face.\n\n\"Really, Gordy?\" She only called me Gordy when she was mad or mocking me for something ridiculous I had done, \"You really haven't figured this out?\"\n\nI didn't answer verbally but my clueless expression answered her query. \n\n\"Okay lets break this down maybe you can figure it out yourself, So Friday morning you 'accidentally' kiss her goodbye as you headed off to work.",
        "\"Yes.\"\n\n\"Now, just shut up and let me lay this out for you,\" then she said aside, \"I can't believe\n\nit!\"\n\n\"What?\"\n\n\"SHUT UP, Geez!\"\n\n\"Okay, Okay!\"\n\n\"You kiss her on the way out Friday morning, that must have been right after I left with the kids. If I had turned around I could have seen it!\" She was enjoying this, the bitch! \n\n\"I'M DYING HERE and you're playing 'what if'!\"\n\n\"Sorry, Sorry,\" she laughed. She WAS enjoying this! What a bitch! \n\n\"Then, when you arrive home, instead of taking her day off as she usually does, she has been in the kitchen preparing a meal. More specifically preparing your favorite meal! She sets the table with the nice dinnerware and has candles on the table. A nice romantic dinner for two. You help her clean up and touch her a lot. She asks you to put on a romantic movie and you 'find' a romantic movie you didn't even know you owned, and it's not just any romantic movie, it is THE most romantic movie...ever! It is on EVERY woman's top five list, including mine. I'll bet it was right on top of the stack!\"\n\n\"How did you know?\"\n\n\"I know you, Gordy, you would have put in the first one you found so it must have been on top.\"\n\n\"Yeah...you know me a little too well.\"\n\n\"Anyway, You put in the movie and when she comes out she has tied her blouse up above her waist exposing her midriff and accentuating her boobs.\"\n\n\"I didn't tell you that about her boobs\"\n\n\"I'm a woman, that is the usual reason we do that with our shirt, besides it really cute.\"\n\n\"It was.\"\n\n\"Besides the minor wardrobe alteration, she brings two glasses of wine one for each of you. Then she sits down close to you.\"\n\n\"But not real close,\" I corrected.\n\n\"It doesn't matter, you noticed and that was the goal.\" I still wasn't following.\n\n\"She complains about her sore feet and you offer a foot rub. Now as a woman I am always open to a foot rub, but it is always from someone I care about because I always get turned on. You expand the foot rub up her legs a little. She stops the movie for a bathroom break and you both leave the room for a few minutes. I bet she changed her underwear, was she wearing sexy or practical? Never mind, you wouldn't know the difference. Back to the scenario, she comes in with more wine, pretends to be drunk and this time sits right next to you.\n\n\"Pretends? I'm sure she was drunk! She isn't a drinker and had at least one glass.\"\n\n\"Yeah...no, I'd be willing to bet she had little or no wine and was faking it at least a little. Then she leans into you and looks into your eyes and the next thing you know you're kissing and making love. This would be a wonderful story except the next morning you apologize to her, tell her it was a big mistake and that you'll never let it happen again!\"\n\n\"I meant it, even though...\"\n\n\"You love her?\n\n\"Yes. I love her!\"\n\n\"Don't you see it yet, Gordy? She's in love with you! I'll bet she has been for some time now, just like you.\"\n\n\"How do you know that?\"\n\n\"It's the way she looks at you, particularly when you aren't looking. And you, Gordon, I think you've loved her from the start.\"\n\nShe was right, at least about me, I have loved her from the first weekend she spent with me, I was just afraid to admit it to myself. But Amy in love with me? How can that be?\n\n\"But I'm so much younger than her.\"\n\n\"Does that matter to you? Is she too old for you?\n\n\"NO! Of course not! I am in love with her and her age doesn't ma...,\" suddenly it sunk in; She was in love with me! Amy loves me! OH! MY! GOD! She loves me!\n\n\"Ah...I see the squirrels are starting to turn the wheels in there. You figured it out...or rather I laid it out for you! I swear Gordy, you're as dense as a post!\"\n\n\"Oh God, Jess, I have to get her back. What am I going to do? I don't know where she went! How will I find her?\n\n\"Well, it seems to me you are going to be in need of a nanny. I wonder how one goes about finding a nanny?\"\n\n\"Dammit, Jess, I don't want a replace...,\" Jess was rolling her eyes and it finally dawned on me.\n\nI grabbed Jess and kissed her on the mouth, totaling surprising her. \"Jess you're a genius, thank you for your help, I have to go. \n\n\"Wait! Before you leave I have something that may help you to stay focused.\" \n\n\"What?\" But she had left the room already. Soon she returned and handed me a small box. I opened it and took out a set of wedding rings made of white gold with a small but lovely diamond in the engagement ring and a series of smaller diamonds half way around the wedding band. They were beautiful and except for a small amount of wear on the bottom, looked brand new.\n\n\"They were Grandma's.\" she said,\"I didn't want them, they aren't my style, but somehow I think they would fit Amy perfectly.\n\nShe was right, the rings 'looked' like Amy, I was sure she would love them\n\n\"Thank you, Jess, I hate to ask you, you've done so much but can you keep the kids a few more days, I am going to be busy.\"\n\n\"Sure, don't worry about them. I'll need a few more diapers and stuff but I'll stop over later. Now go find Amy and let me know what you find out, idiot\". I didn't hear the idiot part, I was already gone, but she always adds that when she tells the story.\n\nOn the way home I devised a plan that I hoped would get my Amy back. I hoped it worked. It had to work!\n\nThe first thing I did was stop at my office at the University. I wasn't a professor, so it wasn't very big, just a desk, two file cabinets and a bookcase that covered an entire wall. My desk was dominated by an IBM computer monitor which was wired into the Law department mainframe. It was the most up to date model, but I had yet to really learn how to operate the monster. I still used a typewriter, pencil and paper and looked up law briefs the old fashioned way. My specialty as a legal historian was becoming more important than ever. I loved the law and I loved history but I wasn't interested in litigation and courtroom procedure so I did not study to become a lawyer. I only had a masters degree but in reality, I knew a great deal about the law and could have, as my mentor suggested over and over, just maybe pass the bar exam. I had used my research skills and found the computer to be helpful in my research about Amy. \n\nI found the folder of recommendations and references that Amy had given me and was about to leave when I saw a note I had left on my desk about the bastard that had raped my Amy. I went to my safe and took the file I had put together on that prick Senator Bradford Foster. I was going to show it to Amy, if I found her and let her decide what to do with it.\n\nWhen I got home I looked in her references and found on her resume, a placement agency that she used. It was worth a try. They were open seven days a week, evidently some people needed a nanny right now! It made me laugh a little, the place was called Granny Nanny Agency. I called and got an answer right away.\n\n\"Granny Nanny Agency, This is Monica speaking.\"\n\n\"Yes my name is Paul LaMont,\" (I'm not good at lying but over the phone and for this noble purpose I would do anything to get her back), \"I'm interested in getting a Nanny for my two children...a particular nanny to be specific.\"\n\n\"Alright Sir, but first some information. What are the ages of the children?\"\n\n\"We have a four year old son and a two year old daughter. Do you need their names?\"\n\n\"Not just yet. You mentioned a specific Nanny, who might that be?\"\n\n\"I had a referral from a friend who had a wonderful nanny a year ago and told me about her, Amy James?\n\n\"Yes, she was off our registry for about 9 months and just today came back to us. She is one of our best. We need to do some checking before we go on, if you are in a rush we can get this done today but we need a couple of hours.\"\n\n\"Oh that would be fine.\" Secretly I was dying inside a few more hours! Damn.\n\n\"Where are you employed?\"\n\n\"J. G. Davis Real Estate.\" That was Jess's name, at least it would be if she married Ray.\n\n\"Address?\n\n\"1120 University Place, here in the city.\" That was the address of the Law Offices but we rarely use the street address, we have numerous Post Office Boxes.\n\n\"Phone number?\"\n\n\"706-8920\" That was Jess's number, I hope she catches on and plays along if they call\n\nher.\n\n\"What is your annual income?\"\n\n\"$180,000.\" This was a real whopper but I couldn't low ball it, they may tell me I couldn't afford a Nanny, which would be true!\n\n\"Do you have any criminal record?\" \n\n\"No.\" I hoped Paul LaMont wasn't an ax murderer. Maybe I should have borrowed the name of someone I knew, but too late now.\n\n\"I think that is enough to get us started. Where can I call you when we have checked things out?\n\n\"706-2131\" I had to give her my real number there was no way around it.\n\n\"Oh one more thing, Amy has attached a note to her resume. She will not work for a single Dad. She wouldn't explain why. So are you a single father?\"\n\n\"No. My wife just went back to work Her name is Alicia.\"\n\n\"Well that should do it, I'll call you back as soon as we speak to Amy.\"\n\nWe hung up and now all I could do is wait. \n\nI quickly called Jess, I had to make sure she backed up my story.\n\nThe phone rang four times with me getting more panicked with each one. Finally she answered.\n\n\"Hello?\"\n\n\"Jess, no time to explain but a Monica from a Nanny Agency called \"Granny Nanny Agency\" will be calling. I gave my name as Paul LaMont, I work for you making $180,000 a year, oh, and the name of your business is J.G. Davis Real Estate. Play along please.\"\n\n\"Wh..What?\"\n\n\"Just play along, Please? Its the agency Amy is using. They should be calling any minute, bye.\n\nI was on the edge by then, the chances of this working were pretty slim. Either Amy would figure it out or their background check into Paul LaMont would throw up a lot of red flags. But maybe, because it was a Saturday afternoon, there would be minimal information available, and by Monday I would have either struck out or I would have my Amy back with me and she would be permanently off their registry.\n\nI was going off the wall by the time the phone rang again.\n\n\"Mr. Lamont?\"\n\n\"Yes?\"\n\n\"You're in luck Mr. LaMont, Amy is rather in a hurry to find a family and has agreed to meet you for an interview at the Jolly Roger restaurant on Frankfort Way. Do you know where that is?\n\n\"Yes. I do\"\n\n\"Would 5:00 this evening work for you?\"\n\n\"Yes.\"\n\n\"Good, I have made a reservation there for dinner for two. You can discuss terms over dinner. If you agree to hire Amy we will collect $500.00 from your credit card so I will need that card number.\" That was pretty steep! But it would be worth it to get Amy back.\n\n\"What if we decide not to work together.\"\n\n\"We will collect $100.00 as a service fee plus any applicable fees for checking out your credentials, which usually amount to about $150.00. Are you still ok with that?\n\n\"Yes.\"\n\n\"Number of your card, please.\" I gave the number on my card, I had to. But when it came to name on the card. I was stuck. I had to give Paul LaMont. Maybe it would still go through. \n\n\"Okay Mr. LaMont, I know that you will be very happy with Miss James she is one of our best Nannies. You be good to her now, her last job really tore her up, she went out on her own for that one and didn't do enough checking. \n\n\"Oh I'm sure we will just love her.\"\n\n\"Goodbye.\"\n\n\"Bye.\"\n\nI should have jumped for joy but it tore me up that she was hurt..that I really hurt her so badly and I love her so much! I hope I have a chance to make it up to her. If she gives me that chance I will make it my goal to make every day of our life together a day of joy for her. I swear it!\n\n5:00 PM that was only 2 hours away, just enough time to shower shave and get dressed. I wanted to get there plenty early so I would be there waiting. The Jolly Roger was an upscale restaurant even though it sounds like a burger joint. Dinner there would likely be pushing my credit limit but Amy was worth any amount of money. I would lie, cheat, or steal to get her back...hell, I already lied several times and I probably cheated Granny Nanny Agency out of a commission. I hoped I would end up stealing Amy's heart!\n\nI arrived at the Jolly Roger and fortunately was able to get a table in the back. I feared they would want to place me by a front window then Amy would see me and run away. In the back I would have a chance to catch her and talk with her before she ran out of the place. Maybe, if Jess was right and Amy loved me, I would have a chance but if not I needed as much time as possible to make my case. I wanted her back no matter what!\n\nI waited and could barely hold still. I ordered an appetizer from the menu and about had a cow at the price, I could feed the kids for a week! I couldn't eat though my stomach was convulsing.\n\nThen suddenly she appeared...She was absolutely gorgeous. She came in and asked the maitre d' where I was seated and was shown the way. She got about thirty feet from me when she realized it was me and turned to hurry out.\n\n\"Amy, wait!\" I called out but she didn't stop or even turn around. I was out of my chair in a flash and trying to catch her\n\n\"NO, AMY. PLEASE WAIT!\" I yelled at the top of my voice. Every person in the restaurant turned and stared at me and every conversation stopped. All you could hear was the canned background music but I didn't care. I chased her to the front of the restaurant where the maitre d' tried to block my exit after her, bless his heart he meant well, but I was not to be deterred, he was no match for me and I sent him sprawling. \n\nShe hurried out of the restaurant, but it was there I caught up to her and spun her around to face me.\n\n\"Amy please listen to me, I think we had a misunderstanding...!\n\n\"What did I misunderstand? That you think last night was a mistake?\"\n\n\"Yes! Well no...\" she turned to go. \"Wait let me talk to you Amy, I need to explain!\"\n\n\"What do you have to say then, say it now, don't beat around the bush - tell me!\"\n\n\"I..I..need to explain!\"\n\n\"I don't have time for this,\" she cried and turned again to go.\n\n\"I'm trying to tell you.\"\n\n\"Then tell me Gordon. Tell me how it was all a mistake, tell me how you are sorry it ever happen..\"\n\n\"I LOVE YOU, AMY! I love you, dammit!\"\n\n\"You have a funny way to show it. Why did you apologize to me and run out, I felt like a cheap one night a stand.\"\n\n\"I'm sorry.\"\n\n\"Apologizing again\" she said with exasperation but she didn't turn to go...a good sign!\n\n\"I was ashamed of taking advantage of you. I was sure you would hate me for getting you drunk and taking advantage of your lowered inhibitions to sleep with you.\"\n\n\"Gordon...first I wasn't drunk, not even close!\"\n\n\"But you had at least two glasses!\"\n\n\"No, I carried around the same glass of wine all night, I only had a few sips, you on the other hand...\"\n\n\"Oh, you don't have to tell me.\" I had finally lost the headache about the time Jess explained things to me, \"But, you stumbled and even said you were a little tipsy.\"\n\n\"I was making a joke! And I did get a little tipsy but that's along way from being drunk.\"\n\n\"So...you knew what we were doing the whole time?\"\n\n\"More than that, I pretty much planned the whole thing.\" She smiled sheepishly. It was the first time she smiled at me today, I knew I was making progress even though I was very confused.\n\n\"Planned it?\"\n\n\"Yes, the goodbye kiss, the romantic dinner, the wine, the movie, the glorious foot rub, which was marvelous, by the way, and everything after was exactly what I wanted! Except for the part where you told me it was an accident and you didn't mean it. I was so crushed, Gordon, it meant the world to me and nothing to you!\"\n\n\"Amy, my darling! If you knew the agony I felt wanting to be with you but knowing that you wouldn't really be interested in me because I was too young and you were so far out of my league.\"\n\n\"Gordon, age is just a number, you are who I want and I don't even know what the hell you mean about being 'so far out of my league'. Gordon, you and the kids are the only 'league' I'm interested in.\"\n\n\"Wait a minute, you said you planned everything including the accidental goodbye kiss. You didn't plan that, I did that by impulse and didn't even realize it until I was down the walk.\"\n\n\"Oh I planned that too, what do you think the strip tease in the bathroom was for?\"\n\n\"What?\" I turned red from humiliation, my perversion exposed \"Oh my God Amy! I violated your privacy so badly can you ever forgive me?\"\n\n\"Gordon, listen to me, I'll repeat it for you. I knew you were there all along. I was in love with you and wanted to nudge us out of the friends/nanny/mother-in-law rut. I pulled off a pretty sexy tease if I do say so myself. It turned me on so much, I just had to masturbate, I think you liked that part the best and it was totally impromptu!\"\n\n\"Amy,\" I started to get the idea at last, \"I didn't have a chance did I?\" I smiled and drew her into my arms.\n\n\"I did everything I could to win you.\" She smiled and that's when I kissed her. I kissed her hard and long and when I released her she smiled the sweetest smile.\n\n\"I love you, Amy\"\n\n\"I love you, too, Gordon.\"\n\nI chose that moment to drop to my knees, I was in a puddle from a shrubbery sprinkler but I didn't notice. I drew the box from my pocket and started to open it.\n\n\"What are you doing, Gordon?\" She asked. I think she honestly wasn't expecting this.\n\n\"I don't think you planned this, but I did. I love you, Amy, and I want to spend my life loving you, will you be my wife?\" As I was speaking her hand came to her mouth in surprise and tears filled her eyes. Her gaze moved from my eyes to the rings and back again several times, then she tearfully shook her head and said:\n\n\"Yes, I'll marry you, Gordon!\" \n\nI took the engagement ring from the box and slipped it on her finger, it fit rather well, my grandma was a small woman too, as I remember.\n\nAt that moment a large cheer and applause came from within the restaurant. I looked toward the sound and saw through the large windows a crowd gathered. Many of the women and a few of the men were in tears. I started to turn toward the crowd but Amy at the same moment leapt into my arms and wrapped her long legs around my waist and kissed me thoroughly. I almost fell over backward from the force of her leap. Then, I completely forgot about the crowd and there was only...Amy!\n\nMy heart about burst with joy, I had won my girl! She loved me and I loved her and nothing else mattered.\n\nWe stood and kissed for a bit until we decided we were becoming a spectacle. \n\n\"Do you want to go in and have dinner?\" I asked.\n\n\"I am hungry but I don't want to share you right now.\"\n\n\"I need to pay the bill, then we can go home.\"\n\n\"We need to stop by my motel room and pick up my things\"\n\n\"Okay, just give me a moment.\" I went back into the restaurant and sheepishly addressed the maitre d', \"I'm sorry for knocking you down, I need to pay my bill.\"\n\nThe man had tears still in is eyes, \"There is no bill, it has been covered. Congratulations, by the way.\"\n\n\"I smiled and said, \"Thank you and thank whoever paid my bill.\"\n\n\"You're welcome\" he said and smiled, still wiping tears away.\n\nI returned to Amy and guided her to the car. We walked without speaking, just looking at each other for the first time with new eyes...the eyes of love!\n\nShe slid into the front seat, picking up the folder that contained her Recommendations and references and just below it the folder that contained the information on the prick Senator.\n\n\"What's this?\" she asked as she opened it.\n\nI tried to keep her from looking at it but failed.\n\n\"You had me investigated?\" I could tell she was getting angry.\n\n\"No, Amy, I had HIM investigated. He's a rapist and child molester, he deserves prison.\"\n\n\"But I don't want to pursue any charges, I just want to forget about him.\"\n\n\"...and I'm going to help you do just that!\" I exclaimed as I took the folder and stuffed it in the glovebox. Then I gave her a reassuring smile, \"Now what motel were you staying in?\""
    ],
    "authorname": "Adamdavidson",
    "tags": [
        "pregnant",
        "romance",
        "incest",
        "taboo",
        "love",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-liberation-of-amy"
}