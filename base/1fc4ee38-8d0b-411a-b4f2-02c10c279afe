{
    "title": "Reacquainted Pt. 03",
    "pages": [
        "20.\n\nThe jumpsuit was comfortable, and he could even get used to the mask, but the cape was a real pain in the neck. It wasn't attached to the mask\u2014had it been that way in the comics?\u2014and had to be tied separately, and he kept sitting on it and half choking himself. The boot tops felt kind of silly too. He was wearing them over a pair of lace-up rubber-soled oxfords: good comfortable cop shoes. If he had to move fast for any reason...\n\nTheo had thought about showing the email to Serge, then thought about showing to his Lieutenant. He probably should have. What if there was really something? Man, he'd never pretended to be Einstein, but he was sure feeling dumb now, getting out of his F-150 in a stupid Batman suit in an empty parking lot ten miles from nowhere. But the lot wasn't quite empty either. That was Jen's Elantra, so she'd driven herself here, probably. He supposed that was a good sign, and there was another truck as well, a Toyota, couple of years old. Theo got a pen and a pad from his glove compartment and wrote down the license plate number. Should he call it in? Course he should. It'd take almost no time, and any information could be useful just now. Feeling self conscious, he reached back into his truck for his cell phone, called the plate in, waited a few, took the call back: 2010 Tacoma registered to a Magnolia Sutter, no tickets, no red flags, nothing.\n\n\"Well hell!\" Swearing; Serge would have swallowed his Tic Tacs. Deciding he'd rather not be recognized, Theo untied the cape, put the cowl and mask over his head, and retied the wretched thing. Then he took his gun\u2014Glock 22, .40: don't leave home without it\u2014and headed around the side of the warehouse.\n\nHe found an unlocked door which led into what looked like a reception area. A construction paper bat signal, black on yellow, was taped to a door to the right of an empty desk. Feeling more foolish by the minute, Theo raised his gun, stood to one side and pulled the door open with his left hand. He saw a warehouse floor divided haphazardly into workspaces by everything from cinderblock to felt partitions. Pinned to one of the later he saw another bat signal. A note under it said: \"Back of the building, first door after the water fountain.\" The gun, the bat-suit: Theo felt like a prize idiot as he headed to the back of the building, found the door with\u2014whaddya know?\u2014another effing bat signal taped to it. Underneath another note: \"Please knock.\"\n\nTheo thought back to the email. Behind this door was Jen, and somebody was holding an empty gun to her head. All he had to do was say 'red', and whoever it was would hand him the piece, right? OK, so, knock? Kick it in and lead with the gun? 'Your treat will continue.' Better be a hell of a treat. Officer Theo Sutcliffe raised a blue-gloved hand and gave three loud knocks.\n\n21.\n\n\"Come in.\"\n\nThe voice was unfamiliar: female, low, a little husky, a sexy voice. Strange thought to have just then. For no reason at all, Theo decided not to lead with his gun. He'd hold it down by his side, but if this was just some kind of a joke... He pushed open the door, and walked into the room.\n\nHe saw his wife, her wrists shackled together and attached to a hook in the ceiling. She was wearing a white dress\u2014her Vicki Vale costume, probably; she hadn't let him see it, wanted it to be a surprise. She looked...lovely. Behind her and slightly to her right, holding a small revolver under his wife's chin was...Catwoman?\n\nHis was startled to discover he'd raised his gun. He saw the other woman\u2014Catwoman\u2014react. She lowered the revolver to her side. She spoke. Four words: \"Unnecessary. Remember the email.\" He lowered his gun, breathed deeply, said \"Red.\"\n\nCatwoman\u2014he had to keep calling her that; he was sure he'd never seen her before\u2014walked towards him. She was...it was as if she'd walked out of his most secret erotic dreams...she was beautiful...sexy...he didn't have the words. She moved gracefully, hips undulating in a hypnotic rhythm. The black catsuit looked painted onto her, and it was opened to...he watched her breasts bounce gently as she walked. He looked up to her face, saw her notice his stare. He blushed under the mask. She smiled. Then she handed him the revolver. He broke the cylinder: empty, as promised. He examined the gun, noticed the sealed barrel. \n\n\"This is...useless. It's a prop, a toy.\"\n\nShe smiled and nodded.\n\n\"OK, first I'm going to check on my wife, and then I'm going to examine this room.\"\n\nShe nodded again.\n\nWith a gun in each hand, he walked towards his wife. She watched him come. Her eyes were bright and alive, but she seemed to be making an effort to keep her face free of any expression.\n\n\"Jen, did you write me that email?\"\n\nShe nodded. No words; like Catwoman.\"\n\n\"Are you alright?\"\n\nAnother nod.\n\n\"Are you here...um...of your own free will?\" It sounded stilted, almost official.\n\nAnother nod.\n\n\"Is this...my treat?\"\n\nA small smile.\n\nTheo stood, uncertain. Finally: \"I'm going to take a quick look around.\" She nodded again.\n\nHe wandered around the mostly empty room: gray industrial carpet on the floor, three non-descript lighting fixtures on the ceiling, also some ring bolts and hooks, more of the same on the walls. It occurred to him suddenly that the ceiling itself was a later addition. At 10 feet high, it was much lower than the unfinished ceiling of the warehouse proper. He took in the flogger and the riding crop, both now hanging on hooks behind Jen. He noticed\u2014and wondered how he'd missed seeing it before\u2014what looked like a large hardwood table top canted almost vertically on some sort of mechanical base. Various chains and strips of fabric hung from it. What the...? After a moment he headed into the small bathroom, took at quick look into some trashbags\u2014clothes in one, some sort of cushions in another\u2014and examined a purse and the duffel, brought out a large folding knife, held it out towards Catwoman. \"What's this?\"\n\nShe smiled: \"Remember the email. Trust me. Your wife does.\"\n\nHe looked toward Jen, who nodded.\n\nTheo said: \"If I give you this empty, filled toy gun back, we...um...do something...like play...or...\" His imagination failed him. \"If I say 'red' at any time during the evening, whatever we're doing stops. And the same for Jen, right? She can say 'red' too?\"\n\nCatwoman: \"We'll call her Vicki, but yes, that's right.\"\n\n\"Am I going to...enjoy this?\"\n\n\"I have no idea.\" Then she let her eyes travel slowly down the length of his body. Her gaze lingered on his thighs, then on his chest, arms and shoulders. Then she spoke softly: \"I know I will.\"\n\n\"Will you excuse me for a moment?\" At her nod, Theo left the room, went back out to his truck, and locked his Glock in the glove compartment. Then he came back into the room, and held out the Taurus. The little golden claws clicked as Catwoman took back her gun.\n\n22.\n\nWithout another word, she turned and sauntered back to her captive. She stood slightly behind the bound woman, grabbed a fistful of blonde hair, and jerked her head back violently. Vicki squeaked in pain, and Batman started forward. But before he had taken two steps, the gun was again pressed into the hollow of her throat just below the chin. He froze. \n\nIt was silly, he knew the gun wasn't loaded, but her moves were so quick, so vicious. He had checked, right?\n\n\"Just so we're all clear on the rules, Handsome: you will do exactly what I say, when I say, or I will blow what few brains your little bimbo has all over the nice carpet. Copy that, lawman?\"\n\n\"OK, sure...just...don't hurt her.\"\n\n\"Aw...why not?\" She giggled. \"It's kind of fun, you know? You should try hurting her a little. You might develop a taste for it.\"\n\n\"Alright, you're sick!\" He was shouting. Why was he shouting? And she was laughing at him.\n\n\"...and depraved and evil, blah, blah, blah. Stop talking, and listen.\"\n\nHe obeyed.\n\n\"Walk over to the platform.\" She pointed at the upright table. \"At the bottom you'll find a pair or ankle cuffs. Take off your shoes and socks, and those idiotic boot covers, and the cape. You can leave the mask. Then bend down, put the cuffs around your ankles, and fasten the buckles.\"\n\n\"Wait a minute...\"\n\n\"Do it now, or I'll hurt her.\" The gloved fist tightened in the blonde hair. Jen/Vicki made a little frightened sound. But she didn't say 'red.'\n\nSlowly he moved sideways, never taking his eyes off the two women, until he stood in front of the table, or whatever it was. Then he did as ordered, taking off shoes, socks, boot covers, and cape and cuffing his ankles. The shackles were low enough to allow his feet to remain on the floor. He straightened, and saw that Catwoman had moved quickly. She now stood perhaps five feet to his right, the gun in her right hand still trained on Vicki. \n\n\"Stretch out your right arm, NOW!\"\n\nHis body responded to her shout without conscious though, and she handcuffed his right wrist with a pair of cuffs attached to a chain which led around the back of the platform. He raised his hand to see how much play there was in the chain, but she darted behind him, and he heard the chain rattle at the same time as he felt his arm dragged down to his side. She re-emerged from the other side of the table holding another pair of cuffs on another chain. She gave him an evil smile.\n\n\"Got you now, Batman.\" she purred. \"Both ankles and one wrist, and I can have you flat on your back at the pull of a lever.\" She dropped the cuffs and sauntered back to the row of hooks, letting him watch the roll of her hips under the skintight spandex. Then she came back and stood directly in front of him, just out of his reach. \"Now, why don't you be a good little superhero and let me cuff your left wrist, so you don't get any cute ideas. That way I won't be tempted to shoot your girlfriend.\"\n\n\"I don't think so.\" There really wasn't much he could do physically\u2014the ankle cuffs restricted his range of motion more than he would have anticipated\u2014but he felt like Batman wouldn't just...\n\n\"Pretty please?\" Her fingers were toying with the zipper just over her cleavage. She pulled it down an inch. Her breasts were large, and thrust against the slackened tension. \"More?\" He said nothing. She said \"Give me your wrist.\" \n\nHe said: \"Make me.\"\n\n23.\n\n\"Make me.\" Mags could swear the two little words were rearranging her molecules even as she stood in front of him, teasing him with her breasts. Her blood boiled, her thighs twitched, her mouth was dry, her lips were wet, and her pussy, her cunt, her honeypot her fuckbox was melting like butter in a skillet. Mags had become a dominatrix for a couple of reasons. At first she'd thought she was doing it for the money, and the money had been nice. But she'd also known that the work reflected her sexual inclinations. She liked being on top, controlling, seducing; the active partner rather than the passive. In the almost three years since she'd begun topping, she'd been in potentially sexual situations with many partners: mostly men, but some women; old, young, tall, short, attractive, ugly, from all sorts of places and all walks of life. But she hadn't actually had sex with any of them. A major component of domination was denial. Dressed in pantsuits, school uniforms, twin sets, lingerie, rubber, and faux-fur, she had denied...had to be thousands of orgasms, and half of them had been\u2014potentially\u2014hers.\n\nProfessionally, of course, she'd had to. Doms don't fuck clients; prostitutes do. And whether you agreed with the law or not, prostitution was illegal. Mags loved most aspects of domination, but denial just plain sucked. So she'd looked elsewhere for satisfaction. Her last few lovers had come from the art world, and they'd been gentlemen: intelligent, handsome, gym-fit, more-or less wealthy. Like Don, they'd been good in bed, but not surprising, not spontaneous. And when she'd tried to push...\n\nBut now, things were different. The man bound before her was tall and powerfully built. He was confused and a little angry, but he was aroused. She could feel it pouring off of him, and she could see it too. The blue shorts were a little less tight than the nylon under them, but she had watched as she'd teased, and now she noticed...hmmm. That must be uncomfortable.\n\nShe grinned to herself. And she could do anything, everything with her big, handsome, hung prisoner. She could be capricious, cruel, or very generous with him, or with her, with both of them. No denial tonight. It was Halloween\u2014or near enough\u2014and she was Catwoman, and Batman had fallen into her trap. She had him and his little princess at her mercy, and she wasn't feeling particularly merciful.\n\n24.\n\n\"Make me.\"\n\nShe looked him in the eye. Then slowly and deliberately\u2014making sure he knew what she was doing\u2014she let her eyes wander down to the bulge beneath the blue shorts. \"Guess what, Princess?\" she called over her shoulder, \"I think your boyfriend's cock is getting hard. I've been showing him my tits, and I think he likes them.\"\n\nColor rushed to his face, and she laughed in triumph. \"You do like them don't you, Batman?\" She dropped the cuffs, and reached up to cup her breasts beneath her catsuit, squeezing them, jiggling them, pushing them together to emphasize her cleavage. She pouted and purred. \"M-rrow. Do you like them better than hers? They're bigger, aren't they? Is that why you won't let me cuff your other wrist? You want to 'cop' a feel?\" She laughed again, as she watched his jaw set. His body writhed. His erection was probably really uncomfortable now, and he had a hand free, but he made no move to rearrange things. Instead, to her astonishment, he held out his left wrist.\n\n\"Oh that's purr-fect,\" cooed Catwoman. She stepped back, allowing her other captive a better view. \"Have a look at this, Vicki-kins. You must suck a mean cock, Honey. I think he wants me to cuff him, so he won't be tempted to touch. Am I right, Bats?\" She giggled. \"Oh goddess, I am right, aren't I? You're afraid of what you'll do if I were to let the girls out to play, aren't you?\"\n\n\"Will you shut up and cuff me already!\" snarled Batman, through clenched teeth.\n\nMaybe I don't wanna anymore.\" Her voice was high and girlish now. \"Maybe I wanna get naked and nasty, and feel Batman mauling my big, soft titties. Maybe I want you to see how much nicer they are than your little slut's over there. Oh, I know!\" The wicked grin was back. \"We'll have a little beauty pageant: just two contestants and one event.\" She stalked into the bathroom, came out with the folding knife, and opened it with a click. She paused for a moment. \"Anybody have anything colorful to say?\"\n\nJen and Theo were facing each other over a distance of about eight feet. Their eyes met. Theo looked the question. In his mind, the knife had replaced the gun as his primary concern. Catwoman, whoever she was, was crazy; hotter than hell, smart, inventive, whatever, but crazy as a loon. Who acts like this, talks like this, outside of the movies? But Jen seemed to know this woman. Jen trusted her. Jen was here because she wanted to be, and he was here because Jen wanted him to be here too. Jen's lips were parted. She looked beautiful, terrified, maybe even turned on. She wasn't going to say a word. Fair enough. Neither would he.\n\nMags regarded them both. The moment passed; no safe word. She walked slowly over to Jen/Vicki, who watched nervously as the light caught the sharp steel blade. Catwoman was back, and she wrapped a long arm around Vicki Vale's slender waist as she examined the knife in her right hand.\n\n\"We're going to have a 'Best Boobs' contest, Handsome. Vicki's going to show you hers first. You'll like that. I mean, you've seen them before, but I'm assuming you like them. Then I'm going to show you mine. You can't touch hers, because I don't want you to, and anyway you've touched them before.\" Then, in a seductive purr: \"But you can touch mine. It's only fair, right? You're the judge, and you should have all the information you need to make an informed decision.\"\n\n\"Now for the prizes: if you like hers better, all you have to do is say so, and I'll let you go: both of you, all done, free as little birdies. But if you like mine better...you stay a little longer, and tell me what else you like. Deal?\"\n\nBatman: \"All I have to do is say I like...um...Vicki's better than yours, and we can go?\"\n\nCatwoman: \"That's right, but you do have to...touch. Fair is fair, right? And it's not like you don't want to.\"\n\nBatman: \"Fine. It's a deal.\"\n\n\"M-rrow!\" Catwoman looked at the bound blonde next to her, and licked her lips with her long tongue, making sure Batman could see. Then she came around in front of Vicki and put her arms around the smaller woman's waist. She leaned in and kissed the side of her captive's throat; then she dragged her tongue up towards Vicki's right ear. She traced the delicate curve with her tongue, and nipped the lobe. Vicki groaned. Mags breathed, as softly as she could: \"How you holding up, Honey?\"\n\nJen's eyes widened. She whispered: \"Can I...\" Mags kissed her lips, gently, effectively hiding Jen from the sight of her bound husband. \"Just talk into my ear, low and slow. I'll hear you. You having fun?\" Her lips moved back to Jen's throat.\n\n\"Oh God, yes!\" Jen sighed. \"Oh, Mags, you are so hot, and Theo is so...yummy, my panties...mmm, that feels good...my panties are drenched!\"\n\nMags flicked Jen's ear again, eliciting another hum. \"Good. Now in a minute, I'm going to cut away the top of your dress. Stay still while I'm holding the knife, but after that, struggle a little.\"\n\n\"Why?\"\n\n\"Trust me, OK? He obviously adores you, but he's got a real damsel-in-distress jones too. Just go with me on this.\"\n\n\"OK. Are you going to use the...\"\n\n\"Shhh. Trust me.\"\n\n\"'K.\" Then louder: \"Stop it! Leave me alone. Take your hands off me...oww!\n\nCatwoman's hand was back in the blonde hair. She pulled Vicki's head back, exposing her throat. Then she raised the knife, and let the blunt edge glide, very gently down the front of her prisoner's neck.\n\n\"Feisty little bitch you've got here, Bats.\" Then with a twist of her hand in the hair, she forced the smaller woman to look her in the eye. \"Nice and still now, Kitten,\" she sighed. \"Be a shame if my hand slipped and I had to shampoo the carpet. Blood stains can be a bear.\"\n\n\"No, please don't...\" whimpered Vicki, but she held still as Catwoman put the knife to the neckline of her dress, and forced it outward, making a jagged tear in the beadwork. She then folded the knife, tossed it on the floor, walked around the now-squirming blonde, and grabbed the fabric on either side of the cut.\n\n\"Pay attention now, Handsome,\" Catwoman called, \"we want an honest opinion, don't we, Cutie-pie?\"\n\n\"No, oh God, don't...let go of...\"\n\nVicki screamed as Catwoman tore the top of her dress apart, exposing her bra-less chest. Her breasts were apple-sized, pale, round and high, with tiny pink areolas surrounding fat red nipples, and they bounced enticingly as Vicki struggled to escape Catwoman's clutches. To no avail, the clawed gloves reached around, cupped and squeezed, as the mocking voice sounded close to her ear.\n\n\"M-rowrr! Ooh, Batman, I can see why you'd want to keep these around to play with! What pretty little cupcakes you have, Princess.\" Then: \"Stop squirming, bitch! This is a contest. Act like a professional!\"\n\nCatwoman wandered over to Batman, keeping to his right. He had said nothing, but his body was bent slightly forward at the waist. Watching the beautiful brunette tease and torment his woman had made him angry, but it had also made him as hard as he could ever remember being. His cock was tangled somewhere between his underwear and the jumpsuit, and he was really uncomfortable.\n\n\"Aw, poor Puddin',\" said her mocking voice over his right shoulder. \"I'd take care of that for you, but I wouldn't want to prejudice the judging.\"",
        "Breathing hard through his nose, and gritting his teeth, Batman finally found the slot in the jumpsuit. With his left hand in his shorts, he managed to rearrange himself with his rock-hard dick lying flat against the bottom of his belly. When he finally straightened he was confronted by the sight of Vicki looking like a sacrifice to some pagan god of lust: eyes wide, lips parted, hair loose, breasts exposed. He wanted to save her. He wanted to...to...take her. He wanted to...he didn't even know. He just effing wanted.\" Then the voice spoke again.\n\n\"She's gorgeous isn't she? So dainty, so helpless, and so fuck-able!\" The last word came on a whisper. Then: \"Think she's wet? I do. I bet her little pussy is all wet and warm and ready. What would you do if I let you go right now? Would you even bother taking her down?\" Then, just a breath in his ear: \"Could I watch?\"\n\n\"God, you're an evil bitch, Catwoman, you know that?\"\n\n\"Your fault, Bats. You've had me in your bat-cuffs I don't know how many times, helpless, arms behind my back, tits thrust out, lips moist, cunt dripping, and you never laid a glove on me. A girl gets frustrated.\"\n\nShe sauntered back towards Vicki, back into his line of sight. \"Moving forward with our little contest: Little Miss Priss does have an adorable pair of knockers, but in the interest of fairness, I think they should be displayed to best advantage. Let's get those cute little nipples nice and hard.\"\n\nShe bent forward, grabbing the little blonde around the waist. The position thrust her ass out, and she gave it a saucy wiggle, then she captured a nipple between her lips, and began to suck.\n\n\"Oh God!\" squealed Vicki, forgetting for a moment that she wasn't supposed to be enjoying this. \"What're you...oh that's...hnngh! Don't...\" Catwoman released her right breast, tearing a sharp little \"No!\" from her victim before closing her lips around the left. Vicki's language broke down completely. She could no more deny the sharp jolts of pleasure which rushed through her breasts with every suck than she could forget to breathe. She gave herself completely over to sensation, making no more coherent sound than pants and yips. Then she felt her dress being rucked up over her thighs.\n\nCatwoman hadn't planned it, but the little bitch was so worked up it seemed inhuman not to take advantage. As she lifted the white chiffon with one hand, the other worked its way between Vicki's legs. Finding a pair of soaking wet French cut panties, she slipped on clawed finger underneath the gusset, found her captive's slit, and moved slowly upward. Finding her target she flicked Vicki's clit with her claw once, twice, and then the woman screamed for real.\n\nVicki's body shook violently, and her nipple was torn from Catwoman's mouth. She wrapped the arm which had lifted the dress around the little bound body, as her other hand pushed once, twice, and three times, wracking spasms ripping through her victim with each pressure. Finally the orgasms passed, and Vicki hung, exhausted and barely able to support her weight. Her breasts glistened with saliva, and her nipples stood out proud and swollen, all but obscuring the tiny areolas.\n\n25.\n\nTheo stood and stared at his wife. He had been with her for five years. He thought he knew just about everything there was to know about her sexual responses. He had never heard sounds like that coming from her. He had never seen her body...it was as if she had been electrocuted. What had she done, the other woman, Catwoman? He'd seen her kiss Jen's breasts\u2014should he be jealous? Maybe. His mind said maybe; his...his dick said 'do it again!' He'd never been this hard in his life. That was a solid fact...so to speak. But Catwoman looked liked she'd been holding Jen up by the...by her...by the middle of...oh, hell. What had she done? And could he figure out how to do it too?\n\n26.\n\nJen hung by her arms. Her wrists and shoulders ached. Her body was in pain from all that contracting, but it was also...do you say 'in pleasure?' Jen was terrified; terrified it would go on and on, and at the same time terrified that it would stop. What on earth did Theo make of it all? She half opened her eyes and snuck a look at his face. He seemed to be staring at her. Tough to tell through the cowl, but... And he looked\u2014no other word for it\u2014he looked hungry. He'd never looked at her like that. It scared her. She liked it. Mags had done it. Mags was in control of this runaway train. Mags had made her cum...and scream...and... Jen wasn't going to stop it. Theo could, if it turned out to be too much for him. Jen just wanted more.\n\n27.\n\n\"Batman?\" The voice was sweet, sing-song, then: CRACK! A forehand slap jerked his head to the right, and CRACK! The backhand snapped him back to the left. He tried to reach for her, but the one hand was manacled, and she was out of reach of the other. She'd hit him hard, and he was pissed, but so\u2014it seemed\u2014was she.\n\n\"We had an agreement, Handsome.\" Her voice was ice. \"You had a chance to gawp at her little girl boobies, now you need to pay some attention to me.\" Then: \"Oh, what's the matter? Haven't you ever seen a girl cum like that before? Haven't you ever made her cum like that before?\" Turning to Vicki: \"Has he, Angel?\"\n\nNo response.\n\n\"Pity. See if you can get that fucking supercomputer in your Bat Cave to teach you how to please a woman.\" Then: \"Pretty Vicki's my little slut now, aren't you, dear? If I promised to do that again, you'd do absolutely anything for me, wouldn't you? You might even tell me some of your Bat-boyfriend's secrets, mightn't you?\"\n\nNo response.\n\nCatwoman's laugh was cruel. \"Never mind; we can do the girl talk later on. We've got all the time in the world. Right now, I need Bat-stud here focused on the task at hand.\"\n\nShe turned her back to Batman and walked over to where Vicki hung, still breathing heavily. She reached out lazily and tweaked the bound girl's nipples, twisting until she heard a soft \"Please, no...\"\n\n\"Yours are nice. I like them. What do you think of mine?\" She reached for the zipper between her breasts and pulled it down slowly. The stretchy fabric pulled apart slowly revealing more and more pale, creamy flesh, brown teardrop-shaped areolas with small pink nipples standing proud in the center. Vicki stared. Catwoman had beautiful breasts, generous round, firm, natural tits; the kind of boobs reserved for porn stars and Playboy bunnies, the kind of knockers men dream about, fantasize about, the kind rich men try to buy for their trophies, the kind for which men leave their wives. \n\n\"Nice, aren't they?\" purred Catwoman. \"I think I'll let your boyfriend play with them a little.\"\n\nShe turned slowly to face the bound Batman. She walked towards him slowly, arms by her sides, her breasts bouncing gently with her movement. She came close, closer than she had yet come to his left arm which was still free. She moved slightly to his left, bent down, picked up the chain and the open cuffs.\n\n\"Remember the rules, Handsome?\"\n\n\"I like hers better.\"\n\nCatwoman froze. \"I'm sorry, did you just say...\"\n\n\"I like hers better. Can we go now?\"\n\nShe cocked her head to one side, contemplating him. Then she sighed. \"Oh Bats, I am disappointed in you. I thought you were a man of your word. You agreed.\" She pouted and purred: \"Pretty please, Batman? Come on, just put your hand out and pet my pretty titties. You know you want to.\"\n\n\"No. I'm not touching you. I like hers better. Now let us go.\"\n\n28.\n\nMags took a step back. She observed Theo. Did he want to end the game? He hadn't used the safe word. Did he remember it?\n\n\"Showing your true colors, are you, Bats?\"\n\nHe smiled briefly. He remembered. He said: \"Let us go, Catwoman. I'll give you an hour from the instant you cut Vicki lose. Run as far and as fast as you can, because the next time I catch you, I'll throw you in a six-foot cage with a ball of yarn and a litter-box, and tell 'em to lose the key.\"\n\nIt was her turn to smile. Good move, she thought; in character. Her smile became seductive. She cupped her breasts offering them to him in a final appeal. \"You sure? We kitties keep out bodies nice and clean.\" She locked eyes with him, raised her breast to her mouth, stuck out her long tongue, and brushed it slowly across the tip of her nipple. She held his eyes, noticed his breathing deepen: \"Unh...mmm, that feels so good, so soft, and tastes so sweet. C'mon, Handsome, aren't you just a little curious? Don't you want to know what a real woman feels like?\"\n\nHe did. He wanted her with all the ardor of a teen with his first Penthouse. It took every ounce of control he had to stick to his guns. \"I like hers better. We're going now.\"\n\nShe sighed. \"You're no fun. But if you insist, I suppose I'll just have to...\" She passed behind him on his left. At the last second she grabbed his wrist, cuffed him, and darted around behind the table to tighten the chain. He shouted and fought, but she'd done it too quickly. He was immobilized, strapped to the platform, helpless. She sauntered slowly around to face him. He looked furious.\n\n\"Catwoman,\" he growled, and his voice was low and dangerous, \"you said...\"\n\n\"I lied.\"\n\nShe waited, but he found nothing more to say, so she continued. \"Not very chivalrous of you, Dark Knight: a beautiful woman offers her body to you, and you reject her, out of hand?\" She headed over to the hooks on the wall, and took down the cat 'o nine tails. \"I may have to teach you some manners.\"\n\nThe cat was a wicked looking thing: black rubber handle with nine thick red leather straps knotted at the ends. She sauntered over to him, flipping the handle in her right hand, allowing the straps to splat softly in the palm of her left. Her breasts, still exposed, jiggled as she tapped. She faced him: a vengeful goddess regarding a heretical acolyte. \"What do you say, Bats, an even half-dozen?\"\n\nHis eyes were equally cold: \"Make it a dozen. I don't do things by halves.\"\n\nThe cruel smile returned to the eyes behind the mask: \"Brave man. A dozen it shall be.\"\n\nThen she picked up the folding knife, walked over to Vicki, and clicked open the blade.\n\n29.\n\nThe shout came from behind her: \"Wait, what are you doing?\"\n\n\"I'm getting ready to give your little slut the dozen lashes you asked for. I'd have said six was enough myself, but I suppose you know what the bitch can take...\"\n\n\"But I meant...I thought you were going to punish me.\"\n\nCatwoman turned to him, the sweetest of smiles now decorated her beautiful face. \"I am.\"\n\n\"But don't...you can't flog her with that thing.\"\n\n\"Of course I can.\" And when he continued to protest: \"Shut your mouth, Bats, or I'll double the dose!\" Then she turned to Vicki. \"Stand still, Princess. Time to lose the ball gown.\" She turned the smaller woman around to face the wall, tucked the blade into the strap between her shoulder blades and split it with a single cut. Then she notched the strip of beading just above the hips, and tore the back of the dress down the middle, leaving her victim naked, except for her panties. The knife made short work of them, and pretty Vicki Vale stood, bound and exposed and helpless. Catwoman smiled cruelly, as she waved the flogger slowly before her victim's face. And Vicki's eyes became very wide, as she understood what was about to happen.\n\n\"No!\" she whispered, \"oh, no...oh please...not that. Please don't...\"\n\n\"Shh, little Kitten,\" replied her torturess in the sweetest of voices, \"I'm so very, very sorry, but your boyfriend insists.\"\n\n\"No!\" shouted the bound man across the room. \"Stop it! I don't want...\"\n\nCatwoman turned quickly and strode over to him. He flinched as she raised a hand, but she put a clawed finger gently against his lips and said, very softly: \"Shhhhh, wait!\" Then she turned back to Vicki. \n\n\"How about it, Princess? Do you have anything to say before we carry out your sentence?\"\n\n30.\n\nTheo stared across the room into his wife's eyes. He'd been about to stop it, about to use the safe word. He didn't want to see her beaten. He, Theo, did not want to see his wife, Jen, beaten. So why was his...why was he so hard?\n\nHe felt a hot jet of shame, like bile in the back of his throat. He looked away, looked down, looked at her body. She was naked. He watched her beasts rise and fall with her breath. He saw the thatch of wispy blond curls above her...her sex. Wait a minute, had she...the thatch looked smaller. He could see the pink of her opening. His eyes lingered, then he was ashamed again, and his gaze snapped back up. God damn it! That was no better. Her blonde hair fell loose and messy sexy around her beautiful face. Her blue eyes were wide and bright. Was she afraid? Of course she was afraid; that crazy Cat-bitch was about to whip her...whip her where? Her back? Her bottom? That thought didn't help much either. What the hell was wrong with him?\n\nHe cut his eyes to where Catwoman stood, a few feet away. She scared him. She was nuts. She was...so hot, with the black spandex or whatever clinging to every gorgeous curve of her body. Her green eyes met his, and she smiled. She looked down his body, between his legs. She raised her eyebrows and pursed her lips as if to say 'What have we here?'\n\nShe moved close to him, closer than she had been. She cast a mocking look back at Jen/Vicki, and she leaned into him, pressing her naked breasts against his chest. Her clawed hands snaked around the back of his neck. He could feel her breath on his throat; then he could feel the point of her tongue, rough and warm and wet, as she licked gently from the side of his neck to the base of his ear. He moaned softly.\n\n\"Don't say it.\" She was breathing in his ear. Her voice was so soft, he couldn't be sure she'd spoken at all. \"Let her decide. She'll stop it if she doesn't want it to happen.\" Then her hand left the back of his neck, moved slowly down his body, caressing, scratching, then ever so gently pressing against his erection. \"And you want it to happen, don't you, Batman?\" She rubbed him through the shorts and the spandex. She was still whispering, but the teasing was back. \"Feels like you want it in a big way.\"\n\n31.\n\nJen and Mags had practiced with the cat. In the week leading up to their little adventure, she had met Mags here at the warehouse, they'd snuck into the room, and she'd stripped down to bra and panties. Mags had cuffed her to the wall, rather than the ceiling, and then she'd introduced Jen to the flogger, brushing its straps softly across her back to begin with, and then making a brisk figure-eight pattern, slapping the top of Jen's back on the downswings. It had stung. Eventually it had really stung. But Mags had been talking the whole time: a dirty, teasing monologue, telling Jen what a little whore she was, and how she needed to be punished. According to Mags, Jen just couldn't get her mind off of sucking big fat cocks, and letting strange men fuck her pretty little pussy, and lick her asshole, and come on her tits, and she, Sister Magnolia, had to beat slutty Miss Ludlow for the good of her soul. Jen had howled and yelped and laughed. Then Mags had graduated to what she called \"flicks.\" She held the tips of the straps and flicked the lash directly onto the panty-covered cheeks of Jen's backside: left then right then left again. That had hurt too. Mags had asked if she could take it a little harder, then a little harder still. When she'd stopped, Jen had been breathing hard, but she'd said: \"I could probably have taken a little more.\"\n\nMags had smiled. \"You might have to. I've got pretty good control, but I'm thinking my adrenaline will be pumping. Let's stop there for now. That was hard enough to make it look good, and your ass is going to be sore tomorrow. Be sure to rub some moisturizer on yourself. You sure you won't consider becoming my slave? You have the makings of a hot little pain slut.\"\n\n\"Um...gosh, thanks, Mags, but...\"\n\n\"Kidding...kidding, oh lord...\" The crazy laugh started again. \"You should have seen the look on your face!\"\n\nSo now, when Catwoman turned to naked, frightened, bound Vicki Vale and said:\n\n\"How about it, Princess? Do you have anything to say before we carry out your sentence?\"\n\nNaked, frightened, bound Vicki Vale didn't say a word.\n\n31.\n\nCatwoman turned her victim to face the wall. She called across: \"Ooh, Bats, look at that adorable ass, all round and smooth like a little apple. Don't you just want to take a bite?\"\n\nNo response.\n\n\"No? Maybe you're right. Doesn't look quite ripe, maybe we should wait until it gets a little pinker!\" On the last word, she raised the flogger in her right hand, grasped the straps with her left, and brought them down with a loud 'SPLAT' across the left cheek. Vicki yelped in pain. Catwoman giggled.\n\n\"Count them, Cupcake! It's considered polite, and that way I don't lose track. If I do, I'll have to start all over.\"\n\n\"One.\"\n\nSPLAT!\n\n\"Oh God! Two.\"\n\nSPLAT!\n\n\"Three! Please stop, it hurts!\"\n\nSPLAT!\n\n\"Four...Damn you, you evil bitch, why are...\"\n\nSPLAT!\n\n\"Hey! Why did you...\"\n\n\"Count, Princess! How many was that? Do you want me to start again?\"\n\n\"No, please, please, please, it was five, FIVE!\"\n\nSPLAT!\n\n\"God it hurts. I mean six, six; why are you doing this to me?\"\n\nHer torturess laughed. \"It turns me on, Kitten; makes me horny, gets my little pussy all wet and juicy. Hearing you scream and cry and beg: best foreplay in the world!\"\n\n\"You're evil, do you hear me? You're an evil, cruel, sadistic, heartless...\"\n\nCatwoman strolled over to her victim, grabbed a handful of the blonde hair, and wrenched her head backwards.\n\n\"Sticks and stones, Princess. Now shut your pretty mouth. You've got six more coming, courtesy of your boyfriend over there.\"\n\nShe moved back into position and struck again.\n\nSPLAT!\n\nVicki screamed.\n\n\"I don't hear a number...\"\n\n\"Seven! Seven, dear God...\"\n\n\"Does that look better, Bats? All nice and pink, and ripe?\"\n\nNo response.\n\nCatwoman shrugged.\n\nSPLAT!\n\n\"Ow, ow, please...Eight!\"\n\nSPLAT!\n\n\"Nine!\"\n\nSPLAT!\n\n\"Ten! Don't, please, I'm begging...\"\n\nSPLAT!\n\n\"Eleven...it hurts...please, it really hurts!\"\n\nSPLAT!\n\n\"...twelve...\"\n\n\"All finished, Kitten.\" purred Catwoman, as she turned Vicki back to face the room. She patted the blonde's ass gently, making her yelp softly. \"Now thank me.\"\n\n\"Thank...are you insane?\"\n\n\"Your cute little ass is all pretty and pink and fuckable, and my arm's tired. Thank me.\"\n\n\"Go to hell!\"\n\n\"Think very carefully before you speak again. If I don't like the next words out of your mouth, I'll turn you back around and keep going until you loose count.\"\n\nVicki gasped, then: \"Thank you for my flogging, Catwoman.\"\n\n\"Very good, Princess.\" The taller woman leaned in and brushed a light kiss against her captive's cheek. Then she whispered: \"How're you doing?\"\n\n\"Hurts.\"\n\n\"Do you want to stop?\"\n\n\"Did whipping me really turn you on?\"\n\n\"Oh yes!\"\n\n\"Kiss me again.\"\n\nCatwoman pulled her head back slightly to look into Vicki's eyes. Then she leaned forward and kissed the little blonde's lips. Vicki opened her mouth with a little sigh, deepening the kiss. The two women's tongue touched, explored, tussled. Vicki pushed forward, little pants and hums breaking from her as the kiss continued. Finally, Catwoman broke off, smiling down at her prisoner.\n\nSlightly breathless, Vicki whispered: \"Does that answer your question?\"\n\n32.\n\nCatwoman retrieved her knife, open the blade and stalked back over to Batman. She ran the back of the blade lightly across his chest, stopping to tease a nipple beneath the stretchy gray nylon. \"Did you enjoy that, Bats? Did it turn you on watching me hurt her?\"\n\nNo response.\n\nShe stood slightly away from his body, making sure Vicki could see both of them. Then she reached down, and ran a gloved claw over the bulge of his obvious erection.",
        "\"Purr-fect!\" she growled, \"Betrayed by your body. Poor little superhero! What happened to all those lofty principals? Gonna be tough fighting evil when evil gets your dick hard. I'm curious, Handsome, what did it for you? Did you like watching my big tits bounce while I beat your little slut? Was it her screams? I liked those. My pussy is so fucking wet right now, I might just cut that costume off you and climb on; use that nice big cock like my own personal fuck toy? Or was it that last bit,\" she turned to smile at Vicki, \"when your sweet, innocent little girlfriend begged to be allowed to stick her tongue down my throat?\"\n\nAs she spoke, Catwoman continued to stroke her prisoner's cock. From the tip of a claw, she had progressed to the pads of two fingers, and now she was squeezing him, feeling him grow longer and harder.\n\n\"Oh, Batman!\" she breathed, \"Is that a nightstick in your spandex, or are you just enjoying the show? Hold still now. I've been waiting for years to see the man behind the bat. I don't want to cut it off...yet, mrr-ow!\"\n\nShe pinched a small fold in the fabric above his chest. Carefully and gently, she cut the spandex with the tip of her knife, then, working with the back of the blade against his skin, she began to tear off the top of his suit. She purred and cooed as she revealed first his powerful chest and shoulders, with their light dusting of black hair. She worked lower, revealing tight, muscular abs, muttering under her breath: \"Lucky little bitch!\" A quick slice through the waistband and the blue shorts fell to pool around one bound ankle, and then she was slicing away the fabric over his right thigh, widening the gap to reveal...\n\n33.\n\nTheo Sutcliffe was a big man: tall, broad shouldered, and\u2014although he didn't know it; hadn't made a practice of comparing himself to other guys in the locker room or barracks\u2014well endowed. His erect cock was long and straight and\u2014as Jen had said that first day at Has Beans\u2014quite thick. Mags giggled as it leapt into view, free at last from to the tight confines of the nylon. She could feel the moisture between her legs, the slight increase in her heartbeat, the rush of saliva to her mouth. Women responded to visual stimulation as readily as men did, provided it was the right kind of visual stimulation, and especially when they knew they would have a chance to do more than just look.\n\n34.\n\nTheo had no language left. There was, apparently, a trickle of blood left in his brain; just enough to fire the couple of synapses necessary to remind him that his most vivid adolescent fantasies were about to be... He barely noticed as she cut way his costume; his world shrunken to the sound of her voice in his ear, the sight of her body and her eyes behind the black mocking mask, and the feel of her hands on his...wait a minute. Where was she? His mind cleared for a second and he reoriented himself: shackled to this...table or whatever it was, Jen bound, naked, disheveled and incredibly beautiful, frighteningly sexy, maybe six-eight feet away from him, and a click...what? A click? What clicked? Where was Catwoman?\n\n35.\n\nJen/Vicki watched Mags/Catwoman cut the costume off her husband's body, listened to her pornographic litany, and ached all over. Her ass\u2014she liked the sound of that in her head\u2014her sexy little ass; what had Mags said? Her fuckable little ass\u2014hurt like hell, but that was the least of it. Her whole body, her whole psyche wanted, craved, physical sensation: sight, sound, smell, taste, touch, especially touch...but...maybe, maybe not especially...her imagination was completely out of control, images swirled around her head: Mags, Vicki, Batman, Jen, Theo, Theo's chest, Mags' breasts, her ass, her...pussy, Catwoman, flogging, Batman's cock, CatMags' tongue, VickJen lips, tongue, Bat-Theo, Batcock...sweat, wet, aches in the abs, cumming, shoulders...her shoulders hurt like...Mags...Catwoman, please, oh please, ohpleaseohpleaseohplease!\n\n36.\n\nCatwoman stepped out of the bathroom. She wore the thigh high boots, her mask and ears; nothing else. Batman and Vicki Vale stared at her body: slender arms, delicate hands, long neck, full high breasts, flat stomach, small waist, delicate curve to slightly flared hips, round firm ass, muscular thighs, long graceful legs, and her pussy: smooth and pale, her cleft a tiny line, dark against the soft pink flesh. In her ungloved hands she held a light chain attached to a leather band. She sauntered over to Vicki, green eyes locked on the little blonde's pale blues. She reached up, breasts rising with the motion, nipples hard and erect. She undid the clip holding the rope. Vicki's shoulders slumped, and she sank to her knees. Catwoman squatted beside her and undid the cuffs.\n\n\"We don't need these any more, do we, Kitten?\"\n\nVicki said nothing. She stepped away from the ruin of her dress, and stood before the taller woman.\n\n\"Good girl!\" purred Catwoman, as she fastened the collar around the smaller girl's slender throat. Then holding the chain leash attached to the collar, she led her pet over to where Batman stood, bound and naked except for his mask. The two women stopped less than two feet from the bound man.\n\nCatewoman stared into Batman's eyes as she spoke to Vicki. \"Would you like a kiss, Princess?\"\n\n\"Oh, yes!\"\n\n\"Ask me nicely.\"\n\n\"Please kiss me, Catwoman?\"\n\n\"Very good, Sweetie!\" Catwoman wrapped her arms around the petite blonde's waist. Vicki's head fell back; her lips parted. Catwoman moved her arms up Vicki's back as the two bodies came together, breasts brushing. With a last look at Batman, Catwoman stuck out a long tongue and thrust it between her victim's willing lips. Vicki moaned and leaned into the kiss, her mouth open wide, her tongue dancing and circling, appearing and disappearing as the two pairs of lips met and parted. Catwoman broke the kiss. Vicki's eyes stayed closed, and she mewed softly \"No!\"\n\n\"She's mine now, Bats. I'll play with her until I get tired of her, and then I'll throw her away...if I don't break her first. I can be tough on my toys. That's OK with you, isn't it?\" She reached out and grabbed her prisoner's cock, jerking it roughly. \"Mmm...doesn't seem to bother you much, does it?\"\n\n\"Catwoman...\"\n\n\"You've lost, Batman. I kidnapped your woman, lured you here, trapped you, stripped you both, made you watch while I tortured her, and now look at you!\" She began to laugh. \"You love it, don't you? Look at that big, thick cock of yours just dripping pre-cum. Shall I make little Vicki lick it up?\" Then another idea seemed to strike her. \"M-rrow, no.\" She turned to her new toy. \"Open your mouth, Vicks.\" The blonde complied at once. Catwoman gathered up the leash into a lose coil and put it between the girl's teeth. \"Now go into that little bathroom. There's a folding chair against the wall. Bring it here.\" As Vicki turned to go, her mistress gave her a quick slap against her reddened ass. Vicki squealed, but didn't drop the leash. \"Good girl!\" purred Catwoman.\n\n37.\n\nWhen Vicki returned with the chair, she was instructed to unfold it and set it less than a foot away from the table to which Batman was bound. Catwoman sat down and spread her legs. \"Kneel.\" Unmistakably a command. Vicki knelt. \"Eat my pussy, Princess, while I have a little fun with your boyfriend.\"\n\nVicki looked up at her mistress uncertainly. For a moment Mags came out of the roleplay. She remembered that Jen had no experience with oral sex, either giving or receiving. She hesitated a moment, looking carefully into Jen's eyes. Too much? No safe word; so that wasn't the problem. Mags flicked here eyes down. Jen's followed. She saw Mags' legs open, the lips of her vagina spread slightly: deep pink crinkled flesh surrounded by the pale pink skin of the outer labia. Mags dropped a hand to her lap. Her first and third fingers spread her inner lips while her second finger tapped lightly against her clit. Jen saw, looked up, murmured: \"Yes, Mistress.\" Then she leaned forward, stuck out the tip of her tongue, and began to lick.\n\n38.\n\nCatwoman gasped as her new pet's tongue began its first tentative assault on her clit: slow gentle strokes, each one sending a bolt of electricity through her. Her breath quickened, and she hummed in satisfaction. Then she reached for her other captive's cock, less than a foot from her face as she sat on the cold metal seat. Her hand tightened around the shaft, and she leaned her face close to it, so that her prisoner could feel her warm breath on the swollen head of his dick. \"Ooh...yes! You know what, Bats? Oh, that's it, Princess, just like that...this is a dream come true for me. Yessss! Harder, Cutie pie...that's it! If you knew how many times I've lain in bed fingering my wet cunt and thinking of forcing you to submit to my nastiest whims...ooh, you're good at this, you hot little bitch...well, look at me now...oh yeah, yeah...your little whore with her face between my legs, and your lovely cock just inches from my lips. Shall I suck your cock, Batman? Would you like that?\"\n\n\"Yes.\" Low and muttered; almost inaudible.\n\n\"I'm sorry...huh, yes...oh yuh...I didn't hear that...your girlfriend is...distracting me...\"\n\n\n\"Yes!\" louder, \"I want you to...\"\n\n\"To what, Handsome? You'll have to say it...\"\n\n\"I want you to suck...suck my...why is it so...I want you to suck my cock!\"\n\nCatwoman screamed as Vicki forced her face between her mistress' thighs and lashed at her clit like a woman possessed. \"OOOOHH, Goddam, that is soooo fucking good!\" Then she leaned in and wrapped her lips around the head of her captive's cock, and swiped at the slit with the tip of her long tongue. Then she began sucking gently. Batman made a sound somewhere between a moan and a bellow, and Catwoman felt his shaft swell. She gripped the base of his dick hard and squeezed, even as she felt her own orgasm begin to build.\n\n\"Quick...ooh, God!...off the mark...aren't you...unh, yeah, right there...that's it...yuh, yuh, uhhhnngh...you're not cumming yet, Stud. In fact, I'm not sure...yes, oh GOD, yes!...if I'm gonna let you...uhn...oooh, oooh, yuh, yuh...cum at all...ohgodyoulittleslut, don't stop, don't stop, DON'T ST...AHHH!\" \n\nHer body bucked and twisted. Vicki felt powerful thigh muscles squeeze her ears, once, twice, three, four, five...six times, then the pressure eased. Her tongue darted forward once more, another quick squeeze, and then the body above her relaxed. A sigh, and a hand in her hair, pulling her face back, and she was staring into those beautiful, fiery green eyes, behind the black mask.\n\n\"Oh, Princess, I may have to keep you around for a little while.\" purred Catwoman. \"Now, where was I? Oh that's right,\" she turned to stare, almost as if she were surprised, at the thick rod of flesh gripped tightly in her left hand, \"I was sucking your boyfriend's cock.\" She leaned forward and, starting just above his balls, ran the tip of her tongue up the length of Batman's shaft. He groaned. Then she stuck the head in her mouth and sucked hard, taking him deeper, inch by inch. When she felt the head of his dick at the back of her throat, she began to jack him off slowly and gently. She bobbed her head up and down, swirling her tongue around him as she went. His cock seemed to expand in her mouth. He said: \"Please...\"\n\nHer hand dropped from his shaft and she popped him out of her mouth. With a malicious smile she watched his cock thrust forward in a vain attempt to regain some sensation. \"Oh, Bats,\" she cooed, \"and it's not even my birthday! Are you begging your arch-enemy, the depraved and evil Catwoman, to finish sucking you off in front of your girlfriend?\"\n\n\"Yes, God damn it, just...please...I'm so...\"\n\n\"Mistress, may I...\" Vicki had raised herself on her knees. The desperation, the need in her man's voice worked on her like a hit of adrenaline. She reached for him, clumsy in her confusion, a hand finding his thigh as she moved her face forward, her lips parted.\n\nBut Catwoman's right hand hadn't yet left her head. She closed it into a fist, and yanked the little blonde backwards. Off balance, Vicki sat down hard on her behind, still red and tender from her flogging. The carpet burned against her ass as she slid a few inches, and she screamed at the sudden pain.\n\nCatwoman laughed out loud. \"You two are so precious! No, Sweetheart, you may absolutely fucking NOT!\" A tense silence followed the last shouted word. With cold ferocity, she continued. \"His cock and his orgasm belong to me. I say when he cums. I say where he cums, and,\" she smiled cruelly, \"I say if he cums. Everybody clear on that?\"\n\nSilence.\n\n\"Good. N-rrow, what are we going to do about your little problem, Bat-stud?\" She stood up and came close. Reaching down she closed her hand around his erection. He moaned in anticipation, but she didn't move. \"You're close, aren't you, Batman?\" purred his torturess. \"You want to cum, don't you? Silly question; that's what you've been begging for, isn't it. You know, I'm very angry at you, Bats? All those times you've had me tied up, defeated, helpless, and you with this big, thick, beautiful cock of yours,\" she stroked it slowly as she spoke, \"and you never once had the common decency to throw me down on some dirty rooftop, tear my clothes off, bury your batstick in my juicy little cunt and fuck me stupid.\"\n\nShe dropped his cock, and smiled to hear his breath catch in frustration. Moving behind him, she continued: \"That was a bad decision, Batman.\" There was a soft chunk, a rattle, and what little play there had been in the chain binding his right wrist disappeared. His arm was now pinned to the table. \"Not playing with my titties when I offered them to you? Bad decision.\" The same chunk-rattle, and his left arm was similarly immobilized. She sauntered back around to face him, her breasts inches from his chest. She reached a hand up to stroke his cheek. In a voice at once soft, sweet and poisonous, she said: \"And if you insist on making bad decisions, you have to accept the consequences, don't you, Bats?\"\n\nHer victim said nothing. She smiled then: soft red lips, cool white teeth, cold green eyes full of triumph and cruelty. \"Of course you do,\" she purred. \"And I'm going to show you what those consequences are, Batman.\" The smile became an evil little giggle. \"You know...whipping little Vicki really got me going...maybe I'll torture you too...just a little bit...\"\n\n39.\n\nCatwoman sat back down, and contemplated her prisoner's cock, now inches from her lips. She leaned in, so that her victim could feel her warm breath across the head of his dick as she spoke softly. \"Ooh, poor baby, look how hard you are! Is it painful? Seems a little unfair, doesn't it?\" She indicated Vicki, crouched at her feet. The pretty blonde looked...desperate; torn between compassion and naked animal lust. Mags allowed herself a moment outside of the role play to meet Jen's eyes...checking in...all good so far? Jen surfaced for a second and gave her a small smile: a little scared, a lot turned on, and definitely still game. Mags winked, then slipping back into character, she snarled: \"Stay where you are, Cutie-pie. This is between me and the Bat...for now.\"\n\n\"As I was saying,\" continued the villainess, \"unfair, huh? Two beautiful, naked women, right here, capable of...well, anything, really. Vicki here would happily run those pretty pink lips up and down...up and down that nice thick shaft. It'd feel soooo good, wouldn't it? A couple of quick sucks, and you'd be flooding that naughty little mouth of hers.\" She ran the pad of her index finger lightly over the engorged pink head of her captive's dick, and was rewarded with a groan of frustration. \"I'll bet you've got a big load saved up, haven't you, Stud? That little mouth might not be able to hold it all. A little might leak, and then you'd get to watch that busy little tongue searching...searching ...making sure she gets every nasty little drop...\"\n\n\"Unfortunately, I'm feeling...a little contrary this evening. So! No cock for Vicki.\" There was a little whine of frustration from the blonde on the floor. \"Patience, Pet.\" Then back to the bound man: \"No, perhaps I'll just take care of you myself. I think I'll wrap my big, soft tits around your shaft and just...mmmm-rowrr...\" Catwoman stood and stretched languidly. Then she cupped her naked breasts, bouncing them gently, and watching with pleasure as she saw Batman's eyes riveted to the gentle liquid movement of her titflesh. \"Mmmm, you like that idea, don't you, Bats? You'd like to slide your nice thick cock of yours right in here,\"\u2014Catwoman rolled her shoulders forward creating a deep cleavage into which she drew a lazy forefinger. She drew it out again abruptly, and pouted: \"Oooh, it's hot in there. And maybe a little dry. Maybe I'll ask your little slut to lick and suck on my titties for awhile, get them all nice and wet for you. Then you could slide that poor painful hard-on up and down...up and down between them...\"  \n\n40.\n\nIt took Theo a good few seconds to remember that he was supposed to be \"Bats.\" In an hour...maybe less...who knew, this insane, beautiful...he didn't know what to call her, had reduced him to...what? Lust? Need? Pain? Check, check, check: all present and accounted for. And what the...? He thought he'd known about sex. Sure, there was stuff he and Jen hadn't...gotten around to yet, but this was... And Jen was...in on this, and into this...it had been her idea...seriously? His little Jen? How had she known about...? Ah, hell, she'd found the...sure she had. It wasn't like he'd hidden it all that carefully. OK, but where had she found...Catwoman? And how had...had to call her Catwoman, what the hell else could he call her... reached into his memory and just...pulled out his adolescent fantasies? And now...wait, what had she just said? \n\n41.\n\n\"Oh wait!\" The beautiful masked woman brought a long finger up to her mouth and tapped her lips, a thoughtful expression on her face. \"That's right. You don't like my breasts do you? You didn't even want to touch them, wouldn't even do it when I begged.\" She stepped close to him and grabbed his erection, squeezing hard. She hissed: \"So, I guess that means no titfuck for you!\" She squeezed him harder, saw him flinch, giggled: \"I bet that hurts, doesn't it?\" He nodded. \"Good!\" she snarled the word, and her eyes grew bright with malice. \"Doesn't seem to be getting any softer thought, does it, Bats? Still aching,\" her voice dropped to the sexiest of purrs, \"still throbbing, still desperate for my warm, wet mouth, my long tongue,\" she drew the tip of it slowly around her full lips, \"my hot, wet cunt? Poor Bat-baby,\" she whispered, and he could hear the smile in her voice, \"it must be agony.\"\n\nShe stepped away from him then, her hand still wrapped tight around her victim's cock. \"Kitten,\" she snapped, \"stand up and come here.\" When the little blonde stood in front of her, Catwoman stared into Batman's face. \"Vicki-kins,\" she purred, \"why don't you show this pathetic excuse for a superhero how a person is supposed to behave when a beautiful woman offers herself to him,\" she turned back and fixed her gaze on her new pet, \"or in this case, to her.\"\n\n42.\n\nJen looked uncertainly into the face of her friend. A woman she'd barely known a few months ago, and who, in the course of this evening alone, had bound her, stripped her, fingered her to the best orgasm of her life, whipped her, brought herself to orgasm on Jen's tongue, and, by the way, bound Jen's husband, stripped him, sucked him, and tortured him (was still torturing him) by denying his orgasm. During the course of the evening, one sensation after another had threatened to overwhelm her completely: the sight of her husband's...cock\u2014the word had begun to come to her mind more easily\u2014red and swollen, and larger than it had ever seemed before, the sounds of the chains as she'd pretended to struggle when the dress was cut from her body, the tickling of the back of the knife against her skin, the rasp of Mags' long tongue on her aching nipples, the sweet-and-sour smell of her friend's pussy, and then the taste of it: her first ever taste of another woman. Up to this point it had been...words failed her, not because she couldn't come up with words, but because none of the words she could conjure seemed...enough: wonderful, exciting, astonishing; all true, but none came close to describing how Mags had...nope, no words. And so she stood looking into the green eyes behind the cat's-eye mask, with no idea of what was expected of her, or of what could possibly come next.",
        "For a second, Mags's eyes twinkled behind the mask, before Catwoman's capricious cruelty reasserted itself. Then she said: \"OK, the two of you are really starting to piss me off.\"\n\nVicki's blue eyes widened in fear. \"I'm sorry, Catwoman, I don't...that's to say what shall I..?\"\n\n\"Oh goddess, you really are a silly little slut, aren't you?\" Then, turning back to Batman, she gave his cock another vicious squeeze, and smiled to him wince: \"This is on you too, Bats. If you'd treated your little whore like something other than a hot wet hole in the bed, she might know how to react when offered...something special.\" She released his cock, and he groaned in frustration. Almost before the sound was out of his mouth, she'd slapped him again, hard, across the face. \"Don't you even think about coming without my permission,\" she snapped, \"or I will chain your little fucktoy to the wall and beat her bloody! Do I make myself clear?\"\n\nStaring into his eyes, Mags thought Theo looked really dangerous for a few seconds. Scared and aroused in equal measure, she waited to see how her victim would react. Safe word? She kept her eyes locked on his, giving him time. After a long moment, he broke the stare, and looked to Jen. Mags watched the couple check in with each other. A moment passed. Then: \"Please, oh please don't beat me again, Catwoman!\" Vicki was pleading very prettily, and Batman's cock was\u2014if possible\u2014even harder than it had been moments before. \"I'll be good. I'll do anything you want, but...I'm sorry I'm so stupid,\" she sounded as if she were tearing up, \"but you'll have to tell me what to do. Please don't hurt me, please?\"\n\nMags was divided between an impulse to hug Jen and to giggle. Her old classmate was learning quickly. Instead Catwoman grabbed Vicki by the face and kissed her hard, forcing her long tongue into the smaller woman's mouth, reveling in her victim's squeal of surprise. Then she dug a fist into the long blonde hair and pulled. Vicki squealed again. \"N-rreow,\" said her captor, in a business-like voice, \"Let's see if your boyfriend can master his baser impulses. If so, I won't have to hurt you, if not...\"\n\n\"No, please, let me...let me please you, Mistress?\"\n\n\"Good girl. Now, pay attention: my breasts are very sensitive. Having somebody stroke or fondle or play with them puts me in...\" she took a deep breath, \"a really good mood. Touch me, Kitten. Touch me like you'd like to be touched yourself. Make me purr!\"\n\nVicki reached out and gently stoked first the fronts and then the backs of her fingers against the side of Catwoman's generous breasts. Both women sighed gently, the tall brunette at the soft touch of the smaller woman's hands, and the little blonde at the feel of soft smooth skin she caressed.\n\n\"Oh Catwoman, I love your...tits!\" sighed Vicki, and then she giggled, as she savored the sensation of saying the crude word aloud. \"Ooh they're so big, and soft and firm at the same time, and...oh!\" Her fingers had brushed across a nipple, and she heard Catwoman hiss with pleasure as the little bud hardened under her touch. She became bolder, cupping and squeezing, pinching first one nipple and then the other. Catwoman sighed and coo-ed. She looked over to where Batman stood, watching intently, his lips parted slightly in frustrated arousal. \"Enjoying the show, Bats?\" she purred, \"That big cock still nice and hard...\" she caught her breath as Vicki's fondling grew more aggressive, \"...and painful?\"\n\nBatman's breath was coming short with arousal and frustration, but before he could speak, Vicki asked: \"Can I suck them?\"\n\nCatwoman: \"Oh, Kitten, I thought you'd never ask!\"\n\nThe blonde bent forward and captured a nipple between her lips. Then she began a gentle suckling, drawing the hard nub into her mouth, swirling her tongue around it, and releasing it through puckered lips. Every now and then she would bite very gently, and then Catwoman would moan and hiss and purr. As Vicki sucked at one breast a free hand would fondle and knead the other, pinching and scraping nipples made wet and warm with her saliva. The brunette's sounds rose in pitch, becoming cries and squeals and mews interspersed with curses and pleas and praise: \"Oh...oh, oh, oh, Goddamn that's good! Oh that feels sooo...eeeow, yes! Fuck, you're making me so wet! OhgodohgodohGOD I wanna cum! I wanna...I wann...yeah, oh yeah, just like that! Oh you sweet little slut...ooh, you are so good at this!\"\n\nEmboldened by her captor's praise, Vicki addressed her fellow captive directly for the first time since the games had begun: \"Oh, Honey, you should have played with her boobs when you had the chance. Seriously, you have no idea how...mmmm,\" she fastened her lips around a nipple, sucked it back into her mouth, and released it with a wet little pop, \"how sweet and soft and delicious and...just...uhmm! God, I could just go on sucking her tits for...ahhh!\"\n\nCatwoman had once again twisted a fist into her captive's blonde hair, and now she pulled Vicki's head back, slowly and gently, until the smaller woman was forced to stand up straight. \"And I could let you, my pretty, slutty kitten. Oh goddess, I would be delighted to let that naughty little tongue of yours bathe every last inch of me, but right now, I need to cum. I need a nice big cock to fuck me until I cum, preferably a couple of times. N-rrow,\" she turned back to where Batman stood, bound to an upright table, his costume in tatters, his long, thick penis erect, throbbing and painful. \n\n--To be continued."
    ],
    "authorname": "Quince",
    "tags": [
        "role play",
        "batman",
        "catwoman",
        "vicki vale",
        "costume",
        "comic book",
        "dominatrix",
        "fetish"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/reacquainted-pt-03"
}