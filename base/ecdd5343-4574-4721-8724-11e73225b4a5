{
    "title": "Orchid Ch. 01",
    "pages": [
        "I love swimming. Floating up and down the lane. It's quiet. Even when I'm pushing myself, racing against my best time, there's a peacefulness to it that's notably lacking from the rest of my life. Not to say that my life is some kind of train wreck, but I think we can all agree that there's more stress in the world than there should be. In the pool, it's just 'lean to the side, and breath'. Kick and stroke. Repetitive motion, always moving forward. It has a kind of poetic beauty to it.\n\nOf course, I could probably reduce just about any action, no matter how mundane, to a pleasing blurb if I set my mind to it.\n\nTrash... trash... Something about taking out the trash... uncluttering life... the way your 'load' is lightened when you finally rid yourself... of... unwanted...\n\nThe point is, swimming is good. I like the way it occupies my body and leaves just enough of my brain free to try my hand at things like Tom Sawyer-ing the trash. Plus, I like the way I look in a swimsuit.\n\nI pop up out of the water, fingertips on the wall, and check my watch. 2 seconds behind last week's time, but still ahead of my average. I pant for a minute, enjoying the burn in my shoulders and thighs while I surreptitiously look around. I always start and finish in the deep end because it affords me the best view of the rest of the gym. Most of the evening crowd is either in the lockers or gone. I think about taking a few cooldown laps, just to be sure, but my thighs are screaming at me and my calves are threatening to cramp. Getting a cramp while swimming is, like, one of my nightmares, so... no.\n\nIt's weird thinking things like 'I look good in a swimsuit.' Part of me still thinks it's abnormal to care as much as I do, but that voice gets blessedly quieter with every passing month. One of these days, hopefully, I'll be rid of it entirely.\n\nOnce my arms start to get cold I know it's time to go. I lift myself up out of the pool, slip my feet into my flips, and wring out my long black hair. I love my fuzzy pink towel.\n\nI waddle nervously into the women's lockers, buried deep inside my pink cocoon. Mine isn't a state where what I'm doing is illegal, but I still worry. Religious nuts don't usually wear signs. The nerves are always worst when I can hear their voices but haven't gotten far enough into the lockers to see how many I have to deal with. The number is always lower than I fear it is. I'll probably never get over the irrational fears, but at least I can cling to the fact that they're irrational.\n\nThere's about fifteen women, most clustered in twos and threes, spread around the lockers. More than I'm usually comfortable with. I think I caught the 9:30 spinning class getting out. I turn smoothly and head through to the showers at the far end, and sigh happily that they're empty. I set my towel on one of the faucets to claim it and scurry back to my locker to grab my little bag of goodies.\n\nLimitless hot water is a beautiful thing. I wait until the curtain is shut and I'm under the water, humming softly, to start slipping out of my two piece. It's a struggle not to constantly cup my breasts with my hands, small though they may be, for the sheer joy of having them. Finally.\n\nI mean, I've had them for a couple years now, but the honeymoon phase hasn't ended yet.\n\nAnd I'm not talking about just sitting around groping myself (although Lord knows I've done that a few times). This is more about... tangible... ness... Or maybe a dream becoming real... or...something. It's definitely something. It has a feel of somethingness to it.\n\nThe lower half of my swimsuit is a combination bottom and skirt, which does a beautiful job hiding my bulge while still accentuating my butt. I've kind of always had a cute butt, so the shine has worn off that a little bit even if the hormones really did improve the way it all comes together. I sigh when I realize that I've twisted myself at the hip, pushing my ass out and staring back over my shoulder where I can see it, like I need to double check that it's real too. It's hard getting lost in my own narrative, and it happens way more often than I like to admit.\n\nI take it slow, letting the shampoo and conditioner each sit in my hair for the manufacturer recommended lengths of time. I use my little not-quite-a-loufa-thingy to get the lather nice and thick and go carefully up and down my legs, and hit all the spots in the middle of my back that are just so damn hard to reach. I even take the time to get behind my ears. It feels nice to pamper myself, and I don't have anywhere pressing to be.\n\nTruthfully, I'm a little glad for the excuse to shower here. I prefer the privacy of showering at home, but the shower itself is so much smaller, and old, and doesn't get as hot, and a thousand other things. Plus someone else comes in and cleans this one. Huge, huge bonus.\n\nMost of the others have cleared out by the time I shut off the faucet. Some of the women who shower at the gym have no problem walking back naked but, thankfully, enough keep a towel wrapped modestly that I'm not an oddity for doing so as well. I always try to take a locker in the corner, near the back, and I've pretty much mastered the art of keeping my knees and thighs together while I slip into my panties. I feel like I can't breathe until I've gotten them up and snug around my hips. Today, my panties have a zig-zag pattern in them that does a lot to fool the eye and mask the bulge.\n\nI'm feeling a little bold today so, once my panties are in place, I turn and face the rest of the locker room. Sitting sideways on the bench. I keep my eyes on the floor, kind of staring absently, and let my peripheral vision do the watching. There's another woman, a little older than me, just ahead. I slip my socks on, and she turns when I stand to put on my pants. She only looks at me for a second, taking me in briefly, before she turns back to her own clothes, and I am freaking out! So happy.\n\nI love passing. I hope I never get over that, or stop appreciating that I can. It's not about tricking her, or tricking anyone; it's about acceptance, and it means a lot to me to get it subconsciously, or unconsciously, from others.  I am what they expect.\n\nForgot to breathe again. It's almost funny (almost) how much I hold my breath when I'm risking a little public exposure. I laugh as I slip on my bra and run my hands back through my hair to make sure I don't have any strays caught up. I have to do the same again once I get my t-shirt on.\n\nI sling my gym bag across my chest and smile as I exit the lockers. It's a private victory every time I come to the gym, which is often, and get in and out without incident. That's not to say that I've never been stared at or spotted, but the pitchfork-wielding mob has thus far left me alone and for that I am grateful.\n\n\"Kit?\"\n\nI nearly trip over my own two feet when I try to come to a stop in the center of the lobby, and my head whirls back and to the right. \"Um... \"\n\n\"Do you remember me?\"\n\n\"Ummm...\" Of course I remember you, Professor. I only masturbated to the thought of you remembering me after every class for an entire semester. Play it cool. Play it cool. It's not like he doesn't feature in just about every fantasy I have. Play it cool. \"Didn't I...\" I blink and nibble on my lower lip, and he smiles. God, he's gorgeous when he smiles. \"Didn't I have you... What class of yours did I take?\"\n\n\"You were in my Advanced Poetry-\"\n\n\"-and Short Creative Fiction!\" I say, finishing with him. I squint, really trying to sell it. \"Professor... Ayers!\" He nods as he smiles. His beard is a little more filled in now, which I kind of want to reach up and grab. I nervously tuck my hair back behind my ear and return the smile. \"I didn't know you worked out, Professor.\"\n\nMaybe the biggest lie I've ever told.\n\n\"Well, I try to keep in shape.\"\n\nI can't stop twisting. My whole torso keeps turning back and forth. He's going to notice, but I can't stop. There's so much energy bursting out of me right now. I must look like I'm dancing. \"Well good for you, Professor.\"\n\n\"Please. Call me Calvin.\"\n\n\"Ok,\" I say, hoping to all that is holy that I've kept my voice from quivering. \"Calvin.\" God, he's gotta be like 6'2\". Even standing a few feet away, I feel like I'm looking straight up at him. I grab the strap to my bag with both hands to give them something to squeeze. \"I really enjoyed your class, by the way. I-I-I felt like I grew a lot... creatively.\"\n\n\"That's wonderful!\" His eyes just light up when he smiles. \"I'm so glad! You know, I kept your piece, um...\" He snaps his fingers and furrows his brow. \"The one on leaving childhood behind?\"\n\n\"Yeah?\"\n\n\"Yeah, I used that the next semester as an example of polyrhythmic meter.\" I laugh so hard that I snort. My skin feels so hot I must be glowing. \"What?\" he says, genuinely looking worried.\n\n\"Would it change your opinion if I told you that was completely by accident?\"\n\n\"That's almost more impressive,\" he says, grinning.\n\n\"Well...\" I think I lose about two seconds just staring at his eyes. It's hard to say how long exactly. \"...thank you,\" I squeak. \"I... uh... like what you're doing with your beard now. It suits you.\" Though not half as good as your actual suits, and wow my skin is literally on fire right now.\n\n\"Thank you,\" he stammers. \"Listen...\" He reaches up to scratch at the back of his neck, and tilts his head in just such a way as to be utterly and completely adorable. \"Would you-\"\n\n\"Yes,\" I interject. He blinks at me, and laughs. \"I'm sorry. Did you want to finish that?\"\n\n\"Well I was going to ask if-\"\n\n\"Yes.\" This is really happening.\n\nHe laughs again and shakes his head. \"You're not going to make this easy, are you?\"\n\n\"What is life without struggle?\"\n\n\"I was going to ask if you'd like to go-\"\n\n\"Yes.\" This is really happening.\n\n\"-out for dinner, or a drink, with me-\"\n\n\"Yes.\" I'm so proud of myself right now.\n\n\"-sometime.\" He licks his lips and looks down at me, eyes narrowed like he's appraising me.\n\n\"I don't know, Calvin. I think I might be busy that night.\" He smiles tightly, and I laugh before he can get too distressed. \"I'm sorry, I'm sorry, I'm sorry. Yes. I would-I would... I would really like that.\"\n\n\"Okay.\"\n\n\"Okay!\"\n\n\"Okay!\" He repeats, laughing.\n\n\"Can I ask you for a big favor though?\"\n\n\"S-sure,\" he says, hesitantly only slightly.\n\n\"Could you... walk away first?\" He chortles as I continue. \"I may or may not have done laps tonight, and I'm probably not going to look very dignified when I turn to go. I would much rather have you remember how cool I played it a minute ago than the sight of me falling over.\"\n\n\"You did play it pretty cool.\"\n\n\"I know,\" I giggle, \"right?\" I reach into my bag and pull out a pen, and scribble my phone number onto a scrap of paper. \"Seriously though. Please don't watch\"\n\nHe nods, laughing more, and turns toward the men's locker room. I bite down on my lip watching him go. OH! He looked back! He looked back!! I give him a tiny little wave, and then he's gone. Once he's out of sight, I slump considerably. Exhaustedly.\n\nThat really just happened.\n\n***\n\nI practically fall back against my front door, twenty minutes later, when I get back to my apartment. I think I've had the same stunned expression the entire time. The cabbie kept asking if I was okay, and now that I think about it, I'm not sure if I ever answered him. No wonder he looked worried.\n\nMy gym bag falls short of the armchair, and spills its contents as it tumbles. I'll get it in the morning. There are more important things to take care of. If I don't take care of my night time routine right now, right this second, I'll forget and lose an entire night in fantasizing.\n\nI drift into the kitchen and check my pill planner. I'm sure, logically, that I would be fine if I missed a dose once in three years, but I haven't yet and I don't want to start. I unscrew the cap on my yellow water bottle and chase each pill with a swig. First the red, then the round white, then the oblong white. Sometimes I serenade my pills. Sometimes we dance together. Sometimes I make dirty jokes about how grateful I am for them, and promise to swallow if they let me put them in my mouth.\n\nI leave my clothes behind like a trail of breadcrumbs. Sock here. Sock there. Bra on the chair. Shirt on the floor. Not sure how I managed that order.\n\nIt takes me a minute of searching to find my yoga mat, jammed underneath my bed by some nefarious miscreant no doubt, and every ounce of willpower I can summon to push through the Wednesday night poses. Of course, once I get into the groove, it's easier to remember how much yoga does for my abs and ass. This is helping. This is helping. This is helping. Over and over. I repeat it like a mantra. Sometimes I sing it. The cadence helps me keep time. The hardest part about yoga, though, is keeping my mind on yoga and not thinking ahead.\n\nAfter I'm done, and my limbs are just screaming at me, I crawl into bed and roll onto my back. The last part of my routine is one I never skip, ever, even though I'm a little conflicted about it. I squirt a tiny bit of lube into my palm and spread it all over my length. I've been hard or semi-hard all night since seeing Calvin. I groan as I stretch, reaching for the top drawer of my nightstand, and pull out the clear plastic tube with the vacuum pump attached.\n\nMore than a little conflicted.\n\nSometimes I watch TV in bed while I pump. Sometimes I watch porn. It takes a long time, starting at low pressure, for the shaft to fill out. Almost 30 minutes from the time I slipped it over the head. Most nights I need some kind of mental stimulation to distract me so I can get through the whole thing, but not tonight. Tonight, the theater in my head is playing a captivating marathon of Calvin's hottest appearances in fantasy and, for me, admission is free. All I have to do is close my eyes.\n\nI stop after a half hour to let the blood flow evenly. Circulation is important. After a few minutes of gentle massage, it's right back into the tube. I tell myself it's to prevent shrinkage.\n\nDon't get me wrong; shrinkage is real. The hormones can and would have a permanent effect on my length if I didn't actively stretch it, to say nothing of my ability to achieve and maintain an erection. I like my penis. Nevermind that half the time, I still think I might have it removed. Nevermind that, because of the pumping, I'm longer now than I was when I started. That's not why I do it.\n\nIf I'm being honest, that is part of why I do it.\n\nThe last five minutes are torture. The pressure is the highest...or maybe lowest? I don't know. Measuring pressure in a vacuum makes my head spin when I'm fully present, and I am out-of-my-mind turned on right now. Either way, the feeling is a frightening kind of intense. God, my cock is like a soda can in there!\n\nSometimes it feels like what I really want is to not have to hide my cock rather than having a vagina per se. I've had a few (liar) one night stands, and I haven't heard any complaints about my ass. There's no lack of sensitivity. I can achieve pure prostate orgasms without ever having touched myself.\n\nIt's not about how thick it gets, or how long it gets. It's about not shrinking. If I even keep it. Which I don't know that I will. I probably will, and fuuuuck this hurts so good.\n\nThe very end of the routine is to pull at the tube, while under pressure, and really try to stretch it. Fuck, I can feel it coming. I scoot carefully toward the edge of the bed, grimacing, and reach for my purple dildo. A little bit of lube. I dig my heels down into the bed, lifting my hips up from the sheets just enough to get my arm around underneath and push... oh...\n\nKit, he says, leaning over me. My knee cradled in the crook of his elbow. Just the sound of him saying my name drives me right up to the edge.\n\n\"Oh... Professor... Oh that feels-\"\n\nPlease. Call me Calvin.  He whispers sweetly in my ear, crooning as he takes me, and I can't help but sigh happily. He tells me about the things he wants to do with me. The things he wants to do to me. There are no words; just a torrent of torrid images of our bodies pressed together in endless variation.\n\n\"Yes... Oh fuck... Yes.\"\n\nMy arms are exhausted, but it doesn't take much. I don't need to ream myself to get there. Not tonight.\n\n\"Oh my God. Oh my God. Oh my God! Oh My God!\" I bite down hard on my lip and groan as I cum, and my legs give out completely. I bounce off the bed, driving the purple silicone even deeper, and my eyes roll back behind the lids. I lose a solid thirty seconds squirming on the bed. Mindlessly flailing.\n\nThere's no way I wasn't going to cum from that tonight. Not after that much stimulation. I gently back off the pressure in the tube and slide it off little by little.\n\nI might still opt for the surgery and get rid of it. I'm not sure. Sleep overtakes me before I can make any kind of concrete decision on the matter, and my dreams are beautiful.\n\n***\n\nAfter a full afternoon of mix and match, I finally settled on a hip-hugging skirt with dark stockings beneath a partially-undone, white button-up shirt, with my hair up in a loose bun. I was going for 'office sexy', and the expression on his face when I walk in says I nailed it. Or that he's having a heart attack.\n\n\"Wow,\" he says, smiling as he stands up. Could still be a heart attack. \"You look great.\"\n\n\"Thank you,\" I squeak. He quickly moves around the table and pulls out my chair for me, and I lose track of my thought processes completely. I grab my lower lip between my teeth and chew lightly as I sit down. My cheeks are absolutely glowing as he helps me scoot the chair in closer. \"Thank you,\" I repeat, with about the same volume. Which is to say almost none.\n\n\"Of course,\" he says, like it was nothing, and sits back down. \"I'm serious. You look really great.\"\n\n\"You can stop now.\" Little bit of copper on my tongue. \"My cheeks don't get any redder than this!\" It's getting harder and harder to rationalize any of his reaction as a heart attack. I shift, crossing my legs, and try to catch my breath, and it's not until then that I can finally look past his reaction at seeing me. \"You look really good too, by the way.\"\n\n\"This? This is just... what I wore to class today.\" He looks down and shakes his head, smiling politely. \"I'm sorry I didn't have time for more. I... I look like I do every day.\"\n\n\"I know,\" I say, keeping eye contact, and immediately my lip is between my teeth again. This time, it's his turn to blush. Good God, look at me go! \"Have you been here long?\"\n\n\"Nope.\" He shakes his head, and his chest and shoulders rise in anticipation of a deep breath.\n\n\"Okay wait,\" I interject. \"Before you say anything, I have something I need to get out.\"\n\n\"Okay.\" He says it so easily. I search his eyes, and he just seems so genuinely... nice.\n\nDeep breaths, Kit. Deep breaths. \"I am... a... woman...\"\n\n\"Okay,\" he says, smiling like I've just told him that the sun is bright.\n\n\"But I wasn't... born... this way.\"\n\n\"Okay,\" he says, smiling just as easily.\n\n\"Do you... Did you hear-\"\n\n\"I heard you,\" he says, still smiling, and now it's my turn to blush.\n\n\"I don't enjoy language policing. Like, I just don't get why I have to be something different than just a woman, you know? I am what I am, and you can just like it or not. The whole cis-trans-fluid thing just, it doesn't... it feels like everyone trying to find a combination of titles to make themselves unique, rather than just being unique. Like they have so little in their lives that they can tie their identity to their genitals, and...\" I look up, and he's just smiling. Not like he's amused by me, or condescendingly. \"Also, sometimes I babble when I'm nervous.\"",
        "\"I remember,\" he says smoothly.\n\n\"The thing is,\" I sigh, \"I've had dates where someone wanted me only because of the way I am, you know? I mean, there's nothing wrong with a little fetishizing sometimes, but I... I will not be reduced to a stereotype. Or a tag.\"\n\n\"Okay,\" he says.\n\n\"I am more than just a birth defect, or-or a condition. I'm-\"\n\n\"Your poetry was beautiful,\" he says, interrupting, and just like that the wheels are falling off my rant. \"That was what got my attention.\"\n\n\"Uh...\"\n\n\"I try to get to know all my students a little bit, in the first few classes. You remember...\"\n\n\"Uh huh.\"\n\n\"...but you stood out. Very early.\"\n\n\"Uh huh.\" I feel proud for managing to make any sound at all, even if the sound makes me look like a completely moron.\n\n\"I will say that I... I don't know... suspected? ...that you might have been... transgendered...\"\n\n\"Uh huh.\"\n\n\"You had this whole theme... in your work. Of metamorphosis, and birth, and starting over... A lot of students see college as a time to reinvent themselves. You know, it's not unheard of, but... It was different for you somehow. Whether or not your new beginning was literal or metaphorical didn't affect me wanting to ask you out tonight.\"\n\n\"Uh huh.\"\n\n\"Are you okay?\"\n\n\"Uh huh.\" I blink and shake my head. \"I mean, Yes.\" I take a sip of water to buy me a few precious seconds.\n\n\"Okay. And is it okay that I said transgendered? You just got done saying you don't-\"\n\nI smile watching him flounder, and wave my hands to get his attention. \"What's important is that I don't want to nitpick words. English simply doesn't have great choices sometimes, so we have to make do. I promise I won't be offended as long as you're attempting to be respectful.\"\n\n\"That's... huh.\" He sits back and shifts to one side of his chair, with his fingertips running through his beard. \"That's very understanding.\"\n\n\"It's not a very popular approach, I know. People like to offended by everything because they think it gives them some moral high ground, but... I don't want to spend my life being frustrated by everything around me. I've got too much I want to do, you know? I choose not to be insulted by the well-meaning.\" I take a sip of water, wetting my parched throat, and smile. \"Of course, assholes are a completely different story.\"\n\nThe waiter came up at that moment, politely introducing himself and taking our drink orders, and as soon as he's gone Calvin is looking at me again. It's the same expression he had when he'd watch students give oral presentations (yes, I was usually watching him when others were giving presentations). Absorbing, appraising, and weighing. It's hard not to blush, especially as a bit of silence settles in.\n\n\"Do you mind if I ask you some questions?\"\n\n\"Sure,\" I say, smiling. \"Fire away.\"\n\n\"How far along into your transition are you?\"\n\nI lean my head back and forth from side to side, trying to figure out where to start. \"Well, I've been on hormones for three years now. I'm pretty much done... changing.\"\n\n\"You are an exceptionally beautiful woman,\" he says, just as simply as that.\n\n\"Thank you,\" I stammer. I don't usually think of myself as 'pretty', and I don't mean that self-deprecatingly. I think I pull off 'cute' very well, especially with my wardrobe, but I can usually look around at a moments notice and find a lot of people prettier than I am. Beautiful is just...\n\n\"Have you had any surgeries?\"\n\n\"I, um...\" I have to cough to clear my throat. He thinks I'm beautiful. \"I was in a trial for something called a... a puberty blocker? so my... I didn't get a lot of the secondary masculine stuff.\" He thinks I'm beautiful. \"My shoulders didn't get very broad. My face didn't widen the same. My voice isn't as deep. I didn't need a lot of feminization because... um... \" He thinks I'm beautiful.\n\n\"I see,\" he says, stepping in when my voice falters. \"So no surgeries.\"\n\n\"No,\" I croak, and then blush. He thinks I'm beautiful!\n\n\"Okay then.\"\n\nHe smiles, and I freeze with panic as I realize what he was really asking. No surgeries. I have no idea what to say. I mean, it's not like I need to correct him, but somehow I ended up answering his question without even knowing what he was asking! If that's even what he was asking! I squirm in my chair, crossing my legs even tighter, as the silence stretches out. My nervousness rises steadily until I realize that he's still sitting there. He's still smiling at me. He still wants to be here. That takes several more seconds of breathing to get through.\n\nThe waiter returns with our drinks, and I take a healthy sip of my wine. I'm a little self-conscious of it afterwards, but Calvin is still just smiling at me.\n\n\"Are you ok?\" he asks.\n\n\"Yup!\" I squeak nervously.\n\n\"Okay, okay.\" He smiles and shifts in his chair. \"Let's switch subjects.\"\n\n\"Thank you!\" I sound like a mouse. Before he can start the waiter comes back and takes our order, and I savor every second that the attention is off of me. It lets me catch my breath. As soon as the waiter is gone, Calvin smiles happily.\n\n\"So.\"\n\n\"So!\"\n\n\"Do you want to talk about me for a little bit?\" Bless his heart.\n\n\"Well,\" I say, \"why don't we try a little back and forth?\"\n\n\"Okay,\" he says, nodding slowly. \"Okay. You first.\"\n\n\"How long have you been teaching?\"\n\n\"It'll be 15 years... hmmm...in... Well, let's say almost 15 years.\"\n\n\"Almost 15 years.\"\n\nHe smirks and raises an eyebrow at me, and I coyly probe the inside of my cheek with my tongue. \"And, I don't know, three or four before that where I was a teaching assistant working on my PhD. A long time.\"\n\n\"Your turn.\"\n\nHe shifts to his side while he stares at me. \"What's your major?\"\n\n\"Veterinary nursing.\"\n\n\"Like a Vet Tech?\"\n\n\"Mmmhmm!\"\n\n\"Huh.\"\n\nI waste no time firing right back. \"Have you ever dated a student before?\"\n\n\"No,\" he says, blushing a little, \"and you're not my student anymore.\"\n\n\"What about ex-students?\"\n\n\"You're the first.\" It's hard to hear, or maybe accept, that what he's saying is that 'I'm special'. \"Okay. I need a good one.\"\n\n\"The pressure is on, Professor.\"\n\n\"Please call me Calvin,\" he says, blushing.\n\n\"Ok, but I'm counting that as a request, which is technically a question.\"\n\n\"What? No, that's...\"\n\nI laugh as he narrows his eyes. \"Have you ever slept with a student?\"\n\n\"Jeeeus,\" he says, leaning in over the table to whisper. \"I already answered that!\" Eyes wide, with a grin that's so subtle as to fool anyone out of earshot.\n\n\"Dating and fucking are two very different things.\"\n\n\"I guess they can be, but... not for me.\"\n\n\"Interesting,\" I say. \"Your turn.\"\n\n\"Why a Vet Tech?\"\n\n\"Hmmm,\" I say, taking a sip of water. \"Well... \" I stare down at the table for a minute and sigh. \"I almost don't want to answer this because it's not a fun 'first date-y' answer, but-\"\n\n\"It's okay,\" he offers. \"You don't have to answer.\"\n\nI take another deep breath. \"Part of it is that I like animals. Obviously.\"\n\n\"Of course,\" he says with a smile.\n\n\"Part of it is that it's a field I can get into quickly that pays relatively well.\"\n\n\"Is speed a factor?\"\n\nI nod. \"And part of it is that I... am... most likely going to be... sterile. I kind of always wanted to be a nurse, but...\"\n\n\"Oh... Kit, I'm sorry.\"\n\n\"It's okay,\" I say, holding up a hand to stall him. \"That was always a part of the bargain. I uh... I knew that going in.\"\n\n\"That doesn't make it any easier.\"\n\n\"No. No it doesn't.\" After a small pause, I add, \"I'm sorry.\"\n\n\"Sorry for what?\" he asks incredulously.\n\n\"For... bringing us down.\"\n\n\"Do you know what it was about your poetry that really caught my attention?\" I shake my head. \"You would write these incredible, introspective pieces, about things that were going on around you, and things that were happening in your life at the time, and it was sort of... beautifully honest. Sometimes very brutally honest, which few can manage about themselves.\"\n\nI nod, swallowing hard.\n\n\"There is something really endearing about how...\" He waves his hands in the air in front of himself, gesticulating to help summon the vocabulary he desires. \"...upfront you are. It's refreshing.\"\n\n\"Thank you,\" I whisper.\n\n\"It seems like everyone else is so busy flexing their Twitter muscles and hiding behind a username, and you just... you put yourself out there, as you are. And that's impressive.\"\n\n\"Thank you.\"\n\n\"I told myself, after that semester was over, that if I had the opportunity to get to know you better, I would take it.\" He smiles warmly, and my heart melts. \"And here we are.\"\n\n\"Here we are,\" I say, managing a weak smile.\n\n\"Thank you for coming tonight.\"\n\nI nod, smiling a little brighter, and as if perfectly choreographed our food arrives to provide another much needed distraction. I thank the servers politely. Even as we're quietly enjoying our food, I keep catching him looking up at me. Of course, the only reason I see that is because I'm trying to sneak a few glances at him too, and we share a few blushes.\n\n\"So,\" he says, prepping me a full thirty seconds before he's ready to swallow and talk any more. \"So, just to let you know, I fully plan on asking you out again.\" I giggle and cover my mouth. \"That's... that's coming.\"\n\n\"Oh, well, if it helps at all, I'm gonna say yes.\"\n\n\"That takes some of the pressure off.\" He breathes a little easier and nods. \"I'm glad you know your Whedon. And you're okay with the... um...\"\n\nI tilt my head to the side, eyebrows rising as he grasps at straws. \"You're adorable when you're flustered.\"\n\n\"Age difference, is what I was going to say.\"\n\n\"I am,\" I say, shrugging. \"I decided, years ago, that I didn't have time in my life for people that weren't worthwhile. I don't care what shape, type, or form you are. What matters is that you... matter. That you have substance\"\n\n\"And I have substance?\"\n\nI bite my lip and nod, blushing again, and that touches off a lengthy back and forth of not quite meeting each other's eyes while we work on our meals. The truth, though, is that my stomach is so twisted into knots that I'm having to force myself to chew through anything. I'm already thinking fifteen minutes ahead.\n\n***\n\n\"Would you like to share a cab?\" I ask, fifteen minutes later, just after he hands the waiter his card.\n\n\"Shh... um... Sure. Are you headed... uptown?\" He pauses, looking around to try and orient himself toward whatever direction his home might be, but I cut him off.\n\n\"Would you like to share a cab?\"\n\n***\n\nAs if he hadn't done enough, Calvin held my hand. He held doors, and he hailed the cab for us, and he held my hand. I kept staring down in disbelief. I loved that he held my hand. Calvin Ayers. Professor Calvin Ayers.\n\nHe didn't say a word when I pulled him out of the cab, though he also wasn't trying to get out before me. He let me take the lead. The perfect mix of confidence and self-assurance. Accepting as I started up the stairs, but without any hint of expectation. I kept having to look back to check that it was really him.\n\n\"Here we are,\" he says, pausing modestly at my door. I need both hands to get it open, and he waits just beyond the threshold when I bounce across. \"Kit, I had a-\"\n\n\"I would like it if you'd come inside,\" I say, smiling hopefully.\n\n\"Are you sure?\" he asks, and I nod emphatically. I back up as he steps forward, keeping myself squared with him, and my skin is so hot I'm surprised my clothes aren't combusting. As soon as he clears the path of the door I push it shut behind him. He looks nervous. Not scared nervous, but... worried-for-me nervous. \"Kit, I promise, I had a-\"\n\n\"Do you know why I said yes? When you asked me out?\"\n\nHe shakes his head, and I take another step forward. Even in heels, he's still a good four inches taller than I am.\n\n\"I have... fantasized... about you.\" He swallows, throat and jaw clenching, and nods. \"A lot.\"\n\n\"Really?\"\n\nI bite down hard on my lower lip, flushing away the blood with sheer pressure, and nod. \"A lot.\"\n\n\"What-what...\" He swallows again, and leans back just the tiniest amount. Not fearfully, but... in confusion? Maybe? \"What did, I mean, what do-\"\n\n\"That was why I said yes.\" He nods quickly, accepting that as an answer. \"To... I don't know... satisfy the fantasy, but... I invited you up because you were more than I had dreamed.\" I step a little closer, and have to lean my head back. God, I love that he's tall. \"I had a lovely time tonight. You were a real gentleman, and real gentlemen get their cocks sucked.\"\n\nInstant panic, chased by excitement, arousal, and sheer surprise. I tremble watching them run rampant across his face. His lips work frantically. Blinking furiously. He leans back a little further, and I take the final step between us, so that our bodies are pressed together. My small, hormone-granted breasts press into his chest. Swelling outward and flattening inside my bra. I reach up and lay my hands on his shoulders, soaking in his flustered disbelief.\n\nBefore he gets out another word, I slide my right foot back behind me and bend the left knee. As soon as the right knee touches the floor, I swing my leg out and get it beneath me as well. Constant eye contact, looking straight up at him. He practically chokes as I unzip his pants. It doesn't take much fishing around to find the thickening shaft hanging inside of his boxers, and I smile as I pull his length through.\n\n\"Kit,\" he croaks, as I run my tongue along the thick vein. I smile, stroking him gently with my right hand while the left reaches into his boxers again to pull out the fleshy pouch. He groans as I stroke him at an angle, and leave him an unobstructed view of the first time I suckle on one of his tender jewels. \"Oh fuck.\"\n\nI draw the whole thing deeper into my mouth, gently massaging it against the roof with my tongue. The webbing of my thumb is slick with my own saliva. God, I hope this is just the first time.\n\n\"Are-are you sure?\" he asks, his voice only slightly steadier. \"I'm... I'm...\"\n\nI shift my feet beneath me, so that the balls and my toes are gripping the floor. My black pumps flex out and away from the soles of my stockinged feet, and I sit back on my heels. His cock swells in my palm as I stroke him. Squeezing a little harder. Dragging the velvet flesh up and down the solid shaft within. Half of his sack is shiny with my saliva.\n\n\"I'm sure,\" I say, just before I take his head in past my lips. Calvin groans, still staring down at me. I keep my right hand firmly planted against his pants. The belt buckle feels cool against my palm. It's not until I'm there, with the full distance between he and I that I really take in his length, and it's more than I usually fantasized. He's longer than I am. I tremble as I swallow a little more.\n\n\"Jesus, Kit.\"\n\nI work slowly, bobbing and savoring. The heady musk. I run my tongue along the flared ridge, teasing and coaxing him. Luring him. The skin of my cheeks, neck, and chest, flush bright red, and my eyes roll up behind the lids as I take him deeper. Deeper.\n\nProfessor Ayers.\n\nUnbidden, my left hand slides up his leg. Up over his hip. Calvin grunts as I take his wrist and guide his hand toward the top of my head. His touch is hesitant. Safe. Amazing. Even pressure across the entirety of his palm...\n\n...and then the tips press in and down. The pads of each finger grip through the shiny black hair. My left hand drifts down again to rest on my thigh. I'm still setting the pace, still controlling the speed, but his hand is matching me. Helping me. I groan loudly, giving voice to my body's need for me to be touching it.\n\nCalvin's grip tightens, grabbing at my scalp, and stops my moving. Stopping my rocking. I whimper and nod, careful to keep my teeth from his magnificent flesh. He pulls away my right hand, and I let it fall. Both hands pressed flat down against my thighs. I look up at him fearfully, knowing I would gag and gag hard if he tried to go too fast or too far.\n\n\"Trust me,\" he says, and I melt.\n\nHe grunts as he thrusts into my mouth. I have to open my jaw wider to make room for the engorged head, and saliva quickly overflows my lower lip. I flinch, and my eyes close reflexively the first time he pushes too far, and he pauses. Holding himself just at that edge. After a few seconds, I manage to pry one of them open, and the look he gives me makes me shudder. Desire, tempered with self-control and patience.\n\n\"Unbutton your shirt.\" My cheeks ignite. Fingers fumbling furiously. Two buttons. Three. \"Those are a lovely handful, aren't they?\" His tone is so warm and encouraging. I've heard almost those exact words before, said differently, and felt ashamed... but from him?\n\nWhen he says it, I feel beautiful.\n\n\"Spread your knees.\" I whimper gratefully as I widen my stance. My skirt rides up my thighs, exposing the banded tops of my stockings. \"Let me see it.\" My left hand reaches in beneath the skirt, hooking and pulling down on my dark blue panties while the right reaches in for my aching cock. Calvin leans his head slightly to the side, tilting from the hip, and watches. I keep my palm flat, displaying for him rather than stroking, even though every cell in my body is singing for me to take hold and finish with him.\n\nHis hold on my head never falters, and never lessens, and it's slow when he starts driving his cock into my mouth again. Slow and steady. Never too deep, never too fast, but always pushing right up to that limit. Tears streak from the corners of my eyes as he goes faster. Pushing me. My cock, fully hard, leaks a thick drop of precum onto the floor in front of me.\n\n\"Oh,\" Calvin groans, his voice becoming very tight. \"Oh. Oooh.\"\n\nHe says nothing more, but the throbbing of his shaft is warning enough. My throat closes completely when the first volley of salty crystal slides over the back of my tongue. My mouth, already backed up with saliva I couldn't swallow, nearly overflows with the addition of his seed. In a panic, I seal my lips tight around his shaft to save it, and my cheeks puff out.\n\n\"Are you stuck?\" he asks, after several seconds spent completely still. I whine and nod, and Calvin slowly draws his hips back. The surface of his shaft is like a long glistening pearl. Once he's down to just the head still inside my mouth, I can finally force myself to swallow. It takes more than one.\n\n\"Thank you, Daddy,\" I gasp, chest heaving for air. My eyes bulge, and I freeze completely when I hear my own voice. Did I just...\n\n\"You're welcome, Babygirl.\"\n\nDid I just do that?! I can't force my eyes up past his knees. Did I just call him Daddy?! And did he just...\n\nCalvin hums softly to himself as he zips up, and after a few awkward seconds, slips back out the front door. The latch clicking into place is like the crack of a starting gun. My eyes drift closed, and my fingers wrap tightly around the shaft. I sag forward, left palm planted on the floor in front of me, and stroke myself. Faster. Faster. I can still taste him. He was inside of my mouth. Inside of my body. Inside of me.\n\n\"I can't believe I called him Daddy,\" I moan, and the nervous, wrenching agony inside me explodes onto the paneled wood floor in a long off-white streak. Two streaks. Three. My head hangs down, heavy, with saliva and his cum dripping from my lips. I finally release the vice grip on my cock and reach up blindly to turn the lock on the deadbolt.\n\nHe called me Babygirl. Without missing a beat.\n\n***\n\nWeds. 4:42 pm<br />Hey\n\n<p style=\"text-align:right\">Weds. 4:42 pm<br />Holy shit!<br />You didn't forget!<br />Hi!</p>\n\nWeds. 4:44 pm<br />There's no way I was going to forget you after <br />Saturday night.<br />You really one-upped me at the end there.",
        "Weds. 4:50 pm<br />Still with me?\n\n<p style=\"text-align:right\">Weds. 4:50 pm<br />Yes! Yes, I'm here<br />Had to find a mirror to see if my skin was glowing</p>\n\nWeds. 4:51 pm<br />Are you radioactive? Should I be worried?\n\n<p style=\"text-align:right\">Weds. 4:52 pm<br />From blushing!<br />Goober!</p>\n\nWeds. 4:52 pm<br />Oh!\n\n<p style=\"text-align:right\">Weds. 4:52 pm<br />I'm really sorry about that<br />I was so turned on, which is really a compliment to you, that<br />I just started talking without thinking, which is kind of a<br />problem for me sometimes. Which, yanno, because: you<br />Can I start over?</p>\n\nWeds. 4:53 pm<br />Sure\n\n<p style=\"text-align:right\">Weds. 4:54 pm<br />Hi!</p>\n\nWeds. 4:54 pm<br />Hi!\n\n<p style=\"text-align:right\">Weds. 4:54 pm<br />I had a really great time on Saturday<br />Like a *really* great time</p>\n\nWeds. 4:55 pm<br />I did too!<br />I'm so glad!<br />Are you free this weekend? I would really like to see<br />you again.\n\n<p style=\"text-align:right\">Weds. 4:57 pm<br />I thought you were never going to ask!<br />Yes!</p>\n\nWeds. 4:59 pm<br />Ok great!<br />I've got a class starting in a minute, but how about this<br />Friday? Maybe 8?</p>\n\n<p style=\"text-align:right\">Weds. 5:02 pm<br />Sounds great!<br />Friday at 8!</p>\n\nWeds. 9:07 pm<br />So you fantasized about me?\n\n<p style=\"text-align:right\">Weds. 10:10 pm<br />Hang on<br />I'm just going to microwave this burrito with my cheek<br />I can't believe I told you that</p>\n\nWeds. 10:27 pm<br />What did you fantasize about?\n\n<p style=\"text-align:right\">Weds. 10:29 pm<br />Hang on. I'm about to get on the train</p>\n\nWeds. 10:30 pm<br />So?</p>\n\n<p style=\"text-align:right\">Weds. 10:30 pm<br />So there's people all around me!</p>\n\nWeds. 10:31 pm<br />So?\n\nWeds. 10:34 pm<br />Did I lose you?\n\n<p style=\"text-align:right\">Weds. 10:34 pm<br />I'm here</p>\n\nWeds. 10:34 pm<br />Do you not want to talk about it?<br />It's ok if you don't. I didn't mean to push.\n\n<p style=\"text-align:right\">Weds. 10:34 pm<br />It means a lot that you said that</p>\n\n<p style=\"text-align:right\">Weds. 10:36 pm<br />It started with some pretty standard \"Meet me after<br />class\" stuff. You'd tell me that you've noticed me<br />staring. For me, at the time, 'being seen' was a really<br />big deal. Like I was trying hard to blend in, and to<br />have you see through that was really powerful</p>\n\n<p style=\"text-align:right\">Weds. 10:39 pm<br />You were curious about me. That was how it usually<br />started. Sometimes you'd take me back to your office.<br />Sometimes you'd make me strip right there in class, <br />after everyone else was gone. Most of the time, you'd <br />fuck me bent over a desk or something, but if I was really<br />turned on, you'd fuck me face to face</p>\n\n<p style=\"text-align:right\">Weds. 10:44 pm<br />After a while, and especially after that semester was over,<br />the locations shifted. You'd visit me at work and we'd fuck<br />on my break in the bathroom. You'd come into my <br />bedroom at night, we'd fuck</p>\n\n<p style=\"text-align:right\">Weds. 10:45 pm<br />I'd see you on the train, and we'd fuck</p>\n\nWeds. 10:47 pm<br />I am curious about you.\n\n<p style=\"text-align:right\">Weds. 10:47 pm<br />Fuck!</p>\n\nWeds. 10:48 pm<br />Are you still on the train?\n\n<p style=\"text-align:right\">Weds. 10:48 pm<br />Yes</p>\n\nWeds. 10:48 pm<br />If I told you to touch yourself, right now, would you<br /> do that?\n\n<p style=\"text-align:right\">Weds. 10:49 pm<br />Fuck!</p>\n\nWeds. 10:49 pm<br />Touch yourself.\n\n<p style=\"text-align:right\">Weds. 10:49 pm<br />Fuck!</p>\n\n<p style=\"text-align:right\">Weds. 10:52 pm<br />I moved<br />I'm at the end of the car, and I've got my leg up against one<br />of the poles to block the view. I have my hand down my <br />pants while I</p>\n\n<p style=\"text-align:right\">Weds. 10:52 pm<br />Shit. while i Type with one hand</p>\n\nWeds. 10:53 pm<br />I've never met anyone like you.\n\n<p style=\"text-align:right\">Weds. 10:54 pm<br />Fuck!<br />I am *so* hard right now. You have no idea<br />My exit is coming up<br />I'll be thinking of you when I get home, Daddy</p>\n\nWeds. 10:54 pm<br />Good night, Babygirl.\n\nThurs. 9:47 pm<br />Hey!</p>\n\n<p style=\"text-align:right\">Thurs. 9:47 pm<br />Hey!<br />Are we still on for tomorrow?</p>\n\nThurs. 9:49 pm<br />Absolutely!</p>\n\n<p style=\"text-align:right\">Thurs. 9:49 pm<br />Whew!<br />I was worried for a second when I saw it was from you</p>\n\nThurs. 9:51 pm<br />Actually, I had a question. If you don't mind.\n\n<p style=\"text-align:right\">Thurs. 9:51 pm<br />Shoot!</p>\n\nThurs. 9:52 pm<br />When you would fantasize about me, and about getting fucked by me, did it involve your penis?\n\n<p style=\"text-align:right\">Thurs. 9:55 pm<br />I'm not sure how to answer that<br />Do you mean 'did I see myself as being post-op', or <br />'was my penis present?', or do you mean 'did I ever fuck<br />you?'</p>\n\nThurs. 9:57 pm<br />The last two are close. I'm asking if I interacted with it.</p>\n\nThurs. 9:58 pm<br />Your penis, I mean.</p>\n\n<p style=\"text-align:right\">Thurs. 10:01 pm<br />Sometimes. It varied<br />No, I never fucked you, but you would often grab the shaft<br />Especially if we were fucking face to face</p>\n\nThurs. 10:03 pm<br />I just grabbed it? I didn't... jerk you off as well?\n\n<p style=\"text-align:right\">Thurs. 10:03 pm|<br />Fuck!<br />You always made me cum, Daddy<br />Sometimes you did it forcefully, bending me over and <br />fucking me hard. Sometimes you did it tenderly, <br />stroking me while you were inside of me.<br />It usually had more to do with the kind of day I <br />was having, if that makes sense</p>\n\nThurs. 10:10 pm<br />Have you ever fucked someone?\n\n<p style=\"text-align:right\">Thurs. 10:11 pm<br />Yes</p>\n\nThurs. 10:13 pm<br />Do you enjoy it?</p>\n\n<p style=\"text-align:right\">Thurs. 10:15 pm<br />Yes<br />It's different than being fucked</p>\n\nThurs. 10:15 pm<br />Better, worse, or just different?</p>\n\n<p style=\"text-align:right\">Thurs. 10:18 pm<br />Just different</p>\n\nThurs. 10:20 pm<br />I'm not asking because I'm in any way unhappy with<br />the things we've been talking about.<br />I'm asking because I care.</p> About you. About what you want.<br />About what you need.</p>\n\n<p style=\"text-align:right\">Thurs. 10:25 pm<br />I'm a little scared right now that I was right about you</p>\n\nThurs. 10:25 pm<br />About what?</p>\n\n<p style=\"text-align:right\">Thurs. 10:26 pm<br />That you're a really good guy</p>\n\nThurs. 10:34 pm<br />Thank you.</p>\n\n<p style=\"text-align:right\">Thurs. 10:35 pm<br />No. Thank you<br />Tomorrow?</p>\n\nThurs. 10:35 pm<br />Tomorrow.</p>\n\n***\n\nI take a few seconds to nitpick at how the one-piece red dress is sitting on my frame before moving past the coat check. Nervous butterflies. It feels like years of practice have lead up to this moment. Interminable vocal coaching. Forever spent learning to walk in heels. Years spent quietly watching other women and adopting mannerisms, postures, and body language. A lifetime watching makeup tutorials.\n\nSomehow, none of this occurred to me on the first date. I was so focused on the fact that I was going to see him (The him!) that I'm surprised I was able to string two words together coherently. Calvin Ayers. Still gives me shivers.\n\nSometimes I wonder how conscious other women are of the time spent acquiring these skills.\n\n\"Kit!\" he calls, surprising me more by his location near the bar than his volume. It's hard to keep myself from skipping across the room to see him. \"You look fantastic!\"\n\n\"Thank you!\" I say, twisting and blushing. I try to think of a good way to return the favor, because he does look amazing, but the smell of him makes me lose my breath. In the best possible way. His charcoal gray suit, paired with a dark blue shirt, accentuates all the right parts of his shoulders and chest. The best part of it is how comfortable he looks looking so good, if that makes any sense. I lay my hand over my chest as I look him over head to toe, and murmur, \"Oh...\"\n\nCalvin smiles, modestly nodding his head. \"Thank you, I think,\" to which I nod emphatically. \"Would you like to sit down?\"\n\n\"Mmmhmm!\" is all I can manage. He grabs my arm, gently but firmly, when I take a step toward the dining area, and shakes his head at my obvious confusion.\n\n\"No. This way.\"\n\n\"Okay,\" I whisper. He lets go of my bicep and wraps his around my shoulder, keeping me next to him as he shows me the way. It feels incredible to be so close to him. I keep having to fight down the thought that he's what I deserve after all the struggles I've been through. That feels too fated, and I've never really bought into the larger cosmic Karma system. Still, it is tempting to dream that I've earned this man.\n\nCalvin leads me past the bar and down a hallway. Around a turn, through a door, and then another turn puts us in a fairly spacious room with a long table running through the middle of it.\n\nI raise my hand, pointing indistinctly at the many chairs. \"Will...\"\n\n\"Don't worry,\" he says, his hand sliding down my back. \"We'll be alone tonight.\"\n\n\"I was worried for a second,\" I say, laughing nervously.\n\n\"Not a chance.\" His hand drifts a little lower, pressing against the small of my back. \"I want you all to myself.\"\n\nOnly a supreme effort of willpower keeps my knees from knocking, or otherwise collapsing, and it takes a few seconds before I feel confident enough to take a step.\n\n\"Do you like salmon?\" he says, as he moves toward the end of the table. I nod, not trusting my voice to have any strength either. \"They have a delightful salmon dish with a touch of lemon and parsley, and they-\"\n\n\"Yes,\" I squeak, finally finding my voice.\n\nHe smiles and tilts his head. \"You don't want to know what else is on the dish?\"\n\n\"Actually,\" I say, taking careful steps, \"what I want... is to... trust you.\" My eyes dart wildly across the floor, not quite rising up enough to meet his intense gaze. \"Not all the time, and not with everything, but...\"\n\n\"But sometimes.\"\n\nI nod.\n\n\"I've never met anyone like you,\" he says softly, and that touches off a burst of red in my cheeks. \"We're just getting to know each other, Kit. There will be some missteps.\"\n\nI nod.\n\nHe stops, considering. Brow lowered. But instead of saying anything, he reaches over and pulls out my chair for me. Inwardly, there is an explosion of color and triumphant sound. Horns and choirs of angels.\n\n\"I'll try,\" he says, smiling as I sit down.\n\n\"Try is a beautiful word.\" He quirks his brow at me as he sits down diagonally from me. \"Star Wars gave it a bad rap, but... I don't know. I think it's full of good intention.\"\n\n\"Intention,\" he says thoughtfully. \"That's really important for you, huh.\"\n\nI nod. Emphatically. \"It means everything. Sometimes, it means more to me than the outcome.\"\n\n\"Really,\" he says, with an almost questioning tone.\n\n\"Mmmhmm! Try has a kind of experimental... experiential... vibe to it that I like, you know? It's like... growing as a person is a trial and error process, and success isn't guaranteed. It's the trying that matters.\"\n\n\"I can appreciate that.\" He holds my gaze for a moment, weighing a decision, and then reaches over to lay his hand over mine. \"I'll be right back.\"\n\n\"Okay,\" I squeak. On the one hand, I hate that my voice keeps breaking when I try to talk to him, but at the same time I love how it exposes the way he makes me feel. More than that, I love the way he smiles whenever it happens. He gives my hand a quick squeeze before he strides out of the room, leaving me alone. I listen for the sound of his footsteps as he travels down the hall and back through a door.\n\nIt's only then that I notice the far wall, opposite the door behind me, is mirrored. Somehow it's easier to take in the beauty of the room when I'm looking at the reflection of it than it is to look around. Like it's easier to see if I dissociate the fact that I'm there. The table is a beautiful dark wood, and the chairs are an elegant match. The linens are a gorgeous pattern in a rich creme.\n\nIt's hard to feel like I belong near any of it.\n\nThe sound of his footsteps, down the hall, brings me back with a start. I turn, with my legs crossed to the side, and look back over my shoulder.\n\n\"Sorry about that,\" he says as he comes back in. He shuts the door behind himself and finally takes off his jacket. \"Had to take care of something.\"\n\n\"It's okay.\" I bite my lip watching the way his shirt moves around his chest. The places where it gets tight when his arms move just so.\n\n\"So.\" He sits back down, relaxed but focused, and smiles at me. \"Tell me something I don't know about you.\" One arm resting easily on the end of the table, while the other reaches back up to scratch at the tip of his chin.\n\n\"I... um...\" I look around, floundering. \"I... paint!\"\n\n\"A poet and a painter?\"\n\n\"Barely,\" I giggle nervously. \"I don't have a very big apartment, but one whole corner of it is dedicated to my watercolors.\"\n\n\"Suddenly I wish I'd paid attention more in my art history classes,\" he laughs. \"The best I can come up with is a fuzzy memory of... is it... Renoir?\"\n\n\"Fuzzy is, actually, very right!\"\n\n\"How do you like that?\"\n\n\"He did whole landscapes and stuff. I usually just focus on one thing, and color it with how I'm feeling. I think what I do is probably considered 'impressionist', but that's attributing me way too much talent.\"\n\n\"Is it alright if I reserve judgement until I see one for myself?\"\n\n\"Yes?\" I squeak, and immediately bite my lip hard. \"By which I also mean yes you can see them? Sometime?\"\n\n\"Good,\" he says, and I shrink a little in my chair. He's undressing me with his eyes, and it's... it's forward, and it's confident, and it's so, so, so, so fucking sexy.\n\n\"My ex really liked them. She said I should paint more.\"\n\n\"She?\"\n\nI blush and nod. \"I... date.\" His reaction is a weighing one. Considering. I can't stop myself from blushing more.\n\n\"I want to try something,\" he says abruptly. \"Would you-\"\n\n\"Yes,\" I interrupt, nodding quickly. His smile widens considerably.\n\n\"You are...\" He trails off and just stares at me for a moment, and then he's up and out of his chair. He walks behind me and pulls two of the chairs next to me away from the table. Then he comes back to me, takes my hand in his, and pulls back on my chair. At first his grip is light, but when I squeeze his hand for help standing, he squeezes right back. Matching me in the moment. Supporting and guiding without pulling or steering. Confident.\n\n\"Here,\" he says, as he leads me around to the empty spot and turns me so that my back is to the table. He pats the tabletop behind me and tilts his head, gesturing for me to sit, so I do. He steps back with a smile, gaze lingering on my crossed legs, thighs and calves, and pushes each chair in just a little bit. Not quite boxing me in but enough so that the cushions are angled toward me. \"Lean back.\"\n\nI purse my lips, taking steadying breaths, as I plant both hands behind me on the table, and follow his instructions. He smiles a little wider every time my eyes dart back and forth between him and the door.\n\n\"One foot here,\" he says, reaching down to pat the seat of the chair on my right. I uncross my legs slowly, feeling much more heated with every second. \"And one foot here.\" I do as he says, and my breath is coming much faster now. My knees are almost even with my shoulder, each a little wider and a little lower. While there isn't a lot of space between the chairs, there's enough for Calvin to step between them. Between my legs. I gasp when he places his hands delicately just above my knees.\n\nI stare up at him, drinking in every second of his reaction, as his fingers slide along my thighs. He pushes when he reaches the bottom of my dress, sliding farther and farther. Exposing my black lace panties. He finally looks back up at me as his fingers peel back the sheer fabric, pulling it away and down until he can tuck it underneath my tender orbs.\n\n\"You're hard,\" he says.\n\n\"Yes, Daddy.\"\n\n\"Good. I want you to stay that way.\"\n\nI nod when I find myself completely incapable of speech. He curls his fingers behind my right shoulder and slowly guides my arm, and then hand, forward, until my fingers curl around the base of the shaft.\n\n\"Just like that. Okay?\"\n\n\"Okay,\" I croak.\n\n\"The only thing I want you to move is this hand,\" he says, brushing his fingers across the knuckles of my right hand. \"Up and down.\"\n\n\"Up and down,\" I repeat, with very little volume, and move my hand slowly to show him I'm listening. God it feels good to touch myself for him. Again.\n\nCalvin smiles and nods. \"Just like that. A little faster or slower is fine, but just like that.\"\n\nI whimper a little as he takes a few steps back and then turns.\n\n\"Up and down,\" he says again, as he reaches the door. My throat closes entirely as he opens it, blocking the view into the hall with his body while he leans to look both ways, and then slips out.\n\n\"Oh fuck,\" I whine. I can still make out his shadow under the very bottom of the door. Two black lines as he guards the entrance. Making me vulnerable and protecting me at the same time. I stroke faster, chest rising and falling rapidly.\n\nAnd then those two black lines disappear to my left. I gasp, listening desperately to the sound of his footsteps as he goes down the hall. The far door opening, and then shutting a few seconds later.\n\n\"Holy fuck!\" Exposed, literally left hanging with my dick in my hand, and I can't remember if I've ever been more turned on in my entire life. I keep trying to hold my breath to be quiet, but the throbbing pulse in my ears and my own steadily-increasing stroking are so much white noise.\n\nThe door opens and closes again. Footsteps. Hairs rise up on the back of my neck. A nervous tension I can't handle. Logically, I know it's probably Calvin and I'm trying to guess how hard the footfalls sound and compare that to my memory of how hard his feet fell and sweet jesus how many fucking steps are there between the doors and the mushroomed head is turning purple from squeezing and holy fuck the handle is holy fuck-\n\nThe door opens for a fraction of a second, enough for Calvin to slip through, and I scream. My knees come together as I curl in on myself, and the panic is just about blinding. For a second.\n\nCalvin smiles as he shuts the door behind himself, and just stands there. As soon as my limbs are ready to respond, after some of the shock has passed, I stretch myself back out into the position he put me in. There are no words to convey how hot my skin is.\n\n\"Not bad.\"\n\n\"Thank you, Daddy.\" The final word, barely audible.\n\n\"Remember. Up and down.\"\n\nI try to say 'Okay,' but my throat squeezes shut. I barely manage to nod as he turns and steps out the door again. Footsteps down the hall again. The door at the end of the hallway opens and shuts. Up and down. Up and down. I try to moderate my breathing. Four strokes breathing in, four strokes breathing out. The first bead of clear precum beads at the tip of my shaft, and spills down onto my index finger. Cool. Wet. Up and down. Up and down.",
        "Just when I think I have myself under control, comfortably allowing him to be in control of the moment, the door in the hallway opens again. Two voices. I can hear them talking, back and forth, and the terror shoots right up my spine. They keep their voices low, and I can't tell if either one of them is Calvin. I can't tell if either one of them is Calvin.\n\nI can't tell if either one of them is Calvin.\n\n\"Calvin,\" I whimper, pleadingly. \"Calvin.\" Up and down. They stop right in front of the door, conversing in low tones. My eyes go wide watching their shadows. Watching while they shift their weight back and forth. Up and down. Up and down.\n\nTheir voices get quieter, almost imperceptible, but they're still there. Still just out of earshot. Only the door between us. Only the door between me and them, whoever they are. Busboys. Bellboys. Really any kind of boys. Up and down. Up and down. My toes ache inside my heels from trying to bunch.\n\nUp and down.\n\nOne of the shadows moves down the hallway. Up and down. The hallway door opens. Up and down. The hallway door closes. Up and down. Barely breathing. The other shadow is still. Silent. Up and down. Panting. \"Calvin?\" Up and down.\n\n\"...Calvin?\"\n\nI shriek as the door swings open dramatically, bouncing against the far wall. My left hand comes up to cover my mouth, too late, as Calvin stands there in the door. His eyes are wild. Up and down. A little after-shriek escapes as well, though it's more muffled than the first. My body is just too on edge to contain itself. Up and down. Feverish. His right arm hovers out beside him, the hand level with the doorknob, as he steps further into the room toward me. Devouring me with his gaze. Up and down.\n\nUp and down.\n\nHe steps between the chairs, towering over me. I gasp, twitching, when he lays his hands on the insides of my knees. Up and down. Up and down. My lip is shaking so bad, as he steps in closer, that my whimpers have vibrato. Up and down. His fingers slide down my thighs, sending tremors and shivers in advance and in their wake.\n\nUp and down.\n\nUp and down.\n\nUp, and-\n\nHis fingers close around mine, and travel with mine, to the base. Driving hard into the base. Into my groin. He stares downward, watching intently as he touches me. As he cradles my shaft. The pleat in his pants shifts, betraying a stiffening beneath. I moan, trembling.\n\n\"M-m-my purse,\" I say, pointing vaguely in the direction I'm pretty sure there's at least a 40% change I might have left it. Calvin smiles skeptically as he bends over to pick it up. \"Front pocket.\" His eyes light up as he pulls out a small, translucent bottle with a purple lid. \"I... I b-brought it just in case.\"\n\nHe smiles wider as he turns and reaches into the inner pocket of his jacket, hung a few feet away on a hook beside the door, producing an identical translucent bottle of lube with a purple lid. \"Just in case,\" he says, matching my cadence.\n\n\"Oh fuck,\" I whimper. He tucks his own bottle back into his pocket, and keeps the one from my purse in his hand. Three steps has him back between the chairs. One more has him back between my knees. Towering over me. He hooks his hand behind my left knee and pushes it back. In toward my chest. Soon the right knee follows, bringing them together. He spreads his hands wide, stretching his thumb and pinky apart across the backs of my lower thighs and holding them up while he reaches down with his other hand to pull up on my lace panties. I grunt as I lift myself up off the table to allow them to slide.\n\nI straighten my legs, bringing them together just above his left shoulder. Calvin smiles as he regards my black heels, perhaps for the first time tonight, before casually taking hold of the spikes and slipping them from my feet. I shiver as they're exposed, curling my toes inward and wrinkling the soles. Each one lands with a dull thud on the carpeted floor behind him, and my panties finally slip free from my legs completely. Those, though, he carefully sets down on the table beside me.\n\nHe lets go of my legs and reaches down for his zipper, and I carefully lay my feet against his chest. The arches of my feet mapping the contour of muscle beneath. I bite my lip hard as I caress his jaw with the very tip of my big toe. He smiles and looks down at me with something close to playfulness as his fingers finally succeed in their task.\n\nI can't stop myself from leaning back further onto the table, and drawing my knees up and in. Exposing myself to him. Making myself vulnerable. Showing him where I want him. I reach down around my hips, fingers crawling across my pale curves, and spread myself for him. I can't stop myself from writhing on the table at the sight of how hard he is. I can't stop myself from whimpering as he uses my bottle of lube, squirting a little into his palm and smearing it thickly around the head.\n\nHe looks down at me, his fingers sliding over the head to prepare himself, and I want to freeze time. A moment of pure revelation. It's a beautiful thing to receive unconscious, or subconscious, acceptance as a woman, but to get it consciously? To show him all of who I am, and have him still want more?\n\nI will never be the same.\n\nAnd then he penetrates me.\n\nI moan, loudly, back arching up away from the table. Calvin grabs my hips and pulls me closer to the edge of the table. Even just taking the head is a squealing event, as he's a fair bit thicker than anyone else I've ever been with. I hook my arms around my knees and pull back, trying to spread my hips as much as possible. The burn is intense, and I pant feverishly as he gives a second, slow push.\n\n\"Do I need more?\"\n\nI love you. Or at least, that's what I think in my head. I nod tightly, and he slowly withdraws to the tune of a low groan. He upends my purple capped bottle again and lays thick teardrop right on the top of his head. Just as gravity takes hold, causing it to slide, he pushes the engorged mushroom against me and works it in a slow circle. Pushing more and more. Spiralling. Smearing. Corkscrewing. The muscles relax, relent, and receive him. I fall back into the table, groaning loudly, as he slides deeper and deeper inside of me.\n\nDistantly, I'm aware of a steady stream of profanity pouring from my lips. I can't keep my eyes on anything in the room for more than a second before they either slide past it or focus through it. The stars look beautiful tonight. The feel of him being inside me is amazing, more than I could have hoped for, but that pales compared to the bursting light inside. He wants me. He wants all of me. He wants to be with me. He wants me to enjoy this. He cares. Holy Mother of God, he cares.\n\nThe light inside surges, searing everything in its path. Burning through my skin. Heat flows off in waves. Vibrations emanate outward, shaking not just the table beneath me, or the hotel, but the very core of the Earth.\n\nMy head rears up with a startled gasp as Calvin takes hold of my penis for the first time. His own hand gripping me, without my hand in between as a buffer. His left hand still grips my hips, fingertips sunk into my flesh for leverage. His hips continue to drive away, spearing me over and over with his beautiful rod.\n\nAt first, he just holds me. Testing the feel of another cock in his hand. His fingers squeeze individually, applying separate pressure. Applying different pressure with each knuckle. Testing how hard I am. He leans it this way and that, fighting against how ridiculously engorged it is. Angling it toward me and toward him. And then he starts squeezing.\n\n\"Oh fuck,\" I cry, watching the head swell and darken. Reds and blues and purples. \"Oooh-ooooh fuck.\" My lips pull way back as I grit my teeth. It's all I can do to hold on to my sanity as he fucks me harder, and faster, with his thick hand wrapped tightly around me. \"Oh fuck! Oh Fuck!\"\n\nCalvin grinds to a sudden halt, his face stretched out in agonizing bliss. Scalding fluid jets into my cavity, filling in every empty crevice and space that breathtaking cock of his wasn't already occupying. My legs come loose and hook around his hips, locking at the ankles to keep him inside of me. The more he cums, the more he curls forward, and I leverage my legs to lean up to meet him. Both hands cradling his cheeks as I kiss him.\n\nDeeper.\n\nHis tongue is slow to respond, and a bit dry, but all of that only encourages me more. He finally lets go of my cock to plant a hand on the table for balance, to support both of us. His left hand comes up from my hip to cradle my head, fingers weaving into my jet black hair. Keeping me where he can kiss me, and when he finally opens his eyes...\n\n...his deep, blue eyes...\n\n\"I'm cumming,\" I whimper. He holds me there, staring deep into my eyes. Our noses brushing. \"FuuuuckfuckfuckfuckI'mcumming!\"\n\nOur bodies rise and fall at different paces, breathing inconsistently. His slower to my faster. His quiet to my helpless moaning. I love the thought of sharing the same air with him.\n\nIt feels like a lifetime passes before he moves, smiling while pushing himself upright. I move oppositely, lying back against the table to savor the beautiful sense of release. He coos as he pulls back, exiting me, and I squirm. I can feel his seed leaking back out of me. I fall in love with the idea of leaving a few covert drops of our mixed essences on the floor of such a beautiful room. It strikes a chord with a dirty side I wasn't even aware of having.\n\n\"I... uh...\"\n\n\"I know,\" I reply dreamily, running my fingers back across my scalp, through my hair.\n\n\"Wow.\"\n\n\"I know.\"\n\nCalvin pants, still standing between the two chairs. I prop myself up on my elbows and bite my lip. He hasn't made any move to cover himself. His beautiful shaft shines wetly, hanging down over the front of his pants like a trunk. I am completely enraptured by the way his body moves when he's merely breathing. We both look up at the same time, catching each other in the act of staring at each other, and share a brief blush. His more brief than mine.\n\n\"You know, I... I had...\" He pauses to swallow, and smiles. \"I had reserved us a room... a room-room, upstairs, also just in case. I had no idea we'd...\" He gestures around to the dining room. \"I didn't know we'd only make it this far.\"\n\n\"Like, a hotel room?\" I ask, with as much of a smirk as I can manage while under the effect of such powerful euphoria. He nods. \"Calvin Ayers, were you going to ask me to sleep over?\" He laughs and blushes, and dear fucking God he's so cute when he blushes! I bring my knees in tight and take hold of my feet. I feel like such a little girl around him. It's insane.\n\n\"I, uh... Yes,\" he says, nodding while his cheeks give off the equivalent of a 40 watt bulb. \"Yes I was.\"\n\n\"I don't know,\" I say, finally letting my legs come back down off the table toward the floor. \"I might have to ask my Daddy if it's okay.\"\n\n\"Jesus,\" he whispers, his throat tightening.\n\nI slide off the table and slink toward him, pushing my dress back down over my hips. Swaying. Prowling. \"Daddy?\" I purr, laying my hand gently against the center of his chest.\n\n\"Yes?\" He groans softly as I cross the final step between us.\n\nI roll up on my toes, straining for height, and reach down between us to take his rapidly-hardening dick in my hand. \"Can I stay over tonight?\" My voice rises and falls, crooning. \"I'm not done playing with my friend.\"\n\n\"Jesus Christ. Yes. Yes we can go upstairs.\"\n\nI smile widely as he leans down to kiss me, and it's gentle. Soft pecking. I think I'm in love. I carefully tuck his dick inside of his pants, working his zipper with every ounce of care I myself learned once upon a time, and work his belt back into place. All the while he's kissing me. All the while he's focused on only me.\n\nIt's not until he turns, moving past me toward the table to collect our things, that I realize that the door has been open this whole time. I cover my mouth to muffle the squeal, and Calvin laughs behind me.\n\n\"I paid the staff,\" he says, as he gathers my purse. I can't tear my eyes away from the hallway. \"I gave them explicit orders to stay away. There was never any real danger of anyone seeing you.\" He picks up my shoes and moves beside me. \"I was careful to protect you. I promise.\"\n\n\"Next time,\" I hear myself saying with a smile, \"don't tell me afterwards.\"\n\n\"Next time?\" he says, eyes practically falling out of his head. I nod slowly, amazed at how bold I feel around him. \"I swear... I've never met anyone like you.\" I've read about the freedom of submission, but I've never felt it myself. Not before this moment.\n\nHe takes my hand, squeezing lightly, and I fall in beside him. Still barefoot. He takes me to the front desk, and I hang from his arm. My front pressed into his side. My face buried against his bicep. I can't hide how turned on I am except by actually hiding.\n\nThe second the doors close in the elevator, he has me pinned to the wall. I feel weightless. Beautiful and powerful. His lips and tongue on my neck are just so much naked desire.\n\nIt's all I can do not to beg him to fuck me in the hall. Not to drop to my knees and worship his cock right there in front of someone else's room and show anyone who might pass by exactly how much I want him. It's almost more than I can take.\n\nThe second the door closes to our room, we're shedding clothes. Leaving every trace of what society requires of us behind. Molting. I get on the bed first, naked, and turn back toward him. He smiles. Clear, translucent bottle in his hand. My heart leaps.\n\nI point to the bed, and he crawls onto it, on his back. I scramble over him, straddling his hips, and sit down on his thighs. He hands me the bottle, and I lube him generously. Messily. Hastily. I need him inside me again. I keep a tight hold on his shaft after spreading the lube, and scoot forward until my hole is lined up with his cockhead. A long, low sigh seeps out of me as I sit down, taking him inch by inch. Paying more attention now to the feel of him inside me. The way he stretches me. The way his length reaches far inside of me. I plant my hands on his chest and grunt as I ride him.\n\n\"Jesus,\" he moans. Dull slapping, my cheeks against his thighs, with a high-pitched wet squelch. I shut my eyes imagining how loud, and how lewd, we must have been downstairs with that door open, and whimper.\n\nI whimper much louder, a moment later, when he reaches up to take my breasts in his hands. My hips come to rest against his, with his full length inside of me, while I try to catch up. My breasts. He likes my breasts. He even gives them a little squeeze, and I whimper.\n\n\"They're beautiful,\" he says, catching each nipple in the folds of his palm. I moan and immediately start bouncing on his lap again. Harder. Thapf-thapf-thapf. Harder. I have to reach down to cradle my balls, to prevent them from impacting against his abs. His eyes follow my hand and he smiles. Like even the logistics of being with me, and the precautions and positions that need to be accommodated, amuse him. Turn him on.\n\n\"Fuck!\" I cry out, feeling him swell inside me. Feeling him bouncing his hips up into the air to meet me. \"Ooooh fuck!\" He just got harder. God, I love that he got harder when he was inside me. Inside of me! Thapf-thapf-thapf. Fucking Hell! I still don't understand how we got to this moment, but he's here! He's with me! He's inside of me!\n\n\"Holy hell, Kit!\" Calvin's eyes tighten, his face already a bright red. He grabs my tits, squeezing and pulling, and I squeal on command. Thapf-thapf-thapf. Harder. \"Slow down, Kit. Slow, slow, I'm-\"\n\nHis eyes cross, lips stretching open wide, as he fills me with cum again. Thapf-thapf-thapf. I tuck my chin in tight against my chest, staring down, and gasp at the sight of the thick white fluid gathering around the base of his beautiful cock. Thapf-thapf-thapf.\n\n\"Kit,\" he gasps, pawing weakly at my shoulder. \"Kit!\"\n\nI come down hard on his lap one more time, and sigh happily as I squirm. Hips moving side to side. Hips swirling. He's still cumming inside me. Tightening every core muscle around him, milking him with my insides, also drives a long grunt from my lips. I sit up and back, planting my left hand behind me in the bed while keeping him fully hilted inside me. Almost a straight line from my shoulders down to my knees, spread wide to either side of his hips.\n\nI bite my lip and hold his gaze. He feels incredible inside me, even as his shaft softens little by little. He gasps every time I squeeze around him, clenching and pinching. I pepper him with little grabs and moments of vice, and all the while, I keep myself hard for him. Stroking myself. Presenting my body for him. I angle my cock forward and spill a drop of precum onto his groin, and he has to close his eyes.\n\n\"Thank you, Daddy.\"\n\n\"I cannot believe I just came again so quickly.\" I love how out of breath he is.\n\n\"Me either.\"\n\nHe lays his hands on my thighs, just above the knee, and I shiver. Up and down. Up and down. I give him another little squeeze, clenching around his shaft, and he grunts magnificently. Popping my thighs.\n\n\"Are you... um...\" He looks meaningfully at my cock, and then back up at my face.\n\n\"Yes,\" I say, stroking slower. Up. Down. Up. Down.\n\n\"Are you very close?\"\n\n\"Close enough.\" Up. Down. Up. Down. I press in around him with every breath.\n\n\"Oh my god,\" he says with a smile, staring through me. I squeal happily as he gets harder for the first time in almost a minute. \"Oh my god!\"\n\n\"Are you going to be able to go again, Daddy?\"\n\n\"I... I-I think so!\"\n\n\"Oh, I'm so lucky to have such a good Daddy,\" I say, squirming more forcefully. Hips writhing.\n\n\"Jesus...\"\n\n\"I can't get enough of your cum inside me.\"\n\n\"Jesus!\"\n\n\"It makes me feel so beautiful!\"\n\nHe leans his head back into the wall above the bed, staring at the ceiling, and births a primal groan. His cock swells within me, stretching me again, and I moan to match him. Lifting and lowering my hips in shallow thrusts once I think he's hard enough to stay inside me.\n\n\"I need more, Daddy.\"\n\n\"You want me to fuck you again?\" Swelling. Up and down. Up and down.\n\n\"Yes, Daddy.\"\n\nVeins pop in his neck, shoulders, and forehead as he fills me again. Painfully stretching my hole. Up and down. Up and down.\n\nAs soon as he starts to move, I shift my weight onto my right leg, and he's out from underneath me faster than I would have thought possible. I swivel, turning my ass toward the edge of the bed. He grabs my hips forcefully, pulling me and putting me where he wants me. How he wants me. He pushes down hard on my lower back, driving my shoulders into the bed, and adjusts my hips until they're just right. I slide my knees out just a little bit more and plant my toes against his thighs just before he impales me again.\n\nThere's no need for lube. He's already provided more than enough fluid, and stretched me to fit him.\n\nThapf! Thapf! Thapf!\n\nI cry out, fingers raking into the sheets for some kind of handhold. Any kind of handhold. Pounding me. Gloriously.\n\nThapf! Thapf! Thapf!\n\nI scream as I reach my orgasm. My cock bounces up and down, spewing each thick, white jet in long streaks underneath me. Some catches on my tummy, but most goes straight into the sheets.\n\nThapf! Thapf! Thapf!\n\nSomeone pounds on the wall beside us, roaring incoherently, but Calvin does nothing to slow his pace and I have absolutely no control over the volume of my screams.\n\nThapf! Thapf! Thapf!\n\nCalvin leans over me, slowing for just a moment to grab at my long black hair, and pulls back hard as soon as he has a handful. I wail, full-throated, as he thrusts so hard that my entire torso bounces. Driving me forward, and then yanking me back by my scalp. My semi-hard cock swings pendulously below me, the tip grazing against the sheets with every trip forward and backward.",
        "Thapf! Thapf! Thapf!\n\nHarder.\n\nThapf! Thapf! Thapf!\n\nI reach back, squeezing his left hand as his fingers dig into my hip.\n\nThapf! Thapf! Thapf!\n\n\"Fuck me,\" I whine, jaw clenched. \"Fuck me!\"\n\nThapf! Thapf! Thapf!\n\n\"Harder!\"\n\nThapf! Thapf! Thapf!\n\nThe room before me flickers and disappears behind the lids.\n\nThapf! Thapf! Thapf!\n\n\"Don't stop, Daddy!!\"\n\nThapf! Thapf! Thapf!\n\n\"Don't stop!\"\n\nThapf! Thapf! Thapf! For minutes on end.\n\nThapf! Thapf! Thapf!\n\nThapf! Thapf! Thapf!  An eternity.\n\nThapf! Thapf! Thapf!\n\nI twist to look back at him, loose hair spilling over my shoulder, and eye contact is the final straw. Calvin cums again, hard, and collapses forward onto me. Curling around my frame. His arms loop underneath me, hugging my body against him as he spasms deep inside of me. Thick layers of sweat smear between our bodies. First my knees spread wider, as he lays more and more of his weight on top of me, and then they slide back and out off the edge of the bed while his knees come up onto the bed beside me.\n\nPinned underneath him. Wrapped up tightly in his arms. His cock buried within. His face in my neck, and his breath hot on my skin.. It is the single happiest moment of my life. I never want it to end.\n\n***\n\nThere is an amazing ache in every fiber of my being when I finally wake up the next morning. I stretch lazily, gripping the sheets between my toes and pushing them down. The shafts of light coming through the break in the curtains say it's somewhere around mid-morning. Calvin is gone, like he told me he would be before he fell asleep. Early office hours for his grad students.\n\nI'd been up for quite a while afterwards, watching him sleep and even masturbating one more time before crashing myself.\n\nI dance lightly into the shower and luxuriate under the water for a good twenty minutes. It's a different kind of wonderful to be clean than it had felt to wake up sticky and dirty afterwards. Sticky from so much of his cum inside me, and down my thighs. We'd made an incredible mess of the bed. I'm so glad it's not my job to clean that up.\n\nMy phone blinks at me as I towel off, and I smile when I see it's from Calvin... but the smile doesn't last long.\n\nSat. 10:43 am<br />Hey<br >I had an incredible time last night. Truly incredible.<br />Mind blowing.<br />But it looks like things are going to get very hectic<br />for me for a while. I don't know when I'll be able to<br />>see you again.\n\nSat. 10:45 am<br />I'm not pulling away. It's just the demands of my job.<br />Obviously, I can't expect someone as amazing as you<br />to stay single and unattached until I get through this.<br />Please feel free to see other people, but don't forget<br />about me.<br />Because I'll never forget you.\n\nI'm out of the hotel in minutes, barely dressed, with tears streaming down my cheeks. Crying the whole way home. "
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "transgendered",
        "trans",
        "mtf",
        "futa",
        "futanari",
        "oral",
        "anal",
        "handjob"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/orchid-ch-01-1"
}