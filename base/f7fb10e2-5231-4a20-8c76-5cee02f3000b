{
    "title": "Nos Faux Ratu Ch. 08",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nIn my magical, mixed-up world, characters don't worry about STDs or unwanted pregnancies except occasionally as a plot device. The author encourages the practice of safe (and hopefully satisfying) sex.\n\nWhile this is a science-fiction story, it may at different points contain sexual behavior that might fall into other categories. You can rest assured however that there will be NO depictions of Non-Consent, Mind Control, or Incest for any purpose other than as plot devices, and certainly not for sexual arousal. Anything else is fair game.\n\n------------- -------------------------\n\nWilliam Monroe, fifteen years old, resident of New Atlanta, awoke with the sun well into daytime sky. It was his first official day as a victim of kidnapping. Strangely, this was not quite as bad as it sounded, as it turned out he had been kidnapped by biologically engineered commando vampires, who were trying to protect him from being kidnapped by biologically engineered commando vampire-werewolf hybrids, all on behalf of his biological mother, who he had never met and thought was dead, who turned out to be a biologically engineered vampire commando turned into a REAL vampire the night before said kidnapping. All in all, it had been a full day. And night.\n\nHe peeked out of his door, only to find a long hallway that appeared empty. William wasn't fooled, as he had seen the security this place had the night before. He had evaded it for a while, trying to escape, before his mother had caught him. A lump formed in his throat. He had finally met the woman he had been looking for in the years since he'd discovered that he'd been adopted, but the reunion had been bittersweet.\n\nIt turned out that his mother had been a child and a victim of rape, and that William's biological \"father,\" though it sickened him to use that word, was one of the most notorious serial killers in history. His mother had been watching him almost his entire life, looking over him but afraid to approach him. And he had come so close to walking away from her, because he didn't want to hear the truth. It wasn't the clean-cut, fairy tale story that all adopted kids dreamed about. \n\nHe still wasn't sure how he was supposed to feel about any of it. He felt bad for his parents, his adopted parents, because they were probably terrified right now. They had been given a ransom call to ensure that they were surrounded by police, just to help keep them safe in case the people who were after his biological mother wanted to use them as leverage to get to him in order to get to \u2013\n\n\"Okay,\" he said to himself, \"it's beginning to make my head spin.\" He went down the hall to the lift that ran up and down the twenty some-odd story building, all of which was owned by a woman, a vampire, who was more than two-thousand years old. She was totally hot too.\n\n\"Well hello there young man,\" someone said, the moment William arrived at the VIP lounge of Devil's Night, a club that catered to all the creatures which, until last night, had not been part of William's world.\n\n\"Hi . . . uhm, Nigel?\" he said, struggling to remember the man's name. Up until now, he had just been \"that dangerous guy dating Ms. Levenson,\" William's English teacher. He was another pseudo-vampire commando, and he was apparently really, really fucking dangerous. The other commandos who had defected from the group who were after William's mother all called Nigel \"Death.\" Nigel had been one of William's kidnappers.\n\nNigel, along with Avery, the hot vampire's chief of security, had used one other person in helping with his kidnapping, and she was meeting with the other two at that moment. She was an insanely hot commando in her own right, though right now she was looking fairly annoyed.\n\n\"Hey,\" William said, his eyes looking at the woman's curves without asking for any permission from his brain. He was a teenage boy. What else was he going to do? \"Uhm, where's . . . uhm --\"\n\n\"Jenna will be sound asleep until dusk,\" Avery explained. \"I'm assuming that was who you were wondering about?\"\n\n\"Yeah. So that's a hard and fast rule then? Vampires and sunlight?\"\n\nAvery nodded. \"And Jenna will be particularly susceptible to the call of daylight for a while, being brand new to the world of the Night Breed.\"\n\n\"Okay, it's so wicked cool the way you say that. 'The Night Breed' . . . like an old movie or something.\"\n\nCaitlin grinned. William sounded so unlike his biological mother, but resembled her in so many ways that the differences were just darn amusing. \"So, how are you doing now that your world's been rocked?\"\n\nWilliam tried to think of something cool and manly to say, but drew a blank. \"I'm freaked.\"\n\n\"If it makes you feel any better, so are we,\" the Nightwalker said, glancing at Nigel. \"We started out by imitating a legend, only to wind up surrounded by them.\" She looked around, noticing that the Nightwalkers that had defected, along with with a few dozen lycanthropes and fae, were running the daytime show. The demons were downstairs, standing guard over the entrance to Devil's Night, and the vampires were all asleep. \"Does she really trust us?\"\n\nAvery shrugged. \"You mean Nessa? I think she is in a situation where she either trusts you, or fights this alone. She's powerful, but not stupid. And since Jenna trusts you, you're in.\"\n\nCaitlin smiled slightly. Now, she was thinking about Jenna, and the brief time they spent together just before dawn. She found herself craving sundown like a junkie. 'When did you become a teenager again?' she thought to herself. \"So what are your plans for the day?\" she asked, trying to shake the image of Jenna lying naked on the bed they had shared.\n\n\"I dunno. Maybe go diving for the Loch Ness Monster?\"\n\n\"Don't be silly,\" Avery said, still looking at the map covering the table. \"Nessie hasn't lived in the Loch for a few hundred years. Things were getting a bit crowded.\"\n\nThe two Nightwalkers and one human standing next to him just stared for a moment. \"Seriously?\" Nigel asked.\n\nAvery nodded without looking up. \"She decided to try the deep ocean. She still pops up from time to time. She and Anabella are old friends.\"\n\n\"And the world just keeps getting weirder,\" William said. \"Hey, can I help?\"\n\n\"I'm not sure that your . . . that Jenna would approve.\"\n\n\"I know she wouldn't,\" Caitlin agreed, glancing at Avery, \"but that's because he's her son. I say we give him something to do, or he'll do what he's already shown himself capable of.\"\n\n\"Causing trouble?\"\n\n\"Yep.\"\n\nAvery sighed. He looked around, then motioned for William to follow him. He took him back to the lift, then up a level to what looked like a security office. \"Mabel,\" he said, calling to a large black man wearing a head-mounted display. \"This is William Monroe, a very special guest of Nessa's. We need to keep him out of trouble, and I thought he might be good at piloting one of the surveillance drones.\"\n\n\"Drones?\" William asked, his curiosity piqued. \n\n\"Yeah,\" Mabel said, taking off his display and giving the young man a once-over. \"Nessa's got a number of state-of-the-art hover drones with negligible radar signatures that she sometimes uses to scout things out, usually when she's sleeping and can't go look for herself. She's kinda hands on that way.\"\n\n\"Indeed,\" Avery said. \"Well, I'm willing to bet that young William is an adept video-game player --\"\n\n\"Only one of the best,\" William interrupted, breathing on his fingernails and then buffing them on his shirt.\n\n\"-- so why don't you get him started.\" Avery looked straight at William. \"Mabel will tell you the kinds of things we're looking for. We are trying to confirm the Fool's location . . . that's the man who wanted to kidnap you and use you against Jenna . . . and find out what he is up to. Within the next twenty-four hours or so, we are expecting a large number of highly trained operatives to arrive to replace the Nightwalkers who they believe were injured, but are actually walking into a trap. The Fool will turn them into what HE is, and they will be under his control. The bloodbath will then get worse, possibly even beyond Nessa's ability to control.\"\n\nWilliam gulped. \"This isn't a game, is it?\"\n\n\"No. It's no game. Your mother's life, as well as the lives of a lot of innocent people, will be decided by daybreak tomorrow. So if you're not going to take this seriously --\"\n\n\"I will,\" William shot back defiantly. \"I just found my biological mother. I'm not going to lose her again.\"\n\n\"Good man,\" Avery said, then headed back down to the VIP section, which was effectively now the command center. \n\n\"How's he holding up?\" Nigel asked.\n\n\"He's a strong young man, I think,\" Avery replied. \"So, what do you think?\"\n\n\"I don't like this,\" Caitlin, also known as the High Priestess, said. \"The Fool isn't just going to sit around. He'll have contingency plans on top of each other.\"\n\nThe land-line that Avery tended to use for business affairs began to ring, so he picked it up and listened. After a few minutes he put it down, his face a darker reflection of his already sour mood. \"We have a problem.\"\n\nNigel was almost afraid to ask. \"Which is?\"\n\n\"Kidnappings.\"\n\nA number of other Nightwalkers quickly closed in. \"What? Family members?\" the Tower asked.\n\n\"No, nothing to do with you all specifically. Criminals.\"\n\nStrength looked confused. \"Why is that a problem? For us, anyway.\"\n\n\"My friends in the local security forces didn't think it was a problem at all, at least at first. Since early this morning, a number of the less savory members of our population have been reported as missing, though no one was doing much about it seeing as they were both undesirable and had not been missing for very long. Still, some reports began to come in that some supposed criminals were being taken.\"\n\n\"Taken?\" one of the Coins asked. \"By who?\"\n\n\"By the accounts of a witness, they were taken by a 'scary bunch of mother fuckers.' They were described as dressed all in black, incredibly hairy, and seemed almost more like animals than men.\"\n\n\"The infected Nightwalkers,\" Nigel hissed. \"What is the Fool up to?\"\n\nCaitlin pursed her lips. \"He isn't waiting. Maybe he's afraid that the new Nightwalker wannabe's won't be enough, so he's building up his army now. And if these 'undesirables' are weak spirited --\"\n\n\"They'll be easy for the Fool to control,\" Avery hissed, \"especially if he's dominant and alpha enough to boss around someone like Pegg. Fuck, this is bad.\" He walked away and got on the horn with the security center and made sure that everyone in the organization knew what to look for. Find the kidnappers, find the base, find the Fool. Easier commanded than done.\n\n\"Is Jenna going to be ready for this?\" Caitlin asked of Nigel. \"This morning, she zoned out completely when dawn came.\"\n\n\"I have a feeling that once the bullets start flying, it won't last until dawn,\" he replied. \"And --\" \n\nA buzzing noise from the downstairs intercom interrupted Nigel's train of thought. Since Avery was otherwise indisposed, Ghede took the call. \"Yes?\"\n\n*Uhm, this is Cresil. You know, downstairs?*\n\nGhede rolled his eyes. \"Cresil, we've met dozens of times. I know who you are. Everyone knows who you are.\"\n\n*Yeah, sorry, but . . . this is kind of weird. What exactly did Lawrence order?*\n\nAvery and Caitlin and Nigel all looked at one another. Lawrence, Nessa's second youngest vampire child, had not mentioned anything about any orders. \"Cresil,\" Avery started slowly, \"maybe you should --\"\n\n*It ain't a trap. Trust me, I know his sigil. Whoever magically sealed these crates has his say so, and they were delivered by armored car. You know the kind.*\n\nAvery's eyes opened. \"Cresil, what kind of packages?\"\n\n*Big. Three of them, and the shipping addresses are from all over the damn globe. Weird thing is the driver said that he had seven more deliveries scheduled for today.* There was a pause at the other end of the line. *Holy crap! Ten deliveries? By magical armored transport? Avery, do you think --*\n\n\"Are the boxes eight feet long, three feet wide, and at least as deep?\"\n\n*Two of them. One of them is WAY bigger.*\n\nAvery was rubbing the bridge of his nose. \"She's going to kill him.\"\n\n\"What?\" Caitlin asked. \"Who's killing who?\"\n\n\"Nessa is killing Lawrence,\" Avery growled. \n\n\"I thought that they were both asleep.\"\n\n\"For this, she'll wake up, risk light exposure, and kill him.\" Avery hit the intercom button. \"Cresil, put all the cases in the safe rooms.\" He looked at Caitlin. \"I need for you to do some damage control.\"\n\n-------- ------------\n\nSundown . . .\n\n-------- ------------\n\nJenna's eyes shot open when the sun sank below the horizon, to find that she was the last one away, and that the bed was crowded. Nessa's arm was hooked around her waist, and the elder vampire was whispering to the bed's other occupant, namely Caitlin. The Nightwalker's face was looking at Nessa, but her eyes quickly found Jenna's when that woman woke up, and both women smiled.\n\n\"You're here,\" Jenna whispered happily.\n\n\"I said I would be,\" Caitlin responded, her face breaking into a goofy grin. Then the grin went away. \"But we need to get to work. Things have evolved.\" She recited what she had been telling Nessa about, namely the Fool's new \"community outreach\" program. Jenna's countenance became thoughtful as she slid out of bet(bed) and began to armor up. Halfway through the explanation, she noticed that neither of her companions had moved. \n\n\"What?\"\n\nCaitlin smiled again. \"I was just really enjoying the show.\"\n\n\"Yeah, I kinda agree with her,\" Nessa contributed.\n\n\"Could we get back to the matters at hand?\"\n\n\"Spoilsport,\" Nessa said, hopping out of bed in her skimpy lingerie and heading towards her closet. She stopped halfway there and held her head, causing Avery, who had been waiting nearby after leading Caitlin up to the bedroom, and Jenna to hurry to the redhead's aid.\n\n\"Are you --\"\n\n\"Fine,\" Nessa whispered. \"Just a little --\"\n\nAvery interrupted his boss, something of a rarity. \"Nessa, you're still weakened. Between the energy spent creating Jenna and the fight with Pegg, you're not 100 percent. You know that, right?\"\n\n\"I'm fine,\" Nessa growled back. She hated that Avery was right, but she couldn't rest. With the Fool on the move, growing his army, and with Nessa unable to call on her own lycanthropes, she had to use whatever assets she had left. \"Have we located the Fool's base?\"\n\nCaitlin nodded. \"It took us until an hour ago, seeing as he decided to move around until, somewhat ingeniously, he went back to where he started.\"\n\n\"Approximate numbers?\"\n\nAvery rubbed his eyes. He seemed to be doing a lot of that lately. \"With moonrise, he probably had more than a hundred wolves. Most of them will be confused, barely more than wild dogs in their ability to plan, but if he's as strong as we think he is, that kind of mob could still be dangerous.\"\n\n\"And if the commandos show up, he may be able to coerce them into helping him, even without changing them. That would give him up to seventy guns.\"\n\n\"Any chance of defections?\"\n\n\"If we had a few days to talk to them, before the Fool gets his claws into them, maybe. But we know that won't happen, because the Fool wouldn't give them a few days before changing them.\" Avery looked at Caitlin, grimaced, then looked back at Nessa. \"Boss, there's another . . . situation.\" \n\nNessa glanced up, not liking Avery's tone. It wasn't fear, but something else. Resignation maybe? \"What?\"\n\n\"Maybe you should come down to the VIP lounge. It will save some explanation.\"\n\n\"Avery, tell me what's going on.\"\n\nAvery was already on his way to the lift. \"Jenna, this is something for you too.\"\n\n\"Avery,\" Nessa growled again, throwing a robe on and following her security chief. \"This is not the time to try my patience. She got no response, even though she glowered at the man until Caitlin was able to throw her armor on and join them. Halfway down to the VIP area, Anabella materialized in the lift along side the rest of them. \n\n\"So, what'd I miss?\" she asked, then glanced at Avery and blushed a bit. \"How are you?\"\n\n\"He's a dead man if he doesn't tell me what's going --\" Nessa started to say, but then the lift arrived at its destination. The moment the doors opened, Nessa sensed something distinctly off. Not bad, not dangerous, or at least not to her, just . . . different. The lounge was dark, and the Nightwalkers were all somewhere else. But the vampires' eyes focused quickly, and they saw very distinct shapes. They were shapes that Nessa was very, very familiar with. Her eyes focused first on Lawrence, who stepped from the edge of the shadows to the center of the room.\n\n\"I'm sorry if this is a blow to your pride,\" he said softly, \"but you are facing an unknown enemy, a threat to all Night Breeds? Without your lycanthropes? And you DID create a new sister. What did you expect me to do?\"\n\n\"Obey my wishes,\" Nessa said, stepping forward angrily. \"How could you --\" She stopped, her dead heart beating just so that it could skip and get caught in her throat. A second voice came from the deep darkness at the edge of the lounge.\n\n\"Would you really strangle our baby brother for telling us something that we should have heard from you?\" This voice was like a full-bodied coffee, strong and deep and one could not helped but feel a little bit energized by it. And the owner of that voice was every bit as scrumptious to look at as he was to listen to. And even Jenna knew who he was. She had seen him in Nessa's soul.\n\n\"Marcus?\" Nessa whispered, her voice lilted up at the end like a question, though it really wasn't. \"You're here.\"\n\nMarcus was the epitome of what a Roman god was supposed to look like. Even in his designer Italian suit,, it was easy to see a body sculpted from marble, his smoothly shaven skin glowing with an olive hue. In Nessa's thoughts, he still had long, black, curly hair, though the modern incarnation of him was a little more Euro, with a short black ponytail, and his eyes shone with a mischief and desire that was almost physical. \n\n\"Where else would I be when my Nessa needed me?\"\n\nNessa forced an eye roll. \"Since when do I ever need . . . oh hell,\" she muttered. She cut off her denial and flew to the center of the room, allowing herself to be wrapped up in Marcus's powerful arms and be kissed as if time itself were coming to an end and that these two were going to make that last moment count. Jenna had seen her creator naked, in the throes of passion and lust, and in every other unabashed circumstance, but this was the first time she had seen Nessa wholly and truly . . . intimate.\n\nLawrence grinned. When he had called in Nessa's brood to help, he had known she would be pissed. Putting Marcus out first was at tactical move, seeing as the flame that existed between the two of them had been burning for two thousand years. Every time they got together, Nessa remembered what it had been like on that Mediterranean cliff all those years ago, and she remembered that she had, and still did to a great extent, love the man.\n\nJenna felt strangely out of sorts. This was Nessa's first, and she felt an irrational twinge of jealousy. She knew that her creator was not the settling down type, but . . . but she didn't even know what was bothering her. Already being made part of the past? But her jealousy evaporated when she felt a strong hand take her own, and looked over to see Caitlin. Jenna smiled. Caitlin was not the type to accept being second best to anyone, and Jenna would not treat her as such.",
        "Finally, the embrace between Nessa and Marcus ended. \n\n\"Ahem,\" came another voice from the circle, as a dark-skinned man with kind eyes stepped forward. \n\n\"Aaron!\" Nessa said happily, hugging the man almost as enthusiastically as she had Marcus.\n\nJenna went back to her journey through Nessa's soul as each of her creator's vampiric children stepped forward to embrace the woman who gave them eternal life. Marcus was the oldest of course, followed by Aaron, who had been a Byzantine merchant when he and Nessa had crossed paths. Next came Abayomi, an Egyptian Farmer, then Theo, a Germanic trapper. The first of Nessa's female children was Costanza, a Spanish dancer, then Hildr, who may well have been the exemplar for the notion of a valkyrie. Then came Margaret, a British tavern wench, and then Leon, the Renaissance painter.\n\nThe ninth of Nessa's children was quite possibly the largest once-human being that Jenna had ever seen. Shinmatsu was six-and-a-half feet tell and weighed close to six hundred pounds. Jenna remembered from Nessa's memories that he had once been yokozuna, or grand champion of sumo. When Nessa hugged the behemoth, who still dressed in the ceremonial robes of his sport and the rank he had achieved, she approached him with a more quiet dignity than the others, but her face showed just as much love, and that love was returned. \n\nNessa moved on to hug Cilia, a Dutch actress, then turned and slugged Lawrence in the arm. \"We'll talk she said, glowering at him. He grinned as he rubbed his arm. The wind had mostly been taken out of her sails already. She loved all her dark children, making sure to talk with each of them every month no matter how busy things got. Each of them had a brood of their own, except Lawrence who was taking his time. But all of them always made time for Nessa.\n\nFinally, Nessa addressed them as an assembled unit. \"Well, since you're all here,\" she started, then turned and looked at Jenna, \"I would like for you all to meet Jenna Owens,\" she said, holding out her hand and inviting Jenna into the circle. \"She has only been a vampire for a few days, so go easy on her.\"\n\nLike a warm breeze, Marcus swept over to Jenna and took her hand. \"Lawrence,\" he started, kissing Jenna's hand, \"when you said that Nessa's new daughter was a beautiful woman, you fell far short of the reality.\"\n\nJenna glanced nervously over her shoulder at Caitlin. \"Compliment or insult?\"\n\nCaitlin laughed. \"Compliment.\" When she saw Marcus's confused expression, she explained, \"Jenna has never really seen herself as pretty.\"\n\n\"Doesn't she own a mirror?\"\n\nShe looked at Jenna. \"Do you?\"\n\n\"No.\"\n\n\"Well,\" Marcus said, \"take the word of a man who knows the subject matter, young Jenna, you are an angelic vision.\"\n\nJenna looked back at Caitlin, who rolled her eyes and said, \"It's a compliment.\"\n\n\"Thank you?\" Jenna responded. \"Can . . .can I have my hand back?\"\n\nMarcus smiled and let her go. One by one, the other members of Nessa's brood came over, smiling and giving her a hug and often a kiss on the cheek. Nessa's people were apparently very touchy. Well, all of them except Shinmatsu, who simply gave a small bow and said, \"Welcome,\" in a voice that was as deep as a well and calm as the surface of a pond. \n\n\"Thank you,\" she replied.\n\nHe leaned in and whispered into her ear. \"It's a lot to take in. Don't worry. It scared me too.\"\n\nJenna looked at the man who was bigger than her old sleeping tube. \"Something scares you?\"\n\n\"Yes,\" he replied, his \"e\" sounding more like an \"uh\" sound. \"Nessa and Marcus's complete lack of discretion. And spandex.\" While his face remained stoic, one eye winked. It made Jenna smile. \"And that smile,\" he said, \"proves Marcus's point better than his words ever could.\"\n\nAfter a few moments, Nessa pulled Jenna aside. \"Hey, I'm sorry you had to meet everyone like this. I was planning on gathering everyone together after things calmed down --\"\n\n\"No, it's . . . it's okay. I'm just a little . . . freaked?\"\n\n\"Don't be freaked. Like I said before, we can never replace what you lost,\" she whispered, bringing Jenna's head in and pressing foreheads together, \"but we can be your family too. I wish we had more time, but we need to deal with the Fool.\"\n\n\"I know.\" Jenna looked around. \"We just need Nigel to fill me in and . . . wait, where's William?\" she asked, beginning to panic.\n\n\"He's upstairs in the security office,\" Avery said soothingly. \"I gave him a job using a remote surveillance device. He's been happy as a pig in slop all day. I did have to stop him from spying down women's shirts.\"\n\n\"I'll talk to him,\" she said absently. \"He shouldn't be doing that.\"\n\n\"He's a teenage boy. Unless you gouge his eyes out, he'll do that.\"\n\n\"Who's William?\" Marcus asked. \"Oh wait . . . the son,\" he said, eyes widening. \"If he is half as fetching as his mother, then I may someday have some competition for women's affections,\" he added with a smirk.\n\n\"I think I like him,\" Jenna told Nessa.\n\n\"There's a reason I made him a vampire. How could I let women for the next two thousand years exist without him?\"\n\nCaitlin made a gagging sound. \n\nNessa laughed. \"Fine, we'll stop patting Marcus on the back for his ample masculinity. Not that you have anything to complain about,\" she added, grinning and glancing from Caitlin to Jenna. The Empress and the High Priestess latched hands. 'Young love,' she thought. Any pang of jealousy she might have had was overwritten by pride.\n\nIt was Jenna who first decided to get down to business. \"I know that you all traveled a long way, and I hope . . . hope to get to know you all soon,\" she said. She had almost choked on the word hope. She still felt fluttering in her spirit when she contemplated another word. Family. This could be her family. \"But you came here because of a dire situation that Nessa is in, and we need to settle matters tonight. The Fool, my enemy, has a taste for blood now, and he craves more.\"\n\n\"More?\" Leon asked.\n\n\"He wants a holy war against the corporations. He wants the power to spread fear. And he wants me. I'd rather he find only the grave.\"\n\nMost of Nessa's brood had awakened only shortly before Nessa and Jenna themselves, so they needed to be brought up to speed. They were given a crash course on recent events, including the Fool's latest endeavor. \n\n\"This is disturbing,\" Marcus said, looking at a map of the city. \"He may be an alpha, but he is inexperienced.\"\n\n\"What does that mean?\" Caitlin asked.\n\n\"If a single alpha could truly control that many wolves by sheer force of will, then one of the European wolves would have done it centuries ago. Garon Pegg used his alpha status, but he also paid people, and he knew how to use his power. If a pack grows too large, it is natural for other alpha wolves to strike out on there own.\"\n\n\"Are you talking a wolf plague?\" Ghede asked, shuddering involuntarily.\n\n\"What's a wolf plague?\" Jenna asked.\n\n\"Imagine a biblical plague of locusts, except with really big locusts, with really big teeth. And if these new wolves are also untrained and wild --\"\n\n\"Things start to spiral out of control,\" Jenna muttered.\n\n\"And we have feral, incredibly powerful, incredibly dangerous creatures with human cunning and voracious appetites,\" Nessa growled. \"Well, thanks for reminding me of that.\"\n\nMarcus leaned over and kissed her neck, causing his red-haired sire to shudder in a way that usually led to naughty things. \"I would rather do things that did not distress you, but alas, current events will not allow it.\"\n\n\"He's really good at that,\" Jenna whispered to Anabella, who was staring on with a mixture of amusement and contempt.\n\n\"Remind me to tell ya 'bout what they got up to in the 1700's. At one point, the Marquis de Sade decided that things were gettin' a little weird and went home.\"\n\n\"She met the Marquis?\"\n\n\"Let's just say she influenced some of 'is writin'.\"\n\n\"What does that not surprise me?\" Jenna stopped and looked around. \"Nessa,\" she said at last, \"are you sure we should involve them?\" she asked, gesturing at the other \"children.\" \"They're hitting the ground cold with no context --\"\n\nNessa just shook her head and raised her hand. \"They're here. They won't stay out of it, even if I asked them too. Which I won't, because there are thousands and thousands of years of survival experience between all of us.\"\n\n\"Besides,\" Marcus added, \"our mother needs us, and our sister needs us.\" When he saw Jenna's confused expression, he smiled. \"That would be you.\"\n\n\"Not all of us are fighters,\" Abayomi said.\n\n\"But we have worked together more times than you can imagine,\" Cilia added.\n\nAaron continued with, \"So trust us. The moment that this 'Fool' came after our family, he made it our fight.\"\n\nNessa kissed Jenna on the forehead. \"It makes sense. We can't risk Nigel and the other Nightwalkers getting infected, so they're going to have to stay back and keep the new wolves from spreading. The only thing that will stop the lycanthropic virus is fae blood and the vampiric virus, so it makes sense for the undead to go in as the shock troops.\"\n\n\"When did you start using phrases like 'shock troops'?\"\n\nThe red-haired matriarch of the vampire clan raised an eyebrow. \"Remember that this isn't my first barn dance. The logic is sound and . . . no Lawrence, this doesn't mean you're off the hook for calling them . . . they're the best choice to do this. Marcus is one of the greatest warriors that I've ever known, and Shinmatsu is nigh invulnerable. Theo is one of the sneakiest bastards I've ever known, and Hildr invented the concept of pillaging and burning.\"\n\n\"Invented, no,\" the blonde viking woman said, \"but I did copyright it.\"\n\n\"I still don't think that would hold up in court.\" Nessa glanced at Jenna. \"Are you okay with this?\"\n\n\"Nessa,\" Nigel said, \"there is one problem. Some of those Nightwalkers under the Fool's control could still be saved. Is there going to be no attempt to take them alive?\"\n\n\"We've tried to play it safe up until now, and it has bitten us in the ass. If I had just stepped in like Pegg wanted to, this would be over and done with.\"\n\n\"Do you really want to be like him?\" Jenna asked. \"Your whole platform has been to try and end this with minimal bloodshed.\"\n\n\"That was before they killed Ipos,\" Nessa replied coldly.\n\n\"So what?\" the Chariot said, standing with the other Nightwalkers, \"One of yours dies, so that gives you the right to kill anyone you want?\"\n\n\"We didn't ask for this war.\"\n\n\"Neither did they,\" Jenna whispered. All eyes turned to her. \"The Nightwalkers were just doing their jobs. They didn't want to become monsters, but resisting the Fool . . . resisting their commanding officer? We need to give them a chance.\"\n\n\"This cannot be allowed to spread,\" Nessa replied. \"This has become bigger and more volatile than anything we had expected. And you want me to what? Go into an enclosed space with werewolves and ask them to surrender? They're wild animals right now, all of them. And a cornered animal WILL defend itself violently. That isn't a condemnation, just an observation. It's in their nature.\"\n\n\"Then we draw them out,\" Jenna replied. \"I've seen the armory. There is plenty of containment gear, hardening foam, stasis bombs, the works. We get them to come out, and then our Nightwalkers and the rest of your people can contain them.\"\n\n\"If the Fool comes out, we've solved nothing. They won't surrender with him goading them.\"\n\n\"He won't,\" Jenna whispered.\n\n\"And why not?\"\n\n\"Because I'm going in first. Alone. And I'm going to kill him.\"\n\nThere was silence. \"Jenna, no more suicide missions. No more going it alone.\"\n\n\"This isn't martyrdom, Nessa. This is tactics. I'm the one that the Fool wants. I go in and even if I don't kill him outright, I keep him occupied while we flush the rest out.\"\n\n\"Absolutely not,\" Nessa shot back. \"You're forgetting about the Hanged Man, or the rest of the major arcana. We know the Hanged man is fanatically loyal, and if any of the rest of them are loyal too \u2013\"\n\n\"Jenna, I know you're trying to do the right thing,\" Caitlin said, standing at her friend's side, \"but they're right. You can't go in alone, which is why I'm going with you.\"\n\n\"Absolutely not,\" Jenna said vehemently, shaking her head. \"You're susceptible to the mutated virus. You need to stay outside with the others to make sure that we capture as many as possible.\"\n\n\"I am NOT letting you go in alone,\" Caitlin growled. 'I can't lose you now that I'm truly beginning to know you,' she thought.\n\nJenna missed Caitlin's discomfort, but Nessa didn't. For some reason, it made her proud. And happy. She sighed. \"Okay, we go for the capture, as long as everyone agrees that ANYONE who is given a chance to surrender but doesn't has to be put down. I absolutely will not allow this to spread. Clear?\" When everyone eventually nodded, she continued, looking at Jenna. \"And Caitlin is right. There's no way in hell I'm letting you go in alone.\"\n\n\"She won't,\" Marcus said. \"I will go in with her.\"\n\n\"And I,\" Shinmatsu said solemnly. \n\nNessa looked at her brood. \"Hildr, Theo, are you two in?\"\n\nTheo, a rugged looking mountain man just grinned, then responded with a thick German accent, \"You even have to ask?\"\n\n\"That makes six going in,\" Nessa said, then found herself cut off by her ancient Roman soldier.\n\n\"Six?\"\n\n\"Yes, six. Jenna, me, you --\"\n\n\"You're not going in,\" Marcus said with an air of finality. \"I won't allow it.\"\n\n\"Oh crap,\" Lawrence said, taking a step back. \n\nJenna noticed that a number of the brood took similar stances, and she felt Shinmatsu tugging on her shoulder. \n\n\"Won't 'allow' it?\" Nessa replied acidly. \n\n\"Okay,\" Jenna whispered to the big sumo behind her, \"Even I know her well enough to say something like that.\"\n\n\"You are not at full strength. The attack on your person, the creation of a new vampire, the fight with Pegg . . . you need to rest,\" Marcus said stiffly.\n\n\"They killed my friend. The Fool has all but threatened to rape Jenna, they went after her son, and he wounded me personally. I am still the sheriff of this territory, and you do NOT get to dictate --\"\n\nThe two of them argued for several minutes, with Marcus moving in and out of misogynistic bravado and the pleading of an old lover, and Nessa just growling and yelling, all the while looking like she wanted to jump Marcus's bones. Their's was a complicated relationship. \n\nJenna finally had enough. She slammed a fist down on the table, putting a hole through it. People stopped talking. \"We are wasting time,\" she said coldly. In an instant, the new, emotional Jenna was gone, and the Empress had returned. \"Whatever issues you two have, shelve them.\" She looked at Death. \"I think I know how we can drive them out. When I fought the hanged man the first time, the most effective weapon I had was pepper spray.\"\n\nWhile nodding, Ghede was the first to speak. \"New lycanthropes often take time to acclimate to their new senses.\"\n\n\"We keep reminding ourselves that these new creations are animals, so let's treat them like animals. I go in --\"\n\n\"WE go in,\" Shinmatsu said evenly.\n\n\"Fine, we go in and we unload with flash-bangs and any other kind of grenade that we have that over-stimulates the senses.\"\n\n\"We have a variety of gas grenades that would do the trick,\" Avery said, staring at Jenna approvingly. \n\n\"And,\" Caitlin added, \"their stronghold becomes their weakness. The warehouse was chosen because there were only a few ways in, but that means there's only a few ways out.\" She glanced around. \"We set up containment traps and snipers with tranquilizers here, here, here, and here, and we have a legitimate chance of rounding up survivors.\"\n\nNigel sighed. It was time for HIM to make a concession, especially if he was expecting Nessa to go along with this. He grabbed a red marker and drew a line all the way around the warehouse, with several streets of separation from the main building. \"This is the line of containment,\" he said solidly. \"Anyone fleeing the building who is not contained by this point . . . is too dangerous to be allowed to escape.\"\n\nNessa acknowledged the concession. \"This means we can bring some of our lycanthropes back into the game. If we keep the Fool and the Hanged Man contained in the building, then our people will be safe from his influence. They chase any squirters to ground. The rest of the non-combat intensive brood can help with that. Lawrence, head up the remote sensors, make sure nobody gets out without you knowing it.\"\n\nAvery glanced at Jenna. \"You know William is up in the security office right now. Did you want --\"\n\n\"Let him stay there,\" she said. This seemed to surprise Avery, so she explained, \"If we don't let him help by controlling a remote sensor, he'll probably try to get involved another way.\" She did not mention that she was choosing between the lesser of two evils. He would be safe, but he might have to watch Jenna die. 'He's strong,' she thought. 'Stronger than I was.'\n\nSuddenly, an iffy plan had become a reasonable plan, and people began to armor up. Lawrence would set up the net-comms, the others would form a perimeter, and Nessa's warriors would go in. \n\n\"Crap,\" Anabella said, \"that means I need to get mah beatin' stick.\"\n\n\"Why?\" Nessa asked. \"You're not going in.\"\n\n\"Says who?\"\n\nJenna sighed as the two old friends began to argue. \"How does anything every get done with these people?\" she asked of the massive sumo.\n\n\"Once someone says 'go,' they will be professional,\" he assured her. \"Until then . . . well, you do not live for thousands of years without developing a stubborn streak.\"\n\n\"When they stop yelling, tell them we'll leave in an hour. I have to go talk to someone,\" she replied. She headed toward the lift, being stopped temporarily by the assembled rebel Nightwalkers. \n\n\"Thank you,\" one of the Coins said.\n\n\"For what?\"\n\n\"Standing by us. Trying to save our friends.\"\n\n\"Don't make me regret it. You all know that the standard protocols we used to live by would have dictated the termination of our enemies.\"\n\nCaitlin smiled. \"Yes, but you seem to have developed a strong dislike for protocols.\"\n\nJenna liked the way Caitlin smiled. \"Be ready to go within the hour,\" she said, turning back toward the lift. She stopped, spun around, and pulled Caitlin to her and pressed her mouth to her lover's lips. The rest of the Nigthwalkers started to chuckle, even as Caitlin's hands reached around and grabbed Jenna's ass.\n\n\"Uhm, sorry about that,\" the Nightwalker said. \"Those things have a mind of their own.\"\n\nJenna wanted to crawl into Caitlin's bodyarmor and feel that soft skin, so she wasn't about to chastise anyone for wandering hands. \"Be ready,\" she whispered, her voice carrying over the scant inch or so separating their lips. \"I want you to make it through this because --\"\n\n\"Because what?\"\n\nJenna put her mouth next to Caitlin's ear. \"Because I've never had a . . . you know, a girlfriend. Before.\"\n\nCaitlin stared, then just smiled. 'How much did it cost her to say that?' she wondered. She kissed Jenna's nose. \"You've got one now. Now go visit your boy, then lets finish this thing so that I can show you some of the advantages of having the proper companion.\" Then, in a huskier whisper, \"And next time, we can get started as soon as the sun goes down.\" She patted Jenna on the ass, then rejoined the other Nightwalkers.\n\nWhen Jenna got up to the security floor, she was still smiling absently. She should have been nervous or focused or anything but happy, yet that was how she felt. She saw her son sitting in front of a set of monitors near some of Nessa's other technical staff.\n\n\"Hey,\" she said, approaching him nervously. They had had a good talk the night before, but she still was not sure where they stood.\n\n\"Hey,\" he said, turning and standing, wringing his hands. \"So you're leaving in an hour?\"",
        "\"Yes. How did you know?\"\n\nHe grinned. \"Nessa has the most wicked toys!\" He pointed at a screen that showed the VIP lounge, and it was showing the area that she had just been standing. \"Insane digital zoom, perfect sound --\"\n\n\"I didn't even see the camera.\"\n\n\"It was all the way across the room!\" William said excitedly. \"And you're really okay with me helping?\"\n\n\"It'll keep you out of trouble. The trouble I got you into. I can't believe you're handling this so well.\"\n\n\"Not much choice. I feel bad for my parents . . . you know --\" he stammered.\n\n\"They are your parents,\" Jenna said. \"I'm just . . . I was just there at the beginning.\"\n\nWilliam started to speak, stopped, then started again. \"I want you to meet them. When this is over, I mean.\"\n\nJenna shook her head. \"I can't. What would I say?\"\n\n\"The truth. Ish. But I don't want to lie to them, I don't want you to do your vampire mojo and wipe my brain, and that kinda limits our options. And don't tell me that we either can't ever see each other again or have to hide and stuff.\"\n\nJenna shook her head. Meet Ronald and Michelle Monroe? And how would she explain anything? \"We'll talk when I get back,\" she told him, stepping forward and hugging him. \n\n\"Don't feed me that line,\" William said angrily, pushing her away. \"You treat me like an adult by letting me actually help with your mission, but you don't trust me enough to know that I want this?\"\n\nJenna closed her eyes. \"I trust you to know your own mind, but that doesn't mean you get to have everything you want.\"\n\n\"But why --\"\n\n\"Because I am not going to ruin your life,\" Jenna snapped. \"Because something like this will change how your parents look at you. If they love you, and we both know they do, they'll want you as far away from me as possible.\"\n\n\"You don't know that,\" he shot back angrily. \"You don't know them --\"\n\n\"I know them. They are wonderful people who want what's best for you and . . . and I can't have this discussion now.\" Jenna turned to leave.\n\n\"Why do you get to be the one who decides what our relationship is?\" he called after her as she disappeared into the lift.\n\nShe had no response except to tell him she loved him, one more time. Maybe for the last time. \n\nJenna again sought out Caitlin, her feet carrying her to the woman's presence before her mind caught up. \n\n\"What's wrong?\" the brunette beauty asked, seeing her \"girlfriend\" subtly but visibly upset. Most people would not have been able to read Jenna, but Caitlin had spent years studying that face. She knew every line and every expression the woman had ever shown. \n\n\"Just . . . nothing.\"\n\n\"It's not 'nothing'. What's up?\" Caitlin walked her girlfriend off to the side. \"This whole thing we have now? Part of it means you have to talk to me. It's a rule.\"\n\nIt took a moment for Jenna to realize the other woman was teasing her. Sort of. She closed her eyes, opened them, and recited her conversation with William. By the end, she realized that her voice was cracking, something she was not used to. She wasn't sure what it meant, but Caitlin did. Jenna was actually scared. The notion of meeting her son's adoptive parents and trying to explain why she had been absent, or that she was not trying to steal THEIR son away, terrified her.\n\n\"Babe --\"\n\n\"Babe?\"\n\n\"Work with me here. Term of affection, get used to it,\" she added with a smiled. Sometimes, she didn't think Jenna really understood innuendo or dry humor. \"Babe, he's scared too. You just walked into his life, larger than life, and he's probably scared that he'll never see you again. \n\n\"But how would I ever explain any of this?\"\n\n\"You come up with a good cover story that isn't too far from the truth, then otherwise lie your incredibly cute ass off.\"\n\n\"What would be even vaguely close to this that wouldn't be a bold-faced lie? Vampires, werewolves, commandos . . . I'm not that good at lying.\"\n\n\"You'll be fine. We will figure this out. You'll meet his parents, then we can go diving in the Caribbean, and all you have to do is help destroy our psychopathic ex-boss who just happens to have claws and fangs. Oh, and his right hand man, who may be the most dangerous thing that I've seen. Except maybe you.\"\n\n\"You're not . . . you're not afraid of me, are you?\"\n\nCaitlin threw her head back and laughed, which caught the obvious attention of some of the others who were nearby. This caused her to lead Jenna away to the lift in order to afford some privacy. When they were alone, she admitted that Jenna had always scared her.\n\n\"But why? I never threatened you. Did I?\"\n\nCaitlin smiled and her fingers touched the side of Jenna's face with a gentleness reserved for a work of art. \"Same reason that people feared angels, I guess. You're too beautiful for words, yet you're so incredibly dangerous. Even before you were a vampire. I was scared to talk to you because . . . well honestly, I thought you were way out of my league.\"\n\n\"Out of your . . . are you serious?\" Jenna asked.\n\n\"Dead serious. However horrible the circumstances are that made you what you are, I only saw the result. You ARE an angel, Jenna. A guardian angel for your son and --\" Caitlin paused, grinned, and blushed. \"And you're so very heavenly in other ways.\" \n\nJenna almost wanted to blush, figuring that would be the appropriate response. Human Jenna would have blushed. Young Jenna most certainly would have. \"I . . . uhm, you . . . Okay, not good at the whole romantic banter thing.\"\n\nCaitlin was amazed at how shy Jenna could be. This was the girl who never got to grow up, a fifteen year old psyche on the mend and testing the waters of life for the first time. She pulled Jenna out of the lift and towards the wall of a residential hallway. Her mouth poised to do something besides smile as her face moved toward Jenna's. Lips met lips, the vampire's still uncertain but eager, the human's slow but steady. \n\n\"Is this really a good time for this?\" Jenna murmured as she tried to catch her girlfriend's bottom lip with her teeth. \n\n\"If we have time, then it's a good time,\" Caitlin growled. 'Damn it,' she thought, 'where's my room?' She saw it and put her back to the door, pulling Jenna in close, letting the other woman be in the dominant position, and make her own desires known. Jenna seemed content to keep kissing, though one hand drifted down to Caitlin's hip. Then, it moved past the hip and grabbed the door handle.\n\n\"Open, damn it,\" Jenna muttered hungrily.\n\nCaitlin spread her legs a bit and pulled Jenna in. \"Is that open enough for you?\"\n\nJenna chewed her own bottom lip this time. \"You're a very bad person, aren't you?\"\n\nThe two of them wound up tumbling through the door and back onto the same bed where they had consummated their fledgling relationship. \n\n\"We really should be getting ready for the mission,\" Jenna said, struggling to figure out the quickest way to get Caitlin out of her pants.\n\n\"We are,\" Caitlin said, pulling her top off over her head. \"If we don't do this, you'll be distracted all night.\"\n\nJenna kissed the soft expanse of Caitlin's breasts after pushing the sports bra up. \"Can't have that.\" Jenna took advantage of her girlfriend when Caitlin sat down so she could kick her pants off, pushing the woman onto her back and pushing those legs, still bound at the ankle by trousers and underwear, leaving that perfect sex exposed. Both Nessa and Caitlin had made sure that Jenna received pleasure first, and she was determined to reverse that trend.\n\nCaitlin let out a sigh when that curious tongue penetrated her folds, tasting her wetness. She tried to reach up and grab her ankles so she could remove the constraining garments, but a few flicks of the tongue caused her to settled back into the bed and murmur happily. \"Right there,\" she said. \"Just a little more gently and . . . ahh!\"\n\nThis was one of the things that Jenna liked about Caitlin. The woman knew how to provide feedback. So she went to the spot Caitlin had wanted, touching her most secret places with nimble fingers and making sure to curtail her strength. Being a vampire was going to take some time to get used to. She sniffed her lover's pussy, and she cold sense her excitement at a level she never imagined. She wondered if Nessa had felt this way in their times together. Sex with a beautiful woman . . . this was life. Maybe vampires sought out such encounters as a reminder of the warmth they now missed, yet still craved.\n\nCaitlin finally was able to keep her upper body elevated long enough to rip her pants off and spread her legs, watching as an eager lover pleasured her. She gripped the bedspread, arching her back slightly and willing Jenna's tongue deeper and deeper into that place reserved for a most intimate friend. She wanted to cum, both for Jenna and for herself. So she coaxed her lover on whenever she did something that Caitlin enjoyed, and she found herself barreling towards release. Then, Jenna's tongue stopped moving.\n\n\"Don't stop!\" Caitlin practically screamed, her voice tinged with desperation. \"That's just mean!\"\n\nJenna looked a bit abashed, giving Caitlin's clitoral hood a few soft licks. \"Sorry. You stopped speaking. And breathing.\"\n\n\"Sweetheart, that's because you were doing everything just . . . just . . . right!\" she moaned, as Jenna's teasing finally ended and the main event arrived. \"Ah! Ah! Ahhhhhhhhhhh!\" she sighed.\n\nJenna felt proud and happy and . . . well, just content. She'd done something good for her new girlfriend, and she wanted nothing more than to do it again. And again. She did not want to stop until the sun came up. Hell, she didn't want to stop until the sun went out, but Caitlin was having none of that.\n\n\"Sensitive,\" Caitlin said, pulling her pussy, and particularly he clitoris, away from Jenna's mouth. \"Good grief, when did you get so greedy?\" she added, smiling as she sat up.\n\n\"I wanted that!\" Jenna pouted, then realized how it had sounded and buried her face in the covers. \"I sounded like a kid asking for its blanket.\"\n\nCaitlin laughed, turning on the bed and kissing the top of Jenna's head. \"I don't mind providing a little comfort,\" she murmured, pushing Jenna's hair aside and then kissing the back of her neck.\n\n\"Oh that feels so very good,\" Jenna whispered. It was a truly intimate thing, arousing her in ways that direct stimulation couldn't touch. Caitlin's lips working around Jenna like they were tracing a necklace. The butterfly-light sensations were igniting a joy Jenna could not describe, and wanted to go on forever. But eventually, Caitlin lay back on the bed. \n\n\"C'mere,\" she said. \"Get naked, then come here.\" \n\nJenna stood and kept her eyes on Caitlin's as she undressed, removing under-armor one piece at a time, much to the other woman's delight. Caitlin savored the moment that each bit of pale, perfect skin came into view, but mostly she delighted in the shy glances and even shyer smiles that Jenna would give her when their eyes met. Then Jenna straddled Caitlin's hips while the human woman sat up to meet her, kissing her and cupping her ass. \n\n\"You're not still scared of me are you?\" Jenna asked between kisses.\n\nCaitlin moved a hand between her thighs, curling two fingers into Jenna's sex and feeling the heat of her lover's body. \"It scares me how much I want you. Does that count?\"\n\nJenna began to move her hips, riding Caitlin's hand in a gentle motion. \"That's a good fear,\" she replied, arching her back and willing those nimble digits further into her body.\n\nCaitlin leaned in and took one of Jenna's pert pink nipples into her mouth, like little bits of fruit on those pale mounds, and were very, very delectable. Gentle pressure preceded lightly touching the nubs with her teeth, rolling them slightly until Jenna gasped. That was as close to hurting her as Caitlin would go. Jenna was probably never going to be the kink-meister that Nessa was supposed to be, but Caitlin could work with what she had. \n\nThe intercom came on. *Fifteen minutes to deployment. All personnel, please report to the armory.*\n\n\"God dammit!\" Caitlin growled. When was she going to get an uninterrupted session with this woman? Even as Jenna looked annoyed and started to pull away, Caitlin pulled her back, not withdrawing her fingers. \"Oh hell no, you're not ready to go yet.\"\n\n\"But they said --\" Jenna started to say, her heart (amongst other body parts) not really into the notion of leaving either.\n\n\"They can wait,\" the human woman growled. \"It's not like they're going to start the invasion without you.\" She kept one hand on Jenna's ass, gripping it with a certain ferocity that would not be challenged. Her fingers were playing her girlfriend's pussy like an instrument, building up in the coda for a sweet sounding finale. And when Jenna groaned, she knew she was there. \"Are you cumming?\" she whispered into Jenna's ear.\n\n\"Yessss,\" Jenna hissed, clenching at Caitlin's fingers as they danced inside her body. Jenna wrapped her arms around her lover's body and just held her until the tremors finally ceased and she was in control of her body again.\n\n\"Damn impending violence,\" Caitlin grumbled. \"Next time, I'm taking you to a hotel with no intercoms or communicators, and I'm not letting you go until we've both been fucked silly.\"\n\n\"It's a date,\" Jenna said. She let Caitlin kiss her, then reluctantly pulled away. She didn't want to fight anyone. She had never wanted to just curl up in bed with a warm body next to her so badly in her life. But bad people like the Hanged Man and the Fool did not wait for cuddling, and the warrior in Jenna . . . in the Empress . . . knew she still had a job to do. The two women readied themselves, but did not speak. You could not speak your last words to someone if you did not speak at all. Finally, the two of them put on their game faces and headed back to the lift.\n\n-------- ---------------\n\nAn hour later . . .\n\n-------- ---------------\n\nJenna was peaking around the corner of an alley, listening to comm chatter. There were four separate teams that would be going in. Marcus was with Nessa, to no one's surprise. Anabella was teamed with Hildr, though she was still yelling at Nessa over the radio. Apparently, ancient Scottish banshees had tempers. Who knew? Theo was with Cresil and Kobal, and Shinmatsu was standing right behind Jenna.\n\n\"Almost time,\" Shinmatsu muttered. \"It has been a long time since the brood has fought together.\"\n\n\"You don't sound happy about it.\"\n\nHe stared forward. \"Lives will be lost today. It may be needed, but it is not desired.\"\n\nJenna looked back at him. \"You don't like fighting?\"\n\n\"I like competition. There is a difference.\" He looked down at her. \"And you?\"\n\n\"I never liked the fighting. I never really liked anything I did. I was just good at it. It gave me purpose.\"\n\n\"And what is your purpose now?\"\n\nJenna turned and stared into space. \"I'm figuring that out.\"\n\nShinmatsu put one ham-sized hand on Jenna's shoulder. \"You have time to figure it out.\"\n\n\"Unless I die tonight.\"\n\n\"You are the soul of optimism.\"\n\nShe looked over her shoulder at him. His face was still passive. \"You know, the problem with you is that I can't tell when you're being sarcastic.\"\n\n\"Really? I thought my problem was my overwhelming sex appeal.\" \n\nJenna peered at his face. Nothing. He hadn't moved a muscle. She smiled at him. \"I can see why Nessa chose you. You're the calm to her storm.\"\n\nThat actually seemed to startle him a bit, and the corner of his mouth quirked. \"Did she tell you about how we met?\"\n\nJenna shook her head. She checked her watch, and noticed that they had ten minutes before everyone was in position. She moved her eyes back to what would be their point of access, but part of her attention was on Shinmatsu. \"No. I saw when all Nessa's children were turned, but nothing from before. You were different for her. She loved you as much as the others, but --\"\n\n\"But she and I were never intimate,\" he said.\n\n\"Really? Was it because --\" Jenna stopped, unsure how to tactfully say what she meant.\n\n\"My size? It is all right to say. I am not petite. But no, Nessa was not bothered by that.\"\n\n\"So why?\"\n\n\"I was married.\"\n\nFor some reason, that surprised her. \"You were married? Really?\"\n\n\"Yes. I still am.\"\n\n\"Wait, to the same woman?\"\n\n\"Yes. Marcus brought my wife over a year later. Without having sex with her,\" Shinmatsu added, raising an eyebrow.\n\n\"You've been married to one woman for . . . how long?\"\n\n\"Four hundred years. We had our uranium anniversary last spring.\"\n\n\"Okay, you're making that up,\" Jenna said, though she smiled a little when she said it. \n\n\"I never kid about anniversaries. When I do, my wife makes me very, very sorry.\"\n\n\"You sound like you're afraid of her.\"\n\nHe shook his head. \"I have healthy respect for her. She is smarter than I am, which is one of the reasons I married her.\"\n\n\"You respected her mind?\"\n\n\"No, she tricked me. She told me that we were just going for ice cream. It turned out that she had planned a wedding.\"\n\nJenna grinned. \"You could have said no.\"\n\n\"What? There WAS ice cream. I only got it after the ceremony.\"\n\nDespite being on the verge of heading into mortal danger, Jenna had to laugh. \"I thought the wives of sumos were quiet and docile.\"\n\n\"Have you ever met a woman willing to be surrounded by large, fat men in mawashis? They are made of sterner stuff than you know.\" For a moment, ever so brief, he smiled.\n\n\"You really love her, don't you?\"\n\nHe nodded. \"For hundreds and hundreds of years, and until the second death comes for us. If she meets an ill end, I will follow.\"\n\n\"So if you and Nessa never . . . you know, were intimate, then what made her want to change you?\"\n\nHe closed his eyes. \"I lost.\"\n\n\"Pardon?\"\n\n\"I lost. I wound up being runner up in a tournament that I had been heavily expected to win. But my opponent was very skilled, and I felt my knee ever so lightly touch the ground.\"\n\n\"And the referee called it?\"\n\n\"No, the gyoji missed it. I called it.\"\n\n\"I thought . . . why?\"\n\n\"Because I was not just interested in being the winner. I was interested in being the best. I was not the best that night, and my opponent deserved the victory.\" His head lowered. \"That mostly ended my career. Nessa was in Japan at the time, and she was a big fan of sumo. She saw the match and approached me afterward. She did offer intimacy, but I would never cheat on my wife, even with one as beautiful as Nessa. She and I became friends, and she told me what she was. Later, after I had developed diabetes and my health regressed, she offered to save me. But what was 'forever' without my wife?\"\n\n\"Why didn't Nessa offer to change her too?\"\n\n\"It takes a long time to recover, even for the most powerful vampires. She gives part of herself to her offspring. She promised that she would appeal to one of her children to do it for her. Marcus agreed, though he was indisposed at the time.\"\n\n\"Where was he?\"\n\n\"The Italian Parliament. Ever since he was driven out of the Roman army, he's been a bit bitter, and has never given up attempting to recapture the Empire.\"\n\n\"You don't like Marcus, do you?\"\n\nShinmatsu smiled again. It made him look almost cuddly. \"Marcus and I are true brothers. I enjoy his company for a time, but after a few days, we want to beat each other senseless. But he kept his word and gave my wife eternal life, so I will forever be indebted to him. My wife and I have been given an opportunity to look after our family together.\" He winked. \"Which is good in a culture where aged family is revered.\"\n\n\"So your family knows you're a vampire?\"\n\n\"Should I attempt a disguise?\" he replied knowingly, raising an eyebrow. \n\n\"Good point,\" she said, looking at his mammoth frame. \n\n\"No, my wife and I agree that we would be honest with them. We both came from so little, but we both had families that believed in us and supported us. We wanted to return the honor they bestowed.\"",
        "Jenna smiled, then did something very un-Jenna-like. She hugged him. \"You are a good man,\" she said softly.\n\n\"That is what I keep telling people,\" he replied with that deep, dry voice. \"No one believes me. They all think that I am just a pretty boy.\"\n\nJenna started to laugh, then her head shot toward the building. She heard something. It was the sound of doors opening and claws scraping pavement. \"What the hell?\" she said, pulling her assault shotgun off of her back. \"They're coming out?\"\n\nShinmatsu reached into his robe and pulled out a small pouch. He reached into the pouch and pulled out a pinch of salt, throwing it forward. This was his arena now. His contest.\n\nJenna stepped forward, trying to figure the Fool's angle. She got on the secure comms channel. \"Nessa, they're coming out.\"\n\n*I kinda got that. You got any suggestions?*\n\nJenna pondered for a second. \"Let them through.\"\n\n*What? Are you nuts? If they get through --\n\n\"This wave won't be that strong. He knows we're out here, and he's hoping we'll reveal our big guns. Death, look to the heights. See if you can find their spotters.\"\n\n*Roger, over.* There was radio silence for several seconds. *Hostile entities located. Relaying their positions now.*\n\nJenna spoke again. \"These are just decoys. The Nightwalkers are more than than capable of netting them.\" Sure enough, less than a dozen frantic, half-crazed werewolves came charging out, looking more frightened than fierce. Their shredded clothing indicated that these were some of the common street criminals that the Fool had been rounded up, which made Jenna wonder something else.\n\n\"Shinmatsu, how long does it usually take for a lycanthrope to manifest its animal side?\"\n\n\"Usually 24 to 48 hours.\"\n\nJenna got back on her radio. \"Everyone, I think that the Fool gave these wolves an accelerant, something to make them morph faster. Don't know what it could be, but anything like that is bound to increase instability. Be careful.\" She looked at her backup. \"I'm going in.\"\n\n\"What? No, the plan is --\"\n\n\"The plan is compromised. He's going to start testing us and trying to throw us off balance. I'm going to return the favor.\"\n\nHe put a hand on her shoulder. \"I thought you and Nessa had agreed, no lone-gunman routine.\"\n\n\"I'm adjusting the plan due to a change in the conditions. This is a tactical move, to disrupt his disruptions.\"\n\n\"This is why I prefer fighting with fat men in a round circle,\" Shinmatsu said. \"Much less complicated.\"\n\n\"Shinmatsu, no matter what happens, I . . . I'm really glad I met you.\"\n\nHe looked at her, his eyes showing an increased intensity. \"Do not speak as if this is goodbye.\"\n\n\"Trust me, I don't want to die. I want friends. I want a family. I want my son to know me and I want to go scuba diving in the Bahamas with a really beautiful woman. But we both know that this could end really badly.\"\n\nHe nodded. \"Nessa will not allow this to spread, you know that she has a . . . contingency plan.\"\n\nNessa had figured as much, and she accepted that it would be a final solution. No witnesses, and no survivors. She wondered just how far out on the line that her sire had stuck her neck to try and take even a few of their opponents alive. She turned and stared at the building.\n\n\"What are you going to do?\" Shinmatsu asked.\n\n\"Something that the Fool would never expect,\" she replied. She proceeded to walk directly up to the building.\n\n*Jenna, what the fuck are you doing?!* came Nessa's voice. \n\n\"What I have to,\" she replied.\n\n*Jenna, please don't do . . . whatever the hell it is you're doing,* said a younger, male voice.\n\nShe did not pause in her steps. \"William, please get off the line. I know what I'm doing.\"\n\n*But --*\n\n\"Please,\" she said, soft and plaintive, \"don't distract me. Not now. I'll do anything to keep you safe,\" she finished. She paused outside a metal door and waited. She knew that someone would be watching her, the ghostly Empress dressed in white, offering herself up like a lamb. What wolf could resist that? After a minute, the door opened.\n\nJenna glanced in, but she found herself still alone. The door had been triggered remotely. She half expected a contingent of guards to be right inside the door, but the Fool wasn't moving his important people into exposed positions yet, and his non-important people would have no chance of containing her, even if she were still the Nightwalker that they probably all thought she was, much less the Nightwalker vampire that she had become. \n\nShe stepped inside, letting the darkness slide along her armor, wrapping her up like a comfortable blanket. Light had not been her ally for many years, even before it became a lethal effect. She welcomed it back. Her new night vision amazed even herself, as the tiniest glow from an outlet illuminated the entire corridor for her. She forced her body to inhale, letting all the scents of the warehouse slip through her nose. \n\n'It smells like dog,' she thought. For some reason, that amused her. The smell of gun oil and explosives was less entertaining, but it was expected. She considered drawing a weapon, then dismissed it. Why tip her hand, particularly when she was now certain that the Fool wanted to talk to her. Otherwise, she would have encountered the welcoming party the moment the door had closed behind her.\n\nJenna strode down the corridor, made her way through two doors, and into the main room of the warehouse. There was a significant quantity of heavy construction equipment inside, and Jenna could hear scampering amongst the bulldozers and cranes. It was a strange sensation, as no one was really sure who was the cat and who were the rats in this particular game. Not yet, anyway. \n\n\"White?\" came a voice from high overhead. A glance upward did not reveal the source of the sound, as the Fool was in fact no fool. The ceiling of the warehouse caused immense dissemination of sound, making him hard to find unless he visually made himself known. \"I never would have imagined that as a color for you.\"\n\n\"A great deal has changed,\" Jenna replied calmly, spinning slowly to maintain her situational awareness. \"You know, even after all you have done, I wish it had not come to this?\"\n\n\"You were the one to betray your government and the cause.\"\n\n\"If that's how you wish to interpret it,\" Jenna replied. \"You have lost your mind and your way. I respect the man I thought you were, but I will stop the man you have become.\" She looked up. \"You should have listened to me in the beginning. You never should have made this so personal.\"\n\n\"You mean your son? I never would have hurt the boy. I just needed to get your attention, and bring you back to the fold. I had no intention of hurting him.\"\n\n\"Of course not. It would have been the only way you could control me.\"\n\n\"Not the only way,\" the Fool growled. \"I could have made you one of us. This new form,\" he continued, \"it's amazing. So primal and so honest. You could have this, Empress. Come home. Take your place amongst the future of the United States elite.\"\n\nJenna shook her head. \"Not even if I could, old man. You really wanted me as a mate, whether I willed it or not? You are as bad or worse as the Messenger was. Now, I can never be yours.\"\n\n\"Don't be so --\"\n\n\"Trust your nose, Fool. Smell my flesh. My heart no longer beats, my blood no longer flows . . . I am undead. I am your enemy.\"\n\n\"You . . . you allowed this?\"\n\n\"I requested it. I guess I should thank you, in truth. Had the Hanged Man not been so effective in his attack on me, I might never have been forced to make this choice. I might not have been given the strength to kill you. You've made a great many mistakes.\"\n\n\"Such as?\"\n\n\"The attacks on my friend, attempting to force all the Nightwalkers to accept the Lycanthropy virus and driving many of them into the camp of your enemy --\" She paused. \"-- trying to kidnap my son. You have violated a cardinal rule of war.\" She heard something drawing closer, but willed herself to remain still. \"You gave your enemy something to fight for.\"\n\nA furry blur leaped from behind a caterpillar tread, but Jenna caught it easily in mid-flight, grabbing it by the arm and swinging it like a baseball bat into the ground on the other side of her, letting go after the sickening crack that left her attacker limp. The entire fight had taken less than two seconds. \n\nIt had been a test. Jenna knew that, but she had no choice that time. In her world, every test was \"pass and live\" or \"fail and die.\" She raised her voice. \"For anyone listening, know this. Anyone who fights with the Fool tonight is subject to forfeiture of life. Tonight is the end game. Think carefully about what you are fighting --\"\n\n\"Enough!\" snarled the Fool. \"I find you guilty of treason, Empress, and your sentencing begins now!\"\n\nJenna jumped ten feet straight up into the air, easily avoiding the two slathering werewolves who attacked her first. Unfortunately, it also put her in range of rifle fire, and she several bullets whiz by, and one impacted her chest plate. Apparently, the Fool's Nightwalker \"back ups\" had arrived. She flew back under the impact of the bullet, but she was otherwise unharmed.\n\n\"I'm taking fire,\" she said into her intercom. \"Enemy reinforcements have arrived.\"\n\n*Game on,* Nessa replied. *Stay alive.*\n\n'Working on it, Jenna thought. She decided to stay on the ground after that. She was going to have to deal with more wolves, but it was better than making herself a target in the air. That, and she was faster than she had been letting on. She took off with such speed that she could actually seem the confusion on the face of another werewolf as she vanished from its view. 'That's the Emperor,' she though, recognizing the emblem on the body-armor. He was Major Arcana, which meant that he was going to be dangerous. Still, she was able to lose him, then a thought occurred to her. She did not WANT to lose him. She needed to gather as many of her enemies around her as she could. But how \u2013\n\nShe pulled one of the armor plates on her arm aside as she ran, and dug her nails into her arm. It hurt like hell, but she was able to draw blood. 'There. If they are truly as animalistic as Nessa said, then they should not be able to resist.' Sure enough, she heard the pitter patter of little paws and sharpened claws, and the sound began to escalate. And it became harder and harder to dodge. \n\nOver the racket, she heard more gunfire and she heard metal being shorn apart. Her guest were arriving, so it was time to drop off the party favors. She jumped up in the air, this time with much more speed. In the milliseconds it would take for the commandos to train their weapons on her, she pulled out a string of flash-bang grenades, and began lobbing them all over the room. 'That's going to suck if you're watching with night-vision goggles,' she thought. And sure enough, the subsequent gunfire in the main room was wild, as the commandos were firing way off their marks. \n\nJenna landed and was preparing to initiate phase two of her plan when she found herself doing a tuck and roll to avoid the outstretched claws of both the Emperor and the Queen of Swords. She grabbed the Queen's arm and rolled backward and launched her thirty feet into the air, then did a sweep kick on the Emperor. She knocked him down, but he quickly regained his feet. Jenna realized that her speed advantage was going to quickly be overcome by sheer numbers, as four more wolves closed in on her position. Jenna closed off the flow of air though her nose and mouth, then dropped a gas grenade.\n\nThe stench from the gas had an immediate effect as the wolves in Jenna's immediate vicinity, all of whom made noises that she had never heard from any animal as their overdeveloped senses rebelled against the sensory invasion. She hurled four more grenades to every corner of the room, and tossed a couple more flash-bangs for good measure. \n\nThe werewolves seemed to be in disarray, but Jenna knew not to take it for granted. And she still had a particular wolf to \u2013\n\nJenna heard rather than saw the approach, her finely tuned hearing managed to noticed the soft clacking of claws on pavement over all the ruckus, but she still was not able to quite dodge the powerful fist of the Hanged Man as he sent her sailing into a sickly-yellow metallic hulk of a machine. She must have made a noise, because over the intercom, she heard \u2013\n\n*Jenna, report!* came her sire's voice.\n\n'Hell,' Jenna thought, watching as one of the deadliest beings she had ever met turned, a mask of some kind covering his face, 'They anticipated sensory attacks.' She expected that all the Major Arcana had such defenses. She wanted to warn her comrades, but she had fought the Hanged Man once before, and knew how dangerous he could be. He deserved her undivided attention. As she stepped forward to engage him, another wolf came at her, this one's armor bearing the symbol of Judgement, swiped at her from underneath the chassis of one of the large vehicles. \n\nShe skipped over that arm and then brought her heel down on the elbow for a satisfying crack. She didn't have time to savor her minor victory, as the Hanged Man was coming for her again. She dodged down a row of equipment, and she saw a dark doorway beyond. Nessa and William were both yelling at her to respond, and she felt an odd giggling desire to tell the first to shut up and the latter to use his indoor voice. It was strange the things that crossed one's mind when death was imminent.\n\nBut before she got to the door, her years of tactical training kicked in. Her enemies had been swiping at her, pushing her, and the Fool had sent several Major Arcana after her, so why didn't they simply swarm? They were herding her. Feeling the breath of one of her former colleagues on the back of her armor, she jump up, planted her feet above the doorway, flipped over backward and kicked Judgement in the back of the head and sent him flying through the doorway. \n\nInstantly, a blue light shot up from a disc on the floor, and Judgment froze in midair, caught up in a stasis field. \"They've got inertia traps!\" Jenna yelled into her comms unit. She and the other renegade Nightwalkers had been so worked up about trapping their enemies that it had not even occurred to them that the Fool might want to do the same. Maybe he wanted more than just Jenna back. He wasn't going to get a chance at them though. Only vampires were coming in. \"Watch where you're going,\" she reiterated, then did a forward-jumping kick to the Knight of Rod's face, cracking his facemask. It looked like an impromptu tech job, but it was impressive nonetheless. \"And the Major Arcana has masks,\" said, snapping off a side kick that sent the Magician flying solidly into the front shovel of a bulldozer. \n\n*Got it, Nessa replied. *Shock troops adjust tactics accordingly.*\n\n*This is Death. The first wave of squirters has made their way to us. Non-lethal effects are working.* There was a moment where someone near Death was cackling with such audible glee that it interfered with Nigel's message. Then, in a dry voice, he added, *And the High Priestess would like everyone to know that she bagged, and this is a quote, 'a whole pack of pound puppies in one damn shot.' She would also like to add that she is 'one hot bitch.' End quote. Over.*\n\nDespite the gravity of the situation, Jenna found herself smiling. Her new girlfriend was something else. And when Jenna spun to face the ring growling teeth, she kept smiling. It seemed to disconcert the dozen or so Major Arcana hybrid wolves looking down at her at the moment. Several of them looked at each other, growling in their confusion. They had never seen the Empress smile. And they, almost to a soldier, realized something that the peasants in villages in the old world when the old religions were strongest had learned the hard way. When an angel smiles at you, it is not necessarily a good thing.\n\n\"Last chance to surrender,\" she whispered. \"I don't want to have to kill you.\"\n\nOne of the wolves actually laughed. It was the Wheel of Fortune. \"I know you were strong, but we are stronger. You cannot beat us all. And the Fool will reward whoever brings you to him.\"\n\nJenna looked at each of their pairs of glowing red eyes, and all but one were looking her way. The Lovers, a twin sign for a single young man who was towards the bottom of the Major Arcana in his power level. His eyes were constantly drawn to the side. He was looking for a way out. \n\n'If I can save at least one,' Jenna thought. She maneuvered herself a long the wall, maneuvering herself into a less safe position in order to put the Lovers at the back of the pack, and free to \u2013\n\nShe had been wrong. Very wrong. Not about the Lovers wanting to leave, as the young Nightwalker bolted the moment that he had the opportunity. She was wrong thinking that she could save him. He was still a yard from the door when the Hanged Man plunged through the smoke and darkness and landed on the Lover's back, latching powerful jaws onto the back of his neck.\n\n\"No!\" Jenna shouted, stepping forward stopping at the wall of growling, taloned death before her. It didn't matter. She heard the crunching of bone, so fast that the Lovers didn't even get to make any noise. He was dead before he even finished hitting the ground. \n\nThe Hanged Man turned his gaze towards Jenna, his mask pulled to the top of his head, and that infernal rope dangling from around his neck. He was mad. The rest were wild, animalistic, and savage, but the Hanged Man had reached a level of monstrosity that Jenna had simply been unable to fathom before. That man . . . killed. Nothing more, nothing less. And he killed because the Fool wanted him to.\n\nThe wall next to them thumped heavily, as if a truck had just backed into it, with cinder dust raining down on their heads.\n\n\"Move away from the --\" someone started to say, but everyone pretty much got the idea to back away when the wall began crumbling down, and an enormous figure stepped through the rubble. Clad now only in his ceremonial belt, Shinmatsu appeared between Jenna and the circling wolves. \n\n\"You,\" he said calmly, \"forgot to tell us where you're going. For that . . . no cookie.\"\n\nShe stared for a moment. \"Cookie?\"\n\n\"Yes, I said . . . one moment,\" he added quickly as a Nightwalker hybrid wolf launched itself forward. Watching Shinmatsu move was like watching a wave. You didn't realize how fast it was moving, or how much force it had behind it, until it hit. And oh did it hit. The enormous sumo's hands moved out, touched the wolf's chest, then swirled him around and into a dilapidated vending machine with such speed that an ancient can of Coke Zero rolled down the chute afterward and landed on the unconscious wolf's head. \"Geh,\" Shinmatsu said afterward. \"Diet drink. No good can come of that.\"\n\nAnd just like that, the tides seemed to turn. Jenna ran toward Shinmatsu and, almost as if he sensed her intention, hunkered down and glared at the enemy while she launched herself off of his back and front kicked a former comrade in the face while pulling out her semi-auto pistols. She had played nice as long as she could. \n\nNessa arrived with Marcus at her side just in time to see Jenna stop fighting defensively, and it was a thing of beauty. She sailed up into the air, the sound of gunfire acting as her heavenly orchestra, sending that undead valkyrie high into the heavens with 9mm, silver-tipped serenades all her own. The Nightwalker replacements seemed unable to track her, she was moving so quickly, and the remaining wolf hybrids were momentarily transfixed. The Empress had been replaced by an angel, all dressed in white, but silver bullets came streaking from her guns with unsettling precision. \n\nFortunately for the wolves, silver was a soft metal and did not work as effectively against body armor as regular rounds, but at least two snarling furies hit the floor under her eye. ",
        "\"She is magnificent,\" Marcus whispered from behind his creator. \n\n\"And she's just getting started,\" Nessa replied. She was begrudgingly admitting to herself that maybe Marcus was right and she should not have come. Some floating and a few skirmishes had already left her feeling drained, causing her to rely more and more on Marcus. Not that she really minded. She liked watching him work. \"Marcus, that one, towards the back . . . that's the Hanged Man,\" she murmured, a deep rage filling her tanks a for a bit. \n\n\"The one who killed Ipos?\" Marcus pulled his sword out from its back sheath. Despite almost two thousand years having passed, Marcus was a traditionalist. He liked to kill the important people up close and personal. \"Say the word, my eternal love.\"\n\nNessa dug her claws into Marcus's shoulders and growled. \"I want my pound of flesh.\"\n\n\"And you shall have it.\"\n\nMarcus sprang into action, and he had not lost a step. Those who knew him could almost see the Roman warrior stepping forward in the shining armor and plumed helmet that he had worn so long ago. He had been born and forged in the wars of arguably the greatest empire on earth, and he had not forgotten. Oh no, his muscles and his blood remembered. \n\nSome of the leaders of the Minor Arcana had arrived with their few ragged troops, as most of the rest were already dead or had fled. The King of Swords was stabbed through the midsection as Marcus approached, who then spun, pulled his sword out, elbowed the man in the back of the head, then stepped forward and stabbed someone else. No wasted motion, and everything landed. \n\nThings were pure chaos now, as the werewolf hybrids had encountered an enemy more deadly than itself. It had numbers and fire support, but the vampires had speed, strength, hi-tech, and a perimeter. It was never pretty to watch a team begin to break when such action led to a grisly death, but that's what began to happen. Theo crept off into the darkness to hunt the human Nightwalker backups in their perches, while Nessa's demons began beating the bushes. Every now and then, they would hear a scream as Anabella unleashed banshee fury on someone, then beat them over the head with her shilelagh (and Jenna had learned never to mention to the banshee that the shilelagh was an Irish invention . . . it made her testy). \n\nThe vampires engaged their werewolf counterparts, giving Jenna a chance to catch her bearings. Her eyes were drawn up. \"Where are you?\" she muttered. \n\n\"Looking for the Fool?\" Nessa asked, standing behind her.\n\n\"Yes, I . . . you feel off,\" Jenna said, turning to her sire. \"You're tired. Weary.\"\n\nThe redhead nodded. \"Yeah, a bit. We need to finish this.\"\n\n\"You should go. We can --\"\n\nNessa cut her off with a raised eyebrow. \"I don't run.\" Nessa raised the shotgun she was carrying and blasted a round into the Page of Cup's breastplate. The plate held, but the wolf was knocked back twenty feet. \n\n\"I know. Doesn't mean I won't tell you to,\" Jenna replied. She looked up. \"I need to find him. To end this.\"\n\n\"Don't go --\" Nessa watched her youngest jump up, grab a diagonal girder, and shimmy off into the darkness. \"What we have here is a failure to communicate,\" she whispered. \"Take care.\"\n\nJenna made her way up into the spiderweb of plas-steel girders, dust, and shadows that clung to the ceiling of the warehouse. Her eyes took on that soft, white glow that had captivated her sire, and she gazed out into the world above the world, looking for him. Finding him.\n\nThe Fool had a machine gun in his right hand, and he was leaning over with his other claws gripping a beam, and he was unloading shells with uncommon ferocity. The Fool that the Empress had known would never waste ammo that way. He was mostly hitting the tops of construction equipment, but she saw at least one vampire's armor penetrated, and Anabella was trying hard to keep out of his view.\n\nThen their eyes met, and the Fool righted himself on the beam. Next, he shook his head. Finally, he did something that truly surprised Jenna. He ran. It took her a full second to realize what had happened before pursuing. Running? The Fool?\n\nAcross the girders, up an access ladder, and through a hatch in the roof, she followed him. 'What is it about roofs?' she thought as she followed his trail around rusted cooling units and other structures. Up ahead, the Fool sat perched on the edge of some piping, watching her.\n\n\"I thought we might take this somewhere more private,\" he said as she jumped nimbly up onto a metal crate. \"Oh Empress, you should have simply surrendered.\"\n\n\"Surrender? The field is lost to you,\" she replied. \n\n\"The day, perhaps, but not the field. You brought in powerful reinforcements. Vampires?\"\n\nJenna nodded, glancing around. He would have some more tricks, she was sure of it. \"My family.\"\n\n\"I know of your family,\" the Fool replied, growling from behind sharp canine teeth. \"They died in fear and pain, did they not?\"\n\nJenna's skin felt clammy and her heart gave an involuntarily beat. \"Is that your plan then? To anger me with thoughts of my old life?\"\n\n\"I have no control over your thoughts, Empress. I'm not sure that I ever did. Had I realized how . . . damaged, you were, I might have culled you from the herd earlier.\"\n\n\"You are inconsistent in your thoughts. First, I am the only one worthy to become your mate, and now? Now you call me damaged? It's almost ironic, seeing as I am more whole now than I ever was when I worked for you.\" Her hand drifted towards the base of her spine and the guass pistol hiding there. \n\n\"I wouldn't recommend that,\" the Fool said, holding up a detonator in his right hand. \"See, I figured you would surround the base, so I've rigged explosives in a wide perimeter. Touch that gun, and all of the other traitor Nightwalkers and the rest of the monsters that you've thrown your lot in with will die.\"\n\nJenna froze. She should have known better. The Fool had plans on top of plans on top of plans. \"To what end? You blow them up, I kill you. You gain nothing from it unless you are planning on running.\" She cocked her head. \"And I never figured you for a coward.\"\n\nThe Fool's hand clenched. \"No, I am not a coward. I simply adjust strategy.\"\n\n\"Adjust? You threatened my son, my friends, and anyone else who disagrees with your obscene crusade, and you call that adjustment? Do you even know what you're fighting for anymore?\"\n\n\"I am fighting for my nation, and to create the greatest black ops unit that the world has ever seen. Think about what we've learned. Thing about what we ARE! If we get our scientists to analyze both viruses . . . the one that affects you and me, think of what they could create!\"\n\nHe would never stop. Jenna knew that, but what to do? She wouldn't let him take the buildings down. She wouldn't let him escape. \n\nThe Fool saw the gears clicking in the Empress's head. He grabbed a pair of stasis cuffs from off of his belt and tossed them to her. \"Take off you comms, drop your weapons, and put those on. Once we're safely on our way to DoD headquarters, I disarm the explosives.\"\n\nJenna was not an idiot. Every fiber in her being reminded her of her training. Once the kidnapper has you where he or she wants you, you're pretty much lost. He would not abide by the promise he had just made. He would have no reason to.\n\n*Jenna,* came William's voice, *Don't do this! I've been watching the whole time, and I let Caitlin know. They're evacuating the area. Just keep him distracted.*\n\n'A chance,' she thought. \"Okay,\" she said, making sure that her comms unit was still on when she put it down. \"Taking off comms, and putting weapons down,\" she said, keeping her eyes straight on her enemy. She needed to buy time, so she would go along with this charade. She wanted to look around for the remote sensor that her son was piloting, but she didn't want to give its position away. Her son had been looking out for her, which made her all kinds of proud. \n\n\"Hurry,\" the Fool said, watching as weapon after weapon hit the rooftop. The woman had come armed to the teeth. It actually aroused him somewhat. She said he could not turn her, but perhaps he could still . . . enjoy . . . her. \n\nBy the time the last grenade had been placed on the ground, the Fool had become somewhat impatient. He did not believe that the Empress was going to make this so easy, not after all the problems she had caused. What was her angle? He did not have much chance to figure it out, as the Hanged Man erupted through a door onto the roof.\n\n\"We must . . . hurry,\" the hybrid Nighwalker growled. \"The defenses have fallen.\"\n\n\"I am aware of this,\" the Fool said.\n\n\"So the end game remains the same?\" the Hanged Man asked, looking hungrily at Jenna.\n\n\"We were fighting back on our heels. No more. We take her, we start over somewhere else. In the end, we win.\"\n\n\"Well, I don't know how long that vampire will be distracted. He's dangerous.\"\n\nThe Fool glanced away from his prey to look at his second in command. \"YOU think he's dangerous?\"\n\n\"Sir, I've never seen anyone fight like WATCH OUT!\"\n\nA small distraction was all she had needed, and so Jenna moved the moment she could. Using all the speed that her own hybrid nature allowed, she had closed the distance between them in less than a blink, and her hand closed so tightly on the Fool's that she heard a bone snap. \n\n\"Impressive,\" he said, then swung his other fist at her head. \n\nJenna dodged, then brought her knee up to the Fool's groin, which he blocked with his own leg. He tried to wrest the detonator away from the Empress, but her grip was like cold iron. He swung his arm, but she didn't let go, allowing herself to be slammed into an enormous pipe rather than give him control of the device. Of course, she was still conscious, so she rolled backward and hurled him in an arc over her head and smashed him into the roof with a loud thud. He did not let go either. \n\nThe door that the Hanged Man had come through earlier burst open again, and Marcus came flying out, a sword in one hand and blood streaming from a cut in his forehead. He looked angry.\n\n\"We still have a score to settle, you and I,\" the Roman warrior growled, hurling himself at the Hanged Man with deadly purpose.\n\nThe combat on the rooftop became chaotic, with the Hanged Man attempting to stave off Marcus while Jenna and the Fool fought for control of the detonator. Jenna had to make sure the device did not go off, putting her at a distinct disadvantage. She fought with her free elbow and her knees, laying on blows faster than the Fool could block them, but the wolf could take a lot of damage and his blows came down heavier than his adversary's. \n\nMarcus's fight with the Hanged Man, however, was all over the place, and there was nothing at hand that could not be counted as a weapon. Marcus kicked the Hanged Man back twenty feet, but the wolf just landed on all four paws and then bounced off two walls as he closed the gap and attempted to remove Marcus's head. Marcus failed to oblige, ducking and then landing a serious uppercut on the wolf's jaw. The wolf took it in stride, bringing an elbow down on Marcus's head.\n\n\"Your new friend is formidable,\" the Fool said, trying to gouge Jenna's eyes out.\n\n\"He's a Roman soldier. From actual Rome. He's had a lot of practice.\" She went for an elbow break, but the old commander was far too crafty for that, spinning until he had Jenna in an arm lock. Jenna stepped toward him and elbowed him twice in the face, then spun out of the hold. He kicked her in the knee as she moved, and she was sure something was close to breaking. Still, she couldn't let go. Her free hand grabbed the Fool by the throat and rammed the back of his head into a wall, trying vainly to choke off his oxygen supply as well. He went for a forearm to the inside of her elbow to break the distance, then tried to forearm her in the face. She ducked her head back and then bit him. Hard.\n\nWhen the Fool yanked his arm free, he took one of Jenna's fangs with him, causing blood to pour out her mouth. Still, it was almost worth it for her to watch her former boss shaking his arm wildly as if trying to get rid of cooties. She used the temporary distraction to put her elbow into his throat. Most of it was blocked by his armor, but some force got through, and she knew that he had to be having problems breathing by now. \n\nMarcus was trying very hard to ram his short sword through the Hanged Man's eye socket, but the wolf was being strangely non-cooperative. He was responding quite savagely. He had even ripped his mask away, showing a somewhat mutated and all-together vicious looking wolf face. The two titanic warriors seemed so evenly matched, except that Marcus was not tiring, and the Hanged Man had been in conflict all night. \n\n\"Give up,\" Jenna said through bloody lips. \"The order to evacuate the surrounding area has already been given. The rest of Jenna's . . . OOF! . . . people will be here soon,\" she added despite a hard blow to the stomach.\n\n\"A real soldier never surrenders,\" he snarled. \"I'm surprised you were so willing to do so.\"\n\n\"I wasn't surrendering,\" she told him as coldly as she could. \"I was adapting.\" \n\nHe snarled and raised his hand to try and hit her again, and then . . . then something strange happened. A small, floating, metallic disk ran into the Fool's face at lackluster speed. It did manage to hit him in the eye. It had somehow entered the fray silently and, while doing no damage, certainly took the Fool by surprise.\n\n'It's a remote sensor,' Jenna thought. It was her son. As the Fool almost casually destroyed the sensor, Jenna knew that she needed to take advantage. The only thing at hand was a rusted piece of sheet metal. She tore off a chunk and, making sure to hit an angle perpendicular to the arm, shoved it down as hard as she could.\n\nThe Fool let out a howl that would have frightened villagers across the land back in the day. The Empress had just taken off his hand at the wrist, leaving her in sole possession of the detonator. She summersaulted away, putting space between the two of them. The Fool, already mostly mad, started forward until he saw a couple of red dots sweep across the ground and come to rest on his chest and between his eyes. He looked up to the roof of the stairwell. \n\n\"Death,\" he gasped. \"High Priestess.\" It was simply an acknowledgement.\n\nThe two renegade Nightwalkers stared down their former commander, their weapons loaded with silver and trained on him if he so much as twitched. \n\n\"Like the lady said,\" Death said solidly, glancing at Jenna, \"It's over.\"\n\nTo his credit, the Hanged Man was loyal to the last. Seeing his commanding officer in trouble, he broke away from Marcus and interjected himself between the Fool and the commandos. Not that Marcus much cared, as he tackled the Hanged Man from behind, locking the wolf's arm behind him and grinding his face into the roof.\n\nAt that moment, something happened in the Fool's eyes. It was as if the fire that had been burning there was extinguished in an instant. He knew . . . it had taken so long and so many lives, but he knew. The Fool was done. \n\n\"It was a good dream,\" he muttered, as much to himself as anyone else. \n\n\"It was not worth the price,\" Jenna replied anyway, picked one of her pistols up where she had discarded it.\n\nAbout that time, Nessa, Anabella, Shinmatsu, and the demons arrived. Cresil and Kobal looked down at the captured Hanged Man with pure hate. Nessa just looked tired. She saw that her oldest and youngest children were bleeding, wounded in her name. She had depleted her energy reserves in the fight, and she would need blood soon. So would the rest of her children but, in that stubborn way of vampires, they would insist that Nessa eat first.\n\n\"Do you surrender?\" she asked, just badly wanting this to be over.\n\nThe Hanged Man was like a rabid animal, but Marcus was able to keep him pinned. The Fool just stood there, bleeding.\n\nJenna handed the Fool's other hand, complete with detonator, to Shinmatsu, then turned back to the source of all her recent troubles. What was strange was that she did not truly feel victorious. \"Sir?\" she asked, stepping toward the Fool with her weapon raised.\n\nThe Fool looked at her, almost through her, then closed his eyes and nodded. He knew she was not going to give him the opportunity to live. She knew he would not accept it. Too much had happened. Too much water under too small of a bridge. She pulled the trigger and shot the Fool two times in the head, sending him to the ground in a bloody heap.\n\nThe Hanged Man let out a mournful howl. Marcus looked up at his sire, his lover, and his friend. In response, Nessa stuck out her fist, extended her thumb, then rotated her hand until the thumb was facing downward. Marcus nodded, grabbed his sword off the ground, and drove it through the back of the Hanged Man's head.\n\nSilence. Crisp, dark, all-encompassing silence. The distant sirens, the sounds of the city, the clamor of the mop-up going on down below, all of it seemed to just fade away.\n\n\"Sometimes,\" Nessa said, looking at the carnage on the warehouse rooftop, \"I hate my job.\" \n\n-------- -------------------\n\nLater that night . . .\n\n-------- -------------------\n\nIt had been a scramble, but Avery had managed to get enough donors to replenish the blood for all the battle-weary vampires. Accommodations had been arranged for the dozens of new refugees and captives until Nessa was able to get a new alpha were for the hybrid wolves, or before she could get around to mind-wiping the human commandos who had simply been in the wrong place at the wrong time. They had saved as many as they could, but Nessa's crematories were still working overtime to get rid of the evidence.\n\nGhede and Lawrence had already begun laying the groundwork for their coverup. The Fool's computer banks would show medical data chronicling a number of unexpected mutations resulting from the bioengineering, and the bodies that were found would show all sorts of anomalies, thanks to Ghede's spell. The Fool and the Hanged Man would never be found.\n\nThe Nightwalkers that had survived had agreed to work for Nessa, and the ancient vampire had already put out feelers for a new alpha werewolf to come and oversee the area's pack, including the hybrids and all of the special attention that they would require. The World was the highest ranking Nightwalker hybrid that had survived and been captured, and he had agreed to help calm his brethren in exchange for Marcus's promise not to eviscerate him. \n\nMarcus's wound had already healed, as had Jenna's, though her missing fang would take a few days. Luckily, she could feed with just one. Instantly upon her return, William and Caitlin had started fawning over her, almost competing for the right to nurse her back to health. Death and Avery were overseeing the clean up, so the vampires, plus Jenna's \"entourage,\" gathered in Nessa's quarters.\n\n\"Are you going to be okay?\" William asked again.\n\nJenna mumbled something through the ice pack. Her glowing white eyes had dimmed and there was a touch of blood at the corners of her eyes as if she were trying to cry. \"I think so. Nessa said the fang will grow back in the next few days.\"\n\nCaitlin wiped the tears away. \"You had to do it. We had to do it. We saved who we could, and that's because of you.\"\n\nWilliam looked confused. \"Wait, are you upset because you killed that Fool guy? Why?\"\n\nJenna smiled wanly and put her hand on her son's shoulder. \"I . . . I think it's a military thing.\"\n\nMarcus walked over and sat down. \"Sorry, I could not help but eavesdrop. Seriously, vampire hearing,\" he added with a grin. He looked at William. \"When you are part of a unit as insulated as the military can be, there is a kind of brotherhood. Much like real family, you don't always like your brothers, but there is always a sense that they will be there when you need them. To end such a relationship, however justified, is like --\"",
        "\"Losing family?\" William replied, looking back to his biological mother. \n\n\"Yes, like losing family,\" Marcus finished. \"Which is hard, under any circumstances.\"\n\n\"I'm sorry,\" the young man said, looking at Jenna. \"I didn't know.\"\n\n\"Neither did I.\" Jenna ran her hand through her son's hair. It felt like such a normal motion, but she pulled her hand back. He wasn't her son, not in the way that mattered. Michelle Monroe was his mother. Only she had \"ruffle the hair\" privileges.\n\n\"It's okay,\" he told her, seeing the pain in his face. \"And we still need to talk about you meeting the rest of my family.\"\n\n\"I thought we agreed --\"\n\n\"No, you decided that meeting my parents wouldn't work, and I decided you're full of --\"\n\n\"Language.\"\n\nHe gave her a dirty look. \"You agree to come meet my parents, and THEN you can tell me to watch my language.\"\n\n\"I can't --\"\n\n\"I think you can,\" William interrupted. \"You're just afraid to. And I thought about what you said, about this changing the way they see me. I don't care. Any decision I make can change the way they see me, but it's not going to stop me from making them.\"\n\n\"I like him,\" Nessa said, sitting down next to Marcus and putting her head on his shoulder. It was impressive how natural they looked together. No wonder she turned him. \"Jenna, you can't tell me you don't want to be part of his life. Why not do this?\"\n\nJenna rehashed all her excuses in her head, and nothing seemed to sound as forceful as it had. \"What would we tell them?\" she asked at last.\n\n\"We'll figure that out,\" Nessa said, leaning in and kissing her child on the forehead.\n\nJenna sank into Caitlin's arms, letting her new lover's warmth calm chills that Jenna did not even known she had. \n\n\"And,\" Nessa added, \"I have one last task for you as well.\"\n\nJenna looked slightly concerned. \"What?\"\n\n\"I'll tell you in a few days. For now, we need to rest up, and YOU need to get to know your family.\" Nessa looked around and, as if someone had sent a silent command, the rest of her children made their way over to sit down. For the first time in sixteen years, Jenna had a home.\n\n---------- ------------------\n\nA month later . . .\n\n---------- ------------------\n\nJenna had thought the days she spent being terrified were over and behind her, but apparently not. In the preceding 30 days, things in New Atlanta had gotten back to normal, though what constituted \"normal\" in her mind had been irrevocably altered since that fateful night she had hurled a corporate spy out of a window. She, a member of a top-secret commando unit, had then discovered a world of \"monsters,\" been drawn into that world, and had walked out the other side, a whole being for the first time in over fifteen years. After having her family murdered and her life ripped asunder as a child, she had a new family, and a new life.\n\nAs far as anyone could tell, it seemed that the government had bought the cover-up. Every human or Night Breed that had been involved in that final battle had been rounded up and given a choice, keep what had happened secret, or die. Strangely, no one had turned down Nessa's offer, especially after she started offering sex as part of the severance package. This seemed to annoy Marcus, which led to a fight between the two ancient vampires, which led to sex to between those same two vampires. Apparently, most things led to Nessa and Marcus having sex. But when the sun rose, Jenna was summoned back to Nessa's bed, as the proximity helped her adjust. In a show of trust, Caitlin was invited to sleep with them as well, though she had to remind Marcus (repeatedly) that she was completely gay, and that he needed to keep his hands to himself.\n\nIn the meantime, Jenna had spent time with all of Nessa's other children, particularly Shinmatsu. For some reason, Jenna just felt comfortable with the six-hundred pound man. After her upcoming vacation to the Bahamas with Caitlin, the two of them were going to be flying out to Japan to spend time with Shinmatsu and his wife. Both of them were now officially Nessa's employees, and the elder vampire had ordered them to take the first year of their employment off. \n\nBut first, there were two things that Jenna had to do that filled her with dread. The first had been meeting William's adopted parents. The cover story that Caitlin had concocted was to replace all parties of interest with crime syndicates and secret (but non-military) organizations. When William had introduced his parents to his Jenna, she had been so scared that she almost cried, which had elicited a motherly response from Michelle Moore. They had gone over everything, from Jenna giving up her son after surviving what the Messenger did, all the way up to absconding with William for his own safety. While Ron Moore had been angry about being kept out of the loop, he eventually thawed out when he discovered that there was no more danger, and that it had never been Jenna's intent to come between them and the child that they had raised. In the end, the Moores were good people, who did not fault Jenna for any of the decisions that she had made, and supported William in his desire to have his biological mother be a part of his life.\n\nAnd William WAS part of her life. At the moment, an annoying part. He and Caitlin had both boarded a plane with Jenna to make sure that she fulfilled the task that Nessa had put before her. Jenna was still a slightly fractured psyche. She had made peace with her present, she had a future that she actually looked forward to, but she needed one last piece . . . to be connected to her past. There was only one person that had known Jenna back in the days before she had been left at the mercy of the Messenger when she was just fifteen, and Jenna had been ordered, quite literally, to mend that bridge between \"what is\" and \"what was.\"\n\nSo she found herself standing on the sidewalk in front of a townhouse, no different in its appearance from every other house on the street, in the early hours of dusk. It was what was inside that was different. Inside was Tanya Smithson Caine, Jenna's best friend in high school. She was also the first girl that Jenna had ever had a crush on, and the first girl that Jenna had ever kissed.\n\n\"You are not going to just stand there all night,\" William said, standing at her side. He almost wanted to smile, seeing his mother acting so nervous. He knew that she could kill a man in a matter of seconds, but she had all the social confidence of a teenager. With his parent's permission, he had been able to accompany Jenna on this trip, partially to spend more time with her, at Nessa's insistence, to make sure that she damn well went through with it.\n\n\"We will actually ring the doorbell for you,\" Caitlin added, standing on the other side. \"C'mon honey, it'll be fine.\"\n\nJenna gave a slight smile to her girlfriend. Caitlin, formerly known as the High Priestess, had been a rock for Jenna in the last month, patient to a fault, yet passionate. Every day, the two women had exchanged intimacies, and had gone on dates like normal people did. The fact that they were both trained assassins and soldiers just meant that being mugged was less likely. \n\n\"What if she's mad at me? What if she doesn't even remember me?\"\n\n\"Jenna,\" William started, finally cracking a smile, \"you're kind of unforgettable. I doubt it was much different when you were a teenager.\"\n\nCaitlin took her hand. \"You're the most beautiful girl that I've ever seen. I think William's right, that there's no way she could have forgotten you. You even said she tried to visit you --\"\n\n\"I couldn't face her,\" Jenna said.\n\nCaitlin kissed her cheek. \"You can now.\"\n\nJenna steeled herself, then took each step up to the door as if she were walking the last mile at prison. Her finger trembled as it reached forward and touched the buzzer.\n\nSeconds later, a man answered the door. He was handsome enough, with a slightly receding hairline but kind eyes. Somewhere in the background was the sound of a woman's voice, talking to a child while preparing dinner. \"Yes?\" the man said, \"May I help you?\"\n\nJenna's words froze in her mouth. \"I . . . I --\" She looked over at Caitlin who just smiled patiently. Jenna turned back to the man, whose name she knew was Steve. \"I was looking for Tanya.\"\n\nThe man glanced toward the open door from where all the noise was coming from. \"Honey, there are some people here to see you.\"\n\n\"Well, who are they?\" shouted a voice that was so achingly familiar to Jenna that her heart almost beat at the sound of it. \n\nThe man glanced at Jenna. \"Sorry, I didn't catch your name.\"\n\n\"Jenna,\" she replied. \"Jenna Owens.\"\n\nThe man turned around again. \"It's a Jenna Owens?! Were you --\" He stopped, as the noises in the kitchen stopped with alarming speed. Footsteps were heard approaching the kitchen door.\n\nThe woman who appeared in that door was a few pounds heavier than the last time Jenna had spoken with her, but she wore it well. With pride even. She had always had an athlete's build and swagger, to the point where she had been a little butch, but Jenna hadn't cared in the least. She had married Steven right out of college, and the kids had come along shortly. One of them, a five-year old boy, was peeking out from around his mother's leg. But Tanya's eyes were fixed on Jenna's like she was seeing a ghost. And to a certain extent, she was.\n\n\"I . . . I thought you were dead,\" Tanya whispered. She stepped forward and raised a hand, wanting to see if Jenna was real, but afraid that she was just imagining this.\n\nJenna felt her eyes begin to well up, and quickly dabbed them with a dark cloth so that Tanya would not see the blood. \"I wanted to be,\" she whispered. \"I didn't want . . . Tanya, I'm so sorry,\" she said, trying to keep herself composed as all the memories crashed into her at once. She had been talking with Tanya on the computer the day her family was taken. This was was the only person left who remembered her the way she was before. Jenna herself had tried so hard to forget that young girl. \"I just couldn't see you after . . . after --\"\n\nTanya lunged forward and wrapped her arms around her long-lost friend. She was crying. She remembered Jenna Owens. She knew what the girl had been, and she had known what she had lost. She had sat at the Owens's dining room table. She had watched movies with her best friend on their couch. She remembered. \"I tried to visit you,\" she said, gasping for breath as she held the beautiful woman close, afraid that she'd vanish again.\n\n\"I wasn't ready to see you. I couldn't. I was dead inside, and I didn't want you to see me like that,\" Jenna managed, choking on a pain that had been dormant for so long. \n\nTanya finally noticed that Jenna wasn't alone. \"Who --\" she sniffed.\n\nJenna looked behind. \"Jenna, this is my girlfriend, Caitlin,\" she said, indicating the buxom brunette, who just smiled in response. \"And this is William.\" She looked Tanya. \"My son.\"\n\nTanya's eyes opened wide. \"Your . . . son? But he's --\"\n\n\"Almost sixteen.\"\n\nThe other woman's eyes opened wider. \"That means --\"\n\n\"Yeah. He knows,\" she said, looking lovingly at her boy. Then her eyes were drawn back to Tanya. \"Tanya, I know I have no right to ask, since I just disappeared on you, but . . . but I've been broken. I'm trying to fix myself, but I can't to it without you.\"\n\nTanya looked at her friend, then to Caitlin and then to William. \"God,\" she said, \"you look so much like her.\" She glanced at her very confused-looking husband. \"Steven, I think I'll need you to handle dinner tonight. I think Jenna and I have a lot of catching up to do.\" \n\n---------- ------------------\n\nThe End . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "vampire",
        "werewolf",
        "lesbian",
        "straight",
        "sci-fi",
        "fantasy",
        "magic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/nos-faux-ratu-ch-08"
}