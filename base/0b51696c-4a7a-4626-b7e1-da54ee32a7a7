{
    "title": "Claiming Treasure Ch. 11-15",
    "pages": [
        "Coral Sexson's POV<br >Arrowhead Pack House\n\nAs soon as the trial ended, I ran over to congratulate Chase and Rori. \"Thank you,\" Chase sent to his family and Pack as we gathered around them.\n\n\"I need to get back home,\" Carson sent to me. \"My jet is waiting at the Twin Harbors airport, but the pilots have FAA-required rest until six PM. If you want to fly home with us, you can pick up a flight from Yakima or Seattle to get to Blue River. Mom and Frank are going back with me as well.\"\n\nI hadn't even made return flight arrangements. \"Maybe I'll have Keith bring Hope down for a visit. She misses Grandma. Can we stay a day then head back?\"\n\n\"If you can both be away, then fine.\"\n\n\"I'll call him and see. Things have settled down in the Pack, but I wasn't about to bring them around the Council. Even Rori sent her babies away.\" She looked over at the Arrowhead Alpha; just because they won, didn't mean it was over. She was hosting twenty-one Alphas and the Council, all of whom wanted to get on the road and go home. She and Teri were frantically coordinating rides to the Two Harbors, Duluth and Minneapolis airports. Her Omegas were frantically assisting with packing and loading the vehicles as they pulled up. \"I bet she'll be thrilled when things are back to normal.\"\n\n\"Three months without your babies is too long.\" He shook his head, unable to imagine how they'd done it.\n\n\"I accept the ride. I'm going to go pack, but we should all talk before we get out of mind-link range. Chase and Rori need to know what happened in the jury room.\"\n\nWe quickly linked with Chase; he said we should be able to get together in an hour in their office after they'd gotten the bulk of the Alphas off their land. \"Also, Mom wants to be in on the link but doesn't want to leave Spider Monkey's place. There's no point in doing anything to attract attention that way, and we're not sending any cars out that direction,\" he said. \"You could go for a run, work some of the energy off.\"\n\nI'd enjoy a run, but I had something else to do. I spotted Alpha Ivan and Luna Svetlana in the dining hall, drinking coffee at a table with their Head Warriors, Vasilie and Ekatarina, and walked over. \"Hello,\" I said with a smile. \"May I join you for a moment?\"\n\n\"Of course, Alpha Coral,\" Ivan said. Of all the Alphas in the world, Alpha Ivan was the one I thought least likely to join our side. It must have pissed his father off when he found out what happened in the jury room.\n\nI took a seat. \"I wanted to thank you for your words this morning in the jury room,\" I said. \"Having your support not just for Rori and Chase, but as a female Alpha worth listening to, was a big help to us.\"\n\n\"We have been doing a lot of reflection recently, Alpha Coral. Anyone can see that the hand of Luna is on your family and what they are doing. When she is making her desires so clear, men such as I must acknowledge it, even if it challenges everything we once believed.\"\n\nPrevious Evening, Jury Room\n\nThe jury had taken a vote after we left the trial room to see where we were. The first secret ballot was for the prosecution or defense requests for sentences or neither one. You wrote YES for fifty years confinement, and NO for no punishment at all, and OTHER was self-explanatory. With twenty-two Packs and two (Arrowhead and Monongahela) forced to sit out as prosecution and defense, I was nervous that the other side might take the day.\n\nI didn't know many of the European Alphas, being new to being Alpha myself, but older Alphas tended to be more traditional.\n\nFourteen out of twenty Packs had to agree in for us to reach a verdict. I knew we had three votes from my family (me for Blue River, Carson for Cascade and Ashley for Donner) along with two from Rori's family in Alpha Martin from Adirondack and Alpha Michael from Oxbow Lake. We needed nine more votes with only ten new voters; I wasn't confident at all.\n\nI was shocked when the results came in. There were five votes for the Prosecution, ten for the defense, and the rest were other.\n\nI had hope.\n\nAs we started to discuss the options, I was shocked that two Alphas from North America had flipped. Alpha Richard Long, who had taken over the dysfunctional Bitterroot Pack, was first to speak up. \"What I have realized over the last three months is that we are no longer in black and white situations. When I put myself in Rori's position, knowing what she knew of Frank and what following the law strictly would mean, it changed things. I had to look at what was good in the long term. Having an ally like Frank Grimes is good for us as a people. That is why I voted for no punishment, and I hope you will too.\"\n\nYou could have knocked me over with a feather. Alpha Long had been a Council lawyer and had prosecuted me when I first became Beta under Alpha Rori. \"I expected more from you than this,\" Alpha Paxton said. Katahdin had been against Rori since the beginning.\n\n\"What good would removing Rori do at this point,\" Alpha Steven March said in reply. We had hoped to swing him to our side three months ago since Luna Connie had come to Arrowhead with the other Bitterroot refugees, but he had stayed firmly on the other side. \"She made decisions we would not, but it was not because she is a bad Alpha. Her upbringing is far different than ours was, as is her view on humans. It would make sense that this would affect her decisions regarding them.\"\n\n\"The law was clear, and reinforced to her just before this,\" Alpha Ulf Svenson, from Skel Pack in Norway, said in response. \"That's why I voted other. I understand why she made the decision, but that decision has to carry consequences. It wouldn't be the right picture to let her off with nothing.\"\n\nThe conversation went back and forth, and as we went into the night, we couldn't get that fourteenth vote. Finally, Alpha Ivan spoke up. \"Gentlemen, Ladies, it's been a long day. We have a great responsibility here, and I don't mean just in enforcing the law.\" He stood and leaned over the table. \"We are werewolves, and we are Luna's people. She places us in our positions. As leaders, it is our job to know her will and to follow it.\"\n\n\"Follow a female Alpha? Ridiculous,\" Alpha Robertson said. \"It's not natural.\"\n\n\"And yet both Rori and Coral are dominant Alphas, fully capable of taking down a trained male. If Luna blessed them to be Alphas, why would your opinion matter?\" I smiled, thanking him for saying that out loud. No matter how strong I was, some Alphas refused to see me as more than a baby incubator.\n\n\"If Luna wanted us to have relations to humans, she would let us turn them,\" objected Alpha Martin Nemmers, from the Black Forest Pack in Germany.\n\n\"And if Luna wanted to tell us what side she is on in this, she might show favor like this.\" He pointed at me. \"Pregnant on her first heat after mating,\" she said. He pointed his finger at Luna Ashley. \"Pregnant in her first two years mated.\" His finger moved to Alpha Michael. \"After all these years, his Luna is now pregnant. Show of hands, how many of you have ANY pregnant female in your Pack right now?\" Only seven hands rise. \"Alpha Rori has THREE, despite having a small Pack with few mated pairs. She's making plans to build a Pack nursery, something none of us have EVER needed. No, Luna is with her, and she's showing which side she is on by blessing some and not others.\"\n\n\"You're saying she is cursing us?\" Alpha Nemmers said.\n\n\"I'm just saying that Luna is showing us what she wants. I am going to follow her, and that is why I am voting for her to be released. I would encourage you all to reflect on this tonight and ask a simple pair of questions. Is Luna on Rori's side? And If Luna is for this, why are you against it?\"\n\nThis morning, after everyone reflected on what he said, we took another vote. This time we had the fourteen votes we needed.\n\nPresent Day\n\nI looked over at the Russian pack Head Warrior pair. \"How do you see Luna working in the lives of your children?\"\n\n\"Both have been blessed to find their mates so early,\" Vasili said. \"Perhaps too early. Greg and Tatiana are learning hard lessons right now. Their mating is under a lot of stress, and they have embarrassed our Alphas and our Pack. It will take time to recover from this.\"\n\nEkatarina smiled. \"I am happy my boy Timur found his mate, but he has a hard road ahead of him as well. They cannot fully mate until she is of age, and she's been through a lot in her young life. It could take longer than that for Timur to be trusted.\"\n\n\"From what I have seen of him, he will do what he must.\" I reached my hand over and squeezed hers. \"You may have heard that I was at Bitterroot as a trainer. Mykayla was young and grew up in that, but she was close to the older women. When they arrived at our Pack, she didn't want to be around any of the males, even Chase. Her wolf will be strong, we think. She was strong enough to come forth and defend her years early.\"\n\n\"I asked my Pack historian to look into it,\" Alpha Ivan said. \"There are other instances, including Alpha Rori. Most of them ended up being dominant wolves. Do we know the father?\"\n\nI shook my head, no. \"In that Pack at that time, it could have been any of the dominant wolves or even a visitor.\" There were growls as they processed that. \"Mykayla is a good person with a horrible past. She made a lot of progress, and she saw Timur fight for her. That should help her overcome her fear.\"\n\n\"That is our hope. He is fighting for her even now. She is afraid of his human form, but tolerates his wolf,\" Vasili said. \"He's barely left her room.\"\n\n\"How are you going to handle this?\"\n\n\"Alpha Rori and I need to finalize the details, but we know two things. Tatiana won't be welcome in Arrowhead after what she did to Heather, and Mykayla isn't ready to move to live with us. We are going to trade warriors until Mykayla is of age and can make her own choice. Greg and Tatiana will return and join my Pack, while Timur will join Arrowhead,\" Alpha Ivan said. \"Alpha Rori promised she would keep up his training and send him to college, and he will return to visit when he can.\"\n\n\"I just hope Mykayla isn't too damaged to accept him,\" Svetlana\n\n\"He will work his way into her heart,\" I said. \"Can you contact your son? I'd like to see Mykayla before I leave, but I don't want to disturb them.\"\n\nVasili closed his eyes. \"She is awake now; they are watching television.\"\n\n\"Perfect.\" I stood up, and they all stood with me and said goodbye in traditional Russian fashion, with two kisses. I walked out of the room and across the busy compound to the Pack Clinic.\n\nEntering the Clinic, I walked down the hall and knocked on her room. \"Mykayla? It's Coral. Can I come in?\"\n\n\"Alpha Coral? Please,\" she said.\n\nI opened the door to find her sitting on her bed with an enormous wolf wrapped around behind her. She muted the show she was watching and smiled as I walked over. \"How are you feeling?\"\n\n\"Everything hurt when I shifted back,\" she said with a grimace. \"I wanted to stay wolf, I'm safer that way, but Alpha Chase ordered me to.\"\n\n\"It's a good thing he did, though. I wouldn't be able to talk to you since I'm not your Beta anymore,\" I said. \"And I didn't want to leave without saying goodbye.\" I sat on the bed, and she threw her arms around me. \"You have a friend?\"\n\n\"My mate,\" she said. \"I didn't ask for one.\"\n\n\"He is kind of big,\" I teased her, and she giggled as Timur chuffed in annoyance. I scratched his ears. \"Mates are a wonderful blessing, and you have years to get to know him before you have to make a decision. Don't block him out just because other men have hurt you.\" I kissed her head. \"He is a good man, but make him prove himself to you.\"\n\n\"If I have to,\" she said. We talked for a few more minutes before I had to go and left her with her walking carpet.\n\nBefore leaving the Clinic, I looked in on Tatiana's room. She was sleeping, and Greg was sitting in a chair by her bed, holding her hand. \"Warrior Barks,\" I said.\n\nHe looked up, and his eyes got wide; standing without letting go of her hand, he bowed his head towards me. \"Beta, I mean, Alpha Coral.\"\n\n\"Sit, we need to talk.\" I sat on the doctor's stool by the desk as he sat back down. \"You disobeyed the order I gave you to protect Heather and stay professional.\"\n\nHe nodded. \"I tried, but I couldn't help falling in love,\" he said.\n\n\"Then you should have reported back and asked for assistance. Instead, you broke Heather's heart and left her pregnant, leading to all this. Giving up your parental rights was the right thing, but now we have problems in three Packs,\" I said. \"What have you learned?\"\n\n\"Humility,\" he said. \"It's about more than just me. I should have listened and controlled myself.\"\n\n\"Good. That was the lesson of the trial; what seems right in the short term may be damaging in the long term. Your mate should learn the same lesson. I just wanted to remind you both that you are still young, and the story of your lives has much left to tell. Live with honor, listen to your wolves, and show everyone you have changed. I heard Tatiana wants to be a Pack Doctor?\"\n\n\"She does,\" he said.\n\n\"That lesson in humility will serve her well. Support her and love her, Greg. It's what being a mate is all about.\"\n\n\"Coral, we're meeting in my office in five,\" Chase sent to me.\n\nI stood and left, leaving him with his sleeping mate and his regrets.\n\nCh. 12\n\nHeather Rhodes' POV<br >Cascade Pack Dining Hall\n\nEvery table in the dining hall was full. I only knew a few of them, but we all watched the big screen and barely breathed as we waited for the verdict. \"Alpha Blackledge, what says the jury?\"\n\nI was holding Mongo and Three Tequila's hands as they sat on either side of me. Rori and Chase were my friends, they'd taken me out of Orlando and hid me for months, and now they might be imprisoned and removed as Alphas. My hands were squeezing so tightly I couldn't feel them.\n\n\"The jury sentences Alphas Rori King and Chase Nygaard to time served, and admonishes them to focus on changing laws they find unjust rather than breaking them.\"\n\nThe hall erupted in cheers, with people standing up and hugging each other. I sagged in relief, finally letting out the breath I'd been holding. Mongo was a little more excited; standing up so quickly he knocked his chair over, he yelled \"FUCK YEAH\" before grabbing Three Tequila and spinning her around. I couldn't hear the rest of the feed from Minnesota, but I could see Chase and Rori accepting the congratulations from the people around them. I realized I was crying and used the back of my hand to wipe the tears away.\n\n\"Heather?\" Three Tequila was looking down at me as I blubbered away. \"Are you all right?\"\n\n\"Yeah,\" I said. \"Hormones are all over the place, I guess.\" Now that it was over, I was finally able to eat. Everyone was in a good mood, and one of the ladies serving brought her a hot serving of pancakes and sausage. I was finally getting past the morning sickness stage of my pregnancy, and my appetite had expanded along with my belly. \"How much longer are you two staying,\" I asked my aunt and uncle.\n\n\"I don't know for sure. We need to make sure you're safe and cared for before we head back home. I think we need to talk to Carson first.\"\n\n\"He won't let anything happen to me, Mongo. He'll make sure the babies are safe.\"\n\n\"We need to keep you safe as well, Heather. There's got to be a way around this one-year thing.\" I didn't want to think about the time limit on my existence, so I went back to eating my pancakes.\n\nThe room quieted suddenly, and I looked up to see Beta Carl and his mate Angelina standing with their hands raised. \"Our Alpha has informed us that he will be arriving at approximately eight this evening. The Cascade Pack is going to welcome him back with a feast in honor of our Alpha, and our guests. Beta Madeline will organize the meal, Beta Angelina will organize the party, and I will lead the hunt. Our patrols located a herd of deer in the ravine to the west, and we will need five or more. Clean up and prepare, Cascade Pack!\"\n\nAn answering cheer of \"To HUNT!\" rang out before the group started breaking up. As the room cleared out, a man approached our table and waited until I noticed him. He was middle-aged, with silver flecks in his otherwise black hair. Like most of the people here, he was in great shape and good looking; heavily muscled, he wasn't intimidated by Mongo's size. \"Hello, Miss Rhodes. My name is Nathan Bannister, and this is my mate, Patricia.\" His mate was his match, tall and muscular. Her blonde hair and ice-blue eyes were always moving, taking in her surroundings. \"May we join you?\"\n\n\"Of course,\" I said. One of the serving ladies came by and took my plates as they sat. \"Please, call me Heather,\" I said as I leaned forward with a hand. Nathan grasped it gently, bringing it to his nose and sniffing it for a second before he passed it to Patricia, who did the same. \"Thank you.\" I introduced my aunt and uncle to them before settling back in my chair. \"Aren't you going on the hunt?\"\n\n\"That is not our job,\" Nathan replied. \"We are the Head Warriors of the Pack.\"\n\n\"You look like fighters,\" Mongo said. \"What exactly does that mean? Arrowhead doesn't have that position.\"\n\n\"I am in charge of Pack security, so it is my job to keep the borders secure and protect everyone in the Pack. Now that Heather is here, that includes her.\"\n\n\"And as the Head Warrior's mate, I am the primary bodyguard for the Luna,\" Patricia said. \"That means Heather's safety is my job. We overheard your concerns about her safety and thought it might be helpful to show you all why she will be safe at Cascade Pack.\"\n\n\"I'm not the Luna,\" I said with a wave of my hand.\n\nPatricia just smiled at that. \"Our Alpha claimed you as his mate, and with that, you became our Luna. It does not matter to our Pack or us that you are human or haven't mated with him yet. Pregnant werewolves cannot shift, so my position is common among normal Packs.\"\n\nThree Tequila got a little upset at that. \"You mean Arrowhead isn't normal?\"\n\n\"No, it's not,\" Patricia said. \"Rori is the dominant Alpha, so they do not have the typical dominant Alpha/supporting Luna dynamic of other Packs. Chase is more of a co-Alpha, and since he can't get pregnant, they don't need the Head Warrior's mate to perform those duties. Beta Vic is in charge of Pack security, making him my mate's counterpart.\"\n\n\"I understand then,\" Three Tequila said. \"Forgive us, our knowledge of the Packs is not that high. In most of our visits, Rori ordered everyone to stay human to protect the secret.\"\n\n\"Well, come on then, and we'll give you the tour. I think you'll feel better about your niece's safety when we complete the tour.\"\n\nWe all got up, and he led us out into the center section of the Pack House. \"Our Pack House is designed to prevent intruders from getting easy access, at the same time giving our people time to get to the Safe Rooms. You noticed that the entire ground floor on the outside looks like stacked river rock. That is a stone veneer over an insulated wall of fourteen inches of reinforced concrete. It will withstand small artillery fire, much less small arms. The sixteen-foot height of the wall is more than a wolf can leap in either form. The doors are laminated steel and Kevlar, covered with wooden trim.\"\n\n\"That's quite the wide set of doors you have there. Aren't you concerned someone could bust through, maybe drive a vehicle up the stairs and in?\" Mongo was testing the doors, which moved smoothly despite their weight. They were a good six inches thick, opening outwards into the covered entryway instead of inwards like a typical entry door.\n\n\"The outswing design makes it difficult to ram, and look closer at the painting above the door.\"",
        "I moved underneath it; the painting was beautiful, a pack of wolves running through the snow after a bull elk. It took a second to pick out the tracks along each side of the wall and the thickness of the painting. \"That's a plate,\" I said as I saw how the wood frame melded into steel painted to match.\n\n\"Yes. Four inches of plate steel with steel guides and explosive bolts, controlled from the security center. The door also has motorized closure and electronic deadbolts. We can seal the entry in under two seconds, and after ten, you're not getting through at all. We use the same construction on a smaller scale for the three emergency exits from the ground floor.\"\n\n\"Impressive,\" Mongo said.\n\n\"We adopted compartments like a ship in the design of the building,\" he said as we moved into a corridor. \"All controlled remotely,\" he said as we looked at the door he indicated. It looked like a pocket door. \"Stand clear while I demonstrate.\" Pressing the panic button on the wall caused a red light came on along with a warning horn. The door pushed across in the next five seconds, completely sealing the hallway from the main entryway. He reopened it after we tested it. \"The door is inset into the foundation concrete, and there are no handles or other ways to open it unless you do it from the Security Center. Once a section is isolated, we can flood it with carbon dioxide, putting out the fire or any attackers not wearing SCUBA tanks.\"\n\nI was feeling better already. Nathan continued the tour, showing us how their security system and the design made it difficult for attackers to get around. We went into the basement, where he showed us the expansive Safe Room. \"The whole building is built around this, with two feet of reinforced concrete and steel. It's insulated, fireproof, and has independent power, heating, cooling, and plumbing systems. The entire Pack could survive in here for two weeks, and it will remain habitable even if the whole House and the forest burns around us.\"\n\nI walked around, looking at the triple-high bunks along the walls and the storage. It even had a medical facility.\n\nNear the entrance on one side was the Security Center. He opened the door, and the woman at the desk waved to us. \"This is the nerve center. Pack defense is controlled from this room, along with the alarms and surveillance.\" I could see five screens showing inside and outside. \"No one gets close without us knowing about it.\"\n\n\"This place is a fortress,\" I said.\n\n\"A castle is only good if you are within its walls,\" he said. \"Come on.\" We continued to another part of the basement, where doors opened into a gym. It was big, with boxing rings, wrestling mats, weight training gear, and exercise machines. \"I saw the video of the fight at Arrowhead, and I know you have some training. If you feel up to it, I'd like to evaluate your skills.\"\n\n\"To what end?\"\n\n\"Everyone here trains to fight. I need to know what you can and can't do, so I know what training I need to give you,\" Patricia said.\n\n\"I don't have any clothes, and I have two broken ribs,\" I objected.\n\n\"This is an assessment, not a fight, and we won't be doing things at speed. As for clothing, we normally don't work out with clothes on. Werewolves don't have human hangups on nudity, and we may shift between forms.\" My eyes got wide, and I started to say something. \"But, I had some brought down for us. They are in the women's locker room.\" Letting my breath out, I followed her into the room. In addition to lockers, bathrooms, and shower, it had a sauna and a cold tub. She helped me put on my sports bra and biker shorts, then wrapped some extra padding over my injured ribs.\n\nI moved around; it wouldn't affect my movement. \"Let's go,\" I said.\n\nWhen we got out to the padded floor of the sparring area, Nathan was waiting with a video camera. \"I'm going to record the session so I can break it down later.\"\n\n\"We'll start with what you know about breaking holds and go from there, at half speed,\" Patricia said. We spent about fifteen minutes as she tested me on how to break her holds from the front side, rear, and ground. Patricia even did some with me sitting in a chair, and more going against a person with a knife or pistol. I appreciated my Krav Maga, but it didn't always work against her. When that was over, she tested me on kicks. I could use my lower body, even though punching and grappling is out of the question with my ribs.\n\nPatricia was a beast in more ways than one. Every kick or move I tried on her, she avoided or blocked, and I was getting frustrated. I overextended on a spinning kick and stumbled; she caught me before I hit the ground. She set me on my butt and stood over me. \"You did better than I expected,\" Patricia said with a smile. \"You're fast and balanced.\"\n\n\"Until this thing gets too big,\" I said as I pointed to my belly. Mongo helped me up, and I downed a water bottle as we all walked to the far side and through a door. \"What's this,\" I said as I walked into a room covered in cork, with foam torsos on stands at the far side.\n\n\"Knife range,\" Patricia said. She opened a cabinet in the back, showing me dozens and dozens of sharp weapons to choose from. Walking up, I tested the throwing knives available until I found a set that felt right. Nathan filmed as Patricia had me throw at targets at different ranges, including sitting and on the ground, against stationary and moving targets. \"You're good with these,\" she said when I finished. \"We'll get you a few sets of silver-coated blades, and some extra sheathes you can wear; I don't want you going anywhere without at least two on your body from now on.\" Opening a drawer, she picked out a calf rig with three knives and handed it to me. I put it on, withdrawing one partway; I could see it was silver. \"You'll be fine with that, but a wolf will burn if they touch it,\" she warned me.\n\n\"Knives are fun. I practiced a lot with them because I could still use them when pregnant; I wasn't allowed to shoot firearms other than pellet guns.\"\n\n\"You'll love this,\" she said as she walked me into the next room. \"Welcome to our FATS room.\"\n\nIt didn't look like much; it was about twenty feet square with floor-to-ceiling projection screens on one side. The one in the middle was flat to the wall, while the two on either side were at a forty-five-degree angle towards me. \"FATS?\"\n\n\"Firearms Training System,\" she said as she handed me a Glock.\n\nThe weight and grip felt right, but the pistol was bright blue instead of black. When I dropped the magazine to check the chamber clear, I saw it was also blue and had a CO2 cartridge inside. Looking closer, I could see the action was not a full slide; just the back could cycle. At the muzzle of the pistol, there was no barrel there, just a glass dot. \"What is this?\"\n\n\"Laser firearms trainer. The CO2 cycles the action and simulates the cycling of a pistol for the trigger mechanism. It feels and shoots just like a real pistol, without any lead or loud noises that would not be good for the baby. You can shoot thousands of rounds down here, far cheaper than we could fire a real pistol.\"\n\n\"Can I try?\"\n\n\"Of course,\" Nathan said with a smile. \"We'll see how you do with plates. Knock them over as fast as you can; scoring is for time with penalties for missed shots.\"\n\n\"Oh hell, I want to try too,\" Mongo said.\n\n\"And me,\" added Three Tequila.\n\n\"Fine, we'll all get a chance. Werewolves are very competitive,\" Patricia said. Nathan set up the computer with our names, then Patricia went first to demonstrate. The three screens lit up with an outdoor scene and a dozen plates at different distances, spaced out on the three screens that covered the room from side to side. At the end of the count, I watched as she rapid-fired twelve times, breaking each plate. Three-point-seven-eight seconds. Jesus Christ, she was a badass.\n\n\"How the hell can I compete with that,\" I said when she handed me the pistol.\n\n\"Focus on being smooth and hitting your targets, speed will come later,\" she said. \"Slow is smooth, and smooth is fast.\"\n\n\"You teach that to the SEALs?\" I moved to the center and took the spot, pistol at low ready. When it buzzed in, I went from left to right, firing and moving to the next target without waiting to see if I hit. I hit eleven of the twelve, losing a second plus penalty as I had to go back. Six-point-five-two seconds.\n\n\"Nice,\" Mongo said.\n\n\"Give it a shot, old man,\" I said as I handed it to him. He didn't shoot as fast, but he had a clean run, seven-point-zero-four.\n\n\"Ooh, I have GOT to get me one of THESE,\" he said. \"This setup would be great for the clubhouse. How much did this system cost?\"\n\n\"About a hundred grand,\" Nathan said. \"The pistol alone is five.\"\n\n\"Damn,\" he said. \"Maybe not yet.\"\n\nThree Tequila shot last and did a respectable job with two misses in eight-point-two-two seconds. Disappointed, she handed it back. \"I need to practice more,\" she said.\n\n\"Let's try some other drills,\" Nathan said. He had me try different shooting drills, testing speed, accuracy, and reaction time. I was having a blast and felt like my toys had been taken away when the system turned off, and the lights came up. \"Your skill level is adequate for self-defense, but we'll work to make it better,\" he said. \"We will provide you with a pistol with silver-core ammunition and a holster. I expect you to be armed anytime you are outside the Pack House,\" he said.\n\n\"I have to worry?\"\n\n\"I worry,\" Patricia said. \"You being armed means you have a chance to hold out until I can summon more help. As you saw at Arrowhead, a Glock evens the odds against a werewolf. If you had silver ammunition, you would have killed her.\"\n\nI shook my head. \"I was scared, but I didn't want her dead,\" I said.\n\n\"This is a different world. Yes, you have asylum, but that doesn't mean there aren't people out there who want you dead. You have a lot of natural ability and some training, and we'll work with that to make you a real force.\"\n\nMongo sat back, nodding his head. \"I feel a lot better than I did a few hours ago, Heather.\"\n\n\"I do too.\"\n\n\"You have some time to rest and clean up before the party starts,\" Nathan said. \"We'll show you the Pack lands another time.\" With that, we returned to our rooms.\n\nCarson was going to be back in a few hours, and I needed to talk to him about what he said at his trial.\n\nCh. 13\n\nChairman Coffey's POV<br >Road to Airport\n\n\"Well, that didn't go like we planned,\" Councilman Oscar Millner said as he looked out the window at the passing pine trees.\n\n\"No shit,\" Councilman Nathan Kirk said from the middle. \"That bitch is turning the Alphas against us with this Luna shit. I can't believe they are buying it.\"\n\nI just shook my head as I looked out the passenger side window of the big SUV, which was being driven by Alpha Matthew Kirk. \"The legend of Rori King grows without end,\" he said. \"The Blessed One is now credited with spurring pregnancies in other women around her? Ridiculous. It's never happened in our history, but you saw how many Alphas were pulled to her side by their woman's claws on their balls.\"\n\n\"Fucking Richard Long,\" I said. \"We hand him a Pack, and he stabs us in the back.\"\n\n\"I'm still shocked the European Alphas would fall for Rori's sob story,\" Nathan said. \"That was the genius of your plan to break the impasse in the jury. We all thought they would vote to remove her just because she's a female Alpha.\"\n\n\"It didn't quite go that way,\" I said.\n\nNathan spoke up. \"You couldn't know. The Russians were the biggest shock, with their patriarchal views and the people involved. A human shoots one of his Pack, and Alpha Ivan leads the charge to release the Alpha responsible for her being there. How could we know?\"\n\n\"We couldn't,\" I said. \"We can still get to where we need to be, but we can't get there as quickly as we thought. Carson Nygaard gets his so-called 'mate,' but that's it. A year from now, everyone will know that humans can't be mates, and only a fool would claim it.\"\n\n\"Cascade Pack still gets Heather's children,\" Nathan said.\n\nMatthew shook his head. \"That's another thing I wish the Russians hadn't caved on. What Pack would allow Carson to have them when he has no claim? Rori should have kept Heather in her cells as soon as she found out she was pregnant, and none of this mess would have happened.\"\n\n\"Or if Tatiana had finished the job,\" I said. Offspring of a werewolf male and human female were often weak, diluting the bloodline. All Rori could do is banish her from the territory, and then the Russians would not have fallen in line.\n\n\"The ruling we handed down on the asylum will work in the end. Carson is fucked,\" Oscar said. \"If he turns her over to us, it proves she was never his mate. No wolf could hand his mate like that. If she runs, he gets the death sentence for not controlling her. If he runs away with her, he gets the death sentence, as does anyone who helps him. We have some patience, and it all comes back to us.\"\n\nNathan looked up. \"We don't have to wait, and we can't wait,\" he said. \"I'm sure Sawyer and his allies are preparing amendments to our Laws to introduce at the Summer Summit. We can head that off by changing the leadership again.\"\n\n\"What do you mean?\" He was right, but how?\n\n\"We kill the human AND the weak Alpha that is protecting her,\" Nathan said.\n\n\"It would be WAR! The Nygaards and their allies would retaliate,\" Matt said.\n\n\"Not if we do it in a way that couldn't trace back to our Packs or the Council,\" Nathan replied.\n\nNo one said anything for a few minutes as we thought it through. \"I have a solution,\" Oscar Millner said. \"And it helps me with another problem.\" We all looked at him. \"Coral Nygaard killed my son and took my Pack. Right now, good wolves are in her prison while she has killed others. I will find men in her Pack that are still loyal to my bloodline and send them to Washington. They can kill Carson and his human slut. If the Pack wants revenge, they'd be taking it against his little sister.\"\n\n\"That doesn't help you get your Pack back, but it gives us a chance to put a better alpha in Donner. With Carson gone, Sawyer would have to return to his birth Pack to take over.\" Nathan said. \"I don't see how that helps you with Blue River. The low ranks in that Pack LOVE Coral, and they will never vote your youngest son into the spot. Even if he got enough votes to challenge, we both know he's not dominant enough to take her.\"\n\n\"That is my quid pro quo. I take care of Carson, and you get rid of Coral and Keith,\" Oscar said. \"With them gone, my son will be the obvious choice for the new Alpha. All we need is another one of your 'accidents' while she's flying to visit her family.\"\n\nMatthew looked back at us in the mirror. \"That wasn't cheap, but it was effective. The humans we used were professionals and did it in a way that couldn't get back to us.\"\n\n\"Get lucky again,\" I said as he turned onto Highway 61. \"If we can't flip these two packs in the next few months, they'll realize they have the votes to replace us.\"\n\nCarson Nygaard's POV<br >Arrowhead Pack Alpha's Office\n\nI joined my sister Coral and Rori's uncle Martin on the couch, as Rori sat in Chase's lap at the desk chair. Sawyer had Ashley in his lap in one chair, while Michael had Margaret in his laps with his arms around her stomach. I laughed as I looked at them, all the males touching their pregnant female's bellies the same overprotective way.\n\n\"Like you won't be touching Heather's belly like that soon,\" Chase sent to me as he caught me staring.\n\nMy wolf just curled up in the back of my mind, wanting his mate in his den.\n\n\"Chase is linking Mom in on the discussion. That car that just left was the last of the other Packs departing,\" Rori said as she called the meeting to order. \"Thank you all for your help with security and logistics. I hate having to deal with all this stuff.\"\n\n\"You're welcome,\" Michael said. \"I still can't believe they make you host as you're on trial. Hosting should be punishment enough.\"\n\n\"I'm just glad it all worked out,\" Sawyer said.\n\n\"Heather's not in the clear yet,\" I said. \"Where do we sit with the Packs?\"\n\nCoral got up and went to the dry erase board on the side, putting a scale on the top that went from \"strong opposed\" to \"strong ally,\" we started to fill things in. The six Packs represented in the room were all on the right side, as were the six Packs that strongly opposed us. \"The ones who moved to our side for the final jury vote; how reliable do you think those votes are?\"\n\n\"Beloretsk is strongly allied, Alpha Ivan and I worked that out,\" Rori said. \"I agreed not to punish Tatiana for the attack on my land. We also agreed to exchange Greg for Timur until Mykayla is of age, or rejects him. Ivan needs my support if they try Tatiana for exposing herself to a human.\"\n\n\"Do you think they will do that? I don't think it will help,\" I said.\n\n\"Who knows what the Council will do. It only takes one Pack to bring the charges, and she's guilty,\" Rori said.\n\nWe spent some time going over the board, talking about what we could do to move people to our side. \"The pregnancies were a major reason we got to two-thirds. Several of the Alphas told me that their Lunas would have their nuts if they went against you on this,\" Coral said with a smile. \"We need to push that narrative as much as we can.\"\n\n\"How,\" Sawyer asked.\n\n\"Be upfront about the pregnancies, not just the Alphas, but all of them. Send pictures of you and your Pack members with your baby bumps. Don't let a conversation go by without thanking Luna for her blessings,\" Coral continued.\n\n\"Go further, invite some of the Alphas to bring their Lunas for a visit now that the snow is melting,\" I said. \"Let them rub bellies, hang out in the pool, talk to our Pack, maybe bring some unmated along. No big gatherings, but times where you can connect with them on a one-to-one or small group basis.\"\n\n\"Maybe even a women's gathering, if their mates will allow it,\" Ashley said.\n\n\"I could take the men out on motorcycles or fishing and leave them with you,\" Chase said.\n\n\"All good ideas. The more obvious the contrast between the fertility of our Packs and the ones on the left side of the board, the better,\" Rori said. \"My real question is how safe we are now. Is anyone going to react badly to the verdicts?\"\n\nI thought about it for a while. \"We're safer than we were before today. We don't have to worry about you being removed or imprisoned, and you only have your allies left here,\" I said.\n\n\"The jury vote showed them we have full or some support from two-thirds of the Packs,\" Sawyer said. \"That should discourage them from coming after us.\"\n\n\"Mutual-defense treaties would be better,\" Michael said.\n\n\"I don't want to get pulled into Pack conflicts,\" Rori said.\n\n\"It doesn't have to go that far. Agreements to provide sanctuary, safe passage, technical assistance, training or school exchanges, and defense of Pack lands,\" Michael said. \"It would be particularly helpful with the European Packs.\"\n\n\"We will need all the votes we can get if we are to change our laws,\" Chase agreed.\n\n\"Fine. We have a resort, and we may as well use it before I get too big,\" Rori said as she moved her hand over her belly. \"Is it safe to bring the babies home?\"\n\nWe kicked that around for a while before Chase talked. \"Mom said to wait until we all get home in case anyone moves against us while we are away from our Packs. That will give you a few days to make sure it's safe here.\"\n\nI nodded. \"It's probably going to take a few days from when you tell them to return until they arrive. Heather was in Las Vegas when she ran, and it was two full days of driving for her. If they are down south and traveling with babies, figure three days.\" The others nodded, figuring the babies would be nowhere near other Packs. That meant coming from the south. \"The fewer people who know they are coming, the better.\"",
        "\"Even a couple days seems like forever, I miss them so much,\" Rori said. \"I'll make the call.\"\n\n\"And with that, Coral and I are out of here,\" I said. \"We'll pick up Mom and Frank on the way out.\" We said our goodbyes and loaded into Vic's truck. We headed out the back way, pulling into Spider Monkey's garage.\n\nThe newly mated couple came out after the garage door closed, with Spider Monkey following and wearing her jacket. \"Can I go with you, baby? I've barely seen Carson and Coral,\" his wife asked.\n\n\"Sure, if you sit in the front by me,\" Vic replied.\n\nIt was a little tight, but it wasn't a long ride. \"What are you working on now, Spider?\"\n\n\"I'm still cleaning up the mess from the Sons of Tezcatlipoca,\" she said. \"Overseas accounts, tracing money transfers and liberating what monies I can before the Feds do. It's slow but worth it. I've re-appropriated almost eight hundred thousand this year.\"\n\n\"Damn,\" I said. \"How do you get there before the Feds do?\"\n\n\"I'm better than the Feds,\" she replied with a grin. \"Hey, I have to keep busy in my retirement with Vic being so busy all the time.\"\n\n\"How's your baby doing,\" Coral asked.\n\n\"Hitting all the marks so far,\" she said. \"We're so excited; I never thought I'd have a baby at my age, and Vic's daughter old enough she has a family of her own.\" I snickered, wondering what she would think of how old her man is if she knew the truth.\n\nI liked Spider Monkey; she was a real spitfire. After her baby is born, Vic plans to tell her the truth and give her a chance to become a werewolf. Rori's pack was lucky to have her.\n\nSpider Monkey's POV\n\nI didn't let on anything I learned, but I listened with a new viewpoint on their interactions. We dropped them off at their jet, then drove up to Betty's Pies for dinner and dessert. \"Is your work slowing down now? I miss having my man around,\" I said.\n\n\"It will in a few more days,\" he said. \"I have a lot to catch up on after the conference.\"\n\n\"I'd like to go riding before I get all fat and uncomfortable,\" I said. \"Maybe we could head down south?\" The biggest thing I hated about this area was the short motorcycle season, but I'd come to love snowmobiles. The lake ice was thinning, and that season was over.\n\n\"I'm sure the chapter in Orlando or Fort Lauderdale would be happy to see you. I'll check with Rori and see if I can get some time off.\"\n\nIn the meantime, I had a lot of work to do. I'd penetrated the Council website, but it would take a while to break through the firewalls to get to the good stuff. After watching the trials, I didn't trust them as far as I could throw them. I'd find out their secrets.\n\nThen I'd protect my friends.\n\nCh. 14\n\nColletta's POV<br >Approaching Yakima Airport\n\nThe small executive jet Carson was using had eight seats, all filled up with tired werewolves. The guards were in the back, while Frank, Carson, and Coral took the larger seats surrounding a small conference table in the front. Frank poured two tumblers of Two Gingers Scotch Whiskey, which Coral and I declined in favor of rest. I slept on Franks's shoulder as soon as we reached altitude; when the Captain announced we would be landing in ten minutes, it woke us all up. It had been that kind of day.\n\nCarson looked worried. \"What's going on, baby? Worried about your reception?\"\n\nHe nodded. \"I don't know if I can handle another rejection, Mom.\"\n\nI could understand loss, and he hadn't recovered from what she did to him all those decades ago. I wished now that I had done more to break through to his true feelings. He hid his pain so well, and we had all assumed he was better. \"It won't be the same with Heather, and you know that. It can't be, she doesn't have a wolf for yours to bond with.\"\n\n\"How did you know? What made you so sure he was yours?\"\n\nThat was the real question. \"I didn't know right away. I was attracted to Frank when we first met; he was good-looking, kind, and offered me some of his Cinnabon.\" I hadn't told any of my boys the details on how we met, just that we met on the plane to Duluth. \"He looked strong and healthy, and I was sure he'd be good in the sack if I decided to get some,\" I said.\n\nI almost laughed as I saw his face, imagining me having sex with his father was bad enough. \"MOM!\"\n\n\"I'm widowed, not dead, and you have no idea what it has been like for me. Charles showed an interest, he would have been a good companion, and then he was gone. Lower ranked wolves are intimidated by my power, and my wolf wasn't interested in them as companions. I had given up my Pack, so no single Alpha or Beta rank males sought to entertain a widow at the end of her childbearing years. I figured a human would be more fun than yet another night with my Hitachi and Pornhub.\"\n\n\"OH MY LUNA MOM, JUST STOP!\" He shook his head. \"That's another image I'll never get out of my head.\"\n\n\"Don't be a baby. It's a natural thing.\" I waited until he opened his eyes again and looked out at the ground as we approached the airstrip. \"My wolf wasn't interested, but she wasn't against it either. Frank was everything I had hoped.\"\n\n\"But he was a human. When did your wolf come forward?\"\n\n\"During the attack on our home. She was forward, and she liked how strong and decisive he was. He respected us and worked with us instead of treating us like we were helpless. He was everything a male should be, just without a wolf. My wolf decided that part didn't matter, and started to bond to him as a human.\"\n\n\"Was it like your bond with Dad?\"\n\nI shook my head, no. \"It was just a tug, where that had been a shove. It wasn't until he almost died that my wolf committed to him fully. She bit him to save him, and I couldn't be happier now.\"\n\nHe sat back in the seat as we landed, the plane rapidly slowing before turning towards the hangars and the waiting SUVs from his Pack. \"Is Heather going to meet us,\" Coral asked him.\n\n\"No. We can't risk Heather leaving Pack grounds for any reason. If someone killed her in open territory, we couldn't do a thing against them,\" Carson replied.\n\nThat was one of the problems with the asylum process; it only worked on your territory. \"Heather is safe, and we have shown Mongo and Three Tequila that we will be able to keep her that way,\" Carson said. \"My Pack has decided we need to have a party, and I agree. I'm glad you all are here for it.\"\n\n\"Is Keith there yet?\" Coral was antsy, eager to see her mate and daughter again.\n\n\"Sorry, they haven't made it to Pack lands yet.\"\n\nThe plane stopped, and a few minutes later, the pilots lowered the stairs. \"Let Coral go first,\" Carson said. I stepped back, letting her go out first, and followed her with Frank behind me.\n\nCoral reached the bottom of the steps just as the doors of the second SUV opened, and a man stepped out of the back. \"KEITH,\" she squealed as she ran over and jumped into his arms. He swung her around and kissed her deeply.\n\n\"Momma!\" Her nanny came out with Hope from the other side, handing her over to her mother. We gave them a moment before joining them; I gave Keith his hug before getting a sloppy kiss from my granddaughter.\n\nOur luggage was loaded, and I pulled Carson towards the first SUV. \"Come on. You have questions, Frank and I can help. Let's sit together for the drive.\" As we made the hour-plus journey to his Pack lands, we talked about our dating and mating in detail from both perspectives. \"It is not an easy task you have ahead of you,\" I told him.\n\n\"I was interested in Colletta and single, suddenly without a job or any other distractions,\" Frank said. \"Heather has been through hell, and her ideas of love and commitment lie shattered. You have to convince her you that you love her, and that is the easy part.\"\n\n\"What is the hard part?\"\n\n\"Convincing her that her heart is safe loving you back,\" I said. We continued to talk as we drove higher into the mountains. When we crossed the Pack borders, well after dark, we could see the eyes of wolves in the trees waiting for us.\n\n\"It's good to be back here,\" I said. \"I've missed this in my travels.\"\n\n\"Who wants to take the shortcut over the ridge,\" Carson asked. \"Coral says she wants to run home with Keith; Hope is sleeping, and the nanny will take her.\"\n\n\"I could use a run,\" I said. I hadn't been in wolf form since we went to bring Heather back, and carrying someone over the mountains wasn't as much fun as running with a Pack.\n\n\"We're pulling over,\" Carson said.\n\nHe and Frank quickly stripped and tossed their clothes in, shifting into their big wolves while I took the time to fold mine and set them neatly on the seat. \"HEY,\" I yelled as a cold nose poked into my exposed sex. \"I'll be ready in a minute,\" I said as I smacked Frank across his muzzle with my sock.\n\n\"Mom?\"\n\n\"Just a minute, Coral,\" I said as I turned and jumped forward, calling my wolf to take over.\n\nShe didn't, and I ended up landing face-first in a snowbank while laughter and snorts erupted around me. \"What is wrong,\" I asked my wolf.\n\n\"Pup,\" she told me.\n\nIt couldn't be. I sat up, my hand on my stomach as a naked and crying Coral ran over. Keith was bouncing up and down, his tail rapidly wagging side to side as he tried to sniff more at her crotch. \"Mom, my wolf won't let me shift. I'm pregnant,\" she said as she fell into my arms.\n\n\"I am too,\" I said softly.\n\nWe cried happy tears as we were congratulated and licked by the wolves surrounding me. Frank let out a howl, quickly joined by the others, as we walked back to our cars to get dressed again.\n\nCarson took off with his Pack members, while Keith and Frank changed back to ride with us. I couldn't believe it, and neither could he. \"I'm going to be a father again?\"\n\n\"You are,\" I said as tears continued to flow.\n\n\"I thought you told me you couldn't get pregnant?\"\n\nOh yeah. \"At my age, I never expected to be able to. Chase and Coral were a shock.\" I could see the emotions in his face, and felt them over the link. \"You are happy?\"\n\n\"Of course I am, Colletta. I'm just in shock, wondering how it happened.\"\n\nI giggled at him. \"I'm pretty sure you were there,\" I said. \"Which time it was, we'll never know.\"\n\n\"You should let the rest of the family know,\" he told me as he handed me my phone. \"Just don't say anything about Coral, let her have her fun on her own.\" I quickly dialed Sawyer, catching him just after he got back to his office. He was shocked and happy for us, of course, and congratulated us on our blessing.\n\nChase and Rori were just as happy, but a little less shocked. \"You shouldn't be so surprised, Mom,\" Rori told me. \"Just being around me is enough to get people pregnant!\"\n\n\"Well, more than just that, but it didn't hurt.\" A thought came to me. \"You can't let people outside our Packs know about my pregnancy just yet. Frank's existence is still a secret, and I don't want people to think I got knocked up outside of the mating bond.\"\n\n\"I don't know, it might be fun starting a few rumors,\" she said. \"Everyone knows you are with Frank, and humans can get us pregnant. If we leave out the part about him becoming one of us, would it be all right to report that you're with child?\"\n\nIt would be difficult to hide my pregnancy or his presence in my life. \"You're right. I bet the Council will flip out when they hear I got pregnant by a human.\"\n\n\"Oh well. Congratulations, Mom. We're going to have quite the child-care problem soon.\"\n\n\"It's a good one to have.\" I hung up, and a few seconds later, my phone rang again. \"Hello, Sawyer,\" I said with a laugh.\n\n\"CORAL TOO?\"\n\n\"Yep. We're a fertile bunch, aren't we?\"\n\n\"Oh my Luna, what great news. Ashley and I are thrilled! I just wanted to check with you before I tell the Pack about this.\"\n\n\"Go ahead, son, they can use the good news. Nothing about Frank being one of us, though. I love you, baby.\"\n\n\"I love you too, Mom. I want a little sister, by the way.\" I didn't get a call back from Chase, mainly because Coral was talking to her twin the whole ride to the Pack House.\n\nCarson and the Pack were waiting for us as we arrived; Heather was behind him, looking nervous as we pulled in front of the Pack House. We joined him at the top of the stairs. \"Cascade Pack, the blessings of Luna are truly upon us this night,\" he said. \"Our guest Heather is safe with us, the charges against me led to nothing, and the hunt was successful.\" He asked for permission mentally, and I gave it to him along with Coral. \"As you heard at the trial, the blessings of Luna show through in the babies that she grants to us. Tonight, Luna Colletta and Alpha Coral found out they are pregnant. LET US FEAST IN THANKS TO THE GODDESS!\"\n\nThe Pack erupted in cheers and howls, and the party went well into the night.\n\nCh. 15\n\nThree Tequila's POV<br >Cascade Pack House\n\nOur alarm had come way too early for Mongo and me, but we had to get back. The party last night had been wild, rivaling any Club function I'd ever attended. I was glad Colletta warned us away from trying to outdrink werewolves, and more glad I had limited myself to one glass of champagne. My old man never found a party he didn't enjoy, though. Mongo woke up, threw up, took some painkillers, and drank three glasses of water before I even got into the bathroom.\n\nIt was just after five in the morning when we left the room, meeting Heather and Carson for early breakfast. The room was nearly empty in the early morning after the big party. \"This sucks,\" Mongo said quietly as he tried to eat some eggs.\n\n\"You needed to pace yourself better,\" Heather laughed. \"You aren't a young biker anymore.\"\n\n\"Oh, I know that. Every day I wake up and listen to my body talk back to me. Standing up sounds like I'm stepping on Rice Krispies.\" He looked at the people around him. \"I can't believe you guys live so long without breaking down.\"\n\n\"Our bodies heal and regenerate better than yours,\" Carson said. \"I was born in 1931. We age the same as humans until our wolves come forward, then from eighteen to twenty-eight, we appear to age only to twenty-one, and after that, we visibly age about two years for every decade.\"\n\n\"I thought he was about thirty when I first saw him, which made sense with Chase being twenty-five at the time,\" Heather said. \"I still can't accept that he's older than my grandfather was.\"\n\n\"It causes a lot of problems for us,\" Carson said. \"One of the reasons we don't interact much with humans is because our lack of aging would be obvious. Most Pack members don't leave Pack lands except to go directly to other Packs. It's getting harder and harder to change or update identities now.\"\n\n\"How will that work with me? I still age normally, and my babies won't?\"\n\nCarson just nodded. \"Your twins will be werewolves and will age that way. They will always look younger than you, and as you age, the visual gap will get wider. The good news is that they can live for hundreds of years. Colletta was a teenage girl when the Civil War broke out.\"\n\nIt blew my mind. I left the men at the table for seconds as I pulled Heather back up to our room to help me pack. \"How are you doing, Heather?\"\n\n\"I'm surprised I'm still standing, honestly,\" she said as she sat down at the end of our bed. \"I'm tired of being hurt, tired of hiding, tired of having everyone protect me, and tired of not having any choices.\"\n\n\"You have choices, Heather. You have money, friends; say the word, and we'll take you out of here.\" I opened my suitcase and started folding the clean clothes into it. \"You have to protect yourself.\"\n\n\"That's the problem, Tee. It's not about me. All of these people have placed their own lives on the line for me, and I can't have them harmed by me running off. I like it here, and I love the people who have welcomed me. It will be a good place for my babies to grow up after I'm gone.\"\n\nThat was the last straw. \"You will NOT give up on us,\" I told her as I grabbed her shoulders and put my face in front of hers. \"The Council gave you a year. I watched, I know what they said was going to happen. You know what I think? What Mongo thinks?\"\n\n\"No.\"\n\n\"You're a Steel Lady. We don't go down easy, and we don't accept defeat like this. FUCK the council. They aren't Club, and they aren't this Pack.\"\n\nShe shook her head. \"Carson and his family will be hurt if I don't comply.\"\n\n\"Carson and his family aren't rolling over and taking this either. You're a fool if you think this is the end,\" I told her. \"You have a year. A lot of things can happen in a year. Alphas can change. The Council can change. You CANNOT give up, and if I hear you are, I'm going to fly back here and slap you into next week.\" Tears were starting to fall down her face, and I wasn't far behind. \"I love you, and I will NOT lose you.\"\n\n\"I love you too, Aunt Lori,\" she said.\n\nI leaned down until we were touching foreheads. \"You're just trying to piss me off with that Aunt Lori shit, aren't you.\"\n\nShe started giggling. \"I don't know why you hate your name so much,\" she said. \"It's not like your name is Prudence, or Esmerelda, or something.\"\n\n\"I earned my riding name, pup,\" I teased. Getting back up, I continued packing. \"What are you going to do here?\"\n\n\"What do you mean?\"\n\n\"Well, you were going to college before all this happened, and you've been training.\"\n\nShe started helping me fold. \"Nathan and Patricia said we'd be training on hand-to-hand as long as my pregnancy allows, but we should be able to keep up firearms and knife training throughout.\"\n\n\"And what else? You can't train all the time,\" I said.\n\nShe looked at her hands. \"I don't know.\"\n\nI took the jeans from her hands. \"Don't isolate yourself here. Get to know everyone, and the best way to do that is to be with them as they work and play. Spend time with everyone, from the cleaning lady to the Alpha. It's the best way to become part of them.\"\n\n\"Except the whole turning into a furry, four-legged beast thing,\" I said.\n\n\"Pregnant females can't shift either, so no one will mind that you can't either.\" The bags packed, I helped her to her feet and gently embraced her. \"It wouldn't hurt for you to spend time getting to know Carson. He's a good man and deserves a chance.\"\n\n\"I've been single for about three days, at least from my end,\" I said. \"It hurts. I've not even had time to sort out my feelings for Greg yet.\"\n\n\"He's not coming back for you, and for that I'm glad. You deserve better than him.\"\n\n\"I do,\" she said. \"I do. Three T? Will you be here when I have my babies? I need you.\"\n\n\"Of course I will, baby. I'll be here as long as you want me to be.\" I grabbed the bag. \"Come on, we need to rescue Carson from Mongo's interrogation before we scare him off,\" I said with a grin. \"He's a little protective of his favorite niece.\"\n\n\"I'm his ONLY niece, Tee.\" She opened the door for me as we went back downstairs.\n\n\"Time to go,\" Mongo said as he came and took the bag from me. He took Heather gently into his big arms. \"You be good for him, and you know my number. Call if you need me, and the whole damn Club will be here for you.\"\n\n\"Thanks, Mongo,\" Heather said. \"I love you.\"\n\n\"I love you too, baby. It's going to be all right.\"\n\nThere were more tears as I said goodbye, and she watched from inside as Carson loaded us into one of his SUV's for the drive to the airport. When the Pack House was out of sight, I turned to Carson. \"So how the fuck are you getting her out of this mess?\"\n\n\"I don't know yet, but I'm working on it,\" I said. \"I do need your help.\"\n\n\"What is that?\"\n\n\"She needs to remain with me, no matter how bad it looks. If she takes off, I can't protect her, and the Council will go after me. Stay or go, but either way, we have to do it together.\"\n\nMongo nodded. \"We'll keep her spirits up. She knows that if she needs a lifeline, the Brotherhood will be there for her. Learn to ride, and I'll take you in too,\" he said.",
        "\"Ride what? The 1948 Harley-Davidson Panhead I learned to ride on that's in my garage?\"\n\nYou could have heard a pin drop. \"Stock?\"\n\n\"Original paint. I've had to rebuild the engine three times, but it's worth it. I take it out a couple of times a year when the weather is perfect. Compared to a modern bike, it's a rough as hell ride. I use my 2017 Indian Chieftain for almost all my riding now.\"\n\n\"The Panhead covers a lot of faults, including that,\" Mongo said. \"If you have to split, we'll get you patched in and hidden far from any of these wolves. We protect our own.\"\n\n\"I hope that will not be necessary.\" He told us of the plan he and his family had discussed before leaving Arrowhead. They were capitalizing on the pregnancies as a sign from Luna that they were right, and forming the alliances needed to turn two-thirds of the Packs against the Council's rulings. \"I would be thrilled if we can change the law criminalizing humans finding out about us in any circumstance. That may be a reach, but it would be enough if we could get Heather the same Trusted Agent status you two have. That is part of why she has to be on her best behavior. We need that to convince the Council she will keep the secret.\"\n\n\"Her children will be werewolves, that alone should be enough, just like with Possum and Roadkill,\" I said.\n\n\"And that will help. The Council is a political machine, and the people on it will do anything to maintain power. We can impeach them with a two-thirds vote of the Alphas, but this isn't common. It happened a year ago when Council members were found to have assisted in the cover-up of the Arrowhead Pack attack that orphaned Rori.\"\n\nMongo shifted next to me in the back. \"I'd like to remove that smug-ass Chairman myself,\" he said.\n\n\"I know you want to do something, but you need to trust us on this. My family and I will figure out a way to handle the Council. We need you to support Heather, so she doesn't lose hope.\"\n\n\"She was resigned to dying, but I think I broke through a little,\" I said. \"Don't let her hide in her room, or sit around doing nothing. Keep her working out, and get her involved with everything you can. I told her she should get to know people, maybe spend a day working side by side with them, so they see how things work here.\"\n\n\"That's an excellent idea,\" Carson said.\n\n\"We do it with our Prospects in the Club,\" Mongo said. \"They spend a day in every job in the Club, and shadow every Patched member for a day. It forces them to learn and get to know people.\"\n\n\"It's good training for a Luna, too, and will help with the Pack accepting her. I'll talk to my mom, see what she suggests to help her learn. I'd be thrilled if I could get her to pick up some of the Luna duties.\"\n\nI looked out at the trees going by in the dim light, wondering what this place would be like in the summer on a motorcycle. \"We want to come back and visit, and maybe bring some of her friends,\" I said. Carson started to say something, but I put my hand up. \"Other Trusted Agents, women she trusts with her life.\"\n\n\"Just let me know. I'll do whatever it takes to help Heather settle in and find happiness.\"\n\n\"I know you will,\" Mongo said. \"And if I hear different, I'll come back here and kick your ass.\" "
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "pack",
        "werewolf",
        "drama",
        "wolf pack",
        "supernatural",
        "werewolf romance",
        "romance",
        "werewolf drama",
        "supernatural romance"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/claiming-treasure-ch-11-15"
}