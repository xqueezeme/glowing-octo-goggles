{
    "title": "Safe Room Ch. 02",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 6 - Puzzle Pieces and Code Blocks\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the redheaded reporterette from in front of City Hall at 7:00am, Thursday, May 4th. Star Wars Day: May The Fourth be with you.\n\n\"As Channel Two News reported to you yesterday, Tim Burris was found dead yesterday in his home at the end of Reservoir Road.\" Bettina said. \"Police have no leads in the case, but Channel Two News has learned that Mr. Burris may have died as long as a month ago, on the night of the big power outage caused by the shutdown of the electric power substation on April 7th. Police are not commenting on the nature of Mr. Burris's passing, but sources tell Channel Two News that he died of asphyxiation while locked in an underground safe room.\"\n\nI just shook my head, wondering who the hell the leaks were. Bettina went on: \"Spokesmen Jay Swenson and Ken Eidex of the Citizens For Police Accountability group issued a statement condemning Governor Val Jared for refusing to have the SBI investigate the capture of former SBI Agent Richard Ferrell by the Town & County Police, which resulted in former Agent Ferrell being paralyzed from the waist down with a broken back. And State Senator Katherine Woodburn also condemned Governor Jared for what she believes are unlawful actions. Roll tape.\"\n\nThe tape showed Katherine Woodburn screaming at a supposed outdoor gathering of women: \"And Governor Jared is breaking the law by diverting your tax dollars to make illegal raids on undocumented workers! I demand Governor Jared resign or face impeachment for his crimes!\"\n\nBack to Bettina: \"Governor Jared issued a statement saying simply 'Illegal aliens are taking jobs away from law-abiding American Citizens, especially Black citizens. I would think Senator Woodburn would want jobs in her district to go to Black workers instead of illegal persons.' The Governor's statement caused an uproar among civil rights groups, who are fighting to be first in line to condemn the Governor for what they call 'racist' statements.\"\n\n\"And I thought it was getting bad in here.\" said Chief Moynahan as he poured himself some coffee, having snuck into the room as we were transfixed by what we were hearing on the television set. \n\n\"At least we occasionally have doughnuts in here.\" I said. \"The Press brings nothing but vinegar to our morning coffee.\"\n\n\"And if you spot Darth Vader in Town today,\" Bettina said, \"do not be alarmed. Today is Star Wars Day, and college students are properly attired for the occasion. Star Wars parties will be the theme tonight, as students get ready for the pressure cooker days of Final Exams.\"\n\n\"I wonder who the Force will be with in the Police Boxing Matches!?\" I said loudly.\n\n\"Commander,\" said Joanne Warner, using my own words from the past against me, \"you, sir, are trying to start trouble. And you are succeeding, sir.\"\n\n\"Wise Detective, you are. Soon boxing, you will be.\" I said, in a brilliant imitation of Jedi Master Yoda.\n\n\"And losing. To me.\" said Cindy, to Joanne. \"The Force is not with you, young Princess.\" That stirred up some oooo's and ahhhh's.\n\n\"Okay,\" I said, \"I need to see Detective Warner and Captain Ross in my office right away. And leave the lightsabers at home.\"\n\n* * * * * * * * * * * * * * * *\n\nOnce we were seated in my office, I said \"I brought you guys in here to tell you that I checked on Jimmy and Jennifer Amberton through my FBI resources. I got a rejection screen, meaning that it wouldn't let me access the information. Apparently something very big happened with them and BigAerospaceCorp.\"\n\n\"So I'm off the case?\" asked Joanne unhappily.\n\n\"Quite the opposite.\" I said. \"You're going to start pressing it. Get Theo up to speed, and you two work on it. I asked the Nextdoor County Police to start watching Jimmy Amberton, who works at Nextdoor County High School. Do not try to talk to him without me present. Also, his wife works in this County, as does Susan Gurley. I'm going to go talk to the FBI after we finish talking, and I may call you at any time and have you bring some people in.\"\n\n\"Can you tell me what it's about?\" asked Joanne.\n\n\"Not all of it.\" I said. \"By the way, Captain, we really need to see if we can get some clearance upgrades for our MCD Detectives.\"\n\n\"No doubt, sir.\" said Cindy. \"I was already working on that with our FBI friends. I'll try to light a fire under 'em.\"\n\n\"Basically, Joanne,\" I said, \"they got fired from BigAerospaceCorp, but got big severance packages. Their clearances were revoked, for reasons I didn't know until last night. I still really don't know the details, but do know that it's something high-up at the Government level.\"\n\n\"Like that eugenics business?\" asked Joanne.\n\n\"Smart Detective, she is.\" I said to Cindy. \"Trouble, she is going to be.\"\n\n\"Strong with the Force is this one, young Crowbarrrr...\" replied Cindy, in a brilliant imitation of 'Darth Grizz', a.k.a. Chief Griswold.\n\n\"By the way, sir.\" said Joanne. \"I need to take off early. My husband Seth has been asked to come visit a Mr. Conrad King at the Lakeside Inn & Suites this evening, and to bring me. Mr. King is in Town for a BigPharmaCorp Board meeting, and I know he is the father of Jack King of the 'Black Badge' case. Other than that, I'm not sure what his connection to Seth is, nor why he wants to see him.\"\n\nCindy and I exchanged a glance, then I looked at Joanne and said \"Would you like that answer now? Or wait until the meeting with Mr. King?\"\n\n\"Now, sir, if you know.\" Joanne replied.\n\nI sat back in my Command chair and said \"Of course you remember Karla Warner, Seth's mother, who saved your life in the Standard Tools explosion.\" (Author's note: 'Women's Work'.)\n\n\"Yes sir.\" said Joanne.\n\nI said \"Karla's maiden name... was 'King'. And the late Karla King Warner was Conrad King's daughter. And so Seth is Conrad's grandson. I will also add that Conrad King is a powerful man, and may be connected to these white supremacist groups we're getting after. So be very careful with your words, and anything you say.\"\n\nJoanne's eyes were very wide as I told her this. She processed it, then said \"Thank you for telling me, sir. I'll tell Seth, and we'll be careful.\"\n\n* * * * * * * * * * * * * * * *\n\nCindy and I went to the Federal Building on Courthouse Square. As always, I tend to scan the crowds for any signs of threat or trouble. I saw nothing averse today, nor did I see any Imperial Stormtroopers, but there was still a touch of tension in the air, it seemed. Maybe it was just me, I thought to myself. I tried to shrug it off.\n\n\"Yes, I feel it, too.\" Cindy said. \"Something's not right. There's a disturbance in the Force today.\"\n\n\"Wow, you just read my mind.\" I said. \"I must be on guard against your Jedi mind tricks.\" Cindy nodded, still introspective.\n\nGoing to the third floor, Cindy and I went into the FBI offices, and was escorted to the conference room (the one NOT in the plexiglass cube). Jack Muscone, Lindy Linares, Sandra Speer, and Martin Nash were already there... and so was my wife, Dr. Laura Fredricson.\n\n\"The Deputy Director will be here in five minutes.\" said Jack Muscone. \"Before he gets here, I need to tell you that we have developed intelligence suggesting there is an active plot to assassinate him. And Don, they'd probably love to take a shot at you, too.\"\n\n\"They tried already.\" I said. \"They failed. Stupid to fail. Unforgivable.\"\n\n\"The Morellis would agree.\" said Jack. \"But this is from a different source. Higher up. My boss must be getting too close to them.\" The Special Agents might have seen the glance Laura and I exchanged.\n\n\"Ah, full house today.\" said the DepDirector as he came in. I noted he had two bodyguards, who remained outside. \n\n\"Thanks for coming, everyone.\" he said as he sat down. \"Jack, did you tell them what was going on?\"\n\n\"Only that your life is being threatened.\" said Muscone.\n\n\"Yes.\" said the DepDirector. \"What has happened is this: Richard Ferrell's partner, Benny Brighton, gave us some information. Mostly a name. Some of Jerry Morelli's people are talking in exchange for lighter sentences. They came up with the same name. I'm not going to say the name right now to keep the security on it, but might be our big break in this case.\"\n\nI scribbled the name 'Paulsen' on a sheet of paper and handed it to the DepDirector, face down. He turned ashen as he read it, and looked up at me in total shock.\n\n\"How did you know?\" he asked. \"God damn it, how did you know?\"\n\n\"I'll explain that later.\" I said. \"But you're right, it's one lead that might break things open for us.\"\n\n\"Anyway...\" said the DepDirector, looking at me warily as if I were a cat about to attack him, \"... we think this person may be a lynchpin in this cell we're after, which we're calling the 'ultra cell' due to its power and influence in Washington. We, meaning the Attorney General, FBI Director, CIA Director, Homeland Security Director, and some Deputy Directors in these bureaucracies, think that cell has people in many departments, maybe aides to Congresspeople, judicial clerks, and the like. Then there's the outsiders, the Banksters, the Board members of several of our biggest corporations. Quite frankly, we don't know who to trust anymore.\"\n\n\"And moles inside the FBI, as well.\" I said.\n\n\"Yes, and the CIA, too.\" said the DepDirector. \"Including some persons you may know.\"\n\n\"My ex-wife.\" I said. \"Yes, I do know her. All too well.\"\n\nThe DepDirector was staring at me again. \"You think she's bad?\"\n\n\"No sir.\" I said. \"But you're right to consider her.\"\n\n\"Wow.\" said the DepDirector.\n\n\"And it all goes through this person?\" asked Muscone, meaning the name on the paper. The DepDirector handed him my piece of paper, which was subsequently passed around.\n\n\"Yes, we think so.\" said the DepDirector. \"Dr. Fredricson?\"\n\n\"My husband and I have developed leads from two different directions.\" Laura said. \"Last night he discovered that Operation BEEKEEPER is still active, and bigger than we first thought. And I have taken care of the issue of my sister. She is not disloyal, and has been taken to the sidelines.\"\n\n\"Disavowed?\" asked Sandra.\n\n\"No.\" said Laura, her eyes resting upon the lovely, pregnant redhead. \"But someone she recruited was disavowed.\"\n\n\"Wasn't BEEKEEPER that operation where Casey B. Walker was going after Don?\" asked Muscone.\n\n\"And where the Green Crowbar here kicked ass and forgot about the names, to my eternal gratitude.\" I replied. Cindy and I fist-bumped.\n\n\"That operation is not dead?\" asked Sandra.\n\n\"No.\" Laura replied. \"What we found out is that Operation BEEKEEPER was Walker's operation to find anyone who was threatening this deep cell we're finding out about now. My husband was tops on their list, but he may not be the only one they thought was their enemy. Also, I thought Walker was the lead man on BEEKEEPER, but it turns out he was just a lackey for someone else.\"\n\n\"Who?\" asked the DepDirector.\n\n\"The leader of this ultra-cell.\" I said. \"He's one of those whose name cannot be mentioned, as it's classified. But he's the spider in the center of this web. He's protecting Superior Bloodlines, as well as their front organizations.\"\n\nI did not mention that he was the man who looked down on me while I was being tortured, and he was the one I saw at the State Capitol, as well.\n\n\"Why didn't this come out when we rescued Don and exposed BEEKEEPER?\" asked Jack Muscone.\n\n\"They 'detached' it.\" said Laura. \"Let me explain: Operation BEEKEEPER is like a mass of attached building blocks, like Legos, each little block being an investigation of an individual or group. If one of those investigations, for lack of a better word, gets exposed, it's allowed to float away on its own as if it's all there is with the operation, and no one sees further or sees any other people.\"\n\n\"Why not just make them all separate, then?\" asked Cindy.\n\n\"Money.\" said Laura. \"Each separate operation would have to have its own budget, compete for the same electronic and human tools to work on it, and no coordination between them. By having it under one umbrella, the same tools are used, they can see if these individuals or groups are working together, and only need one 'black ops' budget instead of many.\"\n\n\"That's about the only time we'll ever see the Government actually working to be more efficient.\" I said. Cindy laughed and Laura looked sympathetic, but the FBI Agents were not amused.\n\n\"Sir,\" said Jack Muscone to the DepDirector, \"that must be why they're agitated, and put out the hit on you. They know that the Iron Crowbar is either working for you on this, or he'll tell you what he knows.\"\n\n\"They must not know the Iron Crowbar very well, then.\" Cindy murmured.\n\n\"Now is not the time, Crowbar 2.\" I replied quietly. Cindy straightened up in her chair, chastened.\n\n\"So we're all converging upon the same points but by various ways.\" said the DepDirector. \"But as to BEEKEEPER... I was blind not to see the full scope of that before.\"\n\nThe word 'blind' struck me. 'Blind', I thought to myself... now what does that have to do with... ohhhhhh! That's it!\n\n\"Mr. Director,\" I said, \"if there is nothing more, I'd like to speak with you alone for a minute.\" All the FBI Agents looked shocked, but everyone caught the urgency in my voice.\n\n\"Uh, nothing personal, Don,\" said Muscone, \"but with the threats against him, he can't be alone with anyone.\"\n\n\"I can stay.\" said Laura. \n\n\"It'll be okay, Jack.\" said the DepDirector. \"The Iron Crowbar is not going to try to kill me and his wife. Everyone, take five minutes.\" Everyone but me, my wife, and the Deputy Director of the FBI got up and left the room.\n\n* * * * * * * * * * * * * * * *\n\n\"We are going to win, sir.\"\n\nI said the words to the DepDirector, and continued: \"They have made a mistake, and we have got them. They made a slip, a tiny, tiny slip, but it is one they could not afford to make with me so close upon them. I am casting my nets, and we will bag them all and destroy Superior Bloodlines before you're forced to retire.\"\n\n\"That's... that's wonderful!\" said the DepDirector. \"What happened?\"\n\n\"If you listen to a Dr. P. Harvey Eckhart seminar, sir,\" I said, \"you will hear him say many times that there are no coincidences in the Universe. I happen to agree with my uncle on that. What happened here was that Detective Joanne Warner began looking into a cold case, the murder of a young man named Jason Rutledge. Two people that were persons of interest in that case, Jimmy and Jennifer Amberton, were employees of BigAerospaceCorp in Nevada.\"\n\n\"Because of this incident, the clearances of both Ambertons were revoked.\" I continued. \"As a matter of routine, and helping out my Detectives, I looked into why those clearances were revoked, and that's when the BEEKEEPER warning came up. Then Laura and I melted the wires and found out the larger scope of BEEKEEPER. We now have a large number of names of people being investigated, including this man that recently died in his underground safe room... but more importantly, we also have the names of the people that investigated them or reported them.\"\n\n\"And it was just out there for you to find?\" asked the DepDirector.\n\n\"I don't think they expected us to find it.\" I said. \"And it was their bad karma that it was me who saw that screen.\"\n\n\"So why were the Ambertons' clearances revoked?\" asked the DepDirector.\n\n\"Revenge.\" I replied. \"From what I'm finding, Jason Rutledge was a product of the eugenics project of Dr. Yarborough. Jason's father was an athletic, smart man, who was on our Town Council and opposed the merger with the County. I've been able to find out that he and his wife had a close relationship with Harold Malone and Malone's wife, and they all were close with people in the Oldeeds Organization.\"\n\n\"These people did not know if either Jimmy or Jennifer Amberton killed Jason,\" I went on, \"and it didn't matter; they just shut down both of their clearances and kicked them to the kerb from the Government project they were working on.\"\n\n\"Now I've got Tim Burris.\" I said. \"He was a prepper, does not trust the Government at all. His parents died under mysterious circumstances, and may have been moles within the Oldeeds Organization and political groups. He comes over all dead, and on the night of that power outage. And now, sir... you are coming under threat. And it's a threat you should take very, very seriously. If you want to hide some place, Laura and I can offer our house on Lake Watchacoochie.\"\n\n\"I appreciate that.\" said the DepDirector, \"but it's not the most secure place. It's downhill of some high ground, and divers could come in from the lake. All of Lake Watchacoochie is bad because of that. There's other places that will serve me better. And I might not be in touch for some extended periods, so just contact Jack if you need anything...\"\n\n* * * * * * * * * * * * * * * *\n\nAs Cindy, Laura, and I left the Federal Building, I said \"Cindy, we need to go back to the Burris house. There's something I need to look at.\" We walked Laura to her car and I kissed her goodbye, then we went to my Police SUV and began the drive to Reservoir Road.\n\n\"That was some stunning stuff in there.\" Cindy said. \"Feels like the Westboro days... just gets bigger and bigger.\"\n\n\"True.\" I said. \"But we've laid some groundwork, and hopefully this one can be resolved without destroying a church or crashing in a helicopter.\"\n\n\"You always said you were trying to keep Westboro alive in order to put him on trial.\" Cindy noted. \"Do you feel the same way about these slugs?\"\n\nI didn't answer for a minute, then I said \"No. I do not feel the same way. The Press will be too one-sided about it, and some of it goes so frickin' deep that it'll never be allowed to get to the attention of the Public... like the way Casey B. Walker was handled behind-the-scenes.\"\n\nCindy did not say anything for a minute. I said \"Everything all right?\"\n\n\"Yes.\" she replied. \"But a lot of this... is above my pay grade. I'm a Police Officer, not James Bond or Peter Gunn. You can handle the big-time, Don. I'm not sure it's for me.\"\n\nThis did not sound like the Cindy I know, I thought to myself. \"Funny, you've been handling it, and very well, for a few years now. Why the second thoughts now?\"\n\n\"I dunno.\" said Cindy. \"Maybe you getting shot, Teresa having five Purple Orders, which is way too many for anyone... and new things going on in my life...\"\n\n\"There's Chief Griswold at his mailbox.\" I said as we pulled up. \"Hey Chief!\"\n\n\"Hey, you young whippersnappers!\" growled the Chief. \"What are you up to?\"\n\n\"Up to no good as usual, Chief.\" I said. \"We're going to look at the Burris house again. Want to come along?\"\n\n\"Sure!\" said the Chief, his eyes lighting up and his mustaches twitching. He got into the backseat.\n\n* * * * * * * * * * * * * * * *\n\nI'd called Teddy Parker and Jerome Davis to meet us at the Burris residence. When we got to the house, we found Patrolmen Johnson and Barker at the scene, guarding it, and I was happy to see that they were alert. Chief Griswold greeted them warmly and shook hands with them. Parker and Davis drove up seconds later.",
        "\"Anything going on?\" I asked the Uniformed Officers as we walked to the front door. \"Anyone try to come up?\"\n\n\"No sir.\" said Johnson. \"A KXTC van came up to get some footage of the house, but they didn't cross the yellow tape. A couple of cars drove up and looked at the place, but then turned around and went back. We got the license plates, and they're in our report.\"\n\n\"Good.\" I said. \"Nobody trying to sneak through the woods in back?\"\n\n\"No sir.\" said Barker. \"The Crime Lab set up a fishing line tripwire back there. If it's broken, a loud alarm goes off.\"\n\n\"Oh, that's cool.\" I said. \"We did stuff like that when I was in the Army, but we had flares and stuff. If it'd been a real war, it would've been Claymore mines.\"\n\n\"That would sure ruin any curious tourist's day.\" Chief Griswold growled drily.\n\nWe went inside, and to the study room. Going into the safe room, I pointed out the tiles with the raised bumps. \"Notice anything peculiar about these?\"\n\n\"Kind of post-modernist.\" said Cindy. \"Some of the high-tech places have these kinds of tiles on the walls.\"\n\n\"I get the feeling the dots are in some kind of pattern, Commander.\" said Jerome Davis. \"But I'm not sure what pattern it would be. Some tiles are the same configurations.\"\n\n\"Very good, Detective Davis. Very good.\" I said. \"What would you say if I told you these dots were letters in Braille?\" I heard some gasps.\n\n\"I don't know Braille, sir.\" said Davis. \"But that would make sense.\"\n\n\"Another thing we need to get up to speed on.\" said Cindy. \"The Iron Crowbar knows Braille.\"\n\n\"While you're at it, learn Morse Code, too.\" I said. I began writing letters down in my notebook, corresponding to the tiles. \"Johnson,\" I said, \"I want you to call the Crime Lab and have them come re-videotape all of the tiles like this, with markers as to which wall is which. They'll know how to do that to make it presentable as evidence in Court.\"\n\n\"I'll do that now, sir.\" said Johnson. He stepped back into the main room.\n\nAs I took down the letters in the order they were on the walls, I was seeing blocks of five letters. And I realized... no, could that really be? I thought to myself. I finished up, then began looking around.\n\n\"Okay, guys,\" I said, \"are there more tiles down below?\"\n\n\"No sir.\" said Barker. \"It's dug out dirt, then the walls of the shelter down there; no bumps, tiles, or indentations--- er, sir?\"\n\nI was easing myself down the stairs, backwards. Once down at the bottom, I looked around. There were no tiles on the walls down here. There had been some drywall, but it had been removed to make way for the metal capsule of the shelter.\n\n\"I suspect,\" I said, \"that the room above was there in the time of Tim Burris's parents. It was likely meant to be a safe room. Someone starts trying to invade the house, and the Burris family can run in there, put metal bars on the doors to keep them from opening, and be safe for a little while.\"\n\n\"This lower section was probably a wine cellar, and also a place where emergency foodstuffs and other supplies could be stored.\" I continued, not mentioning that The Cabin had an underground 'wine cellar' that I was using for more secretive purposes. \"I think right here is the end of the house or the patio, and not underground yet. I also doubt the capsule was here at the time... too new.\"\n\n\"It could've been dug out to be a fallout shelter in case of nuclear attack.\" said Chief Griswold. \"A number of homes in the area had those back in the day, though anything in a low-lying area would get flooded.\"\n\n\"That would make some sense.\" said Cindy. \"And Tim came along and improved the shelter to modern-day prepper standards.\"\n\n\"Such as they are.\" I said. \"From what I understand of prepper shelters, this barely meets the minimum standard. But it does make sense that Tim would have the space to build his shelter without his wife knowing about it, if she indeed did not know about it. Barker, is it safe to enter the capsule?\"\n\n\"Yes sir, as long as we're here outside.\" said Barker. \"There's an alarm hooked up if the carbon dioxide or carbon monoxide levels get too high, as well.\"\n\n\"Great.\" I said. I went inside the open door of the shelter and flicked on the light switch. A fluorescent light came on, bathing the gray-white walls in bright light. Almost everything had been taken out of the shelter as evidence.\n\n\"The tanks were in this little side-space here.\" Cindy said, pointing to the left wall of the cylindrical structure. \"The filtration system was at the back end, with inlet and outlet valves to the surface.\"\n\n\"And under the floor, here,\" I said, lifting a floor panel with Parker's help, \"was more storage space, mostly for food, water, and tools. Batteries are in the right rear section, supposedly recharged by solar panels above.\"\n\n\"I didn't see any of those.\" said Parker. \"And we looked around up there pretty good. Found the inlet valve for the filtration system, but no exit tunnel that someone inside could crawl out of to safety.\"\n\n\"You know,\" Cindy said, \"I couldn't do it. I could not live down here for any length of time.\"\n\n\"Neither could I.\" I said. \"I've always thought that if an asteroid or nuclear bomb is going to come down and hit us, I'm going to get my baseball glove and personally catch that son of a bitch.\" Everyone laughed.\n\n\"I can understand a tornado shelter or something, and having to survive a few days.\" said Chief Griswold, \"but if civilization was ending and there were no more fish to catch, what's the point?\"\n\n\"I'm just not going to think about it until it happens.\" said Cindy.\n\n\"Cool beans.\" I said. \"Well, Chief, before the world ends, why don't we go have some lunch...\"\n\n* * * * * * * * * * * * * * * *\n\nAs we ate our double cheeseburgers at the Cop Bar, we filled the Chief in on the Burris case, and how it was exploding into something bigger.\n\n\"Crowbar, you never cease to amaze me.\" said the old Chief. \"Never in a million years would I have seen that those dots were Braille.\"\n\n\"It's come in handy, knowing Braille.\" I said. \"Dunno if it'll help us on this case, though.\"\n\n\"Any ideas what those letters mean?\" asked Cindy. \"They seemed to be almost random. Are they some kind of code?\"\n\n\"Yes, they may be some kind of code.\" I replied. \"We'll look at it some more in my office when we get back.\"\n\n\"Are you keeping tabs on the wife and the best friend of Mr. Burris?\" asked the Chief.\n\n\"To the extent we can, Chief.\" I said. \"But Jeffrey Burnham is anti-Police, and wary of us. Melissa is in Nextdoor County.\"\n\n\"Better bear down on them, quick.\" said the Chief. \"And this Braille stuff only adds to the urgency of it.\"\n\n\"Good point, Chief.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nBack at Headquarters, I told Cindy to come into my office. I had my anti-bugging device on. \"I didn't tell the Chief this, but the FBI is already watching both Melissa Burris and Jeffrey Burnham.\"\n\n\"Do they have a warrant?\" asked Cindy as she looked at the blocks of letters she'd copied from my notebook.\n\n\"As part of an ongoing investigation of Superior Bloodlines and the Oldeeds Organization, yes.\" I said. \"And while I have not given this to the FBI, and may not at this time, I have a further connection.\"\n\nI opened the safe in my office and took out the letter Sharples had had his lawyer deliver to me. \"Take a look at this.\" I said, handing it to Cindy.\n\n\"Wow, they're putting him to death and he still sent you this.\" Cindy said as she read it. \"Gotta admit, I didn't expect this of Sharples.\"\n\n\"I think he figured out he was being betrayed by them.\" I said. \"And it would give him some vindication and satisfaction if he knew he helped take the Oldeeds people down.\"\n\n\"This code...\" Cindy said, looking at the blocks of letters in the Sharples epistle, then on her paper. \"Don...\"\n\n\"Yes...\" I said. \"They are exactly the same letters, arranged in exactly the same way.\"\n\nPart 7 - Setting Those Brackets Up Right\n\nThursday, May 4th, 2:58pm. The doors to the Police Headquarters gymnasium were closed, and the doors stayed closed pretty much solely due to the power of the ranks on my shoulders. With Lt. Wes 'Coldiron' Masters's help, I was putting up the huge printout of the Police Boxing Matches (Freestyle Division) brackets. \n\nWith 97 Police Officers entering, it would be six full rounds and a play-in round. But by a quirk, the No. 1 seed was not waiting for a play-in, and had an opponent, to keep the tradition of the past champion being the first match of the event. Since I wasn't competing, that fell to Cindy Ross, runner-up last year and previous year's champion. The compensation was that if Cindy won, she had a bit more time for her next round.\n\nOnce the brackets were up, I closed the huge plexiglass cover over the bulletin board and locked it. \"Okay, Chief, Coldiron,\" I said, \"we'd better get well out of the way before I let them open the doors.\"\n\n\"No worries, Commander.\" said the Chief. \"Captains Croyle and Ross are pulling rank to get to the front of the line, and have already made it clear they'd better not be passed on the way.\"\n\n\"Probably the number one perk of being a Captain, eh, Wes?\" I said jovially. \"To be in front of the line for the Boxing Matches.\"\n\n\"For those two Captains, yes sir.\" said Coldiron, and more seriously than humorously.\n\nI shouted to Hicks and Morton: \"Open 'er up, and get the hell out of the way!\" They did both as a sea of humanity in Police Blue rushed through the doors and across the gym. Cindy and Teresa burst out running about halfway through.\n\nAll the rest of it was what it was. The main thing to know is that Cindy Ross was the No. 1 seed in the top left hand corner... and Teresa Croyle was the No. 2 seed in the bottom right hand corner.\n\n\"Yes!!\" Teresa hissed, fist pumping repeatedly. She came over to me and said \"Thank you sir, for setting those brackets up right!\"\n\n\"My pleasure. Good luck to you.\" I replied. I hated my name not being on the list. But it was going to be fun to watch these guys...\n\n* * * * * * * * * * * * * * * *\n\nThe pretty receptionist at Town Fitness Centers smiled as the beautiful blonde approached. \"May I help you?\" asked the receptionist.\n\n\"I have this VIP pass from the owner.\" said Callie, exhibiting the card Cindy had given her.\n\n\"Oh, just one moment.\" said the receptionist. She called Ariel, who got Wanda, and they both went to the front.\n\n\"You must be Callie.\" said Wanda. She introduced herself.\n\n\"Ah, Callie.\" said Ariel. \"I met you at that Miss Physical America convention. You tried to recruit me for your film company.\"\n\n\"And I'm sorry I didn't succeed.\" said Callie with her brilliant smile. \"But at least Cindy managed to snag you.\"\n\n\"I can see why Cindy has been so happy lately.\" said Wanda. \"So, would you like to see the facilities? Or just work out?\"\n\n\"Oh, I'll take the tour.\" said Callie. \"I love it that you have a women-only section, but the co-ed section is where one meets people.\"\n\nAs they showed Callie around, she noticed an older woman working out... in the co-ed section. \"Isn't that Don Troy's mom?\" she asked.\n\n\"Oh yes.\" said Wanda. \"She's in great shape, even though she's more than ten years older than me. When she's in the women-only area, she's working out seriously. When she's in the co-ed section... she's there to meet men.\"\n\n\"I see.\" said Callie, with a knowing grin. She did not say out loud that the Iron Crowbar had inherited his sexual prowess... and that's what the man's wife had told her...\n\n* * * * * * * * * * * * * * * *\n\n\"Mr. Burnham is at home.\" I said as Detective Parker and I pulled into the RV park west of Junction Station. I could see the backside of BOW Enterprises on the far side of the River in the distance to my northwest.\n\nWe got out and knocked on the door. \"Mr. Burnham?\" There was no answer, but I'd heard movement inside, and the slight movement of the curtain behind the small window in the door. I knocked again, hard. \"Mr. Burnham, this is the Police!\" I called out. \"Come to the door!\" Still nothing.\n\n\"Okay, Parker, come to the vehicle.\" I said. We got back in the SUV. \n\n\"Watch the doors and windows like a hawk.\" I said. \"He's in there. We're in the car because the windows are bulletproof. I'm calling for backup.\"\n\nI got on my Police cellphone and called Captain Croyle. \"Hi Captain.\" I said. \"I need a warrant to arrest Jeffrey Burnham as a material witness, and a heavily armored team to extract him from his RV if he won't cooperate...\"\n\n* * * * * * * * * * * * * * * *\n\nWith six Police vehicles, including a SWAT paddywagon, surrounding the RV, and well-armed Officers ready to invade, I knocked on the door again. No answer. I got the megaphone.\n\n\"Jeffrey Burnham,\" I said on the megaphone, \"I have a warrant for your arrest. Come out slowly with your hands up, or we will come in and take you.\"\n\nThe door opened and Burnham walked out, dressed in a t-shirt, short pants, and sandals. \"What the hell is this, Commander?\" said Burnham. \"All right, if I'm under arrest, let's go.\"\n\n\"Search his RV.\" I said. \"See if anyone else is inside.\"\n\n\"Now wait just a fucking minute---*AWK!* he gasped as he was roughly grabbed, bent over, and his hands brought behind his back to be cuffed.\n\n\"Shut the fuck up, Burnham.\" I said. \"You're close to being charged with resisting arrest.\"\n\n\"I'm not resisting anything!\" yelled Burnham. \"You have no right to search my home! No probable cause!\"\n\n\"You not coming to the door was probable cause to get a warrant.\" I said. \"And having a warrant means I'm solid gold to go through every inch of your home, property, and vehicle. Having a warrant means I own you, Burnham, I completely own you.\" I was saying this to agitate the anti-Government prepper.\n\n\"Captain Croyle,\" called out Lt. Irwin from the door. \"We need a woman in here.\" Teresa went in. A moment later, a handcuffed Melissa Burris was brought out, hands cuffed behind her, wearing a dirty white blouse, Daisy Dukes jeans, and flip-flops.\n\n\"Well, well, well.\" I said. \"Looks like we need the Crime Lab out here to strip the sheets. I'll bet we get some good evidence that sex has taken place between you two.\"\n\n\"That's not illegal, Pig!\" shouted Burnham.\n\n\"It's a possible motive for murder, Mr. Burnham.\" I said. \"And the murder of this woman's ex-husband, and you being his friend and having called us in to his home... may I suggest you exercise your considerable rights, which Lt. Irwin will read to you right now. And get it taped, Irwin.\"\n\n\"Yes sir.\" said Irwin, who moved quickly to comply with my instructions.\n\n\"Well, Captain Croyle,\" I said to Teresa, \"looks like we've set these brackets up right, also.\" Teresa smiled about as brightly as I have ever seen her smile...\n\nPart 8 - Affairs and Preparations\n\nJeffrey Burnham was taken through full booking, then taken to Interrogation-1, where he called a lawyer. Melissa Burris was not under arrest (yet), and so was taken to Interrogation-C, at the far end of the 'public' interrogation rooms. She also immediately demanded a lawyer.\n\nSomewhat to my surprise, Burnham's lawyer was Robert 'Bob' Berry of Chase, Lynch & Berry, P.C. If H.J. Lynch was bad, Bob Berry was even more hateful of Police. He was an older man who'd once been very athletic and had even played semi-pro football. Meanwhile, Melissa had called the only lawyer she knew, her divorce lawyer, Tina Felton of Dewey, Burnham & Winn (the 'Burnham' being no relation to Jeffery).\n\nI took Parker into I-1 with me, and was immediately greeted with hostility.\n\n\"What the hell is this, Troy?\" growled Berry. \"What was the frickin' probable cause to get this warrant?\"\n\n\"I knocked on the door and the man didn't answer.\" I said. \"He's a material witness in the murder of Tim Burris. He left me little choice but to procure that warrant. If he had just come to the door, we wouldn't be here now.\"\n\n\"Just more of your intimidation and brutality, Troy.\" said Berry, his voice guttural with his hatred. \"I want to talk to my client.\"\n\n\"Fine.\" I said. \"I'll be back... when I'm ready.\" Parker and I got up and went into the anteroom, where Cindy and Joanne Warner were watching.\n\n\"I know it's Parker's case,\" I said, \"but I want Warner to come with me to interview Melissa.\" We all went down the long hallways to the other end of the building, and into I-C.\n\n\"Have you talked to your client, Ms. Felton?\" I asked.\n\n\"Yes, Commander.\" said Tina. \"This is not really my fort\u00e9, but I've advised my client that she can stop answering questions at any time she's not comfortable with them.\"\n\n\"That is sort of the point.\" I said. \"Some of these questions will be uncomfortable, no matter what. Okay, Mrs. Burris... how long have you been having sexual relations with Jeffrey Burnham.\"\n\n\"Couple of years.\" said Melissa dispiritedly.\n\n\"Did your husband ever know you were having sex with his friend, Mr. Burnham?\" I asked.\n\n\"I don't know.\" said Melissa. \"He never said anything if he did. And for all I know, if he did know he might not have cared. He was always into his prepper shit.\"\n\n\"While you were married to Mr. Burris,\" I said, \"did you have any other extramarital affairs?\"\n\n\"No. Just with Jeffrey.\" said Melissa. \"He's lousy in bed, too; but at least he gave me some... attention. Tim could have cared less.\"\n\n\"Where did you and Mr. Burnham have sex?\" I asked.\n\n\"In his RV.\" said Melissa.\n\n\"Did you ever do any prepper exercises with either your husband or Mr. Burnham?\" I asked.\n\n\"No.\" said Melissa. \"I didn't care about that stuff.\"\n\n\"When did Tim do his prepper tests?\" I asked.\n\n\"I have no idea.\" said Melissa. \"Never when I was at home, for sure.\"\n\n\"Did Tim ever disappear for a day or two, and you didn't know where he was?\"\n\n\"No.\" said Melissa.\n\n\"How about Jeffrey?\"\n\n\"He traveled for his work, but never disappeared without saying something first.\" Melissa replied.\n\n\"Did either of them discuss their plans, what they'd do if the balloon went up?\" I asked.\n\n\"Tim said we'd be okay, that was all he said.\" Melissa replied. \"Jeffrey intended to take his RV on the road, keep moving, go hide in the woods.\"\n\n\"Did he ever say where?\" I asked.\n\n\"He said there were areas north of here, in the mountains, where he could hide.\" said Melissa.\n\n\"What threats did Tim and Jeff think would cause them to have to implement their prepper plans?\" I asked.\n\n\"Anything.\" said Melissa. \"War. EMP attacks. Riots, insurrections, stuff like that.\"\n\n\"Okay,\" I said, \"stay here a few more minutes. Officer Green will escort you to the restroom if you need to go.\" With that I got up, followed by Joanne.\n\n\"What did y'all think?\" I asked as I got into the hallway.\n\n\"Her husband was keeping her in the dark, but her lover was telling her his plans.\" said Joanne. \"And how could she not know her husband had that underground rabbit hole?\"\n\n\"Good point.\" I said. Just then, Lt. Irwin came up.\n\n\"Sir,\" he said, \"the Crime Lab and our Officers searched the RV thoroughly. We found $20,000 concealed in the sides of the RV, as well as silver coins. We also found a two-year supply of freeze-dried foods in a secret pull-out panel between the refrigerator and kitchen counter. I had seen that on TV before, and knew where to look.\"\n\n\"Oh, you're a prepper too?\" I asked humorously.\n\n\"No sir.\" said Irwin. \"I watched to get ideas of where perps might hide drugs.\" \n\n\"Wow, that's Iron Crowbar thinking.\" I said, handing Irwin the red crowbar.\n\n\"Thank you, sir.\" Irwin said, and continued as he examined the red crowbar: \"The water filtration system is pretty high-grade for an RV. It's not airtight, but there is a place to hook up an air filtration system, though we found none in the RV. Had more propane tanks for cooking than normal, but not excessive.\"\n\n\"Okay, thanks.\" I said. \"Keep that money under control at all points until it's in the evidence room safe. I don't want to hear of any of it being lost; the lawyer is an asshole enough as it is. And we can potentially charge him for having that much cash, too, but that's for later. Okay, Parker, let's go talk to this idiot.\" ",
        "Irwin handed me the red crowbar back, and Parker and I went back to I-1. \"Sir,\" said Patrolman Hicks as we got to the anteroom, \"the lawyer is angry and was shouting at us because you weren't right there when he was ready.\"\n\n\"Tough shit for him.\" I said. I went into I-1, with Parker behind.\n\n\"Where the hell were you?\" snarled Berry. \"You're wasting my client's time, and mine, and I don't appreciate it.\"\n\n\"And I don't give a shit.\" I said. \"Your client is under arrest. His time is now at my mercy, as is everything else about him. He eats when I tell him. He sleeps when I tell him. And you... you're making your money by the hour, so quit whining. Okay, Mr. Burnham, are you ready to answer my questions?\"\n\n\"We reserve the right to invoke at any time.\" said Berry.\n\n\"Mr. Burnham,\" I said, \"how long have you been having a sexual affair with Tim Burris's wife Melissa?\"\n\nBurnham shrugged. \"About two years, give or take?\"\n\n\"Did Tim know you were banging his wife?\" I asked.\n\n\"Watch your language, Troy.\" snarled Berry.\n\n\"It's English.\" I said. \"And you ain't my mama, so you don't tell me what to do or say. One more time, Mr. Burnham: did Tim know you were fucking his wife?\"\n\n\"He never said anything to me that he knew, or acted like he knew.\" said Burnham. \"So I don't know.\"\n\n\"You and Tim were preppers?\" I asked.\n\n\"Yes.\" said Burnham. Here we go again with the one-liners, I thought to myself.\n\n\"Did you know of his prepper facility behind his home?\" I asked.\n\n\"Yeah, I knew about his underground tube.\" said Burnham. \"He showed me around after it was completed.\"\n\n\"When was that?\" I asked.\n\n\"Year and a half ago, maybe?\" said Burnham.\n\n\"What was his prepper plan?\" I asked. \"And what would cause him to implement it?\"\n\n\"Anything big.\" said Burnham. \"War, civil unrest.\"\n\n\"Same for you?\" I asked.\n\n\"Generally.\" said Burnham. \"Except, as you've probably figured out, I was going to bug out in the RV.\"\n\n\"Where were you going to go?\"\n\n\"North, into the mountains.\" said Burnham. \"Lake Amengi-Nunagen, probably.\"\n\n\"What about Melissa?\" I asked. \"She going into the cave with Tim, or in the RV with you?\"\n\n\"Before the divorce, I figured she'd go into the shelter with Tim.\" said Burnham. \"But she was welcome to come with me if she wanted to.\"\n\n\"You and she dating?\" I asked. \"Planning to get together, or get married?\"\n\n\"No.\" said Burnham. \"She was just a piece of ass to me. And I was just a big cock to her.\"\n\n\"Why do you have $20,000 in cash hidden in your RV, Mr. Burnham?\" I asked.\n\n\"Duh.\" said Burnham. \"If the shit hits the fan, of course.\"\n\n\"What's going to happen?\" I asked.\n\n\"One day the People are going to realize you cops and the Government are keeping us suppressed.\" said Burnham. \"When that happens, it's going to get ugly. And I'm going to get out of the way while the cities and towns burn.\"\n\n\"Money won't be of any use if civilization collapses.\" I said.\n\n\"Maybe.\" said Burnham. At that point, the lawyer leaned over and whispered something to Burnham.\n\n\"I've instructed my client to speak no further on speculative matters.\" said Berry. \"Stick to facts, Troy.\"\n\n\"I always do.\" I replied. \"And the facts do not bode well for your client. He knew about hidden shelter, he's having an affair with the dead man's wife. Won't be long before we come up with some more facts. So if your client has anything he wishes to say, he'd better do so soon.\"\n\nI got up to go. The lawyer had a smug look on his face; Burnham looked indifferent, and hateful of Police in general.\n\n* * * * * * * * * * * * * * * *\n\n7:00pm, Thursday, May 4th. I was sitting in my office, poring over the uploaded photos of Tim Burris's notebooks that were found in his shelter. I heard a knock, followed by Cindy peeking her head in.\n\n\"Come on in.\" I said. She did so, and sat down in a hot chair. \"I'm just going over these logs of Tim Burris's times in his prepper shelter. I want to know the last time he gave it a full test.\"\n\n\"Because you'd know the systems weren't sabotaged then.\" said Cindy.\n\n\"That's part of it.\" I said. \"But Mrs. Burris allegedly left Mr. Burris about a year ago. The divorce was definitely finalized this past January. So I'm looking to see every date he did tests. I'm trying to find anything that will show that Mrs. Burris did know about that shelter, and that she is therefore lying to us.\"\n\n\"I came by to tell you,\" Cindy said, \"that Teddy and Jerome found time to visit the place where Tim's air tanks were allegedly filled. It's called 'State Gas And Air Supply', and they're in the Industrial District. They serve BigPharmaCorp and Crown Chemicals. They showed Parker and Davis that they use different colored gas tanks and different types of gauges for the different gases: nitrogen, oxygen, carbon dioxide, air, and flammables. They said if someone had put carbon dioxide in an air tank, the gauge would've read differently and they'd know it.\"\n\nCindy continued: \"Davis showed the people there pictures of Tim Burris, Jeffrey Burnham, and Melissa Burris. They all recognized Tim. One guy recognize Jeffrey, and said he bought a fuel tank for his RV. Melissa was not known to any of them.\"\n\n\"Okay.\" I said. \"Did Jerome have those photos on his own initiative?\"\n\n\"Yes sir.\" said Cindy. \"He's really solid on stuff like that.\"\n\n\"Yes, he is.\" I said. \"Okay, who supplies the University with their tanks of various gases?\"\n\n\"They do it themselves.\" said Cindy. \"Chemistry Department runs it.\"\n\n\"Have Teddy and Jerome go there with a couple of Campus Police Officers.\" I said. \"See if anyone recognizes those three, and all that.\"\n\n\"Wilco.\" Cindy replied. \"So, who do you think did it? Jeffrey, Melissa, both, neither?\"\n\nI sighed and sat back in my chair, such as I could with a back brace on. \"I don't know. It could've been Ferrell or people he's connected to; after all, he sabotaged the power station. But he could've done that at someone else's bidding, or for hire, and that was the extent of his involvement.\"\n\nI continued: \"Then we have an Oldeeds connection to Tim Burris's parents. And the Sharples letter and the Braille letters being the same code message. They might've come in and waxed Tim.\"\n\n\"But when it comes to Occam's Razor, the simplest solution,\" I said, \"we have the dead man's best friend and ex-wife having an affair. And while I do not yet have proof for it, I cannot shake the feeling that his wife had to know about the shelter, or at least the safe room. How could she not?\"\n\nCindy replied \"Well, she's not exactly the brightest bulb on the string. She's not put on Night Manager duty at every place she's gone because she's the best, and she's not having to switch jobs a lot because she's someone an employer wants to retain. Also, she did leave her husband months ago, long before the actual divorce, so that gave him a year doing his prepper stuff without her being in the home.\"\n\n\"Good points.\" I said. \"But another point for me is that Tim did not want the divorce, and at first contested it. I can hardly believe he would not tell his wife about the shelter, or at least the safe room. There was a lot of extra food in the kitchen pantry, so it's not like she didn't see some of what he was doing.\"\n\nCindy replied \"Maybe he left that food for her because she'd said she wanted no part of the underground shelter. Yes, that's admitting that she'd have to at least know about it, but I can understand her not wanting to be cooped up with him in that little windowless space.\"\n\n\"True.\" I said. \"All right, then, you can go home. I'm about done here. Get some rest for the Boxing Matches. You start us off Saturday morning.\" Cindy smiled, then made her goodnights and lefts.\n\nI uploaded a few extra photos to my Police iPhone. If my suspicions were right, I would be needing them.\n\nPart 9 - Shock and Awe\n\nThursday, May 4th. 8:30pm.\n\nSeth Warner was wearing the suit and tie he'd worn to work at BOW Enterprises earlier in the day. His wife Joanne was in plain clothes, a gray-blue skirt and jacket, darker gray blouse, her badge on her belt and her gun holstered under her armpit.\n\nThey were shown to the entrance of a suite at the Lakeside Inn & Suites, where four burly men in suits, obviously bodyguards, said they had to be searched for weapons.\n\n\"To hell with that.\" Joanne said. \"I'm a Police Officer, and I will not give up my weapon.\"\n\n\"You're out of jurisdiction.\" said the guard.\n\n\"I have a Statewide carry permit.\" said Joanne. \"I will not give up my weapon.\"\n\n\"I support my wife on this.\" said Seth. \"I won't be searched like some common slug, either. Let's go, honey.\" They turned to go. Just then the door to the suite opened.\n\n\"The man says to let them in.\" said the guard on the inside. \"Mr. and Mrs. Warner, my apologies for my colleague's zeal; he was doing what he was told. Please, come in.\"\n\nJoanne and Seth walked in, seeing the large living room and the far side wall of windows that gave a great view of Lake Reservoir. Then from their left side an old man in a wheelchair drove in.\n\n\"Ah, Seth and Joanne Warner.\" the old man said. \"My name is Conrad King. I apologize for the issue at the door. Do you know why I asked you to come here?\"\n\n\"I'm told that you are my mother's father.\" said Seth.\n\n\"Yes.\" said Conrad King. \"Her death was most... unfortunate... but I am glad she gave her life honorably, and saved you in the process, Ms. Joanne. I presume your boss, the Iron Crowbar, told you who I am?\"\n\n\"Yes sir.\" said Joanne. \"My condolences upon the loss of your daughter, and I'll always be grateful for her sacrifice.\"\n\n\"Yes.\" said Conrad King. \"And not much gets by the Iron Crowbar. Incredible man. I remember my first meeting with him, before my friend Henry Wargrave passed away. You are fortunate to work for him.\"\n\n\"Thank you, sir.\" said Joanne.\n\n\"And you, Seth.\" said Conrad King, peering at his grandson. \"You've done very well. I am proud of you, and your accomplishments with Todd Burke and his growing company. Come here and shake my hand. It's wonderful to meet my grandson.\"\n\nSeth came forward and shook Conrad's hand. \"It's an honor to meet you, sir.\"\n\n\"Heh.\" said Conrad. \"You can call me 'Grandpa' if you like. I called my grandfather that. And I know you are the progeny of my daughter's liaisons with the Reverend Jonas Oldeeds. Very... interesting man.\"\n\nThe old man went towards a table set for three people for supper. \"Please, come have some food with me. I want to get to know you better, both of you.\"\n\nAs they sat and ate at the well-appointed table, complete with wine glasses and candles, a butler serving the food and wine, Conrad King said \"One reason I asked you to come tonight... is that I don't know just how long I have left on this earth. I have several businesses that I intend to leave to you. I've placed them in charitable trusts, and I would like for you to manage them and keep the money going to the charities. I believe you're ready to do this, as I've been very impressed with your work with young Mr. Todd Burke.\"\n\n\"Thank you, sir,\" said Seth, \"but how would you know of that?\"\n\n\"Oh, I think you'll find that a man doesn't get to where I am today without knowing a few things.\" said Conrad. \"You're capable of reaching there, and with this lovely, brilliant wife to help you, there's no limit to what you can achieve, if you choose to. I've watched your Police career as well, Ms. Joanne, and I know the Iron Crowbar is impressed with your abilities, which he is effectively developing.\"\n\n\"Thank you, Mr. King.\" said Joanne.\n\nAfter dinner, they moved back to the living room, where Conrad King outlined some of his businesses, which were vast and varied.\n\n\"Of course, some of my business, especially the foreign ones, will not be going to you, Seth.\" said Conrad. \"They'll be going to my capable assistant. Come on out, my dear!\"\n\n\"Well!\" said Karen Warner, appearing out of the bedroom. \"If it isn't my brother and his little wife...\"\n\n\"You!\" shouted Joanne, rising and whipping her gun out and pointing it at Karen. \"You're a wanted fugitive! You're under arrest!\"\n\nJust then four of Conrad's guards appeared, their weapons drawn, laser dots appearing on various parts of Joanne's body...\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "iron crowbar"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/safe-room-ch-02"
}