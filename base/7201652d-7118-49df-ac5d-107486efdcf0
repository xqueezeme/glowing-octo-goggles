{
    "title": "The Valentine's Dance",
    "pages": [
        "Author's Note:\n\nThis is a period romance taking place during and after the Civil War in the American south. It is a work of fiction and was written for the 2020 Valentine's Day Contest. \n\nThis romantic story focuses more on the characters rather than the sex. While there is some sex later in the story, there's not a lot and it isn't all that graphic. If you're looking for long encounters described in great detail, please look elsewhere.\n\nFor those who read on, please let me know your thoughts with your votes, favorites, and comments. Thanks! \n\n_________________________________\n\nSaturday, February 13, 1892\n\nIt was a place I didn't want to go on a night I hated.\n\nIn truth, I wouldn't have been there at all if it hadn't been for my sister. Of course, most everything about my life had been, from an early age, about my sister. \n\nOr rather, sisters. All six of them.\n\n***\n\nEarly October, 1862\n\nThe men came at sundown to take my father away. They said he had to go or else. They didn't say what \"else\" was, but at just days from my 10th birthday, I felt I knew what they meant. \n\nIsaiah Daniels, son of a Methodist circuit preacher and my father, had shared with me repeatedly as we worked about his thoughts on the war. \n\n\"Better men on both sides would have found a way to settle the issues peacefully. When stubbornness, hate, and greed are allowed to come into play, Jeremiah, cooperation is the first thing to go. And when politicians are involved, too often they're more interested in personal power and swapping favors than in solving things for the people they're supposed to represent.\"\n\nDaddy didn't like slavery; we didn't have any and wouldn't have even if we could have afforded them. He didn't like the government in Washington or in Richmond telling us what to do, either. Most of all, he didn't like northern armies or southern armies roving around the countryside taking what they wanted, tearing things up, burning things down, and killing those that opposed them. \n\n\"Son, those armies aren't good for anyone except for the politicians and their friends, those selling them food, guns, and equipment,\" he'd told me. \"Those people don't care about the men doing the fighting, those dying, or those enslaved. This war is an evil thing waged by evil men who are only thinking of themselves and their bankrolls.\"\n\nThat night when the men came for Daddy, my mother, Fiona Daniels, a fiery redhead and the granddaughter of Irish immigrants from long before the famines, held little Rachel and clutched my other little sisters, out of the way of the men on horseback who might have trampled them without noticing and probably without caring. Daddy had already told Mama and the girls to stay back. \n\nHe probably meant me, too, but I was a bit bigger and wasn't having it.\n\n\"You can't take my father away,\" I declared as I marched up in front of the leader on his big horse. \"It isn't right!\"\n\n\"Right or not, kid, we can and we are. Now get out of the way or we'll run you down.\"\n\n\"Stop!\" said my father, forcefully. \"I'll go. Just leave them alone and give me a couple minutes to tell them all goodbye.\"\n\n\"One minute,\" said the leader. \"I'm counting.\"\n\nDaddy kissed each of the five girls on the head. While Deborah and Esther seemed to understand to some extent, the three younger ones didn't know what was happening. Then he kissed Mama. \n\n\"I love you, Fiona, and I'll be home soon.\" \n\nLast, he turned to me.\n\n\"Jeremiah, I'll be gone for a while, so you're going to have to be the man of the family. You have to take care of your mama, your sisters, and your new baby brother or sister that's coming soon. They're your\u2014\"\n\n\"Time's up! Let's go!\" demanded the leader.\n\nThey started dragging him off as he finished. \"\u2014responsibility now! Love them and always take care of them. Promise me!\"\n\nWith the rope on him and them pulling him along, he barely got the last words out before they disappeared in the darkness. I don't know if he heard me but I called out, \"I promise, Daddy!\"\n\nAfter they were gone, Mama calmed the girls, wiped their tears, and put them to bed. Then the two of us went outside to talk. \n\n\"Mama, why'd they take him? Daddy said he doesn't like the war.\" I was fighting off the tears in my eyes, trying to figure out how they could do such a thing to such a good man.\n\nShe shook her head. \"They need soldiers because they don't have enough, Jeremiah. The government in Richmond passed a new law a few months ago that said he and a lot of other men had to go, even if they didn't want to. They told Daddy to come, but he told them it was a terrible law and he wouldn't do it. That's why the riders came tonight, to tell him he didn't have a choice in the matter. Those men tonight were bad men; they're in charge, forcing others to go so they can stay home. They'd have killed Daddy tonight as an example to others if he hadn't gone with them. He's going to be gone for a while, so you and I are going to have to do our best to take care of the farm and your little sisters.\"\n\nI nodded, not too happy at the thought. I loved my little sisters, all five of them, but they were a pain most of the time, and we'd only recently found out that Mama was going to be having another baby soon. She would be blessed with yet another girl about four months later, in early February, 1863. I really hoped that the war would be over and Daddy would be home by then.\n\nUnfortunately, the war dragged on and my father never came home. He was wounded and then captured by Union soldiers near Tullahoma, less than 2 days ride from our home, in June, 1863. They sent him to a prison camp up north. \n\nWe got two letters from him in the months after he was captured, though the second was sent only a few weeks after the first. He said his wound wasn't healing well and that what food they had was bad. We sent letters to him and told him about how we were doing and how baby Sarah was growing, but we don't know if he ever got them. Word came about him dying in that camp before we received his second (and final) letter.\n\n***\n\n1892\n\n\"Jeremiah, thank you for taking me,\" said Sarah as I popped the reins to get us on our way. She was my youngest sister, having turned 29 years of age only a week earlier. With me being over ten years older and with her having never met our father, I'd always been something more than just a big brother to her. \n\n\"You're welcome,\" I replied, hoping it sounded as if I meant it. I looked at the road ahead of us and could easily think of any number of things I'd rather be doing. \n\nThe road was still somewhat muddy from the rains earlier in the week, so we went slowly as we made our way toward town. Both of us were wearing a winter coat as the sun sank toward the western horizon. Her hands were tucked in the furry little hand warmer, but I wore gloves against the cold and the wind. Based on past experience, I suspected that we would have a hard frost in the morning, but the good thing was that these clouds didn't carry snow. At least, not for us. \n\nI looked at the position of the sun once more. I'd have to light the carriage lamp shortly, but I wanted to wait as long as I could to preserve the fuel. We'd need it all the way home later tonight. \n\nSarah looked nervous on the seat next to me. At five-foot six with blonde hair and green eyes, she was what some would consider the prettiest of the Daniels girls, but she had also once been a little more pampered than the others. She had, after all, been the baby and our last connection to our father, but she had become a hard worker who could do her share as she grew up. She'd also experienced the greatest tragedy, the most heartache, of us all. Now, at her age, she was considered by many to be an old maid.\n\nAnd that was just another example of the trouble for the women in my family.\n\n***\n\nLate Spring, 1864\n\nMama and I had some help from a couple of older neighbors with the planting in the Spring of 1863 and we took care of the harvest that fall while Deborah, my Irish twin, and Esther, our next eldest sister, took care of the younger girls and the baby. Things got worse the next spring when planting time approached. Even most of the older men in the community had now been forced to go off to war, so Mama and I were on our own. \n\nI was eleven and a half so I was working on becoming a man but still had a long way to go. I'd done some plowing before, but only after Daddy had pushed the blade into the earth to start the row. Even then, I still had trouble controlling it, and it slipped out of the uncut earth at times, leading to terribly ragged furrows that caused my father to shake his head. \n\n\"You're still too small, Jeremiah, but give it four or five more years and your furrows'll be as straight as mine.\"\n\nUnfortunately, I'd had barely two since he gave that prophecy. As spring came and the clock for planting season starting ticking down, I had to be the man of the family and drive that plow point deep in the hard soil while controlling the ox at the same time. At the end of each row, I drove the ox to the other side of the plowed land, dragging the plow behind, before setting the implement back up and trying to get it to cut into the earth once more. I'd try to jab it in and then step on the back of the blade like I'd seen my father do so many times, but it was often too much for me alone. \n\n\"Mama, I can't get it to go in the ground deep enough. If I can't get the ground broken up enough, the seeds won't take, the crops won't grow, and we'll starve.\" I was worried sick at the thought of that and letting something happen to the girls. Almost as important, I didn't want to let my late father down.\n\n\"Don't you worry, Jeremiah,\" said my mama, giving me a hug. \n\nI could feel her bones as I hugged her back. She'd gotten awfully thin since little Sarah was born and Daddy had died, but she still had hope. \"We'll work it out together,\" she told me.\n\nTherefore, she came out to the field to help. She helped control old Max, our gray ox, and then added her weight to mine when it was time to cut the plow blade into the ground. Between the two of us, sometimes after multiple attempts, we got the plow point down into the earth to start the next furrow. I thanked her every time. When she started thanking me back in the same manner, we had a rare laugh. We became a real team and kept working together to get the job done. We talked as we worked. \n\n\"Mama, my plowing isn't nearly as good as Daddy's, and it's a lot slower, too.\"\n\n\"Not as good, Jeremiah, but if we keep working, it will be good enough. Just keep going, Son,\" she told me. \"We'll get by.\"\n\nI hoped she was right, but our amount of cultivated land was going to be much less than it had been in the past, giving us less food to eat and little if any to sell to allow us to afford necessities we couldn't grow or make for ourselves. Confederate money was starting to have less and less value with each passing month, and Union forces were beginning to control more and more of our area, at least when they stayed around.\n\nTo make matters worse, Mama and I were both almost always practically exhausted. While our father had been a big strapping man, I was still growing and Mama was a small woman to start with, even before losing weight. She was sick from time to time, too, and she never felt really good after little Sarah was born. Despite that, she told me, \"Jeremiah, you still have to study, too.\" \n\nI couldn't attend school after Daddy left, but she said schooling was important and she'd continue giving me what education she could, often teaching me as she walked along side me while I struggled to keep the plow in the ground. Sometimes she'd carry a primer or a book in the pocket of her apron. It would come out while we were cutting a furrow, go in her pocket when we got to the end of the row, and come back out after the plow was back in the ground and we were walking back the other way. \n\nThere was a written lesson and a Bible reading every night before bed, too. As my reading skills got better, Sunday afternoon became my favorite time of the week because I got to read a few pages of Sir Walter Scott, Alexander Dumas, Charles Dickens, or the like. While I was trapped in the troubles, my mind continued to expand, to want more.\n\nThere were just a few weeks left in planting season when a man showed up at suppertime one night in late May. Mama whispered that he was probably a deserter from one army or the other, but he wasn't wearing clothes that looked anything like a uniform. The way they fit, I suspected that they might not have been his own or else he'd lost a lot of weight. With the war going as it was, that could have been a possibility, though I doubted it.\n\nWhen asked what he wanted, he replied, \"Just some food, ma'am, an' a place to stay for the night. I can even do some chores in the morning if you've got somethin' I can take with me on the road.\"\n\n\"Mama, if he could help with the plowing tomorrow,\" I whispered to her, \"we might get the creek field turned so we can run the harrow and get it planted next week.\"\n\nShe nodded. Looking at the man, she said, \"Mister, if you'll put in a full day of plowing tomorrow, I'll pack you a sack with two days of food come Thursday morn. You can sleep in the barn loft, and we'll feed you until you leave.\"\n\n\"Three days food in the sack plus the other you said,\" he countered.\n\nMama agreed and he replied, \"Name's Joe, Ma'am. I appreciate it. I ain't eat in a while, so you're mighty nice to be a'helpin' me.\" He ate his share of what we were eating that night and then moved out to the barn loft for the night. The rest of us were all just a little hungrier than usual that night.\n\nWhen he was gone and all the girls but Deborah, just eleven months younger than me, were in bed, she told me, \"Jeremiah, make sure that door's locked tonight, and put a full load in your rifle.\"\n\n\"Why, Mama?\"\n\n\"I think Joe's all right, but I don't want to take any chances with him around your sisters. I've heard terrible, terrible things about some itinerants such as him. If he tries to do anything bad to any of them, you don't hesitate, Son. You aim at him just like he's a deer and you pull that trigger. You understand me?\" I'd nodded before she added, \"That is, if I don't get there and pull it first.\"\n\nShe turned to Deborah, whose eyes were wide at what she'd just heard. \"Deborah, you be on the lookout, too, and if he tries anything with you or your sisters, you scream like there's no tomorrow.\" \n\nI pulled my rifle down from over the fireplace. It was an old 30 caliber long rifle, so I usually kept a ball with a half-powder load in it for shooting squirrels rather than the full load that I'd used when I'd shot deer to supplement our meager fare. I was trying to harvest the squirrels so we could eat them, not blast them into the next county. I carefully unloaded it, added the full powder load, and then added the patch and the ball before ramming it all home, hoping the whole time that I would never have to use it like Mama had said.\n\nWhile Joe wasn't as big as Daddy had been, he could plow, and he did a good job the next day while I used the harrow with our mule to start breaking up the plowed ground. By nightfall, he'd finished the creek field and we cleaned off in the creek before making our way to the house for supper. \n\nAfter eating, Joe said, \"I'm really tired, Ma'am. I'm gonna' go on out to sleep. I'd like to leave at first light, so if you can have somethin' for breakfast and have that sack of food packed, I'd be mighty grateful.\"\n\nI was about as tired as he was so after a quick lesson and a short Bible reading, we said our evening prayers and I went to bed. Mama was pretty excited about having had a day off to catch up on the work around the house and the barn, but she said, \"I'm about tuckered out, too, so let's all get to bed.\" It was hot, so we left some windows open for the air. With the lights out just after sunset, we were all soon sound asleep.\n\nA strange sound and a bump-bump-bump noise woke me sometime later, so I lit my candle, opened the door to my little bedroom, and peeked into the main room. There, I saw Joe on the bed with Mama. The bottom of her nightgown was pushed up and Joe, with his pants down around his ankles, was kneeling between her legs. The bed rocking with his movements was making the noise. Joe was leaning over her, his right hand was holding her left arm down, and his left hand was covering her mouth. \n\nThe candlelight surprised both of them, with Joe turning toward me and saying with a low growl, \"Back to bed, boy. This ain't none 'uv your concern. Go! Now!\" He turned back toward Mama with a sneer on his face.\n\nI'd seen enough of our farm animals copulating to know what was happening and knew that married adults sometimes did it to make babies. Mama and Joe weren't married and I didn't think Mama wanted another child, but it wasn't my place to say anything if that's what she really wanted.\n\nMama's eyes told me she didn't; she was crying and looked afraid. When she saw me, she moaned and one of her fingers pointed unsteadily toward the fireplace, directing my eyes to my rifle hanging above it. \n\nI ran the few steps for it and pulled it down before Joe realized what was happening. \"Get off of her!\" I screamed as I pulled back on the hammer and set the firing cap in place. \n\n\"Give me another minute and I'll be glad to, boy. Now aim that peashooter in a different\u2014\"\n\nI'd moved where I could get a good shot at him without hitting my mother. When I was there, like she'd said, I didn't hesitate despite my fear. I fired.\n\nA wounded and tied-up Joe went to town the next morning in the back of my wagon to be turned over to the authorities. After I told them what I'd seen and gave them the letter Mama had written, they took him away and we never heard of or from him again. \n\nMama's right arm had been broken and her throat had been badly injured in the attack. While her arm healed, she never again spoke without a rasp. Between that and the word getting out about her being violated, she never drew interest in a suitor after she came out of her widow's weeds some months later, never found someone who might have loved her and helped provide for her and our family. \n\nForever sad, she died, possibly of a broken heart, six years later in 1870. \n\n*** \n\n1892\n\n\"Jeremiah! Will you listen to me? Do you think he'll be here?\"\n\nSarah had seen the new man in town at church a couple Sundays earlier. Not one to go up to him to introduce herself directly, she'd reached out to her group of female friends to learn his name, his profession, and the fact that he was, to her great relief, unmarried. They met and spoke a bit the Sunday after that, and Sarah now had hopes that the conversation would continue. \n\nMatthew Kelley was, according to my impression, a handsome gentleman from Nashville. He'd inherited a farm on the east side of town and had come out for a few weeks to put it in order so he could decide what to do with it. No one I'd spoken with knew exactly what he did in the city, but his great uncle's place had been reasonably profitable in recent years, so he was seen as having a number of options.\n\n\"He's just got to be there,\" added Sarah, as if her demand would have some kind of influence over his decision.\n\nIt was the third time that day that she'd asked me the question about his presence, so, despite the fact that I tried to make it a practice not to curse or take the Lord's name in vain in front of my sisters, it was all I could do to bite my tongue and keep from quipping, \"Good God, I hope so.\" \n\nUnfortunately, with my experience with the Valentine's dance, I wasn't expecting much.\n\n***\n\nThe Inaugural Saint Valentine's Dance,\n\nSaturday, February 11, 1871",
        "I was just days away from my 18th birthday when our mother succumbed to the chest pains that had plagued her for several months. \n\n\"Jeremiah, I don't have much time left, but remember what you promised your father? Now, you've got to promise me. You have to promise me that you'll take care of your sisters. Treat them well, and find them good husbands who'll take care of them and treat them right. Promise me, Jeremiah!\"\n\nI made that promise several times, probably at least once for each of them. A few months later, Deborah and I we went to our little town's first-ever Saint Valentine's dance. \n\nThere'd always been dances for the young people in the area, but the war had put an end to that for a long time. With things finally starting to improve after years of everyone just getting by, Mrs. Heloise Tewkesbury and some of the other ladies decided we needed a new tradition, so they invited all the eligible men and women in town to come to meet their counterparts, socialize, dance, and, in some cases, fall in love. The first was in 1871. \n\nOver the years, there were usually at least two or three marriages in town credited to the Valentine's dance, though I came to suspect that most of those newlywed couples would have been engaged soon thereafter anyway even if the dance hadn't been held. \n\nMost of the young married couples in town also showed up, supposedly to chaperone, but, I realized as the years passed that most were there to court their own spouses and dance like before they were married. Though no one would ever come right out and admit it, I also came to believe it was a busy night for such couples since in the years that followed there were often an unusually high number of births in our area in November.\n\nWith this being our first dance ever, Deborah and I were jittery with excitement. She'd met her beau some months before at a church social and they'd become a regular item. I suspected Clement would be asking me for Deborah's hand, if not that night at the dance, at least in the next few weeks. She'd whispered to me that they'd been discussing the possibility, though it wouldn't have been much of a surprise to me even if she hadn't.\n\nMy nerves were a little different in that I hoped to finally get to dance with Miss Charlotte Tewkesbury. She'd long been my best female friend other than my sisters, and had always sat next to either me or Deborah for my three years of formal schooling. We'd remained friends at church after that and she'd given me my first and as yet only kiss, a very quick peck on the lips, when we were sixteen. Unfortunately, we saw each other less often as we got older and she apparently thought less of me than I of her since she'd taken to courting William Fellowes, the son of aristocratic parents from the next town over, soon after our kiss. Her relationship with William lasted until just a few weeks before the dance. \n\nCharlotte's father owned the only real plantation in our area before the war, but he'd had lots of trouble keeping it going in the years since. The soldiers had spared Tewkesbury Hall, but had burned all their barns and torn down many of the fences. With their overseer gone and all their slaves freed, Mr. Arthur Tewkesbury was trying to work with sharecroppers to keep it running, but the home was still a great place for the dance, particularly since Mrs. Tewkesbury was in charge of it.\n\nCharlotte was a beautiful young lady, within weeks of my age, and she'd long been one of Deborah's best friends, too. After she'd dismissed William, our eyes had caught at church, with me turning a bit red and her glancing away with a partially hidden smile. \n\nWith the dance approaching, I'd sent a note to her through Deborah, telling her I hoped to see her at the event and that I would appreciate the honor of dancing with her. Her reply, also via my sister was that she, too, looked forward to seeing me at the dance, and that she would be pleased to have the opportunity to dance with me. Several more notes followed, each with increasing familiarity and affection. I planned to ask her if I could court her, with thoughts of speaking to her father immediately thereafter.\n\nOn arriving, Deborah and Clement met and quickly took to the dance floor in the Tewkesburys' main hall while I went in search of Charlotte. I finally spotted her across the dance floor wearing a beautiful blue dress; her brown hair was curled and looking perfect. My heart racing with excitement, I was making my way toward her when Clement caught my arm.\n\n\"Mr. Daniels, may I speak with you, sir?\"\n\nClement was two years older than me, but he was taking the appropriate steps since I was Deborah's guardian, so I knew it couldn't wait. I looked across at Charlotte. She was a picture of loveliness and I felt my heart still pounding in my chest. I nodded to her with a smile when our eyes met and held up five fingers, hoping she'd understand that I'd be with her soon. She nodded back, and I turned and went with Clement. \n\n\"Mr. Daniels, I request your permission, Sir, to ask Deborah for her hand in marriage.\"\n\n\"What are your plans for her?\" I asked. \n\nHe explained what he'd done so far to save for their future and how he planned to take care of her once they were married. I agreed with his request on the condition that she would have him, and we shook hands before I went out seeking Charlotte.\n\nOur discussion must have taken longer than I thought, for when I went looking for her, she was nowhere to be found. Someone suggested that she might be outside in the gardens so I went that way. \n\nI found her a little later sitting on a bench just off the path with William Fellowes down on one knee in front of her. Despite that fact that he'd been dismissed as her beau just weeks earlier, it seemed he was now trying to get back into her good graces. \n\n\"William Fellowes,\" I called with some bluster. \"Why are you bothering Charlotte?\"\n\n\"No, Jeremiah, stop,\" she said, shaking her head madly as she stood up and stepped between us. \"I'm sorry, Jeremiah, I didn't know until tonight but William has resolved the issues that kept us apart and I've agreed to begin courting him again. I hoped to tell you before you found out, particularly before you found out like this.\"\n\nWilliam had a triumphant smile on his face, but I ignored his look, took her by the elbow, and started leading her away down the path. Looking indignant, he started to follow, but Charlotte said, \"William, give us a few minutes while we talk. You remain there and we'll be right over here.\" \n\nIt was within his eyesight, but just far enough away that we could whisper without him hearing our discussion. Holding her hands between us, I looked into her bright blue eyes that matched her dress and whispered, \"Charlotte, I care a great deal about for you. I believe it's even much more than that. Please, give me a chance and I'll see to it that you never regret it.\"\n\n\"Jeremiah, I care for you, too, and I believe in my heart that we would be a very good match. I know that I would love you and that you would come to love me and love me always. But...but you have a responsibility that...well, I don't know if I could compete with it and be truly happy.\"\n\n\"Charlotte, what do you mean? You'd be the love of my life and I would do everything in my power to make you as happy as you could be.\"\n\n\"Everything, Jeremiah? What about the responsibility you have to your sisters? Deborah and I have talked about your promises to your father and your mother. Remember those?\"\n\nI nodded, silently, as I started to realize what she was saying. \n\n\"As much as I care for you, I know that you'd never break those oaths. That means I'd always be competing for your love and your care with those already of your blood. I'm sorry, but I've been worrying about that for days while thinking about you and our possibility of being together. It makes me doubt whether such a union between us would work. Now, with William coming to his senses, I've made up my mind since I never quit caring for him, even when we were apart. I'm sorry for you, Jeremiah, but I going to marry William and we're going to spend the rest of our lives together. Now, please, don't make this any harder on either of us.\" She had tears in her eyes as she added, \"Just go, Jeremiah. Please?\"\n\nI was crushed but I cared enough about her that I knew I had to do as she asked and let her go. I turned and slowly walked away, believing that I would never love another as long as I lived. She and William married three months later, though I purposely avoided Charlotte and the wedding. \n\nWith my troubles kept quiet, Deborah and Clement married a few months after Charlotte and William. Shortly thereafter, they caught a train and made their way to Texas, where they settled and eventually started a family. That left a hole in my life, since, being so close to me in age, I'd always been closest to her. However, on getting our first letter from them some months later, I realized that I'd fulfilled my promise to my mother for the first of my sisters. \n\n\"One down!\" I thought to myself.\n\nAt the time, I didn't realize how easy it had been.\n\n*** \n\n1892\n\nWe could hear the music inside Tewkesbury Hall when I drew rein on our horses in the drive outside. Charlotte's parents had passed away a few years earlier, so the old plantation was now owned by her older brother, Charles, and his wife, Claudia, who took great pride in still hosting the dance each year. \n\nSarah was searching the darkness, lit by occasional lanterns, looking quite nervous and rocking forward and back as she tried to spot Mr. Kelley.\n\nI set the brake, tied off the reins, and climbed down out of the carriage. After helping her down, I turned her toward me. \n\n\"Sarah, take a deep breath and relax. If you go in there looking this worried, Mr. Kelley may not notice you or he may notice you and your uneasiness, leading you to wish he hadn't. You're not usually like this. Be calm and smile, okay?\"\n\nIn the dim light, I thought I saw tears pooling in her eyes, but she somehow fought them off before giving me her cute, little \"determined\" grin. \"I'm sorry, Jeremiah. It's just been so long\u2014well, I don't want to blow this.\" Breathing out slowly, she added, \"Okay, I'm calm now.\"\n\nI smiled back at her. \"That's my sister,\" I said.\n\nHer smile grew and she gave me a big hug. I extended my elbow, which she took politely, and we headed up the drive toward the house. I was hopeful for Sarah, and hoping against hope that this year's Saint Valentine's dance wouldn't be as bad as some of those in the past.\n\n***\n\n1872\n\nMy sister Esther wanted to attend the annual dance but I told her she wasn't quite old enough.\n\n\"I'll be 17 in June,\" she declared indignantly as I split firewood outside a few weeks before the dance. \"That's plenty old enough.\"\n\n\"Seventeen in June means you're sixteen now. That isn't old enough.\"\n\n\"Jeremiah, you're not being fair! I hate you!\"\n\nThat outburst, to me, proved my point. While technically old enough according to the norms of the time, Esther needed a bit more seasoning before she went to the dance and started courting. She'd been talking to the young Jessup boy at church, but I hadn't allowed them to see each other socially so I knew it couldn't be serious. \n\n\"Esther, you'll be old enough later this year, but for now, you're staying home to take care of our younger sisters. I'm sorry, but that's final.\" \n\nI'd never seen her look as angry at me as she did at that moment, but in the end, she nodded, accepting her fate. Or so I thought.\n\nA few weeks later, I went to the dance wondering if I should have allowed Esther to attend after all. I was nineteen and as inexperienced as could be, so I really wasn't sure if I'd forbidden her to be there for her own good or because she'd tried to defy me.\n\nI danced with three young women that evening, but I didn't pay them proper attention since I was concentrating on Charlotte, standing on the upper balcony overlooking the dance floor. William wasn't in sight, so I made my way upstairs. When she saw me, she stepped out in the hall to speak with me. For some reason, she looked different to me.\n\n\"Good evening, Jeremiah. It's wonderful to see you. How are things with your family and you?\" \n\n\"Good evening, Charlotte. We're doing well, thank you. And you? Are you okay?\"\n\nShe sighed, letting down the facade she'd been forcing. \"Jeremiah, I'm quite tired, actually, which is why I didn't try to venture downstairs.\"\n\n\"Long day getting ready for this?\" I asked as I helped her to a bench to sit down.\n\n\"Oh, no,\" she laughed. \"I gave birth to a little girl just three weeks ago and I feel practically exhausted all the time. This is my first outing since her birth; Mother is in the wing taking care of her.\"\n\n\"Well, other than your fatigue, marriage appears to be treating you kindly,\" I said. \"You're as lovely as ever and appear as happy as I've ever seen you.\"\n\nShe nodded. \"Thank you, Jeremiah. William is a wonderful man. I know you hate him, but he is very good to me and for me. We really do love each other.\"\n\n\"Charlotte, I don't hate him, as much as I want to,\" I replied, almost sad to be telling her the truth. I came so close to telling her that I still cared for her, but I held my tongue and only told her the last part of the statement. \"If he truly loves you and you truly love him, I'm happy for both of you and wish you only the best.\"\n\n\"Thank you, Jeremiah. You don't know how much that means to me coming from you. I will always be your friend.\"\n\nSeeing William approach with a scowl on his face, I gave him the warmest smile I could force and said, \"Good evening, William. Charlotte was just telling me about your little girl. I'm very happy for you both. Now, I better be going to leave you to in peace.\" \n\nHe looked surprised by my statement and even more surprised when I shook his hand. Turning to Charlotte, I bent down and kissed her hand lightly\u2014all the while wishing I was kissing her lips as I had that one time years before\u2014bowed, said goodnight, and headed for home early. The thought of more dancing after speaking with Charlotte left a hollow feeling in my stomach.\n\nDespite the pointed reminder about losing Charlotte, I was actually surprised at how well the evening had gone otherwise. I was smiling when I opened the door at the house but my smile disappeared when I saw thirteen year old Leah embracing our younger sisters. All four of them were crying.\n\n\"What's going on?\" I asked, quite surprised that they would still be up. \"And where's Esther?\"\n\n\"Jeremiah, she left this letter,\" said Leah, handing me a paper that had been wet by several tears. \n\nI read the note and felt my knees go weak. Our second sister Esther was eloping with Fredrick Jessup, the young man from church that I didn't even really know. \n\n\"When did they leave?\" I demanded.\n\n\"Less than an hour ago,\" replied Leah. \"Save her, Jeremiah. Go.\"\n\nI grabbed my rifle, powder, and shot pouch, and went as fast as my horse would take me, heading toward his parents' house since I didn't know where else they might have gone. Fortunately, my choice was correct, allowing me to catch up to them just as they got there. If they'd gone anywhere else, I'd have never found them.\n\n\"Esther, you're coming home with me,\" I told her with the rifle resting across the saddle's pommel. \n\n\"No, Jeremiah! I love him and we're getting married,\" she cried.\n\n\"In the middle of the fucking night?\" I tried to never curse in front of my sisters, but I was so angry it slipped out, and I wasn't done yet. \"Where the hell do you think you can get married tonight? And if you spend the night together, it will ruin both of your reputations whether anything happens or not. Now, get out of that blasted wagon and onto this horse.\"\n\nThe young man's parents must have heard my outburst because they came walking out to the road.\n\n\"What's going on?\" asked old man Jessup, who was at least twenty years my senior.\n\n\"Mr. Jessup, your son is making a pitifully poor attempt at eloping with my silly sister.\"\n\n\"Fredrick! Is that true?\"\n\n\"Yeah, Pa.\"\n\n\"In the middle of the bloody night?\" exclaimed Mr. Jessup, almost making me laugh. \n\n\"That was the idea, Pa. We were gonna' get married in the morning.\"\n\nMrs. Jessup looked aghast and Mr. Jessup was shaking his head. \"This generation,\" he griped. \"Stupid, disrespectful kids, not even knowing how to elope properly.\"\n\nSomehow, Mr. Jessup's reaction had helped calm me a bit, so I stowed the rifle in its sheath and looked at the two of them, still cowering together in the wagon.\n\n\"Esther, get out of there and get over here,\" I told her. \"You're going home for the night. Now, if you two want to get married\u2014someday\u2014you'll do it right. Young man, you'll bring her things back to the house tomorrow and give a proper introduction of yourself. Assuming you don't do it as half-assed as this attempted elopement, we'll see about starting a proper courtship, with supervision, of course.\"\n\nEsther was sniffling as I helped her up on the horse behind me. \n\n\"Mr. and Mrs. Jessup, I apologize for disturbing your evening and good night to you. Young man, I'd better see you at church tomorrow and later tomorrow afternoon after church for our talk.\"\n\nWe rode home almost in silence, with only her sniffles joining those of the sounds of our riding. When we arrived, I helped her down and then held her when she started to try to run into the house.\n\n\"I'm very disappointed that you'd leave your sisters alone when you were in charge,\" I told her.\n\nShe looked at me, fear in her eyes. \"I'm sorry, Jeremiah. We just really wanted to go to the dance.\"\n\n\"You'll get your dance, Sis, when you're a little older and, hopefully, a little wiser. You may even marry that Jessup kid someday, but not tonight, so go inside, apologize to our sisters, tell them you love them, and get to bed.\"\n\nFredrick Augustus Jessup was at church the next morning and showed up at our house the next afternoon. He made a reasonably proper introduction, and started his courtship with Esther. Young Jessup, I realized, was as immature as she was, so with a bit of help from his parents, we made sure they took it slow. They became engaged at the Valentine's dance in 1873 and married that summer, living with his parents for a while before buying a small place about fifteen miles away. \n\nI know my poor parents looking down from heaven must have been as worried as I was through that whole ordeal, but in the end, Esther was married and that was two.\n\n***\n\n1892\n\nOn entering the entry foyer, Sarah and I were greeted by Charles and Claudia as someone took our coats. \n\n\"Good evening, Jeremiah, Sarah. So glad you could both make it to the dance,\" said Charles. \n\nClaudia and Sarah did a polite little hug while Charles and I shook hands. We'd been friends for years, and had shared ideas that we'd both used to make our farms more productive and profitable. \n\n\"Mr. Kelley is here, if you're interested,\" he whispered to me. With a grin, he added, \"Or, maybe I should say, if Sarah is interested.\"\n\n\"Thanks,\" I replied, not completely sure if that was really such a good thing. While I wanted Sarah to be happy, another unhappy outcome might be too much for her. I took her by the elbow and gently pulled her away from Claudia. We started to walk toward the main hall where the actual dance was held, but Charles called out after me.\n\n\"Jeremiah, I forgot to mention. William and Charlotte are in attendance this year. They would love to see you, I'm sure.\"\n\nI nodded, forcing a smile. It had been fifteen years since I'd seen Charlotte, fifteen years during which I'd done everything I could to forget her. Now she was back.\n\n***\n\n1874\n\nAfter years of effort, our farm finally produced a nice surplus that fall. Unfortunately, the prices offered in town weren't very good since most area farmers were similarly blessed, so I decided that I'd load the wagon and make the trip to Nashville. ",
        "Leah, who'd turned sixteen that April, listened closely as I went over my plan and made sure she understood what needed to be done with the farm and our younger sisters while I was gone. Unlike Esther, Leah was always quite dependable and had a good head on her shoulders.\n\n\"I've got it, Jeremiah. And you've got it all written down in case I miss anything. Now go, and have a nice time in the city. You never know, big brother, you just might meet a young city lady who's always wanted to be a country girl.\"\n\nShe gave me a smile, knowing that I'd been quite lonely since Deborah's departure and Charlotte's decision. Fortunately, Leah was more interested in helping raise her younger sisters than in prettying herself and courting, so we'd grown closer since Esther's attempted elopement over three years before.\n\nThe journey to Nashville in the heavily loaded wagon took two days, and I spent part of the third day selling my surplus produce for less than I expected. The smoked hams, sausages, and bacon, on the other hand, brought a bit more than I'd been led to believe.\n\n\"Mr. Daniels, this is quality meat. If all that you raise is like this, I'll take as much as you can bring me at a fair price.\" \n\n\"That sounds good, Mr. Andrews. I plan to be back at least twice a year and will bring you all I can.\"\n\nWe shook hands on it, and as I was driving away, I decided to increase our hog production, using some of the surplus produce as feed.\n\nIn the afternoon, I purchased supplies for the farm, some new clothes for my four sisters from the list Leah had given me, plus matching necklace and earring sets for Leah and Mary, and a doll apiece for Rachel and Sarah. The gifts, I decided, would be held until Christmas. I made arrangements to pick everything up early the following morning before I headed for home. \n\nNashville was a fabulous place, a real city, unlike anything I'd ever seen. I walked around looking at the sights, trying to keep from looking like the country bumpkin that I was. That evening, I decided to treat myself to something I'd never done before: eat dinner at a real restaurant. I was staying at a small boarding house some distance away, but after a bath, I put on the suit I'd brought with me and made my way over to Fourth and Church to the dining room in the Maxwell House Hotel for dinner. \n\nAfter a delicious meal, I walked the streets for a while longer, seeing sights under a full moon and the rare streetlight. I was almost back to the boarding house when a woman approached me on the street. \n\n\"Hello, mister. You look like as fine a young man as I've ever seen! Would you like someone to...to talk to...for the evening?\"\n\n\"Ma'am, you're awfully pretty,\" I said, \"but are you sure you're not confusing me with someone else?\"\n\nShe smiled. \"I don't see anyone else around, so if you'd like some company for the evening, I'd love to spend it with you and get to know you better.\"\n\nBeing relatively young, quite naive, and completely inexperienced, I fell for her story and her charms, inviting her up to my room.\n\nOnce in the room, we talked for a few minutes and I was quite excited that such a fine lady as her would give the time of day and actually pay attention to what I was saying. \n\n\"Jerry, I'm so sorry. I didn't mean to impose on you.\"\n\n\"What do you mean?\"\n\n\"Look, you're still wearing your coat and tie. Here, sit on the bed and let me help you with that.\"\n\nShe helped me out of my coat and I started to take off my tie. \n\n\"Now hold on,\" she said. \"I told you I'd help.\" \n\nShe stood in front of me as she undid my tie, but I was staring at her cleavage, just inches from my face. I was surprised that the dresses city women wore were so much more revealing than those worn out in the country.\n\nWhen the tie was off, her hands were in my hair behind my head and she pulled me forward, burying my face between her breasts.\n\n\"Oh, Jerry! You're so good! Kiss me there!\"\n\nIf I'd been thinking straight, I would have realized that I'd done nothing at all except allowed myself to be pulled off balance and in between her breasts, but caught up in the moment and her cleavage, I accepted the praise with gladness and started kissing her smooth, soft curves. She moved my hands up under her dress as I kissed, and I found myself holding the bottom of her naked buttocks. Massaging her roundness, she spread her legs and one of my roaming fingers accidentally touched the warm, damp softness of her sex. Surprised and embarrassed, I drew my hands back in surprise, only to see her smile at me as she pushed me backward on the bed. \n\nIt continued from there. We kissed and caressed, but it wasn't long, while she was removing my shirt, before she again saw my uncertainty. Being several years my senior, she asked, \"Jerry, have you ever done this before?\"\n\nEven more embarrassed than before, I replied, \"No, ma'am.\" \n\nShe chortled and kissed by neck as I tried to finish my thought. \"Uh, I've got six sisters so I've seen girls naked before, but I wasn't trying to.\"\n\nThis time, she drew back and laughed. \"First, you don't ever, under any circumstance, call your lover 'ma'am. Second, you don't ever mention you sisters, naked or otherwise, when you're doing this.\"\n\n\"Yes\u2014\" \n\nHer finger on my lips silenced me before I could repeat the error. \n\nQuietly and with a certainty coming from long experience in such matters, she continued removing my clothing. \n\n\"Since this is your first time, we're going to make it special. Just watch and listen to what I do and it'll serve you well in the future.\"\n\nBy that point, she could have done anything she wanted to me. Gentle hands first bathed my erect cock and my balls. It was quite embarrassing at first, but considering how good it felt and how stiff it was making me, I didn't tell her or about my having bathed just hours earlier. \n\n\"Few things show a woman you care for her more than being clean and smelling fresh,\" she told me. \"Men who come to be with a woman without removing the smell of their labors rob both of them of much of the pleasure that can be had.\" \n\nWhen we moved to the bed, she showed me what to do, what steps to please her as well as myself in preparation for the copulation. When I asked her about that, she laughed once more. \"New rule! Never, ever call it copulation! That's what animals do on the farm. People love each other, make love, sleep together\u2014a boring term I don't recommend\u2014have sex, have intercourse\u2014a high falutin' word for it\u2014or just plain fuck.\" \n\n\"I'll do whichever you think best,\" I said, leading to more gentle laughter. \n\n\"We'll make love the first time, and, assuming you're as young and virile as you look, we'll fuck later.\"\n\nShe had me on the bed on my back and she was sitting atop me, leaning forward so her breast swung gently against my tongue. \"No reaching,\" she warned as I tried to suck her nipple into my mouth. She was rubbing her mound against my penis, but again, wouldn't let me drive it home into her wet slit.\n\n\"One last thing before you make love, Jerry. You need to protect yourself and your lover. This is a lambskin condom, made from a sheep's intestine. You put it on to keep the woman from getting pregnant.\"\n\nShe rolled off of me and told me to put it on, but I wasn't sure what to do. She smiled again at my inexperience and then explained how to do it. I was able to roll it on my erect member, but I wasn't sure how to properly secure it. She did it for me as my whole body felt a-tingle, but she surprised me by removing it and making me start all over again.\n\n\"Jerry, I probably won't be there next time so it's important for you to do it right, both for you and for your lover. Unless you actually want a baby, of course.\"\n\nI was worried that our break in the action would ruin things, but we picked up afterward, with me as hard as before, and she gently lowered herself down on me, a little at a time, drawing back up and then coming down a bit more. It was a wonderful feeling as she slowly engulfed me in her warmth and softness and then seemed to clamp down more firmly on me each time as she pulled away. She smiled as I started to move with her, though whether it was at my getting into the act or at the huge smile on my face, I didn't know. \n\nIt wasn't long before my blood was racing and pressure was building up in my balls. She sensed my ragged breathing and the flush that came over me as she moved faster and faster over my member and I moved with her. I felt myself explode into her, over and over, before she slipped off and placed a towel around me, removing the lambskin.\n\n\"That was...incredible,\" I said afterward, as I kissed her body and breasts. I looked into her dark brown eyes, but then noticed she was shaking her head.\n\n\"No, Jerry, incredible comes later,\" she whispered. \"That was just first.\" \n\nThe next morning, after two more sessions a few hours apart in the night, the woman who'd refused to give her name was gone, as was the rest of the money I'd had in my wallet. Fortunately, having heard of the pickpockets that frequented the downtown area, I'd hidden most of my money away, though in this case, she'd truly earned every cent she took. \n\nSadly, her departure left a hollow feeling in my heart, both for what we'd experienced together and what I now realized I was missing with Charlotte. After collecting my purchases, I had plenty of time to think on the long ride home. I now considered myself somewhat less experienced, a bit wiser, and desirous of far more.\n\nMy sisters surprised me when I got back home. I was barely out of the wagon when they all came running up to give me a big hug. Each in her own way said, \"Jeremiah, I love you big brother, and I appreciate all you do for me.\"\n\nThey say men should never cry\u2014and I didn't\u2014but I felt the tears in my eyes as I told each of my remaining little sisters them that I loved them, too.\n\n***\n\n1892\n\nAs we walked into the main hall where the dance was held each year, I couldn't get Charles' remark out of my mind. Charlotte was here. For fifteen years, I had tried to avoid thinking of her and what we might have had, and, to some degree, I'd succeeded. Now it was all back as if it had never left. \n\nI started to look around, but Sarah, with her arm hooked in mine, steered me in an unexpected direction. Unexpected, that is, until I saw Matthew Kelley. \n\nHis eyes were focused on her and his smile said he was happy to see her. While we'd met briefly at church, Sarah made proper introductions followed by small talk while I tried, without success, to keep a lookout for Charlotte. \n\n\"Sarah says you supply pork products to sellers in Nashville. That's a good hike.\"\n\n\"Ah, yeah, it is, but, ah, the prices there are much better than around here.\"\n\n\"So do you raise a lot of hogs and cattle?\"\n\nMr. Kelley did a remarkable job of seeming interested as I gave him a few numbers and explained how I sold my cattle on the hoof, slaughtered my hogs and cured my own pork, and sustained my herds. Even Sarah was starting to look worried that I was boring him to death, when I was able to redirect the discussion to his business and the farm he'd inherited. It was all I could do to keep from laughing when I saw her look of relief.\n\nWith his decision pending on what to do with his inherited farm, he had a number of questions about the local area, so Sarah and I took turns answering and filling in blanks for him. I think it could have gone on for a lot longer but I finally said, \"Sarah, Mr. Kelley, I see someone I need to speak with. Please excuse me and I'll speak with you again later.\"\n\nThey were both probably relieved at my departure, for they moved closer to each other and the next time I glanced their way, I saw them holding hands between them as they talked.\n\nI spoke with several friends as I circled the hall in search of Charlotte, but saw no sign of her. She wasn't on the overlook balcony on the second floor, so I started to wonder if she was out in the gardens with William or if they'd decided to leave without telling Charles. \n\nThen, from across the dance floor, I saw Charlotte looking directly at me from behind a party mask that covered the top half of her face. She was smiling.\n\n***\n\nValentine's Dance, \n\nSaturday, February 10, 1877\n\nFor the first time, I took two of my sisters, Leah, almost 19, and Mary, who was just days away from her 17th birthday, to the dance. It was their first dance for both.\n\nI was a little worried about them since neither had any real prospects, though that was what the event claimed to be, a way to meet new people who were eligible. On the other hand, I was excited. \n\nI'd met Miss Laura Weatherby in the neighboring town a few months earlier while there on business, so I'd been to see her a few times and even invited her to attend the dance. Her older brother, also an eligible bachelor, brought her and was soon seen meeting every eligible young lady in attendance that he could. \n\nLaura had my complete attention. We danced a few times before I asked if she'd like to go for a walk with me in the gardens. It was cloudy and quite cool but warmer than normal for a winter evening, so we wandered for a while until we found a dark spot where we could be alone and avoid interruptions. \n\n\"Laura, I've to come to care a great deal about you since we met last fall,\" I told her. It was true, and though I didn't realize it at the time, she had displaced thoughts of Charlotte, who'd recently moved away, from my mind while we'd been together.\n\n\"Jeremiah,\" she whispered, \"there's a time for talk, but this isn't it. Kiss me.\"\n\nGladly did I pull her into my arms and hold her tight against me as our lips met. Immediately, I felt my cock react, growing hard, and she felt it, too, based on her little moan and the way her hand moved down to my ass where she tried hard to pull me even closer against her. \n\n\"Careful, Laura,\" I whispered. \"I like you a lot, but wouldn't want your brother getting the wrong idea in his head.\"\n\n\"Lennon's little head has more ideas than his big one and they have nothing to do with me or my peccadilloes,\" she whispered in return as both of her hands fumbled with the buttons on my fly. She slid her slender hand inside where she succeeded in working my cock free of my pants. Standing next to me, she let out a little gasp as she grasped and started to gently pump my manhood. \n\nAs I felt myself getting harder and harder, I began to massage the front of her crotch through her dress as my nameless paramour had once taught me. She lifted it for me where only the silk of her bloomers was between us.\n\nAs the sensations built and I felt her moisture wetting the fabric, I grew concerned that someone might approach and surprise us, but I put it out of my mind as her tender hands worked their magic and my climax approached. Her breathing had become practically a pant as well as I worked her love spot. She gasped and moaned, barely maintaining her pace on me, just seconds before I felt myself going over the edge.\n\n\"Laura, it comes,\" I said. Regaining her rhythm as she pushed the bottom of her dress back down, she increased her pace and pointed my cock away from us, and then continued to massage me faster and faster as I shot my seed into the bushes. She milked me until it was over and then beyond before wiping her fingers over my tip to get any remainder that lingered. I could just see the reflections in her eyes as she looked at me and sensuously licked the tips of her fingers to clean them.\n\n\"Oh, Jeremiah, that was wonderful. Thank you,\" she said as she helped tuck me back inside and rebuttoned my trousers. \n\n\"Thank you, my sweet,\" I said in return. \"Wonderful is exactly right.\" \n\nArm-in-arm, we walked through the rest of the dark gardens, seeing several couples engaged in what appeared to be passionate embraces and kissing, and at least one other couple who may have been similarly engaged in our just concluded activity. Laura giggled and I smiled, hoping it would be as good for them as it had been for us. \n\nOn reentering the main, hall, Leah, standing by the punch bowl, smiled and waved to us. Rather than approach her as I expected, Laura pulled me to the side and whispered, \"Jeremiah, I can't believe you brought two of your sisters to the dance with you. If they want to bring something, most people bring a flower, a heart, or a fancy card they've made for their love, or, if they're being playful with their beau or gal, a party mask. How soon can we send them away?\"\n\nChilled, I stopped in my tracks. \"They're my sisters,\" I replied. \"They'll go away when they're married and have someone to provide for them.\"\n\n\"But for your younger sisters, that's still years from now, isn't it? And for these two, that could be a long, long time, too. At least as homely as the older one is. I really don't want them around when we marry.\"\n\n\"Laura, you may not want them, but they're my sisters.\" \n\n\"Jeremiah, they are not going to live in my house, and that's final.\"\n\n\"No, you're absolutely right. They're not,\" I replied. \"And neither will I.\" \n\nI turned, walked away, and never willingly spoke to her again.\n\nA few minutes later, I found Mary in one of the side rooms speaking to Richard Duncan, who was a few years older than me. He was the owner of a blacksmith shop in town. I was a friend of his younger brother and Richard had always been an honorable man in our dealings, so I returned to take Leah out on the dance floor for a couple of rounds to give Richard and Mary more time to talk. \n\nWhen we came off the dance floor, a young man asked to dance with Leah and Richard came over and asked to speak with me.\n\n\"Jeremiah, I'm older than I'd like to be when I'm asking this, but I hope you'll take into account what I've been doing for the past ten years since I finished my apprenticeship. Your sister Mary's a special girl and I'd, ah, like your permission to court her.\"\n\n\"Richard, did she tell you she just turned 17 last month?\"\n\nHe nodded. \"I just turned 31, Jeremiah. If you'll let me court her and it works out like I suspect, I can wait till she's 18 to ask for her hand, if that matters to you.\" \n\n\"That sounds like a good plan, Richard. No promises, of course, unless she agrees, but if it works out, I might be expecting you two to be getting engaged at, say, next year's dance?\"\n\nWe shook hands on it. Mary liked the plan, too, and that's just what happened. \n\nThat was three.\n\n***\n\n1892\n\nMy heart raced as I saw Charlotte turn away and slip out a side door into another room. Why, I wondered, would she be taunting me with that look when I knew that she and William were still married and supposedly happily so. I hated myself for the thought of even pursuing her, but I couldn't stop.\n\nMy heart continued its unnatural pace as I moved from room to room around the great hall. I stopped to speak to several people but I couldn't ask the question I most wanted answered: \"Where is Charlotte?\" Instead, I practically bit my tongue to keep those words from slipping out and exposing my thought of stealing her away with me. \n\nStepping back into the main hall, the band was playing and several couples were doing a reel. I watched for a few moments before I caught the movement. It was Charlotte, still holding the mask in front of her eyes and wearing what I was almost sure was the same blue dress she'd worn on the night she'd accepted William and spurned me. Charlotte, on seeing my eyes catch hers, nodded and then turned and almost skipped out the back door into the gardens.\n\nGrowling a curse at myself for how I would be spending eternity in the fires of Hell, I went after her.\n\n***\n\nSaint Valentine's Day Dance, 1880\n\nThere was a sense of excitement at our home as the annual dance approached. All three of my remaining siblings would be attending with me, including Sarah, our baby sister. Since it was always on a Saturday night so most people could attend, it would be held on Saint Valentine's Day for a change.",
        "The main focus, though, was on Rachel, now 18, who, while staying with Mary and Richard to help care for their new baby boy, had met Richard's younger brother, Samuel. Eight years her senior, they'd been seeing each other for several months. I'd been friends with Sam for years and liked him. He'd been to our house several times since they met, sometimes for dinner with Leah chaperoning as they finished their evening in the swing on the front porch. He hadn't yet spoken to me about her hand, but I knew from the way he looked at her that it was just a matter of time, including possibly that night.\n\nThere was practically no hope for me, now 27 years of age and still caring for three sisters. After Laura had opened my eyes a few years earlier to how I was perceived by the women of my community, I had essentially given up on finding a partner in our area. Instead, I found what little companionship was available to me in the embrace of the whores of Nashville during my two sales trips each year. \n\nThe nameless woman who had been my instructor in the art of making love was nowhere to be seen, despite my searches, but the others with whom I spent an evening on each trip excelled at the skill of fucking and I slowly became better at that and more complacent with each such session about searching for anything more. Charlotte, long off-limits to me anyway, had been gone from town for years, easing my temptation, but stoking my heartache. As for Miss Laura Weatherby, I'd never given her a second thought.\n\nAs the dance began that evening, Sarah danced with one young man after another, having the time of her life. Samuel and Rachel danced, too, but only with each other. I spent my time talking with a couple of the other older bachelors who still held out hope of someday finding a companion, and Leah was near the punch bowl with a couple of her friends in similar situations to herself. \n\nAt nearly 22, Leah still had a few years of hope left, unlike me, but that she'd never been asked on even a single date was wearing on her confidence and on my nerves. While she was by no means ugly, she was rather plain, her clothes mostly drab and her hair always pinned up. With no experience and a severe lack of confidence, she was what some would call mousy, practically fading into the background when her sisters or other young women were around. That was basically always the case, so I secretly suspected that Leah and I would be spending our elder years together, with each of us sad and lonely.\n\nWhen the band took a break, Rachel and Sarah went to join Leah, and Sam approached me and asked me to step outside with him. A light rain was falling so we stayed on the porch under shelter. \n\n\"Jeremiah, I've grown to care about Rachel and, though we have some little issues, I'm in love with her and will do whatever it takes to make her happy.\"\n\nI nodded. \"She can be difficult at times, Sam, but I think the two of you can be good together.\"\n\n\"That's what I want to speak to you about. I'd like your blessing to ask her to be my wife.\"\n\nKnowing him as I did, I gave him my now standard permission speech and shook his hand. \"I look forward to finally being your brother.\"\n\n\"Me, too,\" he replied, before making his way back inside and finding Rachel. I trailed along, thinking to catch the happy event even if I was too far away to hear what was said. When he dropped to one knee in front of her, several other people noticed, too, and a crowd started to form a short distance back.\n\nWords were spoken, then more words, louder words. I moved closer, beginning to question what was happening. Leah came up to me with a worried look, putting her hand in mine as we stepped even closer.\n\n\"So you really don't love me?\"\n\n\"No, Samuel. I like you a lot, but I don't love you and I don't want to get married now.\"\n\n\"Rachel, then why didn't you tell me?\"\n\nShe looked uncomfortable as she hunched her shoulders for a second. \"Samuel, I...I enjoy being with you, but I don't want to be with you like that. Not now anyway. Maybe not ever. I just don't know.\"\n\nLike Leah and me, the crowd, once standing back politely, had moved closer to be able to hear. I raised my hands and said, \"Let's move along, folks. They need some privacy to work this out.\" I stayed where I was in case they needed help, and Leah stayed, too, apparently in case Rachel needed her.\n\n\"Rachel, you're saying you'll keep me for yourself so you'll be happy but not let me find the happiness I'm seeking, too? Do you honestly think that's fair to either of us?\"\n\nWith the look she gave, it was fairly obvious that she didn't see the problem with it. \n\n\"I'm sorry, but if you won't have all of me, you can't have any. Goodbye, Rachel. I won't bother you again.\"\n\nHe walked away looking heartbroken. I couldn't believe what I'd just seen, but was even more surprised a moment later when Leah, looking angrier than I'd ever seen her, stepped in front of Rachel and took her by both arms.\n\n\"Rachel, you are a stupid, inconsiderate dolt\u2014\"\n\n\"Leah!\" I said, my voice low but stern.\n\n\"Shut up, Jeremiah. She needs to hear this,\" she said with a force of authority I didn't know she possessed. Turning back toward Rachel, she said, \"Samuel has been to our home seven times\u2014\"\n\n\"No! Not that many,\" Rachel interjected as if Leah was out of her mind.\n\nSeveral people had once again moved closer, but this time, all eyes were on Leah. \n\n\"Yes! Seven times! He has shown his interest and how much he cares for you, with his looks and the way he holds your hand, even the little sweets and presents he's brought you. But what have you done? Nothing but lead him on as if you felt the same about him! If you have an ounce of common sense, you'll go after him, ask his forgiveness for your actions and stupidity, and beg him to give you another chance.\"\n\nRachel was crying, but only from embarrassment, as even more people had gathered around. She picked up the front of her dress and ran out the other way, leaving me the responsibility of following her. \n\nIt took me a while to track her down, so I missed the next drama of the evening. Sarah later told me that Leah had gone after Sam to apologize for the hurt Rachel had caused him, so she'd followed behind. \n\n\"I'm so sorry for what she did to you, Sam,\" said Leah when she caught up to him. \"And she'll come to be sorry someday when she finally grows up. I've seen how you looked at her and know that she would have been the light of your world forever, but I hope you'll find a true, roaring flame to light your way rather than the fluttering, forlorn flicker of my sister's foolish selfishness.\"\n\nLeah started to turn away and Sarah with her when Sam reached for Leah's arm.\n\n\"Leah, that...that means more to me...than I can ever express in words. Thank you.\"\n\nWhen she told me about it, Sarah added, \"I've never seen Leah stand up and act like that.\" She started to say more, but when I asked, she just shook her head with an odd little smile.\n\nTo say that I was surprised after that when Samuel Duncan came calling on Sunday afternoon would be a great understatement. Rachel must not have expected it either, for she was quite excited when she looked out the window and saw him get off his horse. While she didn't love him, she greatly enjoyed his company and his sense of humor. She threw the door open and said, \"Hello, Samuel.\"\n\nNeither Rachel nor I expected his response. \"Good afternoon, Miss Daniels. May I ask if your sister, Leah, is available?\"\n\nTo my even greater surprise, Leah changed in the weeks and months that followed, and our plain little wallflower became a more confident, even pretty, young woman for the man she'd grown to love from afar. Sam and Leah married that fall after the crops were in. \n\nSarah, on the other hand, didn't seem surprised at all. \n\nThat was four.\n\n***\n\n1892\n\nOur Saint Valentine's Dance was usually held on the Saturday night closest to February 14. In 1892, that was Saturday the 13th, with the moon only one day past full. I was glad of that as I went faster and faster through the Tewkesburys' gardens in search of Charlotte. The paths were fairly well lit as a result, and the couples who'd retreated to their private niches to chat or embrace were clearly visible, though not enough to cause either them or me great embarrassment. \n\nI was almost to the end when I saw movement ahead, leaving the gardens area and heading toward Charles' new stable. I recognized the dress, the coiffed brown hair, and the party mask on the stick in her hand just before she went inside.\n\nI stopped at the edge of the gardens. It was my last chance to turn away, to avoid the foul temptation that was overcoming me, but it was too much. I continued on, knowing I was following Charlotte to eternal damnation.\n\n***\n\n1883\n\nJacob Summers had become a fixture at our home in recent weeks, and he made it a point to be at Sarah's 20th birthday party, just days before the annual Valentine's dance. Mary, Richard, and their three, had come, as had Sam, Leah, and their little one. We'd even received a letter from Deborah and Clement, so our home was a happy place except for the presence of Rachel, who, despite her lofty goals and ambitions, found herself without suitors. Like me when it came to seeking companionship, she was isolated and alone. \n\nThe cake was delicious and everyone was enjoying watching the children play when Jacob asked quietly if he could speak to me. He was only twenty-two compared to my thirty years, so I said nothing when he called me \"Sir.\"\n\n\"\u2014so with your permission, I'd like to do it at the dance on Saturday. You know how she so loves to dance; I think it will be something she'll long remember and treasure in her heart.\"\n\nThinking him a true romantic, I asked, \"Jacob, are you sure you don't write verse?\"\n\n\"No, Sir. I mean yes, Sir, I'm sure I don't write poetry. Why, sir?\"\n\n\"Never mind. You have my blessing, Jacob, and, assuming Sarah's willing, my welcome to our family.\"\n\nOn Saturday afternoon, he called for her at 5 PM so they could ride together, with plans for her to ride home with Rachel and me after the dance. Two buggies made their way toward town and we were joined by two others somewhere along the way. \n\nJacob and Sarah were together all evening, but no one approached Rachel to dance and only a few of the young ladies seemed to want to speak to her. I wanted to cut in on a couple of women, but my eye kept swinging toward my sister. Despite her intransigence, I felt bad for her, and hoped that she would find someone soon. Therefore, I skipped the dances and did a bit of clandestine work on Rachel's behalf.\n\n\"See the redhead?\" I whispered to Jack Henshaw's son as I stood behind him. I didn't know his name but knew that Jack and Loretta wouldn't have raised a disrespectful child. \"No, don't look around. She might see you do it. See, I saw her looking at you earlier. I think she may think you're handsome.\" \n\nBarely controlling my laughter at the subterfuge, I slipped off without letting him see my face. I used the same ploy on two other young men, and soon, my Rachel was busy dancing with a whole string of boys, most of whom I hadn't primed with the suggestion. \n\nIt was around 9 PM, about an hour before the dance was to end, when I saw Jacob and Sarah step out into the gardens. The first crack of lightning and boom of thunder came shortly thereafter. I smiled when I saw a wet but jubilant Sarah came in with an equally soaked Jacob right behind her. From their smiles and Sarah's excitement, I knew their engagement was on.\n\nWith the weather worsening, the dance had to end early and everyone made for their buggies, carriages, or wagons. Rachel looked sad as she saw Jacob and Sarah make their first public kiss before running their separate ways.\n\nThat, I thought, was five.\n\nDue to the continuing downpour, the treacherous conditions of the roads, and flooding in spots, it was almost midnight before we made it home. When we finally arrived, Rachel gave her sister a hug and was surprisingly courteous. I gave Sarah a hug and my best wishes, too, and gave Rachel the first hug she'd allowed me to give her since her breakup with Samuel. We all changed into much welcomed warm, dry nightclothes and went to bed listening to the steady rain on the roof and the thunder's repeated roll. \n\nOn Sunday morning, the rain was over and I rose to find several trees or limbs down and a couple of fences knocked flat. \"I'm going to miss church this morning to fix these, or else we'll be chasing cows all afternoon and into the night.\"\n\nSarah wanted to go to church to see Jacob, but I told her the road conditions would be too treacherous. She pretended to pout for a moment before smiling and coming out to help. I was surprised when Rachel followed along behind her just a few seconds later. \n\nWorking together, we had the damage repaired by 1 PM and headed back into the house for a bite to eat. I thanked them both for their efforts, and, after lunch, I walked fence lines throughout the afternoon, making sure there weren't any other problems in other areas of the farm. \n\nThere were two carriages and a buggy in front of the house when I got home. Leah saw me and came running out, hugging me as she cried. \n\n\"What's going on?\" I asked, confused.\n\n\"It's Jacob. He was apparently crossing the bridge on East Creek when it washed out in the storm last night. Sam was part of the search party that found his body downstream this afternoon. We got Richard and Mary from town and came out as soon as we could to bring Sarah the news. She's in the house, completely devastated.\"\n\nShocked, I rushed into the house to comfort my sister only to find Rachel there holding her as she cried. Many of us took turns trying to help, but she seemed to take no comfort from our efforts; her promised was dead, and, in her eyes, so was she. Sarah, our beautiful, happy young woman was no more. \n\nShe took to wearing widow's weeds despite the fact they weren't yet married. \"He was my love!\" she cried out when some busybody in town said it wasn't right and proper. \"We were pledged to marry, and he is gone. I mourn him all the time.\" After that, she continued to wear the black and she didn't return to town for over a year. \n\nRachel, my former chief frustration, shocked me as she turned over a new leaf. \n\nSomehow understanding the pain that Sarah was experiencing and doing everything she could to alleviate it, Rachel was Sarah's comfort and she became my new right hand. Chores formerly done grudgingly if at all were now completed without question; aid when needed was rendered, often without being asked. She made her sister's life better by being there for her and my life, if not easier, at least tolerable. \n\nIt was about that time that I purchased another 30 acres from a neighbor to add to our farm. It was mostly cleared, so it was added it to our crop and pasture rotation. I was able to add a few more beef cattle and a third dairy cow, and was even able to find someone to help from time to time with the plowing, planting, haying, and harvesting. Rachel generally did the milking and most all of the housework as poor Sarah got thinner and thinner, wasting away over the next few months.\n\nWe lost a calving cow that May, and it was all I could do to get the calf out before it died, too. Too weak to stand and with no mother to lick it clean, the little one was a horrible mess but I threw her around my neck and made for the house as fast as I could go.\n\n\"Rachel! Rachel!\" I called as I neared the house. \"I need help!\"\n\nSarah, so thin she looked as if the wind would blow her away, came out on the porch. \n\n\"Jeremiah, she's gone to town to deliver the eggs and things. What happened?\"\n\n\"I lost her mother, but I don't want to lose this baby, too. Did she leave any milk or did she take it all?\" \n\nSarah had tears in her eyes as she saw me gently lower the calf to the ground. Shaking her head sadly, she turned and went inside. \n\nShe may have given up, but I hadn't. I looked out in the pasture where we kept our milch mows. One was dry, expected to calf again in another month or two, but the other two were out there. If I could get one of them to take the baby, we might save it. If I could get it to stand and latch onto a teat, if the cow had produced enough milk since the morning milking, if\u2014well, too many ifs.\n\nSarah came out of the house with some burlap, a stack of towels, a pitcher half filled with milk, and a little bowl. \"This is all we have until the evening milking. Start wiping it down with this burlap, and finish with a towel,\" she said as she picked up another towel. She poured a bit of milk in the bowl, dipped the corner of the towel in it, and then placed it into the calf's mouth. I stood watching it try to suck the milk out of that towel as if it was its mother teat, my mouth probably hanging open, until she added, \"Jeremiah, we don't have all day.\"\n\nTogether, we cleaned and fed it, giving the little calf enough energy and encouragement to stand. \"I'll keep feeding it this way through the day, and Rachel and I will get it on one of the cows this evening when it's stronger. Now, you grab a bite to eat and go start plowing. You've already lost half a day; you don't need to lose the whole thing.\"\n\nAs detached as she'd been, I hadn't known if Sarah even realized we were still in the middle of planting season. I usually started plowing on March 15 in preparation for the start of planting in mid April, but I was behind this year, so it was a welcome relief to have Sarah's help. When I got home that night, I learned that the calf was doing well, one of the milch cows had accepted her, and, according to Rachel, Sarah had been busy all afternoon despite her ongoing grief. Still wearing her widow's weeds, she was at least up and helping.\n\nIn hindsight, I think the loss of that cow and the effort to save the calf was what saved my sister. She saw that the world went on despite grief and hardship, and slowly, bit by bit, she once more became a part of it all. \n\n***\n\n1892\n\nThere were no lanterns lit in the stable, so I struck a match and found one hanging on a hook. A moment later, it was casting a small glow. Hearing movement, I looked and saw the swish of the back of Charlotte's blue dress as she ran into a stall. The giggle that followed would have given away her position if I hadn't already been coming around the corner of the stall to peek in.\n\nCharlotte stood there wearing that blue dress I'd seen so many times in my memory as she dismissed my suit and once again accepted William's. Her long brown hair was piled up on her head the same way, too, with just a few curls hanging down. One had found its way to the front, gracing her d\u00e9colletage as if drawing attention to the gentle swell of her delicate femininity. \n\nMy breath caught as I looked up at her face, with the top half covered by the mask, supported on a stick with her left hand. \"You are a vision of loveliness,\" I whispered. \n\nShe gave a curtsy and smiled, but said nothing.\n\nI couldn't smile, though, for my doubts were overtaking me. \"But why, Charlotte? Why are you doing this? You made your choice twenty-one years ago, and I've lived with that choice every day since.\"\n\nShe looked down at her feet, her smile fading. \n\n\"You remember, don't you? Well so I do, as hard as I've tried to forget. I would take you and run away with you if I thought it would make us both happy, but I really don't think it would...either one of us. You'd miss William, for I know he's a good man and that you love him, and I'd be consumed with guilt for what I'd done to the two of you and what I'd done to my own soul.\"\n\nThe mask quivered as I saw her hand shake. I believed I was starting to get through to her. Therefore, I had to end it before my resolve was exhausted. \"The game's over, Charlotte. I don't know what you were playing at\u2014or maybe playing for?\u2014but I can't play anymore. While I'd like to think that my morals are such that you don't tempt me, that's not it. You do, believe me. But you wouldn't like me if you knew how weak my morals really are.\" ",
        "I thought of the prostitutes who'd been my only source of affection over the years since Laura. Paid whores, they were, who gave me what felt for some minutes to be affection, when in truth they were just doing their job and didn't care any more for me than the next guy they would meet. Those poor women had more morals than I, since they did what they did as a job, while I did it to fool myself for scant moments of pleasure. \n\n\"No,\" I continued, \"what you've proven is that I'm a weak, pathetic guy, not strong enough to do the right thing and avoid such thoughts but not evil enough to steal you away and make you mine. Good bye, my old love. Please don't tempt me again.\"\n\nHer mouth opened to speak but I turned and walked out of the stall, not wanting further temptation. I got it anyway when she spoke, calling me. \n\n\"Jeremiah, stop. Please?\"\n\nSomething about her voice...\n\n***\n\n1885\n\nAfter saving the calf, Sarah had slowly emerged from her grief and the doldrums in which she'd found herself. While I knew she wouldn't attend the annual Valentine's dance in 1884, I was surprised when Rachel also said she'd like to skip the event. With no prospects for me and with Charlotte still living with William in Franklin, I had no incentive to attend and was actually glad to take a year off.\n\nHowever, in early February of 1885, Rachel approached me one afternoon while I was replacing a worn brake on the wagon. The nut was rusted tight to the bolt so I was struggling to break it. It was a cold day, even in the barn, but I was getting hot and getting a little hot under the collar about it, so I'd taken off my coat. Her teeth were practically chattering as she spoke to me. \n\n\"Jeremiah, do you think we could go to the Valentine's dance this year?\"\n\nSurprised, I stopped what I was doing and looked at her. \"Sis, you know better than to come out here dressed like that. Where's your coat and scarf? Your gloves?\"\n\n\"I didn't want Sarah to know I was talking to you about this.\" \n\nOut of all of my sisters, Rachel, with her red hair and emerald green eyes, reminded me most of my late mother. She was on the shorter side, just an inch or two over 5-feet, so when I draped my coat around her shoulders, it dwarfed her and made me smile. \n\n\"Thanks, Jeremiah,\" she said as she leaned into me. \n\nI put my arms around her to keep us both warm and asked, \"Are you afraid that you're going to hurt Sarah's feelings if you go and she doesn't?\" Even two years earlier, Rachel wouldn't have given Sarah's feelings a thought when it came to her own desires, but she'd matured a lot as she helped her sister through her grief.\n\n\"No, but I don't want to pressure her, either,\" she said. \n\n\"Have you met someone?\" I asked, wondering why I hadn't heard earlier.\n\nAgain, though, she said no. \"Can we go anyway?\"\n\nI nodded. \"Sure. Anything for my sisters.\"\n\nAs expected, Sarah declined, but Rachel and I attended. I spent my time with the older single men, while she split her time between young men on the dance floor and speaking with a number of people around the hall. I noticed that the most discussion seemed to be with our town's new doctor, Saul Levinson, and his wife, Rebecca. Doctor Levinson was about my age and he and Rebecca had only been married for a couple of years, so they were there chaperoning. From what I could tell, Mrs. Levinson was well pregnant with their first child.\n\nIt was getting late and I was getting discouraged that Rachel hadn't done a second dance with any of her potential suitors, despite a number of second requests, so I went to find Charles Tewkesbury to give him my thanks before we headed for home. I heard my name called and was surprised to see Doctor Levinson approaching me when I turned. \n\n\"Mr. Daniels, may I speak with you for a moment?\"\n\n\"Sure, Doctor. What can I do for you?\"\n\n\"Well, it's about your sister, Rachel.\"\n\nA married doctor does not ask about an unmarried young lady unless something is wrong, so my heart raced. \"Is something wrong with her, doc?\"\n\n\"Oh, no, nothing of the sort, though I am speaking to you on professional level.\"\n\n\"What do you mean?\"\n\n\"You may not know but Rebecca, my wife, is a nurse. Has Rachel spoken with you about her interest in that profession?\"\n\n\"Ah, no.\"\n\n\"I suspected as much. She's stopped by to speak to Rebecca a couple times recently, and even borrowed one of Rebecca's books on nursing. There's a new program for training nurses in Nashville, and similar programs have been started in several other cities in recent years. I think Rachel is considering attending but she's very concerned about the cost. Most are one year programs, but they aren't exactly cheap.\"\n\nWith payments still due on the 30 acres I'd purchased a few years earlier, money was tight, which made me fear his response when I asked, \"How much are we talking about, doc?\"\n\n\"It's a working program, where everything's clinical, so the women get room and board in return for their work. There's a stipend of a couple dollars a week for incidental expenses, but the upfront cost is about two or three hundred dollars.\"\n\nI slumped visibly on hearing that. It might as well have been a thousand. It would take years to raise that much spare cash. \"Thanks, doc. I'll speak with her about it.\"\n\n\"Mr. Daniels, Rebecca tells me that Rachel will be a great nurse. She's offered to pay $100 of the amount as a sort of scholarship if you and Rachel can come up with the rest.\"\n\nI thanked him and talked with Rachel about it that evening on the way home. She'd saved $35 over the years, but I still didn't see how I could raise the rest without selling some land.\n\nHowever, I hadn't counted on our sisters. Sarah gladly threw in her $20, and said she'd do more, leading her to contact each of our other sisters. Over the next few weeks, Mary and Leah (with Samuel's blessing) came up with $15 each, and, to my surprise, Esther came for a visit with Fredrick and their four kids to bring $8 more. Times were hard in Texas, so Deborah and Clement sent $3 and their love by mail. \n\nWith some frugal living (including avoiding any \"encounters\") on my next two trips to Nashville, I was able to raise the rest and Rachel was off to be a nurse that fall. She completed her training and took a job at the hospital in Nashville before eventually meeting a promising young doctor. They married in 1889.\n\nFive down, one to go.\n\n*** \n\n1892\n\nThat voice...\n\nI turned to look at Charlotte as she dropped the mask from her face. It was her, but, strangely, it was as if it wasn't. The look on my face must have made her realize my questioning.\n\n\"I'm sorry to have deceived you, Mr. Daniels, but Mother's always spoken so highly of you that I had to meet you.\"\n\n\"Mother?\" A chill ran through my bones.\n\n\"I'm Charli,\" she said, \"Charleen Fellowes, Charlotte's daughter.\"\n\nI immediately felt sick at my stomach. She'd listened to what I'd admitted, to still having feelings for her mother after all that time. Worse still, at her tender age, I'd lusted after her.\n\n\"I'm so sorry. I have to go,\" I said haltingly as I turned away, but she took my arm. \n\n\"Please don't.\"\n\n\"I must. You're all of what, sixteen? Seventeen?\"\n\n\"I'm twenty, Mr. Daniels. Not a child, but an educated, full-grown woman.\"\n\n\"Yes, but...you're Charlotte's daughter.\" Ashamed, I pulled away from her grip and ran from the stable.\n\nI heard her calling my name as I went directly to the mansion rather than back through the gardens. Inside, I saw Sarah sitting with Matthew Kelley. Both were smiling and speaking as if they were old friends or young lovers. My urge was to get my sister and flee the infernal place, but she was doing what she needed to do as the last step in her healing following Jacob's death, so many years before. \n\nNeeding to get away, I entered the men's parlor. Cigar smoke lay heavily on the place despite the fact that no one was currently inside. Spotting a bottle of Tennessee whiskey, I poured a shot and was about to quaff it when the door opened. I turned to see Charlotte enter.\n\nThis, I knew, was the real Charlotte. She was still beautiful but her features were a bit fuller, more mature, and her brown hair now had a smattering of gray. My hand almost shaking, I set the drink down.\n\n\"Hello, Jeremiah.\"\n\n\"Hello, Charlotte. This is the men's parlor. You shouldn't be here.\"\n\n\"This is my childhood home and my brother's house. I'll go where I please, thank you.\" \n\nI considered what she said and nodded, leading to her laugh in response. \n\n\"But Charlotte, I can't speak with you,\" I said. \"It wouldn't be proper.\"\n\n\"Proper be damned,\" she replied, causing me to draw back in surprise. She approached me and from only inches away, continued. \"I spoke with Charli. She said you wouldn't give her a chance.\"\n\nMy face reddened. \"She told you what I said?\"\n\n\"No, Jeremiah, what you said was between the two of you, but, despite the years, I suspect I still know you better than you think and could guess and be pretty close.\"\n\nI shook my head, rather rapidly, in denying her claim, but she put her hand on my heart. \n\n\"I know what's in here,\" she said. \"I know why you denied her, but Jeremiah, you know, deep in this same heart, that what you still seek, what you yearn for, is lost, that it can never be.\"\n\nI nodded this time, knowing that despite the years, she still knew my feelings. \"Charlotte, I couldn't live with myself if I settled for copy of perfection.\"\n\nShe laughed heartily at that, and waved to a couple of guys entering the parlor to go elsewhere. I nodded in confirmation; after they left, she replied, \"Jeremiah, I'm about as far from perfection as one can get.\"\n\n\"So you say, but, whatever the case, I couldn't be with someone who's a copy of you. I wouldn't see them when we were together, whether in deep conversation or making sweet love. Instead, I'd see you, always you, and that wouldn't be fair to you, her, or me. Don't you see?\"\n\nShe nodded this time. \"You flatter me and warm my heart, though I do ask that you avoid sharing that thought with William. He might not see it in quite the same light as I do.\" Her look caused me to smile, knowing how she meant it. \"Seriously, Jeremiah, I must apologize to you and ask you to allow Charli to explain further when you speak with her again.\"\n\n\"Charlotte, I can't\u2014\"\n\n\"You can and you will, whether you wish or not, since she's currently right outside that door waiting, hoping you'll give her a chance.\"\n\n\"No, Charlotte,\" I said forcefully. \"I'm 39 years old and she's little more than a baby. Your baby. Looking just like you. No.\"\n\n\"Jeremiah, please! Please, I beg you. Speak with her. For me, for you, and for her, I ask you to do this.\"\n\n\"Why, Charlotte? What difference would it make? I would forever be seeing you rather than her, and it wouldn't be fair to any of us.\" \n\n\"Other than a little in the way of her looks, she's really nothing like me, Jeremiah. She's smart and sweet, and she knows what she wants.\"\n\n\"What she wants? Are you trying to say that I'm part of that, Charlotte? Why?\"\n\n\"I can't say, Jeremiah, other than possibly. Who knows what truly is in a woman's heart? Even one who's been happily married for 21-years, but who still hasn't forgotten the past?\" \n\nShe grinned at me, causing me to look away, embarrassed. She wasn't done. \"Charli's my eldest, and I spent years telling her stories of my childhood and stories of my best friends...including you. Jeremiah, she knows all about you, your family, and your sisters, but she also knows the kind of man you are, and I think you confirmed it for her tonight.\"\n\n\"I shouldn't have anything to worry about then if that was the confirmation she was expecting. At least you said she is smart, so maybe she'll figure it out and find the person she really deserves.\"\n\n\"Don't belittle yourself, my friend, and don't worry, she'll figure it out, whether it's you or someone else. She's not only smart, she's educated, too, Jeremiah, and she's traveled, so she's developed what the Europeans call taste. If she thinks she might want something, she'll go after it to find out for sure. I hope you'll give her that chance.\"\n\n\"Maybe so, Charlotte, but she's still too young, at least for me.\"\n\nShe glared at me. \"That's poppycock and you know it. My father was fifteen years older than my mother, and I'd bet we could both name five or six couples around here who have as much as twenty-five years of difference between them. Even your own sister Mary is fourteen years younger than Richard, and you yourself approved that union.\"\n\n\"That's different, Charlotte.\"\n\n\"Only if you make it so.\"\n\nI sighed. She was correct, but I still wasn't prepared to concede an inch of ground. \"Charlotte, I'm sorry, but I can't do what you ask. I have to go. Is there a servant's entrance into this room so I can leave and avoid embarrassing both of us? You once told me that there were secret passages in your house.\"\n\nShe glared at me before smiling. \"Me and my big mouth and your good memory.\" \n\nShe lightly touched one of the wood panels in the corner and the top and bottom panels swung open to reveal a passageway. \"Down this way to the left. I'll take care of Charli so you can escape for tonight, but don't be at all surprised if you see her again.\"\n\n***\n\nSarah, looking the happiest I'd seen in years, babbled the whole way home. As far as she could tell, she and Mr. Kelley had hit it off quite well. I listened and tried to concentrate, but the events of my part of the evening weighed heavily on me.\n\n\"Are you okay, Jeremiah?\" she asked as we neared home. \n\n\"Just very tired, Sarah,\" I told her, hoping that news of my actions during the evening would never reach her ears. \n\nAfter asking me to undo the back of her dress, she clutched it to herself and ran into the house while I dealt with the horses. Feeling intensely frustrated, I started to try to relieve myself, but as I slowly increased the speed as I pumped my member, thoughts of Charlotte\u2014or was it Charli? I couldn't be sure\u2014entered my mind. Stopping abruptly, I cursed at myself and at both of them, and went to bed feeling even more frustrated and uncomfortable than before.\n\nMr. Kelley sat with us at church during the service the next morning on Saint Valentine's Day. He and Sarah spoke for a while after the service ended, and I was regaled with more about him as we drove home, though I seemed to vaguely recall significant parts of it from the night before. Neither Charlotte nor Charli had been at the service, so I was spared any questions about either of them from Sarah.\n\nUnlike some who prepared a major feast after church on Sunday, we'd always made a practice of a light lunch and preparing a meal on Sunday night when there was more time and so we could have any leftovers on Monday. Beyond the everyday chores like milking and emergency repairs, Sunday was a day of worship and rest, so I took the front porch for little while to read the latest farm journal and perhaps a few pages of A Connecticut Yankee in King Arthur's Court\", which I'd picked up on my last trip to Nashville. It was a very cool but bright day, so I didn't plan to be out there long.\n\nI marked the place in my book and rose to go inside when I heard a buggy coming up the lane. On seeing the driver, I called inside the house for Sarah. She came running, saw who it was, and then went running back inside. I suspected her hairbrush was getting a workout.\n\n\"Mr. Daniels, may I have the courtesy of speaking with Sarah?\" asked Mr. Kelley when he approached the porch. \n\n\"It's Jeremiah, and she'll be right out,\" I told him. \n\n\"Thank you, Sir, and please, call me Matt.\"\n\nWe spoke for the next fifteen minutes or so as Sarah did far more than brush her hair. She put her church dress back on, did her hair, pinched her cheeks for coloring, and even added a bit of color on her lips. She also brought a pitcher of tea and some glasses.\n\nThey whispered for a few moments, before asking if they could sit together on the swing. \n\n\"Sure,\" I replied, moving to the rocking chair. Playing chaperone without trying to be too obvious about it, I opened my book and started to read the next chapter. \n\nWith the quiet discussion and occasional laughter coming from the two young love-birds, I wasn't getting much read, so my thoughts turned back to the previous evening, despite my wishes. I was struggling to concentrate on something else when I heard Sarah say, \"Jeremiah, wake up! There's someone coming up the lane.\"\n\nI stood up to see a young blonde woman ride up and draw rein on her black horse. She was wearing trousers and boots, so she threw her leg over the saddle horn and slid out to drop to the ground rather than doing a proper dismount. Tying the reins to the hitching post, she approached the porch and looked up at me. Something looked familiar, but I couldn't quite place her until she spoke. \n\n\"Hello, Mr. Daniels, would you like to go riding with me?\"\n\nSarah and Matt were looking back and forth between me and the young woman. \n\n\"Ahh, Sarah, Matt, this is, ah, Charleen Fellowes.\" I said it almost like a question since she sounded like Charli but looked considerably different. She gave a polite curtsy to them, and then I introduced my sister and Matthew Kelley to her.\n\nSarah was looking at me in disbelief. I knew the words on the tip of her tongue were \"Can we talk for a minute?\" but I waved my hand behind my back to keep her quiet as I looked at Charli and trying to form a semi-coherent statement.\n\n\"Miss Fellowes, I would be delighted to ride with you but my duty at the moment is to chaperone my sister and Mr. Kelley. Perhaps\u2014\"\n\n\"Oh, Jeremiah! Of course, he'll go with you, Miss Fellowes,\" said Sarah. \"As a widow in all but name, I'm not really required a chaperone.\" She smiled sweetly at me as my face fell, realizing that she was correct. At 29, she probably didn't need one anyway, but she'd just pulled my excuse out from under me as surely as if it had been a rug.\n\n\"Ya'll have fun,\" she said smiling, as she turned back toward Matt and they started talking again.\n\n\"Have a seat, Miss Fellowes. I'll change into my boots and then we'll have to saddle my horse.\"\n\nShe took a seat while I went inside. By the time I returned a couple of minutes later, the three of them were chatting happily, and Sarah probably knew more about Charli than I did. \n\n\"To the stable?\" I asked, giving her an out if she'd changed her mind, but she took her horse's reins and my arm and we walked out back in silence. \n\nI put the blanket on Boots, but stopped before I added the saddle.\n\n\"Charli, tell me\u2014your hair? It was brown and you looked just like your mother last night. Now, I see a resemblance but you're blonde and different. What's the story?\"\n\n\"Wig and a bit of theatrical makeup. I was involved in several plays at Hamilton.\"\n\n\"What's that?\" I asked.\n\n\"My college for women in Kentucky. I was accepted at sixteen and I've passed my boards so I'm a graduate and have a degree. I'm going to be a teacher.\"\n\n\"Charlotte told me you were educated but I didn't realize she meant that. Now, back to the original question: why'd you dress up like that?\"\n\n\"Proven results. I wanted to attract your attention so looking like Mother was a quick way to grab it. I wore her old dress and her old wig. I was going to show you last night and tell you how different I really am before you huffed off.\"\n\n\"I didn't huff off. I made am appropriate decision under the circumstances.\"\n\n\"Perhaps, but it's usually best to know the lay of the whole board before one makes a move. If you'd looked beyond the square in front of you...\"\n\n\"I don't think it would have a mattered. I'd have still told you the same thing. Knowing that, why are you here?\"\n\n\"To get to know you, of course.\"\n\n\"Why? I've told you we have no future together.\"",
        "\"Oh, I know that and you know that, but Fate may have a somewhat different opinion.\"\n\n\"Not if we don't tempt it.\"\n\n\"No, but then what fun would that be?\" She smiled sweetly at me. \"Speaking of fun, are you going to saddle your horse or are we going to stand here all afternoon? Not that I'd mind, but the horses might be confused.\"\n\nWe rode for an hour, talking part of the time, but the rest I was struggling to keep up with her. While I rode Boots, I did it as a farmer on a farm horse whereas she and Shade, her black mare, were a true team that had trained together for years.\n\nOn getting back to the house, she said she had to go. \"It's only an hour to sundown.\"\n\n\"I'll escort you home,\" I said, mostly because I didn't want to risk her being out alone after dark, but in some small corner of my mind, I was surprised to realize that I didn't want the afternoon to end. \n\n\"Jeremiah,\" she said with all pretense of using our formal names abandoned, \"that's as silly as what you said last night. I have plenty of time to get to Uncle Charlie's before dark, but you'd be home really late. Besides, you'd never catch me!\"\n\nShe blew me a kiss and took off at a pace I knew that Boots and I would never match.\n\nAs I entered the house, I smelled dinner cooking and found Sarah practically dancing around the kitchen. She came to an abrupt stop on seeing me. \"Jeremiah, do you have something you want to tell me?\" \n\n\"No.\" I went to wash up but she followed along behind me.\n\n\"That's not fair, big brother. If you don't tell me, there's no telling what our sisters might believe by church next Sunday.\" \n\n\"Well I'm not telling and I don't think Miss Fellowes would, so I don't think there's much risk of gossip. Who would start it?\"\n\nShe had a devilish grin as she replied, \"Me, of course. And our sisters will never let you off the hook. Now...if you want to share the real story...\"\n\nI laughed and told her enough that it would keep the wolves away.\n\nI hoped.\n\n***\n\nAs the week passed, the events of the previous weekend slowly faded in my mind, becoming as if less and less real and more and more a figment of my imagination. That changed on Thursday at lunch when I walked into the house. Sarah and Charli were sitting at the table waiting for me. My problem hadn't faded away after all.\n\n\"Jeremiah, Charli's going to be eating lunch with us today! She brought a peach pie to share. Isn't that nice?\"\n\n\"Hi, Jeremiah. They're canned peaches since they're out of season, but it should still be good.\"\n\n\"Hi, Charli, and thank you for the pie. I'm sure it will be delicious, canned or not.\" I looked at one then the other, trying not to smile while also trying to avoid scowling. I was angry at myself for feeling excited at Charli's presence.\n\n\"Oh, look at the time!\" said Sarah. \"You know, I just remembered that I was supposed to go visit Leah today. If you two will excuse me, I've got to run.\"\n\n\"Uh, Sarah, let me go hook up the buggy for you,\" I said, but she waved a hand at me dismissively.\n\n\"Don't be silly, Jeremiah. You two have a nice lunch. I'll take Boots. I haven't ridden him in a while.\" She was out the door in a couple of minutes while Charli and I ate in silence.\n\n\"Do you think she really had an appointment with your sister?\" Charli asked.\n\nI tried not to grin. \"Nope. Not for a second.\"\n\n\"Me neither, though it was really sweet of her to invent the excuse.\"\n\n\"You parents wouldn't think so, Charli. They would expect us to be chaperoned in meeting like this.\"\n\n\"Then I'll make a deal with you,\" she whispered conspiratorially.\n\nLikewise, I responded, \"What's that?\" \n\n\"I won't tell them if you won't.\"\n\n***\n\nAs hard as I tried to keep Charli at arms' length over the next few weeks, it became harder and harder for me to deny to myself that I felt something for her. Exactly what, I wasn't sure, but the interest was there on both sides. William and Charlotte returned home to Franklin after their visit, but Charli remained with her uncle and aunt, ostensibly to be ready for the start of the new school year in September but it wasn't long before she was doing some work for Doc Levinson, using some newfangled device called a typewriter to do his reports a few hours each week. As far as I knew, Doc had the only such device in town and Charli, who'd used one at Hamilton, was the only person in town who knew how to make it do more than a slow click, click, click. \n\nBy the end of February, she was sitting with the Daniels and Duncans at church, and by the first Sunday in March, I found her sitting by me. The following Sunday, she had her hand looped around my arm for part if the service, and by the third Sunday, I was surprised to find myself holding hands with her during the sermon. I immediately let go when I realized it, only to be rewarded by a hurt expression on her face. I patted her hand, hoping to placate her, but tucked my hands across my chest into my arms to make sure the hand-holding didn't happen again.\n\nMy equipment was ready so the following day, I loaded the plow and harrow in the wagon and drove to the first field to be plowed for the summer planting. It was still very cold and the moisture in the ground made the earth, while not quite frozen, very hard. The little boy that couldn't hold a plow straight had grown up to be five-foot eleven and 185 pounds of muscle, so I gave up after the first two attempted furrows, and started walking the field looking for rocks. I loaded those I found in the wagon, and then kept walking.\n\nMost rocks I found by seeing but shortly before noon I found one by stubbing my big toe on it. It hurt like hell and I hopped up and down on my left foot for a few seconds as I said more than a few choice words about the rock and its origins. With my level of frustration in recent days, I'd have said a lot more to relieve the tension if I hadn't heard a giggle. \n\nTurning, I saw Charli sitting on Shade and carrying a picnic basket on her arm.\n\n\"Charli, what the hell are you doing here?\" I said, with more anger than I intended and far more than she deserved.\n\nI immediately saw I'd hurt her feelings as she appeared to pout.. \n\n\"I came to see you and bring you lunch,\" she said. Getting off her horse, she came toward me, her face hardening in a look of determination. \"No, Jeremiah, it's more than that. I think there may be something between us so I'm trying to give us a chance to get to know each other, but you're trying to frustrate me at every turn. Well, believe me, it's working! I finally get to hold your hand for all of, what? Maybe ten seconds? Then you toss me away like I'm not even there! Jeremiah, I can't get you out of my mind and it's frustrating me to no end that I can't seem to get myself into yours.\"\n\nShe stopped with a huff, about three feet in front of me, slamming her arms against her sides. She wasn't considering the picnic basket, though, which hit her knee, and caused her to grab for it in pain as she cried out and dropped the basket.\n\nI took her in my arms without thinking, pulling her close to me patting her back. \"Are you okay?\" I asked as I brought her face up so we could look into each other's eyes.\n\n\"Uh-huh. But it did hurt.\"\n\nI nodded. \"I'm sure. It looked heavy.\" I thought I heard a bottle bump inside in addition to whatever else was inside when the basket fell.\n\n\"It was. Is.\" She made a low, throaty growl, but I pulled her against me once more.\n\n\"It's okay, Charli. The basket and whatever the hell there is between us are both still there. And don't worry, as hard as I'm trying to avoid feeling it, it's there and you're on my mind...all the time.\"\n\n\"Really?\" She was looking up at me with a hopeful smile, her tears now forgotten. \n\nI nodded. \"I have a lot of concerns, Charli. When I was young...well, you know...I liked your mother. When I first saw you, it was like seeing her again, and all of those old feelings came rushing back.\"\n\n\"I'm really sorry, Jeremiah. I shouldn't have done that to you, but I wanted to be sure to attract your attention. I didn't realize that once I did...\"\n\n\"No, Charli, it's not your fault. I shouldn't have been susceptible to it. The problem is that to really love someone, you have to love them for whom they are, not because they remind you of someone else who used to be special to you.\"\n\n\"I know, Jeremiah. That's why I'm trying to get you to see me for me and getting to know me rather than liking me just because I remind you of her. Do you honestly think I would want that?\"\n\n\"No, Charli. I know you wouldn't because it would be so unfair to you. But that's why I can't be with you. I don't want to be unfair to you. Do you understand?\"\n\n\"Yes. Unfortunately.\" Without another word, she walked over to Shade, climbed up, and rode away.\n\n***\n\nBy Thursday, the weather and soil conditions had improved so I was plowing when I saw Charli and Shade ride into the field through the gate. Wearing a hat, she rode to me and then plodded along beside me as I continued to plow. \n\n\"You didn't bring my basket home,\" she said, accusingly.\n\n\"No, I haven't been to town, but I did hang onto it for you and do have plans to return it.\"\n\n\"It was a shame about letting the food go to waste.\"\n\n\"Waste not, want not, my mother used to say. The lunch was delicious, though, and I thank you for it.\"\n\n\"And the bottle of wine?\"\n\n\"A gentleman should never drink wine alone. I saved it for when I could share it with the right woman.\"\n\nShe studied me for a moment before taking off her hat and giving her hair a shake. I pulled my team of mules to a stop.\n\n\"Charli! Your hair!\"\n\n\"Do you like? I decided I needed to change the style. Make it a bit shorter, like some ladies are wearing it in the big cities. You know, less like someone around here would wear it.\"\n\nI walked over to her as she got off Shade. \"It's beautiful, Charli, but...but...don't you see, it's not just your hair. It's everything about you. You remind me of her.\"\n\n\"Everything? Damn you, Jeremiah! You keep seeing similarities; what do I have to do to get you to see the differences? Shave my head completely and stand on my hands? Paint myself blue? Walk around with no clothes?\"\n\nMy eyebrows shot up and she hit me lightly on the arm. \"Those are silly, but there are lots of other differences between us if you'll just look. And do you know the biggest one of all?\"\n\nI shook my head. \"What's that, Charli?\"\n\n\"I'm the one falling for you and she's not. I'm the one who wants to see if we can make this work.\"\n\nHer words shook me. Did she really care that much?\n\n\"Oh, you're not easy to care about, Jeremiah Daniels,\" she continued, \"especially when you're always pushing a girl away, but somehow I've succeeded in doing it anyway. Now the question is whether you'll give me a chance to see if it's something more and whether you'll take a chance yourself?\" \n\nThere were so many questions running through my mind as she looked into my eyes, but at that moment, I reached a decision I'd been nearing but fighting for some time. \n\n\"Charli, I've grown to care a lot about you in recent weeks. I can't say how much, because I really don't know. What I do know is that you are a wonderful young lady and that I'd be the stupidest man in the world if I pushed you away from me after what you just said.\"\n\n\"I've never believed for a second that you are a stupid man, Jeremiah.\"\n\n\"Well, based on my past record, that's debatable, but I'll tell you this: It's going to take time to see if this will work out between us, and probably a lot of effort. I honestly don't know if it will, but I promise you that I'll give it a shot and I won't fight it anymore.\"\n\n\"Good,\" she said huskily. \"Now, don't fight this either.\" \n\nShe reached up and her lips met mine. In my mind, the entire world disappeared except for the two of us. Her tongue probed my lips and slipped into my mouth, where she met mine. Never in all my years had I experienced such a feeling, as if I was floating in a cloud of happiness.\n\nShe pulled away, grabbing her breath. \"Sacr\u00e9 bleu!\" \n\n\"Tr\u00e8s!\" I replied.\n\nCharli stared at me like I was crazy. \"You...you speak French?\"\n\n\"Only the few words I've learned from Jules Verne and my sisters who tried to study it in school.\"\n\nShe laughed heartily for a moment before putting her arms back around and kissing me again, but only once more. \n\n\"That's enough of that, Jeremiah. Your lunch is in my saddlebag. I'll grab it while you clean your hands so you can eat lunch and get back to work.\"\n\n***\n\nI started work early the next day, with plans to quit equally early. The plow took to the earth so I was hot and sweaty despite the cool temperature when I got home. Sarah was in the barn milking the cows when I arrived.\n\n\"Jeremiah, are you okay? Is everything alright?\"\n\n\"Yeah, I'm going to clean up and go into town. I'll be back late.\" I said as I started saddling Boots.\n\n\"What's wrong?\" she asked, visibly worried.\n\nWhen I assured her that everything was okay, a smile appeared on her face. \"Are you going to see Charli? No! Wait! You're going to see Mr. Tewkesbury!\"\n\nAs I mounted Boots, I replied, \"Hopefully both.\"\n\nCharles was happy to welcome me to his home and ushered me into his office. Whereas my farm \"office\" was a roll-top desk and a shelf in our main room, he had an entire room with a massive desk, fine chairs, bookshelves, a rank of what he called filing cabinets, and paintings on the walls. He offered me a cigar and a shot of whiskey. I thanked him but declined on the first before offering a \"To health\" on the drink. \n\n\"So what brings you to Tewkesbury Hall tonight?\" he asked, but from his expression, I could tell he already knew.\n\n\"Charles, I'd like to speak with you about your niece.\" \n\nHe gave me a peculiar look. \"Now just which niece are we speaking of? I have three, you know.\"\n\n\"Good God, Charles, do you have to make this any harder than it already is?\"\n\nHe started laughing and I soon joined him. \n\n\"Jeremiah, do you care for her?\"\n\n\"I do. I don't know her well enough to know how much yet, but there's something there.\"\n\n\"More than just your old feelings for Charlotte?\"\n\nHe knew, too. Christ, did everyone in town know? \n\n\"I was worried about that at first, I must admit, but Charli's totally different than your sister. I was afraid that I might be spending time with Charli and my feelings would be\u2014I don't know, maybe confused?\u2014between them, but that hasn't been a problem so far. If it becomes one, believe me, I'll take the right steps.\"\n\nHe nodded, and I continued. \"I care about Charli because of who she is, not because she's like her mother or because she's her mother's daughter.\"\n\nHe nodded again, understanding better than I'd conveyed it, I think. \n\n\"Jeremiah, what do you want?\"\n\n\"Charles, I'd like to be able to court Charli, your niece. I thought about going all the way to Franklin to see William and Charlotte, but that might make things more difficult, so I came to see you since you're acting as her temporary guardian. If you're not comfortable granting what I seek, I'll go there and ask to speak with William.\"\n\nHe opened a drawer in his desk and took out an envelope. Handing it to me, he said, \"Here.\" He slid his envelope opener across, too.\n\nInside, the letter said:\n\nDearest [though another pen had crossed out the \"est\"] Jeremiah,\n\nIf you are reading this, you have expressed an interest in courting my daughter and William owes me a week-long trip to Memphis for him doubting you [again, the part after Memphis was scratched through, making it difficult to read]. If you care for our dear, sweet Charli and wish to see her socially, you have our sincere blessing and our love and [the prior two words were struck] best wishes. She can be a boisterous young woman, but we know you will be as patient and kind with her as you have always been with those you love. If things become serious between you, we look forward to your visit.\n\nOur love [both struck and replaced by] Sincerely,\n\nCharlotte [and added with the second pen] and William Fellowes\n\nI read it twice before passing it over to Charles, who smiled as he quickly scanned it. \"I think this calls for a second drink.\"\n\n\"Thanks, but no thanks,\" I said. \"I need to be going soon, but would love to spend a few minutes with Charli, if that would be okay?\"\n\n\"I'm fairly certain Charli will be okay with that. In fact, I suspect Claudia is sitting on top of her to keep her from breaking in here to see what's happening.\"\n\n***\n\nOver the next few weeks, Charli and I became frequent companions at our home, her uncle and aunt's home, and around town. The same situation could be said of Matt Kelley and Sarah. However, Matt's business with his uncle's farm was winding down and it finally sold. He came over on a Saturday afternoon in mid April. I was out plowing, of course, but he came in search of me.\n\n\"Good afternoon, Jeremiah. I hate to interrupt your productive day, but I need to speak with you.\"\n\nI drew my team of mules to a halt and went over to shake his hand. \"What brings you out on this fine spring day?\"\n\n\"Jeremiah, to be quite frank, I have an unexpected problem. I asked Sarah her thoughts on me asking you for her hand in marriage, and she balked.\"\n\n\"What?\" I exclaimed. Considering the feelings she'd confided in me for Matt, I knew that never, in my wildest dreams would my baby sister have done that unless something else was going on.\n\nHe explained what had happened, but said she'd declined his offer. \"Jeremiah, Uncle Giles' farm is sold, and I'll be returning to Nashville soon so the new owners can move in and take over. I hoped that we could be at least arranging the wedding before I returned, even if it wasn't held for a while. She won't hear of it, but she wouldn't tell me why. I hate to ask this, but will you speak with her?\"\n\nWould I speak with her? You bet your bottom dollar I'd be speaking with her, but he meant on his behalf, so I agreed that I'd see what could be done. \"I know she cares a great deal about you, Matt. Perhaps she feels it's too soon?\"\n\n\"I asked that very question and she said 'No',\" he said. He thanked me and let me return to my work.\n\nThat night, I said, \"Sarah, we need to talk.\"\n\n\"I know, Jeremiah, but I can't.\"\n\n\"Can't marry Matt or can't talk about it?\"\n\n\"Either,\" she said with tears pooling in her eyes. I hadn't seen her looking so uncomfortable in ages.\n\n\"Sarah, tell me why,\" I demanded. \"I know you love him. Maybe it's a little sooner than you'd like, but he can accommodate that if you'll set the engagement.\"\n\n\"No.\"\n\nA terrible thought came over me. \"Sarah, he didn't do anything to you, did he?\"\n\n\"God, Jeremiah! No! How could you even think such a thing about him? I'm not talking about this anymore. Good night.\"\n\nThat told me she still loved him and something else was going on. Therefore, I decided I needed to talk to Leah and Mary after church the next day. While I didn't know where my relationship with Charli was heading, I knew it would never be resolved until Sarah's situation was. I went to bed to a bevy of bad dreams.\n\n***\n\nThere was a virtual war council in the house on Sunday afternoon with Sarah, Mary, and Leah. Matt, Richard, Sam, and I played poker for pebbles on the front porch while watching the kids play in the yard. Charli watched for the first few hands to learn the rules before we finally let her join the game. Only then did we learn how badly we'd been tricked. She could shuffle and deal better than most of us and won more hands than she lost.\n\n\"I never said I hadn't played before,\" she said with a smile. \"You assumed it. To tell the truth, you might be surprised at some of the skills college girls learn.\"\n\nMary came out first. \"Richard, please get the kids. It's time to go.\" She ran over to me, gave me a big hug and an \"I love you, Jeremiah,\" before they said goodbye to the others and headed out.",
        "Sarah came out next, gave Matt a kiss on the cheek, and led him away without a word. They got in his buggy and rode off.\n\nLeah was last. \"Sam, please take the children home. Jeremiah will bring me home in a little while, okay?\" She helped get her little ones in their buggy, gave Sam a kiss, and watched as they drove off down the lane. \n\nNext, she turned to Charli. \"Charli, I'm so sorry, but I need to speak with Jeremiah privately for a little while. You can have him back as soon as I'm done.\" \n\nThen she turned to me.\n\n\"Inside, big brother. We have to talk.\"\n\nI mouthed an \"I'm sorry\" to Charli before heading inside. She looked worried, but nodded to me anyway.\n\nThe chair I took at the kitchen table still felt warm from the person who'd sat in it for the past couple of hours. \"What's going on, Leah?\"\n\nShe was fighting tears as she said, \"Jeremiah, once upon a time, you promised Daddy that you'd take care of us and then promised Mama that you'd take care of us and find us good husbands who'd do the same.\"\n\nI nodded, remembering the countless times I'd done the count to when my responsibility would be over. I'd succeeded in five of the six, only to be stymied by the last.\n\n\"Jeremiah, what you don't know is that after Deborah and Esther were gone, the rest of us had a little meeting of our own that first time you went to Nashville to sell our produce. Remember that trip?\"\n\nDid I ever! I couldn't quite come out and say that, though, so I nodded. \"What about it? What did you do?\"\n\n\"We made a promise to each other that Mary and I'd forgotten until Sarah reminded us today.\"\n\n\"What kind of promise?\" I didn't see how a girly promise from seventeen or eighteen years before would have any impact on what was happening now. \n\n\"You always teased us about being six sisters, Jeremiah, but we also considered you as our leader, our number 1. We promised each other that day that you were most important to us and that we'd never leave you by yourself without one of us being there to help you until you found someone, too.\"\n\nThe impact of what my little sisters had promised hit me like a train and tears started streaming down my cheeks. \"You promised that for me?\"\n\nLeah nodded. \"You always helped us so much, we figured we had to do that for you. Time passed and we each fell in love and moved on, but Sarah, the last of us, remembered. Now she feels trapped between a promise she made for your happiness and her own. She doesn't feel she can marry Matt until she knows that you'll be with Charli, or whomever, and be happy, too.\"\n\n\"But Sarah was engaged to Jacob years ago. Why wasn't it important then?\"\n\n\"Because Rachel would have been number six then. She was still there for you. Sarah said she and Rachel talked about it then and again when Rachel went off to become a nurse and got married. Sarah was the youngest, but she took it most seriously, too. Now she doesn't see a way out.\"\n\nMy head was practically hurting with the implication. My sisters loved me as I'd always known. What I didn't know was that they loved me so much that they'd made a pledge that effectively prevented me from ever fulfilling my own pledge to our mother about their happiness. Something had to be done, and it was up to me to do it.\n\n\"Leah, let's get you home. I'll talk to Sarah this evening and get this mess straightened out.\"\n\n\"Thank you, Jeremiah. We want you both to be happy, but not one at the expense of the other.\"\n\nI gave her a hug and a kiss on her forehead. \"I know exactly what you mean. That's what sisters, and brothers, are for.\"\n\n***\n\nI took Leah and Charli home in the carriage, with Shade trailing along behind. After dropping Leah at her home, we headed to Tewkesbury Hall.\n\n\"Well? Are you going to tell me or am I going to have to tickle it out of you?\" She slid a hand inside my jacket and looked like she was ready to have a go of it.\n\nAs tempting as her offer was and as fun as it sounded, I gave her a short version of the issue and a quick explanation of what I was planning to do. We were standing in front of her door when we were done so we held each other in our arms and kissed goodnight. \n\n\"If it's not raining, I'll be out tomorrow for lunch and you can tell me how it comes out. I love you, Jeremiah.\"\n\nShe stepped in the front door and closed it as I stood there, realizing that I might be falling in love with her, too.\n\n***\n\nLater that evening, I was sitting on the front porch when Sarah came out to join me.\n\n\"Jeremiah, did Leah tell you?\"\n\n\"Yes, sweetheart, she did. What you girls did was sweetest thing I've ever heard, and I appreciate it so very much, but, Sarah, we can't let an old promise by a group of little girls ruin your life. You have to let it go.\"\n\n\"No, Jeremiah. I can't, just like you can't let go of your promises to Daddy and Mama about us. You know, I never met Daddy and I even have a hard time remembering too much about Mama now, but I do remember her making you give that promise. Seriously, when you're six and someone's talking about you getting married...well, that's kind of hard to understand at the time and hard to forget afterward.\"\n\nI sighed. The easy method had been declined. Therefore, I proposed the harder method. She looked at me to be sure I meant it before smiling and saying, \"Deal.\"\n\n***\n\nDay of the annual Saint Valentine's Dance,\n\nSaturday, February 11, 1893\n\nA double wedding was held at our church that afternoon, with Matt and Sarah tying the knot first, followed immediately thereafter by Charli and me. I felt fortunate that things had worked out between us, allowing Sarah and me to complete our deal to get married at the same time instead of the much less desirable outcome of not marrying at all. \n\nIt wasn't exactly easy. Charli and I had our ups and downs as we grew to know each other better and as I proved in my heart that she'd meant what she told me about loving me and as I came to love her, too. After our visit to see William and Charlotte in Franklin to get their blessing on our union, we had several more months to wait. \n\nSarah, who had accepted Matt's proposal just after we'd made our deal, took the coach to Nashville on several occasions to spend time with him. I never questioned her accommodations on the trips, and I noted with a smile that she never volunteered the information. Oh, it was possible that she was staying with our sister Rachel and her husband, but based on the look on her face each time on her return, I really didn't think so.\n\nWe'd agreed that the minister would wait to do the proclamation until after all four of us had said \"I do.\" When he proclaimed Matthew and Sarah as husband and wife, I automatically counted \"Six!\" When he did the same for Charli and me just moments later, I mentally added, \"Plus one!\"\n\nFollowing joyful goodbyes after the reception, Sam and Leah drove Sarah and Matt to catch a train to leave for their honeymoon, but Charli and I made it a point to stop by the Valentine's Dance that evening before we went home. After we were recognized, we headed out. \n\nA couple boys from down the road had taken care of the milking and farm chores that evening, so when we arrived, I picked Charli up out of the carriage and carried her inside, being careful to avoid bumping her head on the door jamb (one of Leah's favorite stories, though it embarrassed Sam to no end and really hadn't made her very happy at the time). The boys dealt with the horses and carriage, and then headed out, leaving us alone together. \n\n\"Welcome home, Charli,\" I said as I held her close to me. \"I love you.\"\n\n\"Our home, Jeremiah,\" she said looking up at me. \"And I love you, too.\"\n\nShe wiggled a bit, leading me to wonder what she was doing as I admired her d\u00e9colletage and cleavage. \n\nShe caught my eyes looking and grinned. \"Jeremiah, you'll see a lot more if you'll help me undo this thing.\" \n\nIt was only then that I realized she was trying to undo the corseted top of her wedding dress rather than tempt me. \n\n\"Turn around, dear, so I can see this in the light.\" I fumbled with the ties for a few moments before getting them undone. \n\n\"Loosen?\"\n\nMy fingers were against the closure panel rather than her skin as I loosened the laces, but I could feel her body heat through it. \n\n\"Looser,\" she said, \"or you'll be doing it all again.\" I followed her advice and watched as her top slowly freed itself from her body. Mary and Leah had offered to come out to help her out of her wedding dress and into something special from her trousseau, but Charli wouldn't hear of it. \n\n\"My husband will be all the help I'll need,\" she'd proclaimed and I was so glad she had. I was getting more excited with each loosened lace, each bit of newly visible skin. \n\nWhen I reached the midpoint and all was loose, I slipped by hands around my wife's lovely waist and pulled her behind tight against my hardness. \"That was the most exciting thing I've done in ages,\" I whispered to her. \n\n\"And the night is still young.\" Holding her top in place, she turned around and kissed me, letting it tip forward just a bit so I could get the briefest peek inside before she snapped it back and ran into the other room. \"No peeking!\" she called. \"Until later, anyway.\"\n\nI dimmed the lights in our room, giving us a gentle glow rather than darkness or bright light, before removing my suit and tie, leaving on my dress shirt and pants. \n\nCharli came out minutes later wearing a long white nightgown with lace trim that was cut low enough that it revealed the shape of her breasts and her form below, while really leaving it all to the imagination. Believe me, I was quite busy imagining. \n\n\"My God, you are beautiful,\" I whispered.\n\n\"Thank you, Jeremiah. I'm yours, my love.\"\n\nMost of the gown was a soft silk and feeling her warmth in my arms felt as if she had nothing on at all. She started unbuttoning my shirt as I kissed her neck and shoulders, dropping one thin strap past her shoulder onto her arm. \n\nShe was pushing my shirt off of me and then pulling my undershirt up over my head. She had it about half way off of me when she stopped and giggled, kissing my chest. With my arms over my head and unable to see her, I shucked it off and tossed it in the far corner before scooping her up in my arms. She put her arms around my neck as our lips came together, her hands roaming over my shoulders, chest, and into my hair. \n\nMoving to the bed, I gently lowered her down and watched as she unbuckled my belt and unbuttoned my pants. She pushed them down from the back, sliding her hands over my buttocks, and then watched as my cock came into view. She looked at it for what seemed to be several seconds before looking up at me with an appreciative grin and nodding. \n\n\"I plan to get to know this very, very well,\" she said as she ever-so-gently wrapped her hands around me. \"Jeremiah, please, let me know what feels good..\"\n\n\"Don't worry, sweetheart. That does, and we'll both know as we learn together.\" \n\nShe was still holding me with one hand and massaging gently as I lay down on the bed next to her and slid the other strap over her shoulder. I gave her many kisses as she lay back pushing her breasts upward. Giving the strap a gentle tug toward her elbow, I slowly revealed more and more of the top of her breast before her areola started coming into view. She was biting her lower lip as she watched my anticipation and reaction as her nipple slipped out of the silk. \n\nGentle kisses caused her nipple to harden as she gave a little moan. I concentrated on that spot for several seconds before she shifted, trying to pull down the other side of her gown. I helped and was soon splitting time between two lovely nipples as I gently massaged her soft breasts. Leah and Mary had given me hand conditioner and softener weeks earlier with instructions to use it on my callused hands daily. They'd also trimmed my nails neater than I'd ever seen them before. \n\n\"Believe us, Charli will appreciate it more than you can imagine when the time comes,\" they'd said, and now she was proving them right as she moved in response to my gentle touches.\n\n\"Don't stop touching me, Jeremiah. I want to feel your hands all over me.\"\n\nI explored with soft caresses and gentle massages until I found myself back at her breasts. Her eyes rolled back as I cupped both of her globes and concentrated once more on her nipples. \n\n\"Ooohhh!\" A few more kisses and my hands again roamed, this time sliding across her pubic mound. She caught my hand as it went across and laced her fingers into mine before pushing our hands down and thrusting her mound upward. She rocked it as she moved our hands, catching her clitoris as her head arched back again. The fabric was thin and she wore no underwear below it, so I reveled in the feel of her body, even as I used my other hand to slide the bottom of the gown upward. \n\nFeeling it get close, she pushed her legs together to hide all but the fine blonde hairs in her triangle and the start of the slit at the top of her sex. My raised eyebrow caused her to smile and slowly open her legs wide, revealing all. \n\nSmall circles to her little button were followed by kisses and caresses with my tongue while a finger rubbed her slot, which was soon wet with her anticipation. As I did, I delighted in her taste and her smell, wanting more than anything to please and pleasure her. It wasn't long before she was moaning softly with that pleasure and then she cried out. Her tears were of joy as she asked me to stop for a few moments and snuggled against me, our arms encircling each other. \n\n\"That was so...intense, Jeremiah. So good! Thank you, my love. Now, give me a few moments or I'll be screaming so loud I'll wake the neighbors.\" \n\nI laughed as I held her, since the nearest neighbors were over a half mile down the road. \"As long as you need, my dear.\" I held her and gave a number of soft kisses without trying to hit areas that would greatly excite her. \n\nShe smiled before kissing me again as she started massaging me and wiping my seeping fluid around the tip. \"Please be gentle at first, Jeremiah, for I've heard it sometimes hurts.\"\n\nI moved atop her, and her soft hands steered me into her sex. She winced and asked me to stop for a time, but relaxed and responded as I finally began to make sweet love to my dear wife for the first time.\n\n***\n\nValentine's Day, 1914\n\nOur house was quiet, for both of our boys, Bill, 19, and Chuck, 18, and their little sister, Sarah Ann, age 16, were attending the Valentine's Day Dance together for the first time. They would be joined by Matt and Sarah's girls, who'd come from Nashville for a visit, and several of their cousins from town. With plans to meet the others at the dance, Bill had driven our 1912 Stutz touring car to town with our group, so my dear Charli and I were home alone.\n\n\"Happy Valentine's Day, my love,\" she said as she slid into my lap. \n\n\"Happy Valentine's to you, too, my sweet, and thank you for being my Valentine forever,\" I replied as I put my arms around her. The kiss that followed was as good to me as our first so many years before.\n\nShe settled comfortably against me as we sat in silence, the only sound the tick tock of the clock on the mantle and our own breathing. Charli was never much for silence, though, so it wasn't long before she asked, \"Jeremiah, do you remember our first Valentine's dance?\"\n\n\"Charli, I've tried and tried to forget parts of that night for the past twenty-two years. I'm very blessed that you did.\"\n\n\"No, silly, not the night but the actual dance itself. You don't remember it because we never did dance, not a single one. Our second year, we got married that day, stopped by for the procession where they announced us, and we left.\"\n\n\"Yeah, I think we had more important things to do that night.\"\n\nShe giggled as she said, \"Quite true,\" and kissed me. \"Well, we never danced at that one either, and by the next year, I was pregnant with Bill and we didn't go. All those chances and we never danced a single Valentine's dance.\"\n\nSitting in my lap in the big chair, she put her head down on my shoulder with her arms around my neck. A tear soaked through my shirt and touched my skin, and I held her tighter. We'd danced any number of other times in other places, but I never realized that one most important dance had never happened.\n\nI felt tears in my eyes, too, as I thought of all she'd been through over the years, the struggles of a well-off, well-educated young lady giving up her career as a teacher to become a farmer's wife and mother, but we'd fought through it all together and come out stronger as a result. This, I knew, was for her. \n\n\"Hold tight,\" I said. \n\nShe gave a little squeak as I forced myself up from the chair with her in my arms. At 61, I wasn't as strong as I'd once been but I made it upright somehow, took three steps with her in my arms, and reached for the Victrola. With it already cranked, I started it and lowered Charli's legs to the floor as the music started. \n\n\"Dance with me, my love.\"\n\n\"Always and forever,\" she replied as I took her in my arms.\n\nAnd with the music playing softly, we danced.\n\nThe End \n\n***\n\nClosing Notes\n\nThanks so much for reading. I hope you've enjoyed it, and I'll appreciate any comments or favorites. Also, please don't forget to rate the story.\n\nRegarding the story, there are a number of little historical points, but I won't bore you with most except to add that while it's not as common today, men in the 1800s often married later in life after they could provide a comfortable living for their much younger spouses. That's fortunate for me since I wouldn't be here otherwise, having had at least one such documented ancestor who was over 25 years older than his wife and several others that were more than ten years older than their spouse."
    ],
    "authorname": "SouthernCrossfire",
    "tags": [
        "first time",
        "hardship",
        "historical",
        "late 1800s",
        "lingering love",
        "love",
        "mature",
        "may-december",
        "period piece",
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-valentines-dance"
}