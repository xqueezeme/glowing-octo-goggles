{
    "title": "The Work Colleague",
    "pages": [
        "An innocent conversation leads to a photo session and more.\n\nI hope enjoy this submission, let me know if you want more as it could well lead to further parts.\n\n*\n\nI had noticed her some time ago. \n\nA pretty girl, late 20's in age, with long wavy dark blond hair. Very slim with what looked like pert breasts and a tight compact rear; certainly when she was wearing nice tailored trousers. Of no particular consequence she was Russian. She was quiet and seemed to be on some kind of management training program; changing jobs every six months or so. Her name was Elena.\n\nWe had spoken a few times at the coffee machine and such like; \"Hi, how are you?\" type conversations. We got the same lift once and the conversation progressed to enquiries about holidays and she told me she was going away later in the year. I saw her get on the underground train once with a guy; the body language indicating he was more than a work colleague.\n\nThere was an after work drinks occasion one Friday because Karen, someone from work, was leaving. I was standing with a drink in my hand when I saw her standing in the corner, on her own, looking lost. \n\n\"Hello, you OK?\" I asked as I walked over to her.\n\n\"Yes,\" she smiled, looking relieved that someone acknowledged her and she was no longer on her own. \"There are loads of people here,\" she continued, looking around the room.\n\n\"Certainly are; how do you know Karen?\"\n\n\"Oh I worked with her a year or so ago,\" she replied.\n\n\"Would you like a drink?\" I asked, draining mine and seeing she didn't have one.\n\n\"Yes please, a glass of white wine.\"\n\n\"Coming up,\" I said, before fighting my way to the bar and eventually returning with two large glasses of white wine.\n\n\"Cheers!\" I said handing her a glass and raising mine to her.\n\n\"Cheers,\" she replied. \"Thank you.\"\n\nWe talked a bit about work and what she was currently doing. She asked what I did and how long I had been doing it; the conversation flowed and there were no embarrassing pauses.\n\nI asked her what she was doing at the weekend; she replied that she was tired and wanted to relax and take it easy. She asked me what my plans were and I said I was going on a photography course for the weekend. We then spent the next few minutes talking about photography a, subject that she seemed to be interested in.\n\n\"So what will you be taking pictures of?\" she asked.\n\n\"People\" I replied. \"It's a course on using studios, setting up lights and taking pictures of people. I believe there are some semi pro and amateur models that will pose for us.\"\n\n\"Sounds like fun,\" she smiled. She looked at her empty glass and smiled again. \"I have to say my goodbyes to Karen and go. Thanks for the drink and enjoy your course. Let me know how you get on. Bye!\"\n\n\"Goodbye,\" I replied as she put her glass down on a nearby table and went off to say her goodbyes and leave. Deciding to do the same, I said my goodbye to Karen and headed to the station and home.\n\nOn Monday, after a fantastic photography course, I bumped into Elena at the coffee machine.\n\n\"Hi!\" she smiled. \"How was your photography course?\"\n\n\"Great!\" I replied with genuine enthusiasm. \n\n\"So, did you learn how to take pictures of models? I assume they were clothed?\" she said with another smile.\n\n\"Most of the time,\" I teased. \n\n\"Naughty.\" \n\n\"No, not really. It was really tastefully done. Certainly not rude or pornographic. No seriously, all the models were clothed for our course. I believe they may remove some clothing at the next course!\"\n\n\"Oh.\" she said, \"I bet you would like that,\" she added smiling and looking at me to see if I would react.\n\nI laughed, partly through embarrassment, before saying: \"There are so many different types of photography and of course some involves the nude human body either explicitly or not.\"\n\nShe looked confused. \"I don't understand.\"\n\n\"Well, if you are talking about nudity in photography, there are loads of types of photography before you get to the nudes and loads afterwards. With nudity there is what is called artistic nude where the model is clearly nude, but the angles or the light protect, how shall I say it, the models modesty!\"\n\n\"I still don't understand, I'm sorry,\" she looked even more confused.\n\nI was wondering if she was genuinely confused or was teasing me and I was just about to explain further when someone joined us at the machine, and thinking it in-appropriate to talk about nudity in that environment, decided to change the subject. When the other person left I said; \"If you are really interested in the differences in photography, I can explain more over lunch or after work.\" As I said it I regretted it. Or did I?\n\n\"Great!\" she replied. \"I am actually interested in photography from both sides of the lens,\" she added. \"Shall we go for a drink after work?\"\n\nA flash of inspiration hit me. \"I'll tell you what. I could get some examples of modelling photography and show you. After all a picture paints a thousand words, I could do that tonight and we could meet tomorrow.\"\n\n\"OK,\" she smiled. \"Would it be easier to go through on a computer?\"\n\n\"I guess so.\" I answered.\n\n\"Then, let's go to my place after work tomorrow.\"\n\n\"Great idea; lets do that.\"\n\nWe went back to our respective desks and I pondered. What on earth had I got into here? I was now deep into discussing the relative differences in modelling levels with a young girl from work and was now going to her place as she knew the sort of things I would show her couldn't be done in public. Madness! However she seemed genuinely interested and why judge a book by its cover?\n\nThat night I spent a few hours downloading pictures from the net and saving them in folders depending on the genre. I hesitated on the wilder categories that were, frankly, pornographic, but thought I could bluff my way through what I had and at the end of the day, she didn't have to look!\n\nWith the pictures saved onto a disk, a folder for each category, I was looking forward to seeing Elena and discussing the different styles. \n\nWith a distant hope that I might be able to persuade her to model for me, I packed my camera and a selection of lenses.\n\nWe saw each other the next day and arranged to meet in the works reception at 5.30pm.\n\nElena was already there when I got to the reception area, smiling at me as I approached her.\n\n\"OK?\" I asked.\n\n\"Fine,\" she replied. \"I'm looking forward to this. I love talking about photography and so on. My place is only two stops on the tube and my flat mate is out so we have the place to ourselves.\"\n\nI didn't know how to respond. A rather lame; \"OK good,\" was the best I could muster.\n\nWe were soon at her flat and as we entered, she asked if I would like a drink and if I minded waiting while she changed. \n\nShe soon reappeared with a glass of wine and was now dressed in an old pair of jeans and a sweatshirt. \n\nShe pointed to a PC in the corner. \"I'll order some pizza while you get set up is that OK?\"\n\nSet up, what did she expect? I wondered.\n\nI turned the PC on and put the disk in.\n\nShe came and sat next to me, leaning in close to see the monitor.\n\n\"Pizza will be 30 minutes,\" she said, \"now let's see what you were trying to explain to me.\"\n\n\"OK,\" I said. \"If I remember you assumed any photography involving lack of clothes was, er, naughty\"\n\n\"Yes,\" she replied, \"I guess that's a good summary.\" \n\n\"Well,\" I continued. \"What we were taught was that there were numerous categories of modelling and prior to undertaking a shoot the photographer and model should agree what categories would be covered and that both were OK with it. Clearly both photographers and models have their own specialities or areas of expertise or will not do certain types of photography.\"\n\n\"So a topless model would not be willing to be totally nude?\" she asked.\n\n\"Exactly,\" I said, smiling at her. \"The guy running the course said what I will show you are the most common categories, although obviously different people and countries refer to them slightly differently.\"\n\nI then opened the disk to show a number of different folders.\n\n\"So these are the categories he uses\" I moved the mouse so the pointer hovered over each folder as I read them out; \"Fashion, Swimsuit, Lingerie, Topless, Artistic Nude, Nude, UK Magazine, US Magazine, Girl/Girl, Girl / Boy.\"\n\n\"That makes a bit more sense now,\" she said as I opened the fashion folder.\n\nWe went through half a dozen standard fashion shots I had taken from the internet.\n\n\"That's fairly self explanatory\" Elena said, \"So swimsuit is also simple to understand\" as I opened the folder and quickly showed another half a dozen standard shots of girls wearing swimsuits.\n\nI opened the Lingerie folder. \"They are nice,\" Elena said as I went through the pictures. \n\n\"Yes, I would love to be able to take pictures like that.\" I said.\n\n\"The topless ones must be like page 3\" Elena said. \n\n\"Yes,\" I replied opening the folder to show another half a dozen or so pictures taken form the web the previous night. \"Just like the ones in the tabloid papers!\" I laughed.\n\n\"That's fantastic,\" Elena exclaimed as the last picture appeared on the screen. \"Look at her nipples, they are rock hard!\"\n\n\"Er, yes,\" I said not knowing what else to say.\n\n\"I bet they used ice to make them that hard.\" She said.\n\n\"I guess so.\"\n\n\"Can you make the picture bigger?\" she asked. \n\nI did as asked. \n\n\"Definitely,\" she said looking at the nipples that now nearly filled the screen.\n\nThere was a knock on the door. \"It must be the pizza\" she said standing up and going to the door.\n\nI took stock on what was turning into an amazing evening. Here I was with a virtual stranger discussing the size and hardness of a woman's nipples. My thoughts were interrupted by Elena.\n\n\"Let's eat and then carry on.\"\n\nAs we ate I said. \"So you get the idea, the rest of the categories describe what type of photography and modelling takes place until you get to the last few which most people would categorise as pornographic.\" \n\nI hoped that maybe we wouldn't have to go through the other folders as I would either get embarrassed or turned on or both. Last night had been fun getting the pictures, but now, going through them with Elena was somewhat more difficult and embarrassing than I had imagined. I also knew some of the pictures in the other categories were explicit, to some shocking, but certainly very erotic.\n\n\"Yes, but I would still like to see them, I am especially interested in the difference between artistic nude and nude.\"\n\nFinishing the food, she poured some more wine for both of us. \"Come on,\" she urged. \"Let's keep going.\"\n\nI sat down and was it my imagination or was she now sitting even closer to me looking at the monitor?\n\n\"This is artistic nude\" I said as I opened the folder. I talked as I went through the pictures. \"You will see that most if not all the body is nude, but shadows or angles ensure nothing, er, private is shown.\"\n\n\"I see,\" she said engrossed by the pictures. \"There may be a hint of a nipple, but no pubic hair, no pussy's at all,\" she added as the pictures were shown again.\n\nI closed the folder. \"And this is nude.\" \n\nI slowly flicked through the pictures. Neither of us spoke. When I had finished showing the pictures I went through them again. \"Here nothing is hidden.\"\n\n\"I see,\" she said. She leant in and was now touching my arm with her breasts. \"So some are hairy, some trimmed and some totally shaved,\" she added. \n\n\"Yes, and as you will see when we go to the next category, they are still keeping parts of their body secret, there are no, what I call, gynaecological shots.\" I laughed, partly through embarrassment.\n\nI opened the next folder. \"UK Magazine was explained to me as the sort of photo that could appear in a top shelf magazine in newsagent.\"\n\nI went through the pictures of girls with their legs apart, simulating touching themselves, nearly all shaved or with very trimmed pussy's.\n\n\"God, yes!\" she said. \"I see the difference.\"\n\n\"With US magazine,\" I said, closing the UK Magazine folder and opening the US one, \"the photos are more explicit again. \n\nElena was again transfixed as pictures of girls opening themselves up flitted across the screen, followed by pictures of girls masturbating, girls feigning orgasms, and making sure no part of their anatomy was hidden, making sure it was there to be seen by the all seeing eye of the camera lens.\n\n\"As you say, the gynaecological shots,\" Elena said, here eyes glued to the screen. \"Stop, you can see how turned on she is, look at her clit and wet pussy.\" \n\nI stopped as the screen was filled by a clearly turned on woman showing everything and ensuring nothing remained secret.\n\n\"What's next?\" Elena asked taking a deep breath. \n\nWas she getting turned on I wondered. I looked at her briefly; she was looking a bit flushed.\n\nI opened the next folder. \"Girl / Girl,\" I said. \n\nPictures of girls playing with each other filled the screen; using fingers, tongues and toys on each other. I clicked through each picture, virtually certain now that Elena was getting turned on as her breathing seemed laboured.\n\nI closed the folder. \"Girl / Boy,\" I said opening the folder. \n\nI clicked through the pictures. Blow jobs, hand jobs, men licking pussies, vaginal penetration, anal penetration, 3-somes. Elena was silent as she took it all in.\n\nBreaking the silence, I said. \"I didn't go to the next stage, the fetish stuff, BDSM, water sports and that. That stuff to me is real pornography and isn't anything to do with the art of photography. In my humble opinion anyway,\" I smiled looking at her.\n\nThe pictures were changing automatically now. She looked from the monitor to me. \"That was amazing. What's your favourite?\"\n\n\"I should be so lucky to have done any to have a favourite!\" I sighed.\n\n\"But, what about at the weekend?\"\n\n\"We did some shots with models that were somewhere between fashion and swimwear.\"\n\n\"What sort would you like to take if you had the chance?\"\n\nI paused. \"I like artistic nude and nude but I also believe you can make the magazine style shots tasteful too.\"\n\n\"Will you ever be able to take some pictures like that?\" she asked.\n\n\"I don't know, I need a model!\" I laughed.\n\n\"Would I do?\" she asked sheepishly.\n\n\"Are you serious?\" I asked, amazed at her response but secretly delighted.\n\n\"Yes, if you want, I would.\"\n\n\"You would be fantastic,\" I stuttered not believing my luck. Was this really happening to me? Was I really going to be taking erotic pictures of her? Seeing her in all her glory?\n\n\"Good,\" she said, now deep in thought. \"I see you brought your camera,\" she looked down at the bag, \"shall we see what we can do now, even without lights and a studio and whatever?\"\n\n\"Ok, lets!\" I replied, hoping she wouldn't change her mind and still not sure this was actually happening. \n\nTaking the initiative, she stood up. \"Lets use my room for the pictures; you prepare it as you want and I will have a shower and get ready,\" she said, pointing to her room.\n\nAs she wondered off to take a shower, I went into her room. It was tidy with a double bed in the middle. I turned on the two bedside lights and rearranged some clutter that was on the side. I then got my camera out and changed lenses, adjusted the speed settings and colour balance and made sure the battery was fully charged.\n\nElena appeared, dressed in a bath robe, her hair freshly brushed. \"Can I put some make up on?\" she asked.\n\n\"Yes, of course.\"\n\nShe sat down at her vanity unit and as she applied some light make up I couldn't help notice the expanse of thigh as the robe rose and looking up, I saw it gaped to show just a hint of a breast.\n\nShe soon finished and stood up and faced me. \"How would you like me?\" she said, seemingly more in control than I felt.\n\nTaking a deep breath I said. \"Why don't we start with you on the bed, on your knees facing me?\"\n\n\"With the robe on?\"\n\n\"Yes, to start with,\" I replied.\n\nShe did as she was asked and smiled and moved her head and hands as I asked. \n\n\"Open you legs a bit,\" I said. \n\nAs she did the robe gaped showing her thighs. \n\n\"Loosen the belt.\"\n\nShe did and the robe gaped open to show the first sight I had of her pussy, trimmed but still bushy. Her pubic bush the same colour as her hair.\n\n\"Ok, open the robe a bit more and let it hang off your shoulders.\"\n\nHer breasts were now on show, small but pert as I expected. The nipples were hard and erect; a dark red colour.\n\n\"Cover your breasts with your arm and your pussy with your hand. Pretend you're embarrassed.\"\n\n\"How do you know I am not?\" she smiled, doing as I asked.\n\nI clicked away, taking picture after picture, getting her to move her hands a bit higher, a bit lower, exposing a nipple, exposing a breast.\n\n\"Ok, take the robe off and put both hands behind your head.\"\n\nWithout hesitation she did as I asked. Again I took picture after picture as she moved and posed as requested. Her entire body exposed to me and my camera.\n\n\"Now lie down, keep your legs together and curl up into a ball.\"\n\nThe camera buzzed to indicate the memory card was full.\n\n\"Let's take a rest.\" I said as I looked at her lying on the bed. She made no attempt to cover herself up, but sat up and sat with her legs to one side.\n\n\"Are you OK, are you enjoying it?\" she asked.\n\n\"Yes, very much,\" I said as I changed memory card. \"Are you OK?\"\n\n\"Mmmmmmmmm, yes!\" she replied. \"Its fun and a bit of a turn on,\" she added sheepishly.\n\n\"Right, what do you want to do next?\" I asked. \n\n\"I guess we have been doing nude and artistic nude,\" Elena answered. \"I am OK with some magazine stuff if you like?\"\n\n\"Yes, that would be good. Let's do it!\" I smiled at her.\n\nI thought for a moment. \n\n\"Sit up and raise one leg up so it's bent at the knee and the foot on the bed, and keep the other flat on the bed.\"\n\nShe looked confused. \n\n\"Like this,\" I said as I went towards her and, gently touching her leg, got it into the position I wanted. For the first time it showed her pussy with her legs apart. I could see that she was slightly turned on. Her lips were moist and her hole there to be seen, slightly open due to the angle of her legs; just as I wanted.\n\n\"Lovely,\" I said as I resumed taking pictures, zooming in and out.\n\n\"Touch your nipples, yes, great. Touch your pussy. Oh yes!\" I said as I took picture after picture.\n\n\"Right, now lie down and keeping you legs apart, raise the left one at the knee again.\"\n\nShe did as I asked.\n\n\"Perfect, brilliant.\"\n\nI could really see her arousal. \n\n\"Put your finger in.\" I said, barely able to speak.\n\nShe did exactly that. \n\n\"Put it in and out.\"\n\nShe was fingering herself in front of me. \n\n\"Ok stop now.\"\n\n\"Oh, that's a shame,\" she whispered, her arousal clear. \n\nIgnoring her I asked her to turn over onto all fours. \n\n\"Fantastic\" I exclaimed seeing her with on her hands and knees, her legs slightly apart showing her self and exposing her bum for the first time..\n\n\"Look at me.\" \n\nShe looked over her shoulder.\n\n\"Stroke your bum cheeks.\"\n\nI was in heaven. I had a beautiful lady doing as I asked and turning herself on as she was doing it, and I was aware of my sexual arousal too.\n\n\"Finger yourself.\"\n\nShe did and I heard her moan as she entered her now very wet hole with her finger.\n\n\"Ok, sit down and face me. Legs apart and open yourself up for me.\"\n\nWithout hesitation she did. I crouched down and took pictures of her open and very wet pussy, her fingers opening it up.\n\n\"Put a finger inside. Now lick it, pretend it's a prick.\"\n\nShe put the wet finger in her mouth and licked it as I had asked. She must give great blow jobs I thought immediately as she licked and sucked her finger.\n\n\"Put it back inside you.\"\n\nAs I took another shot the camera indicated the card was full, and I knew I didn't have another one.",
        "\"Sorry,\" I said. \"No more pictures. The cards are full.\"\n\n\"Oh that's a shame.\" She sighed sitting up and crossing her legs but making no attempt to cover her nudity. \"Can we look at them?\"\n\n\"Normally I would say no as I should delete the crap ones before anyone sees them, but if you don't mind, we could delete the crap ones together.\"\n\n\"OK, lets.\"\n\nI took the cards and walked out of room back to the PC.\n\nShe soon followed, having now covered her self with the robe.\n\nShe sat beside me with her legs crossed, showing a vast expanse of flesh. The top was also gaping allowing me unhindered views of her breasts. Despite having seen her totally naked only minutes previously, this was still a real turn on.\n\nWe went through the first card quickly, deleting about a quarter of the pictures. I was very pleased with the outcome.\n\nLooking at the next card, it was clear that the more explicit pictures were having an effect on both of us. She leant in to take a closer look. The robe opened even further and she had to uncross her legs to get comfortable.\n\n\"These pictures are great,\" she said, making no attempt to cover herself. I looked at her legs; I glanced up to her thighs and up to her exposed breasts. I looked up to her face. She was looking at me. \"Are you pleased with them?\"\n\n\"Very,\" I said. \"For a first time, they are superb.\"\n\nShe touched my arm. \"I was really turned on,\" she said looking down, embarrassed.\n\n\"Me too,\" I said. \n\nShe stood up; \"Let's go to my room, we have to do something.\"\n\nShe took my hand and led me to her room. \n\n\"I have a boy friend,\" she said almost reluctantly, \"so I wont have sex with you, but I think we both need to relieve some tension.\"\n\nI nodded.\n\nShe removed her robe. \"I want to see you play with yourself. Do you want to see me play with myself?\" she asked.\n\nAgain, I nodded.\n\nShe lay down, resting on her elbows and opened her legs and lazily started to stroke and finger her wet pussy. I could hear the wetness as she fingered herself. I could hear her moan.\n\n\"Take you clothes off,\" she said huskily. \"I want to see you play with yourself.\"\n\nWithout taking my eyes off her playing and probing fingers I did as she asked.\n\nMy hard erect prick stood out. \"Stroke it.\"\n\nI did, with my eyes still fixed on her open legs as she played. Her movements were getting more agitated. Her breathing heavier as her arousal increased.\n\nI was stroking my prick as she urged me on. \n\n\"I am cumming!\" she cried. \"Oh yes, yes!\" she shouted as she froze all movements; her orgasm consuming her every thought and movement.\n\nI too was close.\n\n\"Me too!\" I said. My teeth gritted as I tried to prolong the sensations.\n\n\"Cum on my tits,\" she said sitting up.\n\nI was not going to question her.\n\nI rubbed and stroked myself towards my own climax and cried out as the first jet of jism shot out of my prick onto her chest.\n\n\"Yes,\" she cried, not flinching as jet after jet covered her breasts.\n\nDrained I stopped my masturbation and looking for a tissue to wipe up the last bits of my sperm, she, as if reading my mind, reached out and wiped the end of my prick with her fingers and gently stroked it, before putting her fingers in her mouth and sucked them dry.\n\nI looked at her. \"That was amazing.\"\n\nShe nodded. \"Very, I just couldn't have sex with you. Sorry.\"\n\n\"I understand. Don't apologise.\"\n\nShe smiled and stood up, pecking me on the cheek. \"Thanks.\" \n\nI gently stroked her arm.\n\nShe put her robe on and left the room. I got dressed and joined her in the lounge.\n\n\"Can we do some more photography some time?\" she asked, looking at the pictures on the PC as they went through a screen show.\n\nI nodded. \"I would love to. We should think about what we want, different poses and so on.\"\n\n\"I agree,\" she said. \"And we should take some of you too.\"\n\nI laughed, \"I'm not sure of that!\" \n\n\"Why not, from what I just saw your look great and that,\" she pointed to my groin, \"is very photogenic,\" she smiled. \n\n\"Well thank you.\" I replied. \n\n\"I had better go now,\" I said gathering my stuff. \"Shall we try and do some more next week?\"\n\n\"Perfect,\" she replied. \"Until then, I'll see you in the office.\"\n\n\"Fully clothed.\" I smiled.\n\n\"Yes,\" she smiled. \"Fully clothed and not aroused!\" she added looking at my groin area."
    ],
    "authorname": "WilliamShakespear",
    "tags": [
        "photography",
        "masturbation",
        "couples"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-work-colleague"
}