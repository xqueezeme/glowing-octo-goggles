{
    "title": "Agent in Distress Ch. 07",
    "pages": [
        "I woke up several hours later feeling tense and overheated. I'd had an intense and sexual dream; the details were vague, but the sensations had seemed so real. I gasped suddenly, feeling something warm and wet on my nipple. I threw off the covers to look at myself, but I was still wearing my pajamas, and the red bra underneath. Then I felt it again, like a suckling on my tender flesh, and I shivered at the intense jolt of pleasure it sent down between my legs, where I realized I already felt a burning desire that was making my breathing labored and raspy. Then the feelings were on my other breast, moving about the curves of my soft mound and then settling on the nipple. I realized it felt like someone was using his mouth on my breasts, and I moaned out loud, my body jarred by the delicious sensations. Since I'd never let anyone kiss my breasts, I could only guess this was what it felt like, and I couldn't believe Victor's special bra could feel so real.\n\nThe kissing, licking and sucking sensations felt so good I decided to try to relax and just enjoy it. I placed my hands behind my back and imagined Victor had tied me up and was kissing my breasts. In just a minute or two, I felt another orgasm coming. My hands came back around to grasp my pillow tightly as I felt the wave building inside me, my breaths coming short and desperate. The wave was building up and almost about to crest when the sensations suddenly stopped. Nothing at all, it was as if my special bra had turned itself off. Desperate to finish the job, I reached down between my legs and began rubbing myself. It didn't feel nearly as good, but it was working, as I felt my orgasm building up again. At the same point, so close to an orgasm, suddenly something changed, and I could no longer feel my fingers through my panties. I tried harder, but it was as if the material had suddenly turned to stone or steel - I could feel only a pressure from my fingers, not enough to feel much pleasure.\n\nVictor's special panties were starting to annoy me. With a frustrated groan, I moved my hand to my belly and slid my fingers inside my panties. Then I cried out and jumped as I felt a shock, in my fingers and my crotch area, a terrible and frightening feeling. The damned thing had shocked me! I didn't dare try that again. Then just as suddenly as they'd stopped, the mouth sensations on my breasts resumed, and I gasped, quickly reminded of how pleasurable the bra was when it was working. Thinking it must have a software bug or something, I let the pleasure build inside me, tensing up again as the wave quickly began building. I stretched out on the bed, clutching my pillow and filled with anticipation as my orgasm approached. And like before, it stopped before I could cum. Now I knew it was intentional, and I was beyond frustrated. I tried touching my breasts, and the same thing happened, I could tease myself close to cumming, but then the material would somehow strengthen and isolate my sensitive flesh from my touches.\n\nAt that moment, I noticed my communications device on the bedside table was blinking. I reached over and saw a message. It was from Victor.\n\nVictor: You've been a bad girl. \n\nI stiffened. The message had been sent several hours ago. Had he triggered some strange mode in the panties to punish me? And for what? Then I remembered, that the brochure said he could remote monitor me. He must have seen that I had masturbated myself to three orgasms! Oh god, don't let it be that! I thought. I doubted he was still awake at 1:00 in the morning, but I quickly sent him back a message:\n\nLana: I'm sorry, I won't do it again!\n\nI wasn't sure admitting guilt was such a good idea, but denying it probably wasn't going to help either. Then I jumped in surprise as a message shot back.\n\nVictor: No, you won't, because it won't let you.\n\nAfter reading that, I was nervously chewing on a nail. What did he mean by that? Was 'it' the lingerie? It certainly wasn't stopping me from masturbating. My eyes widened in fear. It was stopping me from masturbating myself to orgasm, that's what he meant! I typed furiously.\n\nLana: Please turn it off, I promise I won't do it again! \n\nVictor: Go back to sleep, you have a big day tomorrow.\n\nAfter that, there were no more messages, and with the special lingerie dormant, I decided to go back to sleep, since I did have my dance exam in the morning. It took some time to get back to sleep, for I couldn't stop thinking about Victor, monitoring me on his computer, knowing what I was doing. But eventually my eyes started to droop, and the arousal in my body eased enough that I started to nod off. Just as I slipped into unconsciousness, I jumped at the distinct sensation of a finger down on the fleshy part where my inner thigh met my abdomen. It felt so real I had to look to make sure I was alone. Not seeing anyone in my room didn't assuage my nervousness, because it sure felt like someone was there, touching me intimately. The finger sensation was moving, lower, then it trailed up between my shockingly wet petals, and I jerked when it touched my clit. I gasped as the finger began to slowly circle my clit, and my thighs closed tightly, but of course that had no effect on the finger. I rolled onto my belly, pressing my hips into the bed, but that had no effect either, as the finger continued its slow caress of the contours of my womanhood. The sensation was just bearable, until it returned to my clit, and then it became too much for me, making me squirm about, trying to escape the invisible finger. I felt my insides clench again at the powerful rush of pleasure, and then the finger moved off my clit and went back to gently tracing the outline of my puffy, moist opening. That slow back and forth motion felt wonderful, and addictive, and after a minute, I wasn't trying to escape anymore. I craved more, so I used my hand to press down on the outside of my panties. To my shock, the material smoothly gave way, and my fingers went inside me, making me gasp and jerk my hand away in shock.\n\nI remembered the brochure, which mentioned the special material allowing a depth of 20mm. Now I could guess what it meant. Tentatively, I pushed against the red material again, surprised to feel it give easily, allowing my finger to push deeply inside my pussy. In fact, I could barely feel the material, it felt like my finger was directly pushing into my flesh. I decided this was my new favorite feature of Victor's gift, and I pushed my finger as far as it would go, working myself with vigor. I added a second finger, and quickly felt an orgasm building again. I moaned into my pillow, working my fingers faster, bringing the orgasm to a crescendo. Suddenly my fingers would no longer go in, and I pushed on the panties, but they'd turned hard and impervious to touches again.\n\n\"No!\" I groaned, stuck precariously on the cliff of a shuddering orgasm. It was too cruel! Frantic, I tried to insert my hand under the panties and nearly screamed at the punishing electric shock. \"Victor, you . . .!\" I moaned in frustration. My fingers were no longer effective, but I could still feel the artificial finger, gently tracing my over-sensitized petals and curves, keeping me aroused but unsatisfied. It was maddening, I thought, as the finger started focusing on my clit, rekindling my heat. I bit my lip, unwilling to fall for it again, but my body was eagerly responding, oblivious to the trap. \"Oh god,\" I moaned, the merciless finger building another orgasm inside me, which I knew was only a tease. Finally, I couldn't resist, sticking my fingers deep inside me. I furiously stroked my fingers deeply and frantically, thinking maybe if I was fast I could beat the system.\n\n\"Not again!\" I moaned helplessly, panting near exhaustion as I was left high and wet yet again. I squirmed on the bed, pushing different places on my panties, trying anything to move me the short distance I needed, but to no avail. It was smarter than me, I simply couldn't win. I couldn't fathom why Victor wanted to do this to me, but it was the most maddening of punishments imaginable. \"Please, no more,\" I murmured into my pillow as I felt the finger stroking my clit again, restarting the cycle. I reached for my comm device again, typing with trembling fingers.\n\nLana: Victor, what are you doing to me?\n\nThere was no answer - he'd probably gone to sleep. Oh god, what if he left the device in some mode, and it was going to torment me all night like that? I felt the orgasm coming again, and I fought with myself to keep from touching myself, and falling for the trap again. Even though I didn't touch myself, the invisible finger continued without me, driving me closer and closer until I cried out, my body tensing. \"Ahhh, no!\" I cried, denied again. I felt almost feverish, brought to near climax and back, a pink haze filling my mind. I half thought of going to Victor's house in the middle of the night, but I wasn't sure I could even walk. Nor did I want him to see me in this state. Suddenly my device blinked.\n\nVictor: Naughty girls must be punished. \n\nI groaned, his words somehow making my need stronger. The finger only gave me rest when I was too close to cumming, before it resumed tormenting me. I felt so wet down there I was afraid to touch myself, and I certainly didn't want to be shocked again. As the panties brought me close to orgasm for the fourth time (or was it five?), I tried to think of how to get Victor to stop teasing me. I didn't know what he wanted from me? Sex? If he were in my dorm room right now, what would I do? I shivered involuntarily, unsure if I could resist my charming instructor at that moment, with all that pent-up desire driving me mad. I sucked in a deep breath and typed out a message.\n\nLana: Victor, if I come over now, will you remove--\n\nI suddenly paused. Did I really want him to remove the lingerie? They'd given me the most intense orgasms of my life! But I wasn't in control, and Victor was showing me how they could be torture as well as pleasure. I wanted a set of my own, not one that Victor had the keys to. I continued the message.\n\nLana: Victor, if I come over now, will you remove your gift? I think I've had enough. \n\nThere, it was a clear no without being rude. I was telling him it was time to stop. He'd have to remove them now.\n\nVictor: I'll decide when you've had enough. \n\nI tensed in alarm. Maybe my message wasn't clear enough. Boys my age were like that, they had trouble understanding no. Maybe men like Victor were the same?\n\nLana: I want you to remove them now! You have no right to make me wear them. \n\nThere -- that ought to scare him into stopping. I held my breath, waiting, wondering, worried he would be disappointed in me, but I had to regain control of the situation. Suddenly I gasped, dropping my device on the bed. Something was inserting itself into my bottom - it was the strangest, most uncomfortable thing I could imagine, and I arched my back, my hands flying to my ass. It felt like a finger, or something, was pushing itself slowly into my anus. I jammed my hands inside my panties to pull it out, and was rewarded with a shock, which not only hit my hands, but seemed to resonate inside whatever was inside my bottom. I fell backwards with a cry of pain, my hips lifting off the bed as if to escape the intrusion. And then just like that, it retreated, leaving me panting and breathless on the bed. Victor's gift had gone from pleasure, to torment, to downright terror. I lay on the bed, every muscle tense, fearful of another intrusion.\n\nVictor: You will speak to me with respect, Miss Torina. \n\nI scrambled with fumbling fingers to type into my device.<br ><br >Lana: Yes, sir, I'm sorry! \n\nThe anal intrusion had erased all thoughts of making him stop. I didn't want to ever experience that again. I'd eagerly show him respect if it meant not getting that artificial finger in my ass.\n\nVictor: I will decide when you've had enough. \n\nLana: Yes, sir! \n\nVictor: That's better. Now I'm going back to sleep, do not wake me again.\n\nI put down the device. The shame of being so obedient was an acceptable tradeoff to not be in constant fear of the damned thing's anal mode, or whatever that had been. Then I stopped myself. Why had I given in so easily? I couldn't believe my clear no had been ignored by Victor. And why did that make me so excited? Victor had all the power, that should make me angry or concerned, but instead it was turning me on. Maybe he knew I wouldn't report him, that the thought of him getting fired was too much for me? Was he reading my mind? I shuddered, thinking of all the shameful things he might be reading.\n\nAs the minutes went by, and my body came down from its high, I slowly began to relax, but was ever wary of the panties. I was a little scared of them now, knowing what they could do if I disobeyed. But nothing happened, and eventually I drifted off to sleep.\n\nMy alarm went off, bringing me abruptly out of an intense dream. My body's overwhelming heat hit me at once -- my breasts felt swollen and tender, and my crotch felt wet and sticky. Victor's lingerie must have been teasing me while I slept! I quickly ran to the shower, both to clean up and to relieve the tension with the delicious water jets. I held the nozzle pointed at my panties, my thighs jerking as the water jets ignited a gush of pleasurable sensations. I placed my free hand against the shower wall, worried I'd be unable to stand, my legs trembling as the pleasure built up quickly. \"Oh god,\" I moaned, delighted at the sensations. To keep from coming too quickly, I switched to spraying my breasts, but even that was too much, and my orgasm began to coalesce, making me arch my back, my face now pressed against the cool shower wall. And then it all stopped, the water no longer igniting the feelings and the bra turning hard and impervious to the touch.\n\n\"No, you can't!\" I wailed, furiously rubbing my panties. The dull sensation simply wasn't enough to keep my orgasm from slowly slipping from my grasp. Incredibly frustrated, I quickly finished showering, and by the time I was toweling off, the lingerie was no longer impervious, for I could feel the rubbing of the soft towel through my bra and panties. I resisted the temptation to keep rubbing the towel on myself, and instead went straight to my comm device. It was blinking already.\n\nVictor: If you want it, you must earn it.\n\nMy breath caught in my throat.\n\n<br >Lana: How?\n\nVictor: Come to my place tonight, I will show you.\n\nI gasped. There it was. He was going to . . . what? What would he do? Make love to me? Then I stiffened.\n\nLana: I can't wear this all day, I have classes! I have a test!\n\nVictor: Then you had better be a good girl.\n\nI bit my lip, unsure what that meant. Be a good girl in class? Of course I'd do that. Then I remembered what he'd said, about how I needed humility. That's why he'd turned the thing on during my martial arts class.\n\nLana: I'll be a good girl, I've learned my lesson. \n\nVictor: Good. I have more lessons to give you. \n\nI gasped, my hand going to my open mouth. My body ached suddenly.\n\nLana: What lessons??\n\nVictor: You're late for your dance class.\n\nDamnit! I'd lost track of time. In a flurry of activity, I did my hair, put on some lipstick, the only makeup I usually wore, and dressed in my leotard, then remembered it was the midterm, so I ran to my closet, sorting through my dance dresses to find one that would be sure to conceal the red lingerie. I picked a pretty red dress that I'd worn at a previous competition and threw it on, grabbed the matching dance shoes and then rushed out the door, stuffing the shoes into my school bag on the way.\n\nThe mid-term wasn't in the usual studio but at a larger hall that was used for performances. I was a little late but luckily, I wasn't first to perform so I went backstage and changed into my shoes and went over the routine in my head. For the mid-term, we were supposed to perform a solo as well as a group number as a class. As I waited my turn, I went to the edge of the stage to look out toward where an audience would be if it were a real performance. My instructor Mira was there, watching one of the students perform her solo. Behind her were some family members and friends who'd come to watch. My eyes narrowed suddenly. Victor! He was in the audience. I felt a thrill, elated that he'd come to watch me. Then almost immediately my stomach dropped. What if he was here to activate his gift?\n\nI quickly dashed to my school bag, pulling out my comm device to type Victor a message.\n\nLana: You're here! \n\nVictor: Wouldn't miss it. \n\nI hesitated a long moment before typing the next message. I didn't want to anger him, but I had to know.\n\n<br >Lana: Please don't turn on your gift, I need to pass this test! \n\nVictor: You need to pass my tests also. Stop messaging and get ready.\n\nOh no, what did that mean? I stuffed my device back in my bag, suddenly nervous. I dashed back to the stage, thinking it was my turn, but it wasn't, I was still fourth in line, it would be a while. So why had Victor said, 'get ready?'\n\nThen I gasped, as I registered soft kisses on my breasts, both at the same time. Oh no, Victor, I groaned silently. With my arms protectively across my chest, I moved to find a quiet place backstage where no one could see me acting strangely. My whole body felt tight as the kisses moved to my nipples, making me bite my lip. I always got nervous before a dance performance, but this was different, and far worse. With those moms and dads in the audience, the possibilities for humiliation were endless. I couldn't dance like this! I choked on a gasp as the kisses changed to gentle sucking, and then I made a soft yelp when it felt like teeth gently nipping my swelling buds. I stood there helplessly, clutching my arms about myself, my legs crossed tightly as I watched to make sure no one could see me. Despite me nervousness and anxiety, my body was heating up, off on its merry way toward an orgasm.\n\n\"Gahh!\" I gasped suddenly as the familiar finger began moving down inside my panties. No, not at the same time, I thought! I shook my head, but the finger continued with its exploration, wandering about as if searching for something. It found my clitoris, making my thighs clench tightly as it began to tease the tiny bud into erectness. Oh god, it's going to make me cum, I thought. But it didn't, leaving my clit alone and going back to slow exploration of my hairless pussy. The performing student was finishing to a round of applause, followed by comments from our instructor, and then the next student began his solo, all the while Victor's lingerie continued teasing me, bringing me close to orgasm without letting me find the satisfaction of release. By the end of the next student's performance, I was squatting down in my hiding place, no longer able to stand. I wanted to go to my bag and message Victor, beg him to stop, but there were too many students out there where I'd left my bag. I barely heard the clapping as the boy finished his solo, as I was too captivated by the swirling, rubbing finger tormenting my soaked pussy. I suffered through the next girl's performance, the sexy music she'd selected only adding to my misery. I was going to fail the class; how would I ever explain it to my instructor?\n\n\"Lana, you're up next, where are you?\" came a stage whisper. Suddenly the sensations stopped, and I tentatively stood. Was Victor giving me a reprieve while I performed? I stretched my sore limbs a bit, and still the lingerie was dormant. Yes, he was going to let me perform without it, I wanted to kiss him! I dashed to the organizer, who shooed me out onto the stage, where I smiled at the audience as I hustled to the starting position. My body still felt overheated and aroused, and I hoped it wasn't obvious to the audience. I saw Victor out in the audience, and my body seemed to flare up in reaponse. I tried to focus, reaching my starting position and crouching down. The music started, and I began to dance, leaping into the air and starting my routine. My contemporary style was always on the sexy side, but somehow as I moved about the stage, I got caught up in the music, and my own arousal found an outlet in my dance. As I performed, I heard gasps from the audience, but that wasn't unusual, and I ignored it, focusing on my steps and the music. My face felt hot and my body ripe, and it was difficult to focus, but I'd practiced it so much that I could do the routine blindfolded. I nearly tripped when the thought of performing aroused and blindfolded caused a twinge of pleasure between my legs. I struggled a bit near the end, sucking air with heaving breaths and straining to focus, but I finished, collapsing on the floor, which was part of the routine, though it was a relief to do so. I felt so wet inside my panties, that I got to my feet quicker than I should have, worried someone might see something. I bowed to my instructor and the audience, my face feeling flushed, and quickly started to hurry off the stage, then remembered I should wait for my instructor's comments.",
        "When I saw her walking toward me, I was suddenly worried. Usually she just spoke from where she was standing. She hadn't approached any of the other students, was she upset? I smiled shyly as she came and stood close to me, motioning me to kneel at the edge of the stage. She leaned in so no one could hear her.\n\n\"Lana, that was . . . different,\" she said, her expression worrying me. <br ><br >\"I'm sorry, Mira\u2014\", I started, but she held up her hand to silence me.\n\n\"That was too . . . naughty for this class, honey,\" she continued. \"I'll have some apologizing to do to the parents and attending faculty.\" I paled, not realizing there were other faculty in attendance. Then she winked at me suddenly. \"I think I need a cold shower. I don't know what's got into you, dear . . . but I want some of it!\"\n\n\"Uh, thank you, ma'am,\" I said, my chest filling with gratitude. My instructor walked back to the audience, and I quickly ran off stage, my mind filled with mixed emotions. My instructor had liked it, but was I going to get a reputation among the faculty and students? I pushed the unpleasant thought from my mind, and prepared myself mentally for the group performance. It went off without a hitch, but I did notice quite a few eyes from the audience seemed to be singling me out among the group. After we finished, there was a rousing applause, and I silently thanked Victor for letting me finish the group performance with no teasing from his gift. I noticed he'd left already, no doubt returning to prepare for his class. After the class was dismissed, I tried to leave, but many of my classmates and a few of their parents came up to congratulate me for my performance. I demurely thanked them, trying to sneak away for I was already late for Victor's class, but it seemed like my solo number was a big hit. I hoped for the right reasons.\n\nFinally free, I ran to Victor's class. I was already fifteen minutes late, but I was sure he would understand since he knew what I was doing. I skipped down the hall, elated at how well things had gone, and quietly opened the door to his classroom. Naturally, all eyes turned to look at me as I started toward my desk.\n\n\"Miss Torina, how nice of you to join us,\" said Victor, making me freeze in place. How could he be upset, he knew I had my dance recital? \"Why don't you go stand before the class.\"\n\n\"Um, yes, sir,\" I said, my excitement about the dance mid-term giving way to trepidation. I had a feeling Victor was about to teach me another lesson.\n\n\"Now then, boys,\" said Victor to the class. \"To kick off the second half of the semester, let's practice the things we learned so far on your lovely but tardy classmate, Miss Torina.\"<br ><br >I knew it, I was to be the sacrificial lamb once again.\n\n\"First of all, Lana, I have something for you.\" I turned to look at him, and my eyes widened, for he was approaching me with a length of maroon cloth. \"This is a blindfold, my dear,\" he said. \"It will help you focus, as well as challenge you to identify the boys by their minds, rather than visually.\"\n\n\"Ah, Mr. Talio,\" I started, taking a nervous step backwards. \"You're not going to . . .\" But he was, as he moved behind me and held the cloth up to my eyes, before tying it off behind my head. Losing my sight was unnerving, and I stood there awkwardly wringing my hands. I suddenly became aware of several things - the presence of Victor and the boys near me - I could hear their movements, but I couldn't tell who was who. Then I became aware of my body - oversensitive and exhausted from a night of torments and denied orgasms. The blindfold served to increase my awareness of my body's agitated state.\n\n\"I'd like you all to bring your chairs in close to Lana. The distance from the subject has a direct impact on your telepathy.\" Then I jumped for his hands came to my shoulders, guiding me forward a few feet. \"That's it,\" said Victor, \"get up nice and close, you can go behind her, telepathy is not directional.\" I trembled slightly, feeling terribly vulnerable knowing I was encircled by six horny boys but unable to see them. They were close enough that I could hear them breathing, which meant they could likely reach out and touch me. My hands dangled awkwardly at my sides, when I really wanted to cover myself with my hands and arms.\n\n\"Now Lana,\" said Victor standing behind me. \"I'd like you to use your mind to pick one of your classmates, and tell me his name.\"\n\n\"Uh, ok,\" I said. How was I going to do that? Well, it must have been possible if Victor was asking me to do it. I tried to quiet my fears, and relax, reaching out to feel around me with my mind. At first it was like a blur of incomprehensible images, but in time, it coalesced into discrete individuals, six of them. The seventh, whom I couldn't read at all, was Victor. I concentrated, and began to sense vague images coming from each of the six boys. I focused on the strongest, which was in the front. But I couldn't tell who it was. After a minute, I spoke to Victor, my voice concerned. \"How do I tell what his name is, Mr. Talio?\"\n\n\"Boys, I'd like you to project something to Lana, so she knows it's you. An image of yourself, or something that will identify you to her.\"\n\nThe strangest thing happened. Suddenly I was barraged with images of the boys, though they were strange. Then I realized it was how they saw themselves, not how I saw them. \"I see them!\" I said, excitedly. \"All of them I think!\"\n\n\"Very good, Lana!\" said Victor. I thought I could sense pride in his voice. \"Now tell me what . . . Erik is thinking.\"\n\nI focused on the image of Erik, who was a large blond boy. I was sure he was ogling me for all his worth, since he was usually doing it even when I wasn't blindfolded. Suddenly I saw it - his mind was projecting an image of myself. It wasn't clear like looking at a photograph, more like a blurry image or an oil painting if I had to describe it. But it was clearly me, standing before him in a red dress. And then the image changed. I gasped as the new image came into focus - it was his cock, erect as he looked down at himself. I couldn't believe what I was seeing - I saw him taking the girl in red--me--I reminded myself--and guiding me toward his cock. I snapped my mental shield shut, wanting no more of that kind of imagery.\n\n\"Lana, open your mental shield,\" said Victor quietly but firmly. \"You won't learn anything in my class with your shield closed.\"\n\nI shook my head. \"It's too gross, I don't want to see what he's thinking!\" I would hide behind my shield until he let me sit down. Then suddenly I gasped, as I felt two fingers touching my breast. \"Don't touch me!\" I cried, moving my arm up to knock the hand away. But there was nothing, and I looked about but saw only the blackness of the blindfold.\n\n\"No one touched you, Lana,\" said Victor.\n\nIt was the lingerie, of course, I realized, as the fingers continued touching my breast, then two more appeared on my other lobe. I tried not to squirm, biting my lip as the delicate teasing quickly brought back a reminder of my body's heated state. It was terribly disconcerting to be touched like that with six boys sitting around me. I felt helpless and vulnerable, and yet my body was heating up eagerly despite my nervousness.\n\n\"Open your mental shield, Lana, and tell us what Erik is thinking,\" said Victor, a tinge of impatience in his voice. When I hesitated, the fingers on my breasts suddenly changed to something warmer and wetter, like two sets of lips. I stiffened, gasping out loud.\n\n\"Alright! I'll do it!\" I exclaimed, my whole body rigid as I tried to ignore the softly suckling lips on my breasts. I opened my shield, and within a second the touches from my bra ceased, but then I was flooded by imagery from the boys surrounding me. It was readily apparent to my now open mind that my behavior and appearance had been inspiring unsavory thoughts in at least some of the boys. The imagery of what they wanted to do to me assaulted my mind - I could imagine hands touching me, my clothes being removed, slowly by some, ripped off by one - but I couldn't tell who was projecting what, it was such a jumble of imagery. Some of the boys were imagining me naked, and one or two were picturing themselves touching my naked breasts, and other places. Somehow my body interpreted all the imagery as a sign it should prepare itself for sex with multiple male partners. The effect was powerful and terribly embarrassing.\n\n\"No!\" I gasped, slamming shut my mental shield as the images overwhelmed me. It wasn't the first time I'd perceived mental images from boys or men, but something was different this time. Perhaps their proximity to me? Then I looked around, trying to sense Victor, wishing I could remove the blindfold. Was he doing this somehow? Just then I jumped where I stood, as the lips returned to my breasts. He'd reactivated my gift clothing - he must have noticed I closed my shield again. I bit my lip, the sensations making it so hard to stand still. I wasn't sure which was worse, the mental assault of the boys, or the physical attack of Victor's gift lingerie.\n\n\"Why's she squirming like that?\" said a voice - I thought it was Erik.\n\n\"Maybe she has to pee?\" said Jones.\n\n\"I don't have . . . to pee!\" I choked, the two simulated mouths on my breasts making it difficult to talk. Finally, I opened my mental shield, no longer able to stand it. Within a second the touches stopped, but the lewd imagery returned just as quickly, making me blush and want to cover myself. Suddenly I heard a familiar scratching noise. The board I realized - Victor must have been writing on the board. I turned, but of course couldn't see what he was writing through the blindfold.\n\n\"Move your hands, Lana,\" said Jones, his tone strangely forceful. I hadn't realized my arm had come up to cover my chest, and my other hand was pressed against the front of my skirt. I shook my head, refusing to listen to Jones.\n\n\"Yes, Lana, we can't see you, put your arms at your sides,\" said another voice, Erik I realized. Then a third boy told me the same thing, and a fourth. The chorus of insistent orders somehow became difficult to refuse, as I feared angering the crowd surrounding me. I reluctantly moved my hands back to my sides, feeling vulnerable and exposed. The mental imagery hit me - myself standing there, blindfolded and trembling slightly, my arms awkwardly frozen at my sides. Then I was barraged by what I could best describe as fantasies - hands lifting my skirt, my dress pulled down to expose my breasts - they didn't seem to know I wore red lingerie at least. Yet the barrage of sexual imagery was arousing me again, and my body responded eagerly and wetly. I could almost feel my classmates touching me, stripping off my clothes, kissing my lips . . . and other places. It was becoming difficult to stand. I felt so wet between my legs that I feared they might see something.\n\n\"Hey Lana,\" said Erik. \"I read last night that Xanthian women have no hair on their pussies, is that true?\" My hands suddenly flew to my crotch, and I blushed. Erik chuckled. \"I guess it's true. Do you all shave?\"\n\n\"No!\" I wailed, \"we're born that way!\" I'd never thought of it growing up, I thought all women were that way. To have the boys discussing it openly . . .\n\n\"Place your hands behind you, Torina,\" said Jones. A chorus of several other voices told me to do the same. I wasn't sure I heard them with my ears, or inside my head, but I reluctantly complied, for fear of angering my classmates. The sexual imagery grew in intensity at my submissive posture, and I gasped at my body's eager capitulation to their mental barrage. A part of me wanted them all to touch me, to strip off my clothes and delve into my orifices with . . .\n\n\"Can we touch her, Mr. Talio?\" said Jones.\n\nNo! I shook my head, pleading. The thought of six boys touching me in my overheated, ripened state was too much to bear.\n\n\"No, Jones,\" said Mr. Talio, from somewhere in front of me. He must have been watching. \"This is a telepathy exercise, remember? Use your mind.\"\n\nI could almost feel their touches then, and I saw the image of myself, legs tightly closed, my arms obediently held behind my back, squirming at the debilitating arousal.\n\n\"Look inside her, to her thoughts,\" said Victor, his voice moving as if he was pacing the room. \"You might be interested what you find.\"<br ><br >I wanted to close my shield then, to keep six boys from invading my thoughts, but somehow . . . I didn't. Maybe it was Victor's commands, or maybe because I knew they wanted free access to my mind, but I found myself unable to bring up my shield.\n\n\"She's likes what we're thinking!\" said Erik, suddenly. \"She wants us to touch her!\"\n\n\"No, please!\" I gasped, my hands coming from behind my back to be raised in front of me.\n\n\"Hands behind your back, Lana!\" barked Jones. I quickly complied, groaning softly at how vulnerable it made me feel.\n\n\"She's a healthy young woman, Erik,\" said Victor. \"It's a perfectly natural response. Her body is preparing itself.\"\n\n\"Preparing for what?\" said Mallory.\n\n\"For sex, with all of us, you dolt!\" said Jones. \"Are you sure we can't touch her, Mr. Talio? She wants us to.\"\n\n\"No,\" was the stern response. \"This is a classroom, not some sleazy hotel. You are learning one of the vulnerabilities of female telepaths. For Lana to become a capable Arbiter, she will have to learn how to fight the natural tendencies of her body and mind. If she does not, she will become the helpless plaything of every unscrupulous male telepath. Maybe unscrupulous females as well.\"\n\nThere was a break in the mental onslaught as the boys listened to Victor, and then it began again. I found it impossible to focus amidst the barrage of imagery and my body's responses to it. It felt as if my mind was trapped inside a room filled with sexual thoughts, and there was nowhere to hide and no way to escape.\n\n\"And you boys listen to me,\" continued Victor. \"Now that you can see the powerful effect you can have on a woman, you must learn to control your urges. If you use your powers on ordinary citizens, society will turn on us, and the long-standing accord between the telepaths and normals could fracture. You must be vigilant, and be extremely careful in how you use your powers.\"\n\nThe mental barrage ceased again, as the boys thought about what he'd said.\n\n\"Now I'm going to step out for a few minutes,\" continued Victor, making me tense up in fear. \"I'd like you boys to continue with Lana. See if she can resist your mental efforts -- no touching! Lana, if you cannot resist the minds of untrained boys, you may want to reconsider your desire to become an Arbiter.\"\n\nI stood there stunned, as I heard a door open, and then close. I couldn't believe he'd left me there with the boys.\n\n\"Keep your hands behind your back, Torina,\" barked Erik. My hands had been drifting up to remove my blindfold, and I quickly moved them back, thoroughly intimidated.\n\n\"What should we do with her?\" said Will, the quiet one. \"We can't touch her.\"\n\n\"He didn't say anything about her touching herself,\" said Jones, thoughtfully. I gasped in horror as some of the other boys murmured their support of his idea.\n\nI shook my head, vigorously. \"No, please!\"\n\n\"Be a good girl, Lana,\" said Jones, his voice closer, as if he were leaning in toward me. \"Just pretend we're not here, and you're alone in your dorm room. You can't see us, it should be easy.\"\n\nIt was true I couldn't see them, but I could sense all their minds, surrounding me, imagining me touching myself. I felt a jolt of pleasure between my legs. Even my own body wanted me to touch it! I found my hand drifting down to my skirt, and then I shook my head. How could I even contemplate such a thing?\n\n\"Lana, do what we tell you to do, or we will all meet you tonight, after class, without Mr. Talio around to protect you. Imagine what we could do to you then?\" Jones' voice had taken on a slightly frightening tone.\n\nI sensed confusion around me, and after a moment, I realized several of the boys didn't seem to like the idea. One in particular caught my attention. I reached out, seeking with my mind. It was difficult to focus with all the confusion of conflicting thought, but I tried to weave through the haze of mental imagery and hone in on what seemed like a dissenting voice. There! One of the boys in the room with me was projecting anger . . . and resentment. He seemed unhappy with the situation, and I tried to reach him, bring out his feelings. I wasn't quite sure which boy it was, but I'd found a friend, and wanted to encourage him.\n\nSuddenly an unfamiliar voice spoke up from my right. \"Guys, let her go, we shouldn't be doing this.\" It was coming from the same dissenting mind! I recognized the voice. It was Gordon, the quiet, dark-haired boy who always sat in the back and rarely spoke. I'd thought he disapproved of me, because he would never look at me, but then I remembered one time when he'd brought me a cup of water when I was obviously thirsty after dance class.\n\n\"Shut up, Gordon,\" said Jones. \"Mr. Talio told us to test her, and that's what we're doing.\"\n\n\"I think we're crossing the line, and now this talk about meeting outside class,\" said Gordon, his voice suddenly gaining in forcefulness. \"You know the rules, don't make me report you.\" There was a long pause, and the confusion of thoughts seemed to coalesce. Some of the others were agreeing with him!\n\n\"He's right,\" said John. I'd never heard him talk before. \"This is wrong, Jones. I don't want any part of it.\"\n\n\"You're a coward, John,\" spat what sounded like Mallory. \"And you too, Gordon. We'll get you for this.\"\n\nSuddenly, if it was as if a spell was broken, and my willpower returned. I ripped off the blindfold and blinked. Squinting in the bright light of the classroom, I sought out the shy boy Gordon who'd come to my rescue. He was looking at me, concern and perhaps regret in his eyes. I smiled reassuringly at him.\n\n\"I'm going to kick your ass later, you little shit,\" whispered Erik, looking at Gordon. I was about to come to his defense, but wasn't sure he'd want a girl protecting him. The dark-haired boy stood up instead, and Erik stood as well, and they now faced off, an arm's length apart.\n\nThe classroom door opened suddenly, and Victor strode in, eyeing the situation.\n\n\"Gordon screwed everything up, Mr. Talio,\" said Mallory with disgust. \"We had her, she was about to finger herself.\"\n\n\"I was not!\" I protested, my voice strained from all arousal I'd endured.\n\nVictor looked at him, then at me, and then around the room. He shook his head.\n\n\"No, Mallory,\" said Victor calmly. \"Gordon was right to stand up for his classmate. He passed the test, and you . . . and Erik . . . and Jones . . . failed. My only question is, was it Gordon's idea to intervene, or did Lana project it onto him?\" Several of the class gasped, including me. We hadn't thought of that. \"Sit down, boys,\" said Victor, somewhat impatiently.\n\nI turned to look at him, and he had an odd look on his face as he returned my gaze, but I couldn't fathom what he was thinking. I just hoped I hadn't disappointed him. Once everyone was seated, he sat on the desk facing us. \"I hope you all learned some valuable lessons here today. My job is not to coddle you, it is to prepare you to be Arbiters.\" He gestured toward the sky. \"Out there the galaxy is harsh and complicated, and you will face the most challenging assignments the GWA has to offer. There is no place for doubt, or weakness, or moral corruption,\" he said, eyeing Jones and Erik. Then he stood. \"Class dismissed. And none of this leaves the classroom. If you want to have words with a classmate, you'll do it in my classroom. Now go. Lana, stay after class for a moment.\"\n\nI sat nervously, feeling sweaty and tired, as if I'd run a marathon. Gordon stopped next to me on his way out, and I reached up and squeezed his arm, whispering a thank you to him.",
        "<br >\"I'll be ok,\" I added when he didn't leave. The boy smiled reluctantly, before giving Mr. Talio a glare and then walking out. He was cute when he smiled, I realized. And there was something sexy about having a protector.\n\nI sat pensively waiting until Victor came and sat down across from me. \"Lana,\" he said. \"Are you alright?\"\n\nI nodded without saying anything.\n\n\"Are you learning something in my class?\" he asked next.\n\n\"Yes, sir,\" I said. \"I won't be late to your class again.\"\n\nVictor smiled, then he squeezed my arm. \"You used your mind to encourage Gordon to speak out, didn't you?\"\n\nI nodded. \"I think so, sir.\" I suddenly held out my hand and placed it on his arm. \"I'm sorry, Mr. Talio . . . I'd never try to get you in trouble!\"\n\nHe smiled. \"I know that, Lana. You were just looking for a friendly mind, and you found one.\" He leaned in closer. \"The more interesting question is, did you insert the idea in the other boys to mentally molest you?\"\n\nI stiffened. \"I certainly did not!\"\n\nVictor looked at me, as if searching my mind for the truth. When he seemed satisfied, he said, \"How did it feel to read the boys' fantasies about you?\"\n\nI blushed. \"Well, uh . . . I had no idea they had those kinds of thoughts about me!\"\n\nVictor smiled again. \"You're a very desirable girl, Lana. I don't think you realize it.\" His compliment made my face turn a deep red. I looked down at my hands. <br ><br >\"I know they desire me,\" I said, tentatively. \"But what about you?\"\n\n\"I am fond of all my students,\" came the response. I looked up at him in disappointment, and saw that he was teasing me. I frowned, thinking he wasn't funny. \"Go now, Lana,\" he added, squeezing me on the shoulder as he stood to leave. \"And if you'd like to return your gift, come by my place tonight, I'll send you the address. Unless you've grown attached to it, then you can keep it.\"\n\nI blushed, imagining having to wear his gift every day. It was a very arousing thought, but also a bit frightening. He'd have total control of me. \"I'll stop by after my martial arts class,\" I said. I felt a strange regret at the thought of removing his lingerie, but it was for the best.\n\nWe parted ways then, and I went back to my room to do some homework before attending my next class. It was impossible to work of course, all I could think of was what had transpired in the classroom. At one moment, I thought Victor was feeding me to the wolves, and the next, I thought he was trying to help me. It was so confusing I had to stop thinking about it. I needed exercise to clear my mind, and I quickly headed off to my martial arts class.\n\nWhen I showed up, my mind was occupied remembering what had happened the previous day. I saw Henri and Varga, and they spotted me, both wearing amused but slightly wary looks on their faces. They probably knew that without Victor there to help them, I'd give them a good beating. I ignored the two boys and went through my stretching exercises, waiting for the instructor to start the class. As I sat on the mat with my heels together in a stretch, I saw my instructor in the waiting room. Victor was there! They seemed to be talking. I watched for a minute and then Victor left, to my relief. I couldn't take another one of his lessons, my body and mind needed a break. Finally, my instructor returned to the class and gathered us together.\n\nThe old man led us through the usual routine of stretching followed by basic punches, kicks and blocks. Then he moved to the front and spoke. \"Class, today we are going to practice self-defense techniques. As Arbiters, you may very well find yourself captured by the enemy. We will train on countermeasures today.\" This was different, I thought, but it made sense to give some practical training as well as the traditional martial arts. I watched as the instructor and one of his assistants demonstrated. The assistant used a rubber binding to fasten the instructor's wrists together, and he then demonstrated various throws and moves on his assistant.\n\n\"What if your wrists were bound behind you instead of in front?\" said Varga, looking unimpressed. The instructor shrugged and had the assistant bind his wrists behind him. He then performed a snap kick, his leg moving up next to his own head to within an inch of the assistant's face. He then dropped to the mat and spun, upending the assistant and dropping an axe-kick on his chest, before rolling backwards and coming to his feet, the wrist bindings now in front of him. There were some oohs and aahs from the audience, and then he broke us up into pairs to practice, giving each pair a set of the rubber handcuffs. I watched as he paired off all the students until he was down to three.\n\n\"Lana, you work with Varga and Henri,\" he said, before walking away to help some of the other pairs.\n\n\"But . . .\" I said, but he was already involved in helping a struggling pair of students.\n\n\"What's wrong, Torina? You scared?\" said Henri, giving me a dirty grin.\n\nI wrinkled my nose. \"You both smell,\" I said, shrugging my shoulders. They both glared at me, and I nearly grinned when I saw Varga raising his arm to take a whiff of himself in concern. We moved off to the corner of the gym unoccupied by other students. <br ><br >\"This is a good spot,\" said Henri. I noticed he'd moved to a place behind a high pile of mats, which blocked us from a good part of the class. My eyes narrowed suspiciously, but I didn't want to complain or show any fear to those two jerks. \"I'll go first,\" said Henri, holding his wrists out for Varga to fasten the rubber handcuffs. We then pretended to be guards holding him, while he practiced striking us. He tried the instructor's snap kick and then howled in pain as he overstretched his leg. <br ><br >\"Next time, spend more time stretching,\" I said without sympathy. He glared at me before getting to his feet, hobbling slightly. Varga went next, and toward the end of his practice, he did an elbow strike to me, but failed to pull back, or perhaps it was intentional, but I doubled over in pain as his elbow struck me in the abdomen.\n\n\"Oh, sorry, Torina, I don't know my own strength,\" he said, his voice mocking rather than apologetic. I got to my feet quickly, sucking in quick breaths of air and pushing the pain out of my mind. I wasn't going to show it to these two assholes.\n\n\"Alright, my turn,\" I said. It was time for a little payback. Henri took the handcuffs off of Varga and then turned to face me with a grin. I held out my wrists and he fastened the binding to my right wrist. Then in a surprising show of coordination, Varga took my other arm while Henri pulled my bound wrist, and they pulled both arms behind my back and fastened the other handcuff.\n\n\"Hey!\" I exclaimed, twisting about and trying to pull my wrists apart. \"It's supposed to be in front!\"\n\n\"Nah, that'd be too easy for you, with your fancy black belt,\" said Henri with a smirk. \"Or do you want to go cry to our instructor?\"\n\n\"Go to hell,\" I said under my breath. I wasn't going to give them the satisfaction. I stood still as they moved to either side of me, and was about to try a kick when Henri spoke again.\n\n\"You know, Varga, I think a female prisoner would be on her knees, as a show of respect.\" Before I could protest, Henri kicked the back of my knees and they both pushed me down until I was kneeling on the mat. \"That's better,\" said Henri, grinning at me as the two boys came to their knees next to me.\n\nI glared at him. Kneeling on the mat made kicking nearly impossible, and with my wrists behind me, I couldn't strike with my hands. I turned and smiled at Henri, which made him frown, and then I snapped my head forward and struck him square in the chest. I heard him gasp as the air was driven from his lungs and he doubled over onto the mat. \"Oh, I'm so sorry, I guess I don't know my own strength,\" I said, using my sweetest voice.\n\n\"You bitch!\" said Varga, suddenly grabbing my ponytail and yanking my head back, making me yelp in pain. My instructor had warned me that my long pretty hair could be used against me, and Varga was illustrating that very point. Without another thought, I rolled onto my back, freeing my legs, which I used to scissor around Varga's head, pulling him down with his head between my thighs, hearing a heavy thump as his head struck the soft mat. He let go of my hair as he cried out, trying to free his head from the grip of my slender but strong legs. I rolled over, pinning him to the mat, before two strong arms grabbed me and pulled me off, pinning me face down on the mat. I struggled as Henri placed his knee on the middle of my lower back, and I tried to roll under him, but suddenly Varga sat on my legs, pinning them. With the weight of the two boys now on me, I was immobilized, and the unfamiliar feeling was alarming.\n\n\"Try to get away now, bitch,\" said Henri, reaching out to grab my ponytail and pull back on my head, making me grunt in pain as my chin was lifted off the mat. Suddenly, I felt something come alive between my legs. The panties! The low buzzing vibrations had activated somehow, and I gasped as it moved around my pussy, feeling like someone was exploring me with a small vibrator. My hips were pressed hard into the mat by Henri's knee, but that was no impediment to the simulated vibrator, and I jerked when it reached and found my still tender clit.\n\nNot now, Victor! I pleaded in my mind. Was he watching me, somewhere? We were well hidden from the class, so I wasn't sure how. Then I realized he might have been watching my vital signs on his comm device, and guessing I was training. But his timing seemed suspiciously good . . .\n\n\"Do you give up, Torina?\" said Varga, moving about to make sure my legs were out of action. \"I think I know your weak point.\" Suddenly I felt a hand reaching between my legs, crudely seeking out my crotch through the layer of white uniform.\n\n\"Don't you dare!\" I hissed quietly, struggling against the weight of the two solid young men who held me down. He ignored me, and continued pushing and rubbing me through my uniform. His crude touches might not have had much effect if not for the buzzing vibrations my panties were inflicting on me. His hand seemed to make it worse, and I squirmed at the unwanted but extremely pleasurable sensations. \"Stop that Varga!\" I repeated, my voice low.\n\n\"Why are you whispering, Torina?\" said Henri. \"You don't want the class to see you like this, do you?\"\n\nI stiffened, telling him he was right. Henri chuckled. \"Let's call them over, shall we?\"<br ><br >\"No, don't!\" I whispered. The girls looked up to me, I couldn't let them see me like this! I squirmed and twisted, but with the two of them on me, and my wrists bound behind me, I simply had no leverage to escape. Vargas gave me no letup with his hand, nor did Victor's panties, and the two of them were making my body heat up in the most embarrassing way. I started to panic.\n\n\"Let's turn her over,\" said Henri. \"Get a good grip on her legs,\" he added, gesturing to Vargas.\n\n\"No!\" I groaned, struggling as Henri rolled me over onto my back, while Varga trapped my legs in his. I was far more skilled than the two boys in sparring, but Vargas outweighed me two to one, and he was also strong. When they were done, I was bent into the most humiliating position, with Vargas sitting on my one leg, and entwining the other with his two legs. Henri pulled back my hair with a strong grip on my ponytail, exposing my chest to his free hand. My uniform had partially opened in all the struggling, and he easily slid and hand inside to grasp my breast.\n\n\"Get your hand out of there!\" I hissed, trying to keep my voice low but still threatening. Henri only chuckled, giving my firm breast a good squeeze in response.\n\n\"You've got nice tits, Torina,\" said the boy, cupping my breast in his large hand.\n\n\"Oh god,\" I murmured under my breath. Henri's hand seemed to have triggered the vibrate function in my red bra, for suddenly I felt those low, delicious vibrations on my breasts. Thinking I was responding to his hand, he squeezed my flesh, leering down at my face, which was the picture of distress. Varga was now poking my crotch more aggressively, which had the unfortunate effect of pushing the buzzing sensations deeper into my now moist and sensitive crevice. My lips were tightly closed for fear of letting the two bastards hear me moan, but I couldn't stop the soft cries from escaping my throat. My sounds of pleasure were goading on my tormenters, and they redoubled their efforts. Henri's fingers found my nipple through the bra, and his twisting, squeezing fingers forced the buzzing sensations into my swollen bud, driving a moan through my tightly clenched lips.\n\n\"Not too loud, Torina,\" he teased, shaking his head. \"The class might hear you and come over. What would they think, to see their star classmate like this?\"\n\nI shook my head in shame. They couldn't see me like this, it would be unbearable! But the exercise our instructor had given us must have been almost over, and they'd have to let me up then.\n\nHenri must have read my mind. He leaned in close as if to whisper in confidence. \"Torina, we're gonna make you cum for us like a little freshman slut, how about that?\"\n\n\"No!\" I gasped, trying to talk while forcing down any sounds of pleasure. In response to my defiance, Varga started pushing his fingers harder, enough that it was driving the red panties up inside me. The vibrations were now assaulting the partly opened cleft of my pussy, and the sensation was driving me mad. I moaned in misery as I felt my insides clench in response, and Vargas must have felt it for he smiled at me.\n\n\"Ooh, you like that, don't you, Torina?\" he said, jamming his finger in as hard as he could. I looked away, biting my lip, trying to force down the rising tide of pleasure, but it was impossible with Henri's hand inside my bra, pinching my nipples and squeezing my breasts, and Vargas poking away vigorously at me. It was crude, yet my body was eagerly caught up, and my thighs clenched again.\n\n<br >\"She's gonna cum soon, I feel it!\" said Varga. \"Who'd have guessed the star fighter was such a horny little slut?\"\n\n\"No!\" I moaned helplessly, but I knew he was right, I could feel the orgasm coming. Please don't let me cum in front of these two! I thought. I looked at Henri, speaking quietly, my words interspersed with soft gasps. \"The e-exercise must be . . . over by now, are they . . . looking for us?\"\n\nHenri raised himself a bit to look around the pile of mats, then he sat back down and smiled at me. \"Almost, you only need to hold out a couple more minutes, Torina. Shouldn't be hard, for a good girl like you?\"\n\nMy pussy clenched again, and I moaned, feeling my body tensing up. No! Henri had both hands inside my uniform top now, massaging and squeezing both my breasts, and it felt too good. All the teasing Victor's gift had done to me, and the three orgasms in the shower, made it impossible to control my body's responses. The two boys attacked me mercilessly over the next two minutes, and I lost my ability to control the soft noises coming from my throat. My face burned with shame as the boys laughed quietly at my helplessness. Finally, my body tensed up and with a muffled cry, I came, moaning as Varga continued his attack, prolonging my orgasm. Finally, it subsided, and both boys quickly stopped, Henri fixing my uniform and tightening my black belt, then he rolled me over roughly and removed the handcuffs from my wrists. Before getting up, he leaned down to whisper in my ear. \"You can thank us later, little slut.\"\n\nI buried my face in the mat, unable to look at him as the boys chuckled and got up, then walked back toward the class. Fighting down my humiliation, I quickly sat up, fixing my hair and trying to calm my racing heart and ragged breathing before reluctantly getting to my feet. I ran back to the class, thinking I'd look less suspicious if I ran. The students were all walking back to stand in front of our instructor, and nobody paid me any attention, except Henri and Vargas. They were grinning at me, and I got in line, looking down, unable to meet their gaze. I wasn't sure I'd ever be able to look those two in the eye again, but instead of anger, I felt a burning shame. Victor had done this, but why? He'd said I needed to learn humility, but this seemed to go far beyond that. I wasn't sure I could even continue this class. And what if they told other boys what they'd done?\n\nSuddenly, I couldn't take it anymore. I mumbled an excuse me to our instructor and ran out, straight to the locker room, tears flowing down my cheeks. I grabbed my bag and ran straight home, ignoring the strange looks from students I passed on the walkway. When I got to my room I stripped off my uniform and went into the shower. Victor's gift came alive when the water spray hit it, and I moaned at the pleasurable sensations on my over-sensitized body. I resisted the urge to let the water spray linger on my body and quickly finished, dressing in a skirt and thin sweater and blow-drying my hair. I was nearly shaking with a mix of anger and shame.\n\nI headed straight to Victor's. I was going to confront him and ask him why he was doing these things to me. I'd thought, or perhaps I'd hoped he liked me, but what man would want his girlfriend to be molested by two strangers like that? I was out of breath when I found his house, from the address he'd given me. It was of modest size but looked well maintained and expensively furnished. His lot was large and secluded, surrounded by trees as well as privacy bushes. I walked up the front stone steps to ring the doorbell, but stopped. I thought I could hear voices, two of them. Male. I reached out with my mind, and found what I thought was Victor, speaking to another being. Their minds seemed agitated, but I wasn't sure, since I was just learning the technique this semester. Closing down my mind search, I went around the side of the house, following the sound of voices. There was a window partially opened, I realized. I snuck up to just below the window and listened.\n\n\"I don't see the problem,\" said the unfamiliar male voice. Then my eyes narrowed. It was familiar. It was that GWA officer I'd found in Victor's office! He seemed annoyed at something. \"You have her right where we want her.\"\n\n\"I don't know,\" said the other voice, which I recognized instantly as Victor. \"Maybe she's not the right one.\" My heart sank. He must have been talking about me.\n\n\"She's perfect, Victor! She's the shining star of the female freshman class.\" In contradiction to his words, his tone was one of disgust. \"I looked at her record, they have high hopes for her.\"\n\n<br >\"Yes, she was highly touted, and I can see why,\" said Victor. Yet he sounded hesitant. No doubt he thought I was too immature.\n\n\"And from what you told me, she's confident, and excels in her classes, even martial arts, where I hear she terrorizes the boys. Although not after today. How'd you set that up anyway?\"<br >\n\nVictor's voice sounded pained. \"I mentally suggested the exercise to her instructor, and I told him to pair her up with the same two boys. I didn't even have to project anything to those two, they took it from there. If I'd known how far those two would go, I'd never have done it.\"\n\n\"They wouldn't have succeeded if I didn't activate her clothing, to distract her!\" said the officer, who in contrast to Victor sounded very pleased with himself.\n\n\"You did?\" said Victor. \"I didn't know that.\"\n\n\"Yes, while you were watching your girlfriend on the monitor,\" said the officer.\n\n\"You shouldn't have,\" said Victor, sternly. \"You made her task impossible.\"\n\n\"I taught her a lesson,\" corrected the officer, triumphantly. \"It was a perfect fit to the plan! We humiliate her, show her how vulnerable she and other female Arbiters can be. With luck, we get her to quit, and she just might after today. And it'll discourage the other female candidates, and scare them into thinking they'll be next,\" continued the officer. \"And if they won't be scared off, we'll do the same thing to another one. From what I saw on the monitor, you've got her eating out of your hand, we just need to close the trap! We'll teach these bitches to stay away from the Institute, which should never have allowed them in here in the first place. What? Why are you looking at me like that? This was all your plan, a brilliant one, I might add, and it seems to be going perfectly, so what's the problem?\"",
        "I felt lightheaded and ill. It was all a setup? How could Victor do this to me?? I felt like I'd been stabbed in the heart.\n\n\"She's just . . . she's not a bitch, she's a sweet girl . . .\" Victor's voice trailed off. \"She doesn't deserve this . . . I made a mistake.\"\n\nThere was a long pause. \"Oh, for hell's sake . . . you're in love with her!\" cried the GWA officer. Then he laughed, a cruel laugh like that of a wild dog. \"That's why you won't go through with it!\"\n\nMy eyes were wide. Could it be, was Victor in love with me, such that he wanted to call off their plans for me? My heart was on a wild ride, beating so hard I could almost hear it.\n\n<br >\"Go to hell,\" said Victor.\n\n\"Well, you're probably too late,\" replied the officer. \"After all the things you've done to her, she might quit already.\"\n\nThen I heard a sound of surprise. Victor spoke in alarm. \"She's here! Look at the monitor!\"\n\n\"What?\" said the officer. \"You mean here in the house?\"\n\nI'd heard enough, and I got to my feet, I needed to get away! I dashed away from the window, but my heels made me stumble in the soft grass as I ran past the front of the house, and then I heard a door open. There was the officer standing in the doorway, with Victor behind him. He raised some kind of weapon.\n\nI heard Victor shout. \"Nikolai, don't!\" I raised my hands, turning, and then I heard a loud hiss, and felt something stick me in the chest below my bra. I reached down and pulled a tiny dart from my skin, and then the world started to spin in circles.\n\n***\n\nI awoke some time later to the sound of voices. I wasn't sure where I was, or who was speaking, but they were close by. I lay on my belly on what felt like a soft bed. I felt flushed and overheated, and I moaned softly at the soft buzzing sensations coming from my breasts and between my legs.\n\n\"She's a dancer, you say? They're usually skin and bones, but this girl's got some nice curves on her.\" The voice was followed by a hand on my hips, which made me recoil. The hand moved around my ass, the fingers reaching below to touch the soft mound of my panty-covered pussy. I groaned in protest, moving my hand to push it away, only my hand wouldn't move. I blinked in confusion, but everything was a blur.\n\n\"Give me your comm pad, now that she's awake I want to try a few things,\" said the voice, the hand leaving me finally.\n\n\"It's been set to orgasm denial mode while she was unconscious,\" said a second voice that sounded very familiar. \"So be gentle, she'll be over sensitized after an hour of that mode.\"\n\n\"Gentle?\" laughed the voice behind me. \"You talk like she's your lover, my friend.\"\n\nSuddenly the buzzing between on my breasts changed from a dull hum that just kept me aroused to an intense focus on my sensitive nipples. I moaned, squirming, but again found my hands held in place by something.\n\n\"Incredible,\" said the voice. \"You can tell it to focus on her nipples, or change to a mouth, change the level of aggressiveness . . .\" With each function he described, the sensations on my breasts changed, and I struggled to escape the touches assaulting my sensitive breasts.\n\n\"Try the panties,\" said the familiar voice. My heart leapt realizing it was Victor, and I turned to look at the figures I realized were standing behind and to the left of me. I could see two tall men, but my vision was still blurry. Then I jumped as I felt the buzzing on my clit. My thighs wanted to clamp together to ward off the feelings, but strangely I was unable to close them. I could see enough to tell I was on a platform like a bed. I struggled up on all fours, my limbs slightly wobbly. My wrists and ankles seemed to be fastened in place, and my ass was presented to the two men behind me. I blushed when I realized I wore only Victor's lingerie.\n\n\"Oh!\" I croaked, suddenly feeling a set of lips kissing the heated juncture between my thighs. Something warm and wet was sucking and licking, and it was instantly too much to handle. I tried to move my hips to escape the mouth, but of course it was coming from my own panties, so there was no escape. I fell back down to the bed, my hands clutching the soft covering as the lips and tongue drove me mad with desire. I moaned and gasped, unable to even think, my ass twitching and quivering and my whole body tense, riveted by the powerful sensations. I felt an orgasm coming on quickly.\n\n\"Go easy on the poor girl,\" said Victor. \"She's probably never had a man go down on her.\"\n\nNikolai made a snort of derision. \"I'll ease up, don't want to let the bitch cum without earning it.\"\n\nSuddenly the tongue and lips changed back to the buzzing, and I gasped for breath as the sensations in my pussy changed from overpowering to simply pleasurable. I lifted my head off the bed and turned, blinking in confusion as my vision returned to normal. Victor was standing there behind me, and next to him the muscular GWA officer. I looked down and saw leather manacles on my wrists, each one attached to a thin rope that went to a black pole at the corner of the bed. Only it wasn't a bed really, just a soft platform a short distance off the floor. I turned my head to see my ankles also captured in leather, with ropes going to two more poles at the base of the platform. Looking about, it didn't seem like a bedroom . . . more like some kind of twisted playroom.\n\n\"What are you doing?\" I croaked, my throat dry and parched. Victor immediately came to my side and held up a bottle of water to my lips, which I drank hungrily.\n\n\"I'd have made her earn that,\" said the officer, disapprovingly. \"You must really be in love with her.\"\n\nThanks to the long drink of water, I could speak again. \"Victor, what's going on?\" I pleaded. Victor moved to the side of the platform so I didn't have to turn my head so far to see him.\n\n\"Lana, I'm sorry it had to come to this,\" he said, his eyes dark and clouded. \"If I could do it again, I'd have picked someone else. And yet . . . I must admit I love seeing you like this.\"\n\n\"Like this?\" I said, confused as to his meaning.\n\nVictor paused. \"Tied up, aroused, in my home . . .\" His look spoke volumes.\n\nI blushed, my crush on him stubbornly refusing to go away, despite all he'd done to me. \"Victor, I--\"\n\nThe officer interrupted me. \"Girl, tell us, what did you overhear when you were trespassing outside Mr. Talio's window?\"<br ><br >I stiffened in fear. It had never occurred to me that I was breaking the law. Victor would never turn me in, I was sure of that. But who was this GWA officer, and why were he and Victor together? Victor had called him Nikolai, I remembered.\n\n\"Yes, we have you on surveillance video. One call to the cops and you'll be kicked out of the Institute.\"\n\nMy eyes narrowed in anger. \"That's what you want, isn't it? To get me to quit, cause you don't think women like me belong in the Institute!\"\n\n\"Ah, so you did hear us. Pity, I was looking forward to extracting the truth from you.\"\n\n\"I did hear you!\" I spat accusingly. Then I turned to Victor. \"How could you?\" Victor looked pained, but the officer spoke up instead.\n\n\"You don't belong here, girl,\" said Nikolai with disdain, gesturing at my body. \" Look at you, a little slut, ready to spread your legs for anyone, even your martial arts classmates.\"\n\nI paled. I'd overheard the officer say he was one who'd activated Victor's gift.<br ><br >\"Oh yes,\" chuckled the officer. \"We watched you on the monitors. We saw you cum like a little bitch in heat. And what was it, three times in the shower? What would the admissions board at the Institute think of their star pupil if they saw that?\"\n\nI shook my head, a tear flowing down my cheek. My cheeks burned with shame.\n\n\"It turns you on, doesn't it? You want to be made into a little slave, to be forced to cum by strange men.\"\n\n\"No!\" I moaned in misery. \"It's not me! It's . . . these panties!\"\n\n\"Is that so?\" said Nikolai. Suddenly all the buzzing stopped, and then I felt his hand on my ass. He cupped my ass cheeks and slipped his middle finger up under me, to stroke along the ridges in the panties formed by my wet, sensitive crevice. I shuddered in unbidden pleasure as his skillful finger continued where the panties had left off. \"There's no special panties turning you on now, little slut. It's just me and my finger.\"\n\n\"S-stop!\" I gasped, squirming in my bonds. But there was no escaping his hand.\n\n\"Victor's little toy is truly amazing. So elastic,\" he said. A soft cry escaped my throat then, as I felt his finger push inside me. \"Tight, as expected of a virgin.\"\n\n\"Victor, please m-make him stop!\" I gasped, pleading to Victor.\n\nMy instructor shook his head, speaking in his classroom lecture voice. \"Lana, if you wish him to stop, don't react to his touch. When you make those lovely little moans, you're only encouraging him.\"\n\nI groaned in misery at his cruel answer, but I tried my best to ignore Nikolai's delving finger. I told myself I hated the man, that I should never find pleasure in his touch.\n\nNikolai chuckled. \"Ah, so charming the way she is all tensed up, biting her lip, trying not to respond like an eager slut. Try this, girl,\" he added. Suddenly a second finger joined the first inside me, and the sensation of being filled forced a moan past my tightly clenched lips.\n\n\"No, don't . . . do that!\" I cried, as his two fingers slowly slid in and out, in and out, pushing deeply into my tight but damp pussy. The special material of my panties made it feel like I was naked, his fingers touching me directly. I felt my inner muscles clench his fingers, and he chuckled again in response.\n\n\"Victor, I'm afraid your favorite little student isn't so loyal to you after all. Look how she eagerly clenches my fingers with her little virgin hole.\"\n\nI shook my head, my tear-filled eyes turning to Victor. \"I'm sorry, Victor!\" I gasped, struggling to speak while Nikolai teased me with his fingers. \"Your . . . your gift made me so . . . aroused . . . I can't . . . fight it!\" I couldn't bear to think that Victor thought I was a slut, but no matter what I tried I couldn't fight my body's responses to Nikolai's touches. I felt so ashamed, and yet my body had never felt so good, and I moaned as I felt a powerful orgasm building. I just wished it was Victor touching me instead of that bastard from the GWA.\n\nAs if reading my mind, Victor came over and stood in front of my prone form. I blushed, looking up at him. I couldn't help noticing that my face was only a short distance from his crotch, and my eyes flicked downward, noticing a bulge in his pants. His hand came to touch my hair. \"My dear Lana, do not be distressed,\" he said gently. \"Not many women could resist what's being done to you, so do not be ashamed. Your body is doing what nature designed it to do, it's preparing itself to be used by a man.\"\n\n\"I don't want it to be him!\" I whispered, though the officer no doubt heard me.\n\n<br >\"Your lascivious little body doesn't care who fucks you,\" said the man behind me, his fingers teasing me at the edge of an orgasm. Then I heard some metallic clinking sound and looked around at him in alarm. I gasped, to see him unbuckling his belt.\n\n\"What are you doing?\" I yelped in fear, though when he pulled out his half erect and shockingly large cock, his intentions were obvious. \"Victor!\" I said, turning to plead to my instructor.\n\n\"Nikolai, put that away,\" said Victor scornfully.\n\nThe officer laughed, now holding his cock in his hand. Its tip touched the back of my thigh and I jumped. \"Don't worry, my friend, you know the great thing about those panties you bought her? My DNA will be captured and neutralized, so she'll have no proof I fucked her. Just her word against a Colonel in the GWA.\"\n\n\"No,\" I whimpered, panic making me struggle in my bonds despite the futility.\n\n\"It'll be your word against hers and mine,\" said Victor, his voice changed to something darker now. The officer looked at him in surprise, then he slowly smiled.\n\n\"Ah, so the teacher chooses his student over his friend,\" said Nikolai. \"You must really love the girl.\"\n\n\"You and I are not friends,\" said Victor coldly. \"We share a common interest, that is all. Now put your filthy cock away and leave the girl alone. You can have any girl you want, why this one?\" said Victor.\n\nNikolai smiled. \"Because I can't have her, that's why. And because she represents everything we hate. It's because of strong-willed bitches like her that all the females no longer know their place, and men like us, who were born to lead, and to dominate, are relegated to anachronisms. Let's make an example of her, teach this little role model her place in the hierarchy of mankind.\"\n\n\"You're mad,\" said Victor. \"It was always a philosophical argument for me. You take it to a perverse reality. She's a sweet girl, full of potential. She'll make a great Arbiter and you know it. She doesn't deserve to be some sacrifice to your twisted beliefs.\"\n\n\"You disappoint me, my friend,\" said Nikolai, shrugging. \"No matter, you can watch while I take her virginity, and make her scream like the slut she is.\"\n\n\"No!\" I wailed, as I felt the man's cock pressing against the opening of my pussy. The panties were going to let him all the way in, I could feel it. Suddenly I heard a beep from in front of me. Nikolai heard it too.\n\n\"What was that?\" he demanded of Victor. Victor held his comm device in his hand.\n\n\"I locked her panties. They won't open without a code now.\"\n\nI could feel Nikolai pushing his cock against my panties, but they were no longer elastic, and he couldn't penetrate me. He grasped the back of my panties and yanked down, trying to expose my ass, but the panties wouldn't budge, just like when I'd tried to remove them. \"You backstabbing asshole!\" he hissed, \"unlock it, now!\"\n\n\"That's not going to happen,\" said Victor, shaking his head. \"Go take out your frustrations on one of your interns, they'll be happy to give you whatever you want from them.\"\n\n\"Fuck!\" hissed Nikolai, banging his cock against my back side in frustration. Then I screamed as he pulled out an old-style metal pistol and pointed it at Victor. I looked up at my instructor, and his eyes were wide in fear, telling me it was not a game, nor an idle threat. \"Yes, that's right,\" said Nikolai, his eyes filled with cruelty. \"This isn't a dart gun.\"\n\n\"It still won't work, Nikolai,\" said Victor with a sigh. \"They have monitoring devices you know?\"\n\nI realized he was referring to the psychic monitors placed around the campus. They would sense the mental outbursts from a victim of murder or rape, and alert the authorities. A telepath in particular would put out powerful psychic waves when under a highly stressful situation, and the sensors would pick it up.\n\n\"That's why we're going to make sure it's you they go after if she's files a report,\" said Nikolai. We both looked at him in confusion. \"Now unzip your pants.\" I looked up at Victor in confusion, and his eyes were wide. Then he shook his head.\n\n\"Do it, or I'll drop you where you stand, then I'll fuck your little prot\u00e9g\u00e9 and start my retirement early.\"\n\nThere was a long pause, during which Nikolai pulled back something on his pistol, making a loud metallic click. Victor looked fearful. He seemed to believe Nikolai would do it, and suddenly I feared for Victor's life. If he wanted Victor to make love to me, it was a small price to pay to save his life. In fact, the thought brought a little gush of heat from my pussy.\n\n\"Victor?\" I said, tentatively. \"W-whatever he wants, please do it,\" I said. Victor looked down at me suddenly, and then he smiled -- a sad expression but one that warmed my heart.\n\n\"Listen to the girl, Vic,\" said the officer, waving his gun around. \"I know you want to feel those pretty little lips around you, so I'm giving you the chance.\" Then he slapped me on the ass, making me yelp in surprise. \"Now use your clever little mouth on your instructor, girl,\" said Nikolai.\n\n\"What?\" I said, my heart pounding in my chest as I realized what he wanted me to do.\n\n\"Once our dear teacher friend's DNA is in your belly, I'm guessing you won't want to go to the police, am I right, girl?\" said Nikolai.\n\nI stiffened, understanding finally. If I went to the police, they'd do a DNA test on me, and then arrest Victor rather than Nikolai. I certainly didn't want that.\n\n\"You're out of your mind!\" I exclaimed, turning to look in horror at Nikolai.\n\n\"You will start sucking, girl,\" said Nikolai, \"or I'll start shooting bits off your beloved professor.\" He pointed the gun at Victor's arm.\n\n\"No!\" I screamed. \"Please don't! I'll do it!\"\n\n\"That's better,\" said Nikolai, as if he knew I'd agree.\n\nI bit my lip nervously and looked up at Victor. He was looking down at me with an odd expression. Suddenly he looked up in alarm. \"No!\" shouted Victor. I felt something cold and metallic press against my leg. It was Nikolai's revolver. \"I'll do it, just . . . don't hurt her!\" cried Victor. He sighed in relief when Nikolai moved the revolver away from me. Then he undid his pants, letting them slide down to his ankles. I looked straight ahead to see him pull down his briefs, revealing a semi-erect cock. Somehow, he was already hard. That seemed strange to me under the circumstances, but I was quite new to these things. Then again, in just the span of a few minutes, I'd seen my second male cock, though this one was not as large as the officer's.\n\n\"I hope she's not disappointed in her instructor,\" said Nikolai, mocking. \"Now Vic, she's probably new to using her mouth, so why don't you help her out?\"\n\nVictor still hesitated, and Nikolai pointed the gun at his head. \"Victor, please!\" I pleaded. \"Please do as he says!\"\n\nFinally, Victor moved to stand directly in front of me. His cock was jerking slightly as I realized it was swelling. Victor seemed reluctant, and I was anxious to please Nikolai so he didn't hurt Victor. I leaned forward and stuck out my tongue, lifting the head of Victor's cock and bringing it into my mouth. I heard a soft sound of pleasure from Victor as I tasted his odd maleness. My heart warmed as I realized I was giving him pleasure, so I took in his cock, caressing it softly with my tongue. I gasped as I felt his maleness swell and jerk in my mouth. But Victor murmured with pleasure -- music to my ears, it drove me to try harder.\n\n\"The little vixen is a natural, eh Victor?\" said Nikolai with a laugh. I blushed in shame, having forgotten momentarily that we had an audience. I told myself I'd never do this for anyone but Victor. Sensing I had lost direction, Victor's hand came to my hair, pushing me onto his thickening cock. Out of the corner of my eye, I saw Victor's hand holding his comm device. He discretely touched a button on the screen, and suddenly I felt a buzzing between my legs. I jerked with pleasure, nearly choking as Victor's now fully hard cock buried itself against the back of my throat. I moaned, the sound muffled by my full mouth as the panties teased my pussy with touches and vibrations. It was terribly distracting, but Victor made up for my lack of direction by guiding my head up and down on his cock. I remembered to use my tongue, teasing the underside of Victor's cock, and was rewarded with a deep moan from the man I pleasured. Then I too moaned, as the teasing on my pussy made me clench with a gush of heat.\n\n\"I think servicing your cock is turning her on,\" said Nikolai with a chuckle. \"Perhaps I was wrong about them admitting freshman girls. I can see the benefit.\"\n\nI tried to shake my head in embarrassment, an impossible task with Victor's stiff cock deep in my mouth. Nikolai didn't seem to know Victor had activated my panties, which was fortunate, for then he might try to penetrate me again. I told myself it didn't matter what he thought of me, my only concern was to keep Victor safe, and that meant keeping Nikolai amused instead of angry. I had my own problems, however, for the tickling, buzzing panties were making me hotter and hotter, and I could feel an orgasm coming. I frantically sucked on Victor's cock, squeezing my lips around his flesh, and he groaned, clearly enjoying the sensation. He had both hands in my hair now, guiding me deep onto his cock with each thrust, making me gag slightly each time his cock banged the back of my throat. I endured it all, only his pleasure mattered. His movements became faster, more erratic, and I now had to fight back my own orgasm with all my concentration. His cock seemed to grow even larger in my mouth. Suddenly, I felt him stiffen, holding my head still, his cock deep and throbbing, and then he exploded inside my mouth, his warm seed spilling out into the back of my mouth. I came as well, moaning onto his cock, my thighs shaking as the orgasm wracked my body. Finally, Victor's cocked stopped jerking in my mouth, and his tight grip on my hair loosened as he let out a heavy sigh. I swallowed heavily, feeling slightly forlorn as his now slackening member withdrew from my mouth.",
        "\"Bravo, well done,\" said Nikolai, his voice mocking. \"You two make a lovely couple. Now it's my turn. With her belly full of your DNA, she won't dare submit to a rape test, unless she wants her beloved teacher to spend 20 years in jail.\" <br >\n\nI stiffened in horror, shaking my head. I could never do this to Nikolai.\n\n<br >\"You're really going to do this?\" said Victor, his face flushed, looking at the officer, incredulous.\n\n\"Oh yes,\" said the officer. \"I want the little Arbiter's lips on my cock. I can see she has quite the talented mouth.\"\n\nVictor suddenly looked like I'd never seen him before. His eyes looked murderous. \"Victor, it's alright!\" I said, my fear for Victor overcoming my disgust at Nikolai's intentions. Then I sensed a kind of swelling of power coming from his mind. \"Victor, I'll do it, he means nothing to me!\" He ignored me, the rage flowing from his mind, so strong I could feel it as if it had physical form. Suddenly the manacles on my wrists clicked open. Too shocked to react, I sensed movement, and from the corner of my eye, I saw an ornamental dagger on the wall twitch slightly. \"Victor, no!\" I screamed as the dagger leapt from the wall toward the officer standing behind me. I turned to see the big man's arm move up with surprising quickness. The dagger embedded itself in his arm, stopping it just short of his heart. With a grunt of pain, the man raised his weapon with his other hand. I screamed as an impossibly loud boom filled the room, the old-fashioned powder-based revolver spitting fire. I heard Victor grunt above me, and I turned my head in horror, to see him clutching his chest.\n\n\"Oh please, no!\" I wailed, seeing blood bubbling up around his hand. He dropped to his knees, and I reached for him, cradling his head to me as his eyes glazed over, murmuring in his ear. \"It'll be alright, I got you, Victor,\" I murmured, my tears flowing down to wet his dark brown hair. His breathing was ragged in my ear, and I felt wet from his blood on my chest. I pushed his head away to see the wound. The blood was spreading across his chest and dripping on the floor. I'd never seen so much blood. With a wail of agony, I pulled his head back to my chest, squeezing him tight. Then I felt the life go out of him, and I hugged him, shaking, as the sirens went off in a deafening blare, the sensors tripped by Victor's dying psyche. I turned back to look at the man who'd murdered my Victor. I'd never felt such hate.\n\n\"That's my cue to go,\" said Nikolai with a smile. \"Sorry I can't stay and service you properly, perhaps another time.\" Then his face hardened, and he gripped the dagger protruding from his arm. With a grunt, he pulled it out, spraying blood onto the back of my legs. He then tossed the dagger away and grabbed my discarded blouse to wrap around his arm. \"Oh shit!\" he said suddenly, noticing the dagger suspended in mid-air. It had never hit the ground. Quicker than expected for a man his size, he dodged as the dagger spun and launched at his head. It just clipped his cheek and embedded itself in the door jamb behind him.\n\n\"Damnit,\" I said. I didn't yet have the skills, and the dagger had moved too slow. Nikolai reached up a hand to touch his cheek, where a red line appeared where the dagger had cut him. His dabbed his finger in the blood and then licked it.\n\n\"Nice try, girl,\" he said. He pointed his weapon at me, and I sighed, knowing my death was upon me. Then he shook his head. \"I don't kill females,\" he said, \"especially pretty ones with a taste for cock.\" He put his weapon back in his holster and disappeared through the door, leaving me cradling Victor's lifeless body. I wiped the matted hair from his eyes, now closed and free of pain. The tears began to flow, and I cried and cried, not even hearing the sirens outside Victor's house, or the police breaking through the front door. "
    ],
    "authorname": "Tanuki",
    "tags": [
        "non-con",
        "bondage",
        "telepathy",
        "sci-fi",
        "mind control",
        "fantasy",
        "toys"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/agent-in-distress-ch-07"
}