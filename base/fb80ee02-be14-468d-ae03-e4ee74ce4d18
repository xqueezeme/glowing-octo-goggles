{
    "title": "Saturday Night School Ch. 05",
    "pages": [
        "\"Charlie? Is that you?\" Mrs. Tucker used her remote to turn down the volume of the television, listening for sounds from the kitchen. She thought she'd heard the door creak.\n\nAt first, no one answered. Then Charlie's voice called out, \"Yeah, it's me. I'm home.\" He appeared a moment later, stepping into the living room. He had his bag in his arms, the bag he'd taken with him to his interview. \n\n\"Hey, Charlie! Did you just get back? I expected you earlier. Did you eat?\" \n\n\"Yeah, mom,\" Charlie said. \"Sorry, I spent some time wandering around the area around the university. I got something to eat there.\"\n\n\"It's fine. I didn't know if you'd be home, so I didn't make anything.\" Mrs. Tucker smiled. \"So...? How'd it go?\"\n\n\"I think it went pretty well. We'll see.\" Charlie tried to shrug it off, but Mrs. Tucker could see the ghost of a grin threatening to break out on his face, and she suspected it had gone very well. Charlie added, \"One of the professors who interviewed me told me 'See you later' when I left. That's a good sign, right?\"\n\n\"Sounds like a good sign to me. Did they like your videos?\"\n\n\"I think so...\" Charlie said vaguely. He shot a quick glance over his shoulder towards the kitchen. \"Um... I'm going to head up to my room, okay? I have some stuff I want to work on... some projects on the computer...\"\n\n\"Okay. Being in that film department probably got your creative mind working, huh?\"\n\n\"Yeah. Right, totally.\"\n\n\"You sure you don't want any dinner? I can cook up something quick.\"\n\n\"No... thanks, mom. I'm good.\"\n\n\"Okay. Glad it went well, Charlie.\"\n\n***\n\nCharlie returned to the kitchen and opened the refrigerator. He grabbed two cans of Sprite and set them on the counter. A minute passed while he stood there, listening to the sounds of the television from the living room. Finally, he heard the volume go back up. He crept into the hallway and went up the stairs.\n\nWhen he opened the door to his room, Michelle was reclined naked on his bed. Charlie gaped at her, then quickly looked over his shoulder, making sure no one was behind him in the hallway. He pushed the door closed behind him and made sure it was locked. \"Michelle!\" he scolded her in a low voice. \"What if my mom walked in on you?\"\n\n\"Does she usually walk in if the door is closed?\" Michelle asked.\n\n\"Not usually.\" Charlie sat the Sprites down on his desk, noting Michelle's clothes lying in a pile by his chair. \"But she might have. Or what if I'd invited her up to meet my friend Michelle? What if she'd been right behind me just now?\"\n\nMichelle sat up. \"Then I would have said, Hello Mrs Tucker, so nice to meet you!\"\n\n\"Ha ha.\" Charlie gazed down at her, letting his eyes wander over her nude body. She was partially reclined on his two pillows, her firm breasts curving out of the slope of her front, her nipples hard and pointed. She had her legs bent, and her hands tucked underneath them, pressing against the back of her thighs. Her legs were parted slightly, and he could see the line of her pussy, pink and glistening. He felt his penis swelling, knowing that he would soon make love to her, knowing that she had come to his house for that exact reason.\n\nShe wasn't completely naked. Around her neck, she wore a black ribbon, and pinned to the ribbon was the butterfly pin he'd bought her in Linterna. Charlie reached out and touched the ribbon. \"Where'd you get this?\" \n\nMichelle pointed to a shelf. \"Over there. It had a medal on it.\"\n\nCharlie saw the medal sitting by itself. \"Oh, yeah. I won that medal in summer camp when I was ten. I made the kite that flew the highest.\"\n\n\"Cute!\" Michelle giggled. \"You must have been so proud.\"\n\n\"Oh, I was. You can keep it, though. It looks good on you.\" Charlie slowly slid his finger down from the ribbon, over her collarbone and onto her right breast. Michelle gazed at him, not saying a word as he perched his finger on her nipple. He squeezed the tip, gently pinching, gently pulling, feeling it becoming even more stiff in his fingers.\n\nHis erection pressed against the tight confines of his pants. He found it incredibly arousing, the way that she sat silently, allowing him to stroke her nipple while looking at him as if she expected him to continue their conversation. It was as if she was letting him know that her body was his to touch as he wished.\n\nCharlie put his hands on her knees, pulling her legs apart. She offered no resistance, allowing him to spread her wide, and when he took his hands away from her knees, she remained in that position, with her legs to the sides and her pussy clearly exposed to him. She still looked at him with a calm facade, acting as if it was perfectly normal for him to pose her in such a lewd position, although he could tell that she was very turned on.\n\nHe almost reached between her legs to push his finger inside her. But then he remembered that he had a small video camera under some papers on his desk. He reached over, dug under the papers until he found it. Holding it up to his face, he pointed the camera at her and pressed record. The red light came to life on the front of the camera.\n\nMichelle's calm facade faltered for a moment when she realized what he was doing. Her eyes widened and she bit her lip. Her knees dipped inward slightly, as if she struggled with an automatic reflex to close her legs, but then she returned them to their prior position, leaving her legs spread while Charlie panned over her body.\n\n\"This is Michelle,\" he said, zooming out so he could show all of her in the frame. \"She's naked on my bed right now. Very beautiful, isn't she?\"\n\n\"Are you recording?\" she asked, even though he knew she could see the red light.\n\n\"I am. Is there anything you'd like to say to the people who are going to watch this?\" Charlie pointed the camera at her face.\n\n\"Umm...\" She blinked into the dark eye of the lens. \"Hi...?\"\n\n\"Let's take a quick look at Michelle's lovely body.\" Charlie began to move the camera downward, holding it close to her so she knew exactly what part of her body he was filming. He stopped over her left breast. \"This is Michelle's left breast. It's the second most perfect breast in the world. What's the most perfect breast? That honor is held...\" He moved the camera sideways. \"... by Michelle's right breast.\" He focused on the right breast, bringing her nipple into sharp detail. She giggled.\n\nCharlie brought his hand into the frame, lightly touching the tip of her nipple, then pinching it. He heard her quick intake of breath. He filmed his hand palming her breast, slowly squeezing it.\n\n\"Let's keep going down.\" Charlie moved the camera lower, stopping on her belly button. \"This is Michelle's belly button. An innie, but not a very deepie. I think it could only hold a drop or two of Sprite. But it would be a fun cup to sip from. Let's keep going.\"\n\nNow the camera passed over her strip of pubic hair. \"Let's follow this perfect line of hair, and see where it leads.\" He slowly brought the camera lower until it hovered over her pussy. He was amazed at the sight of her swollen vulva showing on the view screen. He couldn't believe that he was filming this, that she was letting him do it. His voice was a low whisper as he said, \"This is Michelle's pussy.\" He could see that this was turning her on immensely. \"Michelle, will you please show the camera how wet you are?\"\n\nObediently, she reached down between her legs with her right hand, pushing apart her labia to expose the glistening inner pathway for the camera. She slid her finger inside, then extracted it, showing the camera that it was now shiny and wet. After a moment, she put her finger in again, sliding it in and out, fingering herself while the camera recorded it all.\n\nCharlie couldn't remain a disconnected observer any longer. He put the camera down beside the bed and reached between Michelle's legs. Michelle leaned back on the pillows, happy to pass the role of intruding finger on to him. She splayed her legs open, making contented murmurs as he stroked her.\n\nCharlie held his face close to her, inhaling her scent. He leaned forward, letting his tongue touch her, then kissed her wet vulva. She breathed out a sigh as he licked her up and down. He lost himself in exploring her edges and crevices, his tongue drifting here and there, finding and tickling the sensitive parts of her. She squirmed and wriggled underneath him.\n\nThe more he tasted her, the wetter she became, and he finally decided he had to be inside her. He climbed to his feet and started to undo his pants. Michelle quickly sat up. She pushed his hands away from the front of his pants and began to undo the clasp and zipper herself. As soon as his pants and boxers came down far enough that his erection sprang free, Michelle leaned forward and took it in her mouth. \n\nCharlie watched Michelle's head bob up and down on his penis. He could feel her lips on his shaft, her tongue darting around the head. She pulled it free of her mouth and held it in her hand while she kissed the underside of it. He could see her upturned face, his penis between her lips, her eyes closed. She kissed her way to the base of his shaft, then returned to the tip and took it in her mouth again. \n\nIt didn't take long before he had to stop her. He took a step backwards. \"What's wrong?\" she asked. \"Was that okay?\"\n\n\"What you were doing felt awesome. I just didn't want to... uh... surprise you.\"\n\n\"Surprise me?\"\n\n\"You know...\"\n\nShe looked up at him mischievously, lightly stroking his erection with her fingers. \"Are you that close?\"\n\n\"Yes... you might want to stop. Just give me a minute.\"\n\nBut she didn't. She continued to stroke him, looking up at him with her impish grin. \"Do you remember when you took my clothes off and had sex with me on your car?\"\n\n\"Yeah...\" He was having a hard time concentrating. Her hand felt so good. \n\n\"You stripped me completely naked,\" Michelle breathed. \"In the middle of the day, and you did me right on your car.\"\n\n\"Yeah... um...\"\n\n\"And we'd just made love in the shower, like, five minutes before. You know what I think, Charlie?\"\n\n\"What?\"\n\n\"I think you should go ahead and cum on me right now.\"\n\nCharlie felt his penis throbbing under the light touch of her fingers. \"Michelle...\"\n\n\"Go ahead,\" she urged him. \"It's still early, and I think I can get you hard again. In fact...\" She smiled up at him. \"I'm positive I can.\"\n\nHe opened his mouth to protest, but immediately realized he didn't want to argue. What she was doing felt too good. She stroked him a few more times, peeking up at him, and when he didn't say anything, she leaned in and touched her lips to the head of his penis. Her tongue slipped out, tracing the line where the head curved into the shaft. \n\nShe held his erection in her palm, pointed at her face, and kissed the tip of it, her tongue darting out to explore the hole at the end. Charlie felt it throbbing, pulsating, and felt sure she must be seeing it swell, since it was right in front of her eyes. But she continued daintily kissing and licking him as if oblivious to what was about to happen.\n\nMaybe he should have warned her. Instead, he watched silently as his cock started to jerk in her hand. The first jet of cum launched out and landed right on the tip of her nose. \"Eek!\" Michelle squeaked, recoiling in surprise. Charlie could see the line of cum dangling off her nose, crossing over her lips like a gooey streamer.\n\nMichelle immediately recovered, leaning forward and attempting to take his cock in her mouth again, even as it continued to shoot cum on her lips and tongue. She got her lips around the head of it but then started giggling and pulled away again. \"Oh my god...\" she said. \"How much is in there?\"\n\nHe couldn't answer for a moment as his cock continued to spasm. \"Built up... all day...\"\n\n\"I can tell.\" Michelle waited for his climax to subside, her cum-covered face hovering patiently in front of his erection. When his spasms finally slowed, she leaned forward and licked the head of his penis clean.\n\nCharlie went for the closest garment he could find, which happened to be his own shirt. He pulled it over his head and quickly folded it into a square. \"Here, let me clean your face.\" He reached down, but Michelle pulled away.\n\n\"Take a picture first,\" she said.\n\nCharlie picked up the camera again. He pointed it at her and started filming. \"Hi, Michelle.\"\n\n\"Hi!\" she chirped, beaming at the camera.\n\n\"You look lovely as always.\"\n\nShe smiled brightly. \"Even with your cum all over my face?\"\n\n\"Yes. Even then. Can I clean it off you now?\"\n\n\"Okay.\"\n\nCharlie continued to film her as he carefully wiped off her face with his shirt. \"Thank you for getting me off.\"\n\n\"You needed to,\" she said. \"I kept you waiting too long.\"\n\n\"It was worth the wait.\" He flipped the shirt inside out and dabbed at her face again. \"How's that? Did I get it all?\"\n\n\"Yeah. But do you think I could visit the bathroom and wash up in the sink?\"\n\n\"The bathroom's across the hall. What if my mom sees you?\"\n\n\"You can check the hall first.\"\n\n\"Right.\" Charlie glanced at the door. \"I guess that's fine. But can you put your dress on?\"\n\nMichelle rolled her eyes at him. \"Yes, Charlie.\" She got to her feet and leaned over to pluck her yellow dress from the floor. She pulled it on over her head and tugged it down over her breasts. \"Didn't you say you would check the hall?\" she reminded Charlie, after noticing that he was just standing there watching her. \n\n\"Oh. Right.\" Charlie grabbed a new t-shirt and pulled it on as he went to the door. He opened the door a crack, peeking out. The hall outside was dark, only illuminated by the thin light leaking up from the first floor via the staircase. Charlie opened the door wider, listening for the sound of the television from downstairs.\n\n\"Coast is clear.\" He let Michelle out and she crossed the hall to the bathroom. She turned on the light and closed the door behind her. Charlie could hear the sound of water running into the sink.\n\nHe turned off the light in his room and crouched down in the dark doorway, keeping guard on the hall. If he heard footsteps on the stairs, he could run over and intercept his mom before she reached the second floor. Stall her long enough for Michelle to creep out of the bathroom and hide in his room. Not that he had any big reason to keep Michelle hidden from his mom. He just didn't want to introduce them until things were... more clear.\n\nWhat would Cody Scolari do with the video he took of them kissing on the train platform? Would he show the video to Glenn? Would he show it to the whole school? What was the worst case scenario?\n\nDid it really make any difference? Whatever happened in the future, the day had definitely been worth it.\n\nHe was just glad that he'd made Michelle put her dress back on before the train pulled up to the station. She had been ready and willing to hop off the train wearing nothing but her boots, and that would have been a complete disaster. Even if they'd been just a few seconds later putting her dress on, Cody might have been able to film her through the train window. \n\nThe bathroom door opened a crack. Michelle had already turned off the light, and she peeked out of the dark bathroom. Charlie motioned her over. She scampered across the hall into his room.\n\n\"Don't turn on the light,\" she murmured. She had her dress off even before Charlie had finished closing the bedroom door, and climbed naked into his bed. \n\nShe was right. Charlie could already feel himself getting hard again. \n\n\"Can we watch that video you took of me?\" Michelle asked.\n\n\"Sure.\" Charlie pushed off his boxers and pants and stepped out of them. Naked, he found the camera in the dim light. He slipped into the bed next to Michelle, thrilled by the feel of her soft naked skin against his. The bed was a twin-size and they had to press against each other to fit. Michelle reached down and pulled the bed spread over them.\n\nHe felt Michelle's hand circle his erection and squeeze it. \"Told you,\" she teased.\n\n\"You do have that effect on me.\" He kissed her, his hand finding her breast.\n\n\"Let's watch the video.\" She ducked under his arm so that she could rest her head on his shoulder. Charlie reached around her, fumbling with the camera. He found the video and pressed play. Michelle appeared on the screen, naked, stretched out on his bed. \n\n\"This is Michelle...\" his voice came from the camera. Michelle watched quietly as the camera moved over her body. Under the covers, her hand remained on his erection, absently stroking as she watched herself displayed on the screen.\n\nThe video abruptly jumped ahead to the image of Michelle, smiling, with cum on her face. \"Oh my god!\" Michelle whispered. On the screen, Charlie's disembodied hand entered the frame to wipe her face clean. The video ended.\n\n\"Do you want to watch it again, or should I delete it?\" Charlie asked.\n\n\"Delete it.\" \n\nCharlie pressed the trash icon, then emptied the trash.\n\n\"It's gone,\" he told her.\n\n\"Thanks.\" Michelle rolled over so her back was against him. She reached behind and grabbed his left arm, pulling it around her as if she was rolling herself up in a blanket.\n\n\"What did you think of the video?\" Charlie asked. \"Did you like seeing yourself?\"\n\n\"I don't know...\" she said. \n\n\"You didn't like it?\"\n\n\"I did like it. But I'm glad you deleted it. I wouldn't want anyone else to see it.\"\n\n\"No one will.\" Charlie found her breast again and began idly playing with her nipple. His erection pressed against the small of her back. \n\n\"Did you like it?\" Michelle asked.\n\nCharlie considered. \"Well, the light was a little bright... I think a softer light would have looked better...a couple lights, at different angles, so we wouldn't get those shadows...\"\n\nShe swatted his shoulder. \"Silly! That's not what I meant! I meant, did you like filming me like that?\"\n\n\"Yeah...\" he said. \"I mean, I knew I would delete it afterwards. But yeah, it was a turn-on, definitely.\"\n\n\"It was...\" Michelle was quiet for a moment, then she said, \"Charlie?\"\n\n\"Yeah?\"\n\n\"If you ever need me to help with one of your movies... like one of your film projects... I'll do it.\"\n\n\"You'll help?\"\n\n\"Yes. I mean, like if you need an actress... for a part in the film...\"\n\n\"Okay. Thanks. Maybe I'll take you up on that.\" \n\nMichelle hesitated. \"Even if... you know... if you had a nude scene... or something... if you asked, I would do it for you...\"\n\n\"You would let me film you nude?\"\n\n\"If that's what you needed for your movie...\" she spoke softly. \"Like... if it was art... if it was artistic...\"\n\n\"Even if other people saw it? Like, you would be okay if a room full of people watched your nude scene up on a giant screen? Like, people who know you?\"\n\nShe squirmed against him. \"If that's what you needed... I mean, maybe I could wear a mask?\"\n\n\"A mask? Like in 'Eyes Wide Shut'?\"\n\n\"I don't know... I haven't seen that movie...\"\n\n\"It has a part where everyone's wearing masks. What if I needed to film you having sex?\"\n\n\"Oh! With who? With you?\"\n\n\"No. I'm the director, I have to direct. I mean with an actor.\"\n\n\"You want to film me having sex with someone else? An actor?\"\n\n\"Or actress...\"\n\n\"Charlie!\"\n\n\"Sorry... I'm just kidding.\"\n\nMichelle took a breath. \"I'm not,\" she said. \"I mean it. Whatever you need me to do, I'll do it. For your art.\"\n\n\"Okay. Thanks.\"\n\n\"Sure.\" She reached down between her legs for a moment. \"Mmm. Feel.\"\n\nHe touched her arm and followed it down. Just before he reached her wrist, she took his hand and guided it to her pussy. His fingers skated across her slick labia. \"You're so wet,\" he whispered to her.\n\n\"Yes...\" She shifted higher on the bed and bent slightly at the waist, opening her legs and reaching between them, her fingers searching for his erection. She found it, and her fingers wrapped around the shaft, pulling it through the gap in her thighs. She closed her legs, and Charlie felt his cock snugly wrapped between her thighs, pressed against her wet pussy. The head of his penis protruded out the other side, and Michelle gently toyed with it, tickling it with her fingernail.",
        "Charlie flexed his hips, pulling away from her slightly, and discovered that her pussy was slick enough that his penis easily slid across it. He didn't pull all the way out, but left the head between her legs, nestled between her thighs. He pushed towards her and slid through the gap again, his head once again poking out just below her clit.\n\n\"Mmm!\" Michelle murmured as Charlie fell into a slow rhythm, thrusting in and out, his shaft stroking against her. She put her hand between her legs, touching the head of his penis as it appeared and disappeared. Her body moved in sync with his, pushing slowly against his thrust until their bodies fit together like matching puzzle pieces, then moving swiftly apart so they could once again come slowly back together.\n\nCharlie pushed her hair away from her neck so he could kiss her there, just above the black ribbon. He kissed his way up to her ear, then ran his tongue up behind her ear. It was apparently a sensitive area for her, because she gasped and squirmed. His left hand squeezed her breast while he kissed his way to her earlobe. He could see the hole in her ear, now empty of the sparkly earring she had worn earlier, and he wondered when she had removed them.\n\nMichelle reached down with her hand, and the next time he thrust forward, she guided him upward, inside her. She groaned as he pushed slowly into her. Charlie had thought the press of her thighs around his shaft was stimulating, but it was nothing compared to the tightness of her pussy. He pushed into her until their bodies met, then paused a moment, relishing the feel of being inside her. \n\nSlowly, he began to move, pulling out, then pushing in again. He peeked at her face, and her eyes were closed, her lips parted. He watched her for a moment, enjoying the subtle change in her expression each time he filled her pussy. Her body moved with him, pushing back to meet his thrusts.\n\n\"I'm in my bedroom, in my bed, and I'm making love to Michelle Santos,\" Charlie thought as he began to move faster. \"I've slept under this bedspread since I was ten, and right now the most beautiful girl I've ever known is naked underneath it and I'm making love to her. A few days ago, I thought she would never talk to me again, and now here I am, I'm inside her...\"\n\nHe found himself becoming more and more excited as he considered each unbelievable detail of the evening, his thoughts matching the accelerating rhythm of his thrusts.\n\n\"... she wanted to come here... she wanted to come here for this... no, I wanted to come here... she wanted to have sex outside... outside!... she wanted me to cum... because she came on the train... and she wanted to make me cum too... and she did, she already did... she made me cum... with her mouth... but now I'm going to cum again... oh my god... is she having another orgasm?\" \n\nShe was. Michelle's body tensed, quivering with pleasure. She had her eyes tightly closed and her hand pressed over her mouth to muffle her cries.\n\n\"... this is the best day of my life...\" Charlie thought. \"...this is the best day of my life... this is the best day of my life... oh my god... I can't hold it back anymore...\"\n\nHe sank into Michelle as deep as he could go and a second later felt himself began to spasm. Michelle pushed back against him, pressing their bodies together. Her pussy felt so warm and tight. \n\nCharlie closed his eyes. He pressed his cheek against Michelle's shoulder, lost in the feeling of euphoria that washed over him. His penis finally stopped pulsing, but he left it inside her. Perhaps it was exhaustion, or maybe contentment, that kept them in that same position for several minutes without speaking. Charlie had his arm folded over her, his hand resting just below the swell of her breasts.\n\nHe wasn't aware that he dozed, but he must have, because the next time he focused on his surroundings he was lying on his back, and Michelle had nestled into the crook of his arm. She was asleep, her breathing deep and steady. Charlie checked the glowing numbers on his clock.\n\n\"Michelle.\" Charlie wiggled his arm to wake her. \"What time do you have to be home?\"\n\nMichelle didn't open her eyes. \"Wha time 'sit?\" she murmured in a sleepy voice.\n\n\"Almost 9.\"\n\n\"Mmm. Still early...\" She settled back into his shoulder.\n\nCharlie's phone buzzed, and the screen lit up, illuminating the room in a dim glow. Charlie did his best to snag the phone without dislodging Michelle from her spot. He looked at the screen.\n\n\"Shit.\"\n\n\"Hmm?\" Michelle cracked open her eyes. When she saw Charlie looking at the screen, she lifted her head and blinked at it.\n\nThe screen showed a message from Ronni. It was a photo of a beautiful red dress lying on a bed. The message read, \"Hi Charlie! I went dress shopping today. What do you think?\"\n\n\"That's a really nice dress,\" Michelle said.\n\n\"What do I tell her?\" Charlie asked.\n\n\"Hmm?\"\n\n\"About prom.\"\n\n\"Tell her she's going to look beautiful in that dress and you can't wait to go to prom with her.\" Michelle closed her eyes again.\n\n\"You think I should still go to prom with her?\" Charlie turned off his phone and set it back on the table.\n\nThe hint of a smile twitched Michelle's lips. \"Why? You've decided you'd rather go with me instead?\"\n\n\"Well... yeah. I mean...\" Charlie struggled to express himself. \"I mean... after today... and this...\"\n\n\"Charlie. You asked Ronnie and she said yes, and she's excited to go. You should take her.\"\n\n\"And what about you? You'll still go with Glenn Mack?\" Charlie felt a surge of jealousy.\n\n\"I said I would.\" Michelle stretched, her breasts pressing against his side. \"I mean, I don't know what Cody's going to say to him. Maybe he'll try to sabotage it. But I think Glenn will still want to go with me, even if Cody does tell him I was kissing you.\"\n\n\"You're still going with Glenn. So today didn't change anything.\" Charlie frowned.\n\n\"Oh, Charlie. Are you mad?\"\n\n\"No...\" But he was. Mad at himself.\n\n\"You don't understand,\" Michelle said. \"Glenn's a really nice guy... and his mom is friends with my mom, and both of our moms are excited that we're going together... I just can't toss him aside like that. I can't do that to him.\" \n\n\"Right. And your best friend Vanessa is going with Cody who's Glenn's best friend...\"\n\n\"And you're already going with Ronni.\" Michelle let her hand rest on Charlie's chest. \"You have your date, I have mine. We'll both go and have a fun time. I hope you know how to dance because I'm definitely going to steal you for a dance or two. Okay?\"\n\nCharlie gazed at the dark ceiling for a moment. \"Michelle?\"\n\n\"Mm?\"\n\n\"You said Glenn asked you to prom, but you didn't say yes until after you found out I asked Ronni.\"\n\n\"Mm-hmm.\"\n\n\"Why didn't you say yes right away? If he's a nice guy, and your moms are friends and... and everything... why didn't you just say that you'd go with him? I mean, I know you said you wanted to see if I'd ask you... but even if I had asked you, wouldn't you still have picked him?\"\n\n\"You don't think I would've picked you?\"\n\n\"I don't know. I guess I'm just trying to make sense of why you would have.\"\n\nMichelle didn't answer right away, and Charlie wondered if he should have kept his doubts to himself. But then she spoke, quiet in the darkness. \"Tonight, when you took out your camera and started to film me... it was exciting, to know that I was naked and you were recording me... but also scary, knowing that everything would be saved on the camera. But I knew I could do it because I knew you would delete it when I asked you to... and you would probably delete it anyway, even if I didn't ask, because you would never risk it getting out. I know I can trust you, and I do trust you, and it makes me feel safe when I'm with you, even when I'm acting crazy. Charlie... I don't have that with anyone else... just with you.\"\n\n\"Okay.\"\n\n\"So that's why.\"\n\n\"Okay.\"\n\nCharlie squeezed her close. For a few minutes, they lay quietly together.\n\n\"Your turn,\" Michelle said.\n\n\"What?\"\n\n\"You found out you were a finalist for the Jefferson film program. I know Ronni is interested in film. I know she's taking the classes, and you work with her in the AV department. Plus, you asked her out and she said yes, so she must at least kind of like you. So why did you ask me to go with you to Linterna and not her?\"\n\n\"Ummm...\" \n\n\"She's pretty, Charlie. Don't you think she's pretty?\"\n\n\"Yeah, I guess...\"\n\n\"She is. She absolutely is. Don't you think she would have liked to go with you to Linterna?\"\n\n\"I never even considered asking her to go,\" Charlie said. \"Actually, she doesn't even know I went to Linterna.\"\n\n\"You didn't tell her you were interviewing for that program? Haven't you seen her?\"\n\n\"No...I mean, yes, I've seen her, in the AV room... but I've been distracted the last few days.\" Charlie took a breath. \"All I've been able to think about the last few days is you.\"\n\n\"Really?\"\n\n\"Yeah. I barely even thought about the interview. Just about you, and that phone message I left you... I don't know, maybe it was a good thing, maybe if I thought about the interview too much I would've made myself too nervous...\" He paused. \"Why didn't you call me back? I thought you weren't going to come, because I never heard from you...\"\n\nHe looked at her, waiting for an answer, but she remained silent, her fingers tracing a tiny circle in the middle of his chest.\n\n\"I just wanted you to come with me,\" he murmured. \"Only you.\"\n\nHe peeked at her in the darkness, barely able to make out the curves of her face. She still had her head resting against his shoulder. Her hand continued to trace tiny circles on his chest. \n\nCharlie let his head rest on the pillow. He stroked her back gently with his fingertips. \n\n\"Charlie?\" Michelle asked.\n\n\"Yeah?\"\n\n\"I should take a shower.\"\n\n\"Okay.\"\n\n***\n\nThey accomplished the shower with far more subterfuge than was probably necessary. Charlie even went so far as to go downstairs to the kitchen, pretending to get a glass of water, but actually peeking into the living room to make sure his mother still sat safely in front of the television. He went upstairs and joined Michelle in the shower, helping to scrub her clean and kissing her under the warm spray.\n\nThey returned to his room and held each other for a while longer in the darkness. At ten o'clock, they dressed and Charlie again scouted out his mother. She was asleep in her chair, still in front of the television. Charlie helped Michelle to sneak out the back door, then went and shook his mother awake. \"Mom?\"\n\n\"Oh... hey... did I fall asleep?\" She blinked at him blearily.\n\n\"Yeah. Hey, I need to pick up something at the school really quick. I'll be right back, okay?\"\n\n\"Okay.\"\n\nCharlie left his mother in her chair. He had no doubt that when he returned, she would still be sleeping there.\n\nMichelle waited just outside the back door, and they walked to Charlie's car. \"Is it just you and your mom?\" Michelle asked.\n\n\"Yeah. My dad passed away when I was nine.\"\n\n\"Oh... I'm sorry.\"\n\n\"It's all right. It's been a while.\" Charlie unlocked the passenger door and held it open for Michelle. \"He liked to ride around on his motorcycle. He rode it back and forth to work, every day. Until one night it was raining really hard and he crashed it.\"\n\n\"Oh! That's awful.\"\n\n\"Yeah. He was really into saving the environment. That's why he drove the motorcycle. Because it used less gas.\" Charlie closed the passenger door and went over to the driver's side. He sat next to Michelle and started the car.\n\n\"Do you look like him?\" she asked.\n\n\"I'll show you a picture sometime. You can decide.\" Charlie turned left at the corner, driving toward the train station.\n\n\"Do you think my car is going to be the only one left in the parking lot?\" Michelle asked.\n\n\"I doubt it. The trains run pretty late. I think the last train is two in the morning?\"\n\n\"Really? That late?\"\n\n\"Yeah. You know... people go drinking on Saturday night in Linterna, then they take the train back.\"\n\n\"Oh, that makes sense,\" she said. \"Cody was waiting for the train to Linterna, wasn't he? Do you think that's where he was going?\"\n\n\"Who knows. Maybe he missed his train. He walked off the platform, and I didn't see him outside. Maybe he just left.\"\n\n\"Maybe.\" Michelle looked outside at the passing street lights. \"I kind of know what his car looks like. I think I could recognize it if it's still in the parking lot.\"\n\n\"Does he know what your car looks like?\" Charlie asked.\n\n\"I don't know. I don't think so.\"\n\nThe light ahead of them turned red. Charlie slowed and stopped. A car blaring loud rap music passed through the intersection in front of them.\n\n\"Do you want to eat lunch with me on Monday?\" Charlie asked.\n\n\"At school?\"\n\n\"Yeah. In the cafeteria, on Monday.\"\n\n\"Just the two of us?\"\n\n\"Yeah. Or whatever. If anyone else sits with us, I wouldn't make them leave.\"\n\n\"Okay. I'll eat lunch with you.\" She grinned. \"People will notice us, though.\"\n\n\"I don't mind. Do you?\"\n\n\"No...\"\n\nWhen Charlie pulled into the parking lot of the train station, he recognized Michelle's car sitting by itself at one end of the parking lot. A handful of other cars were parked closer to the station. He pulled into a spot near Michelle's car.\n\n\"Thanks,\" she said softly, looking at him expectantly. \n\nAfter all they'd done that day, Charlie had no idea why his heart was pounding so much at the thought of giving her a simple good-night kiss. \"Um... so.. good night. I hope you have a good weekend...\" He started to lean towards her, but abruptly froze. \"Ahh.. damn it!\"\n\n\"What is it?\"\n\n\"I forgot, your stuff is still at my house. You know... Hoppity? And some of your clothes.\"\n\n\"Oh, right.\" She grinned. \"So awful. You know, if I keep leaving my clothes with you, I'm going to run out of things to wear.\" She slipped her arms out of the straps of her dress and started to push it down her body.\n\n\"Michelle...\" Charlie glanced out his window, making sure no one was nearby. Michelle pulled her legs out of her dress and tossed it into his backseat. She was naked, wearing only her boots and the black ribbon which remained tied around her neck.\n\n\"Where's your underwear?\"\n\nShe giggled. \"Under your bed.\"\n\n\"Wow. Okay.\"\n\nMichelle leaned forward. \"Good night, Charlie.\"\n\nCharlie met her, pressing his lips against hers. His hand found her breast, squeezing it and stroking her hard nipple.\n\nMichelle finally broke the long kiss, pulling back to her own seat. Still grinning mischievously, she pulled the door handle and pushed the door open.\n\n\"You have your car keys?\" Charlie asked.\n\n\"Yes, I have them.\" She jingled her keys.\n\n\"And you have a spare set of clothes in your car?\"\n\nMichelle just grinned. She set one foot and then the other outside the car door, letting her legs stick out into the night air. Taking a deep breath, she got to her feet. She stood there, naked, looking nervously around the parking lot.\n\nCharlie watched her lovely ass sway back and forth as she walked the short distance to her car, and he felt his erection straining against the front of his pants. Would he ever get used to seeing that naked body? Would she ever get over the novelty of stripping in front of him? He watched her unlock her car and climb inside. Before closing her door, she smiled at him and waved.\n\nHe waited for her to start the engine. Her windows were tinted so he couldn't see inside, but he hoped that she was pulling out a spare set of clothes from somewhere and getting dressed. Would her parents ask what had happened to the yellow dress she'd been wearing earlier? What would she tell them? \n\nHe'd ask her about it at lunch on Monday.\n\nActually, he had her phone number. He could just text her.\n\nMichelle put on her reverse lights and pulled out of the space. Charlie put his own car in reverse. He followed her out of the train station parking lot, but then she turned right, and he turned left. He watched in his rear view mirror until her red tail lights disappeared from view.\n\n***\n\nCharlie came to school early on Monday feeling pretty good about himself. He thought he would take a look at the AV closet before the week started. Michael and Dinesh had used some of the equipment over the weekend and Charlie wanted to double-check that it was all checked in and stored properly.\n\nHe parked in the student parking and walked through the front door of the school. The halls were still quiet and mostly empty, with a handful of other early risers walking here and there. He walked to the Front Tee and turned left, following the hall towards the AV room. On the way, he stopped by the boy's bathroom.\n\nThe bathroom was empty. Charlie entered one of the stalls and voided his bladder into the bowl. As he flushed the toilet, he heard the bathroom door open and a group of muttering boys entered. He heard one of them say, \"Is he in here?\"\n\nCharlie opened the stall door to find Cody standing outside. Cody smiled grimly. \"Ah, there he is. Charlie Brown.\" Cody had two other boys with him, Ryan and Evan. They were both football players, both very large. \n\n\"Hey...\" Charlie said. \n\n\"I need to talk to you,\" Cody said. \"You have a minute?\"\n\n\"Okay.\" Charlie waited to see what Cody would to say. A second later, something whacked Charlie hard in the side of the head. He stumbled sideways, his head ringing, and hit the wall. His legs wobbled and he slid halfway down the wall. Tiny stars shot around the edge of his vision, and at first he had trouble comprehending what had just happened. It slowly dawned on him that either Ryan or Evan had hit him.\n\nCody leaned over Charlie. \"That was just to let you know I'm serious about what I'm about to tell you. Stay away from Michelle. I don't want to see you with her ever again. She's going out with Glenn Mack right now. I don't know what you and her had before, and I don't care. She's with Glenn now.\"\n\nCharlie touched the side of his head where the blow had landed. It almost felt like he should feel a crack there. \"She's not his,\" he muttered.\n\n\"Look, guy... he likes her. He's liked her for years. I'm not going to let you fuck this up for him. Got it?\" Cody had his phone in his hand. He shoved it toward's Charlie face. Charlie saw the image clearly: Michelle, pressed against the pillar at the train station; Charlie pushing against her; their lips together.\n\n\"Glenn saw this?\" Charlie asked.\n\nCody shook his head. \"No. I've showed it to three people. These two guys, and one other. No, I'm not going to show it to Glenn. Glenn doesn't need to know because I'm solving this problem right here.\" Cody put his phone back in his pocket. \"Stay away from her. That's all I'm saying. You're not going to end up with her. You know that. You're not going to end up with her, and if you go on bothering her, and you make her unhappy, and you make Glenn unhappy... well, I promise you, I'll make you the unhappiest of all.\" He nodded. \"Good talking to you, Charlie Brown.\" He signaled Ryan and Evan, and the three boys walked out of the bathroom.\n\nCharlie waited for the door to close. He pulled himself to his feet and went to the sink. He looked at his reflection in the mirror, rubbing his head where he'd been punched, then turned on the water and splashed some in his face. \n\nWhat would Cody do when he saw Charlie sitting with Michelle in the middle of the cafeteria at lunchtime? Would he attack Charlie right there or wait until later? If anything, the attack had strengthened Charlie's resolve to be seen with Michelle at the school. So Michelle was Glenn's now? Did Glenn have two sets of her clothes at his house, plus her vibrator? Not only was the vibrator under Charlie's bed, he was on a first-name basis with \"Hoppity\".\n\nCody Scolari could go ahead and pound on him. Michelle was worth the pain. Maybe when she saw what kind of friends Glenn had, she'd rethink being his date.",
        "Charlie touched the side of his head again, grimacing. \"Cheap hit,\" he muttered. \"Distracted me and swung at me from my blind side. Bunch of cheap cowards.\" He stepped out of the bathroom, looking for the boys, but they were gone.\n\nHe only had ten minutes now before first bell, but he still wanted to stop by the AV room. He continued down the hall until he reached the familiar door. He pushed it open.\n\nRonni waited for him there, sitting in the chair from the editing bay. She looked up at him, and he could see the angry hurt in her eyes. She was holding her phone. \n\nCody's words came back to him: \"I've showed it to three people. These two guys, and one other...\"\n\nRonni held up her phone, showing him the screen. He could see the image of Michelle and himself kissing. \"So, Charlie...\" She spoke in a low voice. \"You want to tell me what you did this weekend?\""
    ],
    "authorname": "jessica_tang_vonharper",
    "tags": [
        "exhibitionism",
        "exhibitionist",
        "voyeur",
        "voyeurism",
        "public nudity",
        "snuggling",
        "submission"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/saturday-night-school-ch-05-1"
}