{
    "title": "Blow Your Mind Pt. 10",
    "pages": [
        "Thanks for the feedback so far, much appreciated. I want to give everyone a heads up on this one, there is a lot of non-sex stuff in this story because of the situation. While I want to be sure that aspect is included, I simply couldn't skip over this stuff. If someone where in this situation, there would be a LOT of figuring out to do, and to hand wave it would be lazy work in my opinion. So a heads up for you.\n\nPART X\n\n\"What the hell did I do?\" Brandi whispered to herself.\n\n\"That's Kory's voice. It's not a memory and it sure as fuck isn't some skill. It's Kory's voice and it sounds like it's, shit what, alive? Sentient? Conscious?\"\n\nBrandi swallowed and shuddered. \"Jesus, what have I done? I ripped her out of, of HER!\" She looked down at Kory's body and shuddered again.\n\n\"Good God, I didn't want this! What the hell am I? I just ripped a human's SOUL out of their body!\" Brandi said as she felt herself beginning to panic.\n\n\"NO! Focus Brandi! Fucking get it together!\" She snarled at herself. She forced herself to take several breaths slowly and get herself back under control. \"That's it Brandi, that's it. This is a time to think and think very carefully.\"\n\nBrandi took another long breath and then nodded. \"Right. First, shower. I stink of sex and feel nasty. Then I need to get dressed and get the hell out of here. No one is expected, but I can't take the chance of someone coming by. Fuck. Can Kory hear me thinking? No, probably not, I can't hear her, only when I connect to that other desk. It's active somehow, but it's, cripes, blocked off somehow. Shit I had better be careful changing back to me, last thing I want is for Kory to hijack me and turn me into her! Fuck, how am I even going to work this?\" Brandi muttered softly to herself. She felt better doing that than thinking it.\n\nShe got clean quickly and dressed fast. She looked around and saw Kory's laptop. She grabbed it, and then saw the coke on the mirror. She tapped it into a small bag. \"Kory said this was synthetic, which means this might be more than just coke reacting with me. I need to have it examined. Shit, how do I move that on a plane?\"\n\nAfter checking around a bit more and being annoyed that she had not been able to really scan Kory for information she decided she had swept the room thoroughly.\n\n\"Now, what do I do with you?\" Brandi said with a shudder as she looked at Kory's body. \"God, those eyes, like a doll, empty, dead. Christ what a mess. Then again, I was going to leave you a fucking vegetable anyway since you were too fucking dangerous to let alone so this is just another way of doing it. Shit.\"\n\nBrandi thought for a bit. \"I could dump her body where they were going to dump mine. Fuck. And I have three other veggies lying around this house. God what a mess.\"\n\nBrandi stood up.\n\n\"Okay. New plan. Time to ditch Megan.\" Brandi thought. She went into the garage and pulled Megan's still unconscious body out of the trunk and laid it next to Joe's body. Brandi had a bad feeling that Joe was likely dead, but she didn't want to find out and left the hidden body alone. She then looked out the front window. Aside from the car in the garage, there were two other cars out there. One she knew belonged to Frederick. But the other one, a regular Ford sedan which was nice but plain and normal, was what her memories said was a \"dumper\". A car, owned by a shell company, that could be abandoned after one use and then automatically reported as stolen due to a hidden hack in the Illinois DMV computer. It had a full tank of gas and all she needed to do was get the keys from a ring on the wall by the door.\n\n\"That will work. I think I need to have some time to myself anyway and a long drive will do fine.\" Brandi thought to herself.\n\nBrandi then accessed her memories of the others and went back inside to gather some things. First, in one of the upstairs guest rooms Brandi found her stuff and her clothes she had packed for the hotel room. Then, Brandi went downstairs and found about $15,000 in loose cash in the room Big Joe had been working in along with a bunch of that coke Kory had been talking about. She took a good sample but made sure not to take enough to get busted for intent to sell. She then grabbed Kory's laptop. Looking around, Brandi cased the whole house room by room using her skills as a safe-cracker and burglar from Brenda. She had a feeling that there was something else to this place and she didn't want to leave anything behind if it could help her later on.\n\nAfter some looking she found a small wall safe in one of the guest rooms. She disabled the alarm and opened it with little trouble. Aside from $10 K in cash and some bonds, she found a fake passport and driver's license, and a portable hard-drive.\n\n\"Looks like one of Kory's emergency stashes in case she ran into trouble. Hopefully this hard drive has dirt that I can use to make sure nothing comes after me.\" Brandi thought.\n\nBrandi swept the house once more and after one last look at Kory's body, she got into the car and drove off. She did her defensive driving instructor proud and she was damn sure she had no tails of any kind as she headed west out of Chicago. She drove west for a while and then cut south along the Mississippi towards St. Louis.\n\nThe entire time she did her best to ignore the other \"desk\" in her head. Each time she mentally touched it, she would get a \"Hello?\". Each time the reply became much more panicked and Brandi could hear some real fear in Kory's voice.\n\n\"Shit, I wonder what this must be like, is it dark? Is it like a dream? God, what a mess.\" Brandi sometimes muttered. By the time she had reached St. Louis she had a plan in her head.\n\nShe checked into a nice hotel and then used her burn phone to make a call.\n\nFirst she sent a text with a number that indicated she was in another form, and then a number that indicated mission success, and then a number that indicated she had a problem that she needed to talk about now.\n\nAfter getting an acknowledgement on all three Brandi called.\n\n\"Yes.\" Mr. Case said.\n\n\"Good to hear your voice boss. Bottom line is that a genius woman was actually the puppet master in the situation. The client was targeted as a show of power to keep her minions in line, nothing more or less. Tell them to wait about a month or so and they should have no issues doing business other than the usual crooks.\"\n\n\"Excellent. I was beginning to get worried this one might be too tough for you. But you came through.\"\n\n\"Nothing is too tough for me boss. But we have some complications. The woman had me for tea and wouldn't let me go. I was able to duck out and I was able to beat her and four of her friends in cards. Full clean outs on two, and two I had to lights out. He might be really hung over, but the other one is certainly hung over.\"\n\nThere was silence on the line for a bit. \"How are you?\" Mr. Case asked after the pause.\n\n\"I am currently fine, but there is another complication. I'm not good with talking about this over the phone, but I have to address a problem I currently have with how well this woman makes tea. I am currently on a driving tour along the Canadian border and will need about two weeks to work it out.\"\n\nBrandi was glad they had worked out some codes for situations like this. She had thought this a bit much, but as it was another thing to memorize and keep track of and the fact you could never be too careful she had gone along. What Brandi had told her boss was that aside from why the client had been targeted, he would be able to do business in Chicago. She had been captured but had been able to escape and had neutralized anyone involved with it via mind wipes, by knocking them out, and killing someone. She had also told her boss she had some issues with her abilities, she was working on it, but needed two days. She was moving south, but slowly and would try him later after the two days.\n\n\"I understand. Do you need one of my friends to stop by?\" Meaning \"Do you need me or some of my agents to help you?\"\n\n\"No. I might in a couple of weeks, and I may need the cleaning service once done with the tea. But I will advise once the next tea party is done.\" Meaning \"No yet, give me two days. I may need someone to clean up after me.\"\n\n\"I very much hope that you and your friends don't make too big a mess. I'd rather not have to use the cleaning service if possible.\" Meaning \"I really hope you don't have to have me send someone to clean this up, it's not good business to do that.\"\n\n\"Me too. Talk to you soon boss.\"\n\nBrandi sat back and sighed as she hung up. She ordered room service, two very large meals and a bunch of appetizers, and ate everything. She sighed when she was done.\n\n\"No helping it. I need to, well, talk to Kory.\"\n\nBrandi sat down in her bed, relaxed as much as she could, closed her eyes and reached out to the other desk.\n\n\"Kory?\"\n\n\"Who's that! Please! Talk to me! Where am I?\" Kory voice replied in a very panicked tone.\n\n\"Kory, listen. LISTEN! Okay, there you go. What can you see? What can you feel?\" Brandi asked.\n\n\"Oh God! You can hear me! Thank you! I'm, oh Lord, I don't know where I am. I feel like I'm dreaming but I know I'm awake! I can't really see anything, it's like I'm in a bubble, everything is distorted and shaded! I can hear things, but they are all distorted! Like when you have a mic on in the computer during video chat!\"\n\n\"You can hear me fine?\"\n\n\"Yes! I can! Please! What happened to me?\"\n\n\"Hold on, I am not sure completely but I will try to help you. But first off, you are Kory right? As in Cute Kory?\"\n\n\"Yes, that's me! The hottest stripper in Chicago!\"\n\n\"And also the head of the criminal underworld using various mob bosses, union leaders, corrupt officials, cops and the DA as your puppets to control everything while making it look like it's the DA or a Police Captain?\"\n\nThat caused a pause.\n\n\"Okay, bye bye.\" Brandi said.\n\n\"Wait! Fuck! Yes! Please, don't leave me! Yes, that's, damn it, yes that's me.\" Kory's voice sounded deflated and defeated.\n\n\"That was easy. Is being cut off that bad?\"\n\nBrandi felt a mental shudder through her connection. \"Its horrible! It's like time is all fucked up! How long have I been here? It feels like a few seconds and a hundred years all at once! Fuck me, please don't leave me alone like this!\"\n\nBrandi shuddered herself. \"Fuck, that doesn't sound fun at all. Cripes, if only that bitch hadn't resisted so fucking hard.\" Brandi muttered. \"Shit, I wonder if she heard that? I wasn't focusing on saying anything through the connection.\"\n\n\"Brandi, did you hear me?\"\n\n\"No! God! Is the connection failing?\"\n\n\"No! Damn it, sorry, no. I'm trying to figure out how to talk to you. Okay, let me try something.\"\n\n\"I wonder if I can let her, uh, access, I guess, access my senses, see what I see? Shit, I wonder if she will try to take control? Hang on.\" Brandi focused on the connection.\n\n\"Can you tell when I am connected? Even when I am not talking?\"\n\n\"Yes, somehow. It's like, uh, it's like the screen clears up a bit, things are brighter, clearer? Focused? Yeah, focused.\"\n\n\"Okay. I'm going to try something.\" Brandi said and then cut her connection. She counted to five and reconnected.\n\n\"Don't go! Please!\" Kory was screaming when she hooked back in.\n\n\"I'm back! Calm down!\"\n\n\"You bitch! Don't do that! Please don't! It gets so dark in here!\"\n\n\"Alright. Sorry about that, I needed to know if you were telling the truth. You are way too smart to not be careful around.\"\n\nBrandi felt like Kory sniffed a bit and then felt a bit of pride. \"You think so?\"\n\n\"You took over the Chicago underworld and the only reason you got caught is because of a freak situation. Yeah, you are pretty damned smart.\"\n\n\"What exactly IS the situation? Okay, hold on. Who are you? I don't recognize your voice but you sure know a whole hell of a lot about me, almost like you read my mind. I can have your name. Please?\"\n\nBrandi was going to give her a fake name, but then sighed. \"Fuck it. Kory, we may be together for a bit, so yeah, I'll give you my name. I know that Kory is yours, even if the spelling is different, so Kory, I'm Brandi.\"\n\n\"Brandi. Well, I'd say it's nice to meet you, but well...\"\n\n\"Yeah, I get it. No hard feelings about that. It's been about 24 hours since this happened.\"\n\n\"A full day? Man, It could have been decades or ten minutes from how I can tell.\"\n\n\"What's it like? How does this feel? Can you feel?\"\n\nKory was silent for a bit. Brandi could tell she was much calmer now that she was able to talk to someone and had an idea about how much time had passed. Brandi frowned mentally as she could feel that Kory was beginning to wonder about how she could escape.\n\n\"Damn it, she is going to be a problem unless I can figure out what to do.\" Brandi thought to herself. \"At least I have to actually work at communicating, it requires a bit of effort to communicate and keep the link going. That means me slipping is a bit harder to do.\"\n\n\"Kory! Don't fucking play with me or I will cut you off and leave you cut off. How does this feel? I need to know so I can figure out how we are going to do this.\"\n\n\"When I'm cut off it's like a combination of a bad acid trip and being completely cut off from any sensory stimulation. You know how sometimes you close your eyes in the dark and you swear you start seeing weird colors of black after you have kept them closed for a while without thinking of anything? I used to do that as a kid sometimes, and it's like that only everything is twisted and feels wrong. Like I'm not where I am supposed to be.\"\n\nBrandi felt that shudder again. \"I feel like I'm disconnected. If you were a ghost, this would be what you would feel like I bet.\"\n\nBrandi thought a moment. \"Okay, I am going to try something. I want you to tell me what happens, I'm not cutting the connection, it will be something else.\"\n\nBrandi took a breath and then while holding the connection she opened her eyes.\n\n\"Hey! I, I can see! I can see a, door, white wall, dresser, mirror... MEGAN?!?!\"\n\n\"No, not Megan.\" Brandi replied out loud.\n\nThere was a pause. \"I heard that. I, I HEARD that!\"\n\n\"Okay, hang on.\" Brandi eased back on the connection and Kory instantly spoke up. \"Hey! I can't see anymore!\"\n\n\"Hang on Kory, I'm trying to see how this connection works. How did you see? Was it like your normal vision?\"\n\n\"Uh, no. More like a TV screen. Like a step removed? You know?\"\n\nBrandi focused on the connection again and she heard Kory let out a relieved sigh. \"There, I can see again. Yeah, it's like I'm watching through someone's eyes by way of a camera in their eyeballs, it's not ME seeing it through my own eyes, it's me seeing it with my eyes watching something else.\"\n\nBrandi made a mental nod. \"Okay, let's try something else.\" She thought. \"Kory, how about now?\"\n\nBrandi focused her mind on the connection and making it a strong as possible. There was a pause and then a low sob.\n\n\"I can feel. Sort of. I can tell I'm sitting on the bed, I can vaguely feel the comforter, I can smell coffee, vaguely. I can feel the clothing but it's like there is a layer of thin paper between my skin and the clothing. I can see like I said. Fuck.\"\n\nAll at once Brandi felt pressure on the connection. It was like something was trying to force its way along it. Brandi immediately shoved it back.\n\n\"Ow!\"\n\n\"What were you trying to do?\" Brandi asked.\n\n\"Ouch. Damn that hurt. I was trying to, uh, well, feel things? I was trying lick my lips, or Megan's lips, or your lips?\"\n\n\"You were trying to take control?\" Brandi asked in a cold voice.\n\nBrandi felt panic in the connection. \"No! I mean, son of a bitch, I don't know what I was trying to do! I'm trapped in this Tales from the Far Side situation and I was trying to see if maybe if I could connect to something I could wake myself up! I am hoping this is a dream, or a nightmare more accurately, but I am really sure I'm not dreaming and the idea of going back on this weird trip is scaring the hell out of me.\"\n\n\"Okay, I get it Kory. I think this connection only works one way though. I felt your push and then felt the reaction. It didn't hurt me much. I have to focus to keep the connection, I wouldn't try that if I were you as you might force a disconnect. And if you force it, I don't know what will happen.\" Brandi smiled to herself as she lied. She didn't want Kory trying this again because she wasn't sure what would happen. Right now, she was Kory's gatekeeper and she intended to keep that position until she could figure out what to do.\n\nShe felt Kory's shudder and fear. \"Good, fear is my ally here.\" Brandi thought.\n\n\"I understand, I won't do that again.\"\n\n\"Good. So you can sense things, but through a filter, when I focus on a connection. Okay, so we know that. Now, how do you feel? Hungry? Tired? Weak? Strong?\"\n\n\"I am not hungry. It's weird, but I feel like I just had a meal. I'm a bit tired, like I feel my body, uh, our body, crap, the body has been up a while.\"\n\nBrandi tapped her lip. \"Huh, that's almost exactly like how I feel. I guess our minds are synched to my body's physical situation. I just ate, and even though I drove a lot I'm not really tired, more excited. That is useful.\" She thought.\n\n\"Um Brandi? I have to ask something. I'm looking at Megan in the mirror. I mean, it's her body to a T, even down to the little spot birthmark on her neck. But it's not her. I mean, she, her, um, you know SHE isn't here with us is she?\"\n\n\"No, well, not how you are thinking anyway. I, uh, I'm really good at disguises.\"\n\n\"Bullshit. No one is THAT good. You are nearly an exact copy of Megan from what I can see. Shit! YOU were Megan at the house!\"\n\nThere was a pause and then Kory giggled. \"Damn, you were fucking good in bed!\"\n\nBrandi blinked and then giggled and then laughed out loud with Kory joining her. Brandi caught her breath after a bit and said \"Thanks, and yes that was me. That's kind of an odd thing to say given the circumstances.\"\n\nKory snickered again. \"Yeah, well, I think normal went out the window about 24 hours back and won't be back anytime soon. So can you tell me something Emerald?\"\n\n\"Sure, I...fuck.\"\n\n\"Ah Ha! Got you! You were Emerald too! Damn girl, now I REALLY wished I had recruited you! Or is it Lucinda?\"\n\nBrandi sighed. \"Both if I want to be. Fuck, I need a drink.\"\n\n\"Me too. Any chance you can hit the minibar and see if we can share a vodka and tonic?\"\n\nBrandi thought about it and then shrugged. \"Sure, although I prefer scotch myself.\"\n\n\"Bit of a manly drink.\"\n\n\"Yeah, but I started liking it after this one guy made a move on me and I wrapped him up so badly he literally tied himself up, fell over and broke his nose.\" Brandi said as she got up.\n\n\"Really? That's funny. How did it happen?\"\n\nBrandi told Kory the story, minus some of the details as she poured the drink. Kory was giggling and laughed out loud when Brandi got to the broken nose part.\n\n\"Damn girl! I would have loved to have seen that. I know what you mean about how transparent some of these players are.\"\n\n\"Yes, sometimes it's too easy. Well, here is a Vodka and Tonic, let's see how this works. Cheers.\"\n\nBrandi sipped the drink and focused on the connection. She felt the vodka burn down her throat and then Kory let out a sigh.\n\n\"Oh, that is just what I needed.\"\n\nBrandi sipped again and nodded. \"Yes, I think this was a good idea. You can taste it? Feel it?\"\n\n\"Yes. It's not as potent as it could be, I saw how much you put in and it's a bit stronger than I normally have, but it feels a bit watered down to me.\"\n\nBrandi thought a moment. \"Funny, now that you mention it, it does taste a bit weaker than I expected. Hmm, I wonder if having you in my head has something to do with that?\"\n\n\"Maybe, the alcohol has to effect two minds? Wow, that could be useful.\" Kory said.",
        "Brandi nodded. \"It could be indeed, for both of our lines of work.\"\n\nBrandi sipped the drink slowly and focused on making sure the connection was solid. She didn't want to get drunker than Kory and let something slip.\n\n\"Brandi? What happened? Why am I in you? Or why are we in Megan? Or, shit, why?\"\n\nBrandi sipped the drink again and stood up. She went over to the mirror and said \"Kory, I am going to tell you some things about what I think happened. First off, this isn't Megan. She is in Chicago. She has no idea what happened and will not know any Brandi. I was able to copy her. I can, well, shapeshift in a way. I can remake myself into any woman I have had sex with and become them. The process messes up the mind badly so everyone I have sex with ends up having memories that make no sense and often have problems remembering what happened over the last 24 hours. I use this ability to spy. I am a free agent, working for the highest bidder, but focus on industrial and business secrets as that is the real money and a lot safer. At least I thought it was until I got involved with your organization. I after banging the McNeal's I was going to contact you directly and see if we couldn't arrange a meeting to allow Jones to do business, but your guy followed me. Good work on that by the way. So I was going to scramble your brains, lose Megan's form, and make a run for it.\"\n\nKory didn't respond and Brandi sighed inwardly. \"The bitch is becoming calmer and is starting to work angles if I'm not mistaken. I need to be careful.\"\n\nAfter a few more seconds of quiet Kory said \"And? You can't stop there. You were able to knock out three of my guards and Megan, who submissive slave or not could fight like a wildcat when needed, and then get to me. Come on, spill girl.\"\n\n\"Well, I'm blackbelt in several martial arts and surprised your guys. Once I took on Megan's form, it was easy to get the drop on everyone. Including you. But here is the trick. When I tried to scramble your brains you, well, you resisted. Normally people don't do that, they usually can't do that. But you seemed, not exactly immune, but able to resist the effects some of my abilities somehow. And you fought.\"\n\nBrandi senses some intensity in the connection, like Kory was focusing. \"Shit! Okay, I kinda remember something. It was like hands in my mind, and then more than my mind, like hands grabbing me! Me as in like mental me? Like my being, my soul maybe? I remember my head swimming like I was high and pulling back and forth and then suddenly this huge pull and I felt like I was ripped away and then darkness.\"\n\nBrandi and Kory were both silent for a bit.\n\n\"Shit. I have never ever given up in my life. Maybe I should have just given in this time.\" Kory whispered.\n\n\"I think the coke had something to do with it.\" Brandi said.\n\n\"The coke?\"\n\n\"Cocaine stimulates the mind. I've never messed with a coke head before, or at least one that was high on it at the time. You were high as a kite. And I was too. I took some downstairs to get some pep after changing to Megan because it can take a lot out of me. You said this stuff was synthetic too, the mix may have had something to do with this as well.\"\n\nKory was quiet for a bit. \"You may be right. This was something that was designed to be different than normal coke. It was designed to not only stimulate the mind, but also focus it. You know coke gets you all fired up and excited and sometimes horny but your mind is acting stupid while this happens. You basically get the common sense and rational thought processes left in the dirt when you get all excited. This stuff was supposed to amp down the excitement a bit and make the rest of your mind catch up to it.\"\n\n\"That's a weird mix, why were you looking at that?\"\n\n\"Professionals, college kids, hell, if this worked as the chemist thought it might be able to, we could have eventually made it legally. Something that makes you think and focus faster, but speeds up the parts that make you think intelligently? I can think of all kinds of markets for that. Coke with all the bs about it making you smarter being true.\"\n\n\"Huh. You are pretty smart for a stripper.\"\n\n\"I assume you know that I am a certified genius already and I already told you why I like stripping even though I owned Chicago. Or I did anyway. Maybe I still can.\" Kory said.\n\nBrandi could feel Kory thinking, something was obviously bugging her but she was holding back on asking. She sipped her drink again and then said \"Kory, out with it. I can tell something is bugging you.\"\n\nKory didn't respond for a moment and then Brandi got the feeling like someone bracing themselves for the worst. \"You pulled me out of my body. Can you put me back? That's the real question here for both of us.\"\n\nBrandi sighed and looked into the mirror again. \"Yes, that is the real question. And the answer has two parts. Part one is can I put you back in your body. The answer is no. The reason is that your body is dead.\"\n\nBrandi felt Kory's reaction and it felt like she had taken a punch in the gut. After a bit Brandi felt anger, quickly turning to rage.\n\n\"You killed me?\"\n\n\"No. Not on purpose. I told you, I have never done this before. Your body, ugh.\" Brandi remembered how the eyes looked and shuddered. \"Your body looked like it had the life sucked out of it, a husk in a way. The eyes were just, God, it wasn't nice. I wasn't trying to do that to you, I was trying to mix up your memories so I could get away. When you resisted, and the coke we were both on, somehow it caused this. I'm sorry about this.\"\n\n\"Well, about sucking you in anyway. I was going to turn you into a veggie but you don't need to know that.\" Brandi thought to herself and not over the connection.\n\nBrandi could tell Kory was having some issues processing this information. She could feel anger, rage (although that seemed to be lightening up a bit), confusion, sadness, and helplessness. Brandi could tell Kory didn't like feeling helpless.\n\n\"I need to keep that under wraps, she feels helpless and she is going to start trying things.\" Brandi thought and then focused a bit more.\n\n\"There is a second part to this. I think I might be able to put you back.\"\n\n\"HOW? You just said you killed my physical form! I'm stuck in your head!\"\n\n\"No, you may not be. I can, shit. Okay Kory, I'm going to level with you because if I don't and I try something you might fuck this up even worse due to your lack of understanding the situation. Aside from mixing up people's minds, I can push things into them. I just recently found out that with the correct stimulation I can modify memory, and I can implant memories I have pulled out of others into other people. I have tried to be careful about it because it can seriously mess up someone's head to suddenly have memories of someone doing something with people they don't know and it's a clear memory you SWEAR is your own. I pulled you out, I can, probably, push you back in.\"\n\nKory was silent for a while, but Brandi could feel that she was calming down and was focusing. After a bit more she said \"Okay. If that is true, then you end up having to fuck up someone else to release me. And I'll just say what we are both thinking, can you trust me enough to want to do that, or can I trust you enough to do it? I already tried to kill you once, you technically DID kill me, not exactly the basis for a solid relationship.\"\n\nBrandi finished the drink and let the burn flow through the connection. Brandi could feel Kory relax a bit. \"Thanks, I needed that.\" Kory said.\n\n\"Me too. You are not wrong. I let you go now and I'm dead if you can track me down, if for nothing else other than revenge. And to set you free, I need to basically lobotomize someone else and figure out if I can put you into that person's body.\"\n\nBrandi felt Kory concentrate a bit and then Kory said \"I get the impression you have done that before. You may not have killed anyone until now, but I am thinking you have messed with some people's heads. And you were going to do that to me weren't you? Don't bother answering, I know you were and even if you weren't I wouldn't believe you otherwise. Ain't this fun? Cripes, what a messed-up situation. God, can't a girl take over a city's criminal underworld without all of this additional shit?\"\n\nBrandi snorted and then giggled.\n\n\"Yeah, life's a bitch.\"\n\nThey were silent a bit and then Kory spoke up. \"Let's make a deal Brandi. Let's figure out how we can put me back into a body. You get me back into a body I can call my own, and it's even. I'll head off and that will be that and you won't ever see me again.\"\n\n\"Hard to trust you on that.\"\n\n\"Yeah, but aside from that, I promise that I won't fuck around in your head. If you do something, I won't mess with it or try to do something while you are doing it. I have the feeling that could be a really bad idea and I go with my gut.\"\n\n\"Okay, I guess that is about as good as I can hope for. We have a deal.\" Brandi replied. To herself Brandi thought \"Once I get you back in a body though, I will make damn sure you don't remember any of this. Sorry Kory, but I'm not playing around with you.\"\n\nBrandi stood up and looked in the mirror. \"Alright. First things first, I need to change back. I can't stay Megan, someone may be looking. The car is gone, I will assume your organization can track it, and even though they find Megan, they still might be able to track her down to me. I need to be me again.\"\n\n\"Well, change then. I'm kinda curious to see who you really are.\"\n\nBrandi smiled. \"Not exactly that easy. But I can set things up with a phone call.\"\n\nBrandi quickly signed into an escort site using one of her fake profiles and looked up a hot little redhead stripper/escort.\n\n\"What are you doing?\" Kory asked as she texted the number.\n\n\"Changing back. In order to get my mind stimulated enough to effect a complete change I need to have sex. Or more correctly, I need a connection to another human that gives me a strong enough link. Scissoring and regular fucking if it's a guy works the best.\"\n\n\"Are you kidding? Shit, you AREN'T kidding! Damn, this could be interesting. Fun even.\" Kory said. Brandi smiled some more as she felt genuine curiosity and excitement through the link from Kory.\n\n\"So, how did you get to be this way? I can't imagine that you were born like this, what happened?\"\n\n\"I'll tell you later if all goes well. I've never done this with, uh, with two people in my head so I'm not sure how this will work. Given how we are linked and the fact I can cut it off, I think, emphasis on think, I can make this work normally. I'm debating about if it wouldn't be safter to cut the link while I do this.\"\n\n\"NO! Please no! I'm serious, please don't. I won't do anything I swear, I'll just watch, or feel, or whatever the fuck I can do that isn't fucking with what you are doing! Just don't, God, please don't. It's, not fun.\" Kory said with some real fear.\n\n\"Damn. Being cut off must be nasty, she's really afraid. I can feel it. Real fear. Man, I wonder if she has ever been this afraid before?\" Brandi thought as she felt the connection.\n\n\"Ok, we will try it with a minimum connection. But understand something, if something starts going crazy, I will cut you off. Not to be a bitch, but for safety. If I get any feeling we are in trouble I need to make sure I keep my mind intact. If I go, we are BOTH fucked. If I go into the great La La Land, you never come out of my head. You will be a voice in some crazy woman's head. You had better remember that.\"\n\nKory was silent for a bit, and then she growled. \"Fuck. Fine. I get it. But I'm not happy about it. I won't do anything, but if something goes sideways then do what you have to do. I'd do the same so I can't blame you.\"\n\nBrandi figured that was about the best she would get and nodded at the mirror.\n\nBrandi undressed into her red underwear and poured another drink. She sipped it and made sure Kory could taste it. Kory was quiet and they both just sat and enjoyed the drink. After about thirty minutes there was a knock on the door.\n\n\"Show time.\" Brandi said and went and opened the door.\n\nShe let in a woman dressed in a trench coat and wearing sun-glasses. She closed the door and turned around with a smile.\n\n\"Well, aren't you all pretty in red.\"\n\nBrandi smiled at the girl. Danni was a young college aged girl with fiery red hair, about 5 foot 6 inches, 36 DD cup chest, and an hourglass shape. She was wearing red lipstick and had her hair done up. She opened the trench coat to reveal red stockings and a garter belt, red heels and nothing else.\n\n\"Nice, just like the photos. Okay Danni, come with me.\" Brandi said with a sexy smile and took her hand. Danni giggled and let herself be led. Brandi could feel Kory was paying complete attention but was not trying anything. In fact, Brandi swore she seemed a bit turned on.\n\nBrandi led the escort into the bedroom, turned her around and put her arms around her neck. \"You are just what I needed Danni, let's have some fun.\"\n\n\"Hold on girlfriend, I need to see the mo...grmmmmm!\"\n\nBrandi leaned in and kissed her full on the lips. She was careful not to push hard and fast, so Danni struggled for a few moments as Brandi made sure there were no issues with making the connection and then diving into the girl's head. It was simple, no issues at all. She made the link effortlessly and reached into Danni's mind and mixed everything all up.\n\nIn fact, it seemed much easier than before.\n\n\"This is weird, it's almost effortless. I've got a really great connection and mixing her mind around is almost too easy. It's like, shit, like when I was on coke, or...\"\n\nBrandi started and jerked back which broke the connection. Danni's eyes were already rolled up and the stoned looking stripper just fell back onto the bed with a sigh.\n\n\"Damn! Why did you stop?\" Kory asked.\n\nBrandi caught her breath. \"Shit! It was like the boost I had when I was in a threesome! When I had Diane at the club! Is Kory boosting me?\"\n\n\"Kory, what were you feeling?\" she asked.\n\n\"That was a rush! The second you kissed her my whole, uh, body? Self? I felt like I was plugged into something! It was like a fun high, like I was feeling everything! I could smell her perfume and her sweat, taste her lipstick, feel her soft skin, heard her breathing, damn! I swear I could feel her heartbeat! And her mind! It was all open there, I could feel how you just mixed all of her head up! It was like we just melted her brains! I could feel her getting stupid! Or confused? Fuck, doesn't matter, that was a trip!\"\n\nBrandi felt a lot of excitement and pleasure through the connection. Kory had enjoyed it!\n\n\"Figures. She likes being dominant, so messing with someone's head would appeal to her.\" Brandi thought.\n\nBrandi focused a bit while Kory babble about how cool the feeling was. \"I felt boosted. I felt stronger, like when I had that coke or was bopping Diane. I felt fully in control thought. Kory wasn't messing around, she was just riding the sensation. So she is holding up her end so far.\"\n\n\"Kory! Enough for now. Danni is currently mind-scrambled, that's what I call it. I got into her head and mixed her memory and higher-level brain function around. She is pretty much stoned out of her head right now and it can take a couple of hours to come back off it. Or to have your brain clear itself up and function correctly if you prefer.\"\n\n\"This is what you did to me isn't it? Wow! Huh, wonder what would have happened if I had been smoking weed instead of doing coke.\"\n\n\"You wouldn't have fought so much, weed isn't a stimulant like coke is. But now we need to get to the next step. You didn't mess with anything while I was melting Danni's head, thanks. Now the same thing for the next step. This is the dangerous one, if you try anything, THIS is where something really bad could happen.\"\n\n\"Got it. I won't do anything. It was a trip just to feel what was going on! I'm looking forward to this one!\"\n\nBrandi sighed and then started moving Danni around to a better position. She spread her legs and then bent down over Danni with some water. She sprinkled some on her face and began to shake her.\n\n\"Danni? Danni? Wake up pretty girl. I need you to do something for me. Come on sleepy head.\"\n\nAfter a few moments Danni stirred. Her eyes opened and were glazed over. Her mouth formed a lazy smile and she let out a long slow sigh of pleasure.\n\n\"Mmmmmmm, nice. Kisses were nice, make Danni feel so good. Mmmm, want to sleep some more.\"\n\n\"Danni can sleep more after she has done something for Julie (Brandi's alias). Julie wants Danni to eat her out. Can Danni do that? Just lick Julie in her nice clean pussy?\"\n\n\"Mmmm,kay.\" Danni murmured. Brandi quickly straddled the redhead and let out a hiss when the tongue slid up her slit.\n\n\"OOooooooo, NICE!\" Kory moaned. Brandi echoed her moan with one of her own.\n\n\"UGGGGGhhhhhhh, niceeeeeee Danni! That's it! Swirl the tongue! That's, ahhhhh, it! Come on girl! LICK!\"\n\nBrandi felt the connection twitch on and off as Danni licked and kissed. Brandi was getting a much better connection than before and she felt her level of excitement amp up fast. Brandi sensed the connection and let out a gasp at the pleasure coursing through it. It matched her perfectly.\n\n\"OHHHHHH FUCK!!!!! FUCK!!!!!!!\" Kory hissed as she felt the pleasure too. Brandi grunted and pushed down hard on Danni's face and squirted in her mouth.\n\n\"Swallow Danni! Gulp it down!\" Brandi hissed as she jerked several times. Brandi felt Danni swallow and then slurp her tongue around to lap up any juices she might have missed. With a faint giggle Danni went limp.\n\n\"Oh man! FUUUUUCCKKKKKK! More! Damn woman! Give me more!\" Kory panted out.\n\n\"Hang on Kory! Time to ride the change!\" Brandi nearly shouted as she spun around and slid between Danni's wet legs.\n\n\"Wow! This is wild, what's sex feel LIIIIIIIIKKKKKEEEEEEE!!!!\" Kory said as her voice shot up several octaves as the connection was made.\n\n\"OOOOOAAAAAAAA!!! Ssssssss, nnnNNnnNNNNNNNN!! FUUUCKKKKKKK!\" Brandi moaned out as the connection blasted her mind.\n\nBrandi's head spun and her body shook and twitched and jerked as pleasure blast after pleasure blast ripped through her. Brandi could hear Kory's voice match hers in her head each time a wave hit, moaning and gasping and howling in pleasure. After several waves blew through her Brandi forced herself to focus.\n\nBrandi felt off. It was like her concentration was getting jerked around. She'd ride the wave and instead of being able to roll with it she felt like she was getting pulled around by a weight or someone was jerking her arm or leg. It was intense, but she couldn't keep her focus. After a few moments she realized the problem.\n\n\"Fuck! FUCK! Damn it! Kory! Focus bitch! Focus! You're, uggghhhhhhhh, you're throwing off my concentration! Fucking get your head into in!\" Brandi panted out. Kory's link was pulsing wildly and Brandi realized that Kory was going crazy from the pleasure and her reactions through the link were messing with her focus.\n\n\"OH MY GOD! THIS IS AWESOMEEEEEE! Oh FUCK! I LOVE THIS! MORE!\" Kory howled in Brandi's head.\n\nBrandi suddenly felt the connection change. \"Oh fuck! That bitch is trying something!\" Brandi thought. Brandi mentally moved to cut the connection just as Kory pushed up it towards Brandi's desk. Brandi shoved back hard and the pulses slammed into each other.\n\n\"UGH!\" Brandi and Kory exclaimed together.\n\nBrandi suddenly jerked and the pleasure wave seemed to stabilize. It was still intense, but not wild and out of control like before. Brandi felt that the intensity was the same, but she was only feeling part of it. She focused and looked at her mind.\n\nShe saw that her desk and Kory's desk were now linked together with a link that had a steady glow to it. Brandi's was a bluish tint and Kory's was a whiter color and they came together at one point. At that point the connection seemed to meld and then push down into Danni's desk.",
        "Brandi carefully probed Danni's mind and saw she had full access. Even better, her memories had that same malleable feeling Diane's had. But she felt even more. She was seeing new areas on the desk, ones that she had not noticed before and ones that had been the \"other\" desk, the DNA files.\n\n\"Fuck! I've got full access!\" Brandi thought.\n\n\"This is amazing!\"\n\nBrandi started and then thought \"Kory! What the hell did you do?\"\n\n\"The pleasure! Holy fuck! I've NEVER had feelings like that before! My God! My mind nearly shut down, the pulsing or waves or whatever, they were just burying me! I heard you in my head, I heard you trying to focus and telling me to focus. I did, and suddenly it was like I was synched. The waves stopped blasting me, I can still feel, oh MAN! I can still feel the pleasure, but its controllable. Fuck! What is this? I can see, a link? Are we linked?\"\n\n\"KORY! Knock it off and listen! THIS is where we can really fuck shit up! Not just in her, but for us! Don't do anything, just listen!\"\n\nBrandi felt the excitement in the linkage calm a bit. Brandi pushed a bit down the connection but got pushed back.\n\n\"Hey! Keep the fuck out! My mind! Not yours!\" Kory snarled.\n\n\"Okay, okay. That is good to know. Try to push into mine, slowly.\"\n\nBrandi watched the connection and after a moment the whiter light started to push up the bluer one. Brandi immediately felt pressure, like someone was trying to force something into her head. She didn't do anything for a moment but the light stopped. Brandi focused and pushed and the light jerked back.\n\n\"What happened?\"\n\n\"Ok Kory, looks like we have d\u00e9tente. I can't push down your connection and you can't push down mine, but when we link, we completely overpower anyone we have a physical link to. I have the sensation I did during a threesome and it boosted my abilities. You mind and mine together are providing a TON of brain power and poor little Danni's brain is completely helpless against us.\"\n\nBrandi felt some glee and excitement through the connection. \"Kory, what do you feel from me?\"\n\n\"I can tell you are nervous and wary, but also really excited and turned on. I can get your emotions clearly when linked. I...shit, I just babbled that out. Fuck! This connection is just turning my mind into happy mush!\" Kory moaned again as the next wave rolled over them.\n\n\"Yeah, tell me about it.\" Brandi replied she let out a low moan as another wave hit her. \"I can't keep this up, my body doesn't have the energy. Kory, we need to do what I have to do. I am going to do two things. One, I am dumping some trash in this girl's head, ahhhhhhh fuck, and once that is done I am going to activate the change. It is likely going to knock me out.\"\n\n\"Shit! What will that do the, oooooooo, sssssss, connection?\"\n\n\"I don't know. I am hoping we can keep it intact, but for fuck's sake don't messssssssssssss, ughhhhhh, with anything while I am doing this. The results can be bad. Can you see the desk in Danni's head? Can you follow what I am doing?\"\n\nBrandi felt Kory focus and then felt like she had a shadow in her mind, like someone peeking over her shoulder into Danni's mind.\n\n\"Yes! I, wow! Yes, I see a desk! And files! All sorts of shit! What the fuck is this stuff? I, oooooooaaahhhhhh.\"\n\n\"Her mind's contents. Don't touch anything! First, time to dump! Kory, focus with me, just focus, OH GOD, on the link and pushing your will through it.\"\n\nBrandi felt the connect amp up a bit more. Brandi looked on her own desk and saw she had everything setup. Her ability to look into her own mind was solid, in fact probably better than she had ever had. Brandi easily pulled out several files from her head and dumped them on Danni's desk. Brandi felt Kory's emotions change to surprise and puzzlement.\n\n\"Hold on, are those files...\"\n\n\"Not now! Hang on Kory, we are changing, right, NOW!\"\n\nBrandi dove into her mind riding the stimulus and activated her folder.\n\n\"OHHHHHHH MMYYYYYYYYY GGGGOOOOODDDDDD!\" Brandi and Kory both screamed as the activation hit and the blast caused Brandi's body to heave and jerk up and back, breaking the connection. Brandi spun around, tried to catch herself on the bed and tumbled off onto the floor as the last waves of pleasure contorted her body. She was looking at the ceiling and heard Kory moaning in her head when things went dark.\n\n\"Brandi? Brandi? Are you awake?\"\n\nBrandi moaned and tried to roll over. She tangled up in a comforter and fumbled a bit until she pushed her head out and looked around.\n\n\"Uhhhh, fuck.\"\n\n\"Oh, thank God! I was worried for a second!\" Kory's voice echoed in her head.\n\n\"Yeah, shit that takes a lot out of you.\"\n\n\"You ain't lying. It felt like someone swatted me with a wall. I feel hungry, sore and tired. And fucking nasty.\"\n\nBrandi looked at her body. She was covered in cum and sexual juices and she reeked. And it appeared that Kory's linkage was upping her senses a bit because she could really smell herself. \"Woof, yeah, shower is high on the list. How long have you been up?\"\n\n\"Same as you. I woke up and felt, uh, well, I felt your body, and your emotions? Yeah, I guess emotions. You were tired but nervous, I kinda felt like you were awake or nearly so, so I called out and you woke up when I called out.\"\n\n\"You couldn't move the body while I was out?\"\n\n\"I don't think so, I didn't really try to, I felt you and called out.\"\n\n\"Okay, that's good, looks like my connection to my body is dominant even if I'm out.\" Brandi thought with some relief. \"Shit, better be careful, Kory can sense emotions from me.\"\n\n\"Brandi? Is it like that every time? When you change?\"\n\n\"Yes. It can be a real fun time unless you are in a hurry. Normally I take some pep pills and energy drinks and some medical stuff so my body can take the change. Like right now I'm dehydrated as hell, hungry and low on energy, and beat up. This change over burns so many calories it's not funny. We need room service and double quick.\"\n\nKory was silent and her emotions were mostly of weariness and various emotions that switched around fast. Brandi got the impression she was thinking things through, so she got up, checked on Danni (absolutely out cold with a smile of rapture on her face), and then showered.\n\n\"Oh, that feels good.\" Kory replied as the hot water washed the soap off. Brandi slowly stretched and could tell Kory was feeling the stretch too. \"I know this isn't my body, but it still feels really good to do that.\"\n\nBrandi nodded and then got out of the shower and put on a robe. She looked in the mirror.\n\n\"So, this is you?\"\n\n\"Yep.\"\n\n\"Nice face, hmmm, nice body overall, but I like my tits a bit bigger. Pretty eyes, you have a powerful look.\"\n\n\"Thank you. Not to be mean, but you were really hot yourself.\"\n\n\"I was, but not like you. I was fuckable hot. You are fun hot.\" Kory giggled. \"That's how we used to call it in the club, a stripper was fuckable hot. Someone you looked at and only thought about how much fun it would be to fuck or to be fucked by them. Fun hot was someone who was pretty, someone who you would love to have sex with too but didn't drip sex or lust. Someone you wanted to talk to first.\"\n\nBrandi giggled. \"I follow. Trust me, I can be fuckable hot when I want, but it's not my, I guess you would say \"Default\" setting.\"\n\nThey both laughed at that. After a bit Kory sighed. \"Christ. That was amazing sex. I am someone who knows about sex, and I LOVE sex. One of the reasons I'm, well, was a stripper was so I could get sex easily. I was diagnosed as a borderline nymphomaniac several years ago, and I think I crossed the border a while back.\"\n\nBrandi could feel Kory's satisfaction and pleasure. She was fully relaxed and happy as hell, contented like a cat with a bowl of cream.\n\n\"That was the most incredible feeling I have ever had. It was mind-blowing, God! Just thinking about it is getting me worked up! And you do this daily? Shit! Any chance you can show me how to do this when I get back into another body?\"\n\n\"I don't know. Maybe, but I kinda doubt it. Glad you enjoyed it though. Your linking to me made it easier to do what I had to do, which was good. And I wasn't out as long, only about an hour. Usually it is at least two hours IF I prepare ahead of time or four if not.\"\n\n\"You said you used coke back in Chicago. That kept you awake during the change. You can do that again right?\"\n\nBrandi felt curiosity through the link and something else she couldn't place. Brandi suddenly felt a bit off, like she was really wanting something, but couldn't figure out what it was. She shook her head and replied.\n\n\"I could, but I'm not sure how that is going to work with you in my head. And I'm not into the hard stuff. I'll do some weed, maybe some X, but I avoid anything harder.\"\n\n\"Too bad. Coke is a nice pick-me-up. But I get your point, it can be very addictive. I used it on some of the uppity strippers in my club to keep them in line. I use it sometimes myself. It's hard running a criminal empire and stripping full time.\"\n\nBrandi snickered and she felt some humor and some sense of loss from Kory. Kory said \"Well, I guess being careful is smart. The last time we used it, look what happened.\"\n\n\"Yeah. I need to do some research on this and figure out our next move. Good thing I absorbed a brilliant doctor and genetic specialists mind back when I started, don't need to ask around too much.\"\n\n\"No kidding? Wow. Shit, you must have tons of skills.\"\n\n\"I do, all kinds of useful stuff. Hell, I could probably help you with your chemical enhanced coke considering I was chemistry major in college.\"\n\nKory snorted. \"I figured you for a college girl, but I thought you would be more of a party girl. Chemistry? That's not an easy subject.\"\n\n\"Eh, I was good at it and I liked it. But I partied too, had lots of boys willing to do the less important work for me.\"\n\n\"Ha! I knew it! Did you seduce any of your professors?\"\n\nBrandi felt some humor but also some rather clinical interest in the link. \"Hmmm, Kory's scoping me out. I had better be careful.\"\n\n\"Let's get some food.\"\n\nKory was silent for a bit. \"Okay, but you know I can sense you are suspicious about my questions.\"\n\n\"Yes, and you know I can tell when your questions start having reasons that are not just for conversation. Look Kory, we don't trust each other, we both get that and understand that. But we need to work together on this, so let's keep this focused and professional.\"\n\n\"Fair enough, but you need to keep me in the loop. You understand what's going on, I don't and I won't lie it's scary for me. I was able to take over and rule my High School when I was a junior, and I mean RULE it. I've killed people, seduced them, drugged them, blackmailed them, dominated them, broken them, turned them into drug addled, sex-addicted, spineless shells. I've never felt fear even when confronting some of the most dangerous people in the Windy City. But this has me scared Brandi, and I am asking you to help me understand it so I can control my fear.\"\n\nBrandi could tell Kory wasn't lying. She was afraid and she was really nervous. \"This really is hard on her. Well, that is good for me because it gives me power over her. But I need to balance this. Fear can led to panic, panic can lead to her doing something stupid.\"\n\n\"Okay. I will keep you in the loop on what we will do and what you will experience. As best I can anyway, some of this may be new territory. But you need to listen and do what I say. I can't say it enough, you mess around when we are doing things especially when we are in someone's head and you might end up in a guy's body or cut off or have part of you in me and part of you in someone else. I don't think \"You\" could survive that.\"\n\nKory pulsed some real fear on that. \"Could that happen?\"\n\n\"I don't know, so let's not try and find out the hard way.\"\n\n\"Deal. Okay, fuck this talk, let's eat.\"\n\nBrandi ordered a huge meal from room service and munched on the snacks in the mini bar while they waited. Kory seemed lost in thought and that was fine by Brandi for a bit. She checked on Danni and she was still out.\n\nThe food arrived, enough for four people and Brandi sat down and dug in as soon as she locked the door. Brandi felt Kory taking some interest as she put the food down.\n\n\"Wow. You are going to eat ALL of this?\"\n\n\"Yep. Every bite. My body will burn it off fast, especially since we just did a transformation.\"\n\n\"Mmmm, tastes good. I'm feeling better as you eat.\"\n\n\"You were feeling hungry right?\"\n\n\"Yeah, I was, really hungry.\"\n\n\"Funny how you can feel how my body feels.\"\n\n\"Yeah. Um, how is our link? How does it feel to you?\"\n\nBrandi paused a bit and thought. \"Feels pretty strong, almost balanced I'd say. Why?\"\n\n\"Remember how I had that disconnect? That feeling that I was feeling or seeing things one step removed? I don't feel that anymore. I feel like it's normal. I can feel the heat of the coffee cup and taste the food.\"\n\nThat caused Brandi to stop eating. \"Wait, you feel everything?\"\n\n\"Yes.\"\n\nBrandi focused a bit and realized that feeling of someone peeking over her shoulder was almost gone. Brandi put her fork down and swallowed.\n\n\"Uh oh. Kory, hold on for a second.\"\n\nBrandi took a breath. She could feel Kory getting nervous, and she let out the breath. Brandi tried to cut the connection and nothing happened. She took a breath and focused hard and she felt like she was trying to plug a hole in a submarine with her bare hands.\n\n\"What are you doing?! STOP!\"\n\nBrandi growled and concentrated and for a split second she felt the connection block. The second she let up it popped back on.\n\n\"DON'T!! Wha? FUCK! Don't do that! Why did you do that?!?! What the fuck is wrong with you!?\" Kory screamed in her head.\n\n\"KORY! We have a problem!\"\n\n\"No shit! You tried to cut me off! What the hell for?\"\n\n\"Kory! Listen! This is important! I think we made the link stronger!\"\n\n\"We what?\"\n\n\"Kory, you can feel everything I can without any issues right? I tried to disconnect but I couldn't! I wanted to see if we had done something to the connection and strengthened it somehow or changed it. We did! Kory, I can't disconnect us!\"\n\nKory was silent for a minute and Brandi felt her rage and terror subside into fear but also curiosity and some relief.\n\n\"You can't turn me off?\"\n\n\"No. Good for you because that means you don't have to worry about being cut off when I'm asleep or knocked out. But this could make putting you into another body a LOT tougher.\"\n\nKory was silent for a bit. \"Shit.\"\n\n\"Yeah, shit.\"\n\nBrandi sat there for a bit and then started eating again. She was still hungry and she could think just as well while eating. Kory's mind was swirling. She was relieved, scared, afraid, curious, and just plain confused. After a bit it seemed to come down to mostly curious and resigned.\n\n\"Brandi, when we were in Danni's head, I saw you shove some files into her mind. They had labels on them.\"\n\n\"Yes, they did. Kory, just ask and let's get this over with.\"\n\nKory was silent for a second and then sighed. \"I saw files for two of my men, and Megan. They seemed big. Did you hurt them? Did you copy them?\"\n\n\"I made sure they were not a threat to me. I call it ripping. When I am in a rush or when I want to make sure that the person cannot hurt me or be a threat to me I can rip out their minds. Not like you obviously, but I can take all of their memories and skills and leave them empty. A veggie, mindless, well, more like a newborn, innocent, no knowledge, no understanding, no memory of anything. I can be selective about it, I can take only a skill or a memory. Or I can copy it. But I have used this skill to eliminate two threats prior to meeting you, I lobotomized a doctor who was partially responsible for giving me this power. He was going to experiment on me in some unpleasant ways. And I mind wiped a rival spy. Removed her entire memory of ever being a spy and all her spy related skills. And then I let her take the fall for something and she got killed by some guys looking for revenge for something I did.\"\n\nBrandi could feel Kory was fascinated, angry, and excited by this. \"Hmm, an odd mix. She doesn't seem too mad about what I did to her men.\"\n\n\"So, you did this because you were rushed? If you had time, you might have done something different?\"\n\n\"Maybe. I can't say. I would have made sure that no one involved with me would have been any threat to me. How I would have done that? Eh, don't know and don't care, I did what I did and that is that.\"\n\n\"Yes, you did the right thing. I feel a bit bad for Megan, she was fun and she was my sub and I tried to take care of her, but if push came to shove, better her than me. And I get that I was on your hit list. Brandi, you and I are not too far off in how we think. When it comes to self-preservation, we are both ruthless and no one comes first but us. I can respect that and I certainly understand that. Those guys were just thugs, and easy to replace. Megan was a much more valuable pawn to my operation, but still a pawn. You did what you had to do.\"\n\nBrandi kept eating and noted that Kory wasn't lying. She felt a bit impressed and respectful, like she was talking to an equal.\n\n\"So, what happens now? To them?\"\n\n\"They wake up tied up, blindfolded, and gagged and unable to do anything about it as they are essentially helpless infants in adult bodies. Someone finds them and cuts them loose and then they wind up in an institution somewhere never to remember what they were or what happened.\"\n\n\"I have a crew come by once every three days to sweep for bugs, they probably have already been found.\"\n\n\"Well, there you go. As for Danni, she wakes up with her's and three other people's memories in her head along with some bits from others. She will probably have some real issues, she may seek help, or more likely will start self-medicating with drugs or booze or both. Not my problem.\"\n\n\"That's a bit cold.\"\n\n\"Says the woman who was going to have me cut up and disappeared. I didn't hear you voice any issues when we were talking about having to blank out another woman so you could have your own body. Like you said earlier, when it comes to us surviving, we are ruthless. Danni is some stripper who thought she could use her body to have an easy life and got involved with the wrong people. Us.\"\n\nKory was silent for a bit as Brandi finished up the food.\n\n\"So now what?\" Kory asked.\n\n\"We pack up, I make a couple of phone calls and we get the fuck out of here. I scrambled Danni's brains around and even if she did have any memory it would be of Megan. We lose your car, get another one, and we head back to my home base.\"\n\n\"Any chance I can check in on my mob?\"\n\n\"None. Sorry Kory, but you are out of the Chicago Mob business. At least for a while.\"\n\n\"How about I make it worth your while? I know some of my offshore accounts, I've got some rainy-day money I could cut you into.\"\n\n\"More than $25 million?\"\n\nKory paused at that. \"Kory, you may not understand how good I am at spying. I do only a few jobs a year because my going rate is in the millions per job. I just earned $25 million on this one alone. Now, it is on the high end of the scale, but since I started the least amount I have made was $5 million a job. Money is not something that will peak my interest much.\"\n\nBrandi could tell Kory was VERY interested in what she had just heard. In fact, it felt like it was more than just curiosity interest, more like \"This might be worth checking out\" interest.\n\n\"Tell me more...\" Kory said as Brandi headed towards the bathroom."
    ],
    "authorname": "Moosetales",
    "tags": [
        "domination",
        "girl on girl",
        "escorts",
        "drugs"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/blow-your-mind-pt-10-1"
}