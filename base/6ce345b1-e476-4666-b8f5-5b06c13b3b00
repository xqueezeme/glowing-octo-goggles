{
    "title": "A Demon's Embrace Ch. 05",
    "pages": [
        "Thank you for your wonderful comments. I also want to thank bgmisfun for taking the time to edit this chapter. Thank you for your effort and time you spent in making this chapter even better!\n\n***************\n\nLord Asmodeus can feel Sarah's body tenses and then relaxes in his arm as they fly over the castle. What surprises him is her soft touch to his cheek, making him look down at her. Her face slightly flush with color. Her eyes soft and curious. Her fingers trace his jaw line towards his chin and back up again. She wraps her hand around the base of his neck, lightly tugging. Taking it to be a sign she wants to be up closer to his face, he lifts her. Her eyes dart along his feature, giving him the sense she is still trying to figure him out. No fear from her. She calmly places her lips to his. Her lips soft and warm, he drinks them in. Wrapping his arms tighter around her. \n\nGliding in, he deliberately lands on the roof top. An oasis. One of his many well kept gardens, a garden of Eden, she thinks to herself. She pulls away, taking in its sights and scents. Her mind becomes fuzzy. She turns her gaze back to Lord Asmodeus. He has transformed into his human appearance. A heat in her begins to grow. Her heart starts to race. Her breath quickens. She wants him, but doesn't know why. \n\nHis hand cups her face, pulling her in as plants a passionate kiss on her lips. A low moans vibrate through her throat. He releases her and smiles. Her hands start to explore his chest. Her eyes traveling with them. She stops at his buckle and quickly looks up into his eyes. He nods. With a firm grip, she yanks it away, never losing eye contact. She drives her hand in, taking hold of his shaft. She caresses him, pumping her hand up and down. He lets out a deep pleasing growl. Her hand moves faster.\n\n\"You can read my mind?\" she asks. He nods while enjoying her touch. \"Then I won't need to tell what I want you to do to me or how I want to do it to me?\" Images of what she desperately wants him to do to her flood his mind.\n\nHis fingers curl in her light strawberry long curly hair. Pulling it tight. He arches her head back, hard and fast. He leans to partake, but stops. The bruises from the night before are still fresh on her neck. She forces another image out to him. His hesitation gone. He violently kisses his way across her neck. At the curve, forcing her head to one side. Opening his mouth wide, he bites down, hard. His mouth closes in around her flesh and he begins to suck along the edge of her shoulder. She screams out, digging her nails into his back. He starts to lift away, but is stopped by her hand on the back of his head, pushing him into her neck once more. His left hand clasps her breast, squeezing it. Pushing, pulling it. I am not fragile. I won't break. Please, let me feel. I need to feel something. Don't be gentle with me. The words keep running through his mind from her. This time it's the overwhelming loneliness he feels from her. The passion is a second thought. \n\nHis hand runs across the small of her back, continuing on to her ass. Gathering her in, smashing his hips into her. His dick, hard against her pelvic. The heat in her lower abdomen grows into an inferno. They wrench their bodies, falling to the lush grass beneath them. Pain races through her chest cavity as all the air in her pushes out from the impact. Her eyes lightly water.\n\n\"Breathe, Sarah, breathe!\" he whispers to her in her ear. She sucks in hard, forcing her lungs to expand. Seconds pass. He pauses, giving her that moment to regain herself. \"Better?\" She gives him a timid nod. Rushing in, his lips wrap around her mouth. His tongue dances within its warmth. The grip she has on his hair increases, compelling him to press harder. He draws back with his lower lip gently caught in her teeth. She releases him and grins. \n\nHe glides he eyes to her breasts. They heave with her heavy pants. His fingers catch the top edge of her garment. With a vigorous jerk, her breasts are free. Firm round mounds with pale pink nipples dance from the movement. He dives in, cramming one into his mouth while compressing the other in his palm. He nips, pulling the tender mound up, letting it pop from his teeth's grip. Repeating over and over again on both. She arches her back, pressing up into him, wailing in pure ecstasy. His mouth travels down, stopping at the rim of her chinos. His tongue gorges on her belly button, flicking the metal ring around. Sucking and biting as he moves from side to side on her waist. Another violent tug, removing her pants. Trimmed delicate curls lay on top, protecting her pussy.\n\nWith one hand, he places one of her legs over his shoulder, exposing her wet mound. Taking in a long gratifying sniff, drinking in her womanly perfume. His mind spins as if her very scent is a drug to his senses. He shakes his head to clear it, not wanting to lose control. If he does, she surely would be hurt. Her hips wiggle and grind, wanting his tongue to dive into her. Tiny bites as he moves towards his main meal. With his fingers, he spreads her mound's lips, revealing her swollen clit. A quick lap with his tongue. Her body vibrates. Another and another, gently teasing her. Her hips thrust up at the same time her hands press his head down. Wanting to force him to do more. He laughs, very pleased with her reactions. His hot breath washes over her wetness. \n\nHe plunges in, nipping and pulling at her sensitive area. She explodes with a powerful orgasm, rocking her world. Stars flutter in front of her eyes. Tiny convulsion blaze through her. Not giving her a moment's rest, his tongue descends into her creamy canal. Consuming her juices. Her taste, her nectar spurs him on, driving him crazy with want, no need for more. His low growl rumbles through her as he feverishly works his tongue in and out of her, slamming against all of her G spot. Her hips wrench and thrust up for more. Her voice signs out in wanton gluttony. An explosion of ecstasy as her juices flow and he quickly gains each drop. His mind goes blank, but he forces himself to stay in control. The threat of him changing into his demon form is very real. He can't, he mustn't! \n\n\"Please. Please!\" she begs, wanting him inside her. He moves his way back up to her, taking in the sight of her bright skin flushing with pink. \"Please, I want all of you!\" With her hands, she takes hold of his cock, rubbing it up and down her drenched pussy. His body gives a slight shudder as she lines him up with her hole. Slowly, he pushes himself in. Inch by wonderful inch. She moans in delight. He pushes further in and holds himself there. Her hips grind upward, making him enter deeper. He pulls back. With a forceful trust, he bottoms out, slamming into her womb. \n\nPain races through her, turning into bliss as he pumps in and out of her. His thrust becomes more violent, more frenzied. She keeps time with each of his thrusts. Their hearts race to the same rhythm. No one has ever kept up with him. No other human, nor demon. His mind becomes fuzzy with the thought. His mouth devours hers. She is all he'll ever need or want. His form begins to change, trying desperately not to. He fails. He vaults his head towards the sky, roaring out his pleasure. His claws dig into her sides as he dangerously sinks his cock into her. Her blood begins to flow from his grip. He reaches up with one of his talons and kneads her breast, cutting into her skin. \n\n\"Johnathon!\" she whimpers between gasps, \"Johnathon, destroy me!\" The pain, the pleasure is too much for her. Her eyes roll back into her head as she passes out from his violent invasion. He pulls her limp frame up onto him. Lifting her, slamming her back down onto his swollen cock. His claws creating more gouges in her flesh. Her red bodily fluid mixes with their sweat. He hasn't had enough. He continues to thrust his manhood into her. He bites down on one of her breast, breaking skin. He drinks her blood, savoring its taste. He will destroy her. With that very thought, he releases a flood of his essence into her wanton pussy. Screaming at the sky in a booming growl of ecstasy, his body jerks with each pump of his cum into her until there is nothing left to give.\n\nHe brings her in close, tightly embracing her. Her head flops into his shoulder, sending a shock wave of realization through him. \"NO!\" he exclaims in a husky whisper, \"What have I done?\" He gently lays her onto the ground. Panic takes over. Gathering up her torn clothing, he tries to press down on her wounds to stop them from bleeding. Scooping her up into his arms, he hurries for the door into the castle. The stairs curve downward from the tower. Skipping steps as he races against time to save her. \n\n*****\n\nHis foot slams into the doors of her chamber, scaring the hell out of Chris. His demon presence always did scare her. She did as she was told and waiting for them to return. \"Girl, grab some towels, quickly!\" he commands, placing Sarah onto the bed. His movements caused the wound to bleed again. He firmly presses down. Chris turns, holding a pile of towels. \"Can you sew?\" She nods. \"Hurry! Get a needle and some thread!\" He examines her cuts. Thankfully only a few needed to be stitched back together. His frame shifts, returning himself to his human form.\n\nChris returns once again. She threads the needle as her master steps back, letting her in to close the wounds on Sarah's waist. She works as fast as she can without harming Sarah too much. Four wounds needed her attention. One by one she does so.\n\n\"Done, my lord!\" Chris bows and backs away. \"We'll need to clean her so she won't get any infection.\" Lord Asmodeus nods, gathering Sarah once again into his arms. Chris races ahead, turning the water on in the shower to warm it. She holds the door open as he brings Sarah in and under the warmth. Her red liquid runs into the drain. With a plush cloth lathered with a silky soap, he dabs her injuries.\n\nChris stands, waiting outside of the shower with a bath sheet ready. Fear fills her as her thoughts bombard her with all sorts of ideas as to what has happened to her friend. Tears trickle down her cheeks. She softly sniffles, hoping her master does not hear her silently cry.\n\n\"I'm sorry, Sarah!\" Lord Asmodeus says. His voice dripping with sorrow. He folds her into his strong embraces. Hugging her close to him. He silently curses himself for what he has done to her. Stepping out of the enclosure. He lets Chris place the sheet across Sarah's body.\n\n\"My lord, I gathered bandages to wrap her wounds.\" Zuel states, bowing his head as they enter her bedroom. Lord Asmodeus turns and nods to Chris, who quickly takes the wrappings from Zuel. She follows him over to the bed. As she encases Sarah with the white bandages, her master helps lift and turn the woman's frame to help with the prose. \n\nWithout a word, Lord Asmodeus leaves the room. Zuel and Chris watch as he smashes his way through the doors, disappearing into the darkness of the hallway.\n\n\"What happened?\" Zuel asks, turning his gaze to the servant.\n\n\"I believe he hurt her. Not meaning to, he did,\" she lowers her eyes as she speaks.\n\n\"I see!\" Zuel answers. \"Never have I seen him so concerned with a human's well being. This is most troubling, indeed.\" He also leaves the chamber.\n\nChris gently raises the blankets up to Sarah's neck. The damage done to her overwhelms Chris' senses. She sobs over her as she moves Sarah's wet hair from her face. \"Please, be alright!\" she pleads in a whisper.\n\n*****\n\nThree days have passed. Chris waits beside Sarah's bed, not moving from her side. Watching over her friend. Wiping the sweat from her brow. Sarah's fever begins to break. Tiny moans of pain escape her lips as Sarah starts to move.\n\n\"Shhh, Sarah, you are safe!\" Chris comforts her. She settles back down, slipping back into unconsciousness.\n\nThe sun slowly fades in the west. Sarah's eyes flutter open, \"Chris?\" she calls out. Her voice dry.\n\n\"I'm here, Sarah,\" she answers. Sarah weakly points to her throat, in need of something to drink. Chris pours her a glass of water and helps her sit up in her bed. Sarah tries to grip the glass, but has no strength in her hand. Chris guides it up to her lips and tips the glass for her. Gradually, she sips the fresh liquid into her throat.\n\n\"Thank you,\" Sarah smiles, \"Where's Johnathon, I mean Lord Asmodeus?\"\n\n\"I don't know. I haven't seen him in these last three days.\" Chris' eyes fill with sorrow.\n\n\"No worries. I'm fine.\" she says, shifting herself to get more comfortable in the bed. She winces with the stabbing pain. \"It's not his fault. I'm the one who urged him on.\"\n\n\"But I should have had control over myself to not let it get that far!\" Lord Asmodeus voices booms through the door. \"Are you alright?\"\n\n\"Yes, thank you,\" Sarah beams. She has missed him. She reaches out her hand for him to take. He does not. He stands far away from her bed. Her face drops from his. Confusion rakes her mind. She balls up her fist, bringing it towards her chest. She feels more alone now than she has ever felt. \"I think I'll rest some more.\" Chris helps her lie back down. Sarah rolls away from both of them. Silent tears begin to cut a path down her cheeks.\n\nLord Asmodeus' features change as he is gripped by her feeling. He wants so badly to go to her, but he cannot. He hurt her and he has not forgiven himself. \"Sarah!\" he whispers.\n\n\"I'm okay. Thank you. I need some rest,\" her voice muddied with her own remorse. \"Chris, in a little bit, can you bring me something to eat?\"\n\n\"Yes,\" she softly answers as she watches Sarah's shoulders slightly move with her silent sobs. Both women hear the doors to Sarah's chamber softly close.\n\nOut in the hall, Lord Asmodeus holds tightly to the door knobs. Forcing himself to let go, he turns to leave. A roar of anger escapes his mouth. Anger towards himself.\n\nThe two women cringe with the sound. Sarah's cries become more open as Chris tries to comfort her. What could they do, they were only human after all. Demons where cold, unfeeling creatures with no regard for them. Sarah slips back into a deep sleep while Chris rubs her back.\n\n*****\n\nZuel barges into his master's study. \"My lord, I beg you to be rid of that human. She has some pow...\" His words are abruptly cut off. Lord Asmodeus seizes him by the throat.\n\n\"I would watch what you say!\" he snarls his discontent. Zuel forces a nod. Lord Asmodeus drops him to the floor, choking and gasping for air.\n\n\"My lord, I didn't mean any disrespect. I don't understand what is happening to you and the others are starting to talk,\" he whimpers, still on his knees.\n\n\"She smiled at me, taking the blame onto herself. I should have kept control!\" he shouts, mostly at himself.\n\n\"We are demons. It is our nature to become what we truly are,\" Zuel pleads. \"Humans are our food. They are cattle to us and nothing more.\"\n\n\"She's not! Do well to remember your place, Zuel!\" Lord Asmodeus' power waxes as he shifts his form.\n\n\"Forgive me, my lord!\" Zuel cries, hoping to stave off his master's attack. \"I will never speak of it again!\" He cowers at his master's feet.\n\nLord Asmodeus forces himself to become calm. His anger does him no good. Though his very instinct tells him to destroy all in his path.\n\n\"And what of our other little problem?\"\n\n\"He seems to be very put out. I witnessed him slamming his fists into the ceiling and then trying to claw his way out. Perhaps that was the spot you and Miss Sarah were on the roof?\" Zuel answers, straightening out himself.\n\n\"Perhaps. Keep an eye for him. He could strike her at any moment. I want to be ready for him. I want to crush him in my very own hands!\"\n\n*****\n\nChris balances a tray of assorted foods in one hand and opens the door to Sarah's bed chambers with the other. Gliding across the room to the bed side table, skillfully places it down. She arranges the plates and pours a cup of tea. \"I didn't know what you might be hungry for, so...\" Chris gasps, realizing Sarah was choking for air. She turns her eyes to see her floating a foot off of her bed by some invisible force. She races to her aid, but that same force hurls her across the room. Her body smashes onto the floor, sliding for a few feet before coming to an agonizing rest at the far wall.\n\nSarah screams out in pain. Her frame twists and contorts. The phantom has her at his mercy. Fresh blood from her wounds seep into the bandages. Her voice falls silent. Like a rag doll her body is thrown away, smashing into the wall next to the large patio. Chris watches a skeleton, greasy haired man appear in between her and Sarah's languid form. It smiles at her, turning his attention back to his prey. Like static, his form shifts in and out the closer he gets to Sarah.\n\nHe raises her up to him. A bluish white light begins to glow between their bodies. He chuckles with his triumph. Chris scurries from the room. He pays no mind to her because his prize is right in front of him.\n\n*****\n\nChris dashes down the hall and around a corner, running headlong into Zuel on his way to Sarah's chambers. \"What is it, you damn human?\" Zuel growls.\n\n\"Something, something has Sarah!\" she timidly answers.\n\n\"Very well, I'll go on ahead. Continue your way to the master and inform him of the situation!\" he commands. His thoughts race, if that thing kills her before I get there. The master will be safe. A sharp grin rises on his lips.\n\nChris rushes towards her master's study. Her legs grow tired, but she refuses to give up. Sarah needs him more than ever and she is not about to fail either one of them. Crashing through the study's doors, out of breath, she shouts, \"Something has Sarah!\"\n\nLord Asmodeus abruptly pushes his desk aside. In one step he transforms into a demon. His wings spread, propelling him forward. He snatches Chris up in his arms. In seconds, he gently drops her outside of Sarah's doors. \"No matter what happens stay out here. Do you understand?\" She nods her acknowledgment.\n\nHis power waxes, pushing forward the wood of the doors, explode, scattering splinters to shower the occupants inside. What Lord Asmodeus sees causes him to take a step back. Thing he had met days before is more deformed. Massive long black patches appear to be sewn onto his skin. \n\nDarrell turns his gaze to him and smiles, \"Thank you for making it easier for me to have her!\"\n\nLord Asmodeus' shocked gaze turns to Sarah, collapsed in a heap on the floor. Fresh blood stains her clothing. Guilt creeps into his heart. Quickly it turns to hate. Like a bolt of lightning, he charges forward. A look of surprise shoots across Darrell's face. Lord Asmodeus squeezes his fingers around his throat.\n\n\"You come into my house and try to take what is mine!\" he grins watching the wretched creature squirm under his grip. Once Darrell appeared in human form, he became solid because of Hecate's magic net. He has no chance of escape. Lord Asmodeus chuckles with his distress.\n\n\"This cannot be!\" Darrell shouts out in confusion. \n\n\"Thank you, Hecate!\" Lord Asmodeus laughs. \"What is this black gunk sewn to your body?\"\n\n\"It's mine!\" Darrell hisses.\n\nLord Asmodeus reaches out his hand, gripping onto an edge of the mass attached to the left side of his face, \"They say if I rip it off quickly it hurts less,\" he pauses. \"But I'll remove it as slow as I can to cause you as much pain as I can.\"\n\n\"NO! No, it's mine! MINE!\" he snarls.\n\nA quick jerk at the lip of the patch. Darrell screams out. Another jerk and more is released from his face. He smiles. Darrell's body contorts. He feebly slaps at his attackers arm. One last rip and the black patch is freed from its place. Darrell scratches and claws to get at it. Trying to snatch it away from Lord Asmodeus' fingers.\n\n\"I drop this. It will disappear. Without anything to cling to, it cannot survive,\" he snarls his pleasure of his own words.",
        "\"No, no, no. Don't drop it! It's mine! Mine!\" Darrell cries. Lord Asmodeus lets it drop from his fingers. Inches away from the floor, it changes color to an electric blue light. It floats like water in the air. It shoots towards the door, stopping. It hoovers near Chris, Suddenly it dances its way around her. Shooting back, it makes a stop by Zuel, but backs away. As if it becomes aware of Lord Asmodeus watching it, it turns its attention towards him.\n\n\"Zuel, take him,\" he commands, handing Darrell over. Zuel holds firm to his captive as they watch the watery creature swirl around Lord Asmodeus' head, then waist. Dancing between his legs, finally disappearing up into his loin cloth. His knees buckle under him. Slamming him to the floor. It plays with his cock, causing it to grow. Low puffs of pleasure seep out of his lips as it works its way around, stroking him hard and fast. Seconds pass. Lord Asmodeus roars out releasing his sperm to fly across the room. He falls forward onto his hands, trying to catch his breath. The bluish watery creature glides past his cheek, caressing it. Suddenly as it begin it stops, flying into the sky and back down again careening into Sarah's body. Lord Asmodeus knew at that moment what it was. It is a part of her soul!\n\n\"What have you done?\" he demands turning his eyes to Darrell. He can see there are other black patches strapped to the man's frame. \"Zuel, take him to the chamber. I will deal with him in a bit!\"\n\n\"Yes, my lord,\" he bows, leaving the room with his prisoner still struggling to break free.\n\nPulling himself together, he gains his footing, changing back into a human. He cradles Sarah's body in his arms, scooping her up; he walks her back to her bed. He stares at her angelic features. He knew when the watery creature wrapped itself around his cock, he knew it was Sarah.\n\n\"Girl, please get more bandages. We have to stop the bleeding again,\" he orders in a low tone.\n\n\"Yes, my lord,\" She races from the room.\n\n\"Sarah, Sarah?\" he whispers her name over and over again until she wakes.\n\n\"Johnathon, he's found me!\" she cries, pleading with him to save her.\n\n\"He cannot bother anymore.\"\n\n\"Don't leave me!\" she begs, drifting back to unconsciousness.\n\n\"I won't.\" He kisses her forehead and lays her down. \"Watch her while I take care of that monster.\" Chris nods.\n\nBefore he leaves the room, Chris asks, \"What if she wakes before you return?\"\n\n\"There's no chance of her waking all the way until I get the rest of her soul back.\"\n\nChris' eyes widen with the realization that the thing stole parts of her friend, \"Master, please make him pay for what he has done to her.\"\n\n\"I most definitely will!\""
    ],
    "authorname": "sexydemondelight",
    "tags": [],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-demons-embrace-ch-05"
}