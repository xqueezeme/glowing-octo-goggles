{
    "title": "Flying Blind Ch. 03",
    "pages": [
        "This story is a bit wordy and fairly long, so if you are looking for immediate gratification, you might want to look elsewhere.\n\nThe following story is a work of fiction. Any resemblance between these character and events and any real person or events is strictly coincidental . . . and pretty darn impressive seeing as it is a science fiction story. Do not reproduce or copy this story without the consent of the author.\n\nThis story is based in an alternative universe, where history took a different course than the one depicted in my other stories. It also takes place at a fictional town in Colorado called Crystal Pass and a fictional school called Four Corners University.\n\nThe following story contains lesbian sexual activity.\n\nProofread by \"hkf999\"\n\n---------- \n\n\"An eye for eye only ends up making the whole world blind.\"\n\n~ Mahatma Gandhi\n\n---------- \n\nHeda was not exactly proud of herself for throwing up, but some things simply could not be helped. She had followed her brother to the scene where a mysterious kidnapper had \"released\" his second victim. By the time she had arrived, the young man was in an ambulance, but there were plenty of pictures. Edgar had been handed a digital camera and had gone through the whole card. Heda, looking over his shoulder, had gotten about twelve slides before she vacated the contents of her stomach into a trash can. It made her fell slightly better when she realized she was not the first one to do so.\n\nThe former captive, an arachnid shifter who's name was not yet being released, had been found naked with his arms handcuffed behind him around a lamppost. He had been on his knees, and his legs had looked impossibly cramped. His legs were coated with feces and he had smelled so bad that it still lingered. He was gaunt, looking as if he had been barely fed since his captivity began and he had only been given enough water to survive. From the neck down, he was otherwise unharmed, but it were the pictures above the neck . . . those were what made Heda ill. The man's tongue had been cut in half from the tip all the way to the base, giving it a savagely serpentine look. All his teeth had been torn out and the skin flayed from his cheeks. \n\nAnd he had been found with a strange contraption attached to his neck area. It was a long metal rod with two-pointed prongs on each end and was about a foot long. One end had been shove up into the bottom of his chin while the other end pressed into his upper chest, and the entire device had been secured by a long leather strap that had wound around his neck, preventing anyone from opening his mouth to survey the damage until it was finally cut away. \n\n\"You okay?\" Ed asked when his sister returned after composing herself.\n\n\"No, I don't think I am,\" she whispered. \"What he did to Carla was bad enough, but this . . . this guy isn't just going to go away is he?\"\n\n\"No, I don't think he is. They're going to start bringing in a lot bigger guns than me, considering the way this guy is escalating.\"\n\n\"Can I see them again?\"\n\n\"I don't think . . oh hell, we're drawing a crowd. There's no way we're going to keep this from freaking out the human population now.\"\n\n\"Let me help. Please?\"\n\nEd sighed. He knew that his sister did not like feeling helpless or weak, and she had displayed a little of both in recent moments. \"You've got your role to play, and I've got mine.\" He looked around. \"I'll talk to you about it later.\" \n\nShe looked angry about it, but was not going to argue. \"Whoever it is, letting him go in front of the medical center? You think it means something?\"\n\n\"That he's a sick son of a bitch? Listen, I gotta go talk to the guy who found him. I'll swing by the dorm later, okay?\" \n\nHeda watched as her big brother went to a young man sitting forlornly on the steps of the medical center. She recognized him as the same guy who was working the front when Madison was getting patched up. His job was not getting any easier. The ring of cops closed in and Heda was on the outside looking in. There were human police involved this time, so Heda was effectively just another student to them. She walked away from the gathering crowd, her heart thumping angrily in her chest. She needed to vent and let off some steam, but she apparently was not going to get a chance. Her Neighborhood Watch phone was going off. It was time for a meeting.\n\nShe got to the volleyball stadium quickly to find that this was not an all-hands meeting, but rather just the leadership. Reichert was there and looking tired, along with a few others. \n\n\"Miss Adler, you were at the crime scene?\" the Reptile King asked quickly and sharply. \n\n\"Yes. Human cops got involved, but Edgar is still there. He'll fill us in when he can get away. It's bad your Majesty. Really bad.\"\n\n\"I heard you lost your lunch,\" came an incredibly annoying voice. Alvin Hannity stood in the doorway with a cocky grin. \"Apparently the big bird bitch's daughter ain't as tough as she claims.\"\n\nHeda could tolerate a lot of things, but she was still feeling angry at herself for her reaction at the scene, and this ass-hat had just insulted her mother.\n\n\"This is not the . . . oh hell,\" Reichert growled shortly after Heda launched herself across the room.\n\nAlvin got into a fighting stance and the air around him began to shift. Heda noticed and began her own transformation. \n\n\"Stop!\" Reichert said, forgetting for a moment that neither of them could hear him while shifting. It was a time of crisis, and he was about to have a shifter brawl on his hands.\n\nAlvin was able to transform first. Wings erupted from his back, while his humanoid head grew bat-like ears and his mouth filled with teeth. Claws erupted from his hands and toes, in the latter case puncturing through his shoes. A layer of brown hair covered his body, and he let out a dreadful shriek.\n\nHeda had remembered to kick her own shoes off first, but her shirt was still ruined when her great feathery wings erupted from her back. Her entire head was replaced by that of a great eagle, and her legs from the knee down tapered into the familiar legs and taloned feet of a bird of prey. Feathers covered every inch of skin, and she met the shriek of the bat with her own battle cry. \n\n\"Crap!\" Peter said, having chosen that moment to arrive. \"This is gonna get ugly.\"\n\nAlvin leaped on his adversary, but Heda blocked his hands to the outside before laying a punch into his midsection. He growled a response, then lashed out at her leg with his own taloned foot, raking her across the thigh. Heda was to angry to even invoke her Gift, but was not so wounded as to go down easily. She leaped upward, kneeing Alvin in the face as she went, then aimed her deadly foot towards his head.\n\nThe fight ended almost as quickly as it started. While the two combatants were distracted, the Reptile King had also shifted forms, but had gone into full beast mode rather than the half-forms of the other two. Suddenly, there was a fifty-foot long extinct crocodile between Alvin and Heda. His might tail pinned the were-bat to the ground while that massive mouth turned and bellowed a warning at Heda. Otherwise, the gym had gone completely quiet. \n\nHeda was so pissed that she was seeing red, but one did NOT challenge a monarch unless you were damn sure you could win or were no longer all that interested in breathing. Gifted or not, the head of the flesh emperor crocodile was as big as she was. Heda landed, but kept her angry glare focused on Alvin. A couple of Alvin's supporters had shown up and were trying to coax him into returning to human form. Peter stood between Reichert's jaws and Heda.\n\n\"He's not worth it,\" Peter replied. \"Alvin is not worth getting kicked out of school, much less dying for. C'mon, shift back.\" He smiled. \"This may be my one and only chance to see you naked. You wouldn't deny a man that, would you?\"\n\nHeda gave him as dirty a look as her eagle features could muster, then glanced back at Alvin. Slowly, the feathers and wings were absorbed back into her skin, and the rest of her body eased back into its human shape. Her sweatpants were still good, though her shirt and bra were pretty much ruined. Luckily she had her gym bag with her, so she could at least put on her uniform top.\n\n\"What the hell happened?\" Madison asked meekly. She saw Alvin still pinned by giant crocodile tail and could not help but smile. She had been surprised to get the call to join the proceeding, but was more surprised by the proceedings themselves. \n\nBilly, Madison's escort for the evening, looked around. \"Shit happened.\"\n\nMadison looked up at him, then rolled her eyes. \"Is that your official, highly intellectualized deduction?\"\n\nHe shrugged. \"It's the best I could do on such short notice.\"\n\nConfident that things were back under control, Reichert shifted back. His entire wardrobe was a lost cause, so he was quite nude when back in human form. Many of the students did not seem to mind, though he was offered a pair of sweats from the locker-room. \n\n\"Everyone but Miss Adler and Mister Hannity, go stand on the other side of the room,\" he said, his voice as forgiving as steel. \"You two,\" he added, pointing at the floor in front of him. \"Now. And if either of you even looks at the other, so help me I will make you both wish you had never been born.\" That ensured that there were four eyeballs were trained directly on him. \"I have never seen such poor behavior from those with so much to offer.\" He started to pace. \"Miss Adler, I am sure your mother raised you better than this. You are behaving like a seven-year old on a playground. Your mother waged war, not spoiled little fights, and I doubt she would throw honor to the proverbial wolves just because of the insults of a spoiled brat.\" \n\n\"Wait a sec --\" Alvin started to say, then was actually lifted off the ground with one of Reichert's hands around his neck. \n\n\"You . . . don't speak. Out of respect for your father and what your family has meant to this institution, I have tolerated so very, very much from you. I have given every quarter in terms of both human and shifter law in downplaying your deplorable behavior. You have been given every opportunity to simply go your own way without punishment or repercussion. No more. You still have a Council appointment to discuss the matter of your alleged assault on Madison Sloan. Neither of you are to approach the other or the other's party between now and then. You are not to call, approach, touch, or even look for too long in one another's direction. Mister Hannity, that goes especially for Miss Sloan. Only the fact that I need both of you to help keep certain factions pointed in the right direction in this time of emergency prevents me from taking one or both of you across my knee. Got it?\" \n\nHeda nodded, flushing a little bit with shame and anger. Alvin just looked angry and defensive. \n\n\"I want to hear it from both of you,\" Reichert replied. \n\n\"Yes sir,\" Heda said with what voice she had left.\n\n\"Sir --\" Alvin started, then stopped when Reichert's hand squeezed. \"Yes sir.\"\n\nReichert put Alvin down. \"No more. There are much bigger things at stake than your egos. Now go to opposite sides of the gym and listen up.\"\n\nHeda walked over to one set of bleachers and sat down, with Peter on one side and Madison on the other. \n\n\"Hey, what happened?\" Madison asked. \"Which asshole started it?\"\n\nHeda snarled, \"Lay off Reichert, okay? He was actually doing his job.\"\n\nMadison was obviously startled. \"I'm sorry. I just thought --\"\n\n\"Don't think,\" Heda said. \"Just . . . just leave me alone.\"\n\nMadison's eyes teared up. 'What did I do?' she thought. Heda was trembling with anger, so Madison just scooted away and said nothing. \n\n\"As you are probably all aware by now,\" Reichert started, reclaiming the room and everyone's attention, \"the second victim of our mysterious kidnapper has been found, and the perpetrator has escalated the violence. So additional precautions must be taken. The humans have become involved, and I have already been informed that the FBI will be on scene if they are not already. This means that our shifter activities must be further curtailed. There are eyes everywhere, so be very careful what you say or do in public.\" He suffered through the first grumblings of discontent, knowing that these animals did not want to be caged. \"The humans will be providing increased patrols and security, which makes some of our job easier. Unfortunately, we will also have to stifle their investigation somewhat to prevent our true natures from being revealed.\" He looked around, his eyes settling on one Madison Sloan.\n\n\"Miss Sloan, you and Mister Forester are the only shifters at the radio station, correct?\"\n\nShe nodded. \"Yes, though someone told me that one of the new day shift guys is a necromancer.\"\n\n\"Excellent. Do you know his name?\"\n\n\"No. I haven't met him yet.\"\n\n\"Well I will fill him in later.\" Reichert grabbed some notes. \"I have developed some code phrases for you to use that will also be distributed to the shifter student body. Basic instructions on where to go for future meetings and status updates, sort of like Homeland Security Notifications, but hopefully they'll actually make sense. Miss Sloan,\" he continued formally, \"I am afraid the favor that I am going to ask of you is serious.\"\n\nMadison turned paler than normal. \"Yes?\"\n\n\"I would like for you to increase your hours at the station. You will of course be compensated for your trouble, but we need someone who can transmit to everyone,\" he added, glancing at Heda. \"Miss Adler was right. Your broadcasts would be much more efficient than trying to make thousands of phone calls. All shifters will be required to stay tuned to the station when in the dorms or other domiciles.\"\n\n\"Wait, you mean I'm on every night?\"\n\n\"For the time being,\" Reichert replied, \"at least until I can get others more aware of the situation to assist you. The spell caster will help during the day, but two of you cannot be on twenty-four seven. If it affects your class schedule, let me know and we shall make arrangements.\"\n\nMadison just let out an \"eep\" noise while she nodded. This was a lot more responsibility than she had expected.\n\n\"Excellent. Because you are going to be a bit more public of a target, I want you to make sure that you always have a friend or two around.\"\n\nMadison actively avoided looking over at Heda. When she was there, Billy was there. Hopefully that would be enough. It seems that she had outlived her welcome with Heda, and she had no idea what she had done wrong.\n\nAt the moment, Edgar Adler walked into the gymnasium and was quickly summoned up to the podium. \"Hello everyone. I can't stay long, but you should all be informed of what is going on. My name is Edgar Adler, and I'm a Paranormal Private Investigator who has been brought in by the FCU Shifter Council and the North American Shifter Council to investigate these crimes. I have been given full investigative authority by both councils. Let me get to the big questions. Yes, the second victim has been found, and is in bad shape. All we know so far is that he was freezing to the touch when he was found, he had been tortured even beyond what the first victim endured, and had a device wrapped around his neck. It was identified as a Heretic's Fork.\"\n\nReichert nodded. \"A device used in the Inquisition to encourage confessions of heresy. Was there an engraving?\"\n\nEd looked surprised. \"Yes.\"\n\n\"The word 'Abiuro'?\"\n\n\"Yeah. How did you --\"\n\n\"It means 'I recant.' It was etched in the side of the device, and was the only thing its wearers were allowed to speak. Someone is trying to send a message.\"\n\n\u2028\"This isn't random,\" Edgar agreed. \"This is someone's they-done-me-wrong song. Now we have to find out who is supposed to recant what.\"\n\n\"And why,\" Reichert finished. \"Everyone, find your way home and remember to be safe. He has released this victim, which may mean his hunt for the next one is beginning.\"\n\n\"And it is likely the next one will not make it out alive,\" Edgar added. They needed to be scared into being careful. \"If anyone wants to take a semester off, this might be a good time to think about it.\" He knew most would not run. Shifters had fewer and fewer places in this world to call their own, and they would not abandon one. He looked over and saw Heda sitting a bit apart from Madison, and neither of them looked happy. He had to find out what that was about.\n\n\"You can all go,\" Reichert said.\n\nHeda stood up, torn between turning to Madison and just storming out. In the end, she stormed out, leaving Madison crying behind her sunglasses. Billy sighed and helped Madison to her feet while Ed took off after his sister.\n\n\"What's wrong?\" he said when he caught up with her. She was standing by a tree fumbling with her cell phone. \n\nShe didn't respond, but just scrolled down to a number and then . . . stopped. Ed looked over her shoulder.\n\n\"Why are you calling the parents?\"\n\nHeda bit her bottom lip, then, \"I screwed up, Ed. I completely lost my cool and got into a half-form brawl with Alvin Hannity.\"\n\nEd raised his eyebrows. \"I met him. Not that the asshole doesn't have a good ass-whooping coming his way, but --\"\n\n\"He'd heard about me throwing up,\" she muttered. \"I felt like such a pussy and then for him to bring it up . . . and he insulted Mom. I just needed to hit something and I wanted to hit him anyway. Then Reichert came down on us. Mom would be so fucking ashamed of me.\"\n\n\"And again, you're calling her . . . why?\"\n\n\"Because she should hear about it from me. So she can just go ahead and tell me what a fuck-up I am.\"\n\nAt that, Ed rolled his eyes. \"Horseshit. Heda, Mom thinks that the sun shines out of your ass. It's been a pain for the rest of us to compete with that. She's been expecting you to follow in her footsteps as a warrior for the avian shifters. I can't complain. I mean, it's not like she didn't love the rest of us to, but you're her baby girl.\"\n\n\"I'm just so bad at this whole . . . diplomacy . . . thing.\"\n\n\"And she was too, once upon a time. You've just never practiced because it isn't your thing. But I have it on good authority that you're faster, stronger, and a better fighter than Mom when she was your age.\"\n\n\"What authority?\"\n\n\"Her.\"\n\nThat stopped Heda for a minute. \"She said that?\"\n\n\"Yes she did. And Dad figures that since you're just as pig-headed and headstrong as she is that you'll probably wind up either starting or finishing a war at some point.\"\n\nHer mouth quirked at that. \"He would say that, wouldn't he?\"\n\n\"Yeah. Now, you going to tell me why your girl is crying her eyes out?\"\n\n\"Crap,\" Heda said. \"I . . . a lot has happened in the last couple of days, and she just wound up in the wrong place at the wrong time.\"\n\n\"Well, there might not be another place or time for the two of you if you don't explain whatever is going on to her.\"\n\nHeda looked at her phone, then back at the gym. She put the phone back in her pocket and then ran back inside, but Madison and Peter were both gone. \"Fuck!\" She headed towards Madison's dorm, noticing that her brother was following along patiently. \n\n\"You know that whole part about never going out alone at dark? That means you too.\" \n\n\"I am such a basket case,\" she replied. \"I mean, how is Madison supposed to know what is going on in my head if I can't even get it sorted out?\"\n\nEd smiled. \"You really dig her don't you?\"\n\n\"Dude, she's cute, sexy, smart, has a sassy mouth, and she tried to kick me in the head.\"\n\n\u2028\"Sounds like love at first sight to me.\"\n\n\"She's blind.\"\n\n\"Love is --\"\n\n\"Don't go there.\"\n\nThey found themselves outside of Madison's door, hearing the murmur of voices inside. Heda raised her hand to knock, then lowered it . . . then raised it . . . then lowered it. Ed finally got tired and just knocked, putting his hand on his sister's shoulder when she attempted to flee.",
        "\"Yes?\"\n\n\"This is Edgar and guest. Can we come in.\"\n\nThere was debate on the other side of the door. It got more and more heated until Heda could almost make out Madison's grumbling. She smiled. That grumbling had a special cadence which just made her smile for some reason. Then she sighed. \n\n\"Madison, please? I'm sorry for being a bitch.\"\n\nMore grumbling, then the deadbolt slid clear. Billy opened the door, sighed, then thrust Heda inside while he stepped outside with Edgar. Heda felt the door groan under their weight as they leaned against it. She wondered if she should warn them that the door opened inward. Instead, she turned to Madison, who was sitting nervously on her bed. The braille sheets with her instructions from Reichert were scattered on the bed and one of them looked like it had been used to blow her nose. \n\n\"I hope that wasn't important,\" Heda said, trying to lighten the mood.\n\nMadison picked it up and let her echolocation scan all the bumps. \"Instructions about making sure to read all the other pages,\" she said at last. \"It was expendable.\" She didn't turn the sonar on again, but felt the bed creak as Heda sat down. \"What did I do?\" she asked plaintively. \"I thought that I was doing everything right.\"\n\n\"You didn't do anything wrong. I . . . The last couple of days have gone from weird to worse. I wanted to talk to you about something yesterday and didn't, and then today . . . I freaked out. I went and saw the images of the second victim when he was found, and I hurled. It was humiliating, you know? I'm supposed to be the big new bird in town and I'm trying to follow in my mother's warrior footsteps, and I threw up in public. Then for Alvin to rub it in . . . it was almost as if I used the cheap shot at my mother as an excuse. I wanted to hit him and I lost my cool, and now I get to explain to this warrior hero why her daughter is starting fights at school.\"\n\nMadison chewed on her bottom lip. \"What was it you wanted to tell me yesterday? I mean, I can't help you deal with your mother. Hell if I would know what to say. But what did you want to say to me?\"\n\nHeda took a deep breath, and then recounted her conversation with Reichert, which painted a slightly different picture of his conflict with Madison and his reasoning. \"I mean, he still should have done more to physically protect you, but I just started to wonder. Then that made me feel like a bitch because I'm supposed to be on your side, but --\"\n\n\"But you listened to another point of view and then things weren't so simple.\" Madison sighed. \"I never went to the writing center because I knew that one of the girls in Alvin's posse worked there. I knew no one would care if I complained, but I should have at least tried. But I really did think that he was being unfair. At least at the time I did.\"\n\n\"Maybe Reichert isn't the enemy we thought he was. Can you handle that maybe I don't want to really hate him but still like you better?\"\n\n\"I have no right to tell you who you can and can't like. Unless you decide you like Alvin, then you can just get the hell out.\"\n\n\"Not much chance of that. I've got a scar on my leg that's going to take a while to heal,\" she said, feeling the tender spot. She was thankful that shifting between forms helped close up wounds. \"And I did some damage to his face and ribs.\"\n\n\"Maybe he won't be able to open his mouth,\" Madison muttered. \"That would be a nice change. Do you want to go to the medical center? Seriously, you should get that checked out.\"\n\n\"Too many questions and too many cops over there right now. That's where they found the second victim. Remember that guy who checked you out? Detrius I think? He's the one who found the guy.\"\n\n\"Was it bad?\" Madison asked, almost fearing the answer.\n\n\"Yeah. A lot worse than Carla.\"\n\n\"What --\"\n\n\"I don't want to tell you,\" Heda said. \"I want at least one of us to be able to get some sleep tonight.\" She took Madison's hand. \"I am so very, very sorry about earlier. I guess I'm not as grown up as I thought.\"\n\n\"Yeah, and you're nineteen. You should be totally mature and have everything figured out by now,\" Madison replied. Then she smiled. \"You're nineteen. I'm older than you.\"\n\n\"Really?\"\n\n\"Yep. I'm twenty. Never thought I'd go for younger women, but hey.\"\n\nHeda let out a small laugh. It was not much, but it felt so good. \"Have you decided if you're moving in with us? Considering what a psycho I am?\"\n\n\"I DID try to kick you in the head the first time we met, so you don't have the psycho market cornered.\"\n\n\"Actually, the first time we met, you accused my of being a spy. The second time we met, you accused me of being a spy and THEN tried to kick me in the head.\"\n\n\"I stand corrected.\" Madison liked the warmth of Heda's hand. It was another kind of intimacy that she wanted to experience more of. \"I'm just so afraid that if I move in that . . . that it will turn out like before. I know that you and Joanna and the others aren't Trojan Horses, but I still keep waiting for that shoe to drop. You know, where everyone says, 'Ha, joke's on you'?\"\n\n\"I swear that I will never do that to you,\" Heda replied, meaning it. \"I like being around you. I think it would be great if we both had our own spaces, but if those spaces were just a thirty feet away from each other --\"\n\n\"It would be kind of . . . Wait, I don't even own a bed!\" Madison's brain just took a mental leap.\n\n\"We'll find you something. Maybe a futon. Or you could just sleep upside down in your closet.\"\n\nMadison shook her head. \"Sure, go with the bat jokes. Those never get old.\"\n\nHeda stroked the back of Madison's hand. Despite having a \"productive\" year of sexual exploration in Europe, having a relationship with a girl was a little new to her. What was she supposed to say or do? \"Are we okay?\" she asked at last.\n\n\"Yeah. I'm sorry about how your day went.\"\n\nHeda grimaced. \"It's not over yet. I still need to call Mom.\"\n\n\"Go ahead, before it gets too late.\" Madison got up and opened the door, letting Edgar and Billy both stumble in after they had been listening at the door.\n\n\"She needs to make more noise when she walks,\" Edgar said, picking himself up off the ground.\n\n\"Okay boys, Heda needs to make a phone call.\" Madison looked at her friend. \"You can stay in here, and we'll wait outside. You need privacy, but we can't just let you go wandering around outside alone now can we? Sweet, delicate flower such as yourself --\"\n\n\"Now you're just being snotty,\" Heda replied.\n\nMadison handed her the \"instruction\" sheet. \"No, this is snotty.\"\n\n\"You are so very very gross.\" Heda waited until the snot paper had been tossed and her friends went outside before making the call that she dreaded.\n\n-------- ---------------------\n\nThe next weekend . . .\n\n-------- ---------------------\n\n\"Sweet!\" Joanna shrieked as she raced into the house that she would now be sharing with her friends. Peter's uncle had moved quickly on the property, including having a top-notch security system installed. The bodacious blond was now in direct competition with her fellow shifters for finding the best bedrooms, the whole notion of \"fliers upstairs and ground shifters downstairs\" completely abandoned. Basically, Madison had been given the basement and that was the only thing settled. Well, that and Kevin and Peter were already trying to figure out how to wire the entire house so that Madison could pump the tunes anywhere within its walls. Bill and Sasha were actually going to cohabitate in a first-floor room, so they picked a large one. No one minded, since they were collectively taking up less space than if they each had a bedroom. \n\nMadison opened what might easily be construed as a closet door between the kitchen and the lobby and descended the stairs into her cave. Heda had basically wanted to claim the attic, meaning she would be on the opposite side of the building, but it was still very close. Heda could not be there that day because she had a practice game against the University of New Mexico, but she would be back that evening.\n\n\"You're excited about this aren't you?\" Edgar asked from behind her. With Heda gone, he had become her de facto protector and escort. Billy still filled the role sometimes, but Edgar seemed to have developed an interest in this woman who had gotten under his sister's skin a bit.\n\n\"Yeah, I guess. Kinda. Sure. Can you tell?\" she said, turning around to face where his voice was coming from.\n\n\"You're undressing the room with your eyes. So just go ahead and let it out. What do you want to do with your room?\" \n\nMadison just stood there, calm and casual. Then her face got really excited and she started pointing out exactly where everything she had would go. Her music systems, including an eight-track player, a reel-to-reel player, a turntable, a phonograph, and of course her laptop and DJ equipment. The closet in the basement was not very big, but she also did not have many clothes. \n\n\"So you need a bed and what . . . a dresser maybe?\"\n\n\"I really can't afford anything though.\"\n\n\"So you were planning on making a nest of dirty clothes and sleeping there.\"\n\n\"Nests are for the birds.\"\n\nEdgar slapped his face. \"I walked into that didn't I.\"\n\n\"Just a bit.\" Madison smiled. \"Is everyone in your family so easy to talk to?\" she blurted, then wished she had not. She was sounding like a goober.\n\n\"Our family likes to talk,\" Ed replied. \"It's kind of a blessing, kind of a curse. Our folks were really big on education. Pissed 'em off when I didn't go to college. But family dinners were kind of like meetings of the debating society for as long as I could remember. You had to learn to think and talk at roughly the same speed, which didn't always work well for me. Heda's a lot better at it than me. Dad's the master of nonverbal communication . . . grunting, dirty looks, and that sort of thing. You'll understand soon enough.\"\n\nMadison paused. \"Huh?\"\n\n\"Parent day? Next week?\"\n\n\"Heda didn't mention that your parents are coming.\"\n\nEd grinned. \"I may have forgotten to mention it to her. And Mom was probably way too pissed to think of it the last time they talked.\"\n\n\"Crap,\" Madison yelped, her eyes shooting open. \"Next week is when the Council hears my case. Is Heda going to be able to make it?\"\n\n\"Heda has no intention of missing it, and Mom wouldn't let her anyway. Civic responsibility is another big thing for Mom.\" He looked around. \"Hey, back to the furniture thing, it sounded like the guys were going to an Aarons Rent-A-Center or something like that. I guess they're getting a washer and drier for the house. Why don't you go that route? Some of those places have a no payments and no interest for a year deal. You have any credit?\"\n\nMadison nodded. \"One card. I put my DJ expenses and stuff on it, but that's it.\"\n\n\"Excellent. Just means that you've got a credit history. C'mon,\" he added, moving out of the way so that the girl could ascend the stairs. \"I was going to look for something for Heda anyway. She likes nice, comfortable beds,\" he added knowingly.\n\n\"That's not the . . . seriously, if you really think that I'm going to buy a bed just because . . . okay, let's go.\"\n\n--------- ----------------\n\nThat evening . . .\n\n--------- ----------------\n\nSometimes Heda adored her older brother. She had gotten back from Albuquerque after a horrible trip where they had lost in five games. She was sore, disappointed in her performance, and had not been looking forward to packing and moving to the new place in the middle of the night. Her brother and roommates had done it all. Of course, they hadn't unpacked anything, but that was cool.\n\nShe had arrived at the new place to find that a party had already been thrown, albeit just for the new residents. Joanna was dancing to the tunes from a boom-box and was threatening to show off her chest, much to the delight of all. Carla and Anthony were making out on the stairwell, much to Heda's surprise. Paul and Edgar, who would be their guest for a while, were arm wrestling while Kevin could be located by a cloud of smoke outside the kitchen door. Sasha and Bill were curled up on a sofa that someone had managed to procure, watching the festivities and simply enjoying each other's presence. Heda waved to everyone and then ran upstairs to her room. Her brother had somehow gotten her a queen sized mattress but had left getting the base and headboards to her. Smart man. The bed did have clean sheets on it and, on top of the mattress, her own set of keys. She propped open one of the windows and looked out into the dark Southwestern sky. \n\n\"Nothing like it,\" she whispered to herself and the sky she loved to fly. Then she realized she had not seen Madison, so she headed back downstairs. 'Where the hell is the door to basement?' she wondered, embarrassed that she had forgotten. Then she grinned. Someone had put the Batman symbol on a door next to the kitchen. She knocked on the door, but could not hear any response over the noise. She opened the door. \"Madison?\"\n\n\"Down here!\" came a reply, followed by, \"as if that weren't blatantly obvious since that's where my voice is coming from.\"\n\nHeda chuckled as she trundled down the stairs and plunged into darkness once the door at the top closed. \"Hey, is there a light switch?\"\n\n\"You know, I didn't bother to look. Not exactly necessary for me.\" There was a moment of silence while Madison scanned the room. \"The switch is actually at the top of the stairs I think, 'cause I don't see one down here.\"\n\nHeda opened her mouth, then stopped, then said, \"You know, I was about to ask if you have a reading lamp, but that would be dumb too.\"\n\nMadison laughed. \"Just a bit.\"\n\nHeda put her hand on the stairs and walked back up, flicking the light switch and then coming back down. \"Nice!\"\n\n\"Is it? Joanna picked out the colors, since I have no idea what a 'color' is anyway.\"\n\nJoanna had gone with blacks and grays, which actually seemed to fit the whole \"bat cave\" motif. Her music players and gear were laid out along one wall on cheap but practical black track shelving. Near the closet was a small dresser, sans a mirror, and next to that was a mini-fridge. \n\n\"Sweet!\" \n\n\"I splurged,\" Madison said. \"I don't have any payments for a year, but I want to put in a little every month and then I'll pay them off completely with student loans in January. It wasn't as bad as I thought it would be.\"\n\n\"Nice bed,\" Heda said approvingly. It was a full size bed with a wrought-iron frame and a gauzy canopy hanging from a single spot on the ceiling. \n\n\"Is it? I've pretty much slept on dorm mattress or something like them pretty much forever. I took a nap on it earlier, so I guess it's okay.\" Actually, it had been the most wonderful thing ever, but she was not going to sound like a spaz. \n\n\"I'll bet. Hey, why aren't you up partying with the rest? Damn, I just noticed how quiet it was down here.\"\n\n\"Yeah, hence how I was able to nap. They've been at it since we got the keys. I don't think anyone unpacked yet.\"\n\n\"You could've waited.\"\n\n\"I'll go up in a bit, but --\"\n\n\"But what?\"\n\n\"It sounds stupid.\"\n\n\"What?\"\n\nMadison sighed. \"I figured once I was set, it would be real. You know? It's my space now. I'm actually here.\"\n\nHeda smiled, drawing Madison close and kissing her. \"You certainly are. I'm surprised you managed to get everything over so fast.\"\u2028\n\n\"I packed everything in advance. A lot of the vinyl is kinda hard to replace, so I needed to make sure it was done right.\"\n\n\"Have they gotten the sound system up yet?\"\n\n\"No, but they think they'll have it by next weekend. They got the priorities first. There's like eight televisions in this house, three of which are HD. Yippy skip,\" she muttered. \"They have two Xbox 360s linked together in one room, and a Playstation 3, a Wii, and a Nintendo 64 in another.\"\n\n\"An N64?\"\n\n\"It's Sasha's. She's addicted to Mario Cart.\" \n\nHeda laughed, then kissed Madison again. \"C'mon, let's go party. You don't have to get back to the station do you?\"\n\n\"No, I finished up early today. I think I might be able to tie in from here if I can get the station's permission. I could actually do a show from here.\"\n\n\"You are the single coolest chick ever,\" Heda replied, hauling the girl up the stairs.\n\nMadison could barely decide what to do with herself. She went from dancing with Joanna, Heda, Peter, and Sasha to talking music with Kevin while getting a friendly shoulder rub from Anthony. Carla was crashed on the couch with her head in Madison's lap, and Edgar and Billy were playing full contact Super Mario Kart. Apparently smacking your opponent on the back of the head to make them turn their animated little go-cart off the edge of a cliff was perfectly acceptable game etiquette. \n\nShifters were often a touchy-feely lot. Animals often used touch as a form of communication, and shifters kept that part of their animal selves. Madison had never had this. Sasha was human and Billy . . . well, Billy was a turtle. His totem animal tended to sit in a river and mind its own damn business. Madison was glad that the lights were dim, because she was so happy that she was on the verge of tears. \n\n\"Hey Madison,\" Kevin said, \"wanna participate in an experiment?\"\n\nMadison scanned the room and saw that Kevin was holding up a rolled object about the size of a cigarette.\n\n\"Kevin!\" Heda said, \"you do NOT need to get her involved in that shit.\"\n\nMadison scrunched her face. \"Hey, YOU did it. Why can't I try?\"\n\nHeda was about to object, but the girl was right. \"Are you sure?\"\n\nKevin raised his right hand as if making a pledge. \"I specially engineered this stuff to be mild and non-addictive. I would never give a newbie anything more serious.\"\n\nHeda looked at Madison and shrugged. \"It's up to you.\"\n\nMadison gingerly took the \"special\" joint. Experimentation WAS part of the college experience.\n\nAn hour later, even Heda had to admit that a stoned Madison was pretty damn funny. The bat shifter coughed a lot at first, then was absolutely convinced that there was nothing going on. Then she got giggly. \"Watching\" Billy and Peter play their video game was the absolute funniest thing that she'd ever seen. She commented several times that Joanna had the nicest boobs she'd ever scanned, then apparently needed to confess to Sasha that she thought the whole naughty librarian thing was the best idea that Billy had ever had. \n\nThis had lead to Sasha chasing Billy all over the house in faux rage while everyone EXCEPT Madison laughed. Madison was confused why Sasha was annoyed. Then the bat shifter got hungry, and wound up being driven by Heda to one of the twenty-four hour grocery stores so that she could load up on Gummi-Worms. When they got back to the house, she wanted to shift into a bat and hunt the ferocious edible annelids, but Heda managed to talk her out of it. Kevin was simply amazed that her ability to create high-definition three-dimensional sonar images was apparently unaffected, though her interpretation of those images was more . . . colorful. \n\n\"Okay, time for Madison to go to bed,\" Heda said at last. \"It's WAY past your bedtime.\"\u2028\n\n\"I'm a creature of the night,\" Madison said haughtily, pushing at Heda's shoulders, \"so you can't tell me . . . you have nice shoulders,\" she continued, her train of thought derailing as she ran her hands over those very shoulders. She turned to where Joanna had been. \"Doesn't she have great shoulders?\"\n\n\"Magnificent.\"\n\n\"Her shoulders are like your boobs. Magnificent,\" Madison said with a determined nod of the head. \"Hey!\"\n\nHeda had picked Madison up, slung her over her shoulder, and the proceeded to haul her cute butt back down to her bedroom. \"C'mon.\"\n\n\"Don't wanna --\" Madison grabbed the door frame in an attempt not to be carried down the stairs, but Heda was just a tad stronger than she was. \"Okay, I'll go,\" she said at last. ",
        "\"Glad you're being so agreeable.\"\n\n\"Heda,\" Madison said as she was placed on the bed.\n\n\"Yeah?\"\n\n\"This has been the best night of my life...\"\n\nHeda smiled. \"You really are stoned, aren't you?\"\n\n\"Nah, I mean it. The only thing that would make it better is if we could go flying. And sex. Okay, the two things that would make it better are flying and sex. Just not together. That would be kind awkward.\"\n\n\"Well no flying OR sex while you're baked. At least not with me.\" Heda smiled. \"And since we're going together, not with anyone else either.\"\n\n\"Going where?\" Madison asked, momentarily perplexed. She scanned and saw that Heda was looking serious. \"Oh!\" she said, sitting up. \"You mean it? I mean . . . dating?\"\n\nThe hope in Madison's voice was heartbreaking. \"Of course,\" Heda replied.\n\n\"Then stay!\"\n\n\u2028\"I said --\"\n\n\"No sex. Just . . . stay.\"\n\n\"Promise you won't try to take advantage of me?\"\n\n\"I don't think I could,\" Madison replied. \"I'm actually feelin' a little woozy.\"\n\nHeda kissed her now-official girlfriend and then helped her get undressed. Underwear stayed on, though Heda's g-string did not really count as \"coverage.\"\n\n\"Next time,\" Heda said, \"we're staying at my place.\"\n\n-------- --------------\n\nThe next day . . .\n\n-------- --------------\n\nIt was difficult not laugh at Madison's discomfort, but her companions managed. She held her stomach gingerly, which rebelled against her candy-related consumption from the night before. Madison was pretty sure that she should be apologizing for something but was not quite sure for what.\n\n\"Oh admit it,\" Heda said at last, \"you loved it.\"\n\nMadison tried vainly to suppress a grin. \"Stomach ache . . . bad,\" she replied, using her best cave-woman voice. \"You know, if there had been some responsible authority figure around last night, she SHOULD have tried harder to stop me --\"\n\n\"Oh no, no blaming me. You said that you wanted to try it. Now what did we learn about smoking anything that Kevin gives you?\"\n\nMadison sighed. \"Stomach ache . . . bad.\"\n\nEdgar ruffled Madison's hair. \"You two gonna be okay for a bit? All the paranormal investigators are getting called together for a brainstorming session and figure out what we're doing next.\"\n\n\"Yes brother dear,\" Heda replied with a sarcastic taint to her voice, \"somehow we poor defenseless girls will just have to struggle on through --\"\n\n\"Oh put it in your pipe and smoke it,\" Edgar replied. \"I just don't want to have to answer to Mom when you get kidnapped.\" His face fell. \"Seriously, keep your eyes open. This guy is just getting started.\" He hugged his sister and then his sister's girlfriend before making his way to the Council chambers. \n\n\"Hey, can we stop by the medical center for a sec?\"\n\n\"Sure,\" Heda said. \"Want to get something for your gummi-worm hangover?\"\n\nMadison stuck out her tongue. \"No. Well maybe. Think they might have any Tums?\"\n\nThey stepped in the front door and Madison looked around, spying her target at the front desk. \"Hey Detrius.\"\n\nThe tall, bald, handsome young man manning the counter looked at her with puzzled eyes and then recognition dawned on him. \"Madison, right? How are the ribs?\"\n\n\"Straining around a tummy that ate too much candy.\"\n\nHe gave her a slight smile. \"I think that suicide by sugar intake might be better handled by the therapists.\"\n\n\"It was more of an accidental OD than a premeditated act.\" Madison looked around. \"Hey, about the other day when you found . . . you know.\"\n\nHis face grew dark. \"I don't want to talk about it.\"\n\nMadison backed up and put her hands in the air. \"I understand. I won't push you. But if you do want to talk about it, I'm available. Finding someone like that is kind of hard to wrap your head around.\"\n\n\"That's right. You found that first girl, didn't you?\"\n\nMadison nodded. \"Yeah. I went through the shock thing too. So again, if you decide that you WANT to talk, I'll be around. Call the radio station, since they'll usually know how to get a hold of me.\" \n\nHe went back to his shy smile. \"Thanks. If I need to, I'll call.\"\n\nWhen they got back outside, Heda kissed her girlfriend. \"You really are something.\"\n\n\"I know, I know.\" Madison blushed a little. She was in public, getting kissed by the most amazing girl on campus. She hated that this was all taking place in the shadow of tragedy, because it was the only thing keeping her from dancing in the streets. She stopped. \"You know I just realized something.\"\n\n\"What?\"\n\n\"Alvin hasn't bugged me at all since your brother told him off. I think this is the longest break that I've had from him in like a year and a half.\"\n\n\"Maybe he finally got the point.\" She sighed. \"But it's more likely that he's up to something, or trying to find a way around Reichert's threat. Hey, I know. I'll have Ed follow him. I'm sure I can guilt him into it.\"\n\n\"You think that's a good idea?\"\n\n\"Best defense is a good offense.\"\n\n\"I really don't get sports analogies.\" \n\n\"Speaking of sports, first home game is Thursday. You going to come?\"\n\n\"I've got to be in the studio,\" Madison grumbled. \"I just want them to catch this son of a bitch. He's got us all hostage.\"\n\n\"They'll get him,\" Heda whispered, taking a nervous look around. \"They've got to. Hey, why don't we go out tonight after your shift? Late night restaurant, just the two of us?\"\n\n\"It's a date,\" Madison replied, biting her bottom lip and waiting for the kiss she figure would be coming. She felt warm lips against her own, and relished that moment of comfort.\n\n----------- -----------\n\nThat night . . .\n\n----------- -----------\n\nMadison stumbled back into the house later than she had anticipated. The stupid station manager decided that, in light of the recent tragedy, that students be allowed to call into the show and express their feelings. Madison just wanted to play music, not be a therapist, political pundit and/or bartender. Maybe she should ask Heda to talk to Reichert about --\n\n\"Or you can grow a spine and go talk to him yourself,\" Madison muttered, standing on the front porch and willing herself to go in. She doubted Heda would want to try to start a date at --\n\n\"Talk to who?\" Billy asked. \"Besides yourself.\" Billy sounded as tired as Madison felt, as he was also not used to that much interaction with the public. Sure they took requests sometimes, but the recent kidnappings had everyone on edge, making their opinions louder, more passionate, and often dumber.\n\n\"I may need to go talk to Reichert about calming our ass-hat boss down about letting people call in. And I don't want to. Because I hate him.\"\n\n\"And great is the wrath of the bat girl,\" Billy said, opening the door and shoving her through.\n\n\"Damn straight.\"\n\n\"Hey guys,\" Edgar said from his position on the couch. \"Madison, got a minute? Don't worry, I won't keep you and Heda from your thing.\"\u2028\n\n\"She still wants to go?\"\n\n\"It's Heda. If she says she'll do it, she'll do it. Then she'll get two hours of sleep and still ace everything.\"\n\n\"Damn her,\" Madison said, her mouth curling up at the edges.\n\n\"That's what I always say, but people call me jealous.\"\n\n\"Who's to say I'm not?\" She waited for Billy to trundle off toward the sound of Sasha's snoring. \"So what's up?\"\n\nEdgar leaned forward, and a quick scan told Madison that he looked perplexed. \"This afternoon, a lot of the investigators and security folk were talking, trying to see if we could figure out something about this guy we're all hunting. One thing we do is check to see if there's been anyone known to be skulking on campus, old stalking cases, or anything else weird.\"\n\n\"Makes sense.\"\n\n\"Yeah, but the part that doesn't make sense is why someone would hire a two-bit snooper out of Albuquerque to look into you.\"\n\n\"What?!\" Madison yelped, her heart in her throat. \"Me? Why?\"\n\n\"I'm not sure. Campus cops picked him up apparently. Decided he didn't have a good enough reason to be on campus . . . I forget what bullshit excuse he gave. But a sorcerer on the campus force was able to delve into his head without being noticed and apparently got your name. He didn't sense any hostility or threat from the guy and really couldn't explain to anyone how he got your name, so he didn't press it. Guy never showed up again. Any reason that you can think of why someone would be looking after you?\"\n\n\"No. I mean, I've tried flying under everybody's radar. When was this?\"\n\n\"A year or so ago. Maybe a bit longer. Ring any bells?\"\n\n\"No. Nothing.\"\n\n\"I want you to be careful. I don't know if it has anything to do with the current case --\"\n\n\"You think he was scoping out his victims well in advance? You think I'm targeted? Who was this guy following me and --\"\n\n\"Shh,\" Edgar said, hugging the frantic young woman. \"It may wind up being nothing. We're looking for the guy down in Albuquerque as a person of interest. Just be really watchful the next time you --\"\n\n\"I'm never leaving the house,\" she said, then stopped to scan her surroundings. \n\n\"Ed!\" came a voice from the stairs, \"You just out and told her didn't you?\" Heda moved forward to glare at her brother. \n\n\"She deserves to know.\"\n\n\"Couldn't you at least have waited until they found that guy and got him to talk --\"\n\n\"And how long would you propose that we wait before --\"\n\n\"Hey, I'm still here!\" Madison snipped. \"And I'm pretty sure that no one seems to be asking my opinions on any of this.\" Now she was freaked and angry, a bad combination. \"I just want to go to school and graduate and now maybe date along the way, but now the two of YOU are making decisions about MY life?\" She threw her hands up and then stormed toward the basement door. She felt silly about the whole thing, seeing as no one had really done anything more than casually annoying, but she needed to make a scene. It gave her some feel of control to be the one throwing a fit.\n\nUnfortunately she did not get very far. Heda rushed up and picked her up off the ground and carried her kicking (but thankfully not screaming) out onto the porch.\n\n\"What are you . . . doing?!\" Madison hissed and grunted. She sneered. \"Can't you see that I was trying to make an exit?\"\n\n\"Yeah, but our date is that way and your scene was going in the wrong ass direction.\"\n\n\"But, stalkers . . . me!\"\n\nHeda laughed. \"This is why I'm the English major and you're not. Better with words.\"\n\nMadison stopped her babbling long enough to look annoyed. \"Hey, I'm on the radio. I talk for a living. I just happen to be a bit jumpy after finding out that I may have been targeted for death by --\"\n\n\"There is no evidence that this private investigator and the kidnapper are even vaguely related. Ed said that a bunch of investigations have taken place on campus involving lots of people for lots of reasons. You can't lose your cool or too much sleep over this when it could be nothing.\"\n\n\"Don't say that. Sasha is always saying that one of the quickest ways to die in a horror movie is to say, 'it could be nothing.' And that's the kind of vibe I'm feeling here.\"\n\n\"Madison, you're going to be fine.\"\n\n\"No! That's one of the other things you say in horror movies that gets you killed.\" Madison pondered the notion. \"Also, don't say, 'It was just the wind,' 'you crazy kids,' or 'I don't seem to get cell phone coverage out here.' All those are bad too.\" \n\n\"Sasha needs to stop watching so many horror films.\"\n\n\"She finds them cathartic. Which kind of scares me.\" Madison scanned as far as she could. \"Are you sure you still want to go out?\"\n\n\"Yeah, I really do. How about IHOP?\"\n\n\"Mmh, pancakes,\" Madison practically drooled. \"I guess we can risk a little drive.\"\n\nAn hour and a half later, the two of them hauled themselves back into the house after way too much breakfasty goodness at an ungodly hour. \n\n\"You are a bad influence,\" Madison said, her stomach feeling a tad too full. \n\n\"Yeah, blame me. We so need to go flying to work this off.\"\n\n\"I'm too full to shift,\" Madison replied. \"My bat self would explode. I'd be dropping guano all over the damn place.\"\n\n\"Okay, that is WAY too much information,\" Heda said. Then she grinned and kissed Madison's neck. \"There are other ways of working off some excess calories.\"\n\nMadison was breathing a little faster with each touch of lips to skin, and Heda was apparently not going to stop until she had covered the bat-shifter's entire neck. \"Your place?\" Of course the only difference between Madison's place and Heda's place was three flights of stairs, but who was to quibble?\n\n\"My place.\" \n\nThe two girls quickly and quietly hurried up to the second floor and then on to the attic. Somehow Heda had gotten her room into a semblance of order, though she was still waiting on her foot and headboards. \n\n\"Now you'll see what a real mattress feels like,\" Heda whispered. \n\n\"Honestly not thinking about the mattress,\" Madison replied.\n\nHeda set her friend on the mattress and then opened up some of the windows. \"Just letting some air and moonlight in.\"\n\nMadison didn't quite get the point behind mood lighting, but if it made Heda happy, she would go for it. Then the eagle shifter went quiet, causing Madison to scan outward to find that her girlfriend was indeed undressing. The cool thing about her sonar was that she could stare without looking like she was staring. Then Heda settled onto the bed, sitting behind her partner and brushing that long hair aside so she could kiss that flawless neck again.\n\nAfter her skin shivered with promised delight, Madison asked, \"Was it like this for you? The first couple of times?\"\n\n\"Like what?\"\n\n\"Like the most amazing thing ever?\"\n\n\"It was good,\" Heda replied, running her hands around Madison's body and stroking her breasts through her shirt, \"but not this good.\" She started undressing Madison, slowly taking in each bit of skin as it came into view. She loved peeling off the tights that the girl always wore, but that damn bra and pantie set . . . those had to go. Cotton underwear with pictures of cartoon characters really just did not do it for her, and she said as much.\n\n\"It's comfortable,\" Madison grumbled. She was certain that someone had told her it was all the rage. Of course, that could have been in sixth grade. She was not good at keeping up with that sort of thing.\n\n\"It's in my way.\" Heda quickly removed the offending garments, bra first and then putting Madison on her back so that the panties could go. \"Much better.\" She crawled back onto the bed, laying on top of her woman, her fingers intimately entwined with those of her partners, arms outstretched in a crucifix position. The flesh of a fighter and poet was pressed hard against the softer skin of the runner and mistress of music. \n\nAnd then Madison said something to Heda that, along with the Voice that had so captured her attention, made Heda's blood fly through her body like a warm wind. \n\n\"Make love to me.\"\n\nHeda smiled. By all the skies above, she loved that Voice, and heaven forbid she deny its request in this case. She tightened her muscles, letting them slid under her skin and stimulate Madison's body. She pressed her mouth to her lover's and let her tongue slide across the plain of the mouths. She coaxed Madison's tongue into action, performing that nimble little dance that they were both becoming accustomed to. It was tantalizing, fun, and just the beginning.\n\nMadison gasped, both due to lack of oxygen and pure pleasure. Heda's breasts were rubbing against her own, a hard caress that was much more stimulating that she might have thought. Her sex was inches from Heda's but she could sense her lover's heat. Then a cool breeze blew through the open window and nipples hardened just a little bit more.\n\nShe managed to roll so that it was Heda on her back this time. Hands still entwined, she kissed Heda's lips, then the slope of her neck, then her shoulders, and finally onto Heda's breasts. She licked making that soft skin wet with her tongue, teasing those nipples to their utmost attention, and taking them into the warmth of her mouth. And Heda seemed please, pushing her tits against Madison's mouth. \n\n\"You know, this is your first real time on top,\" Heda said with pride.\n\nMadison smiled. \"I just really wanted to --\"\n\n\"It's okay,\" Heda assured her. \"It just means that you get to run the show this time.\"\n\nMadison nodded, wondering what she was supposed to do. She settled on something that she had been planning on doing anyway. Her mouth left the breast area and moved south, causing her to finally release Heda's hands as she approached the Promised Land. Before, this had been a shared activity and a teaching experience. Madison wanted to show what she had learned.\n\nMadison let her tongue do the exploring at first, circling its intended target before slipping into the cleft. She put her thumbs on the outer labia and massaged them and licked Heda all the way into her candy center. \n\nHeda was proud of her friend's progress. Oh so deliciously, orgasmically proud. She could not see what was going on at all, as Madison's long hair had fallen in the way, but she could sure as hell feel it. She gyrated her hips a bit, pushing against her lover's face, but Madison settled Heda's hips with both hands. Heda grinned. The other girl wanted to get Heda off all by herself.\n\nBack in control, Madison got to the business at hand, namely making Heda climax. She did not have a lot of tricks yet, but she would improvise. What had she heard once? Something about tracing out the alphabet with her tongue? Why not?\n\nHeda was not sure what her lover was doing, but it certainly seemed to be working. Of course, Madison doing anything down there with her tongue was going to give her a serious case of the happy-feelings. She played lightly with her own breasts as Madison's tongue gave her a good thrashing. By the time it was unleashed on Heda's clit, the girl was more than ready to let go. She grabbed Madison's head and held it in place, her muscles twitching a bit as she exorcised her climax from her body directly onto Madison's face. \n\n\"Couldn't . . . breathe,\" Madison said huskily. \n\nHeda's heart skipped a beat. The Voice had returned. \"Say something else,\" she whispered.\n\n\"You are so sexy when you cum,\" Madison murmured, her voice finding levels of sultry that most people did not know existed. She licked Heda again, but let her hands drift down the girls legs and caress the soft skin on the back of Heda's knees. Heda moaned and her whole body writhed under the pleasure, making Madison smile. After their first time, she knew exactly how sensitive that area was on her lover during acts of passion. Normally they were just ticklish, but in moments like these, they could be used to rock Heda's world.\n\nHeda wanted to object, seeing as Madison should have a chance to get off, but she really did not have much control over her body at the moment. Besides, Madison seemed so enthusiastic about trying new things, so who was Heda to discourage her. Heda's whole body was alight with sensation. Her sex was still incredibly sensitive, and she had to push Madison's head away a couple of times just because that tongue against Heda's clit was turning out to be too much. \n\nMadison took the hint and scaled back her efforts, spending more time caressing Heda's legs and letting her tongue sweep across the less sensitive (but still delicious) mound of Heda's sex. Her lover had worked up a good sweat already, and her muscled abdomen glistened as her muscles strained under her skin. Then Madison pulled back, lifting one of Heda's legs so that she could kiss that area behind the knee and let her fingers explore her lover's sex instead.\n\nHeda groaned and whimpered with a deep-seated pleasure as she approached climax again.\n\n\"Pleasepleasepleaseplease, right there,\" Heda gasped. Her rock-hard clit got one last moment of attention, pushing her well over the edge into a pool of bliss. She clung tenaciously to the bedspread with her fingers as the pleasure again swept through her, and she rode it for as long as she could. Her body would be quite content to just lay there for a while, but it became clear that Madison was going to start up again. So Heda forced her body into action, pulling herself out from under her girlfriend. ",
        "\"What --\" \n\nHeda flipped Madison onto her back and straddled her stomach. \"The student,\" she muttered, \"is not ready to show up the teacher. Don't move. And no peeking.\"\n\nMadison felt Heda get off the bed, and it was hard to resist scanning the room to see what was going on. She heard the noise of boxes being rearranged. \"Really, is this the time for unpacking?\" she asked throatily. She wanted to play.\n\n\"Ah ha!\" Heda exclaimed. She grabbed her target, then headed back to the bed. \"Put your hands under your butt,\" she said.\n\n\"Hunh?\"\n\n\"Put your hands . . . under your butt,\" Heda reiterated, \"or we can call it a night.\" She watched Madison's hands move with speed of a cheetah to the requested location. She got back on the bed and straddled her girlfriend's hips, pinning the girl's arms under her body. \n\nMadison felt something pressed against her mound, then heard a click. The initial vibrations kicked in instantly, but were low and not at all unpleasant. It was enough of a surprise that she let out a squeak. \"Cheating!\" she said, trying to cover her less than macho outburst. \n\n\"Instructing,\" Heda corrected her. She rubbed the tip of her curved vibrating dildo up and down the entrance to Madison's sex.\n\n\"I've used a vibrator before,\" Madison groaned, attempted to push her hips against the toy. But Heda had assumed complete control of the situation. She pulled the toy away for a moment until Madison settled down, then returned to her vibrating caress.  \n\n\"I know. You almost announced it on the radio, remember?\" Heda grinned as Madison blushed bright red. Technically, she had just admitted to having a \"healthy libido,\" but Sasha had later filled her in on the rest of the conversation later. Apparently Madison had worn out the batteries on her own vibrator. \n\n\"Never speak of that again.\"\n\n\"Oh no, I have every intention of bring that up at random intervals, and possibly at parties.\"\n\n\"You wouldn't SQUEAK!\" Madison had been caught off guard when the vibrator got kicked up a notch. Now her clit was getting a little attention too, and it was driving her out of her mind. Heda's free hand found its way to Madison soft breasts, it got really unfair. \n\n\"I didn't know bats squeaked,\" Heda teased. She pushed the vibrator into the cleft and then tugged gently on the nub. She wanted another squeak, but Madison was biting her bottom lip to prevent it from coming out. \"I've heard of screamers and squealers, but never a squeaker. It's adorable.\"\n\nMadison tried to glare, but it was hard when she were getting hornier by the second. She would not squeak again! Dammit! But it felt so good! She had vastly underutilized her breasts during her self-service sexual adventures. Heda was not apparently going to make any such mistake. \n\nHeda started to penetrate Madison with long, leisurely strokes, looking for the tell-tale signs of having one's g-spot run to appear on Madison's face. That's what this toy had been built to find, and it was why Heda had shelled out extra money for it.  \n\n\"You know what I want,\" Heda said. It was not a question, but rather a statement of desire. \"Tell me what you want me to do.\"\n\nMadison nodded. \"Don't stop,\" she moaned, her voice a heady mix of sugar and spice. \"Make me cum like I made you.\"\n\n\"Oh, I'm gonna do a lot more than that,\" Heda promised. \"Can't have you showing me up now can we?\"\n\nMadison really could not wrap her head around giving more to this woman that had been given. Just a kiss on the neck was semi-orgasmic, but this was WAY beyond that. She had never seen herself as that much of a toy girl, but -- \"Squeak! Dammit dammit dammit dammit Oh!\" Oh orgasm, sweet orgasm!\n\nHeda was trying so hard not to laugh, but listening to Madison during sex was far more fun than anything should be. Like in her radio booth, it was a place where she could let her hair down and let go of some of her inhibitions. She was very young and naive in so many ways, but her body was all grown up. In certain ways, she was too grown up. Being discriminated against and harassed . . . that made your soul grow up a little too fast.\n\nShe rode her captive for twenty minutes, bringing her close to climax but then pulling back. She elicited every squeak, moan, and \"ah ah\" noise that she could. Madison had made so many noises that by the time she came, she had run out of things to say. She opened her mouth in an \"O\" shape, and gave silent tribute to pleasure in its purest form.\n\n\"That,\" Heda said in a voice filled was promise, \"was number one.\"\n\n\"One?\" Madison gasped.\n\n\"One.\"\n\nFor Two, Heda put the device against her own mound and then slid between Madison's legs. The bat shifter found this to be awkward at first, especially since her hands were still trapped under her ass. But she did not think that she would enjoy being taken in such a male way, but the fact that the tool was vibrating, along with some of Heda's kisses, reminded Madison that her lover was still very much a woman. Because of her initial nervousness, it took longer for her to achieve release, but the experience itself was every bit as genuine.\n\nThen Heda let Madison retrieve her hands before laying down beside her. The two pressed tightly against one another, passing the toy back and forth, mingling their juices. This time their was no rush, but rather just a desire to be so close that they were almost sharing skin. Hands went where they wanted, lips often followed, and time passed much more slowly. Number Three for Madison was in no hurry to arrive, but when it did, it made a statement.\n\n\"Squeak!\" Before Heda could say anything, Madison put a finger on the girl's lips. \"Not a word.\"\n\nHeda was fine with that. She was not much up for talking anyway.\n\nOutside, Kevin and Peter were sitting with their backs to the wall surrounding their parking area. Kevin was smoking one of his own creations while Peter was throwing back a long, cold local brew. Both were grinning.\n\n\"Think we should tell them that Madison's voice kinda carries?\" Kevin asked, looking up at the open window.\n\nPeter's only response was a grin.\n\n---------- -------------------\n\nElsewhere . . . \n\n---------- -------------------\n\n They had finally heard the message. That pleased the Cold, but not enough to thaw Its heart. They were afraid now. But would they listen. Not just hear the message, but truly listen. They had begun their attempts to insulate themselves against It, but the Cold could seep through any crack and chill any blood. It already knew how to find its way to any number of Them . . . the rest of Its Messengers. No one could keep It out. It would be feared. It would be felt. It would be heard. For now, the Cold would wait and see if the One had heard.\n\n------------ ------------------\n\nThe next week . . . \n\n------------ ------------------\n\nMadison was sitting between Ed and Heda, acting as a referee. She had come up with them to pick up their parents at the airport in Denver. Heda had not been informed until that morning that her parents would be attending Parent Day at Four Corners University. Actually, it was more than a day, being an opportunity for the FCU hierarchy to wine and dine the parents and alumni into donating more money to the university. To most of the staff, Jessica Adler was just another potential donor, though not quite as wealthy as her architect husband. To the FCU Shifter Council and related staff, she was a legend. \n\n\"There are no words to describe how I'm going to get back at you for this,\" Heda growled, a variation on the vague threats she had been leveling against her brother for the last several hours. \n\n\"I really meant to --\"\n\n\"No . . . words,\" Heda repeated. \n\n\"There they are,\" Ed said, pointing across the field of luggage carousels. He had legitimately meant to tell Heda a few days in advance, but he had gotten caught up in his own research. He could probably make a living on nothing but investigating the goings-on of FCU.\n\n\"Well, isn't this nice,\" Madison said. She was nervous as hell, though neither of her compatriots had noticed. Heda was her first girlfriend ever, and she was about to meet the woman's parents, including a war hero.\n\n\"Mom! Dad!\" Ed said at the exact same time Heda was saying \"Dad! Mom!\"\n\n\"Hey kids,\" Thomas Adler said warmly, shaking his son's hand and then giving his daughter a big hug. He may have been human, but the fifty-year-old man was still an imposing figure at six-foot-two and the body of a man who took care of himself. His wife was . . . well, Jessica Adler was simply stunning. She stood eye-to-eye with her six-foot tall daughter, and looked every bit as athletic. The resemblance was kind of scary, but boded well for Heda. If the elder Adler woman looked this good in her late forties, then Heda had nothing to worry about.\n\nOnce Thomas Adler had gotten his hugs in, Jessica stepped forward to hug her son. \"I'm assuming you've been up to no good,\" she said.\n\n\"Nice to see you too. And you ASKED me to come here, remember?\"\n\n\"True.\" She turned to her daughter. \"Heda,\" she said, her voice almost growly but still affectionate.\n\n\"What?\"\n\n\"Have you been staying out of trouble?\"\n\nHeda looked thoughtful. \"Let's see, I beat up a couple of homeless people out front, then danced around the airport singing 'bomb bomb bomb.' I think that's it. C'mon Mom, I can occasionally do something as mundane as help pick my parents up at the airport without getting starting a fight.\"\n\n\"For the sake of all passengers and TSA security, I am grateful,\" Jessica said, finally cracking a smile and hugging her daughter.\n\n\"Mom, this is Madison.\"\n\nMadison's echolocation was not on, so she tentatively extended her hand in the direction of the voices. \"It's a pleasure to meet you.\"\n\n\"So you're the one who's got Heda all in a tizzy,\" Jessica replied. \n\n\"Mom!\" Heda interjected.\n\n\"Never mind them,\" Thomas said, stepping up to give Madison a handshake and a friendly hug. \"My name is Thomas.\"\n\n\"I hope so, because otherwise I'm being accosted by a strange man in an airport.\"\n\n\"Actually, both would be correct,\" Jessica added dryly. She shook Madison's hand firmly but not uncomfortably. \"Pleasure to meet you. What's with the glasses? I thought --\"\n\nMadison turned and slapped Heda in the arm. \"Is there anyone you haven't told?!\"\n\n\"What? They were going to find out when they met you anyway.\"\n\n\"It's all right,\" Jessica said. \"Your secret is between you and the world, and it is not mine to share. I understand the value of keeping some things for yourself. Okay Heda,\" she said, \"let's go see this little commune that you started up.\"\n\n\"Why are you assuming it was all my idea?\"\n\n\"Precedent.\"\n\n\"Hey!\" Heda looked at her brother. It was someone else's turn to be criticized. \"Ed didn't even tell me you guys were coming until this morning.\"\n\n\"Traitor,\" he growled.\n\n\"Edgar Elias Adler, you were supposed to tell her a week ago and --\"\n\nThomas took Madison by the arm like a gentleman would and led her away from the fray. \"They're just getting started, so why don't we go get the bags.\"\n\n\"So their face-to-face conversations are like their phone conversations?\"\n\n\"With three-way calling.\" They stopped. \"You can tell what's going on without turning around, right?\"\n\nMadison grinned a little. She scanned outward and then, \"Ed keeps trying to walk over here it seems, but either Heda or your wife keep dragging him back.\"\n\n\"Ed could have escaped all this if he had just told Heda earlier. He knows the rules of the ongoing Adler Women's Debate. Fuel the fire, tend the flame.\"\n\n\"Do you fuel the fire?\"\n\n\"I'm married to one and am father to the other. The best I can hope for is to keep the whole thing from burning the neighborhood down.\"\n\n\"I thought they liked each other.\"\n\n\"Oh they do. It's just they're both stubborn, opinionated, and love to argue. Jessica's only problem is she raised Heda to be better with words than she is, and my wife is no slouch.\"\n\n\"I heard about the dictionary. And the 'assess' debate.\"\n\n\"To be fair, Jessica had been on her feet for almost twenty hours when she made that last snafu.\"\n\nBy the time Heda, her brother, and her mother had gotten their feet moving again, the bags had already arrived. Madison had found the patriarch of the Adler family to be a very mellow, quietly funny man. She wondered what it would have been like having someone like him in her own life all those years. \n\n\"I would like to apologize for keeping you waiting,\" Jessica said, obviously still vexed about something. \"We aren't usually like this.\" She glared at her husband when a snicker turned into an unexpected coughing fit.\n\n\"It's okay. Your husband was a complete gentleman.\"\n\n\"Maybe he IS ill,\" she muttered, then kissed the man on the cheek. \"Get the bags dear. We mustn't dawdle.\" Jessica Adler picked up a suitcase that looked bigger than Madison's old dorm room and walked off, leaving her husband temporarily speechless.\n\n--------- ---------------------\n\nThree hours later . . . \n\n--------- ---------------------\n\nJessica Adler had an iced tea in hand as she regaled all of Heda's housemates with the story of how she and some highly talented cat-shifters tried to deal with a renegade druid.\n\n\"Honestly, hundreds of thousands of years of evolution can be such an annoyance. The entire time, the bird in me was screaming that there were felines behind me and that I should turn and peck their eyes out. Anyway, this poor sod has decided that the best way to evade being chased by a bird-shifter and three cat-shifters was to climb a tree.\" She waited for the laughs to die down. \n\n\"Anyway, it turned out that Mister 'I'm a big-shot druid' didn't realize he was in a dryad tree, and she had just woken up thanks to all the noise. She doesn't know who the bad guy is, so she just starts threatening to pound the heck out of everyone . . . keep in mind that this dryad is living in a fifty foot redwood. Anyway, when the dryad isn't looking, one of the cats looks up and says, 'Hey, should he be smoking up there?' Dryad screams, then her tree grabs the druid and just starts pummeling him against the ground. It looked like a cartoon, I swear.\"\n\nHeda just rolled her eyes while her friends laughed. For all of her mother's claims that she did not like to grandstand, she certainly loved to spin a good yarn. Of course, these same stories had delighted her and her brothers their entire lives. \n\nThen her mother sniffed the air. \"Something smells good,\" she muttered, then wandered towards the kitchen. Both of her children moved to intercede, and this time her husband joined them.\n\n\"Dear,\" Thomas said, \"this is not your home.\"\n\n\"Or your restaurant,\" Ed added.\n\n\"Or that nice Italian place where you always want to go back into the kitchen to make a few suggestions. You know, the one with your picture next to the door that won't let you in unless Dad promises that you'll behave?\" Heda put her hand up in a stopping motion. \"This is a college kitchen, and it's as much Carla's as anyone else's. She's been through a lot, and doesn't need you taking her space away.\"\n\n\"It's okay,\" came Carla's voice from the kitchen. \"I'm just baking cookies.\"\n\n\"Sure, it starts with just cookies, and then it's 'Let's make a bizarre Lithuanian pastry' and then before you know it --\" Heda started.\n\nEd finished. \"-- BOOM! You're back there making sauteed pork loin with a wild mushroom, sage, and white whine sauce on a bed of tender asparagus.\"\n\nThe other housemates looked at him. \"You just made that up,\" Anthony said.\n\n\"No, she actually did that one,\" Thomas said.\n\nCarla stomped out into the living area. \"Okay, everyone of you wants to talk to Jessica Adler the war hero, but I want to talk to Jessica Adler, five-star chef and favorite guest of Iron Chef America. So back off!\"\n\nJessica looked at each of her family members smugly.\n\n\"She asked for it,\" Heda muttered.\n\nEdgar got a phone call and took into the other room while everyone else wandered in and out of the kitchen to retrieve baked goods and other snacks. When Ed returned, he looked somewhat perplexed.\n\n\"Gotta go,\" he said. \"We found that guy down in Albuquerque, but he's on a job so he can't come up here to talk. He found out we were looking for him and called up.\"\n\n\"That doesn't really sound like a suspect,\" Madison said, holding her arms and shivering a little.\n\n\"No, no it doesn't. As a matter of fact, he sounded really reasonable. I did ask him about the case, but he didn't want to talk long over the phone. He actually sounded pretty on the ball. Anyway, I need to get down there, but I shouldn't be gone more than a night. I'll be back in town for the hearing.\"\n\n\"What hearing?\" Thomas Adler asked.\n\n\"Madison's complaint against Alvin Hannity,\" Heda replied somberly. \"The Council is meeting tomorrow at four.\"\n\nMadison snorted. \"Fat lot of good it'll do. Alvin already has his alibi bought and paid for.\"\n\n\"I want to go,\" Jessica shouted from the kitchen over the sound of a mixer.\n\n'When did we get a mixer?' Heda thought. \"Why?\"\n\nJessica appeared in the door. \"Because I believe you when you say that you saw what you saw in the woods,\" she said seriously. \"You may not exactly be a delicate flower in the way you handle people,\" she added dryly, \"but I know you. My daughter is no liar, and I want them to know I'm there if they're going to make any accusations to that affect.\"\n\nHeda tried hard to suppress the warm flush of pride she felt when her mother was done speaking. \"Mom, they're not going to accuse me of lying. They're just going to say that it could have been another bat-shifter who just so happens to have a group of friends made up of exactly those animals.\"\n\n\"I'm the one they're going to accuse of lying,\" Madison grumbled. \n\n---------- ----------------------\n\nThe next afternoon . . .\n\n---------- ----------------------\n\n\"She's a liar!\" Alvin shouted, standing despite being told by the presiding Head of the Council to \"sit the hell down and shut the hell up.\"\n\n\"Mr. Hannity, please!\" Councilman Derek Zine said for the tenth time. \"You were given your chance to speak, now give Miss Sloan the same courtesy.\" He looked at the other chair. \"Now Miss Sloan, what proof do you have to your accusations.\"\n\nMadison was trying not to shake when she stood up. \"Heda Adler saw the attack in the woods. She can confirm the types of shifters that were chasing me and the kind that actually made contact, though that's the extent of it.\"\n\n\"Miss Adler?\" Zine said, a respective glance towards Jessica Adler as well.\n\nHeda stood up. \"Yes sir. I saw several bats, about four or so, a Harris Hawk, an American Kestrel . . . actually those were just the ones I could positively identify and knew were shifters. I saw a couple more things flapping around, but never got a good look at them. I broke up the pursuit and then followed Madison back to her landing spot. Until then, I wasn't even sure it was her.\"\n\n\"And can you identify those shifters in their animal states?\"\n\nHeda sighed angrily. \"No sir. I only saw them the one time, so I wouldn't be sure. Species yes, but not individual identification.\"\n\n\"Thank you for your honesty,\" the Councilman replied. \"And what of this accused attack outside her dorm?\"\n\nShe gritted her teeth. \"No sir. I only saw the aftereffects, not the attack itself.\" She sat down, and her mother patted her on the leg.\n\n\"You did the right thing,\" Jessica said. \"You told the truth.\"\n\nHeda had so badly wanted to lie and put Alvin in the worst light, but that just was not how her mother raised her.\n\n\"Sir?\" came a voice from the gallery.\n\n\"I'm sorry, but this is --\"\n\n\"I have information that might be relevant.\"\n\nMadison scanned, thankful for the protection of her glasses. But the voice sounded familiar. \"Detrius?\"\n\n\"Yes ma'am. I was working at the medical center the night that Miss Sloan came in, and I could testify to the nature of her injuries. You could decide for yourself if it is consistent with her side of the story.\"",
        "\"I'll . . . oh now what?\" the Councilman said as some doors outside of the Council chambers slammed and the interior doors opened.\n\nA man and a woman strode into the room with a definite air of authority. Everything from the custom Italian business suits to the embroidered handkerchiefs to the loafers that cost a semester's tuition just to have shined, these two screamed Power Couple with capital letters. He was build like the quintessential college football quarterback, with a few streaks of silver in his otherwise dark hair, but it just added to his allure. \n\nThe woman was beautiful to be sure, though she had this look that would have sent Cruella DeVil scurrying for cover. She was lean as a snake, and her rich brown hair flowed halfway down her back. Her adornment was subtle but screamed of wealth and class at the same time. But what Heda noticed first, oddly enough, was the woman's mouth. She had full lips that might normally be kissable, but that mouth was stuck in a borderline sneer, and that looked to be its normal state.\n\n\"Mr. Hannity?\" the Councilman said.\n\n\"Dad?\" Alvin let out with a yelp.\n\n\"Shit!\" was Heda's contribution.\n\n---------- -------------------\n\nTo be continued . . ."
    ],
    "authorname": "Evil Alpaca",
    "tags": [
        "lesbian",
        "lycanthropes",
        "shifters",
        "magic"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/flying-blind-ch-03"
}