{
    "title": "Sarah",
    "pages": [
        "This is an edited version of \"Sarah\" -- rewritten to correct some errors picked up by several kind readers. It is a work of fiction in my slowly developing plan to write at least one story in each Literotica category. All of the characters are aged 18 year or older. As usual I would welcome any ratings, feedback or comments whether public or private via email. I always reply to emailed comments and criticisms. Thank you for reading.\n\n*\n\nKristin paced up and down the room as Jason lay back languidly on the bed watching her.\n\n\"She's not coming!\" Kristin declared.\n\n\"Don't worry,\" reassured Jason. \"She'll be here. Probably just having trouble parking.\"\n\n\"I doubt it, she's already 15 minutes late!\" complained Kristin. \"I reckon she's bailed on us. I knew she was too good to be true.\" She wrung her hands in frustration as she stalked up and down.\n\n\"Give her a chance,\" reasoned Jason.\n\n\"Nope, I knew she wouldn't go through with it. She was just too nervous when we met face to face.\"\n\n\"Of course she was nervous,\" Jason said patiently. \"But she was also excited. Way excited! This is something she's wanted to do forever and she's not going to let this opportunity go by.\"\n\n\"Oohhh,\" moaned Kristin. \"I've been so looking forward to this! And it isn't going to happen. I'm so turned on and she's just not here.\"\n\nHe laughed: \"My God, you're such a fucking slut.\"\n\nShe stopped pacing and smirked at him: \"And do you have a problem with that?\"\n\nHe smiled at her with a predatory gleam in his eye. \"You know I don't. It's what I love most about you.\"\n\n\"Well, come on then. Let's just forget about her and fuck me will you? I need it!\"\n\nBut just then they heard it: a timid knocking on the motel room door.\n\n*\n\nKristin and Jason had been wanting for a long time to invite an older, more mature woman into their bed. They'd had threesomes before, but Kristin had a particular fetish for older women that she'd never fulfilled; and Jason was more than happy to accommodate her. But finding the right woman had not been easy. Both had been unwilling to approach any woman they knew and trying to pick up a stranger had its own problems. So eventually they opted for advertising on an adult dating site. Over time they had refined their wish list: someone older than themselves, preferable a wife and mother, and one who was willing to submit herself to their depraved tastes. They reasoned a married woman would be less likely to cause any problems, and besides - there was an element of taboo about seducing some suburban housewife which they both found incredibly erotic. Kristin was an avid bisexual and Jason, like most men, was powerfully turned on by watching her with another woman and, of course, fucking them both.\n\nIt took some time to find the right candidate - but finally they received a response to their ad from \"Sarah2luv\" and she seemed perfect. Her profile stated she was 47 - about 10 years older than Kristin and Jason - and stuck in a virtually sexless marriage. She admitted to being inexperienced but desperately wanted to try all the perversions she'd seen online but couldn't and wouldn't ask of her husband. The three had exchanged messages and finally face pics and then agreed to meet for a drink. It had to be during the day while Sarah's husband was at work and Kristin and Jason were not disappointed when they finally laid eyes on their very nervous prey.\n\nSarah was quite attractive in looks - every bit the outwardly conservative part-time librarian which she was - but this only spurred their enthusiasm to corrupt her. They couldn't tell much about her body under her drab clothing but she seemed to be fairly slim. She had short, dark hair cut in a boring bob but she had nice eyes and what looked like very kissable lips. Over the course of an hour - and several rounds of drinks - Sarah confided that her college lecturer husband had proved to be a bad choice for her. He was a geek to the point of Aspergers syndrome - and devoted all his free time to the single-minded classification of seashells. She stayed with him for the sake of their children - now grown to young adults - but her sexual frustration had finally pushed her into seeking online porn, then erotic chats and cam-sex. But now she wanted the real thing. Basically, she wanted to experience everything she could - short of actual physical harm.\n\nKristin and Jason exchanged a significant look at this - and asked Sarah if she had any limits. She blushed like a teenager and haltingly admitted that she didn't know what her limits might be but was keen to find out. They agreed to arrange a time to have sex and agreed to swap health certificates so they could dispense with condoms. Then, just before they parted Sarah glanced nervously around the bar and shyly asked what they might do for her - and to her.\n\nJason smiled, took her hand, drew her closer and asked: \"Can I be explicit?\"\n\nSarah bit her bottom lip and quickly nodded. Jason leaned in and whispered in her ear: \"We are going to fuck you, Sarah. We are going to fuck you like you've never been fucked before - both of us. We promise we won't hurt you - beyond any pain you might enjoy - and you will service both of us - doing everything we tell you to do. We will expect you to suck my cock -- and to eat out Kristin's cunt. How does that sound?\"\n\n\"Oh my god,\" Sarah whimpered, her face flushed and her breathing erratic. \"Yes please. I want all of that... and more.\"\n\n\"More?\" queried Jason.\n\n\"Yes, I especially want to experience... um...\"\n\n\"Go on,\" prompted Jason.\n\n\"...I can't believe I'm saying this ... but could we try anal play?\"\n\nJason exchanged a significant look with Kristin before replying: \"Oh yes, Sarah -- we will both be more than happy to exploit your virgin arsehole.\"\n\n*\n\nAnd now their fearful but willing prey was waiting just on the other side of the motel room door. Kristin and Jason's eyes met with a flash of excitement and Kristin started immediately for the door. But Jason detained her briefly.\n\n\"Remember,\" he cautioned. \"Softly softy at first so we don't frighten her off.\"\n\n\"Of course!\" snapped Kristin losing patience with him.\n\nWhen Sarah stepped through the door she had the frightened aspect of a doe in the hunter's sights. Kristin took her hand and led her into the room where Jason was still lounging casually on the bed.\n\n\"Welcome Sarah,\" smiled Kristin. \"It's so great to see you again. We were a little worried that you might have changed your mind.\n\nThe middle-aged woman smiled nervously. \"I almost did. I've actually been standing outside that door for ten minutes mustering my courage.\"\n\n\"Oh, poor you,\" consoled Kristin, drawing Sarah into a hug lasting just long enough to thrill at the firm contours of the mature woman's body. She then stepped back to admire her prey. The older woman had clearly made an effort today. Her hair was drawn back from her face and secured by clips on both sides. She was wearing light red lipstick and her simple sheath dress in dark blue clung provocatively to her modest curves. \"Well, Jason and I are just so glad you're here, aren't we Jason?\"\n\nPicking up on his cue, Jason rose from the bed and also gave Sarah a brief hug. This time her hands slid around him and pressed his body closer to hers.\n\nJason leaned back slightly to admire her. \"We certainly are Sarah. We've been looking forward to this all week. But how much time do we have with you today?\"\n\nSarah smiled shyly: \"There's no rush for me. It's my usual day off and my husband works till at least five every day.\"\n\n\"Wonderful,\" said Jason. \"Kristin and I have both called in sick today so we'll have lots of lovely play time.\" Smiling he took Sarah's face in both of his hands and kissed her softly but lingeringly on the lips. She seemed to swoon slightly but opened her mouth to offer Jason her tongue which he briefly licked and sucked. Sarah moaned with growing excitement.\n\nThey agreed on a safe word -- \"pineapple\" - for Sarah, should she wish to stop at any point, and now she was gently sandwiched between Jason and Kristin as they traded three-way kisses.\n\nWhen they paused for breath, Sarah sighed: \"Oh my.\"\n\nKristin smiled: \"Never kissed a woman before Sarah?\"\n\n\"No. Not like that!\"\n\n\"You like?\"\n\n\"Oh god yes it's so exciting!\" and she offered Kristin her mouth once more, leading with her tongue in a much more passionate kiss, that soon had both women moaning. Jason stepped back to watch - just as Kristin had asked of him - and Kristin's hands went to work, roaming gently but firmly over Sarah's body: rubbing her belly through her dress, cupping and squeezing her bottom cheeks, then brushing lightly over her breasts. She felt the urgent thrust of a nipple and realised Sarah was not wearing a bra. Kristin relinquished Sarah's lips to kiss along her jaw line and suck on the simple gold earring that decorated her lobe. Then she was kissing, licking and sucking on Sarah's neck making the woman groan with pleasure. Kristin kissed down to the crook of Sarah's neck and sucked harder on the pale skin, raising a red mark. This seemed to make Sarah go weak in the knees and Kristin had to support her.\n\nThey renewed their passionate French kissing then Kristin whispered in the older woman's ear: \"We want to see all of you Sarah. Will you strip for us.\" Sarah visibly quailed at this so Kristin offered: \"Would you like me to go first? Do you want to see my naked body?\"\n\nSarah's eyes widened with excitement and she nodded quickly. Kristin wasted no time. At 36 she was still very proud of her body. Even after two children her large breasts were firm and everyone complimented her on her tight stomach and arse. She kicked off her shoes then pulled her sleeveless top over her head, shimmied out of her skin tight jeans then stood squarely in from of Sarah as she reached behind to unclip her bra. She could see the hunger in Sarah's eyes as she slowly and deliberately pulled the cups away and dropped the bra on the floor. She cupped her 36DD breasts and squeezed them, presenting them to Sarah.\n\n\"Do you like what you see Sarah?\" The older woman nodded mutely with her eyes fixed on Kristin's tits. \"Would you like to touch them?\" Another nod. \"Would you like to suck them?\"\n\n\"Ohhh yessss,\" breathed Sarah and stepped forward to tentatively caress and then palm Kristin's flesh. Kristin pressed her own hands over Sarah's increasing the pressure and throwing her head back to savour the female caress. Then she moved one hand to the back of Sarah's head to guide her face down to a stiff nipple.\n\n\"Hooooo,\" she breathed as Sarah's eager mouth enveloped the bud, licking and sucking it to an excited peak. Sarah pinched Kristin's other nipple. \"Mmmmm,\" encouraged Kristin. \"You learn fast. Suck them harder! Bite them! Hurt me!\" Sarah willingly complied, seizing each nipple in turn between her teeth and biting down, at the same time flicking the tip of her tongue. \"Oh fuck!\" exclaimed Kristin. \"Yes, you naughty girl - that's what I like.\" She then pulled Sarah's head up for another tongue kiss. Her hand clenched Sarah's jaw making her look into her eyes. \"Do you know you're making we wet you bad girl? Look here!\"\n\nShe seized one of Sarah hands and forced it down into her bikini panties. The woman's fingers were soon liberally coated with juices. Kristin drew the hand out and raised it so they could both see the glistening sheen on Sarah's digits. With a leer Kristin then forced the fingers into Sarah's own mouth giving the conservative housewife her first taste of another woman's cunt. She pulled the digits out to replace them with her tongue - loudly and sloppily kissing the woman, till both their mouths were slick with the juices of Kristin's arousal.\n\n\"Now,\" commanded Kristin. \"I think we need to see more of you, so get out of those clothes.\"\n\nKristin backed up to Jason who immediately reached around to slip his own hand into Kristin's panties. It took him just seconds to curl one fingertip between her pussy lips and she moaned with pleasure as they both stared expectantly at Sarah.\n\nThey watched as the older woman kicked off her pumps and lowered the zip at the back of her dress. She turned her back to them and slid the garment off her shoulders. Her skin was very fair - almost white compared to Kristin's all-over tan. Her back was narrow. She bent slightly to work the dress over her hips and down her thighs till it slid to the floor where she kicked it aside. She began to turn but Jason stopped her.\n\n\"Wait. The panties first!\"\n\nSarah's heart was pounding in her chest as she bent to slide her panties down her legs. She knew her instructors would be looking at her vagina and bottom hole and the thought made her heart skip with excitement. They were not disappointed. Sarah had no excess flab anywhere and her tight flanks showed off her assets beautifully. She straightened and turned with her forearms covering her breasts.\n\n\"Ooooh,\" exclaimed Kristin, who was still squirming on Jason's fingers. \"You shaved for us!\"\n\n\"Yes,\" blushed Sarah.\n\n\"It's beautiful, thank you,\" smiled Kristin. \"Now show us your tits!\"\n\nSarah giggled nervously: \"I'm afraid I don't have much compared to you.\" She slowly dropped her arms to reveal a surprisingly pert pair of A-cup tits with tiny dark nipples. Kristin and Jason both hummed their appreciation.\n\n\"Oh Sarah,\" breathed Kristin. \"Your titties are perfect!\" And to show their appreciation they both stepped forward and bent to each lick and suck on a rubbery tip. Sarah moaned as her arousal soared. She held their heads and arched against their mouths as they worshipped her breasts. She gasped at the twin assault and moaned in mounting excitement. Sarah had never felt anything so wonderful. After a long minute of suckling, Jason slid a hand down Sarah's naked belly to cup her mons and press his fingers between her thighs. At the same time Kristin slid a hand down Sarah's back to tease her bottom cleft, gently prising the cheeks apart to stroke her anal valley.\n\n\"Oohhh yessss!\" cried Sarah as her senses rapidly became overloaded. She loved the feel of their hands and mouths. When Jason's fingertips found her clit and Kristin pressed a digit against her rosebud it was too much and she cried out and almost collapsed at the sudden rush of feeling. She shuddered as the orgasm washed through her and had to support herself on their shoulders. They continued their twin assault, Jason curling a finger fully inside Sarah's cunt and Kristin pressing harder on her tight arsehole. Sarah orgasmed again and again in a continuous wave of ecstasy. Her cries became louder and tears coursed down her cheeks as she clung to her lovers and her body jerked and shuddered.\n\nFinally, Kristin and Jason relented and eased the still shaking Sarah down onto the bed. They lay on either side of her watching in fascination as the orgasmic spasms continued, making her stomach muscles contract and her thighs jerk. Kristin looked in alarm at Jason, silently mouthing: \"What the fuck!\" Finally, Sarah's convulsions diminished till she lay spent and limp.\n\n\"Wow Sarah, are you okay?\" The older woman smiled weakly and nodded. \"Oh my god I've never seen anyone cum like that. Not even me! Does that happen to you all the time?\"\n\nSarah shuddered a final time then smiled weakly: \"No - it's never happened like that. I just never knew... can't believe...\"\n\nJason leaned over and silenced her with a kiss. \"Well, beautiful Sarah you can come like that for us any time you like.\"\n\nKristin kissed her lightly too and said: \"I think Jason has way too many clothes on don't you?\" Sarah nodded enthusiastically and began to unbutton his shirt. Jason laughed and stood to strip himself. It took mere seconds and Sarah was greeted with her first view of a hard cock that wasn't her husband's. It stood proudly with a smear of pre-cum frosting the tip.\n\nKristin leaned in to murmur in Sarah's ear: \"It's beautiful isn't it? Do you ever suck your husband's cock?\" Sarah shook her head. \"Well, it's time you learned. Come.\" Both women sat on the edge of the bed in front of Jason. \"Now watch,\" Kristin instructed. She fisted the cock and drew Jason forward then leaned in to lick the tip of his tool and lave the whole head with her tongue. \"You have to make it real wet,\" she advised Sarah, who was watching avidly just inches from the action. Kristin spat liberally on the head and then used her tongue to smear the saliva all down his cock. Then she proceeded to take the whole length in her mouth, managing to suck and lick at the same time, diving deeper and deeper till she gagged and withdrew leaving a long thread of saliva suspended between his cock and her bottom lip. She sucked it up then turned to Sarah. \"Your turn.\"\n\nThe middle-aged wife and mother wasted no time in copying Kristin. Her tumultuous orgasm seemed to have washed away her nervousness -- and her inhibitions - and she attacked the erection in front of her with real enthusiasm.\n\n\"Ouch, careful!\" warned Jason. \"No teeth.\"\n\n\"Oh sorry,\" Sara apologised, then resumed the blowjob more carefully. She too, spat on his cock then ran her tongue up and down the sides to an appreciative groan from Jason.\n\n\"Use your hand to pump him as you suck, he loves that,\" urged Kristin. \"That's it - now use your other hand to pull lightly on his balls.\" Sarah quickly complied wringing an \"ooh fuck yeah\" from Jason. After watching closely for a few more minutes Kristin eased Sarah off the glistening cock and said: \"My turn again. And you can suck his balls.\"\n\n\"Oh wow,\" gasped Sarah and readily twisted her head down to lick and then suck each of Jason's swollen balls while Kristin slurped noisily on his cock. Jason was groaning loudly now and thrusting his hips at Kristin's face.\n\nShe disengaged for a moment to warn Sarah: \"He's gonna cum soon. Do you want to taste it?\"\n\n\"Oh god yes!\"\n\n\"Okay - let him fuck your face again and you know what I'm gonna do to make him blow really hard?\" The wide-eyed Sarah couldn't begin to guess and with a wicked smile Kristin whispered in her ear: \"I'm going to lick his arsehole.\"\n\n\"Oh my god!\" Sarah squeaked but happily grabbed Jason's cock again to feed it into her mouth. She took him as far down her throat as she could without gagging and began to suck and pump with extra vigour. Meanwhile, Kristin had moved behind Jason to part his arse cheeks with her thumbs and was now flicking at his pucker. This brought the expected reaction from Jason. He gasped and groaned and began to pant rapidly. \"Oooohhhh faaarrrk I'm gonna cum Sarah - I'm gonna cum in your fuckin' mouth!\" He grabbed Sarah's head and forced it harder against his groin and when Kristin forced her tongue past his anal ring he roared in ecstasy and began to pump spurt after spurt of his cum down Sarah's throat. She was gagging and coughing and choking all at once but still he held her and thrust into her till the last of his sap had jetted into her belly.\n\nFinally, he released her and she rolled away from him coughing and retching on the floor. Kristin crawled around to her as Jason slumped on the bed.\n\n\"Sarah honey, are you okay?\" she asked with genuine concern. The slim, naked woman gave a final cough and rolled onto her back. Her mouth was open and she was breathing hard but her eyes were shining and the lewd smile she gave Kristin told her everything would be okay. \"He didn't hurt you did he?\"\n\nSarah gave a brief laugh and then smacked her lips. \"Oh no! God no! That was unbelievable! So fucking hot - I actually came when I felt his cum hit my throat. I want to do it again. I loved it!\"\n\nIt was the first time Kristin had heard Sarah use an expletive and the dirty language gave her a thrill. \"Oh I'm so glad you liked it. Here, let me taste!\" She bent over Sarah to kiss her, forcing her tongue into the other woman's mouth to savour any last drops of Jason's jizz. Sarah returned the kiss and they sucked on each other for long moments rekindling their excitement.",
        "Kristin cradled Sarah in her arms and murmured in her ear: \"It will take him some time to recover but I'm sure he'll have another load of cum for us before you leave today.\" Sarah moaned in delight at this prospect and cupped her own mons in anticipation. \"Meanwhile,\" continued Kristin. \"You and I can entertain each other.\"\n\nShe helped Sarah up from the floor gently pressed the older woman down onto the bed on her back and straddled her waist. Kristin leaned forward to lick the last of Jason's cum from Sarah's chin then moved further up to let her heavy breasts dangle over Sarah's face. Sarah wasted no time in caressing and kissing the naked globes, moaning with delight at each sensation.\n\n\"Mmmm,\" moaned Kristin. \"That's it ... squeeze them ... pinch them.... oooh fuck yes just like that, good girl. Now slap them!\" Sarah was wide eyed but compliant with all Kristin's orders. She slapped the heavy tits making them shake and shiver. \"Harder!\" she commanded and cried out in excitement as Sarah slapped right on her nipples leaving red palm prints on the tanned flesh. \"Mmmm,\" smiled Kristin. \"Now kiss them better!\"\n\nAfter several minutes of this tender treatment, Kristin slid back to bring her mouth down to Sarah's ear. She murmured: \"Tell me my darling little slut, does that husband of yours ever lick your cunt?\" The name calling and filthy language made Sarah squirm with excitement and she quickly shook her head. \"In that case,\" continued Kristin with a wicked grin. \"I'm about to rock your world!\"\n\nAnd rock it she did. After kissing her way down the skin of Sarah's belly, Kristin used every skill she possessed to worship the older woman's pussy. She kissed, licked, sucked and probed with her tongue, bringing Sarah to repeated orgasms. She pushed Sarah's legs up and commanded her to hold her knees. This raised Sarah's virgin arsehole for Kristin's close inspection. It was a tiny rosebud and Kristin delighted in using Sarah's cunt juice to anoint the precious ring. She teased it with her fingertips, blew on it and finally flicked the tiny star with the tip of her tongue. She looked up to see Sarah staring down at her, open mouthed and drooling slightly in excited wonder. She then swiped her tongue from the pucker all the way up to Sarah's clit, repeating this several times till Sarah was almost crying with need for another cum. Kristin didn't keep her waiting long. She began to poke the ring with her tongue before forcing it past her sphincter and probing as deeply as she could. Sarah cried out in passion and her body began to tremble. Sensing the imminent climax, Kristin forced her thumb deep into Sarah's anus and moved her mouth to suck forcefully on her clit. This had exactly the effect Kristin hoped it would. Sarah shrieked and lifted her hips off the bed as her body spasmed in her most powerful orgasm yet. Again, it made her entire body convulse and her thighs locked around Kristin's head.\n\nThe younger woman was relentless with her tongue till Sarah was begging her for mercy. \"No no,\" she gasped and pleaded. \"No more!\" She opened her legs and tried to push Kristin's face away from her over-sensitive clit. But Kristin held fast to her hips and continued her attack. \"Aaahhhhhgggghh,\" the woman cried and thrashed about on the bed in another stunning climax.\n\nEventually, Kristin came up for air and watched in amazement as the lingering, rolling climaxes shook Sarah's helpless body.\n\nAll this time Jason had been lying beside the two women, watching in awe and stroking his cock back to its full hardness.\n\nKristin crawled up beside Sarah's trembling body and enfolded the older woman in her arms. Sarah seemed to be in a half-unconscious swoon and the younger couple exchanged a look of amazement and some concern. Kristin held Sarah till her body calmed and her eyes fluttered open.\n\n\"Are you okay Sarah?\" she asked with genuine concern.\n\n\"I ... I'm not sure,\" the middle-aged woman breathed. \"I think I'm fine but I feel dizzy and tingly all over. I guess I just never thought sex could be so completely mind-bending.\"\n\n\"Was it too much?\" asked Jason.\n\n\"No!\" Sarah replied emphatically. \"It was incredible -- fantastic!\" She half-raised herself to kiss each of them in turn. \"Thank you. Thank you so much. You've made this ... this adventure ... incredibly good. Better than I ever could have wished.\"\n\n\"Well,\" said Jason. \"we're not finished yet. How would you like to feel my hard cock inside your married pussy?\" Again, his bold language sent shivers of lust through Sarah's body and she quickly spread her legs for him. Within seconds Jason was balls deep inside her, making her gasp and cry out with the force of his fucking. But he took his time, not wanting to cum too soon and raised himself on his hands to look down at the slim body writhing beneath him. Sarah's small tits shuddered with each thrust of his cock and her eyes rolled back in her head as she began to mount to yet another orgasm.\n\nKristin lay down next her and began to suck on Sarah's breasts, biting the taut flesh and flicking her nipples. \"Is this what you wanted Sarah?\" she asked. \"Did you want another man's cock in your married cunt?\"\n\n\"Oh God yesss,\" she gasped. \"Yes I wanted it -- I want it.\"\n\n\"What did you want Sarah?\" Jason chimed in. \"Tell me!\" he insisted as he thrust harder and deeper.\n\nSarah's reply came in wild moans of pleasure: \"I wanted ... unghh -- I wanted to be fucked -- I wanted your cock fucking my cunt ...\" Her own words seemed to push her to the peak and her head tossed wildly as she felt another orgasm radiate through her entire body. Jason kept fucking her -- prolonging her pleasure -- till she slumped back exhausted under him. Incredibly he had not cum yet but he felt their new fuck toy needed some time to recover.\n\nThey lay together on the bed for fifteen minutes lightly touching and kissing. Kristin opened a bottle of wine from the supplies she'd bought and poured them each a generous glass.\n\nSarah stared in disbelief at Jason's penis, lying thick and pulsing gently against his thigh. She reached out and wrapped her small hand and around it.\n\nJason smiled. \"You like him Sarah?\"\n\n\"Oh my God yes,\" she replied. \"He's beautiful.\"\n\nHe ordered Kristin up onto her knees on the edge of the bed and stood on the floor behind her. Sarah watched them with one hand cupping her pussy and another clutching at her breasts.\n\n\"Do you know what Kristin loves Sarah?\" Jason asked. \"Kristin just loves me to fuck her arsehole. Would you like to watch that Sarah?\"\n\nHaving recovered her breath Sarah nodded her head: \"Oh my God yes!\" Jason forced Kristin's head and shoulders down onto the bed, then applied his tongue to her anus. He licked and spat liberally, greasing up the loosening pucker, as Kristin looked back at him moaning in anticipation.\n\nSarah crawled around to get a close-up view as Jason leaned into Kristin and worked the head of his phallus hard against her arse pucker. Kristin breathed deeply and concentrated on relaxing till the head of his cock pierced her tight ring and she gave an excited gasp at the pleasurably painful invasion. After a pause, and the application of more spit on the distended ring, Jason began to work his cock in and out of Kristin's arse. She moaned louder and louder as he picked up his rhythm, till he was rocking back and forth, plunging deep inside Kristin, their bodies making a lewd slapping sound as they met on each thrust.\n\n\"Ooooh fuck yesssss!\" hissed Kristin. \"Yes -- oh fuck yes, give it to me. Fuck that arsehole.\" On her knees beside the rutting pair Sarah felt her own excitement growing again.\n\n\"Let me help,\" she begged. \"What can I do?\"\n\nBetween gasps, Kristin issued her instructions to the older woman. \"Come here and lie under me Sarah, so you can suck my tits while he fucks me. Oh yessss -- that's it -- twist my nipples -- bite them. Mmmmmm... nnngggg ...aahhh God yes! Now finger fuck me! I want your fingers deep in my cunt.\"\n\nSarah complied willingly, wanting to induce the same intense orgasm in Kristin that she had enjoyed herself. She laved and sucked on Kristin's enormous tits and felt the grip of Sarah's cunt as she introduced a second and third finger.\n\n\"Ooohhh fuck!\" gasped Kristin. \"That's so good. Do it - fuck my holes!\" Her attackers delivered on her wishes till she was bucking back against the invading cock and digits. \"Ooohhh fuck! Ooooh yessss... I'm gonna cum -- I'm gonna cummmmmm!!!\"\n\nAnd she did, shrieking out her pleasure as her body was engulfed in a shattering climax.\n\nBut Jason's self-control was amazing -- he withheld his own climax and slipped out of Kristin leaving her with a profound feeling of emptiness. Her arsehole was gaping and still flexing with the aftershocks of her climax. Jason brought Sarah up to have a look and she was amazed at the sight. He slid a finger down Sarah's bottom cleft and asked: \"Do you still want that Sarah? Would you like to cum from having me fuck you right here?\" He emphasised the question with a deliberate digital poke at her rosebud.\n\nSarah gazed at him wide-eyed. \"Oh wow. I'm not sure I can...\" She was clearly hesitant but after a glance at Kristin's hazy satisfied expression she made up her mind. \"But -- yes ... yes please.\"\n\nKristin roused herself, kissed Sarah gently and said: \"Don't worry -- we'll take it slowly. Remember your safe word and if you use it we'll stop immediately, promise.\"\n\nSarah nodded, still obviously nervous, but equally excited. \"Okay,\" she breathed.\n\nThey had her lie on her back at first with her knees spread and pulled right up to her chest. As Kristin paid loving attention to Sarah's swollen clit, Jason spent long minutes rimming her arsehole, making her moan and shudder as his tongue-tip flicked, licked and gently probed her sphincter. All the while Kristin encouraged her: \"Just relax Sarah -- concentrate on the pleasure... you're doing great ... breathe deeply...\"\n\nWith a final lick of Sarah's clit Kristin left the bed to retrieve a tube of lubricant, which she and Jason used to grease up Sarah's nether hole. Propped on pillows, Sarah watched in excited fascination and felt her tight ring respond to their gentle coaxing. When Jason's little finger worked its way into her she felt nothing but a small jolt of pleasure. Encouraged by her moans, Jason replaced his pinkie with his ring finger working it deeper and deeper into her bottom.\n\n\"Mmmm oh god yes that feels so good!\" she moaned. They moved her onto her knees with her shoulders down on the bed and head twisted sideway so she could watch their actions.\n\nIn this position they applied more lube to her winking ring and, with more encouraging words from Kristin, Jason used his middle finger and then his thumb to stretch Sarah wider. They knew she was almost ready and Kristin used her lubed fingers to stroke Jason's cock back to full hardness. He rose to his knees behind Sarah, extracted his thumb and replaced it with the very tip of his cock. Sarah felt the difference and braced for what was coming. Slowly and gently Jason probed her, coaxing her partially open starfish to expand further and take his cock head. Sarah moaned at the pressure and gave a strained squeak when the knob penetrated the tight ring.\n\n\"Oooh stop -- stop...\" she begged. \"Give me a second please?\" Jason paused with his cockhead still engaged.\n\n\"It's okay Sarah, just relax and breathe deeply. I promise it will be okay,\" assured Jason.\n\n\"You're doing great Sarah!\" Kristin enthused. \"You wouldn't believe how hot it looks seeing Jason entering your beautiful arse.\"\n\nAfter several deep breaths Sarah did seem to relax and Jason resumed his careful penetration. Soon Sarah's small gasps turned to moans of pleasure as inch-by-inch Jason took her anal virginity. \"Ooooh fuck yes Sarah,\" he crooned. \"Your arsehole is incredible. So hot and tight!\"\n\nWhen he began a slow fucking motion with short, gentle stabs Sarah's arse seem to flower open around his girth and she began to feel the true pleasure of anal fucking with a deep sexual heat blossoming in the depths of her belly. She began to answer his thrusts, lifting herself onto her elbows and pushing back to meet him as he lengthened his strokes. Their mutual excitement grew with their mutual pleasure and soon he was arse fucking her with long exquisite plunges that made her bottom cheeks quiver and her small tits shudder. She began to moan and gasp as another climax gathered momentum inside her.\n\nKristin leaned down to whisper in her ear: \"Oh my God Sarah you look so fucking adorable with Jason fucking your arse!\" They kissed deeply and Kristin slid one hand down the woman's belly to find her swollen clit and the other to finger-fuck herself. Sarah's cunt was leaking copiously and Kristin smeared the juices around, pushing them up to anoint Jason's cock as it pistoned in and out.\n\n\"Yes yes yes ... oh fuck fuck fuck..\" gasped Sarah in time with Jason's ramming.\n\nJason was feeling his imminent climax too. \"Oohhh fuck yes, Sarah! Your arsehole is so tight -- so fucking hot! I'm going to fill you with my cum! You're gonna take my spunk deep in your slut fucking arse.\"\n\nThese words were the final straw for Sarah and she shrieked as the combined assault on her aching arsehole and her flowing cunt sent her into a convulsive climax. Jason came at the same time with a strangled cry, shooting jet after jet of his hot cum deep into Sarah's bowels. There were moans and screams all round as Kristin, too, brought herself off with three fingers jammed in her cunt.\n\nThey collapsed together in a heap on the bed, dripping with sweat and cum. No one spoke till they had regained their breath. Jason, in the middle, pulled his spent cock out of Sarah's leaking arse, kissed the side of her neck then turned to pull Kristin into his arms, kissing her and telling her how much he loved her. In turn, Kristin reached across to pull Sarah into their collective cuddle -- kissing her and sucking gently on the older woman's tongue.\n\nEventually someone noted the time and Sarah reluctantly admitted it was time for her to leave. Kristin took her into the shower to wash the cum juice from her body -- kissing and touching all the time. She helped Sarah dry her hair and dress. Before she left, the middle-aged wife and mother asked almost shyly if they might meet again.\n\n\"Just you try and stop us,\" teased Kristin. \"You're exactly what we wanted to find and we're not going to let you go anytime soon.\" She pressed her naked body against the fully clothed Sarah and murmured in her ear: \"And next time, when Jason dumps his jizz in your arse I'm gonna lick it out and share it with you.\" This filthy image made Sarah weak in the knees and she kissed Kristin one final time before murmuring: \"I can't wait!\"\n\nKristin saw her out the door and returned to Jason, who was still lying naked and smeared with their collective cum. They stared at one another for a long moment then both burst into disbelieving laughter. Kristin jumped back onto the bed and they high-fived.\n\n\"Oh my fucking God!\" she declared. \"That was amazing -- I couldn't have wished for a filthier slut!\"\n\n\"I know,\" replied Jason. \"She was up for anything we could throw at her!\"\n\nThey embraced in a deep loving kiss before Kristin glanced at her phone. \"Holy shit, look at the time. I've gotta get home before the kids -- and get ready to take hubby out tonight for his birthday.\"\n\n\"Yeah,\" agreed Jason with a deep sigh. \"I gotta go too. Roslyn's car is in for repairs so I have to pick her up from work. When do you think we can get together again?\"\n\nShe grabbed his semi-erect cock in her hand and leant down to kiss the tip.\n\n\"Not sure but I can't wait till next time. And I definitely want to invite Sarah again!\"\n\nEnd"
    ],
    "authorname": "Lancerlott",
    "tags": [
        "age difference",
        "oral sex",
        "group sex",
        "anal sex",
        "first time anal",
        "threesome",
        "ffm",
        "mature"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/sarah-31"
}