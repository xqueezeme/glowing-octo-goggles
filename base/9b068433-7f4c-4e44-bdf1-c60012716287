{
    "title": "Mr. Rob and the Witches Ch. 02",
    "pages": [
        "Part Two \u2013 Graduation Night\n\nAs always, this is a work of fiction. Any resemblance to anyone living or dead is purely coincidental...all characters exists only within the realm of my imagination.\n\nA word of appreciation to all those who responded to part 1, especially those of the Wiccan beliefs...your kind words and soft criticism were very encouraging. As last time, I mean no disrespect to anyone in the Wiccan faith...this is meant simply as a sexy, fun to write story, my apologies in advance if I offend. Again, please send me feedback or comments...this story has unexpectedly generated more feedback than any story of mine to date. I had no idea where the story would go...it just sort of wrote itself. I enjoyed writing the sequel, I hope you enjoy it to.\n\nThe next week passed by in a maddening, often agonizingly slow blur. I scored final exams and averaged grades. I also helped get things ready for our summer graduation event. Usually, we have between thirty and forty students who fail to graduate in the Spring with their class...often because of too many absences or just failing to pass a required class as was the case with my witches. The shock of not graduating with their peers usually grabs their attention well enough that they make up the lost class or lost time quickly that summer and so we have a small graduation ceremony, so they can officially receive diplomas and wear their caps and gowns. Knowing they have this ceremony to look forward to is another incentive to do the work.\n\nI was still in a sex aroused fog from what had occurred with my three witches. The three beautiful young women were constantly in my head, both when I was awake and asleep...especially in my sleep. In all my forty-five years, I have never experienced anything like it...the sheer power and eroticism of my dreams. Images of Tara, Lisa and especially Ashley, naked and carnal, possessing me and allowing me to possess them filled my sleeping hours. We were sex incarnate...god and goddesses consuming ourselves in orgasmic fires only to be reborn from the ashes of our spent desires to burn anew with lustful joy. \n\nEvery morning I would awake sweat drenched and exhausted, my cock throbbing and drained as I seemed to have ejaculated in my sleep not once, but multiple times. My head would still be swimming with the images of my three seductresses and I wondered if I was going mad as every morning mixed in with the odors of my lusty sweat and semen were the sweeter aromas of my dream lovers...their particular fragrances that I'd come to know during the summer session, mixed with more carnal scents. I found myself almost convinced that somehow they had slipped into my house in the dark of the night, making magical love to me till dawn.\n\nIt should not come as a surprise to anyone that all three of my witches passed the final exam with flying colors...the three highest scores in the entire class...with Lisa scoring a '98', and Tara and Ashley both scoring a '97'. All my students passed, but there was a wide gap in scores between my three witches and the rest of the class. Needless to say, Mr. Grady, the Principal was thrilled.\n\nFinally Graduation Night arrived. We always hold the ceremony on the last Friday of June and with such small groups, held a short reception afterwards...punch, cookies and nuts. I tried to act calm, but felt like a young boy about to go out on a first date with the girl of his dreams. My witches had become the stuff of dreams to me. I wondered how they would act...how I would act...I even wondered if they would even bother to show up. I shouldn't have doubted them though. As I assisted Grady's secretary in getting things organized on stage, I glanced at the gathering parents, families and the thirty-six students now finally and proudly able to wear their graduation gowns. My heart leaped as I saw my three girls, dressed the most conservatively that I'd ever seen in their long, midnight blue graduation gowns. Each noticed me and gave me a wave and a big smile. Tara even blew me a kiss.\n\nMr. Grady gave a short speech, thanking me and the other summer school staff, Mrs. Dawson, our chorus teacher sang something inspirational and then with my assistance, Mr. Grady called each student up to the stage and gravely presented them with their diploma. As they crossed the stage in front of the assembled faculty and staff, each student tended to respond differently...some stopping to shake teachers' hands or to hug a particular teacher, some red-faced and shy, literally racing to get off the stage. As Tara, the first of my witches was called, she strode up on the stage with the same defiant, proud manner that she had first charged into my class with. She accepted her diploma and Grady's words of congratulation with the most cursory of nods and then as she crossed the stage, stopped and gave me a furious hug.\n\nI groaned inwardly as I felt her body press against mine, feeling almost naked under the robe, a feeling she confirmed as she whispered in my ear, \"I'm not wearing anything under this robe. I want you and in the full moon of the Esbat, I shall have you, Mr. Rob!\" Blood rushed to my cock...her words filling me with desire.\n\nHer lips brushed my cheek and she smiled sweetly at me and moved on. I prayed that my sudden erection wasn't that noticeable and tried to act as if everything was normal. I tried to will my hard-on away, but if I was having any success, it was in vain when Lisa was called up to the stage. Again, she took her diploma, barely acknowledging Mr. Grady's existence and came over and gave me a powerful hug. \n\nIn my ear, Lisa's tongue flicked out and then she whispered, \"I'm naked and wet for you under this robe, Mr. Rob! I want you and in the full moon of the Esbat, I shall have you!\" She too kissed me on the cheek and she gave me a heartbreakingly tender smile. My erection was throbbing angrily and I knew if I looked down, I'd see a huge bulge, threatening to rip through my trousers.\n\nThe last person called to the stage was Ashley and I could feel my heart pounding as she took her diploma from Mr. Grady without a backward glance, looked out at the audience and waved at her family and then came to me and hugged me fiercely.\n\nHer body seemed to melt against mine...there seemed to be an incredible amount of heat emanating from her body. I could smell her lust. She kissed my cheek. In my ear, she said in a husky whisper that screamed desire, \"My time to become a woman is now...I choose you. I want you and in the full moon of the Esbat, I shall have you, Mr. Rob!\" She kissed my cheek again, her lips on fire and then stepped back and looked at me with such purpose and power...for a second it was as if we both stood there naked, the world shrunk down to just us two and our need...our lust...our hunger for each other was palpable.\n\nThe moment passed in a heartbeat or an eternity...I'm not sure. Then Ashley spoke, \"Remember, Mr. Rob. Your reward will be threefold...in the full moon of the Esbat, it will be threefold.\" Ashley smiled and strode across the stage and returned to her seat.\n\n\nI did my best not to begin trembling or to cum in my trousers as Grady made a few last remarks and then declared 'these assembled students, graduated.\" There followed the usual cheers and throwing of graduation caps and then everyone retired to the school cafeteria for the reception. I took a few minutes to bring myself under control...my penis grudgingly wilting to a half erection...its recovery seeming imminent.\n\nAt the reception, I accepted the heartfelt thanks of a few parents, most noticeably a few of the jocks who had their athletic eligibility restored thanks to passing my class. Then Lisa bounded up, her parents in tow. Both looked like proud parents...I recognized in them the same characteristics of factory workers that my parents had had. They thanked me with accents that marked them as descendents of Polish immigrants...a trace left even after several generations in America. They thanked me profusely for getting their daughter through graduation. I accepted their thanks humbly and gave all the credit to Lisa, who beamed at me.\n\nAs they left, Lisa glancing back to give me a saucy wink, Ashley came up with her parents...slightly bewildered farmers who looked uncomfortable being dressed up in Sunday best and inside. Both gave me curt thanks, the father glumly adding, \"We didn't think she'd ever get anywhere once she took up with this witchery foolishness.\" Ashley rolled her eyes and blushed. I tried to blunt any possible argument within the family by assuring them that I had every confidence in the world that Ashley would make her mark...that indeed, she was one of the brightest students I had ever had the pleasure of teaching and my hat was off to them for raising such a fine daughter. Ashley beamed at me, and mouthed the words, \"Thank you.\" Even her parents smiled at my words of praise.\n\nFinally, Tara arrived holding hands with a woman who had to be her mother. \"Mr. Rob, I'd like you to meet my mom, Sara,\" she said, taking my hand in hers, linking the three of us. I might have imagined it, but there was a bit of an electrical charge that ran through all of us. I knew what Tara would look like in thirty years or so. Her mother was a big, voluptuous woman, big both in bosom and butt and a solid waist. The term \"Earth Mother\" passed through my mind. Tara had inherited her mother's brilliant eyes and she was a beautiful woman. She wore a long, flowing dress of many colors and from the pendant around her neck, I assumed that I knew where Tara's Wiccan ideas had come from.\n\n\"Mr. Rob, Merry met,\" said Tara's mother. She extended her free hand and I took it...forming us into one circle. \"I've heard so much about you...I wanted to thank you for being so...open-minded.\" Her eyes seemed to pierce right through me...peering into my very soul. She had a funny smile on her face and I felt like I had no secrets from her.\n\n\"Your daughter marches to her own drummer,\" I replied. \"There's nothing wrong with that. We all have to find our own way.\"\n\nThat seemed to please Sara. \"Well said. Still, it's refreshing to find someone who doesn't condemn us for the path we walk.\" She looked at her daughter. \"Even though Tara seems determined to explore new paths to the Craft.\" There was a slight tone of chastisement in her voice, as well as amusement. \n\nTara smiled back at her and then said, \"We all walk along as the Lady wills it, Mom. And right now, I need to walk a path and find Lisa and Ashley.\" She let go of both our hands and slipped off through the crowd.\n\nSara took my now free hand and studied me closely. Again, her brilliant blue eyes seemed to bore through me...searching for truth. Finally she nodded. \"My daughter's judgment is true...even if her path is not clear to me. \"You are a good man, Mr. Rob...let your heart guide you and may the Lady clear any doubt from your soul Know that in what lies ahead, you have my blessing.. Mayhap, we will meet again.\" She leaned in, her enormous bosom rubbing against my chest and kissed me quickly on the lips. \"Merry met and merry parted.\" She left me there wondering what had just happened. \n\nAfter about thirty minutes, folks began to drift off. I helped my fellow teachers clean up, got another handshake from Mr. Grady for a job well done and the school year was over...just like that. I returned to my classroom, picked up a box of items I was taking home and headed for the parking lot. Mine was the only car left. As I approached my old Ford clunker, out of the shadows stepped Tara and Lisa, still in their graduation gowns. I stopped...my heart beginning to pound. \n\n\"Girls...ladies...what can I do for you?\"\n\nLisa pointed at the sky. \"It is the full moon, Mr. Rob...the night of the Esbat and we've come to take you,\" Lisa said quietly \n\nTara walked up to me and took the box out of my hands and handed it to Lisa. \"We're here for you, Mr. Rob...it's time,\" Tara whispered as she crushed her luscious body against mine and kissed me...her tongue spearing into my mouth. We kissed passionately...I felt her hands in my pockets...fishing out my car keys and caressing my cock.\n\nTara broke the kiss and Lisa took my hand and led me to the passenger seat of my car. I started to speak, but Lisa put fingers to my lips and smiling, said, \"Shhhh...it is time....we've come to take you to the Esbat.\" As Tara climbed behind the wheel of my car, Lisa climbed into my lap, straddling me, her lips finding mine...kissing me as she pressed her long, lithe body against mine. Her fingers played across my chest, unbuttoning my shirt and then scratching nails softly against my skin, finding my hardened nipples and flicking and pinching them. I heard a zipper and then Lisa was naked against me, her button nipples hard and rubbery...her skin soft and on fire.\n\nLisa hunched over me, her movements mesmerizing me as our tongues danced and my hands roamed over her body, cupping her tight butt cheeks. I suddenly realized that somehow she had gotten my belt undone and my pants and shorts pushed down around my ankles. My cock was pressed between us...her skin fiery and delicious against my erect penis. Lisa seemed to climb me and then my cock was pressing lengthwise against her pussy...her bare labia embracing my cock with her heat and wetness while her trimmed muff tickled the very tip of my throbbing meat. Our kiss ended and she guided my lips to her nipples, sighing as I rolled my tongue over her hard little buttons, lips encircling to suck them, my teeth playfully nipping at them.\n\n\"We're here,\" Tara suddenly announced. I looked up and find us in the drive of an old farmhouse. I didn't even remember us moving. \"This belonged to my grandparents...it belongs to Mom and me, now.\" She opened up the door and climbed out. Lisa climbed out as well, helping me shed my shoes and my clothes. When I stepped out of the car, Tara greeted me, now naked herself...gloriously naked...her breasts heaving with excitement, her huge, meaty nipples standing up. Her heavy tits pressed against my body as she kissed me...her hand wrapping around my cock and stroking it slowly.\n\n\"Let us go to the Esbat...Ashley awaits us there,\" Tara whispered. I found myself mute...unable to totally comprehend what was going on around me...allowing my lust and desire to lead me just as Tara and Lisa now led me. We did not go towards the old farmhouse, but instead stepped onto a path leading into the woods. The full moon, fat and bright above us lit the path well. Flashes of heat lightning also helped illuminate our path. Lisa and Tara seemed to be chanting...mostly in a language I didn't understand, but I caught some snatches of song about \"the Lady.\" The words seem to wash over me, wrapping my desire and lust in a blanket of calm and reassurance. Part of me knew that I, an forty-five year old divorced teacher was walking naked alongside two beautiful, enchanting nude eighteen year old women through a patch of woods, but it all seemed appropriate...it all seemed as if things were they way they should be.\n\nTheir voices were soon joined by another...I recognized the angelic voice of Ashley and felt my cock swell a little. We stepped into a clearing lit by many candles and I took in several incredible sights. Blocking our path, stood Tara's mother, Sara...naked as we were...her fleshy body incredibly erotic...a breeze blowing her long, curly black hair around her shoulders. Her body was amazingly similar to her daughters...her thick, meaty breasts slung low across her chest, capped by huge nipples larger than her daughters and between her legs a literal forest of black pubic hair...strands reaching up her belly. \n\nBeyond Tara's mother, in the center of the clearing was a small knoll...an earthen bed or altar, now covered in linens, pillows and flowers. In front of the earthen bed, stood Ashley, naked and glorious, looking like a goddess...her perfect body glistening with oil. Her large, upright breasts heaved with desire...her nipples standing out, hard and long.\n\n\"This be the Esbat,\" intoned Sara, her voice merry. \"Come forth and be purified.\" She held up a large water pitcher and I realized that beside her a little spring bubbled forth from a rock outcropping. Lisa stepped forth and began to chant as Sara poured water over her, once, twice, three times. Lisa's long naked form glistened in the moonlight and I could smell the scents of flowers and bath oil. Tara followed and her mother poured water from the spring over her head, showering down three times from the spring until her body glistened \n\nLisa and Tara led me forward and Sara smiled gently at me. \"Be welcome to the Esbat, may your soul be nourished and enlightenment be yours.\" She poured fresh water from the spring over me...icy cold water that drove the breath from my body. I expected my erection to wither away in the cold water, but with each dousing, I felt my cock throb and stand a little stiffer until it was literally slapping my stomach...something I hadn't experienced in years.\n\nLisa and Tara led me towards the altar and Ashley. She too glistened from the bath oils...her hair almost blown dry by the gentle breeze. She held out her arms and said, \"Let all be witness...I have chosen this man...this gentle, wise man to be my first...to be the conduit by which I hope to touch all the universe and to know the embrace of the Lady and the Lord.\" Ashley climbed onto the earthen altar, laying back and spreading her long, shapely legs. She said in almost a whisper, \"Do you accept this gift...my virginity, on behalf of the Lord and the Lady?\"\n\nI felt lost and unsure, but my heart urged me to reply, \"I do,\" I said in a hoarse whisper.\n\nLisa and Tara urged me forward, helping me climb onto the altar...their hands stroked my body, leading me on until I climbed between Ashley's thighs. Bath oil, sweat and her body's lust wafted up and filled my nostrils...making me heady with desire.\n\nAshley held out her arms and I slowly rested myself on top of her warm, slick body...feeling her long, hard nipples rubbing against my chest as my weight flattened out her full breasts...feeling her velvety thighs rising up, her legs rising into the air. I kissed her then, on the mouth, pressing my tongue into her mouth with an urgent need second only to the need to sink my flesh deep into her own. Tara's hand slipped between our bodies and guided my aching cock to the mouth of Ashley's vagina. Tara was chanting as was Lisa and I think, Sara...words of invocation, urging the Lady to bless this union...this sacrifice, this act of primal love.\n\nAshley broke the kiss...her lips brushing mine and whispered, \"Please, Mr. Rob...now...make love to me now!\" With a groan, I thrust into her as she flung her pussy upwards. She was incredibly wet and tight and hot...like sinking into pleasure itself. I buried my cock into that eighteen year old virgin pussy...meeting resistance and then breaking through her hymen with a steady, hungry thrust. \n\nAshley's body arched against mine and she cried out...\"For the Lady...I offer this, my most sacred gift!\" She screamed as I tore through her cherry...a brief warm flow of blood, coating my cock as I continued to sink all my aching hardness into her wonderful velvet warmth.\n\nAs I felt myself fully inside her...my pubic hair grinding against her naked cunt, an incredible hunger swept through me...almost electric...the hairs on my arm stood up. Ashley convulsed, her hazel eyes snapping open wide...her legs wrapped around my hips and she pulled me to her with her arms. \"Ohhhh, Goddess!\" she moaned. \"Take me, lover...fuck meee!\"\n\nLike animals in heat, we exploded into a furious mating...kissing, biting, sucking as our joined groins slammed hungrily into each other. It seemed as if we were suddenly in a whirlwind...a thunderstorm...lust exploding and arching off of us like lightning bolts. My cock was like a jackhammer, pounding into her pussy, attempting to go deeper into her clasping womb...pleasure coursed through my cock as never before...taking me to the edge of orgasm, but not letting me cross over. I tried to slow down, not wanting to cum too soon, but Ashley wouldn't let me...in truth, I couldn't stop. It was as if her very flesh...the wet, fiery folds of her hot cunt demanded me to continue. ",
        "Around us came the chanting of the other witches...urging the blessings of the Lady and the Lord. As their voices grew stronger...so did our lust and need. We became more than two people making love...we became sexual love incarnate...became the very icons of lust...every mating that had ever been between man and woman...it was as if we had become the gods themselves...finally understanding the urges that drove Zeus to carnal madness...that made Venus love in the flesh. We were the Lord and the Lady...their divine love manifested in our lustful human flesh.\n\nAshley bucked against me...her first cock induced orgasm coursing through her body...her pussy clamping down, milking me, demanding my semen, but I found myself unable to release...instead, continuing to bury my huge, throbbing penis into her wonderful wet heat. Ashley came again, crying out my name, crying out to the Lady, to Tara and Lisa. She dragged nails down my back as her heels dug into the cheeks of my ass, trying to get me deeper inside her. She cupped her breasts together, urging, offering me her long, erect nipples to suck and bite.\n\nAshley sobbed with pain and delight as I nipped and teased her elongated stiff nips with my teeth...my tongue rolling over the rubbery points. The heat between her legs seeming impossibly to grow even stronger...her liquid fire allowing me to plunge even harder into her pussy. Ashley flung herself against me, grinding her pelvis against my groin even as her heels dug into my asscheeks, urging me deeper.\n\n\"Fuck me, Mr. Rob! Please...make me cum again...I love your cock...dreamed of it...LOVE YOUR AAGHHHH COCKKK!\" She orgasmed again, her pussy muscles becoming a velvet vise around my erection and I couldn't hold back. I thrust as deep into her newly deflowered womb and with a roar, exploded inside the young woman. It was as if a dam had burst. I pumped heavy spurt after heavy spurt of my seed into Ashley's pussy, triggering an even more explosive orgasm in my eighteen year old lover.\n\nAgain, the world seemed to reduce to just us...wrapped up in the magic and power of our beautiful orgasm. Ashley's hazel colored eyes were filled with tears, but there was an angelic smile on her face as we stared intently at each other as our mutual orgasm seemed to go on and on and on. Even as we kissed, tongues dancing happily together, we kept our eyes open and it seemed as if we could see into each other's souls and beyond. As I stared into Ashley's eyes, it seemed that more than just she stared back. Inherent in her seemed to be the very essence of what makes a woman...one some instinctual level, I knew that within Ashley's loving body, the Lady herself now resided...sharing what we had shared, making it even more intense. I felt tears flowing down my face. I knew that this was one of the rare moments that one has a glimpse of heaven. For the briefest of ecstatic moments, I was one with everything...and then too soon, the moment slipped away.\n\nI gave my young lover one last minute thrust, making her gasp and then we slipped back into the real world...becoming aware of Tara and Lisa caressing our sweaty slick bodies as their chant began to fade. Ashley broke into sobs even as she hugged me to her, her twat still milking my cock for the remnants of my semen. Her lips pressed against mine and we kissed.\n\nWhen we parted, I eased off her, rolling over and sitting up, only to find myself with a lapful of Lisa...naked and ferocious. Out of the corner of my eye, I watched as Tara and Ashley embraced, their lips locked in a passionate kiss. I suddenly realized that my erection had not faded...the realization brought home as Lisa climbed my pole and with her hand guided my stiff cock, coated with Ashley's virginal blood and our mixed love cream, into her sopping wet pussy.\n\n\"On this holy night, the night of the Esbat, I will have you, Mr. Rob!\" moaned Lisa, wrapping her long, willowy limbs around my sweaty body and sliding down my hard pole...her warmth swallowing my meat happily, taking all my cock inside her sweet sugar puss.\n\nLisa cooed with contentment as she wiggled her slender bottom against my lap, grinding her neatly trimmed bush against my curly pubic hair. Her cunt was a furnace of pulsing desire, massaging my penis. \"I knew I'd love your cock, Mr. Rob!\" she giggled as we began to rock together. We kissed and embraced, the hard little buttons on her breasts rubbing deliciously against my chest. My hands cupped her tight, taut asscheeks, helping work her up and down on my dick. I could hardly believe how incredibly slick and tight Lisa's cunt felt as I worked my cock back and forth. Lisa worked her ass hard, trying to corkscrew up and down on my throbbing dick.\n\nAgain, it seemed as if something slipped inside us...making us more than mere mortal flesh. Flickers of heat lightning seemed to be reflecting off our skin...electrical energy seemed to leap between us with every rocking thrust and wiggle we made. Lisa shifted slightly and then gasped as I sank a little deeper into her womb. \"Ohhhh, Mr. Rob. I love you...I love your hard cock...oh blessed Lady, I love it soooo!\" Lisa suddenly sobbed and I felt a fresh flow of fiery juices coat my cock and knew that she was about to orgasm. Lisa pressed her lips against my neck, kissing and nuzzling my skin...her tongue coming out to tease and play. She groaned as I throbbed inside her.\n\nI glanced over to check on Ashley and almost came as I watched her writhe in orgasm as Tara's face bobbed between Ashley's thighs, tonguing my semen out of Ashley's bare twat. Both glowed with sexual power, their skin gleaming with erotic energy.\n\nI became aware of another voice raising praises to the Lady and glancing over towards the path we had traveled, was amazed to see Tara's mother, naked and beautiful, chanting as she watched our holy and carnal display. She looked at us with wonder and desire, her hands running over her own aroused body. She seemed both amazed and in awe of the carnal ceremony her young daughter and friends were engaged in.\n\nLisa's moans of joy brought me back to her, her tight pussy massaging up and down on my cock, making me moan in turn as her soft, burning flesh rubbed against my throbbing meat. We kissed again and our ecstasy grew as long minutes of sweet, slow fucking passed. We rocked back and forth, each subtle movement of our joined groins making us almost swoon with erotic pleasure. My young lover's moans and sighs began to grow louder and more insistent. Lisa ground herself down on my penis, her cunt muscles tightening as she approached orgasm.\n\nAn incredible burst of heat lightning illuminated the pale, creamy skin of my lover as she suddenly broke our kiss and threw her head back and screamed in pleasure, her long, unruly hair sailing all about as she began to orgasm. Her legs tightening around my waist even as her cunt clamped down tight around my cock, urging successfully to make me cum.\n\nI cried out with her and again, could scarcely believe the amount of semen I flooded her young pussy with. I sobbed and sucked Lisa's turgid button nipples as jet after jet of my seed bathed the insides of Lisa's young pussy. Lisa sobbing, cried out, \"Yes! Give me your blessed seed. Fill me with your sperm, Mr. Rob!\" \n\nAgain, it seemed as if an age passed as Lisa milked me of all the semen I could offer. As her orgasm passed, she rocked back and forth on my cock as her wonderfully tight twat squeezed my cock dry, a small, mysterious smile on her face mixed with occasional expressions of ecstasy as orgasmic aftershocks raced through her body.\n\nFinally, with a small sigh, Lisa slipped off me and we both collapsed onto our backs on top of the altar-like knoll. Immediately, Ashley appeared, first kissing me and then Lisa. She began to trail kissed down Lisa's slender form, stopping to swirl her tongue around Lisa's button nipples and then down across her flat belly and then running her tongue through Lisa's neatly trimmed muff and then between her spread labia and into Lisa's semen filled pussy.\n\nMy attention was diverted by the appearance of Tara, her long fingernails running up my leg as she approached me. Her breasts, upper chest and neck were bright red with a sexual flush...her heavy, meaty breasts heaving with excitement, thick nipples swollen and hard, betraying her desire and need. Tara's nails trailed across my thigh and into my crotch. \"Are you ready for me, Mr. Rob? Have you dreamed of this? I have...I've dreamed of having this big monster in my pussy...making me cum...making me complete...filling me up with your blessed seed.\"\n\nI was ready. I could scarcely believe that for the second time in a week, I was sporting an erection that just wouldn't go away. It throbbed as Tara slowly lowered her head towards my cock until I could feel her hot breath. Tara giggled as she pressed her lips against the crown of my penis and then opening her mouth, flicked out her tongue and ran it around my cock-head, licking Lisa's pussy cream and my spunk off my cock, making me groan with pleasure. Tara licked and sucked my cock until I thought I would go insane with pleasure and then when I thought I couldn't take it anymore, she rose up and climbed on top of me...her meaty tits bouncing and swaying as she straddled me.\n\n\"Are you ready, Mr. Rob? Are you ready to be fucked? Goddess, I've dreamed of you for so long!\" She began to lower herself down, the hair of her thick, wild bush brushing the sensitive crown of my cock and then, the most incredible silky warmth as Tara lowered herself onto me...sliding her cunt down around my cock. \"Oooooohhh, Mr. Rob! So big...so hard...so sweet! I...oh yesssss!\" \n\nTara was already in the throes of orgasm by the time she had completely impaled herself on my long, hard dick. Her whole body shivered with carnal delight, making her large tits bounce and quiver as her fingernails scratched across my chest. Tara's full upper lip curled nastily as she ground herself down, trying to get me ever deeper inside her warm, clasping cunt.\n\nI could nothing but enjoy the sweet sensation of my third eighteen year old lover's wet and wonderful pussy bathing my cock in her steamy cunt cream. Finally, squatting on my cock, my voluptuous girl began to move, slowly at first, but with steadily mounting speed until Tara was pistoning up and down on my swollen penis, her sugar walls clinging sweetly to my dick, jammed and swollen in her pussy. Her hands pulled my hands to her heaving, bouncing breasts, urging me to squeeze and maul her meaty flesh and to pinch and pull her thick nipples.\n\nAgain, I felt my lover and myself filled with a powerful spirit, becoming more than human...again becoming sex incarnate. Tara crowed with joy and pleasure, her back arching in orgasmic pleasure, becoming more than Tara even as I became more than myself. We became the avatars of the gods themselves, allowing the Lady and the Lord to experience earthly pleasure. Above us, the sky began to crackle with lightning and the wind rose, sweeping Tara's long black hair around and around as she rode me...rode my throbbing penis up and down around her fiery, steamy pussy.\n\nTara's brilliant blue eyes flashed lighting and it seemed that bolts of electricity were striking us, each bringing more intense orgasmic pleasure than the one before. Then the whole world disappeared in a white, electric flash, leaving only Tara and I alone in the universe, wrapped in erotic explosions of pleasure...Tara and the Goddess becoming one as Tara's orgasm exploded into being, wracking her body with carnal convulsions as her wet, velvet cunt clamped down around my cock\n\nTara gasped out in a voice both hers and not hers, \"Now, my love...my Lord, now, fill me with your seed! Make me...ohhhh, make me complete!\" \n\nWith an unearthly roar, I thrust up into Tara's womb and let go, surrendering to my own orgasm and began to fill her with thick wad after thick wad of my white hot semen. Tara's orgasm went to a new level...becoming an inferno of carnality, arching her back as she surrendered herself to the pleasure. My orgasm became so intense I think I actually blacked out for a few seconds. When I came to myself again, Tara and I were back in the world, Tara astride me on the altar, milking my cock with her sweet cunt, but we were not alone. Sara had moved up beside us, running her hands over our joined bodies. Awareness crept back into Tara's eyes and she looked at her mother and moaned, \"Momma!\" and then mother and daughter were kissing passionately as I surrendered the last of my semen to Tara's demanding pussy.\n\nAshley and Lisa appeared and helped ease Tara off me, her pussy slipping free of my erection with a wet sucking noise. They eased their friend back and began to lovingly shower her body with kisses.\n\nIncredibly, my cock still waved stiffly and proudly in the air, coated thickly with Tara's cunt cream and my sperm. \"By the Lady, Merry met, Mr. Rob!\" gasped Tara's mother. She ducked her head down and began licking my cock clean. My eyes widened, both from the pleasure of Sara's knowledgeable tongue and from the realization of her feeding not only on my seed, but her own daughter's juices.\n\nSara finally rose from my cock, her lips smeared with love cream and kissed me then, sharing the taste of Tara's and my love. Her hands urged me up as she pressed her naked, soft flesh against mine, then twisting and turning us until I was between her wide spread legs. The gorgeous, full figured woman thrust herself against me, rubbing her sex against my aching member.\n\n\"Momma,\" moaned Tara, she and the others looking at us in amazement. \"You mean, you're going to join...\"\n\nSara reached out one hand to her daughter. \"By the Lady, I confess I don't totally understand your magic, but one learns by doing...and who better to show me than a teacher!\" She laughed at her joke as did the girls, then Sara reached up with her free hand and stroked my face. \"Make love to me...fuck me, Mr. Rob...take me to where you took the girls!\" She hunched herself against me again, her furry bush tickling my sensitive cock, giving me hints of her wetness...of her desire.\n\nMy head seemed suddenly dizzy with lust and with a snarl, I thrust myself into Sara's welcoming pussy. She was wet with lust herself and while not nearly as tight as the young girls around us, Tara's mother demonstrated quickly that she had total mastery of her cunt muscles as well as many years knowledge of how to move underneath a man to give both him and her pleasure.\n\nWe immediately surrendered ourselves to the magical passion of the moment, becoming lusty creatures opening ourselves up to the rapturous pleasures that we could offer each other. I plunged in and out of her incredible steaming cunt, reveling in the sweet sensations her velvet puss had to offer. Sara cupped her breasts, pulling one upwards so she could suck her own meaty nipple and then offering it to me and crying out with pleasure when I bit it and then sucked hungrily on the thick, meaty digit.\n\nAround us, my three witches began to chant, even as their hands roamed eagerly over our sweaty, trembling bodies. Hands stroked my back, Sara's breasts, my butt cheeks, Sara's widespread legs. Fingers slipped between our wet bodies to caress and stroke Sara and I where we were joined together, cock and pussy. Their words were again mostly unknown to me, invoking the power and love of the Lady and as I fucked Sara with all my heart and joy, again that sensation of energy...of possession came over me, Sara's bright blue eyes, so much like her daughter's, seemed to possess more than one soul. Part of me wanted to simply weep with joy at the beauty I beheld there, part of me was consumed with the lusty desire to make this beautiful woman cum and cum and cum again.\n\nSara raised her meaty, but shapely legs to tighten her hold on me, digging her heels into my butt to urge me on, urging me to fuck her deeper, to fuck her faster and to fuck her harder. Like great water filled balloons, Sara's great, meaty tits bounced and rolled across her chest, her unruly, hairy muff tangled with my pubic hairs, pulling and catching, our bodies slammed and slipped against each other with wet, sweaty smacks. The sweet aroma of her aroused pussy wafted into my nostrils, filling me with even more hungry desire to bury my aching cock deep within her wet, fiery cunt...to lose myself within her steamy womb.\n\nLightning again exploded in the sky...as the heat lightning yielded to the power of a storm. I braced myself for a torrential downpour, but instead, we found ourselves being anointed with a gentle, warm rain that fell soothingly on our naked, writhing bodies, doing nothing to abate our magical passion for each other.\n\nI surrendered myself to whatever possessed me, becoming oblivious to everything, but the beautiful woman underneath me and my mission to bring us both to an earth shattering climax and of the lovely trio of witches that were embracing us, offering us pleasure with their hands and their kisses. I was blind in my ecstasy, but each time a mouth joined mine, I instinctively knew if it were Sara, Lisa, Ashley or Tara.\n\nOn and one we continued to fuck, Sara's loud cries and sobs of pleasure spurring me on, her warm, voluptuous body and my cock buried in her clasping, sopping wet pussy, the only constants in my universe. We were ourselves and yet others...again serving as vessels that the Lady and Lord could use to become love and passion in the flesh. Time seemed to stand still...we existed in one pure moment of complete love and passion.\n\nHow much time actually passed, I have no idea...maybe minutes, maybe hours. Just when I began to believe that our erotic pleasure would never end, Sara convulsed with a powerful orgasmic shudder and screamed into the stormy night as her body flung upwards, taking me as deep as I could go into her womb. Her sweet, hot love juices bathed my cock and as her cunt muscles wrapped themselves around my dick, enveloping me in her sweet, velvety folds of cunt flesh, I screamed my pleasure into the night as well and ejaculated a huge load of semen into Sara's welcoming, motherly cunt.\n\nWe held each other tight, hanging on to each other as we rode our mutual orgasm for what seemed close to another eternity...pleasure that seemed to simply go on with end...my cock throbbing with a sweet ache that only can come from sating one's own sexual appetites completely.\n\nExhausted, I slipped off Sara, kissing her until I absolutely had to begin gasping for air. Never had I felt so tired or so completely satisfied. My three witches now swarmed over Sara's still trembling body, showering her with kisses. The rain faded away as did the clouds. Just above the trees I could see the full moon descending...so radiant and beautiful...it's brilliant light echoing the beautiful energy of our lovemaking. I couldn't keep my eyes open. As sleep overtook me, I turned to see my three young witches making love to Tara's mother...my last sight being Tara kneeling between her mother's spread-eagled legs, her tongue licking up a thick streamer of my semen from her mother's pussy.\n\n#\n\nI awoke in softness, a high roof over my head. As I became more aware, I realized I was in a huge bed, covered up with a soft, homemade quilt and the warm, soft bodies of more than one woman Dark blonde hair peeked out from the quilt...Ashley lay sleeping on top of me. Cuddled up to me, her meaty breasts, mashing into my arm was Tara, softly snoring. One the other side of me, Sara lay, her head propped up my one hand smiling at me. I felt someone's warm breath on my stomach and understood where Lisa was.\n\n\"Good afternoon, Mr. Rob,\" said Sara. \"We've slept the day away.\" She leaned in and kissed me, her tongue rolling over my lips until I opened my mouth, joining my tongue to hers. \"I never thanked you for last night...that was...something else.\"",
        "\"What did happen...I mean...thank you too, you were wonderful...you all were. But...what happened?\"\n\nSara frowned slightly and bit her lower lip with what I suddenly realized was a gorgeous overbite. \"I'm not sure myself and I'm a priestess of the Lady. We call the night of the full moon, the Esbat...a holy night and the most optimum time for magic, but I think my daughter and her friends have been traveling down roads, I've barely ever explored.\"\n\n\"You mean sex magic?\" I said. I felt tired, but in a good way...the way you do after working hard at something you love or value...or like after incredible sex.\n\n\"Yes...I suppose. I've done sex magic before, but nothing like this...nothing that so invoked the power of the Lady and her consort.\" She blushed and smiled. \"It changed me...everything seems a little more clearly now...I'm understanding...perceiving the world a little more clearly.\"\n\nShe nodded at the mass of dark blonde hair under the quilt. \"I suspect it was even more powerful for her. Ashley offered up a great gift and I suspect we saw the birth of a future great witch and priestess. I've always felt that the Lady has great things in store for her, and my Tara and for Lisa.\" \n\nSara laughed. \"Leave it to my lusty daughter to find a way to make it incredibly pleasurable and sexy in the process.\" Sara shivered then and I sensed she was thinking back to last night and what had occurred. I perceived that she and her daughter had crossed into other virgin territory last night and that it excited her. I suddenly realized that the world was different to me as well. Even in this bedroom, the world seemed more vibrant and alive\n\n\"What happens now?\" I asked.\n\n\"I don't know,\" replied Sara. \"Things will unfold as the Lady wills it.\" She reached out and stroked my face. \"But, I believe that we have only begun, you and I and the girls. We've started down a path to an unknown future, but we will walk it together and I think there will be others to join us.\" Sara took my hand and placed it against her belly. Maybe it was the power of suggestion, but I felt...sensed the powerful pulse of new life there.\"\n\nWith wide eyes, I looked at Sara in amazement. \"You mean...last night, we made a....\"\n\nSara nodded, smiling a mysterious, motherly smile. \"I think so...I...whatever changed us last night...I just know. Do you...are you okay with this?\"\n\nI nodded, barely able to restrain myself from jumping up and shouting for joy.\n\nSara said, \"Good.\" She nodded her head towards the girls. \"That's good, because I think I might not be the only one!\" She again laughed. \"Don't worry, Mr. Rob...I know you'll be a good father.\" She leaned in and kissed me. \"Better take your vitamins, lover...you're going to be a busy husband and father.\"\n\n\"I can't wait,\" I almost shouted. Maybe it was what happened last night...but I felt completely content...as if I had been lost for years and now at last had come home..\n\n\"Shhhh! You'll wake the girls!\" teased Sara.\n\nI felt a shift of weight on my stomach and then a delicious sensation of wet and juicy lips on my weary, but willing and stiffening cock. Fingers began to caress my skin and we heard giggling from Ashley and Tara as Lisa began to suck my cock back to a full erection.\n\n\"Might as well lie back and enjoy it, Mr. Rob!\" giggled Tara, rising up and kissing me as I felt Ashley slip downward, her sweet, soft skin rubbing deliciously against mine. \"I warned you a long time ago...you're under our spell now, isn't he, Mom?\"\n\nSara smiled. \"Oh yes...you've fallen in with a coven of sexy, shameless witches, Mr. Rob and there's no escape.\"\n\nI groaned as Ashley's tongue joined with Lisa rolling around my cockhead and running up and down my shaft. \"I...mmmm...I can't think of anyplace I'd rather be.\" Both mother and daughter laughed and then Tara ducked underneath the covers as Sara kissed me again. \n\nAshley had told me that all gifts are returned three fold. She was wrong...the gifts that had come to me since I met my witches were too many to count. My life as I had known it was over...a new life, a new road beckoned and I couldn't wait to see where it would go.\n\nThe End?"
    ],
    "authorname": "Ahabscribe",
    "tags": [
        "witches",
        "younger women",
        "older man"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/mr-rob-and-the-witches-ch-02"
}