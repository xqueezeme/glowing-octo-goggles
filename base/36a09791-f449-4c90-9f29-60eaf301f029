{
    "title": "Pogo and Spooky",
    "pages": [
        "This is part of the world started in Shameless and continued in Monster. I'm posting it in LW because the rest of the story is already here. It'll make a lot more sense if you read the other two stories first. I typically don't write graphic sex into this story line and that remains true here. Special thanks to sbrooks103x for the editing. Any remaining errors are entirely mine -- probably added after his assistance.\n\nOne bottle of corn oil and one can whipped cream.\n\nI stared at the open bag resting on the polished bar in front of me, reflecting that this did not likely bode particularly well.\n\nHoward was looking over at me with a raised eyebrow, while across the room, Ex was failing to contain a smirk. Monster was apparently ignoring the whole thing while sipping neat rum; I was sure he was tracking though. He doesn't miss much.\n\nThe can of whipped cream was still cold, gathering moisture from the air, and the price tags were from Nomo's Market about three blocks away from the Shack.\n\nThis was seriously fucked up.\n\nOnly two people on earth other than me would have any idea about the oil and whipped cream. One died three years ago. And the other... well, I wasn't sure.\n\nI'm Poznac Godek, Sergeant Major, United States Army, Retired.\n\nYoungest son of a pair hardworking Polish immigrants; they'd gotten on the wrong side of the Warsaw Pact political ideology. Slipped out just ahead of the police and wended their way to the US.\n\nThey're the most American people I know, even if their accents are still heavy and the food very much Polish around the holidays. Still kicking and still hanging that Flag out every single day. And still proud of me to the core.\n\nI'm not sure how proud they would be of me if they knew what I'd had to do to protect the country they love so much. But they're pretty practical people, so maybe it wouldn't bother them as much as it does me.\n\nPoznac Godek is a mouthful, so it wasn't long before I was tagged with the nickname Pogo growing up. I thought I'd be leaving that behind when I joined the Army, but about 2 minutes and thirty-three seconds into Basic Training I was renamed Pogo. Again.\n\nJust like that damn possum in the Walt Kelly comic. Since I also have a slightly round nose and a thick brush of light blonde hair - which of course went completely white when I hit thirty - I was tagged for life.\n\nNomo had sent the package over just a few minutes earlier. He didn't take plastic and didn't take phone orders. Which meant Spooky almost had to be on the island. Three blocks away. Or less.\n\nTwelve years is pretty long time to bear a grudge, but Spooky might.\n\n***\n\nTwelve years ago, I'd taken leave to help a friend of mine, Eugene.\n\nHe'd been shot in a home invasion in Coal City, just outside Chicago.\n\nEugene and I were pretty close to inseparable in high school before I joined the Army and he joined the Corps. We were quite a pair -- the big black guy and the big blonde Polack - we'd chased girls, drank beer and barely passed Algebra together. We weren't exactly the top of the class, but we did manage to graduate. With the economy the way it was, there weren't a lot of good options and neither of us had the money for college, so the Army and the Corps were our only choices.\n\nWe'd stayed in touch, and met at least once a year to hang out, drink beer and bullshit each other. He'd left the Marine Corps Military Police after 8 years to open his own sandwich shop.\n\nHe loved being a Marine and liked being a cop, but Eugene had a thing about sandwiches. Always had. He made his shop the best sandwich shop anyone could dream of. Brick floor, oak counters and tables, brass trim, with Sinatra playing. Roast beef, pastrami, and dozens more, all on fresh baked bread with about a half million different toppings -- served with thick cut fries. No hard liquor, but you could get a damn good beer.\n\nEating there was an experience. A little pricier than Subway, but it was a destination for a real meal rather than a quick stop. Eugene really had a thing about sandwiches.\n\nHe was good natured, nice to everyone, and cooperated with the robbers as much as possible. Just wanted it over with nobody getting hurt.\n\nThat didn't work out. He was pistol whipped and shot through the thigh, shattering his femur.\n\nI had thirty days leave built up and headed out as soon as I'd gotten his phone call. We'd just come off a mission, so it was good time for leave anyway.\n\nEugene was sitting up in the hospital bed when I showed up.\n\n\"So, I guess the Corps forgot to teach you about those bullet things you're supposed to avoid.\"\n\n\"Been out too long, the bullet proofing must've worn off.\"\n\n\"So what happened?\"\n\n\"Got a case of stupid -- they pulled a bait-and-bitch on me. Shit, I even knew there was a problem in the area.\"\n\nI shook my head \"Anyone could fall for that. There's a reason it's a classic.\"\n\nThe \"Bait and Bitch\" or \"B&amp;B\" is a pretty standard robbery tactic. Harmless-looking girl either comes to your door or waves you down on the road. Gives you the big tearful eyes with \"my car broke down\" or \"I'm lost\" or \"I can't find my dog\" or whatever. The Heavy hangs out of sight until the door is unlocked, the car gets stopped, or whatever. I've used it myself to gain entry on targets countless times. Used to work it with an asset named Donna; that woman could seem helpless and harmless in about twenty languages.\n\nWorks a whole lot better than the pizza delivery scenario.\n\nHe shook his head, looking down. \"Still. I should've known better. I figured if I played along and let them take whatever, didn't make a fuss, they'd just leave, I'd file with insurance, everybody walks away and I go get myself a mastiff puppy. Lesson learned.\"\n\nI looked down at his leg. \"So how'd that work out for you?\"\n\nHe rolled his eyes. \"The asshole with the gun, skinny fucker, decided to crack me over the head and shoot me in the leg while I'm down. The girl was cussing him all the way out. She was pissed.\"\n\n\"Cops have a line on them?\"\n\n\"Doesn't sound like it. Actually it doesn't sound like they care that much. I'm still alive and they're dealing with unsolved murders. Got the JV team on it. I've got socks older than the team lead.\"\n\nI got it, I really did. He was alive, the victim of a couple small-timers. The cops had their hands full with bigger fish. Until the small-timers became killers they were on the back burner.\n\nStill, it pissed me off. Eugene was one of the good guys. Your tire blows out? He'd change it for you. Short of cash? Here's a twenty, you can get me back later. Even if he knew you never would.\n\nShit, he had a van, he would take \"extra\" sandwiches down to the park after the restaurant closed to hand out to the homeless. He stayed late and made those sandwiches himself.\n\n\"What're you thinking, Pogo?\"\n\n\"You need help with the shop?\"\n\nHe shook his head \"Nah, got a good girl managing it. I trust her. Great at keeping everything working and everyone listens to her. Just outta college but smarter than you and me put together.\"\n\n\"Doesn't have to be too bright then.\"\n\nHe grinned.\n\n\"She's my niece, but she's still brilliant.\"\n\nI shrugged \"Anything else?\"\n\nHe started to shake his head, but stopped abruptly. \"Pogo, I can smell it. They're just going to keep doing this to people, it'll keep escalating until somebody gets killed. Somebody innocent.\"\n\nI nodded.\n\n\"I think they might've picked me up at the ATM on 9<sup>th</sup> Street by the Laundromat. They knew I had cash, and that's the only place I can think of they might have known that from.\"\n\nHe was uncomfortable telling me and it showed in his voice. Over the years, Eugene had figured out more about my career than anyone other than me would probably be comfortable with.\n\n\"What am I looking for?\"\n\n\"Salt and Pepper. The Heavy is a skinny black kid, early to mid-twenties, almost six foot, right handed, some kind of brand on his right forearm, has a 1911, maybe a Kimber, in nine mil. The Bait is a pale little white girl, brown hair with a touch of red -- maybe 5 foot even. Eyes about the same color as her hair. Damn good at the puppy eyes, and I think she's actually running the game, even though he thinks he is. She tore his head off for actually shooting me. Even dialed 911 on the house phone and dropped it on the floor on her way out.\"\n\n\"A softy?\"\n\nHe looked at me from lowered brows. \"No. She has a hard streak. Got the impression she just didn't want me to bleed out and have the heat turned up with a homicide charge.\"\n\n\"Which means she likely isn't planning on leaving the area soon.\"\n\n\"She was a pro. Let him touch anything in the house he wanted, but even when she picked up the phone she kept her hands in her sweatshirt sleeves. Older than she looked; seems about 17 at first glance but maybe early 20s.\"\n\nHe looked out the window for a second. \"Pogo, don't kill them if you don't have to.\"\n\nI didn't answer that. I try not to make false promises, even implied ones.\n\nThe pain pills caught up to him about then, so after a few minutes, I headed out to find a place to stay for a couple weeks or so.\n\nHouse hunting is a pain in the ass. Even when you are looking in a somewhat crappy neighborhood there are usually too damn many questions.\n\nI finally found a place -- a slightly run-down single home, with a dirt floor basement. The owner didn't ask too many questions, and while it didn't have any appliances, I figured I could eat out.\n\nAnd it wasn't too far from an all-night Laundromat.\n\nI ditched my actual luggage and ID cards in the bus station locker and picked up some worn, but not shabby, clothes from the Goodwill store.\n\nMoving in was pretty painless, what with having no furniture and all. I bought a lawn chair, a blue tarp, some tools, some screws, bolts and a little bit of assorted hardware, and a sleeping bag. A few groceries, a Styrofoam cooler, a copy of Stephen King's \"It\" and a deck of cards pretty much completed my efforts.\n\nThen I began to hunt.\n\nIt really feels more like cane-pole fishing than hunting and it requires patience.\n\nI've got the patience for it, but it still drags. Move in as slowly as possible, become part of the pattern of life, the normal. Find the right look -- affluent enough to be worth targeting, poor enough not to be risky. Hit the ATM, pay cash for groceries. Move a little awkward, like you're getting over an accident or something. Predators and scavengers look for the sick and the injured.\n\nI almost missed her.\n\nI did miss her, to be honest. Damn, she was good. I only saw her because her accomplice had all the surveillance skills of a Fourth grader playing hide and seek.\n\nHe was tense and kept shooting looks at her to make sure she was where he left her.\n\nI could feel her aggravation with him. If she'd have been alone, I wouldn't have picked her up. Maybe she had been alone the day before. Or even for the last few days. She was a fucking ghost, sank right into the background. Spooky as hell. I let myself feel a flash of admiration for her skills. Gotta give the skill level a little respect -- it helps you remember to be a little more cautious around them.\n\nI stayed on script. Hit the ATM, pulled cash, headed to the little grocery.\n\nHe was still on me, although I couldn't see her -- but then I wouldn't. Damn, she was good.\n\nPissed me off a little -- and that always makes me a little crazy. I guess I just feel like I have to prove myself or something. Some warped form of jealousy or machismo or some shit. I started to veer off script a little.\n\nI grinned inside as I picked a small bottle of corn oil off the dusty shelf and pulled a spray can of real whipped cream out of the dairy section. Even got the name brand. Extra creamy.\n\nFuck 'em if they can't take a joke.\n\nI walked home the same way as always.\n\nHe was almost comically bad. It was like a watching a bad episode of \"Get Smart\"; I swear to God I kept expecting him to answer his damn shoe.\n\nShe, on the other hand, was still nearly invisible. Effortlessly disappearing into shadows and bad angles without looking remotely suspicious.\n\nI was at the house almost too soon -- I could have happily led them down a few more streets just to see how \"Spooky\" handled the changes in light and shadow. Just to watch her work. She was a natural.\n\nStill, it was time to get this road on the show.\n\nI slipped into the house and blocked the door -- if I was right, she would be cautious enough to wait fifteen to twenty minutes just to let me settle in and drop my guard -- but I couldn't be certain.\n\nSo I prepped everything as quickly as possible and settled back to wait for their arrival.\n\nShe was even more cautious than I expected -- it was nearly thirty minutes before she knocked on the door.\n\nI took two breaths and yanked the inner door open and popped the latch on the outer door for her. I didn't wait for her to talk and I didn't make real eye contact.\n\n\"Wow, you're early. Well, come on in. It'll be at least an hour before anyone else shows up.\"\n\nI promptly spun on my heel and started to walk toward the back of the room before the Heavy even had time to pop out of the shadows.\n\nI heard them move through the door, completely uncertain how to react.\n\nTheir hesitant steps betrayed their confusion.\n\nI suppose it really is understandable.\n\nHow often could they have had a stark naked man, coated in corn oil, holding a can of whipped cream, answer the door and act like they were expected?\n\nI kept talking \"You can leave your clothes in the back room, there's plenty more oil back there and some towels.\"\n\nI heard the door close, then the heavier steps started toward my back.\n\nThe Heavy was getting impatient.\n\nBad move -- if things seem off, they are off; figure out what is going on before you commit.\n\nI spun around to my right. His right as well. It's an old gunfighter's trick. That put me on the outside of his raised arm as he prepared to strike me with the pistol. The arm is weaker and slower to the outside lateral, slower to react. It's a little thing, a small difference. But knowing those little differences is how you get to become an old gunfighter.\n\nI'm not Monster; I don't have his natural ability, his speed, his absolute precision.\n\nBut I did train him. And the Monsters that came before him.\n\nI caught the upraised pistol with my left hand. Pushing it higher. He'd taken his finger off the trigger to pistol whip me and now my hand and wrist were in his way.\n\nHe had other problems anyway; he couldn't twist to punch effectively and my right hand had come up and he had a face full of whipped cream.\n\nI flipped the can over my shoulder as he tried to clear his eyes and lost his focus. I got my right hand on heavy pistol and slammed it back down between his eyes with all my strength, feeling his nose crunch under it.\n\nA couple more times for luck.\n\nHis eyes rolled back into his head as he tumbled backward, suddenly boneless. A mess of whipped cream and blood.\n\nFuck him if he can't take a joke.\n\nThe girl was already moving toward the door, but I'd put a spring latch at the top of the door; it'd latched automatically when she'd shut the door.\n\nA dollar twenty seven well spent.\n\nShe spun back toward me. No panic in her light brown eyes. Just cold calculation.\n\nI pointed at the open door to the basement stairs.\n\n\"Down the stairs, Spooky. Unless you think you can take me.\"\n\nShe actually considered it for a second.\n\nI raised one eyebrow. \"Really?\"\n\nHer eyes traced over me, lingering on a few of the more dramatic scars. Flickering over to her unconscious Heavy. The math just didn't work out. She shrugged and headed toward the stairs.\n\nI grabbed the lanky kid by hood of his sweatshirt and dragged him thumping down the stairs with us. She stopped in the center of the basement, looking in disbelief at the two graves waiting patiently for them.\n\n\"Why?\".\n\nHer voice was older than she was. Rougher, deeper. Maybe just a touch of cigarette smoke in it.\n\n\"Eugene.\"\n\nShe stared at me, lost. \"Who the fuck is Eugene?\"\n\n\"You didn't even bother to learn his name?\"\n\n\"Look, we didn't kill anyone.\"\n\nIt was my turn to shrug. \"You will. Eventually. It's just a matter of time.\"\n\nShe was desperate -- I could see that -- but she refused to panic. I felt another flash of admiration.\n\n\"I suppose Eugene is the guy Duarte shot.\" A statement rather than a question.\n\nShe continued, stone calm, contemplating the two graves. \"I knew that was bad news. He promised he wouldn't do it again.\"\n\n\"Really? You believed him?\"\n\n\"Not really. I was going to dump him after this one. Move on. He wasn't listening anymore.\" A small, ironic smile twisted the corner of her mouth. \"I was afraid he'd get us into real trouble.\"\n\nHer smiled skewed as she thought of something. \"So, the whipped cream?\"\n\n\"They didn't have a banana cream pie.\"\n\n\"We were that bad. A real joke, huh?\"\n\n\"Mostly him. \"\n\n\"You're the real thing, aren't you?\"\n\n\"One of them.\" I pulled Duarte's shoes off, dropping them in the grave. \"It's too bad, Spooky. You're pretty damn good.\"\n\n\"Really?\"\n\n\"Yeah, even when I knew you were there, I could only track you because knucklehead here kept looking around like a prairie dog.\"\n\nA little pride showed through, like a kid who'd just been praised by the teacher. \"I've always been good at that. You learn to be invisible in foster homes.\"\n\n\"You've got real talent.\"\n\n\"Thanks.\" A little wistfully.\n\nShe paused. \"Is that why you keep calling me Spooky?\"\n\nFuck me.\n\nI know better. Damn it. As long as I've been doing this, I damn well know better. Every farm kid on the planet knows you don't name them.\n\nI glanced over at her. She was still staring at the graves. Spooky had no idea what she'd just done.\n\nI hadn't even realized I'd given her the name until she asked about it.\n\nAnd now all I could hear was Eugene's plea for their lives in the back of my head. That's what it had been. He didn't want to be the cause of their deaths, he just wanted them stopped.\n\nI dropped \"Duarte\" by the closest grave and walked back over to the stairs and sat down to go over my options. I had a tool kit there, pulled it out and dialed the combo. Something to do to cover my disconcertion.\n\nShe looked over, confused. She sensed something had changed, but had no idea what. She let it be and waited patiently. Like I said, she was damn good.\n\nToo good. And too feral to let go.\n\nA small part of me argued that it wasn't her fault. Another part argued that it didn't matter if it was her fault or not. If I turned her in, she'd be out in 4 or 5 years. Worse than ever. Tougher, more experienced and with more anger.\n\nI had one option. If it worked. If they were taking strays.\n\n\"Give me your clothes, Spooky.\"\n\nA resigned look washed over her face and she began stripping. She obviously thought this was about something else, and she refused to react to it. I got the impression she'd been through something like that before.\n\nI pulled a utility knife out of the battered toolbox and began cutting her jeans into long strips. She watched warily.\n\n\"I won't fight if...\"\n\n\"Don't flatter yourself, Spooky. You're too young for me.\"\n\nI checked her sweatshirt over and flipped it back over to her.\n\n\"I just want to make sure you stay put while I check on something. Put the sweatshirt on, it's chilly down here.\"\n\nShe pulled the shirt on wordlessly.\n\nFor a moment as I was tying her up, I thought she was going to fight, but after that uncertain moment she stopped tensing up and let me finish without trouble. Her expression was unreadable as I lowered her into her grave.\n\nThe skinny guy was still out, so I tied him carefully then dumped him into the other grave on his side.\n\nI headed up the stairs, showered and dressed, then headed out.\n\nIt took three calls. Howard. Then call another number. Then wait thirty minutes by the pay phone in the Laundromat while I finished reading \"It\" under the raw fluorescent lighting. It rang just as I finished.",
        "The last call was brief. A familiar, but dusty voice giving cautious approval.\n\nThat was it.\n\nI headed back to the house.\n\nI paused at the top of the stairs. I could see her legs -- she'd managed to work her way out her bonds and climbed up and out of the grave, but was just sitting on the edge of it, legs dangling in. He was still lying in the bottom of his, still tied. Looking up at her in a mixture of anger, panic, and disbelief.\n\nI walked on down, and she glanced up for a moment to see if it was me, then went back to staring into the dark hole.\n\nShe didn't even move as I yanked Duarte up and out onto the basement floor.\n\nI left him there and dragged a cinderblock from its place under the stairs, then grabbed the worn ball peen hammer from the toolbox and dropped it by her feet.\n\n\"Now what?\"\n\n\"Now you save Duarte's life.\"\n\nShe looked at me with a tiny shiver, catching, no doubt, that I hadn't mentioned anything about hers.\n\nI pulled a cinderblock out and loosened one of his hands, leaving the other tied to his belt in back. He struggled, but that didn't really matter much.\n\n\"Pick up the hammer.\"\n\nTwo trigger fingers, two kneecaps, two ankles.\n\nWhen I took the hammer from Spooky's hand, I was sure she understood. She really had saved him.\n\nDuarte would do time in prison, but he'd be hard put to be dangerous when he got out. And when he stopped screaming into his gag, I made sure he understood.\n\nMonsters are real.\n\nHe'd been a scavenger pretending to be a monster, but he'd never be one. Ever. He just didn't have it in him. And if he ever tried again, a real Monster would come for him. I'd make sure of it.\n\nWe waited for another six hours down there. Mostly staring at each other. Duarte was curled up on his side, refusing to look at Spooky or me.\n\nI heard the door open upstairs and led Spooky slowly up. Still just in her sweatshirt.\n\nDonna was standing in the center of the room, flanked by her human Dobermans.\n\nShe looked over Spooky, down at the discarded can of whipped cream and smiled humorlessly.\n\n\"You still know how to show a girl a good time, don't you?\"\n\nShe didn't wait for my response and stepped toward the girl, unrolling the black, eyeless hood in her hands.\n\n\"Wait\"\n\nA small voice, more timid than she'd ever used, I think.\n\nDonna cocked her head to one side slightly, eyebrow raised as Spooky turned toward me.\n\nShe cautiously reached up and pulled me down a bit to kiss her.\n\nShe let go slowly. And stepped toward Donna looking over her shoulder.\n\n\"I'm not too young for you, you know.\"\n\nWe looked into each other's eyes as Donna slid the hood over her head.\n\n***\n\nI'd dropped Duarte off in the park with the now-broken Kimber in his waistband.\n\nHe ended up doing four years. Eugene intervened on his behalf, got the charges reduced a bit, and even gave him a job at the sandwich shop when he got out of prison. Like I said, Eugene is one of the good guys. Duarte died of diabetes, of all things.\n\nThat's probably partly my fault. I suspect exercise was more difficult for him than most. Sorry, Eugene.\n\nSo that just left Spooky.\n\nI didn't miss her this time. She walked in the front of The Shack like she owned the place, a single piece of airline luggage rolling behind her.\n\nMonster actually actively tracked her -- recognizing another predator instantly.\n\nShe came straight to the bar and pulled herself up onto a stool.\n\nThere was a smile in her eyes -- more life than she'd had when we parted. More, maybe, than she had in her life up to that point. I recognized it. She had purpose; she had reasons to do what she did, real ones, with real meaning.\n\nIt's a hard life, but for some it's the best possible one.\n\n\"Took me eight years to get your name out of Donna. And four more to get your address.\"\n\n\"So what now?\"\n\n\"I was wondering if we couldn't find a different use for the oil and whipped cream this time.\"\n\n\"Couldn't find a banana cream pie?\"\n\nPost Production Notes: A short one to ease some frustration. An acquaintance of mine was shot in a home invasion a couple weeks ago and I've been helping unfuck his life as much as I can. Like Eugene, he's a big guy and very capable, but fell for the B&amp;B. Unlike the story, the cops have been on the ball and made his case a priority -- and have been very competent. But the damned mundanity of the situation is driving me up the wall. It's ops-normal these days. I almost took Monster out for a walk on this one, but that'd have been a one paragraph story. "
    ],
    "authorname": "Todd172",
    "tags": [
        "violence",
        "romance",
        "the shack",
        "monster"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/pogo-and-spooky"
}