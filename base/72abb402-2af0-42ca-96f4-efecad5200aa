{
    "title": "Grief",
    "pages": [
        "The silence during the drive was consuming the attention of the couple in the vehicle. Ray Thompson gazed ahead lost in his private thoughts. Surreptitiously he would allow an occasional peripheral view at his wife, Marilyn. She was concentrating on looking out the passenger side window at whatever caught her interest. Whenever she thought it was safe she would focus on the hazy reflected image of her husband from the passenger's window as the miles continued to pass away.\n\nSubconsciously as only married couples could do, little signals known only to Ray and Marilyn would tip off each other when one would decide to gaze at the other. That allowed the other to divert their attention and preclude the couple from the admission of observing their respective spouse.\n\nThis well established practice had been ongoing in the Thompson household for a long time. Communications between the two had devolved into formal polite snippets of any topic that needed to be addressed.\n\nWe are so goddamn cordial, Ray Thompson thought as he allowed his vision to linger on Marilyn, dressed in her black dress, wearing dark silk stockings. Her legs crossed at the ankles; ladylike, her profile was mostly of her posterior as she continued to turn away from her husband. Her raven dark hair nearly matched her dress as Ray looked abjectly at her cheek, her jawline, a faint glimmering of her lips. These were the only portions of her head subject to his view.\n\nAh, but her body, that exquisite feminine body that attracted him in college was still amazing to him; even though all Ray could observe was her back tapering down to her hips and the soft swells of her buttocks merging into the car seat.\n\nNo matter, he had committed to memory every inch of her body by vision and by touch. Hell, it went further than that. He had tasted every portion of her and breathed in her scent for the nine years of their marriage. He honestly believed that if you blindfolded him and just allowed him to place his head on her torso, he could pick her out from her heartbeat, her breathing pattern, her scent, the texture of her skin...\n\nRay felt the guilt of betrayal for his thoughts of Marilyn. How can I even be thinking about her right now? Hadn't she made it plain by her words and her actions where I stood in the great scheme of things? It was just something else to mourn now. Another loss, another heartache, another numbing pain of a void that couldn't be filled.\n\nThese were feelings that Ray had to entertain for too long a time now. What has it been, sixty two months? Sixty two months of living in agony every day. He kept a daily tally, this made day number 1,865 of his personal hell. Would the events now come to a speedy conclusion? Would he get closure regardless how painful? Would he ever feel like breathing again?\n\nMarilyn Thompson sensed that her husband's attention diverted away from her. She took a quick glance at the hazy reflection in the glass for confirmation and now she began to study the man she had committed herself to so many years ago. Her emotions were in flux. There were so many good things to remember and there were too many bad things to forget.\n\nWhy won't he give me the support I need? She thought, why did I ever have to go looking to get such a basic human need? Then, her conscious weighed in and asked if she had provided that same need to her husband. In irritation at the self examination, Marilyn focused on the sad stoic visage of Ray's face. She knew the torment he was undergoing was matched by hers. \n\nShe wanted to gather the courage to initiate a dialogue. But every time she had attempted in the past year she had been rebuffed. And every time Ray had clumsily tried to discuss things with her she had retaliated and closed him off. Now the relationship consisted of only inane insignificant conversations, cold politeness, and guilty consciousness.\n\nIt hadn't started that way. Once there had been such a blinding love between the two. Once there had been the bond of two people into the bliss of a single entity of happiness. They were one and the same, even before they underwent the rite of marriage. Neither could endure the pain of being separated from each other.\n\nWhen they looked into each others' eyes while they exchanged their wedding vows, both thought they could never exceed the love they had for one another from that day forth. \n\nThey were wrong.\n\nFourteen months into the marriage, on Christmas Day saw the arrival of Rachel Lee Thompson into their lives. Now, both knew that life would never be the same and they felt the completion of their souls into a cherished trinity. \n\nMarilyn, remembered the stunned look of awe on Ray's face as he first glanced at his daughter in the delivery room. Then his face morphed into the sweetest look of adoration as he looked at Marilyn exhausted from the efforts to give birth first cradled the mewling newborn in her arms and began crying tears of joy. That caused him to join into the cascade of tears as the three huddled together briefly before the delivery team took charge of the post delivery procedures.\n\nThat began Marilyn and Ray's journey to become the perfect parents. They bought and read every book on child rearing. They scanned every night on the internet. They talked to every friend and family member they could. The anxiety they went through was endearing as well as exhausting. Finally, they compromised on trusting the most practical authorities; their mothers.\n\nFrom almost hourly calls, the two grandmothers were able to alleviate the fears and concerns of the new parents and at the same time began the process of spoiling their beautiful little granddaughter. Marilyn's parents were so enamored by their granddaughter that they moved cross country to live nearby. So life began in the Thompson household and each day was a wonder of discovery with their child.\n\nThe feedings, the sleep cycles, the diaper changes. The quiet rockings at 2:00 a.m. to hush the baby with a soft lullaby. The rapt attention of watching the baby prone on their living room floor as she struggled to get on all fours.\n\nThe increase in height and weight, the doctor's visits and vaccinations, the photographs of the baby using every gift bestowed at the baby's showers and copies sent along with the thank you notes to the donors to show the appreciation of the gifts. The video recordings of each landmark event. The steady coordination of hands and eyes and muscle control.\n\nThe blessed look of recognizing her parent's faces and voices went they came into her view and beaming a smile and the little body thrashing about.\n\nThe first crawl, the first sounds, the first gripping of fingers. Baby foods and spillproof bottles. \n\nThe first time she said \"Momma,\" which brought tears to Marilyn and Ray.\n\nStanding up and then plopping back down on her butt. Each day bringing a little more progress and endurance. Then that first hesitant step. Soon, they would keep a distance away to encourage Rachel to walk to them. The celebrations of each successful trek. The agony of teething.\n\nThe increase in vocabulary and the pleasure of trying to interpret Rachel's desires. The Terrible Twos' Era and potty training. The purchases of new outfits to accommodate Rachel's growth. The third and fourth birthdays' celebrations with a gleeful Rachel's face smeared with chocolate cake.\n\nAll these and the thousands of others things that impacted their lives just as they do every set of parents. And like every set of parents, Marilyn and Ray were sure that their child was the smartest and most beautiful baby ever born. Because everybody wants their child to be special. Unique. And Rachel Lee Thompson was unique. She had something that tens of millions of babies would never have. \n\nLeukemia.\n\nMarilyn recalled the devastation she had felt when she and Ray sat in their pediatrician's office as the doctor tried to balance his concerns and assurances to the couple. There were a few disturbing results on Rachel's latest examination. Nothing major...just some things that warranted running some tests...\n\nThen another consultation...and an even more concerned look on the doctor's face...more tests...more disturbing results...then the vagueness of a referral to an oncologist. And the zombie like reaction of Marilyn and Ray walking out of the pediatrician's office with Rachel walking between them holding both their hands, oblivious to the shadow of the events.\n\nThe initial consultation with the oncologist...more tests...more dread...then came the pronouncement of that awful word...Cancer. The oncologist's pronouncement was like a judge handing down a death sentence. Marilyn became hysterical in the office and Ray wasn't far behind.\n\nThe seasoned oncologist had seen it all too many times before and used his experience to assure Marilyn and Ray. He cited the advancement in treatments, the specifics targeting of cells, the increase in survival rates. Rachel would receive the best care to be offered. He emphasized that he and his staff of doctors and nurses would leave no stone unturned in treating Rachel. They would all unite and battle this insidious disease.\n\nStill after they left the office and sat with Rachel in her bedroom, both of them holding her and crying. And poor little Rachel sat there on the bed smothered by her parents, wondering why her parents were crying. The unknown fear, in turn, caused Rachel to cry, which cycled into even more crying by her parents...\n\nMarilyn began shedding tears again in the vehicle. She brought out a tissue from her purse to wipe her eyes without fumbling for one. After five years of practice, she had enough experience not to waste any time or motion in grasping one.\n\nThe motion caught Ray's attention and he wondered again if he should try to comfort his wife...But now, Marilyn had found her comfort elsewhere, he thought glumly. And, in truth, so had he...\n\nHe though back through time, looking once again in the chain of events that had got them to this point. He remembered how they had sat and talked and rehearsed how they would broach the subject with Rachel.\n\nHe remembered how Marilyn so calmly began telling Rachel that she was sick and that they would have to go see a lot of doctors and hospital visits, before Rachel got better. Ray was a quivering mass of emotional jello, but taking his cue from Marilyn he began assuring Rachel that she would be okay. Her mommy and daddy wouldn't let anything bad happen to her.\n\nGod, what a lie that turned out to be. All the medications, all the shots, all the chemo...that fucking chemo. Watching Rachel bravely endure it all. Trusting in blind faith that her parents wouldn't do this to hurt her.\n\nHis poor baby coming home from a treatment and not having any appetite. The heartache of holding a wastebasket by his baby's bedside while she vomited and retched into it. The pallor of her complexion as she wasted away. Her hair, that shiny black hair that she had inherited from Marilyn falling away in clumps from her scalp.\n\nHe remembered how upset Marilyn and Rachel had been when they decided it was time to shave Rachel's head. He told them to hold off until he got back. He drove until he found the first available barbershop. He went in and requested that they shave his head. \n\nHe felt weird coming out of the barbershop, the tingly sensation of the air breezing on his bald scalp, the curious looks of people seeing the pale white scalp clashing against his tanned face. When Marilyn and Rachel saw him, they were in shock and the amazement morphed into laughter as first Rachel and then Marilyn insisted on feeling his head.\n\nHe relished the soft caresses of Rachel as she asked if it hurt to have his head shaved. He told her it didn't hurt a bit and that eased some of the concern from Rachel. Then he saw the pure look of gratitude on Marilyn's face at his sacrifice. \n\nThe vehicle stopped at a redlight and Ray's musings were interrupted. It had been a long time since he had seen a similar look on Marilyn's face.\n\nBy coincidence, Marilyn at that same moment was recalling Ray's haircut. He had done that to help her baby. But then, Ray had always been there for Rachel...and for her as well... It had only been his quiet courage that embolden her to do what she did.\n\nShe made an emergency appointment at her hair salon and walked in and told Antoine what she wanted done. For close to twenty minutes Antoine begged her to reconsider, but, her mind was made up. She finally explained why she wanted it done and with tears in his eyes, Antoine agreed and soon she was startled at the large mirror showing her bald face.\n\nThe other stylists and their customers were also crying since the story had been relayed from station to station. Antoine gave her a hug as she left to go pay for his services. She was stopped at every station as the other stylists insisted on hugging her as well. Even some of the other customers insisted on hugging her.\n\nWhen she finally got to the counter to pay, she was informed that Antoine had told them not to accept payment from Marilyn. Marilyn was insistent on paying, but, Antoine was adamant that Marilyn did not owe for the service. Marilyn felt humbled by the act of sympathy from Antoine and the others as she walked out of the salon. As she walked through the parking lot, she heard some loud guffaws coming from a group of teenagers pointing toward her. She just braced herself from their ignorant ridicule and reminded herself what was important. The show of solidarity with her husband and her daughter.\n\nHer husband's act had brought laughter; hers had brought tears as Rachel realized she wouldn't be going through the ordeal alone. As Ray hugged her, he whispered, \"Oh baby!\" as his hands explored his wife's shaved scalp. She whispered back, \"It's okay. It will grow back.\"\n\nThen she smiled and told him, \"It just means you are going to have to buy me and Rachel all the Hermes' scarves we want as our hair grows back.\"\n\nAnd bless his heart, he did exactly that. Each day, he would bring home two boxes. A scarf for both of the women he cherished and Marilyn and Rachel would model and trade scarves on a daily basis. The times that Rachel felt well enough, they would go out in public, not heeding the looks, they drew. They were united in their love.\n\nAt least, that was how they started. \n\nRay and Marilyn knew from the outset that Rachel's disease had increased the level of stress in their lives. Every night, in bed they talked on how to deal with the daily situation as they held each other. Sometimes, they would end the conversations making love into the night. Sometimes, they would just hold each other silently until sleep overtook them.\n\nEach day, they would go to work and the first order of business was to relate the news of Rachel to their co-workers. Marilyn was employed as a graphic artist in a mid size business firm that employed about fifty people. Every morning after she finished relating the events of Rachel, her co-workers would always remind her to call them if she needed anything. She always responded that she would, but, she never figured she would do so. She had a strong support group of co- workers, family, friends, and neighbors she relied on. While, she appreciated the offers, she never quite let people know what she was really feeling. She would allow herself to be the center of attention and allow people to fawn over her, but no one grasped her really. How could they, unless they were in the same situation? She quietly did her job and went home and relieved her mother or mother-in-law from babysitting duty.\n\nRay was the youngest associate in a law firm. While the partners were sympathetic to his plight, the bottom line was Ray was expected to produce for the firm. As long as he produced billable hours, the partners would be happy. Ray, relied on his secretary, Karen to keep him on the straight and narrow. So every morning, she would bring him a cup of coffee and asked him how he was doing. He would spend a few minutes with her sharing personal time, until, his calls and appointments came in.\n\nAnd that, in a nutshell was how the Thompsons managed to get through from day to day on the emotional roller coaster of their lives. Often, the daily routine was interrupted by a particular procedure that Rachel would undergo and both would drop everything to tend to their daughter. Then, they would go back to their employment to frantically mend fences and play catch up.\n\nTime has a way of eroding everything. And unknowingly, minute by minute, time was eroding away at Ray and Marilyn's marriage. It was so minute that neither was aware there was a problem as they began to drift away from one another. They continued to be there for Rachel every minute they could. They delegated errands and chores between them in whatever fashion would be to Rachel's benefit. Getting Rachel well was the main priority in their lives.\n\nThe strain of stress subtly began to throw grains of irritation into their relationship as they silently continued to strive to get Rachel healthy. Still, they labored from day to day; the priority was Rachel. As long as, Rachel was on the mend and happy; then Ray and Marilyn were likewise.\n\nThe good days brought false hopes; the bad days were minimized in significance. Still stress and time grew the grains of irritation into resentments. First there was a procedure that Ray could not attend due to a conflict with an appointment. Marilyn fumed at him as she waited at the hospital alone in the bland reception room. Then he came rushing in with an anxious look on his face asking her how Rachel was doing. She brusquely responded that she hadn't been given any news, yet.\n\nThe harshness of her tone made Ray step back from anymore questions as he meekly sat by her and waited together. When they got home, she apologized and they made up for the argument in a mutually satisfying manner in bed.\n\nBut little by little, there were other little slip ups which brought out one or the other to lash out. And soon the make up sex was slowly dwindling away. Ray found himself every morning venting to his secretary, Karen Ferguson.\n\n\"I swear Karen, it is like I can't do anything without her finding fault in whatever I do.\"\n\nKaren gave an encouraging emphatic gesture for Ray to continue.\n\n\"Marilyn got upset that we made the doctor's appointment with only ten minutes to spare. When the hell have you've ever gone to a doctor's appointment and got taken at the appointed time? Never! Am I right?\" Ray continued to pace around his office as Karen continued to track her attention on him.\n\n\"So, of course, we wait half an hour before we even get taken back to the exam room. Then as soon as Rachel gets out of earshot she unloads on me! I mean, I got enough on my plate, I don't need to have this crap going on!\"\n\nKaren soothingly interjected, \"Mr. Thompson, you just need to sit down and talk to your wife. You have too much invested to let things get away from you. Just take some time and explain that you are doing the best you can and that you know she is doing the best she can,\" Karen interjected.\n\n\"I hear you Karen and I'm trying, I'm trying really hard, but some days it just gets the best of me, you know?\" Ray sighed, \"Well thanks for letting me blow off some steam and vent. I guess we better get prepped on the Jones' contract now.\"\n\n\"You're welcome, Mr. Thompson. Anytime, you feel the need to talk, just buzz for me.\"\n\nRay watched the attractive secretary walk out of his office. I'm lucky to have such a sensible secretary working for me, he thought. Lord, I dread the day she comes in and tells me she is going to quit to get married. As good looking as she is, she's got to have plenty of offers. Maybe, I need to give her a big raise to keep her from leaving.\n\nAcross town, an obvious upset Marilyn furiously worked on her latest project. Her supervisor, John Tullos, quietly walked over to her cubicle and studied her computer screen. Marilyn felt discombobulated by the close scrutiny as she continued to work through her problem. After a minute of studying Marilyn's monitor, John Tullos reached over and deleted her project.",
        "\"What the hell, John?\" Marilyn protested. She was frustrated that an entire week of her work had been sent arbitrarily down the drain.\n\n\"My office, Marilyn.\" John began walking away from Marilyn and her neighboring co-workers found reasons not to look at John walking to his office or a flustered Marilyn preparing to follow him.\n\nAs she entered, he ordered her to close the door and sit down. She complied and now nervously awaited why she had been summoned.\n\n\"Marilyn, I realize you are undergoing a lot of stress right now. The problem is that it is starting to impact on your work. It didn't take me thirty seconds to see that you totally had the parameters all wrong on your project. You've apparently been missing it for a week.\"\n\nMarilyn was flustered from John's revelation. She started to stammer an apology. John held up his hand, \"It's okay, Marilyn. We got plenty of time to correct and get the project in the allotted time frame. What I'm worried about is you. You are the best person I got out on the floor and when you suffer; we all suffer. As I said, I know that things are tough for you. Tell me what I can do to help? Do you need time off? Would you like to take a sabbatical? Do I need to assign you an assistant? What do you need Marilyn, talk to me.\"\n\nMarilyn stared at the floor, \"John, I'm sorry I messed up. I got so much going on right now. The doctors are talking about replacing bone marrow and we are in the process of looking for suitable donors and all I can think about is that it is just going to mean more pain for my baby! Ray is going to be the first donor and the other day I got pissed off at him because I thought we were going to be late getting to the doctor and I chewed him out. My husband is trying to save my daughter's life and all I can do is pick a fight with him.\"\n\nMarilyn paused as she fought to regain control of her emotions.\n\n\"I need to work, John. We have to have the medical coverage for Rachel. But, I also need the diversion of not seeing my daughter sick so I can keep my sanity. I know that doesn't make any sense to you, but it is the truth.\"\n\n\"Marilyn, it does make sense to me. I never told anyone here at the office, but, I lost my father to cancer when I was a child and I remember how it affected me and my mother. She had to do the same thing, work to keep her mind off it. I would spend all day playing outside, so I didn't have to see him wasting away in his bedroom. Funny thing is I now realize he didn't resent me doing that. He didn't want me to see him in that shape either.\" John quietly said.\n\n\"Marilyn, I know you internalize everything because I recognize you doing the same thing that I do. But it is okay to talk to someone. And if you ever need to talk to someone give me a call. I'll help you in any way I can. Now what you need to do is go make things right with your husband. \n\nSo, get out there and reprogram your project and I'll get Teri and Frank to help you out. I'll help review the progress and we will get this behind you so you can go tend to your little girl. Is that a deal?\"\n\nA relieved Marilyn stood up and smiled and said, \"Thank you, John.\" As she walked out of his office, she thought how lucky she was to have such an understanding boss.\n\nChristmas came around and Rachel celebrated her fifth birthday. She was surrounded by all her family; parents, grandparents, uncles, aunts, cousins when the birthday cake was presented. She made her birthday wish after everyone sang Happy Birthday and Marilyn had to help the weakened child blow out all the candles.\n\nWhen she was asked what she wished for, she responded that she wanted a White Christmas. No one tried to tell her how rare it was to get snow in their region of the country. They instead diverted her attention on the double load of gifts she got for her birthday and Christmas.\n\nRachel spent the day ripping through presents as everyone ohhed and ahhed over them. Ray moved around stiffly trying to videotape the event. He still hadn't quite recovered from the bone marrow procedure. He thought back on the torture he underwent and he knew that Rachel had been subjected to the same pain. He teared up from the memory and it caused his eyes to blur through the viewfinder. \n\nHe quickly handed the camera to Marilyn so he could recover. He ran his hand over the stubble of hair growing on his head. He and Marilyn were willing to remain bald for Rachel's sake, but, she told them that she liked them better with hair. He looked at his wife and saw her hair was also beginning to grow back. It will take a while to get back to the length she preferred, he thought. Still it would take a long time to approach the length when he first met her.\n\nGod, I still remember that like it was yesterday, he thought, delving into the memories of his college years. He and some of his hometown buddies had banded together to lessen the stress of the startling transition to campus life at a large university. The funny thing was he didn't particularly care for some of the guys in the group, it was just a safety in numbers thing.\n\nThe gang, along with a few stray roommates tagging along had decided to attend a freshman party. The more brazen of the guys quickly went solo into the target rich environment of young, good-looking females who similarly had huddled together for mass protection. \n\nRay watched enviously as more and more of the guys would see someone that struck their fancy and go make a move on them. Ray wasn't built that way. He knew if he went and tried to talk to a pretty girl out of the blue he would stammer and babble and ultimately convince her that she was talking to a certified idiot.\n\nNo, for Ray, it would require getting to know her and getting comfortable being around her. Then, he could let down his guard and begin to show his best attributes; compassion, consideration, empathy, humor, kindness, loyalty and other qualities that weren't meant to be seen in a glib moment's glance.\n\nStill as he watched guys getting shot down in flames he wondered if he would ever find someone he was meant to be with. He noticed several of his buddies had gotten past the initial introduction stage and were having animated conversations with the clusters of girls and fingers were pointed in the guys' directions and female eyes were gauging the various males.\n\nRay realized that it was likely that he would be paired up to an equivalent wingman...(or should that be wingwoman?) and while his input would be considered, the collective consensus of the group would be the determining factor...at least for this initial meeting.\n\nSlowly the converging groups of males and females merged by osmosis and names and introductions were given in the din of the party. It was amusing to see the frantic looks of everyone's faces trying to match names to faces for the remainder of the evening.\n\nIt was also clear to see which pairings were off to a good start and those that were doomed from the beginning. Ray was lost in the swirl of the group when a girl he had been introduced to by his roommate collared him and said, \"Ricky, I want you to meet someone!\"\n\nHe couldn't remember the name of the girl either, but he felt irritated that she had forgotten his name, especially when she presumed to know him well enough to introduce him to someone. Simultaneously, as he was saying, \"It's not Ricky, it's Ray!\" The benefactor was melding him close to someone and said, \"Mary meet Ricky!\" The unknown person was similarly frustrated as she said, \"My name is Marilyn; not Mary!\"\n\nAnd in that convergence of time and space, Ray was stunned to see the dark-haired beauty as he offered his hand for an introduction. My God, how did I not see her before! He thought as he focused on her. She was roughly, five feet, ten inches; dressed in a simple floral print dress which still managed to show off her fantastic body. Her shoes were sandals, so as, to not intimidate any males by wearing heels. Ray had the sudden realization that with heels on; he would be looking at this bewitching girl at eye level. Sea green eyes that threatened to unsettle him. Eyes that would take a lifetime to worship.\n\nAs her warm soft hand slid into his, she beamed a smile and she shook her head sending the waves of long, silky, jet black hair away from her face as she said, \"Hi Ray, it is nice to meet you.\"\n\nAnd in truth it was nice for Marilyn to meet Ray. She had immediately regretted agreeing to come to the college mixer. \"Come on Mary, it will be fun!\" her roommate said. She was exasperated. For three days she had shared a room with three other girls and they STILL couldn't get her name right! But, finally they wore her down and she agreed to go and it was just like high school.\n\nAs soon a boy saw how tall she was; they veered away from her to keep from hurting their fragile egos. She had undergone a series of subtle rejections as boys would ask various girls around her to dance; yet, ignore her. She knew, despite her height, she was attractive, and more important, she was smart and articulate. Yet, for all that, she wondered whether she would be seen as an object of ridicule in college as she had been in high school.\n\nShe knew none of the other girls ever had to spend their high school weekends dateless. She knew none of them were so desperate to go to the prom that they accepted the only invitation offered. She knew that none of them went with the shortest boy in their class, which caused her classmates to snicker when they posed for the prom picture. She knew none of them were dumped by their prom date once the wager was won by her date for taking her out to the prom. She still had the image of the runt walking through the crowd waving the dollar bills victoriously over his head to the shouts and accolades of his buddies.\n\nShe thought college would be a fresh start and so she opted to go cross country to go to school to get away from her past. But, apparently that wasn't enough. Boys were not going to give her a chance at college either, she thought when her roommate incorrectly introduced her to another boy that was sure to flee at the first chance.\n\nThen came the pleasant surprise of seeing a very attractive guy looking at her with interest. She smiled as he stammered his name to her and she corrected her roommate's mistake and told him her name. Instead of immediately commenting on what the weather was like up there, or some other infantile height joke, Ray began asking her the obvious questions; where was she from, what was she majoring in, how did she like school.\n\nBut after satisfying those questions, he continued to stare at her with those green eyes lasered in on her with rapt attention. She realized that he was desperate to keep the conversation going with her. This was an unexplored sensation for Marilyn and she reveled in his attention.\n\nShe could tell Ray was frustrated having to engage in a conversation while competing with the excessive noise level at the party. He leaned into her and said, \"Would you like to go to Sally's and get a cup of coffee?\" She smiled and immediately agreed. They walked out of the chaotic event and began talking in normal tones as they walked to the nearby coffeeshop.\n\nThey walked at an easy pace and topics of conversation segued as they entered the shop. Ray automatically held her chair as Marilyn sat down. It never dawned on him to worry that Marilyn would think of him as a chauvinist. And Marilyn never felt that Ray was treating her as a second class citizen while they continued to talk.\n\nThe truth was they instinctively felt comfortable around one another. The waitress that served them would have sworn the couple were in a long term relationship rather than just meeting one another an hour ago. Smiles and laughter were present the entire time as they continued to ignore the other customers until they were informed it was closing time.\n\nAs Ray walked Marilyn back to her dorm, he saw her shiver slightly in the chill of the night. He quickly took off his jacket and draped it around her. Marilyn relished her first time to wear a boy's jacket. She had to endure too often watching the girls in high school wearing their boyfriend's letter jacket as a claim and commitment. Now she was hoping that she was being claimed.\n\nA moment of panic seized her, Oh my God am I imagining things? Maybe I need to slow down before I run him off from me, she thought. But the ever present look of interest in Ray's eyes as they walked in the gleam of the nightlights assuaged her concerns as she cradled herself into the warmth of his jacket.\n\nRay was oblivious to the cold. His primary focus was studying the bewitching figure walking alongside him. All too soon, they had arrived at the dorm building where they finished their conversation and for a brief moment both hesitated as they grasped for a solution to end the night. Ray desperately wanted to kiss her, but wasn't sure how Marilyn would react. \n\nHis focus was to ensure that Marilyn would be receptive to seeing him again. He knew he had to see her again. Marilyn tentatively held her hand out, but she was hoping for so much more as she searched his eyes. Ray gripped the offered hand and in the scant seconds where they uncharacteristically fell silent, they both subtly moved toward each other and gave a soft light kiss to end the night.\n\nAs Ray watched Marilyn disappear into the building, he was aware that he was already yearning to see her again. Marilyn walked into her dorm room where her anxious roommates were waiting. \"Mary-uh Marilyn, where have you been? You disappeared from us without telling us where you were going!\"\n\nGood, Marilyn thought, they were finally recognizing her name as she reluctantly shed herself out of Ray's jacket. She smiled and held the jacket and sniffed the scent. \"Where did you get that?\" asked one of her roommates.\n\nShe beamed at them and said, \"I got this from the man I'm going to marry.\"\n\nAcross the quad in Ray's room, he was undergoing a similar interrogation. \n\n\"Damn, Ray, one minute you are there and the next time I looked up you were gone! Where the hell did you go?\"\n\nRay could only grin as the questions from his roommates escalated from their curiosity. As guys are wont to do, the questions soon devolved from curiosity to ribald to down right crude.\n\n\"Ray, if you got a piece of that tall girl's ass you were with, I hope you broke her in for me, even if I will have to get a stepladder to screw her!\" joshed Henry. \n\n\"Yeah, Ray, I would love to play periscope with those tits!\" Adam laughed as his hands pantomimed peering closely into the large tits of an imaginary girl. \n\nThe room broke up into laughter until everyone came to the uncomfortable realization that Ray was not amused. As the laughter finally died off into uneasy silence, Ray spoke.\n\n\"Henry, you and Adam have been my buddies since elementary school. If you want to stay that way, then never say another disparaging word about Marilyn, or I'll kick your fucking asses.\"\n\nThe icy calm which Ray quietly employed the threat brought home the realization that a line had been drawn and Ray would tolerate no trespass. Uneasily, the boys drifted off to bed. Ray, remained awake late in the night bringing up images of Marilyn.\n\nThe next day in class, Ray was lost at sea as he ambled from one lecture to another. Thank God, none of the professors called on him. There was no telling what answer would have came from his befuddled brain.\n\nMercifully, the afternoon ended and Ray found himself at the Student's Commons sitting at an empty table. His cellphone was being toyed in his hand as he debated what to do. Even though, he didn't have that much practice with relations with girls, he knew the rule was you wait three days before calling them. He never questioned why it was a three day period. He supposed it allowed both parties to engage at a neutral level.\n\nWhat if I call Marilyn? Would it scare her off? Would she be happy to hear from me? I need a reason to call! How do I explain why I am calling? \n\nThose thought and others flooded into Ray's analysis as he swayed from fear to desire. GAAAA, he thought, why is it so damn tough to do this, he wondered as his hand finally found the nerve to dial Marilyn's number.\n\nMarilyn was studying in her room. Well...she was trying to study in her room. All day long, her thoughts were of the wonderful evening she had spent with Ray. She had gone to bed clutching his jacket and drifted to sleep, comfortable in the subtle security of his scent on the leather.\n\nWhat possessed me to tell those girls I found the man I was going to marry, she fretted. It was only one meeting, just a cup of coffee. How did I build this up? Am I that damn desperate? Hell, I probably scared him so bad that he still hasn't stopped running. \n\nBut then...there was that kiss. That wonderful gentle spark of connection. That instinctive desire to continue. God, he had to feel it as well, Marilyn thought as she tried to concentrate on her English Lit assignment.\n\nSuddenly, her phone started chirping. Strange, it wasn't time for her weekly check in with her parents. She wasn't expecting a call from her roommates since they were down the hall visiting some other girls.\n\n\"Hello,\" she enquired. Ray was instantly transfixed by the voice as he mentally drew up an image of Marilyn to go along with the voice. In a panic, he realized he forgot the preconceived dialogue he intended to use.\n\n\"Uh, hi Marilyn, it's Ray...Ray Thompson...from last night...we had coffee...\" Ray cringed as he castigated himself. Idiot, how many Rays' did she have coffee with last night? Still, he forced himself to stumble forward. \"I was calling to see if you'd like to go get another cup of coffee...\"\n\nMarilyn had started smiling once she heard his voice and it became bigger after Ray asked his invitation. \"Ray, I'd love to. Can I meet you back where we were last night in about half an hour?\"\n\n\"That would be great, Marilyn. I'll go grab us a table. See you in a while!\"\n\nHer dread from reading Chaucer evaporated as she said goodbye and prepared to go out. What a strange sensation to get made up for a boy. She soon had bounded out of the building and walked briskly to Sally's. When she arrived, she peered into the crowd and spotted Ray as he rose up.\n\nAs Marilyn approached, Ray noticed that she wore his jacket again. Man, it looks so much better on her than it ever did me, he thought as he continued to follow her progress to the table. As they smiled at each other and said hi to one another, the fear slipped away and they relaxed into easy conversation again.\n\nAgain, they had remained till closing time and Ray walked her across campus again. When poised at her dorm's entrance, Marilyn began to shed off Ray's jacket. Ray told her to keep it since they had a study date at Sally's scheduled tomorrow so he could help her understand Chaucer's Canterbury Tales. They would probably be there till closing again.\n\nThis time there was less hesitation as they moved together for a goodnight kiss. As they meshed, Marilyn greedily snatched a second kiss and reluctantly said goodnight. Ray walked in solitude trying to cope with his feelings while savoring the taste of Marilyn's lipstick.\n\nThe study date led to another the next day and then another. On Friday evening Marilyn and Ray attended a symposium on film noire and shared popcorn as they watched Humphrey Bogart solve the crime and win the heart of Lauren Bacall. Saturday, they attended the University's football game. The dismal failure of the team couldn't dampen the enthusiasm both felt being around each other. Sunday, they agreed to go on a picnic in the attendance of several of their friends. \n\nThe next week was filled with study dates and the weekend allowed them time to enjoy each other's company on dates. So it went for the next months as Marilyn and Ray quietly became the core of their group of friends. They had not campaigned for that. It was just a natural reaction that they gave a stability to their group. Ray and Marilyn could only smile and laugh as their satellite of friends' dating adventures would be analyzed and discussed.",
        "No one needed to bring up Marilyn's and Ray's situation. That had been cemented by their sixth Friday night date. When Ray told her that all his roommates were gone for the weekend to follow the football team on an away game, Marilyn suggested they take advantage of the situation.\n\n\"Are you sure about this, Marilyn?\" Ray asked as they stared at one another in the quiet dorm room. The significance of the portending event was overwhelming. Marilyn nervously was almost ready to rescind her offer when Ray continued to speak. \n\n\"I want to let you know that I have never done this before. I mean, I know how from listening to other guys talking, but I need this to be perfect for you, Marilyn. I love you, Marilyn. I've been in love with you from the first time I saw you. And I'll always be in love with you. Whether you decide, yes or no, I'll still love you and want you forever.\"\n\nThe sincerity of Ray's expression was all that was needed to melt the lingering doubts from Marilyn. She had listened to so many horror stories from her roommates about guys professing their love and once they got a piece of ass, dumping them. Marilyn was resolved that would never happen to her.\n\nNow, her boyfriend had not only said the \"L\" word first, but he was giving her an out. All she had to do was back down and life would continue as it had. Suddenly, Marilyn knew what she wanted. She didn't want to look back later in life and see this as a \"what if\" moment. Ray announced his commitment to her and she had felt the same for him. It was time.\n\nShe leaned forward and softly kissed him and began to undress. Ray nervously watched for a few seconds and then clumsily began to shed his clothes. When they were stripped to their underwear, Marilyn crawled into the small bed. Ray turned out the light and followed Marilyn.\n\nKissing and blindly groping one another escalated the passion. Soon the underwear was discarded as the fire continued to grow. Blindly on top of Marilyn, Ray moved into position. He reached down, desperately hoping to find his way into Marilyn. Marilyn wondered if she should guide him when by happenstance the penis found her vagina.\n\nHer gasp gave proof to Ray that finally he was doing something right. Marilyn held her breath as the engorged penis slid into her. The discomfort...the pain...why did she agree to this. In a moment, the pressure on her hymen disappeared and the pain and discomfort eased. Marilyn realized that her virginity was gone as the penis slid deeper and deeper into her.\n\nRay was continuing to whisper his love for her as her tears stopped from falling unnoticed by Ray. As Ray inexpertly continued on, they clumsily fell into a rhythm. Ray was excited by the warm moist sensation of being inside Marilyn. Finally, he was finding out what this mystery was about. Due to his excitement he couldn't last long. A mere five minutes and he was climaxing.\n\nThen it was a matter of declaring his love to Marilyn over and over in the darkness. Thanks to the gift of youth, Ray was able to get an erection three more times during the night and Marilyn accommodated his needs. When the sun rose, Ray was softly caressing Marilyn as she slumbered. When she woke, the smile on her face rewarded Ray and alleviated his concerns.\n\nAfter that weekend, Ray and Marilyn's priority were to one another as they fleshed out their relationship. What puzzled their friends was the couple were not cookie cutting identical twins. They argued politics; they debated art; they had different musical tastes. One friend summed it up best, \"The only thing the two of you have in common is each other!\"\n\nThat was enough. Ray invited Marilyn to go home with him during the Thanksgiving break and endured all the jibes at his expense as Marilyn charmed his family. At Christmas, he flew out with Marilyn to her parent's house and endured their inspection. They continued to alternate holidays and breaks throughout their college careers and were welcomed fixtures in both households. It was no surprise that after graduation Ray asked Marilyn to wait on him as he entered law school.\n\nShe followed him and moved in with him as Ray delved into the Socratic legal education. When he passed the bar, both families were joined in a celebration party when he went down on one knee to ask her to marry him. Marilyn's father smiled at his daughter's excited acceptance. While he was old fashioned enough not to be 100% on board when his daughter began living with Ray. Ray still respected him enough to ask for her hand in marriage before he proposed. His daughter could have done a lot worse.\n\n********************************\n\nFor better or worse, that is what I vowed when I married Ray, Marilyn thought as they waited for another stoplight. I was so ready to accept the better, but when it came time for the worst I certainly showed my true colors. Well, it is too late to turn back the clock, she thought miserably, I lost him and I have nobody to blame but myself.\n\nThe funny thing is I never saw it coming. First, came the little pep talks in John's office. Then, it escalated to going out to lunch with him. Then, every now and then they would go have an after work drink. Oh, it was all innocuous. Other people were included on most of the get togethers and John never tried to say or do anything in private.\n\nHe still remained as a sounding board while I vented. He never tried to belittle Ray while I vented my pain and frustration over Rachel. He always gave me good advice to keep communicating with Ray. But that was easier said than done as time went on.\n\nThen came that lunch where it was just the two of us. I was having a particular bad day and was close to losing it. John took me to a quiet restaurant and sat and listened while I vented for an entire afternoon. He reached and held my hand as I explained the pain I was undergoing. When it came time to leave, he gave me a hug, as a sign of empathy before I drove home. I was happy that I had a friend I could talk to.\n\nMarilyn got home and steeled herself to start caring for Rachel. Ray and she were in agreement that Rachel came first. Whatever else was bothering them would end when they set foot in the house. They would tend and care for their daughter and deal with the minor stuff later. \n\nThat night Ray didn't come home till midnight. She began worrying after it got to seven p.m. It was his practice that he would call if he was working late. When Rachel asked where her daddy was she told her daughter he was working late, but he would look in on her after she went to sleep. She began calling him and the phone went to voice mail. She kept leaving messages, but she didn't get a call back.\n\nWhen he arrived home from his taxi ride, Marilyn was seething. His suit was disheveled and he was reeking of whiskey. She started to light in on him, all the while trying to keep the noise level down not to disturb Rachel's sleep.\n\nHe tried to stand erect, but the liquor was making that impossible when he point blanked asked if she was having an affair with John Tullos. Without waiting for an answer he staggered upstairs and spent a moment just watching Rachel sleep. Then he went to the guest bedroom and shut the door behind him.\n\nThe next morning, Marilyn was busy preparing breakfast when a hungover Ray stumbled into the kitchen. By way of greeting him, she dropped his plate of food haphazardly in front of him. When he realized that no fork, knife, or spoon would be forthcoming; not to mention a cup of coffee he sighed and got up to tend to those matters. Finally as he sat down, he watched as Marilyn made no sign of noticing him as she furiously chewed her food.\n\nShe wolfed down her breakfast and got up and noisily dropped her plate into the sink. Then she began to walk out of the kitchen. Right when she got to the doorway, she spun around and said, \"You want to tell me what the hell brought that on?\"\n\nRay wasn't sure if the accusatory treatment was any better than the silent treatment. Still he replied, \"Yesterday, while you were getting all comfy with your boss at lunch, one of the senior partners at the firm spotted the two of you. He thought I would like to see what my wife was up to. Imagine my surprise when I saw my wife holding hands with another man on the photos he took with his smart phone. Not to mention the really good shot of the two of you hugging. Yeah, that really made my day!\"\n\nDropping the sarcasm, Ray continued, \"It was bad enough knowing that the jackass would take the photos to every single partner in the firm and use it as ammo to keep me from being made partner. But, the real icing on the cake was getting sick to my stomach at the very idea that the woman that I have loved from the moment I first set eyes on her looking at another man like you used to look at me.\"\n\nThe soul wrenching despair in Ray's voice tore at Marilyn's heart as he continued. \n\n\"So, I spent the rest of the afternoon sheltered in my office; not taking any calls, not doing any work. I just sat there with my whole world being turned upside down...again.\" \n\n\"Ray, I'm sorry! I was having a bad day and John suggested we have lunch. All he is to me is being my friend. All the body contact was just a way of showing empathy from him. I was upset and he kept telling me that I needed to talk to you. \n\nBelieve it or not, John has gone out of his way telling me that I needed to understand how all this is hurting you as well. Every time we talk he is asking me how you are doing. You don't have to be afraid of him, Ray! Most of the times he takes your side about every argument we have!\"\n\nWith that Ray stiffened, \"Wait a minute! You mean to tell me that you've been telling this guy what has been going on in our family? You won't talk to me, but the first chance you get you go and run to your boss and talk to him? What the hell do you talk about Marilyn? Do you talk about me? Do you talk about us?\"\n\nThe guilty look on Marilyn's face was all Ray needed to see. Without finishing breakfast, he got up and put his plate in the sink and began to wash the dishes. Marilyn, stood there trying to think of something to say that would not pour gasoline on the inferno raging between them. \n\nJust as she was about to speak, Ray said, \"I'm going to the office now. Don't forget we have a doctor's appointment at 3:30 for Rachel. I'll drop by and pick her up and we will meet you there.\"\n\nWith that statement the conversation was over. It was added to the long list of things that were festering into Marilyn and Ray's relationship. An uneasy truce was observed when they got to the doctor's office. The good news was that the new medication was having positive signs initially for Rachel.\n\nWhen they got home, both tried to put on a show of normality. When it came bedtime, Marilyn asked Ray if he was coming to bed. Ray understood she was asking him to return to their bedroom. That night they had sex and for the first time in their marriage it felt to both of them as an obligation. When they finished, they mutually turned away from each other and both were deep in thoughts as the night passed by.\n\n**********************\n\nThe light turned green and the vehicle accelerated through the intersection. I should have known Marilyn wouldn't have betrayed me, Ray thought. But I didn't give her much of a chance to explain. After that, it just got easier and easier to put distance between us. She begged me to listen to her and my foolish pride kept getting in the way and now I have lost her. I suppose now, John has a clean shot to replace me. He certainly made it easier to be the White Knight after this past Christmas.\n\nAfter the altercation and the botched reconciliation, the sleeping arrangements became separate bedrooms despite Marilyn's insistence that Ray return to his bedroom. When Ray didn't immediately agree; Marilyn got upset and angry. By the time Ray was ready to come back to her, he was informed the current arrangement was fine by her.\n\nSo day by day they led different lives. Rachel never was aware of any problems between her parents. They continued to show a united front for her of unconditional love and support as the cancer would show signs of remission and her strength would build up. Away from Rachel, a frosty Berlin Wall was building and each grievance settled into another brick of hostility in the private war.\n\nOne morning, Ray went to breakfast to be confronted with an even angrier version of Marilyn. How dare he accuse her of having an affair when he was carrying on with that bitch he called his secretary. Before Ray could say anything, Marilyn informed him that she had information that Ray and Karen were sleeping together. Then she stormed out of the room.\n\nActually, all Marilyn had was a strand of blonde hair on Ray's suit jacket that brushed up when Karen gave Ray a supportive hug the morning before. Ironically, the same set of events now transpired to send Ray and Marilyn's marriage out of orbit and hurdling to the Sun.\n\nNow suddenly the third parties of John Tullos and Karen Ferguson had an interest in the events. Slowly as the marriage began to disintegrate, both realized they had feelings developing with the person they were working with. Still, they made no outward effort to flame things; instead they continued to try to be a neutral bastion of support for their respective friend.\n\nBut the effort was getting tougher to maintain and control as they visualized replacing the erring spouse in their scenarios. Ultimately, both realized until Rachel's situation was resolved that neither Marilyn nor Ray would be willing or capable of dissolving the marriage. So the merry go round continued to grind away based on the whims of fate.\n\nAnother Christmas, another birthday; another disappointment by Rachel not to see a White Christmas. Again, the surrounding gifts assuaged Rachel's hurt not to experience snow. As Ray and Marilyn alternated handing gifts to Rachel to tear open and enjoy; Marilyn caught an ominous omen as Ray glanced at a gift and stiffened before he gave it to Rachel. Then he settled into a false mask of happiness for the remainder of the gifts openings.\n\nAfter this long a period of time Marilyn was accustomed to Ray's mood swings and although no one else picked up on it, she knew something had upset him. At the first opportunity away from their family and friends she asked what was wrong.\n\n\"Your boyfriend,\" he hissed, \"you let your boyfriend send a gift to my daughter?\"\n\nWithout waiting for a response, he went back to Rachel's room and ohhed and ahhed over the gifts, even the one sent by John Tullos. After everyone left and the house settled down he went to his bedroom and desperately searched for a way to solve his problem. Marilyn remained in Rachel's room lying beside her in the bed watching her slumbering child wondering what the future would bring.\n\nWhat it brought was indifference. People are mistaken when they think hate is the opposite of love. It isn't. The opposite of love is indifference. When you no longer care about the actions of another. At least with hate you still evoke a feeling from a person. But when someone is indifferent from you, when you no longer are affected by someone, that is the exact opposite of love.\n\nSlowly, the indifference grew as the couple still tended to Rachel. John continued to grow closer to Marilyn and Karen grew closer to Ray. And while both participated in emotional adultery, neither were willing to cross the line into physical adultery. Both Ray and Marilyn still felt that last bond remained unless and until they legally severed that bond.\n\nThat would not happen around Rachel. Not to destroy her childhood, her life. Not after everything else that had happened to her. Marilyn and Ray were both resolved to go through life together unhappily as long as they could keep Rachel alive and happy. \n\nAnother year passed, another request for a White Christmas failed. More Christmas gifts, including one from John Tullos again. Ray caused no objection. Time continued to spiral downward. Every so often, Ray or Marilyn would approach one another in a effort to resolve their differences. But call it fate, or bad timing, or bruised egos but nothing rekindled their fire.\n\nNow they lived as roommates sharing the common goal of nursing and caring for Rachel. Both treated the other politely and put on the veneer of a loving couple around Rachel or friends and family only to shed it off when they were alone.\n\nAnother Christmas and they waited to hear Rachel's annual request for a White Christmas. Then she surprised them. Her Christmas wish was to keep the Christmas lights burning. Tears sprung from Marilyn and Ray as they promised that the Christmas lights would continue to burn for Rachel. The smile from the emasculated child sealed the promise. That was how the Christmas lights began to burn 24/7 at the Thompson's residence. \n\nSoon, Ray and Marilyn heard rumbling from disgruntled neighbors as the lights continued to remain on during late January. By February, the Home Owners Association mailed a notice to them to turn off and remove the Christmas lights. Ray promised Marilyn that he would take care of it as he pulled out the HOA regulations to reacquaint himself with the myriad bylaws.\n\nInitially, he sent a letter appealing to them to grant his sick child's request. That was immediately rebuffed and now he was sent a demand letter from the HOA's legal counsel. He called and talked to the attorney, but the attorney was adamant that the Christmas lights be turned off and removed or legal action would commence.\n\nEveryday, Ray would inform Marilyn of the situation and she began to get frustrated and turned on Ray for his failure not to resolve the problem. Still Ray persevered to grant his daughter her wish and the lights continued to burn at the Thompson's house 24/7.\n\nA certified letter was sent to the Thompsons informing them of their breach of the HOA's regulations and a lawsuit had been filed. Marilyn still insisted that Ray wasn't doing his utmost as he filed motion after motion in the lawsuit. She voiced those frustrations to John during one of their daily lunches.\n\n\"He's not doing anything, John. All I hear is that he filed this motion or that motion or that this hearing is being rescheduled or this issue is being briefed. All I need to hear from him is that he got this taken care of and my daughter can enjoy her Christmas lights.\"\n\n\"Marilyn, I'm sure Ray is doing what he can to do this legally, but sometimes it may be better to go in a different direction. I have a friend at a local TV station. If you'd like, I'll see if I can get them interested in doing a human interest story on Rachel. Maybe we can shame them into giving up the lawsuit.\"\n\n\"Oh John, thank you!\" Marilyn exclaimed and impulsively leaned over and kissed him. She broke the uneasy silence, \"I'm sorry John. I shouldn't have done that...At least, as long as I'm married to Ray I am committed to being faithful...\"\n\nWith her sentence trailing off, John pounced. \"But after that Marilyn what are you going to do. You must know how I feel about you. You can't spend the rest of your life being chained to someone you don't care about. You owe it to yourself to be happy. I can make you happy and I'm willing to wait until you give me that chance.\"\n\nMarilyn was startled by the declaration. True, she and John had danced around the subject but now it was in the open and it couldn't be ignored.\n\n\"John, this is too sudden and too fast. I do care about you and I do want to be happy but given my situation when will I ever be in a position to act. For now, let's focus on getting your friend to do the news story and take care of that problem\" with that she hugged her friend and he relished the feel of her in his arms.\n\nAcross town, Karen was hugging Ray. \"Congratulations, Ray! I knew you would find a solution to this!\"",
        "Ray was transfixed as Karen raised up and kissed him and continued to hug him. His dick that had been out of commission for way too long sprung to attention and sought to impale Karen. Subtly, he tried to move away.\n\n\"Unh hunh, boss! I've waited way too long for this opportunity and I'm not going to let you slip away!\" With that statement she clinched him tighter and kissed him again. She also moved her hips forward encouraging his dick to throb helplessly in his trousers.\n\nReluctantly, Ray broke away. \"Karen, I have to stop and call Marilyn and tell her the news. She'll be so happy when she finds out that I got the judge to dismiss the lawsuit. I kept telling her that my brief would be sufficient to stop the lawsuit. Now, the home owner's association will have to scramble to rewrite the regulations to include Christmas lights displays to prevent them from being displayed out of season.\"\n\nKaren was in mid response when the intercom on Ray's office phone buzzed. Automatically, she picked up the phone and announced, \"Ray Thompson's office.\" It only took a few seconds and her brow furrowed and she said, \"Yes, Mr. Fletcher, here is Mr. Thompson.\"\n\nWith that she handed the phone to Ray as he wondered why the senior partner was calling him. \n\n\"Thompson, Channel 8 is about to run a story that you need to watch and then come see me in my office!\"\n\nBefore Ray could respond, Mr. Fletcher had hung up. Puzzled, he turned on his office TV and watched as the commercials ran. Finally, the local news came on and Ray and Karen watched as the attractive female anchor announced, \"And now as we promised before the break we have a human interest story about a little girl who is suffering from cancer. For her birthday wish she wanted the Christmas lights to keep burning at her house. The problem is her neighborhood is full of Grinchs. Here is Neal Sullivan with the story.\"\n\nThe image on the TV flashed to the Thompson's living room where a nervous Marilyn waited to be interviewed. By her side was John Tullos.\n\n\"Thank you, Sonja. I'm here with Mrs. Marilyn Thompson whose daughter Rachel is being treated for leukemia. Rachel's birthday is on Christmas Day. This past Christmas her birthday wish was to keep the Christmas lights at her home burning. That wish is being granted due to a very determined mother willing to do battle against her entire neighborhood.\"\n\nA stunned Ray continued to watch his wife being interviewed by the reporter. She went into the details of why she felt it was necessary to go public with Rachel's plight. When the reporter asked her what her husband thought about the situation, Marilyn shifted uncomfortably and said, \"He's doing what he can, but that hasn't been enough to resolve this. That is why I decided to listen to my friend, John and publicize this. Maybe, if people would let our home owner's association know what they thought about them, then my daughter could continue to enjoy watching her Christmas lights.\"\n\nAfter the reporter got through talking to Marilyn, he began asking questions of John Tullos who introduced himself as a friend of the family. \"Neal, I just want to see Rachel happy and to help my friend, Marilyn anyway I can.\"\n\nRay turned off the TV and then hurled the remote against the wall shattering it into small pieces. As he stormed out of his office to Mr. Fletcher's office, a startled Karen collected all the pieces to put into the trash.\n\nThat night an excited Marilyn anxiously waited for Ray to come home. Finally, around 9 p.m. she heard the sound of his car pulling into the garage.\n\nAs the door opened, she exclaimed, \"Ray, where have you been? I have the most wonderful news! Today, I got interviewed on TV about Rachel and I told everyone about what the association is trying to do. They put the interview on their website and there are already 100,000 hits on the link! People are flooding the association's telephone lines and websites chewing them out over what they've done! What do you think about that?\"\n\nA disaffected Ray continued to move around the room, looking at everything except his wife. Marilyn couldn't understand his nonchalant behavior.\n\n\"Ray, did you hear what I said? We finally got something going to put pressure on the association to drop the lawsuit!\"\n\nRay settled in front of the bar and poured himself a drink. After he let the first sip of the smooth bourbon warm down his throat into his stomach, he turned to Marilyn. \n\n\"Yeah, Marilyn I heard you. Congratulations. The only problem is there isn't a lawsuit anymore.\"\n\nWith that listless comment, he reached into his suit jacket pocket and pulled out several legal sized papers folded lengthwise to fit into the pocket and plopped them down on the coffee table in front of Marilyn. \n\nHe vaguely waved at the papers with his shot glass. \n\n\"That is the copy of the order signed by the Judge and filed this morning dismissing the suit.\"\n\nHe took another drink and studied the glass as he continued.\n\n\"By the time your interview aired, I had already won the case. Anyway, thank you for your vote of confidence. I couldn't have done it without your support.\"\n\nHe took another sip.\n\n\"It was really a wonderful surprise to see you on TV and see you basically telling the world that I wasn't doing enough for my kid.\"\n\nMarilyn cried, \"Ray, I didn't mean it like that!\"\n\nAgain Ray wearily waved off Marilyn.\n\n\"I know, Marilyn, I know. You couldn't depend on me. Thank God, your boyfriend was able to save the day for you.\"\n\nRay got up and poured himself another drink.\n\n\"Funny thing is you haven't heard the aftermath of your interview. Right after it aired, I got called in by the senior partner. Seems like he got a call from both the owner and station manager of Channel 12. I guess you didn't know that Channel 12 is one of our clients.\n\nAnyway, they weren't too happy about their big rival, Channel 8 trumping them on a local human interest story. In particular, when it involves the family of an associate attorney for the law firm they have on retainer.\n\nSo naturally, Mr. Fletcher was giving me an \"attaboy\" pep talk and discussing whether I would still have a job next week. Well as you can only imagine I was thrilled at my prospects,\n\nSo, I invited Karen to go celebrate with me over a few drinks. Nothing special. Just the two of us, just like you and old Johnny Boy with your little lunch dates. I think you're onto something there Marilyn. I had a wonderful time sitting with Karen, trying to figure out which law firms I might need to start sending my resume to.\"\n\nRay ignored the tears from Marilyn as he finished the drink and prepared to go upstairs.\n\n\"Thank you, Marilyn for shaming me in front of the world. Watching you and John, sitting in my house, on my sofa, talking about my child. It doesn't get any better than that.\" \n\nJust before he started climbing the stairs he got in one last potshot, \"Let me know when Channel 8 hits a million on their website. That'll teach the HOA to mess with you.\"\n\nThat scene fed into the dissolution of the relationship. Both were now locked into finding solace from a source outside the marital bonds. Still, despite the temptations neither could force themselves to actually cheat on their spouse. Several times both Karen and John were brought up short as Ray and Marilyn lashed out at them for trying to speed up the process.\n\nIt would cause the potential home wreckers to back off temporarily, but like a force of nature they would return and continue to entice their prospective lovers to fall deeper into their webs. Conversely, the attitudes of Ray and Marilyn at home became easier to deal with one another. It was though they had already subtly acknowledged that the marriage was over and all the underlying tensions of the past were gone.\n\nThey continued to put up a charade for their families and friends. Of course, with Rachel they had to be more careful about contriving the facade of Mommy and Daddy. But every now and then they would be forced to deflect questions from her.\n\n\"Mommy, how come you and Daddy don't sleep in the same room anymore?\"\n\nThe question coming right out of the blue caused Marilyn to pause. Should she deny it? Should she tell a little white lie? Or should she do the unthinkable and destroy the simple faith of her daughter's trust in her parents and explain that Mommy and Daddy didn't love each other anymore.\n\n\"Honey, the reason we don't sleep together anymore is because we both want to be close to your bedroom in case you need us.\"\n\nThe explanation seemed to satisfy Rachel. Then she said, \"Oh, Daddy said it was because you snore all night long.\"\n\n\"Actually, honey, your Daddy is the one that snores!\"\n\nMarilyn drew back and made an exaggerated snore imitating what Ray was suppose to sound like. The effort caused Rachel to begin giggling and then started laughing at the preposterous sound blasting the room. She reached for her Mother and the two began a hug and Marilyn carefully swayed in a rocking motion the most precious thing in her life. \n\nHow much longer could they keep up the pretense, she wondered. What will she do when Rachel's entire world falls from underneath her. How would she go and repair that pain? Marilyn had no idea to the answer any of those questions.\n\nSo the daily routine continued as Rachel remained the focus of their lives. Events were still coordinated. With the added proviso that during certain time periods, one or the other would inexplicably be delayed or detained. No questions were asked; no answers were forthcoming. On the rare occasions that John or Karen's name would crop up, it would only serve as a minor irritation to the offended spouse.\n\nAnd time ticked away.\n\nOne of the cherished chores was reading to Rachel at bedtime. Over the years the favorite books had evolved into more age suitable reading materials. Presently, the book being read to her was \"Harry Potter and the Philosopher's Stone.\" Rachel had already had the book read to her, as well as the next two books in the series. But she didn't like the trend the books were taking so she asked for the first book to be reread to her.\n\nWhen things had been better, both Ray and Marilyn would take turns reading passages out of the book, mimicking voices of the characters to Rachel's delight. Now it was rare for both parents to be present during reading time. But, Rachel would continue to insist and on some occasions, both Marilyn and Ray would show up and briefly the magic of Rachel's smile would make the couple's troubles disappear.\n\nOne night, Rachel asked for them both to read to her. When they settled into their chairs, they both noticed a large piece of paper bookmarked a few pages ahead of where they had finished from the night before. \n\nRachel just smiled and explained that it was a surprise for them.\n\n\"Baby, are you feeling all right?\" Marilyn asked as she placed her hand on Rachel's brow. \"Ray, she has a fever, maybe we need to take her to the hospital.\"\n\n\"No, Mommy, I feel okay. I don't want to go to the hospital! Please, can you just read to me?\"\n\nRunning a fever wasn't out of the ordinary for Rachel as she fought off infections and side results from various medications that would counteract in her body. Finally, she persuaded her parents to continue reading to her.\n\nAs they read, Rachel began to get less animated and involved in the story. Suddenly, her body began trembling and escalating into full-blown convulsions. Rachel's eyes rolled back into her head as Ray grabbed her. Marilyn screamed and dropped the book on the floor and was at Ray's side as they tended to their daughter.\n\nMarilyn fumbled into her pocket for her phone to call 911 for an ambulance. Ray sprinted downstairs to grab all the ice out of the freezer to try to cool down the fever Rachel was suffering from.\n\nIt seemed like an eternity for the ambulance to get there. The EMT's quickly and professionally had Rachel strapped to the gurney and carried her to the ambulance, waiting with lights flashing in the night. All the neighbors were outside drawn to the spectacle as Marilyn and Ray trailed behind the EMT's as they loaded Rachel in the ambulance. Marilyn scrambled inside the ambulance to stay with her daughter.\n\nRay ran to his car and fired it up and followed the ambulance as the siren began wailing in the air. He trailed behind the emergency vehicle with his car's emergency flashers going. Matching speed and running through intersections, Ray wasn't about to let the ambulance out of his sight for any reason.\n\nThey pulled into the emergency drive at the hospital and Ray ignored an orderly's request that he park the vehicle into a parking lot as he ran behind the gurney. Marilyn's was crying as she ran alongside the gurney as they went into a hallway and approached a set of double doors. At that point, an RN commanded them to stop and directed them to a waiting room as the gurney disappeared from their sight.\n\nLike sheep they followed the order and sat besides one another as they wordlessly waited to find out what had afflicted their daughter. In a few minutes, hospital security came into the room to remind Ray to move his car. He left and took the car into the parking lot and hurried back to the waiting station.\n\nAgain, he sat by Marilyn and waited. They both watched the infinite slow ticking of seconds from the wall clock hoping and despairing for news. The doors swung open and a grim young man in surgical scrubs walked over to them.\n\nNo,no,no,no,no Marilyn mentally repeated as a mantra as he continued to approach.\n\n\"Mr. And Mrs. Thompson, I'm Dr. Carter, I treated Rachel. I want to let you know what is going on. We got the fever down and she is stable right now. She is going to be transferred to a room shortly. As best we can tell, the leukemia and all her medications have worn out her body to the point her immune system cannot handle the strain. We are getting in touch with your oncologist and all the doctors that are treating Rachel and getting up to date on her medical history. Once that happens, we should be able to form a treatment plan. A nurse will be out directly to escort you to Rachel's room.\"\n\nAs he began to leave, Ray dreaded asking the question, but blurted out, \"Doctor, is she going to be all right?\"\n\nThe bone weary ER doctor could only look at him with jaded eyes as he turned again and disappeared to treat the next trauma patient. Ray and Marilyn collapsed back into the chair fully aware of the significance of the doctor's refusal to say Rachel would be okay.\n\nRachel lingered for eleven days. Marilyn and Ray stood vigil around the clock in Rachel's room. They would alternate sleeping on the cot the hospital provided while the other remained awake watching their daughter. The only times they left the room were to go home and shower and change clothes and to eat.\n\nThey tended to business over their phones in hushed tones while the other spouse feigned ignorance as they spoke guardedly to John or Karen. The majority of the communications were by text which allowed them an additional modem of privacy. Their families began arriving from all over the country to support them.\n\nThey all insisted that Ray and Marilyn take a break and allow them to watch Rachel. They both refused to heed the advice. They remained in the room silently watching their daughter hooked up to IV's and all other kinds of machines giving readouts. They watched as Rachel struggled to get air in her frail little body despite being intubated. \n\nDay by day, Rachel withered away and secretly Ray and Marilyn began to praying for the suffering to stop. Finally, the team of doctors approached them and advised them that all medical options have been exhausted. It was their opinion that it was time to turn off the machines.\n\nMarilyn and Ray looked at each other and both slowly nodded their heads and then bent down and cried. After signing the forms, the collected family watched and held hands as the machines were slowly turned off and Rachel slumbered into eternity.\n\nWarm golden sunlight filtered into the quiet hospital room interrupted by an occasional sob when Rachel drew her last breath at 6:14 a.m.\n\nThe inconsolable grandparents held their children as they mourned the mutual loss. No one took notice that Ray and Marilyn only held each other peremptorily before moving to other relatives. Impromptu plans were made to congregate at Marilyn's parent's house to discuss arrangements. Ray's parents drove Marilyn and Ray home. As Ray entered, he looked at the Christmas lights blazing away in the middle of the day and with finality turned the light switch off.\n\nThe remainder of the week was a surreal experience as Marilyn and Ray worked out all the arrangements. The obituary; the casket; the cemetery; the minister; the music; the date and time of the visitation and funeral.\n\nMarilyn and Ray sleptwalked for the next couple of days as their house was flooded with food, flowers, plants, wreaths, condolence cards, and visitors. They remained in motion to allow each other space from one another. It was a temporary system that worked up to the visitation.\n\nOnce again, Ray's parents collected them and drove them to the visitation. Once inside, Marilyn and Ray drifted apart and began the awkward process of socializing. Ray couldn't understand why so many people had the fixation of leading him to the casket to peer down at Rachel. \n\nThat wasn't his daughter. Her smile, her charm, her spark, her soul was elsewhere; all that was here was an empty shell. Still, he suffered through the process. He was seated at one end of the room and Marilyn was seated at the other end when he arrived.\n\nRay tracked John Tullos as he made his way to Marilyn and she stood up and gave him a long hug. Ray continued to watch as they carried on a private conversation still in each other arms, looking into each other's eyes. They must have felt his stare because both simultaneously glanced his way and abruptly broke apart.\n\nRay was curious why they even put on the sham of moving away from each other. After all, he thought, isn't that the guy she wants to be with. For a moment, John Tullos appeared as though he was going to approach Ray.\n\nYou have got to be fucking kidding me, Ray thought. Apparently, John reconsidered that idea and he drifted out of the building. Which left Ray with the eternal question of what he would have done if John had of approached him. It was an academic exercise split evenly along the lines of accepting his condolences versus hauling off and kicking the dogshit out of him.\n\nWhen they got home that night, Marilyn and Ray automatically went to their separate bedrooms. Just one more day to participate in this sham and then Marilyn will declare her independence, Ray sadly thought as he undressed for bed. \n\nMarilyn was pacing in her bedroom weighing whether or not to knock on Ray's door and try one last time to talk to him and try to make him understand what she was going through. By the time she decided to knock, she stepped out and noticed the light was already out in Ray's bedroom. She went back to her room and closed the door.\n\nThe funeral service was packed from all the friends and acquaintances of Marilyn and Ray. The minister gave a heartfelt talk and the music set the proper tone. The casket was surrounded by rows after rows of flowers. Then it was time for the final viewing as the mourners filed past the family. \n\nThen came time for the family to view Rachel for the last time. Marilyn's knees weakened as she approached the ornate casket. Oh God, they are going to close that box and bury my little girl! No parents should ever have to go and bury their child, she thought. As she faltered, her father grabbed her arm and Ray on the other side grabbed her to prevent her from collapsing.\n\nLooking at his sad stoic face, she gathered the rest of her courage and said her final farewell to her baby. Then she was outside and escorted to the limo that would drive her and Ray to the graveside service. The final words and prayers were spoken. The pallbearers placed their boutonniere on the casket and filed past.",
        "Then people milled around and in the crowd she saw Ray being embraced by Karen Ferguson. Marilyn bitterly thought why didn't she wake Ray last night and talk to him. Would she be destined to go through life with two holes in her heart over the people she lost?\n\n**************************\n\nThat brought everything up to date as the limo turned the final corner of their neighborhood to deposit the Thompsons at their house. The long black vehicle pulled into the drive and the chauffeur parked the vehicle leaving it idling and opened the driver door and went to the rear door and opened it for the couple to exit. Before he left, he offered his condolences on behalf of the funeral home.\n\nThen Ray and Marilyn Thompson found themselves blinking in the harsh sunlight as they prepared to enter the empty house and pick up the empty pieces of their lives. The silence in the home magnified the void left there. Ray and Marilyn drifted aimlessly in the house. They still hadn't spoken to one another. Perhaps it due to the internal sorrow they both were dealing with. Perhaps, because of the pending fear both felt that the next conversation would be the first irreparable step to the dissolution of their marriage. They both felt that it was coming, but neither wanted to deal with it today. Not on the day they said goodbye to their baby.\n\nThey both suspected that soon friends or family would be dropping by to see them or calling them so they could lend their support at this difficult time. All they had to do was to stall long enough and the distraction would put off the final task for another day.\n\nMarilyn decided to go upstairs to wait out the arrivals. Ray just stood at the foyer studying the family photographs framed on the wall that had tracked their lives. He continued to sink into melancholy as he focused from one picture to the next. Would Karen expect to start a family right away, he wondered.\n\n\"NOOOOOOOOOOOOOOOOOOO!!\"\n\nThe gut wrenching wail from upstairs echoed downstairs and brought Ray to action. He bounded up the stairs as another mournful cry repeated.\n\n\"NOOOOOOOOOOOOOOOOOOOO!!\" \n\nThe cry continued past the possibility of earthly endurance and the pain stabbed at Ray's heart as he scurried to the source.\n\nThere, on the floor of Rachel's bedroom was the collapsed figure of Marilyn crying inconsolably as a third mournful denial erupted from her. Ray was shaken to the core of his soul at the sight. He realized then that neither he nor Marilyn had manifested any true emotional release during the process of Rachel's funeral and now it was coming up in spades for Marilyn.\n\nHe dropped to the floor beside his wife desperately seeking to find some way to comfort her as he gathered her in his arms. \n\n\"Our Baby! Our Baby!\" Marilyn continued to cry out as Ray held her tightly as she cried violently against him. Still the house echoed with the painful cries as Marilyn continued to release her emotions.\n\nAfter what seemed like infinity, Ray became aware that Marilyn had an object gripped tightly in her hand. As he focused on it, he was aware of the primordial look in Marilyn's eyes. Eyes that looked at him in pain, in begging desperation. Eyes that begged for release, for forgiveness as she slowly brought her hand to unclench the paper she was gripping.\n\nThen a stunned Ray studied the paper Marilyn had handed him. It became clear to him what had happened. During the hospital vigil, neither Marilyn nor Ray bothered cleaning up Rachel's room after she began convulsing. Neither wanted to disturb the karma of the room for fear of bringing a bad result down on them. As though that had worked out for them.\n\nNow, Marilyn to occupy her time had decided to tidy up Rachel's room and made her discovery as she picked up the Harry Potter book from the floor and the paper Rachel had marked in the book slid out for her to pick up.\n\nRay studied the crude crayon drawing of the stick figures complete with captions. There was the house; a large stick figure inscribed \"Daddy\"; a slightly smaller figure inscribed \"Mommy.\" Trailing them were two small figures: one was inscribed \"Sister\" and the other was \"Brother.\"\n\nLooking down on them from a cloud was a stick figure complete with golden wings and a halo simply inscribed, \"Me.\"\n\nNow the full impact of the sorrow that had flooded Marilyn struck Ray as well as the smiling stick figures burned into his soul. For five years, they had begun preparing mentally for this. For five years, day by day, they shielded themselves. Now, the emotional dam that had been fortified for the past five years burst open as he joined Marilyn in grieving.\n\nThey remained huddled on the floor of Rachel's bedroom clenching to each other and time froze for them as phone calls, text messages, doorbells, and door knocks blended into insignificance. The afternoon sun edged into twilight and they continued to silently hold on to each other.\n\nFinally as darkness overtook the room, Ray heard Marilyn speak. In a soft timid voice edged in fear and uncertainty she said, \"Ray, is it over for us? Is there someway we can get back to being us? I've lost Rachel; if I lost you then I will have no reason to live. Is there still an \"us\"?\n\nBy response, Ray stood up and brought his beautiful wife to her feet and holding her hand led her blindly down the stairs. They stood momentarily beside the wall by the front door just holding one another.\n\nAnd that was how it came to be that once again on a late spring night suddenly the Christmas lights blazed into brightness into the neighborhood as a declaration of the love in the Thompson's household.\n\nRay led Marilyn upstairs into their bedroom. Ray had the epiphany as he began softly kissing Marilyn. He was back in \"their\" bedroom. Where he belonged. He belonged to \"their\" and she belonged to \"their\" and at this moment nothing else mattered but the woman that had captured him years ago.\n\nHis lips were eagerly making to reacquaint to their mates of Marilyn's from the long absence. Her body pressed against his and the familiarity was both reassuring and exciting as their hands again began claiming their spouse. Marilyn groaned as he kissed her and his hand briefly coupled her breast. Ray had discovered over the course of the years how Marilyn enjoyed being touched there. He was determined that tonight and forever thereafter that he would minister to the woman he loved. And he began to softly chew on Marilyn's earlobe which brought a pleasing gasp as Marilyn relished the electrical sensation.\n\nMarilyn's hands brushed against Ray's torso as she caressed him, returning kiss after kiss to her mate. Her hands trailed along his ribcage as she appreciated his body. For a decade she had access to this wonderful man and now she wanted to play catch up for the recent unpleasant period they had undergone. Her hand slid down and cupped Ray's testicles and softly gave them an encouraging squeeze.\n\nRay was thrilled by Marilyn's signal. He wanted nothing more to ravish Marilyn. To take her with brute force and establish once again that he belonged to her, and to her, only. That she belonged to him, and to him, only. But deeply ingrained in his love for Marilyn was the desire to please her. To show her that she was everything to him... and always would be.\n\nMarilyn responded to his unspoken signal and they both began to undress each other. After years of practice, they could still follow the process and relish and thrill to the sight of their exposed flesh come into view to be smothered with attention, caresses, and kisses.\n\nFinally, in the dim light of their bedroom, the couple had shed their clothes and instinct and nature demanded their coupling. But both had other plans. They were no longer the college students that were infatuated with each other. For years, they had grown together. Finding out what made the other tick. What pleased their mate. And they intended to put that into practice.\n\nRay slowly slid down Marilyn's exquisite body until he knelt like an acolyte worshiping his goddess. He moved his face against the small wiry thatch of pubic hair above Marilyn's treasure. He breathed in her aroma. An aroma that had been denied him for too long. He nuzzled his face against her abdomen and Marilyn encouraged his efforts by cradling his head in her hands.\n\nKissing, nibbling, licking, moving slowly southward. There was Marilyn's excited little rosebud eager for attention, but Ray had a long term strategy for that. Attention was randomly merited all around which brought Marilyn's anticipation level to the stratosphere as she silently begged for Ray to accede to her desire and plunder her rosebud.\n\nAs Ray got closer, he took note of Marilyn's body response to his stimulation. Her body shook, her knees began to buckle as he closed into the target. Her moans drifted down to him and finally he couldn't stand the absence either as he pursed his lips and sucked in the delicious little clitoris.\n\nThe spontaneous reaction caused Marilyn to fall onto the bed. Ray without missing a beat continued to lavish the little nub. Marilyn's thighs pressed against his head encouraging his efforts. But, Ray didn't need a road map to know what drove Marilyn sexually. Ten years of practice, trial and error, discussions during pillow talk; he knew what Marilyn wanted and he continued to give it to her with little butterfly flicks of his tongue. \n\n\"Oh, Ray, I'm coming!\" Marilyn excitedly moaned. Her hands clinched fistfuls of his hair as he brought her closer and closer. Then, without warning his teeth clamped down on her firmly and she exploded into sexual ecstasy. Her body convulsed as her secretions flooded Ray's face.\n\nShe purred like a kitten as Ray continued to lap up her juices after her tremors had stopped. Then Ray began to slide up her body and Marilyn prepared herself to return the favor and suck on Ray's wonderful cock.\n\nBut, Ray stopped her before she could begin to kiss that blood engorged monster and said, \"Darling, it has been too long. I need you!\" With that, Marilyn understood how Ray needed her as she spread her legs to welcome his girth.\n\nAt first, Ray was concerned that he wouldn't last as long as the first time they made love. It had been so long and he had been deprived of Marilyn's charms as he slid into the warm comfortable folds of his woman.\n\nMarilyn gasped as the cock slid deep into her and she took her hands and held Ray's face as she kissed him in appreciation. Ray's concerns of premature ejaculation was put to rest as he and Marilyn settled upon a mutual tempo.\n\nTerms of endearments and manifestations of love continued in the night as they rocked away in unison. The bodies shone with the sheen of physical exertions lubricating the bodies sliding against one another. As Ray escalated his pace Marilyn knew he was reaching a climax.\n\nLuckily it coincided with hers as she urged him on. \"Please, darling, I'm so close to coming! Fuck me!\" \n\nRay began to power thrust against her. It wouldn't take long now! He slammed his body against her as she slammed back. Her face fixed in determination to couple with her husband. The endearing sight was enough to send Ray over the edge as he came. Each powerful thrust representing another spurting of sperm. Once, twice; then Marilyn came again as her body thrashed beneath the powerful thrusts continuing to pin her against the bed.\n\nAfter he was through, Ray was amazed that his erection continued to throb in desire. Not questioning it, he plunged back into Marilyn. The surprise caused Marilyn to instantly climax again as Ray fucked her. It was though she was a pinball machine as she exploded from orgasm to orgasm. Mercifully, it didn't take Ray nearly as long to come a second time and he dropped his exhausted body alongside of Marilyn.\n\nNo sooner than he was besides her, they began post coital caressing each other. Ray began kissing Marilyn's face and he became aware she was crying by first feeling a tear falling on his lips and then tasting the salty droplet.\n\n\"Marilyn, what's wrong?\"\n\n\"Ray, I'm sorry! I'm sorry! Please forgive me! I should have never drifted away from you! You are the only person in the world for me!\"\n\nMarilyn began furiously kissing Ray in an effort to convince him of her sincerity. Ray responded in kind kissing and caressing every inch of Marilyn in his grasp.\n\n\"Oh Marilyn, my beautiful woman, it is me that owes you an apology. I let my ego get in the way and shut you out and I never gave you a chance to talk to me. I kept letting things fester and I kept drifting away. I can't believe I was going to let you out of my life. To lose Rachel and then you...\"\n\nMarilyn listened as Ray choked through the heartfelt confession. Ray collected his thoughts and continued his emotional purge.\n\n\"...I would have been lost without you, Marilyn... You have always had my heart and if you left, my soul would have been gone. And it would have been all my fault.\"\n\nMarilyn interrupted, \"No dear, I'm the one to blame. I kept letting John be where you should've been. While I never committed adultery, I was cheating you, Ray. I let him fill an emotional need that should have been for you alone...how can you even stand me for what one to you? To us?\"\n\nMarilyn grabbed Ray in an emotional hug. Ray responded with a matching hug so fierce that it threatened to crush Marilyn.\n\n\"Marilyn, Baby, we both are to blame for letting things get away from us. We were so focused on Rachel, that we forgot about us. We tried so hard to keep her here that we didn't see the stress we were putting on ourselves and each other.\"\n\n\"Ray, how do we get back to where we need to be? I'll do anything for you!\" Marilyn declared.\n\nAt that moment, the doorbell chimed and Marilyn automatically began to rise to get dressed and answer the door. Ray grabbed her and said, \"First thing, is we ignore the world. This is the time for us. And we put no obstructions in our way to each other.\"\n\nFor the remainder of the night, they ignored the phone calls and knocks on the door and made love throughout the night. Slow, sensuous, love. Not the rushed fumbling of their first coupling, not the lustful rutting of their honeymoon, but the pleasing gratification of the partner they vowed to cherish for eternity. And they spent the remainder of that night rediscovering their love. \n\nAs dawn broke, they left their house after placing a house key under the doormat. Text messages were sent to both sets of parents as they drove to their destination. In short time, they studied the electronic board with arrivals and departures and destinations. They made their choice and marched up to the counter and presented their passports and a credit card and flew to their destination with just the clothes on their backs and no emotional baggage. And they disappeared for three weeks.\n\n******************************\n\nJohn Tullos was disconcerted by the chain of events. For three weeks after the funeral he had been trying to reach Marilyn by voicemail and text. She never responded back to any of his entreaties. After the first week, John applied for compassion leave for Marilyn and made the application retroactive for the first week. He had left the ending date open for Marilyn's return, but sooner or later, he would have to take this up with his superior.\n\nDidn't she know what a predicament she was putting him in? Why won't she call me to let me know what is going on? John thought. Maybe, she's clearing the way to be with me, he thought hopefully. Then came a knock on his door.\n\n\"John, can I come in?\" \n\nA tanned, rested, serene Marilyn glided into his office and sat across him from his desk.\n\n\"Marilyn!\" he happily sputtered and he rose to go greet her with a hug and kiss.\n\nAbruptly, Marilyn held up her hand to halt his progress. \"No, John, there isn't any need to say hello to me.\" She warned him and indicated for him to sit down. \"I just came in to give notice that I'm quitting, John. I realize this put you in a spot, but, I can't help that. I'll be willing to stay long enough to get my replacement up to speed, but after leaving you in the lurch, I figure you've got someone already doing my work.\"\n\n\"What the hell, Marilyn? You walk in here after disappearing on me for three weeks and the first thing you do is quit? What about us, Marilyn? Have you forgotten what we meant to each other?\"\n\n\"John, we were never meant to be. You were there for me when I needed an emotional anchor and I will always cherish you for that. But, I only have loved one man in my life and that is my husband. For me to try to go into a relationship with you would be dishonoring him and me and you, John. You deserve more out of a relationship, John than I can provide. You deserve someone that loves you and that isn't me, John. Ray will always have my heart and soul and you would always come out second best, John.\" Marilyn looked onto the hapless man with sympathy.\n\n\"I'm leaving because I don't want to remind you of what might have been. I came too close to losing the only thing left that I cherish. Ray and I have a fresh start and I owe it to him to give it my best shot and I can't do that here with you around. It would be too easy to renew our little talks and that would lead me into a trap that I'm not going to fall in.\"\n\nMarilyn stood up and extended her hand, \"Goodbye, John.\"\n\nJohn desperately gripped her hand as though to will her to stay and said, \"Marilyn, we can work this out!\"\n\nWith that she ignored his comment and slipped her hand out of his and walked out the door, out of his life.\n\nAcross town, Ray calmly sat across the conference room with every partner in the law firm in attendance to give a healthy dose of discipline to the upstart associate that thought he could go missing for three weeks and not suffer any consequences.\n\nAs soon as the meeting was called to order, Ray transformed into the attorney that made him renown throughout the state. He refused to allow the tribunal to go on the offensive. Instead, he began leveling a number of grievances he had suffered through while in their employment. Then, he listed the clients he had brought to the firm. Then, he listed the existing clients that he tended to on a regular basis. It was soon apparent to everyone in the room that Ray held the winning cards and any talk of punishing him would have to be shelved for the sake of the firm.\n\nBut Ray wasn't through. He demanded and received a commitment to partner status for himself and three other associates that did the bulk of the work in the office. By the time he left the conference room the handwriting was on the wall for the elderly leeches that had not contributed to the firm for years. Ray was already contemplating his move into Charles Fletcher's office as Karen Ferguson rushed to him and squealed, \"Congratulations, darling, I was so afraid you were going to be fired! Now, we can get started with our family!\"\n\nRay sadly looked down at the excited beautiful secretary and said, \"Karen, we have to talk.\" And he slowly dislodged himself from her embrace.\n\n*************************************\n\nHave nine years already passed? Ray thought as he viewed the calamity erupting in his house. Colorful wrapping paper was flying in the air as the last gifts were being opened by the twins. Between the shrieks of joy from the discovery of the gifts and the bartering that had already initiated between his daughter and son he continued to watch contentedly.\n\nBeside him was Marilyn as she slipped her hand into his and gave him a long kiss for her Christmas gift of the expensive emerald necklace.\n\n\"You spent way too much on me again, Ray. I'm going to have to make it up to you tonight.\" Marilyn warned him as she rubbed up against him.\n\nYeah, Ray thought, like that will ever be a problem for me! He wondered what she had in store for him, but he already knew he would enjoy his late gift.",
        "In the chaos of what used to be the pristine den, Kobo, their Golden Retriever unwittingly came into range of Charlie, their Siamese cat perched on the arm of their sofa. With a lightning strike of his paw, Charlie raked the sensitive nose of Kobo and jumped down to the floor through the discarded wrapping paper and boxes. Kobo barked and chased after the wily cat and the twins were trailing behind adding noise to the cacophony of sounds emanating throughout the house.\n\nWith ease, Charlie jumped upon the kitchen counter and achieved sanctuary from the furious Kobo who continued her barking as the unperturbed cat began bathing himself in appreciation of the Christmas gift of the injured dog.\n\n\"Okay kids, its time to leave. Go get dressed.\" Marilyn announced.\n\nRay drove his family in the cold grey morning to a familiar rendezvous. During the drive, he and Marilyn began to get lost in their train of thoughts. The melancholy aspect of the journey was lost upon the twins as they engaged into their old aged debate.\n\n\"You have to mind me because I'm older than you.\" Karla declared to her twin brother who had the misfortune of being born thirty minutes too late. Using the only logic available to the seven year-old boy, Paul declared, \"Nuh huhn!\" The debate drifted along those lines until the twins turned to the final arbitrator and asked their mom to decide who was right.\n\nUsing the wisdom of Solomon, Marilyn ruled they were both right and the main thing was they had to love each other. With that settled, the children drifted into another conversation.\n\nAgain Ray thought as he drove, nine years, so much had transpired. Marilyn had started her boutique graphic art business and from the start she was able to cherrypick the assignments that interested and motivated her. Ray had continued to dominate the law firm and soon forced the partnership to accept promotions and salaries based on merit. It made for a happier office.\n\nWell, except for Karen. After Ray informed her, he was staying with Marilyn, Karen tendered her resignation. Ray tried to get her to agree to a transfer, but Karen was adamant. Two years after she left, a wedding announcement came to the office. Karen had found her a doctor to marry. Ray went online to their registry and purchased the most expensive item listed and wrote a warm note to go with it. Ray didn't attend the service.\n\nThings went a little tougher with John. \n\nOne night, out of the blue, Marilyn received a text from John declaring his love and wanting Marilyn to meet him that evening at the Hilton where John had rented a room. Ray met the inebriated John at the bar and had a quiet conversation why Marilyn was not going to show up. As Ray left, the heartbroken man began crying at the bar as he finally realized Marilyn would never be his. Marilyn changed her cell number to assure herself there would be no repeats of that situation. Word eventually arrived back to Marilyn that John transferred to the London office of the firm.\n\nKarla and Paul were a happy accident. At first when they discovered the pregnancy, fear flashed into both of them. But they sat down and talked like the best friends they were for so many years and they both realized they wanted another chance. So then came the sonogram and the discovery of twins and they took it as an omen from Rachel.\n\nThe delivery went smooth and the parenting came back to them as they adjusted their lives and tended to their children...and kept their fingers crossed.\n\nEach Christmas became a ritual and now the twins were aware of the proceedings. They would surprise Marilyn and Ray with questions about Rachel. The answers would often bring up smiles and tears at the same time for the parents. \n\nWith the passage of time, it got easier to think of Rachel even though there would always be that hurt, that loss, that what might have been. Now they once again would focus it to the core as they arrived in the cemetery.\n\nThey wandered past the markers until they arrived at Rachel's grave. Marilyn sunk to her knees and silently wept. Ray joined her and bowed his head. Karla and Paul obediently followed suit. They remained quiet in the chill of the morning as their parents prayed to their lost child.\n\nThen Marilyn collected herself. \"Okay Karla, Paul, hold on to your balloon until we all release them at the same time,\" she reminded them.\n\nEach hot air balloon had a small note attached. There was a balloon from each family member.\n\nKarla's note wished that her big sister was there so they could teach her brother how to act. Paul's note wished that his big sister was there to keep Karla from bossing him around.\n\nMarilyn and Ray's notes were more complex. Before attaching the notes to the envelopes, Marilyn and Ray would share their thoughts. There would be no more secrets to come between them.\n\nRay had written: \"Dear Rachel, another year has passed and we are here on your 18th birthday. Today, all I can think about is you and how brave you were while you were with us. I miss you so much and I think of you every day. I wish I could have done more for you. I wish I could have seen you grow up to be the beautiful woman you were meant to be. But, God had other plans for you, Angel. I think back at your birthday wish for having a White Christmas and I wonder why I didn't pack us up to Canada for one year or just rent a snow machine so your wish could come true. But, I tried to do my best and be the best daddy to you. One day, we will be reunited and I'll get to see you in heaven. I love you, Daddy\"\n\nMarilyn's note went: \"My sweet baby, how I miss you! I think about you every day and your daddy does as well. I try to visualize you as an adult. I regret that you missed out on so many things. Things I should have been allowed to share with you like every mother has with her daughter. Daddy calls you his Angel, but the truth is that you were an angel to us both. You saved us both from making a terrible mistake. So I think of you as my sweet angel. I know you remember hearing Daddy play that Willie Nelson song about an angel that flew too close to the ground. That is how I think of you. My guardian angel that helped me in my darkest moment and then God took her back to Heaven. I love you baby, Mommy\"\n\nThe foursome stood up at the grave and at the signal released the hot air balloons that rapidly drifted upward. The family watched until the balloons vanished quickly out of sight in the dark foreboding clouds. With that the spell was broken and the kids turned to run back to the car. \n\nRay continued to look upward a moment longer. He knew that the balloons would soon lose pressure and drift back down to earth, but did it really hurt to think that the balloons made their way to Heaven to be read by Rachel.\n\nHe felt his soulmate slip her hand into his and looked into Marilyn's face and knew she was thinking the same thing as they began to walk back to the car and it happened. \n\nSnowflakes began to fall. \n\nLarge flurries of snowflakes drifting down that would soon cover the ground. Cover the ground, and the foliage, and the countryside with its purity. Turning the world into a monochromatic world of whiteness. Finally, Rachel's wish had come true, a White Christmas. The children shouted and danced around the car trying to catch flakes on their tongues.\n\nMarilyn and Ray looked at one another as drifting flakes kissed their faces and they both knew as tears came to them that once again their Angel was flying close to the ground."
    ],
    "authorname": "oshaw",
    "tags": [
        "emotional adultery",
        "reconcile",
        "christmas",
        "birthday",
        "college",
        "funeral",
        "hospital",
        "cancer"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/grief-3"
}