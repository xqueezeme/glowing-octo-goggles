{
    "title": "Quaranteam Ch. 29",
    "pages": [
        "Chapter 29\n\nThe next day, Andy and Ash met up with Eric and Lily for lunch in a restaurant, something they still weren't accustomed to, even though they'd done it a couple of times since moving into New Eden. They'd been in quarantine so long that the basic things like eating out felt alien. They'd found a nice little BBQ joint that someone had opened within the walls of New Eden, and Andy was ecstatic.\n\nAndy's hope was that they were going to keep getting more varieties of food in their new home town. The little 1950s dinner was nice, but the village needed things like a Mexican joint, a Chinese restaurant, a ramen house, a place where he could get a banh mi... Andy realized he really just needed the place to be less exclusively white.\n\nThe guy who owned and ran the BBQ was a big black guy named Bryant Walters who'd apparently played football for the 49ers a couple of decades ago. He'd settled in the Bay after his football career ended, and he had brought his love of southern BBQ to opening his own restaurant, called \"Smoke On The Water.\" He had a dozen of his own BBQ sauces, brisket that he smoked for at least twelve hours and some of the best damn ribs Andy had ever tasted. It didn't hurt that Bryant was also massively friendly, making sure to come out and talk to patrons of the place. The wait staff was comprised of his partners, five women in all, at least one a former 49ers cheerleader.\n\nOver lunch, Andy made sure to tell Bryant that he should have delivery service for the community, and the big burly man told him that was an excellent idea, and that he'd start working on a website for online orders.\n\nThe meal was the first chance that Andy and Eric had really been able to sit down and catch up one on one since they'd gotten to New Eden. Sure, they'd seen each other at parties and big gatherings, but with just Ash and Lily there, it felt like a throwback to the first days of the whole adventure when they'd been a pair of new couples sharing a tiny little condo.\n\n\"So yeah, what with all the casualties on my team, I've been promoted up the food chain to be director of the division,\" Eric said, poking at his brisket with his fork. \"I like the responsibility and the increase in pay, but it's also incredibly depressing to think about all the former coworkers that died, none of whose funerals I can attend, because nobody's allowing funerals.\"\n\n\"Yeah,\" Andy sighed, \"Phil told me they're moving to mass cremations now, since so many people died. They'll probably build some sort of memorial after we're through all of this, like the Vietnam Wall or Ground Zero for 9/11.\"\n\n\"It's so strange, seeing all the names on Slack that aren't lighting up any more,\" Eric sighed. \"At some point, the death toll crossed from a number I can understand to a number I can't.\"\n\n\"Kill one person and it's murder; kill a hundred thousand and it's a statistic. Good ol' Stalin,\" Lily joked, squeezing his hand reassuringly. \"Don't try and think about it, dear. You're only going to get angry or depressed again, and we're having a nice lunch here, with everyone getting a chance to see one another. I mean, I love Niko to death, but if Andy shows up with his entire tribe, it takes over the whole room. How many are there now, fifty?\"\n\nAsh giggled, rolling her eyes. \"It really isn't tha' bad, Lily. How many're over there?\"\n\n\"Seven, including Lily,\" Eric said.\n\n\"I refuse to let them send any more,\" Lily growled. \"Each of the girls gets one day a week to spend with him, and he gets Sundays off.\"\n\n\"Then when do ya get time with him?\"\n\n\"Any time I fucking want to,\" Lily laughed, waggling her beer in Eric's direction. \"We're trying to have a kid now, and I'm refusing to let any of those other bitches get a go at getting knocked up until I'm well and truly swollen. Once I'm half way through my second trimester, then I'll let'em get off their birth control, and not a minute fucking sooner.\"\n\n\"Still got Eric under your thumb, huh, Lil?\" Andy teased.\n\n\"Thumb, palm, elbow and heel,\" she said, grinning at him. \"Not that he complains.\"\n\n\"Not that you'll let me,\" Eric grumbled, although he did have a smile on his face.\n\n\"Oh, you know that you love it.\"\n\n\"I mean, you actually seem really happy, Eric,\" Andy said. \"I know the whole polygamy thing wasn't what you had planned, but you seem to be managing it pretty well.\"\n\n\"It's a new world, Eric,\" Aisling said to him. \"Ya just need to roll with the punches and go with the flow. Craic on, and you'll do alright. Andy had some challenges when our pod jumped in scale, but he learned how t' manage.\"\n\n\"Well, the girls seemed to divide themselves into cliques pretty well on their own, and that helped.\"\n\n\"It didn't hurt that two of them are drop dead gorgeous world famous actresses either,\" Lily said. \"Not that I blame you one bit. If Sarah Washington came at me with those big jiggly tits of hers, I don't think I could've said no.\"\n\n\"They are great tits,\" Ash giggled. \"I've gotten lost in them more than a couple of times. I spent an hour reading last week with me head nestled between'em like pillows.\" Andy reached over and swatted Ash on the wrist, and she couldn't help but giggle a little bit more. \"Oh like ya haven't as well.\"\n\n\"Didn't say I hadn't,\" he said with a smirk.\n\n\"So are you ready for your interview tomorrow?\" Eric asked, changing the subject. \"Don't forget to plug your books or Nicole'll have your head.\"\n\nAndy nodded. His publicist, Nicole, had made it abundantly clear to him what she'd do to him if he didn't mention the books at least a little bit when he had screen time, but Andy had also stressed to her that he didn't have control of what they did and didn't air, something Nicole had, reluctantly, agreed with. \"I mean, it's weird, knowing we're going to be getting interviewed for 60 Minutes, and that we're going to end up setting the standard for the new post-pandemic family unit. Who the hell saw that one coming, right?\"\n\n\"Have you been doing any prep work in advance for it?\" Eric had always been the more practical of the two men. \"I know you don't think it's an adversarial interview, but it never hurts to be prepared, just in case it turns that way.\"\n\n\"I've done interviews before, Eric,\" Andy sighed. \"You know that. Shit, you probably remember the phone interview I did with the Guardian in the UK a few years back.\"\n\n\"That was such a strange article they wrote. I swear, they were way more interested in getting you to talk about the rights being licensed out than they were the books themselves. It was funny, because I could've told them you barely knew anything about what the movie studio was doing, but they didn't seem to want to believe you.\"\n\n\"Yeah, I felt like they wanted to create a 'gotcha' moment they just weren't going to get from me. After a while, they just got frustrated and gave up.\"\n\n\"Dermot read that article,\" Ash said to him. \"He said ya came off looking way smarter than the reporter did.\"\n\n\"Well, there's one vote of confidence in me,\" Andy joked. \"Niko's at the base today, doing the tour along with Phil and Charlotte. Phil's running the show, but the good doctor's walking the reporter through the process itself, and Niko's giving them a sort of ground eye view of how the whole thing works, from arrival to departure. The President apparently thinks, and I happen to agree with her, that transparency is the best approach to all of this.\"\n\n\"Is everyone going to take part?\" Lily asked them.\n\n\"Well, the plan is that everyone's going to be around for the day, but nobody has to talk to the reporter if the don't want to. The only people who've said in advance they don't want to be interviewed are Lauren and Sheridan,\" Ash said.\n\n\"They just don't wanna?\"\n\n\"Well,\" Andy said, \"Lauren's worried about how it'll reflect on the 49ers, so rather than ask the team's owners about it, she's just not going to take part.\"\n\n\"Same for Sheridan and the owners of Cirque,\" Ash said. \"Everybody else seems okay with talking to the reporter, if they want ta, and Andy thinks it's best if we appear like we've nothin' to hide.\"\n\n\"We don't have anything to hide, Ash.\"\n\nAsh giggled. \"Taylor will, of course, be wearing clothes for the whole day.\"\n\n\"Okay, we don't have anything else to hide,\" Andy chuckled.\n\n\"I'm a tad nervous,\" Ash admitted, \"but it's important we do it. I'm just wonderin' if there's going ta be some curve ball we didn't see coming.\"\n\n\"You'd think they'd ask Phil those kinds of questions,\" Eric said. \"If they do, I'm sure he'll give you a heads up what to expect. The government's going to be far more careful about this than you are, so if the reporter gives him too much trouble, he'll just call off the entire interview process and tell his boss to revoke their permission to be in New Eden. Major General Fielder has the final say on these kinds of things.\"\n\n\"Better him than us,\" Ash said, as she reached into her pocket. Her phone had started vibrating, and she looked at the screen, seeing it was Niko calling. The picture of her with her tongue sticking out was Ash's profile photo for Niko, and it always made Andy grin. \"Better take this. I'll just step outside an' see what's the craic. Carry on without me.\"\n\n\"What's the agenda going to be like tomorrow?\" Lily asked Andy while Ash got up from the table and headed outside so her conversation with Niko wouldn't disturb them.\n\n\"Tour of the house first, a one-on-one with me and the reporter second, then a group interview with me and basically all the girls including the staff, then a handful of one-on-ones with some of the girls afterwards. I know Emily and Sarah are going to do one together, so they can talk a little about their relationship before the plague and how it affected them. Neither Sarah or Ems were out as bi before, and it certainly wasn't public knowledge that they were a couple, so I'm sure the reporter's going to have some questions on why they kept it quiet, but that's typical Hollywood bullshit. They'll handle it just fine without me getting in the way.\"\n\n\"Didn't you say you had some girls showing up today?\" Eric said.\n\n\"Yeah, three people today, but I imagine they'll probably still be in the imprinting process by tomorrow, so they won't be around for interviews, although we'll see, I guess.\"\n\n\"Speaking of handling it,\" Eric sighed, \"how are you holding up with Matty's death? It's awful that he got sick and died from trying to help someone.\"\n\n\"Yeah, but that was classic Matty,\" Andy shrugged. \"He never stopped to think about these things if he thought someone needed his help. I'm dealing with it, some days better than others. From time to time, I just want to call him and talk to him about all of this, but then I remember I can't, and I have a good cry for a bit. But Xander's moving here to New Eden, and that's going to help, I'm sure.\"\n\n\"Cool,\" Eric said. \"Xander's always been a good guy, and it's smart to keep in touch with the people who knew you back when you were young and foolish.\"\n\n\"I was young and foolish then, I feel old and foolish now.\"\n\n\"Having Xander around will be good for you. He's always been better at calling you out on your bullshit than I am,\" Eric said, picking up a french fry. \"And your long history with him means he knows when you're not saying something.\"\n\n\"You know, I still think it's unfair you got both Sarah Washington and Emily Stevens, Andy,\" Lily joked. \"You should've sent one of them over to me, er, Eric. I'm, I mean, he's jealous.\"\n\n\"They're a set, Lily,\" Andy laughed. \"You would've had to take both of them, and I think you probably would've gotten Sarah killed when she found out I was here. I know everyone's in love with Emily. You didn't strike me as a Dagger Academy fan when we were sharing the condo, though.\"\n\n\"I'm not,\" Lily said, raising her empty glass, making sure a waitress caught her eye and started heading over to refill it. \"But I fucking loved the Badass Ballerina movies, and I would've done Sarah in a heartbeat. Is she ask spunky as she seems on TV? That time she was on The Daily Show, and that girl in the audience told Sarah that she was on her boyfriend's list, and she started flirting with the guy immediately, that fucking killed me. Tell me she's really like that.\"\n\n\"She's absolutely really like that,\" Andy said, as a waitress refilled all of their glasses. He'd been trying to cut down on his soda intake, but when he was stressed, he tended to double down on it a bit, so he was drinking Pepsi, same as Lily and Eric. \"She's also a massive fan of the Druid Gunslinger books, if you can believe it.\"\n\n\"Bullshit,\" Eric snorted. \"I don't think there's any possibility she's a bigger fan than Dave, who got us in here just to get a copy of the new book six months early.\"\n\n\"Wanna bet?\" Andy grinned.\n\nFor the next few minutes, Andy related the story of Comic Con panel from last year, where Emily and Sarah had participated in his Q&amp;A, asking questions while being disguised in head to toe cosplay, so nobody could recognize them. By the point that Andy was telling them about how Emily had done her best to maneuver both her and Sarah into his care, Eric and Lily were both laughing quite openly, incredulous to the surrealistic twists and turns their lives had taken this year.\n\n\"Holy fuck,\" Lily said. \"I guess you weren't kidding when you Sarah would've raised hell if she found out you were here and she wasn't paired with you. I bet she fucking devoured the new book as soon as she arrived.\"\n\n\"Well, I didn't tell her it was done until the day after she was imprinted, but yeah, as soon as I did, she grabbed it and refused to do anything other than read it until she'd finished it.\"\n\n\"What did she think of it?\" Eric asked.\n\n\"She thinks it's the second best one in the series, after 'Have Totem, Will Travel.'\"\n\n\"Yeah, I still think that's the best one as well, but you're not done yet. On that topic, how's it coming?\"\n\n\"I've finally got a draft I'm mostly happy with, and I'll be sending it over for your thoughts probably in the next couple of days or so.\"\n\nEric grinned from ear to ear. \"Well, that just made my day. First draft?\"\n\nAndy clicked his tongue, rolling his eyes in frustration at the challenge the book had presented to him in the writing. \"More like fifth. I finished the first draft like a month and a half ago, but when I sat down and reread the fucking thing, I tore a shitload of it apart and rebuilt the entire second act so that it didn't suck.\"\n\n\"I'm sure it didn't suck before.\"\n\n\"Well, it's better now, that's all that matters.\"\n\n\"Can I read it as well?\" Lily asked. \"I don't want to intrude if it's not cool...\"\n\n\"Of course you can, Lil,\" Andy told her, a little delighted and surprised. \"I thought you weren't a fan of the books.\"\n\n\"Well, I'd only read one of them before meeting you and it was the one you weren't a fan of yourself, so Eric made me read the first one about three weeks ago, and since then I've read them all. 'The Problem With Were-Bears' really is a terrible place to start.\"\n\n\"I know, I know, alright?\" he laughed. \"If I could unpublish it and rewrite it from the ground up, I would, but it's out there, and I can't.\"\n\n\"Stephen King rewrote the first book of The Dark Tower and published it a second time,\" Eric pointed out.\n\n\"Stephen King I ain't, Eric,\" Andy deadpanned in return.\n\n\"So what's this new one finally called? You seemed like you went through a dozen titles.\"\n\n\"It's called 'The Fatal Solstice,' although I have to see if Nicole thinks it works.\"\n\n\"Nice fucking title, dude!\" Eric cheered. \"I think that sounds badass.\"\n\n\"Sarah started reading it this morning, so she'll have my first set of fresh eyes on it.\"\n\n\"You're just now letting her read it?\"\n\n\"I just finished the draft yesterday! I didn't want her reading it until I felt like I had a semi-finished final draft.\"\n\nThere was a jingle of a bell as the front door to the restaurant opened and Ash moved back inside, heading to the table, a grin from ear-to-ear on her face, one that almost worried Andy a little as the Irish redhead slid back into the booth next to him, wrapping her arm around his shoulder.\n\n\"Okay, I'll bite,\" Andy said, after a few seconds of silence, with Ash not saying anything, just grinning at them in an expression that bordered on derangement. \"What's up? What did Niko have to say? Everything fine at the base?\"\n\n\"So Tala, Whitney and Jade will all be arriving soon,\" Ash said. \"Tala seems like a gas. Niko let me talk ta her for a couple of minutes, and I cannot tell ya how glad I am you chose her, having now spoken with her a bit. She's going to fit right in.\"\n\n\"Dare I ask what that means?\"\n\n\"She and Niko seem like kindred spirits, that's all I'm saying.\"\n\n\"Yeah, well, Niko once blew me in a public park because she thought I needed to take the edge off, so maybe that doesn't put me as much as ease as it does you,\" Andy smirked.\n\n\"Did it?\" Lily asked.\n\n\"Did it what?\"\n\n\"Did it take the edge off?\"\n\n\"I don't have to answer that.\"\n\n\"I suspect it did take the edge off.\"\n\nAndy scowled at her, narrowing his eyes. \"That's not the point.\"\n\n\"I rather think that it is,\" she teased.\n\n\"Fine,\" he admitted. \"Yes, it did. But that doesn't mean it was a good idea.\"\n\n\"No,\" Ash said, \"that means it was a great idea. Waitress? Can we get the check please?\"\n\nThe woman at the counter nodded. \"How do you want it split?\"\n\n\"No split,\" Andy said. \"I'm covering it.\"\n\n\"Andy, man, you don't have to do that,\" Eric said, looking a little pained.\n\nAndy waved his hand. \"I told you that Watkins just gave me a shitload of cash, so let me spend a little bit of it on my friends from time to time. Speaking of which...\" He reached into his pocket and pulled out a personal check he'd written a few hours ago, sliding it across the table to Eric. \"That's for you.\"\n\n\"What's this for?\" Eric said, not even looking at it yet.\n\n\"Look, I know you were undercharging me rent for years and years, Eric, because you knew I couldn't afford more, and because you liked having someone else sharing the condo with you, but now I do have a bunch of money, so consider it me paying off back rent.\"\n\n\"I'll remind you that there were a couple of years where we were both out of work.\"\n\n\"So that just makes it even in more important that I settle up my debts,\" Andy said, handing his credit card to the waitress, not even looking at the bill.\n\nEric picked up the check, looking at it, shaking his head. \"C'mon, Andy! Man! This is too much! I can't take this!\"\n\n\"You already did,\" Andy said with a grin. \"I don't often get a chance to do nice things for my friends any more, Eric, so you're just gonna have to give me this one.\"\n\n\"I mean, you brought me into New Eden,\" Eric laughed. \"I think that would've settled all our debts right then and there. I mean, my house isn't quite as nice as yours, but it's still a fucking fifteen room mansion here in the Bay, so between that and this,\" he said, waving the check around, \"we are now absolutely, unequivocally even, okay?\"\n\n\"Yeah, alright,\" Andy answered, as the waitress handed him the credit card receipt and his card. Andy filled in the tip amount at 25% of the bill, then signed the slip and pocketed the card back into his wallet. As soon as he stood up, Eric hugged him hard.\n\n\"Thanks again, Andy,\" Eric said. \"It's good to have friends in this place.\"\n\n\"I always promised you that if I got success, I wouldn't let it turn me into an asshole, Eric,\" Andy laughed, as his friend finally released him from the bear hug. \"I just thought it would've been from my own doing rather than the generosity of some random guy I played poker with.\"\n\n\"If you think all of this isn't of your own doing, Andy,\" Lily said, giving him a quick hug, \"then you haven't been paying attention.\"",
        "\"I suppose.\"\n\nLily and Aisling exchanged hugs and they all walked out together to the parking lot. Andy laughed, as Eric pulled out the keys from his pocket and pushed a button, as a red Porsche 911 beeped in recognition.\n\nEric shrugged a little with a smile. \"Came with the house. Seemed rude to say no.\"\n\nHe and Lily hopped into the sporty car and sped off, heading back towards their house, which was just down the street from Andy's. Andy and Lily climbed into the Tesla Roadster and brought the vehicle into motion so they could head back to the house.\n\nAs the Tesla curved across the road, Andy asked \"So how did Niko sound after her interview? Was she feeling okay?\"\n\nAsh reached over and took his hand in hers, squeezing it. \"Yer always so worried about all of us, Andy. We're nae made of glass. She sounded fine, I promise. She was laughing about th' whole thing, and she said she thought you'll do fine. She spent a bit of time today talking with all three of th' new girls, answering any questions they had and getting 'em set ta get acclimated in the house.\"\n\n\"Should I even ask what kind of questions the girls had about me?\"\n\nAsh rolled her eyes with a smirk. \"The usual kind of stuff. Anything they should know not to talk about, or things you particularly like. Nothing ya need ta worry about. But I have a request, for me, something that'll take a little bit of work on yer part, but you can manage. You just have to keep yer mind on it.\"\n\n\"That sounds ominous,\" he laughed.\n\n\"It's really not, love,\" she giggled back. \"A few times over the next few days, you're going to feel like yer first instinct is to get mad at something, but y'need to promise me that you won't, alright? That you'll take a deep breath and you'll say thank you when yer given a gift. If you have any one flaw, Andrew Rook, it's that sometimes ya get inside of yer own head too much. So I'm going to need you to trust in others, that the amazing women who you've allowed inta yer life are doing not only what they think you want, but what they want as well. Y'think ya can handle that?\"\n\n\"I'm not entirely sure what the hell any of that means, Ash, but I promise you, I will try and keep my wits about me and not lose my temper at any gifts that I'm given.\"\n\n\"That's all ya need to keep in mind, love.\"\n\nWhen Andy brought the Roadster back to the house and parked it in the garage, he saw that all the cars were in the garage, which meant both Niko and Lauren were home. Niko being home also clued Andy in that the new girls had actually already arrived a bit ago, which was good. It would've let all of them have a chance to talk with one another without the pressure of his presence.\n\nHe'd sort of learned that the first time he met any new partner, there was the weight of expectations already surrounding his arrival. Some of the girls had been eager to get on with it immediately, some had been willing to chat and talk with him a bit before hand. As he'd done more and more first impressions, he'd gotten better and better at it.\n\nBut these three, each was so unique, and so different from each other, and this was the most people who had ever shown up at one time, so Andy wasn't even sure how he wanted to approach this. He hoped that the girls would've mostly figured it out for him before he arrived.\n\nHe got out of the Roadster with Ash, and they headed into the house. \"I imagine they're in the main living room, love,\" Ash said to him, as they walked down the hallway. They'd had a few months to get used to the layout of the massive manor, but if he wasn't paying attention, he could still get a bit turned about.\n\nThey arrived to the basement living room, and before they'd even gotten to the room, he could hear the rush of voices interspersed with bouts of laughter and giggles. The sound warmed his heart, and he was pleased to see all the familiar faces gathered around the three new ones, everyone turning to look at him when he entered with Ash pushing him on the ass when he paused a little bit in the entryway.\n\n\"Hey there, ladies,\" Andy said, grinning. \"Welcome to the House of Rook, I suppose.\"\n\nThe first person to rush him was Tala Jordan. The Iranian American woman, Sheridan's friend, was certainly the curviest woman to join his family, dressed in a tight white t-shirt underneath a pair of jean overalls that clearly seen more than its fair share of paint, and still bore a wild array of multi-colored splotch scars. The shirt and centerpiece of the overalls were straining against her heavy breasts that were large enough to give Hannah's a run for her money. The white shirt was semi sheer, and Andy could see the outer edges of her dark aerola just peeking from beneath the overalls. Her dark hair hung loose, long and down her back, framing her rounder face. She had painted her lips a bright shade of rose, lush and vibrant. And she had on the most shit kickery of brown leather cowboy boots that he'd ever seen.\n\n\"Hey there, studboy,\" she grinned, as she strolled up to him with an overconfident saunter, reaching up to pull Andy's lips down into an almost domineering kiss, not giving him an inch of control. Not that he minded. While her tongue was busy burrowing into his mouth, one of her hands pushed down the front of his pants, rubbing against his cock before sliding back out as she drew back from the kiss. \"Here we go now. Just what I was looking for,\" she said, raising her hand up to the light, a bit of precum gleaming on the skin of her palm.\n\nBefore Andy could say a word, she snaked her tongue out and licked up that smear of clear liquid, and as soon as she did, he had to lunge forward to grab beneath her arms, keeping her from falling down to the ground as that priming orgasm shattered her mind for a moment, all without a fraction of a sound escaping her trembling body.\n\nA few moments later, her breathing had returned to normal and she looked up at him with adoring brown eyes, wide and aroused. \"FUCK that was great!\" she moaned, looking a little fuck drunk already. \"Sorry, I just couldn't wait to get that first fix so my clock could get started.\" She flashed him a saucy little wink. \"Sher told me all about that delayed activation she went through, and while she made it sound like hell for her, I think it sounds boss to me so I didn't wanna give you a chance to say no.\"\n\n\"Well hello to you too, Tala,\" he chuckled. \"I couldn't get those words out before you basically manhandled me.\"\n\n\"Oh c'mon,\" Tala said, \"you wouldn't have complained even if my tongue wasn't pinning yours down. And because I know you're gonna be worried about all of this, the reporter tomorrow's going to ask if they can get footage of someone being imprinted for the show, and I agreed to be filmed, but by Emily and not their camera person.\"\n\nEmily waved a little bit. \"I've done some camera work before, so I know what I'm doing. I'll frame it so that you only see her face, Andrew, if you're alright with it. Katie Couric asked Niko if it was okay, since you did have three new women arriving today, if one of them could wait until tomorrow and get filmed being imprinted. She did say both you and the woman in question would have to give permission, but Tala volunteered, so it's in your hands.\"\n\n\"I mean, if you're okay with the entire world seeing your sex face, Tala,\" Andy shrugged, \"who am I to say you can't?\"\n\n\"Well, you're going to eventually be my husband, dude,\" Tala said, that wide grin of hers never going away. \"So you can't just pawn it off as entirely my decision. If you don't wanna do it, we won't do it. But I think it'd be good for their story, and fuck do I care if people see my O face?\"\n\n\"You're also okay waiting a full day after being primed to be imprinted?\" he asked. \"That damn near drove Sheridan crazy.\"\n\n\"Oh, I'm hella hoping it's gonna,\" Tala said, braggadocio and swagger in her voice. \"But I'll manage. And if it's too much to take, we can do that as soon as Katie arrives, before you do any interviews. I'm a big girl, and I've got on my big girl panties. I'll hold fast and stay true.\"\n\n\"I'll give ten to one odds that you aren't wearing any panties right now, Tala,\" Sheridan teased.\n\n\"I refuse to cover those odds!\" She giggled, leaning up to kiss Andy on the cheek again. \"And I can't hog all of your time, so you and I will just have to have our fuckdate tomorrow.\"\n\n\"Hopefully you brought all your music gear with you,\" Andy said to her. \"I remember when you were fronting The Grendelles, because I saw you open for Mike Doughty at The Independent. You guys were pretty good, although your drummer looked like he was high as fuck, so his tempos were all over the goddamn place.\"\n\n\"Yeah, Casey was a fuckin' drag and hella fucked up so many gigs,\" she sighed. \"But he OD'd a couple'a years back, so that ended that band.\"\n\n\"Thought the band name wasn't great either, but you made fun of it yourself at that show, so I figured you knew that already.\"\n\nShe reached behind him to give his ass a quick goose. \"Daphne, the band's guitarist, came up with it, and we got a little bit of heat, so we were stuck with it, at least until Casey died. Last I heard from Daphne, she was down in LA and had taken up working as a studio rat, engineering for other people's shit, writing songs for suckers that can't do it their own damn selves. But don't you worry -- all my gear'll show up in the next couple of days, and I'll turn one of the bedrooms into a little music studio. I'll even make sure it's soundproofed and a good distance from your writing nook, so you won't even know when I'm hella getting my jam on.\"\n\n\"Damn, girl,\" Sheridan said, \"you're gonna take up so much of our damn space, between your music studio and your workshop. Maybe you should just convert the pool house into your working area. You could make the living room into your wood working studio, convert one bedroom in there into your music studio and the other into your own little living quarters.\"\n\n\"That's a dope idea!\" Tala said, not letting go of Andy, keeping her full tits pressed hard against his side. \"Assuming you're cool with me changing the living room over there into a maker's room. And sorta commandeering the pool house. I don't wanna come in here all Bossy Magoo and shit, but it would mean everyone else wouldn't have to deal with the sound of heavy saws when I'm working on furniture, 'cause even I get tired of that shit some of the time.\"\n\n\"You'd have to make certain you came into the main house regularly, though, and didn't just spend all your time out there alone. I mean, it's probably fine, but let me have a couple of days to think about it before I say yes, okay?\"\n\n\"Oh, totes, totes,\" she said, leaning up to kiss his cheek again. \"Anyway, don't let me steal all the spotlight.\" She pulled his head down in another firm kiss before she slipped away from him with a mischievous giggle. Andy immediately knew why all the girls liked Tala -- she was approachable, personable and generally just seemed like a good time.\n\nThe second girl to approach him was Jade Dillon, who had decided to show up wearing her 49ers cheerleader outfit, gold hotpants shorts and white crop top that left most of her toned abs exposed to the eye, her skin a sun-kissed tan that clearly had enjoyed having a summer off without any children to teach. She looked as fit as Sheridan, Piper and Lauren, but a touch more muscular and a little less flexible. Her honey colored hair hung in loose corkscrews down to the middle of her back. She, thankfully, wasn't wearing the sort of heavy makeup that seemed to be necessary for performances at football games, instead electing to just have some basics. Her eyes were a vibrant green, the shade of summer grass in its prime, and her smile beamed in his direction, her teeth an almost reflective level of white. She strolled right up to him and wrapped her arms around him, hugging onto him tightly.\n\n\"I know that we just met, but I just wanted to tell you how super grateful I am that you chose me,\" she said, burying her face in his chest. \"I know you didn't have to take me in, and I'm sure that Lauren told you about my, ah, inexperience, and I totally know how that can make so many guys super nervous, but it didn't make you nervous, and that's great, it's just so darn great, and gosh, I just can't even tell you how happy that makes me, how all this makes me, getting to be a part of such a marvelous family. I know I'm talking like a mile a minute, but I have to get all of it out before any of it slips my mind, or I just get too nervous and tongued to talk.\" She was trying not to cry, and then she giggled to herself for a minute. \"I'm Jade. I know it's silly to tell you that, but golly, I just feel like if I didn't, I'm not properly introducing myself.\"\n\n\"Hey Jade, welcome to the family,\" he said with a smile. \"Is it okay if I kiss you?\"\n\n\"Oh shucks, yes please! That sounds wonderful!\"\n\nAndy helped her lean her head back so he could look into her eyes again, then leaned down and kissed her. She was only a couple of inches shorter than he was, so it didn't take much adjustment. Whereas Tala had been intensely eager, Jade was a bit more shy and reticent in her kiss at first, but she quickly warmed up to him, as if she was worried that she was being too reserved and was attempting to overcompensate by going all at it.\n\n\"I changed into the Gold Rush outfit after I got here,\" Jade said, \"because Hannah said she thought you'd like it. I can't say I blame you. Every man loves a cheerleader.\" She looked over to the curvy Asian teen, who gave her a wide smile and a pair of enthusiastic thumbs up.\n\n\"You didn't have to wear it if you didn't want to,\" Andy said, a little shyly.\n\n\"Oh, I totally don't mind! I mean, you're doing so much for me, it's the very least I could do!\"\n\n\"Thank you for accepting the offer to join the family, Jade.\"\n\n\"No no, thank you! You have an amazing bunch of women here! So, I kinda sorta have a special request, if that'd be okay with you?\" she said, looking up at him. She wasn't as massively confident as Lauren had made her out to be, at least for just that moment, but Andy was pretty sure he knew why.\n\n\"All you have to do is ask, Jade,\" he said, trying to put her more at ease.\n\n\"I talked with Niko about how this whole imprinting thing works, and, well, I'm very much looking forward to making love with you, but I don't want my first time...\" She blushed a deep shade of red a moment before carrying on. \"I don't want my first time.. having sex... I don't want that to be the thing that imprints me. So I was hoping maybe I could just, ah, go down on you to get imprinted? And then I can have my first time a little later? Without the added extra pressure of knowing it's doubly going to change my world completely?\" She smiled up at him, that wide expanse of pearly teeth flashing at him. \"Is that okay with you? I know it might be a bit much to ask, but golly, I feel like it's just so gosh darn important to me that I'd better speak up about it, right?\"\n\n\"That's not a problem at all, Jade, but I'm gonna have to ask a favor of you in return, if you're okay with it.\"\n\n\"Oh, shucks, that seems totally fair! What can I do to make us square?\"\n\nAndy laughed a little. \"You absolutely, positively have to ditch the fake cussing here in the house, before it drives me bonkers.\" Most of the other girls laughed at that, and Jade blushed a little once more, but she also smiled, maybe even a touch embarrassed by it. \"I understand you've gotten into the habit of it because you're teaching young children all day, but when you're at the house, around the grown ups, you gotta either just swear or at very least stop using fake cuss words. It's like goddamn nails on a chalkboard to me.\"\n\n\"I know, I know,\" Jade laughed. \"It's really hard, considering I spend so much time teaching kindergarten, but I'll work on it, I promise. I mean, I am a grown ass woman capable of saying the word 'fuck' now and again.\"\n\nLauren smirked and waggled a finger in her direction. \"I've known you three years, Jade, and that's the first time that I've ever heard you say it.\"\n\n\"I mean, is it really that big of a deal?\" she asked, looking up at Andy.\n\n\"It's... actually kinda creepy to me,\" Andy said. \"Fake cussing drives me up the fucking wall. If you don't want to cuss, then don't, but please don't use that weird G-rated shit in its place, because it's just... it's just unsettling.\"\n\n\"And besides,\" Emily said to her, \"Andrew truly does love actual cussing. When a girl is willing to get more and more salty for him, the faster his cock grows nice and hard for us.\"\n\nSarah grinned broadly, moving over to put her arm around Jade's shoulders. \"You know what you fucking need? A motherfucking profanity coach! And I'm the shit when it comes to swearing! The absolute tits! I can be! That! Fucking! Coach!\" she said, punching the air with her other hand. \"Well, no. I can be your coach on teaching you how to say 'fuck' a lot more, but not how to fuck. Although I suppose I could teach you how to do that as well? Whatever. We'll fucking figure it out. You just stick with me, bitch, and I'll turn Mary Poppins into a major slut in the best fucking way.\"\n\nJade looked up at Sarah, a strange look on her face. \"I don't think I can say no, can I?\" she giggled. \"A profanity coach? Really? What makes you qualified for that?\"\n\n\"Oh, I'm like the most fucking qualified,\" Sarah said, as she pulled Jade away from Andy slowly. \"I'm more fucking qualified to teach swearing than any sailor you're ever going to fucking meet. I learned the power of a good swear word early in life, and it's, like, my fucking superpower. I can work filthy language into any goddamn conversation I want to, all without offending anybody, because I'm good and super fucking cute at doing so! You can be that way too!\"\n\nJade looked back at Andy. \"Saying no to her isn't an option, is it?\"\n\n\"Oh, you could try,\" he chuckled. \"But you're just going to lose in the end, so I dunno why you'd even want to try.\"\n\n\"Wait!\" Sarah said suddenly, as if remembering something. She slid away from Jade and ran over to grab Andy, wrapping her long arms around him to hold his body against hers as she kissed him hard and fierce, teasing her fingernails against the back of his skull for a moment, her body trying to press his into hers as hard as she could for what felt like an eternity before finally breaking the kiss for air. \"That's for letting me read the new book before anybody else got the fucking chance to, even your goddamn agent or your legit best fucking friend. I have some notes and a handful of suggestions, but mostly? I think it's your best fucking work yet, absolutely lit. And the sex scenes were good before, but the one in this book? When Dr. Shirow practically fucking devours the Gunslinger? Ohmyfuckinggod, was that so fucking intense! I kinda broke out a vibe and had a go at myself when I was reading it. I'm not ashamed! Like, I totally knew they'd had, like, this creeping sexual tension in books before, but fuck was it hot when she just ripped his clothes off him after patching up his wounds, then fucked him on the operating table when he was too wiped out to do anything more but lay there and enjoy it. Total sploosh moment. She kinda reminds me of Niko a bit.\"\n\nNiko brought her hand to her mouth to cover her laugh, which made everyone turn to look at her. She was still in her camo from the base, not having changed into more casual clothes after getting home, meaning she must have brought the new girls right here and never left to get changed into something less intimidating.\n\n\"Something you'd like to share with the rest of the class, dear?\" Emily asked her, arching one of her finely plucked blonde eyebrows in amusement.\n\n\"I dressed as Dr. Shirow for Halloween a few weeks back, at the party where Covington stopped by to convince Andy to play in the poker game that resulted in you and Sarah being here,\" she said, almost uncharacteristically shy for her. \"After he agreed to do it, I, uh, might have kinda forcefully taken him later in the evening to say thank you, because he only agreed to go to protect my friend Charlotte, Asha's mom.\"",
        "\"Remind me ta thank you for that,\" Asha said to her. \"That got me here.\"\n\n\"Did... did you base that sex scene on our little tryst in the bathroom, Andy?\" Niko asked him.\n\nHe looked around the room, realizing that every single other pair of eyes in the room was focused on him. \"Uh, am I in trouble if I did?\"\n\n\"Not in the least.\"\n\n\"I might have, sort of, kind of, just a little... I wrote it the next morning, and yeah, they say write what you know, so...\" he said, trailing off.\n\nNiko started giggling furiously before Sarah brought Jade over with her, moving to high-five the soldier. \"Oh my fucking god. I'm a fictional super hot as fuck doctor now, and people all over the fucking planet are going to read about how great I fuck... this fucking rules,\" she said.\n\nSarah grabbed Niko's face and leaned down to kiss the mixed race woman in a fierce mash of lips, while Jade was basically prevented from moving anywhere by Sarah's other arm. Niko moaned a little bit into it, even as the kiss parted quickly, Sarah biting onto Niko's bottom lip for a moment to pull it back then letting it pop from her teeth. \"You, Ems and I have a date to have ourselves some fun in the next few days, bitch.\"\n\nNiko nodded, almost a little frantically. \"Oh yes, please.\"\n\n\"That sort of thing's okay in the house?\" Jade asked Andy.\n\n\"Definitely, if that's what you're into,\" he said, leaning against the arm of one of the couches. \"Look, there's only so much of me to go around, and a lot of the women here are into other women, and that's safe and fine, so it's not only okay, it's encouraged, if that's what you want to do. Emily and Sarah were lovers long before they got here. Same for Lauren and Taylor, despite a rough patch in the middle. But for the most part, nearly everyone here is still pretty new to one another.\"\n\nAisling nodded. \"We may all feel like we've known each other forever, Jade, but I'm the first of Andy's partners, and we only met seven months ago. Lauren and Niko showed up a few weeks later, but after that, we remained as that group for a while.\"\n\n\"Right, but Emily's got to be have been here for months, right? She seems like she knows Andy so well!\" Jade said.\n\nEmily giggled, shaking her head, her blonde hair covering her face for a minute before she flipped it out of her face. \"We've only been here a couple of weeks, love,\" she said, an almost shy smile on her face. \"But Andrew, Sares and I have an indirect history that I might suspect contributes to us giving off that impression. We all still have so much to learn about one another, which is part of the reason I won't sleep anywhere that he isn't, ever ever ever.\"\n\nNiko reached to place a hand on Sarah's ass, as the tall redhead was framed between the smaller solider on one side and the 49ers cheerleader on the other. \"Andy really is who I told you he is back at the base, Jade,\" she said, looking past Sarah. \"Whatever you do and don't want out of this family, he's going to be completely cool with it. I've kinda wanted to play with Sarah and Emily a bit, and I knew Andy would be okay with it, but I just didn't know how to bring it up to them.\"\n\n\"I'll bet he might even want to watch... or participate,\" Emily teased.\n\n\"No comment,\" Andy laughed, \"but you girls are more than welcome to have fun without me.\"\n\n\"But if you wanted to, and you knew he'd be fine with it,\" Jade asked, \"why haven't you?\"\n\nNiko reddened slightly. \"I mean, they're fucking gorgeous! I know they're going to be co-wives with me and Ash, but Ash and I have had a lot more time to get comfortable with each other! I figured I'd get around to seeing if Emily and Sarah wanted to play with me when I was ready.\"\n\nSarah reached down and bopped Niko on the nose with one of her fingertips. \"You're totes adorbs, Neeks,\" she giggled. \"I'm gonna enjoy making you fucking squirm when I make you cum. It's gonna be hella cute.\"\n\n\"What.. what if I'm not into women?\" Jade asked. The look on her face said that it was something she'd never really considered one way or another, and to suddenly have so many options in front of her was a tad overwhelming, like a starving man presented with an all you can eat smorgasbord.\n\n\"Then you don't have to play with anyone you don't want to,\" Andy said. \"But if you want to experiment, that's okay too. Lauren told me you don't have a lot of sexual experience, and that's completely fine. Nobody here is gonna judge you for it, and if they do, I'll paddle their ass for it, unless it's Lauren, in which case I'll just tie her up and not paddle her ass, because she likes that sort of thing.\"\n\n\"Spoilsport,\" Lauren said, sticking her tongue out at him.\n\n\"Look, Jade, before Aisling came into my life, the most adventurous sexual encounter I'd ever had was a slightly drunken threesome in my youth. Since then, I've have all sorts of wild experiences, and I've had space to learn what I do and what I don't like.\"\n\nSarah leaned down and mocked a stage whisper to Jade. \"Spoiler alert: He fucking loves a sweary slut.\"\n\nAll the girls laughed at that before Andy spread his hands in a 'you got me' motion before continuing. \"Nobody in this house is going to judge you for what or who does and doesn't turn you on, Jade. I do not allow kink shaming in my fucking house. Everyone here is getting something out of being here, being part of this household, but I'm not making anyone do anything they don't want to do. Nor will I, ever. Take Katie here, for example,\" he said, gesturing to the Latina groundskeeper, who had joined all the staff to meet the new housemates. \"She's married to Jenny,\" he said, gesturing to the blonde cook whom Katie already had her arms around, \"and she's entirely a lesbian. Completely sexually disinterested in men. But she and Jenny wanted the security of being in a house where they were safe and taken care of. Katie's said she's never going to want to fuck me, and that's completely fine. She needs to get my semen regularly, but the first time she did it, she and Jenny took turns blowing me.\"\n\n\"The most recent time, I tried sucking some out of Jenny's pussy after he'd fucked her,\" Katie said, \"and that worked just fine. Both Jenny and I got our fix from that one load. I might eventually want to try fucking Andy once, just to see if I can get my head around it, but I also may never want to do that, and he's okay with it either way. I was worried he was gonna be mad at us for lying to the government, claiming I was bisexual instead of a lesbian, but he wasn't. We got lucky. And so are you. I genuinely feel that way. So be you, ma'am. That's all I can tell you, and you'll do fine.\"\n\n\"It's a little shocking, but it's refreshing to see everyone so open and body positive about their sexuality,\" Jade said. \"And you three are all okay with being treated like staff instead of being treated like family?\"\n\n\"We are family,\" Nicolette said, \"but we like being staff. Jenny and Katie are committed to each other, and Andy's cum is just part of their salaries. The same's true for me, but I also especially enjoy being submissive. And speaking of which...\"\n\nWith that, Nicolette brought Whitney forward. She looked much as she had in her pictures, her skin a shade of alabaster, her hair onyx black, her ocean blue eyes looking up at him behind large circular glasses with thick frames. She wore a semi-sheer white silk blouse beneath a gray blazer, the deep crimson colors of her bra covering her apple sized breasts visible plainly through the fabric. She also wore a black leather skirt, with gray stockings disappearing up beneath it. She was shorter than many of the other girls in the family, halfway between five and six feet tall, if he needed to guess, and slender, not so thin as to look unhealthy, but certainly the thinnest member of his family. (Andy made a mental note to insist that she eat a healthy amount moving forward, and not starve himself for his benefit.) Her lips were painted with lipstick the same shade as her lingerie, a lustrous red the shade of fresh blood, a hue meant to evoke both lust and portents.\n\nNicolette's hand was on Whitney's back, almost gently pushing her in front of Andy. The pale girl had her arms in front of her, her wrists crossed, almost as if she instinctively kept them in that pose, in case they were about to be bound in rope. Her fingernails were painted the same color as her lips. Her black hair was drawn back, pulled tight along her head and drawn into a neat bun, with a single lock of it loose and dangling along the side of her face.\n\nHer head was tilted slightly downward, but her eyes were lifted up to focus on his gaze. \"This slut is very pleased to meet you, sir, and hopes you will take her to be part of your staff and your property.\" The look in her eyes was smoldering with more lust than even Piper's had held when she'd nearly blindly raped him when they first met. \"She very much wants that.\"\n\n\"I, ah, I wouldn't have extended the invitation to you if I didn't want to bring you into the House of Rook.\"\n\n\"This slut understands, sir, but there should be a bit of formality and ritual to all of this, rather than simply bringing this slut underneath your house's protective wing with a smile and a handshake.\"\n\n\"That's fair, Whitney. So tell me what you want.\"\n\n\"This slut wants a bit of ceremony to it, sir. For you to collar her, and then claim her by imprinting her, in front of as many members of the house as possible. In speaking with Nicolette, it was made clear to this slut that you might be a bit nervous about collaring her, but she wants to ensure to you that this is what she wants, what she truly wants.\"\n\nWhitney had a deliberate intensity to her that Andy might have found overwhelming if Nicolette hadn't helped prepare him for it. Thankfully, Nicolette had spent a few minutes each day since the decision was made to invite Whitney helping mentally prepare him for what to expect.\n\n\"You brought a collar that you'll feel comfortable wearing?\"\n\n\"This slut has, sir.\"\n\n\"Well, then. Would you like to wait or would you prefer to do it sooner?\"\n\n\"Sooner, sir,\" she said, clenching her fingers in and out of fists, as if the waiting was difficult for her. She leaned over to the couch, opening her purse, taking out a collar that was both simple and elegant, a long leather strip with a gold clasp in the front that featured a stylized rook chess piece on the face of it. She held it out to him, and he took it from her with his left hand. \"This slut had originally hoped the ritual might take place outside, but the weather has gotten too chilly, so indoors will have to suffice, with your permission, sir.\"\n\nAndy reached down and brought one fingertip along Whitney's cheek, and she turned her cheek to lean into his touch, her skin cool to the touch, and her eyes never once leaving his face. She followed his finger back for just a moment longer than seemed necessary, a soft smile on her face. \"So, attendance for this is entirely voluntary, and anyone who doesn't want to attend doesn't have to, but anyone who wants to is completely welcome. Tala, Jade, obviously, if you want to go pick an open bedroom and settle in, that's fine.\"\n\nTala had a grand belly laugh at that, shaking her head, almost with tears in her eyes. \"You couldn't fucking bar me from watching this, baby,\" she said, putting her arm around Sheridan's shoulder. \"I already tossed my suitcase into the room next to Sheridan's so let's get the show on the road already!\"\n\nAndy looked over to Jade, who smiled at him, shaking her head, adamant to remain in the room. \"I'm getting into this family, by hell or highwater, Andy,\" Jade said to him, \"so I definitely want to see if all the things they told us at the Air Force base were true. Well, I guess the whole thing about the first taste of cum making us orgasm is true. Tala just proved that.\"\n\n\"God, bitch,\" Tala laughed, \"you have no idea how fucking great that was. I've had a good amount of sex in my life, and that little taste was the best fucking orgasm I've ever had, so if the imprinting one is even stronger...\" She shivered with an impish grin on her face. \"The waiting is the hardest fucking part.\"\n\n\"And I'm not ashamed about sex, Andy,\" Jade giggled. \"I just haven't had it yet. I threw my suitcase into an open bedroom when I first got here. Lauren suggested I do it before you got home. So I agree with my new friend, Tala. Let's go team!\"\n\nNicolette made her way over to stand next to Whitney for a second, as Whitney unlocked her cellphone and handed it to Nicolette. \"This slut would like her friend to film all of this for her, so she may watch it later, with sir's permission of course,\" Whitney said to him, as Nicolette stepped back a few paces, holding the iPhone sideways, to get a good wide angle that framed both Whitney and Andy in the same shot.\n\n\"That's fine,\" Andy said, tipping his head a little. \"Although I'll also want a copy of the video for myself.\"\n\n\"Of course, sir.\"\n\nAndy gestured for the women of the family to move and form up around Andy and Whitney, a ring of beauty encircling them, giving the whole thing a bit more sense of ceremony. Then he turned his eyes back to Whitney. \"Now strip.\"\n\n\"Yes sir.\" First, she slid off the blazer, moving to fold it over the back of a nearby couch. Next she unbuttoned the white silk shirt that was so sheer, she might as well not have been wearing it at all. After that came the skirt, and when it dropped he could see she was wearing red panties that matched her lacy crimson bra, as well as a red garter belt that clipped onto the stockings. She unclipped them one at a time, rolling them down her legs, setting them with the rest of her clothes, never once turning away from him.\n\nWhen she removed the bra, her tits came into view, small and perky, with tiny pink nipples atop them that were rock hard, She slipped the garter belt off, then pushed her panties downward, crouching as she did, stepping out of them before laying them atop the stack of her clothes. She had a small thick triangle of black curls above her otherwise shaven pussy. Once she was naked, her arms crossed at the wrists in front of her once more.\n\n\"This slut spoke with her friend, and she told her that you were fine with both shaven and unshaven cunts, so this slut tried to split the difference, but if you prefer something else, you need only speak and it will be done, sir.\"\n\n\"Your body is your own domain, Whitney,\" Andy said. \"You should keep your pubic hair how is most comfortable to you and you alone.\"\n\nWhitney frowned for just a moment, then nodded. \"Yes sir.\"\n\nAndy knew it wasn't the answer she'd been hoping for, that he would dictate her every move, but Andy wanted to hold firm that she would need to decide a few things for herself. But, to reassure her that those things would be few, he decided to exert a bit of control again.\n\nHe reached forward and grabbed one of her wrists, pulling her arm away from her body, then pushed it down the front of his jeans, before bringing it back out, making sure there was a streak of precum on her palm, as he'd intended. \"Keep that hand out, and don't lick it until I tell you.\"\n\n\"Yes sir.\"\n\n\"Now get down on your knees.\"\n\nThat made her smile again. \"Yes sir.\" She moved down to her knees before him, but kept her head raised the entire time, her back not bending in the slightest, remaining perpendicular to the floor, sitting on her heels. The entire time, she kept her right hand palm up. \"Thank you sir.\"\n\n\"I'm still a little nervous about this, so I'm going to require you to ask me for what I'm holding in my hand here,\" he said, shaking the collar in her direction.\n\n\"Yes sir,\" she answered. \"This slut...\"\n\n\"No.\" The sudden interruption caught her off guard and she seemed confused, so he elaborated. \"For this, in this moment where you are choosing to surrender everything to me, I want to hear it directly from you. None of this third person language. That's a passive way of doing it. If you want to return to that afterwards, that's fine, but for here, this singular moment, you have to be you. Either you want this, or you don't. And if you can't say it, out loud, to me, I'm not going to believe that you truly want it. You have to convince me. Try again.\"\n\nWhitney smiled a little bit more now in understanding, nodding once. \"This...\" she started before catching herself and beginning one final time. \"I want you to collar me, sir. I want you to claim me, to put that leather around my neck, to make me your possession, a member of your household, but more importantly, a person that you own, that you have total dominance over, to exert whenever and where ever you want to. I, Whitney Ophelia Wells, want you, Andrew Rook, to give me a collar, your collar, that I can proudly wear, so that anyone who sees me knows that I am your property, by choice, and that knowing what I truly am is exposed to the world at all times brings me the greatest joy anyone could ever imagine. By placing the collar around my neck, you will take control of my body, mind and soul, and they will always be yours, to do with what you please, and that is what I want most in this world. So please, sir, fulfill my greatest wishes and desires. I want you to collar me, and make me your slut. Will you bestow upon me that most holy of honors? Sir?\"\n\n\"When this latch clicks, Whitney,\" he said, lifting the leather collar, bringing it towards her neck, \"I want you to lick your hand, so the moment is seared into your brain.\"\n\n\"Yes sir.\"\n\nHe'd given this a bunch of thought over the last few days, and Nicolette had made it clear to him that he should try and imbue this moment with as much ritual and ceremony as he could, to make it feel like something that had been done throughout the ages, that there was a history to it, even if he was simply making it all up off the top of his head. He'd prepared a few things, in his mind, and he hoped they would be enough.\n\nAs he began to slide the leather against her skin, seeing the tiny shiver of excitement from her body, he began to speak, trying to keep his voice steady and calm, as if he wasn't as nervous about all of this as Whitney seemed to be.\n\n\"With this collar, I, Andrew Rook, hereby claim and take possession of you, Whitney Ophelia Wells, and bring you into the House of Rook, where you will serve the family as our technical expert first and foremost, but also as my personal plaything. You surrender your mind, your body, your will and your soul to this family, and to me, as its head. This is what you have chosen, what you have asked of me, and now, I have granted it to you. I claim you. I own you. You belong to me. You are...\" He waited until he had the latch mechanism figured out and said the last word in time with his hooking of the latch. \"Mine.\"\n\nOnce the final word left his lips, she immediately brought her palm to her lips and licked the spot of precum clean. Her entire body tried to hold perfectly still after her tongue touched the liquid, but Andy could still see those blue eyes roll back into her skull in sudden shock and brainfry. Her eyelids fluttered frantically, but other than that, she held perfectly still and made no noise at all, despite the overwhelming rush of pleasure that was tearing through her body.\n\nAll the women gathered around them closed in a step or two, as if tightening the circle in some long forgotten ritual. Andy hadn't asked them to do that, so he figured they were simply getting as caught up in the moment as he was.\n\nHe didn't want to interrupt her moment, so he waited until she seemed to have regained her composure, her deep blue eyes opening to look at him once more, now in much more exposed adoration. \"Your slut thanks You, Master.\"\n\nAndy had to prevent his smile from growing too wide, as he still had a part to play, but he immediately noted the change in her language. No longer 'this slut,' but 'your slut.' No longer 'sir,' but 'Master.' Before, he had simply been a respected man standing before her. Now, he had claimed her and given her Purpose.",
        "\"She would very much like to be imprinted now, Master, if that is to Your pleasure.\"\n\n\"I believe that seems appropriate,\" he said, and the gathered girls giggled a little at that. \"Nicolette, I want you to sit down on the couch here. Whitney, you are going to stand up, keep your legs straight, bend at the waist, and place your hands on Nicolette's shoulders, so she can film your face the entire time while you're being imprinted.\"\n\n\"Yes, Master. Thank You, Master.\"\n\nWhitney rose to her feet, then spun around, which was the moment Andy saw it, and everything nearly fell apart for a split second.\n\nThere, on the small of her back, was a fresh tattoo, clearly less than a day or two old, as the skin around it was still reddish and angry, and the colors were still that insanely brilliant tone that only the newest of tattoos had.\n\nWhen the first Druid Gunslinger book had been nearing publication, the publisher had suggested Andy make some sort of symbol that could be on the books, a sort of visual branding that would make them immediately recognizable. Andy had contacted an artist to give the books a symbol. It had taken them a few weeks and several iterations, but eventually, Andy had settled on something he liked. It was a fictional runic marking (designed to look like a real druid symbol without actually being one) with a crossed pair of stylized revolvers behind it.\n\nThe symbol had become something of an easy touchstone for fans of the book to use, and Andy had even set up an online store to sell t-shirts with the symbol on them, which had been a nice little side hustle to bring in extra cash.\n\nThere, on the small of Whitney's back, was the Druid Gunslinger symbol. Not even the basic black version, but the full color version that had appeared on the cover only a few books ago. But the symbol itself wasn't what had Andy more than a little nervous.\n\nJust beneath the Gunslinger insignia, using the font the titles of his books had been written in on their covers, were the words \"Property of Andrew Rook,\" tattooed into Whitney's skin.\n\nAnd, just like that, he immediately knew what Ash had been preparing him for in the car, and did his absolute best to let the anger drain from him. She was right, he realized, in that he suspected Whitney had seen it as a gift, and that while Andy had specifically told Nicolette during their early discussions that he didn't want Whitney to get branded on his behalf, he hadn't said anything about tattoos, even if he'd thought it had been implied by his tone.\n\nThis, he realized, Whitney had intended as a gift for him, further proof that her devotion was genuine and not to be questioned.\n\nFrom glancing at her, it was clear she bore no other tattoos on her skin, and in that moment, Andy remembered his first tattoo, how it had itched for days afterwards, and the advice his tattoo artist had given him to keep him from scratching it.\n\nWhitney moved to stand in front of Nicolette, and then bent at the waist, placing her hands on Nicolette's shoulders, while Nicolette kept the camera pointed at Whitney's face. \"Is this acceptable, Master?\" she asked, not looking back over her shoulder at him, keeping her head pointed forward, as she'd been instructed to.\n\nAndy walked up behind her and with his foot pushed one of her legs a little more apart, making her stance just a fraction wider, so that the angle would be perfect. Then he lifted his right hand up and slapped it down onto the fresh tattoo, knowing it would smart just a little, but that the smarting would make the urge to scratch the itch fade. \"Thank you for the gift, Whitney.\"\n\nAs she was standing behind the couch, he saw Aisling smile and nod encouragingly at him. He considered himself exceptionally lucky to have found her first, and she knew him better than anyone, and had cut off his anger before it had even had a moment to take seed.\n\nHis initial response, the anger and annoyance, that had simply been his brain getting mixed signals. The decision to get the tattoo had been entirely Whitney's, and she'd meant it to bring him joy, and to bring herself joy, not to anger him. His anger had been simply that she had taken such a drastic action on his behalf without talking to him first, but at the end of the day, it was her body and her decision to make, even if she was choosing to submit all decisions henceforth to his discretion.\n\nIt was something she wanted to do for him, and Ash had made it clear to him that the proper way to receive any gift was to say thank you.\n\nWhitney moaned a little bit after the slap, then purred. Andy remembered that Nicolette had said to him that Whitney wasn't into pain in a large way, but that bits of it applied sparingly were very delightful to the newest member of the household.\n\n\"Thank You, Master,\" she said, her eyes trained on the camera in Nicolette's hand. \"I hope the craftsmanship is to Your liking.\"\n\n\"Very fine needlework. If you are considering getting any more, however, perhaps maybe run them by me in advance.\"\n\n\"Your slut will not modify her body in any way further without Your permission and encouragement, Master, but she felt it important that even when her collar was even briefly removed, while bathing and such, that it always be known that she belongs to You. She takes great pride in that.\"\n\nHe nodded, drawing in a deep breath before letting it out again. This was certainly going to take some getting used to, he thought to himself, before speaking once more. \"Thank you for that as well, then.\"\n\n\"Now, Master, if Your slut might be so bold?\" Whitney giggled a little, and wiggled her ass in his direction. \"Would You do Your slut the honor of fucking the ever living shit out of her tight young twat, until her knees go weak and she collapses against her friend while Your gift of cum boils her new identity into her from her cunt outwards? She may be scrawny, but she's not fragile, and Your newest bitch loves a bit of rough'n'tumble.\"\n\nHe glanced at Nicolette's face, and the grin that was plastered on it couldn't have gotten any wider. She mouthed to him the words \"slam dunk\" before giving him a saucy little wink. She wasn't wrong, that much was certain.\n\nAndy unbuckled the belt of his jeans, then unbuttoned and unzipped them, reaching into his boxers to fish out his cock. He heard Jade gasp a little bit, and Andy had to exert great willpower not to smile at that. He'd forgotten this would be her first sight of it. He moved to rub the tip of his dick against her pussy, but didn't thrust inside of her yet.\n\n\"Give your friend a kiss and tell her thank you for making this possible, Whitney.\"\n\n\"Yes Master,\" she moaned. It was clear she vehemently wanted that cock railed inside of her, but she was holding perfectly still. \"Thank you, Nicolette, for bringing me to our Master, for sharing with me this great gift.\"\n\n\"You're welcome, you silly little--\" The sentence was cut off as Whitney pressed her lips hard against Nicolette's, kissing her with a familiarity and an eagerness that reflected how long and well the two knew each other.\n\nTo allow them a moment, Andy glanced around the circle as best as he could, just checking in on the expressions of all the other women in the household. He noticed, having missed before, that all the girls were holding hands, a sealed ring formed around the three of them. It was also impossible to miss that more than a couple of the girls were rubbing their thighs together just a little, turned on by what they were bearing witness to.\n\n\"Alright you two, break it up,\" Andy laughed, nudging Whitney's hip, \"otherwise Nicolette's not going to get your face right at the key moment, Whitney.\"\n\nThe two girlfriends giggled furiously as they parted in their kiss, and Nicolette moved to get the camera pointed at Whitney's face once more. Almost in unison, they said together \"Sorry Master,\" in a sing songy tone that made it clear that they truly weren't.\n\nOnce Nicolette had gotten the camera raised once more, Andy lined up the tip of his thick cock against Whitney's slippery snatch and then lunged forward into her, until the head of his cock was nearly pressed against the back of her cunt, and his balls swung forward to slap against her clit. The sensation of being suddenly stuffed full brought forth a wanton groan, far deeper in tone and more guttural than any sound she'd made yet.\n\n\"Fuck, Nic, he's so much fucking thicker than Bill was,\" she whimpered to her friend, just loud enough that Andy could barely hear her. \"My cunt feels like it's being stretched out. But it feels fucking amazing...\"\n\n\"You're welcome, babe,\" Nicolette whispered back to her. \"Welcome home.\"\n\nAndy drew his hips back, sliding most of his cock out before ramming forward again, feeling her whole body shudder and spasm in response to the hard thrust, his balls clapping against that bundle of nerves once more.\n\nHis hands both grabbed onto her hips so he could get her positioned properly, and to pull her into each forward shove of his hips, his cock starting to batter in and out of her at a good clip, each smack of his pelvis into her ass making her squeal and whine in delight.\n\n\"Thank You Master thank You thank You thank You thank You...\" she started babbling at him, as he continued to rail her, each yank of her hips met with a countering push of his own, setting a hard and quick pace, the sound of sweaty flesh smacking against each other the only audible thing in the room other than Whitney's prayers of gratitude.\n\nShe was tight, certainly one of the tightest members of his family, likely because of her lithe and slender form, and her pussy clung to his cock even when he was drawing back, like her whole body was refusing to let him escape.\n\n\"May... may Your fucktoy cum, Master?\" she gasped out in between thrusts.\n\n\"Do you like orgasm denial, Whitney?\"\n\n\"Some... sometimes, Master, but she feels like she's going to split something if she holds it much longer!\"\n\n\"Then cum.\"\n\nHer entire body clamped down on him, her cunt trying desperately to get his cock to hold still, but he kept on plowing her even while she orgasmed around him, the expression on Nicolette's face telling him everything he needed to know about Whitney's condition.\n\nA few seconds later, the vice grip of her snatch had relaxed a little, and she gasped in a sudden lungful of air, like she'd forgotten to breathe while she'd been cumming. \"Thank You Master, but Your slut needs Your cum, needs to feel it inside of her needy, incomplete cunt, to fill that hole inside of her soul. Finish her, Master. Finish me! Complete Your whore!\"\n\nThe girls had closed into a tight ring around them now, each of them wanting to be as close as possible for this moment, to make the ritual more memorable for Whitney or to offer their support for Andy, or maybe some combination of the two.\n\nAndy pointed quickly to Niko, who was just to the left of Aisling, and Emily, who was just to the right of her, gesturing for them to each put a hand onto Whitney's shoulders, which they did, just barely in time.\n\nAs soon as Whitney was properly supported, his hands latched onto her hips firmly, making sure he had a solid grasp, as his cock impaled deep inside of her cunt and began to shower the back of her pussy with a searing load of hot jizz, popping like firecrackers inside of her. Her entire body seized up and her arms felt limp, Emily and Niko keeping her from falling face first into Nicolette, his hands on her hips holding her up, as her legs bowed beneath her, completely unable to support her, suspended in the air only by the four arms holding her up.\n\nWith his fiancees' help, he lowered Whitney's body down on top of Nicolette, letting her body sink into the tall French girl's body, as she turned off the camera on the cellphone, setting it aside. She was, of course, whispering the word \"imprinting\" into Nicolette's neck.\n\nAndy tucked his cock away, zipping up his jeans and redoing his belt as he looked to Nicolette. \"Are you going to need help getting her to her room, Nic?\" he said, trying on Whitney's nickname for the statuesque blonde for the first time.\n\n\"No, Master,\" she giggled. \"I've had to carry Whitney up the stairs to her old apartment on nights when she's gotten stinking drunk, and I'll manage. If it's alright with you, I'll also remain with her until she wakes up tomorrow, so I apologize if I'm neglect in my duties until then.\"\n\n\"Your duties are to take care of Whitney until she wakes up, Nic. That's your most important duty right now.\"\n\n\"Yes Master. Thank you, Master.\"\n\nHe leaned down and pressed his lips to Nicolette's tenderly, a kiss that was more affectionate than sexual, and when he pulled back from it, he saw a tear of joy starting to run down her cheek, which he wiped away with a thumb. \"No no, thank you, Nic.\"\n\nThe room was quiet as he stretched his arms over his head, and finally, Jade spoke to break the tension. \"Holy fucking shit, that was hot,\" she said quietly, hugging herself slightly.\n\n\"See?\" Sarah giggled. \"I'm being a great fucking influence already.\"\n\nThat made the girls all giggle, until Tala spoke, interrupting their laughter.\n\n\"I definitely got next,\" she said.\n\nThat just made them laugh even harder."
    ],
    "authorname": "CorruptingPower",
    "tags": [
        "bdsm",
        "threesome",
        "maid",
        "collar",
        "french kissing"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/quaranteam-ch-29"
}