{
    "title": "Management Skills Ch. 02",
    "pages": [
        "For the second time that night, Molly woke up in the darkness of Jake's bedroom and felt the swooping thrill in her stomach caused by the touch of his body adjacent to hers. Shifting slightly, she read the alarm clock display. A quarter to four. As she listened to Jake's slow, regular breathing beside her, her mind played back over the past few hours. With a smile dancing across her lips, she revelled in the way Jake had made her feel and the mind-blowing climaxes he'd pushed her body through. She knew the sensible thing would be to go back to sleep and rest until they both woke up naturally in the morning, but Jake had promised a reciprocal arrangement and so far, events had been unfairly one sided.\n\nSmiling to herself, Molly gently shuffled herself around, ensuring she didn't wake Jake. As she moved, she felt the slippery mess between her legs which remained from when Jake had turned her on beyond all comprehension a few hours previously. Slowly, she wriggled her way down the side of his body until her face was level with his groin. She needed to at least partially start to redress the balance. Levering herself up on an elbow, Molly tenderly held Jake's relaxed cock in her hand. Dropping her face down to him, she began to carefully lap her tongue across his smooth, velvet skin. As she eased his soft head into her mouth and began to gently suck and flick her tongue, Molly felt Jake's body twitch very slightly. It took only moments for him to start hardening within her mouth. By the time he had groaned and begun to escape from his slumber, Jake was sporting a very impressive erection.\n\n'This is the best wake-up call I've had in my life. What exactly do you think you're up to?' he murmured, still half asleep.\n\n'Enjoying myself,' grinned Molly, swirling her tongue around the smooth head, enjoying the discovery of all his sensitive ridges and curves. Molly spent some time building Jake's pleasure so that by the time she had finished, his foreskin had completely retracted and the tip of his cock was incredibly swollen and taut.\n\n'You make me feel so incredibly horny,' he groaned, as he pulled Molly up the bed. 'Now, what did I promise you?' he sighed as his lips dropped to her neck and he began to nibble gently, causing Molly to gasp. 'Oh yes, I remember. That I'd make slow, tender love to you. Are you sure you want to choose that over sleep?'\n\n'Any day,' sighed Molly, as Jake's hand migrated down her body and slipped between her legs.\n\n'God, you're so wet,' he sighed, relishing Molly's body as his gently stroking hand caused her to cry out with desire. 'I'm so grateful it's the weekend.'\n\n'Why,' groaned Molly, her internal muscles clenching around Jake's long, knowing fingers.\n\n'So I can make love to you throughout the night, without the guilt of having to pull a sickie in the morning because I haven't got the energy or the inclination to go into the office.'\n\n'That would be a bit of a giveaway if neither of us turned up,' sighed Molly.\n\n'I'm turning the bedside light on,' murmured Jake, detaching himself momentarily from Molly's body. 'I want to see the beautiful woman I'm making love to.' As the dim light flooded the room, Molly's eyes adjusted slowly. A zing of lust passed through her body to see Jake's gorgeous naked form. He laid himself back down on the bed and, pulling Molly gently towards him, guided her to straddle his body. As Molly slowly lowered herself onto Jake's thick cock, her eyes rolled backwards.\n\n'Jee-zus,' she groaned as Jake's width stretched her to the very limits of her endurance. Once he was entirely buried in her body, Molly began to gently rock her hips, causing delicious sensations for both of them.\n\n'Mmmm,' sighed Jake, as he surreptitiously moved the pad of his thumb between their bodies, so that at the most forward point of Molly's movement, her clit would just be impacted.\n\n'Oh!' cried Molly, as she realised what Jake was doing and thrust further forwards, in order to meet his delicious touch.\n\n'Kiss me,' sighed Jake. 'Please, kiss me.' Groaning in protest at the stampede of her approaching orgasm, Molly bent down and gently suckled Jake's lower lip into her mouth. As their tongues began to entwine, Molly's internal muscles tightened sharply around Jake. When her body collapsed into her climax, Molly lost all rhythm. Grasping his hands on either side of her hips, Jake firmly rocked Molly along his length, forcing her to ascend the scale of intense pleasure several times before he let her rest.\n\n'I know I promised slow and tender,' growled Jake, manoeuvring himself away from Molly and flipping her onto her hands and knees. 'But that might have to wait for another time.'\n\n'Why?' \n\n'Because right now, all I can think about doing is fucking you,' he replied.\n\n'Oh,' shuddered Molly.\n\n'Hard,' continued Jake, pushing Molly down onto her elbows, so that her ass was lifted high in the air. 'Ready?'\n\n'Uh-huh,' groaned Molly as Jake quickly buried himself inside her. Pulling out completely, he then plunged back inside her again, relishing the sound of her fraught moans. Immediately, he found a rhythm of slow, hard thrusts which caused Molly to spiral towards another orgasm as she rocked back against his body. As Molly's cries became increasingly desperate, Jake moistened his right hand with his tongue and then placed his fingers around Molly's nipple, applying pressure and then twisting gently.\n\n'Oh fuck!' Molly cried as her muscles squeezed down on Jake's thick, plunging shaft. Coming loudly, Molly was still gasping for breath when she realised that Jake's hand was migrating down her body.\n\n'Again,' he growled as his fingers slipped across her swollen clit.\n\n'I can't,' groaned an exhausted Molly, her body having been pushed to its limits of endurance multiple times already throughout the night.\n\n'You can,' replied Jake. 'I'm so not finished with you yet,' he added, as his thrusts deepened and he began to try and clasp her slippery clit between his thumb and forefinger, using the same technique as he had on her nipple before.\n\nAt that point, Molly seemed to ascend into a different world, another existence, where all she could do was feel the overwhelming sensations which Jake caused within her body. With a thrill, she simply handed control over, opened her body up to him and accepted everything that her amazing lover was giving her. Never had she been fucked so hard; so thoroughly, so vigorously. Jake was effectively opening up a whole new dimension of sex to her. She was bubbling over with desire, pleasure and need. And it felt...beyond amazing.\n\n'Oh God!' cried out Jake eventually. 'Oh God,' he repeated before slamming into her one final time and spilling himself deep within her. As Molly collapsed onto the bed and Jake pulled out of her, she rolled onto her back. Jake's mouth immediately fell onto hers.\n\n'You are fucking incredible,' he groaned when he eventually broke their kiss. 'I've never experienced anything like that.'\n\n'Me neither,' murmured Molly, her eyes already closing. 'But I'm completely and utterly shagged. I'm sleeping now...'\n\n********************\n\nThe next time Molly woke, it was Saturday morning. Song birds were chirruping in the trees outside Jake's bedroom window and a warm orange sunlight bathed the room. Turning her tired body over, she realised Jake was no longer in bed with her. Stiffly, she shuffled to the bathroom, noticing on her way that it was already past ten o'clock.\n\nReturning to the bedroom, Molly dropped back into bed. She could hear Jake's footsteps creaking their way up the stairs. As he entered the room, Molly felt her stomach swoop, both at the sight of her lover and the unembellished memory of what they had shared together.\n\n'You're up,' he grinned. \n\n'Barely,' she giggled.\n\n'I was going to surprise you with breakfast in bed,' he explained, nodding down at the large tray he was holding. On it, Molly could see tea, orange juice, warm croissants, butter and jam.\n\n'Thank you,' she smiled, admiring his body which was clothed only in a pair of lightweight cotton shorts. 'Can I make a slightly strange request?'\n\n'I wouldn't expect anything less,' joked Jake. 'What's your request, sweetheart?'\n\n'Can we sit out in the garden and have breakfast? It looks like a perfect morning.'\n\n********************\n\n'I shouldn't want you again, should I?' asked a beaming Jake, finishing the croissant on his plate and licking his fingers contemplatively. 'But I do.' Molly watched him out of the corner of her eye, dumbfounded at how sexy he was.\n\n'Are you ever satisfied?' teased Molly, taking in a long, deep lungful of fresh country air. Sitting on the patio, the sun's warmth felt delicious against the bare skin on her legs and face.\n\n'Believe me, I've been satisfied a number of times in the past twenty-four hours,' grinned Jake. 'Although, I have to say...'\n\n'What?' queried Molly, as Jake got up and dropped to his knees in front of her.\n\n'My satisfaction levels might need a little top up,' he smiled, dropping a tender kiss to the knee which he had previously covered with a plaster. Pushing apart her thighs, he began to kiss along the length of her leg, starting from the knee and heading upwards. His stubble had grown razor sharp now, and Molly jumped at the shocking feeling of his face moving along her inner thighs and grazing her pussy lips.\n\n'You're insatiable,' she breathed.\n\n'We don't have to, if you'd rather not?' murmured Jake, looking up at her, his mouth hovering above her clit.\n\n'I didn't say that,' groaned Molly.\n\n'Oh good,' smiled Jake, unexpectedly standing up and pulling off her dressing gown. Grabbing her hand, he marched them straight across the back lawn.\n\n'What are you doing?' giggled Molly, desperately looking around to make sure nobody could see them, using her spare hand to try and cover her naked breasts.\n\n'You're fine, we're not overlooked,' said Jake, looking down appreciatively at her body. They reached a covered outdoor swimming pool. Jake pushed some buttons on a panel and the cover began to automatically retract.\n\n'Wow,' sighed Molly. 'You obviously get paid more than me.'\n\n'Not that much more,' chuckled Jake. 'Come on, it's heated.' Removing his shorts, he led Molly into the deliciously warm, salt-water pool. Pulling Molly into his arms Jake then kissed her gently. 'At last, I think I'm ready to make slow, tender love to you. If that's acceptable?'\n\n'More than acceptable,' sighed Molly, wrapping her legs around his waist. As Jake drifted towards the deep end, Molly bit his shoulder lightly as he slowly entered her.\n\n********************\n\n'Thank you for bringing me home,' murmured Molly, suddenly encompassed with a feeling of unexpected emptiness, as Jake pulled his car up in front of her house.\n\n'You're welcome,' said Jake. 'But you don't have to go.'\n\n'But I really ought to go home and leave you in peace,' smiled Molly bravely. Having made love yet another time, Molly and Jake had then shared a delicious bubble bath, followed by a late lunch. It was now mid-afternoon and Molly's lack of sleep was starting to catch up with her.\n\n'Of course, you want to be at home and have some time to yourself,' agreed Jake. 'I've been commandeering far too much of your time.'\n\n'That makes the last twenty-four hours sound almost innocent,' giggled Molly.\n\n'When in reality, we know it was a no holds barred shagfest?' queried Jake dryly.\n\n'Something like that,' she laughed. \n\n'Molly?' said Jake quietly.\n\n'Yes Jake,' she smiled.\n\n'I'd really like to see you tomorrow.'\n\n'I'd really like that too.'\n\n'Good. Why don't you come over just before lunch and we'll walk to the local pub. They do a great Sunday roast.' Molly nodded and brushed her lips across his.\n\n'I'll see you tomorrow then,' she said, smiling shyly. Jake watched her walk up her driveway to her front door. As she turned to wave, Jake had a desperate desire to race up to her side, wrestle her into the house, kiss her indulgently and then hold her close until they both fell asleep. Instead, he raised his hand, smiled and drove away.\n\n********************\n\nBy the time Molly pulled up in Jake's driveway on Sunday morning, she was bubbling over with excitement to see him again. The night they had spent together had become almost dream-like in her mind, to the point that she had to keep pinching herself to believe it had happened at all. As Molly walked towards his front door, Jake stepped out of his house and pulled the door firmly closed behind him. Molly noticed he still hadn't shaved and, to her amazement, his stubble made him look even more shaggable than ever before. Grinning at each other, Molly walked straight into his open arms. As their lips collapsed together, Jake gathered her into a tight embrace and there they remained for some time. \n\n'Hey you,' murmured Jake, eventually breaking their kiss.\n\n'Hey back,' smiled Molly.\n\n'Sorry about the stubble. I always refuse to shave at the weekend,' explained Jake.\n\n'Don't apologise. I love it,' sighed Molly. 'It's extremely sexy.'\n\n'I'm glad you approve,' he twinkled.\n\n'Sorry if I'm late.'\n\n'You're not late,' chuckled Jake, taking her hand and leading her in the direction of the pub. 'I was listening out for you. I thought it was probably best not to invite you into my house.'\n\n'Why?' asked a confused Molly. 'I didn't realise I was such a bad house guest.'\n\n'Isn't that obvious?' asked Jake, sending a cheeky gaze in her direction. 'Do you seriously think we'd have made it to the pub for dinner, yet alone lunch, if you'd got as far as my hallway?'\n\n'I'd like to think we could try,' smiled Molly. \n\n'Dream on,' said Jake, shooting her an incredulous look.\n\n'If we can't, that could make being at work rather complicated.'\n\n'Yeah,' groaned Jake, stroking the ball of his thumb across the palm of her hand. 'That's not going to be easy but let's not worry about now.'\n\n********************\n\nThe pub was a short walk from Jake's home, tucked along a quiet rural lane. Sitting outside, beside a gentle stream, the sun shone deliciously down upon them. They happily chatted and laughed their way through a bottle of wine and a three-course meal, ignorant of the existence of anybody else in the world, except themselves.\n\n'Tell me more about yourself,' murmured Molly. Jake remained such an enigma to her. Such a mystery.\n\n'What do you want to know?' he said playfully.\n\n'I don't know,' she sighed. 'You decide.'\n\n'OK,' smiled Jake. 'But I expect you to reciprocate.'\n\n'Deal,' replied Molly.\n\n'Well, I grew up in a little English seaside town on the South Coast,' began Jake. 'The youngest of three. My Dad worked for the Home Office and my Mum was a maths teacher. My happiest memories are being on the beach with my family and our dog, Bessie. Me and my brothers were seriously into windsurfing so we spent a lot of time by the sea.'\n\n'That sounds idyllic,' sighed Molly. 'Are your family still nearby?'\n\n'Yeah, mostly. Mum and Dad are retired but still live in the same place I was raised. You can still see the pencil marks on the utility wall, which they drew each year to record all of our heights as we grew,' smiled Jake fondly. 'My brother Zach's a cardiothoracic\n\nsurgeon in London so I see him pretty often. In fact, you've already met.' Molly looked slightly vacantly at him. 'My running partner?'\n\n'Oh. Right. I thought you looked similar.'\n\n'Both very handsome you mean?' chuckled Jake. 'My other brother, Chris, emigrated to Australia. He's a lecturer at Sydney university, married with two kids. Living the dream,' he grinned. \n\n'Sounds like you're all very high achievers.'\n\n'You wouldn't say that if you spent any time with my family,' replied Jake. 'Between the five of us, I'm not sure we could change a car tyre. So, your turn.'\n\n'Well, I grew up in Surrey. An only child. Probably spoilt rotten by my parents, if I'm honest. We had dogs and horses and I grew up wanting to be a vet but didn't get the grades. I probably didn't try hard enough. I always wanted to work with animals but somehow fell into computing instead.'\n\n'I miss being around animals. I'd love to own a dog again,' said Jake abstractedly.\n\n'So, what's stopping you?' asked Molly.\n\n'Well, I can't at the moment. It doesn't seem fair to have a dog and then go into the office five days a week.'\n\n'Fair point.'\n\n'I was planning to get a working cocker spaniel some years back, but my ex wouldn't hear of it.'\n\n'Oh,' said Molly. She was desperate to hear more about Jake's life, but equally, the thought of him with another woman made her feel faintly queasy.\n\n'Yeah. I was married for five years. Been divorced quite some time now,' explained Jake. 'She said pets made the house untidy, which is probably true. But I'd rather have a dog in a messy house than live in a clean house which has no soul.'\n\n'I know exactly what you mean,' smiled Molly. 'Dogs just seem to have an innate ability to make a house a home, don't they?' Jake nodded appreciatively at her comment.\n\n'Anyway, one day. Soon,' sighed Jake. \n\n'Why did you break up?' asked Molly shyly. Jake looked off into the distance, failing to conceal an underlying melancholy.\n\n'Because monogamy wasn't her thing,' he said sadly. Molly stared at him in disbelief.\n\n'She cheated? On you?' she asked, eyebrows knitted in confusion. This woman must have been stark raving mad to let Jake go. She fulfilled Molly's every possible requirement, and then some.\n\n'More than once. I guess one man was never going to be enough for her,' he said sadly. 'Anyway, that's all very much in the past. Back to you,' said Jake, gazing deep into Molly's eyes.\n\n'Me?' she croaked, her body's physiological systems being sent into overdrive by Jake's undivided attention.\n\n'You,' he confirmed. 'How are you enjoying your work?'\n\n'Are you asking as my boss?'\n\n'No, as your friend...hopefully more than just your friend.'\n\n'Oh. Um. I guess I'd be lying if I said it was a passion. But it pays the bills and I enjoy parts of it.'\n\n'Which parts?'\n\n'I like the freedom and autonomy I have to progress my own projects.'\n\n'I don't find working for a company gives me anywhere near enough freedom,' explained Jake. 'Owning my own company again is my next goal.'\n\n'Again?'\n\n'Yeah. I sold my old company about a year ago.'\n\n'Was it successful?'\n\n'It did OK, yeah.' Molly realised this probably went towards explaining why he could afford such an amazing house and a top-notch car.\n\n'So, why return to an office job, then?'\n\n'Can I trust you to keep my secrets, Molly?' teased Jake, stroking her hand contemplatively. 'Both in and out of bed?'\n\n'You can trust me,' she sighed, his touch sending shock waves of energy up her arm.\n\n'I believe I can too,' said Jake, a small smile playing on his lips. 'But you're not to repeat this to anybody.'\n\n'I won't,' breathed Molly, suddenly experiencing an unaccountably strong urge to drag him into bed.\n\n'Well, I only plan to be in my current job for a finite period of time. When I sold my company, it seemed logical for me to return to the employed commercial sector for a short while. Being in my current job provides me with abundant networking opportunities as well as valuable insight into the current problems companies are facing. From that, I can gauge where the industry is likely to head and ultimately, which areas should be exploited next.'\n\n'And then you'll start to build up your business, based on what you discover?' asked Molly.\n\n'Pretty much,' said Jake. 'I've got a few irons in the fire at the moment so things could head in a number of directions. But my long-term goal is to quit my job and set up a new company. That statement probably makes me sound much shrewder and more calculating than I actually am.'\n\n'Sounds like a sensible plan to me,' smiled Molly. 'During which time, as an added bonus, you get to have forbidden sexual relations with your female employees?'",
        "'Just one female employee, thank you,' admonished Jake. 'Singular. Not plural.'\n\n'Glad to hear it,' joked Molly, thrilled that Jake had opened up to her and shared private information which she knew he wouldn't have told anybody at the office.\n\n'Talking about work,' added Jake, paying the waiter who had brought their bill over and waiting until he had left before he continued to speak. 'Just so you know, I'll be playing it completely straight. I'm not jeopardising your job by allowing our colleagues to work out what's happening between us. I'm not so worried about myself but I won't screw up your career.'\n\n'What is happening between us?' asked Molly shyly.\n\n'Something highly intoxicating,' smiled Jake. 'Look, if you get quizzed at work about being in a relationship, or whatever, try and stick as close to the truth as you can. Don't create a whole new story, just change my name to...I don't know...James who's...a lawyer or something but stick broadly with the truth.'\n\n'OK,' agreed an unsure Molly.\n\n'It's not like anybody is going to start quizzing you about whether you've started seeing somebody anyway, is it?'\n\n'I wouldn't put it past Jules to sniff something out almost immediately,' sighed Molly.\n\n'Well, just know that nothing will pass my lips about us,' said Jake. 'What is it?' asked Jake, noticing a shadow of sadness pass across Molly's face.\n\n'Oh, nothing. I'm probably just being silly. It's just I'm proud to be with you. I really don't want to treat seeing you like a dirty secret.'\n\n'I know what you mean,' smiled Jake. 'But just for now, let's keep a low profile. At least at work. OK?' Molly nodded. \n\n'Now will you please accompany me back to my house for a coffee,' asked Jake, standing up and holding out his hand.\n\n'Is that a euphemism, or do you really want a coffee?' smiled Molly.\n\n'Definitely a euphemism. I can't stand the stuff!'\n\n********************\n\nMolly left Jake's house much later that evening. They had fallen on each other, the moment they had returned from the pub and had barely managed to keep their hands off each other since. Molly now found herself standing in Jake's well-lit hallway, their fingers entwining, neither party wanting to say goodbye and let go.\n\n'Before you go,' murmured Jake. 'I want you to have this.' He dropped a piece of paper, which had been folded up numerous times, into her jacket pocket.' Before Molly had chance to question him about it, Jake hovered his mouth over hers and then they sank into the most exquisitely tender kiss that Molly had ever experienced. When they eventually broke apart, Jake's eyes were sparkling with desire and Molly could feel a strong pulse traversing her swollen pussy lips. 'I'll see you tomorrow,' he sighed, opening the door.\n\n'Good night,' whispered Molly as she made her way out into the night.\n\n********************\n\nAlthough it was late, once she got back home, Molly felt on too much of an adrenaline high to immediately go to sleep. Instead, she flopped into her bed and opened up her laptop. After checking her emails, she suddenly remembered the piece of paper Jake had given her and turned out the pockets of her jacket. Unfolding the paper with some trepidation, Molly's heart flipped over when she realised Jake had written down his personal mobile and home phone numbers. With a wide grin, Molly unlocked her phone, plugged his numbers into her address book and then tapped out a short text.\n\n'Good night x'\n\nAlmost immediately, a response pinged into her inbox.\n\n'It's pathetic to say I'm missing you already, but there it is. I'm missing you already. Good night sweetheart x'\n\nSmiling, Molly put her phone on silent and returned her attention to her laptop. Almost without being able to help herself, Molly navigated to Google and typed in \"Jake Hunter UK technology\". A mass of potential hits filled her screen but it didn't take Molly long to navigate through to information about the man who was responsible for her face feeling tender from the force of his stubbly kisses and who had filled her body with his cum an impressive number of times over the past forty-eight hours. \n\nReading through the information, Molly felt uncomfortable; a cross between a stalker and an obsessive girlfriend who searches through her partner's phone. She rapidly came to the conclusion that she'd much rather find out about Jake from the man himself. However, her final thought, as she closed the laptop lid and settled herself into bed was one of admiration. According to the news report she'd skimmed, Jake's multi-million pound business had been extremely successful at the point he sold it eighteen months ago. Molly's admiration didn't stem from his level of success, however, but rather from the way he had underplayed that fact, refusing to boast about it.\n\n********************\n\n'How was Jake?' asked Jules, the moment Molly entered the office on Monday morning.\n\n'What?' gasped Molly. \n\n'Jake?'\n\n'Yes,' breathed Molly.\n\n'Your boss?' encouraged Jules.\n\n'Yes?'\n\n'How was he? On Friday? At the conference?'\n\n'Oh. Oh yes. He was very interesting, thanks.'\n\n'And how was your weekend?' queried Jules, looking at Molly strangely, as she sat down carefully in her chair and logged into her computer. Her pussy felt slightly tender from having been so thoroughly and regularly fucked recently and she shuffled about until she found a comfortable position.\n\n'Great thanks,' said Molly, finding it impossible not to smile with the flashbacks that kept seeping into her mind every time she shifted position in her chair.\n\n'You seem different,' said Jules suspiciously.\n\n'Really?' asked Molly, staring intently at her computer and wishing Jules would focus her attentions elsewhere.\n\n'Have you met someone?'\n\n'Met someone?' queried Molly, playing for time. How the hell had they got to this point within a minute of her sitting down?\n\n'You have!' accused Jules, a wide grin plastered across her face.\n\n'Maybe,' smiled Molly, her cheeks colouring. 'Look, can we chat later. I've got to get something done by eleven.' Incredibly, although Jules made a few excited noises about the potential news, Molly was then left in peace to try and collect her own confused thoughts, as well as plan exactly what information she was going to share with Jules.\n\n********************\n\n'I've waited long enough!' exclaimed Jules at lunchtime. 'Tell me everything now!'\n\n'OK,' sighed Molly, turning to face her friend. 'Well, his name's James.'\n\n'And how old is he.'\n\n'Early forties,' said Molly confidently.\n\n'Hi Jules. Hi Molly,' said Jake, walking up to their desks. 'Can I interrupt you for a moment?' Molly felt her heart rate soar and her nipples tighten, just at the sound of his voice.\n\n'Does it have to be now?' said Jules jokingly. 'Molly's just going to spill the beans on her new man!' Molly closed her eyes and inhaled deeply, already feeling a red flush passing across her neck and chest.\n\n'Right,' murmured Jake. 'I thought you looked a little different this morning, Molly.'\n\n'Actually, that's a good point,' agreed Jules. 'You do look slightly more dishevelled than usual, with an air of general knackered-ness about you. You didn't spend last night with him, did you?' she asked in admiration. 'Did you?'\n\n'No. I did not, thank you!' said Molly primly.\n\n'You've definitely shagged him though,' confirmed Jules. 'Is he as phenomenal in bed as your wide-eyed expression and secret smirks all morning have been implying?'\n\n'Jules,' warned Molly.\n\n'That's a yes,' muttered Jules. 'You lucky cow.'\n\n'Perhaps I'd better come back later,' murmured Jake. \n\n'No, it's fine,' insisted Molly. 'This conversation has finished. How can I help?'\n\n'I just wanted to discuss the current status of the browser upgrade project. Can you spare me a minute?'\n\n'Of course,' breathed Molly, grateful to be following Jake into his office. Jake held the door of his office open for her and then closed it firmly behind them both.\n\n'For fuck's sake! Jules is like a mindreading bloodhound,' complained Molly, throwing herself down into a chair. 'Once she's on the scent, she won't leave it alone.' Jake chuckled as he sat opposite her.\n\n'It's lovely to see you,' smiled Jake.\n\n'You too,' grinned Molly, blood already pumping to her pussy lips as her internal muscles clenched at the mere sight of Jake close up.\n\n'Phenomenal in bed, huh?' he said, teasingly.\n\n'Maybe,' replied Molly, the back of her neck tingling. 'I think I'll need reminding again to be sure.'\n\n'I'd love to remind you. Again and again and again. As many times as you need, until the memory is crystal clear and you can never, ever forget me,' murmured Jake. \n\n'I'll certainly never forget you,' she sighed, shaking her head.\n\n'I made a conscious effort to leave you alone this morning, but I couldn't hold out any longer.'\n\n'That's fine. I wanted to see you too,' replied Molly. 'I can't stop thinking about the weekend,' she said, dropping her voice to a low murmur.\n\n'Me neither,' grinned Jake. 'And I don't want to stop thinking about it either. Particularly the incredible sight of your naked body and the remarkable way it reacts to my touch,' he added, leaning forwards and sliding his finger over the inside of Molly's wrist fleetingly and then retracting. Molly could feel the tiny section of skin Jake touched burning in his wake.\n\n'I want you,' breathed Molly. 'More than you can possibly imagine.'\n\n'Are you busy tomorrow night?' groaned Jake, staring deep into Molly's eyes.\n\n'No,' she breathed, shaking her head imperceptibly.\n\n'You are now. Come over for dinner?' requested Jake. 'And then just come,' he added.\n\n'Can't wait,' smiled Molly.\n\n'Me neither.'\n\n********************\n\nThe following day, Molly went home after work for a shower and change of clothes. By early evening Molly was standing at Jake's front door, a heavy pulse beating between her legs. As he opened the door, she felt the familiar swoop of her stomach, as the man she desired above all others stood in front of her. He was wearing a white linen shirt, scuffed Levi jeans with a rip above the knee and a butcher's apron. In one hand he held a sharp knife, in the other a large carrot. Without saying a word, Jake placed his finger to his lips, as though requesting silence. Placing the knife down on the table and the carrot in the pocket of his apron, he picked up Molly's hand and led her into his hallway, double locking the door firmly behind them. \n\nThere was a delicious smell of roast lamb drifting invitingly through the house and Molly felt her mouth start to salivate. However, instead of leading her through to the kitchen, they remained in the hallway whilst Jake systematically stripped Molly of her sundress, bra and knickers until she was standing naked before him. Looking at her contemplatively, he then held out his hand, inviting Molly to walk up the stairs ahead of him. Aware that Jake would no doubt be getting quite an eyeful from behind, Molly suggestively swayed her hips as she walked slowly up the stairs. In response, Jake trailed his fingertips up the inside of Molly's leg, causing her to pause mid-step. He ran his fingers upwards until they skimmed over her soft curls, making her knees buckle with need as she moaned quietly. Once he'd teased her lightly, Jake retracted his hand and Molly was able to continue upwards.\n\nOnce in his bedroom, Jake grabbed a handful of pillows, dumping them down in the centre of the bed. He then pushed Molly gently back onto the bed so that her bottom lay on the pillows, naturally raising her hips slightly. Grabbing the tie which he had worn at work that day from a nearby chair, Jake climbed onto the bed and straddled Molly's torso, lowering himself down gently on her. Molly exhaled with the pleasure of feeling Jake's weight pressed down on her body, the abrasive feeling of his jeans rubbing deliciously against the soft skin of her stomach.\n\nUnsmiling, still in silence, Jake gently picked up both of Molly's wrists and placed them together in front of him. With a look of disbelief on her face, Molly watched as Jake bound them together with his tie and then lifted her arms to fasten her wrists to the headboard. Opening her mouth as though to speak, Jake quickly returned his finger to his lips to request quiet. Molly closed her mouth again and Jake shot her a sexy wink, causing her pulse to race even faster than it already was.\n\nEasing himself away from her body, Jake walked purposefully around to the far side of his double bed. Once there, he reached for Molly's leg and pulled it towards him, opening her body up to him. Once he had pulled her foot to the very edge of the bed he fasten a cuff, which was already attached to the bed, around her ankle to hold it firmly in place. With his eyes firmly on Molly's, Jake then walked slowly and deliberately around to the opposite side of the bed, where he pulled her other leg open wide, securing that too. With her eyes wide open in fascinated shock, Molly could do nothing more than pant loudly as her swollen, slick pussy lips were laid bare for whatever Jake had in store for her. She was now entirely at his mercy.\n\nUnable to tear her eyes away from his, Molly watched in delight as Jake stood beside the bed and slowly began to strip. As he removed his apron, he remembered there was something in the pocket. Reaching in for it, he pulled out the carrot he'd been about to chop in the kitchen when Molly had rung the doorbell. Smiling broadly, he threw the carrot on the bed, raising a cheeky eyebrow at Molly and shooting her a questioning look. In shock, Molly opened her mouth, unsure exactly what Jake's facial expressions were suggesting but knowing they meant trouble. Slowly and deliberately, he unbuttoned his shirt, shrugging it from his body to reveal his broad chest and muscled shoulders. As he began to unbuckle his heavy belt, Molly unconsciously began to bite her bottom lip, a shiver of lust dancing across her entire body. As his jeans fell to the ground, his massive erection delightedly sprang free from its denim prison and a fresh wave of desire passed over her.\n\nWalking across to his wardrobe, Jake was momentarily out of Molly's line of sight. Molly craned her neck as best she could, to try and watch him, but without success. When he returned to the bedside, he was holding another of his ties. Molly recognised it as the one he had worn the first day she had started to work for him. Smiling slightly, he bent over her and gently lowered the material over her eyes, to act as a blindfold, tying it firmly behind her head. Molly swallowed hard, never having been in such a vulnerable position in her entire life. Whatever Jake wanted to do to her body now, he could. Her eyes rolled back with longing as lust coursed through her body. She couldn't help it; this situation was making her feel as sexy as hell.\n\nAs she lay on the bed, waiting for Jake to decide how to progress, Molly suddenly realised that she was in the position Jake had described during their conversation in the car, when he had asked her to imagine she was lying on her back, somewhere warm, soft and dark. Sure enough, a moment later, the bed creaked slightly as Jake climbed onto it and then hovered over her body. In the car, Jake had asked what sense Molly would want available if she only had a choice of one. Touch, she had replied immediately. And now, here she was, restrained in such a way by Jake that the one sense she craved was the one sense he had full control over. She couldn't help but smile out of respect for the man's twisted creativity. \n\nLaying still in the darkness, Molly could hear Jake's quiet, steady breathing. Leaning directly over her, Jake gently lowered his lips adjacent to Molly's, barely touching her delicate skin. Molly cried out at his touch, arching her back up to try and reach him. Blowing gently on her neck, Jake then repositioned his mouth above hers, teasing her over and over with the nearness of him which she wasn't able to appreciate. As he went on, Molly's moans became louder and more uncontrolled.\n\nDropping away from her mouth, Jake then hovered above one of Molly's nipples, placing his teeth around her sensitive skin but still barely touching her. Occasionally, he would scrape along Molly's hard, taut nipple forcing her to cry out in frustration, her breasts swaying in front of her tethered body. Jake then dropped between Molly's wide-open legs, blowing gently across her exposed flesh, enjoying the sight of her swollen lips and the liquid gathering on the bedding below.\n\n'Please,' she whispered. Jake smiled at the blatantly obvious tone of desperation in her voice but didn't respond. Moving back up the bed, Jake brushed the tip of his engorged cock across Molly's sensitive lips. Immediately, her tongue slid out of her mouth to try and pleasure him, accompanied by a deep groan from the back of her throat. Molly tried desperately to lift herself slightly, anxious to take as much of Jake into her mouth as she could. Rotating her tongue gently across the head, she came across a drop of pre-cum which she lapped at enthusiastically.\n\nRetracting away from her once more, for a moment, Molly lay alone and in the silent darkness, simply waiting. The next time she felt anything, she realised Jake was holding the broad rounded end of the carrot against her mouth. As her tongue made contact with the foreign object, Molly had a good idea of what was on Jake's increasingly warped mind. Running the carrot across her chin and down her neck, Jake moved the tip of his throbbing cock back to Molly's lips where she greedily took him into her mouth once more. Never ceasing on its downward journey, despite the incredible sensations Molly was sending through his body, Jake continued to run the carrot slowly across her breasts, ribs and tummy. As the object rolled straight over the top of Molly's clit, she moaned deeply, pulling against her restraints, sucking Jake more firmly into her mouth. Continuing its downward journey, Jake stopped outside her tight, wet entrance. As Molly continued to pleasure him, he nudged the thick object gently inside her, her gaping legs preventing her from offering any form of resistance.\n\nJake playfully experimented with Molly's trembling, gasping body for a little while, until he could bear the anticipation no longer. Repositioning himself between her legs, he placed his thick cock against her wet lips, laid his body against hers and dropped his mouth onto hers. As their tongues entwined, Jake angled his hips slightly and entered Molly's body unbearably slowly. Immediately, her muscles clamped down on him, gripping him forcefully as Jake began to move within. Her pleading groans became louder and louder as she was stretched to the very periphery of her limits. \n\nJake carefully controlled the amount of stimulation Molly received, never quite allowing her to reach the point of orgasm. She became increasingly desperate, trying hopelessly to reposition her restrained body or lift her legs, desperate to take more than Jake was giving.\n\n'I wonder how much you think me allowing you to come is worth right now?' murmured Jake.\n\n'Anything,' croaked Molly, flushed, panting and at the end of her sexual frustration rope.\n\n'I will let you come, on one condition,' smiled Jake. 'Full details to follow later,' he added wickedly, leaning over and springing both of Molly's ankles free. She quickly wrapped them round Jake's sturdy body as he held onto her and began to thrust; hard, deliberately and without mercy. Molly very quickly scaled towards the heights of an overwhelming climax. As her body stiffened and she groaned her final breath, Jake dropped his teeth to her sensitive nipple and bit down surprisingly hard.\n\nThe size of the orgasm which erupted from within Molly was overwhelming and took both of them by surprise. Molly screeched out in desperation as her muscles seized around Jake's body and began to pull him nearer and nearer to the void. Despite the uncontrollable sensations starting to build in his own body, Jake funnelled all his concentration into extending Molly's mammoth set of orgasms for as long as physically possible. He moved across to her other nipple and began to pulse his teeth down unforgivingly. Despite the sensations he was causing, Molly was clearly starting to fatigue so Jake dropped his thumb to her clit and began to gently but firmly stroke upwards, pushing her back into the extremes of pleasure.",
        "However, even Jake could only cope with so much and it wasn't long before his instincts took over. Thrusting deeply once, twice, three times, Jake roared with his release as he pumped his load into an utterly overwhelmed Molly. As he lay on top of her winded body, Jake tenderly lay his forehead on hers, revelling in the closeness they could share. When Jake slowly pulled himself out, he looked down at a still blindfold and restrained Molly and felt a tug at his heartstrings. Slowly, he dropped his mouth carefully to her clit and nudged gently.\n\n'No!' gasped Molly, unable to believe Jake could expect any more from her exhausted body. 'I'm utterly shagged. I can't possibly.'\n\n'You definitely can baby,' murmured Jake as he suckled her clit into his mouth and flicked his tongue expertly across her body. Against all odds, Molly felt the hot, powerful tremor of an oncoming orgasm working its way up her body. As the wave crashed around her, she rocked her hips against Jake's mouth which was pressed up hard against her body, giving her everything he had. As Molly collapsed back down into the bed, Jake gently removed himself from her, unwound the blindfold and untied her wrists. They gazed deeply into each other's eyes, amazed at the power of what they continued to experience together.\n\n'You didn't warn me you were slightly kinky,' groaned Molly.\n\n'You didn't warn me that you'd enjoy it so much,' grinned Jake.\n\n***********\n\nI hope you enjoyed this story. As always, I'd love to receive your feedback, comments and voting scores."
    ],
    "authorname": "FenellaAshworth",
    "tags": [
        "boss",
        "desire",
        "hot",
        "orgasm",
        "anticipation",
        "lust",
        "oral sex",
        "restraints"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/management-skills-ch-02"
}