{
    "title": "Alice With A Twist Ch. 2",
    "pages": [
        "Movement up ahead on the path caught Alice's eye and she was surprised to see it was the white rabbit she was trying to catch up to. She ran towards where he stood looking at his pocket watch. \"Hello! Hey Mr. Rabbit!\" she called loudly. But it was no good because the rabbit was already hurrying on his way and didn't appear to hear her calling to him. Alice was dismayed to see him vanish around a bend in the path. \"Oh no... I'll never catch up to that rabbit!\" she cried and ran a little faster. \n\nWhen Alice rounded the bend she came to a quick stop. There sat a house with smoke coming out of the stack on top of it. A very strange looking creature stood in the doorway holding a baby. The little one was crying as the 'mother' stepped out of the doorway and into the yard. \"Shutup you cry'n twit!\" she snapped crossly. \"I can't hear myself so you must shut up!\" she cried, holding the baby at arm's length. \n\nAlice's mouth opened in surprise as the mother began to shake the crying child back and forth in anger. \"Pardon me but that won't quiet the baby,\" Alice said in a small voice. She raised her eyebrows when the mother said, \"Oh... I see... little-Miss-Know-All-About-Babies!\" giving a dirty look to Alice. Then she said, \"Your probably an unwed mother to boot! Slut... mind your own beeswax Missy!\"\n\n\"No I am not a slut!\" Alice said in reply to the nasty remark and raising her head, indignant. \"I was just stating the obvious, shaking a crying baby will only make it cry more!\" she finished. \n\n\"Then do the job of shutting the little bastard up!\" snapped the creature who then thrust the baby into Alice's arms, turned and stomped back into the house, slamming the door behind her. \n\nAlice stood there, holding the screaming child and wondering what to do. She started to rock the baby in her arms and sing softly in hopes of quieting it down. Much to her amazement the baby started to change! It's ear's grew longer and it's nose became a snout. It now had a curly little tail and was trying to escape from Alice's hold on it. It looked like a small pig now and Alice didn't think she needed to continue holding it. When she released the animal, it ran off as Alice watched. The door to the house opened and the mother yelled at her, very angry, \"Now you've done it! You let dinner escape you stupid bitch!\" Alice turned and ran down the path thinking how crazy things were!\n\nShe hadn't run very far when she spied another house and heard voices coming from the back of it. She slowed to a walk and cautiously peeked around the corner. There sat a man wearing a very big hat. With him was a rabbit, not the white one, and another creature sitting inside of a coffee pot. They seemed to be having an argument over the tea they were drinking. \n\n\"You stupid fuck! It's always 'brewed,' never boiled!\" the hat man said with a sneer. \"Your ass! You don't know squat from squit!\" snarled the rabbit in answer. \"Fuck you, you buck toothed bitch!\" the hat yelled back. \"Okay... I'll bend over here\" the rabbit said and stood up. \"Why, I'd love to,\" the hat said, his voice now sounding very friendly. The rabbit bent over the table and the hat moved behind him. Alice watch him put his cock, which looked quite large, into the rabbit's backdoor. \n\n\"Fuck like bunnies!\" cackled the creature in the pot, then it fell forward, bumping it's nose on the pot's rim. The other two paid him no mind as they started grunting and snorting. The hat slammed his dick into the rabbit hard, burying it to his balls and making the rabbit squeal. The rabbit's ears seemed to jerk and twitch with each deep thrust in his ass. Alice felt her pussy growing damp. \"Peeper, Peeper!\" squealed the pot head and pointed towards Alice. \n\nThe other two stopped fucking and looked at her in interest. \"Peeper?\" ask Alice, \"You can't be serious! I was just seeing who was here!\" she added and frowned. The Hatter went back to fucking the rabbit while the creature in the coffee pot looked bored and didn't bother answering Alice. \"FASTER! FASTER!\" screamed the rabbit, \"FUCK LIKE BUNNIES!\" \n\nThe Hatter started pumping fast into the rabbits ass, grunting with each hard thrust. He jack-hammered in and out, then went stiff as he squirted cum deep in the rabbits asshole. Alice felt silly standing there watching the two, so she turned to leave and heard \"STOP!\" She looked back and saw the Hatter had pulled his cock out of the rabbit and now both were staring at her. The Hat stuffed his cock back into his trousers and zipped them up. After brushing his coat off and adjusting the large hat on his head, he smiled at Alice and said, \"Would you care to join us for a spot of tea?\" \n\n\"A POT, NOT A SPOT!\" shouted the rabbit. \"Shut up fuzz face!\" snapped the Hat. Alice wasn't sure she wanted to stay and listen to them bicker, but before she could decide, it was decided for her. The Hat scurried over to her and grabbed her arm, leading her to sit in a chair at the table. \n\nThe rabbit push a cup and saucer in front of Alice and poured some of the steaming brew in it. Alice added sugar and took a sip. \"Table dance! You must do a table dance in payment for the tea!\" the Hat told her with a wicked smile on his silly face. \"A sip, a gulp, a slurp... it matters not. It's the fact of the matter that you DRANK! And now you must pay with a table dance!\"\n\n\"Yes, it's a rule. \" the rabbit added with a nod of his head. Alice could see that the two were serious and suddenly she heard music start to play. The Hat and the rabbit jumped up and grabbed Alice by her arms and lifted her up onto the tabletop then began to clap in time to the beat of the music and chant, \"Table dance, table dance, table dance!\"\n\nThe music seemed to have some sort of magic in it. Alice felt herself start to sway to the beat, her feet moving on the table, hips jerking to the tempo. 'Well, I guess it can't hurt,' she thought to herself as she closed her eyes and let her body go with the music. Her hands ran slowly down her body, stopping at her breasts first, then on down to graze her pussy for a moment. She forgot about the others there and let the music take control. And take control is exactly what it did!\n\nAlice couldn't stop herself from dancing to the music that had become pretty seductive in her ears. She saw her hands move to the buttons on her dress and start undoing them! Then she found herself pulling her dress off, first over her shoulders, then sliding it slowly down. The Hat and the rabbit whistled and yelled encouragements. \n\nAlice frowned at the pair as she continued to do a striptease on the table. She stepped out of the dress and flung it away from the table. Now in just her bra (the cat has shredded her panties earlier) she reached behind herself to unhook it. \n\nHer cheeks were burning a bright pink as she dropped the bra and started doing a sexy bump and grind! She noticed a rather large budge growing in the Hat's pants and the rabbit was also getting quite a hardon. \n\nWith all the effort she could possibly put into it, Alice forced herself to stop the dance. The music stopped when she quit moving to it. The Hat and the rabbit started to boo Alice then, \"Hisssssss! Booooooo! Off the table!!\" they were yelling at poor Alice. \"Creeps!\" she replied and jumped down to grab her clothing. Alice ran to the other side of the building to dress herself again. She'd had enough of the weird pair and their stupid tea party!\n\nAlice figured she had finally lost the white rabbit and might as well give up and go home. She was putting her shoes on when she heard a voice nearby. \"I'm fucked, fucked, fucked! My head is doomed! Later and later and nothing I can change to make it early!\" She spied the white rabbit in the distance, hurrying down the path! Alice jumped to her feet and ran after him. \n\nThe glove was still in the pocket of her dress and she wanted to give it to it's owner... but no matter how fast she ran, he still stayed the same distance away. \n\nOut of breath and her chest heaving, Alice finally had to stop to rest for a moment. She watch the rabbit vanish over the top of the hill they were on. As soon as she had caught her breath, she ran the rest of the way up the hill and stopped at the top, amazed at what she saw. \n\nNaked people dotted the countryside on the other side of the hill. They appeared to be having sex in various positions from what she could see. A high pitched female voice could be heard as it screamed out, \"You two, sixty-niners!... suck, fuck, suck, fuck!\" then \"Trade partners red!\" Everyone stopped what they were doing and ran around changing places. The woman giving the orders wore a crown on her beautiful red hair. She too, was naked and had a very nice figure. Her large tits swayed as she turned to shout new instructions to someone. \n\nAlice wondered what or why they were doing what they were doing. It didn't seem like anyone was enjoying the sex acts, they had to change who and what they were doing too quickly! Alice watched as everyone, once again, switched partners. She could see that most of them were men and they didn't look like happy campers to her. \n\nThe woman with the crown noticed the girl standing on the hill watching and advanced on her. \n\n\"Off with your cloths! Off with your cloths!\" she shouted at Alice, who quickly stripped her dress off, then her shoes and bra. Now she was as naked as everyone else. She was surprised to see the white rabbit standing next to the woman. \n\nAlice stepped forward and started to speak to him, \"Hello, I've got something of... \" was all she was able to say before the Queen cut her off. \n\n\"GUARDS! Bring the girl to my tent!\" the Queen screamed. Two naked men grabbed Alice and marched her to a tent she hadn't noticed before. \n\nThey snickered as they roughly pushed her inside. \n\nThe Queen was laying on a pile of silken pillows and smiled when Alice landed next to her. \"Hello my lovely... you are a beautiful little thing aren't you?\" the Queen said. She leaned close to Alice and put her hand between Alice's legs. \"Such a pretty pussy too! I shall enjoy it and you'd better make sure I do. \" she told the wary girl. \n\nAlice had never been with a woman before and wasn't sure what was expected of her. She didn't have to wonder long, the Queen pushed her back on the pillows and roughly squeezed her tits. She put her mouth on one nipple and started to suck it while her hand between Alice's legs started to stroke her pussy. Long, slender fingers opened her pussy lips and pushed into the moistness there. Alice gasp as the Queen finger fucked her. The girl hadn't noticed the Queen was wearing a strap-on when she was forced into the tent, but she would know all about it in a few minutes. \n\nAlice decided her best bet was to relax and let the woman have her way, she was going to regardless. Alice moaned a little when the Queen moved further down her body, her lips soft, her tongue probing. Another, louder moan came from Alice when the woman reached her tender pussy and started licking it. Her back arched as her hips lifted higher on the pillows. She felt her legs pushed apart as the Queen buried her face between Alice's legs. The Queen's tongue was long and knew what it wanted. It probed deep in Alice's wet, little hole. Her lips found the little clit's hiding place and pressed around it firmly. She started sucking, the sound of wet, slurps filling the tent with the moans. \n\nAlice put her hands on the Queen's head and pulled the woman in closer. She began to grind her hips into the hot mouth on her pussy and was rewarded with the tongue darting deep. Alice gave a sigh when the Queen started to move up her body again, her pussy sopping wet now. Then she felt something pressing against her wet opening and her eyes flew open as it penetrated. She opened her mouth to ask what it was but didn't have the change when her mouth was covered by the Queen's. \n\nThe Queen sucked on Alice's tongue, licked her lips and sucked her tongue into her own. Her hands explored Alice, demanding as they stroked and squeezed the soft flesh and the strap-on pushed deeper into the girl. The Queen started moving her body, fucking Alice with swift, sure strokes. Then her mouth was next to Alice's ear and she whispered hotly, \"Does that feel good my little slut? You like that cock?\"\n\n\"Ooooooh yes!\" Alice cried in pleasure. The Queen hips jerked back and plunged forward hard, spearing Alice with the cock she wore. She fucked Alice hard, enjoying it as much as the girl. \n\nSuddenly the Queen stopped and pulled out of Alice. \"Turn over my little bitch,\" she said as she pushed Alice onto her stomach and then pulled her ass up high in the air. Before Alice could think to protest the cock slammed back into her pussy and she was being fucked doggy-style, or so she thought at the time. \n\nAlice heard the Queen spit and felt it land in the crack of her ass cheeks. The Queen rubbed the spit around Alice's asshole then inserted a finger slowly. Alice groaned and lifted her ass higher, allowing the invading finger to go deeper inside. \"You like that? You want your ass fucked my sweet?\" the Queen asked. She didn't wait for any answer from Alice, just pulled out of the pussy and pushed into Alice's asshole. She started moving her hips, pushing the cock in then almost out of Alice's tight backdoor. \n\nWaves of pure pleasure rolled over Alice as the Queen ass fucked her and went over the edge when the Queen inserted first one, then two fingers in her pussy. Alice screamed out as the orgasm shook her entire body. It felt like it might go on forever and Alice loved it!\n\nThe Queen kept the cock buried deep in the tight little asshole and waited until Alice relaxed again. She slowly started to fuck her again, each stroke going deeper then the one before it. She would pull almost all the way out, then push back in as far as she could. Alice could feel the start of another orgasm as she rocked back on the strap-on. \n\nThe Queen pulled out and lunged back into the hole with a grunt. Then she pulled out and flipped Alice over again, quickly slamming into her dripping pussy. She pinched and sucked the lovely nipples that stood out on Alice's tits. She was getting close to having her own orgasm and kept steadily fucking the girl beneath her. When Alice cried out \"Oh Oh... yesssssss... fuck me hard! I'm cummmmmming!!\" the Queen started to orgasm at the same time Alice did, her body shaking with the intenseness of it. Afterwards they lay on the pillows, their bodies glistening with sweat and the juices from their hot pussies. They lay still for a only a few minutes then started all over again. The Queen was quite happy with her new playmate and intended to fuck her all day long!\n\n\"Are you a friend to the White Rabbit?\" Alice asked her new lover as they lay together, recovering from another bout of lovemaking. \"What?\" the Queen asked, her eyes closed. \"The White Rabbit, do you know him?\" Alice asked again and waited. \"He works for me. \" answered the Queen as she drifted on clouds. \"Well,\" Alice continued, \"I came here looking for him. I want to return a glove he dropped in my garden. \" \n\nThe Queen sat up and leaned over Alice. She started sucking on a nipple while her hands roamed the hills and valleys that lay below her. \n\n\"It cam ait huntil ater\" she said around the sweet softness in her mouth. \"Excuse me?\" said Alice, she wasn't sure what the Queen was saying. \n\nThe Queen sat back and repeated \"It can wait until later. \" And of course Alice agreed, especially when the Queen's mouth moved down to her pussy and started to lick again. Alice wiggled and felt desire swell inside of her again. \n\nThe story has to end somewhere and this one ends with Alice staying in Wonderland with the Queen. She was quite happy with their relationship and after returning the glove to the rabbit, spent her days and nights with her Queen. They never tired of sex and enjoyed trying any and everything possible! And if you ever find yourself standing in a garden, listen very hard and you can hear Alice's moans..."
    ],
    "authorname": "*Snatch",
    "tags": [
        "alice",
        "queen",
        "fantasy",
        "wonderland"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/alice-with-a-twist-ch-2"
}