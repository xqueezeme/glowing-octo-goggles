{
    "title": "Home for Horny Monsters Ch. 49",
    "pages": [
        "Hi all! I haven't seen you all since last year! (Okay, lame new year joke out of the way)\n\nWelcome back to the next exciting installment of Home for Horny Monsters! If you are new, you have 48 chapters to catch up on, and you are gonna want to get on that, because the backstory is rich, the characters are diverse, and there is enough nudity to ensure that this story will never be on Oprah's book list.\n\nReturning readers, welcome back! It's a new year and I wanted to start off strong with a little story about that one time that Beth and Mike wandered off to the faerie world and made all sorts of new friends before... well, the events of last chapter.\n\nMy schedule is gonna be a little slow the beginning of 2020 on account of real life stuff and another side story that will eventually make it's way to Lit like Last of Her Kind did. However, I am fucking motivated to make this year my bitch, so let's all hope for good things :)\n\nAs always, don't forget to rate the story, make a comment, or send me a nice letter. I read them all and use them to keep getting better at what I do.\n\nNow let's get this show on the road, shall we?\n\nFive Minutes Ago\n\n\"You take me to the nicest places,\" Beth said, stepping over a small, mossy rock.\n\nThe world around them was dark, and the light from their cellphones poorly illuminated the forest floor. A breeze had formed as the cool, night air of Ireland blew through the portal into Mike's front yard. The portal had been chewed into the inner wall of a crumbling home out in the woods, obviously long forgotten.\n\n\"I do my best.\" He stepped over a large rock and offered his hand when she stepped over. \"There's a depression on this side, hard to see.\"\n\n\"It's not that\u2014\"\n\nThe depression was deeper than expected, and she lost her balance. When she tumbled forward, Mike caught her effortlessly in his arms. Her feet dangled above the ground, and he quickly set her down and cleared his throat.\n\n\"Sorry. Should have warned you better,\" he said, then knelt down. \"So how big is this fairy ring supposed to be? I can't see anything. The ground is the same color everywhere.\"\n\n\"Reggie said it was a short walk from the portal.\" The fairy ring in question was actually a ring of mushrooms that was supposed to be a portal into the faerie realm. The rats had struggled to track one down, but Reggie's best scouts had managed to find one that wasn't an hour away from somewhere they could chew a portal to. \"It should be up ahead any second now.\"\n\n\"I hope so.\" He stood back up and rubbed his stomach. \"That's weird.\"\n\n\"What is?\"\n\n\"Just an odd feeling. Almost feels like a gas bubble in my stomach.\"\n\nBeth chuckled. \"Are you nervous to meet the queen?\"\n\n\"What? No, not that.\" He twisted his body around and then walked in a circle. \"It keeps moving. Hold on.\" He patted his belly, shifted ninety degrees, and patted his side, then pointed in the distance. \"It's pointing me that way.\"\n\n\"That's not where we're supposed to go.\" Beth pulled up a map on her phone. Her reception was poor, so she had to wait a bit for it to load. \"There's not much out that way except... oh.\"\n\n\"Oh?\"\n\n\"Remember some of that extra land you own?\"\n\n\"Not really. Too busy trying to keep up with my magic house.\"\n\nShe laughed. That was fair. \"You've got some land holdings in Oregon, Hawaii, and here, actually. This one is interesting because it's actually a small island with a castle on it.\"\n\nHe paused. \"I own a castle?\"\n\n\"Well, I mean... what's left of one.\" She had seen the pictures. It had been abandoned for centuries. \"Might be worth looking into after we get Cecilia back.\"\n\n\"Oh man. I own a castle.\" He just shook his head, his eyes on the ground as he kept walking forward. \"You realize it's probably the entrance to a dungeon or a tomb, right? Or maybe a dragon lives in it. How the hell would I even manage to take care of that?\"\n\n\"You're putting the cart before the horse, aren't you?\"\n\nMike was mumbling now, his voice barely legible. \"I mean, what do we even feed a dragon? Does it like fish? Cattle? Virgins? Would it fight with the Jabberwock if we brought it home? I don't have the energy for that. Good god, if it eats, then it shits, right? What the hell do I do with dragon shit? Rent a dumpster and fill it with cat litter? Scoop the damn thing with a front... hey, found it!\"\n\nHe lifted his phone, the circle of light moving forward on the forest floor to illuminate a circle of mushrooms.\n\n\"Okay, this is kind of cool.\" Beth paced the perimeter of the faerie ring. It was a perfect circle, nearly four feet across. The mushrooms were perfectly shaped and looked like dented bells, each one leaning slightly outward. \"Just think, this is a portal to another world!\"\n\nHe smiled at her. \"I'm glad one of us is excited.\"\n\n\"And you're not?\"\n\n\"I'm still recovering from the last world I found.\" He moved to stand next to her. \"At least I know what I'm getting myself into.\"\n\n\"Hey, you've got the world's best damn estate attorney with you this time.\" Beth checked her messenger bag, then turned off her phone and tucked it away. \"I'm ready when you are.\"\n\nHe took a deep breath, then released it, a wisp of fog leaving his lips. Once his own phone was off, he tucked it in his pocket, then reached out to take her hand. The world was dark, with only the faint glow of the stars up above to guide them. He stared intently at the ring, saying nothing.\n\n\"You okay?\" she asked.\n\n\"Just nervous.\"\n\n\"Yeah, me too.\" It wasn't every day that she got to step into another world on purpose. \"On three?\"\n\n\"On three,\" he agreed.\n\nShe counted, and on the number three, they both stepped into the ring. According to Ratu and Sofia, one of a couple things could happen. They could fall an undetermined amount of feet and land unharmed. They could find themselves in the middle of a raging faerie party. They could even find themselves lost in a foreboding mist. No matter what happened, they needed to remain in contact with each other to avoid getting separated. The last thing they needed was to end up hundreds of miles apart.\n\nNothing happened.\n\n\"Am I missing something?\" Mike looked over his shoulder, then forward again. The forest was unchanged. \"We're in the same place.\"\n\n\"We shouldn't be, but...\" Beth pulled his hand, leading him out of the circle. \"This looks exactly the same as it did. I don't understand.\"\n\nHe kept his hand on hers while kneeling down. The faerie ring was gone, and his hand tightened on hers almost to the point of pain. \"We need to get out of here,\" he whispered, scanning the forest.\n\n\"Which way?\" she asked.\n\n\"Um...\" He looked behind them at where they came in, so she did too. The silhouette of the abandoned home they had come from was still there, but it didn't look quite right to her. Logic dictated that they should probably go back through the portal and check in with the others, but the very thought of moving toward the crumbling structure made her nervous. Whatever Mike was sensing, she felt it too, and the feeling of being watched was worse in the direction of the rundown building.\n\nHe coughed into his hand, but tugged on Beth's arm in a direction opposite of the house. A trap had been set, she was sure of it, but where? Did he know?\n\n\"Ack. My throat feels so dry. Do you have any gum or something?\" he asked.\n\nShe couldn't see his face in the darkness, her mind busy processing what he had said.\n\n\"I think I might,\" she answered, reaching into the messenger bag. \"Requests?\"\n\n\"Whatever you have on hand is fine,\" he said, then gave her arm another quick tug as a warning. When he broke into a run, she was right behind him, and the silent forest came alive with the sound of flapping wings and animal cries that sounded like screams that rushed toward them. Tree branches whipped across both of them, and Mike slapped them out of the way with his hand, then reached into his jacket pocket.\n\nAlways the boy scout, he had brought along an ultra-bright LED flashlight, and once it was in his hand, he turned it on. The cone of light lit the forest ahead of them and sent dozens of shadowy creatures fleeing on contact.\n\n\"Holy shit!\" Beth cried. She had turned her own phone back on and was using the flashlight on it to see what pursued them. A boiling mass of darkness had scattered, flying through the trees around them and moved ahead to cut them off. Mike put the butt of the flashlight in his mouth and got out his phone and turned on the light and held it out.\n\nThe shadows looked like birds at a distance, but as they jogged and kept their lights turned on, it revealed them to be whisp-like shadows that shrieked in agony when the light hit them. They swept their arms around, chasing them away when they drew close, their shrieking voices tunneling into Beth's head like iron spikes. Their sharp fingers grabbed hold of her more than once, and she chased them away with the bright light of her phone.\n\n\"Okay, they're afraid of light, but I have no idea what to do.\" She told him after sending a shade with dagger teeth back into the woods. It was a struggle to keep up with Mike. If not for the fact that he was pulling her, he would have long ago vanished. \n\n\"Keef ooving,\" he said around the flashlight, chasing off another cloud of birds. They had clearly stumbled into a nest of whatever these things were. Sofia had made her memorize a list of common faerie creatures before they left, but she didn't remember anything about evil birds.\n\nThey broke into a tiny clearing, and a small building was illuminated briefly by the light in Mike's mouth. It was an old shed, covered in moss and creeper vines and built into the side of a hill. He shoved the door open with his elbow and pulled her inside. She shined her light across the room while he shut the door and put his back to it. The building was still in one piece, and was full of abandoned farm implements.\n\nThe shrieks from outside rose in volume, and a heavy weight slammed against the door.\n\nBeth let go of his hand and ran to the other side of the shed, looking for something to help.\n\nWhen another impact hit the door, Mike spit his flashlight into his empty hand. \"Nobody's home!\" he shouted, shining his light over his shoulder.\n\n\"Here!\" Beth returned with a shovel, which she used to shore up the door. The shed was small enough that it was easy for her to drag over a table and a small pile of firewood, doing her best to wedge it in place where she could.\n\nThe shadows howled at them from outside, and Beth switched places with Mike so that he could push a large barrel she had been unable to move across the dusty wooden floor. It was heavy, and made a loud scraping sound as it traveled across the shed. Once pushed into place, the door wiggled no more than half an inch when the spirits slammed into it.\n\n\"This is not what I expected,\" he muttered, then turned off his cellphone and put it back in his pocket. He sat down and leaned against the wall.\n\n\"I'm curious what you were expecting,\" Beth said when she slumped down next to him.\n\nHe chuckled. \"A lot more glitter, fewer evil birds. Any ideas?\"\n\nShe shook her head. \"None. You have no idea how glad I am that you found this place.\"\n\nHe patted his belly. \"Felt like I was going to puke back there. Those things meant us so much harm, it was nearly overwhelming, so I followed the path with the least amount of queasiness.\" Mike stood the flashlight on end, letting the glow light the shed. Beth's hair was already out of place, and she had a scratches along her arms and cheeks. \"Were those from the branches?\"\n\n\"Nope.\" She showed him her bicep. The scratches came in patterns of three. \"I felt like an idiot whipping my phone back and forth while trying to keep up with you. Glad I didn't wear heels.\"\n\n\"Do you think I should have thrown my buttons at them?\" He pulled the buttons from his pocket. \"Dana was doubtful they would do anything, and now so am I.\"\n\nBeth let out a deep breath. \"You ever eaten a handful of nuts? I knew this girl in college who ended up in the hospital because someone handed her a peanut butter cookie. You just have to think of our faerie defenses as allergens, or something like that.\" \n\n\"Do people allergic to buttons use velcro?\" He held up one of the buttons. \"I actually have a vial of glitter on me. Might toss it out there and see\u2014\"\n\nThe walls rattled, and he pictured the shadows crashing into the shed from all open sides.\n\n\"Thank you, Farmer John,\" he whispered, his eyes on the walls. Though the building was old, it held up to the abuse of the shadows.\n\nThe hours passed largely in silence as the shadows beat harmlessly at the sides of the shed. Neither of them was able to sleep, and the sounds finally faded when the light of dawn broke through seams in the wooden planks that made up the wall.\n\n\"You think they're gone?\" Mike asked, pressing his face against the wood.\n\n\"I hope so.\" Beth rubbed her throat. She was thirsty but had avoided drinking from the water bottle she brought in case they got stuck for much longer.\n\nBoth of them watched the forest through the slightly separated slats, and after a good ten minutes of nothing to see, they agreed to unblock the door. Once they were outside, Beth scowled at the large tear in the side of her dress.\n\n\"I didn't even think to bring a spare.\" She let out a miserable sigh.\n\n\"Well, let me know if you lose a button. I can help you with that.\"\n\n\"Oh? You carrying a needle and some thread on you?\"\n\n\"Actually, yeah.\" He turned to look at her. \"Apparently some fae are super obsessive-compulsive. I toss the needle into a field of grass or some hay, and they'll stop to go find it.\"\n\n\"And the thread?\"\n\n\"Tie some knots in it and they'll want to undo them. Most of my faerie defenses are based around the idea that they just can't leave things alone.\" He pulled out a small, clear bag with black thread and a pair of needles inside. \"We could try and patch your blouse if you want.\"\n\nShe shook her head. They had more important things to do than worry about some holes in her outfit. \"Let's try and get our bearings. Maybe get away from here before those things come back.\"\n\nHe nodded, and they wandered. After almost half an hour of walking, the forest woke up, filling with the sounds of birds and insects. After an hour, Beth couldn't help but drink most of her water, she was simply too thirsty.\n\n\"You okay?\" he asked her.\n\n\"Yeah, but let me know if we come across a stream or something.\" The water in the land of the fae was supposedly safe for consumption\u2014it was only food or drink prepared by the fair folk that might keep them trapped. \"You... still have water to drink, right?\"\n\n\"Hmm? Oh, right.\" He stuck his hand into his pocket and pulled out a small, copper tube.\n\n\"What is that?\"\n\n\"Meant to tell you, but forgot about it when we were about to get murdered.\" He unscrewed the cap on the tube. \"Ratu let me borrow it. Holds ten gallons of water, so if you're\u2014\"\n\nShe snatched it out of his hands and tilted it up. Cold water ran along her cheeks as she spilled some of it, but she didn't care. After drinking her fill, she handed it back to Mike and let out a sigh. She was already feeling a lot better.\n\n\"I've also got a few of those weird food bars from Zel in case you're hungry.\" He held one out and Beth took it.\n\n\"It doesn't... I mean, what's in it?\"\n\nHis cheeks turned beet red as he retrieved another. \"Nothing weird like that. The centaurs have been mass producing them while getting their gardens up and running, so that's mostly nuts, berries, and maybe eye of newt. Each bar has your calories for the day, but it won't fill your stomach very well.\"\n\n\"Thank you.\" She pocketed the bars he offered, and watched while he drank from the tube. \"So any idea about where we go next?\"\n\n\"Nope.\" He rubbed his belly. \"My danger sense is absent, so we pick a direction and go. The fae court lies at an intersection of rivers, so we can always do that.\"\n\n\"I feel woefully unprepared.\"\n\nHe nodded. \"The expectation was that we would at least land somewhere with some locals and go from there. I don't like the fact that we got dropped in the middle of nowhere.\"\n\nBeth looked around at the surrounding woods. It did seem a little too convenient that an ambush had been sprung so soon after stepping through. \"You think someone told the queen we were coming?\"\n\n\"I'm suggesting somebody gave her a heads up.\" He narrowed his eyes in anger, but only for a moment.\n\nShe sighed. Sulyvahn didn't seem like the type to do such a thing, but her fascination with him was easily swaying her opinion. They had built the shed in plain view of the dullahan, and no doubt he had seen exactly where it led. It would have been easy for him to get a message back to the queen, and if that was the case, maybe it was better if they went home and came up with a different plan.\n\n\"Do you think we should look for a faerie ring to get home?\"\n\nMike scowled for a moment, and then relaxed. \"I mean... we can. Might end up somewhere random, but we can call Dana and have the rats come get us.\" He let out an exasperated sigh. \"If she even receives the call. She's been spending a lot of time doing a project for the centaurs, and she's really the only one we can call. Do you know what that means?\"\n\n\"I... no, I don't.\"\n\n\"Means we need to start a family plan or something. Get a phone for the house, one for Tink so she doesn't take apart the house phone, and maybe one for Yuki... wonder if Abella wants one? Gonna have to disable app purchases on all of them, though,\" he muttered, his brow furrowed in contemplation.\n\nBeth laughed. They were in the middle of faerie territory, had just avoided being murdered by shadows that looked like birds, and he was worried about cell phone plans. \"C'mon, let's pick a direction and start walking. We might get lucky, after all.\"\n\n\"I could use a little luck,\" he grumbled, but followed behind her with his hands tucked in his pockets. She tightened her messenger bag to keep it from bouncing against her hip so much and took the path of least resistance through the trees.\n\nThe further they walked, the more the forest came to life. Little white flowers grew amongst the mossy floor, opening to reveal multi-colored petals as the sun climbed higher into the sky. Tiny motes of light danced amongst the branches, but neither Beth nor Mike could communicate with them.\n\nA break in the trees came, and when they stepped beyond the forest, Beth gasped.\n\nEmerald green hills went for as far as the eye could see. The forest lay along the edges, and wherever the wind caught the grass, it looked like waves in the ocean. The sky was bluer than she had ever seen, as if a canvas had been soaked in paint. Along the hills, a large herd of white deer was spread out, each of the males adorned with a giant set of antlers.\n\n\"Wow,\" Mike whispered from behind her. \"This place is amazing.\"\n\nShe nodded, her eyes brimming with tears. It was almost too much to look at, and she wiped her eyes with the palm of her hands. Somewhere, in the distance, she heard the sound of music, and the air smelled faintly of apple pie.\n\nA distant hill shifted, turning in place to reveal that it wasn't a hill at all, but a hunched over giant with moss growing up its back. The creature took a few steps, then settled back down to blend in with the landscape. A couple seconds later, the air rumbled like thunder, the sound finally reaching them.\n\n\"Well, if I wasn't hesitant about crossing this before...\" Mike just shook his head. \"I hear music. Should we go check it out?\"\n\nBeth nodded.\n\nThey stayed along the treeline, the music gradually growing louder. It was a symphony of flutes, and harps, and definitely some drums. It was a familiar tune that she couldn't place her fingers on, and the louder it got, the more determined she was to find it.",
        "They eventually wandered out onto the hills, and it was only after cresting a few of them did she find herself staring down into a large depression surrounded by a bunch of boulders. In the middle, a group of men and women who stood about three feet high were having a party, with a feast stretched out on a large blanket. They were dancing with each other, and drinking from large jugs of wine.\n\nAlong the edges of the stones, several instruments hovered in the air, playing themselves. The dancing fae wore dark clothing with gold accents, and their skin was supernaturally pale. As they laughed and twirled, Beth noticed that a few of them didn't even touch the ground.\n\nThe music quieted down when they drew close, and the party goers all turned to look at them with curiosity.\n\n\"Excuse me, but we are trying to get to the court of the faerie queen.\" Beth hastily tucked a few strands of loose hair behind her ears, and smoothed out her blouse with her hands. \"Do you suppose you could give us directions?\"\n\nOne of the fae grinned, revealing a set of dagger-sharp teeth that reminded her eerily of Oliver. The others followed suit, and the music played a little bit longer.\n\n\"We would be happy to give you directions,\" a man wearing a cloak told them. \"But let's wait until this song is over.\"\n\nThe other fae nodded enthusiastically, and the music's volume increased and their dancing resumed. Beth let out a sigh and tapped her foot to the beat of the music. What would it hurt to wait for just one song?\n\nA stiff hand clamped down on her shoulder, and she realized that she was now standing in-between the boulders. Mike pulled her back, and she tried to yank herself free.\n\n\"What the fuck is your problem?\" she asked, unable to pull herself from his grasp. \"We're just waiting for the song to be over!\"\n\nMike wrapped his arms around her waist and lifted her up. Beth let out a shriek of rage and tried to swing herself down. The music, for whatever reason, was playing even louder than before.\n\nHe only made it a few steps before Beth was able to slide free, her skirt hiking up around her thighs.\n\n\"You're being such an ass,\" she told him, determined to get back and watch the dancers some more. He got in front of her again, and she tried to push him away. The dancers were holding their hands out to her, their faces just begging her to join in. If she didn't reach them in time, the song would be over, and she would miss her chance to join in the festivities.\n\nA large vial spun through the air, scattering metallic glitter across the blanket of food and clattering to the ground. The fae fell to their hands and knees to eagerly pick up the bits of glitter that Mike had thrown, and the musical instruments stopped playing.\n\n\"Finally!\" Mike grabbed her wrist and pulled her away from the faerie people, who hadn't yet noticed that they were leaving.\n\n\"What are you doing?\" she asked.\n\n\"They've been playing that song forever, couldn't you tell? I was trying to get your attention, but you couldn't hear me.\" He was moving at a quick pace, pausing long enough to throw something that looked like a rock. \"That won't keep them long, so we need to hurry.\"\n\n\"We were only there for a minute...\"\n\n\"More like ten. I don't think their magic affects me like it does you, but here.\" He held something out, and she took it. It was a small set of earplugs. \"If they start playing that music again, shove those into your ears. We were warned about faerie music, but I figured it was safe. That was stupid of me.\"\n\nBeth's cheeks burned, and she put the plugs in her messenger bag. She should have known better as well, and they were almost to the trees when she heard shrill cries behind them.\n\n\"Quick!\" Mike pulled her behind a clump of rocks and they hunched down together. They watched through a gap in the rocks as the fae rose into the air on black wings and circled over the depression. They formed into a search pattern, and one of them fell from the sky, screeching like a hawk.\n\n\"What did they find?\" Beth whispered.\n\nHe smirked. \"I threw a large, shiny arrowhead in a different direction. They were bound to see it.\"\n\nSure enough, the flock of faeries hovered overhead until they were rejoined by their missing member. They flew away along the hillside, their shrill laughs carrying across the green expanse.\n\n\"Oy. Ye stirred up the unseelie, that you did.\"\n\nBeth spun around to see a little man about a foot tall with a long beard standing on a tree stump covered in mushrooms. He regarded them with deep set eyes buried beneath a mountain of facial hair that hung to his knees.\n\n\"Are you a gnome?\" she asked.\n\n\"Aye. And ye must be the humans that's got everyone in a fit.\" The creature took a long pull on his pipe, then blew out a plume of yellow smoke. \"Yer lucky ye didn't fall in with that lot. They be particularly cruel.\"\n\n\"We're trying to get to\u2014\" Beth began.\n\n\"The queen? Aye. But the queen is not real eager to see yer faces, I can tells ye that.\" He hopped off his stump and walked toward Mike. \"So yer the man that stole our dear Cecilia's heart.\"\n\n\"Do you know where she is?\"\n\n\"Aye.\" He puffed off his pipe. This time, green smoke came from it.\n\n\"Great! We came to rescue her. Can you tell us how to get to the queen's court?\"\n\n\"Nay.\" The gnome stuck the pipe back in his mouth and sucked. He blew a ring of red smoke this time that lingered in the air.\n\n\"Why not?\" Beth demanded.\n\n\"Order of the queen. This whole area was reorganized for yer arrival, it was. They chased away the locals and brought in some real nasties. I dinna really care for it. Not at all, not at all.\"\n\n\"So, you can't tell us because the queen told you not to?\"\n\n\"Aye. Faerie law. The queen informed her subjects that none of us were to give aid or direction to any humans or creatures that accompany this man.\"\n\n\"That's bullshit.\" Mike scowled at the little gnome.\n\n\"Aye.\" The gnome blew a green ring this time. \"A creature like me would be happy to help if he could offer it. I have no quarrels with humans, particularly those who smell strongly of the tribes.\"\n\n\"The tribes?\"\n\n\"Spirits of the earth. Water, wind, fire, the like. When I speak with ye, I get the feeling I be speaking to a kindred spirit, with ye smelling damp like the back of a cave in the deepest mountains and all.\" The gnome sighed. \"But, I'm afraid that my hands be tied. I can offer ye no help nor assistance other than to let ye know that ye be not welcome in our land.\"\n\n\"So you won't help us.\"\n\n\"Nay.\" He sucked on his pipe and fixed Beth with a knowing look, then blew a red puff of smoke.\n\n\"Well,if you can't help us, then we're leaving.\" Mike made to stand, but Beth grabbed his tie and held him down.\n\n\"Hold on.\" She contemplated the gnome before her. \"You can't help us, so why are you here?\"\n\n\"Out fer a smoke. Not against the law. Yet.\" He sucked on the pipe and shot yellow smoke out of his nostrils.\n\n\"I think I understand.\" She turned to Mike. \"Do you think we should follow the hills?\"\n\n\"Maybe.\" He turned to look at her, but she was looking at the gnome. Little green rings hovered in the air around the creature's head.\n\n\"Follow them for awhile, or for just a little bit?\"\n\n\"Um... a while?\" Mike ventured after Beth nudged him.\n\nYellow smoke this time.\n\n\"Well... until we see something different, like a path or a river,\" she amended.\n\nGreen smoke now. The gnome scratched his belly through his beard.\n\n\"And then maybe turn left?\" Beth was watching the gnome intently now.\n\nHe blew a red smoke ring that hovered above his head, then scowled at her. \"You gonna be on your way, or what?\"\n\n\"Or maybe we'll go right,\" Mike suggested, his eyes on Beth.\n\nShe turned her face toward him a little bit, making sure to keep the gnome in her peripheral vision. He was clearly risking a lot of trouble for them, and she knew there were probably eyes everywhere.\n\nThe gnome blew a green ring through the center of the red one, and they mixed together and vanished in the breeze. \"Aye, well, I'm afraid that I canna even give ye a morsel of a hint, and would kindly ask for ye to shove off.\"\n\n\"Right. Well, guess we're on our own, so let's go.\" Beth said, then looked over the rocks. The small cloud of fae was now distant. \"If we stick to the treeline, they probably won't spot us.\"\n\n\"And if they do, we will have plenty of warning.\" Mike stood up and straightened out his jacket. A shiny button fell out of his hand and onto the ground, but he ignored it. \"C'mon, let's get out of here before this talking lawn ornament tells his buddies where we are.\"\n\n\"Hmph.\" The gnome scowled at them as they moved away from the rocks.\n\nWhen they had gone about twenty feet, Beth looked over her shoulder.\n\nBoth the gnome and the button were gone.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nA half an hour after leaving the gnome behind, they took a quick break for both of them to eat an energy bar and pee. When it was her turn to use the bathroom behind a bush, she practically had to beg Mike to keep an eye on her, because he kept trying to look away and give her some privacy. She appreciated that he was trying to be a gentleman, but she also didn't want to get dragged into the woods on account of having a full bladder. He whistled loudly to himself when she let her stream loose, and his face stayed bright red for several minutes after.\n\nThe giant in the distance moved on occasion, and it was late afternoon when they spotted the cobblestone road that wound between the hills. Grateful to see a change in scenery that included a sign of civilization, they got on the path and headed right.\n\nThe path bisected the massive woods around them, and they walked with no idea how far it would be until they got anywhere. The path narrowed dramatically until they reached a small village, but it was literally a small village; no building was more than a foot tall, and there wasn't a single sign of life around.\n\n\"Think they're hiding?\" Beth asked.\n\n\"Yup,\" Mike answered. \"I'm fine with anything that chooses to stay out of our way.\"\n\nOnce out of the village, the path widened again and they kept moving. It was now late in the afternoon; they stopped again for a break and drank some water. Both of their stomachs were growling audibly now, and she now wished that she had actually brought some gum with her.\n\nThe temperature dropped a little bit, and the smell of water tickled her nose. The forest on their left side vanished dramatically around a rocky corner and revealed that they were now on a large cliff overlooking a huge expanse of water that was most likely the ocean. Down below, small waves broke on the shoreline, and they stopped to rest for a bit, their eyes on the distant horizon.\n\nBeth pulled out her phone and tried to take a picture. Strangely, her phone glitched out, and all she got was pictures of static.\n\n\"That's weird,\" Mike told her, then tried to the same thing. His phone was unable to take pictures as well.\n\n\"Must be part of the magic,\" she guessed. \"Keep people from visiting and bringing back evidence, maybe.\"\n\n\"That's as good an explanation as I can...\" He looked out toward the horizon, his mouth hanging open. When she followed his gaze, she saw that a long-necked creature had emerged. Its enormous head surveyed the nearby waters, then it dramatically vanished beneath the waves again.\n\n\"Was... was that... what I think that was?\"\n\n\"Loch Ness monster? Nope.\" She grinned. \"That isn't Loch Ness. Therefore, can't be the Loch Ness monster.\"\n\nHe scowled, playfully. \"Leave it to a lawyer to argue the semantics of a cryptid.\"\n\n\"It's the same reason Bigfoot can't be a Bigfoot in the Himalayas. He's called something different there.\"\n\n\"Actually, not true.\" He held up his finger for emphasis. \"Bigfoot is a different creature than a Yeti.\"\n\n\"And you know this how?\"\n\n\"I met him once.\" Mike started along the path again, which wound all along the cliffs.\n\n\"No you didn't! When?\" she demanded, staying right behind him.\n\n\"Uh, well... it was actually a memory of Emily's that I saw. But he told her that he wasn't alone, and that there were others. Seemed really nice.\"\n\n\"What was he like?\" she asked excitedly. \"Was he as big in real life as he's always described?\"\n\nMike made a weird face, then nodded. \"Oh yeah. Big dude. Lots of hair. Can literally walk between trees and travel for miles in a single step.\"\n\n\"Wow,\" she said. If she kept living with Mike, she wondered what the odds were that she would get to meet Bigfoot someday. He had been one of her obsessions as an early teen, and her parents had taken her to a couple of Bigfoot museums during summer trips.\n\nThe path took them down toward the shore, and if not for the unwelcome reception the previous night, Beth felt like she was on vacation again. Mike led the way, and she couldn't help but watch how he moved.\n\nHe carried himself differently than usual. There was a confidence in his step now that he was away from the house. When the sea breeze caught his hair, it rippled ever so slightly on account of how thick it had become, and her gaze settled on his neck and shoulders. Though the collar of his shirt and jacket hid his neckline, his shoulders were slightly broader than she remembered.\n\nIt was often difficult seeing him around the house. He was undeniably attractive, and she had done her best to avoid crossing any lines largely due to the piece of Oliver that had been stuck to her soul. However, now that she was free of the demon's influence, it occurred to her that maybe she was overdue getting to know him better.\n\nHowever, he treated her differently than the others. He was rarely shy or withdrawn around them, and she had accidentally stumbled onto him having sex more than once. The blue lightning that crawled along his skin intrigued her, and she could tell that his bedroom skills were amplified through the roof by Naia's magic. What would sex with such a man be like?\n\nThe thought made her a little wet.\n\nLeaves rustled off to their right, and they stopped. A unicorn lifted its head to reveal a luminescent horn, and the creature regarded them for several seconds, obviously startled by their appearance. Its piercing blue eyes settled on Beth, and the creature let out a disgusted snort before bolting further into the woods and disappearing.\n\n\"Well, that was rude,\" Beth said.\n\n\"I guess we weren't pure enough for the poor creature.\" He turned to look at her, a slightly horrified look on his face. \"Can you imagine how it would have reacted if we had had Lily with us?\"\n\nBeth laughed. \"Or what about Tink?\"\n\n\"Stupid horny horse fuck,\" Mike replied in a fairly good imitation of Tink. \"Go shove head in tree!\"\n\nThey both laughed, and continued down the path. When they were almost to the shoreline, the path veered to the right and climbed back up into more woods, leaving the ocean behind.\n\nThe shadows of the forest lengthened as dusk approached, and they were now walking along a river inlet that no doubt fed into the ocean. The cobbles of the path were broken up in this area, as if the land itself had shifted. Following the broken trail, they found themselves scaling the stone steps of multiple small waterfalls. At the last of the falls, they took the time to refill the copper tube with fresh water before continuing their journey.\n\n\"I'm nervous about how dark it's getting,\" she said, looking along the path. \"Do you think those things will come after us again?\"\n\n\"I really hope not. If we could find some shelter for the night, I wouldn't mind hunkering down for the evening.\" He yawned. \"I'm exhausted.\"\n\n\"Same.\" Her legs were fine, but her feet were sore, and she undoubtedly had blisters. Her outfit fared no better, and the tear in the side had widened enough that her bra was visible through it. By the time they arrived at the faerie court, they would be a bedraggled couple indeed. \"Should we start looking for a tree to climb, or a cave to sleep in?\"\n\n\"Honestly, I'm of the opinion that anything that isn't built by faeries might eat us.\" He sighed and kicked a rock off the path. \"When I discussed coming here with Sofia, she thought we would emerge somewhere by a faerie mound, or some kind of civilization. Worst case, we go back through the ring and come home. I didn't expect it to disappear while we were still in it, and if I thought we would be camping out in a hostile forest, I would have considered bringing Yuki along so she could build us an ice hut or something.\"\n\n\"She's gonna be pissed when she finds out how much trouble we got into.\"\n\nMike's face paled a little. \"Maybe we can downplay the danger bit once we get back?\"\n\n\"Let's see how the rest of the trip\u2014\" Beth stopped in her tracks when she spotted a man standing against a nearby tree. He was motionless, his dark brown eyes watching them, and Mike took a step closer to her when he spotted the stranger.\n\nThe man eyed both of them and let out a sigh. He was dressed in a simple tunic with cloth pants, and was barefoot. His skin was pale, but his hair and eyes were dark like mud, and there was a collection of damp leaves in his hair that looked like they had been hastily tucked away.\n\n\"You're lost, aren't you?\"\n\n\"No,\" Mike told him. \"We know where we're going. We just don't know if we'll get there before nightfall.\"\n\n\"Oh.\" The stranger shrugged. \"In that case, you'll need shelter for the night. You don't want to be out here when the sun sets. There are unnatural beings who roam this area.\"\n\n\"Do you know where we could find some shelter?\" Beth stepped between Mike and the stranger, batting her eyes.\n\n\"I do, actually.\" The stranger pointed the way they were going. \"Up ahead a bit, you will see a large boulder on the left. There's a small path on the other side, it's hidden by some berry bushes. Don't eat those, by the way. They'll make you sick. Anyway, the path goes to an old fishing hut that nobody is using these days. You could stay there if you like.\"\n\n\"That's so convenient,\" Beth said, scrutinizing the man. Though he seemed harmless, she could tell something was off, especially since the warning they received from the gnome. \"We'll be sure to check that out, thank you.\"\n\n\"Yeah, no trouble.\" The stranger leaned against a tree and feigned disinterest. Beth pulled Mike along, and waited until they were farther down the path to talk with him.\n\n\"So that's obviously a trap,\" she said, keeping her voice low.\n\n\"You had me convinced we were staying in a fishing hut,\" he replied.\n\nShe looked over her shoulder and saw that the stranger had disappeared.\n\n\"Yeah, well, once we're at the boulder, get ready to run.\"\n\n\"I hate running,\" Mike mumbled. \"I should have worn better shoes.\"\n\n\"Put that on the list for our next adventure.\" She couldn't help but smile. \"Any ideas what that guy was?\"\n\n\"Nope.\" He moved to the side of the path and bent down to tie his shoe. She saw him slip something out of his pocket. \"But I have a feeling that we're gonna find out. Can't say I'm excited.\"\n\n\"Hmm.\" Beth stuck her hand in her messenger bag and started feeling around. She found what she wanted, and pulled the small canister of pepper spray from her bag and stuck her thumb under the safety latch.\n\nThe boulder appeared, and they both slowed down. She watched the edge of the forest, but didn't see any signs of movement. When they got to the boulder, sure enough there was a small path that led around it.\n\n\"Let's walk ahead just a little bit,\" Mike said. \"I'd hate to find out that we were almost there and quit too early. We can always come back.\"\n\nShe played along. \"Are you sure? My feet are really tired.\"\n\n\"Ten more minutes, and then we come back. Deal?\"\n\n\"Deal.\"\n\nThey walked past the boulder, and she was fairly certain that she heard the rustling of leaves deep in the woods. The further they walked, the more she heard it. Something just on the other side of the trees was stalking them, and it was getting closer. Her hand tightened on the pepper spray, and she wondered how long they would have to wait before something happened.",
        "It wasn't long. A few minutes past the boulder, she caught a few breaks in the trees. Just on the other side of them was a small lake, and the trees were already thinning out. Down along the shore was a dock and a building that looked like it was the fishing hut the stranger had mentioned.\n\n\"Hey, there really is a hut back there.\" she said.\n\n\"And this would have been ten times easier on the dock,\" the stranger said, stepping into the path in front of them. He was dripping with water, as if he had been swimming. \"I was really hoping you would go there.\"\n\n\"So you could eat us, right?\" The little bits of seaweed in his hair had tickled Beth's memory, but seeing him soaking wet told her what he really was. \"He's a kelpie. Why not just grab us back there?\"\n\n\"Too dangerous,\" Mike answered. \"If he had grabbed us, it's a long way to the water from the path. But it isn't too bad here, is it?\"\n\n\"No. It isn't.\" The kelpie held up his hands, which were now twice their previous size. \"Looks like human is on the menu,\" he said, then moved to grab them both.\n\nThe kelpie was fast, but Mike was faster. He threw a handful of something white that sizzled on contact with the kelpie's skin, and then shoved Beth out of harm's way. Meanwhile, Beth unloaded her pepper spray in the kelpie's face.\n\nThe kelpie brayed like a donkey and stumbled across the path to crash into a tree. His skin split apart and his body expanded rapidly, turning into a massive horse with a mane and tail made of flowing water and bits of seagrass clinging to its side.\n\n\"C'mon!\" Beth yelled, then grabbed Mike by the hand and they ran for it.\n\nBehind them, the kelpie stumbled about, slamming its head into a few nearby trees hard enough that they toppled. It finally let out a horrific noise before bolting for the safety of its lake, pawing at its face the entire time before it vanished beneath the surface.\n\nThey jogged for several minutes along the path, eventually reaching an incline that took them up and away from the lake's edge. Panting in exhaustion, they both took refuge at a clump of rocks at the top of the incline. It allowed them a view of the lake below, and the kelpie would be unable to catch up with them.\n\n\"You... you fucking pepper sprayed him?\" Mike let out a laugh that was also a wheeze.\n\n\"You're one to talk... was that salt?\"\n\n\"It was.\" He held out the tube, and she took it, then sucked down a large amount of water.\n\n\"Why salt?\" she asked, then handed the tube back.\n\n\"Thought it was a better choice than glitter.\" He drank his fill, then capped the tube. A stupid grin broke across his face. \"So between your pepper spray and my salt...\"\n\n\"Oh god, please don't,\" she begged, recognizing the setup.\n\n\"I guess you could call us a pair of well-seasoned adventurers.\" The smug grin on his face was somehow adorable, but it wasn't enough to keep her from groaning.\n\n\"Ugh, that was awful. And incorrect.\" She looked back down the path at the lake below. \"Technically, the kelpie is well-seasoned. We, on the other hand, still need a place for the night.\"\n\n\"I saw a fishing hut back that way.\" He pointed toward the lake. \"Heard they have a vacancy.\"\n\nBeth couldn't help it anymore. She let out a long laugh, and tears formed in her eyes. The cracks in her mental state had busted wide open, and it took her several minutes to compose herself. When she was done, she wiped the streaks from her cheeks and stood.\n\n\"Okay, enough of that. We need to find some shelter for the evening.\" One last giggle escaped her lips, and she put a hand over her mouth. They had almost died again, and it was either laugh or cry at this point. \"So where to now?\"\n\n\"Keep following the path, I'm guessing.\" He stood up on the rocks and looked into the distance. \"It looks like the trees fade back a bit and it becomes open prairie again. I think we're almost to a plateau or something.\"\n\n\"Oh goodie. Big open spaces, my favorite.\"\n\nHe nodded, and they continued on the path. Every few minutes, they looked over their shoulders to see if the kelpie was coming after them, but Beth hoped that the creature had decided to stay in its lake and wait for an easier meal.\n\nThe path indeed led them onto a large plateau. It almost looked like the trees had been cleared away, and save for grass and bushes scattered about, the land was devoid of any other vegetation. Overhead, the sky was darkening, and a loud rumble echoed across the hilltop.\n\n\"Oh please, don't tell me that\u2014\"\n\nThe first set of raindrops bounced off her head and stained the path below. The storm itself wasn't bad, and reminded her of a summer shower. However, they had nowhere to go, and she did her best to pinch her bag shut and keep the valuable texts within from getting wet.\n\nForward they walked, saying little and keeping their eyes peeled. The occasional lightning crawled across the clouds, and thunder was their constant companion. Occasionally through gaps in the clouds, she could see a shimmering being shaped much like a serpent that ducked out of sight. They both stopped for a few minutes to watch the creature play amongst the clouds, then kept moving to keep warm.\n\nBy the time the rain stopped, the sky had darkened. The sun was starting to set over the edge of the plateau, and a bitter chill settled across the land. Mike took off his wet jacket, gave it a hard shake, then wrapped it around Beth, who accepted it graciously.\n\n\"Just don't steal any of my glitter,\" he warned her. \"I'm planning a massive arts and crafts project when we get home.\"\n\n\"What about some buttons?\" she asked.\n\n\"Well... just not the really shiny ones.\" He smiled, and she suddenly felt warm inside. \"Those are my favorite.\"\n\n\"Hey, I've been wondering,\" she began, but didn't get a chance to finish. The sound of hooves on pavement rolled across them, and they both looked over their shoulders. Had the kelpie decided to come for them after all?\n\nThere was nothing behind them. They kept looking, and it soon became apparent that the sound was actually in front of them. In the distance, a horse with a rider stepped around a pile of rocks and paused to watch them.\n\n\"Dullahan?\" Mike asked.\n\n\"I guess. Hard to tell with the sun at his back.\" She squinted, hoping to see any additional details.\n\nThe rider bolted toward them, and a piercing cry reached their ears just as the horseman vanished from view.\n\n\"Shit, shit... there!\" Mike pointed to a large pile of rocks about a hundred yards away. Before they stepped off the path, he pulled his flashlight out and turned it on, then set it down on the stones facing the way they had been going.\n\n\"Don't we need that?\" she asked.\n\n\"Let's worry about that later,\" he told her, and they moved into the long grass and kept down. Whatever was hunting them let out another series of cries that sent ice through her veins. The sound of hooves came closer, but that meant it was staying on the path and headed for the flashlight. They were almost to the rocks when the rider reached the light, and they both stopped to watch from behind a pair of bushes.\n\nThe rider grabbed the light from the ground without dismounting, and held it up for inspection. The beam traveled along its body, revealing that neither the rider or the horse had any skin.\n\n\"Oh, fuck,\" she swore under her breath. The rider turned its head toward their hiding spot, revealing a single eye that burned with a flame of its own. This was something she recognized immediately from her own monster lore, and when that blazing gaze met hers, she felt her legs go weak. It was a nuckelavee, a demon with no skin. The rider and the horse were the same creature, and had only one passion; killing stray humans.\n\n\"RUN!\" Mike yelled, and they both bolted at the same time the nuckelavee charged. The rocks weren't much farther, and she spotted a small opening near the base.\n\n\"There!\" she cried out, and they both changed course. While the nuckelavee might be able to follow them up the rocks, it definitely couldn't squeeze below them. When they reached the rocks, Beth had crouched over to crawl into the hole when something grabbed the back of Mike's jacket and pulled.\n\nThe nuckelavee yanked her off her feet, and she fell backwards into the weeds, letting out a grunt upon landing. Mike landed on the other side of the nuckelavee, making it apparent that it had caught them both with its over-sized arms.\n\nShe tried to stand, but the wind had been knocked out of her. Gasping for air, she watched as the creature turned its gaze toward her, its distorted grin just barely visible in the dying light of day. It reached its impossibly long arms for her, and she closed her eyes.\n\nMike screamed.\n\nThe shrill cry of the nuckelavee paled in comparison to the prolonged wail of a banshee, and when she opened her eyes, the nuckelavee had bolted away from the rocks in fright. Mike ran to her and grabbed her by the arms and pulled.\n\n\"I've got you,\" he said, his voice a bit raspy, then threw her over his shoulder and moved toward the rocks. The nuckelavee had run away, but was already circling back. Mike had bought them time, but it was going to be close.\n\nThe hole in the rocks was a gap no more than a couple feet across, and Mike pushed Beth in first. She gasped for air, but was able to pull herself along into the depression. When she looked down, she saw that Mike was trying to follow, but only got in a few feet before he was pulled back out of the hole.\n\nShe couldn't even yell his name, and could only watch in horror as the nuckelavee tossed Mike into the grass and circled him. It lashed out a couple of times, and Mike dodged its blows, but it was clear that it was only toying with him.\n\nThe nuckelavee let out a gurgling laugh that became a shrill cry, and charged at Mike once more, arms spread wide. It was nearly on top of him when a blast of lightning tore from the clouds above, ripping into the nuckelavee and shoving it away from the pile of stones. The demonic being fought to regain its footing, and a large shape slammed into the ground between it and Mike.\n\nAt least twenty feet tall, the large creature that had just saved Mike roared, and the demon ran. All that could be heard over the distant rumbling of thunder was the angry cry of the nuckelavee, a shrill call that promised torment if it ever saw them again.\n\nThe beast turned around and looked at Mike, tilting its head from side to side. Covered in sparkling, iridescent scales and plumage that reminded Beth of a bird, it had a giant horn centered on its forehead right between a pair of violet colored eyes that sat above reptilian jaws.\n\n\"Mi... Mike!\" Beth squirmed toward the entrance of the hole and gazed up in awe. The dragon lowered its head and gave him a sniff, then let out a huff that blasted his hair away from his face and nearly knocked him over.\n\n\"You are not a banshee, but you smell of the fae,\" the dragon spoke, its voice rumbling like thunder. It slid its serpent-like body to the side and laid down, resting its large jaws on an enormous paw. Even in the dark, Beth could see the upward tilt of a grin. \"When I heard the call of the banshee, I saw the nuckelavee hunting and chose to intercede. However, I arrive to find a man-ling instead. How curious.\"\n\n\"Yeah, that was me.\" Mike stood to face the dragon. \"We're trying to get an audience with the faerie queen, but have no idea where we are going and ran into that thing you saw.\"\n\n\"I see.\" The dragon tilted its head to look at Beth, then back at Mike. \"You two are dressed in a noble fashion, though look to have fallen on hard times. I happen to know where the court of the faerie queen is. Maybe I can be of assistance to you?\"\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nMike could feel the energy radiating off of the dragon that had saved their lives, and at its offer of assistance, he felt his heart swell. Whereas his whole being had been suffused with precognitive terror in the presence of the nuckelavee, he felt nothing but warmth from the creature before him.\n\nHe helped Beth out of her hiding spot so that they could both see the dragon better.\n\n\"The nuckelavee is a dangerous creature,\" the dragon said. \"I am surprised that you chose to travel its lands without adequate protection.\"\n\n\"Oh, very little of this was planned,\" Mike explained, rubbing a sore spot on his ribs. When the nuckelavee had tossed him the first time, he had landed on a rock, and was fairly certain his ribs were bruised, if not cracked. \"We came here to meet with the faerie queen, but got a less than friendly reception.\"\n\nThe dragon nodded sagely. \"I, too, am a stranger in this land. You may call me Quetzalli.\"\n\n\"I'm Mike,\" he said, then pointed at Beth. \"This is Beth.\"\n\n\"Are you a quetzalcoatl?\" Beth asked.\n\n\"I am.\" The dragon smiled. \"Though that is not a word I have heard in some time.\"\n\n\"What are you doing here?\" she asked. \"This is a long way from Central America.\"\n\n\"It is. I took refuge here many years ago as civilization and science caught up with my kind. Luckily, the queen was willing to let me stay in exchange for my services.\"\n\n\"What services?\" Mike asked.\n\n\"The rain earlier!\" Beth was shouting now in excitement. \"That was you in the storm, wasn't it?\"\n\n\"It was.\" Quetzalli answered. \"It is my job to help regulate the weather here, and to ensure it rains when it is needed.\"\n\n\"Couldn't the queen just do that?\"\n\n\"The queen is powerful, yes, but she is not omnipotent. In the past, she would need to travel to a region such as this to enact such a feat, and it is well known that there exist many creatures who love to toy with the weather. I save her time, and she lets me ride the clouds of her realm. It is a peaceful arrangement.\"\n\n\"So there are others like you?\" Beth asked. \"You aren't the only one?\"\n\nThe dragon shrugged, which sent a ripple through its serpentine body. \"I have not spoken to my siblings in many years, but at one point, I was not alone.\"\n\n\"I thought Quetzalcoatl was a god or something,\" Mike pointed out. If he had known he would be dealing with so many mythological beings when he was older, he would have spent more time studying religion versus how to escape quicksand.\n\nThe dragon laughed. \"My oldest brother had a way with people, but yes, they considered him a god. As is often the case, that was not entirely true, but the title afforded him some liberties, and my kind were highly revered for a time.\"\n\n\"I see. Speaking of the queen, have you heard from her recently?\"\n\n\"Should I have?\" Quetzalli asked.\n\n\"Like, doesn't she have to tell you where to go or what weather to make?\"\n\n\"The queen trusts me in my expertise. I have not spoken with her directly in decades, nor do I have need to.\" The dragon looked over its shoulder, then back at them. \"I sense dark forces gathering here. It seems that you have the attention of many beings that lurk in this area, and I worry that you may fall prey to them. Do you not carry any adequate defenses?\"\n\n\"Honestly, this trip was meant to be a diplomatic mission of sorts. As a result, we brought no weapons to use against the fae.\"\n\n\"Hmm.\" The dragon moved close to him and he felt an electric field form across his body. \"It is true. You do not carry the iron that they fear so much. Very well, I have decided. I was going to give you directions, but you will not last the night in this place. May I offer you a ride?\"\n\n\"Yes, please.\" Mike approached the dragon, looking for somewhere to get on. \"Where may we sit?\"\n\nQuetzalli laughed, a hearty booming sound that he could feel in his chest. \"I do not offer rides lightly, for you will have to ride inside my mouth. I'm afraid that the air up there is quite thin and very cold, and I rely on the lightning itself to soar across the lands. You would not survive such a trip.\"\n\nHe frowned, looking at the dragon. \"How can I be sure I'll survive a trip in your mouth?\"\n\n\"I do not eat man. I take sustenance from the sky, and occasionally some fish.\" Quetzalli's mouth opened to reveal that the inside was largely devoid of teeth. What few the dragon had were widely spaced and not very sharp. \"Though I suppose I could accidentally swallow you. That would be tragic, and I would feel very bad.\"\n\n\"I think we should go for it,\" Beth told him. \"We've got nothing to lose, and everything to gain. I get the feeling that if we stay out here, we're dead anyway.\"\n\nHe frowned, then pondered the implications. Quetzalli's explanation about the queen made sense, and it was entirely possible that the dragon had no idea that he was persona non grata with the queen herself. Beth was actively shivering now, clutching his coat against her skin. Strangely enough, he didn't feel very cold at all, but he figured it was because his mind was filled with other concerns right now.\n\n\"I guess we accept. Please don't eat us.\"\n\nQuetzalli laughed again. \"I will do my best.\"\n\nWhen the dragon opened up its maw, he saw that there was plenty of room between teeth and tongue for him to sit. Beth climbed in across from him, and in the distance, something shrieked angrily.\n\nThe dragon closed its mouth, plunging them into darkness, and there were several disorienting seconds as Quetzalli twisted about and then took off into the sky. Outside the dragon, they could hear a steady humming noise and Mike's ears started popping.\n\n\"You good over there?\" he asked.\n\n\"Yeah. Just... this has been a shitty couple of days.\" Beth's phone clicked on, and he could see her face above the dragon's tongue. \"The best thing that has happened to us is riding inside a strange dragon's mouth. Let that sink in.\"\n\n\"The fact that we are so soaked to the bone and we can't tell what's water and what's saliva should bother us more.\"\n\nAt least the dragon's mouth was warm, though it smelled like a cross between a fish market and a locker room. Beth no longer shivered now, and her face was a mask of disgust.\n\n\"If we can help it, let's not come back,\" she suggested.\n\n\"I agree.\"\n\nThe flight was long, and he dozed off at some point, figuring that if the dragon chose to make a snack of them, there was nothing he could do. His dreams were fleeting, and the only thing he could remember about them was fantasizing about his old dagger and how much he wished he had it now. He probably would have killed the kelpie and stayed in the fishing hut, and if they ran afoul of the nuckelavee, he could have given it a run for its money.\n\nWhen he woke up, it was because Beth was pushing something into his hand.\n\n\"You should eat something,\" she told him, handing him half of a food bar.\n\n\"Thanks,\" he said, then quickly devoured it. \"Any idea how long we've been flying?\"\n\n\"At least a few hours. My phone keeps trying to update its clock, but this place keeps screwing with it. So anywhere between ten minutes and twelve hours.\"\n\n\"So I take it the path was a lot longer than that gnome thought it would be.\"\n\n\"Hey, he just told us a direction. Maybe he was lying, maybe not. It wasn't like he could tell us how long it would be.\"\n\n\"Yeah, well I'm wondering how much longer we'll\u2014\" His ears popped, and he slid forward as Quetzalli descended. He reached across the tongue and grabbed Beth's hands, holding tightly to them as the dragon landed; then it opened its mouth and let them out.\n\nIt was daylight now, and they stood just outside a structure that was carved similarly to the Roman Colosseum built against the side of a mountain. All around them, the fae gawked in curiosity as he helped Beth to her feet. They were both still wet, and she handed him his jacket, which he took.\n\n\"Thanks again,\" he told the dragon. \"If I can ever repay you, well, come find me or something.\"\n\n\"The sentiment is appreciated.\" In the light of day, Quetzalli was even more magnificent than before. Sunlight bounced off of multicolored scales and cast light on the road beneath their feet that was reminiscent of a stained-glass window. \"Luck be with you, man-ling.\"",
        "An aura of electricity surrounded the dragon, and feathery wings stretched wide as it jumped into the sky. Thunder rolled over the coliseum, and they watched as Quetzalli disappeared into the clouds above.\n\nBehind him, he heard Beth humming the theme song of The Neverending Story.\n\nHis suit was torn in multiple places, and his shoes squished when he walked. Beth's outfit was a mess as well, but at least most of the dirt had come off in the dragon's mouth. \"Well, guess we're ready to see the queen,\" he said, raising an eyebrow. \"Unless you need a minute to fix your makeup or something.\"\n\nShe rolled her eyes at him and started down the path without a word. He did a quick jog to catch up, his shoes squeaking beneath him.\n\nThe fae gave them a wide berth, muttering to one another as Mike and Beth passed. The path led them inside the coliseum and terminated into a small, stone bridge. The coliseum had a giant, multi-tiered garden along the inner wall that bustled with the activity of well-dressed faerie folk. The mountain that the building was carved into had three waterfalls that fed into a river system that ran through it and around a small, flower-shaped stone island in the middle.\n\nThe bridge was the only connection between the island and the rest of the structure. The perimeter of the coliseum went silent as the fae watched them step onto the island. On the other side of the island was a throne. To its left was the shattered remnants of what may have been a second throne. On the right, sitting on a swing within a large metal cage, was Cecilia.\n\n\"Cecilia!\" When Mike called to her, the banshee looked up, hope and horror etched on her face. He wanted to go to her, to rip open the bars of the cage with his bare hands, but decorum was required in the court of the faerie queen, and the last thing he needed was to bring down the wrath of the court.\n\nThat, and he would look pretty stupid trying to rip apart the bars.\n\nThere was a murmur from the surrounding crowd, and he turned around to see a large mass of golden butterflies made of light descend from the outer rim of the coliseum. They swirled around Beth and Mike, then spun into a circle above the throne. When they came in to land, they slowly melted into each other, forming in the tall silhouette of a blonde woman with pointed ears and a gold circlet on her head. Massive gossamer wings unfurled behind her, then settled like a cloak over her shoulders, and many of the fae briefly bowed or took a knee.\n\n\"So you came for her.\" When the queen spoke, he could feel a wicked energy wash over him. Her skin practically glowed with power, and her voice was suffused with magic the likes of which he had never felt before. Though she was beautiful, as he met her gaze, he could sense the cruelty behind the facade.\n\n\"Your Majesty.\" He bowed deeply as well. It was one of the few customs that Sofia had coached him on. \"I have come today to discuss the imminent release of my friend, the banshee Cecilia.\"\n\nThere were scattered chuckles amongst the throng of fae, and many of them leaned forward with intense interest.\n\n\"I see. Tell me, Mike Radley, do you honestly believe you are in any condition to address the court?\"\n\nHe sighed. \"No, Your Majesty, but your land is as deadly as it is beautiful.\" Flattery was a weapon in his arsenal now, and he would have to be careful with any words that he spoke. \"I'm afraid that we encountered many of your subjects who were uninterested in letting us pass without incident.\"\n\n\"Indeed. Did you know that they did so by my order?\" When the queen walked, she shimmered, and she moved away from the throne.\n\nHe nodded. \"It was explained to us that we were unwelcome.\"\n\n\"And yet you came anyway. How... delightful.\"\n\n\"Please, Your Majesty, the path was difficult, and I only hope to secure the release of my friend.\" He debated dropping to his knees and begging, but knew it would only serve to amuse the queen. Then again, if amusing her was all it would take, he would do it.\n\n\"And what have you to offer in exchange for her release?\" The queen sat down on her throne and held her hand out. A sprite appeared to deliver a crystalline glass of wine, which the queen took and set down on a nearby table.\n\n\"Your Majesty, I was under the impression that Cecilia was being held captive on account of some crime she may have committed. As such, I have brought my attorney to\u2014\" when he turned to introduce Beth, he froze.\n\nBeth's face had gone completely slack, her eyes unfocused and a stupid grin on her face.\n\n\"Beth?\" He waved his hand in front of her eyes, but she didn't move.\n\n\"Your friend suffers from a serious case of being a simple mortal.\" The queen took a sip from her glass. \"Do you really think a mere human could gaze upon the visage of the Queen of the Fae without losing herself in my beauty?\"\n\n\"Beth!\" He tried to grab her shoulders and give her a shake, but she moved away from him and toward the queen. A pair of winged guards landed between him and the queen, their spears held up in warning.\n\n\"This one interests me.\" The queen stood from her throne and approached Beth, who had kneeled down and was openly sobbing with joy. \"She has much potential, even as a human.\"\n\n\"Don't touch her.\" He meant to sound tough, but his voice squeaked a little. When the queen put her hand on Beth's head, the lawyer rose and ran across the bridge to the edge of the court and stood with a group of nobles wearing light blue robes.\n\n\"I touched her. What now, Radley? Are you going to come over here and seduce me?\" The queen batted her eyes dramatically. \"Or maybe you plan to leave and come back with more of your friends? Maybe some of them will be like you, able to see past the glamour and function, but then what? Will you declare war on our kind?\"\n\nBeth. She was supposed to be his secret weapon, the smart one capable of talking him out of trouble. Now she was caught up in a spell of obedience or a charm. She was practically hanging off the neck of a handsome fae with translucent wings and a toothy grin. He and his cohorts were luring her to a nearby table of food where one of their servants had already poured a glass of wine for her.\n\nHis eyes met Cecilia's, and he saw raw panic reflected in them. He had overstepped, and Beth was about to pay the price. Without warning, his magic came to life, surging up inside him. He needed to do something to break the spell, and he knew just the thing.\n\nHe took a deep breath.\n\n\"Seems like she's about to make the choice for you, Caretaker.\" The queen smirked. \"Maybe now you'll\u2014\"\n\nMike unleashed a shriek of rage that caused most of the court to cower in alarm. It was the high pitched wail of a banshee at first, but then became warped and distorted. The glass in the queen's hand shattered, spraying her with wine, and Beth fell to the ground clutching her ears.\n\nWhen the shriek ended, Beth pulled the earplugs from her pocket and shoved them in her ears, then huddled on the ground with her hands over her eyes.\n\n\"I'm sorry, Mike, I can't look at her!\" she cried. \"I'm so sorry, please forgive me!\"\n\nWhile Beth huddled on the ground, the faerie queen's wings extended behind her and she hovered about a foot off the ground. Golden light enveloped her, and her eyes flickered with magical sparks.\n\n\"How dare you!\" she yelled, pointing her wine-stained hand at him. \"You dare to shout in my court!\"\n\nThe room had gone silent, save for the sound of a few faeries drawing weapons or placing bets. The tension in the room was so thick that the mists around the edges moved away from the center, as if giving the gods themselves a better view of what was about to transpire.\n\nMike rubbed his throat. He had yelled so hard that it was raw, and when he spoke, there was a scratch in his voice.\n\n\"How dare you.\" He pointed a finger back at the queen, fire blooming in his cheeks and his whole body tensing up. \"You accuse me of impropriety when you just stand there being a capital cunt about all this.\"\n\nThe collective gasp from the room sounded like the tearing of fabric, but he ignored it. The queen's face froze in shock.\n\n\"How dare you speak to the queen in such a manner.\" This was from a lordly looking fae on the edge of the court, a man in silver garments with a crown of roses around his head. He held a wooden staff with roses embossed along its length and his silvered hair was nearly waist length.\n\n\"Stuff it, Legolas.\" He felt the fire in his cheeks spread across his body, and the gears of his mind cranked rapidly. Maybe it had been a huge mistake to come here, but if he was about to go down in flames, he was going to give everyone a piece of his mind. Time seemed to slow, allowing him the opportunity to choose his words. \"The grown-ups are talking now. Why don't you go play with your flowers?\"\n\nA mixture of laughs and boos filled the air, and Mike held up his hand for silence. The faerie lord had vanished behind some of his cohorts, and Mike's gaze swept the room, then landed on the indignant queen.\n\n\"I came here to have a civilized conversation with you, Your Majesty. You forced me to trudge through your land for a couple of days, encouraged your subjects to kill me, and then mock me to my face when I finally arrive. So what exactly do you expect from me?\"\n\nHe ripped off his tie and threw it on the ground, where it landed with a splat. \"Do you want to humiliate me in front of all your subjects and look like the big tough bitch that everyone talks about? And you must be so proud of yourself picking on a mortal! Bravo!\" He started a slow clap, and fought a grin when a couple of unseen fae joined in. \"If you were so scared of me, you should never have sent your spy to come see me. I would never have thought to come here in the first place, so bravo again.\" He clapped his hands a couple more times then stopped when an errant thought occurred to him.\n\nSulyvahn had said he had been forced to come because of an agreement the queen had. The queen ensured that every Caretaker was spirited away to the afterlife, but if she disapproved of one, why not just have them killed?\n\n\"I suggest you\u2014\" she began, but he butted in.\n\n\"You know what? When we came here, we took so much care to be respectful. My friend had books on etiquette and faerie law, and we deliberately left any weapons at home. Do you know how easy iron is to get in the human world? And not just any iron, but official cold iron. I could have that shit delivered to my door in hours, get it blessed by a holy man, whatever. I could have come here with a small army. Did your spy tell you that? No, I chose to assume that you weren't a huge bitch, despite being told otherwise by more than one person. So who is disrespecting who? I came with every intention of kindness and civility, but you turned your land against me, and for what? Because the banshee is my friend?\n\n\"Check this out! I brought nothing but simple protection charms and some gifts.\" He pulled out a bag full of polished stones. \"I heard your kind like shiny things, so I brought these to trade for directions. Guess I don't need them.\" He dumped the bag in his hands and threw the stones in a wide arc toward the lords and ladies. Some of the pebbles landed in the watery ring, but the others bounced along the ground, and he noticed that several of the fae servants now stared with intense interest at the rocks. \"I came as a friend of the fae, and you treated me as your enemy. So I'm no longer begging forgiveness, Your Majesty. It doesn't matter if you don't like me, I'm loved by many others. So unless you are planning to smite me or something, you need to tell me right now what I can do to take Cecilia home with me. She is a part of my home, and is very missed, and I would go through Hell itself to get her back.\"\n\n\"Enough!\" The queen's wings swung down and a hot wind blew across the court, scattering some of the flying servants who cried out in alarm. She floated off the ground, her aura expanding around her, giving her the appearance of a tiny star. \"You are an abomination, Caretaker. You stole faerie magic, and suffused it with your very soul, and for that, I would kill you.\"\n\n\"Then do it. Let's see the brave queen smash the puny mortal.\" He raised his arms and turned so everyone could see him. \"I'm just a defenseless human, after all, so show everyone how brave you are, Tinkerbell! Blow me away!\"\n\nThere was a collective groan from the crowd as the fae scrambled over each other to get a better view of what was about to transpire, but the swirling mists suddenly closed in on them, leaving Mike and Beth alone with the queen of the fae. He turned to face her, and saw that her face was contorted in a mask of rage.\n\nShe summoned a swirling ball of fire, light and shadows with her hands and held it over her head. It sizzled and popped like water on a hot skillet, and Mike took a step toward her.\n\n\"Oh please. What are you gonna do with that?\" He stepped between her and Beth, just in case. \"I've already figured out you can't directly hurt me.\"\n\nThe queen's face fell in shock, and the ball of magic popped like a bubble, sending a wave of crackling energy along the ground.\n\n\"How?\" she asked.\n\n\"Simple. Somewhere out there is a written agreement meaning that you provide my home with an escort to the afterlife. I'm willing to bet that there is a clause in there that prevents you from getting rid of Caretaker's you don't like, and from directly commanding your subjects to harm him or her.\"\n\n\"You can't know that.\"\n\n\"Ah, but I do. You said you would kill me for what I've done, and yet, I live. Why is that? Why have us dumped in the middle of the woods and trick us into walking into those stupid bird things instead of just blowing my head off the minute I arrive?\"\n\n\"The slaugh are not birds,\" she corrected him.\n\n\"Whatever. Why not just have someone give me shitty directions and trick me into going home? Or have Sulyvahn bring me here directly so you can bash my head in for laughs? 'Cause you can't do it, and you don't want the others to know that their all-powerful queen can't smash a measly human. You were hoping I would have an accident while I was here and could move on with your day.\" He knelt down by Beth and gave her a shake. She was motionless now, and he gave her another concerned shove. \"What did you do to her?\"\n\n\"The mist has put her to sleep. I was hoping it would do the same to you, and I would be rid of your presence, but it appears that you have developed quite the resistance to it. It's a defense mechanism made for humans, but clearly you have strayed too far from your own humanity. Do you even know what you have become? Because I do not, and I have seen the very mists of Creation itself. You are new magic, and I do not like it one bit.\" She slumped down in her throne and scowled. \"So I'm afraid we are at an impasse, Caretaker. I could send you back home, but I fear you would darken my doorstep once again to humiliate me further.\"\n\n\"You're right. I would. So let's try again. I want Cecilia back, and I won't stop until you give me what I want.\" He crossed his arms. \"And don't even think about threatening Beth again. The Rat King is very close friends with her, and I bet I could convince him to chew enough holes in this place to collapse it.\"\n\nThe queen laughed. \"You threaten me with planar oblivion? You think very highly of yourself.\"\n\n\"We've done it once already. A demon took her from us, so we blew up his dimension.\"\n\n\"I doubt that...\" She inspected him closely now, her eyes searching his. \"I cannot believe it, but somehow you speak the truth.\"\n\n\"I do. Cecilia appears unharmed for now, but if you decide to punish her on my account, I will dedicate my life to swiss-cheesing this place. If you think I'm beyond caving in your kingdom, then look again.\"\n\n\"Foolish child. I would never harm one of my own.\" The queen seemed genuinely upset at the idea, her pale cheeks darkening. \"It is not her fault that she was tricked into a dalliance with a mortal.\"\n\nMike shook his head. \"There was no trickery involved. It just happened and it was mutual. The thing about the magic was an accident, and I'm sorry if it offends you, but you need to move on. Now tell me what you want from me so that I can move on, too.\"\n\nShe gave him a hard stare for nearly a minute, but he didn't back down. He had gambled on the queen being unable to hurt him and had no other ideas on how to get the queen to listen.\n\n\"Do you love her?\" the queen asked. The question caught him off guard, not just because of the content, but how the queen asked it. There was fear in her voice, but he couldn't imagine why that would be.\n\nHe chose his words carefully, fully expecting a trap. \"I love her as I do the others in my house. I'm still learning about those feelings myself, and my situation is quite unusual, but yes, I do.\"\n\n\"I see.\" The queen stared him down for several moments, contemplating his answer. Suddenly, her face blossomed into a sinister smile. \"Okay, then.\"\n\nShe clapped her hands, and the loud boom that came from them blew the mist away, revealing the entirety of the court once more. Excited cheers and jeers could be heard from every direction as the fae awaited what would come next.\n\n\"This mortal claims that he loves the banshee Cecilia, and would walk through Hell itself to get her back. Seeing the honesty in his heart, I have decided to test his worth.\" She pointed a finger at him, a sneer on her face. \"Henceforth, you are banished from entering the fae realm by any means from your world until you can complete this task, Caretaker Radley. The faerie realm lies parallel to many dominions, the Underworld included. Should you find a way to enter my court via the Underworld itself, I will allow you to leave here with your dear Cecilia.\"\n\n\"Leave unharmed. You will allow us all to leave unharmed. And intact.\" he added.\n\nHe hadn't been expecting this, and realized that he had somehow been played. It was likely an impossible task, but he was willing to bet it was the only way she would let Cecilia go. The court was now an animated throng as coin exchanged hands and the fae debated the potential outcome.\n\n\"And I want this agreement in writing.\"\n\nThe queen rolled her eyes and summoned a scroll from midair and tossed it to him. He caught it and opened it up to look. It seemed straight forward, and guaranteed the banshee's release and safe passage for both of them if he could come back to the court by way of the Underworld.\n\n\"Guess I'll be seeing you soon. I agree to the terms.\" His name appeared, scrawled in golden ink. He looked at Cecilia, whose face was crestfallen. \"I'm coming for you.\"\n\nShe nodded her head, then wiped a tear from her cheek.\n\n\"Oh. And one more thing.\" The queen raised her hand for silence, then clenched it into a fist and yanked it down. The sky ripped itself apart, and a large shape slammed into the ground next to Mike, thrashing about in confusion.\n\nIt was Quetzalli.\n\nThe dragon roared in pain, and a sickly blue aura surrounded it, followed by the sizzle of electricity. The horn on its head glowed with power, summoning lightning from the sky. The boom was deafening, and Mike covered his ears.\n\n\"Hey, stop it!\" he yelled, then ran to the dragon. A blast of lightning scorched the ground near his legs, so he halted his advance.\n\n\"Let it be known that he is to receive no help from any fae, or any other creature who wishes to remain in these lands. I wasn't clear enough with my prior orders, so let it be known that what is about to transpire is an act of leniency on my part.\" She turned her eyes on the dragon. \"Since you seem to like humans so much, why don't you go and live as one?\"\n\nThe blue light ripped through the dragon, shedding feathers and scales in every direction, and the beast roared in agony. Mike covered his face and threw himself over Beth to protect her from the swirling dragon bits, clenching his teeth in pain as he was buffeted by tiny stones that swirled about. The light was diminishing, revealing a huddled figure in the middle of where the dragon had lain.",
        "\"Quetzalli!\" he cried out, racked with guilt. The dragon had gotten caught up in this mess solely for being a good Samaritan, and he turned his gaze back on the queen. \"I'm coming for you, too,\" he warned her.\n\n\"I look forward to it,\" she replied, her voice carrying to him over the wind. Through the maelstrom of magic, he could see golden lines forming in the air above her, lines that flew behind him and stacked themselves into an intricately built gate.\n\n\"Now get the fuck out of my queendom,\" she said, and a powerful wind pushed the three of them across the stone floor. The gate opened, and he caught a brief glimpse of his house just as his grip slipped off of Beth's shoulders. Lifted free of the ground, he saw Beth and Quetzalli tumbling across the ground after him. Unable to control his flight, the edge of the gate clipped his head on his way through it, and everything went black.\n\n<center>\ud83c\udfe0\ud83c\udfe0\ud83c\udfe0</center>\n\nBAM! Starting 2020 with an enchanted dragon-girl, an angry faerie queen, and a quest to traverse the Underworld to save our beloved banshee. Gonna be a fun year, and I'm so excited to write it for you!\n\nFor those of you following me closely, I am in the middle of a small break from writing (I haven't even started Ch. 50 yet) to get caught up on some important Real World things, but once I get sorted, I will be back to my usual story production. You can follow my bio for notifications when I post, or just click on it-I always update it the day I submit a story on here (there's always a few day delay, so don't panic).\n\nTo the Lit community, thanks for being who you are, and I can't wait to do my best for you this year. Take care of yourselves and each other!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "dragon girl",
        "fairie queen",
        "harem",
        "kelpie",
        "monster girls",
        "nuckelavee",
        "slightly romantic",
        "travel inside a dragons mouth",
        "plot heavy"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-49"
}