{
    "title": "The Sultanah Ch. 02",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 2 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for.\n\nFrom now on the sex will be much more prominent in the story, though plot remains central as well. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. \n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapter.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nChapter 2: Coronation\n\n\"And after she walks from the stairway down towards the street...\" Cardinal Rahip began.\n\n\"She should not be walking down after the crown is placed on her head!\" Cin shot back, she should rise towards Gunes...\"\n\n\"She should humble herself before Tanri, go down to the level of the Temple...\" Cardinal Rahip interrupted in turn. Then both clergy members began to talk over one another so thickly that their words were impossible to hear. Soon other voices added to the cries, making the room reverberate.\n\nWe were in my fathers'...my throne room. I was sitting on the consort's throne (As I had not yet received my coronation, I could not sit in the Sultan, or in the future, Sultanah's throne). My elbow was propped on the armrest of my chair and I was supporting my head with my hand, watching the actions unfold before me. It had been nearly a week since my father and brothers had died and every day after the first had been like this. Constant, bewildering conflict.\n\nThe current fight was about the nature of my coronation. Cardinal Rahip, Tanri's representative in the city, was planning what had become the traditional, New Religion coronation, scheduled to occur in four days. Cin, on the other hand, was attempting to insert many older traditions in the ceremony, those that dated back to the early days of the Empire. Coronation rituals that were closely tied to Gunes. Each symbolic gesture had meaning to one or the other and it seemed that they agreed on nothing. I could barely understand the importance of each conflict and felt further and further out of my element with each new issue that arose. \n\nThe Peers were also present in the hall, lining the walls and watching the battle closely. No formal meeting had been called and they were not required to attend. But it was clear that something important was happening and they wanted to be involved. In fact, it was clear that the stakes were extremely high. They called out to Rahip or to Cin, to cheer or to insult, taking intense interest in each jab, each parry. \n\nThings had moved with breathtaking speed in the days since my father's death. After I had obtained the acclamation of the Peers as my father's heir, I hadn't had any plan about what was to occur next. I knew that, given my...unique anatomy, that I was entitled to the throne. The people seemed shocked and confused by the state of affairs and they did not embrace me as they might a more traditional heir. Significantly, they had not rejected me either. It seemed that they were waiting to see what would happen. The Peers, satisfied with my right to throne (or at least cowed enough not to openly question it) agreed on little else. As such, they provided very little in the way of guidance. \n\nIn the days that followed, I kept my mouth closed and my eyes open as events moved quickly. I noticed, without stating anything to anyone, that there were clearly two factions in The Peers. Well, I suppose that is an oversimplification. There were dozens of factions in The Peers. Family groups predominated, but there were also regional cliques (different city suburbs and outlying regions tended to stick together). But those various factions seemed to be sorting themselves into two large coalitions. At first, it seemed like the factions within each coalition had little in common. For example, why would Duke Hain, the most powerful landholder in the Empire and the Lord of the Gates see himself allied with Lord \u00d6rnek, a low born, cowardly knight with a life grant of a small farm ten miles from the city center? Why would Lord Sadik, a youthful knight with ambitions toward extensive landholdings find himself allied with Duke Eski, an elderly man with many sons and no daughters? Only one thing bound these two coalitions together and set them against one another: Me.\n\nIt had not been clear to me at first that I had been the cause of this strife. But, as each day passed it became apparent. Fights about who would sit where during the coronation were actually fights about the nature and direction of my reign as Sultan. Arguments about security for the coronation were actually conflicts about my diplomatic position toward Dusman. Even the foods we would eat and the clothing I would wear seemed to hold deep symbolic value to both sides. It was almost impossible to avoid offense\n\nAfter several days, I had a working theory on what the two groups of Peers really stood for. The first, and by a wide margin larger, of the groups I called the Collaborationist (though not to their faces) and they were led, without question, by Duke Hain. They stood for continuation of my father's old policies, most specifically as it related to Dusman and the other successor states of the old Empire. The Collaborationists seemed to believe that we could simply ignore the night my father was killed, have Nislani marry Prince Lider, and things would go back to usual. We would forgive their murder of my father and brothers and, in return, they would graciously give up their intention to overthrow \u00dclke.\n\nThe other side, whom I called the Loyalists, were nominally headed by the Duke G\u00f6stermelik, an elderly Duke and Keeper of the Privy Seal who had been my father's closest personal friend. However, the real reins of power in this coalition were held by the youthful and energetic Lord Sadik. I could see when they met that all eyes turned to him, I noticed that preferences he stated later became the preferences of the entire group, and I could not help but note how much Duke G\u00f6stermelik relied upon him. I knew when I heard Duke G\u00f6stermelik speak, that he spoke with Sadik's words. I called them the \"Loyalists\" because they remained, in my mind, loyal to my father's memory. Or, at least, his symbolic memory as the leader of \u00dclke. They chose not to ignore the massive insult that Dusman and its allies had offered us and sought some manner of redress. They argued that if we allowed such an action to go unchecked, that it was just a matter of time before we, once again, faced annihilation.\n\nI should note that the difference in diplomatic posture toward Dusman and its allies was not purely philosophical. The great army that had tried to seize the city of \u015eehir a week earlier might have been pushed out of the gates, but it had not been wholly defeated. The great host of our enemy was still arrayed on the Eastern side of the city. Catapults and trebuchets still rained destruction down upon the city each day. No trade was allowed in by land and most from the rivers was intercepted before it reached us. We had not prepared for a siege, and food would soon become scarce: fishing off the city walls was the only source of need food, and this was perilous due to archers. My actions towards Dusman and its allies would be the first, most important, and perhaps last actions of my reign. Much was riding on it.\n\n\"And I say the headdress must be white!\" Rahip said, shaking me out of my thoughts. Cin actually laughed.\n\n\"Do you want your Sultanah to be a priggish virgin like those girls you keep locked up in the convent?\" She spat back, perhaps forgetting that I'd almost been placed in that exact station a week earlier, \"Red is the imperial color and the color of Gunes. That should be her color!\"\n\n\"All of the Sultans from time immemorial have worn red!\" a voice called out, and I instantly recognized it as Lord Sadik, no longer able to contain his voice.\n\n\"This does not concern The Peers!\" Cardinal Rahip shot back. But even I knew that this was not true. I had noticed, during the last few days, that Collaborationists and Loyalists had quickly settled into wary alliances with the two ecclesiastical authorities. The Collaborationists had gravitated, naturally, to Cardinal Rahip. The New Religion provided the only real link between \u00dclke and Dusman. It represented our continued mutual interest with King Sican in at least one sphere. Cardinal Rahip himself had been born in Dusman, a bastard of Sican's Grandfather, and had been trained for Tanri there. The Collaborationists saw him as a link to peace and, by following the New Religion and Cardinal Rahip in my coronation; they hoped to show King Sican that I was ready to deal, forgiveness for the right to exist. \n\nThe Loyalists considered this plan little better than surrender, they argued that it was a tacit admission of suzerainty by Dusman over \u00dclke; the inversion of the empire and its former tributary region. These men found themselves siding with Cin. Despite years of quiet submission to my father, Cin now showed that same fire and determination she'd shown that day at the \u015eehir city hall. She was pushing for an older style of coronation, like my ancestors would have had. This, she and the Loyalists hoped, would show Dusman that we were not cowed and that we would continue to assert our own prerogative. Men who had been tepid followers of Tanri, or completely without religion, now found themselves asserting the rights of Gunes. I wondered if that was Cin's primary concern the entire time. \n\n\"Can we move on to some other issue, perhaps, something less contentious and then come back to this later,\" Lord P\u0131s\u0131r\u0131k called over the din of yelling Peers. He was a Collaborationist, but hardly vehement. He, like most of the Peers, was less dedicated to any one position and simply flailing from one panicked reaction to another. He respected Hain's strength, so he was a Collaborationist. He was the epitome of the squishy middle, the vast majority of the Peers. I noted that, despite my nominal position as Sultanah-elect, that these men did not automatically look to me for leadership. In fact, it seemed they were certain they would not find that quality in me. Hence, their weak gravitation to one or the other coalition. \n\nNone of these conflicts, of course, happened out in the open. I suppose I could be wrong about what I was seeing, I was young, inexperienced, and not groomed for leadership like my brothers. But that was my assessment of the situation before me. \n\n\"What shall be the tax to pay for this coronation then?\" A lord I could not see said.\n\n\"A tax! This is not a parliament, Cardinal Rahip is not qualified to levy a tax. Cin is even less so...\"\n\n\"What makes Rahip any more qualified...\" And the fighting once again resumed. I rolled my eyes, it seemed that everything was controversial. I looked over to my side and saw Arkadas standing next to my chair. We had not spoken about Cin's ceremony on the morning of my father's death. Our actions...seemed like they had been done by other people. But she had returned to my side, a faithful friend once again. I leaned over toward her. I could smell her perfume and my gaze went over her high breasts (despite our silence, I had noticed that something had come unloosed inside of me. Even with my natural inclinations to avoid such thoughts, I found myself unable to once again place a lid on my sexuality. Arkadas was a beautiful woman, I could not help but notice).\n\n\"I need to get out of here for a few moments, to clear my head,\" I whispered to her, \"Please take notes if...anything worthwhile happens.\" I did not anticipate that Arkadas would need her pen.\n\n\"Yes Sultanah,\" she whispered back.\n\n\"Varis,\" I said, still uncomfortable with my title, especially issuing from my friend's mouth.\n\n\"Get used to it,\" she whispered back and smiled. I did not speak. Instead, I simply rose from the consort's seat and started to move towards the Sultan's door and my father's...my chambers.\n\n\"Let us ask the Sultanah then!\" I heard Cin call out. I froze in my tracks and my blood ran cold. It was like being called upon by a tutor all over again.\n\n\"Yes, the Sultanah-elect should decide whether we hold to tradition or engage in superstitious nonsense,\" Rahip said acidly. I turned back toward the crowd. My joints felt creaky and my mouth was dry. The room had gone silent and all eyes were on me. All eyes were on me, but I realized to my mortification that I had no idea what they were asking of me. I cleared my throat slowly.\n\n\"Um...\" I said, my voice sounding tiny and girly in the massive hall, \"What exactly...\" I felt terrified that they would find out that I was in over my head. \n\n\"We have grown tired of fighting over each detail. It seems impossible to find a compromise position,\" Cin said directly, apparently sensing that I had not been paying attention, \"We think it is best that you decide who should preside over your coronation in total: Gunes...or Tanri.\" It was clear by the way that she said the name of the New Religion's God that she considered it below contempt.\n\n\"Do you...agree to this?\" I asked Cardinal Rahip, stalling for time.\n\n\"I believe that Tanri will grant you the wisdom to make the only choice available,\" he stated, but bowed obsequiously. The room became absolutely still. The whole matter had, essentially, been thrown at my feet. There was no way to evade. I was required to choose.\n\nI looked between Cin and Rahip, between Gunes and Tanri. I had no idea what the correct choice would be. Having never found the charms of religion to be particularly apparent, I had never considered it deeply. To that end, I could not fall back on my personal preference. Therefore, I began to consider the political implications of my choice.\n\nTo Cin, and to Gunes, I owed much. Cin had been the person who had discovered my true nature and ensured my selection as my father's heir. She had been my friend when I was powerless and I felt that I owed it to be hers when I was powerful. Further, the Loyalists, and therefore Cin and Gunes, were more closely aligned with my views. I was not ready to bow to the power of Dusman and I did not believe that capitulation would be an auspicious start to my reign.\n\nOn the other hand, Cardinal Rahip and Tanri were far and away the most powerful religious force in the Empire. While few people were deeply religious amongst my people, they nominally followed Tanri. The Peers were even more devoted to Tanri than the people. It was boring, safe, and well known. Gunes seemed confusing, dynamic, and dangerous. Similarly, maintaining close ties to Tanri was the safer choice diplomatically. It would be possible to negotiate with Dusman as members of the same religious faith. If I made my Empire schismatic, it would add a religious dimension to our conflict that I could ill afford to introduce.\n\nAs I stood before the crowd, looking at me, I realized I would need some basis to make the decision, some reasoning. I realized that I had only one position from which to make decisions, one way of looking at the world that I could defend then, with my limited experience, \"My father was a...great leader,\" I said and I saw Cin shaking her head. My first six words had already indicated to her the nature of my decision, \"My father understood the fragile nature of his position as Sultan and the fragile position of the Empire relative to the rest of the world. He sought to mitigate those weaknesses with each breath he took as Sultan. I cannot in good conscience depart from my father's policies. I have not basis for doing so. The cornerstones of my father's view of leaderships were, on the domestic front, to form consensus with the Peers. On the international front, he sought to build bridges and to achieve peace, prosperity, and respect through diplomatic appeals. \n\n\"Today, we face division amongst the peers and war from our neighbors. Our priorities must be unity at home and a just, lasting peace abroad. While I cannot form consensus, I can choose to hold my coronation in the style that gains support from the greatest portion of the great nobleman assembled here. Incidentally, that coronation will also serve to illustrate to the world at large and to our enemies in particular that we share many interests and that we are more naturally friends,\" I concluded. I was not certain, even as I said the words, that they were the true feelings of my heart. But I did not know what else to say. How could I disagree with the majority of my Peers? How could hope to remove the threat of Dusman if I antagonized them with my first action as Sultanah? I felt I had no choice, Rahip had been correct.\n\n\"Excellent!\" the Cardinal said, not even looking at Cin anymore, he turned and started to dictate to his secretary. He was already planning out the rest of my coronation.\n\n\"This is a grave error. You will sit on that throne because Gunes found you. If you turn your back on him...\" Cin said coolly. I could not meet her gaze.\n\n\"Cin...\" I started, trying to make her understand. I wanted her to know that I appreciate what she'd done for me and that, in my heart, I wanted to follow her. I wanted to explain to her that I hoped that by appeasing Rahip and the Collaborationists now that perhaps I could buy myself some space to follow the policies she and the Loyalists espoused. But I couldn't explain that, it would be fatal to everything I would ever hope to achieve. Regardless, Cin did not want to hear it.\n\n\"I have vision and I suppose I should've known that you would be required to make your own mistakes. But woe be unto us all if Gunes is not a willing and extremely patient teacher. You should all pray that we are allowed one mistake,\" she said, looking around the room. Then, quickly, she turned and walked out. I desperately wanted to follow after her, to try to repair our damaged friendship, but I could not. ",
        "The Loyalist Peers sat down in their chairs, cowed and angry. They would not meet my gaze. When I saw the men who despaired at my decision and those who rejoiced, I wondered again if had done the right thing.\n\n\"No red...not a drop of it, I don't want anything tainted,\" Rahip was explaining to his Secretary.\n\n\"Cardinal Rahip,\" I said.\n\n\"No, even the carpet, make it green,\" he said, not noticing.\n\n\"Cardinal Rahip,\" I repeated.\n\n\"And, the jewels, I have them...do I have them? Yes.\"\n\n\"Rahip!\" I called out loudly and he turned, shocked. I saw anger in his eyes, but I felt my own anger rising as well. I was the Sultanah-Elect and I had extended Tanri an olive branch, the least the Cardinal could do was be courteous, to pretend her respected me. He seemed to sense that it was in bad taste to so brazenly ignore me, and his teeth flashed quickly.\n\n\"I apologize Sultanah,\" he said warmly, \"I have been so excited in serving your interests that I did not hear you speak.\" I looked around the room, and saw my Peers looking at me. They wondered how I would handle such disrespect. I wanted to be bold, to show Rahip that I commanded deference. But he was a man, and I was a woman. I did not know how to begin such a conversation.\n\n\"I am retiring to my room. Please leave any notes with Arkadas,\" I said timidly. I saw Rahip smirk and some of the nobles shake their heads. I turned and finally walked out the back door towards my quarters. I did not want to spend another instant in the room.\n\nAs soon as the door was closed behind me and I stood in the hallway that connected the throne room to my father's old chambers, I dropped to my knees on the floor. I felt tears welling in my eyes as the stress of my decision left me. I had been placed on the spot in the room, my ability to lead sorely tested, and I had failed miserably. My decision, whatever its merits, had not produced consensus. It demoralized the side I respected most and had failed to gain the respect of the side most opposed to me. I felt childish and ill-suited to the task before me. It was not just this one decision I suppose, it was the entire uncertain situation and the realization that it all fallen on my woefully inadequate shoulders. I realized I was going to be the last leader of the Empire. What had I been thinking?\n\n\"Good, you should be crying,\" I heard a voice say. I lifted my head from my hands and looked up. For a moment, I thought it was Cin. I thought she'd come to damn me for my choices. I almost hoped that it was. But, after a moment, I realized that it was not.\n\n\"You don't deserve father's throne. You are a disgusting...animal!\" Nislani said, towering over me. I was shocked to hear the words spilling from my sister's mouth. She must've been in my father's room (she'd spent a good deal of time mourning there, a luxury I did not have) and heard me come out. I knew that she had been angry and confused, but I had not had the opportunity to speak with her. I was completely unprepared for the level of her hatred. I stood up quickly.\n\n\"How dare you speak to me like that?\" I said quickly. If I felt ready for anything, it was to trade angry exchanges with my sister. At least I was qualified for that.\n\n\"It is the truth! You are not...right. Women are women and men are men, you are unnatural and it is wrong that you should lead us!\" Nislani said. I realized that as Nislani spoke, that while she was cruder than others might be, she had essentially hit upon the source of my insecurity, both emotional and political. She was right. I was not a normal woman. And while others might not say it, many people, Peers and Commons, felt that it was wrong that I lead the people. Many probably felt, after thinking about it for some time, that it was better that the Empire cease to exist than it have me as its leader. I knew that I had no real power; the men would not let me have it. And I knew I didn't deserve it, being a freak did not qualify me to be the Sultan. Nislani was right.\n\n\"You should let Prince Lider marry me and I will rule here with him! That way you won't anger any of the Gods and we can be at peace and I can be happy,\" Nislani said and stamped her foot like a spoiled child. I felt anger rising in me again, replacing the despair I'd felt just a moment before. I realized now why I had taken the throne, even if I knew I was not right for it. It was probably the reason the Loyalists wanted to fight on my behalf. While my claim was imperfect, it was certainly better than the alternative. The choice was to fight for a freakish Sultanah or give in to those who'd hurt us the most. With only those two choices, what else could we do? I felt a power I had not expected before. I stepped forward towards my sister, thinking about what she'd said. My eyes flashed fire and Nislani backed away, her eyes looking scared. She'd come to kick me when I was down, she had not expected me to rile myself.\n\n\"You whore!\" I yelled at her, my words chosen purposefully.\n\n\"How dare you!\" she said, but her voice sounded small. I poked her shoulder hard with my finger.\n\n\"What else should I call a woman who would open her leg and expose her rotted cunny to the murderer of her father? The favorite daughter! Father hated me and I am more loyal to his memory than you! You want to fuck father's murderer!\"\n\n\"Lider did not do it.\"\n\n\"He led the armies to our gates! If he did not want father dead he was indifferent to that eventual outcome.\"\n\n\"Father and Lider liked one another. It was a mistake,\" my sister said. I realized the depths of her delusion.\n\n\"You are a fool as well as a whore!\" I said, \"You must realize that the negotiations for your hand were a ruse. They were designed to get father's guard down. They allowed our enemies to know that, on the night of the attack, we'd be holding galas and parties and wouldn't notice as their army descended upon us. The long days of negotiation were all a ploy and we fell for it. You are the only one stupid enough to still be falling for it.\" \n\nOf course, I knew that wasn't quite true. Certainly every thinking person knew that the proposal was a sham, but it seemed that the Collaborationist thought that it could be resurrected. Laying out the situation to my sister made me realize how absurd their plan truly was. Buying peace with my sister's cunny was unlikely to work. My sister was the daughter of a murdered, powerless anachronism; what price could she demand? It was absurd. And, with the choice of a Tanril Coronation, it was partially my official policy.\n\n\"No...\" Nislani said now. I looked into her eyes and saw that they were watery. Of course she knew, in her heart, that I was telling her the truth. But her delusions prevented it, \"It would all work out if you were just gone! Everything would fall into place. The end of your unnatural existence would be a favor to every man, woman, and child in the Empire.\" My anger reached a new level, something I did not know that I possessed.\n\n\"I am here you cowardly bitch!\" I yelled at her, \"I am wearing only a robe, not father's armor. His sword is still lying across his bed for mourning. If you want me gone then kill me,\" I seethed. I was alive and had the right to be. Just like I was Sultanah technically by right. Any person, even my ignorant sister, who disagreed with either condition was welcome to try and stop me. My eyes widened and I stared intently at my sister. She took a step back, her eyes dropping.\n\n\"Tanri's sake Varis...I wasn't saying I would...I am just...\" She was sputtering. It was clear that Nislani had spoken with more haste than she'd intended. The full implication of her words was likely not apparent until I'd argued with her. She just wanted to express her sorrow for the end of her betrothal. She had, after all, been public and outrageously dishonored. But that was not my concern. Lider, not I, had dishonored her.\n\n\"I don't have time for this childish nonsense,\" I said, speaking truthfully, \"I had larger matters at hand. Leave me.\"\n\n\"Varis...\" Nislani said, whining and wishing to drag it out longer.\n\n\"Sultanah Varis,\" I said. Nislani's mouth opened to speak again. She looked at me intently. And then, still angry, turned and shuffled away. In a moment, she was back in our father's room. I knew that she had not gone to grab the sword. She was beaten. I let out a deep breath. At least I was able to impose my imperial prerogative on someone. I stood for a few minutes, trying to regain my composure.\n\n\"You were quite rough on her,\" a voice said out of the darkness. I jumped a bit. I turned to my right, down a long, narrow stairway leading down to a lower level. I recognized the voice. Kardes walked out of the shadows. I had not spent time with my elder sister either, and I was surprised to find her here. Her quarters were a long way from here.\n\n\"Kardes, you scared me,\" I said.\n\n\"Sultanahs should not be scared of widowed princesses,\" she replied, I saw a wry smile on her face. I wondered for a moment what she was getting at. Was she upset that I was Sultanah as well?\n\n\"I...\"\n\n\"Well I guess there are lots of things to be afraid of,\" Kardes said. I had a hard time reading her tone. Her face was still in the shadows and I was unsure of what she was doing. I felt uneasy. \n\n\"I was just trying to go to my quarters. My old quarters,\" I said lamely. Kardes seemed to ignore it entirely.\n\n\"It is easy now with all your power to hurt Nislani. What can she say back to you?\" Kardes asked. She walked over from the shadows now and stood in front of me. I was surprised by what she said. What difference did it make to Kardes? Nislani and I had fought since we were kids and after all...\n\n\"She started it, I was just...\" I started.\n\n\"People will always start things. She is a tempestuous girl. You are supposed to be more than that now. But you wanted to throw your weight around,\" Kardes said. I felt the heat rising in my cheeks. It seemed my entire family was trying to put me in my place. \n\n\"Well Kardes, if I am doing it wrong maybe you can do it better? Is that what this is?\" I spat back, immediately bringing the heat that I had left over for Nislani.\n\n\"Probably,\" she said, making my teeth grind, \"I have been out in the world a lot more than you, I have seen more. I know more. But I don't have the right to be there. You, apparently, do. So you need to get caught up. Fast.\" I looked at my older sister, my brow nettled. \n\n\"Stop being obtuse. What do you mean?\" I asked. Kardes smiled broadly. She looked over to my father's old quarters, where Nislani had fled.\n\n\"Good. Decisive and direct without being overly rude,\" she said.\n\n\"That did not explain anything,\" I responded. I realized that I still did not know Kardes very well. I could not read her at that moment, I did not know what she wanted.\n\n\"I was in the throne room for a while earlier,\" she said, \"I watched you. You looked bored. And when you weren't bored you looked confused and terrified at the same time.\" I felt my stomach tighten. That is exactly what I felt. I hadn't realized that I was making my internal discomfort so obvious.\n\n\"I was...\" I started, but had nothing to say. I was transparent.\n\n\"And, because you were too nervous to use your power and your position in the appropriate forum, you came back here and screamed and Nislani. The history of the Empire is replete with insecure dictators who squandered their power by afflicting the afflicted,\" Kardes said. She was still smiling and, despite her words, I felt a sort of maternal energy. She was offering me guidance. For a moment I wanted to reject it. She knew nothing of my burden nor of my right to be angry with our jealous younger sister. I almost spoke, but I caught myself. Her smile was not as lupine as I'd initially thought. She wasn't vicious; I could see warmth in her gaze. While I didn't know her well, I knew her well enough to guess that she wouldn't just criticize my actions and then leave. She must've had something in mind. I mastered my pride, controlled myself and spoke.\n\n\"What are you suggesting?\" I asked, controlling my breathing so that I did not become upset.\n\n\"You need to learn to wield your power effectively. And very quickly too. There are many people in the Empire who are not happy that you are on the throne. And I am not talking about Nislani\" she said. Her words came out as nearly a whisper and she looked around nervously. I felt a cold stab in my stomach.\n\n\"What do you know about that?\"\n\n\"Nothing specific. But the people are rumbling and many of the Peers are not convinced that you aren't simply a tool used by warmongers to prevent our capitulation to Dusman,\" she explained, \"And that isn't your fault. But you have to manage it effectively,\" she said. She was alluding to many of the suspicions I already had. I had already recognized the problems she was illustrating. But, I had already realized, I didn't know how to handle them. I was struck by the nature of her insight and the fact that she seemed to have a pulse on everything. I did not know that women were capable of such things.\n\n\"How do you know about this?\" I asked. Kardes smiled sheepishly now and shrugged her shoulders.\n\n\"I don't know,\" she said wistfully, \"I suppose you don't spend over half your life in the dysfunctional Dukedom of Astar married to a moronic sixth son, desperately trying to force him into advancing his position without learning something.\" She did not sound bitter as she spoke, but a slightly wistful. I wondered about the nature of my sister's marriage.\n\n\"Dysfunctional?\" I asked.\n\n\"Let me put it to you this way, as a lesson on how to effectively wield power,\" she said, \"My husband, Tanri rest his soul, attempted to obtain the rents from a mill that belonged to his father. He wanted these rents in order to provide for our family once his father died and his oldest brother became Duke. They did not get along. The second eldest son was supposed to get those rents. I manipulated the old Duke as best I could; I had almost obtained his consent to transfer the rents to us. That is how you do things when you don't have power. You make people think it is their idea. Then my husband, the fool, spoke too openly about our arrangement. He was boastful with his friends about his future economic security. He took credit for my slyness and was heavy-handed. He forgot that when your power lies in being underestimated, it is important to keep quiet,\" Kardes said and then stopped. I leaned towards here, wondering what happened next.\n\n\"Well?\" I asked desperately, \"What happened?\"\n\n\"My husband was never a hunter,\" she said, \"He never once went hunting for boar, or even rabbits. One my husband's second eldest brother entered the castle and explained that he and my husband had gone together on a hunt. And my husband was gored. And died. I hadn't even known that he'd left the castle until they brought his corpse back. I saw his wound. How would a man, standing, be gored in the throat by a boar? And why would the wound be the shape of a star, like a pike, rather than round like a tusk?\" Kardes' brother-in-law had murdered her husband! His brother. I felt dizzy. Politics was a dangerous business, I knew. But I had not really come to terms with the level of that danger. What dangers did I face now?\n\n\"Did that really happen?\" I asked, putting my hand over my mouth.\n\n\"How many widows do you know who return to their father's courts when their husbands die? Wouldn't that only happen if a woman was...no longer wanted?\" she asked. It made sense. I suddenly realized that the stakes were even larger than I realized. If a man could be killed over rents to a mill, what stakes existed for an Empire? Suddenly, I felt silly for quarreling with Nislani, that was certainly not worth my attention. I needed to focus on bigger things. But where did I start? \n\n\"What do I do? I mean, wield my power effectively, what does that mean? How do I control this?\" I asked desperately. Kardes looked at me for a long time, her eyes looking both intelligent and soft. Finally she sighed and crossed her arms over her chest.\n\n\"Well you must be judicious in your power and you must not alienate your natural allies,\" she said.\n\n\"Meaning what?\"\n\n\"Meaning don't abuse your little sister. I know better than most the danger of a scorned sibling,\" she said. She looked over toward my father's door again. My sister was inside. Hardly a natural ally in my opinion. We hated each other. And what good could she do me anyway?\n\n\"Do you want me to speak with her?\" I said, my voice betraying my distinct lack of enthusiasm for the task. My sister bit her lip and then shook her head.\n\n\"I don't think that would be helpful at the moment,\" she said. \"I will try to fix this problem for you this time. You would probably just anger her now.\" With that, my sister started to move towards my father's chamber, to go to my sister's aid. But I still needed more. I reached forward and grabbed my sister's elbow.\n\n\"What should I do now?\" I asked, getting directly to the point. Kardes shoulder sank and she pushed some air out between her lips.\n\n\"I don't know,\" she said, \"I can't tell you how to be the Sultanah you need to be. You are my sister and I don't know you that well. You need to find what makes you strong inside and you need to project it there,\" she said, pointing back to the throne room. I felt deflated. That was hardly helpful.\n\n\"How do I do that?\" I asked. I wasn't even sure what it meant.\n\n\"I don't know, I am not the Sultanah,\" my sister said and she started to move away from me again, over towards where my younger sister was crying in my father's room, going to solve another family problem. \"Perhaps pray,\" she said.\n\n\"Pray? You want me to do less than nothing?\" I asked. She shook her head gravely and put her fingers to her lips, getting me to silence.\n\n\"If nothing else it might bring you peace,\" she said and she slipped into the door.\n\n* * * * *\n\nForty-five minutes later I was in a small garden outside of the palace. I was sitting on a bench overlooking the Central Market, a few stories above the people milling about. I had gone to my room after speaking with Kardes and ordered a servant to bring me food. I had eaten quietly, thinking about all of the problems swirling in my mind. The coronation, Cin, Cardinal Rahip, the Collaborationists, the Loyalists, my sisters, my father, my Empire. I felt overwhelmed by the sheer amount of conflict in my life. After eating, I decided against my better judgment, to pray as Kardes instructed. I had always found it easier to pray outside in the sun, and so I have found a peaceful, quiet spot. But I did not really know how to begin.\n\nI had never been much for prayer. In fact, it was a well-known in aristocratic circles that prayer was largely for the common folk and that it was little more than superstition. But, apparently, Kardes prayed so maybe there was something to it. At the very least, it would help to let my worries fall by the wayside and focus on something other than the burdens of leadership.\n\nUnfortunately, I didn't even know to whom I should pray, or even how to start. Eventually, I decided that I Tanri was the best bet to have my prayer's answered. He was the God most of the people in the world prayed to. He was the official God of my Empire. Hell, I had been betrothed to him just a few weeks earlier. I got up from the bench and then sat with my legs crossed in a small patch of grass in the middle of the garden. I could smell the sweet flowers and a gentle breeze rippled the air. I breathed deeply and felt some small amount of peace.\n\n\"Tanri, grant me the wisdom to lead my people,\" I said softly under my breath. I closed my eyes and focused on the idea of Tanri, the New God. I allowed my mind to go silent, hoping that Tanri would fill that silence with knowledge. I let the silence sit for as long as I could. But, while the tranquility of the garden was pleasant, I felt no inner peace. As I tried to stamp out all rational thought, fears began to creep in. The things I was trying to escape kept reaching for me. I worried about my Empire and my family. Tanri provided me with no insight. Instead, I felt more and more agitated, more and more certain that I was wasting my time.",
        "\"This is stupid!\" I said out loud, breaking whatever bit of concentration I'd managed to collect. I shook my head and looked around the garden. I felt silly, sitting in such a beautiful place, under the sun, essentially doing nothing while my enemies stood at my gates. If Tanri had ever existed he wanted nothing to do with me or my Empire. He wasn't going to help.\n\n\"I quit,\" I said and started to get from the ground. As I moved, the sun, which had been slightly behind thick white cloud, suddenly burst into view and I had to shield my eyes from the brightness.\n\n\"Gunes, that hurts,\" I said aloud, making a common oath that the people of \u00dclke had uttered for centuries. Gunes had once been the King of Gods and he was still the god of fire and light. People often spoke of Gunes when considering the sun. But as I spoke, I felt a strange sensation, like a rumbling deep within my stomach. The light that poured over me from the sun hung on me heavily, feeling like a warm winter blanket draped over my shoulders. My muscles tensed, but even as it happened, I felt my mind clear. My eyes stayed open, but they no longer hurt in the intense light. Only one thought remained in my brain, Cin had said I'd been marked by Gunes. \n\n\"Gunes,\" I said without thinking, that word and the ones which followed pouring unbidden from my lips, \"I ask your forgiveness on behalf of myself and my people for our neglect. I pray that you give me guidance in this hour of uncertainty. Allow me to overthrow my enemies, and I shall overthrow yours.\" I felt confused as soon as I finished speaking. I did not even know where there request came from. But I still felt the intense, inner peace I'd noticed before.\n\nMy eyes were still turned up toward the light. I felt no discomfort staring into the sun. The golden rays felt soft on my eyes and I could almost taste the light, like honey. But as I looked, I noticed that a single stream of light was emitted from that sun that seemed...different. I could make out this single ray somehow against the backdrop of light. It was a different color, almost red rather than gold. I followed the light as it descended from heaven. It moved down through the air in a concentrated beam. I saw that it shot directly over my shoulder. I turned quickly to see where it was alighting. \n\nI was surprised to find that the light was striking a birdhouse in the middle of the garden. I walked over towards the birdhouse. The sun was on my back now and it seemed to push me forward. When I reached the birdhouse I saw that it had been built with small windows with mirrors inset to give the appearance of glass. The red light had struck the mirror. It bounced off the reflective surface at an angle. Once again I followed the direction of the light. It was moving down toward the Central Market below. I ran to the side of the garden and leaned against the balcony. I saw the red light as it descended towards the cobblestone streets below.\n\nThen I saw the light land directly on a man. I found that strange and watched to see if the light once again changed course. But it stayed on the man. What was stranger still was that as he walked diagonally across the market square, the light seemed to follow him, always striking the back of his head. I turned and looked at the birdhouse. It would have to somehow be turning to reflect the light in such a way. I could not tell if I was moving, but I was both excited and afraid that it was not. Gunes was telling me something.\n\nWhatever the message was, the light had apparently given me all the information it could give. The light continued to follow the man as he worked slowly through the square. He was a short man, wearing a long black cloak. The hood was up and I could not see his face, especially from the distance. Nothing about him indicated anything of interest and I certainly did not recognize him.\n\nWithout stopping to think about what it meant, I started to act in the only way that seemed to make sense. I quickly rushed over to the bench I was sitting at earlier and found my head scarf. I tight it tightly around my face, obscuring my features. I then ran over to the stairs that lead down from the balcony to the street below. I moved quickly down the stairs, keeping my eyes towards the heavens and looking at the red light.\n\nI don't know why I decided to follow the man. I just knew that the light was trying to tell me something and the man was moving farther and farther away from me with each passing second. Whatever I was supposed to learn from this man I would not learn it up in my palace. So I bounded down the stairs, past a half dozen guards, until I was in the Central Market. A few people turned briefly to look at me and then look away. Dozens of ladies left the palace each day, servants and slaves, with my face covered no one recognized me. Most would not have recognized me anyway.\n\nSo I quickly bounded off into the market, following the light in the sky. The market was packed with people. It was noisy and confusing. I heard men bellowing the prices of food (which had risen sharply with the start of the siege) and I heard women haggling over those prices. The people seemed tense, unnatural going about their daily routines and I knew that they were nervous about the army at our gates. But I did not have time to worry about them now. I took off across the market, following the red light. \n\nI dodged between people (occasionally bumping into them) as I tried to catch up with the man. He had a few minutes head start on me and I could no longer see him. But the light was shining out of the West (where the sun was setting) and pointing East toward the city walls. I ignored people as they complained about my rapid movement and soon found my way to the edge of the market. \n\nDozens of streets moved out from the market like spokes on a wheel. At that end of the market, there were three different major routes to take, on top of several small alleyways. I looked up into the sky and again saw the red light, pointing down one of the alleyways leading towards the Duke's Gate. Without further thought I bounded into the alley.\n\nIt was a narrow route, little more than three feet wide in most places. It was extremely dark, as the buildings on either side had been built out over the alley, almost bridging the distance between them. The alley ran thick with waste and garbage, the smell was terrible. Evil looking men (my subjects) peered out from dark doorways, dogs rooted through the heaps of trash, and a chilly silence hung heavy over the air. Somehow, through gloom, I could still see the red light, faintly. In fact, it was the only light visible. I ignored the fear I felt walking through this place (my father would never let me walk in such a dangerous area) and pushed on. I ran as hard as I could, trying to catch the man and assuming he came this way.\n\nAfter several minutes of rushing through the darkness I was surprised as the alley started to widen. The light started to become brighter, and the smell less pungent. In a few minutes more, I burst out from the alley and found myself standing just a few dozen yards from the Duke's Gate! I was standing to the far left of the gate such that I could not see the actual gate itself, but I recognized it instantly. It would normally take 20 minutes to reach that gate through the city streets. The alley had been a shortcut. I turned and looked at the main road that led from the central market out to the Duke's Gate. I was hardly surprised when I saw the cloaked figure, with the red light once again on the back of his head, shambling down the road.\n\nThe Duke's Gate had been cleaned of bodies after the battle, but there was still a strong smell of death in the area. I knew that my father and brother's had died very close by. Ever since the battle, the citizens had largely steered clear of the open directly behind the gate. Perhaps it was out of respect. Or perhaps fear. On that day, the area was abandoned almost entirely. I knew there must've been guards in the gatehouse, but out on the street there were only three people. There was the cloaked man and, standing near the gate itself, a man on horseback also draped in black. Then there was me.\n\nFor a moment, I was about to run out toward the man in the cloak, to confront him and determine his secrets. But something held me back, a slight foreboding. I did now know what would happen if I confronted the man, but I was afraid for some reason to find out. So, instead, of moving quickly and openly towards the men, I hunched low and walked slowly towards the men. The open area, the battlefield, behind the gate was still strewn with broken carts, shattered artillery, and other various used implements of war. I moved quickly, but silently among the items, shielding myself from view. As the cloaked man finally stopped, just a few feet from the rider on horseback, I settled in behind an old barrel, just a few yards away. I didn't not know what I expected to do or why I was doing it. But I hardly felt like I had a choice. I needed to know why the light had led me here. I was afraid to do more than listen. So that is what I did.\n\n\"You're late,\" the man on horseback said evenly. He made no attempt to keep down his voice, so I assumed whatever he said he was unconcerned if others heard.\n\n\"I cannot move with absolute freedom,\" the cloaked man said in response. He voice seemed strangely familiar, but I could not place it.\n\n\"I have almost completed my task,\" the horse rider said, \"I got this horse as payment. Have you done yours?\" \n\n\"Of course you nitwit,\" the cloaked man replied, \"Here it is.\" I watched as the cloaked man reached into a satchel that hung around his waist and pulled out a collection of papers. He quickly handed them to the man on horseback. Were those papers what I was supposed to see? The red light was gone, giving me no indication of the importance of this meeting. I had no idea what these men were talking about.\n\n\"I need to look through these,\" the man on horseback said.\n\n\"There is no time!\" the cloaked man said, his voice getting shrill, \"The next guard shift is supposed to start in twenty minutes. They will notice. You must get these out now and order the other men up.\" He said. I felt my pulse quicken. Getting out? Ordering men? I began to wonder who these men were and what they wanted.\n\n\"I am not bringing these to Sican's...\"\n\n\"Quiet you fool!\" the cloaked man said. I leaned forward. This was sinister, but what exactly was happening?\n\n\"I can't bring these to...his troops until I am certain they are what we need. Most of the men can't read. I need to understand what all of this says before I lead them to all the right places.\"\n\n\"It isn't even strictly necessary, just go. We already have the way open. The rest of this is just semantics,\"\n\n\"King Sican is a thorough man...\" the man on horseback continued. But I was no longer listening. I knew what was going on here. Some sort of move was being made by my enemies. For the first time since I crouched behind the barrel, I turned and looked towards the gate. It was yawning open! Instantly I knew what was happening. The man in the cloak was betraying us. The man on horseback was going to go out, collect some men, and rush in to take the gate. Once they had the gatehouse, they would be able to get their entire army back into the city. We were stretched too thin. If they got in, the Empire would fall!\n\nFor a horrifying minute, I was paralyzed with fear. What was I to do? I thought about running back to the palace and alerting my generals. But that would take several minutes. It would be too late. I thought of jumping out and confronting the men. But I was unarmed. I would be killed. I looked around, searching for anything. Then I noticed that the door to the gatehouse was slightly ajar. It was directly to the left of the main gate entrance and part of the overall gate structure. The guards! \n\nWithout further deliberation, I turned towards the gatehouse. My two enemies were still talking in low voices as I carefully walked towards the gate. I kept myself shielded by debris and kept my footsteps light. It was clear my enemies had no idea I was present and, in a matter of moments, I had quietly reached the door. I opened it slowly and quietly, looking over shoulder and finding that the two men had still not seen me. Without a sound, I slipped inside the door.\n\nThe smell of blood. Bodies. I suddenly realized what the rider's \"task\" had been. The gate was raised from within this room. He'd killed the guards. There were three men dead in the guard house. One was sitting in his chair, a hole in his chest. The other two were face down on the ground in pools of blood. The rider must've snuck through the door I'd just entered and stabbed the sitting man. The other two guards, surprised, pulled their swords but were cut down quickly in the confusion. The man had quickly opened the gate, grabbed one of the horses outside, and prepared to leave.\n\n\"Shit! What the fuck is all of this!\" A voice said loudly. I instantly dropped to my knees and grabbed a sword from a dead man's hand. It dangled limply in my hand, I had no training. I looked up quickly, holding the sort awkwardly in my hands. I was holding my breath and my heart did not feel like it was moving. I had acted entirely on instinct.\n\n\"Who the fuck are you are... What did you do?\" I looked now at the source of the voice. A man had opened a door deeper inside the gatehouse and had stepped out. He was wearing a guard's uniform and was buckling up his pants. \n\n\"Quiet you fool,\" I hissed.\n\n\"You killed them!\" he said. I looked at my sword, red from lying in blood. \"You cunting bitch!\" he yelled and started to move toward me. I felt panic. I did not know even the first aspect of using a knife. I quickly dropped my blade, letting it skitter onto the floor. I did the only thing I could think to do. I reached up to my head and quickly tore off my face covering.\n\n\"I am your Sultanah. These dead are my guards!\" I hissed, still trying to remain quiet. The man's sword was along a few feet from my body now, if he wanted to swing. I'd be dead. I struggled not to close my eyes. If I was going to die, I wanted to see it happen. But the man froze. He looked at me intently.\n\n\"Princess...Varis?\" he said, now whispering. I finally let my air out of me. I had participated in parades and processionals throughout the city my entire life. Beyond that, most guards spent at least some time in the palace during their careers. The man must've actually recognized me.\n\n\"Sultanah-elect actually,\" I said, I couldn't help but smile with relief.\n\n\"What happened? Why are you here? What happened to my friends?\" the man sputtered, \"I mean my grace.\" He quickly added and then dropped to his knees in front of me.\n\n\"There is no time for explanations,\" I said, \"We are betrayed. I need your help to prevent the fall of the city. If you love your Empire, this is your chance to save it.\" The man's eyes got wide as saucers but he nodded intently and hopped to his feet.\n\n\"What are your orders My...Lady?\" he asked. I suddenly realized that I had no plan. I didn't even know if the rider was still in the city or who the cloaked man was. I quickly turned and looked out the door. The man on horseback was still present, but he was stuffing the papers in his cloak and starting to turn towards the gate.\n\n\"How long does it take to close the gates, answer fast,\" I asked.\n\n\"Thirty seconds?\" he said uncertainty. Far too long. If we started closing it, the rider would notice and escape quickly. \"But I can cut the line and the portcullis will fall immediately.\"\n\n\"Do it now!\" I cried, \"And then meet me outside!\" I did not wait, I picked my bloody sword up from the floor and then rushed outside. I did not at think about what I was going to do, I just rushed out, ready to do something to prevent disaster. \n\nEven as I stepped outside I heard a loud cracking sound and then the noise of the portcullis falling. I heard a terrible squealing sound and turned towards the gate. The heavy, steel lattice of the portcullis had fallen in just the nick of time. It had fallen as the rider was just making his escape. It looked like the steel pikes at the bottom had pierced his horse through the top of its head, killing it and spilling the man forward. He was now sitting on the ground, looking slightly dazed. The man in the black cloak was just a few yards in front of me, he looked over toward me, then back at the gatehouse, and then turned to run.\n\nI turned quickly and saw the guard coming out of the gatehouse as I had instructed, \"There is a man right next to the gate, he is the one who killed your friends,\" I said. The guards eyes got wide, \"I want him alive with all of his papers. He doesn't need to be healthy.\" I said. The guard instantly lifted his sword and started to move toward the gate.\n\nI did not stop to see what he was doing. Instead, I took off as swiftly as I could after the man in the black cloak. He had a good lead on me and I could tell that he was heading back toward the Central Market. If he reached the crush of people located there, I had absolutely no chance of catching him. \n\nI dropped my sword, it was too heavy to carry, and started to pump my legs harder. The man in the cloak looked over his shoulder and could see me and picked up his pace as well. Despite that, I could tell I was gaining on him. Each step I took I seemed to get a few inches closer to him. My chest ached from running and my legs hurt (It had been far more running in the last few weeks than a princess was designed for). I noticed the man in the cloak running more with a more loping gate the farther we ran. I began to believe I could catch him. \n\nThen I began to notice something else. The closer we got to the Central Market, the more people were in the streets. Given the speed with which we ran and the noise we made in doing so, we quickly made ourselves the object of interest. People on the street turned to look at us, confused. Some people laughed at the spectacle of a woman chasing a man. We were only a few blocks from the Central Market when I realized that there were dozens of eyes on me and, further, that I might not catch the cloaked man in time.\n\n\"I believe it is Princess Varis!\" I heard a voice in the crowd say. I realized that I was not wearing my facial covering. Everyone could see me. Suddenly, I realized that I was not just chasing this man for my own sake. He had betrayed these people as well. My people. They would be put to the sword if the city fell.\n\n\"I am the Sultanah Elect. The man in the black cloak has attempted to betray us!\" I called out. For a second, not one acted. I kept running after the cloaked man. Then, people in the crowd seemed to understand what I was saying. In just a few seconds, a dozen men jumped out from the sides of the street and tackled the man in the black cloak. I heard him let out a pathetic groan as he was crushed. I let out a sigh of relief and slowed myself to a walk. I felt intense elation. Whatever Gunes had been trying to show me, I was about to find out.\n\nI walked up to the crowd of men surrounding the cloaked man. The crowd that had been standing dumbfounded and confused in the street began to crowd around closely. I realized in that moment I had never been around so many common people without guard. I saw that some of them were looking at me, wondering what I was doing there and why I was chasing this man. I realized that despite my fatigue and nervousness, I needed to project the power of the Empire, to give these people reassurance. Kardes' words were echoing now, sounding more prescient than ever.\n\n\"I, Sultanah Elect Varis, witnessed this man,\" I said, pointing to a pair of feet underneath a pile of my subjects, \"Aiding and abetting a man on horseback who had forced open the Duke's Gate and killed three guards. This man was attempting to provide documents to our enemies and betray this city to rape and plunder. A noble guard of this city was able to stop the man on horseback. Now you, brave citizens, have caught his accomplice.\" I could feel a nervous energy rush through the crowd. I could hear murmurs of fear and confusion amongst the people. They had no idea how close they'd come to calamity.",
        "\"Let us see the traitor!\" a voice cried out after a moment that could be hurt over the general murmur. The crowd instantly began to cheer. I nodded my head and indicated that the men should rise up from the prisoner. The men in the dogpile warily began to rise up off of the cloaked man. He was limp on the ground and two men grabbed his arms and pulled him up so that he was facing me. His head drooped down to his chest and I could only see the top of his hood.\n\n\"Take off his hood, let me see him,\" I ordered. One man roughly grabbed the hood from the man's head and threw it back. I heard the crowd gasp. I heard a gasp of air escape my own throat. I couldn't believe it. And yet I could. I knew now why I had recognized the man's voice. I looked at the crowd and they stared back at me expectantly. I knew what I was supposed to do.\n\n\"Cardinal Rahip,\" I said coolly, \"You have committed treason. Your life is forfeit.\"\n\n* * * * *\n\n\"I will uphold the sacred and ancient rights of the Peers and follow the customs as they were established in Sultan Itiraf\u00e7i IV's time. And I solemnly swear on my life, my lands, and my honor that I will, with Gunes' aid and instruction, serve the needs of the Empire above myself,\" I said, repeating back the words I had just heard. I was standing in the throne room, surrounded by peers and their wives. They stood in rapt attention, silent and gazing at me. The entire hall was decked in red. Even the windows were covered in red, giving the light an eerie pink aspect that made me feel as if I was inside of a massive womb. But red was the symbolic color of Gunes and this was the first coronation overseen by Gunes in nearly a thousand years.\n\n\"Peers of the Realm,\" Cin said loudly, gazing about the room. She then placed her thumb in an urn full of sacred oil. She pulled it back out, dripping, and then placed it gently against my forehead, anointing me, \"I present to you the 57th rightful occupant of the Imperial Throne. Sultanah Varis I, long may she live!\n\n\"Love live the Empire. Long Live the Sultanah!\" the peers called back as one. \n\n\"Love live the Empire!\" I called back to them. I then took the Imperial Crown from a different priestess standing next to Cin, and carefully placed it on my head. At that signal, the throne room erupted into applause. Men whistled and stamped their feet and women clapped until their hands were red. I stood high above them on the coronation platform, brought to the throne room for the first time in decades. I smiled down at my most illustrious subjects, waving to them gently and displaying my imperial bearing. \n\nDespite the near unanimous acclaim that greeted my formal coronation, as I looked around the room, I could see a few faces whose expressions did not match the raucous show of approval. Collaborationists.\n\nAfter I had caught Cardinal Rahip, along with the rider (who turned out to be a member of King Sican's personal guard), there had been great turmoil in their camp. They had quickly repudiated the Cardinal and claimed that they had no knowledge of his plans. And what plans they were. The documents secured from the horseman by the lone surviving guard (named Saygili, in case you were curious) indicated that the horseman had snuck into the city, slayed the guards, and opened the gate so that Cardinal Rahip could provide him with maps, blueprints of the palace, and the names of important Loyalist lords to kill instantly. My location, of course, was on the top of the list. It was a plan to destabilize the top of the Empire's hierarchy before the attack. It almost certainly would have worked.\n\nThe documents did not include the names of any traitorous Peers, but did obliquely refer to \"our friends within the walls\" on several occasions. No lord, of course, admitted to being such a friend, and Cardinal Rahip would not name any names, despite our best attempts at...persuasion. He would only explain that as King of Dusman, King Sican was the chief servant of Tanri on Earth and that, in resisting him, I was committing a grievous sin. He claimed to be saving my soul by turning my body over to my enemies. Sican's guard refused to provide any information, not even his name. Both were currently in the palace dungeon, awaiting trial (a mere formality) and execution.\n\nThe end result had been the collapse of the Collaborationist position as it related to the coronation. Many Collaborationist had quickly called for Cin to conduct the coronation in order to shore up their bona fides as loyal subjects of the Empire. While none of them actually wanted a coronation conducted by Gunes, they were left without room to operate. The leadership of the New Religion was instantly seen as traitorous because of Rahip's actions: Tanri was seen as Dusman's God more firmly than ever. Even down below the leadership, many people were looking at the New Religion through skeptical lenses. Gunes provided the only viable alternative and, as it was the ancient God of our people, a level of respectability that no other coronation could provide. Cin had refused their advances, but she held no grudge against me. When I went to her chambers and asked her personally, she instantly agreed. She pretended as though my earlier decision to spurn Gunes had never occurred. I wonder if she knew about the beam of red light. Regardless, that was how I found myself in a red dress standing in a sea of red being declared the Sultanah by the Priestess Cin.\n\n\"Come Sultanah,\" Cin said, leaning up and whispering into my ear, \"You must be anointed before the people.\" I nodded quickly and looked around the room once more. Under the New Religion, a Sultan was crowned before his nobles in his throne room and then a declaration was made by the Cardinal to the people, attesting to the arrival of a new Sultan. Gunes was the God of all of the Empire's people. As such, Gunes would not stand for an intermediary. Therefore, under Gunes, two coronations occurred. I was crowned before the Peers, and then I would walk to a balcony overlooking the Central Market, where my people were gathered, and once again stand for coronation.\n\n\"Peers,\" I said, and the crowd got quiet. I was simply following a script I'd practiced hour after hour for several days, \"I thank you for your reception. Gunes has certainly been bountiful in providing me with fine noblemen. But the Empire is more than Noblemen just as it is more than a Sultanah. I must go to my people, so that they might know me.\"\n\n\"Love live the Sultanah!\" A voice called again and the crowd cheered. I smiled at them and then, with Cin and the other Priestesses, descended from the coronation platform. I was actually happy to be done with this part of the ceremony. While it was very gratifying to be crowned, I was nervous about the peers. I knew now that it was hard to know who to trust. Further, I'd learned that attempting to win over my enemies would be more difficult than I'd assumed. I was excited, however, to be going to my second coronation. \n\nAfter my adventure in the streets (chasing down spies and saving the city in just the nick of time) my star was on the rise amongst the commons. The story had grown greatly during retellings and I heard that the people now believed that I had killed the horseman by chasing him down on foot outside the city walls as he galloped away. Regardless, I was feted as a hero who had saved the city. The fact that I richly rewarded the dozen or so men who'd tackled Rahip did not harm my popularity either (ten gold pieces apiece, if I recall. A pittance or a fortune depending on your perspective). Further, I was not reputed to have mystical powers including the ability to heal the sick and make myself invisible to my enemies. I did nothing to disabuse the people of these fallacies. Whatever doubts the people once had, they were not at least willing to consider supporting me. As Kardes had explained, I could not take any allies for granted. \n\nAnd so it was with palpable excitement that I went to greet my people in the streets. But first I had to get out of the throne room. As we reached the floor the peers moved out of the way, providing a path toward the rear door, toward my chambers. The men smiled and stuck out their hands to be shaken as I made my way through the crowd. I smiled back and did my best to behave as I believed a Sultanah should. The crowd was still cheering loudly. Finally, I reached the door, opened it and slipped into the hallway that led to the family quarters. \n\nWhen the door shut behind me, the noise of the Peers softened. Only four people were with me now. There was Cin, two other Sun Priestesses who had aided Cin during the ceremony (they were her two chief subordinates in her order, Agiz and Got), and finally Saygili, whom I had promoted to my personal guard in recognition of his admirable service.\n\n\"Well,\" I said to Cin, \"I believe that went well.\" I sighed and let my shoulders slouch slightly.\n\n\"Yes, Gunes provided a wonderful ceremony,\" she said, nodding sagely. \n\n\"Did I do well?\" I asked.\n\n\"Absolutely your grace,\" Saygili said. Cin gave him an indulgent smile. I think she respected his dogged loyalty to me. \n\n\"You made no mistakes,\" Cin said, \"You have given your enemies nothing to rejoice in.\" I closed my eyes and nodded. I knew now that I was walking a tightrope and I had been nervous about every aspect of my peerage coronation.\n\n\"Well then let us go to the next ceremony,\" I said. I turned and started to walk towards the stairs. \n\n\"What is the problem?\" I asked. Cin looked at her sister priestesses and then smiled at me. However, only Saygili followed me. After a few steps I stopped moving.\n\n\"Your grace the second ceremony is not in that direction,\" she said. \n\n\"I think I know how to navigate the palace,\" I said, wondering if this was some sort of joke. I had been heading toward the garden where I had seen the red light. I had decided that was an auspicious location for my public coronation. This stairway led to that location. \n\n\"No your grace. You are heading toward the third ceremony,\" she said.\n\n\"Third ceremony?\" I was confused.\n\n\"Your grace, you must be anointed by the Lords, by your priestesses, and by your commons. You have not received your spiritual anointment. That ceremony will be conducted in your quarters,\" I had no idea what she was talking about.\n\n\"We only rehearsed two ceremonies...\" I said.\n\n\"This could not be rehearsed. Fear not, it will be a simple ceremony,\" she said. Then she turned and began walking toward my father's old quarters. My new quarters. I looked at Saygili and he shrugged. I could not very well go to the commons by myself, so I quickly went after my priestesses, more confused than even I usually was around Cin. They were already at my father's door.\n\n\"Guard, wait here and admit no one,\" Cin said to Saygili. He nodded and stopped. I walked up to my three priestesses and we entered the room together. Cin closed the door behind us. \n\nMy father's quarters, now mine, were exceptionally large and dramatic. There were five large windows that stretched from the floor two the ceiling, nearly 20 feet high. The floor was marble with thick fur rugs. A fountain was placed in the middle of the room that provided cool drinking water that was collected far from the sewage run-off of the city (most people drank where they pissed). There was a large round bed on the right wall heaped with blankets and pillows. It was large enough to sleep 12, but designed only for the Sultan. Or Sultanah. The room was lavishly decorated with tapestries, sculptures, and paintings. Sofas, bars, and furniture of various sorts were arranged throughout the room. It was gaudy, as all such places were, and had the feel of a strange museum. I had not yet slept there, but I supposed I would move in that night.\n\n\"Are you going to explain to me what this is about?\" I asked.\n\n\"It is your ceremony,\" Agiz said, the first time she'd spoken to me rather than Cin.\n\n\"To mark your start as Sultanah,\" Got added, against a first.\n\n\"No, I understand that. It is what you said before, but why am I only learning about it now?\" I asked.\n\n\"Go sit on the edge of the bed, and I will explain it to you,\" Cin said. I didn't see any reason to object so I walked over and sat down on the bed, facing toward the fountain in the center of the room. The three priestess arranged themselves in front of the fountain. They stood erect, side by side, with Cin in the middle. They all held hands and looked at me intently. I felt a strange, rumbling within my stomach that I could not explain. The room suddenly seemed lighter and it felt like the sun was shining more brightly through the window.\n\n\"Cin...?\" I started.\n\n\"The Sultan of \u00dclke is not a mere political office,\" she boomed suddenly, her voice sounding clear and powerful, \"The Sultanate and Gunes are one, tied together in bonds of matrimony. For many, many years the political office of Sultanate has tried to divorce itself from the spiritual bonds. The result has been the rending of the Empire. Discord in the spiritual marriage in the Empire has resulted in political calamity and religious collapse. \n\n\"Today, Sultanah Varis I, you have chosen to turn the tides of history. You have decided to re-establish the bond between Gunes and \u00dclke. You have determined to end the discord and return the Empire to its former glory, with Gunes at its head,\" she said. I, of course, had no purpose beyond saving my own skin and avenging my family. But I did not let her know that. Besides, Gunes was also the God of Revenge.\n\n\"In ancient times, the Sultan of \u00dclke and the Sun Priestesses were united in fact to demonstrate the symbolic unity of Empire and God. Just as a Sultan might have an earthly, political wife to further the needs and interests of the profane world, he also would have divine wives to further his needs and interests in the spiritual world. Today, in honor of your coronation, we reestablish that tradition, to consummate the dawn of a new day!\"\n\n\"Amen!\" the other two priestesses said.\n\n\"Divine wife? What are you...\" I began, but before I could speak any further, Cin snapped her fingers. There was suddenly a sound like thunder and an incredible flash of red light. I shielded my eyes briefly, wondering what it was that I had seen. But as my eyes once again focused, I found that my bafflement increased, rather than dissipated. The three priestess still stood before me in front of the fountain. But their bright red dresses lay in piles at their feet. All three women were naked before me! \n\nI felt like all of the air had been knocked out of my lungs. I knew my mouth was gaping open and my eyes were wide. I knew that my reaction was primarily that of surprise (it is not often that women's clothing, even mystical women's clothing, simply departs on its own accord), but I was also stunned by the objective beauty of the women's bodies.\n\nGiven the striking dimensions of Cin's body, it would be a lie to claim I'd never wondered what she looked like beneath her robes. Now, seeing it exposed completely, I saw that my imagination was no match for the Sun God's. Cin's long, red hair cascaded over her shoulders and lay heavy and silky across the tops of her breasts. Those breasts were not overly large, but sat up high on her chest. The breasts were perfectly shaped, dipping slightly down to the nipple on top and curving thick and heavy on the bottom. Her areolas were perfect round and a deep, red color. Her nipples were not over long not overly short and looked exquisite poking out just below her long red hair. While dressed, Cin looked slim to the point of hinting at a lack of feminine curves. However, naked I was able to see that her body tapered down from her high breasts to a very thin waist before rapidly curving outward to her round hips. Between her legs I could see a small patch of well-trimmed deep red hair and a hint of her sex below it. Her legs were incredibly long when freed from their dress and tapered down to her small feet. In short, Cin's body did honor to Gunes, who was also the God of Beauty.\n\nCin's appearance would have been grounds enough for veneration. But her beauty was compounded by that of her two assistants. I had noted while they were clothed that they bore striking resemblances to one another. I knew that the Temple of Gunes sent scouts far and wide to find young girls who bore the appearance of Gunes' legendary lover, Dostum. These girls were then rendered infertile in a secret ceremony and raised to become Sun Priestesses. However, I saw now that the appearance these women bore was not simply uncanny, it was nearly impossible. Both Agiz and Got were around two inches shorter than Cin, but they had the same hair, the same breasts, the same hips, the same legs. Their appearance was nearly identical. Only slight variations in their faces made their identities apparent. Agiz had a somewhat long (though not unattractive) nose and a gold capped tooth. Got had exceptionally large eyes and lips that were naturally almost a purple color. But, fully exposed, these differences seemed minor. I was overwhelmed by the sight.\n\n\"Sultanah...\" Cin said, seeming to sense the freezing of my thoughts. \n\n\"Cin...\" I said, with every intention of asking her a question, but she smiled at me sweetly, her eyes bright and the next words passed unbidden from my lips, \"You are so beautiful. You all are.\"\n\n\"Thank you. A wonderful thing to say to your divine wife,\" Cin said and the other two priestesses laughed subtly. I felt my cheeks get red. What did this \"wife\" business mean? While I was considering that, my three new \"wives\" started to move towards me. They closed the distance between the fountain and my bed quickly. They moved in unison but without signal, as though pulled by the same force at the same time.\n\nI noticed as they move briskly that their breasts bounced gently against their bodies. I noticed the way that their hips moved and the gentle touch of their feet on the marble floor. I saw their hair sway softly and their faces burn with intensity. The sexual power of the three women moving together was undeniable. I felt my face grow still redder as I felt my cock, covered in my flowing red gown, begin to harden.\n\nSince my experience with Arkadas, I had done my best to return to my previous state as it related to sex. Specifically, I had tried to pretend that I was a woman like any other. No, that was not correct. I attempted to pretend to myself that I was completely devoid of any sexual nature. However, as I noted earlier, I found it impossible to place as firm a lid on my sexuality as I had before. I could not help but notice, for example, the extreme sexual beauty of Arkadas body. I was unable, internally, to master my sexual thoughts. But I did my best to master those feeling externally. That meant that I did not look at those I found to be beautiful (I would try to turn away), I would not express any admiration for anyone's appearance, and (most importantly) I would not touch my sexual organs. I still did not believe it was a lady's place to pleasure herself and so, since that morning with Arkadas, I had been chaste even with myself. Now, on the bed surrounded by objectively beautiful women, I found that that the internal was made embarrassingly external.\n\n\"Do not be ashamed,\" Agiz said and my head shook involuntarily. The women kept moving towards me\n\n\"We are your divine wives,\" Got stated.\n\n\"You need not hide anything from us,\" Cin said. Once again there was an incredible crack of thunder and a blinding light. This time it felt like the sound was coming from inside of my head. I would have screamed in terror if I'd been able to, but my body felt frozen. Then, just as quickly as before, my room was back as it had been. But once again, a woman had lost her clothes. I looked down at my body and saw my dress in a pile on the floor. My breasts were exposed and I felt half tempted to cover them with my hand. But my hard cock was pressing up from between my legs and I realized that there was no way to cover my exposure. I was naked before my \"divine wives.\"",
        "\"She truly is the One!\" I heard Agiz say and I looked up at her quickly. Cin gave Agiz a sharp look.\n\n\"Did you doubt me? Or the words of a thousand others in the last few weeks?\" she asked, but did not sound as angry as the words would indicate.\n\n\"No... I believed you from the first you told me,\" Agiz said. As she spoke, Agiz eyes alighted on my hard cock. I looked over at Got and saw that she was staring at it as well. Was it just morbid curiosity? I was too over stimulated to reason through what was happening.\n\n\"And we've heard everyone proclaiming our Sultanah's...special attributes for the last few days,\" Got said.\n\n\"But seeing is believing,\" Agiz concluded and Cin nodded.\n\n\"I cannot believe that I have been given this honor,\" Agiz replied.\n\n\"Nor can I...I did not believe that I would live to see this day, let alone to partake in it,\" Got added. I felt like my head was underwater.\n\n\"You are making your Sultanah uncomfortable,\" Cin reproached.\n\n\"I'd never dream!\" Agiz said, dropping her eyes from my cock. I was uncomfortable. But for a million reasons, not just because of Agiz's eye movements. I needed to know what was happening, but I felt too weak to do so. But I pushed forward\n\n\"Cin,\" I said, my voice quaking. All eyes turned toward me, \"The One?\" was all I could manage. Cin smiled at me indulgently.\n\n\"Agiz, Got, would you like to explain our cryptic conversation to your new Sultanah?\" Cin asked. Agiz and Got, both on either side of Cin, bowed low toward their head priestess and then dropped to her knees before me. I almost pulled back, afraid of their rapid motions. They were so close that I could feel the heat of their bodies and gentle scent of rosewater emanating from them.\n\n\"In centuries long past, when Gunes still lived on the Earth,' Agiz said, speaking as one who has repeated her words many times in the past, \"She wrote fifty prophecies about this future of the world. When she completed her prophecies she attained such perfect knowledge that she burst forth in utter brilliance blotted out the stars. She rose into heaven, and became the Sun. Her prophecies were protected by her earliest followers, the original Sun Priestesses.\" I had never heard Gunes referred to with a pronoun before. I had no idea that Gunes was a woman. But I did not have time to dwell.\n\n\"Through the years,\" Got added and my head swung to find her, \"49 of the prophecies have come true, from the founding of \u00dclke, to the rise of the Liar, to the rise of Tanri. Only one final prophecy remains.\"\n\n\"Gunes prophesied that, in the depths of our doubt, when Empire she founded looked bleakest, that she would send some of her spirit to return.\"\n\n\"Gunes has the light of the Sun, the infinite store of brightness,\" Cin now added, looking directly into my eyes, \"To show her bounty, she sends down the light of a single star each time a person is born. The light of that star is the animating force of the person, and can be seen in the light of their eyes. Gunes stated that, when the time came, she would send the light of two stars to a single person. That person would have twice the spirit of any person on Earth. Twice the power. And that person would lead the Empire, guided by the light of Gunes, to victory. More importantly, Gunes' Chosen One would eliminate all false religion, and make his Priestesses supreme over the spiritual lives of all people on Earth,\" As Cin spoke, I remembered what she'd said about the night of my birth. I was...the One?\n\n\"Gunes would mark this person with a sign,\" Agiz said.\n\n\"Gunes was a woman born with a man's cock,\" Got said and I felt my body start to shake. Gunes...like me?\n\n\"Gunes contained everything, man and woman,\" Cin said, \"So she would make her presence known in that same way, so that we Priestesses could find her. And Gunes' Chosen One would be born with Imperial Blood, so that she would be a descendant of Gunes and have the right to sit on the throne.\"\n\n\"You are that Chosen One,\" Agiz said.\n\n\"We do you double honor, as the Sultanah (and therefore, rightfully our Divine husband) but more so, as the fulfillment of the final prophecy. The Age of a New History!\" Got explained. I felt more confused than ever.\n\n\"That cock,\" Cin said, pointing between my legs, \"Which you have despised your entire life, is a gift from Gunes. And symbol of her divine favor.\" As though Cin had made some sort of signal, both Agiz and Got leaned forward. They kneeling before me, both just inches from my knees. In unison, their heads came together between my legs. For a moment, I thought they were going to kiss. Instead, they turned their heads to the side, their lips moved quickly and pressed themselves firmly against the shaft of my hard cock! Their lips felt soft both first against my quivering flesh and I felt lightheaded. I looked down at the beautiful women, their lips pressed against my most secret place, and I felt like I was in some sort of beautiful and horrible dream. \n\n\"Unlike the Sultans of the past, you are not a symbol of the unity between the physical and the divine. You are the physical and divine, combined as one,\" Cin said. But I could barely heard her. I felt Agiz and Got as their lips parted slightly (though still in unison) and their tongues pressed into my flesh. \"This ceremony now too moves beyond the symbolic. We break down the barrier between the physical and the divine and recognize it as one. The Divine Priestess of Gunes will provide you with your every physical desire, to show you the face of Gunes!\"\n\n\"I...\" I started. I didn't even understand. And still, Agiz and Got suckled on the shaft of my cock, making rational thought impossible.\n\n\"Do not speak Sultanah,\" Cin said meaningfully, \"Witness as the spiritual bond between your body and Gunes is channeled through your divine, virgin wives. We will sense your desires through that spiritual bond, and meet them, without your order.\" And, without saying a further word, Cin closed her eyes and then leaned forward at her waist. I froze entirely as Cin's beautiful face inches closer and closer to my body. She leaned out over top of her two fellow priestesses as they continued to kiss the base of my cock. Finally, Cin's head bent forward. I felt her soft, hot lips press against the tip of my cock. \n\n\"Oh...Oh it's too much!\" I moaned loudly. I looked at the three women between my legs. They looked so beautiful. I could no longer think. I let my mind go. My body took over. Suddenly, all three women broke away from my cock, pulling back.\n\n\"Gunes be praised!\" Got said.\n\n\"I can't believe it!\" Agiz added. I opened my eyes and looked at them. They were crowded around my knees, looking at me.\n\n\"We can sense your desires.\" Cin said, \"We can hear them loud as day. Just as the prophecy foretold.\" I had no idea what they were talking about.\n\n\"It is fading!\" Got said.\n\n\"Let your mind be free,\" Cin said, but she could apparently sense that my thoughts were crowding back in, the connection was becoming muddled, \"We must give her what she desires. Can you still feel it?\" she asked the other two.\n\n\"It is faint,\" Agiz said.\n\n\"I know,\" Got said, smiling mischievously. She hissed something quickly to Cin and Agiz in the liturgical tongue. I could not understand, but in a moment, all three women were moving. I could not have moved if I desired to do so. But I was trying to follow Cin's advice, trying to not to think about what was happening. That brief moment of release had been...divine. I wanted it back. Beyond that, these were beautiful women who wished to fulfil my desires. It ill-behooved me to stop them now! I just let the women go. \n\nCin and Got quickly climbed up onto the bed with me. Agiz moved slightly to her right, settling in between my legs. She was still kneeling and she placed her hands on my knees. Her hands felt extremely hot, but lovely. Like sunlight on bare skin. I moaned and she smiled up at me. She then slowly began to spread my legs apart. I had no desire to resist and let my legs move. \n\nWhile she was acting, Cin and Got were not simply waiting around. Got climbed up onto the large bed on my right side. She crawled on her knees up toward me and then stopped when she was kneeling just a foot from my hips. Cin actually stood up on the bed and moved much more quickly. I watched as she walked around the left side of my body. Soon, she was standing directly behind me. She rustled the air as she moved past and rosewater again filled my nostrils.\n\nWatching the women move about my body heightened the already intense reactions my body was having. I was reaching a level of arousal I'd never felt before. My skin felt like it was vibrating, almost like I was covered in something warm and plush. My nipples stood out tall on my large breasts. I was using my hands to hold my body in a seated position, but I desperately wanted to place my hands on my breasts, to squeeze my nipples and massage my flesh. My cock was actually shaking between my legs and my balls ached dully. I was overcome by sexual need.\n\nMy \"divine wives\" seemed to sense that and quickly moved into position. I had not really understood what Got had meant when she'd said 'I know.' They had been talking about seeing my desires, but I did not even have a sense for my own desires. These beautiful women saw me as an object of sexual desire (something I'd never expected anyone to feel) and the physical and emotional impact was beyond comprehension. I could not more conceive of my desires at that time than I could get my cock to soften.\n\nBut, as the women moved into their positions, I suddenly realized that, in my mind's eye, I had created a vision of what I'd desired. It had not been formed clearly enough to even register as a thought, but Got had seen it. I know it, because it all came together, at roughly the same instance. \n\nI felt Cin sit down behind me on the bed. She spread her legs and pressed her breasts against my back and her cunny against the base of my spine. Her long legs slid against the outside of my legs, so that my body was sort of cradled in hers. Cin's body felt impossibly warm and enveloping, like I was taking a hot bath. She gently pulled me back, my body yielding to her touch. I leaned back so that I was lying on my back. I felt Cin's warm breasts against my back.\n\nAt the same instance, I felt Agiz slip her hands underneath of my knees. Her fingers pressed gently into the soft flesh as she carefully lifted my legs and then pulled them still wider. My legs were now spread incredibly wide, my cunny open and dripping below my sagging, full balls. Agiz leaned in closely and I could hear her gently sniff the air, taking in the scent of my cunny and balls.\n\nCin and Agiz, by pulling me onto my back and lifting my legs respectively, had allowed my cock to flop back against my bare stomach. It felt hard and warm against my skin. But, as I looked down at it, I saw Got's hand. She quickly reach down to my belly. I felt her fingers and nail slide against my skin as she carefully slid her hand underneath of my cock! In a moment, she grasped her hand around it, pulling the dipping tip back up so that it was facing the ceiling.\n\nSuddenly I realized that these positions, the exact location of each person on this particular bed, had formed the basic outlines of a sexual wish I'd made while my mind was at its most black. Cin, wrapped around my body with her tits on my back, Agiz with her head between my legs, and Got with her hand wrapped around my cock. The realization that some sort of bizarre, sexual connection was too much for my mind to accept. Once again, I allowed myself to slip into a state of utter release.\n\nThat must've been some sort of signal, something that the Priestesses were waiting for. I felt a tremor run through their bodies and, in the exact same instant, they all began to move. Cin's left arm slide underneath my left armpit and her palm quickly found my breast. I gasped as Cin's warm hands began to knead my skin and her delicate fingers teased my nipple. At the same time Cin's right hand snaked over my shoulder. Her delicate hand wrapped gently around my throat. She did not choke me, merely grasped my throat and pulled my head back against her shoulder. I grunted as I felt her lips pressed against the back of my neck. I felt her tongue touch it gently graze my skin. \n\nEven as Cin was grasped my breast, Agiz was moving. She moved her head forward quickly. I could no longer see her beautiful face (she was blocked by my breasts, Got's hands, and my cock) but I could feel her. I felt her soft hair as it brushed the inside of my leg. I felt her warm, long nose press into my balls, sinking into the soft flesh there. And I felt Agiz's tongue. Just faintly at first, but then spreading out thick and fat. I could feel her tongue sliding against my dripping cunny, just below my balls. My legs shook as Agiz's tongue splayed out wide and carefully slipped up and down my slit. Her nose pressed harder and deeper against my balls as she tried to press her tongue deeper and deeper inside of me.\n\nGot was not slacking while the other two ladies began their movements. Instead, she quickly bent at her waist. She still hard her warm, soft hand wrapped around my throbbing cock and she now pulled it slightly in her direction. While my Cin was pulling my neck back, I kept my eyes forward, watching Got. She moved with a certainty and purpose that I found unbearably alluring. She closed her eyes and bent so far that her breasts pressed against my hips. In fact, I could feel her hard, hot nipples tickling against my hip bone. Then, I watched as Got's mouth opened and her head quickly sunk down around my cock. I could scarcely believe my eyes as my quivering shaft disappeared past Got's lips and down her throat. In just a few seconds I felt Got's nose press into my lower belly and her hair cascade over my abdomen. My cock was entirely within her mouth!\n\nAnd oh, the sensation! Got's mouth was dripping wet around my cock and warm. No, not warm. It was hot. Hot almost to the point of being uncomfortable, but not quite yet. The heat of her tongue contrasted sharply with the mere warmth of Agiz's tongue as it fondled my cunny. Got's mouth was incredibly tight, but felt soft and in no way constricting. Her tongue moved rapidly around the side of my cock, occasionally wrapping to the right side and sliding down the thick vein that ran on the bottom. After a moment, Got began to slide my cock out of her throat and I gasped as the cold air struck my wet cock. When just the tip remained in her mouth, Got once again slipped my cock back into her throat.\n\nNow, all at once, my un-stated desire had been consummated. And we stayed like that for a while, though I honestly cannot say for how long. My mind remained totally blank, devoid of rational thought. On my bed, my three divine wives moved in perfect unison and harmony. Cin stayed tightly wrapped around my body. Her left hand played with my breast while the right stroked my throat. Her tongue played on my neck as her hot cunny dripped her juices at the base of my spine. Agiz pressed her hard between my legs, pressing my balls against her nose and driving her wet tongue down into my cunny. She lapped at my cunny, sucking down my juices and teasing me with her rigid tongue. And Got, methodically bounced her head up and down on my cock. She drove my cock deep into her throat, working her tongue and saliva over every inch of its length. Her breasts continued to press warmly into my skin. The room resounding with the gentle gurgling sound of my lovers at their various endeavors and my nose filled with the scent of rosewater, cunny juices, and my own arousal. \n\nIn my foggy state I could perceive that my senses were overwhelmed, there was too much happening to my body to completely feel any of them. But that sensory surplus felt wonderful and perfect. In fact, as Got's mouth continued to work up and down on my trembling cock, I found that that my physical state was leading me towards one thing. Suddenly, a single thought burst through my mind, \"cum!\" I did not consciously desire to cum, though I could feel a climax rising. I was not capable of such thoughts. But the actions of my divine wives had pushed me in that direction.\n\nHowever, that thought apparently served as some sort of warning or signal to the priestesses. At once they stopped moving. Got carefully slipped my cock out of her mouth, letting it flop back hard against my belly. She sat up slightly, moving her breasts from my hip bone. At the same time, Agiz pulled her head back from between my legs. She slipped her hands out from under my knees and they dropped slowly. I looked at Agiz's face and saw it glistening with my juices and her saliva. Cin's hands dropped from my body. She deftly slid out from underneath of me, pulling her legs back from around my body. Soon, I was laying on my back on the bed.\n\nAs their actions ceased, my mind began to flood back to me. I realized how perilously close I'd come to a climax. I heard myself whimper slightly. I looked at my cock. It was twitching and already since it had been pulled from Got's mouth it was producing a thick stream of clear, early seed. I needed to climax. I'd been so close and they stopped.\n\n\"Hush now Sultanah,\" Cin said, \"The ceremony is not complete.\"\n\n\"I have it,\" Agiz said and my eyes shifted once again to her face. She was smiling mischievously and she licked her lips. \"I know what she desires now!\"\n\n\"I desire to cum!\" I moaned.\n\n\"Do not look at your surface desires. We look below the surface. Once again allow your mind to be free,\" Cin said quickly. I tried to comply, but it was so difficult. \n\n\"Do you still have it?\" Cin asked. Agiz nodded. I heard Agiz whisper something quickly in the liturgical language once again. I knew this time that they were coordinating their efforts. Apparently sensing that my mind was becoming clouded with thoughts, they moved very quickly.\n\nThe first thing I noticed was that I felt hands on my body. Cin had moved so that she was on my side, opposite of Got. They were both slowly cajoling me to roll over. I did so, loving the way that their warm hands felt against my cool skin. In a few moments, I was lying on my belly (my cock felt wonderful, pressed into the soft furs on the bed). But they did not stop, instead, Cin placed her hands on my hips and began to pull up. At the same time, Got placed her hands under my shoulders, also pulling me. I sensed what they wanted and quickly rose up onto my hands and knees. Cin grabbed my knee and pulled it, indicating that I should spread my legs somewhat widely. I follower her lead.\n\nWhile Cin and Got were moving my body, Agiz was moving on her own. She rose up from her kneeling position between my legs and quickly moved so that she was on the bed. As Cin and got were lifting me up onto my hands and knees, I saw Agiz moving so that she was in front of my face.\n\nBut, as Agiz got onto the bed, the other priestesses began to get off. Both Cin and Got slipped off of the bed, down near where my feet hung off the edge of the bed, so that I could not see them, they were behind me. I wondered for a moment where they were going (despite my best efforts to clear my mind). But I did not have to wait long. After a moment, I heard a noise and felt something brush the inside of my legs. I dropped my head down, looking down my body. I saw my breasts hanging like pendulums from my body and my hard cock pointing slightly down, but generally towards my face. My large balls hung low. Despite these obstructions, I could see hands, palm up, between my legs. I saw these hands rushing forward (one grazed my cock and made my whole body shake). After a moment I saw arms then the red top of a head sliding between my legs. The Priestess continued to slide between my legs and her head, face, and body slid up against my cock. In a short while, I saw that Cin had slid so far up between my legs that was able to stick her arms out and wrap them around my knees. In fact, my kneecaps were now nestled in her arm pits. Her body was now under mine; her torso was between my knees, her breasts were directly under my balls (the space was so tight that my balls were resting gently between her breasts), and the tip of my cock was just inches from her mouth.",
        "As I watched Cin moved into position, I felt Got's presence as well. I looked up over my shoulder for a moment to see what she was doing. She was standing, her legs spread straddling Cin's hips (Cin was sort of half sitting, half lying off the edge of the bed with her shoulders on the furs and her knees on the floor, her back bent underneath of me and around the bed). Got leaned forward and placed her hand on either one of my ass cheeks. She leaned her weight into me, spreading my cheeks apart. I dug my palms into the bed to keep my balance as she did so.\n\nAgiz, now the only other woman on the bed, quickly moved into a new position as well. She sat down on the large bed with her back facing towards me. I saw her beautiful red hair cascading down over her shoulders and lower back. She was just a few feet in front of me and she quickly leaned back. I almost flinched because I thought her head was going to strike mine, but she slipped right in front of my nose. Then she was laying with her head directly under mine. In fact, her lips were directly under mine, though she was upside down. I looked up at her body, the way her perky breasts spread out across her chest, the curves of her soft white body contrasted with the dark colors of the blanket, her fiery red cunny looking wet. I could actually smell her juices from there (and it made my cock twitch and my balls slide on Cin's chest).\n\nOnce again, I realized that the positioning of the priestesses in my bed constituted a half-formed dream or wish that I'd hardly recognized. It almost felt like d\u00e9j\u00e0 vu, like I'd already been here with these priestesses before. And, with that recognition, I was able to slip back into a near meditative state. \n\nAs before, this served as some kind of signal to the Priestess, like I was sending them a message with my mind. Agiz reached her hands up towards my face. Her warm fingers slid through my hair and settled at the base of my neck. She carefully pulled my head down. I saw her gorgeous eyes close and I did the same. In a moment, I felt the soft warmth of Agiz's lips against my own. They were unbearably supple, I felt like my lips melted into hers. My heart whirred at the feeling of her kiss. My first kiss. If I'd been able to think, I would have attached some significance to that, but I could not. Regardless, for just a moment, I opened my eyes. I flicked my eyes up and saw Agiz's body laid out before me, more beautiful than I could possible imagine. But then Agiz opened her mouth and my eyes, on their own accord, closed. I opened my mouth as well and soon my tongue spilled against Agiz's. Our tongue were facing different directions and it felt absolutely incredible to run the sand-papery top of my tongue against the soft bumps on top of Agiz's tongue. I could taste her mouth. Soon, we were both exploring one another's mouths, devouring each other's flavors.\n\nCin had not simply been waiting around while Agiz and I embraced. In fact, our kiss was an important component in Cin's actions. As Agiz pulled my head down to meet her lips, my hips had dropped slightly. My balls settled more firmly on Cin's chest and my cock tilted up slightly, pointing towards her head. Keeping all other parts of her body completely still, Cin bent her neck upward. She opened her mouth instantly my cock slipped inside (this occurred at the exact instant I'd opened my eyes). I must've moaned around Agiz's tongue but I do not remember. I just knew that Cin's mouth felt incredible. \n\nAs she sucked the pre-cum and Got's saliva off the tip of my cock, I felt her cheeks caressing my shaft. Unlike Got, when Cin sucked my cock she did not bob her head up and down. Instead, she formed a gentle sucking vacuum in her mouth and swirled her tongue devilishly around. I felt her tongue everywhere at once, on the tip of my cock, poking at my stretched foreskin, tickling my shaft, and almost reaching out to touch my balls. I felt my cunny dripping wet down the shaft of my cock, some of those juices settling on Cin's breasts while still more dripped toward her mouth. The whole while, my balls remained cradled in Cin's soft breasts.\n\nGot's contribution might have been the most surprising of all. Her hands remained sunken into the flesh of my ass. She then leaned forward at her waist. After a few seconds, I could feel the head of her breath against my flesh just as certainly as I could heard Cin's mouth sucking on my cock or smell Got's wet cunny. But after a moment, I felt something entirely more out of the ordinary. If I had been in a normal state of mind, Got's actions would have repulsed me. I never would have countenanced them and I would have pushed her away. But my mind was completely open to any experience and so, when Got's wet tongue pressed against the soft red folds of my anus, I simply felt the sensation. And it was incredible. Her tongue was dripping wet and felt smooth against my body. It seemed that there was a string connecting from Got's tongue all the way up my spine and as her tongue flattened and lapped at me. I felt a glowing warmth emanating from Got's tongue that I would not have believed possible. Who could have known that such a taboo location contained such sensitive skin? \n\nAs before, we quickly settled into our harmonious unity. My wives had made realized a dark desire I could not have created with my conscious mind. I kept my tongue buried deeply in Agiz's mouth, sucking her saliva into my own mouth and swallowing it down, just so that I could taste her beauty. Between my legs, Cin kept her neck rigid as she suckled on my cock. Her tongue swirled wetly all over the taut muscles and velvety skin of my cock. The sounds she made implied that she enjoyed my flavor. Finally, Got stroked her tongue up and down my anus, occasionally circling it with her tongue. Our noises were louder than last time, our smells more intense.\n\nAfter a long while together, I began to feel the growing climax once again. However, it barely registered in my mind. I continued to just allow the intensity of the experience was over me. I was absolutely contained within the moment. However, just as my hips were starting to buck and my arms were starting to grow weak, Got broke my trance. I do not believe she intended to, but nonetheless it happened. Got made her tongue rigid in her mouth. She tickled my anus with it once and then quickly shoved it deep into my ass. I felt intense pressure and also unfathomable pleasure. My skin prickled all over and I screamed incoherently into Agiz's mouth. I loved every second of Got's actions, but I was immediately dropped back into my conscious mind. I remember asking myself how I could possibly find pleasure in such a loathsome act, but realized I didn't care about the answer.\n\nOnce again, my actions served as a sort of signal to the priestess. They immediately stopped moving. Got pulled her tongue from my anus, Cin slipped my cock out of her mouth, and Agiz broke our kiss and gently released my head. I let out a low moan. My balls felt like they were sagging deeply against Cin's body and my cock ached like it had been struck. I desperately needed the climax I'd been flirting with.\n\n\"Please, oh Gunes you cannot stop!\" I begged. I'd never felt anything like this before. Through the years I'd kept such a careful lid on my libido that I rarely felt even the slightest prick of sexual desire. Even since my encounter with Arkadas, my sexual desire had been a controllable (if strong) undercurrent to my existence. I had never found any sexual need to have even the slightest impact on my desires. But now I found my hips thrusting against Cin's chest, my nipples aching to be pinched, and my hold being bent toward sexual need.\n\n\"Oh that is a strong one, I have it!\" Cin said. This time I knew for certain what she was talking about. Cin had sensed my desires. I knew before she made any noises that she would speak to her fellow priestesses in the liturgical language and that they would quickly act to fulfill my needs. I let my body go limp, so that they could act quickly, I tried to again clear my mind.\n\nAs I suspected, Cin hissed out directions to her fellow priestesses quickly. Cin slid out from between my legs, down onto the ground. Even while she was doing so, Got was pushing me over gently, onto my side and then, over onto my back. As soon as I laid down on my back I felt Agiz reach under my armpits and drag me backwards. She was pulling me up on the bed, towards the pillows. Soon Got jumped onto the bed. She ran up and grabbed my left arm, leaving the right for Agiz. They pulled me up towards the pillow, my body still limp (except, of course, for my stiff cock). As they pulled me, I saw Cin hop up onto the bed and start to walk towards me as well. Her face glistened with saliva and my juices and she looked more beautiful than I'd ever seen her before.\n\nSoon, Agiz and Got had reached the top of the bed. They leaned me back against the pillows so that I was sitting up. My legs were out straight in front of me (though spread slightly to accommodate my aching balls) and my arms were limp at my sides. Agiz and Got quickly sat down next to me with their legs pointed out slightly away from me. In a moment, Cin was standing in front of me. In fact, she was not just standing in front of me, she was standing astride me, her feet on either side of my thighs.\n\nI looked up at Cin. She looked so tall and majestic and her eyes were fiery with passion. Slowly she lowered herself down towards my body. She kept her eyes on mine as she did so. I felt her knees land next to my hips. I glanced down slightly and saw my hard cock poking up between Cin's legs, just a few inches from her dripping cunny. I saw that now, with greater clarity than before. The folds of her cunny were a deep red color that matched her dark red pubic hair, which was trimmed short. They both contrasted sharply with her light skin. Her clitoris was hard and dripping with her juices. I had never seen a more beautiful sight. It was a dream of a desire, the sort of thing I wished I could want.\n\nAnd with that thought I, for the third time, slipped outside of my mind. It became easier each time and much deeper. I could sense a connection with these priestesses that went beyond the mere physical contact that we shared (though that contact was incredible). I could not get my feelings around the contours of that connection, but in simply allowing it to be, my trace grew deeper still.\n\nOnce again, my actions served as a signal to my divine wives. Agiz and Got turned their heads towards me and then craned their necks downward. At the same instance, both of their mouths found my hard, aching nipples. I felt their warm lips wrap around my nipples and their tongues swirl gently on my areola. Their tongues moved at the same time and in the same direction, their teeth nibbling slightly at the same moments. Both priestesses had their legs spread wide and I saw each priestess furiously playing with her own clitoris. I could hear them moaning around my nipple, sending vibrations through my body.\n\nDespite the beautiful feeling that these actions provided, they were nothing in comparison to Cin's movements. As Agiz and Got turned their heads toward me, Cin was lowering her body down on top of my cock. Cin's cunny was so wet and my cock was so slick with spit and pre-cum, that my tip slipped easily into Cin's body. As it did, Cin moaned loudly and threw her head back. I watched as the tip and then inch after inch of my cock disappeared into Cin's body. \n\nHer cunny was hot inside and had a warm wetness unlike anything I could imagine, so much different even than the Priestesses' mouths. I felt Cin's body tighten, squeezing my cock with her insides and I could barely breathe. Cin released slightly, and then sank down entirely, impaling herself on my cock and sitting directly on my thighs. At the same moment, Cin leaned forward towards my face. This cause two things, first it pushed her hips back, driving my cock even deeper into her body and second, it placed her breasts in my face. Cin's gorgeous breasts looked even more divine up close, her skin so smooth and the curves so perfect. I closed my eyes and opened my mouth. Cin's nipple slipped easily into my mouth and the soft skin of her breast pressed into my face. I felt as Cin began to grind her hips back on my cock and to squeeze it with her cunny.\n\nOnce again, the Priestesses began to move in rhythm. Agiz and Got moved their tongues around my nipple in the same time and manner in which they moved their fingers around the clitoris. Cin was tuned into the same time, moving her hips to the beat. Each flick of Agiz and Got's tongues was answered by a reciprocal thrust of Cin's hips, driving my cock deep into her wet womb. For my part, I simply experienced the feeling and keep my own time with my tongue on Cin's nipple.\n\nI cannot say how long this lasted, probably just a few minutes, I had been so close before. Once again, I felt my body rising towards a climax. If I had been in the spiritual state I had been in earlier during the ceremony I might have thrust my hips or tried to use my arms to grab one of the Priestesses. But now, I was completely at one with the experience, and completely devoid of any thought of control. I wanted my climax I suppose, but I was not concerned about it. I lived each second as it occurred without waiting for the next one.\n\nAnd suddenly (though I suppose I cannot say without warning), the climax came. I cannot describe the feeling in any physical sense. I had many wet dreams and I had my experience with Arkadas. Those were intense, physical climaxes. This was something else entirely. This was a spiritual climax. The sensation of absolute pleasure started in my cock. I did not, until later, consider the irony that my dirtiest, least favorite organ had been in the lead towards my communion with the divine. But I digress. The pleasure in my cock instantly overwhelmed that small area and spread out over my body. I felt the pleasure slip down my thighs, over my shins, down my legs, and into my toes. I felt it spread up over my stomach, across my breasts (causing my nipples to tingle wildly), up my throat (and down my arms for that matter), until it overwhelmed my eyes.\n\nThat was when something particularly strange happened. For a brief moment I felt a slight coolness on my cock, and then my vision went entirely blank. For a moment, I could see nothing. It was like I had been forcibly removed from the known universe and my mind was cast into a void. Suddenly, an impossible light appeared before me. It completely filled my field of vision and was uniform in color and intensity. It was so bright that it should have burned my eyes, but I was able to look directly into it. And as the pleasure I felt continued to rocket through my body I felt something else. An infinite number of thoughts, visions, dreams, and desire suddenly crowded into my mind in a single instant. It was overwhelming, both wonderful and horrible at the same time. The sheer amount of information that in that instant lodged itself in my brain was beyond comprehension. I absorbed both all of it and none of it at the same time and even now I don't understand what that means. And it came to me all, somehow, draped in the sound of a woman's voice.\n\nJust as suddenly as it came, the bright light faded before me. But, instead of returning to the void, I found my eyes adjusting to my father's (my) room. It seemed impossibly dim now, compared with the bright light I'd seen before. My vision fully returned to me just in time to see the last large globule of this, white seed shoot from my cock and splash across my breasts. \n\nI realized that the coolness I'd felt on my cock some time before had been Cin hoping off of my cock. As my vision (and my climax) subsided I came to the startling realization about the amount of my seed produced. I saw my breasts, stomach, and arms with thick, white ropes of the pearly seedy splashed across them. I could feel wet heat on my neck and even my face. I turned to my side and saw some of my seed had splashed against Agiz's face. I was sure if I looked to the other side that Got would similarly be marked. I was shocked (but for some reason aroused) to see the priestesses licking the seed from their hair and off their chins, swallowing it down. I wondered what it tasted like. Then I remembered one person in the room already knew. \n\nI looked forward. Cin was still kneeling over my thighs, looking at me intently. Some of my seed had splashed on her as well, mostly on her stomach and the undersides of her breasts. Unlike the other priestesses, she seemed in no hurry to juices from her body. In fact, I'd never seen her so still.\n\n\"You achieved it did you not?\" she asked solemnly. The other two priestesses stopped moving. For a moment I was going to ask what she meant. But I found that something strange had happened. As I searched my thoughts I realized that I had somehow changed. In fact, it felt like my mind had changed in a million tiny ways that, each individually was insignificant, but somehow on the whole had made me an entirely different person. I thought back to the vision that I'd had during my climax. I realized without needing to ask what had happened.\n\n\"I looked into the face of Gunes,\" I said solemnly, \"I have learned so much.\" A smile spread across Cin's face, a satisfied smile I'd never seen on her before.\n\n\"The communion has occurred, we have served your needs and formed a conduit to Gunes,\" Cin said. And now it made sense to me, though it never had before. Our actions had been in service to something greater, to allow me to reach a kind of knowledge I could not get on my own. My sex with the Priestesses was about so much more than it had initially seemed.\n\n\"Gunes is good,\" I replied.\n\n\"Amen,\" the two Priestesses on either side of me stated. I watched as Cin moved her finger on the underside of her breast, scooping up some of the seed that had deposited there.\n\n\"You are now prepared to be the Sultanah. Now it is time to set things rights,\" she said. She then slipped her seed-coated finger into her mouth. Her eyes closed and she moaned like it was the most wonderful thing she'd ever tasted. Once again it seemed like a signal, and the three Sun Priestesses began to lick my body clean, drinking up the seed that had been given to me by Gunes.\n\n* * * * *\n\n\"All rise for Varis, Sultanah of \u00dclke and first of her name since the founding of the Hanedan dynasty, Emperor of B\u00fct\u00fcn D\u00fcnya, Lord-Mayor of \u015eehir, King of Bolge, Devlet, Vali, Yer, and Popo, Admiral of the Akdeniz, Descendent of Gunes, the Sun God, and Defender of the Faith, vassal of no one!\" The herald called out to the masses gathered in the Central Market. \n\nI stepped forth from the palace, once again dressed in my coronation gown, my body dried by the Sun Priestesses. I walked to the edge of the balcony overlooking my people. A great cheer went up from the crowd and I raised my hand to salute them. I know at that moment that a slight smile showed on my face as I gazed out at the small number of people who still lived beneath the rule of the Empire. But I did not smile in the false light of my father. I smiled because, on that day I was crowned, I spoke to Gunes. And I learned that I was to turn falsehoods back into the truth. I was the Sultanah of a great empire that was not yet made. I intended to start building.\n\nEnd Chapter 2\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.",
        "YKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "hermaphrodite",
        "analingus",
        "tranny of female",
        "orgy",
        "shemale on female",
        "group",
        "translesbian",
        "medieval",
        "oral",
        "epic"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-02"
}