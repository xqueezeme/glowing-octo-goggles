{
    "title": "The Cherry Poppers Ch. 28-2",
    "pages": [
        "Chapter 28 -- The End - Part 2 \n\nBeth and Jason had a marvelous evening with a romantic dinner at a nice French restaurant followed by a comedy at the theater. At Beth's bequest, they went back to his frat rather than her room. Jason understood why and didn't question her request. Chad wasn't there either. Kyle and he were out with Connie and Sophie for the night. \n\nThey sat on his bed and watched a little TV. Jason made them both a vodka and tonic. They sipped those until the program they were watching ended. Neither person tried to initiate sex. They just curled up on Jason's bed with Beth sitting between Jason's legs and leaning back into him. He hugged her and occasionally they kissed. It was a relaxing evening of just two lovers together, both content, and happy just to be alone. \n\nIn the morning, it was a different story. Waking about the same time, they started just kissing. That led to oral sex for both, followed by a drawn out fucking session that saw Beth cum three times before Jason finally came inside her. After that, they showered together before dressing. \n\nThey used Beth's meal plan and caught a late breakfast at the University cafeteria. It offered a fairly good breakfast buffet on the weekends. Following that they borrowed some friend's bikes and drove to a state park. They rode around the park and enjoyed a mild December day, stopping a couple times to just hang out around the lake and a playground. \n\nThat evening, Jason took Beth to the diner, neither wanted a big meal, so they just had burgers but saved room for ice cream afterwards. Back at Jason's room again, they just watched TV with Chad. A decent movie was on and with school the next day; they each only had one drink. Beth slept with Jason despite the fact that Chad was there. She wore one of his shirts to bed that covered everything but most of her shapely swimmer's legs. \n\nIn the morning, Jason ran Beth back to her dorm. Neither had an early class but still they needed to prepare. Jason stopped at the pool after dropping Beth to get a swim in. \n\nThe rest of the week was pretty normal and not very active. They saw each other every day but only had sex in his room on Tuesday afternoon. On Wednesday, Jason skipped out after class with Chad and drove to a big name jewelry store that was always advertising deals on diamonds. Chad agreed to go with him for a second opinion when Jason confided in him that he planned to buy Beth an engagement ring. \n\n\"Seriously?\" Chad asked. \"I mean, Beth's a living doll and all but already?\"\n\n\"Yes, I want her to know how much I love her and how much I want to be with her always,\" Jason claimed.\n\n\"But dude, you haven't even graduated yet. And where are you getting the money for a ring?\"\n\n\"I've got it, don't worry,\" Jason stated. \"We don't have to set a date for the wedding right away. I just want to make it known I love her and want to marry her.\"\n\n\"You're wacked out, brother. You sure she'll say yes?\"\n\n\"I think so; at least I believe she'll say yes.\"\n\n\"Have you even talked about marriage? Kids?\"\n\n\"Yes, but not that it would be soon, and on children, she told me she loves kids and would give me as many as I want.\"\n\n\"Just for my own understanding, how do you know she's the one? I mean, Beth is great, fabulous even, but is it true love? You've only known her about a year, right?\"\n\nChad, when I see her, even if we've only been apart for hours, I get a fluttering in my chest. I feel like I can't breathe but don't care. When I kiss her, I'm in heaven. When I hold her, I'm in ecstasy. When I kiss and snuggle her neck and smell her hair and touch her skin, I want to never move. I would be content to stay there forever, with my lips against her neck.\"\n\n\"Good god, man...you got it bad!\" Chad agreed.\n\n\"I know. If this isn't love I don't think I care. We like all the same things too.\"\n\n\"When are you going to ask her?\" Chad asked.\n\n\"Friday.\"\n\n\"This Friday? Dude, you sure about this?\"\n\n\"I have to, Chad. It's important she understand the depth of what I feel for her.\"\n\n\"How are you going to tell her, over dinner?\"\n\n\"I've been thinking about that. I want it to be something special. What do you think about asking her to go hot air ballooning and tell her once were up in the air?\"\n\n\"Wow, seriously? I like it but I'm not sure a woman would. Beth probably would though. She impresses me as the adventurous type,\" Chad reasoned aloud. \n\n\"Yeah, I think so too,\" Jason stated. \"I mean she does seem to like new adventures and excitement. You have a better idea?\"\n\n\"Not me...no...no. I'm years away from thinking about that.\"\n\n\"What about Connie?\"\n\n\"Too early to tell, but I do like that hot Italian chick plenty,\" Chad agreed.\n\n\"Ha,\" Jason laughed as they entered the store. \n\nIt took most of a half hour and working with an eager woman sales rep to pick out the right one. Chad wasn't much help, especially when he nearly died when Jason suggested he wanted nothing smaller than two carats. Jason finally settled on one with great clarity and color that had a marquis type cut with a platinum gold setting. It was just over two carats and because of the quality was slightly over ten thousand dollars.\n\n\"Dude, have you gone completely bonkers. Where you getting the money for a ring like that?\" Chad asked when the happy sales rep walked away to have it shined a bit more for Jason. \"You inherit some money you haven't told me about?\"\n\n\"Sorta, you could say that,\" Jason said with a smile. \n\n\"I know you didn't make that much working at the infirmary. Besides, you've been spending money constantly like a drunken sailor. How is it you have all this dough now that you're not even working?\"\n\n\"Don't worry about the money,\" Jason professed. \n\n\"Seriously...well glad for you that you think you have this covered,\" Chad said but not with much conviction. \n\nJason bought the ring with his own credit card. He barely made it with his credit limit. He was excited to give it to her on Friday and they talked all the way home about the proper words he should use, should he get down on one knee, should he show her the ring or ask her first. Chad wasn't much help except to give his opinion. \n\nBy Thursday afternoon, Jason could hardly contain himself. He was so excited about the plans he had made for the hot air balloon ride. They would leave out of a farmer's field not far from Mercer County golf course and the weather forecast was good. Jason took Beth to the mall to do some shopping she needed to do that afternoon. On the way back he told her he had something special planned for Friday afternoon but didn't say what.\n\nBeth was happy about that and even asked what they should do for the rest of the weekend. When Jason told her he wouldn't be able to do anything on Saturday night, his great dreams of a wonderful weekend seemed to come crashing down. \n\n\"What're you doing on Saturday?\" Beth asked.\n\nJason had only slightly contemplated the answer to that question ahead of time and his response sounded weak at best when he told Beth. \n\n\"I've got something to do for swimming,\" Jason tried to claim. \n\n\"Like what?\"\n\n\"It's just a dinner thing.\"\n\n\"The team dinners aren't until the end of the season. What? Do you have a swim meet or something?\"\n\nJason thought about saying yes to that but quickly caught himself as he knew Beth already had a complete copy of the men's swimming calendar taped to her wall above her desk. She'd easily be able to uncover that white lie. \n\n\"No, it has to do with that reporter for the Princeton Press you saw me talking to the other day. They want to interview me,\" Jason claimed.\n\n\"What for?\" Beth wanted to know.\n\n\"I don't know,\" Jason said and made up. \"It's something to do with the quality of swimming in the Big East and other conferences this year.\"\n\n\"Really?\" Beth questioned. \"Why do they want to talk with you specifically?\"\n\n\"Maybe because I set that record last weekend,\" Jason proposed.\n\n\"But Jason, that guy was already at the meet the night you set the record. How could he know ahead of time you would?\" Beth said with a very puzzled look.\n\n\"Maybe just a coincidence,\" Jason posed.\n\nBeth wasn't buying it, \"You telling me everything?\"\n\n\"Yeah, sure,\" Jason claimed, but he could read in those gorgeous blue eyes that they weren't buying it. \n\n\"You're not lying to me for some reason are you? Another baseball game type thing with more women perhaps?\"\n\n\"I swear, Beth,\" Jason pledged.\n\n\"Please Jason, don't break my heart again,\" Beth stated.\n\n\"I won't, babe. Just hang in there with me a little longer. I promise you'll understand everything soon,\" Jason proclaimed.\n\n\"Maybe Gail was right,\" Beth said.\n\n\"Who's Gail?\"\n\n\"Just a girl on my floor in the dorm, but she contends the bigger the dick, the bigger the problems.\"\n\n\"That's ridiculous,\" Jason declared.\n\n\"Maybe,\" Beth said.\n\n\"You can't possibly believe that about me?\" Jason replied.\n\n\"Jason, I think one reason I let you take Haden was to see you with her. I saw how much you enjoyed fucking her and it scared me terribly. I'm not sure I don't regret letting you two share that.\"\n\n\"Beth, I love you! Only you!\" Jason exclaimed.\n\n\"I love you too but sometimes when you lie to me I can't stand it. It breaks my heart.\"\n\n\"I know, babe. I promise after the next few days my life will be an open book to you. You'll know every page, every paragraph, and every word if you want.\"\n\n\"You know that about me now. Why do you keep secrets from me?\"\n\n\"Believe me, I don't want to. I'll never again, I promise.\" \n\n\"Why can't you tell me now?\"\n\n\"I just can't. I'm not supposed to,\" Jason confided.\n\n\"So you are keeping something or someone from me?\" Beth accused.\n\n\"Beth, don't be mad. Just believe in me, please,\" Jason pleaded.\n\n\"How can I when you don't trust me to let me into your life completely.\"\n\n\"Just hang in there. It'll all be over soon.\"\n\n\"What will?\"\n\n\"I can't say.\"\n\nBeth didn't talk for the rest of the drive back to the dorm. Jason dropped her with only a quick kiss before she left the car. He watched her walk to the door and she didn't turn and wave bye as usual. It was his heart that was breaking now and he hated this damn contest for what it was doing to them.\n\nBack at the frat, Chad could sense Jason's foul mood right away. It wasn't hard as he slammed dresser drawers a bit too hard and tossed several books around. He hadn't said a word either since entering the room other than a muttered hi in response to Chad's. 'It's got to be Beth,' Chad realized and remained quiet.\n\nIt took an hour for Jason to calm down a little. Eventually, he said to Chad, \"I'll need to cancel the hot air balloon ride for tomorrow.\"\n\n\"Why?\"\n\n\"Beth's mad at me because I have something to do Saturday night and I told her it was something to do with swimming but she didn't buy that.\"\n\n\"Was it?\" Chad asked.\n\n\"No.\"\n\n\"What is it then?\"\n\n\"I can't tell you. I couldn't tell her either and she's pissed. She says I break her heart when I lie to her.\"\n\n\"Well that does sound pretty bad. Why can't you tell her anyway? I can see you keeping secrets for other people, even me maybe, but Beth is the woman you love, just bought a ring for, and planned to give it to her tomorrow,\" Chad stated the obvious. \n\n\"Yeah, I know but I just can't...not yet,\" Jason claimed. \n\n\"In that case she must think it's another woman,\" Chad claimed.\n\n\"Why do you say that?\"\n\n\"Because that's what I think it is and I'm not even a woman.\"\n\n\"Fuck!\" Jason yelled. \"It's not another woman.\"\n\n\"You don't have to convince me, dude, just her.\"\n\n\"Shit,\" Jason said and picked up his cell. \n\nHe dialed the hot air balloon place and rescheduled for Sunday. He then prayed as he checked the weather report. Finally, a bit of luck as it was supposed to be nice then too. \n\nAfter classes Friday, Jason went to see Beth. Haden answered the door. It was the first time he'd seen her since they had sex. There was definitely something different in Haden's eyes as they said hello. It wasn't the same innocent, friendly look they'd shared before. It was a look of we had sex and your screwing over my roommate asshole.\n\n\"Hi, Haden,\" Jason said.\n\n\"Hi, Jason.\"\n\n\"She told you?\"\n\n\"Of course.\"\n\n\"I just can't say anything.\"\n\n\"Don't tell me. Tell her why,\" Haden stated.\n\n\"Yeah, I know.\"\n\nBeth was getting ready for their date but she was listening to them as she moved around the room. She gave Jason a look that gave him a pain like a knife to the heart. It must have been exactly like she felt. Jason waited till they were in his car and headed for a bite to eat.\n\n\"I love you and only you. I only want to be with you and no one else ever,\" Jason proclaimed. \n\n\"You have a funny way of showing it, Jason.\"\n\n\"Beth, give me this one thing. It's good for both of us that I do this. You'll need to forgive me for keeping a secret but there's a reward for both of us if you do,\" Jason declared.\n\n\"It's all this mystery, Jason. Is it really necessary?\"\n\n\"Hopefully, you'll agree and forgive me afterwards,\" Jason contended.\n\n\"I hope so,\" Beth agreed. \n\nThey talked about other things over dinner. By the time Jason dropped her off at her dorm they were at least talking. However, they weren't spending a Friday night together, which only served to show that Beth wasn't totally forgiving of his deception.\n\nJason had turned his cell phone off earlier in the day when he was mad and didn't want to talk with anyone. When he got back to the frat, he keyed it back on, and was surprised he had four messages. He checked them, one was from Kira, another from Stephanie, and two from Haden. He was a little curious, so he returned the calls starting with Kira.\n\n\"Hi, Jason,\" Kira said picking up her cell.\n\n\"Hey, Kira.\"\n\n\"How's Beth?\" Kira asked.\n\n\"She's fine,\" Jason lied, but wondered if she somehow knew.\n\n\"You're probably wondering why I'm calling.\"\n\n\"I guess.\"\n\n\"Well, Tessa and I got a weird call today we thought we'd tell you about.\"\n\n\"Oh yeah,\" Jason said.\n\n\"Yeah, it was from an associate of a Mr. Markley. \"You know him?\"\n\n\"Yeah.\"\n\n\"He asked a lot of questions about you. He said they were doing a secret background check on you for an upcoming legal matter. You in some kinda trouble, Jason?\"\n\n\"No, not that I'm aware of...that's not it,\" Jason said, his mind racing.\n\n\"Well, he wanted to know how well Tessa and I knew you. We told him you were a good friend but he seemed to be digging a little more.\"\n\n\"Like what?\"\n\n\"He said they were trying to find people close to you and straight out asked if we had ever dated. I didn't know what to tell him. I just said we all went to ballgames together.\"\n\n\"It's okay, Kira.\"\n\n\"He said you might be coming into some money from an inheritance. That they had to be sure there were no legal claims to your estate such as children or pending pregnancies. He asked if I knew of any. I said no.\" \n\n\"Good.\"\n\n\"Are you coming into money?\" Kira asked. \n\n\"Maybe some,\" Jason stated, feeling that might be common knowledge soon enough anyway. \n\n\"Well okay, that's about all he said.\"\n\n\"Thanks, Kira,\" Jason said before saying goodbye.\n\nThe next conversation with Stephanie went eerily similar. The final conversation with Haden was similar but much more involved. After relating the exact story to the others, Haden wanted to know if this had anything to do with the secret Jason was keeping from Beth.\n\n\"Are you asking or Beth?\" Jason replied.\n\n\"Both, but especially her,\" Haden admitted.\n\n\"Well, yes,\" Jason disclosed. \n\n\"Beth wants to talk with you.\"\n\n\"Okay,\" Jason said, but Haden was already passing the phone.\n\n\"Jason?\"\n\n\"Hi, babe,\" Jason said trying to keep it light.\n\n\"Jason, is this Mr. Markley the guy from outside the pool the other night?\"\n\n\"Yes.\"\n\n\"Is it true you might be coming into some money from a relative?\" Beth questioned.\n\n\"Yes,\" Jason said, stretching the truth and wondering if a fraternity brother, which Douglass Caulfield technically was, would meet the strict definition of a relative. \n\n\"I'm beginning to feel better about your secrecy,\" Beth admitted. \n\n\"It's almost over forever, babe...I promise.\"\n\n\"It better be. I love you,\" Beth said.\n\n\"I'm nuts about you, baby,\" Jason said emphatically.\n\n\"Me too,\" Beth said before they hung up.\n\nJason called Mark next. He wanted to relay what was going on and get Mark's thoughts. It disturbed him that Markley was making contact with his listed popped cherries. \n\n\"Hi, Little,\" Mark answered.\n\n\"Hey, Big,\" Jason said and then gave the reason for his call. \n\n\"I know,\" Mark told him. \"A few of mine were called too. Markley is Caulfield's man and they're just verifying, as much as they can, the accuracy of our claims. Don't worry, it's only a random audit and they are probably done.\"\n\n\"How do you know?\"\n\n\"I'm just guessing, but I'm pretty sure.\"\n\n\"What time you coming by tomorrow?\" Jason asked.\n\n\"At five. I'll drive. I have new wheels I want to show you,\" Mark said.\n\n\"Oh, yeah? Okay, cool. That's good.\"\n\n\"See ya then,\" Mark said and they said goodbye.\n\nJason didn't try to see Beth Saturday. He was anxious to get the dinner behind him so he could finally tell her everything. He met Brad for a swim and then came back to his room to study. He showered at three and took his time getting ready. Jason studied a bit more until Mark show just before five. \n\nMark and Jason left, but spent a few minutes first in the parking lot admiring Mark's new BMW coupe. They couldn't loiter long though as they still had a ten minute drive to the Princeton hotel. They arrived at 5:45, found the room where the banquet was being held, and located their name cards on the table. The table they were sitting at was near the front, by the head table, and they were sitting with the other more recent brothers including Mark's big brother. \n\nAt exact six, Mr. Markley came to the dais at the head table and asked everyone to take their seats. When everyone was seated, he gave an introduction for Mr. Douglass Caulfield who was wheeled out in a wheelchair by an assistant. The brothers all stood and clapped as the old man was brought to an open spot left for him near the dais. The applause from the brothers lasted for quite some time and Mr. Caulfield acknowledged it with a weak wave of his hand. \n\nAfterwards, the brothers were seated again before the next introduction brought cheers and several more shouts of surprise. Jason was one of those in shock to see Dr. Jennifer Whitfield being introduced. He clapped like everyone else but was stunned at the same time. Dr. Jenny blew kisses and waved to the crowd before she sat next to Douglass Caulfield. Older than Caulfield by some five years, she still looked great for her age, and much younger than him. She found Jason in the crowd and winked at his astonished look. \n\nThe university president was introduced next and he sat on the other side of Dr. Jenny. Several more people were introduced as people that worked for Caulfield. They sat on the opposite side of the dais at the head table near where Mr. Markley would be sitting. Markley finished the introductions and yielded the floor to a woman that had been Caulfield secretary for the last ten years. She gave a brief overview and description of the contest as everyone was familiar with the details. \n\nWhen she finished, one of the corporate accountants from Caulfield's family business gave a presentation on how the trusts for the contest had been invested. True to most accountants, he used a large screen behind the head table to show slides of the funds growth. The money had definitely been invested wisely as even poor market years showed some modest growth. \n\nNext, Dr. Lawrence Samuelson, the university president for over three decades, was introduced. He shocked everyone by telling them he had announced his retirement for the end of the year to the university board at a meeting just the day before. Not many were surprised though, as it was long rumored the seventy-something year old president had to retire soon despite being in good shape. He spoke for a few more minutes about the great traditions of the university and how it had grown over the years. Most everyone listened intently but there were a few whispers about what he was doing here and had he known about the contest. At the end, he shocked everyone by saying that he had been Douglass Caulfield's big brother in the frat at Theta Chi. The newer brothers never realized it as he graduated early and his name was recorded as H. Larry Samuelson. ",
        "As the president introduced Dr. Jenny with glowing praise for her many years of service to the university, Mark whispered to Jason as they rose to applaud the good doctor.\n\n\"He must have known then about the contest if he was Caulfield's big brother. I bet he was in on it,\" Mark claimed.\n\nThe applause for Dr. Jenny carried on for some time. She was certainly loved by all the Theta Chi brother's that had worked for her over the years. Jason still couldn't believe she was present at this dinner.\n\n\"She must have known too,\" Jason said, but it was as much a question as a statement of fact. \n\n\"No doubt,\" Mark agreed.\n\nWith that realization, Mark and Jason weren't shocked when Dr. Jenny admitted to being in on the contest from the beginning. Others were apparently though, and the gasps and groans among the collected group said so. Dr. Jenny never flinched though and smiled her warm smile as she continued. Douglass Caulfield and she had remained friends after he graduated. They had even dated as friends. He had convinced her of the good of the service the Theta Chi brothers were providing by introducing all these virgins to the joys of sex. At first, she was very skeptical and refused to go along. However, the more she consulted with the women before and after sex, the more she realized that they were indeed happier afterward. \n\nIt wasn't until she agreed, however, that Douglass Caulfield admitted to her the rules of the contest and her involvement with the asterisks. She said she was very hesitant to allow her records to be used in such a manner. However, Doug convinced me to just give it a try for a while. I agreed only because I never received one complaint afterwards that a young lady was dissatisfied or regretful of having done it. So many girls were coming to me for the pill anyway as soon as it came on the market. Maybe it was the sexual revolution of the seventies, but it never seemed like we were doing harm. Instead, all the women found joy in sex. It was a liberating time for all women. \n\nI hope known of you think less of me for being part of this or that I broke my Hippocratic Oath to serve people as honorably as I could. It might be hard to understand, but you men and ladies, Dr. Jenny said looking around, of anyone, can appreciate the pleasure and life experiences these women gained through companionship and sex. It might have just been sex but I know many trysts led to serious relationships and even marriage. \n\nSo, like many of you, I'm sad to see everything come to an end. Dr. Samuelson's retirement, with whom I worked closely with all these many years, and my own retirement, has brought on many changes. These changes are crucial to keep our beloved university up to the times of today's fast moving pace. The contest that started with Douglass Caulfield and ends now with Jason Robinson, I'm proud to say I was part of bringing pleasure to hundreds of people. Thank you.\n\nDr. Jenny sat down to thunderous applause. All the brothers and even the wives of the deceased ones, Jason noticed, were clapping loudly. Cute old Dr. Jenny looked around the room from her seat and waved and smiled. \n\nMr. Markley advanced to the podium. He explained that Douglass Caulfield's illness left him too weak to speak but that he wanted to thank all the brothers for their participation, devotion, and honesty in the pursuit of the contest. The presentations of the awards would be made following the dinner. \n\nWith that, the outer doors of the room opened up and many waiters and waitresses entered the room with trays of food. The meal was six courses and excellently prepared. It took nearly two hours before the dinner and dessert were over. Mr. Markley took the podium again just as the last of the desserts had been served.\n\nMarkley said, \"My assistants have each of your certificates and they will be circling among the tables handing them out to you. We have several accomplishments to acknowledge as well.\"\n\nHe began by praising Douglass Caulfield for his wit, patience, and generosity in creating the idea and trust for the contest. Cherry Poppers might go down in history as the most unusual of contests, or the most well kept secret, but it had more than met the goal of joy to hundreds, for which Douglass Caulfield had created the contest in the first place. \n\nNext, Mr. Markley introduced to make the presentations an old lady that had been sitting at one end of the head table quietly. Her name was Polly Johnson and she had been Douglass Caulfield's number two cherry. She rose to the podium, but not before walking to Douglass Caulfield, and kissing the old man on the cheek. \n\nAt the dais she began, \"I know this might sound strange to anyone outside this room, but I'm one of the many woman that can praise this contest. Douglass and I dated back in college, and even though our time together was short, and resulted in my lost virginity, I look back at those days with true tenderness and joy. I agree with Dr. Jenny that the hundreds of women you all have helped experience the joys of sex, companionship, and affection are far better off for the gift they gave than not. I feel blessed to have been part of Douglass's life and he part of mine. I'm sure you all feel that way too.\"\n\nThe crowd applauded Polly Johnson before she proceeded with the awards. Any brother that made it past ten cherries, starting with Douglass Caulfield, received honorable mention. Surprise extra gifts provided by Caulfield were given to the top four runners up included Mark and the others at nineteen cherries. After the applause for those died down, Jason was asked to come to the dais. \n\nPolly produced a plaque from the shelf inside the podium and announced Jason as the overall winner with an amazing twenty cherries in less than two years. She handed him the plaque, his check, and gave him a kiss on the cheek. Dr. Jenny rose and also gave Jason a tender kiss on the cheek. Jason walked back to his seat to the thunderous applause of the crowd. \n\nMr. Markley announced the bar would remain open for another half hour and before Douglass Caulfield left, everyone gave him a standing ovation. He waved as best he could and it was obvious he was quite sick and frail. Dr. Jenny and the rest of the head table left too but not before Dr. Jenny came over to their table. She kissed Mark and Jason again.\n\n\"You two may have been the last two of my boys,\" she called them, \"but you were my favorites.\"\n\n\"We love you too,\" Mark and Jason stated with more hugs around.\n\nDr. Jenny looked at Jason and congratulated him again. \"I knew you could do it from the moment Mark introduced you to me,\" Dr. Jenny claimed. \n\n\"How so?\" Jason asked.\n\n\"Oh, Jason, you are so kind and unassuming. Surely, you must realize just how handsome you are?\" Dr. Jenny praised.\n\n\"All the guys are good looking,\" Jason said.\n\n\"Yes, they are, but you have all the qualities that drive women crazy, don't you know?\"\n\n\"I do?\"\n\n\"Jason, you're runway model gorgeous, built like a Greek god, and with the most charming personality I've ever known. Yes, you are the complete package, my dear.\"\n\n\"Dr. Jenny, you're making me blush,\" Jason said and he was.\n\n\"See, I told you. You always know the right thing to say too,\" Dr. Jenny claimed and kissed his cheek once more. \"Yeah, you're a charmer all right. What do you plan to do with all that money?\"\n\n\"I'm going to propose to my girlfriend, Beth,\" Jason replied.\n\n\"You are? Oh, how wonderful. Did you meet her through the contest?\"\n\n\"Yes, Beth was my number eight.\"\n\n\"Oh, how marvelous. I'll tell Doug and Larry. They'll be pleased that what we did here truly mattered and produced such wonderful results.\"\n\n\"Thanks and yes it did,\" Jason agreed. \n\nDr. Jenny said her goodbyes and left with the others. Mark and Jason stayed until the end and got plenty of congratulations from the remaining crowd. Even the two widows came over to congratulate them and confess they were cherries popped as part of the contest before they married their husbands. They too had nothing but praise for The Cherry Poppers competition.\n\nDriving back, Jason asked Mark what he got as an extra gift. He still held in his hands the plaque and his own certificate for $2.55 million dollars as the real money had already been wired to each of their bank accounts for safety. \n\n\"I got an extra hundred thousand,\" Mark said. \"Not bad, huh?\"\n\n\"That's great,\" Jason declared.\n\nJason was on cloud nine for the longest time on the ride back to campus until he started thinking about the next day and his balloon ride with Beth. He hoped she would be okay with his sexual dalliances once she learned the truth. Obviously, the money was something he hoped would help persuaded her. However, his pledge that it was completely over, and she was the only one for him now, he hoped would carry the most weight. \n\nIt was fairly late by the time they arrived back at the Princeton campus and the frat house. Mark stayed the night with Jason but left early the next day knowing Jason had a busy day planned. They gave each other a brotherly hug before departing and Mark wished him success in his proposal to Beth. He assured Jason that Beth would let her love for him overshadow everything else. Jason thanked Mark for involving him in the contest.\n\n\"You remember that first day when you told me about cherry poppers?\" Jason asked.\n\n\"Yeah, you were against it and very skeptical.\"\n\n\"Well, I won't say it was always joyful, but forgetting the money part for a second, I'm glad you got me involved, Big,\" Jason said.\n\n\"You are?\"\n\n\"Yeah, the contest turned out to be so much more. I'm truly blessed for having known all these women. I thought at first we were guilty of taking advantage of these women but I must say I agree with Douglass Caulfield, Dr, Jenny and you that we have done something good here despite the social stigma against it. Thanks.\"\n\n\"You're welcome. My only regret is it's over and I didn't get to see just how many cherries my little could pop,\" Mark said with a laugh.\n\nAfter Mark left, Jason told Chad about the money. He told Chad it was an inheritance. He hated lying to his roommate but it was still necessary to keep the contest secret to some. With his parents, he would claim the contest was a national competition about gaining pledges at the frat as Mark and he had agreed. Jason finished making his plans for his proposal to Beth, ordering flowers, and an expensive dinner afterwards at the seafood restaurant where they went on their second date. They would spend the night at the hotel in town where Jason had taken her virginity. \n\nThe balloon ride was scheduled for two hours starting at two, but they needed to be there by one. Before picking up Beth, Jason stopped for some sandwiches, chips, and cokes. They would eat those on the ride there or in the parking lot before the flight. When Jason knocked on her door, Haden answered dressed in a tight fitting shirt and a short skirt that showed off her long shapely legs. \n\n\"Hi, Jason,\" Haden said with a surprisingly warm smile.\n\n\"Hey, Haden. How's it going?\"\n\n\"Great...come in...Beth's finishing up in the bathroom. She'll only be another minute,\" Haden claimed.\n\nJason talked small talk and about Brad with Haden until Beth came in. He tried not to stare at Haden's firm breasts accented by the tight shirt or her exquisite legs. The thought that somehow she had dressed this way to impress him didn't escape him. When Beth entered though, she immediate drew his full attention.\n\nBeth's red hair was done up in curls like she'd done on their second date. She had a sleek blue dress on that showed off every luscious curve of her body and highlighted the color of her eyes. Jason's breath seemed to catch in his throat as he stared at Beth. He didn't even say hi at first, which made Beth and Haden both giggle. \n\n\"Like what you see, Jason?\" Haden asked mischievously.\n\n\"Hi, Jason. How do I look?\" Beth asked smiling.\n\n\"Gorgeous,\" was all Jason said, his eyes giving away the rest.\n\n\"Thanks... you look good too,\" Beth said, complimenting Jason on his new dress clothes. \n\n\"Isn't she a vision?\" Haden proclaimed. \n\n\"The most beautiful vision in the world,\" Jason maintained.\n\n\"Good enough to eat,\" Haden stated with a wicked smile at both of them. \n\nBeth gave her a frown but then smiled too. She looked back to the still gawking Jason.\n\n\"Shall we go?\" Beth said. \n\n\"Okay,\" Jason responded.\n\n\"Haden has a date too,\" Beth said. \"She's going to a movie with Brad.\"\n\n\"Oh, really...nice,\" Jason said, now realizing that her outfit had nothing to do with him. \n\nJason helped Beth put on her coat and they left. She held his arm as they walked lovingly to the car. They got looks of jealousy from many of the other women in the dorm. One look of all made them both laugh. Sierra passed them on the stairs on the way out. She didn't say anything, and neither did they, but her shocked look at the well dressed gorgeous couple was evident. \n\nOn the ride to the hot air balloon ride, Jason explained what he had planned. Beth was at first upset he hadn't clued her in so she could have dressed more appropriately. She had thought they were just going to a fancy restaurant. That he wanted to buy her a good dinner to make amends. Jason assured her all would be fine. \n\nThey finished the lunch in the car and Jason presented her with the lovely bouquet. She loved the flowers and wanted to leave them in the car for safekeeping but Jason insisted she bring them along. It was closer to one thirty by the time they got to the field where the balloon awaited. The owner had it practically ready to go and he just explained to Jason how to help him with the lines. In twenty minutes they were firing more hot air into the balloon and started to take off. Beth hugged Jason tightly, wrapped warmly in her coat. His large body helped her stay warm too.\n\n\"I'm a little scare,\" Beth admitted.\n\n\"Don't be,\" Jason said, \"Ben's been doing this for ten years.\"\n\nJason had introduced Beth to Ben when they arrived, and almost chuckled at the startled look of the thirty-something balloonist face as he took in Beth's beauty and shook her small hand. Ben knew of Jason's proposal plans and undoubtedly envied him proposing to this gorgeous red head. It was a small basket, but Ben managed to hang in one corner for most of the ride, as the loving couple kissed and enjoyed the pretty fall colors still somewhat evident even this late in the year. A month or so earlier would have been even better though.\n\n\"It's beautiful,\" Beth declared, looking out over the countryside with Jason's arms wrapped around her. \n\n\"Not as beautiful as you,\" Jason whispered into her ear as the wind blew her striking red hair.\n\n\"Thanks,\" Beth said, even as she worried she was being windblown into a mess. \n\nJason waited until Ben announced they would be descending soon. The chase car would meet them at the pre-designated site. All had gone as planned with the flight thanks to a mild but consistent wind. Jason knew the clue from Ben was his designation to begin.\n\nJason turned Beth towards him for a kiss. They kissed for a few minutes before taking a break. Despite the cold, they had their coats open and pressed their bodies together as they kissed. Even cold, Jason's cock was getting stiff holding her so close and kissing her. Beth's nipples gave away an equal desire, as she felt his through her thin dress, and smiled at him knowingly as they stared into each other's eyes. Jason saw nothing but love in her eyes.\n\n\"Babe, I'm ready to confess now,\" Jason said.\n\n\"Confess what?\" Beth asked, but knew all too well what he meant.\n\n\"I know my actions have been hard to explain but I'll try.\"\n\nJason told her everything, all about The Cherry Popper's contest. His initial reluctance to participate, but hated to disappoint Mark. He told her of his eventual acceptance of it after being hurt by Lana. The good he felt he was doing despite the wrongness of the purpose. The friends he made and the relationships he developed. He said meeting her being the absolute best of all of those. How he'd kept going for some reason even though his love for her was growing rapidly. It might be wrong or perverse, but he actually came to believe he was doing something good, something that made these women's lives better. Finally, he told her of the money. How much money was involved. What he got for hitting twenty. How Haden was number twenty. He told her everything and begged her forgiveness and that he thought in some way he was doing it for their future together. \n\nWhen he was done, Beth stared at him for long moments without saying anything. Jason tried to read her thoughts in her eyes. He noticed them welling up with tears and his heart started to break. He feared his confession had destroyed everything. That she would hate him for the deception, the lies, the betrayal, the perversion, the indecency of what he had done. He suddenly felt sick to his stomach. They still held each other, as he'd whispered this whole confession to her hoping Ben wouldn't hear in the bustling wind. Jason waited nervously for any sign of her approval or dissatisfaction. He could feel sweat forming on his forehead despite the cold. \n\n\"Do you love me?\" Beth finally said as she fought back tears.\n\n\"More than life,\" Jason proclaimed. \"I'll jump from this balloon right now if you tell me you hate me or never what to see me again.\"\n\nBeth's face looked shocked for a second and then broke into a smile. She held him tight. \"No need to jump, Jason. I still love you,\" Beth professed.\n\n\"Oh, babe...I love you so much,\" Jason asserted.\n\n\"I know that the rest of womanhood will hate me for this, but am I your only girl from now on?\" Beth questioned.\n\n\"Definitely!\" he shouted.\n\n\"Can I trust you to not keep secrets from me?\"\n\n\"You have my permission to cut my balls off if I do,\" Jason claimed. \n\n\"No need for that,\" Beth said laughing. \"I like them too much where they are.\"\n\n\"Do you forgive me?\"\n\n\"Jason, I can hardly accuse you of being unfaithful when I was messing with Haden behind your back. I guess we could call it even now and pledge our fidelity from now on,\" she reasoned. \n\n\"I love you so much.\"\n\n\"I love you,\" Beth agreed.\n\nHe dropped to one knee in front of Beth and reached into his coat pocket. He pulled out the little red box containing the two carat diamond ring. Jason wasn't sure whether to laugh or be concerned at the shocked look on Beth's face all of a sudden.\n\n\"What're you doing?\" Beth asked nervously.\n\n\"Beth, will you marry me?\" Jason proposed.\n\n\"Oh, my god,\" Beth exclaimed, her eyes filling with tears again.\n\nJason showed her the ring and proclaimed, \"I'll be the happiest man on the face of the Earth forever if you say yes.\"\n\n\"Jason, we talked about this but I thought you wanted to wait?\"\n\n\"I still want us both to graduate but that doesn't mean we can't get married or at least be engaged and marry after,\" Jason professed.\n\n\"You sure about this...I mean, I want to be sure...\"\n\n\"I love you. I can't imagine spending another moment of life without you,\" Jason declared.\n\nA tear slowly rolled down Beth's cheek as she looked at him with so much love his heart was ready to burst. Jason held her hand and slipped the ring on it. Beth looked at it and more tears rolled down her cheeks. She pulled him to his feet and kissed him with more passion than Jason thought possible. He returned the kiss, her tongue fighting with his. It was long moments before they broke the kiss. \n\n\"Yes,\" Beth whispered through her pants for breath. \"Yes, I'll marry you, Jason Robinson.\"\n\nJason picked her up and hugged her. He whirled around and nearly lost his footing. Ben stepped forward unnecessarily thinking he might have to catch the two lovers from falling overboard. Jason caught himself though and the two lovers locked lips again. They kissed until Ben announced they were about to land. He smiled at them as they finally separated. ",
        "Back on the ground, Beth and Jason thanked Ben. Beth was so happy she kissed him on the cheek. Ben laughed as he wished them well. A married man himself, he was always touched by the couples that proposed on his balloon. \n\nJason took Beth to dinner at the same seafood restaurant as their second date. He had reserved the table in the bay window again looking out over the small lake. The Canadian Geese were still prevalent and the scene looked fantastic as the sun dropped and shimmered over the lake. Beth looked as beautiful as ever upon a short trip to the ladies room to make sure her hair and make-up were in place. Jason had waited a few minutes because she also called Haden quickly with the exciting news. Beth got a strange look from an older lady, entering the bathroom, and finding the screaming and excited stunning red head. She understood and smiled when Beth flashed her ring. They had a wonderful meal and held hands quite often. Beth couldn't keep her eyes off her ring. It shined brightly in the lights of the restaurant. \n\n\"It's so big, Jason. It must have cost a lot?\" Beth stated.\n\n\"Only the best for my girl,\" Jason claimed.\n\n\"You're so good to me,\" Beth said chuckling and squeezing his hand. \"I'll have to show you how much I love you later.\"\n\n\"Promise?\" Jason replied jokingly. \n\n\"You bet.\"\n\nWhen they left the restaurant, Jason drove her to the same hotel where they went the night of that date. He had again reserved the same room. The hotel clerk had a hard time keeping his eyes off Beth as they checked in. With the night, came colder temps, and the short drive from the restaurant to the hotel had barely allowed Jason's car to warm up. Her nipples were poking invitingly against her beautiful dress. They laughed about it on the elevator ride to the room.\n\nBy prepaying for the room, the champagne Jason ordered and some treats were already in the room as planned. More flowers also, to which Beth added the ones Jason gave her earlier. She briefly excused herself into the bathroom while Jason found a good music channel on the TV. \n\nWhen Beth came out of the bathroom, she walked over to the foot of the bed upon which Jason lay stretched out. She was so beautiful; Jason just stared at her as she smiled back. He watched as Beth moved her arms and reached behind her to lower her dress's zipper. Her nipples still poked at the thin material of the beautiful dress. Jason observed intently as the tops of the dress loosened and began to fall off her shoulders. Her hand held it in place for a moment, teasing him with the expectation. When she moved her arm, the dress dropped to her tight waist, exposing her bare breasts. She had obviously not been wearing a bra the whole time. Jason stared hungrily at her superb tits. The pale whiteness of her lightly freckled skin against the blue of the dress was exquisite. Her nipples were pointed buds of pink splendor. \n\nThe realization that she had gone braless made Jason also glanced at her hips. His eyes searched the extremely tight dress for any signs of panty lines. He saw none. 'Could she have been totally without underwear the whole time?' Jason decided with a smile. 'Her only clothes the dress? No wonder she was worried about going hot air balloon riding in the wrong clothes or lack thereof.' \n\nJason smiled as Beth slowly and seductively pushed the dress further down. He watched enthralled as inch after inch of creamy white skin came into view. The dress passed her cute bellybutton on her firm tummy and proceeded down until the faint top of her red hair shown. The landing strip of pubic hair Jason had requested was growing back in nicely. Beth held her dress there provocatively for a few seconds. \n\n\"Oh, my god, you're beautiful,\" Jason groaned. \n\n\"Thanks, babe,\" Beth replied smiling. \n\nShe let the dress go and it dropped to the floor. Jason looked on purposefully as she stepped from the dress, still in her high heels. She was a vision of loveliness. Jason's cock already strained at the front of his pants. Beth noticed too and crossed the short distance to the bed. She climbed onto the foot of it without breaking her look into Jason's hungry eyes. She helped him part his legs and knelt between them.\n\nJason felt Beth's hands on his thighs, squeezing them as she continued to stare into his eyes. He watched as her hands massaged up his legs and began to undo his belt. The diamond ring glistened brightly in the light from the table lamps by the bed. Her fingers expertly opened his pants and in one swift pull, with his help, she had them down to his ankles. He helped her remove his pants and she took his socks off too. Next her hands curled around the waistband of his boxers. Before she pulled them down though, her lips kissed the obvious bulge, and traced along its length wetting the material. \n\n\"Oh, god,\" Jason moaned as Beth's lips and tongue teased his cock through the fabric of his boxers. \n\nBeth smiled knowing as she caressed his pulsing cock. It tried to do a dance even while still trapped in his boxers. Eventually, she pulled and Jason lifted up. His boxers came free and his cock sprang forth like a cobra ready to strike. Beth laughed at it.\n\n\"He's ready to play,\" she said jokingly. \n\n\"He can't help it looking at you,\" Jason contended. \n\nBeth removed his boxers completely and kissed the head of Jason's cock. It already glistened with pre-cum and she ran her lips over the sticky fluid. She licked around the cockhead and tasted him. Savoring the taste, she took the whole big head into her mouth, and swabbed it with her tongue. Jason groaned his approval as Beth applied her oral skills to his cock. \n\n\"Oh god, babe,\" Jason gasped. \"That's so good.\"\n\nBeth smiled even with Jason's cock lodged in her mouth. Beth used both hands to increase the already amazing pleasure her mouth was giving him. Jason held her head briefly as he made her take more of him. Beth loved it, however, and pushed harder to get more of him inside her mouth. Jason let her suck him for a while before pushing her off his cock.\n\n\"What?\" Beth exclaimed.\n\n\"Swing around, Babe, so I can eat you at the same time.\"\n\nBeth readily complied and soon they were locked into a pleasurable sixty-nine. Jason feasted on Beth's slick pink pussy while she resumed licking and sucking his cock. They stayed that way for a good while. Jason brought Beth to two amazing orgasms and licked up her sweet nectar each time. Beth brought Jason close several times, but teasingly backed him down, driving him crazy with lust. \n\n\"Come here you naughty, girl,\" Jason said after he got her off for the second time and she refused to let him cum.\n\nBeth spun around with help from his strong arms and settled on top of him. Her wet horny pussy rested on one of his thighs and rubbed back and forth making her groan. Her hand gripped his steely hard cock, but only stroked it lightly. Jason growled with need. \n\n\"Want to cum, big boy?\" Beth asked with a laugh. \n\n\"God, you know it, you tease.\"\n\n\"Tell me something first.\"\n\n\"What?\"\n\n\"What number virgin was I?\"\n\n\"Oh, Beth, why do you want to know that?\"\n\n\"Just curious. Don't worry, I won't be mad or anything.\"\n\n\"You sure?\"\n\n\"Yes, silly. I'm okay with it as long as it's over.\"\n\n\"You were number eight,\" Jason answered.\n\n\"Number eight, huh? A good number I guess. Haden was the final one, huh? That put you over the top.\"\n\n\"Yes.\"\n\n\"So you secretly wanted to fuck her. Here I thought you were doing it because Haden and I wanted you to,\" Beth claimed.\n\n\"Beth.\"\n\n\"No, it's okay. I know you were going for the extra million. Should we tell Haden her fucking you was worth a million dollars?\" Beth said laughing\n\n\"I'm not sure that would be a good...\"\n\n\"I guess. For now anyway,\" Beth agreed with a giggle that suggested she might still tell her best friend at some point.\n\n\"You sure you're okay with ...\"\n\n\"Yes...don't worry...as long as you love me and me alone from now on,\" Beth stated.\n\n\"Only you, babe.\"\n\n\"Good,\" she said and kissed him ardently, her hand squeezing harder on his cock. \"Now, where would you like to cum?\"\n\n\"Hmm, tough choice,\" Jason said.\n\n\"Too slow,\" Beth claimed giggling and settled over his cock with her eager pussy.\n\nShe positioned him in the right spot and settled down on the big dick. Her pussy was so wet, Jason sunk in several inches immediately. The moist tube hugging his cock.\n\n\"Oh, shit...I love your dick,\" Beth extolled.\n\n\"Hey...how come I didn't get to decide? Oh, geez...\"\n\n\"Complaining, big boy?\" Beth asked as she settled down on him, taking his cock almost completely inside her tight pussy. \n\n\"Urgh...not really,\" Jason admitted with amusement.\n\nBeth was so hot she didn't need time to adjust to his big dick. She started pumping up and down on his stiff cock, nearly taking him to the balls. Jason watched her firm tits bouncing erotically as she fucked his cock. She mewed and hissed as his cock stretched her tight pussy, sending shivers of pleasure up her spine. Jason's hands came up to play with her fabulous tits, and tweak her pink nipples, as she rode him like busting bronco. \n\n\"Oh, god...that's so good,\" Beth moaned. \"Oh, shit...I'm going to cum soon.\"\n\nJason's hands teased Beth's taut nipples as she pistoned on his cock. Her climax crept up like a tiger about to pounce. She rubbed her own clit as her cunt muscles tried to squeeze the life out of his deeply probing pole. Beth's head held back with her mouth open in a silent scream as her orgasm peaked.\n\n\"Argh,\" Beth howled. \"So good...\"\n\nJason felt the heat of her pussy, her clinging cuntal walls, and the warm wetness of her cum. It was too much for his earlier tortured penis and he exploded inside her like a volcano. The first blast of his cum pushed searing heat into the depths of Beth's spasming cunt. The feeling of him cumming inside her as she came, lengthened and intensified Beth's orgasm. \n\n\"Oh, my god,\" Beth growled as her orgasm tore through her.\n\n\"Shit, babe,\" Jason gasped.\n\nBeth rode out her orgasm and then collapsed on top of Jason. Their panting and sweaty bodies molded together in a loving post-coital embrace. They lay that way for a long time before Jason got up to get them both champagne. They drank to their engagement and to the money. So much money! They laughed and shrieked about the money and drank champagne. Beth joked about how he'd won the money, to which they laughed together. They toasted to the number eight and number twenty. They drained the bottle of champagne before they fucked again, until both came, and dropped exhausted to the bed. \n\nJason and Beth set their marriage date for the fall after they graduated. For the next two and half years they were inseparable. They loved each other deeply. Jason went on to set a handful of school and conference records. He won the conference in his events his last three years of school and competed in the nationals each year finishing a high of fourth in the 200 breaststroke. He received All America status and even tried out for the Olympic team. His one true fan always there to cheer him on.\n\nBrad and Haden fell in love too and dated through college. The two couples often doubled dated. Beth and Haden remained best friends and both pledged to be the maid of honor for the other at their weddings. \n\nWith Mark's help, Jason found safe and secure places to invest the money. By the time they graduated, the money had even grown nicely. Jason and Beth were able to afford a house in an exclusive neighbor just outside of Princeton which they bought right after graduating. They started a wonderful life together after a beautiful wedding in September followed by two weeks in Fiji. \n\nDr. Jenny and Dr. Samuelson attended the wedding as did Mark Klerk, his wife Stephanie, and Chad. Chad and Connie were about to celebrate their own wedding that November. Of course, Brad and Haden were the best man and maid of honor. Their own wedding planned for the following summer. The fact that Jason had popped all three women's cherries rarely came up in conversation. \n\nDouglass Caulfield had passed away the summer of Jason's sophomore year. Jason, Beth, and Mark had all attended the funeral. Many of the Theta Chi brothers were there too. They praised their benefactor and mourn his passing. \n\nSo far the secret had remained relatively intact. Jason's parents, though somewhat surprised by the extent of the award for the top honors in the pledges contest, accepted it none-the-less. His parents loved Beth and took her into the family with ease. Life for Jason and Beth Robinson couldn't have been better as they settled into their new home. \n\nSitting in his newly furnished study one day, Jason waved to his pregnant wife as she walked by with a watering can. He reflected on the last few years since going to Princeton, meeting Beth, getting married, landing a sales position with Speedo swimsuits, and having Beth tell him one day she was pregnant. Beth became a teacher at the local elementary school. \n\nJason thought back to the day after hell-night and his meeting with Mark before going off to work at the infirmary. He remembered sitting there as Mark explained the contest, his first thoughts being how crazy is this. Can this really be true? Can there really be a contest to be the best at convincing virgins to surrender their virginity and enjoy the pleasures of sex, a contest for only his family line within Theta Chi? One with an unbelievably lucrative potential payout and one called The Cherry Poppers."
    ],
    "authorname": "BlewWater69",
    "tags": [
        "virgins",
        "frat",
        "college",
        "cherries"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-28-2"
}