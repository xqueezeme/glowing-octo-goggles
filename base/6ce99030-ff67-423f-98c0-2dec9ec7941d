{
    "title": "Uncharted Territory Pt. 03",
    "pages": [
        "Author's Note: If you have not read Parts 1 and 2 yet, you might find it helpful to do so.\n\nRedux\n\nShe ripped the door open after he knocked, yanked him in, and urgently said, \"Come on, there's a fire!\"\n\nShe tugged him down the hallway to the bedroom. Without skipping a beat, she ripped his belt open, shoved his pants and underwear to the floor, sucked his penis into her mouth, lathering it up and making certain it was good and hard\u2014it was\u2014then hiked up her short skirt, plopped down on her back on the bed with her ass right on the edge, lifted her legs and rested her ankles on his shoulders. \"Quick. Hose me, I'm burning!\"\n\nWrapping his arms around her thighs, his cock sniffed out the fervor of her wet pussy and found its way in with no assistance. He plowed into her with forceful strokes, amazed at the control and penetration he got from standing. She closed her feet in on his face; the scent was clean, fresh and evocative, and he couldn't help but rub his cheeks against her perfumed soles.\n\nWhen he looked down, she had unbuttoned her shirt opening her milky breasts to his view. Keeping her firm thighs inside his arms, he reached down to fondle those beautiful globes, as well as attending to the hard nipples that stood atop like bullets embedded in her skin.\n\nThe sound of his balls slapping against her ass was soon drowned out by her moaning, and the frown of anticipation on her lovely face was a sign that she was close. In seconds, the intensity increased and her vaginal muscles tightened around his solid rod as a prelude to the spasms that followed. With gritted teeth, her orgasm swallowed her.\n\nThe mood was not lost on him and he continued thrusting to the slurping sounds of her now juicier pussy and promptly added to the liquid with a blast of steamy, hot semen. As he slowed his pumping, he could see the pearly white coating on his shaft.\n\nStill not done, when he pulled out of her, she rotated her body around, rolled onto her chest and licked the froth from him, emitting short \"mmmm's\" in accompaniment. When he was soft and clean, she raised herself to a squatting position, pressed her sperm smeared lips to his, granting him a taste of his own come. Then she pulled away and smiled. \"Hey, baby.\"\n\n\"Hello, Jenna,\" Ron greeted, licking a little bit of sticky from his lips.\n\n\"I thought you'd never get here.\"\n\n\"Weekend traffic out of town.\"\n\n\"I got a little excited with anticipation waiting for you,\" she explained.\n\n\"I gathered. But it was a nice welcome.\"\n\nJenna beamed. \"Well, now that I can think clearly again, are you hungry? I'd like to take you to dinner.\"\n\n\"Yes, I'm hungry. But I don't want you to take me to dinner. I'll take you.\"\n\n\"I invited you up here. I want to take you to dinner. Why can't I? Would that be an offense to your masculine pride or something?\"\n\n\"Or something.\"\n\nShaking her head in disbelief, Jenna said, \"We can discuss who'll pay later. But I really am hungry, so let's go. What's your preference? I don't do Greek/Lebanese or French. My favorites are Mexican, Seafood, Steak or Italian.\"\n\n\"Any of the last three are fine. I was married to an Italian so that has actually become my favorite.\"\n\nWith arched eyebrows, she commented, \"I would have thought you'd be tired of it, or at the very least, would be rebelling against it.\"\n\n\"I actually liked Italian before Dana and I still do.\"\n\n\"Okay. Did you two have a favorite little Italian place?\"\n\nRon shook his head. \"Dana and her family cooked their own Italian food, and in their minds, no restaurant measured up. In fact, they didn't care to eat out much at all.\"\n\n\"Everyone needs a little Italian place, someplace special to go to, someplace they can call their own. We'll have one. And I think I know just the place.\"\n\n\"Did you and Jerry have one?\"\n\n\"Jerry didn't like to eat out either, didn't like to spend the money,\" Jenna said with a grimace.\n\nThe discussion carried them through the drive to Pantangelo's, a quaint little Sicilian style restaurant tucked out of the way in a quiet neighborhood. They ordered antipasto, Chicken Parmigiana for her, Veal Parmigiana for him. Over a bottle of Chianti in a basket, Jenna resumed.\n\n\"So, were you apprehensive about coming here?\"\n\n\"Apprehensive? What do you mean?\" Ron asked, though he thought sure he knew.\n\n\"Last weekend, you were concerned about being able to perform in bed. But by the time you dropped me off Sunday night, I felt as though we had solved your dilemma. I was just wondering if going a week without sex might have caused a relapse. Unless you haven't gone a week without it.\"\n\nCaught off guard, Ron hesitated. \"Well, that was about as subtle as an Indian uprising.\"\n\n\"So, you have been active during the week,\" Jenna said matter-of-factly, as though she knew for sure. But how could she?\n\n\"What makes you think that?\" he asked as though he had something to hide\u2014well, he sort of did. Although, he didn't know what made him think he had to hide it.\n\n\"That asshole ex-husband of mine had many faults, more than he had virtues. But he really knew how to read people. I guess some of it rubbed off. And I'm sorry if I am out of line; however, if you had not, you would have answered no right away. The fact that you didn't answer right away suggests that you have been active and you don't want me to know.\" She leaned closer and touched his hand tenderly in a gesture of comfort. \"I have no right to know, and I wasn't trying to pry, I was just making conversation. If you did, it doesn't bother me. In fact, I would be proud to know that what we did last weekend maybe gave you the courage to do it with someone else.\"\n\nRon was dumbfounded and speechless.\n\n\"As I told you last weekend,\" Jenna went on, \"even before I was married, I was sexually aware. If I had to pick one good thing about being married to Jerry, it's that he didn't make me feel ashamed that I enjoyed sex so much, and as a result, you'll learn, if you haven't already, that I'm as sexually open-minded as certainly any woman you'll probably ever meet, and probably most men.\"\n\nRon smirked, \"You say the most extraordinary things.\"\n\n\"Don't you believe me?\"\n\n\"The problem is, I do,\" he answered with a shake of his head.\n\n\"And why is that a problem?\"\n\n\"It's not really\u2014figure of speech. I just never know what to expect from you.\"\n\n\"Is that bad?\"\n\n\"Not so far. But it does keep it lively.\"\n\n\"So, do you like surprises?\"\n\n\"I have a feeling it doesn't really matter.\"\n\nJenna laughed. \"That's good. And speaking of good, was she?\"\n\n\"Was who?\"\n\n\"Whomever you had sex with this week.\"\n\nRon had to chuckle at her unwavering pursuit of this subject. But it quickly occurred to him that one of his reasons in coming to spend the weekend with her was to see if she was as good as last weekend. So far, she was. But she had also opened herself up to scrutiny with her assurance of open-mindedness. By her invitation for him to spend the weekend with her it was apparent she still wanted an ongoing relationship. The foundation of any relationship is honesty, and if he was going to consider entering into a relationship with her they had to be honest with one another. So, maybe this was an opportunity to see if she was really that open-minded. It might also give him some insight into what a relationship with her might be like. \"Which one?\" It was his turn to surprise her. And he did.\n\n\"There was more than one?\" Jenna clearly hadn't expected that. \"Both.\"\n\n\"Which two?\"\n\n\"There was more than two?\"\n\n\"Three, actually.\"\n\n\"My God, did I underestimate you.\"\n\n\"What does that mean? I thought you said you were open-minded?\"\n\n\"Oh, I am,\" Jenna answered positively. \"I don't have a problem with that. You've exceeded my wildest expectations. That's all. I'm dying to know more.\"\n\nSo, he told her\u2014in some detail.\n\nWhen he finished, Jenna remarked, \"Damn, I created a monster!\"\n\n\"You wanted to know.\"\n\n\"I'm not complaining, Ron. Anything but. I wish I had been so lucky this week. For me it was just frozen dinners, TV and a well-placed finger. But it has made me horny as all hell.\"\n\nTaking a few minutes to finish his meal, Ron also used the time to evaluate her response. It seemed as genuine as it could be. And he was impressed. \"You were right; this is a great Italian restaurant.\"\n\n\"I'm glad you liked it. What do you want to do now?\" she asked.\n\n\"I don't know. Did you have something in mind?\"\n\nJenna shrugged. \"We can go to a movie, although personally, I wouldn't want to waste our brief time together on a movie; or we can go to a club and dance, or just hang out, or we can just go back home and fuck our brains out.\"\n\n\"Somehow, I have a feeling that whatever else we do, we'll end up doing the latter eventually anyway.\"\n\n\"Good. Going to a club would be fun.\"\n\n\"I didn't mean . . . I thought you were so horny?\"\n\nJenna merely flashed a curious smile.\n\n* * *\n\nJenna managed to intercept the tab for dinner. Also, Ron should have realized it wasn't as simple as her putting her lust on hold until later. They made small talk about dancing and music while he drove them downtown to the club to which she wanted to take him. They both liked music and dancing, but neither of their spouses did so neither had done much of it. Jerry had liked to go to clubs, but mostly because it was a place to pick up other singles or couples.\n\nWhen they pulled into the parking lot, Jenna directed Ron to park in a corner out of the way, ostensibly so his car might not get damaged by some drunken idiot. Even though he knew she was full of surprises, he hadn't yet trained himself to always expect them. So, by the time he exited his vehicle and walked around to gentlemanly open her door, she had her seatback all the way down and was laying with her skirt hiked up, panties removed (he thought sure he had seen her put some on) and her legs spread.\n\n\"I thought you might like to wet your whistle before we went inside and got thirsty from dancing,\" she said, her forefinger playing with her teeth teasingly.\n\nWhatever else he thought about this, and he wasn't exactly certain what that was, the sight of her delicate pussy lips that just ever so daintily guarded the cave of pleasure, with a few drops of sweet nectar peeking out like dew on the morning grass, was just too inviting for anything else to matter. With a quick glance around to make sure no one was near, Ron's tongue zeroed in and delicately swiped the sugary droplets, then brushed her closed lips with the tip of his tongue without spreading them. A little shiver engulfed her body. He then went to work lapping her juices and sucking her clit. Wishing his tongue was longer, he darted it in as far as he could and swirled it around.\n\nJenna's breathing quickened. She moaned, and then apparently realizing where she was, she pursed her lips to mute what were undoubtedly some loud noises wanting to escape. As usual, after the orgasm subsided, she pushed his head away when she became too sensitive to take any more.\n\nWhile she caught her breath, Ron reached into the side pocket of the door for some napkins. He always took extra when visiting fast food places to keep in the car for . . . well; he had found a new use. He dabbed his mouth and offered clean napkins to Jenna. She cleaned herself, and then slipped her panties back on.\n\n\"That ought to hold me for a little while,\" she remarked, sliding out of the SUV and fixing her clothes.\n\nRon could only roll his eyes, which thankfully, she did not see.\n\n* * *\n\nThere was nothing remarkable about the club when they entered and headed toward the dance floor. It was big and dark with bars on either side wall and a stage in the middle toward the back with a DJ. To the club's credit, the music was good and loud, but not so much that two people had to shout at the top of their lungs to hear one another. They found a spot on the dance floor and began gyrating to the pulsing sounds. Ron observed the other dancers on the floor. No one was dressed up, but many women were dressed down: short skirts, loose tops, braless. Everyone just seemed to be carefree about everything.\n\nAfter a couple of dances, Jenna was ready for some liquid libation. Instead of heading for one of the bars on either side of the dance floor, she led him to an out-of-the-way one behind the stage area, where it was still dark, but night quite as bad, and better still, not quite as loud. Most of the bar stools were taken, but they did find a booth across from the bar. She slid in one side and pulled him in beside her. A waitress in a skimpy black denim dress uniform, which was very short on the bottom and buttoned only to her navel up top revealing a very respectable set of boobs, appeared to take their order.\n\nIf that hadn't made Ron completely hard, a glance at some of the males and females on the bar stools finished the job. One woman was sitting facing away from the bar with her legs crossed, the high heel of her pump locked on the rung of the stool, her skirt having ridden up to her ass, sipping a martini. On the next stool, another woman was likewise sitting, except that her legs were spread around her male companion's waist and he appeared to be ever so slightly dry humping her. Then there were two women who had their hands all over each other and periodically leaned in for kisses.\n\nWith raised eyebrows, Ron remarked, \"Interesting place.\"\n\n\"No inhibitions,\" Jenna explained, quoting the name of the club. \"You leave them at the door.\" She then casually allowed her hand to fall to his lap where she petted his swollen rod through his pants. He quickly glanced at her, but she only returned a dreamy smile.\n\nThe waitress appeared with their drinks and he tried to squirm to cover up, but Jenna had wrapped her hand around his cock and squeezed to hold him in place. When the waitress stooped to serve their drinks, her breasts were clearly visible through the wide open top of her dress, pointed nipples and all. She spotted Jenna's hand, which gave a suggestion of Ron's size, then reached down and gave his prick a quick squeeze of her own. \"Nice,\" she commented. The two women exchanged smiles of appreciation, then the waitress went on about her business.\n\nIt shouldn't really have been a surprise what kind of place this was, knowing Jenna. Ron had always thought he was sexually open-minded also, but that was when it was only in his mind. He had dreamed of coming to places like this in his marriage, and now that he was here and actually living that open-mindedness, he wasn't really certain how he felt about it. It was overwhelming, to be sure. Most of all, it was still hard to believe that this was the same woman with whom he served on the Board of the organization.\n\nJenna wrested his attention back by twisting toward him and draping her leg over his, She then pulled his head toward her and kissed him passionately. Now, it was her thigh rubbing his cock. When she heard the music change to something slow, she pulled her lips away and pushed him out of the booth, sticking a reserved sign on the edge of their table that was in a slot against the wall. \"Let's dance again.\"\n\nA slow song, he thought, and couldn't even imagine what was going to transpire on the dance floor. He wasn't disappointed, and for once, not surprised. People were basically fucking standing up with their clothes on. It couldn't have been more suggestive unless everyone had been naked. All groups were represented, male-female, female-female and male-male. A nearby couple had the man with his hand up the woman's shirt from the shirttail fondling her tit and nearly pushing it out the top of the three buttons that were unbuttoned. In another couple comprised of two women, they each had their hands down the back of each other's stretch waistband pants, and judging by the extended knuckle that protruded from one, it was a good guess she had some of her finger inserted in the other's asshole. Then there were two guys dancing, their hard-ons clearly outlining ridges in the front of their pants and making no secret of the fact that they were rubbing their cocks together. And then, of course, Jenna had to get in the act by grabbing Ron's ass and grinding her pussy against his lump.\n\nWith all this going on, Ron wasn't certain he was actually keeping time to the music, but it didn't seem to bother Jenna, nor anyone else. So, he just went with the flow. Interestingly enough, three slow songs in a row were played, one fading into the next, almost as though the DJ wanted to be sure everyone got off. Ron wasn't attempting to, and so, he didn't. But it was possible that Jenna did if her soft whimpers and sudden stops were any indication. He was beginning to think she was a nymphomaniac, and the notion would be something to consider in allowing a relationship to develop.\n\nThey returned to their booth and their half-consumed drinks. \"Having fun?\" she asked.\n\nHe shrugged. \"It's not dull. That's for sure. Where did you find this place?\"\n\n\"Jerry found it.\"\n\n\"Of course. And the two of you, no doubt, brought people home with you.\"\n\n\"A few times. That's what some people are looking for: to pick up or be picked up. If you were interested, the waitress would probably be willing.\"\n\n\"What makes you so sure?\" Ron asked with some disbelief, visions of a threesome briefly flashing through his head. It was one of his sexual fantasies.\n\n\"She touched your cock, the look she and I exchanged,\" Jenna explained, knowingly. \"Are you interested?\"\n\n\"Are you?\"\n\n\"I could be.\"\n\n\"What does that mean?\"\n\n\"I want to make you happy. If you want to do a threesome, I'm game.\"\n\n\"That doesn't really answer the question.\"\n\n\"Would it make you feel better if I said I did?\"\n\n\"I don't want you to say something just to make me feel better, or say what you think I want to hear.\"\n\n\"I'm sensing you do want to do a threesome,\" Jenna prophesied.\n\n\"I'll be honest and say it is a fantasy of mine,\" Ron admitted, \"but to just bring home a stranger\u2014I don't think I want it that way.\"\n\n\"You want to invite her for a drink?\"\n\nRon gave Jenna a look of exasperation.\n\n\"Relax. I'm just kidding.\" She chuckled a little. \"I'm sorry if I made you uncomfortable.\"\n\n\"Jenna, this is all just so new to me,\" he explained. \"I don't want to seem like a prude or a novice, but just about everything we've done together is uncharted territory for me.\"\n\n\"I understand. I truly do. I'm just trying to help you loosen up. I guess I'm just not going about it the right way. Coming here was probably too much too soon.\" Her tone was regretful.\n\n\"I appreciate that. I really do. This is an interesting place. I knew that places like this existed, but I always thought they were in New York, Los Angeles, places like that.\"\n\n\"There are actually lots of clubs like this in towns like this. There's one in your city. But they all keep a low profile because there are still too many people who are uptight about sex. And if you think this place is wild, there are places\u2014none of which I have been to\u2014in the bigger cities like the ones you mentioned that are much wilder. Here, there's a lot of suggestiveness\u2014\"\n\n\"I would call some of what I've seen more than suggestive,\" Ron countered. \"There was a couple at the bar before; she had her legs spread and he was dry humping her. Then there were a couple of women on the dance floor during that slow song and I'm sure one had her finger up the other's ass.\"\n\n\"That was suggestive. At these other clubs I'm talking about, the guy would have been really fucking the woman at the bar. She would have had her panties pulled to the side and he would have only been unzipped. And if you were there sitting next to them, you would see his naked cock penetrating her pussy. And the two women,\" Jenna nodded, \"the one's pants would have been pulled below her cheeks and you would have known the other's finger was in her ass.\"",
        "\"Okay. Your point is well-taken,\" Ron agreed. \"And I have heard about some of those places, and hopefully, one day I'll be more willing to visit one.\"\n\nJenna beamed. \"I certainly hope I'm the one you're there with.\"\n\n\"Why the fascination?\"\n\n\"It's the eroticism, the stimulation, the arousal,\" she pointed out. \"Those things are what make for great sex. Whether you have to come to a place like this to feel those things or you have a partner who can make you feel them, or do a threesome, that's what it takes. I mean this as no offense toward your marriage, but why was the sex no good? Because as you've pointed out, all she did was lay there. On the other hand, why was all the sex you had this week so good?\"\n\nHe nodded his understanding. \"So, why did we come here? Were we not properly arousing each other?\"\n\n\"Au contraire. I just thought it might be an added inducement. But I think we've had enough.\" She downed the remainder of her drink.\n\nThe waitress was there instantly, as though waiting. She took a seat opposite them. \"Mind if I sit for a minute?\" She glanced at Jenna.\n\nRon detected a barely perceptible shake of Jenna's head and the waitress returned an equally unperceivable nod, as though the latter wanted to know if she was going to get lucky and the former told her she was not.\n\n\"Can I get you another round?\"\n\n\"I think we're done for the evening,\" Jenna said.\n\n\"I doubt that,\" the waitress mumbled. \"Please come back. I look forward to serving you again.\"\n\nSomehow, Ron knew that there were unspoken volumes in her statement.\n\n* * *\n\nJenna was unusually docile during the ride home. Ron called her attention to this.\n\nShe flashed a smile, but in the dim light of the vehicle, it seemed forced. \"I felt as though I maybe have been coming on too strong.\"\n\n\"Well, I must say\u2014\"\n\n\"Oh, God, here it comes,\" she interjected worriedly.\n\n\"\u2014that you did warn me that you were very sexually . . . motivated . . . and that you're impatient. I just keep forgetting to expect the unexpected.\"\n\n\"Thanks. That was very kind. But you're coming from a much less sexually aggressive background and I should be more sensitive.\"\n\n\"I wouldn't call it 'less sexually aggressive,'\" Ron snickered. \"I would say more sexually passive.\"\n\nThat elicited a brief giggle. \"But it's true what I told you last weekend. You exude this, this . . . magnetism . . . that makes you so hard to resist. Believe me, as sexual a person as I admit to being, I've never thrown myself at a man like I have you.\"\n\n\"I don't think I exude anything,\" Ron disagreed.\n\n\"Oh, yeah? I think there are three other ladies who might differ.\"\n\nHaving no counterpoint for that, Ron let it go, though he still wouldn't concede to her assessment.\n\n* * *\n\n\"I think I'm going to clean up a bit,\" Ron said when they arrived back at her apartment.\n\n\"That sounds good. I will too. Use the hall bathroom and I'll use mine.\"\n\nRon toyed with the idea of showering, but decided against it. He could hear water running in the other bathroom. He didn't think he took that long; however, when he entered her bedroom, Jenna was already in bed and a sight to behold. Totally nude\u2014no real surprise there\u2014she was laying on her stomach with her arms raised and her head turned toward the empty side of the bed\u2014his, he surmised\u2014resting in her hands. Only her legs up to her knees were covered. Above that, her toned thighs led to the two perfectly rounded globes of her ass cheeks which allowed a hint of her pussy. There was a dramatic slope to her lower back and on to her upper back with her flattened breasts peeping out under her arms.\n\nInstant hard on.\n\nWith nude being the attire for bed, Ron quickly removed his clothes and approached the bed. She was so desirable he didn't know where to begin. Perhaps to cheer her up or show her a different side of him, and definitely to surprise her, with her legs together, he crawled over her with his arms and legs straddling her, stopping at those beautiful rear orbs. Ever so gently, he spread her cheeks, aiming his pointed tongue at her puckered anus. She let out a guttural moan of delight, which was his cue to continue.\n\nHe was in more uncharted territory with this, but it was something that, when he read about it in Literotica stories, it turned him on. He thought it might be one of those things that was arousing to read about but not so much to actually do. However, as he dipped his tongue into her asshole, he could feel his dick swell. \n\nJenna felt it and murmured, \"Oh yeah, baby.\" She spread her legs, allowing him access to her pussy also, but he couldn't get too much of it, so he turned her over and bent her legs back exposing both holes to him. He continued teasing her rear end, then started alternating between that and her snatch that was getting wetter by the second from the combination of her own secretion and his saliva. While he focused on her anus, he slipped his forefinger into her vagina, moving it back and forth and brushing against her clit. After a few minutes of this, amid her emission of a variety of wailing sounds, he switched tongue and finger. Then she let out a long, whimpering sigh.\n\nFinally, he felt her body undulate, followed by a tightening around his tongue of her pussy muscles and the same on his finger in her anus, and she came in a torrent shouting a stream of \"yes's.\"\n\nRon rolled off of her onto his back beside her. A minute later, Jenna rolled on top of him. They kissed. She then kissed a trail down his chest, detouring to his nipples, licking, nibbling, sucking, driving him wild; then resumed her path, cleaning his navel with her tongue\u2014it tickled more than aroused\u2014and on to his cock. She licked around the bulbous head, teasing and coating it with a light sheen of saliva, then lubricated his shaft before taking it all the way down her throat. Up and down she lovingly went for several strokes. Next, she focused on his scrotum, bathing each testicle as she had his rod. Finally, not to be outdone, she pushed his legs up, as he had hers, so she could access his asshole. \n\nAt first, he was a little uncomfortable with a woman licking his anus, but the feeling passed quickly as pleasure overtook him. All the while, she was pumping his penis. She lifted her head a second only to spit in her hand to help it glide smoothly up and down his steel shaft. On her return to his bottom, she darted her tongue into his anus, and it was all he could do not to fire a load of sperm. As it was, there was a serious amount of pre-cum oozing out that she mixed with her saliva to assist with lubrication.\n\nRon wanted to hold out as long as he could because this trip into uncharted territory felt so incredible, but between the magic Jenna was working on him and the residual arousal from the club, he could not control the ropes of semen that burst so powerfully from his cock, the first hit him on his forehead and subsequent globs landed on his face and chest creating a trail down to the last few dribbling drops that puddled in his navel.\n\nThis orgasm had been so intense that he was breathing so hard he thought he might hyperventilate. But he quickly recovered when Jenna started working her way back up, slurping the few drops still lingering in his slit, then sensually lapping up all the cum on his abdomen and chest. When she reached the gob on his chin, instead of ingesting it, she moved it with her tongue up to his lips, and then kissed him passionately with it. The fact that he was tasting his own cum aside, the erotic nature of it all was enough to send a tingling down to his balls. Finally, she inhaled the spreading pool on his forehead.\n\nJenna did not move off of him, instead lifting her body enough to gaze into his eyes. There was lust, for sure, but something else that Ron couldn't identify. He also thought she might want to say something, yet she maintained her silence. He finally broke the quiet by saying, \"That was unbelievable!\"\n\n\"It was,\" she agreed, eagerly. She eased off to his side leaving her head resting on his shoulder, her thigh draped over his.\n\n* * *\n\nThe pitter-patter of rain falling on . . . something . . . brought Ron to wakefulness. But the bright, diffused sunlight peeking through the blinds confused him. The sound of the dropping water, he gradually realized, was actually coming from the bathroom\u2014the shower. He now noticed he was in bed alone. Jenna was already up.\n\nRising grudgingly, he padded into the bathroom and took a leak, noting that it was nearly noon. Jenna spotted him through the distortion of the water clouding the glass shower doors. \"Good morning, sleepyhead.\"\n\n\"And to you.\" He frowned. \"How long have you been awake?\"\n\n\"Not long. It was hard not to pounce on your luscious body, but I decided to be kind and let you sleep. Sorry the shower woke you. I'm about finished, but if you want to step in, I'll leave the water running.\"\n\nHe did just that, but she remained a while longer. Sniffing her sexy body, his cock began to rise to attention.\n\n\"Now, that's what I like. A good morning salute,\" she commented, spying his organ levering up. She stepped back under the spray to allow the warm water to wet him. When he was at full staff, she couldn't help herself and instructed, \"Turn around.\"\n\nWithout question, he complied, and a minute later, she pressed herself against his back, and the touch of her breasts and nipples against him sent a shiver down his spine. Her hands came around full of soap and grasped his cock, then started whacking him off. She supplemented the jerk-off by planting kisses on his wet back. He braced himself against the rear wall of the shower stall as her other hand fondled his balls. Reaching for the soap, she re-lathered her hands and went back to stroking with one while the other now soaped his ass crack. Her soapy middle finger entered his anus, twisting around. The combination of that and the wetness of their bodies pressed together provided additional stimulation and had him shooting in no time.\n\nWhen his erection diminished, she slapped his ass and said, \"All clean. Take your time. I'm getting out and making brunch.\"\n\n* * *\n\nAfter completing his morning\u2014to use the term loosely\u2014routine, Ron slipped on a pair of boxer shorts that he normally slept in to go into the kitchen to see what the plans were today in order to dress accordingly. Again he was surprised, but shouldn't have been, to see Jenna cooking topless with only her blue jean short skirt on, and he'd wager, nothing underneath. So, as it happened, he was not underdressed.\n\n\"Cooking casually, are we?\"\n\nShe looked up, sliding an omelet from a pan to a plate. Another omelet had already been plated. \"I love going around topless. It gives me such a feeling of freedom. Sit at the table.\" \n\nDifficult though it was with those perfect tits staring at him, Ron managed to eat the delicious food. \"What's on the agenda for today?\"\n\n\"I don't have anything planned. We could go to a movie, although personally I wouldn't want to waste our brief time together\u2014\"\n\nHe had to snicker at her use of the exact same statement from last night.\n\n\"\u2014or we could go out to the lakefront, go shopping, sightseeing, or we could just be lazy and\u2014\"\n\n\"Stay here and fuck our brains out?\" he finished for her.\n\nShe laughed at her predictability. \"Yes, but I don't want to burn you out.\"\n\n\"I'm game for anything.\"\n\n\"You realize the implication of that statement?\"\n\nRealizing what he had said, he added, \"Not when I made it.\"\n\n\"You wish to retract it?\"\n\n\"I wish to clarify it.\"\n\n\"Proceed.\"\n\n\"I'm game for anything reasonable.\"\n\n\"Would you agree that 'reasonable' is somewhat subjective? That what I consider reasonable, you might not, and vice-versa?\"\n\n\"Yes. So, what do you have in mind, he asked hesitantly?\"\n\n\"I'm just messing with you. Let's go out to the lake. It's a beautiful day. I love this time of the year. The days are warm, evenings cool. Winter's not far away. We should take advantage of the nice weather while we can. Besides, it's a public place. Can't get into too much trouble there.\"\n\n\"Sounds . . . reasonable.\" But somehow, he doubted it.\n\n* * *\n\nThe proof was in the fact that Jenna wore little more than while they were eating: that very light bra she had worn last weekend with a button up, short sleeve knit top that she didn't have to leave any buttons undone because it was already very low-cut, the first button being even with her nipples; a pair of deck shoes; panties, he had no idea, but he would let his bet stand that she was without. Ron wore denim trousers, not to be confused with jeans (which he found uncomfortable), a polo shirt and similar deck shoes. They also brought light jackets in case it got breezy.\n\nThey parked near the marina and stopped in a convenience store for a couple of soft drinks. On their way out, they passed an older gentleman coming in.\n\n\"Jenna!\"\n\n\"Bret! How are you?\n\n\"It's so good to see you. We miss you so much in the neighborhood. But we're also glad you're not with that monster anymore.\"\n\n\"You! You have no idea how glad I am.\"\n\n\"This your new beau?\"\n\nJenna glanced at Ron. \"I hope so. Bret this is Ron. Ron, Bret.\"\n\nThe two men shook hands, but Bret's attention was on Jenna. \"I hope he treats you better.\"\n\n\"Absolutely. Like night and day.\"\n\n\"That's just wonderful. So, what are you guys up to?\"\n\n\"Just taking advantage of the wonderful weather,\" Jenna told him.\n\n\"Yes, so are we. Going to take the boat out. Weather's been so fickle; this might be our last chance before the colder temperatures are here to stay.\" Bret finally addressed Ron. \"Do you like sailing, Ron?\"\n\n\"I do. Used to have a small 20 footer.\"\n\n\"Great, because I just had an idea. Why don't the two of you join us? You might even be able to talk us into staying on board tonight. Brianna would love to see you.\"\n\n\"What do you have?\" Ron asked.\n\n\"Forty-five foot Catalina.\"\n\n\"Nice.\"\n\n\"Gee, that's very nice,\" Jenna said hesitantly.\n\nBoth men sensed her apprehension.\n\n\"Well, I'm going to run in here and pick up a few things while you decide,\" Bret said. \"See you back here shortly.\"\n\nBret stepped in and Jenna and Ron walked out.\n\n\"I'm sorry,\" Jenna offered.\n\n\"Why? Sounds like it might be fun.\"\n\n\"What?\"\n\n\"Do you not want to?\"\n\n\"I didn't think you would.\"\n\n\"It sounds reasonable. And I love sailing. Tell me about them.\"\n\nJenna shrugged. \"Bret and Brianna were Jerry's and my next door neighbors.\"\n\n\"Were they one of the couples you\u2014\"\n\n\"Oh, no,\" Jenna said, shaking her head. \"They can't stand Jerry. Oh, they were polite neighbors, but they really didn't like him. Jerry tried to convince them to join us once, but Brianna took offense and ever since they never had any use for him. They still got along well with me.\"\n\n\"Well, if they dislike Jerry they can't be all bad.\"\n\nJenna smiled.\n\n\"Anything else?\"\n\n\"Bret is a few years older than Brianna. In fact, she's actually just a couple of years older than us. And . . . she's very attractive. It's been rumored that he can't satisfy her, but they're still together and seem very much in love, so that rumor seems nothing more than just that.\"\n\n\"So, what do you want to do?\" Ron asked.\n\n\"It would be fun.\"\n\n\"Then I'm game.\"\n\n\"You realize the implication\u2014\"\n\n\"Yeah, yeah.\"\n\n* * * \n\nTo say the yacht was beautiful was a huge understatement for anyone who loved sailboats as did Ron. But it was instantly dwarfed by the stunning beauty that stepped up from below deck into the cockpit. She had the most exquisite features with golden hair that rested softly on her toned shoulders; a tight tank top that showed off a better than average set of boobs and short shorts that displayed a pair of well-honed, shapely legs.\n\n\"Down, boy,\" Jenna whispered as they approached the boat.\n\n\"Jenna! Oh, my God, I don't believe it!\" The woman easily hopped over the railing onto the deck, bear-hugging Jenna.\n\nThey were the roughly same height so their tits pressed right into each other. Oh, to be between those, Ron thought. Interestingly, when they pulled apart, both were sporting hard nipples that had to stand an inch out. Why would embracing each other have that effect on them, he wondered.\n\n\"It's so good to see you again,\" the incredible-looking woman went on. \"The neighborhood is just not the same without you; that asshole of an ex, yeah, but not you.\"\n\n\"I miss you, too,\" Jenna offered. \"I'd like you to meet my friend, Ron, who will be able to greet you once he reels his tongue in. Ron, this is Brianna.\"\n\nRon shot her a look of annoyance.\n\n\"He doesn't have to do that. We could put it to good use elsewhere,\" Brianna said seductively, taking his hand in a manner that offered more than just greeting.\n\nSuddenly, it was becoming clearer to Ron: attractive woman married to older man who maybe can't keep up with her, dressed to entice, flirtatious, and the rumor may be more than just that. He wondered if Jenna had told him everything. \"Nice to meet you,\" Ron politely said.\n\nShe put her arm in his and Jenna's and walked them the few feet to the yacht. As they were climbing aboard, Bret popped out of the cabin, full of smiles, and said, \"Well, if we're all here, let's cast off.\"\n\n\"Allow me,\" Ron offered, jumping back on the dock as Bret took his place behind the wheel and cranked the engine to maneuver out of the slip and harbor into open water. He had the craft in motion as soon as Ron was back on board.\n\n\"I couldn't believe it,\" Brianna was saying to Jenna as the two sat on bench seats on the port side of the cockpit. \"I thought Bret was kidding when he said you and Ron were joining us.\"\n\n\"It was amazing running into him,\" Jenna said.\n\n\"What have you been doing? Still with that organization?\"\n\n\"Working mostly, and yes, I'm still with the organization.\" Jenna glanced at Ron and winked. \"That's where I know Ron from.\"\n\n\"How long have you two been seeing each other?\"\n\nRon noticed that Brianna's nipples were still firm, but Jenna's had subsided. Interesting.\n\n\"Just a couple of weeks,\" Jenna responded for lack of a better way to describe it.\n\n\"Ladies,\" Bret broke in, \"please go below and secure the cabin. We're almost in open water and we'll be raising the sails shortly.\"\n\nThe two women complied.\n\nA few minutes later, Bret gave the order, \"Let's go ahead and raise the sails.\" It could all be done from the cockpit, and with little instruction, Ron had them all trimmed in minutes. Once they were under full sail, Bret shut down the engine and steered out into the lake. The winds were mild, just enough to push them along at a leisurely pace. The light seas also made the cruise relaxing.\n\n\"Jenna's quite a girl,\" Bret commented, while the women were still below. \"She deserves a lot better than that asshole Jerry. Did you know him?\"\n\n\"No, just what she's told me.\"\n\nBret shook his head. \"I'm not sure she really knew what he was fully capable of.\"\n\n\"Doesn't sound like I've missed anything by not knowing him.\"\n\n\"Not in the least,\" Bret agreed.\n\n\"If it's not too personal, may I ask why you feel about him as you do?\" Ron tried to phrase it as delicately as possible.\n\n\"How well do you know Jenna?\"\n\nRon frowned at the change of subject and was suddenly concerned where the question was going. \"We've known each other about a year. Last weekend, we discovered we had more than a casual interest in each other, so we spent some time together, enjoyed each other, and she invited me up this weekend.\"\n\n\"Please don't think I'm being forward, but was some of this time together spent in bed?\"\n\nAt first, Ron was going to tell him it was none of his business, but he just as quickly realized he might learn something about her that was important to know. \"Yes.\"\n\n\"Man to man, was she good?\"",
        "\"Yes. Very good.\"\n\n\"Would you say eager?\"\n\n\"That might be putting it mildly.\"\n\n\"Right. Sorry about that, but I needed to make sure you knew that about her before I answered your question.\"\n\nRon nodded.\n\n\"As you've probably noticed, there are a few years between my wife and I. Now, Brianna, also, has what we will call a healthy sexual appetite. One afternoon early on, Jerry and I were talking, as men do, admiring each other's wife. I made the mistake of confiding that I couldn't quite keep up with Brianna in bed. He indicated that he and Jenna occasionally enjoyed swinging.\" Bret paused for a reaction. Receiving none, he cautiously said, \"I hope I'm not telling you anything you didn't already know.\"\n\n\"I was aware of that,\" Ron admitted in a non-committal way.\n\n\"Now, I will be honest with you and tell you that Brianna and I do allow another man into our bed from time to time so that she can be properly fulfilled. But she only does it when I am present, never behind my back. That's our agreement and I have no doubt she has abided by it. But we have never done any swinging.\" Bret chuckled. \"I mean I can barely handle my own wife let alone trying another woman. So, I told Jerry that we were not interested. A few days later, he tried to move in on Brianna without my knowing. She refused and told me about it, so I confronted him. He apologized profusely, said he was just so swept up by her beauty he couldn't help himself, but that it wouldn't happen again. But it did. Several times. I threatened him with a restraining order and that seemed to finally end it.\"\n\nShaking his head in amazement, Ron said, \"Jenna didn't mention any of that.\"\n\n\"Because she doesn't know. Before I made that threat, Brianna considered broaching the subject with Jenna, but she didn't want to risk their friendship. As it turned out, over time, my wife was able to determine that Jenna knew nothing of the matter.\"\n\n\"Well, with everything else I've heard about Jerry, this doesn't really surprise me,\" Ron noted.\n\n\"No, I would think not.\"\n\nThe men enjoyed the sound of the wind and the waves for a few minutes before the ladies returned with refreshments\u2014topless. It took Ron a minute to pry his eyes from the magnificent set of breasts that hung on Brianna's chest; big and round, like melons. No way could they be real, but who cares? He made sure to look at Jenna's just as much. Even though they weren't as big, they were just as impressive. It occurred to him to glance around to make certain they were far enough from land\u2014they were\u2014nor were any other boats close enough, but it seemed he was the only one on board to be concerned.\n\n\"They love going topless,\" Bret remarked and shrugged. \"Who am I to complain?\"\n\n\"You'll get none out of me either,\" Ron concurred. \n\nThe wind had picked up a small amount now that they were in open waters causing the yacht to lean starboard with it. The bare-breasted women took seats on either side of Ron on the port bench, Jenna to his left, Brianna to his right, putting her next to her husband at the helm.\n\n\"I'd offer you the wheel,\" Bret said to Ron, \"but sandwiched between two gorgeous, topless women, if I were you, I wouldn't accept.\"\n\n\"If you insist I stay . . .\" Ron had his leg crossed, and it would have been uncomfortable to move anyway, what with the hard on he had developed.\n\nRealizing his dilemma, Jenna casually reached over, as she had done on a previous occasion, and adjusted his cock for him. Of course, Brianna's eyes captured the scene and went wide as she anticipated his size. She glanced at Jenna with a questioning look, who merely gestured at it as permission to examine it. Brianna turned to Bret, who tipped his head in a barely perceptible nod. His wife then caressed Ron's prick as though determining if a banana was ripe enough.\n\nImpulsively, he stood. \"I think I will take the helm, if the offer still stands.\"\n\nBret and Brianna each slid over. Ron opted to stand behind the wheel. He noted their course and the readings of the other gauges. As good as it felt to be on the open water under sail, he was having difficulty relaxing too much with what had just happened. That coupled with Bret's story about his wife, and what he had experienced with Jenna in the way of surprises, and it led him to wonder just how random was this excursion. He glanced at Jenna, who simply shrugged, as though she didn't know what was going on either. But she didn't seem the least bit uncomfortable. Of course, once again, he had allowed himself to be caught off guard.\n\n\"Jenna and I thought it would be fun to go to that little seafood restaurant on the other side of the lake,\" Brianna suggested to her husband.\n\n\"Splendid,\" Bret agreed. \"Ron, keep your course due north.\"\n\nAs the women continued to chat, about what Ron could not quite hear over the slapping of the water against the hull and the snapping of the sails in the wind, Bret stood beside him. \"Don't worry about what happened before. I'm sure there'll be much more to come. And just know that whatever happens, I'm okay with it.\"\n\n\"What else do you expect to happen?\"\n\n\"Good God, man, are you that naive?\"\n\n\"I don't think so, but I do come from a different background,\" Ron told him.\n\n\"Religion?\"\n\n\"No, no. Just . . . and you're okay with it?\"\n\n\"I believe I already explained that.\"\n\n\"Well, someday, I'll have to explain.\"\n\n\"Yes, perhaps you should.\"\n\n\"Can you take over? I've got to use the head.\"\n\nAs he descended the steps into the cabin, he signaled Jenna with his eyes to join him. He was momentarily distracted by the beautiful interior of the cabin: padded ceiling, teak deck, staterooms fore and aft, kitchenette at the foot of the steps, dinette and couch amidships on either side. How he would love to own such a yacht.\n\nHe was brought back to reality by Jenna putting her arms around him and pressing her naked tits against his back. \"What's up? No pun intended.\"\n\n\"What's going on here?\"\n\n\"I don't know. Seems you're a hit with Brianna and Bret.\"\n\n\"Did you know that they sometimes share their bed with another man?\"\n\n\"I do now, although they don't actually share. Jerry had told me a long time ago he thought they did, but he didn't say how he knew. I never really believed him. But that's one of the things she and I were just talking about.\"\n\n\"Jerry knew because Bret as much as told him, and knowing that, did you know Jerry tried to get them to swing with you?\"\n\n\"Yeah, I told you that at the store. They weren't interested.\"\n\n\"And that's all you know about that?\"\n\n\"Yes, why? Is there more?\"\n\n\"After Bret declined, Jerry continued to hit on Brianna. Bret had to threaten him with a restraining order.\"\n\n\"Oh, my God!\" Jenna was genuinely appalled. \"Although, I shouldn't really be surprised. He may have struck out with Brianna, but I have no doubt he probably cheated.\"\n\n\"You never mentioned that.\"\n\n\"Didn't I? Brianna would have bothered me, but some other woman I didn't know,\" she shrugged, \"I would have hoped he liked her better and left me.\"\n\n\"You never cease to amaze me.\"\n\n\"Sorry, it's who I am.\"\n\n\"So, what happens now?\"\n\n\"Well, Brianna is definitely attracted to you. She's asked enough questions. And don't get mad, but I gave her a brief explanation of your marriage.\"\n\n\"Oh, great,\" he said worriedly.\n\n\"Well, they don't swing. That means having me here is outside their box. So, I honestly don't know what will happen.\"\n\n\"Well, Bret said he was okay with whatever happens.\"\n\n\"How delicious,\" Jenna said with a mischievous grin. \"They might be ready to explore new ground. What do you call that? Uncharted territory?\"\n\n\"How do you feel about it?\"\n\n\"You know me, Ron, I go with the flow. And if you're bothered by all of this, just don't let anything happen. Or do you want me to ask Bret to turn around and bring us back?\"\n\n\"No, I don't want to embarrass you.\"\n\n\"Thanks, because I think it would.\" She held his face and looked in his eyes. \"What are you worried about? You're a man with a tool most women would do anything for, you've had four different women this week, what's one more? Most guys would give their left nut to be in your position.\"\n\n\"I'm not most guys.\"\n\n\"No, you're not. And I'm glad; because you're better than most guys. And I don't just mean in the sack. You're very caring and eager to please your woman. So, it's strictly up to you whatever you want to let happen.\" Jenna gave him a very wet kiss just to let him know how much she . . . cared would probably be the better word at this juncture.\n\nRon went on to the head thinking Jenna was correct. With this newfound sexual self-awareness he was experiencing, why was all the things he used to dream of when he was married so scary now that he was having the opportunity to live them? Stop being such a wuss, he chided himself. You've got a set\u2014use them!\n\n* * *\n\nThe next leg, the two hours to the north shore, went more smoothly. Ron and Bret took turns at the helm, and on the latter's shift, the former was firmly planted on the bench seat between the two gorgeous women. On this stretch, Ron extended his arms on the railing behind the girls. He allowed his left hand to caress Jenna's bare shoulder and his fingers traced circles around it. Occasionally, he couldn't help his fingers dipping to her upper pectoral area.\n\nWhen Brianna noticed this, she said to him, \"I don't bite.\"\n\nCertain of what she meant, Ron let his other hand perform the same canoodling on her shoulder. He glanced up at Bret in an intentionally casual manner and the other just smiled and nodded once. It was still somewhat bizarre to Ron, but he knew there was another whole world out there waiting for him. When his finger brushed down her chest, she leaned in closer to him as though encouraging him go further, so of course he did.\n\nMeanwhile, Jenna placed her hand on his thigh and gently ran it up near his crotch, grazing his scrotum, then back down. She continued this motion. Not to be outdone, Brianna did likewise. It would be interesting to see who, if either, would go for his zipper first.\n\nThe answer wasn't long in coming as it was Brianna who wanted to see what was behind door number one. She had it down and fished out his cock almost in one motion. Ron slid to a slouching position to give her more room. She held it at the base, admiring it. \"Wow,\" she purred. After a glance up to Jenna for approval, which, of course, was given, Brianna slid over and leaned down, slowly letting the rigid tool slide into her mouth. She went up and down about halfway a few times while cupping his balls, then concentrated on the head and stretched foreskin twisting her head from side to side. Ron put his arm around her lower back.\n\nJenna, contentedly looking on, said, \"Are you going to be able to take this on? Is it too big?\"\n\n\"It's perfect,\" Brianna cooed. \"I can take it. Observe.\" She stood and pulled her pants down, then his and straddled his spread legs, facing forward as was he. Lowering herself down onto him, a long \"Ooooooh,\" escaped her lips.\n\nJenna fondled her own tits, watching excitedly. Unable to contain herself, she slid onto the deck, and when Brianna went up too high and slipped out, Jenna grabbed Ron's cock and slipped it into her mouth.\n\nBret was watching eagerly, eyes wide. They clearly had never had another woman in the fray. His hands were rubbing his own cock.\n\nWith newfound lust at this new adventure, she slid herself over a bit to give Jenna room. Her left breast dragged along Ron's face, so he latched on to her nipple for a bit of sucking.\n\nAfter a couple of minutes of this, Jenna stood up to remove her short skirt. Ron pulled Brianna back, turning her around to face him, while feeding his steel rod onto her hungry pussy. She moaned as she rode him up and down, then changed her motion to back and forth.\n\n\"Oh, yeah,\" Ron groaned. He felt Jenna's hand rubbing his thigh and fondling his balls. At first, he thought this might be unnerving with Bret looking on, but he seemed to be enjoying the action as much as anyone, so this was becoming the thrill Ron always knew a threesome would be. \n\nAs if by telepathy, Brianna and Jenna exchanged looks to signal a change in position. Brianna eased off into a slumping position with her back against her husband's side and her left leg stretched on the seat and her right on the deck, her soaked pussy open for all to see. Jenna knelt on her right knee with her left leg bracing her on the deck. Ron assumed a similar position behind her, driving his cock wet with Brianna's juices into Jenna's waiting snatch. Somewhat to Ron's surprise, Jenna bent further forward and started licking Brianna's pussy.\n\nRon had never consciously thought about Jenna going down on a woman, but considering all the things she had claimed to do, he should have anticipated it. He decided he actually liked seeing it.\n\nBret, meanwhile, had his cock out and was stroking it. He gave Ron another nod and a wink when their eyes met.\n\nBrianna had grabbed Jenna's hair and was playing with it lovingly. This three-way posture continued for several more minutes until Brianna uttered breathlessly, \"Is it my turn yet?\"\n\nJenna didn't even respond, and instead, stood, allowing Ron to knee-walk over to Brianna's wide open vagina that was leaking a combination of pussy juice and saliva. It sucked him in and he went to work on her while Jenna squatted down on Brianna's face. The former held on to Bret, helping stroke his cock while the latter's tongue darted into a pussy licking.\n\nRon felt such sexual fervor he didn't know how much longer he could hold out, particularly with the kissing sounds Brianna was making on Jenna's slit. But amazingly or not, it was Jenna who came first and strong on Brianna's tongue. When she got up, Ron switched to a sitting position, pulling Brianna up with him, his cock never leaving her juicy pussy.\n\nStill charged up, Jenna played with Brianna's ass and Ron's balls a bit, then sat back against Bret to watch the action. He was still pulling on his dick.\n\nBrianna reached over and rubbed Jenna's pussy and fingered her clit. Still a bit sensitive, Jenna didn't let it continue for long. Besides, she was ready for another taste of Ron's cock coated with Brianna's Juices. She squatted down between his legs, and again with the telepathic exchange, Brianna pulled out to allow Jenna to again suck Ron. Brianna scooted up enough for Ron to tongue her pussy awhile, until she decided she wanted some of what Jenna was having.\n\nTwo women sucking his cock was now the most incredible sexual experience he had ever had. Jenna went up and down his shaft sideways while Brianna mouthed his balls. A minute later, they switched, and finally, they both went sideways on his rod with their lips touching.\n\nOf course, Ron had seen this performed in porno movies. It was certainly a turn on to watch, but nowhere near as stimulating as having it done. Now, he knew he wouldn't last much longer. \"I'm close,\" he groaned.\n\nJenna pulled away. \"I've already come. It's your turn.\"\n\nBrianna lay down again, resting her head on Bret as before. Ron entered her and pumped away. His cries of ecstacy begat hers and soon they were screaming in two-part harmony.\n\n\"Where do you want me to come,\" Ron yelled through gritted teeth.\n\n\"Inside her!\" Bret ordered.\n\nHad he not been so far gone, that would have ended it for Ron, but a second later he blasted Brianna's pussy with one of the strongest ejaculations he could remember having. The pressure she felt caused her orgasm to occur and she pulled Ron to her, hugging him as he continued to pump away until he made sure she was finished, even though he was losing his erection.\n\nBrianna was breathing so hard Ron feared she might faint, but gradually her intense climax slowed and they both started to relax.\n\nThat is, until Bret shouted out, \"Sonofabitch!\" and blew his load all over the wheel. He dropped to his seat, one hand still on the wheel, and finally said to the stares of the others, \"Damn, that was good!\"\n\nEveryone had a good laugh, including Bret. Afterward, he noted, \"We're nearly there. We should probably get cleaned up.\n\n* * *\n\nDinner was a fine affair. The restaurant was a rustic and quaint little place on the waterfront, but very cozy. Jenna and Brianna had only the clothes they set sail in, so they captured the attention of many male eyes as they were shown to their table.\n\n\"Enjoy it,\" Bret whispered to Ron as they walked through the dining area.\n\n\"Excuse me?\"\n\n\"Enjoy the fact that the eyes of so many men are glued to your woman and that it's you she's with.\"\n\n\"How many of them want more than to just watch?\"\n\n\"The majority.\" Like the wizened older man, Bret philosophized, \"But she's with you; she's yours. If she would rather be with one of them, she never was yours.\"\n\n\"Very enlightening.\"\n\nThey were only seated for a few minutes before the waiter, a very young man, appeared. \"G-Good eveni-ning. My name is M-Mike. I'll be your s-server tonight. May I s-start you off with a c-cocktail, perhaps a b-bottle of wine?\"\n\nThe men noticed that while he was stuttering his opening spiel, his eyes, also, were locked on the women.\n\n\"My God, boy, haven't you ever seen two beautiful women before?\"\n\nMike screwed himself up and said, \"No, sir, not like these.\"\n\nAll at the table laughed. Bret had been studying the wine list. \"A bottle of La Crema Chardonnay.\"\n\nAfter he walked off, Bret told the women, \"Ladies, put those things away.\"\n\nBoth giggled and attempted to adjust their tops to display a little less tit.\n\n\"You like to toy with people, don't you?\" Ron asked.\n\n\"He loves it,\" Brianna said.\n\n\"Guilty,\" Bret admitted with a chuckle.\n\n\"He claims it's a luxury of getting older,\" Brianna further explained.\n\nMike returned with the wine and went through the ritual of opening the bottle, pouring Bret a taste, and upon his approval, filled everyone's glass.\n\nBret held up his glass. \"To the wolf in sheep's clothing.\"\n\nThe women snickered again as everyone lifted a glass. \"See what I mean?\" Brianna asked.\n\n\"Okay, the joke's on me,\" Ron said, good-naturedly.\n\n\"Not really,\" Bret said. \"You seemed a little apprehensive at first, and then you rallied. And I have to admit, I've never stayed hard for so long.\"\n\nThat brought more laughter from the ladies. \n\n\"Maybe it wasn't me. Maybe it was the inclusion of another woman.\"\n\n\"It was the combination. But don't sell yourself short. You're not like the other guys we've had.\"\n\n\"I can attest to that,\" Brianna chimed in.\n\nMike reappeared so they all took a minute to order.\n\nWhen that was completed and the waiter was gone, Ron asked, \"So, if I'm not getting too personal\u2014\"\n\n\"Son,\" Bret interrupted, \"You've all swapped spit and other body fluids; can't get any more personal than that.\"\n\nAll Brianna and Jenna were doing so far was various forms of laughing.\n\nRon went on. \"Okay, well, I was wondering what your story was. Medication?\"\n\n\"Oh, you mean, why do we bring another man into our marriage? Well, I'm 25 years older than Brianna, and yes, I have medical issues. One is not being able to last long\u2014although, after today's action, I'm thinking I might just need more stimulation. Anyway, my condition is such that my doctor won't even prescribe Viagra.\" Bret reached for his wife's hand. A look of genuine affection, like none Ron had ever seen, came across her face. \"It's not fair to Brianna, who as you've witnessed, is as beautiful as they come, and who has a voracious sexual appetite.\"\n\n\"But there's more,\" Ron said, sensing there was.\n\nBret and Brianna exchanged a look that transmitted some approval between them to elaborate. \"He's a voyeur,\" Brianna whispered. \"He really likes to watch. More, perhaps, than he likes to participate.\"\n\nThe expression on Bret's face was not remorse or regret, not embarrassment; just one of those \"it is what it is\" looks. Until the older man explained, \"Jenna told us about your marriage, so we understood your apprehension. But, you see, my first marriage was not unlike yours. In fact, it might have been worse. She never wanted to have sex. Talk about frustrated. Porno movies worked for a while, but they became so phony, so unreal.",
        "\"Then late one evening I was taking out the garbage and I heard a woman's voice in peril, or so I thought. I traced the sound and it was coming from the house next door, a very young couple. Their bedroom window was opened very slightly\u2014it was in the spring when the temperature is perfect for allowing fresh air in. I approached stealthily, and to my surprise, the crying was actually the young couple embroiled in some very intense sex. I knew it was wrong to watch, but I couldn't tear my eyes away. It was beautiful\u2014not only because it was incredible sex, but also because they were really making love and I could feel it, feel the love.\n\n\"Well, to say I had an erection like none I had ever had was a gross misstatement. And as you might imagine, I used my hand and did something about it and had one of the most mind-blowing orgasms I'd ever had.\"\n\nHe paused when Mike appeared to serve their meal, then resumed when the waiter was gone.\n\n\"My voyeurism went on for a few years until finally my wife caught me. No explanations were satisfactory so our marriage ended in divorce. It turned out not to be the disaster I feared it would. It freed me up to see women with whom I could actually have sex. Some were good, some not so much, but with all there was no emotion, so it was hard to get too close to any of them\u2014until Brianna came along. With her, there was real love.\n\n\"We had a couple of good years until my medical issues kicked in. When I knew I would be little good to her sexually, I offered her a divorce\u2014\"\n\n\"But I absolutely refused,\" Brianna stated adamantly. \"I love Bret very much and was not willing to end our marriage so easily.\"\n\n\"We were at a party,\" Bret resumed, \"and a young man took an interest in Brianna without knowing she was married. I could see she was attracted to him. It was then that I confessed my enjoyment of voyeurism and told her that I would be willing to agree to her sleeping with him if they allowed me to watch.\"\n\n\"At first, I thought that was the most perverted thing I had ever heard,\" Brianna said, adding her account. \"But as he told me more of the story of how it evolved, I could see that he probably wanted me to do it more than I did. So, I reluctantly agreed.\"\n\n\"The rest, as they say, is history.\" Bret studied Ron and Jenna for a reaction. Seeing none, he asked both, \"So, what do you think about that?\"\n\n\"You'll get no judgment from me,\" Ron said, honestly.\n\n\"Nor me,\" Jenna agreed. \"With my past, I'm in no position to judge.\"\n\n\"One thing I've begun to learn about people and sex,\" Ron explained, \"is that we all have our fetishes, and no one is in a position to criticize anyone else. We're all different, but most of society is not willing to recognize that this difference extends way beyond all the superficial things and well into deep personal beliefs. I say if it works for you and you're both comfortable with it and you're not hurting anyone else, go for it.\"\n\n\"I completely agree,\" Jenna said.\n\n\"Where have you two been all of our lives?\" Bret said. \"Not only do I like the way you think, but you have also introduced a new element of excitement into our marriage.\"\n\n\"This was a new experience for me also,\" Ron told them. \"And it turned out much better than I could have ever imagined.\"\n\nEach of the ladies hugged her man. \n\n* * *\n\nThe discussion had taken them through the meal and two bottles of wine. No one was drunk, although the women may have been a bit tipsier than the men. They were all just feeling good and relaxed.\n\nAs they walked back to the yacht, Bret said, \"Ron, unless you feel confident enough to sail us back to the marina at night, I recommend we stay put until morning.\"\n\n\"I concur.\"\n\nThe women turned to each other and smiled happily, having hoped for this outcome. They had plans for the remainder of the evening. Cagily, they suggested to the men that they move the yacht to the far end of the dock\u2014to be out of the way, was their reason.\n\nBret saw right through them and laughed. \"Ron,\" he whispered, \"I hope you weren't planning on retiring early.\"\n\nA while later, with the boat moved, the ladies and Ron settled in the cabin on the couch, and Bret, alone on the dinette, opened another bottle of wine.\n\nAgain, Ron took in the interior of the yacht, appreciating its well-thought-out, uncluttered layout. \"I love this boat,\" he couldn't help but mentioning. \"How long have you had her?\"\n\n\"Just a couple of years,\" Bret informed him. \"She's my third. One of the things I treated myself to after my divorce was a smaller 25 foot sailboat. It was well-used, had had several owners, was still sea-worthy, but needed work. That was my therapy. I worked on it on Saturdays, sailed it on Sundays. It took a couple of years to get it where I wanted it, and when I did, someone came along and offered me a handsome price for it. I couldn't turn it down, and the profit enabled me to move up to a 35-footer. Still used, but only one previous owner. That was what I owned when Brianna and I got together.\"\n\n\"I loved that boat,\" the Mrs. added.\n\n\"But, a couple more years later, the same person who bought my first boat eventually wanted to move up, knew how well I maintained my boat and made me an offer. Again, too good to refuse. And that enabled us to buy this baby new and bigger yet.\"\n\n\"And today, we found a new use for it,\" Brianna said with an impish grin.\n\n\"You've never invited anyone else aboard?\" Jenna asked in amazement.\n\n\"No, we decided to keep it our private haven,\" Bret advised.\n\n\"Not even one of your male friends?\" Jenna persisted.\n\n\"Nope,\" Brianna answered. \"Particularly not them.\"\n\n\"Then, why us?\"\n\n\"The time seemed right,\" Bret said. \"You were always special to us, Jenna. Then running into you this afternoon . . . I couldn't help it.\"\n\n\"And when he told me,\" Brianna said, \"I agreed it was time.\"\n\n\"I don't know what to say. I'm touched.\" Jenna truly was. \"So today was also the first time you did anything with another man on board, plus let another woman in your activity.\"\n\nBret lifted his wine glass. \"To a day of firsts. And may there be seconds, thirds and so on.\"\n\n\"Here, here,\" the others agreed in unison.\n\n\"So, I guess that also means that not only was it the first time you let in another woman, but also that you did anything sexual with a woman?\" Jenna asked Brianna.\n\n\"Yes. But, truthfully, I really didn't think about what I was doing when I did it,\" Brianna admitted. \"I was in such a state of ecstasy, I just went for it.\"\n\n\"Are you sorry?\"\n\n\"Not at all. It was a new and very nice experience.\"\n\n\"How did you feel, Bret?\" Jenna asked.\n\n\"I never came so hard.\"\n\nThey all laughed.\n\n\"You've done it before?\" Brianna asked.\n\n\"Yes.\"\n\n\"A lot?\"\n\nJenna shrugged. \"Well, I haven't kept track, but a few.\"\n\n\"Does that make you bisexual?\"\n\n\"I really don't like labels. I have no intention of giving up cock. If I get involved in a threesome or group situation\u2014as you said\u2014you do things in the heat of the moment. Do I like it? Yeah, with the right woman it can be really hot. Would I specifically have sex with just a woman? I never have, nor do I have any plans to, but that doesn't mean it wouldn't happen.\"\n\n\"How do you feel about that, Ron?\" Brianna asked.\n\n\"I stand by what I said at dinner.\"\n\n\"Does that mean you want to do it again, Brianna?\" Jenna asked.\n\n\"I thought you'd never ask!\"\n\nRon was sitting on the end of the sofa toward the bow, Jenna in the middle and Brianna on the stern end. Pulling her left leg up and folding it in toward her mid-section, which caused her skirt to rise all the way up, Jenna scooted toward Brianna, whose both feet were on the floor, and pulled her between her legs. Jenna's right hand went to Brianna's right leg and her other arm around Brianna's back. The older woman shuddered.\n\n\"You okay?\" Jenna asked softly.\n\n\"Yeah,\" Brianna giggled.\n\nWith that, Jenna leaned in and kissed Brianna on the lips. The latter responded, albeit tentatively. \"You sure?\"\n\nBrianna answered by pressing her lips back to Jenna's where they engaged in a real kiss. It wasn't overly passionate, but enough for the women to get comfortable with each other.\n\nJenna pulled away and said, \"Want to undress me?\"\n\nWith raised eyebrows, Brianna hesitantly said, \"Okay.\" She turned around to face the other woman, and with slightly trembling hands, started unbuttoning her top, then removed it and the flimsy bra and slid down her skirt.\n\nNow totally unclothed, Jenna looked into the aft cabin, then the forward one, and determining that the berth in the latter was larger, tugged Brianna with her in that direction. The men followed. Jenna climbed on the bed while Brianna walked to the side of it, where the former helped the latter undress. Jenna moved back, sitting with her legs crossed, pulled Brianna onto the bed, then dragged her closer, spreading her legs so their pussies were only a foot apart and hugged her. Jenna then leaned down and kissed each of Brianna's nipples, causing another shiver. Jenna's hands roamed all over Brianna's body while her tongue gave more attention to the hard buds on those big tits.\n\nOut of the corner of her eye, Jenna could see the men standing there with huge bulges in their pants. \"Looks like you two need to shed some clothes, also.\"\n\nBret gestured Ron to comply\u2014he did\u2014then on Jenna's further beckoning, took a seat at the head of the bed with his back against the wall. Bret held his position, preferring to massage his cock through his pants.\n\nThe ladies were kissing again, then Jenna pushed Brianna down on her back sideways across the bed, massaging her breasts, abdomen and thighs before spreading her legs and playing with her pussy. Before long, her tongue found it's way to that ever moistening snatch, where she licked and tongue-fucked her friend.\n\nRon couldn't help reaching out and fondling her milky breast. Jenna signaled him to switch positions, then it was him giving her some expert mouth action while Jenna licked and played with Brianna's tits. \n\n\"I can't believe I'm doing this,\" Brianna cooed after a few minutes of it, amid squirming and moaning.\n\n\"You're enjoying it, aren't you?\" Jenna whispered.\n\n\"Mmmhmmm.\"\n\nThat was all Jenna needed to hear to throw her right leg over the other woman's abdomen and inch her pussy closer to Brianna's mouth. Jenna reached out and turned Brianna's head. \"Kiss it,\" she pleaded.\n\nBrianna did so, and before long, her tongue found its way between Jenna's pussy lips.\n\nWith a whimper, Jenna pulled Brianna's head closer, Brianna's hand stroking Jenna's thigh.\n\n\"This is not a good position,\" Brianna said with a grimace. So Jenna turned around and straddled the other woman's head, planting her pussy squarely on Brianna's mouth. The older woman's tongue went to work tasting all of the delectable flavors of another woman's pussy. \"This is much better,\" she managed to murmur while slurping, her hands holding on to Jenna's cheeks.\n\n\"Is it ever.\"\n\nMeanwhile, Bret had his cock out, lightly stroking it to maintain his erection, but no where near ready to come.\n\nAt the other end, Ron was still lapping away at Brianna's succulent hole. Seeing how much he was enjoying himself and imagining how tasty it must be, Jenna bent down to enjoy a few licks herself. Hers and Ron's tongues danced together, as well as taking turns swiping Brianna's firm clit. They also enjoyed a few kisses with each other.\n\nWith Brianna's tongue still plastered to her pussy, excitement was building and Jenna needed more. She tugged on Ron, directing him to a kneeling position with his cock hovering over Brianna's pussy. Jenna swallowed it, then grabbed it at its base and sensually sucked it.\n\nHearing the slurping, Brianna sat up, her legs wrapped around the now-squatting Jenna and zoomed in for a bird's eye view of the delicious blow job. She reached around and played with Jenna's tits while watching. Jenna courteously shared, moving down to his balls while Brianna took over sucking. Ron braced himself with a hand on each woman's shoulder. It was a good thing that he was kneeling or his legs would have given out from the pleasure.\n\nNot wanting him to enjoy himself too much and come prematurely, Jenna pushed Brianna onto her back again and dove into her muff, lapping up the sweetness dripping out. With her ass up in the air, Ron took aim on Jenna's velvety pussy and drove his cock home. Jenna also reached up and twisted Brianna's nipple to heighten the woman's senses.\n\nHaving had a head start, the women were completely aroused and came almost exactly at the same time, writhing and moaning. Jenna pulled off of Ron's cock and laid on top of Brianna, their lips meeting to top off the incredible orgasm they were sharing. Ron finger-fucked both women until he was certain they had both achieved maximum climaxes. \n\nWhen they were completely finished, Jenna rolled off to Brianna's right side still embracing her. Ron remained squatting, pulling on his cock to prevent losing his hard on.\n\nSeeing that he was still hard after her fog cleared, Brianna spread her legs, forcing Jenna to a kneeling position. The invitation was not lost on Ron and he guided his eager rod into her hot, wet pussy. Jenna leaned over and kissed Ron passionately while he pumped away, then went down and did the same with Jenna. She alternated doing this, being the catalyst to swap their saliva.\n\nHis knees tiring, Ron eased into a laying position on his right side without his dick ever leaving Brianna's well-lubricated hole. She draped a leg over his chest. Occasionally, Jenna would have him pull out so she could suck Brianna's juices off of his cock. She even moved her head in to lick Brianna's clit while he pummeled her, and placed her mouth in a way that he could graze her lips as his rod went in and out.\n\nMinutes later, Ron turned Brianna onto her knees, taking her doggy style, but not before Jenna eased under her. They kissed while Ron fucked.\n\n\"God, you're wet,\" Ron commented. He couldn't take it any more and yelled, \"I'm going to cum!\"\n\n\"Oh, don't pull out. Please cum in me,\" Brianna pleaded.\n\n\"Yes, come in her,\" Bret groaned, his hand flying over his cock.\n\n\"Yeah, baby, come in her,\" Jenna agreed.\n\nThat was all the encouragement Ron needed to spray Brianna's vagina with what felt like gallons of come. The force of it caused Brianna to explode also and she muffled her screams by keeping her lips pressed to Jenna's.\n\n\"Ahhh,\" Bret yelled as his semen flew into the air and landed all over the place.\n\nRon collapsed on the bed in the middle, Jenna crawled on one side of him and Brianna was stretched on the other side . . .\n\n* * *\n\nWhether it was the movement or the bright light from above, or some other unknown factor, Ron awoke with a start. A quick sweep of his eyes around told him he was still in the forward berth of Bret and Brianna's sailboat, still nude with his morning wood at full mast. Jenna, also without clothing, was sound asleep beside him. The motion and sound of the sea told him they were underway.\n\nRising, he quickly visited the head, then dressed and headed through the cabin to the steps\u2014where he noticed a naked Brianna sprawled out and also in slumber on the rear berth\u2014on up to the cockpit. Bret was alone at the helm.\n\n\"Good morning,\" the owner said cheerfully.\n\n\"And to you. Why didn't you wake me if you wanted to set sail?\"\n\n\"Son, I might need your help to enjoy a little sexual satisfaction, but I can certainly handle a sailboat by myself.\"\n\nHe phrased it lightheartedly so Ron took it in kind. \"Well, any way I can help.\"\n\n\"You did more than you know. I can't remember when my wife and I have enjoyed ourselves so much. I really mean that.\"\n\n\"Thanks. It was a very pleasant experience for me also.\"\n\n\"I hope the four of us can get together again.\"\n\n\"That would be something to look forward to.\"\n\n\"If you don't mind taking the helm, I've got to use the head. Sorry we don't have any coffee or breakfast, but we didn't plan on an overnight trip.\"\n\n\"I'm good.\"\n\n\"I'm also going to wake the ladies,\" Bret advised. \"We're only about a half-hour away from the marina. I'd ask you to do it, but no telling what that would lead to and we don't have the time right now.\"\n\nIt made Ron laugh. \"Understood.\"\n\nOnce alone with nothing but the sound of the wind, water and sails, as expected, Ron's mind started to replay and evaluate the events of this weekend. Fortunately\u2014or not\u2014before he could get too far, two ragged-looking, but still very beautiful women ascended from below, haphazardly adorned in yesterday's clothes. It was almost comical. Bret followed a minute later.\n\nHowever, before any more than morning greetings and weather small talk could be discussed, the marina came into view on the horizon. Bret let the jib and mainsail out a bit to slow them down a little. A few minutes later when they encountered the first channel buoy, the yacht's master instructed his temporary first mate to lower sails. The engine was started and Bret expertly maneuvered his boat through the marina, and then backed her into her slip.\n\nOnce tied off, the men worked to properly set and cover the sails and make certain all ropes and lines were secure. Meanwhile, the ladies tidied up the cabin. When all were done and the hatch locked, they headed to the parking lot where they said their goodbyes.\n\nThe two men shook hands, but the women each hugged and kissed the other's man using a full body press so that all the right parts touched.\n\nLooking into Ron's eyes almost lovingly, Brianna said, \"You're the best, Ron, and I don't mean just sexually, but on that note, I can't remember when I've enjoyed sex so much.\"\n\nClose enough to hear, Bret added, \"Ditto.\"\n\n\"That's very nice of you both to say, but you have to remember that you had another woman involved for the first time. So, I can't take all the credit.\"\n\n\"Well, I had no intention of leaving her out,\" Brianna said, releasing Ron and embracing Jenna. \"In fact, I think I really enjoyed my first time with a woman.\" She gave Jenna almost as passionate a kiss as she had given Ron. \"I can't wait to try it again.\"\n\n\"We really would like to get together again\u2014soon,\" Bret said. \"I really mean it.\"\n\n\"So, would I,\" Jenna agreed. \"Let's stay in touch.\"\n\nAfter exchanging contact information, the two couples parted.\n\n* * *\n\n\"So, what do you think?\" Jenna asked during the drive back to her apartment. \"Are you content with what happened or not?\"\n\n\"It was definitely one hell of an experience.\"\n\n\"I just want you to know again that I had no idea they would be so open.\"\n\n\"Well,\" Ron said with a shrug, \"no matter how well you think you know someone, you don't.\"\n\n\"So, what did you think of Bret and Brianna?\"\n\n\"Brianna's almost as hot as you\u2014\"\n\n\"Good answer!\"\n\n\"\u2014and Bret is comical. He likes to use his age.\"\n\n\"Yes, he's always played the age card.\"\n\nBack in Jenna's apartment, they took separate showers because they were actually somewhat worn out sexually. He took her to lunch at a nice restaurant where they used the time to discuss her project for the organization\u2014since he was supposed to be on her committee. He was ready to head home when they returned, though she did her best to attempt to convince him to stay longer. But he had household chores to do and he was tired.\n\nTo her disappointment, they said goodbyes, which centered around some very enticing lip to lip action. If he hadn't been so fatigued, that might have induced him to hang around a while longer.\n\n\"Can we spend another weekend together?\" Jenna asked hesitantly.\n\n\"I don't see why not.\"\n\n\"Soon?\"\n\n\"Of course. I'll call you.\"\n\n* * *\n\nWith each mile he drove, Ron's mind became a jumble of thoughts about the last week. And he began with Jenna, for it was safe to say that it all started with her.\n\nRon had always done and had always believed in doing things in moderation. But by that standard, nothing that had transpired in the past nine days could be considered \"moderate\" in any sense. He was not ashamed, nor did he regret anything he had done in that time. But was he moving too fast? Would all this extreme sexual activity burn him out before his mind could accept what was happening and allow him to really enjoy what he had been doing without having to psychoanalyze himself after each episode?",
        "What was today's session?\n\nFirst, he had been concerned about being able to properly satisfy a woman after so many years in a marriage that had him wasting away. But Jenna had put that fear to rest. Second, he had fretted that perhaps this newfound virility only worked with Jenna. But liaisons with Chelsea, Debi and Mary had quashed that concern. Third, he worried whether sex with Jenna had really been that good since with each of the subsequent three it had gotten progressively better. But this weekend had proved that it was.\n\nNow, the question was how far sexually would a relationship with Jenna go? She'd already introduced him to new positions; already introduced him to new arenas, such as the nightclub with its blatant sexual activity; and already introduced him group sex. It was a two-lane road that was growing into a super highway\u2014how far down it was he willing to travel?\n\nSomething told him he would go further. Something told him that the journey into uncharted territory continues . . . "
    ],
    "authorname": "RonCabo",
    "tags": [
        "weekend"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/uncharted-territory-pt-03"
}