{
    "title": "It's The TAX Man!",
    "pages": [
        "Not even 30 years old yet and out of work? The economy was the problem, Denton's boss told him when he called him into the office.\n\nIt wasn't like Denton had no clue it was coming, with nearly a decade of seniority he had watched as one after another of his fellow workers fell by the wayside. 19 years old in the door, washed up and out at 29?\n\nNow he looked around, his ten years seniority put him as the last man in the door. Union rules and all of that, he knew he was next. There wasn't much left of the company anyway. His boss even shook Denton's hand and wished him good luck, a sad expression on his face.\n\nDenton was well aware that his boss knew he was probably next.\n\nLet's face it, when your trade is selling performance engine parts and the price of fuel hits four bucks a gallon, people's play toys are the first to go.\n\nAt first he wasn't worried, after all, his sales had been the best of all the team, even though the totals were dropping like a rock the last year or so.\n\nSomebody could use him, after all, he was talented! Good looking, gift of gab, Denton thought he could talk a hooker into giving him credit.\n\nYeah, sure.\n\nA few hundred applications later, his phone stayed silent. \n\n\"Not at this time.\" He heard, over and over.\n\n+++\n\nUnemployment helped some, but the bank account he had so carefully saved up began to fade quickly. It wasn't a hell of a lot because Denton loved all the new high tech gadgets and had a bad habit of being one of the first in line to get anything new so his bank account wasn't exactly flush.\n\nHe did have a tad though because the company stashed away some each year into a retirement account which he had managed to match.\n\nWith the checking account looking sad, the gadgets went up on the auction sites. Denton even sold a half dozen or so of them for around 10 cents on the dollar, which would have helped a little but he only got paid for two of them.\n\nDenton's girlfriend Cheryl Miller looked at him oddly the day he told her he wasn't going to be able to take her to the big concert. He liked Cheryl, and had even been thinking..maybe, just maybe?\n\nKids and a house and a lawn and shit like that?\n\nAfter all, she had a fanny that made him drool when she wore those pajama type pants with the sash that tied at the waist, a pair of absolutely perfect breasts with inverted nipples that made a neat little \"pop\" sound he could actually feel with his mouth when he got her to giggling by sucking on them.\n\nDenton spent a lot of his hard earned keeping her happy, Cheryl was fun to be with and he loved the jealous looks of the other guys when they were out.\n\nWhen he offered her those overpriced trinkets he bought regularly, that was always good for a roll in the hay. He had sprung for a few neat dresses too. Those times were always a kick in the ass, she would model them for him, coming out of the dressing room turning this way and that.\n\nCheryl usually picked out the nastiest looking things they had in the store, more than once they found themselves with an audience pretending to be looking over the nearby racks.\n\nThere was one store she always preferred, they did have some amazing selections, with prices to match.\n\nThe manager himself trotted over to wait on her nearly every time, probably figuring Denton was good for around 400 to 500 bucks every trip. Plus he seemed to really like Cheryl, even thought the guy acted queer as a three dollar bill.\n\nSince the guy was gay, Denton wasn't concerned too much about the guy measuring her in about every direction possible. He was always poking and tugging at the cloth, too. Several times he even went into the dressing room with her.\n\nOnce Cheryl came out wearing a beige one piece pullover type dress, the guy right behind her. She did a little spin and the hem came up, for a split second Denton got a glimpse of her bare bottom.\n\nNot a stitch on underneath that!\n\nShe wore that home that day, so Denton investigated and confirmed his suspicions that she was naked as a Jaybird underneath that.\n\n\"That manager guy was in there when you changed into this?\" He asked her.\n\n\"Sure, no big deal. He sure is cute, isn't he? Too bad he is Gay.\" She giggled, giving him a sidelong glance.\n\nDenton wasn't too sure of that but what the hell. After all, what could possibly happen in a tiny little changing room?\n\nTaking Cheryl out in her peek a boo outfits was fun, lots of guys gave her sidelong glances, but she was all Denton's.\n\nThat part he was sure of.\n\n+++\n\nBut times were tough, with everything being outgo and no income at all, Denton was starting to watch his remaining funds carefully.\n\nThat night they stayed at his apartment instead of going to the concert, Denton made popcorn. \n\nHell, everybody likes popcorn.\n\nCheryl was kind of pissed off about that, her hair was all fixed up with curls and her titties hanging out the top of her outfit.\n\nShe liked to be right in the front row jumping up and down, half the time with the thing pulled up showing them off to the greasy looking long haired guy with the bare chest and tattoos, yelling into a microphone.\n\nProbably just moving his mouth to a recording anyway, and Denton was sure the jerk had a pair of socks folded up in his pants.\n\nBut he got the rewards of Cheryl getting all fussed up so he didn't mind her acting all silly like that.\n\nSixty fucking bucks a ticket so she could wave her jugs? Screw that, he thought.\n\nTimes were tough.\n\nBut that night was also the first time he ever heard Cheryl complain of a headache.\n\nShe turned down his offer of some Aspirin, saying she would be all right. She did ask him about his car, too. The nearly new Camaro with all the toys and whistles, big rumbling V-8 engine had gone back to the bank.\n\nThe 15 year old Volvo Denton bought for $650.00 ran just fine after he had pulled the cylinder head and fixed the valves. Sure, it had a few dents but it got him where he wanted to go.\n\nCheryl said she still didn't feel well when he called the next day, same thing the day after that. Then the day after that she didn't answer the phone. \n\nWorried, he drove over to her house that evening, it was about 7 PM. He got there just in time to see her walk out with some guy in a business suit and they climbed into a fancy Escalade. She had on a pretty dress he had never seen before, it didn't leave much room for imagination.\n\nHair all fixed up and curly, titties hanging out the top.\n\nDenton sighed and went home, he got that.\n\nIt hit him that maybe he wasn't so sure of Cheryl after all.\n\nHe did manage to reach her on the phone, it was days later.\n\n\"I really do like you, but it's time for us to see other people.\" She told him sweetly.\n\n+++\n\nWhen he cashed out his only IRA certificate to make the rent that the landlord had just notified him was going up to cover the tax increases, that hurt.\n\nThe government happily took their 10% early withdrawal penalty, so he knew it was time to consider another profession.\n\nThe government was kind enough to loan him some capital so he could go back to school, by the time Denton was 33 he was a full fledged real estate appraiser.\n\nThat really worked out just jim dandy swell, it seemed like the minute Denton had his paws wrapped nicely around the degree, the bottom fell out of the real estate market. It had been tilting a little bit anyway, but when it did go all to hell, it was on the sudden side.\n\nJobs were looking to be a bit on the thin side. He did manage to snag a minimum wage deal on the night shift at a gas station, that kept food in the fridge but that was about all. His boss just paid him in cash, by now Denton wasn't going to owe any taxes anyway so he didn't care.\n\nHe had two co-workers, Carlos and Jose. They spoke enough English and Denton spoke enough Spanish that they got by. Sometimes they sat around and drank beer after work, they were actually a couple of neat guys to know.\n\nHe did notice that every time they saw a white van they both got real nervous.\n\n+++\n\nThen came the score! When everything goes all to shit, there is just one place a person can get work that seems to have all of the benefits, good pay, job security, vacations and nice annual pay increases.\n\nWorking for the government, of course.\n\nWhen Denton was called in by the County for an interview, he did his best to present himself as well as he could.\n\nThe bridge over the river was already full of tenants underneath, it looked like. He really wanted this job! He was around 90 days away from looking for a place to put a bedroll. Now he had hope.\n\nThe phone rang two days later. \n\nHe was hired.\n\n+++\n\nNow he was one of \"them\" instead of being stuck in the real world trying to find work.\n\nDenton had a feeling that part of it was his new boss, Carrie. She knew he was single, of course, and so was she. He had noticed an extra button undone on the simple business like blouse she wore when he was called in for the interview.\n\nDenton got that, too.\n\nCarrie was just a bit overweight, not enough to hurt anything but enough to notice. She did have what looked to be a set of big'uns. The white blouse covered her black bra, but barely and the black showed right through.\n\nDenton found himself doing his level best to not be caught sneaking peeks at her cleavage, but it had been quite some time since he was with a female so that wasn't easy.\n\n\"So why aren't you married?\" Carrie asked him at one point, not exactly an interview question.\n\n\"I..uh...I was once but it didn't work out. Since then, I just haven't found the right lady.\" He managed.\n\n\"Oh. Well, are you looking?\" She leaned forward, another inch or so of her big'uns slipped out the top of her blouse. She even batted her eyelashes.\n\n\"Yes, sure. I would really like to find the right...lady...and settle down. You know, a house..kids..someone...special to come home to.\" He lied through his teeth, offering her his very best smile.\n\n+++\n\nDenton probably could have been married by then but he had done it once before back when he was 22, that lasted exactly six months. That was part of the reason he had delayed asking Cheryl Miller to marry him, that situation with his first wife created some reservations.\n\nHer name was Patty, another bubble butted redhead that thought she could have anything she wanted by jiggling her tits. Denton had a bit of a weakness for overly round fannies and titties that jiggled.\n\nThe truth there was that she usually could do just that by jiggling a little bit.\n\nBut once she found out that she couldn't get every single thing she wanted from Denton, she packed up everything she could get into a U haul. She came up with one of those chain on type bumper hitches for the back end of the 1963 Nova Denton had carefully rebuilt from the ground up. \n\nNeat 310\" inline six cylinder, Muncie four speed, the car was cool! He had painted it torch red, neat mag wheels and oversize radials, with plans to go to all the car shows and win trophies.\n\nHow that car became hers he wasn't quite sure.\n\nShe had also closed all the bank accounts, and she had a pack of blank checks for the joint checking account, complete with a check guarantee card which she then used with no mercy. \n\nDenton had tracked her down all the way to Lewiston Idaho, finding her shacked up with some guy with a pony tail she had met at the bowling alley where she took a job tending bar.\n\nThe guy had gotten unfriendly when the discussion with Patty turned from a peaceful request for the rest of the blank checks and the check guarantee card to a shouting match and put his hands on Denton.\n\nIt appeared the jerk didn't like the idea of giving up that card and the pack of blank checks. Denton had gotten the pile of checks, each one for $190.00 to just under $200.00, the limit on each one that he was then forced to cover.\n\nFour fucking mag wheels, each bought one at a time. He saw the damned 1973 Plymouth Duster sitting in the driveway with those wheels on it, that was part of the reason for his sour mood when the jerk started in with his mouth.\n\nPony tails make great handles to hold onto while placing well aimed uppercuts, it seems. \n\nCops showed up rather quickly, the two guys looked at the remains of Mr. Pony tail, then they looked at Patty. She stood there with the top half of her tits sticking out like they always did and after a couple of questions they figured that part out.\n\n\"Straight down this street takes you to the bridge, on the other side is Clarkston, Washington, sir.\" One of them told him.\n\nShit eating grin on his face.\n\nDenton didn't quite get that for a second.\n\n\"Out of our jurisdiction, bud.\" The other Cop grinned at him.\n\nKeep the peace and all of that is the job, it seemed.\n\nDenton went out and got into his car, drove straight down the street and over the bridge.\n\nThe checks and the check guarantee card were in his pocket, Patty had looked at Mr. Pony tail whimpering on the sidewalk and then at Denton, decided to hand them over without a fuss.\n\nSo, yep. Denton was single and by God he was going to stay that way.\n\n+++\n\nDenton knew the signs that single gals send very well. So when he called Carrie \"Miss Robeson\" and she corrected him by asking him to call her Carrie, while fiddling with the next button down on her blouse, he got that.\n\nFlipped her hair a few times, too.\n\nBut all he really wanted was the job, and he got that.\n\n+++\n\nTax appraiser.\n\nThe most hated man in the most hated job in government. He got sent out to look over people's property, assign a value which was always more than it was before, of course.\n\nOf course.\n\nNobody was ever happy to see him. Lots of doors got slammed in his face. \n\n\"Get the fuck off my property!\" he heard quite a few times, for those he just stood outside and made assumptions.\n\nLet's see, kitchen fan, $1800. Probably all built in appliances in there, right? Extra five grand. Wall to wall carpet, $4000. Attached garage, $11,500. Probably a nice woodwork staircase in there, $10,000. That stack of boards out back? \n\nLooked like a deck to Denton.\n\nOn and on and on. Let them go appeal that, if they decided to be assholes.\n\nIt's not smart to piss off your friendly neighborhood tax assessor.\n\nCarrie called him in one day, told him to go back over to a place on Maple street. They were protesting his new appraisal, he had jumped it from $174,960 to $259,800.\n\nDenton knew exactly which one that was, the over sized asshole had been outside that day watering his lawn and turned the hose on him when he asked to come in and do the appraisal.\n\nHe got water on Denton's clipboard.\n\nHell, he had been forced to do the guesstimate from clear across the street on the other sidewalk, that kinda pissed him off.\n\nThat 6' by 10' lean to the jerk had his lawnmower stored under looked like an attached garage to Denton.\n\nPrick.\n\nNo way did he want to go back over there, bad enough the guy was an asshole, but he also was around 6'5\" and about as wide as he was tall.\n\n\"You have to. We need it for the appeal.\" Carrie told him.\n\nDenton sighed, went out and got into the little white County pickup and drove over there.\n\nHe had a can of Mace in his pocket that he used on the damn Dogs that considered him dinner, and he figured it would probably work on the goon.\n\nThere was no sign of the jerk when he got there, he was thinking maybe he was lucky and the dude was at work or something.\n\nHe was startled when the door opened and this slip of thing stood there smiling. She looked to be around 30, she had more of her tits hanging out the halter top she had on than most women even had.\n\nMakeup? Hair all fixed up? Short shorts on and they really were short shorts! Stomach flat as a board, easy to tell since he could see all of it, all the way down to below where there used to be pubic hair.\n\nYow!\n\nShe was gorgeous.\n\nSmelled good, too. A hint of Lavender, maybe?\n\n\"Oh, hi! You must be from the County, I am Janet. Bill isn't here right now, but come on in!\" She swung the door wide.\n\n\"OK. I...uhh..I just need to update to be sure we are accurate.\" Denton managed. He was having one hell of a time keeping his eyes off of her.\n\n\"OK. Bill did say there were some mistakes, I am sure you can correct those very quickly.\" She smiled, sitting down on her couch, her legs open carelessly.\n\nThose shorts were so tight he could see the shape of her snatch and he was completely positive that there wasn't a single hair on it.\n\n\"As you can see, the stairs are not carpeted.\" Denton looked, they weren't, so he made a note.\n\nHe thought she meant the ones on the side of the living room, anyway.\n\n\"And the garage is a portable, it really isn't attached.\" Janet crossed one leg over the other, began to stroke her thigh lightly.\n\nStroke, stroke, stroke.\n\nDenton made another note.\n\n\"Market conditions are really down around here, too. Perhaps there are..OTHER things around here you would like to...inspect?\" She had a huge smile on her face, leaned forward. Oversize boobs spilled out over the top, it looked to be impossible for her nipples to still be covered but they were.\n\nDenton broke a serious sweat, it had been one hell of a long time since he got laid.\n\nThis was one primo piece of ass, right there in front of him and it almost seemed like she was..suggesting?\n\n\"I...uhh..I suppose we could...make an adjustment here and there?\" He managed.\n\n\"I was thinking if the...adjustment...was BIG enough? We could perhaps...?\" She leaned forward, the top half of one nipple finally peeking out of her top.\n\n\"I am sure I can....\" Was as far as he got.\n\nDenton just stood there as she got up and slowly walked over to him. She reached down and stroked up and over his crotch with her fingertips, that did it.\n\nIn less than a minute he had her down on her back on the carpet, this was prime pussy, no doubt about that at all. She was banging her hips up at him, gasping and moaning.\n\nShe was still naked when he headed for the door.\n\n\"So what did you come up with?\" She asked.\n\n\"$149,000, looks like. I made a note of the changes and market conditions.\" He grinned at her.\n\n\"Neat, thanks! See you next time?\" She giggled.\n\nDenton sat in his truck, filling out the paperwork. He looked up to see her hubby Bill pull into the driveway, the guy glanced over at Denton but just went inside the house.\n\nThat was an amazing experience, he had just hosed some guy's wife with no mercy and he was pretty sure the guy knew all about it.\n\nWhat the heck? It was kind of fun.\n\nHe should feel guilty as hell?\n\nNaw.\n\nCarrie didn't even blink when he turned in the forms, she just glanced at him, grinned and went back to her computer.\n\nTwo days later she sent him over to redo old lady Harrison's house. It was a two story wood frame home on the smallish side. He had jumped that one by 25% when she apparently let her damn Dog out the back door and the little piece of shit came tearing around yapping, snapping at his leg.\n\nMouthful of fucking needles!\n\nHe tried to give the thing a kick in the ass for that but it was hard to tell which end was it's ass.\n\nNo way in hell could he kick the thing anyway, it was far too fast, he did manage to get his Mace out of his pocket but it looked like the thing knew all about that stuff. \n\nIt ran off just out of range and stood there snarling like it weighed more than barely 10 pounds. \n\nDenton sat completely pissed off in his truck and did the report on her house, dabbing at the drops of blood on his leg.\n\nHe was so pissed off about that, that he decided to add a built in sauna and hot tub. Fucking gravel in the fucking driveway looked pretty smooth, he made that pavement.\n\nFucking mutt.\n\n+++\n\nOld lady Harrison opened the door wearing just a robe, she looked to be around 60 or so. \n\nDamned if she didn't have a sweet smile on her face.",
        "There was no sign of the mutt, so he stuck the new can of mace he bought down at the hardware store back into his pocket.\n\nShe sat on the couch across from him as they went through each item line by line. As they talked, her robe opened wider and wider until finally she was sitting there with it open almost completely, one big saggy boob hanging there bare.\n\nTalk about making it fucking obvious! \n\nFor an older lady she did have one fine set of jugs on her, her nipples were huge and black, oval shaped.\n\nDenton quickly discovered the mass of hair between her legs was also huge and black, it looked funny in contrast to her silver hair.\n\n+++\n\nShe could suck the chrome off a trailer hitch, no doubt about that at all. When he got her appraisal down to a 2% decrease, she got on her hands and knees.\n\nHell, she even took her fucking teeth out. Then she swapped ends, pointed her fanny at him.\n\nThat really wasn't that bad, either.\n\n\"Man you got a nice big one, honey!\" She squealed when he shoved himself inside her.\n\nDenton ended up a half hour late to the next appointment. It was a black guy whose wife looked to be around 350 pounds. \n\nHe was even bigger.\n\nDamned if they weren't nice as pie. Their Cat came over and crawled into his lap, rolled over on it's back and started purring. It didn't even sink it's claws into his arm, just laid there.\n\nIt was fat too, just like them.\n\nHe glanced around, the house was well kept but nothing was expensive. \n\nDenton left that appraisal as no change, because he got some cookies and milk a man could die for.\n\nChocolate chip cookies that could be dipped in milk and sucked on without coming apart? Not just once, but two or three times, and they stayed chewy.\n\nThe woman offered him some more but no way in hell could he manage that, he already had eaten a dozen of them. She even give him a whole sackful to take home.\n\nBy now he was making a tiny little mark alongside each appraisal that was special, just a little swirl with his pen that he figured no one would notice.\n\nThat would help him to remember next time, the job was getting to be complicated.\n\nOut at Brown's farms he got two dozen eggs that were so big he only needed one with his hash browns for breakfast, and a nice package of New York steaks that he could cut with a fork.\n\nThat one got a tiny little mark.\n\nThen he went by Nikola's, she had a home office doing massages, a hot tub and sauna in there and everything. She must have had 100 grand invested inside, it was pretty nice. \n\nDenton grinned when she offered him the gift pack for a half dozen free \"treatments\" and damn were those treatments! Her fancy new addition was in the rear, nobody could see it from the street anyway.\n\nThe place was busy, too. Even busy, one of her girls always seemed to be available when he called.\n\nThe first session was with Nikola herself. He was thinking this was going to be cool when she slid off her top as he lay there naked as a jaybird.\n\nWhen she slid down the bottoms, too, he knew it was going to be excellent. Denton was a full hour late after his treatment that first day, which got him another funny look from Carrie when he dropped off the reports.\n\nThe next day it rained and he had to go down a muddy road to a row of several houses. His white truck was a mess by the time he checked out the houses on one side and got back to the last house on the other. This was a low rent section of town, all of the houses were either cheap rentals or poorer families living in them.\n\nDenton was still feeling just fine so he only popped them around 1% right down the line.\n\nOne he left with no change at all, the four guys living there all had shaved heads and tattoos. Denton just glanced around, when he headed for a side door one of the men stopped him.\n\n\"Nothing in there dude.\" The guy told him flatly. The other three stood there quietly, just looking at him.\n\nDenton saw the strip of very bright light under the door frame, decided to let things be.\n\nLooking at the paperwork, he knew it was a rental anyway, no point in making waves.\n\nThe man at the last house asked him to sit out on the porch, while his wife served some coffee. She was a pretty little gal, wearing a light pull over dress.\n\nThe Sun had come back out while they sat there, Denton going down the list.\n\n\"Man, my truck sure got dirty back up in here.\" He mentioned.\n\n\"Oh, it sure did. Just a minute.\" He went inside, came back out in a couple of moments.\n\nA few seconds later a young woman about 19 or 20 came around the side dragging a garden hose.\n\n\"I told Sara to wash it for you, least we can do to help our County out, no sense in paying at the car wash.\" He grinned, then winked at Denton.\n\nThere was one hell of a lot of Sara showing, all she had on was a tiny thong bottom and a halter top that was just string and what might as well have been pasties.\n\nBubble butt, also, one of his weaknesses.\n\n\"You could make a fortune having her wash cars for people!\" Denton blurted out. That was just about the nastiest looking young woman he had ever seen.\n\n\"We do, and Suzie helps out, too.\" Denton assumed that Suzie was the wife, which was confirmed a few seconds later when she came around the corner dressed the same way, carrying a bucket with some suds in it.\n\n\"So how is that appraisal looking for us?\" The man asked with a grin.\n\n\"I don't see any changes here. Hey, maybe I can bring my car by for a wash sometime?\" Hell, the two women were the best show in town.\n\n\"Sure. I will have Suzie and Sara give you the special!\" He winked again.\n\n\"Special?\" He asked, still watching the two women closely as they bent over to reach the rocker panels.\n\n\"Yea, she washes the truck...then she washes you!\" He grinned really big.\n\nDenton blinked at that. He was thinking he could hardly wait until he got his new Camaro dirty.\n\n+++\n\nDenton was really feeling chipper the next day, Carrie handed him the day's schedule. Glancing at the list, he saw that one of them was owned by his old girlfriend, Cheryl Miller. The guy that she dumped him for just happened to run the local bank.\n\nEasy to get a nice low interest loan on a foreclosed property when the situation is right, it seems.\n\nDenton grinned to himself.\n\nCheryl answered the doorbell, gave him a surprised look. She had on a fuzzy white robe, he remembered that, he had bought it for her.\n\n\"Dennie? Hi! What are you doing here?\" She asked.\n\nThen she glanced past him at the little white truck with the County logo on the side of it.\n\n\"Annual tax appraisal.\" He grinned at her as her face fell.\n\nHeadache, huh?\n\nThen he smiled at her.\n\nShe smiled back.\n\n+++\n\nBack at headquarters, Carrie asked him to come into her office.\n\n\"So what's up?\" He asked.\n\n\"Well, at this rate you will probably break the County.\" She told him with a grin. There was a stack of reports on her desk.\n\n\"Oh.\" He suddenly felt guilty.\n\n\"Oh, not really, besides it's not all bad, appeals are down 50%. Those cost the County a lot of time and money.\" She said.\n\n\"Really?\"\n\n\"Yes. And there are a few rumors going around.\" She grinned, did that little twirl of her blouse button again.\n\n\"Oh? What kind of rumors?\" Denton could already guess. He braced himself for being fired.\n\n\"I heard that you are a pretty..uhh..GOOD appraiser? How would you like to come over tonight and...appraise some things for me?\" She was still smiling.\n\n\"I could do that, in fact, I think I would like to!\" He told her.\n\n\"Great! How about around 7 tonight?\"\n\n\"OK.\" He turned to leave.\n\n\"Oh, and Denton? What's the little marks in the corner of some of your reports for?\" \n\n\"How about I explain that tonight?\" He grinned at her.\n\n\"OK. Maybe I will see if I can earn one.\" She laughed.\n\n\"Oh, I have a feeling you will.\" He grinned right back.\n\nTax assessor.\n\nThe most hated man in town?\n\nDamn, he loved this job!"
    ],
    "authorname": "magmaman",
    "tags": [],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/its-the-tax-man"
}