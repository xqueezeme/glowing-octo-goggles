{
    "title": "The Ad, The Interview, The Threeway",
    "pages": [
        "The Phone Call... \n\nThe email from his wife, Sarah, was simply entitled \"Tonight\" and told John little more than that she'd booked a sitter and they would be going out to dinner. Intrigued by her impulsiveness (this was not a common trait,) John shot back an excited response and eagerly awaited a reply. Despite the heavy afternoon, which lay in store for him at work, John found he could not concentrate at all, his mind racing through all kinds of scenarios, which might explain his wife's mysterious behavior, but it was close to three o'clock before Sarah called his cell and revealed her grand plan. \n\n\"Hey, can you talk?\" she said, in that husky way she knew he loved. \n\n\"Sure I can talk,\" John replied. \"I've been waiting for hours. What are you up to, exactly?\" \n\n\"Are you alone? Nothing's wrong, I just need to know that nobody else could be listening.\" \n\nNow he was even more interested. He could hear that she was kind of energetic, giddy even, like a child on Christmas Eve. Not wanting to drag the suspense out any longer, John quickly found an empty conference room and closed the glass door. \n\n\"OK,\" he told her, slightly out of breath. \"I'm alone, no ears within a fifty-foot radius. What is going on with you?\" \n\n\"So, look, I'll just jump into this...\" \n\nHer voice fell to a conspiratorial whisper. \n\n\"You know that night when we were on the couch and we watched that porno? You remember that, right?\" \n\nRemembering 'That' Night... \n\nOf course he remembered. How could he not? They'd been at a boring work dinner with his company and were both a little buzzed. To pass the time, John had begun whispering naughty things to Sarah about what he was going to do to her when they got home. Later on, she'd returned from the bathroom and told him that her panties were now in her purse, that she was wet and very willing, and John had felt as though, were he a cartoon character, then his jaw would now be falling heavily to the floor. \n\nNeither of them was model-gorgeous, but who wanted those headaches, anyway? Sarah had jet-black hair, light porcelain skin, and looked amazing in any kind of little black dress, which was exactly what she'd been wearing that night. She was elegant, without being too revealing and, at thirty-eight with a full-time job and two kids behind her, she was in great shape considering she'd not seen the inside of a gym in years. \n\nJohn had been quite the athlete in his youth and still played softball for the company team. Middle-age was catching up with him, however and, at forty-three, he had the beginnings of a belly, something he fought against fiercely, running and working out whenever he could. Still, at a solid six feet tall, with his muscular frame and a healthy head of naturally dark hair, the two of them made a handsome pair. \n\nThey'd teased each other for the rest of the evening, as the side whispers grew bolder and more daring. Sarah was not normally this risqu\u00e9 a person, but, of late, John had noticed that she'd become more forward in her flirting, and certainly more audacious when it came to sex. When they'd eventually arrived home, the sitter was dismissed with an almost rude urgency, before Sarah suggested that John undress and put on a porn movie while she went to 'prepare' herself. Obeying instantly, John quickly removed his shirt and pants, Sarah sweeping them up and disappearing down the hallway as John lay back naked on the couch and reached for the remote, his arousal already evident. When Sarah re-emerged, she was wearing his shirt, his tie hanging loosely around her neck. She still had on her high, black heels, but nothing else. She'd unbuttoned the shirt so it fell open to her navel, and the sleeves were casually rolled up to the elbows, the cool cotton brushing against her skin as she swished and stalked slowly towards him. Her breasts struggled to contain themselves, her nipples pressing hard beneath the fabric, as she hovered over her husband and held a rueful finger up to her red-rouged lips. \n\n\"I couldn't find anything else to wear...\" she cooed. \"Is this good for you, or should I put on the pants, too?\" \n\nAs she spoke, she tugged gently on the shirt, pulling it up just enough to reveal the perfect, sandy brown landing strip sitting teasingly between her legs. \n\n\"Leave those pants alone,\" John growled, \"And come here-\" \n\nSarah dropped to the couch next to him as his hands immediately slid under the shirt and cupped one of her breasts. \n\n\"What are we watching?\" Sarah whispered, turning to the TV, where two ridiculously fit women - one blonde, the other brunette - were knelt either side of a guy on a large, plush bed. \"Well they're not wasting any time, are they?\" \n\nOn the screen, the blonde was sucking the guy off, the brunette pushing her ass towards the camera, giving a view of her smoothly-shaved pussy. \n\n\"Was I gone that long, or did you just fast-forward to this part?\" Sarah smiled. \"Not that I'm complaining.\" \n\nJohn mumbled something about 'fast forward,' but Sarah had a hard time hearing him as his mouth was already on her tits, sliding his tongue from nipple to nipple. She tossed the tie over her shoulder and put her hand around John's neck, pulling him further into her, while her other hand slid down his belly and headed straight for his cock. \n\n\"I think this has got you all riled up, babe,\" Sarah murmured, \"Was it all the dirty talk at dinner, or my juicy, hot, bare pussy under my little...black...dress? Huh?\" \n\nShe leaned down to his ear, her hair brushing his face. \n\n\"Or maybe you just love me being naked under your shirt? I can tell you like it, I can feel you like it.\" \n\nShe gave his cock a gentle squeeze and she felt John respond, his erection getting harder by the second. Looking back at the TV screen, Sarah's cupped his balls and used her thumb to stroke them gently. \n\n\"And those girls going down on that guy...\" she went on, as John lifted his head momentarily, the threesome hotting up in front of them. \"I know that's turning you on, baby.\" \n\nHis hips were starting to buck as Sarah worked him, before she sat back up and slowed the attention on his crotch. \n\n\"I think you like all of it, right, sweetie?\" she asked. \"You want a piece of everything? I can do that for you. I can do whatever you want, and I know what you want.\" \n\n\"Yes,\" John replied, his voice deep and heavy. \"I want you to suck me. I want you to do what they're doing.\" \n\n\"Sure, baby.\" \n\nShe got down on the rug and turned so that her ass was between John and the screen, making sure he got a clear view of everything. She moved her head over his cock and, as she continued to pump him with her hand, she began sucking on his tip, her tongue hot and hard, offering John a brief glimpse of her bright red lips closing themselves over his cock before her gorgeous, silky hair fell over his legs, hiding what she was doing. But, with an amazing view of her ass, and the threesome on the screen getting hotter by the second, John was content to lie back and surrender himself to this impossible seduction. \n\nAfter a minute or so, Sarah came up for air and looked up at him. \n\n\"Tell me what's happening over there,\" she said, \"I want you to describe every detail, baby, as I take care of you.\" \n\nHer hand never stopped stroking him as she smiled naughtily and went back to work with her mouth. John rubbed his hand across her ass and probed between her cheeks with his thumb, desperate to reach her pussy, but Sarah responded with a subtle wiggle of her hips, which, John knew, was her way of telling him her pussy was off limits, for the moment at least. Right now, this was about him. \n\nHe looked back to the screen and drank in the scene before him. \n\n\"Uh, well the blonde is...sucking the guy,\" he began. \"In fact, she has his whole cock in her mouth, she's gagging on it, it's so big, and the brunette is now facing us, she's sitting on his face, and her tits...her tits are bouncing up and down while she...while she rides his mouth...uh, uh, Jesus...uhhh...\" \n\n\"What else?\" Sarah asked, her voice muffled as she continued to suck him off, hungrily. \"Don't stop talking, tell me, tell what they're doing.\" \n\n\"The brunette is now fucking him,\" John went on. \"The two of them are kissing, holding each other up, it's so...fucking...HOT!\" \n\nHe dug his hand into his wife's ass. \n\n\"God I want to eat you,\" John panted, desperately. \"I want to fucking eat you, right now, let me eat you, let me taste you, this is hot, oh God I wanna lick you, suck you, uhh...oh don't you dare stop, don't you dare stop, I'm so fucking close...!\" \n\nAfter eight years and a few thousand blow jobs together, Sarah knew it was time for what John lovingly called \"The Bionic Mode,\" when she switched things up a gear and proved to him what he'd known very early on - that she could suck harder and faster than any other woman on earth. And, as the first jet of cum hit the warm vacuum of her mouth, she knew just the right amount of pressure to give with her hand and her mouth, to squeeze every last drop from him, prolonging his orgasm to the point where John could only moan and pant his pleasure, all words, all other feeling, lost to him. \n\nWhen he was spent, Sarah rubbed his hips and cleaned his cock with her tongue, before sitting back up and turning her attention to the TV, where the threesome were now fucking each others' brains out. \n\n\"Fuck, baby, wow...!\" John managed to whisper at last. \"That was...Jeez...best, wife, ever...!\" \n\nSarah curled up next to him and lay her head upon his chest. She felt his breathing, the quick rise and fall of his chest; it was hypnotic, calming, and safe. Watching the fucking going on, on the screen, she casually draped one leg over his and snuggled into him. \n\n\"That was fun, sweetie, you were so turned on. But this-\" she nodded to the screen, \"This is too orchestrated, too contrived, and those people are way too, well, perfect...\" \n\nShe stroked his belly with her hand and slid her leg up and down his shins. \n\n\"I mean, my ass does not look like that...it didn't even look like that when I was twenty-two. And I'm sorry, but those tits...it's like gravity doesn't exist in these movies.\" \n\n\"It's just a porno,\" John replied, hugging her closer. \"It's fantasy, nothing more, nothing less.\" \n\n\"OK, so let's go with that,\" said Sarah, moving her body so her pussy brushed against his bare thigh. \"The fantasy. Is that your fantasy? Two girls?\" \n\n\"Oh no,\" John smiled. \"I'm not falling for that one. You are my fantasy, babe. I have everything I need, right here.\" \n\n\"Good answer, obviously,\" Sarah teased, \"But seriously, if I came to you and said 'Honey, I found that blonde, that one right there, and she's coming over to have a three-way with us...' let's say it was your birthday present or something...would that be your fantasy? It's honesty-time. I really want to know.\" \n\nShe was pressing his thigh right between her legs, looking for just the right pressure point to get her pussy going, as John studied her for a minute, but he didn't see any traps here. \n\n\"OK, yeah,\" he said eventually. \"You and another woman would be...totally hot. But it would have to be...how do I say it...it would have to be about all three of us or, at least, the two of us, as I don't know who this mystery third person is. But it can't be like these movies, where it's all about the guy, it would need to be something we want, which is why...I don't know, which is why I've never pushed it, because I want us to do things, uh, together. You understand?\" \n\nSarah was sitting up, now, riding John's thigh, one hand on the side of the couch, the other on his chest. The rhythm of her humping him was intoxicating. \n\n\"With the right person, that could be totally hot,\" John continued. \"The fantasy of it, it's...I don't know, I just don't wanna ever mess this up, mess us up, so that would have to be figured out but, right now? I am so fucking... turned on!\" \n\nHe looked over to the TV. The scene had switched - all new performers - a raven-haired beauty lying back on the bed, her legs open, a cute, curvy blonde going down on her as a large, muscular football-player type fucked her from behind. \n\n\"So, look at the screen baby,\" John said, as Sarah continued to grind her pussy into his leg. \"Pretend that big guy was me. Now, which girl would you be? The one getting fucked? Or the one getting her cunt licked out? Which would be more fun for you, baby? Do you want a big, fat cock inside you and a wet pussy on your face, or do you want a hot girl eating you out? No, devouring you completely as you watch me fuck her from behind? Huh? I think you like that one best, don't you? Talk to me, baby, tell me what you want, tell me what you want that hot girl to do to you.\" \n\n\"I want my pussy eaten...\" Sarah panted, her eyes glued to the screen as her hips rocked against John's leg. \"I want your cock, honey, oh I want it so bad, but I want my pussy eaten more.\" \n\nJohn knew she was speaking in the moment; there was no time to waste. He pushed himself down the couch and placed Sarah's legs either side of him. He was getting hard again, just a few strokes was all it took to get him ready to enter her. She slid onto him easily, her wetness fixing them together as she pivoted her hips to consume him fully. Kneading her palms into his chest, she rocked back and forth against him, her pussy hard and hot against his groin. \n\n\"Think about it baby,\" John panted. \"You're right there, riding me like this, and there's a gorgeous, sexy, hot girl rubbing you, licking you, kissing you...hard, wet kisses on your mouth, on your tits...running her hands across your ass while you fuck me.\" \n\nSarah was getting into this, her eyes half-closed in a dream-like state, every one of his words painting an impossibly horny picture in her head. \n\n\"Maybe she gives you a quick...swat,\" John continued, reaching behind Sarah and slapping her ass. \"Maybe she makes your tight little ass all red as you get fucked. Sound like fun?\" \n\n\"Oh yeah...\" Sarah moaned, totally lost in the moment. \"Fun, yeah...mmmm.\" \n\n\"Tell me...tell me, as you're fucking me...don't think...just say it. What does she look like? What does the hot girl look like?\" \n\n\"Hmmmm...Abby, it's Abby...Justin's mom, from the school.\" \n\n\"Keep going, baby.\" \n\nJohn arched his back slightly, eager to push his cock as far into her cunt as it would go. He could feel her climax begin to stir. \n\n\"She looks like Abby, but she's not Abby,\" Sarah continued, rocking faster and harder now, her voice rising in volume. \"Big tits, oh yeah...and she's blonde...I like blonde...and fun, I want fun! And she's tall, mmmm, oh, oh fuck, that would be so hot! Her eating my pussy, you kissing me as she rubs me, her fingers in my cunt, fucking me hard right up there, oh, oh god...oh BABY...!\" \n\nJohn dug his fingers into her hips, pulling her on and off his cock, her head thrown back, beads of perspiration beginning to slide down the side of her neck. \n\n\"I got you, baby...\" \n\n\"No, don't speed up, I- I- oh fuck, oh FUCK!!\" \n\nShe tensed, as John felt the world around them freeze, like the moment when a ball is thrown in the air and there's a split second when it's neither rising nor falling, it's as high as it can go before the descent begins. Sarah was in that moment, dissolving, before her own fall engulfed her and she collapsed against his chest, cumming and cumming, her belly sliding against his own, her pussy gripped tight around his cock as she released every last ounce of herself onto him. John steadied her above him as she came down, her tits heavy and hot as her lungs battled for breath. She stayed like that, sitting on his cock, loving how it felt inside her aching, hot pussy. \n\n\"Oh God...I sure needed that.\" she whispered, falling gently upon his chest. \n\nSo, yes, when Sarah had asked \"Do you remember 'that' night?\" John definitely had. \n\nBack To Business... \n\n\"John, honey, are you still there?\" \n\n\"Yep, just thinking about that night.\" \n\nHe was hard again, the memory so sharp, so vivid, he wished Sarah was there right now so he could fuck her. \n\n\"I know.\" Sarah said, \"Me too, right? So I've been, you know, thinking about it, for a while now, actually.\" \n\n\"Thinking about what? Which part? Sarah, baby, if you're gonna start talking dirty to me, then I'm gonna need to go take this call in the bathroom or something, 'cause I'm in a glass room and everybody can-\" \n\n\"No!\" Sarah cut in, \"Although that would be fun...\" \n\nJohn felt his cock pulse once more. He sat down and crossed his legs, self-conscious, as random people walked past the windows. \n\n\"This will only take a couple of minutes,\" Sarah continued, her voice a whisper now. \"But I've been thinking about that night and I, well, I liked the idea of it. The three of us, you know, another person.\" \n\nJohn re-crossed his legs. His erection was getting impossible to ignore, or hide. \n\n\"O-kay...\" he replied, hugging the phone to his ear. \n\n\"So anyway, I, er, I placed an ad.\" \n\n\"An ad?\" \n\n\"I thought it through, the whole thing, for a while now.\" \n\n\"Go on-\" \n\n\"And I knew it couldn't be with someone we knew, like, how awkward, right? 'Hey, Debbie, see you at the bake sale,' the day after she's had her mouth on my pussy. And we aren't bar people, so that's not going to work... So, well, an ad seemed like the best option.\" \n\n\"Keep going...\" \n\nJohn still didn't know what the hell to make of what he was hearing. Was this really his wife? \n\n\"So, anyway, the ad...\" Sarah went on, talking more quickly. \"I was half serious, half-not, I had no idea what I was doing or if anyone would even reply, but I got a ton of replies, even though most of them were just, well, just not right for us.\" \n\n\"Hold on a minute-\" John cut in, still waiting for his brain to catch up. \"When you say 'ad', do you mean, like, you posted a photo of us? Wait, please tell me you didn't use names...?\" \n\n\"Way ahead of you, sweetie. No pictures, just a few lines to describe us, how it was our first time, how we need someone we both connect with, that kind of thing. We gotta have chemistry, right? So I went through the responses, asked a few questions, narrowed it down to a couple, spoke on the phone...it was like screening for a sitter, really.\" \n\n\"Wow, you're really serious about this...\" \n\n\"Totally. At least, I am now I think I've found somebody...\" \n\nJohn didn't know how he was going to stop himself from jerking off, right there and then. He let his hand rest gently over his pants, confident that the desk would hide him, then, double-checking that the coast was clear, he slid a couple of fingers inside his zip. \n\n\"You're telling me you've found a woman to- to-\" \n\n\"Uh-huh.\" \n\n\"Fuck...\" \n\nHe felt his chest contract, as though to breathe now would actually kill him. \n\n\"Honey?\" Sarah asked, her voice a little anxious. \"You still there?\" \n\n\"Are you sure?\" John managed, eventually. \"I mean, don't get me wrong, I like the idea...love the idea...but, well, this isn't you. Is it?\" \n\nWatching porn, having great sex, sure, that was what they did, and they did it well but, this...? John knew this was way outside his wife's usual comfort zone, because it was outside of them. Still, he was more than happy to see where this adventure of hers was going. \n\n\"Honestly, sweetie?\" Sarah went on. \"This is something I've always known I wanted to try, I guess I just felt that I never needed to do it, because I love you and it's not like we don't satisfy each other, right?\" \n\n\"Sure, baby.\" ",
        "\"It just took me a while to realize that, well, that it's OK to want to do other stuff. It doesn't mean there's anything missing from what we have, it just means that there's different ways to have fun. As long as we talk about it, make sure we're on the same page, find the right person for both of us and it feels good, feels right. I don't know, I just-\" \n\n\"Baby,\" John interrupted. \"You sold me.\" \n\n\"You sure?\" \n\n\"If you are.\" \n\n\"I am...and so is Megan.\" \n\n\"Megan?\" \n\nNow the faceless fantasy girl had a name, the reality was really hitting home to John. His cock was so hard now, he knew he'd either have to run to the bathroom to finish himself off, or pour a glass of cold water over his legs. \n\n\"She seems...nice,\" said Sarah, oblivious to John's pain. \"I liked chatting with her. She was funny and, well... we're meeting her for drinks, and maybe dinner...tonight.\" \n\n\"Jesus-\" sighed John. \"You're killing me, here, you know that?\" \n\n\"But it's just to meet. I know that we're going to like her, at least, even if this doesn't go anywhere. I told her Nuestra Cocina, six-thirty. We'll get there at six, have a drink, feel it out, talk before she gets there. Worst case, we have a tequila and leave. Best case, we meet someone fun, have a great Mexican, and make more plans. But tonight is just a meet 'n' greet. No strings, no pressure, no big deal. What do you think?\" \n\n\"I think I'm gonna need a minute of alone time.\" \n\nMegan \n\nSarah was already at a corner table when John arrived, straight from the office. The rest of the afternoon had been spent in a series of trips to the bathroom as his mind went into overdrive at the prospect of a long-held fantasy finally coming true. More than that, he realized just how much in love he was with his wife right now and, even if nothing happened from this meeting, the fact that Sarah was willing to expand their sexual horizons together was such a fucking turn-on, John didn't know how he'd be able to keep his hands off her all evening. \n\n\"OK, so I ordered a pitcher of margaritas already,\" Sarah said, as John embraced her. \"I figured at least one drink would be in order. How was the rest of your day?\" \n\nShe looked into his face, all doe-eyed and innocent. \n\n\"How do you think?\" John replied, as he noticed a slight shiver run down his wife's arm. She was nervous, he could tell, but so was he. \"So, tell me what I need to know before this Megan gets here. Who is she? And what the fuck are we doing?\" \n\nHe smiled as he said this, Sarah casting an impatient eye around the bar for any sign of the margaritas. \n\n\"OK, sure, Megan, she's, well, Megan, which I just told you, again. I don't know how old she is, probably a few years younger than me? She's in our 'range,' anyway...\" \n\nSarah signed some air quotes. \n\n\"And she works for a 'design agency...'\" \n\nMore quotes. \n\n\"She's a light drinker, no drugs, she's social, but not a party girl. No serious relationship right now and she's 'bored' of the dating scene. She likes women, but she hates the 'label of bi,' as she called it. She just likes people, new experiences and was interested in our ad. We talked for about twenty minutes and, well, I just liked her.\" \n\n\"Female intuition?\" \n\n\"Let's hope.\" \n\n\"What does she look like? How will she know us? Is she just going to walk up to every table and say 'Hi, threesome?'\" \n\n\"No, smart-ass. She sent a picture, blonde-brown hair, a little long, like below the shoulder. She's neither thin nor plump, just kinda cute and normal. Hard to really tell from a single photo but, you know, cute!\" \n\nJohn was desperate to look at the picture but, just as the waitress brought over the margaritas, a girl, who had to be Megan, approached their table. She was all the things Sarah had described plus, John immediately noticed, the fact that she had a pair of killer tits - not breasts, but solid, D-cup, gravity-defying tits. She was a few inches taller than Sarah, about five-nine, and she was dressed in nice, tight jeans, modest heels and a sheer, blue, V-neck t-shirt. \n\nSarah stood up and went to greet her with a big, open smile. \n\n\"Megan? Hi, I'm Sarah. So you found the place OK?\" \n\nThey embraced like old friends and Megan took the seat opposite, offering her hand to John. \n\n\"John, right?\" she asked, eagerly, her eyes sparkling, her face a picture of genuine warmth. \n\n\"Pleased to meet you, Megan.\" \n\nHe could see right away why his wife liked her. The connection felt instant. She was cute, very cute, with a bubbly, confident nature, which made those around her feel immediately at ease. John could tell she was a little nervous, however, just like them, but she was in control of it, something which was turning him on already. \n\nMegan was eyeing the pitcher. \n\n\"May I pour?\" she asked, rhetorically. \"I could definitely use a drink.\" \n\nMegan reached across and filled the glasses as John and Sarah exchanged a loaded glance. \n\nAfter thirty minutes of small-talk, basic information and niceties, Megan seemed keen to get down to business. \n\n\"So, look,\" she said. \"You two are a super-cute couple and I- I like the look of you, you seem connected, content, happy. So, why me? Or rather, what are you, you know, looking for?\" \n\nSarah was right on it. \n\n\"We've had this fantasy about sharing with another woman,\" she said, plainly, much to John's surprise. \"And, well, it just feels like the right time. And when we spoke, it felt...good, somehow. I just knew you were the one. I knew John would like you, and I knew it was a good idea to meet. Although-\" \n\nSarah took another sip of her drink. Courage. \n\n\"Go on,\" said Megan. \"It's OK.\" \n\n\"Well I hate to make this sound like you're interviewing for a job, but I...we...need to ask you some really, uh, 'direct' questions?\" \n\n\"Fire away.\" \n\n\"OK, so, er, have you been tested and... all that stuff?\" \n\n\"Clean as a whistle. I can show you the results. I'm a safe girl, a smart girl. I know what I'm getting into when I date. So yeah, I'm clean.\" \n\nShe looked from Sarah, to John, and back again. \n\n\"And you two?\" \n\n\"No problems here!\" John piped up, a little too quickly. \n\nMegan laughed, the ice broken, tensions eased. \n\n\"Great.\" she said. \"Although I hope you don't mind if I ask for the papers from you, as well? I know, I know, buzz kill, right? But it's always best to get these things out of the way in the beginning. Helps everybody relax a little.\" \n\nJohn and Sarah nodded their assent. It was clear that Megan was way more experienced at this than they'd originally thought. \n\nSarah leaned in to the table as John refilled their glasses. \n\n\"So you've done this before, clearly,\" he said. \"With another couple I mean?\" \n\n\"You mean like this?\" Megan giggled, as she looked around them at the busy restaurant. \"Meeting married couples for a pre-threeway interview? Actually, no, I can't say that I have. But I've done it a couple of times with my boyfriend and a girl we knew. Super-fun nights, both of them, although that first time was just awesome.\" \n\nHer eyes seemed to drift off as the memory came back to her. \n\n\"Why was it awesome?\" Sarah asked, intrigued. \"Tell us, we want to know.\" \n\n\"I think it was a chemistry thing, gotta have the chemistry, right?\" \n\nSarah and John smiled at one another. \n\n\"But it was also about not rushing it.\" Megan continued. \"That first night, we'd gotten home after a club and we stayed up almost until dawn. There was no hurry, no clock to watch, nobody had to be anywhere and we knew we could sleep in if we wanted. We were freer, just going with the moment, however long that moment was going to last, you know? But the second night, man, we all felt it, that impatience, that knowledge that the fun was coming to an end and we all had normal shit to get on with the next day, so we didn't enjoy it as much. We didn't allow ourselves to enjoy it, you know what I mean?\" \n\nThey did know what she meant. In fact, John and Sarah had already decided that Megan had passed the interview. Not just that, but they were both desperate to know when she could start. \n\n\"So, look,\" Megan went on. \"Provided you guys want to go through with this - with me, I mean, I'd want to, uh, get to know you a little better? What you like, what you expect, what you want...\" \n\n\"We're all ears.\" John replied. \n\n\"Great, OK, so I've got this little game, I think you'll like it. I do it with prospective boyfriends, helps us decide if we're a good match or not, gets us all hot and bothered and, well, we'll see what happens from there. Sound good?\" \n\n\"Sounds perfect.\" Sarah agreed, squeezing John's leg under the table. \n\n\"Basically it's a truth or dare, but without the dares.\" said Megan. \"It goes like this - I state something I 'like' and, if anyone at the table likes the same thing, they take a drink. If not, they don't. Then it goes around the table and ends up getting really personal, really fast.\" \n\n\"Let's do it,\" said John, signing to the waitress for another pitcher. \n\n\"Right, I'll go first,\" said Megan. \"Then Sarah, then you, John.\" She took a deep breath and smiled at them both. \"I like...long, wet kisses.\" \n\nThere was a pause, before they all took a slow sip of their margaritas. \n\nMegan nodded at Sarah. \n\n\"OK, my turn.\" Sarah said. \"I like...having my neck kissed.\" \n\nThey all drank again, and Sarah looked to John. \n\n\"I like...\" he murmured. \"...Blow-jobs.\" \n\nSarah and Megan looked at one another. \n\n\"Well you said it was going to get very personal, very quickly!\" John protested. \n\nSarah gave him a gentle kick. \n\n\"OK, OK,\" John conceded. \"A better statement would be, I like oral sex.\" \n\nThey all drank. \n\n\"Giving or receiving, though?\" Megan shot back. \"You gotta be more specific.\" \n\n\"Both!\" replied John and Sarah, in unison. \n\nEverybody drank again. \n\n\"And I like big breasts,\" John continued, not caring whose turn it was. \n\nThey all drank, as Sarah noticed Megan fixing her with her gaze. \n\n\"I like...going down on a woman.\" Megan purred, her eyes never wavering. \n\nBoth John and Megan drank, but Sarah lowered her head, her hands clasped on her lap. \n\n\"I've, uh, never actually done that,\" she confessed. \"So I don't know if I like it or not.\" \n\nMegan was smiling from ear to ear, something John noticed straight away. \n\nThe waitress broke the awkwardness with another jug of margaritas, which John insisted the girls share. He also ordered tacos to keep them from getting smashed, as the game continued in earnest. \n\nThey all drank to sex in the shower, screaming orgasms, talking dirty, hotel sex, watching porn, masturbating, masturbating in front of people, watching partners cum, blindfolding, being blindfolded, and being tied up. Megan and Sarah liked vibrators, giving hand-jobs, dressing up, role-play and having a finger in their ass when they cum. Megan went one further and confessed to loving anal sex; something else Sarah shied away from, although she did admit to liking 'some stuff back there,' now and again. Buzzed and already ridiculously hard, John had jumped in with \"I like to see two women kiss.\" \n\nEveryone drank, as Megan leaned in towards Sarah and threw John a wicked smile. \n\n\"You mean like this?\" \n\nAnd she proceeded to give Sarah a long, hard kiss on the mouth, nothing wildly inappropriate, but enough to make John even harder and give Sarah a definite flush of desire. \n\n\"Uh, yeah,\" John replied, as Megan pulled back and licked her lips. \"Just like that.\" \n\nSarah 's own answer was silent. She took a drink. \n\nAfter a time, the three of them settled into a comfortable ease, laughing and joking around like old friends. When Megan left briefly to use the bathroom, it was the first time John and Sarah had the chance to offer their appraisal. \n\n\"She's great, baby,\" said John. \"I totally get why you chose her.\" \n\n\"I knew you'd like her. And so do I, a lot.\" \n\n\"Look, this might be a bit fast, but I was thinking about what she said, about taking time?\" \n\n\"Uh-huh?\" \n\n\"Well you know that cabin we rented from Johnny, about an hour north of here? What if we did an overnight? Next weekend? I know it's empty because Johnny's had a cancellation; he's desperate for a taker. We could drop the kids at aunt Helen's, head up there, cook, hike, lounge outdoors, just have some fun...with her...with us?\" \n\nSarah chewed her lip for a moment, her mind racing, the margaritas and the heady atmosphere creating a buzz, which excited her more than anything she'd felt in years. \n\n\"That's a great idea,\" she replied at last. \"Let's ask her.\" \n\nMegan returned and sensed immediately that plans had been made. \n\n\"Looks like you've been talking?\" she smiled, sliding back into her seat. \n\n\"We have.\" replied Sarah, placing a warm palm on Megan's hand. \n\n\"What are you doing next weekend?\" \n\nThe Trip \n\nIn the ten days between meeting Megan and heading to the country, John and Sarah could think or talk about nothing else but their trip. They got their tests, gave Megan the good news, and Sarah had met up with Megan a few more times, ostensibly for coffee but, unbeknownst to John, their burgeoning friendship had already become something quite close. On the morning of the trip, bags packed, route navigated, and large coffees filled, John and Sarah had picked up Megan at her apartment. \n\n\"Sit up front.\" Sarah had offered, as Megan threw her bag in the back. \"That way you won't feel like we're just driving you somewhere, like a passenger. We want you to feel as much a part of this experience as we are. Come on, jump in.\" \n\nMegan appreciated the gesture, and all the effort John and Sarah were making to make sure she was comfortable. She liked them both, Sarah particularly, and she couldn't wait to see where the weekend was headed. \n\nThe trip was uneventful but, as they eventually drove through more heavily wooded areas, the sun poking through the dense trees at irregular intervals and the silence around them becoming more palpable, the three of them relaxed into a proper vacation mood. Stopping at a local market to pick up supplies, firewood and a few bottles of wine, it was only another ten minutes further up the narrow, windy roads before they pulled up to the cabin and John killed the engine. \n\nThe 'cabin' was more like a proper house instead of the wooden, log variety. There were neighbors, but nothing visually or audibly close. For what this trio had planned, the place was as secluded as they needed. \n\n\"John can get the bags,\" said Sarah, as she and Megan got out of the car. \"Come in, I want to show you around.\" \n\nSarah nodded to John as she led Megan inside the house. She liked the place immediately. It was rustic, with a big front deck area, two bedrooms (one with a king-size bed,) a deep bathtub easily big enough for two, if not three, and an imposing fireplace, which added to the cozy, intimate, feel. It didn't take long to unload and unpack, each of them keen to get on with their weekend. \n\n\"How about we start with a hike, let Megan get her bearings?\" John suggested, as he put away the last of the wine. \n\n\"Sure, sweetie,\" Sarah replied, \"But before we do, Megan and I have been talking.\" \n\n\"I like the sound of that.\" \n\n\"About rules.\" \n\n\"Huh?\" \n\n\"Well, to make this weekend work for all of us, we need to establish boundaries.\" \n\nSarah looked to Megan for back-up. \n\n\"Just a few, though.\" Megan grinned. \"But Sarah's right, it's important to know where the lines are.\" \n\n\"OK, shoot.\" \n\nJohn shut the cupboard and leaned back on the kitchen counter-top, his arms folded, waiting to receive his 'instructions.' \n\n\"OK, so number one,\" Sarah began, tentatively. \"No doing anything...sexual...unless we're all present. That way, nobody gets jealous, or feels left out at any time.\" \n\n\"Including us?\" John inquired, flicking a finger between himself and his wife. \n\n\"Including us.\" Sarah nodded, smiling. \n\n\"Oh, OK.\" \n\nShe couldn't tell if John was disappointed, but she agreed with Megan; everyone had to be included in the fun, otherwise the balance would be upset and nobody would be having any fun at all. \n\n\"Two,\" Sarah continued. \"Megan, you're not a guest here, you must treat this place as yours, as much as we will. Do what you want to do, when you want to do it. Help yourself to anything, don't ask, just do what suits. Agreed?\" \n\n\"Sure thing.\" Megan smiled back. \n\n\"Three...well, three and over we just figure out as we go along, I guess.\" \n\nJohn unfolded his arms and winked at both girls. \n\n\"So, can we do that hike, now?\" \n\nSarah hit him playfully on the arm. \n\n\"Get your boots on, country boy...\" \n\nShe followed John into their bedroom to change for the hike, but were surprised when Megan came in to change with them. It wasn't a bad thing, certainly, although watching Megan unbutton her jeans and kick off her sneakers in front of them, was hard to ignore. \n\n\"This is OK, right?\" Megan asked, feeling the attention upon her. \"Me in here...\" \n\n\"Totally!\" John replied, quickly. \"It's absolutely OK!\" \n\nMegan stripped down to her underwear and removed her bra as she fished out her sports top and a pair of shorts. Although trying to act cool, John and Sarah could not help but stare at Megan's beautiful body. She turned around to face them, her breasts full and heavy and perfectly-formed. \n\n\"Hey guys,\" she said, taking a step closer to both of them. \"I'm really looking forward to having some fun with you today. Let's work up a bit of sweat, huh?\" \n\nShe leaned in, embracing them, one in each arm, her tits pressing in among them, before she stepped back, finished dressing and disappeared into the kitchen to fill some water bottles for their hike. \n\nGlancing at her husband, Sarah stroked his arm, then let her hand wander down to the bulge already growing in his pants. \n\n\"Easy, tiger...\" she whispered, squeezing him gently. \n\n\"Tell me you're not wet right now.\" John replied, trying his best to control his urges. \n\n\"I'm not wet right now.\" \n\nSarah changed quickly and left John to finish up. He grinned after her. She was a terrible liar. \n\nThe Hike \n\nThe terrain wasn't strenuous but it was disorienting and, after a couple of hours chatting, laughing, and general oblivion about where they were actually going, they realized they should perhaps head back. \n\n\"I'm pretty sure I can retrace our steps,\" said John, as he and Megan turned around and began to make their way back down the track. \n\n\"Wait a second,\" Sarah called out, still stood on the spot. \"We're pretty secluded back here, and this is our special weekend...\" \n\nShe walked slowly down towards John, placed her hand firmly upon his crotch and squeezed. \n\n\"Why don't we have a little fun before we go back?\" \n\nShe leaned in and kissed him, her hand beginning to massage his growing erection through his shorts. John slid his hands around her waist and began kissing her back, hard and hot as Megan, knowing she did not need an invitation, moved next to them and guided them all to a thick tree just off the side of the track. \n\n\"How's this, baby?\" Sarah whispered, teasingly, her hand moving faster and firmer over his covered cock. \"Out in the open, broad daylight, with two women just waiting to service your every need. A hiker, a neighbor, anybody could come by at any minute. I just don't know how much time we have? What do you think, Megan? Do you think we have time?\" \n\nMegan stepped closer to John and pinned him against the tree. \n\n\"I don't know Sarah,\" she growled. \"We may have to be quick. I mean, what would someone say if they saw me doing this...?\" \n\nShe turned Sarah's face to hers and locked her lips onto Sarah's mouth. \n\n\"Or this...?\" ",
        "Then she went to John and ran her tongue along his lips before sliding it inside his mouth, probing, searching. \n\nAs Megan continued to kiss them both, John reached down and began unbuttoning his shorts, desperate to free his cock. Megan and Sarah then pulled away and began making out against the tree as John watched, his hands still fumbling with his shorts, cursing himself for not choosing the zippers. \n\nSensing his frustration, Megan reached across and tugged at John's shorts, pulling them down over his butt, Sarah's mouth still upon hers, their kissing now urgent and frantic. Now stood in his underwear, John felt Megan's hand upon him, pushing at his bulge, as she pulled her mouth away from Sarah's and began kissing her neck and collarbone instead. Sarah had her head thrown back in a lazy contentment, loving how Megan's hot breath felt upon her neck. \n\n\"Mmmm,\" Sarah moaned, \"That feels so good...\" \n\nSeeing how in control of the situation Megan was, John was happy to just stand there, Megan's hand brushing delicately over his covered cock, watching as his wife surrendered to Megan's delicate caresses and kisses. As Megan's attentions intensified, Sarah grabbed Megan's ass and pulled her even closer, before opening her eyes and staring at John. \n\n\"Is this hot, baby?\" she asked. \"How are you doing over there?\" \n\nShe looked down at his cock, his erection growing even larger under his briefs as Megan worked him. \n\n\"I'm doing real good, honey, I just need a little, a little-\" \n\nBut before he could finish, Megan face was on his, kissing him with the same passion she'd shown to Sarah, but it was short-lived. Megan already had her thumbs hooked into John's briefs, pulling them down in one swift, well-rehearsed motion. Now fully exposed in the cooling late afternoon air, John watched as Megan fell to her knees and took him full in her mouth. He inhaled deeply, as the surrealism of the scene suddenly hit him. In all the time he had known his wife, he had never kissed another woman, had never touched another woman. Hell, he hadn't even thought about another woman. Yet here he was, his wife watching as another woman's mouth hung off his cock. \n\nHe felt Sarah nipping at his earlobes, a place she knew had always turned him on. \n\n\"Do you like this, baby?\" she asked gently, her breath tickling the side of his neck. \"Do you like watching her sucking your cock? Are you watching? Are you watching good? You see how you're sliding in and out of her hot, little mouth? Does it feel good?\" \n\nShe was flicking her tongue around his whole ear, now, as John felt his whole body erupt in tiny little earthquakes. \n\n\"Look at your huge cock fucking her mouth, baby,\" Sarah continued. \"Do you want to cum in it? Tell me, baby, do you want to cum in her mouth?\" \n\nThen she stroked the back of his neck and gently pushed his head down so he was looking directly at Megan. \n\n\"Tell her,\" Sarah murmured. \"Tell Megan what you want to do, baby.\" \n\nMegan lifted up her chin for a moment and stared into John's eyes. \n\n\"Yeah, honey,\" she purred. \"Do you want to cum in my mouth? Is that hot, because my mouth's hot for you, baby.\" She parted her lips wide and licked them slowly. \"Is that what you want, huh? To empty your cock into my hot, horny mouth?\" \n\nShe bent down again and gave him a slow, hard lick up the underside of his shaft then returned her gaze to John's. \n\n\"That's what Sarah wants, honey,\" said Megan. \"That's what your wife wants, to see you cum in my mouth, all hard and hot and wet, she wants to see it so bad, you know she does. And I swallow, honey, I wanna swallow all your hot cum, as much as you've got. Show me how much you've got?\" \n\nShe lowered her mouth back onto him and began sucking more vigorously as her hands cupped and squeezed his balls, matching the rhythm of her mouth as John struggled to stand up, his legs already buckling beneath him. But Sarah had sensed his anxiety, and was using her body to rub against his back, supporting him as Megan continued to work her magic. \n\nFeeling the power of his climax begin to build, John turned back to Sarah; he had to know she was a hundred percent OK with what he was about to do, with what he was desperate to do. \n\n\"I'm right here, baby...\" she whispered, her hand running up and down his back like a delicate feather. \"Let it go, baby, let it go...\" \n\nJohn returned his focus to Megan as she feasted on his cock, her hands working overtime on his balls and taint, delivering sensations he never knew existed. \n\n\"Yes...\" he groaned, his breathing getting shallower. \"I want to cum in your mouth, I love how my cock feels in there. Megan, oh Jesus, Megan, I want to...want to...fuck your...fuck your...oh god keep going, keep that hot, little mouth...fuck...FUCK!\" \n\nAs he felt the rush of his climax begin to engulf him, John turned back to Sarah and grabbed her face, kissing her hard, forcing his tongue inside her until he couldn't consume her any further. Then his cock exploded, as he thrust his hips further into Megan's face, jamming his cock inside her mouth as he came and came, his hot cum shooting down her throat. True to her word, Megan swallowed him, greedily, gripping the base of his cock, knowing exactly how to squeeze every last drop from him. \n\nWhen he was finished, Megan stayed on her knees and dutifully cleaned him up with her tongue, kissing and licking his tip like an adoring servant. Then she stood up and, before either John or Sarah could react, Megan reached for Sarah's face and kissed her hard, wanting her to taste her husband's cum on her lips, wanting her to be a full part of what just happened. \n\nAnd then all was silent, save for the birds in the trees and the distant rumble of some faraway storm, which served only to remind, the three of them that they still had a long walk ahead. \n\nEvening Falls \n\nBack at the cabin, John poured some much-needed drinks as the girls kicked back on the chaises, which sat upon the front deck. The sun was setting and, as John handed out the wine and some snacks, he wondered if the incident in the woods was something they should talk about. To gauge the mood, he knelt down beside Sarah and took her socked foot in his hands. \n\n\"Massage time?\" he ventured. \n\nSarah murmured her agreement and settled back in the chaise to be pampered. \n\n\"Megan, you're next,\" John smiled, as he began to rub Sarah's feet. \"I'm pretty good at this, right hun?\" \n\n\"The best, baby.\" \n\nSarah clinked glasses with Megan as John went to work. He knew his way around his wife's body, expertly digging his thumbs into her arches and pressing down on all the right points. \n\n\"Oh, that is good.\" Sarah moaned, \"Megan, honey, you are in for a treat. This feels amazing.\" \n\n\"Well I think someone's feeling a bit grateful.\" Megan laughed, raising her glass to John. \n\n\"You bet!\" John replied. \n\n\"OK, so let's see what you got.\" \n\nMegan stretched a bare foot out towards him, as John looked to Sarah, who nodded her assent. Sliding her foot into his hands, Megan was surprised to feel an instant calm wash over her at John's touch. She hadn't realized how tense her muscles were but, within moments, she felt herself completely relax and even feel a bit sleepy. \n\n\"Oh my god,\" Megan cooed, turning her head to Sarah. \"You're one lucky lady, alright.\" \n\n\"I think, tonight, we both are.\" Sarah smiled back. \n\nThey chatted on the deck for an hour or so, enjoying the wine and the snacks and, most importantly, the chance to recharge their batteries, before John decided to get dinner ready. Seasoned steaks, salads and veggies, all healthy, hearty stuff. \n\n\"Fancy some music?\" Megan asked, when she and Sarah came in to help him. \n\nShe set something up from her phone and she and Sarah began to dance as John continued to cook, but Sarah wouldn't leave him alone, pulling him away from the sink for a grind and a rub to the rhythm. \n\n\"Hey!\" John protested, a peeler in one hand, a bunch of arugula in the other. \"If you guys want to eat tonight, then...\" \n\nBut his words were falling on deaf ears. Sarah was already swinging him across the floor, a little tipsy from the wine, but more carried away with their naughty adventures. Megan joined in, the three of them rocking across the cabin from room to room, being goofy, being free, being completely caught in the moment. \n\nDuring one particularly sexy number, Sarah reached up to her husband and put her arms around his neck, grinding her body against him, seductively. Keen to join in, Megan was quick to come up behind them and sandwich herself in between. \n\n\"If I don't get the food on that grill, we're going to starve...\" John insisted. \n\nWithout words, the two women 'danced' him back to the kitchen and swayed and rocked around him while he tended to the steaks. Ten minutes later, they were feasting on their food like carnal gods devouring a bloody sacrifice. The air was loaded, erotic, dirty and, despite the abundant and overflowing plates upon the table, hungry. \n\nAfter dinner, John lit the fire and they all sat around on the floor, glad to have the huge, sheepskin rug beneath them as the temperature outside had clearly dropped several degrees since their hike. Megan went to the bookcase, twisting to some music only she could hear, but the way she moved was so hypnotic, so seductive, John and Sarah couldn't help but watch and drink in every move she made. \n\n\"Hey, Megan, honey, stay there for a second.\" said Sarah. \n\nShe got to her feet, took Megan's hand and began to lead her off to the bedroom. \n\n\"Be right back, baby.\" she called back over her shoulder. \n\n\"But- What the-? I thought we said-\" \n\nBut they were already gone. John sat patiently, unsure what to do, but he knew he shouldn't follow them, not if he wasn't asked. He knew he'd had his big treat already in the woods, earlier. Was it really so unfair not to expect the girls to treat themselves, too, if they wanted? He could hear movement and a few muffled voices from the bedroom, but little else to tell him what was going on. Trying not to feel left out, John took a big gulp of wine from his glass and settled down beside the fire, preparing for a long wait. \n\nBut, just a few minutes later, he heard the bedroom door creak open, slow and deliberate. \n\n\"Ready!\" Sarah called, a few stifled giggles escaping from Megan, behind her. \n\nAnd then Sarah was leading Megan back into the room. Sarah was wearing a white, lace chemise that came to just below her hips. Peeking out from underneath was a white thong, but there was nothing else, save for the sexy pair of mules on her feet which showed off the results of her recent pedicure; bright red toenails she'd obviously had done especially for this weekend. John felt his groin stir into life, but before he could compliment his wife, Megan stepped out from behind her, and his desire was doubled. \n\nBarefoot, Megan was wearing a sheer, black thigh-length robe, which fell open at the front. Underneath she had on a black peek-a-boo bra and black boy shorts, which looked as hot as hell while, on her head, she wore a cute kitten-ear headband which made her look innocent and playful. \n\n\"Wow,\" was all John could manage at the sight before him. \n\n\"You like, baby?\" asked Sarah, knowing full well how turned on her husband was right now. \"Megan helped me pick this out. I had to try on a few outfits before we settled on this. And Megan? Well she looked good in everything, but it was me who had the casting vote on what she should wear. And the ears were my idea. Super sexy, huh?\" \n\n\"You look amazing, both of you.\" John replied, then winked purposely at his wife. \"And your ass looks amazing in that thong,\" \n\nSarah smiled, turned and slapped her butt, playfully. \n\nMegan stepped forward and took John's hand. \n\n\"Come on,\" she said. \"Follow me.\" \n\nShe led him to a large Chesterfield in the corner of the room, the light from the fire casting tall, dark shadows on the wall behind them. Sarah followed, stalking them both like a panther after its prey. \n\n\"Sit.\" Megan commanded. \n\nShe pushed John gently into the chair then turned to Sarah. \n\n\"We were in the changing room together, last week, trying these on.\" \n\n\"I thought you'd only met for coffee?\" John queried, but not minding at all the 'deception.' \n\n\"We did that, too.\" smiled Sarah, as Megan stood aside and let John drink in the full sight of his wife in front of him. \n\nMegan slid her hands around Sarah's waist and began kissing her neck. \n\n\"Just look at this body, John.\" Megan said, huskily. \"Isn't it amazing?\" \n\nShe spread her palms across Sarah's thighs then pulled her body back into hers. \n\n\"And these legs...so firm and smooth.\" \n\nThen she lifted her hands and rested them on Sarah's hips. \n\n\"And her hips, oh man...\" \n\nMegan stroked Sarah up and down the side of her body, then reached in front of her and pressed her stomach. \n\n\"And this flat belly, John, I could just eat off of it...\" \n\nAll the time, Sarah was gazing down at her husband, her tongue sliding across her lips and her eyes closing slightly every time Megan stroked her. \n\n\"And these tits, oh my god, John. Look at these perfect, hot tits.\" \n\nJohn watched as Megan moved her hands up over the chemise to cup both of Sarah's breasts over the fabric. The sight of another woman holding his wife's tits in her hands was almost too much for him. He was desperate to stroke himself, desperate to be stroked. He couldn't stand it. After a few seconds, Megan reached inside Sarah's shirt and gently pinched her nipple. Sarah gasped and shuddered slightly, wanting to look at Megan, but Megan turned her face back to John. \n\n\"Stay there, honey, be patient now.\" she smiled. \"I think you're getting your husband all hot and bothered. And we haven't even started yet. So where were we?\" \n\nMegan brought her hand up to Sarah's face, parted her lips and pushed her finger inside Sarah's mouth. Sarah began sucking, greedily. Megan kept her other hand on Sarah's nipple, squeezing it sharply, as she pushed her finger in and out of Sarah's mouth. \n\n\"That's right,\" Megan encouraged her, \"Get it nice and slick for me.' \n\nSarah sucked harder, faster, as Megan kept her eye on John, needing to keep him focused, contained. \n\n\"And, hey,\" Megan called over to him. \"We haven't talked about this amazing...cunt.\" \n\nMegan removed her finger from Sarah's mouth and lifted the hem of her chemise, exposing her thong. Sarah was so turned on, she was already soaking wet, the thin fabric doing little to hide the signs of her arousal. Megan slid her wet finger under the thong and pressed hard onto Sarah's clit, a small cry emanating from Sarah's throat as Megan began to masturbate her. \n\n\"Jeez...\" John whistled, squirming in his seat. \n\nHe was not really breathing, but suddenly his lungs forced a massive breath down inside him. Although fully clothed, his shorts were tightening impossibly around his cock. He needed release. \n\n\"Is this doing it for you, John?\" Megan asked. \"It's doing it for your wife, I can feel it. She's hot, John, and she's wet, she's so fucking wet right now.\" \n\nMegan bent her knees slightly and Sarah cried out again as Megan pushed her finger deep up inside her. \n\n\"Oh she's nice and tight, John, baby.\" Megan whispered. \"I can imagine how this tight, little cunt feels around your big, hard cock.\" \n\nSarah bucked as she felt Megan slide another finger into her. \n\n\"Yeah, oh yeah, John,\" Megan went on, \"She is pouring all over me, she is soaking wet, she loves me fucking her with my fingers. Are you liking it, too?\" \n\n\"Yes, yes I am...\" John gasped, his fingers reaching into his shorts. \n\n\"No!\" Megan shouted, \"Not yet.\" \n\nJohn obeyed, his cock physically hurting him now, so desperate was it to spring free. \n\n\"I've been thinking about you both attacking me, all week.\" Megan said, as she pushed her fingers further into Sarah. \"Did you masturbate about me? Did both of you cum, thinking about me? Huh? I know I did. I fucked myself so hard just thinking about the both of you.\" \n\nShe leaned into Sarah, pulling her body back towards her, hooking her pussy up with her fingers, almost lifting Sarah from her feet. John watched his wife's face, her eyes closed in ecstasy, her partially exposed breasts heaving upon her chest and her legs trembling with desire as Megan worked her. \n\n\"Do you know what else I thought about?\" Megan went on, her mouth inches from Sarah's ear. \"I thought about those perfect, luscious lips going down on me. Licking...my...pussy. Sucking...my...cunt! Because I know you've never done it, but I know you want to, I know you want to do it so bad, with me. I know you want to eat my pussy, Sarah baby, I know how much you want my cunt in your face. So tell me, what are we going to call it, Sarah? My plump, pink pussy? My hot, wet cunt? Tell me...\" \n\nSarah's legs were shaking, twitching, her head pushed back against Megan. She was rising up in her shoes, opening her legs as wide as they would go to give Megan full access, but then Megan suddenly removed her damp fingers and began running her hands across Sarah's body instead, feeling every curve, every valley, every crevice of her hot, wet skin. Then Megan grabbed the chemise and pulled it roughly over Sarah's head, shaking her momentarily from her reverie. \n\n\"You want to eat my pussy, don't you Sarah?\" Megan whispered, as Sarah stared at her, almost trance-like. \"You want my cunt on your face, you want me to cum all over you.\" \n\nJohn continued to watch as his wife stood in front of him in just her thong and skimpy heels. Her pussy was glistening, her nipples like bullets standing hard and stiff upon her chest as Megan remained behind her, pinching and teasing her. Then she quickly span Sarah around to face her, giving John a front row view of his wife's magnificent, tight ass. Megan kissed Sarah fully on the mouth, but Sarah wanted more, pulling Megan to her and devouring her lips, her mouth, her face, sucking the air out of her, before forcing her hands down the back of Megan's robe. \n\n\"John, your wife's a little wet,\" Megan said, as Sarah continued to rain kisses upon her. \"I think she'd be more comfortable naked, don't you?\" \n\nMegan took a step back from Sarah as John reached out and pulled his wife's ass towards him and slid the thong over her cheeks and down her legs. Stepping out of it, Sarah bent down a little, pushing her ass into John's face. He responded by showering her butt in kisses and grabbing handfuls of flesh, maneuvering himself so he could get at her asshole with his tongue. He could smell how turned on she was, she was pure sex right at that moment, as he buried his face in her ass and searched out her hole with his mouth. \n\nMegan also knew how turned on Sarah was. She began slowly removing her robe, holding Sarah's gaze in hers, never breaking eye contact for a second. As the robe fell to the floor, Megan unhooked her bra in then stepped closer to Sarah and placed Sarah's fingers in the elastic of her boy shorts. \n\n\"Help me out of these, baby?\" she asked, demurely. \n\nBending down even further, Sarah quickly slid down Megan's shorts and began kissing the inside of her bare thighs. Behind her, John was probing Sarah's asshole with his tongue. Megan reached down, held Sarah's head in her hands and stroked her hair, before stepping back and gently pulling Sarah to her feet. \n\nWith no words needed, Megan led Sarah the few steps back into the bedroom and lay back on the bed, opening her arms and legs wide. Sarah climbed onto the bed and fell on top of Megan, their kissing urgent, frantic, as John appeared in the doorway, already naked, his hand gripped around his cock as he watched his wife and Megan get it on right in front of him. \n\nMegan again took Sarah's head in her hands and began to direct her mouth over her arms, her chest, her belly, Sarah kissing every piece of Megan's skin she found beneath her lips. As Megan pulled Sarah's mouth over her chest, Sarah began to nip and bite hungrily at Megan's tits, desperate to eat her, to taste her, loving how another woman's breasts felt upon her lips. Sucking on one of her nipples, Sarah looked up to Megan for approval. ",
        "\"That's right, baby,\" Megan whispered. \"Just like that. You're so hot, honey, so goddamn hot.\" \n\nMegan glanced over at John, who was pumping himself hard, now. She was getting off just as much on watching John, as feeling Sarah's mouth on her tits. \n\n\"Oh yeah...yeah!\" Megan moaned, sucking in every ounce of air around her as Sarah feasted on her breasts. \"Eat me up, baby, eat me up!\" \n\nMegan opened her legs wider and gently pushed on Sarah's shoulders, forcing her to fall into the gap. \n\n\"So is it pussy, or cunt?\" Megan asked, hooking her knees over Sarah's shoulders. \"Have you decided? What is this to you, huh? Look at it.\" \n\nMegan guided Sarah's head down between her legs and Sarah paused a moment before pressing a finger against Megan's clit. \n\n\"Pussy,\" Sarah whispered. \"It's your pussy, your beautiful, hot, wet pussy.\" \n\nSarah reached her hands up to keep playing with Megan's tits as, down below, she rubbed her own breasts against Megan's pussy. \n\nMegan let her head fall back into the pillow as, at the end of the bed, John stepped forward, his cock huge and angry. He parted his wife's legs with his hand and, although her position meant he could not gain full access, he could at least use his mouth to caress and pleasure her and maybe pull her open a bit. \n\nDespite this being her first time going down on a woman, Sarah had long since abandoned herself to the moment. She felt no embarrassment, no insecurity and no fear, as she squeezed Megan's huge tits, high above her, and buried her head in her cunt. Her smell was intoxicating, Sarah couldn't get enough of it, she wanted to drink it in, devour it, fill every part of her body with it. Hitting Megan's clit again and again, Sarah could feel both their bodies falling and rising in a natural rhythm. \n\n\"Fuck, Sarah, yes, yes! That's it, right there, oh god!\" Megan was crying. \"John, can you see what your wife is doing to me? She's sucking my clit so hard, John, she's got me so wet, your wife is eating me out so bad there's nothing left of me, she's, she's, oh Jesus Christ!\" \n\nBehind her, Sarah could feel John probing her ass, trying to get to her pussy, too, but all her attention was on Megan. Knowing what she liked herself, she began doing the same things to Megan, flattening her tongue and running quickly up and across her slick slit until she reached the nub of her clitoris, then back down again, teasing her just enough to send ripples of pleasure coursing through her, but not enough to make her cum, not yet. Sarah felt a warmness build in Megan's hips as she ate her out, Sarah pleased at how much Megan obviously loved what she was doing. \n\n\"Fuck, Sarah, your mouth feels so good on my pussy, I love you eating me, I love feeling your tongue in my cunt.\" Megan panted, as she continued to writhe and slide up and down the bed. \"John, are you watching? Are you watching your wife fuck me with her mouth?\" \n\nJohn rose up and drank in the sight of his wife's head buried between another woman's legs, then he gave Sarah a tight whack across her exposed pussy, open behind her, underneath her peachy ass, her legs slightly parted, her wetness like a bullseye waiting to be shot. John moved up the bed, drawing his hand across his wife's back, before pushing his fingers into her hair and twisting it, pushing her face further into Megan's pussy. Both Sarah and Megan moaned with pleasure, which turned John on even more. Already he'd been blown away by how aggressive Sarah had behaved, sexually, since they'd got here, how uninhibited she'd been in this strangest and most alien of situations, but this was the here and now, this was the moment, this was what was actually happening. \n\nJohn kissed Sarah on the shoulder as she continued to lick and suck at Megan's clit, then he moved up towards Megan's chest. He'd wanted get his face between those breasts since the first time he'd seen Megan at the bar. Sure, his wife had an amazing body, but Megan's tits were from a planet all their own, and he wanted them. He wanted them now. \n\nWith her arms down by her sides, her fingers gripped into the bedspread, Megan was lost in herself, her head lolling to one side as she twisted and turned, Sarah's tongue driving her into a frenzy of impossible pleasures. Sensing a presence beside her, however, she opened her eyes to find John cozied next to her. She smiled at him as he began to massage her shoulders and kiss her neck, moaning her approval as he went. Feeling brave, John reached down to those magnificent breasts and ran a finger across her nipples. \n\n\"Don't be so gentle,\" Megan whispered, pushing her chest up to him. \"Eat them, bite them, suck them. Fuck, John, I want you to be rough with me.\" \n\nShe squeezed her legs gently around Sarah's head as she spoke. \n\n\"Do you understand?\" Megan continued, wanting them to know she was speaking to both of them. \"It's OK. Use me. I want it. I want it so bad!\" \n\nObeying, Sarah pushed Megan's knees even wider and went straight for her exposed, throbbing clit, using her teeth to nip, bite and tease it, Megan's juices already flowing helplessly from her. At the same time, she felt John's mouth completely envelop her left breast, his tongue flicking and hitting hard against her hot nipple before his own teeth clamped around it and squeezed, sending a shot of pain straight through her body. \n\n\"Fuck!\" Megan cried, her body bucking, \"Oh fucking yes! YES!\" \n\nJohn continued to bite at her, while his other hand attended to the other breast, the nipple gripped tight between his thumb and forefinger, twisting, pulling, hurting her. \n\nMegan bucked once more but kept her hand firmly on the top of Sarah's head, holding her mouth in place. \n\n\"This is so amazing...don't stop, oh Jesus, don't you dare stop! Use me, whatever you want, you hear me? Use me! Play with me! I'll do whatever you want. What do you want? Tell me what you want to do to me! Both of you, one of you, whatever, just tell me, show me! Fuck, just...fuck! I'm cumming, oh my GOD! I can't, I can't, not yet, not yet-!!\" \n\nMegan opened her eyes and tried to distract herself. Tugging at John, she made him look at her. \n\n\"Tell me what you want to do to me,\" Megan demanded. \"I know there are things, there must be. What have you been dreaming about doing to me, John?\" \n\nShe winced slightly, as Sarah took another nip on her impossibly sore clit. \n\n\"Come on, honey,\" Megan smiled, \"Time's running out. Whatever you wanna do to me, you gotta do it now, before I- before I-\" \n\n\"I want to fuck your tits.\" John said, quickly, unable to take his eyes away from the majestic sight before him. \"But I wanna fuck your mouth, too. I wanna fuck everything, every hole, I am so turned on right now.\" \n\n\"My tits, yeah, my tits...\" Megan panted, \"I know you've been dreaming about my tits. And my mouth, you liked how my mouth felt on your cock didn't you?\" \n\n\"Yeah, I loved your mouth on my cock.\" \n\n\"And what about my pussy, huh? My cunt? You haven't been in there, yet, John. Or my ass. Remember our game? Remember what I said? I love cock in my ass, John, I fucking love it, it's so hot. The thought of your big, fat cock filling up my ass...goddamn it-\" \n\nBut when she mentioned her ass, it wasn't John who was first to respond, but Sarah. Releasing a wave of hot breath onto Megan's wet pussy, Sarah pushed her hands under Megan's butt and pulled her closer. The pressure between them was insane, Sarah's tongue pushing hot and hard against Megan's clit once more, just the way that Sarah liked it herself, and then it was happening, Sarah pulling the trigger on Megan's orgasm which rushed, wave upon wave, down between her legs. Sarah kept her head there, her mouth lapping up Megan's cum as her hips bucked, John's hand squeezing her tits so hard she could no longer feel them. Megan closed her legs around Sarah's head, gripping her tight, wanting to push her juices full into her face. She could still feel Sarah's tongue licking her, sucking her, her clit so sore and raw she could swear she was bleeding. \n\nWhen she was spent, Megan allowed John to raise her hands above her head, pinning her to the bed with one hand while he rubbed her arms, shoulders and breasts with the other. Below, Sarah kissed Megan's pussy lightly and rubbed her thighs and hips with both hands, bringing her back down as calmly as she could. \n\nMegan stared at the ceiling, just trying to regulate her breathing. Her head was spinning; she'd never felt anything like this, not ever. \n\n\"Fuck, you guys are...good! And I so needed that, I was so turned on, so fucking turned on. And, Sarah, no way was that your first time! Jesus...\" \n\nAs her soul returned to something that resembled normal, Megan pulled herself up on her elbows, well aware that John still had a massive erection to take care of, and Sarah definitely deserved a reward of her own. \n\n\"Hey,\" Megan breathed, lazily, \"If you can give me a minute, this play time isn't over.\" \n\nJohn and Sarah glanced at one another, happy to hold out a few minutes longer if it meant more fun and games with their favorite new playmate. \n\nExtra Time \n\nAs John went to pee, in a desperate effort to calm himself down, Sarah remained lying with Megan, caressing her hips, her belly, her breasts, each of them still lost in their own, just-discovered worlds. \n\n\"You were so, amazing,\" Megan was saying. \"I mean, damn, you give good head, girl!\" \n\n\"Well, you were very, what's the word? Motivating...\" Sarah chuckled back. \n\nHearing John return, the two women smiled conspiratorially at one another but stayed where they, loved how their skin felt against one another, the sexual energy between them potent and necessary. \n\nJohn emerged with wine and strawberries, lying the bowl on the bed as he poured out three glasses. Sarah grabbed a strawberry and lowered it playfully into Megan's mouth. \n\n\"Mmmm, they taste good...\" Megan mumbled, as she finished it in three bites. \"Hey, John, why don't you come over here and attend to your wife while I go freshen up? Start the party, but don't go too far without me, huh?\" \n\nAs Megan disappeared, John had a chance to just drink in the sight of his beautiful wife lying naked before him. Her hair was already bedhead as she basked lazily in an erotic, sweaty glow, her ass perched high behind her, almost begging him to pay it some attention. His erection returned quickly. \n\n\"You heard Megan.\" John said. \"Babe, get over here.\" \n\nSarah cocked her head and see-sawed her legs behind her. Silent, she simply smiled at John and crooked her finger, beckoning him over to her side, where he arrived in seconds, desperate to touch her, desperate to feel her underneath him. \n\nThey kissed, deeply, passionately, as their legs intertwined. Feeling her own desires rise quickly, Sarah gripped John's head and moved him down her neck. After kissing her shoulders, he moved toward her nearest nipple and lightly licked it before taking it into his mouth. Sarah said nothing, but began grinding her crotch into his bare thigh. \n\nWhen Megan returned, she was turned on to see John mauling his wife like a lion as Sarah surrendered totally to his touch, her cunt sliding urgently up and down his leg. Stepping to the side of them, Megan began to run her hands gently over both of them, her fingers wandering aimlessly, no journey, no destination, just a freedom of touch she wanted to spoil each of them with. \n\nLoving the independent, but equal, attention, John and Sarah stepped things up a gear, John kneading his thigh into his wife's cunt, as he feasted on her breast. \n\n\"I want you both to...take me.\" Sarah moaned. \"Make me do anything you want. I am so horny right now, I'd do anything, anything, I just want this, please. I want this so bad!\" \n\nShe was digging her nails into John's back now, his face wincing with little shots of pain as he felt Sarah's pussy slide damply against his leg. Then, without warning, Megan slapped hard at Sarah's other breast, a red welt forming quickly upon her skin. There was nothing playful about it, this slap was meant to cause pain. \n\nJohn looked quickly to Sarah but, once the initial shock had subsided, Sarah looked purposefully up at Megan and nodded. \n\n\"Yes,\" she said, firmly. \"YES!\" \n\nLike a dam broken down by the sheer weight of the water pounding against it, John and Megan quickly took control of Sarah's desires, converging in tandem and overwhelming her with a quick succession of intense sensations. John flipped Sarah onto her back and got between her legs, his cock so hard and desperate, it took a few moments to position himself correctly but, with a quick readjustment, he pulled her body up towards him and thrust hard up into her, her cunt contracting around him so tight and urgent, he was sure she would cum on him right there. \n\nLifting her even further off the bed with his cock, John leaned forward and took her breast in his mouth, her shoulders bearing her own weight as her head pushed back into the pillow, her belly taut and firm, her lower legs tucked underneath her, supporting her as her husband began to fuck her hard and deep. \n\nThen a loud 'thwack' filled the room as Megan, crouched beside the bed, underneath Sarah's arching ass, hit her once again, this time across the buttocks. John felt Sarah tense beneath him as the pain ripped through her, his cock feeling even harder, her cunt even hotter. \n\n\"Have you been...bad, Sarah?\" Megan was asking, her voice suddenly hard and authoritative. \"Are you a... naughty girl who deserves all your-\" She spanked her again. \"...punishment?\" \n\nConvinced that his wife was getting off on this torture, if her wet, pulsing pussy was anything to go by, it was also becoming clear to John that Megan, too, was becoming aroused by the sadism (there was no other word for it.) Wanting Megan to have full access to Sarah's ass, he quickly pulled his cock out of her and turned her over onto all fours, pushing her legs apart roughly, her pink pussy staring back him, its own invitation. She was soaking, her juices already falling down her legs. Giving her no time to prepare, John got behind her and shoved his purple cock back up inside her, his fingers digging viciously into her hips, pushing his cock in so hard and deep, he wanted her to feel him in her mouth. \n\nMegan stood beside them, her face flush with wonder at the wider expanse of flesh now available to her. Without hesitation, she brought her palm swiftly down upon Sarah's ass, timing her assault to coincide with the second-long gaps between John's merciless thrusting. \n\n\"Your ass is red raw, honey,\" Megan panted, breathlessly, as spank after spank came raining down on Sarah's ass. \"I can see my hand print on your milky white skin. I can see your husband's gorgeous, fat cock sliding in and out of your hot, wet pussy, and I can see that juicy cunt giving that cock everything it wants.\" \n\nShe turned to John. \n\n\"Is that right, baby? Is she all wet and warm for you? Is she letting you fuck her how she likes to be fucked?\" \n\n\"Fucking yeah...\" John growled... \"She loves to be fucked like this!\" \n\nJohn felt Sarah trembling beneath him and, for a few moments at least, she was a person he didn't recognize. She was moaning, some of it was words, but words he couldn't understand. She was sure she was not in distress, in fact he felt it was quite the opposite, but he couldn't take his eyes off her as she morphed in front of his face, his previously-quite-traditional, well-behaved wife now bucking and thrashing like a banshee, a woman possessed, a woman embracing the pain, no, inviting the pain, a woman he was so fucking in love with right now, he couldn't see anything beyond it. \n\nAs Megan continued to spank Sarah, John fucked her cunt furiously. He felt like he was tearing her apart, his cock had never felt so hard, so destructive. But he was also consumed with a rabid desire to bite and scratch her. He flipped her again, her body as compliant as a rag doll, every muscle, every limb obeying his rough direction. Entering her again, her cunt red and angry, John lowered his head onto Sarah's tits, lashing and pulling at her nipples with his teeth. Sarah screamed in pain, but all that did was make him do it more. Every cry, every mark, every scratch made his cock ache harder and longer, his balls now impossibly heavy and full as they slammed, wet and hard against her ass. Whatever climax his body was getting ready for, John knew it would be the hardest, longest, most intense orgasm he'd ever known. But he didn't want to cum, not yet, God not yet! \n\nMegan took a sip of wine, holding it in her mouth, before sliding onto the bed, John lifting Sarah higher so Megan could get underneath to her ass. Grabbing handfuls of flesh, Megan pulled Sarah's cheeks apart and began running her wet lips across the angry red welts which now criss-crossed her butt. Megan allowed some of the wine to spill out of her mouth, the warm stickiness stinging the her wounds, tiny hairs now visible in the darkness as the wine clung to the follicles. \n\n\"Take me,\" Sarah mumbled, her whole face contorted in pain and ecstasy. \"Both of you, take me now. Fuck me, I want to be fucked by both of you, now, NOW!\" \n\nHugging her hot, damp body to his, John thrust up inside her again, then pulled out, his huge, wet cock throbbing angrily over her body. He looked to Megan, then back to his wife. \n\n\"Tell me how you want it, baby,\" he asked her. \"Tell us how you want us to fuck you. This is all about you, honey, this is all for you. But you've got to tell us what to do.\" \n\n\"I-I want your cock in my mouth,\" Sarah whispered, urgently. \"I want you to fuck my mouth, hard, I want to eat you so bad, but then I want you to come over my face, over my tits, over my whole body, I want your cum all over me.\" \n\n\"Oh baby-\" John wasn't sure how long he could last, even her words were enough to make him spurt, there and then, but he controlled himself and turned to Megan. \n\n\"And what about Megan?\" John continued. \"What about her? What do you want her to do to you? Tell her, baby, tell her how she's gonna make you cum.\" \n\n\"Megan, I don't care, do whatever you want, I want you do whatever you want, just make me cum, I'll do anything you want, just promise you'll make me cum.\" \n\nJohn was already moving up around the bed, his cock inches from Sarah's mouth, her lips open and ready, as Megan knelt between Sarah's legs, near her feet. \n\n\"Tell me, Sarah.\" Megan asked, looking up, her eyes ablaze with promise and desire. \"Are you gonna be our...slut? Say it, Sarah. Tell us that is what you want, that you're going to be our slut.\" \n\nIn her previous life, Sarah had never really been comfortable with name-calling or doing anything that could be considered sexually degrading. Sure, she could dirty-talk with the best of them, but words like 'slut' and 'whore' had never been a turn-on for her, for either of them. But there was something about the situation, something that made it OK. Sarah didn't feel degraded, she felt very in control and she felt hot, so fucking hot that she knew that, at this precise moment, she didn't give a fuck what anyone called her, she just wanted to cum, and cum hard. \n\n\"Yes, I'll be your slut! I am your slut, I'm your whore, and I'll do anything you tell me to. Just, please, fuck me!\" \n\nThe green light had Megan buzzed, and she quickly rushed over to her overnight bag and pulled out a large ziplock pocket, as John stood by his wife's face, desperate to start fucking her mouth. Overwhelmed, Sarah's body was still tingling from the heavy-handed molestation doled out by the two of them and, as she spread her legs wide open for Megan, her clit and pussy aching and raw, she hoped the interruption would not last long. ",
        "When Megan reappeared before her, Sarah could see several colorful objects dangling from her hands. Sex toys. \n\n\"Does our...slut...want these used on her?\" Megan asked, cruelly, knowing that she was in control of Sarah's orgasm. \n\nSarah was mad with impatience, but keen to keep going, whatever was involved. \n\n\"Yes!\" she cried out, completely desperate now. \"Please! FUCK ME!\" \n\nMegan stepped away, as though punishing Sarah for her outburst. \n\n\"I'm sorry,\" Sarah continued, quieter now, playing the game. \"I mean, yes please. Please fuck me with whatever you want. Punish me however you want. I'm a slut, I'm your whore, I deserve whatever you give me.\" \n\n\"That's better,\" said Megan, aware that John could not wait much longer. \n\nShe nodded to both of them, her permission to get fucking, and Sarah twisted her upper body so she could grab a hold of John's cock with one hand and slide the other between his legs, cupping his ass and pulling him gently towards her, her lips open, desperate to have him inside her, desperate to have him fuck her mouth until she choked. \n\nAs Sarah and John got to work, Megan pulled out a large, black, cock-shaped vibrator and a small, pink butt plug. Running the vibe in and out of her own mouth to get it ready, Megan then flicked the switch on the side and the machine purred into life. It was very thick, and, as she ran it gently across Sarah's perfect, pink clit, Sarah immediately jerked her body, the ripples of pleasure pulsing through her and distracting her, momentarily, from the task in hand. \n\n\"Ohhhh...\" she moaned, as John's cock slid from her mouth. \"Fuck, yes, that's so good...!\" \n\nShe turned back and took him in again, John pushing deeper and deeper toward the back of her throat, his erection struggling to contain its own desperate need to cum. \n\n\"Are you liking that, John?\" Megan asked, as she continued to tease Sarah's folds and clit. \"Does your cock feel hot and hard inside her mouth? Are you filling her up with your huge, hard cock? Do you like to fill her up?\" \n\n\"Yeah,\" John panted, as the wet sounds of Sarah's frantic sucking and licking filled the room. \"I love fucking her mouth, and she loves it too, don't you, baby?\" \n\nSarah moaned in agreement as she worked his shaft with her hand, and bent her head back so John could thrust deeper into her mouth. \n\n\"Well I'm gonna fill her up, too,\" said Megan. \"Would you like that, huh? Sarah?\" \n\nWithout waiting for a reply, Megan sucked on the pink butt plug before going down on Sarah, one hand still working her cunt with the vibe as Megan's lips closed around her clit. Sarah immediately tensed underneath her as her legs stiffened and she felt a rush of blood to her pussy. As she attended to business between Sarah's legs, Megan also managed to push a hand underneath her ass, Sarah swiveling her hips to accommodate her. She had no idea what Megan was doing, but it felt so damn good, she didn't care. With the thick, black vibe working her pussy and Megan's mouth eating her clit, Sarah didn't know there were any other feelings possible, until she was aware of her butt cheeks being roughly pushed apart. It did not feel unpleasant, just strange. \n\nThen Megan came up to Sarah's ass and used her tongue to spread Sarah's asshole as she let go of the vibe, leaving it to hum impatiently on the bedspread. Then she put her mouth back on Sarah's clit and used two hands to suddenly push the little pink plug into Sarah's ass. \n\n\"Oh god, my ass, you're putting something... in my ass?\" \n\nSarah was just jacking John off, now, her breathing all over the place. She expertly twisted his cock one way, then another, John's eyes closed in ecstasy as he concentrated on the wet, warm sounds of her fingers working his shaft. \n\n\"Do you want me to stop, slut?\" Megan teased, as she slowly turned the base of the plug around and around inside Sarah's ass. She was kneeling there, now, her tongue licking and sucking at her pussy as the plug did its own job above her. \n\n\"N-no...\" Sarah moaned, loving how full she felt. \"Keep going, whatever you're doing, keep going.\" \n\n\"You said it.\" \n\nSarah tilted her hips to allow the plug deeper access then, when it was fully in, Megan gave it a little tap, which sent a ripple of pleasure shooting through Sarah's lower body. Not wanting to leave anything wanting, Megan picked up the vibrator and placed it back at the entrance to Sarah's cunt, before pushing it deep up insider her, as her mouth returned to Sarah's clit. Megan fell into a steady rhythm - thrusting the vibrator in and out of Sarah's pussy, biting and squeezing her clit, and occasionally flicking the plug in her ass. To Sarah, it was an assault on the senses; she didn't know where to focus herself, every single sensation felt so well. \n\nShe tried to return her attention to John, who was now jerking himself off, fast and frenetic, his giant cock engorged and heavy, his fist moving madly up and down his shaft, his head tilted back in pure, unrivaled, ecstasy. \n\n\"I'm gonna cum quick,\" he panted. \"I'm gonna cum so hard and quick, all across your tits, baby, all across your face, your mouth, your lips, your hair, your gorgeous, fucking tits...watch, here, get here, oh god, oh my fucking GOD!!\" \n\nAnd he exploded. With his hand moving so fast, the first wave sprayed itself across Sarah's jaw, her neck, her shoulder. He couldn't control his cock, it was jerking everywhere. John gripped himself, feeling the next spasm thunder down through his belly and surge up his shaft. He turned his hips and pointed his cock right over Sarah's tits as ropes of sticky cum shot out, violently, landing all across her breasts, her belly, her face, his pained roar filling the room like a beast on the verge of the ultimate victory. \n\nEventually, he felt his body relax, his eyes focusing on the beautiful sight of his wife's prone body covered in his warm, soft cum. He rubbed it into her skin, stroking rivulets of it over her nipples, flicking them into life. Then he drew lines in the stickiness and lifted his fingers to her mouth so she could lick them clean as she fought against her own, urgent desires, now more desperate than any time before. Feeling John cum all over her - the rawness of it - was sending Sarah over the edge. The little plug was filling her up her ass and the vibrator was so big and thick up inside her cunt, as Megan thrust it in and out of her with such deliberate ferocity, Sarah wasn't sure she'd be able to withstand the force of the climax she knew was heading her way. \n\nWith one hand still nestling against her husband, his softening cock just inches from her face, Sarah moved so he could support her. Her orgasm arrived like a freight train, and she couldn't even speak as all the breath was sucked out of her lungs, Megan slamming the vibrator up inside her one final time and keeping it there, jammed hard against her G-spot, Megan's tongue pressed firmly down upon her clit. \n\nSarah's body shook with a tremor so hard, John could feel everything inside her go rigid. Then, a few moments later, she relaxed a little and reached down to slide the vibrator out of her pussy. Megan removed her soaking mouth from Sarah's clit and began to rub the inside of her thighs in long, swift strokes, as though trying to light a fire with friction alone. As John bent down to kiss his wife, he could hear her whimpering like an injured animal. In that moment, he felt so protective, so proud, and so full of love for her, he thought he would burst. \n\nThey kissed, lightly and slowly for a few seconds, before John felt a sudden, violent shift beneath him. Staring at her face, he could see Sarah's eyes wide open in, he didn't know what it was, shock? From her lips, a guttural moan emerged that was so primeval, so terrifying, John panicked before he realized what was happening. \n\nLooking down, he saw that Megan had gone back to work on Sarah, licking her all over with an animal passion that nobody had a hope of stopping. She was very forceful, in total control, her hands pressed down on Sarah's belly, pinning her to the bed. Megan licked, flicked and sucked with her mouth and, with her fingers, fucked Sarah's cunt, three at a time, hooking her like a fish on bait. There was no rhythm, rhyme or reason to Megan's assault, just all the rules of desire coming completely undone. \n\n\"Ohhh! Oh FUCK!\" Sarah screamed. \n\nThere was no-one else around, no-one to complain, no-one to give a damn, except her. She wanted to cum and she was going to cum loud. \n\n\"Fuck, I'm CUMMING, oh my god, JOHN! Fuck me, oh Jesus, I need you to fuck me, too, John! Fuck my pussy, fuck my ass. I'm cumming again, I'm cumming again, baby, oh BABY, PLEASE!\" \n\n\"You heard her!\" Megan cried, lifting herself up and glaring at John. \"Fuck her! Fuck her now! What are you waiting for?\" \n\n\"Fuck me! FUCK ME!\" Sarah was still screaming, as Megan continued to finger-fuck her cunt, four fingers now, she was tearing that pussy up. \"Don't stop! Don't stop! Oh GOD! Megan, Megan, JOHN! FUCK ME!\" \n\nShe was bucking so hard, her muscles spasming, her final climax surely just moments away, as John stepped quickly to where Megan was crouched, and pulled her away. Taking her place, John leaned in and grabbed the massive vibrator, switching it to the max and thrusting it mercilessly up inside Sarah's cunt. Ramming it in and out of her as she writhed and twisted beneath him, Megan moved to the other end and held Sarah's shoulders down, her breasts hanging heavy over Sarah's face, as her second orgasm finally took hold, paralyzing her with its power, her hips thrusting up towards the ceiling as John held the vibe deep up inside her, his mouth on her clit, lapping up her cum as she flooded over him, her head dizzy, her whole body now floating above her as her climax shuddered and trembled out of her. \n\nAt last, she allowed herself to fall, Megan's warm tits brushing against her lips, the faint smell of her sweat mixing with the heady scent their sex. She felt John gently stroke her whole pussy, calming it down, his fingers tracing lines in her cum, as he'd done with his own, his tongue trying to lick up as much as possible before Sarah closed her legs in mute satisfaction, not sure if she'd ever feel something as powerful, as destructive, ever again. \n\nAbove her, Megan bent down and kissed her gently on the lips. \n\n\"Good?\" she asked, already knowing the answer. \n\nSarah just stared up into Megan's face, wondering how on earth they'd been lucky enough to happen across this magical creature. Preparing to get showered, Megan stepped back around the bed and gently turned Sarah onto her side. \n\n\"Best not forget this little puppy...\" she purred, sliding the butt plug out of Sarah's ass, causing another, low moan of satisfaction. \n\n\"That is one pet I'm glad we could show a home to.\" John winked, as Sarah smiled back at him, not wanting this dream to end. \n\nAfterward \n\nIn front of the fire, Sarah was still naked, eager to stay in the moment as long as she could. Megan, feeling the chill, was wrapped up in a long, cotton sleep shirt. They were leaning against the couch, a large quilt thrown haphazardly around them by John, Sarah's head resting lovingly upon Megan's shoulder. \n\nBeside them, John was wrapped in a towel as, in the kitchen, the kettle boiled into life. Nobody said a word as they all enjoyed the druggie intoxication of what was happening to them, their post-coital glows of pleasure almost as bright as the flames from the hearth. \n\nTonight, they would sleep - maybe. Together, in the same bed - definitely. And, as the kettle whistled its final tune, the three of them wondered what adventures awaited them tomorrow, a whole new day to explore and experiment, to enjoy and exist. The possibilities were endless and here, at least, they knew that time could stand still for as long as they needed it to. \n\nJohn got up and watched from the door as Megan stroked Sarah's hair with all the tenderness of a sister. \n\nPerhaps this wouldn't be a one-off, after all."
    ],
    "authorname": "TheEroticPencil",
    "tags": [
        "ffm",
        "blowjob",
        "threesome",
        "cabin",
        "rough",
        "wife",
        "oral",
        "public",
        "toys",
        "cum"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-ad-the-interview-the-threeway"
}