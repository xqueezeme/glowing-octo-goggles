{
    "title": "Getting to Know Her",
    "pages": [
        "Erik walked down the steps in between the rows of benches in the lecture hall, and picked a seat. The row he chose was about two-thirds of the way up from the front of the hall; far enough up to not have to pay too much attention, yet not so far in the back that it would look like he was trying to not have to pay attention.\n\nA similar process went into selecting the actual seat. Three seats from the edge of the row. Close enough that he could get up and leave with ease if the class proved too boring, but it wouldn't look like that's what he was doing. After several years at university, Erik was an expert at this.\n\nThings had been different in high school. Back when attendance was mandatory, he'd never missed a class. He was far too honest for that. But now, in university, where attendance was not mandatory, he usually only went to a few lectures before he figured out whether actually going to class had any added value over just reading the textbook. Unfortunately, since most university professors are more interested in their research than instructing students, the classes that he did think were worth attending were few and far between.\n\nThis, however, was the first lecture of a brand new class in a new semester, so he had to attend it to form an opinion. At least the professor for this class had a reputation of being a good teacher, so he was mildly hopeful. Although, since this class was at ten in the morning on a Monday, he needed a very good reason to come here every week.\n\nHe looked around at the other students filing into the lecture hall. It was all the usual people that he knew from previous years. A few people greeted him as they walked in, and he smiled back at them. Since he rarely actually went to class, he didn't interact with most of them much outside of assignments that required working together. They were all nice enough, but he wouldn't consider any of them friends. His social life, in as much as he had one at all, was almost entirely outside the university.\n\nHe was twenty-six years old, a bit older than most other students here, because he'd taken a few years in between high school and university. He found many of his fellow students a bit immature as a result; another reason why he tended to keep himself apart.\n\nThere were a few unfamiliar faces, but not many. Most of the hall was empty; the computer science department at this university was not that big, and even then, not everyone would be taking this advanced class. It meant that he could sit alone, which suited him fine.\n\nIt all looked like an average start to an average class, until she walked in. Entering through the double doors in the back, she was hard to miss. Just the fact that she was a girl in a computer science class would've been somewhat remarkable, but that was not the reason why he\u2014and indeed everyone else in the room\u2014was staring at her.\n\nShe was very pretty, he noticed. Her slightly angular face was framed by dirty blonde hair that hung down to between her shoulders. Her nose was cute and a bit pointy, and luscious lips curled up in a friendly smile. That same smile was reflected in her deep blue eyes as she looked around the hall curiously. She was tall, with long, slender legs clad in very tight jeans. Dainty feet were revealed by the sandals they were in. He couldn't see her ass, but the rest of her hinted that good things would be waiting for him when she turned around.\n\nShe was obviously new here; Erik couldn't remember ever seeing her before. Not in his other classes, or anywhere on campus for that matter. He wasn't that great at remembering faces, but he knew with absolute certainty that they'd never crossed paths before. Not only would he easily remember a face as gorgeous as that one, there was something else that would've burned her into his mind forever. The thing that was the reason why the entire class was staring at her.\n\nHer chest was gigantic.\n\nNow, we're not talking about the kind of boobs you find in Playboy magazine. We're not talking about the kind of boobs you see in a porn movie. Even big tit fetish models would pale in comparison to what he was seeing here.\n\nThese were the kind of tits that Erik had no idea were even possible. Stuffed inside of a tube top that\u2014despite obviously being custom-made\u2014was clearly not up to the task were two enormous pale globes of flesh that defied a rational explanation. Even squashed somewhat by her top, they protruded dozens of centimetres from her chest.\n\nHe couldn't begin to guess what her cup size was; the alphabet just wasn't long enough. He even struggled to think of a comparison that would work. Watermelons? Way too small. Beach balls? Not even close. Medicine balls, the kind they used for exercising at the gym, were getting closer, if you considered the largest sizes they used. Even then he expected he was underestimating it.\n\nThey covered up the entire front of her torso, and stuck out to her sides quite a bit. Soft, creamy flesh bulged out the top of her tube top, showing what seemed like endless cleavage. The leather jacket she was wearing was open, and Erik knew there was no way in hell she could ever close it. It did little to hide anything from view.\n\nErik, and everyone else in the hall, watched her as she started to walk down the stairs. The way the bulging tits wobbled and bounced with every step made Erik think they had to be real, which was insane. No girl could be that big. It didn't happen. It couldn't happen. Then again, implants were never that big either. The only thing approaching this he'd ever seen was those silly, obviously fake latex prosthetics. This didn't look anything like those either.\n\nShe walked with grace and poise, and perfect posture, which shouldn't have been possible at all. If they were real, they should be way too heavy for her to even stand up straight, let alone walk. Yet, she didn't seem to have any problems. She also didn't seem bothered by all the stares she was getting; Erik suspected she was used to them.\n\nThis girl was the definition of sexy, Erik thought. If you looked up \"smoking hot\" in the dictionary, there should be a picture of her. Erik had always liked big breasts; his last girlfriend had been a double D, which he'd loved. He'd never known himself to be into huge breasts, though; certainly, he'd never imagined anything this big. Fake tits didn't appeal to him at all, and natural breasts beyond a certain size were only found on women of a certain size, and that wasn't his thing either.\n\nThese, though, didn't look fake at all, and the girl they belonged to was slim and fit. They were natural, and almost absurdly full, which made Erik quite certain that they wouldn't sag too much when unsupported, even though they really ought to at this size. It was unlike anything he'd ever seen, and it was making him uncomfortably hot. He felt his dick stir in his pants as he watched her walk. He would never have imagined he could be attracted to breasts that big, yet here he was, feeling more excited than he'd ever been in his life.\n\nErik looked away as she approached his row of seats, not wanting to appear rude. He was praying she'd sit on his side of the hall, somewhere in front of him. Those puppies were easily big enough to be seen from the back, and the stadium seating of the lecture hall would mean he could probably look down at her cleavage over her shoulders if she was close enough to him. He felt dirty for thinking it; he really shouldn't be objectifying her like that, but he couldn't help himself. He was also already trying to think of an excuse to talk to her after class. He knew it'd be pointless; a girl this unbelievably hot had to have a boyfriend, but he would never forgive himself if he didn't at least try to get to know her.\n\nHis heart pounded in his chest when he noticed, out of the corner of his eyes, that she stopped at his row of seats. He risked more of a direct glance as she was scanning around the room for a place to sit, and he just couldn't believe what he was seeing. The jacket hid the separation between her torso and her chest, but it was immediately obvious that she wasn't fat, at all. The things straining the tube top to its limits were all boobs; the rest of her was slim, and so incredibly pretty. Without those boobs she would've been a real knockout, and with them...\n\nShe continued looking for a seat until her eyes stopped on one that suited her. Erik nearly had a heart attack and had to look away quickly when he realised that what she was looking at was the seat right next to where she was standing. The aisle seat of his row. Two chairs to his right!\n\nShe placed her purse on the floor by the seat, and started to remove her jacket. The movement caused the fabric of her top to shift around those gargantuan beauties, and Erik began to wonder how she was even fitting in there. The garment felt like a wardrobe malfunction waiting to happen, and if that did occur it would cause some additional problems for Erik, and presumably most of the males in the class.\n\nHer bare shoulders and arms were revealed when she took the jacket off and hung it over the back of the chair. If there had been any doubt about how hot she was before, this was now dispelled. There just wasn't any part of her that wasn't desirable. It also revealed there were no straps over her shoulders, which meant she wasn't wearing a bra. The only thing holding up her top was the pressure of those overendowed wonders pushing against them.\n\nShe sat down in the chair sideways, her back to him. As he'd suspected, her tremendous tits were easily visible from behind. He also had the opportunity to look over her delightful backside; her ass was full, but not too big, and every bit as delicious as he'd hoped. After sitting down, she began to turn to look forward, and he once again had to avert his eyes, trying to make it look like he wasn't staring. To help establish his cover, he folded the lecture desk in front of him down and began to take his laptop from his bag, all while still glancing surreptitiously over at the girl who was squeezing into her seat.\n\nSqueezing was definitely the right word to use. Her immense chest filled all the available space between her and the barrier behind the row of seats in front of them. Compressing them down even further than the tube top already had, Erik could swear he heard the wood creak as she struggled to get her magnificent chest into the small space. They bulged up even further, almost pushing against her chin.\n\nShe used her arms to push down the protruding flesh, but it didn't help much. At the bottom, they were constricted by the tube top, and her legs. Sitting in her lap, they had nowhere else to go but up. Shrugging, she accepted defeat and left them as they were.\n\nShe looked at him, and Erik felt like a deer in headlights. Had she seen him staring? Would she be offended? Yet her smile seemed completely friendly. She seemed almost oblivious to all the attention she was getting. \"Hi,\" she said simply, extending a hand. \"I'm new here.\"\n\nGod, even her voice was sexy. Erik just sat there, staring at her, unable to speak. His only saving grace was that he was at least staring at her face right now. Such a lovely face too, with gorgeous blue eyes. Erik felt himself blushing, and hoped she wouldn't notice.\n\n\"I'm Jessica,\" she offered gently, apparently not minding his behaviour. \"What's your name?\"\n\n\"Um... Erik,\" he stammered. He realised she was still holding her hand up, and he hastily took it. Her skin was warm and soft, and he briefly imagined what it would be like to kiss it.\n\nShe shook his hand, and after letting go she pulled down the lecture desk of the empty seat in between them. \"Do you mind if I use this desk?\" She asked him, smiling sheepishly. \"I, um, can't use my own.\"\n\nHe looked in front of her; the desks in this hall folded up against the barrier of the next row, to make it easier to get into and out of the seats. Jessica's desk was now trapped between those soft globes and the barrier, entirely hidden from view.\n\nHe shook his head hurriedly. \"N... no, of course not! Go ahead.\"\n\nShe beamed at him. \"Thanks!\"\n\nErik wanted to keep talking to her, even if just to have an excuse to keep looking in her direction. \"D... do you have the textbook?\" The purse she had with her was too small to hold it, so maybe they could share his. Any excuse to get closer to her.\n\nShe gave him a devious smirk. Then, she did something so ridiculous Erik had trouble believing it. She plunged her hand into her enormous cleavage. Most of her forearm disappeared into the chasm in between those massive orbs. Despite their softness, the way they were constricted by the top and the seat made it a tight squeeze. She felt around in her cleavage for a few moments, making her boobs jiggle around. Erik's eyes nearly bulged out of his face\u2014and they weren't the only things he could feel bulging\u2014as he was convinced the top couldn't take much more of this.\n\nWhen she pulled her arm out, she was holding the textbook, and put it on the desk. She repeated the process, and pulled out a notebook and pen. \"Who needs a bag, anyway?\" She said playfully.\n\nErik swallowed, hard. \"What else do you have in there?\" He asked before he realised what he was saying, his eyes still glued to her cleavage. Everyone in the hall was looking at her, but he felt like the show was just for him.\n\nShe raised an eyebrow. \"Wouldn't you like to know,\" she teased.\n\nErik couldn't believe it. Was she actually flirting with him? How could someone who looked like her even consider him worthy of a look, let alone flirting?\n\nHe wanted to say something, maybe try to flirt back if he had the guts to do it, but was prevented when the professor entered the room. The middle-aged man at the front of the room turned on the projector, and showed a slide with the name of the class. \"Welcome, everyone,\" he said as the murmurs in the hall died down. \"My name is Professor Jenkins. I see we have pretty good attendance today; let's see if we can keep it that way for the whole semester.\"\n\nErik already knew he would be attending this class, if Jessica was going to. Heck, he was already thinking he should figure out what other classes she was taking and make sure he went to all of them. Maybe he could even swing it so they'd be sitting together at each class. She'd already talked to him, after all.\n\nThe professor began to introduce the topic of the class, but Erik was having serious trouble paying attention. It wasn't easy to focus on anything else when the girl of his dreams was sitting next to him. No, that was selling her short; nothing he'd ever dreamed of had gotten close to Jessica. He'd certainly never dreamed of breasts that big, but now he knew he'd never dream of anything else, ever again. He kept glancing over at her, hoping he wasn't being too obvious. He just couldn't get over how incredibly hot she was.\n\nHer face would've been enough to make her hot. Her toned and slim frame would've been enough to make her hot. Her ass, her legs, her smile... all were beyond compare. But to find all of those things in one package, combined with the biggest breasts on the planet... it was just insane. Every single time he looked over at her his heart skipped again as his eyes just couldn't believe the sight of those mountains protruding in front of her. The vast expanses of flesh bulging out of her top, almost reaching her face, looked so soft, so inviting. He wanted to touch them, badly.\n\nIt had to be a dream, Erik decided. There's no way any of this was remotely real. It'd been over a year since he broke up with his last girlfriend, and clearly his subconscious was creating this absurd scenario in his sleep to compensate for his lack of sex. He'd wake up soon, and then he'd have to go to the real class, in the waking world, where there would be no huge-breasted goddess sitting next to him.\n\nHowever, if this was a dream, and he was now aware that it was a dream, shouldn't he be able to change things? Wasn't that how lucid dreaming worked? He tried imagining the girl next to him naked. It was difficult, since it wasn't like he'd ever seen anyone he could compare her to. Would her nipples be big too, proportionate to her breasts? Then again, if this was a dream, he'd be able to decide.\n\nHis imagination was showing him the beautiful naked tits, so huge and full and soft, a vivid image in his mind that made his pants uncomfortably tight. However, reality refused to change. He tried wishing the other people in the lecture hall away, and that didn't work either. Lastly, he imagined her boobs growing even bigger, overwhelming the poor top and revealing themselves that way\u2014he had no idea where that thought even came from\u2014but that didn't happen either.\n\nHe pinched himself, and felt the stab of pain. So, not a dream after all, he guessed. Yet he couldn't change the path his mind had gone on, and he was now imagining what those magnificent breasts would feel like against his hands. Forget a handful; these would be an armful. He could hug his whole torso against each tit. They looked so soft; it would feel wonderful, he was sure. He longed to find out how heavy they were, to feel their weight in his arms. Kissing them, sucking on them, would feel even nicer, he imagined. Or how about kissing those lovely, full lips?\n\nHe was wrenched back to reality by the sound of her pen dropping on the floor in between them. It had rolled off the desk after she put it down, and came to a halt underneath her chair. She tried to reach down, but her upper body didn't have enough freedom of movement with her chest wedged into the seat like that. As much as she tried, she couldn't even reach the floor, let alone the offending object. Her only option would be to get up, fold the chair up, squeeze into the gap as best she could to retrieve the pen, then sit back down again. Something she wouldn't be able to do in the middle of a lecture without attracting a lot of attention.\n\nShe noticed he'd seen the pen drop, and looked at him pleadingly. \"Do you mind?\" She whispered.\n\nHe had to swallow, and nodded. The pen was underneath her chair, and the desk of the seat in between them was in his way. Since that seat was folded up, he at least had enough space to get down there, but it was still going to put him in incredibly close proximity to her.\n\nHe bent over, and reached his hand under the seat. He realised, too late, that that was the wrong approach. He should've gotten off his seat and got his head under there. By trying to reach with just his arm, his face was now mere centimetres from her left breast. The huge tit was spilling out of the space for her seat, and pushed against the desk of the seat between them. There was no way he could reach the pen without touching his head against it.\n\nJessica tried to help him, and pushed the breast aside to give him space. The pliant flesh had some give to it, but since it was already so constricted, it didn't help much. It meant her hand was now brushing his cheek, which was almost as bad. Her skin was so soft, and he could even smell her from here, a sweet scent that lit fires in the deepest parts of his brain.\n\nHe fumbled around for the pen, unable to see much of what he was doing, his vision entirely eclipsed by the enormous breast. His fingers made contact, but accidentally knocked it a few centimetres farther away. He bent down further, reaching for it. His quest for the recalcitrant writing implement distracted him enough that he didn't realise that he now had his face pushed firmly against that wall of breast flesh.\n\nHe only noticed it when his fingers closed around the pen. The fabric of her tube top separated his cheek from her skin, but he could still feel her warmth, and the unbelievable softness of the flesh underneath. He quickly rose up, knocking his head into the desk, then sat up straight, blushing crimson.",
        "\"Sorry,\" he whispered guiltily, and handed her the pen.\n\nShe shrugged, and smiled warmly. \"Thanks,\" she replied, letting go of the side of her boob, absentmindedly brushing the part where his face had been. He could tell she had goose bumps on her skin, but she didn't look embarrassed. Had she enjoyed giving him a little feel? Surely, that was wishful thinking on his part.\n\nShe jotted down a few notes, and Erik noticed she was using her left arm. She had to, since the desk was on her left, and with her boobs pushed up like that, there was no way to reach her right arm over.\n\n\"Are you left-handed?\" He asked her quietly.\n\n\"Ambidextrous,\" she whispered back, smiling. \"It comes in useful because, you know...\" She gestured to indicate the huge swell of her breasts.\n\nHe chuckled softly. He could only imagine how useful it was to be able to do things on either side, when your front is so thoroughly obstructed at all times.\n\nWhen the professor coughed loudly and glared in their direction, he was forced to return his attention to the front of the hall. But his cheek could still feel the soft warmth of her breast, the most wonderful feeling he'd ever encountered. If that was what it was like against the fabric of her top, what would her bare skin feel like? He shuddered at the thought, and fervently hoped his desk was hiding the bulge in his pants.\n\nA two-hour lecture had never passed so quickly before. Erik felt he'd barely heard a word the professor had said, and if Jessica was in any of his other classes, actually accomplishing anything this semester would be monumentally difficult. He was quite sure that even in the classes where she wasn't there, all he'd be able to think about now would be her.\n\nThe professor was getting ready to end the class. \"Before we finish up today, a quick announcement,\" he said. \"As you were no doubt expecting, there is a programming assignment associated with this class. It's a bit more involved than what you may have been used to up to now. You'll have more freedom with the design and direction of the project, which should be a nice preparation for the research project you'll have to do next year.\n\n\"I want you to form pairs, and work on the assignment together.\" He looked around the room sternly. \"Now, I'm well aware of how tempting it is to just use the same team for multiple assignments, and have one person do this assignment and the other do one from another class. However, I want each of you to learn from this assignment, so I'm trusting you to not do that this time. Since trust only goes so far, there'll be an oral part with each pair at the end where you'll have to explain how your project works to me, and I expect both members to be able to explain it equally well.\n\n\"The details of the assignment are on the website for this course, and I expect all of you to let me know who you're teaming up with by email before next week's lecture. And, that's it! I'm sure you're all eager to get to lunch, so class dismissed.\"\n\nErik began to put away his things, thinking who would make a good partner for this assignment. He knew who he wanted to ask, of course, but he didn't think he'd have the courage in a million years. It was stupid; he'd wanted an excuse to talk to her after class, and here it was on a silver platter, but he was too much of a coward to use this opportunity. He felt ashamed of himself; they'd already talked, the hard part should be over. But actually asking this vision of feminine beauty whether she'd want to spent more time with him was still an incredibly daunting prospect.\n\nFortunately, she made it easy for him. She looked over at him as she was reinserting her belongings into the immeasurable depths of her cleavage. \"Well?\" She asked him. \"It's not like I know anyone else here, so what do you think? Want to partner up?\"\n\n\"What?\" He blurted, startled. \"No! I mean, yes! Of course!\"\n\n\"Perfect!\" She smiled happily. \"You know, I was afraid I'd be a bit of an outcast since I've never gone to class before, so it's great to meet someone who's nice like you.\" She winked at him.\n\n\"Um... thanks,\" he muttered, blushing furiously. Was she still flirting with him? If only he felt capable of more than monosyllabic replies at the moment.\n\nShe stood up, but unlike when she sat down, she didn't turn first. Instead, she rose straight up, dragging her boobs up along the barrier they were wedged against. Reluctantly, they were pulled out of their prison, bouncing heavily as they escaped. The shift in weight caught her off-balance, and she tried to compensate by leaning back. Unfortunately, the seat behind her denied her the space she needed, and she stumbled sideways, towards Erik.\n\nHis reflexes kicked into action, and he caught her, her weight almost knocking him over. Bracing himself to keep them both standing, his right arm went around her shoulder and his left arm sunk deep into the bare flesh sticking out of her top. It was the softest, most wonderful sensation he'd ever felt. If he hadn't been sold on titanic tits yet, he sure was now. To think he'd ever been satisfied with a handful.\n\nShe was pressed against him, her face next to his. She was almost as tall as him, which meant her lips were close enough to kiss. Her beautiful blue eyes were staring directly into his, a look of gratitude on her face. The moment passed, far too quickly.\n\n\"Oops,\" she said, laughing as she steadied herself. \"I haven't gone out in so long, I've forgotten how to deal with this.\"\n\nErik quickly pulled back his hand, though with some regret. \"I'm sorry,\" he stammered. \"I didn't mean to...\"\n\nShe gave him a sly smile. \"Hardly your fault, now was it? And I appreciate the rescue. If I'd fallen and gotten stuck here, that would've been a real problem.\"\n\nShe stepped back from him, and inspected her top. All the movement had caused the top edge of the tube top to ride down, and a small, darkly pink patch was visible over the edge now. Small in comparison to the rest of the breasts, anyway. What was visible here was larger than a normal girl's entire areola, but this was only a small part of hers. They had to be as large as his face! Erik tried not to stare, but it was stronger than him.\n\n\"I really should've gotten new clothes before leaving the house...\" she muttered to herself as she wrestled her expanses of flesh back into the top. Erik was awestruck, his mind filled with visions of what her actual nipples had to be like, if those were her areolas. Their size defied his imagination.\n\nWith her wardrobe situation taken care of\u2014albeit probably only temporarily, considering just how much bigger her bust was than the top\u2014she pulled her jacket back on and got her purse. She extracted herself from the row of seats, and turned around to face him again. \"You want to get lunch?\" She asked him.\n\nErik was taken aback. \"Yeah... sure,\" he replied. Here he'd been worrying about how to even say hi to her when he first saw her, and now this unbelievable beauty was asking to have lunch with him. She seemed completely oblivious to the impact her simple questions were having on him.\n\nShe started back up the stairs, and he followed her, baffled by this turn of events. What had he done to deserve this? If karma was real, he must've somehow unwittingly saved an orphanage full of kittens and nuns to be worthy of this girl paying attention to him.\n\nThey went outside, and he walked with her across campus to the cafeteria building. He felt the burning eyes of everyone they passed as his unusual companion drew the same kind of attention as she had when entering the hall. She seemed at ease with it, but for him it was kind of unnerving. He was receiving many jealous stares as most of the university's male students wondered the same thing he was wondering: why was she with him, and not with them?\n\nThe cafeteria was set up with several different counters, each with their own type of food. Jessica decided she wanted pasta, and got in the appropriate line. Naturally, Erik followed; he didn't care what she was going to eat, he wasn't going to risk leaving her side and finding out this had all been some kind of daydream. The stares followed them as they waited in front of the counter.\n\nHe was in front of her in the line, turned back so he could look at her. He tried to keep his gaze at her eye level, but the insane length of her cleavage was just too irresistible. He knew she had to know he was doing it, and he just hoped she wouldn't think he was being too rude.\n\nThe line moved, and they shuffled forwards. Jessica walked a bit too far, and her tremendous chest bumped into him. He stumbled, and nudged the person in from of him, who gave him a dirty look.\n\n\"Oh, I'm sorry,\" Jessica said sincerely. \"I just keep doing that, don't I?\"\n\nErik wasn't complaining, not in the slightest. \"That's okay,\" he said simply. He was hoping his ability to form full sentences would come back some time soon.\n\n\"I haven't really gone outside much the last few years,\" she explained. \"I guess I'm not used to how much space I need anymore.\"\n\n\"Why haven't you? Gone outside?\" Five whole words. He was getting better.\n\nShe shrugged. \"I used to be a bit self-conscious, I suppose. And you've already seen what a chore it can be to deal with these things. That's why I made an agreement with the university so I could do all my work online, from home.\"\n\n\"What changed?\" He asked.\n\n\"I'm nearly twenty-three years old,\" she said simply. \"And I rarely interact with anyone face-to-face except my family and my roommates. I've been doing this university program, and I literally don't know anyone here. Basically, I was lonely. I wanted to make some new friends. Plus, I figure I can deal with the stares by now; I never get anything else when I do go anywhere.\"\n\nThey got their food\u2014Erik had to try his best to ignore the stares from the lady behind the register--and went to find a spot to sit. This presented some difficulty, as the tables in the cafeteria were placed too close together for Jessica to be able to walk between them comfortably. She kept bumping into people, and her massive breasts pushed aside tables and chairs. It was a strangely erotic sight, the way she was just too big to interact with the world normally.\n\nThey found an empty table, and sat down. Jessica had to sit sideways, her colossal bust along the side of the table. If she'd sat down straight, she would've had to be so far from the table she wouldn't be able reach her food. It left her having to eat her food with one hand, which she seemed quite adept at.\n\n\"It's this, or use my boobs as a table,\" she said, grinning. \"In public, this is probably the better option.\"\n\nToo bad, Erik thought. He would've liked to have seen the alternative. He idly wound his spaghetti around his fork, not really interested in the food. He was too distracted by the awesome sight in front of him, and a bit embarrassed by the way everyone kept staring at the both of them.\n\nA guy walked over to them. A tall, athletic type with a chiselled face, who was probably in one of the university's sports clubs. The kind of jock that Erik would've expected Jessica to hang out with. He approached their table, and looked at Jessica. \"Hey there,\" he said confidently. \"We've got some space at our table. You want to join?\"\n\n\"No,\" Jessica said curtly. The friendly expression she'd had all morning had melted away, replaced by an annoyed look.\n\n\"Come on, babe,\" the jock said, impatiently. \"You don't have to hang out with this loser type. You've got too much class for that.\"\n\nErik got up. \"You want to say that again?\" He asked the guy angrily. He wasn't going to let anyone talk to him like that, especially in front of his dream girl. This wasn't high school anymore; he didn't need to take this kind of abuse.\n\nThe jock ignored him. \"What do you say, babe?\"\n\nJessica gave him an icy stare. \"I'm not your babe, and I already said no,\" she said coldly. \"And this 'loser' has more class in the tip of his finger than you have in your entire body. Plus, he's my boyfriend, so kindly fuck off.\"\n\nThe guy, realising that everyone in the cafeteria was looking at them, decided to back off. \"Okay, whatever. He can have your disgusting fat boobs if he wants.\"\n\nWhen he left, Jessica turned to Erik, an apologetic look on her face. \"Sorry about that,\" she said. \"I hope you don't mind I said that; it makes it easier to deal with type threes like him.\"\n\n\"No, of course not,\" he said, sitting back down. He was a bit miffed the jock had just ignored him entirely and that Jessica had been the one to get rid of him. On the other hand, the lie she had used was one he really wished was true. He gathered his courage. \"Do, um, do you have a boyfriend?\"\n\nShe laughed, though somewhat sadly. \"No, I'm afraid not. You'd think it'd be easy for me, but there's just not enough type fours in the world.\"\n\n\"Type four? What do you mean?\" She'd said type three as well, when referring to the jock, and Erik was curious what she was talking about.\n\n\"Oh, right,\" she said. \"I keep forgetting you don't know me that well. It's a code me and my roommates use for the types of people I tend to meet.\"\n\n\"Really? What are they?\"\n\n\"Well, in my experience people, especially guys, can be divided into four groups.\" She held up her hand, counting on her fingers. Slender, pretty fingers, Erik noticed. He kind of wished he would stop obsessing about every part of her body.\n\n\"First, there's the people who are either indifferent to me, or think I'm disgusting, some kind of freak of nature. I group those together because very few people are actually indifferent to these things on my chest. My brother is probably the only person in that category, so why give him his own group? They're type one.\"\n\n\"Who thinks you're a freak?\" Erik asked indignantly. In his view, such an opinion was tantamount to heresy.\n\n\"Erik, you're sweet, but you have to realise quite a few people think boobs like, say, Kate Upton's are already too big. Where do you think that puts me?\"\n\n\"You're way prettier than her,\" he said before he realised it, then panicked when he did. \"Wait, I mean...! No, actually, that is what I mean. That's not even a contest.\"\n\nShe laughed again, and reached across the table, her hand brushing against his. \"Thanks,\" she said, seemingly blushing a little. \"I know I have the rest of my looks in my favour, but plenty of people still can't see past these.\" She pointed at her tremendous assets. \"What that asshole just said as an insult because I rejected him, quite a few people think for real.\"\n\nShe put up two fingers. \"Anyway, type two are the shy guys. The people who are so intimidated by me that they can't even talk to me.\"\n\nErik felt himself shrinking into his seat. \"That would be me,\" he said quietly.\n\nShe shook her head, which sent her gorgeous blonde hair dancing around her head, some strands landing in her cleavage before she brushed them back behind her back. \"No, you're not,\" she laughed. \"Well, maybe a little. But you're doing way better than most. Believe me, I've met plenty of people who just bolt at the sight of me, or when I try to say hello.\"\n\nErik couldn't deny that impulse had been there. When she'd said hi to him, he was so afraid he'd make a fool of himself that he easily could've fled. \"So, type three are guys like that jock just now?\" He asked, remembering what she'd said earlier.\n\nShe nodded. \"Yeah,\" she said bitterly. \"The guys who think I'm some kind of trophy. Who see me, and all they want is to be able to brag to their friends that they slept with the girl with the huge boobs. The guys who're so sure that they're hot stuff and that I'll go with them. I hate those guys.\"\n\nIt was obvious to Erik from her frown and her tone of voice that she'd had to deal with this type way too often. \"Well, I'm sorry on behalf of my gender, if it makes a difference,\" he said.\n\nHer smile returned. \"It does, believe me. You're type four, the last type. The nice people who aren't turned off by the boobs, who may even like them, yet can still treat me like an actual person. It's an increasingly small group of people, as I get bigger.\"\n\n\"You're giving me too much credit,\" Erik said, remembering the thoughts he'd had during class about seeing her enormous bust naked. Not to mention the erection he'd had all morning, though he was starting to get that under control. Wait, did she just say she was still getting bigger? So much for control.\n\n\"You're not giving yourself enough,\" she replied playfully. \"A few stray glances don't make you a bad person, Erik. At least you were trying not to look rude, unlike most people in that hall. I pegged you as a four the moment I saw you trying to hide your stares. That's why I picked that seat, and so far, you've proved me right.\"\n\n\"I don't know...\" Erik began, a bit embarrassed.\n\n\"Trust me, I know what I'm talking about,\" she reassured him. \"The pen, and when I almost fell... you've had a few chances to take advantage of me, and you didn't. That's more than most people would've done.\"\n\nErik had a hard time believing he was really that special. Then again, she was here, talking to him, so he must've done something right.\n\nThe conversation turned to more mundane matters, which was a bit of a relief for Erik since it allowed the blood to return to other parts of his body where it was needed. They talked about their studies, which was an easy topic since they had the same major. They talked about their hobbies, and found they had a shared interest in gaming. She was remarkably easy to talk to, once he got over the fact that he was talking to the bustiest, most beautiful girl in the world. Something that was not easy to get over, and he kept staring at those alluring orbs from time to time.\n\nFor her part, she kept giving him coy smiles, and brief bits of contact when she reached out to touch his hands. It was very flirty behaviour, and Erik still had a hard time believing someone like that could be for real, and talking to him. Part of him was still expecting this to be a dream somehow, or a ridiculously elaborate prank.\n\nBy the time they finished talking, the cafeteria was empty, lunch time long over. He checked the time on his phone, and it was nearly two-thirty. He had another class at three, one which Jessica wouldn't be attending, unfortunately. It meant the time to say goodbye to her was fast approaching.\n\nJessica got up, and leaned her massive mammaries on the table. \"Oof!\" She said. \"Always nice to get a load off. They're not light, you know.\"\n\n\"I can imagine,\" Erik said, chuckling. He was staring at her tits as they lay on the table, pushed up even further. He noticed she had her own head in her cleavage, which was just beyond sexy. Her colossal chest covered a large portion of the table, and he could hear the poor piece of furniture struggle with the weight. It made him wonder just how she was able to carry them with such ease, but he felt it would be rude to ask.\n\nThe pressure from below was causing her top to creep down again, revealing parts of her areola once more. She noticed where he was looking, and sighed. \"There I go again. This top is just a few months old, too. I thought it'd be okay to wear out. Stupid growth spurts.\" She hoisted the top up, making herself decent again, for as much as that was possible.\n\n\"At least there's no audience this time,\" he said, indicating the empty cafeteria. By contrast, most of the class must've noticed the earlier wardrobe malfunction in the lecture hall.\n\n\"True. This is how I like places, when I go out,\" she joked. \"Empty.\"\n\n\"So you don't have to deal with type threes?\" He asked.\n\n\"Exactly,\" she said. \"You know, sometimes when dealing with guys like that, I wish I could just be, like, 'hey, you want my boobs so badly, so here they are!' And then I'd just knock them out with them, like this!\" She spun around on the ball of her foot, swinging her massive chest around her. She knocked into the table and several chairs, sending them scattering across the floor. Erik stared slack-jawed as she pirouetted, her humongous tits describing an arc around her, knocking over everything in their way. \"KO by boobs!\" She proclaimed, laughing.",
        "\"The best way to go,\" he chuckled, trying to hide how much she was turning him on.\n\n\"I'd do it too, if I didn't think they'd probably like it. Or charge me with assault. Either way, not an outcome I want.\"\n\nErik looked at his phone as she came to a halt, her heavy breasts swaying from side to side from the residual momentum. \"I really need to get going,\" he said sadly. \"I need to walk back to the engineering building, after all.\"\n\n\"Wait, give me that,\" she said, and winked. \"You'll have to be able to contact me... for the assignment.\"\n\nHe handed her the phone, and she entered her number, saving it to a new contact, putting in her name. He wanted to take the phone back, but instead she tapped the 'add photo' button, stood next to him, her arm around his waist, his right arm pressed into her boob. She held out the phone, and took a selfie of the both of them, saving the picture with the contact.\n\n\"There, now you'll know who I am,\" she said happily.\n\n\"As if I could forget,\" he mumbled as he took the phone, and looked at the picture. The angle showed only three things: his face, her face, and her insane cleavage. Her cleavage wasn't even entirely in the picture, which also meant the top she was wearing wasn't visible. It made it entirely too easy to imagine she was naked in that shot.\n\n\"About that assignment,\" he said. \"I can look it up on the website, and let you know how much work it looks to be next time we see each other.\"\n\n\"I have a better idea,\" she said, a mischievous glint in her eyes. \"Why don't you come over to my place Friday evening, and we'll look at it together.\"\n\n\"It's a bit early in the semester, isn't it? The class only just started, I doubt there's anything we can do yet.\"\n\n\"Erik, Erik, Erik...\" she sighed with mock disappointment. \"Why are the nice guys always so oblivious? I just asked you on a date. At my house. You don't really want to say no to that, do you?\"\n\nErik swallowed hard, his mouth suddenly very dry. \"I... I'll be there,\" he managed to say.\n\n\"Great, how about seven? Send me a text so I have your number, and I'll reply with my address.\" She blew him a kiss, turned around, and walked away, swaying her hips. \"See you then!\"\n\nHe stared at her delectable ass, and the swell of her immense breasts visible from behind her, swaying from side to side as she walked. He shook his head in disbelief; he didn't know what just happened, but he imagined this is what it would feel like to win the lottery, get the Nobel prize, and be the first man on Mars, all at the same time.\n\n***\n\nWhen Erik woke up the next day, he was initially convinced he'd dreamed the whole thing. He was sure it was still Monday, that he'd never met the amazing Jessica, and that they definitely didn't have a date for that Friday. He knew he was about to repeat that day, but normally this time.\n\nHowever, the date on his alarm clock obstinately said Tuesday, no matter how often he blinked. Okay, so Monday had happened, but surely Jessica couldn't be real. Breasts larger than medicine balls did not exist, he had to remind himself. They couldn't.\n\nHe looked at his phone, and saw the texts they'd exchanged. After he'd sent her a message so she'd have his number, Jessica had cheerfully replied she was excited for Friday, and had given him her address. The realisation dawned on him: it was all real. He really did meet the most beautiful girl in the world the day before, and they were going on a date. He actually had a date with Jessica. It was hard to believe, even with the evidence right in front of him. Had he quantum leaped into someone else's life? These kinds of things didn't happen to him, normally.\n\nHe tapped her name, which she'd put as \"Jessica Boob-girl\" with a smiley face. Presumably not her real surname, though maybe she'd been afraid he knew many other Jessicas he'd confuse her with. As if the picture left any doubt who she was. He stared at it, mesmerised by her breathtakingly beautiful face and her endless cleavage. The cropping of the picture really did make her look naked, he thought. He felt his dick begin to stir, and he briefly considered jerking off to the picture, but thought better of it. He didn't think he'd be worthy of his type four status if he did that.\n\nIt turned out they had three more classes in common, so he saw her a few more times. Every time they sat together, and they even managed to have lunch again on Wednesday and Thursday. He still did a double take every time he saw her. It didn't matter that he already knew what she looked like; there just was no getting used to her. The fact that she'd gotten a better fitting top than the one she wore on Monday didn't really make any difference; she still looked amazingly sexy. On top of that, he grew to like her more every time they were together, and he hoped the same was true in reverse.\n\nThe times they were not together were even more difficult, as he'd predicted. Every time he closed his eyes, he saw her, impressive chest and all. He heard her voice in his head. He daydreamed about the smallest things, like just holding her hand. He found it difficult to think about anything else besides this incredible girl, a fascination that was not just due to her looks. There was no denying it: he was officially smitten.\n\nAs Friday approached, he grew more and more nervous. It didn't help that every time he saw her, he was convinced she'd be with some other guy, and would call off the date. There were so many guys on campus, surely she'd find someone she liked better than him? It hadn't happened, though. He mostly saw her talk to other girls, and only one other guy who he knew was very, very gay.\n\nOne very surprising thing was that some of the girls he saw her with were ones he'd previously thought were very attractive. Pretty girls, with nice, normal big breasts. Now, when he'd seen them in Jessica's presence, they were plain-looking, almost downright boring. No one was capable of catching his eye anymore, except for her.\n\nFriday crept by incredibly slowly. He didn't see her at all during the day, and his classes dragged on, minutes feeling like hours. He'd never looked at the clock so often during a day, and seven o'clock just refused to get any closer.\n\nFive-thirty, and he was finally back home, getting ready. He texted her: \"Are we still on for tonight?\"\n\n\"YES!!!! :D :D :D\" Came the reply. \"Stop being so unsure of yourself :P\"\n\nErik wished it was that simple. He imagined that they could be standing at the altar, and he still wouldn't be able to believe she was interested at him. Okay, now he had the image of her in a very scandalous wedding dress in his head, and his dick responded. He didn't need this, he wanted to be calm when he got there.\n\nSix-thirty, and he was getting in his car, a five-year-old Honda. Not too bad for a student car, though it felt very shabby to him. He wanted to impress, even though he knew that she wasn't the type to care about something like that. As long as he was nice, and they had fun, he should be fine. He just wished he could control his nerves a little better; he had enough experience to know that no girl would be attracted to him if he couldn't at least show a little bit of confidence.\n\nHe used his phone to navigate to the address she'd given him. He drove out into the suburbs, the scenery changing from the crowded inner city to larger, more widely spaced houses. It was also clear that the area he was heading into was more affluent; many houses looked more fancy, had neat gardens, and expensive cars were parked out front.\n\nFinally, he turned into the driveway of what had to be Jessica's house. It was a nice looking, above average suburban home. Not as fancy as some of the ones he'd seen on the way, but definitely nicer than anything he'd lived in. He parked his car and got out, his heart pounding in his chest.\n\nWhy was he still so nervous? He'd spent quite a bit of time with her this week. He already knew they got along, and she seemed to like him. However, this was different. This was an actual date. Presumably, tonight she would decide if he was boyfriend material, or would forever be friend-zoned.\n\nHe walked up to the front door, and rang the doorbell. The door itself was very wide, almost four times the width of a normal door. He wondered if that was just the style of the houses in this neighbourhood. He couldn't really tell from here.\n\nSeconds crept by slowly as he felt himself grow more nervous. He clutched the small bouquet of flowers he'd picked up earlier, hoping she wouldn't think it was corny. The longer it took, the more misgivings were creeping back into his mind. Was this the wrong house? Was it a prank after all, and had she deliberately sent him somewhere so he'd make a fool of himself?\n\nFinally, the door opened, and his worries were immediately forgotten. Standing in the doorway was the most astonishing vision of beauty he'd ever laid eyes on. Jessica had straightened her hair, and was wearing a bit more makeup than she had been during the week, though it was still pretty subtle; she didn't need much, after all. A soft-pink, slightly glossy lipstick adorned her lips, which made them look even more inviting.\n\nShe was wearing an elegant, short-sleeved light-blue shirt, with a very low-cut top. On a regular woman, this shirt's neck would've plunged down to below their hips, and would've been wide enough to allow their entire body through; on Jessica, it just showed an incredible amount of smooth cleavage. The shirt obviously was a lot better fitting than the tube top she'd worn on Monday; it fit around her massive chest like a glove, allowing their natural fullness to show without any distortion. It conformed perfectly to the curve of those enormous globes, narrowing at the bottom to follow the slope towards her hips. It didn't make it all the way; the fabric stopped well before reaching her body. It was the equivalent of a midriff-baring shirt for Jessica, though for her, it only showed under-boob. Her stomach was nowhere to be seen, covered in its entirety by those magnificent mountains.\n\nHis eyes travelled further down, to her short skirt which ended about halfway down to her knees, revealing her long, bare legs. It was the first time he'd seen her in anything other than jeans, and he took a moment to admire this new, previously unseen part of her. Heeled sandals helped emphasise her supple calves, and Erik once again found himself wondering if this girl had even a single square centimetre of her body that wasn't astonishingly beautiful.\n\n\"Erik!\" She said excitedly. \"You made it!\"\n\n\"It wasn't hard to find,\" he said, and stepped across the threshold. One small step for man...\n\nWhen he came in, she embraced him. He hadn't been expecting that. Sure, he'd hugged girls on previous first dates, but with Jessica, the thought of doing so somehow seemed much more inappropriate. Her colossal bust smushed against his chest, his stomach, and even his hips as she pulled him close. He felt as if he was being pulled into her cleavage as he tried to reach around her shoulders to hug her. Soft, fragrant skin was pushing against his entire upper body, and he even felt her against his crotch, which immediately responded. With great mental effort, he forced himself to keep his composure; it was too early in the evening, and something like that might ruin her opinion of him.\n\nHe had to bend forward a bit, mashing her breasts down even further, until finally their faces were together, and their cheeks touched.\n\n\"It's good to see you,\" he managed to say. Though, what he really wanted to say was closer to \"it's good to feel you.\" She felt incredible against his body, and even if all they did for the rest of the night was stand there in that hug, this was already the best date ever.\n\nWhen they released each other, Erik felt incredibly flushed. \"You look amazing,\" he said breathlessly.\n\nShe actually looked a bit shy when he said that. \"Thanks,\" she responded. \"Are those for me?\" She took the flowers from him. \"They're lovely, thank you. Let me get a vase for these.\"\n\nShe walked towards the kitchen, and Erik followed her. He admired her from behind; the shirt revealed a bit of her lower back, and her hips swayed hypnotically as she walked in the short skirt.\n\n\"I actually got this shirt fitted yesterday,\" she told him as they walked. \"I wanted to make sure I had something that actually fit properly for tonight.\"\n\n\"That's a lot of effort for a stay-at-home date,\" he said.\n\nShe laughed. \"It's not where we're going, it's who I'm with. Honestly, this outfit is a bit more revealing than what I'd normally consider appropriate for a first date. But, since we've been having lunch a bunch of times, I don't quite think of this as a normal first date. It's actually the fourth date, really.\"\n\nErik was definitely appreciative of the effort she'd put into looking good for him. Then again, she could've been wearing a burlap sack and she still would've looked incredible. Strangely enough, this outfit was actually a bit less revealing, at least as far as her breasts were concerned, than what she'd worn on Monday. Not that it was any less sexy for it, and it made up for it with the short skirt and the parts of her breasts sticking out from under the shirt.\n\nThe kitchen was large and open, allowing Jessica plenty of space to manoeuvre. That, combined with the overly wide doorways, which were present on the interior of the house as well, made him wonder if this place had been built for her.\n\n\"This is quite the place you've got here,\" he said, hoping she'd volunteer some information.\n\n\"Thanks,\" Jessica replied as she was rummaging through a cabinet to find a vase. \"My parents actually lived here, up until I was born. They kept it, and rented it out until I moved in a few years back, mostly to people who never even knew why the house is the way it is.\"\n\nThat sounded like a promising lead. \"What do you mean?\"\n\nShe pulled a red vase from the cabinet, and began filling it with water. She had to stand sideways in front of the counter to be able to reach the faucet. \"My dad had this place remodelled to make things easier for my mom, who has the same condition as me.\"\n\nErik had a shrewd idea what she meant, but still asked. \"Condition?\"\n\n\"Come on, Erik, you can guess,\" she said, using her free hand to prop up one gigantic boob. \"She's big, like me! My dad had the doorways widened, the bathrooms changed so she'd fit inside, made the staircase wider, stuff like that. It made sense for me to move in when I moved out of my parents' place; everything's already perfect for a girl like me. My dad's only condition was that I had to get roommates; this place is pretty big, and he didn't want to miss out on the rent payments. I live here with two other girls, both childhood friends; they're both out for the night, so don't worry about them.\"\n\nErik looked around at the spacious, luxurious home. \"So, why did your parents leave this place, if it was so great for them?\"\n\nJessica gave him a devilish grin. \"My mom got too big,\" she said, watching his reaction.\n\nErik had to put a hand against the wall to steady himself. He didn't know about the rest of the house, but what he'd seen so far had plenty of room to spare for Jessica. Just how big was her mom?\n\n\"It was the two kids that did it for her,\" she explained. \"She was still okay after my brother, but when I was born, the boost the pregnancy had given her meant she couldn't walk up stairs anymore. They moved to a single-level place, with even more space. By now, my mom can't move much at all anymore, at least not unaided. The place they live in now is more like a warehouse, in terms of size.\"\n\nErik just stared at her, his mouth agape. \"That's insane.\"\n\nShe shrugged. \"It'll probably happen to me too, eventually, though probably not for a while. It's hard to say. My mom was thirty when she had me and moved out; I'm a bit bigger than she was at my age, but she had the two kids too... who knows? It's part of the reason why I finally decided to start leaving the house more; I figured I'd better do so while I still can.\"\n\nErik had trouble processing that. She was already so vast! How was it even possible that she'd get any bigger? And why did that idea excite him so much?\n\nJessica put the flowers in the vase, and placed them on the dining room table. \"There! So, what did you want for dinner?\"\n\n\"You,\" he almost said. \"I'm not sure,\" he said instead. \"I rarely go to people's houses for a first date. I don't know how this works.\"\n\n\"I'm not much of a cook, I'm afraid,\" she said. \"I was thinking we could just order pizza and watch a movie, then see where it goes. Maybe play some Xbox.\"\n\n\"That sounds like my ideal Friday night,\" he said, laughing. \"Especially if I get to do it with you.\"\n\nShe blushed. \"Thanks. Do you want a quick tour of the house while we wait for the food?\"\n\n\"Sure,\" he said.\n\nJessica once again reached into her cleavage, and produced her phone. \"This is why I'll always wear shirts that show cleavage, if I can,\" she laughed. \"It's just too convenient. I still carry a purse in public, because not everyone appreciates me fondling my own boobs. But if I could, I'd have everything in here.\"\n\nShe proceeded to order pizza for the both of them using an app for a local pizza place. He got a Hawaiian pizza for himself, though in truth he was barely paying attention to what she was asking as she tapped away on her phone. The sight in front of him was just too distracting.\n\nOnce the food was on its way, she led him upstairs to begin showing him around. For some reason, just the thought of seeing her bedroom made his heart pound again, even though he knew nothing was going to happen. At least, not yet, and he didn't dare think any further ahead.\n\nThey first passed two other bedroom doors, which Jessica explained belonged to her housemates, so she would not be showing them to him. The last door on the wide upstairs landing was the master bedroom, and it was gigantic. A king-size bed was the centrepiece of the room's modern furnishings. A huge window was covered by sheer curtains. A large dresser stood against the wall, and a loveseat on the side held a bunch of large, stuffed animals, which she was apparently very fond of. He filed that away for future gift-giving uses.\n\nA door led to a large walk-in closet, which he didn't get to see much of. However, he did catch a glimpse of an absolutely massive bra. \"So, you do wear them sometimes,\" he joked. He hadn't seen her wear one yet.\n\n\"Rarely,\" she answered, and she grabbed the clothing item and tossed it at him. \"That one's too small, actually. It's expensive to have to keep updating my wardrobe, and I've never really needed bras thanks to my condition, so why bother?\"\n\nHe examined the custom-made bra. There was no size tag, but his head could've comfortably fit in each cup many times. Entire dresses didn't use this much material, and this one was too small? \"What is that condition of yours anyway?\" He asked, handing the oversized bra back to her. \"It sounds like magic to me.\"\n\nShe shrugged as she put the bra away again, and led him into her bathroom. \"It's a rare genetic condition. It's somewhat similar to breast hyperthrophy, though much more benign.\"\n\nHe'd heard of that condition. The results of that, however, were usually not very pretty, and it caused lots of pain and problems for those who suffered from it. Clearly that didn't apply to Jessica.\n\n\"Basically, my breasts started growing when I hit puberty when I was ten years old, and they never stopped,\" she explained. \"They're not going to stop, at least until I hit menopause. As you can probably tell, they're much fuller than is typical of breasts this size, and the tissue is far stronger than regular breast tissue, which is why I don't need a bra. My body can also cope with the weight much more easily than normal women could, though it still requires a lot of exercise, trust me.\"",
        "\"Still sounds like magic to me,\" he said. Her breasts were perfect, in every way. How could that be just some genetic condition?\n\n\"The doctors don't exactly understand it either. But it poses no danger; my mom was fine, and so am I. We're just very big.\"\n\nShe showed him the master bathroom, which was bigger than his whole apartment. The huge shower cabin had nozzles on all sides, and the bath was bigger than any he'd ever seen. He imagined what she'd look like taking a bath there, all wet and soapy, her massive boobs rising out of the water.\n\n\"I grew pretty fast from the start,\" she continued. \"I was a D-cup by the time I was twelve. It led to a lot of teasing, especially from jealous girls. The boys changed their tune when they hit their own puberty, so I always had more male friends growing up. That changed again when I got so big I started to intimidate them. When I was sixteen, I was reaching basketballs. I wasn't very self-confident back then, so lots of baggy shirts and special bras to try to hide how big I was. By the time I started university, I was probably around watermelon size. It was then that I decided I'd rather work from home than face a new group of people.\"\n\nErik considered the story. \"As much as it pains me to have to ask this... why didn't you get a reduction?\"\n\n\"Don't think I didn't consider it, especially back then. But my condition is so unique that they were never sure if it'd be safe. Nowadays, I'm much more at ease with who I am. These things are part of me, and it'd feel wrong to do anything to them. Besides, they're fun, they feel good, and no matter what anyone else says, I think they look sexy.\"\n\n\"I definitely think so,\" Erik conceded.\n\n\"I know you do,\" she laughed. \"By now, I've learned to love me, huge growing breasts and all. If other people don't like it, that's their problem, not mine. I also figured that if I never went out because I don't like dealing with types one and three, I'd never get the chance to meet the right type four, like you.\"\n\nErik blushed crimson as they proceeded back downstairs, and she showed him the rest of the house. The main floor consisted of a very spacious kitchen, which he'd already seen, dining room, family room and living room. One area behind the garage had been converted into a small gym, where Jessica kept herself in good enough shape so she could walk with her enormous endowments. She had to be quite a bit stronger than a normal girl, Erik thought, even though she didn't look particularly muscular.\n\nProbably the most interesting feature was the pool out back. Jessica explained how she loved to spend time floating around in there, enjoying the weightless sensation.\n\nThe food arrived just as they were done, and the poor delivery boy was so flummoxed when Jessica answered the door he barely managed to say a word. He just handed her the pizzas, and ran off.\n\n\"That's why I always pay online,\" she said. \"They don't always remember to ask me, and I don't want to get them in trouble.\"\n\n\"Definitely a type two,\" Erik laughed.\n\n\"You'd think they'd know about me by now... it's not like this is the first time I've ordered there. Sometimes, I think they send their new guys on purpose, as some kind of initiation ritual.\"\n\nErik smiled at her. \"If I worked there, I'd be willing to fight to get the deliveries to your house.\"\n\nThey got out plates and drinks, and sat down on the luxurious leather couch in the living room. Jessica turned on the TV, and after perusing Netflix for a little bit, they selected a movie to watch. Erik munched his pizza as it started playing, watching Jessica more than the screen.\n\nJessica's bountiful bosoms filled her whole lap, and then some. She was resting her plate on the shelf of her breasts, and Erik enjoyed watching them wobble every time she picked up a slice. He could see bare skin under the bottom of the shirt, which had ridden up a little when she sat down, and he longed to touch it.\n\nShe'd been right; this didn't feel like a first date. Normally, the point of first dates was to get to know each other, and they already knew each other pretty well from having lunch several times. The relaxed vibe gave him more of a second, or even third date impression. It made him feel like things might go a bit further than what he'd normally expect on a first date.\n\nHe put his plate on the side table when he finished his pizza, and inched a bit closer to her on the couch. Normally, this was the point in the movie where he'd slide in close, and put his arm around her shoulder. The problem was, Jessica's boobs were just so vast, there was no way he could do that without having to sit against her breasts.\n\nHe settled for putting his arm on the back of the couch, his hand just barely reaching her far shoulder. It was all he could do without actually touching her boob. Even so, he was sitting awfully close to it. Under normal circumstances, he'd have no problem sitting close to a girl, but these were her tits! You didn't just lean up against a girl's tits at the beginning of a date!\n\nShe noticed what he was doing, and put her own plate away. She gave him a shy, somewhat demure smile, encouraging him. He moved a little bit closer, just barely not touching her boob. He was so close to her, he could feel her warmth. Could he move closer still?\n\nHe was still hesitating when she took the decision for him. She pulled her legs up on the couch\u2014underneath her boobs\u2014and snuggled up to him, resting her body against his, putting her head on his shoulder.\n\nHe wasn't just touching her boob now; her right breast was squarely in his lap, filling it entirely! The huge weight of her titanic tit rested on his legs and pushed against his stomach and chest. He would've been mortified if he hadn't been so turned on.\n\nHis right arm had been resting on his legs when she moved up against him, and it was now pinned down underneath that massive weight. The button-up shirt Erik was wearing was short sleeved, so there was nothing separating his hand and arm from the bare skin of her tit sticking out the bottom of her shirt. Right below his face was the endless valley of her cleavage, now closer than ever.\n\nHe felt his dick stiffen in his pants, and he fervently hoped she wouldn't be able to feel it against her skin. However, she gave him a devious grin that told him quite plainly that she had indeed felt it, but she didn't say anything. He wanted desperately to get away to avoid embarrassing himself further, but there was no way he could do that without lifting the gargantuan boob off him somehow, which would probably make things worse.\n\nHe considered telling her he had to use the bathroom, but what would she think if he did that? Probably that he was going to jerk off in there. Not to mention that he'd have to get up and walk while still erect. At least right now she couldn't see it, even if she could feel it.\n\nMore than that, though, there was a part of him that never wanted to move again. He could sit here until he starved to death, and he'd have no regrets about his life choices when he died. There was no place in the universe he'd rather be than underneath Jessica's giant tit.\n\nThe fact that she apparently didn't mind that he was in full contact with her, or how his body was reacting, made it even hotter. He fervently wished he wouldn't come in his pants. It had never happened to him before, but if anything could make that happen, this would be it.\n\nThe feeling was exquisite. The flesh resting on top of him was just so soft, and warm. It covered him like a very heavy, very full blanket, and the sensation was almost relaxing. Part of him just wanted to cosy up around that gigantic breast, and doze off there. The only thing stopping him was the arousal, which was much stronger still. His breaths were short and quick, and he didn't even want to guess how high his heartrate was. The desire to just grab that tit, caress it, lick it, bury his face in it, and rub his dick against it... to just devour that magnificent piece of femininity was almost overpowering\n\nThey sat like that for a while, and after he finally began getting used to the feeling of the world's biggest boob, he started to become aware of other sensations. Jessica was resting against his side, her head on his shoulder. Her luscious, silky hair was tickling his face and neck. Her gorgeous face, looking so content, was mere centimetres from his.\n\nHer right arm was in between them, underneath her gigantic tits. He felt the back of her hand against the side of his leg, her fingers idly brushing against it from time to time. His own left arm was over her shoulder, his hand caressing her other arm. Her skin was flawless, and velvety soft under his hand.\n\nThis was, without a doubt, the most erotic moment of his entire life. Just cuddling with this extraordinary girl was better than any sex he'd had in the past. He knew right then and there that he was ruined forever. No one could ever match up to Jessica; other girls just need not apply anymore. He'd better do everything in his power to make things work with this marvellous girl; if he couldn't, he'd never find anyone even close.\n\nIt wasn't even just the fact that she was so astoundingly beautiful, nor the superhuman bust. From their interactions this week he knew she was energetic, smart, incredibly kind, and so much fun to hang out with. She had an amazing confidence about her, a sense that she was totally at ease about who she was, which was inspiring to him. He'd heard the phrase \"when you know, you know\" before, but he'd never really understood what it meant. Now he knew. He was going to marry this girl someday... if she wanted him.\n\nAfter what felt like no time at all to him, but which had to be at least thirty minutes, she suddenly stirred. She grabbed the remote, and paused the movie. \"I just remembered!\" She exclaimed. \"I got dessert!\"\n\nShe stood up, much to Erik's regret. He felt almost naked without that comforting weight on top of him now. Not to mention, the bulge in his pants was very obvious, and no longer hidden from view. He tried to adjust his pants surreptitiously, though it was kind of futile. He gave up, hoping that if she hadn't minded feeling it, she wouldn't mind seeing it.\n\nShe walked over to the kitchen as he stood up to stretch his legs. As nice as the feeling had been, his range of motion had been rather restricted while sitting like that.\n\n\"Not too heavy for you, I hope?\" She said teasingly, casting a sly smile in his direction. Was it his imagination, or did her eyes dart towards his crotch for a second?\n\n\"Nuh-uh,\" he managed to utter. He wondered once again how she was able to walk like it was nothing, and without even a bra to help her. Nothing about her posture showed she had such a massive weight attached to her chest.\n\nShe seemed to have read his mind. \"Like I said, it takes a lot of exercise. I'll show you my routine one day, if you're interested. Do you want ice-cream?\"\n\nShe bent over in front of the fridge, and opened the freezer drawer. Erik almost lost it, right then and there, when he saw her breasts hanging pendulously in front of her as she rummaged through the drawer. They hung to the ground, and pushed up against the drawer. It almost made him miss the amazing view of her ass this was giving him.\n\nFrom this angle, he could see the huge stretches of under-boob sticking out of her shirt. Cleavage from below was not something he'd ever even given any thought before, but it was now his new favourite thing. Also visible for the first time was her flat, oh-so-sexy stomach. He wanted to kiss that stomach, and feel her tits rest on his head as he did so.\n\n\"Vanilla, chocolate, or pistachio?\" She asked, seemingly unaware of the view she was giving him. Her boobs were dragging over the floor as she moved, and her shirt, stretched to the limits by the hanging pair, was riding up, helped by the friction with the floor. Slowly, it was creeping up past the front of her boobs, revealing the edge of her giant areolas.\n\n\"Can I have all three?\" He asked, trying not to let on what he was seeing. It was hard to keep his voice from wavering. He didn't want to be rude, but he was completely unable to stop himself from staring. Fortunately\u2014or not\u2014most of what was happening was out of view, beneath her.\n\n\"Sure, if I can get it into a cone. Or do you want a bowl?\" She stood up, holding one of the containers of ice-cream.\n\nErik gasped. On the right breast, her shirt had slipped above her nipple, which was completely hard from the cold of the freezer. A huge, melon-sized pink protrusion that stuck out quite a bit from her equally large areolas. It was big enough for him to wrap his entire hand around.\n\nErik turned around so fast it made it him dizzy. His heart was pounding in his chest as he struggled to act normal. \"C...cone, please,\" he stammered.\n\nHe heard her laugh. \"Oops,\" she said. \"Well, nothing you haven't seen before, I'm sure.\"\n\nWas she joking? Sure, he'd seen nipples before, but never in his life had he seen anything like that. That was the largest, sexiest nipple he could've ever imagined. He longed to put his mouth on it, to suck on it. It probably wouldn't actually fit in his mouth, but damn if he didn't want to try. He'd only gotten a glimpse, and now he wanted more.\n\nHe risked a glance over his shoulder, and saw she had fixed her shirt. Her nipples were still hard, making huge tents in the fabric. He tried not to look at them directly, instead focusing on her face. She was beautiful enough, so that wasn't too difficult.\n\n\"I guess that's what I get for going braless with a short shirt,\" she said as she was getting the cones out of the pantry. \"Maybe not one of my best decisions. Or, maybe it was, from your point of view.\" She winked at him.\n\nErik still felt his heart hammer in his chest. She was just so casual about her sexuality. It made her even more desirable than she already was, in his opinion. Urgently needing to distract himself, he looked around the living room. His eyes fell on a framed picture sitting on a bookshelf. He picked it up, and looked at it.\n\nIn the middle was Jessica, wearing a cute red sweater that covered her much more fully than anything he'd seen her wear so far. The sweater, which would've been entirely uninteresting on any other girl, somehow still seemed obscene with the huge globes underneath it. It gave a whole new meaning to the term sweater puppies. She was a little bit smaller than she was now, indicating the picture was taken a while ago, though no more than a year, he guessed.\n\nOn Jessica's right in the picture was a tall, handsome middle-aged man, who had to be her father. Next to him was an attractive woman, with the most colossal bust he'd ever seen, leaving even Jessica far behind. He couldn't actually tell how big they were, since only a small part was in the picture. The woman was turned to the side, with most of her chest out of frame. Still, from the way they reached down to the floor and curved up in front of her face, he could tell their actual size had to be somewhere between 'ginormous' and 'insane.' The size of cars, was his lowest estimate. No wonder she couldn't move anymore.\n\nAnd Jessica could be that size one day? The thought excited him, which was still surprising to him. He'd never even fantasised about much more than a G cup before he met Jessica, and here he was hoping her already immense assets would grow even larger. It was a side of him he'd never known before.\n\n\"Is that your mother?\" He asked, somewhat unnecessarily.\n\n\"What gave it away?\" She chuckled. \"Not bad, right? The women in my family age well.\"\n\nHe looked at the figure in the picture more closely. She was a lot shorter than her daughter, and her face was more rounded. Jessica seemed to have inherited her tall stature and more angular features from her dad, and she was that much more beautiful for it. Still, her mom was definitely not bad looking for a woman over fifty, if he'd done the math right. If he'd had to guess her age without knowing anything, he would've thought she was barely thirty.\n\nIt promised great things for Jessica, he realised. The age-old wisdom said that if you wanted to know what you were getting with a girl, you had to look at her mother. And Jessica's mother showed he'd be getting a lot, and then some.\n\nA very tall, somewhat lanky looking fellow with glasses was on Jessica's other side, and next to him was a short Asian girl. \"And this is your brother?\" He asked, looking over at Jessica, who was scooping the ice-cream into the cones, having to hold them above her bountiful breasts. There was definitely some resemblance, though Jessica carried her height much better.\n\n\"Yep, that's Paul, and his girlfriend Hitomi,\" she said. \"Ironically, or maybe not, Paul only likes flat-chested girls. I guess he was overexposed at a young age.\"\n\nHe put the picture back down. \"Your family looks nice,\" he told her.\n\n\"Maybe you'll meet them one day,\" she said, winking at him. \"Also, bonus points if you can guess my parents' favourite book.\"\n\nHe thought about it for a second. \"Paul and Jessica... That means... wait, wouldn't you have to be Alia then? Wasn't Jessica Paul's mom?\"\n\nShe laughed. \"It's not a perfect match-up. They preferred Jessica, thankfully.\"\n\n\"It suits you much better, I agree,\" he said, nodding.\n\n\"At least we should be thankful they didn't name us Leto and Ghanima, I guess.\"\n\nHe laughed at that, and walked back to the couch. Jessica was putting the ice-cream back in the freezer, and he was once again treated to the sight of her bending over. He wondered what it would be like to be underneath those babies when they were hanging down like that, and his dick began to stiffen again. Unfortunately, no wardrobe malfunctions happened this time.\n\nShe returned to him carrying the cones; his one had the three flavours, while hers only had chocolate ice-cream. His fingers brushed hers as he took his cone, and he shivered; even that simple contact still excited him. \"Thanks,\" he said, and sat down.\n\nShe sat down too, and they returned to their previous position, Jessica's huge breast in his lap, feeling so incredibly good. The only difference was that his hand wasn't trapped under there this time, since he was using it to hold the cone. He had to hold his arm up awkwardly to be able to reach around her breast and eat his ice-cream. A small glimpse of what it was like to be her, he supposed.\n\nHe looked over at Jessica, who leaned against him again, though sitting a bit straighter than before since she was eating. He watched her tongue slide over the cold treat, and he couldn't help but imagine she was licking something else. Ice-cream would get on her lips occasionally, and she'd lick it off using her tongue. Whether deliberately or not, she was eating that cone very seductively, and it was mesmerising to watch.\n\nShe looked up from her ice-cream, and gave him a knowing glance. \"Are you going to turn the movie back on?\" She asked innocently, as if she wasn't aware what had distracted him.\n\n\"Oh, right!\" He exclaimed. He looked around on the couch. \"Where did you put the remote?\"\n\n\"I, um, put it away,\" she said, looking down at her cleavage. \"You want to get it for me? My hands are occupied.\"\n\nErik turned white, not believing what he was hearing. Sure, she had an ice-cream cone in one hand, and her other was in between them, under her breast again, but surely her suggestion couldn't be as innocent as she made it seem. He could just hold her ice-cream instead, right? However, she was looking at him expectantly, clearly waiting for him to go through with her request.\n\n\"You... you're sure?\" He asked in disbelief.\n\nShe nodded, and innocently licked her ice-cream. The way she was acting, she'd asked nothing more risqu\u00e9 than him retrieving the remote from between the couch cushions. Instead, he was faced with having to dig between two much more inviting looking pillows.",
        "He realised that if he waited too long, she might change her mind, and he'd lose this chance. With some difficulty, he transferred his cone to his left hand, and reached his right over her breast.\n\nHis eyes were transfixed on her face, expecting her to tell him no any second now. But she was still feigning innocence, her eyes idly following his hand, which was closing on her breast slowly.\n\nHis palm made contact. The softest, most amazingly supple skin yielded below his fingers. He'd felt it before, when she almost fell in class, and when his hand had been trapped underneath her just a few moments ago. But this was different somehow; this was deliberate. He was touching her, on purpose. His heart was racing, while his breathing seemed to have stopped entirely.\n\nHis fingers slipped in between her breasts, and he felt around carefully. The soft pressure of the two malleable globes pressing together entrapped part of his hand as he tried to find the remote.\n\n\"It's a lot deeper than that,\" she said lightly, still acting as if nothing out of the ordinary was happening.\n\nHe had no choice. He inserted his hand deeper into her cleavage. It was very warm, and the pressure increased. Her heavy breasts pushed together quite solidly, and he had to work to squeeze his arm down.\n\nHe was nearly down to his elbow now, and he was moving his hand back and forth along the valley of her cleavage to try and find the remote. He couldn't believe how incredibly good her tits felt against his skin. It was basically like he was tittyfucking her with his entire forearm, and he wasn't even close to reaching the bottom.\n\nHis fingers made contact with something plastic, and he slowly withdrew it from her cleavage. Despite the comfortable temperature in the room, his arm almost felt cold as it left the hot cleft between her boobs. He looked at his hand, and saw what he got was her phone.\n\n\"Wrong!\" She laughed. \"Put it back and try again. It's the only other thing in there, and you were pretty close.\"\n\nHe plunged his arm back down. Again, the incredible softness took him by surprise. There was just no way he could get used to anything about her. He put the phone back roughly where he thought he found it, and felt around again.\n\nShe had to have done this on purpose. There was no good reason to stash a TV remote in your cleavage. As ridiculous as the notion was to begin with, her using the space between her boobs to carry stuff around at least made some kind of sense. But, typically you didn't carry the remote anywhere; you left it near the TV. There was only one reason he could think of why she would've done this: she'd planned on having him retrieve it. She'd wanted to give him a chance to feel his arm between her huge, heavy tits.\n\nFinally, he found the remote. There was no doubt this time; he could feel the buttons, and besides, she'd said there was nothing else down there. He pulled it out, almost wishing he'd pretended to not find it for a bit longer. But again, his desire to stay in her good graces overcame his desire to touch her tits.\n\nHe pressed play, and put the remote down on the couch beside him. He didn't have the courage to try and put it back. He moved his cone back to his right hand, and resumed watching Jessica. Not the movie, of course; he'd barely seen any of the first part, so why would he start now?\n\nShe was still eating her ice-cream, trying to act as if everything was normal. The slight smirk on her lips told him, however, that she was fully aware of what she'd just done, and how he felt about it. His mind was reeling; this was starting to get beyond flirting, and into the realms of foreplay. There was no way she wasn't aware of how he'd feel about touching her like that. Had the glimpse of her nipple earlier also been deliberate? Just how far was she intending to go tonight? They hadn't even kissed yet!\n\nSuddenly, he felt something else on his hand, a cold and wet sensation. His neglected ice-cream was melting, running down the side of the cone, over his hand! A mixture of brown, green and pink was dripping down, splashing onto the surface of her breast. It just barely missed her shirt, falling instead onto her bare skin.\n\n\"Shit!\" He exclaimed, and he jerked his hand to his face, quickly licking the side of the cone, stopping the flow.\n\nShe giggled. \"Now look what you've done,\" she teased.\n\nErik stared at the splatter of molten ice-cream on her tit, slowly running towards her cleavage. He was expecting her to get up, to get a napkin or something. He'd do it for her, but he was kind of trapped; if he tried to move out from under her, he'd probably just end up spreading the problem further.\n\n\"Well?\" She asked him, grinning. \"You made the mess. Are you going to clean it up?\"\n\n\"I don't have anything to clean it with,\" he said sheepishly.\n\n\"You have hands, don't you? It's only ice-cream.\" She looked at him defiantly, as if daring him to come up with a way to clean her that wasn't inappropriate. Quickly finishing her own cone, she took his from him, licking along the sides to prevent further spillage.\n\nHe was hesitant, even though this shouldn't be any worse than what he'd just done. He ran his finger over her skin, starting at her cleavage to prevent it from running down. He loved the way her boobs dimpled under his finger, her skin yielding under his touch. He got about half of the sticky liquid before he lifted his finger and put it into his mouth. He started to repeat the procedure.\n\nShe shook her head, and gave him a truly devious look. \"That's going to be all sticky, if you do it that way. You'll have to think of something else.\"\n\nHe looked at her. There was really only one other way he knew of that didn't involve him getting up and getting a tissue. He raised his eyebrows, and in response she curled up her lips, and nodded ever so slightly, giving him permission.\n\nHe bent his head forward, having to use his arm to hold her boob so he could get close enough. She was big enough that he could actually reach the top of the tit while they were sitting like this. It was yet another reminder of just how incredibly vast she was. His mind just couldn't really comprehend it.\n\nHer smooth, creamy skin was right in front of his face, and she hadn't stopped him yet. His vision was eclipsed by her colossal wonders. He stuck out his tongue, and licked.\n\nIt was heaven. He'd died and gone to heaven, he was sure of it. He was actually licking the biggest, most perfect pair of tits on the face of the planet. A pair so big that a single one overflowed his lap. So big that he had to use his entire arm to hug around it as he manoeuvred to get all of the ice-cream. His face brushed against her skin occasionally, and it felt wonderful. It was soft, and warm, and there was just so much of it. He couldn't get enough of it; there were seemingly endless reaches of tit for him to enjoy, and he wanted to feel every square centimetre. He struggled to restrain himself, and limited himself to licking the ice-cream off her. He still didn't know how far she'd be willing to let him go, and he desperately didn't want to do anything to ruin things.\n\nHe came back up with what he was sure was the widest, stupidest grin on his face. He couldn't believe that had just happened. Jessica looked kind of flushed too, her breathing faster. Had that felt good to her? At the very least, it didn't seem like she'd disliked it.\n\n\"Here's your cone back,\" she told him, her eyes sparkling. \"Make sure it doesn't happen again.\"\n\nHe took it without comment. He didn't trust himself to speak, so he just resumed eating his ice-cream, and trying to at least pretend to pay attention to the movie. He felt they'd crossed some kind of threshold, but he was at a loss as to how to proceed from here. He didn't feel any of his life experience had adequately prepared him to be in a situation like this, with a girl like Jessica.\n\nHe noticed from the corner of his eye that she was looking at him now, biting her lower lip. Her nipples seemed hard again, though it was hard to tell from this angle. She was obviously aroused. Come on, he thought to himself. He had to do something!\n\nHe was reaching the end of his cone, and he was now eating the waffle cookie along with the last of the pistachio ice-cream. She hadn't had any of that, he realised; she'd only had chocolate. It gave him an idea. An idea that made him sweat with trepidation, but that was too good to ignore.\n\nHe looked her straight in the eyes. Those unbelievably gorgeous, deep blue eyes. Eyes that made you fall in love the second you looked at them. He struggled to maintain his composure, remembering what he wanted to do. It took all of his courage to speak. \"You, um, you don't like pistachio?\" He asked, his voice shaking.\n\nShe raised an eyebrow curiously, unsure where he was going with this. \"I do; I love it. I just felt like chocolate today.\"\n\n\"You, um, want a taste?\"\n\n\"Yeah, I guess?\" A look of confusion and disappointment appeared on her face. She clearly had no idea what he intended to do. His heart was attempting to escape his chest, probably to flee from the embarrassment if she'd react negatively to what he was about to attempt.\n\nShe reached for what was left of his cone, but before she could, he took a big lick himself. Then, he brought his face closer to hers, and their lips touched.\n\nTime stopped. Fireworks went off in his brain, as it tried to comprehend where on earth he'd gotten the courage to do this from. Her full lips felt incredibly soft against his as he experienced what was easily the best kiss of his entire life. Her lips parted, and her tongue entered his mouth, the taste of the ice-cream mixing with the even sweeter taste of her mouth.\n\nThe kiss lasted forever. Civilizations rose and fell outside Jessica's house while their lips were locked together. Wars were fought, species went extinct, galaxies died and new ones were born, all in the space of that single kiss which was now the only thing that mattered in the universe. He'd never experienced anything like it before.\n\nFinally they separated, and when the real world came back into focus, Erik realised only a few seconds had passed. \"Wow,\" he said, sighing deeply.\n\n\"You're right, that is tasty,\" she said, smiling happily. \"Boy, did you ever have more courage than I gave you credit for.\"\n\n\"What?\" He said, his brain still trying to catch up with what was happening.\n\n\"That was a compliment, silly,\" she said softly, and she leaned forward to kiss him again.\n\nSomehow, it was even better than the first time. He hugged her shoulder tight as they kissed fervently, their tongues darting around each other. It was a deeper, much more passionate kiss, and Erik felt his mind was being overloaded. He was actually kissing Jessica, the most amazing beauty he'd ever seen. He was kissing her sweet lips, feeling her gorgeous body\u2014mostly her boob\u2014against him. Caressing her silky skin with his hands. It was paradise.\n\nHis right arm, leaning on her immense chest, went limp as his body was unable to focus on anything but that wonderful kiss. He dropped the remains of his cone, and it rolled into her cleavage. He didn't know if she'd noticed; she certainly didn't break the kiss. Her eagerness was arousing him even further; this incredible girl wanted him, there was no mistake. It was the most unbelievable thing in an evening filled with unbelievable things.\n\nWhen they came up for air after what really was a long time this time, they were both breathing hard, their mutual need obvious. He looked at the mess in her cleavage guiltily. \"I did it again.\"\n\nShe smiled at him, clearly not caring. \"Oh well, I've had worse. I'm going to have to clean this up properly, though, cause this is going to get too sticky otherwise.\"\n\nErik looked sad; he'd looked forward to the chance for another clean-up. He reached over to salvage the remains of the cone, but she stopped him.\n\n\"Wait,\" she said, an evil glint in her eyes. \"Watch this.\"\n\nShe repositioned herself, and used both her arms to squeeze her massive chest together. Erik watched in awe as the gap around the ice-cream cone closed, slowing crushing it. In a few seconds, the whole thing was swallowed by her tremendous cleavage. When she let go, only a thoroughly flattened waffle, along with a lot of crumbs, remained amidst the mostly molten ice-cream.\n\n\"I love doing that,\" she said, grinning devilishly.\n\n\"You're amazing, you know that?\" Erik said breathlessly.\n\nShe nodded. \"I do,\" she said matter-of-factly. She got up, and headed towards the stairs. \"I'm going to clean this off. I'll be right back.\"\n\nErik hesitated for a second, but then made to follow her. She turned around, and raised her eyebrows.\n\n\"Aren't you eager all of a sudden,\" she said playfully. \"You can wait here.\"\n\nErik looked crestfallen. Then again, this was still technically their first date, if you didn't count the lunches. Maybe he shouldn't expect anything more from the night. It was already the best date ever, anyway.\n\nHe looked at the screen, where the movie was still playing, as she walked upstairs. \"Um, should I pause it?\" He asked.\n\nShe shrugged. \"Just turn it off,\" she said. \"I missed most of it anyway.\"\n\nAfter a minute she came back out of her room, a huge bath towel wrapped around her chest. She stood on the second storey landing, leaning against the railing to talk to him as she used a washcloth to wipe off her cleavage. \"So, is this date everything you expected?\" She asked playfully.\n\n\"Are you kidding? I never could've expected anything like this,\" he said earnestly.\n\n\"Come on, now,\" she laughed. \"Surely you've got plenty of experience with girls.\"\n\nHe looked her over. Looking at her from below, it was hard to see her face. The fluffy bath towel was bigger than any he'd ever seen, and it still felt like it might come loose at any moment. Her body was just beyond compare, in every aspect. \"I have some experience, yeah. With regular girls.\" In truth, while he'd gone on a fair few dates and slept with a number of girls, he'd only had two real girlfriends, and only the last one had been somewhat serious. \"You... you don't even come close. You're just so gorgeous, and smart, and nice, and perfect in every single way. I can't even describe how awesome you are! You would be far too pretty to even talk to someone like me even if you weren't... you know...\"\n\n\"Unbelievably busty?\" She finished, giggling. \"I'm hardly perfect, you know. And you're a better catch than you think; you just need some more confidence. And that kiss you just gave me... wow! It's very rare that I find someone who actually thinks I'm attractive, even with these, and isn't intimidated by me, and even rarer that I like them this much too! Why wouldn't I be talking to you?\"\n\n\"I don't know,\" he said, exasperated. \"You're a goddess! I'm just me.\"\n\n\"Just you is all I want, Erik. You think I do this every weekend? It's been years since I've had a guy over. And none of them were ever as nice as you, or as good looking.\"\n\nErik blushed, unable to respond. When she started to head back into her room, he felt he should say something more. \"Um, what are we doing if we're not watching the movie?\" He asked. That was the best he could come up with? He felt disappointed in himself. What was he expecting her to say? Have lots of sex?\n\nShe turned back to look at him again, idly fingering the knot in her towel. It dropped ever so slightly, threatening to reveal her nipples again. \"What do you want to do, Erik?\"\n\nJump your bones, he thought. He'd never been more aroused in his life. \"Play some videogames, maybe?\" He suggested lamely. \"More kissing?\" He added quietly.\n\nShe laughed. \"I like that second idea,\" she said. \"But, I don't feel like playing games, not that kind anyway.\" She thought about it for a few seconds. \"How about a swim? It's certainly warm enough outside, and there's nothing more fun than an evening dip in the pool.\"\n\nErik's mouth went dry. Jessica, in a swimsuit? He didn't know if his heart could take that. \"I don't have any swimming trunks,\" he said meekly.\n\n\"Can't you just use your boxers?\" She asked. \"Actually, I think my brother may have left some swimming trunks here. Don't worry, they're clean!\"\n\nBefore he could respond, she went into her room, only to return moments later to throw some bright yellow and orange swimming trunks down from the landing.\n\n\"Here!\" She called. \"Put these on. I'll be down in a bit.\"\n\nHe caught the trunks, and stared at her door, stunned. Somehow, he knew that when she came back out, the night would get even better.\n\n***\n\nErik felt foolish as he waited for Jessica to come back down. The brightly coloured swimming trunks were not what he would've ever bought for himself, and they looked ridiculous on him. At least they fit reasonably well, even though Jessica's brother was built very differently from him.\n\nHe'd used the bathroom to change, even though he was alone downstairs. The thought of Jessica walking out of her room while he was still changing, catching him with his hard dick in the open, was just too terrifying. He'd also used the opportunity to pee as best he could, which had helped get his erection under control a bit. He fervently hoped he'd make it into the water before it came back, since the trunks would make it much more obvious than his pants had.\n\nIt was ridiculous, he thought. He wasn't eighteen anymore! He should have the self-control to not spend the entire night with a hard-on, just because he was near a pretty girl. Then again, Jessica wasn't exactly a normal girl; he suspected she could have that effect on anyone.\n\nHe had goose bumps on his skin as he waited. Probably the cool air-conditioned room, or, equally likely, the anticipation of what he'd see when she finally came downstairs. This was almost as bad as when he'd been waiting outside earlier that evening. Finally, her bedroom door opened, and he felt his heart racing again. She walked across the landing, and started down the stairs.\n\nErik's jaw dropped. He'd been expecting some kind of one-piece, since he couldn't really imagine a bikini capable of containing those monsters. Even if it had been a bikini, it would've had a fantastically huge top, even bigger than that bra he'd seen earlier, which was after all too small for her.\n\nWhat she was wearing barely qualified as a bikini for her. The dark blue top was made for a girl who had perhaps mere watermelon-sized breasts. On Jessica's more-than-medicine-ball size, they covered an area bigger than her areolas, but nowhere near the entire breast.\n\nVast expanses of creamy, smooth breast flesh bulged out in all directions from under the woefully inadequate bikini top. It left so incredibly little to the imagination, yet just enough that he couldn't help but yearn to see more. Her entire cleavage, from the top to the bottom of her mighty breasts, was now there for him to stare at, with only a flimsy-looking string connecting the two triangles of cloth. Her big nipples made noticeable dents in the fabric. He had no idea how she was expecting the bikini to stay in place, unless she had glued it to her skin or something.\n\nHe wondered what the bikini's bottom was like; he couldn't actually see it with her full, heavy boobs hanging in the way. For all he knew right now, she wasn't wearing one, though he sincerely doubted that. Her incredible legs were now entirely bare, and he longed to run his hands along them, to seek out the prize in between. She walked down the stairs seductively on her flip-flops, giving him ample time to stare.\n\nJessica regarded him the whole way down, clearly enjoying his reaction. \"You like it?\" She asked. Then, she lowered her gaze to his crotch, and gave him a naughty smile. \"Never mind, I can see you do.\"",
        "Erik's erection had come back with a vengeance from the vision of this ultra-beauty in that micro-bikini. Weird to think of it that way; a bikini that could easily fit over his entire head was just so small on her. He blushed hard, though he was happy that Jessica didn't seem to mind.\n\n\"Ready?\" She asked as she passed him, giving him a view of the sides of her nearly bare breasts. For the first time, he could clearly see how they hung in front of her flat stomach. He couldn't get over how full they were; breasts that size really ought to sag to the floor, but they didn't. They sat proud on her chest, yet were still unmistakably natural in shape, and how they moved.\n\n\"Ready as I'll ever be,\" he muttered, and stared at her ass as she walked to the glass sliding doors at the back of the house. The bikini bottom was equally skimpy, leaving a good portion of her perfectly formed derriere exposed. Her sexy upper back was covered by nothing more than the bikini's strings, which were only barely long enough for her to have been able to tie them together. The string was digging into the side of her breasts, flesh spilling over them, as it wasn't really long enough to reach around them. Strange; he would've expected her back to be more muscular, to be able to carry those overweight wrecking balls, but she didn't look it. Just like the rest of her, her shoulders and back were perfectly soft and feminine, toned just enough to look fit.\n\nHe resisted the impulse to tug on the string and release her massive monsters, knowing that now was not the time. That time may yet come, though... if not tonight, then almost certainly some other day, the way things were going. He couldn't remember ever being on a date that went this well, with a girl that he liked\u2014and that liked him\u2014this much.\n\nShe swung her hips seductively as she walked outside in front of him. \"In case you're wondering, I do have bikinis that actually fit,\" she said, giggling impishly. \"But none of them suited my fancy tonight. This one's a bit older, but I thought you'd like it.\"\n\n\"You weren't wrong,\" Erik said quietly. The fact that she'd deliberately put on such a scandalous looking piece of clothing for his benefit was immensely exciting to him.\n\nBalmy air surrounded them outside, considerably warmer than the inside of the house. The summer had been long and hot, and was not showing any signs of slowing down just yet. It was still twilight outside, the last rays of the summer sun basking them in a reddish glow. The natural light made Jessica look even better, the shadows highlighting every delicious curve.\n\nThe pool in her backyard was pond-shaped, and pretty big. Not Olympic big, but definitely bigger than your typical backyard pool. The far end reached a depth of over three metres, according to the signs. He wondered if the pool's size had also been chosen for Jessica's mom's benefit, when her parents still lived here. Underwater lights illuminated the bottom, the light sparkling on the still surface of the water.\n\nHe looked at Jessica's nearly nude monster tits. \"What would happen if you did a cannonball?\" He asked jokingly.\n\nJessica laughed, which made her tits jiggle. Even that simple movement looked like it threatened to dislodge the bikini. \"It would be one giant splash,\" she chuckled. \"And I'd almost certainly lose my top.\"\n\nUnfortunately, she didn't demonstrate. Instead, she walked into the water using the steps on the shallow end, ripples spreading over the surface from her legs. He followed her, the warm water feeling good around his feet. He quickly waded in to a deeper part where the embarrassing situation in his pants would be hidden from view.\n\nWhen Jessica got deep enough, she lowered herself, dunking her head under the water. When she emerged, Erik was mesmerised by her wet, glistening skin. Her dirty blonde hair clung to her head, and floated around her shoulders. Her huge tits bobbed up in front her, their buoyancy keeping them at the surface.\n\n\"You have no idea how good this feels,\" she said, sighing. \"Just because I can carry them with relative ease doesn't mean I don't appreciate it when I don't have to.\"\n\nHe had some mild notion of what she was talking about, just from how the huge weight of even a single breast had felt in his lap earlier. He could only imagine what it had to be like to carry them around every single day. \"I will gladly help you lift them, anytime,\" he told her, only half joking.\n\nShe put a finger to the side of her mouth. \"Hmm, tempting,\" she said. \"You could be my personal breast-carrier.\"\n\n\"A job I'd happily do for free.\" An image entered his mind of her somewhere in public, like a shopping mall, with him crouched under her massive boobs, holding them up. It would probably kill his back to actually do that, but that wouldn't stop him from trying, he was sure.\n\nShe was walking backwards towards the deep end, slowly moving away from him, giving him a seductive smile. Her tits bobbed up and down in the water in front of her, small islands of pale flesh rising out of the pool. She held up a hand above the water, and beckoned him. \"Catch me if you can,\" she said, her voice an octave lower than it had been before.\n\nHe didn't need to be told twice. He dove forward, and swum a few fast strokes before letting his momentum close the gap. She didn't attempt to escape, but instead opened her arms to welcome him. The problem was, her arms didn't actually extend farther in front of her than her boobs did.\n\nHe collided with the front of her massive chest, and felt himself glide over the wet surface of her skin, his body sliding on top of her cleavage. His legs were still free behind him, but his torso was now essentially resting on pillows made of soft flesh. She wrapped her arms around his back, and kissed him again.\n\nHe spread his arms along his sides, holding himself up on top of her immense chest, while she was doing her best to hug him into her cleavage as their tongues met once again. God, how he loved her lips. He'd never get used to that.\n\nDespite his efforts to stay horizontal, she was succeeding in pulling him down. His upper body was being surrounded by the soft, warm skin of her cleavage. It was a sensation unlike any he'd ever experienced; there was just so much boob all around him! He couldn't believe this was all one girl. Her wet skin felt slippery, allowing his torso to slide effortlessly in between the two floating masses.\n\nAs his legs were dragged down, he felt something against his hips. The string of her bikini, he realised. He had to be careful not to accidentally dislodge it. Or, maybe that's what she was planning on happening? He doubted whether she'd actually mind if he got to see more at this point. He definitely wanted to, but how far should they go?\n\nWhen they broke the kiss, he looked her in her beautiful eyes. Her expression promised that so much more was yet to come, but he didn't want to take advantage of her. \"Look, Jessica,\" he said tenderly. \"We don't have to go any further than you're comfortable with, okay?\"\n\nThe look she gave him was absolutely smouldering. \"I'm very comfortable,\" she said. \"Looks like so are you, lying like that.\"\n\nHe couldn't deny that; her boobs made the more comfortable cushions he'd ever had the privilege to lie on. \"I'm serious,\" he pressed on.\n\nShe smiled warmly. \"I know, Erik,\" she said softly. \"I appreciate that you respect me. But, do you really think I would've done the things I've done today, if I didn't want to? Sometimes, yes means yes.\" Her expression changed, an almost hurt look. \"Unless, you don't want to?\"\n\nHe responded by kissing her again, first on the lips, then her cheeks, and then proceeding down her neck. She moaned softly and released him, and he let himself float back a bit. He lowered his head, and buried his face in her cleavage, using his hands to grab as much of the gigantic tits as he could. He kissed and caressed her wet skin, water coming up in between her breasts. He rubbed his face against the soft flesh, and mashed it against his head. Her moans increased as she appreciated his attentions.\n\n\"Are you sensitive?\" He asked her, lifting his head only briefly.\n\n\"Ohmmm, yeah,\" she moaned. \"I told you\u2014ahhhhh!\u2014they felt good.\"\n\nErik continued his caresses, kissing and licking as much of her as he could get to, which admittedly wasn't much compared to the vastness of her unbelievable pair. It was such an insane notion; he had his head buried in a girl's cleavage, yet he couldn't even reach all of her tits. He let himself drift further back in the water, moving his head down her cleavage toward the front of her giant breasts.\n\nAs his head dropped lower into the valley between her tits, she pushed them together with her arms. His head was crushed on both sides by incredibly soft skin, and Erik felt like he might die from the pleasure. He kept kissing and sucking while his head was trapped in that heavenly prison, her sweet, sexy moans only amplifying his fervour. He was in a world made of tits; he could smell, see, feel, and taste nothing else.\n\nWhen she released him, he drifted back until he was out of her cleavage, and let himself drop down, standing up on the bottom of the pool in front of her. His gaze went from her face, following the string of her bikini from her neck down the endless slope of her breast, to the cup of her bikini, only to find it wasn't where it should be.\n\nWhether from his movements or hers, he didn't know, but the fabric of her far too small bikini top had shifted, revealing her gigantic left nipple. The lemon-sized nub stuck out to the side of the patch of cloth, its shape distorted by the ripples in the water. Erik stared at it, longing to see it more clearly.\n\nJessica knew what had happened, just from his expression. She took a few steps forward, towards a shallower part of the pool. Erik quickly scrambled back to give her room, knowing what she wanted to do.\n\nAs the water got less deep, she was able to lift part of her massive mammaries above the surface. Her pink, rock-hard nipple was revealed to him, glistening wet, and so incredibly large. The other side of her bikini had shifted too, revealing large parts of her areola, though the nipple was still holding on there. The sight of her partially exposed nipples was somehow even sexier than full nudity would've been.\n\nThe light from the pool danced over her skin, casting her in an enchanting, rippling glow. Her demeanour radiated sex, her divine body just so incredibly desirable. It was begging to be touched, played with, pleasured, and promising endless delights in return. Her face was flushed, her wet, dishevelled hair only adding to her allure, and she looked at him expectantly. He reached out and touched the nipple, his hand wrapping around the huge uncovered nub.\n\nShe cried out in pleasure. \"Careful,\" she admonished him. \"It's very sensitive. You have to start slow.\"\n\nSo, he did. He traced his finger around the side of her huge areola, and pulled the bikini up to reveal it completely. The nipple grew harder, and the bumps on the areola grew more pronounced as she shivered from his light touch.\n\nHe'd been right; the large disc of her areola was about as big as his face. He lightly drew his fingertips across it, just barely grazing her nipple. He drew circles around the huge protrusion with his fingers, enjoying her reaction.\n\n\"Oh yeah!\" She moaned loudly. \"Just like that!\"\n\nHe was hoping her neighbours weren't at home, or if they were that they'd at least enjoy the show. The yard was secluded enough so that no one could see them, but she was starting to get very loud.\n\nHe looked at her face as he put his hand on the tip of her nipple and squeezed lightly, tweaking it. Her expression was one of pure pleasure, and she was biting her lower lip, looking at him with a needy expression.\n\n\"More,\" she urged him, and he squeezed harder. He wrapped his hand around it, and pulled on it, first softly to see if she liked it, then harder when her moans increased. Her fantastic tit jiggled heavily as he tugged on the huge nipple. His other hand squeezed and fondled the flesh of her boob.\n\nHe couldn't resist anymore. He crouched down on the bottom of the pool, putting her nipple in front of his face. He put his hands on either side of the areola, caressing her bare breast, and put his lips on the tip of that gigantic nipple. He opened his mouth, and kissed and licked it as best he could.\n\nIt didn't fit into his mouth, as he'd expected, but he made a good effort, sucking as much of it as was possible. He felt her shudder, the huge breast in front of him wobbling from her movements. He hugged himself against it, the absurdity of the situation once again hitting him. Hugging a girl while sucking on her nipple was one thing, but being able to hug just the tit, that was insane. And the size of these nipples... he'd dated girls with breasts considerably smaller than just Jessica's nipples.\n\nJessica's moans got even louder as he caressed and squeezed the huge boob with his arms while sucking on the nipple. She joined him, kneading her ample assets with her own arms as her eyes rolled back in her head from the sheer pleasure.\n\nHe reached out with his left hand, and slipped it underneath the bikini, still stubbornly hanging on to her nipple on that side. He grabbed her other nipple, and squeezed it hard, while he continued to suck on this one. He was careful not to go too rough, instead aiming for a balance that seemed to maximise her enjoyment, using her moans as a guide.\n\nHe seemed to be doing it right. He heard her cry out loudly as her body tensed and jerked as she came from the nipple play. The movement caused her breasts to jiggle and bounce violently, but he held on. Her legs buckled, and she collapsed onto her knees, dragging him down. He let his legs slide under her tit, the heavy boob landing on top of him, its weight significantly reduced by the water.\n\nHis head was below the surface now, but he didn't let go. He kept his mouth on her nipple, still grabbing the other one, holding his breath. She continued to shake violently, her muffled screams audible under the water.\n\nFinally, with a few last judders, the motion stopped, and only then did he release the nipple from his mouth and emerged above the water. Sucking in a huge breath of air, he leaned against the enormous boob. On the other side, Jessica was leaning on her tits too, the strength having left her from the powerful orgasm that had wracked her body.\n\nOf course she could have nipple orgasms, he thought. She was his perfect girl, after all.\n\nJessica panted heavily, and looked at him with a primal need that was almost scary. He leaned forward on her tit, pulling himself up a bit, and kissed her again. The kiss was wild and passionate, Jessica devouring his mouth with wanton desire.\n\n\"That was beyond intense,\" she sighed when they broke apart. They were both leaning on her boob, their faces mere centimetres apart as he sank deeply into her soft flesh. \"It's been a while since I came that way, and I don't remember it ever being this good.\"\n\nErik was happy; his philosophy, when it came to pleasure, was that you should always try to give more than you received. And he knew that with Jessica, he'd be receiving a lot.\n\nLeaning against the huge tit, he could feel his cock press against the velvety skin. His balls ached for release from an entire week of being stimulated by Jessica's presence. Sure, he'd jerked off a few times\u2014he didn't think he could've survived otherwise\u2014but that was never a substitute for the real thing.\n\nShe motioned for him to get off her, and he stood up, admiring her abundance. She stood as well, raising her humongous assets above the water. Their heaviness visibly returned, and for the first time he could see how she had to work to lift them. Water ran off the sides of her humongous boobs, cascading down back into the pool. The bikini rested uselessly on top of her left boob, and still half-covered her right nipple.\n\nShe reached behind her back, and pulled the string of her bikini. It came loose, and dropped into the water, floating away. Erik regarded it with a sense of melancholy; she'd looked so unbelievably sexy in that small bikini, he was almost sad to see it go. He chuckled inwardly when he realised he genuinely considered it to be small now. A week ago, if someone had shown him that bikini and told him there was a fully natural, otherwise slim girl who could fill it, he wouldn't have believed it. And Jessica didn't just fill it; she'd spilled out of it to a ludicrous degree.\n\nHe looked up, and saw the most amazing sight he'd ever laid eyes on. Jessica's wonders, free at last. Vast pale mountains hanging off her chest, obscuring her entire torso, and jutting out to the side. The most amazing rock-hard pink nipples topped them off, so incredibly huge. She smiled seductively and posed for him, jutting out her tremendous chest. She tried lifting them with her arms, the flesh flowing around her hands in defiance of her actions. She pushed her arms against their sides, squeezing them together.\n\nHe loved the way they deformed under her touch. It showed him how soft they were, affirming their naturalness. It was the thing that was always missing with fake boobs, and the reason he'd never been interested in them. He also loved how, even with her arms stretched out, she couldn't actually reach her nipples. She'd probably still be able to if she really tried and pushed her boobs down, but just holding them like that, the nipples were just a little bit out of her reach.\n\nHe vaguely recalled having thoughts about boobs needing to be in proportion to a girl's body in the past. He now recognised that as a blatant lie concocted by his subconscious to convince himself to be satisfied with regular breasts. Clearly, there was no such thing as too big. If anything, this was the correct proportion for a girl to have. He'd never seen anything remotely as sexy.\n\n\"So, what do you think?\" She asked with a sultry voice.\n\nHe felt his cock twitch. \"Incredible,\" he whispered in a low growl. \"They're... you're more beautiful than I could've imagined.\"\n\n\"I can see you appreciate them,\" she said, and she started walking towards him. Her sensuous voice was plucking all the right strings, and he felt that if she said much more, he might come just from hearing it, if the sight of those incredible naked tits didn't get him first.\n\nShe pushed against him, his body wedging into her cleavage. She lowered herself, so they were floating in the water again, pulling him down with her chest. She pulled her tits apart, allowing him passage. His entire torso was surrounded by wet, smooth, warm skin. He was literally up to his neck in tits.\n\nHe extracted his arms from her cleavage, and hugged them around her neck as best he could. He kissed her again. Never before had he kissed a girl while being inside her cleavage. It was the strangest, yet most wonderful sensation.\n\nHe felt something against his dick, and he looked at her in surprise. She'd managed to slip her arm underneath her boob to get to him, and her hand wrapped around his member over the top of the trunks. He groaned as she moved her hand along the length of his cock.\n\n\"Very nice,\" she purred. \"Wow, you're hard. You must really want to come.\"\n\nIf she kept talking like that, he would. He nodded, his breaths growing more rapid. She pulled the elastic of his trunks over the tip of his dick. He felt the bare skin of her fingers against him, and it took all his willpower to hold back. Her skin just felt so good; it was unlike any other hand job he'd ever received, though part of that was probably because he was inside her cleavage while she rubbed him.\n\n\"If I let you come now, will you be able to go again?\" She growled.",
        "\"Probably,\" he squeaked. Normally, he took a little time to recover, but he was quite sure Jessica would have him hard again in no time.\n\nShe cocked her head slightly. \"I guess if I don't, you wouldn't last very long when we... fuck.\" She whispered that last word, sending shivers down his spine. \"Guess I don't have a choice.\"\n\nJessica released his dick, which confused him. He looked at her pleadingly, his eyes begging her to keep stroking his cock.\n\nShe winked at him. \"I'm not going to use my hands, silly,\" she said. \"Not when I have these.\"\n\nShe pushed him out of his cleavage, and put one huge tit against him. His dick pushed into the soft mass, poking her. He pulled down his trunks more, freeing his dick and balls. She walked forward, causing him to stumble back. His legs slid under the massive tit, her skin sliding along his rock-hard member.\n\nShe brought him to a shallower part, where he could sit on the bottom with his head still above water. His back was pushed against the side of the pool, and her enormous breast rested in his lap lightly as she crouched in front of him.\n\n\"Lean back a little,\" she instructed him. He did as she said, feeling the soft weight on top of his dick and his balls. This wasn't going to take long, he knew; the sensation was incredible.\n\nShe began to move back and forth. Her incredible boob slid over the top of him, rubbing against his dick. The buoyancy kept the full weight off him, so he could focus on the velvety soft, wet skin caressing his hard cock.\n\nIt was the weirdest boob job he'd ever received, and also the best. The water left just enough weight for there to be a delicious, sensual pressure on his legs. His cock pressed into her tit, her skin against the sensitive part on the underside. With every thrust, she shoved the enormous tit against his torso, the nipple bumping into his face.\n\nHis face contorted as he felt his balls contract. The amazing feeling of this gigantic piece of femininity rubbing against him was rapidly sending him over the edge. Combine that with the huge nipple he was kissing every time it came close to his face, and the gorgeous face of this angel looking at him lustfully, and he knew he couldn't hold on long.\n\n\"Do it,\" she said huskily. \"Come all over my giant tits!\"\n\nHe spasmed as he felt his dick pulse, thick streams of cum splashing against the bottom of her tit, mingling with the pool water. She kept moving, barely slowing her pace, stimulating him throughout his orgasm. He held onto the mighty breast, hugging himself into it as the powerful pleasure overtook his body.\n\nWhen he calmed down, he looked Jessica in the eyes. \"That was amazing,\" he told her.\n\n\"Too bad I couldn't see it,\" she said, biting her lower lip. \"That felt like a lot.\"\n\nJessica stood up, lifting her tits off him, and he got up too. She eyed his still semi-hard dick, which was oozing the last drops of cum. \"Very nice,\" she said again. \"You'd better make good on your promise. I want that dick.\"\n\nHe could already feel his dick reacting to the sound of her sexy voice, and the sight of her glistening wet monsters. He knew it wouldn't be difficult to get hard again. \"I don't think it'll be a problem. Sorry I came in your pool,\" he said, grinning.\n\n\"The filters will take care of that,\" she said. \"Next time, though, I want it all for myself.\"\n\nShe walked past him, and he put his hand on her boob, dragging it along the side. \"Damn, these things are amazing,\" he said. \"Not that the rest of you isn't,\" he added quickly.\n\n\"Thanks,\" she said. \"They're all yours now, to fondle, and kiss, and grab, and hug... whenever you want.\"\n\nShe knew exactly what to say to get his blood pumping again, didn't she? She sounded like she meant it, too. He was looking forward to Monday, when they'd have class again together, to see just how far she was willing to take that. Knowing Jessica, he was guessing pretty far.\n\nShe walked up the steps out of the pool, and opened a big basket that sat near the edge, retrieving a couple of towels. \"Let's take this inside,\" she said.\n\nHe eagerly followed her. Once he was back on land, he removed his trunks, which had still been around his knees. Jessica was watching him, staring at his crotch without shame, a look of sheer lust in her eyes. Her sexual appetite almost seemed frightening, though he couldn't wait to put it to the test.\n\nHe quickly dried himself off, and watched Jessica rub the fluffy towel over her body.\n\nShe saw him look. \"Well, don't just stand there,\" she told him. \"Help me towel off! There's parts of me that are difficult for me to reach, you know.\"\n\nWith a dazed expression, he took another towel and began to rub the front of her expansive chest. She sighed contentedly when he wrapped them in the soft fabric, and shivered when he rubbed them on her nipples.\n\n\"God, that feels good,\" she sighed. \"They always get so sensitive when I'm horny, and I don't think I've ever been this horny.\"\n\n\"How do you think I feel?\" He said, chuckling. \"I'm the one in the presence of a tit-goddess.\"\n\n\"Stop putting yourself down,\" she told him plainly. \"You think I expected for even one second, when I walked into that lecture hall, that I would meet the perfect guy? I wasn't kidding about how rare it is to find the right combination of nice, handsome, sexy, attracted to me, and not scared of me. I would've been happy just to find a friend, and instead I got you. I'm the lucky one here.\"\n\n\"I guess we're both lucky,\" he declared, giving her boob a quick squeeze with the towel.\n\n\"It also helps that you were very, very good at handling my nipples. That has never made me come like that before.\"\n\n\"I live to serve your breasts, my goddess,\" he said, and bent forward to kiss the soft skin of her boob.\n\nShe giggled, and put the towel away. She took his hand, and pulled him behind her into the house.\n\nWalking behind her, her butt was just too irresistible. He gave it a quick slap with his free hand, then squeezed. Firm yet supple, just the way he liked it. Her narrow waist made an hourglass with her shoulders and her hips, and he caressed her smooth curves as they were walking. He slid his hand around her waist, underneath her boobs, and stroked her flat stomach. Her tits pushed down on his arm while he did so.\n\nThey didn't make it very far. By the time they walked through the sliding glass doors back inside, they were kissing again, Erik hugging her from behind with his left arm, while his right was still around her waist, trapped by the sensuous weight of her boobs. His cock, growing harder again, pressed against the small of her back. His arm leaned on the shelf of her breasts, sinking deeply into them as he pulled her close to him. Her kisses became more intense as he moved his other hand from her stomach to her ass, then slipping it in between her legs.\n\nHis fingers touched the damp cloth covering her pussy, and rubbed her lips softly through the fabric. Because the bikini bottoms were still wet from the pool, he couldn't tell if she was wet herself, though he could feel her heat.\n\nShe whimpered as his fingers lightly brushed her clit. She reached an arm behind her back, and her hand closed around his growing hardness. Growing bolder, Erik pulled aside the flimsy fabric, and pushed his fingers against her lips. He slid one in between them, and found her hole. She was definitely very wet. He spread the wetness over her pussy with his finger, and rubbed it against her clit. She moaned loudly, her knees weakening.\n\nShe turned around to face him, but hadn't taken her size into account. Her humongous tits smashed into him, knocking him off his feet. He fell back on the soft carpet, fortunately not very hard.\n\n\"I'm sorry,\" she moaned as she looked at him feverishly. \"I just want it so bad.\"\n\nShe bent forward, and walked towards him. Her heavy breasts hung pendulously underneath her, and she dragged them over his legs. His dick almost returned to full hardness as it was enveloped in her cleavage. They pushed against his torso, and forced him to lie flat on his back on the plush carpet. She moved to the side a little, putting one breast squarely on top of him.\n\nThe weight was overwhelming as she bent down further, resting the massive tit on top of him. Her nipple pushed into his cheek, and he struggled to breathe as she kept lowering, putting more and more of her weight on top of him.\n\nFor a moment, he was afraid she might actually crush him, though in truth her tit wasn't that heavy yet. Give it a couple of years, though... that thought made him hard as steel again.\n\nJessica wrapped her hand around his member, stroking it appreciatively. \"Ooh yeah,\" she moaned. \"That's what I want.\"\n\nShe took off the bikini bottoms, and centred herself again, putting a boob on either side of him. She crouched down over his dick, close enough for him to feel her heat.\n\nHe stopped her. \"I have a rubber in my wallet,\" he said. He wasn't about to do anything they'd regret now.\n\n\"I'm clean, and on the pill,\" she told him, the need in her voice obvious. \"How about you?\"\n\n\"Clean the last time I was checked,\" he told her truthfully. \"I haven't been with anyone since then.\"\n\n\"Good,\" she moaned, and lowered her pussy slightly. Her lips surrounded the head of his cock.\n\n\"Jessica...\" he groaned, though in truth he knew he wouldn't have the willpower to stop her.\n\n\"I'm going to trust you,\" she said. \"If you lied, I'll kill you, understand?\"\n\nHe nodded, unable to speak. Deep down he knew this might not be the best decision, but if they were truly both clean... it wasn't like he was capable of arguing anyway, with her hotness enveloping the head of his cock. It felt incredible; it'd been so long since he'd gone raw, he'd almost forgotten how much better it felt.\n\nShe sat down, and he grunted as he entered her. Like every other part of her, Jessica's pussy was perfect. It felt hot and tight around his cock, and he was very happy he'd already come before; if he hadn't, he would've lasted less than a second in this moist, heavenly feeling.\n\nShe sat up, and began to grind her pussy on his dick, moaning loudly. He thrust his own hips counter to her movement, building a rhythm, though it was somewhat difficult on the hard surface of the floor. Still, he couldn't have been doing too badly, judging by her reactions.\n\nIt was another brand new experience for him. Usually, he enjoyed watching a girl's boobs bounce while she rode him. If they were big enough, he would even cup them with his hands, and play with the nipples. This, though, was entirely different. Jessica's massive tits rested on his stomach and chest, and spilled off to the side of him. They sloshed heavily as she moved back and forth, which was hypnotising to watch.\n\nHe only had to sit up slightly, lifting his head a little bit, to have his face in her unbelievable cleavage. Her breasts rolled back and forth around his head, and he tried to kiss them, which only seemed to increase Jessica's fervour. Her nipples were above him, and he reached out his hands to squeeze them, which she rewarded with more moans.\n\n\"Yes!\" She squealed. \"Unh! Worship my tits!\"\n\n\"I love your huge tits!\" He yelled, knowing instinctively what she wanted to hear. \"I love feeling your enormous mountains on top of me as you fuck me!\"\n\nHe squeezed the nipples hard as he felt her pussy begin to contract around his cock. She leaned forward, burying her head in her own tits to muffle her screams. Her tits rolled over him, enveloping his head as he continued to play with her nipples while she was coming. Her pussy felt like it was milking his dick, her powerful inner muscles squeezing around him. He was determined not to let it get to him, and give her more before he'd come again.\n\nShe collapsed onto her tits\u2014and by extension, onto him\u2014panting heavily. \"Oh god, that felt good. I love your hard cock.\"\n\nErik could only grunt in reply. In truth, he was surprised himself. It was pretty rare for him to manage to make a girl come from intercourse when doing it for the first time. He couldn't take all the credit, though; Jessica seemed to have done most of the work.\n\nShe sat up a little straighter, lifting some of the weight of her tits off his torso. He took the opportunity to squeeze his arms underneath them, and he grabbed her hips, pushing her down on his cock as she resumed grinding him. Her pussy felt so good, he just hoped he could last a bit longer and give her another orgasm!\n\nShe switched tactics, moving up and down his shaft. She bounced on his cock, which had interesting effects on her tits. The huge mountains lifted off him every time she came up, and slammed down on his body as she came down. It felt like he was being pounded into the ground by the heaviest, softest pillows ever. It knocked the wind out of him every time, and he loved every second of it.\n\nAgain, that strangely enticing thought that had entered his mind several times since he'd met her returned: the thought of her growing even bigger. How long would it be before she was big enough to cover his head in this position? How long until a single tit would dwarf his body? He wanted to be there when it happened, and he hoped their relationship would last that long, quite apart from the fact that he'd already decided he wanted to spend the rest of his life with her.\n\n\"Your tits will keep growing, right?\" He asked her as she continued riding him.\n\n\"Yeah,\" she groaned, not slowing down her bouncing. \"Why?\"\n\n\"Does that excite you?\"\n\n\"Oh god yes!\" She screamed, cradling her massive chest in her arms. \"I can't wait!\"\n\n\"Neither can I!\" He called. \"I want them to be as big as possible! Bigger than me! So big and vast and wonderful! I love your growing tits! I hope they never stop!\"\n\nIt had the effect he hoped for, and he felt her come again, even harder. Her sexy cries reverberated through the house as she seemed to come endlessly, and he hugged his arms around her huge chest, squeezing it while her orgasmic spasms caused them to wobble and bounce all over him.\n\nWhen she finally calmed down again, she rolled off him, leaving his dick, wet with her juices, sticking up in the cool conditioned air. Her chest spread out on either side of her as she lay on her back, the huge nipples sticking straight up. Erik still had a hard time believing how firm and full they were.\n\n\"Sorry...\" she panted. \"Just... too much...\"\n\nHer whole body was sweaty, and her hair, still wet from the pool, lay dishevelled around her head. It was an unbelievably sexy sight. Erik sat up, leaned against her boob, and cupped her face with his hand. She rubbed her cheek against his palm affectionately.\n\n\"Never...\" she began, still panting. \"Never... no guy has ever said... they want them to be bigger. They... always ask if... it's gonna stop... even if they liked them. Always... talk about... impractical. You... best ever!\"\n\nIt seemed like she was going to pass out if she didn't stop to catch her breath. She took his hand in hers, and kissed it, looking at him adoringly.\n\n\"I meant it,\" he said sincerely. \"I can't stop thinking about it; ever since you told me they were still getting bigger... I want to see it so badly! I don't know what's gotten into me.\"\n\n\"I've never been ashamed to say I love my tits,\" she told him. \"But to admit I want them even bigger... how excited it makes me to think I'll be as big as my mom one day... I can barely admit that to myself. And you like it?\"\n\nHe nodded, and leaned over to kiss her; the sweet, tender kiss of two lovers.\n\n\"It won't be soon, though,\" she told him, a bit sadly. \"It's a slow process.\"\n\n\"Some things are worth waiting for,\" he said truthfully. It wasn't as if he was dissatisfied with her current size, after all. Quite the contrary.\n\nJessica felt his dick push against her tit. \"Seems like we still have some unfinished business, don't we?\"\n\nHe nodded, swallowing. He really did want to come again.\n\n\"Come on,\" she said, sitting up. \"Let's go upstairs.\"\n\nHe stood up, and grabbed both her hands to pull her up. He marvelled at how heavy she was, knowing that a lot of her weight had to be in her boobs. Because of how big they were, he ended up back in her cleavage when she stood. \"My new favourite place to be,\" he said happily.\n\n\"Really?\" She asked. \"You wouldn't rather be underneath them? Or sucking on them?\"\n\n\"Those are all my new favourite places,\" he said, grinning.\n\nShe hugged him, her boobs surrounding him, and kissed him softly. \"I like you in here,\" she said softly. \"It feels good.\"\n\nHer tits pressed against him firmly, their weight pulling them together. He felt his dick against her stomach, cushioned on both sides by her warm breastflesh. \"It feels good for me too... Imagine what it's going to be like when my whole body fits in between your tits,\" he said.\n\n\"Oh god,\" she moaned, clearly excited by the idea. \"You really want them to get bigger, don't you?\"\n\nHe nodded, and kissed her again.\n\n\"I can't believe I actually found a guy who wants me to grow,\" she sighed. \"Where have you been all my life?\"\n\n\"I still don't believe it myself,\" he said, shrugging. \"I never thought I'd want something like that. But I really, truly do. I love your tits; how could more ever be a bad thing?\"\n\n\"Damn, you're amazing,\" she told him, lust returning to her face. \"Now, let's take care of that dick of yours!\" She teased, and stepped back, extracting him from her cleavage.\n\nShe ran up the stairs, and he came up behind her, admiring her bouncing boobs. He also got a great view of her perfect ass and her still wet pussy. He still wasn't used to how beautiful she was, and her naked form was just amazing to behold from any angle.\n\nShe darted into her room, and Erik followed. She sat on the edge of her bed, hugging those gigantic beauties. Erik kneeled down in front of her, and ran his tongue around her nipple. He proceeded to kiss the giant nub, while rubbing his hands all over her skin.\n\nShe let herself fall back, and Erik followed. He lay on top of Jessica's tit, rubbing his body and face into it. His head sank into the malleable flesh; he couldn't get over how soft she was! This is how boobs were meant to be, he decided. Forget ordinary sizes; he knew now that in order to properly enjoy boobs, you had to be able to surround yourself with them.\n\nHe sucked on her nipple, and Jessica responded immediately. \"God, you're good at that,\" she moaned.\n\nErik looked at the magnificent tits spread out on the bed. He just loved the way they flattened out when she was laying down, especially how they didn't flatten nearly as much as he would've expected. They were just so unbelievably full!\n\nHe pulled himself up, and sat astride the huge tit sideways. Another moment that made him realise the strangeness of the whole situation. These tits were big enough for him to sit on, a leg on each side; one by her head, one by her legs. His balls rested on her areola, his cock rubbing against the nipple.\n\n\"I'm not too heavy for you, am I?\" He asked her.\n\n\"Noooo!\" She squealed. \"I love it! It makes me feel so big!\"\n\nHe moved back and forth, causing the flesh beneath him to slosh around like a waterbed. He rubbed his cock against her hard nipple, knowing that he could probably make himself come this way. He wanted to see his cum splatter all over those enormous tits. On the other hand, her pussy had felt so incredibly good; he wanted more of that.\n\nJessica had wriggled her arm under her boob to bring her hand to her pussy, and was fingering herself, playing with her clit as he rode her tit. Her face was flushed, and her brow was dripping sweat. Realising what was going on, he brought his hands into the mix. He squeezed and caressed her big nipple, while rubbing his cock over her areola and the rest of her tit.",
        "It seemed to build a bit slower this time, and he could see it coming. Her body began to buck, and it felt like she was trying to throw him off as she was coming again. Her loud, sexy moans were music to his ears, and the orgasm seemed to last a long time.\n\n\"That's a new one,\" she panted. \"Simultaneous genital and nipple orgasms!\"\n\n\"That looked intense,\" he said.\n\nShe nodded. \"Oh yes,\" she said. \"God, my pussy's so wet. I want you inside me again!\"\n\nReluctantly, Erik climbed off her tit, deliberately dragging his cock over her soft skin. He left a trail of precum as he went; he wouldn't be able to last much longer.\n\nShe moved to the middle of her huge bed, and turned over on her stomach. She was actually resting on her enormous tits, the huge pair forming pillows beneath her, bulging out from under her. Her ass stuck into the air invitingly, her legs spread apart, opening the folds of her pussy.\n\nShe looked over her shoulder, giving him a smouldering look. \"Take me, Erik,\" she begged him. \"Use me to make you come.\"\n\nHe sat on his knees behind her, admiring her delicious ass. He rubbed his hands over it, and gave it a quick spank, eliciting a moan. \"Mmm, you like that?\" He asked her.\n\n\"Yes!\" She moaned. \"Do it! Make me yours!\"\n\nThat was an invitation he couldn't refuse. His dick was almost painfully hard as he entered her again, the folds of her pussy swallowing his cock.\n\nHe began to move, slowly at first, but soon picking up the pace. He slammed into her, faster and faster, holding on to her hips. Her ass slapped against his stomach with every stroke, and he saw her rock back-and-forth on top of her magnificent chest.\n\nHe'd always liked doggy-style, but his one regret had always been that he couldn't see the girl's tits while doing it. Occasionally, he'd lean forward and fondle them from behind while fucking, but that was not a position he could stay in very long. With Jessica, her enormous tits were not only plainly visible, holding her up as she took his pounding, they were in easy reach.\n\nShe moaned loudly with every stroke, her incredibly wet pussy delivering so much pleasure to his cock. Her screams intensified as he picked up the pace. His hands clutched her ass; it was almost as if he was using her pussy to jerk himself off.\n\n\"Yes!\" She shouted. \"Your cock feels so good inside me!\"\n\nHe watched as she rocked back-and-forth on her gigantic tits. Her arms were holding them, squeezing her tits to increase her own pleasure. Her sensual moans brought a fire to his mind, and he knew he was getting close.\n\nHe leaned forward, and lay down on her back. Spreading his arms, he hugged her massive tits from behind, grabbing as much of them as he could. His arms sank into the soft skin, that incredible feeling that he loved so much. He continued moving his hips, thrusting into her, as he rubbed his hands over her smooth, sweaty skin. Her scent was overwhelming as he lay there, and her pussy squeezed his cock in such a delightful way. He couldn't hold on anymore.\n\nHe exploded. Stars appeared in front of his eyes as pleasure coursed through his whole body. He pumped stream after stream into her hot pussy, ejaculating like never before while kneading her humongous tits with his arms. He grunted and groaned as Jessica's sexy voice encouraged him, begged him for more of his cum!\n\nHe collapsed on top of her, his softening dick still inside her. \"Damn,\" he panted, idly stroking her huge tits with his hands. \"I thought that was going to be the end of me.\"\n\n\"That felt like so much cum...\" she sighed happily.\n\nHis dick slipped out of her, and he lay next to her, on top of her tit. He looked at Jessica, at the beautiful, amazing girl that had just given him so much pleasure, and he knew this was only the beginning.\n\n***\n\nErik awoke sometime during the night, feeling a strange weight on his chest. It was already starting to get light out, and he opened his eyes. The weight, he found out, was one of Jessica's enormous tits. At some point during the night she must've rolled over, pinning him under the giant boob. The other one lay on top of it, doubling the weight. He was amazed he hadn't woken up when it happened; then again, after the events of last night, it was no surprise he was thoroughly knocked out. He still felt tired, so they couldn't have been asleep for that long yet.\n\nAfter the first round, they'd laid in her bed talking for a long time, until Jessica was miraculously able to rouse his dick once again. He hadn't thought it was possible, but she was just so incredible, so gorgeous, and so sexy, his body couldn't help but respond. They'd had sex until he thought he had no more left to give, and then she managed to get some more.\n\nIt was past three in the morning by the time they fell asleep, him cradling Jessica in his arms from behind. And the dreams he'd had... dreams of Jessica's colossal bust, growing even bigger. He knew it would be years, but he could be patient. And truthfully, he liked the idea that her chest would develop along with their relationship. It seemed appropriate somehow.\n\nHe looked over at his... girlfriend? Surely he could call her that now. She looked so peaceful, still fast asleep, so innocent. But he knew what that amazing body was capable of now, and innocence had nothing to do with it. He longed to repeat some of the night's experiences, and to find new ways of enjoying her insane bust, which was currently crushing him in a delightful way. After he got some more sleep, though; he still felt thoroughly drained from last night, in more ways than one.\n\nIf he could go back in time one week and tell himself what was going to happen, he'd have himself committed. This was beyond unbelievable. He'd never really believed in the concept of a soulmate, but Jessica and him were just so compatible it was almost unnerving. Their personalities, their sense of humour, and, as he'd found out, their sexual desires were very similar. It was almost as if they were made for each other.\n\nAnd she was gorgeous! So beautiful in every single way, even if you didn't count the insane bust. He still didn't understand how such a goddess could want him, but she very clearly did. He'd never had a girl that was so into him. He'd only known her for less than a week, and already he knew he could never live without her anymore.\n\nExtracting an arm from underneath her, he stroked the surface of the huge tit that was on top of him. They truly were amazing, he thought. He'd never seen anything sexier than that colossal pair, especially naked like this. The sheets were loosely draped over them, though it did little to hide her from him. And they felt divine, so velvety soft and warm. He wouldn't mind waking up like this every day from now on.\n\nHis dick was also underneath the enormous mass, and it was beginning to react to the erotic pressure. How was that even possible, after last night? She was just so amazingly hot, his body was powerless to resist her. She was going to be the death of him, if they kept this up.\n\nShe whimpered, and stirred a little. Careful not to wake her up, he pulled the covers up, covering himself and Jessica a little better. He kissed her forehead, and she snuggled against him in her sleep, a contented expression returning to her face. Her gentle breathing caused her breasts to move ever so slightly as they lay on top of him.\n\nHow could it not have been a dream? Erik still couldn't wrap his head around the events of the previous night. He looked at the face of this angel, and he felt so incredibly lucky to have found her. Her hot body and incredibly vast chest were definitely amazing, but it was her beautiful soul that had claimed his love. He knew he belonged to this stunning, kind and sexy girl, and he wouldn't have it any other way.\n\nStill caressing the huge boob on top of him, he drifted back to sleep. "
    ],
    "authorname": "Dilandau",
    "tags": [
        "boobs",
        "tits",
        "huge boobs",
        "huge tits",
        "breast expansion",
        "love",
        "romance"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/getting-to-know-her"
}