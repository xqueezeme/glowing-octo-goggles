{
    "title": "Necessity is the Mother of Obsession Ch. 01",
    "pages": [
        "Author's note: This is my first attempt in the Erotic Couplings genre. My other attempts all seem to have devolved into Romance. I suppose this could be, too. This is Part 1 of a 5-part story arc. Like most of my stories, it starts with character background. It also contains small elements of B&amp;D. Please vote/comment. Consider it like applause. It's how I know whether I'm pleasing my audience. Enjoy... \n\n* * * * * \n\nFriday Afternoon \n\n\"You have got to be fucking kidding me!\" \n\nJohn was not a happy camper. As a Regional VP, he was not used to being told what he could and could not do. \n\n\"Since when do they need a Regional VP to fly out there to have a face-to-face?\" \n\nHe listened, fuming, as the situation was explained to him over the phone. \n\n\"Fine. Set it up for Tuesday. I'll get a flight out Sunday or Monday. Have Joan briefed and ready to assist.\" \n\n\"What do you mean, she's on maternity leave?\" \n\n\"I know it happens! Fuck... Okay, I'll deal with it. I'll call you Monday morning.\" \n\n\"Goodbye.\" he slammed down the phone and yelled \"Karen!\" \n\nAn attractive young woman in a conservative blazer and skirt immediately stepped into his office. \n\n\"I need a flight to Vegas Sunday,\" he told her. \n\n\"All set, sir,\" she told him, stepping forward and handing him an envelope. \"Sunday afternoon out of Orange County, suite at the MGM Grand Signature - I'm sorry, I could only get a 2-bedroom suite - and a standard rental from Hertz, sir.\" \n\nJohn looked at her for a long moment. \n\n\"How do you do that?\" he asked. \"I didn't even tell you what I needed.\" \n\n\"I'm your Personal Assistant, sir,\" she told him. \"It was my job to screen the call and only pass it through to you if it was critical.\" \n\nJohn nodded. That made sense. \"Do you know about Joan, too?\" he asked. \n\n\"No, sir?\" she answered. \"Is there a problem?\" \n\n\"She's on maternity leave.\" \n\n\"Oh. I'm sorry to hear that, sir. That will make things difficult.\" \n\n\"Yeah, it will. Thanks, Karen, you can go. Close the door, please.\" He returned to his desk and sat down as she left, closing the door behind her. \n\nNow where the hell am I going to find someone with all the dirt on the Morton merger? he thought as he put his head in his hands. God, the timing sucks... \n\n* * * * * \n\nIf Ms. Bertram isn't available, Karen thought at her desk, Mr. Thompson is going to need all the background he can get. Let's see what I can do...  \n\nShe set about doing exactly that. She didn't have much time, given that it was Friday afternoon, but by 4 o'clock she had a thumb drive with everything she could dig up in her hand as she knocked on her boss' door. \n\n\"Come!\" he called out, and she entered. \n\n\"Sir,\" she told him, \"I've put everything I could dig up on the Morton merger on this thumb drive for you. I hope it helps.\" \n\nHe looked at her for another long moment, amazed at her efficiency... and had an epiphany. \n\n\"Karen, would you be free to go with me to Vegas next week? With Joan out of the picture, I'm going to need a competent assistant, and you seem pretty on-the-ball about this stuff.\" \n\nWould I be free for a trip to Vegas? she mused, surprised at the offer. Let's see... currently dumped by boyfriend number 5, massively depressed, more time on my hands than I know what to do with... sure! Why not? \n\n\"I'm available, sir,\" she told him. \n\n\"Good. Then rebook the flight to get two seats together. We're going to have a lot to talk about. You can use the second bedroom in the suite and we'll share the car.\" \n\n\"Um, sir...\" She sounded hesitant. \"You usually fly First Class.\" \n\n\"Right,\" he agreed. \"Get two seats together.\" \n\n\"Yes, sir,\" she nodded then waited for his nod, indicating she was dismissed. She went back to her desk to start changing the flights. \n\nFirst Class to Vegas... Wow, she mused. That's a first... \n\n* * * * * \n\nSunday Midday \n\nThey next met at the gate for their flight. John was surprised to see Karen in a flowery sundress, so unlike her normal business attire. He had to admit, she wore it well. It accentuated curves he hadn't realized she'd had, and which he actually found exciting. But he reminded himself this was business. \n\n\"I'm sorry, sir,\" she told him as he approached her. \"This is the best I could do on short notice. We have a plane change in Phoenix, as I'm sure you've noticed.\" She was trying to concentrate on the details. Otherwise, her nethers were going to take over. \n\nJohn was dressed casually, something she'd rarely seen. Only on corporate golf-outing days. Now he was in a Ralph Lauren shirt and slacks combo, black loafers and vintage Serengeti sunglasses, and they all made him look hot. Distractingly hot. \n\n\"We're good, Karen, thanks,\" he told her as he set down his backpack. \"We won't get as much time to talk about Tuesday in-flight, but maybe we can make it up, if you'll let me take you to dinner this evening.\" \n\n\"Whatever you wish, sir,\" she'd answered. \"I did some more digging this weekend,\" she went on. \"I've got background bio information for you on all the major players. Particularly Robert Mills and his son, William. They are the ones who seem to be the biggest obstacles.\" \n\n\"You spent your day off digging up dirt on the Mills family?\" he asked, surprised and a bit curious. \n\n\"Yes, sir,\" she told him. \"I wanted to maximize your chances for success.\" \n\nLike I had anything else to do, she thought to herself. Mope around the apartment, get drunk and jill off... or do something useful for Mr. Thompson and hope to be invited on more trips. Well, duh... \n\nSmart, attractive, no ring... hmmm. Why haven't I noticed her before? John thought as he looked at her. I wonder which way her tastes run... oh, well, this trip is about steamrollering the Mills and pushing the merger through. Looks like Karen is going to be a major asset. \n\nTheir flight was called and with First Class boarding, Karen had no problem finding overhead space for her roll-aboard. John pulled out his tablet and stuffed his backpack in the overhead as well. Then it was settle in, enjoy the free drinks and wait for takeoff. \n\nJohn was handling last minute emails and texts on his Droid, while Karen was doing the same. There wasn't much conversation until they were airborne. \n\n\"Do you have much baggage?\" John asked conversationally as he slipped his shoes off and stretched back. \n\n\"One checked bag, sir,\" Karen told him, eyeing his trim, well-kept body as he unwound like some great hunting cat, and trying to stay detached. \n\n\"Okay, same for me,\" he told her. \"We'll get our bags and the car and head straight to the hotel. But once we're settled, I want to go out shopping. If I remember right, there's a kitchenette and I hate room service and overpriced restaurants. So, since you were nice enough to score a kitchen, I'd like to stock up for the week. You're welcome to join me, of course. Oh... and unless we're with clients or coworkers, don't call me 'sir.' Call me John. 'Sir' is my father.\" \n\n\"Yes, sir,\" she replied automatically, then caught herself. \"I mean, yes, John. And thank you. If you'd like, I can cook.\" \n\n\"Maybe we'll share,\" he smiled and it went straight to her groin. \"Ms. O'Reilly...\" \n\nGirl, get a grip! she chided herself. He's your boss. You never put all your eggs in one basket. Besides, he's just being friendly. Just keep earning it by covering his ass. \n\n\"But tonight, dinner's on me,\" he added. \"Somewhere nice. Of course, on The Strip it's hard to find a place that isn't nice. Or expensive. But I think you're proving yourself worth it.\" \n\nJohn, you know better, his conscience decided to chip in. You screwed up big with the divorce, every girl after that has been a disaster until Sharon, and you barely escaped that one without another huge settlement. You really need to keep it zipped. \n\nI know, I know, he'd answered himself. If I needed a hook-up, Vegas has the pros. Pardon me if I'm suddenly realizing that the Personal Assistant I've been using for the last six months is a hottie. \n\nAbusing is more like it, his conscience retorted. You take her for granted, she saves your ass every day, and you know nothing about her. You took her because H-R pushed her at you, after you scared away the one before her. Just because you've been screwed over multiple times doesn't mean all women are avaricious bitches. \n\nYeah, yeah, yeah... he tried to placate himself. It's just dinner. I'll be a gentleman. \n\nFive and a half hours and one plane change later, John and Karen were picking up their bags and heading for their rental car. \n\n* * * * * \n\nSunday Evening \n\n\"Ladies first,\" John smiled as he opened the door to the suite and stood aside. \"You pick the bedroom you want, I'll take the other. It doesn't matter to me.\" Karen walked in, hauling her two bags with. \n\nWow... was her initial response. This is fancier than any hotel I've ever been in... She looked around and decided that the bed and bath immediately to her left as she entered would be just fine. She turned that way, dragging her bags. \n\n\"Okay,\" John told her retreating back, \"then mine is on the other side of the living room area. See you in a few.\" He, his backpack and his one big roll-aboard headed that direction. A few minutes later, he returned, knocking softly on the door jamb to Karen's chosen room. \n\n\"Yes?\" she asked, looking up from hanging the last of her clothes in the closet. \n\n\"Who knew?\" John smiled as he entered. \n\n\"Who knew what, sir?\" she asked, then mentally kicked herself. \"I mean, who knew what, John?\" \n\n\"Who knew that you had such a nice wardrobe?\" he answered. \"Very sexy. Much nicer than the suits you wear at the office.\" \n\n\"Oh, I brought a couple of suits,\" she hurried to defend herself. \"For the meetings. I just figured, well, this is Vegas... maybe something a little nicer was in order?\" She was suddenly very self-conscious. \n\n\"I agree,\" John told her, moving to sit on the edge of the bed. \"And now that I've seen it, I think we'll have to see if we can give it some exercise while we're out here. Starting with, I think I'd like to take you to dinner in, oh, say... that green dress.\" \n\nKaren fought the blush. He'd picked the one outrageously sexy dress she owned. She wasn't even sure why she'd brought it along. It was just, well, this was Vegas... \n\n\"For dinner, sir?\" She didn't even bother correcting herself. \n\n\"Well, yes... and maybe a little dancing afterwards, if you'd enjoy that,\" he told her. \"I really don't know you that well. You've been working for me for what? Six months? And doing a great job. I really haven't gotten to know you. Maybe I should. Starting with this trip, where we're away from any nasty office gossip.\" \n\nOh, my God... am I being hustled? she thought. He's suddenly being nice to me because we're sharing a room away from the office and he likes my dress? eep! \n\nTo his face, though, she said, \"If that is what you would like... I'm really out of practice as a dance partner, but, well...\" \n\n\"This is Vegas!\" he smiled. \"Let's do a quick shopping and then come back and get changed. Whenever you're ready...\" and without waiting for her reply, he walked out of her room. \n\nIf he doesn't stop smiling at me, I'm going to soak through every pair of underwear I have, she thought. I'd better check on the Guest Laundry. \n\nShe finished putting her things away, did a quick tour of the living room and kitchen to get familiar with them, and went to meet him at the entryway. As smooth as if they'd rehearsed it a thousand times, they retrieved their car and went grocery hunting. John surprised Karen by driving to a local Wal-Mart. He surprised her even more with his selection of foods. He was shopping more like a suburban Dad than a High-Powered Executive. He even consulted her about what things she might like and actually listened. \n\nApparently, John had also inventoried the kitchen, because he decided there were some cooking utensils he wanted. \"I'll just donate them when we leave,\" he explained. \n\nLoaded up with food, beverages and sundries, they went back to the hotel and sorted it all away. \n\n\"Each bedroom has its own bath, so I'm going to grab a shower and get ready,\" he told her as they finished. \"I'm going to set up my office in my bedroom, so come and get me when you're ready.\" \n\nShe acknowledged his instructions with a nod and a smile and went to get cleaned up and dressed. And ran into her first crisis. \n\nHow sexy do I want to be? she thought, looking at her naked body in the full length mirror. I'm not shabby by any means. And if he wants me in the green dress, I guess I forego the bra. That beauty has major plunge and no back. But that's okay, my tits are firm enough... and small enough not to fall out. \n\nThong? Probably. But panties that could handle getting wet would be better. I'm so damned attracted to him, I'm going to be soaking. No, skip the thong. Go French cut. Risk not using a pad. Maybe a tampon if it gets too bad. And maybe pantyhose. Or not. Right now, it's kind of too bad I'm a stockings and garters kind of girl. The hotel gift shop should have pantyhose. Open-toed 5\" CFM's... no, he said dancing. Something a little more sensible, to be on all night. Maybe 3\" open-toed with a strap... \n\nSuch was her anxiety as she painstakingly selected her evening's wear. She went so far as to call the concierge and ask how one went about getting a pair of pantyhose. He asked what size and what color, and four minutes later, they were delivered, compliments of the hotel. \n\nThat confused John a bit when he answered the door and received them, but soon she was ready. The emerald green dress to go with her eyes and natural light auburn hair; no bra because the dress plunged to her waist and had an open back; French cut panties and nude pantyhose; 3\" white stilettos; and faux diamond stud earrings with a simple necklace to match. Actually, the cubic zirconia looked even better than real diamonds, because they sparkled more. One last primp in the mirror, a check of her makeup and \"flirtatious\" smile, and she went out to meet John. \n\nShe was greeted by a low whistle. It must have been instinctive because he quickly caught himself and stopped, offering an apology. \n\n\"Sorry about the crude... you look great,\" he told her as he stood up from the couch. \"Fantastic.\" \n\nYeah, speaking of fantastic, she thought as she looked at him. This is your boss. This is your boss. This is your very hot looking, melt-your-heart boss. He hadn't changed his outfit much... a simple shirt and slacks that fit him like a male fashion model, the loafers and a light linen jacket. The three open buttons on the shirt were a tease, but he was supposed to look good. He was supposed to be an Alpha Male. \n\n\"Shall we go?\" he asked, offering his arm. \n\n\"Um... where are we going?\" she asked, picking up her purse and taking his arm. She knew enough to at least do that. \n\n\"Well, dinner is simple,\" he explained as they walked to the elevator. \"I thought Tom Colicchio's would be a good place to start.\" To her blank stare, he added, \"your basic steakhouse.\" \n\nThis is not 'basic' anything, she thought at dinner. This is overwhelming. \n\nMaine Lobster Bisque, a 10 oz. Filet Mignon, Asparagus and Wild Mushrooms. That is what she had finally settled on, wondering how the hell she was going to pay for it before she remembered it was on Mr. Thompson's tab. Then she decided to stop feeling guilty. She did ask for a to-go bag for the leftovers and had it sent to the room. She didn't want to fill up too much if they were going dancing. \n\nShe had surprised him when she stuck to lemonade during dinner. When he'd asked if she was a teetotaler, she'd told him no, that she occasionally imbibed, but she needed to keep it well within moderation, because if she got going... well, there'd been some embarrassing incidents back in college and such. He just smiled and nodded his understanding. \n\nWhen it was time to leave, he took care of the bill and when she asked where they were going, he suggested a little Voodoo. He couldn't resist teasing her. \n\n\"The VooDoo Rooftop Nightclub and Lounge,\" he explained. \"A little less crowded and a lot more comfortable than a lot of the high-end dance clubs on the strip. You'll love it.\" \n\nShe did love it. It was atop the Rio, just off the Strip, and had incredible views of the city and an open-air veranda where the cool desert breeze was great for a refreshing break between dances. The DJ did a lot of retro music, right up her alley, and she was told it wasn't nearly as crowded as other clubs. \n\nThe drinks were rather potent, though, and even with dancing them off, she was a bit looped by the time she and John decided to call it quits and head back to the hotel. She was kind of glad that the concept of a slow song was foreign to the DJ. She was getting more and more turned on by her boss and he didn't seem to be doing anything to discourage it. She was a little afraid of what might happen if he actually held her in his arms. \n\nFor his part, he was enjoying the hell out of her. She wasn't complicated, or conniving, or egotistical at all. She was just plain fun. And damned attractive. He was pretty sure she had no idea how good she looked. The shit was going to hit the fan on Tuesday, but until then he didn't see any reason she shouldn't enjoy herself. He liked watching her be happy. \n\nWhy didn't I notice her before? he wondered. Six months sitting outside my office, running errands and interference. I guess she was just really good at her job and at being invisible. Well, she's going to get noticed now. \n\nOn the walk back, she got a little chilly - he figured from working up a \"glow\" dancing - so he put his jacket over her shoulders... and she shivered a little more. But just for a moment. He had no way of knowing it was because of his touch. Because of the thrill that ran through her that her body refused to ignore. When they got to the hotel, instead of heading for the elevators, he turned her slightly and steered them to The Lounge, where he secured a table in a quiet corner and ordered a carafe of wine. \n\n\"You know, Karen, you've been doing an outstanding job for me for the last six months,\" he told her as the drinks arrived. \"And the reason I know it's outstanding is, I haven't had to yell at you once.\" \n\nThat's a strange criterion, she thought. Why would he have to yell at me? \n\n\"Your predecessor screwed things up for me on a regular basis,\" he went on. \"From travel plans, to meeting schedules, to correspondence... you name it. And I was constantly having to correct her. She could take a tense situation and turn it into a train wreck. But you... you just do your job quietly and efficiently, and I don't have to correct you at all.\" \n\nSo that's why he might have to yell at me, she thought. Note to self: don't give him a reason. \n\n\"You are, in a word, invisible,\" he smiled. \"Which is unfortunate, because it has deprived me of appreciating just how attractive you are. A valuable asset with grace and charm. I'm starting to consider myself a fairly lucky man.\" \n\nDon't lay on the compliments too much, or I'm going to start blushing, she thought as she sipped her drink. \n\n\"So are you enjoying yourself?\" he asked, and she realized she had to answer. \n\nShe felt a little fuzzy around the edges. She wasn't used to drinking like this, although it seemed to be the National Pastime of Las Vegas. She knew she was warm, and happy, and horny as all hell. Only her iron will was keeping her from making a pass at the man who held her professional career in his hands. ",
        "\"Yes, sir, I am,\" she told him. \"Um... John, I mean,\" she amended. He smiled. Her resolve melted a little more. \n\n\"Old habits die hard, don't they?\" he asked, not really expecting an answer. \"I guess I can overlook the occasional 'sir'. I won't rag you about it. But I'd prefer us to be less formal. For instance, I know virtually nothing about you. Your likes and dislikes, your taste in music, art, literature, men... or women... I try not to be judgmental when it comes to personal relationships. I'd love to know a lot more about you than 'my God, she's a hot, competent woman.' And I'd like you to know more about me.\" \n\nShe could feel her ears start to burn. \n\n\"But I don't want to put you on the spot, so I'll go first,\" he smiled, and there went more of her resolve. \n\n\"I'm turning 40 next month,\" he told her. \"I did my undergraduate work at Cambridge, got my MBA at Stanford and got my J.D. at Princeton. I got my position with Sethridge Associates through my grandfather via shameless nepotism but earned my way into a Regional Vice Presidency. I am single, was engaged twice, married once, and enjoy a wide variety of pastimes, from domestic things like cooking, needlepoint and quilting, to wood- and metal-working, to sports like baseball and windsurfing. I like to read, my taste in music and movies is rather eclectic, and not to put too fine a point on it, but I am also a great admirer of feminine beauty. Like yours.\" \n\n\"Oh... and I like sex.\" \n\nWow. That was brutally honest, she thought. Except for the calling me beautiful part. Unless he means it... The thought was enough to send a chill through her. Maybe he's just seducing me, she wondered. If so, he's doing a pretty damned good job of it. \n\n\"My life isn't nearly so exciting, Mr. Thompson,\" she started to explain. She paused to refill her glass. A bit of liquid fortitude was in order. He watched her, but didn't say anything. \n\n\"I grew up in middle-class Suburbia, went to middle-class suburban schools, graduated from a middle-class suburban high school and went to the local community college. We couldn't afford for me to go to the State University. I got a two-year Associates degree with a concentration in Art, transferable to the four-year program at State if and when I could afford it. I wanted to be a Graphic Artist. I took two years off and worked as a receptionist days and a waitress nights to scrape up the money. I had just finished my first year at State, my Junior year of college, when my Dad got really sick and I had to come home and help take care of him.\" \n\n\"I applied to a temp agency to help Mom shore up the finances and got hired into a receptionist position, which got parlayed into a secretarial position. I took business classes at night so I could work my way up to 'Executive Secretary'... which they're now calling an Executive or Personal Assistant. I got lucky and got Temp'd into a position with Mr. Gallagher in the Legal Department of Sethridge. When my Dad died, I applied for a permanent position but was told one wasn't available.\" \n\n\"Six months later, a position became available and I jumped at it. It happened to be you. I found you easy to work with as long as I stayed out of your way. You tend to be a bull in a china shop.\" \n\nShe paused and took another deep pull on her drink, then refilled her glass. The wine was getting low in the carafe, so John waved the waitress over and ordered another one. In the meantime, Karen took another deep drink. \n\nShe wasn't sure if being honest was such a hot idea, but her slightly looped and getting loopier mind figured he had, so she should. He didn't seemed pissed by her description of him. In fact, he seemed sort of amused. \n\n\"Anyway, I grew up loving all the arts, music and theatre included,\" she went on after a moment. \"So I guess I'm kind of eclectic, like you said. I'm not big into power tools, but I do like sculpting and like that. The only athletic things I do are bicycling, swimming and working out at the gym. Let's see...\" \n\nShe emptied her glass and filled it again. \n\n\"Oh, yeah... sex. An unmitigated disaster.\" She paused to look at his expression, but he simply looked curious. And didn't say anything. \n\n\"Steady boyfriend in high school, got cheated on Senior Year, graduated a virgin. But found out I like kissing. His version of petting wasn't all that great. Um... dated several guys in college, only two made it to the sex level, the first was clumsy, obnoxious and self-centered in bed. Stayed a virgin, found out I liked to give blowjobs. The second one was smooth as silk. He got my cherry. I fell for him pretty hard. Turned out I was a temporary plaything until his fianc\u00e9e got back from Europe. Dumped me the moment her plane landed. Found out I liked to fuck, though, if done right. Gentle, not Neanderthal.\" \n\nShe paused, drained her glass and poured another. John was beginning to watch her fairly closely. \n\n\"Okay, let's see... dated a bunch of losers until Boyfriend Number 4. Turned out he was just using me as his personal bank. Pretty much cleaned me out when he left. But he fucked pretty good.\" Her voice was starting to get slurry and her movements exaggerated. She seemed to be working herself up to something. And she sucked down another half a glass. \n\nJohn considered saying something, but she was on a roll and he didn't want to stop her. She'd inadvertently warned him about her drinking too much back at dinner. He was keeping that firmly in mind since he realized she was, for all practical purposes, under his care. She was cute when she was animated. He just didn't want her going off the deep end. \n\n\"Okay, so the latest and greatest, Boyfriend Number 5,\" she went on with an exaggerated flair and thinly veiled sarcasm. \"He did an amazing job of seducing me. I was raw from losing my father, my prior boyfriend and my money. He started by just being a shoulder to cry on. Then he bought me sex toys to relieve my frustration. Then he 'helped' me learn how to use them. And I was so horny and he felt so good that I was being expertly walked down the garden path.\" \n\nShe finished her glass and poured another. \n\n\"So what was his kink, after I'd fallen for him?\" she asked rhetorically. \"Bondage and Discipline and anal. He taught me to like it. Does that shock you Mr. Thompson?\" She was definitely looped at this point, slurring her words and having a hard time focusing. In her mind, though, she was being coquettish. Teasing him with the forbidden, the taboo. \n\n\"Not really,\" he smiled, but kept his tone serious. \"I find that if done well... that is, gently and with consideration for one's partner... they can be rather exhilarating. Not to mention giving mind-blowing orgasms.\" \n\nOh, my God, he's Lucifer on Earth, sent to drag us back down the Dark Side!, part of Karen's mind rebelled. And you're encouraging him! \n\nOh, no... he's fine... he sounds delicious. He knows what he's doing, the part that was rubbing her thighs together under the table chimed in. \n\nThe last time we went down that path, the petulant, rebelling side came back, Mom had to take us to the ER to get dried out. Acute alcohol poisoning, they called it. And one huge motherfucking hangover! \n\nBecause Greg abandoned us, the horny voice rejoined. And left us tied up. Mr. Thompson isn't like that. \n\n\"Are you, Mr. Thompson?\" She'd said the last aloud. \n\n\"Am I what, Karen?\" he asked, and she was startled to realize she'd said something out loud. \n\n\"Oh! Um... well, you're not... uh...\" Karen was definitely flustered. She tried hard to get focused through the alcoholic fog. Then took another drink. \n\n\"Well, yer not'n asshole, are you?\" she managed to ask. \"'Cuz Boyfrien' Num-ber 5, aka Ass-hole, got me completely depen'ent on him, then walk' out on me. Leavin' me tie' up, ac'shully... for m'mother to fin'.\" \n\n\"No, Karen, I am definitely not that kind of asshole,\" he told her, thinking at least I'd untie her first... \n\n\"And, the bar's closing in a few minutes, so let's call it a night and head back up to the room, okay?\" \n\nOf course it's okay, she thought. Anything he wants is okay. If he wants to fuck, it's okay... God, I'm horny... I wonder if he'd like to do my ass? \n\nIn the meantime, John signaled for the check, signed it to the room, stood and helped Karen up out of her chair. She insisted she had to finish her glass before she'd put it down on the table and let go, but he finally got her up and steered towards the elevators. Karen was thoroughly blitzed. \n\nIn the elevator, she leaned against him, her head on his shoulder while he carefully supported her and kept her from falling. When they got to their floor, he helped guide her to their room, opened the door for her and helped guide her in. The door to her bedroom and bath was immediately to their left, so he guided her there, as well. As he moved her towards the bed, she muttered, \"gotta pee...\" \n\nSo he changed direction and steered her to the bathroom, where he steadied her while she reached under her dress and tugged down her pantyhose and panties. When she could lift her dress to sit, he helped her down, then turned to leave. \n\n\"If you need anything, holler,\" he told her. \"I'll be within earshot.\" She nodded and he left. \n\nChrist, is she wiped, he thought as he went to the fridge and opened a Mountain Dew. She is going to have a world-class hangover tomorrow. Reminder to self: don't let her get that plastered again. Maybe I'd better get out my pain meds and find something stronger than aspirin for her, for the morning. I'm definitely letting her sleep in. \n\nGod, he's being a nice guy, she thought as she sat on the toilet, her body tired and limp but her mind racing. I bet he's a nice guy in bed, too. He looks so damned good! Nice shoulders, nice abs, nice ass, nice legs... I was watching when we were dancing. Nice bulge, too. I bet he's hung. That could feel so nice... I haven't had a cock between my legs for six months. Six fucking months! Because Greg was an asshole. \n\nJohn isn't an asshole. He said so. I bet he wouldn't just leave me hanging. Sexually or otherwise. Christ, I could use a good fucking! John said if I needed anything... I think I need him. I think I need his hot, throbbing cock buried in my soaking pussy. I think I need him up my ass, making me cum my brains out. \n\nFuck this! she decided, exerting her will over her body to wipe up, stand up and undress. She kicked off the shoes, unzipped the dress and let it pile up around her feet. She bent over and leaned against the sink to steady herself while she got the pantyhose and panties the rest of the way off. She used the counter to hold herself up as she looked at herself in the mirror. \n\nI don't look so bad, she decided. I hope he likes redheaded landing strips... \n\nShe turned and eased her way out to the foyer, steadying herself with the walls, until she got to the living room where John had taken off his jacket, kicked off his shoes, unbuttoned part of his shirt and was sitting on the couch, rolling his neck with his eyes closed and a soft drink in his hand. \n\n\"Hey, John?\" she asked softly and his eyes snapped open as he looked at her in surprise. \"Do I hafta yell if I wan' something?\" she asked in a deliberate, measured voice, fighting the effects of the alcohol. \"Or can I just beck... um, beh... uh, you know, wave at you and ask if you want to fuck?\" \n\nOh, God, please don't do this to me, he thought as he looked at her standing naked in the doorway. She looks so good, and she is so drunk... \n\nAnd I am so fucking horny, he added, taking in her beauty. I can't, I can't, I can't... \n\nHe got up from the sofa, walked over to her and took her in his arms... before she fell down. She wrapped her arms around him and hugged him close, turned her face up to him and closed her eyes for the kiss... and passed out. \n\nThank you, Lord, he thought as he caught her weight and lifted her up, getting an arm under her butt and one behind her back so he could carry her back to her bed. He held her against him with one hand while he pulled down the sheets with the other, then eased her into the bed, deciding to take off her jewelry and put it on the nightstand before covering her and making sure she looked comfortable. \n\nThen he went to the kitchen, filled a tumbler with ice and water and put in on the nightstand with her jewelry. One more trip to his bathroom to retrieve an Ascomp #3 and a couple of Aleve, which he put by the water, and he leaned down, gently kissing her forehead. \n\n\"Goodnight, Karen,\" he breathed. \"You're fun. I hope I get to know you under better circumstances.\" \n\nHe picked up her clothes and folded them on the chair, made sure the bathroom nightlight was on, turned off the other lights on his way out and closed her door. He killed the lights in the living room and kitchen, too, and headed in to bed. \n\nNot quite what I expected, he mused as he hit the head, then stripped off and climbed in bed. I think I actually like her. Certainly not like the stuck-up prissy bitches that threw themselves at me before. I think she could use someone being nice to her. God knows, I'm out of practice. But I can try. \n\nWith that, and pleasant memories of Karen's luscious naked body standing in the doorway, he fell asleep. \n\n* * * * * \n\nMonday Morning \n\nOwww!... God! I hurt! Karen came slowly awake in the darkness. Where the fuck am I? \n\nThe memories of the previous day began coming back. \n\nI'm in Vegas. With Mr. Thompson. He took me out to dinner and dancing last night. I drank too much... \n\nOh, fuck! I hurt! Her head was pounding. What the fuck time is it? \n\nShe saw the clock on the nightstand, and the water and pills next to it. \n\nNine o'clock in the morning??? You've got to be shitting me! She threw off the covers, went to sit up and immediately discovered two things. One, she was stark naked. Two, she was going to throw up. \n\nShe ran to the bathroom and made it, worshipping the porcelain god for several minutes before her stomach calmed down. Then she pulled herself up to the counter, wiped off her face and rinsed out her mouth, and rather unsteadily made her way back to her bed, sitting on the edge near the pills. \n\nWhat the fuck did I do last night? she anguished. I'm naked. I never sleep naked. Well, not anymore anyway. The bed isn't messed up. Did we screw in his bed? Did he rape me on the couch? And then leave pain meds behind? What kind of monster is this man? \n\nShe tried to replay the events of last night, even as she was gulping down the pills, but she couldn't remember anything after the Lounge. And even a lot of that was fuzzy. She knew they'd talked. They'd talked about some of their backgrounds. \n\nShe remembered him telling her about being an Ivy League brat, the scion of a family with connections to get him into Sethridge and Associates. She remembered he was into \"manly\" things like woodworking and windsurfing. She remembered he had the most amazing crystal blue eyes that smiled a lot. She remembered he made her very, very wet. But she couldn't remember leaving the bar or getting to the room. \n\nDid he put something in my drink? she wondered. I don't remember going to the Ladies' room... when could he have done it? And what did we do? I would think if he'd fucked me, I'd be sore. The only thing that hurts is my head. Well, and my guts, too. And what the hell is that smell? \n\nShe had just realized there was a strange smell in the air, which she finally realized smelled like breakfast. And God's gift to Humankind, the Elixir of Life, the Resume Human Form potion, the Ambrosia of the Gods... Coffee! \n\nShe looked around for her clothes and found them neatly draped over the back of the chair. \n\nA tidy rapist. Just great... she thought. Then she saw the plush hotel robe hanging in the bath and decided that was good enough. She pulled it on and went in search of coffee... and a new asshole to ream. She found him standing in the kitchen, spooning eggs onto a plate which already had bacon and buttered toast on it. And dressed in bed pants and bare to the waist. \n\nOh. My. God. Do not get distracted, girl! \n\n\"Good morning,\" he greeted her with a smile as he put the plate down at one of the places at the counter, where he already had orange juice, V-8, fresh fruit and coffee. \"I thought I heard you moving around. All yours...\" \n\nShe stepped cautiously into the room. \"What did you do to me last night?\" she demanded, keeping her distance from the man with the disarming smile. The wolf's smile, she decided. \n\n\"Me?\" he asked, a little confused. \"I took you to dinner, and then out dancing, and then a nightcap at the lounge downstairs - a very large nightcap - and then I put you to bed.\" \n\n\"No, I mean the sex,\" she spat back. \"Don't be cute. What did you do to me?\" \n\n\"What sex?\" Now he really looked confused. \n\n\"Don't fuck with me!\" she threatened. \"I woke up naked and hung-over! I never sleep naked! Or... not anymore, anyway. So what the fuck did you do? What did you put in my drink and what did you do to my body?\" \n\n\"I didn't put anything in your drink and I didn't do anything to your body except lift you up when you passed out on me and put you in your bed. Oh, and take off your jewelry and put it beside the bed with water and pain meds for when you woke up,\" he told her levelly. The humor was gone from his eyes and she somehow knew he was dead serious. \n\n\"When I passed out?\" she asked, now very unsure of herself. \n\n\"Yes, when you passed out,\" he iterated. \"We stopped downstairs for a nightcap and I shared some of my background with you, and then you shared some with me. Except it apparently wasn't pleasant for you and you kept drinking, pretty heavily. We closed the place around midnight and I helped you to the elevator and then to your room. You needed the toilet, so I got you there and then left.\" \n\n\"Awhile later you came out, naked except for your jewelry - and pardon my saying so, but you really are beautiful - and you came on to me. You could hardly stand. You were leaning against the door jam. I came over to hold you up and get you to bed, and you went to kiss me and passed out, in my arms. I put you in bed, removed your jewelry, got the water and pills, folded up your clothes that had been dumped on the bathroom floor, turned out the lights and left.\" \n\n\"I went to my room where I spent a fitful night thinking about your beautiful naked body and deciding that you would probably appreciate breakfast when you woke up. And by the way, you're welcome.\" \n\nKaren turned beet red. She turned and began to walk slowly back to her bedroom. \n\n\"Hey, where are you going?\" he asked after her. \"Your breakfast is ready.\" \n\n\"Like I could face you after that,\" she mumbled as she kept moving. \n\n\"Hey, really!\" he called again, starting to move towards her. \"Seriously, breakfast is up and you probably need it. And yes, you can face me after that. I told you, I try to be non-judgmental.\" She kept walking. \n\n\"Karen!\" He finally caught up to her and put his hands on her shoulders, stopping her. He forced her to turn around, but she wouldn't look up at him. \"I need you on this trip, Karen. We can't have any bullshit between us. If I have to, I'll invoke the 'what happens in Vegas, stays in Vegas' rule. You're very attractive to me, Karen, and I'm flattered that you came on to me, but you were three sheets to the wind and there was no way I was going to be Asshole Number 6.\" ",
        "She cringed. \n\n\"Karen, look at me. Please.\" She did, slowly, and he could see that she was crying. \n\n\"I am so sorry, Mr. Thompson,\" she sniffed. \"I really screwed things up... I am so sorry...\" \n\nHe wiped the tears away from her eyes with his thumbs, but she kept trying to look away, to avoid his gaze. \n\nWell, this is either going to fix it, or fuck it up royal, he thought. He took her face in his hands and turned her to him, leaned down and softly kissed her. \n\nShe went rigid. \n\nThat's not good, he thought. And then she started to respond as he kept it up - a soft, no tongue kiss that he tried to put as much affection into as he could. He began to realize how much he really did need her, and it went far beyond the meetings. \n\nShe went rapidly from ice to fire. She raised her hands behind his head and pulled him to her, her tongue now taking the initiative and probing his lips until he let her in. \n\nThey probed and licked and nipped and kissed deeply while their nethers responded. The passion was becoming overwhelming when John managed to get control and ease up on the kiss, pulling back so he could look into her emerald green eyes. She was hungry... panting... feral in the way she looked back at him. \n\n\"Are you ready for breakfast, yet?\" he asked. It was just enough of a derailment that it broke her fixated look and she blinked, realizing what she was doing. \n\n\"Oh, God!...\" she moaned and tried to pull away. \"I'm sorry!...\" \n\n\"I'm not,\" he told her and held her so she couldn't leave. \"You are as delicious as I had hoped. But I think before we both jump over the cliff, you should come have some breakfast? And coffee-e-e?\" he teased, drawing it out. \"And maybe we should talk?\" \n\nShe slumped in his arms. \"Yes, sir,\" she told him softly. \n\n\"You say that again when you aren't in leather and D-rings, and I'm going to get ticked,\" he told her, turning her and pointing her in the direction of the kitchen bar stools. \n\n\"What?... What did you say?\" she blinked as he gave her a push and a pat on her butt to move her along. \n\n\"Later,\" he told her, following her. He sat her at the bar stool where he'd put her breakfast, then piled up a plate for himself and sat down next to her. \"First breakfast, then... no, wait. First coffee, then breakfast, then more pain or nausea meds if you still need them, and then we talk.\" \n\nKaren nodded and poked at her food. What the fuck is going on? she wondered. I am so in over my head. Just sitting next to him is turning me on. This is way, way not good... \n\n\"I said, coffee first,\" John broke into her thoughts. He was holding a fresh cup of hot coffee. \"I don't remember what you put in it.\" \n\n\"Light and sweet,\" she mumbled, taking the cup while he dug out sugar and cream. \n\n\"Just like you,\" he smiled. Karen started to blush again. \n\n\"Ah, ah, ah...\" he wagged his finger at her. \"No blushing. It's a compliment and you should learn to take compliments. But if my compliments bother you, then I'll cut back on them. I'm sorry, but I won't be able to eliminate them completely.\" \n\n\"That's alright,\" she muttered into her coffee. \n\n\"Good,\" he decided. \"Now once you've cleared your plate, tell me... how do I stack up against Asshole Number 5?\" \n\nKaren almost choked. \"Excuse me?\" she managed to get out. \n\n\"Asshole Number 5,\" he repeated. \"The one that won your heart by being nice to you, then walking you down the path to the B&amp;D and Anal Dark Side.\" \n\n\"How do you know about him?\" she asked, stunned. \n\n\"You told me. In the Lounge. When we were discussing backgrounds. He was pretty much the last thing we were discussing before the bar closed and we had to leave.\" John was watching her face closely. She seemed clueless. \n\n\"I don't remember,\" she whispered. \n\n\"Well, I do,\" John pointed out, \"and I'd rather not be that kind of asshole. Especially not one who leaves the woman he allegedly loves tied up when he walks out, without knowing if anyone would find her. That's just not my style.\" \n\n\"What is your style, Mr. Thompson?\" she asked in the same quiet whisper. \n\n\"Just about anything my partner wants, within reason,\" he smiled. \"But the key is, it has to be something she wants. If I want it, too, that's gravy. And the 'within reason' is, basically, no permanent damage, no scat, no traumatic mind-fucks... oh, and no children, either. Outside that, I'm open to at least listening.\" \n\n\"That leaves a lot of territory, Mr. Thompson,\" Karen commented, a little louder this time. \n\n\"Mm-hmm,\" he agreed. \"And it's John, Karen,\" he reminded her. \"By the way, as tempting as you were, last night would not have been consensual. You were way too wasted to give informed consent. Plus there's all the issues about a boss and his secretary - you know, all the usual harassment stuff. And to be honest, I haven't had that much to do with women over the last, oh... nine months? A year? I've lost track. Most of the bitches are too much of a hassle with too much drama, too much greed and the belief that once they're fucking you, they own you.\" \n\nKaren kept her mouth shut and slugged down her coffee and juices, then held out her coffee cup. \n\n\"More?\" she asked and suddenly realized it was like a little-girl pleading with Daddy. \"I mean, more, please, John,\" she iterated in a much more assertive tone. John smiled, went and got the coffeepot and filled her cup. \n\n\"So, are you not interested in women anymore?\" she asked, trying to keep the question casual. It sort of worked. He laughed. \n\n\"Oh, I'm interested,\" he told her. \"When it's the right woman. I'm just not willing to chase tail just because it's sexy, especially if it's attached to a manipulative bitch. And that includes one night stands. Too many problems. I'd rather stick with my own hand.\" \n\nKaren attacked her toast and eggs so she didn't have to look at him while her mind raced. \n\n\"So, what is the problem with boss-secretary relationships?\" she finally got up the nerve to ask. Again, he chuckled, as if he could read her mind. \n\n\"You know from the office, Karen, that it's pretty much a Dom/Sub kind of relationship. He's the boss, usually an Alpha personality, she's the servant. The sub. It's her job to do whatever she's told to do with only his best interests in mind.\" He looked at her carefully. \"Most of the women I've known hate being in the sub position and only do it because of the job. They tend to park it at the front doors on the way out.\" \n\n\"If the guy expects her to be a Sub to his Dom outside the office, there's usually trouble. And they tend to break up. If they can walk away from the table, that's fine, they have a chance. But most Alpha-type guys I know can't switch it off very easily. So the moths they get to their flame aren't the ones they're really looking for.\" \n\n\"What if the woman likes being a Sub?\" Karen asked, trying hard to keep her voice neutral. \n\n\"Twenty-four-seven? She'd be boring,\" he answered. \"Not the kind of woman the Alpha's looking for. He wants someone strong and independent, that he can bend to his will.\" \n\n\"So how can it work?\" Karen felt like she was walking way out on the limb on this one. \n\n\"If it's purely a role-play at the office,\" he told her. \"She puts on her Sub dress when she hits her desk, he does the same with his Dom suit. It takes a special kind of Alpha to walk away from the table. Sometimes, but not often, they'll switch roles outside the office.\" \n\n\"Anyway, for short-term flings a boss-secretary hookup can be fun. I wouldn't count on continuing to be the boss or the secretary for each other if it gets serious. Somebody's going to end up working for somebody else and it usually isn't the boss.\" \n\n\"So, presuming you aren't Asshole Number 5 reinvented,\" Karen ventured, wondering where she was getting the chutzpa, \"anything between you and me would have to be a short-term fling if I wanted to keep working for you.\" \n\nJohn got up and poured himself another cup of coffee. Anything between you and me... he rolled it over in his mind. He had presumed she was only coming on to him last night because she was drunk and horny. Honestly, he'd been feeling the same, minus the drunk. Could they be balling buddies and still have a solid working relationship? He didn't know. He did know he needed her to be \"on\" for the meetings. In fact, he needed more than that... \n\n\"I'll answer that in a second,\" he told her, confusing her. \"Last night, you said you'd dated a bunch of losers. Have you done any one night stands? If so, did any work out okay?\" \n\n\"I've done a few,\" she admitted. \"Mostly bar pickups. A couple worked out. One was a three-night-stand. He was only in town for the weekend. Pretty good lover.\" \n\n\"Ever fuck for money?\" She wasn't sure why he was asking all these questions. \n\n\"Sort of,\" she told him. \"It wasn't money, though. It was a combination mercy fuck and thank you.\" \n\n\"Care to elaborate?\" Why does he want to know all this? she wondered. \n\n\"I was stuck in a particularly bad part of town, a guy with a badly scarred face, pretty ugly really, offered me a ride home, I took it. He made it clear he wanted to fuck. It was obvious he wasn't getting any. I figured, what the hell? He'd saved my ass. So I fucked him. He wasn't that bad. Why do you want to know all this?\" \n\n\"I'll answer that one in a moment, too,\" he told her. \"Two more questions. One, have you ever had sex with a woman?\" Karen turned bright red. \n\n\"No!\" she told him vehemently. \n\n\"Ever wanted to?\" he asked. She looked down. \n\n\"I'll take that as a 'yes', and I'll put it in the 'Under The Right Circumstances' category of Bi-Curious,\" he told her. \"So, what are you doing today?\" \n\n\"I thought you said two questions,\" she told him, still not looking up. \n\n\"I was wrong,\" he told her. \"I have a proposition for you.\" \n\n\"A proposition?\" Now, she looked up. \n\n\"Yes. I propose that I take you shopping today.\" \n\n\"Yes, and...\" she answered suspiciously. \n\n\"And that you spend the rest of the week being my lover.\" \n\nThe proverbial pin dropping would have sounded like a car wreck, it was so quiet. \n\n\"What did you say?\" Karen finally managed to whisper anxiously. \n\n\"I said, I'd like to take you shopping today, and then have you be my lover for the rest of the week,\" he iterated. \"And of course, I have an ulterior motive.\" \n\nShe waited, silent, staring at him. \n\n\"It's like this,\" he breezed on. \"Tuesday, Wednesday and Thursday, we have meetings. I need you to be your incredibly competent Personal Assistant self. But I think I'm going to change my evening strategy.\" \n\n\"Instead of coming back here and decompressing, Tuesday night, I'll have dinner with George Pearson and his wife, Gloria. I'd like you to go with me and be your sexy, vivacious self. Wednesday I'll have dinner with Bob and Billy Mills, same deal. I'll want you to keep Billy distracted. Thursday I will have dinner with James Morton and his wife, Pamela. She's bi and very randy, and I'd like you to keep her distracted. The rest of the time when we aren't in meetings or having dinner with clients, I'd like you to be my lover. Until we have to fly back Saturday.\" \n\nShe stared at him, stunned. She'd heard every word. She knew what he wanted. And she knew this was either a fairy tale come true or the biggest disaster since 9/11. \n\n\"I... I... I...\" she tried to get something to come out. \n\n\"I'll tell you what,\" he jumped in. \"How about I take you shopping, which I'd like to do anyway, while you think about it. You can tell me at dinner tonight. Fair enough?\" \n\n\"Sure?\" she almost squeaked. \n\n\"Great!\" He stood up and started clearing dishes to the sink. \n\n\"You do dishes, too?\" She was flabbergasted. \n\n\"What?\" he smiled. \"You think I'm some kind of royalty or something, that I don't do dishes?\" \n\nSomething like that, she thought. \"You cooked, I clean!\" she decided and got up, moving to clear the rest of the dishes and start the water running. She missed the fact that in her haste, her robe was falling open. \n\nHe stepped back out of the way as she took over the sink and leaned over to open the dishwasher... and everything fell open. And out. She held a long count of three while she fought down the flush of embarrassment without looking at him. Then she stood up and faced him without closing the robe. \n\n\"Well, it's not like you haven't seen it all before,\" she told him, with an almost challenge in her voice. She took the robe the rest of the way off and set it over the breakfast counter. \"No reason to get it all wet. I'll be done here in a few. Why don't you go get dressed?\" \n\nHe let out the breath he'd been holding in a long sigh. \n\n\"Because I like looking at the scenery?\" he offered, staring at her naked beauty again. \n\n\"So do I,\" she teased him, nodding towards his naked chest and obviously growing bulge. \"Go.\" \n\nReluctantly, he left, watching her all the way. He was not being at all subtle about it. \n\nNow where the hell did that White Rabbit go? she thought as she started doing dishes in the buff. \n\n* * * * * \n\nMonday Midday \n\nShowered, shaved and casually dressed - both of them - they were taking a break from a hard morning of shopping by having lunch at a little bistro tucked off the Strip. He'd had some very specific things he'd wanted her to buy, namely sexy outfits to wear to dinner with the clients. He'd left it open if there was anything else she needed or wanted to get. She was really nervous about spending his money, but he was encouraging her and she very much wanted to please him. \n\n\"So are you set?\" he asked as they finished up lunch. \"Anything else you need?\" \n\n\"I need a couple of pairs of shoes, and a purse to go with that ivory outfit we got last,\" she told him. \"After that, I think I'm set.\" \n\n\"Good. Then I know exactly where to go next,\" he smiled and her nethers started to melt again. He always did that to her. Even when she was pissed and thought it was his Wolf Smile, he still got to her. He paid the bill and they left, John driving, until they were a little ways out of town, where he pulled into a nondescript little strip-mall. \n\n\"There.\" He pointed out a storefront with an Italian name on the door. \"Best Old World shoemaker this side of the Atlantic.\" He took her arm and escorted her to the shop. Her nostrils flared the moment she walked in. The fresh-leather smell made her tingle all over. \n\nJohn was right. The old man's selection was excellent. And if she had needed made-to-order, he could have done it. Luckily, she didn't. She walked out with the shoes and purse she wanted for somewhere under $500, by her reckoning. John wouldn't let her see the bill. Before heading back to the car, though, he turned her along the storefronts and started walking her along. \n\nMaybe a couple of hundred feet along, John paused them in front of another store. This one's fa\u00e7ade was all painted black, as was the door, which only had, in simple white Gothic lettering, Donjon Inc. \n\nWhen John opened the door for her and she started to enter, she smelled that lovely scent of fresh leather once more. When her eyes adjusted to the gloom, however, she came to an abrupt halt. \n\nIt was a BDSM Fetish shop. By the time the Goth chick in the heavy piercings got to them to see what they wanted, she was leaking. \n\n\"Is there a problem?\" John asked softly in her ear as she stood and stared. \n\n\"You have no idea,\" she managed to tell him. And in truth, he didn't. He couldn't. Karen's dirty little secret was that she loved B&amp;D. The S&amp;M she could do without. But corsets, restraints, paddles, gags and so forth got her leaking down her thighs. \n\n\"This is what you meant,\" she whispered to him. \n\nTo his whispered, \"what?\" she explained. \n\n\"This is what you meant about leather and D-rings and calling you Sir...\" She turned to look at him and saw he was just looking at her and smiling. That damned smile. She was already soaking. Then the girl reached them. \n\n\"Can I help you, sir?\" she asked. \n\n\"A number 27 in...\" he paused and looked at Karen for a moment, who was just staring at him. \"A 34B, I think. Plus an open-shelf bustier, a full set of padded cuffs, a 1-inch, 2-inch and 4-inch paddle and...\" He paused to think for a moment. \"A 24-inch high density flogger. I think that will do it.\" \n\n\"Yes, Sir!\" the girl exclaimed, suddenly animated from her Goth stupor, apparently by a fat commission. She headed back into the shop and Karen rounded on John. \n\n\"How the hell do you know about all this?!?!\" she demanded in a hiss. \n\n\"I dabble,\" he smiled. \n\n\"That is not dabbling!\" Karen pointed out, indicating the direction the salesgirl had gone. \"And what the hell is a Number 27?\" \n\n\"I'll show you back at the hotel,\" he offered. \"Unless you'd like to wear it back to the room.\" \n\nShe was excited, and irritated at him, and steaming, and incredibly horny all of a sudden. She decided Fuck it!, lifted her skirt, grabbed his hand and put it on her wet panties and thighs. She was delighted to see his eyes dilate and contract, and his nostrils flare, although everything else remained inscrutable. \n\nHe recovered quickly, though, and began moving his hand around ever so gently, covering her mons and down between her thighs and driving her absolutely up the wall. She couldn't help the moan that escaped her lips. \n\nJohn stopped his rubbing and withdrew his hand, bringing it to his nose to inhale her scent. \n\n\"Ah, such a marvelous bouquet!\" he smiled and she felt faint. She managed to drop her dress and stay on her feet as the salesgirl returned with a pile of boxes. \n\n\"Will that be all, sir?\" the girl asked and John indicated it would. \n\n\"That will be three hundred and sixty-seven dollars, sir,\" she informed him. \"The 27 is on sale.\" \n\n\"Excellent,\" he told the girl, pulling four $100 bills out of his wallet. Turning to Karen, he winked. \"This doesn't go on the expense report.\" \n\nShe was simply in a daze as he picked up the packages and his change, took her by the arm and escorted her out into the bright sunlight. She could hardly see the parking lot as he led her to the car, partly because of the sun and partly because of the images running through her mind. He got her settled in the passenger seat, the boxes in back and himself in the driver's seat before she spoke. \n\n\"Yes,\" was all she said. \n\n\"Yes, what?\" he asked. \"And fasten your seatbelt.\" \n\n\"Yes,\" she repeated without moving, staring straight ahead. \"Yes, I will be your lover. Today, tomorrow, all week, forever... even if it means I'm working somewhere else next week. Yes.\" \n\n\"Put your seatbelt on, Karen,\" he chided her and she absentmindedly did. \"And I don't want you working anywhere else next week. I think you and I will make a great team. Relax and enjoy the ride.\" \n\nShe sat back in the seat and looked over at him, her mouth open in wonder, then composed herself and looked out the side window at the opulence and decadence rolling by as he drove them back to the hotel. \n\n* * * * * \n\nMonday Afternoon \n\nThe Number 27 was awesome, in a terrifying sort of way. \n\nIt consisted of a series of straps which encircled the torso, roughly following the lines of the ribs, with additional straps over the shoulders and down between the thighs with a single wide band around the waist. The straps connected to leather rings which in turn encircled the breasts, forcing them up and forward. There were D-rings all along the girdle and the crotch straps were designed to be removed or to hold various devices in place. \n\nIt came with chains and carabineer clips for securing the arms in various positions. John had also purchased padded leather wrist and ankle cuffs which worked in conjunction with the harness. The bustier he had bought was meant to be worn separately, with or without a dress. It had shelves to hold up the breasts instead of cups to cover them. ",
        "Karen was wet all over again by the time John got done unpacking everything, including the flogger and paddles, and laying it all out on the bed. That included the dresses and shoes they'd purchased. \n\n\"Want to try any of it on?\" he asked, watching her reaction. \n\nNow, she was trembling. Stop it, girl! Stop it! a voice in her head railed at her. You are getting way ahead of yourself. This is a business proposition. This is so you can play a role. \n\nOne I've never done in public, she retorted to herself. Except maybe when we went out last night. \n\nPrecisely! the other voice agreed. You need practice. Remember, cool, calm and collected. Not a leaf in a storm... \n\nKaren took a deep breath and let it out. \"Please, excuse me...\" she told him, then grabbed her purse and went into the bathroom. Where she took off all her clothes, put in a tampon and put her panties back on. Insurance, she thought as she gathered her clothes and walked back out, dumping them on the chair. She was pleased at the look he gave her as she entered. After all, he was the one she wanted to impress. \n\n\"I think I should try the dresses, first,\" she told him. \"Which do you think should be Tuesday?\" \n\nHis smile almost split his face and she was delighted. Some part of her was bouncing off the walls inside her skull, yelling Yippee! And her pussy was clenching, hard. \n\n\"I think Tuesday should be the sapphire blue one,\" he told her. \"It's sexy as hell, but subdued enough to be around the Pearsons. She likes Oriental and he likes beef, so we'll probably end up in some Japanese steakhouse.\" \n\nKaren nodded, picked up the dress and slipped it on. \"Bra or no bra?\" she asked. The dress could be worn either way. \n\nJohn walked over behind her and zipped it up, then looked over her shoulder to the mirror. \n\n\"With,\" he told her. \"You look marvelous without, but they're a bit conservative. So wear a bra, but make it one of the lacy ones, so a hint of naughty is showing.\" \n\n\"Aye-aye, sir!\" she told him, then stopped and looked over her shoulder at him. \"Um...\" she stumbled a little, \"uh... Aye-aye John just doesn't sound right...\" He just smiled softly and shook his head. \n\n\"Okay, and for Wednesday?\" she asked, and he was already picking it up. \n\n\"The red one. No bra. No pantyhose. In fact, no panties. Saucy and au natural,\" he told her. \"I'm going to suggest someplace with a dance floor and you are going to really distract Billy.\" \n\nSomething inside her objected to that, since it seemed like being whored out by her pimp, but she fought it down. \n\n\"Would stockings and garters be okay?\" she asked. \"And how far do you expect me to go?\" \n\n\"Excellent! And only as far as you want to go,\" he smiled. \"I just need time with Bob to point out a few things without anyone being around to overhear. If you suddenly find yourself turned on and want to get laid, go for it. I won't be jealous, trust me.\" \n\n\"Yeah, trust me... I know what that means...\" she mumbled as she tried on the dress. \n\n\"No, really, trust me,\" he insisted. \"It doesn't matter how attracted I feel towards you, I'm not going all Neanderthal on someone because you want to spend time, even intimate time, with them. You and I will work out whatever is between us, between us. With no regard for somebody else's opinion.\" \n\nKaren wanted very desperately to believe him on that, but it hadn't been her experience. The dress, on the other hand, fit her like a sprayed on glove. \n\nI look pretty damned good, she mused to herself as she examined herself in the mirror. For shits and giggles, she pulled her shoulder-blade length hair up into a Gibson Girl type bun to see how it would look. \n\n\"Oh, fuck, yeah!\" That wasn't her. That was him. \n\n\"You like?\" she asked. \n\n\"Oh, yeah, I like!\" he exclaimed and she saw that he was really lighting up. \"Wear it like that when we go to dinner. All three nights. That's awesome!\" \n\n\"Okay,\" she smiled. I can get to him, she purred to herself. Now I know I can get to him... \n\nShe slipped out of the red one and into the ivory one, the one for Thursday. It was more demure than the others, with a high neck but no back, and the material was so thin, it was almost transparent. \n\n\"Pam is going to go nuts,\" John muttered as he watched her slither into the second skin. \n\n\"Sorry, what did you say?\" Karen asked as she zipped it up. \n\nJohn thought for a moment before answering her. He wanted to be honest, but he didn't want to scare her. Finally, he decided the truth would be best. \n\n\"I said, Pam is going to go nuts,\" he told her. \"Pamela Morton, James' wife. She'll be drooling over you.\" \n\n\"Um, sir... I mean, John... I've never, um...\" Karen started to admit. \n\n\"That's okay,\" he interrupted, reassuring her. \"This is all mostly for show, anyway. I don't expect you to get into any situations where you don't know what you're doing, or can't figure it out. All of these people are playing for high stakes, and they understand 'no means no' and what it could mean to them if they ignore that.\" \n\nKaren felt a little relieved, but only a little. His world of the \u00fcber-rich-and-powerful was as foreign to her as an alien planet. She knew she was quick on her feet, but he seemed to be counting on it a lot. She'd signed on for the ride... now all she could do was hold on and try to do her best. \n\n\"What about Number 27?\" she asked nervously as she slipped out of the ivory dress. Putting it on was going to pop the lid off the oubliette and she was scared. She'd pushed those memories into her Forgetery for a reason, and not because she was afraid of them. She was afraid of liking them too much. \n\nHe looked at her body language for several moments. \n\nShe's nervous, he decided. This is pushing her boundaries. Good or bad, I'm not sure. So, John, what are you going to do? \n\nIt took him several seconds but he finally answered himself. I'm going to cook dinner and suggest we save it for later. She and I need to go over tomorrow's meeting notes, anyway. \n\n\"We'll save it for later,\" he told her and confirmed the look of relief that washed over her. \"I'll do dinner and we need to go over tomorrow's notes, so we can kick back and take it easy this evening. By the way, was this morning's breakfast okay? Do you want something different?\" \n\n\"No, breakfast was fine,\" she smiled, remembering her asinine tirade against him. \"Do you want me to pack a lunch for tomorrow? We're meeting on their turf, but there's a nice little bistro with outdoors seating nearby and we could use it to escape, if you want. We'd just have to buy something from them to keep them happy.\" \n\nHe smiled as he thought about it. \"Sure,\" he decided. \"I'll get a cooler and some cold-packs and we can put it in the trunk of the car tomorrow. I haven't done a brown-bag in forever.\" \n\nShe smiled and turned away, picking one of her more sedate sundresses from the closet. \"I think I'll just slip this on, and cruise the 'Net, or watch TV for awhile,\" she told him. \"You'll let me know when dinner's ready?\" \n\n\"Affirmative,\" he told her and walked out of her room, pulling the door shut behind him. \n\n* * * * * \n\nMonday Evening \n\nShe'd gotten off five crashing times before he called her for dinner. That was nowhere near a Personal Best for her, but given the circumstances, it was a great relief. \n\nAs soon as he had closed the door, she had grabbed Number 27 and taken it to the bathroom, closing and locking the door. As she suspected, without the tampon, she was leaking down her thighs before she got it completely on. He was damned right about that 34-B. Like the dresses, it fit her like a glove, cinching in her waist slightly, lifting her breasts and pushing them out, leaving the nipples exposed. \n\nWith the wrist and ankle cuffs, she thought, he'll be able to secure me into just about any position he wants, provided he doesn't want it painful. He said no permanent damage... he didn't say anything about just short of that. \n\nHer clit was so swollen, it was aching, just looking at herself in the mirror. She pulled her hair back down again and put it in a simple braid. Normally, when she let it loose, it hung down midway between the bottom of her shoulder blades and her waist. In a braid, it shortened it up to about the bottom edge of her shoulder blades... plenty long enough if he was into hair-grabbing, but the braid would soften the pull on her scalp. \n\nThings Greg taught me... she thought as she figured out what she wanted to do next. No vibes or plugs, dammit, she thought. I've got my emergency Pocket Rocket. Fuck! I really need to get off! \n\nShe went to the bedroom and turned on the TV, putting it on a channel with an adventure movie, to cover her sounds. She went to the dresser and fished out her little vibe, then went to the bed and lay out spread-eagled. Then she pulled her hands and feet into different positions, imagining them hooked in place. Eventually, she lay back, spread her legs and turned on her vibe. \n\nShe was peaking into cum number five when he knocked, and she didn't hear it. \n\nShe was moaning Oh, God! Oh, Fuck! Oh, God! Oh, Fuck! when he opened the door, and she didn't hear it. \n\nShe was thrashing out her cum, convulsing and trying not to cry out too loudly, when he stopped, staring, riveted, and said, \"Oh, my God!...\" \n\nShe heard that. \n\nThere was no way to stop cumming, but her eyes snapped open and she saw him standing in the doorway, staring, a look of pure lust on his face. She could tell his breath was ragged and he was trying hard not to react. But he was reacting anyway and his hand was in his crotch, trying to rearrange himself. \n\n\"Ahem...\" he cleared his throat as he continued to stare. \"Um... dinner is served, Karen. Whenever you're, um... ready.\" \n\nHe actually managed to back out and close the door, leaving her in a warring state of desire and embarrassment. But she wasn't done cumming and she wanted that last little bit. So she put the vibe back in play and teased over one more aftershock kind of cum, closing her eyes and fantasizing her boss having his way with her. \n\nWhen she finally made it to the dinner table, she had taken off Number 27, washed up and put on one of her sundresses. Minus any underwear. She was feeling really, really naughty, even if she was embarrassed. Naughty was her way to dominate Embarrassed. \n\nJohn looked up from the kitchen with a huge smile. \n\n\"Feeling better, my dear?\" he asked as he loaded a plate with something. \n\n\"Much, thank you,\" she told him, trying to make it sound aloof. \n\n\"Have a seat,\" he nodded towards the dining table set for two. \"If you would like, you could pour the wine.\" \n\nTrying to be the sophisticate when she knew he'd walked in on her masturbating and cumming was difficult. But pouring the wine seemed like an easy diversion. He'd made it easy for her. There was a tumbler of ice water and an empty coffee cup at each place. There was also a stemware goblet. That had to be for the wine. \n\nWhen she was done, she sat and very soon thereafter, he first brought out a basket of buttermilk biscuits along with butter, and then plates with Garlic Prime Rib, O'Brien potatoes and Brussels sprouts. \n\n\"We are eating simply tonight, if it's okay with you,\" he told her as he sat. \"I've got orange sherbet for dessert. I hope you like the prime rib. It's a thin crust, but I think tasty. Let me know.\" And then he surprised the hell out of her. He bowed his head, apparently in silent prayer. \n\nShe decided not to look stupid and did the same. \n\nGod, if you're listening, she thought, please let this man turn out to be one of the good ones. Everything so far is turning out great, so thanks! She kept a surreptitious eye on John and when he lifted his head, she did the same. \n\nThere wasn't any talking during dinner. The meal was too good to ignore with small talk. He had been right, the prime rib was excellent, whatever herbs and spices he used were perfect, the sprouts were tender and drenched in butter, the potatoes were just slightly overcooked, but she liked them that way... in short, everything was perfect. And she made sure to rein it in with the wine. One glass over the entire course of dinner. \n\nHe insisted on clearing the table and serving up dessert, along with coffee. She was feeling pampered. \n\n\"Do you usually provide 5-star service to your employees, Mr. Thompson?\" she asked as she enjoyed the sherbet. \n\n\"I provide 5-star service to my lovers,\" he smiled. \"You did say, in the car, that you would be my lover for the week, didn't you?\" \n\nShe sighed and looked at him. Bloody perfect, and she knew she was going to be job hunting next week. \n\nHe had to be around 6-foot to 6-foot-1, maybe 160 to 175 pounds lean, very well muscled from how he looked from the waist up, a little chest hair but not a lot, the \"ruggedly handsome\" face and tousled blond hair. Part Exec-VP and part Puck. And a very noticeable \"package\" from what little she'd seen before. And she had to admit, that part had her curiosity burning. \n\nIn her experience, she was a little bit of a \"size queen.\" Not that a man with less-than-average equipment couldn't pleasure her. She'd just found that for fucking, bigger was better. Although, being honest with herself, she'd admit she'd never had a lover hung like one of the huge porn stars. Her John Holmes dildo was about it. For her, it was just that bigger seemed to hit her in the right places. \n\n\"So... what are you thinking?\" he asked and she blushed. He eyed her for a moment and then added, \"I hope you're not having second thoughts. You will be my lover, won't you?\" \n\nShe struggled to look at him. \"Yes...\" she whispered. Then caught herself and repeated, louder, \"Yes. I will. I have absolutely no idea what that means for you, but I'm willing to try.\" \n\n\"So... what were you thinking?\" he persisted. She blushed again, and shook her head slightly. \n\n\"I was um... I was wondering about your... um... equipment,\" she faltered through her embarrassment, still blushing. Then she got hold of herself and took off. \"You're a good-looking man and you know it, and you must have figured out you turn me on but you're my boss and I like working for you and I was thinking about you walking in on me and you growing and just thinking...\" she hurried on, ninety miles an hour. \n\n\"Whoa!\" he smiled again, straight to her nethers. \"All that from asking if you were still going to be my lover?\" \n\n\"Yes,\" she answered meekly, the bluster gone. \n\n\"Well, since I have the unfair advantage of having the image of your beautiful body in action seared on my retinas,\" he continued to smile at her, \"I suppose I should ask, how would you like to satisfy your curiosity about me?\" \n\nShe didn't hesitate one second. She stood up, slipped off the sundress and sat back down, naked. \n\n\"I would like you to take off your clothes, sir... uh, John... and finish dessert with me. Then I would like to move to the couch and be permitted to touch you wherever I feel like it.\" \n\nThat got two raised eyebrows from him, but he did as she requested. He stood up at the dining table and slipped off his shoes, nudging them under the couch's end table. Then, watching her watch him, he undid his belt buckle, unzipped and dropped his slacks, reaching down, picking them up, folding them and putting them over the back of the unused chair to his right. He then stepped on his own chair with first his left and then his right foot, sliding his socks off and putting them with the pants. \n\nHe then proceeded to unbutton his shirt with agonizing slowness from Karen's point of view. He slipped it off and exposed his chest and abs, and she felt faint. Like a Greek God, she thought. And he's a briefs guy... a very filled out briefs guy... \n\nHe slipped his thumbs and fingers into his briefs and slowly lowered them, still watching her watching him. He let them fall to the floor and stepped out of them, kicking them slightly to the side. \n\nOh, my God! And that isn't even hard! is what was going through Karen's mind as he paused to let her get a good look before sitting back down in his seat. \n\nHer heart was beating like crazy as she realized that soft, he went halfway to his knees. Even if he's all show and no grow, he's still going to be massive! she realized. Oh, my God... \n\nJohn had what could best be described as a bit of a smirk as he resumed eating his orange sherbet. Taking his time to play with the frozen concoction on his spoon - licking it, sucking it, all very suggestively before finally swallowing it - had its desired effect. He could tell she was squirming in her seat. \n\nWell, thank you, Great-grandpa Paul, and all your descendents for the genetic blessing, he thought. Every once in awhile it's nice to have being hung not be a pain in the ass! This should be interesting...  \n\nThey finished dessert in silence. Karen kept her eyes on her food but couldn't stop the images running rampant in her mind. \n\nJeez, no wonder he's got that bulge, she thought. Even soft, he hasn't got enough room. God, I hope he feels and tastes good. It'd be such a waste if he didn't. She then let her mind drift to what he might be like fully erect and became aware the seat beneath her was getting damp. But at minimum, he is a damned fine kisser, she reassured herself. \n\nWhen the sherbet was gone, John stood to start clearing the dishes and Karen's heart went back into tachycardia. She decided that even though sitting there and gawking gave her the best view, it didn't make sense and she should be helping with the dishes. So she joined him in the washing up and getting the dishwasher loaded. \n\nAs she bent over to put in the soap, he rested his hand on her waist and she nearly upended the box of detergent as the massive shiver ran through her. \n\n\"Easy there!\" he told her as he removed his hand. \"Sorry... didn't mean to startle you.\" \n\nKaren stayed bent over, reached back, fished around and found his hand and put it back on her waist. \n\nApparently subtle isn't required, he thought with a smile. \n\nShe waited a couple of long seconds, then slowly stood, closing the dishwasher and turning into his arm so that they ended up facing each other and touching. \n\n\"It appears that dessert is finished, John,\" she told him as she pushed the start button. She was amazing herself with her daring. And her self-control. \n\n\"You're right,\" he smiled. \"So next would be... the couch!\" and as he said it, he swung an arm under her legs and picked her up, just as he had the night before when putting her to bed. He turned and began carrying her to the couch as he added, \"gee, twice now I've carried you naked, and you're still as light as a feather!\" \n\nKaren would have acknowledged the compliment, if she hadn't been too busy swooning. Her head wasn't the only place her pulse was pounding as she felt him carry her like a baby. He was deceptively strong and handled her with ease. He held her against him as he swung her legs beside him and eased her down onto the couch in a sitting position. She kept her head in his chest for as long as she could, drinking in his scent and the feel of his skin. \n\nFinally, though, he eased his grip and stood up before her, making sure she was comfortable. Which meant the first thing she saw as he rose was his now semi-hard cock dangling in front of her. She could not have resisted the temptation even if her life had depended on it. She reached out and took it in her hand, feeling it swell as the smooth skin slipped over the surface and noting the trimmed pubic hair. She leaned forward and took him in her mouth, tasting the earthiness of it and drinking in his scent, like newly turned loam, not at all acrid or stale. ",
        "He quickly grew until he was stretching her mouth, but even as she struggled to adjust, she was thrilled to hear his low groan of pleasure. I did that! she thought joyously. He likes it... She withdrew him from her mouth for a moment, still encircling him with her fingers and slowly stroking. \n\n\"Sorry,\" she apologized, not really meaning it, \"I don't usually do that first. It's just... well, you were hanging there and you looked so good... I guess I just had to find out what you tasted like?\" \n\n\"And the verdict?\" he moaned softly. \n\n\"Oh! Excellent! Absolutely excellent. But...\" and she sat back, letting go of his now very pronounced erection, \"perhaps you should sit and we should proceed with the original plan.\" She gave him a wry smile as she scooted back, making room next to her. \n\n\"Jesus, woman...\" he muttered. \"You're killing me...\" But he did move to sit beside her. \n\n\"What was the original plan, again?\" he asked as he settled in next to her. \n\n\"That I be permitted to touch you wherever I feel like,\" she reminded him. \n\n\"Ah, yes...\" he smiled. \n\n\"I remember it well,\" she finished, also smiling. And reaching out, as well. \n\n\"I suppose...\" she said softly as her hand found his hair and ran her fingers through it, \"that I'd best start at the top.\" His hair was soft and smooth, and yielded easily to her touch. He wore it medium-short, and being blond, it reminded her of a surfer look. \n\nShe trailed her hand down the back of his neck and then along his temple, down his cheek, to his neck and shoulder. His skin was amazingly soft for a guy, and yet the muscles under it were firm and toned. She stroked along his collarbone and out to his shoulder and upper arm, feeling the hidden strength. She came back and did the other side, and she realized she was getting even more swollen and wet than she already was when she started. \n\nShe came back to his chest and drew lazy circles around his nipples, relishing the feel of his pectoral muscles neatly shielded by the broad expanse of his most sensuous skin. She drifted her hand on down to his belly, feeling the firmness of his abs and the definition of his ribs and waist. His erection was still pointing skyward and she watched herself in fascination as she drifted her hand to it, gently stroking it and then cupping his testicles, now drawn up tightly against him. \n\nHe moaned softly and leaned his head back against the couch as she fondled him, turning so she could bring her other hand into play, wrapping her fingers around his cock and slowly stroking, feeling his skin slide over the rigid flesh beneath. He had one of those helmet-type glans with a distinct flare, and she felt a charge of excitement shoot through her as she played with it, teasing the opening of the urethra and the little bit of the skin of the frenulum. \n\nDeciding to tease a bit more, she leaned forward, running her hands down his thighs, to his knees and calves, pressing her breasts against his side and leg as she gently stroked his wonderfully smooth skin. He had very little hair on his body, and that which he had, he appeared to either shave or trim. Even the hair on his legs was soft and downy, and a pale blond, almost invisible. \n\nShe could feel his breath catch as she touched him and pressed her breasts into him. She could feel his very erect manhood pushing into her chest and began fantasizing what it would be like to give him a titty-fuck. And then, she had her flash of inspiration. She sat up, gave him a peck on the cheek and stood up. \n\n\"Just wait right there,\" she told him. \"I need to do something. I'll be right back.\" \n\nShe didn't wait for him to reply before swinging by the breakfast bar and grabbing her dress, then disappearing into her bedroom. \n\nHe sat, his erection throbbing almost painfully, and wondered what the hell was going on... \n\nIn her bedroom, Karen dropped the sundress on the chair and picked up Number 27. She went into the bathroom to put it on, using the mirrors to make sure it looked good and was seated right, including the wrist and ankle cuffs, then grabbed the robe off the back of the door and put it on. Satisfied that she looked exactly the way she wanted to look, she headed back out to the couch and John. \n\nShe was very pleased to see that he was still sitting there and still hard. In fact, it looked like he might be playing with himself a little. What Asshole Number 5 had called \"edging.' \n\nI doubt I can get all of that in me, she thought as she sauntered towards his confused expression, but it's going to be fun trying! \n\nWhen she got to the couch, she centered herself between his legs, getting a very intense look of curiosity and anticipation from him. Then she let the robe drop and followed it to the floor, kneeling between his legs and taking as much of his hard-on in her mouth as she could manage. She was seriously out of practice. \n\nHe, on the other hand, damned near achieved orbit. \n\n\"Oh, fuck, Karen!\" he moaned loudly as she pushed down on him, taking him deeper and deeper as she remembered how to deepthroat. \"What are you doing?\" \n\nSilly question, she thought as she finally managed to get her lips all the way down to his ball sack. Rather obvious, I'd think... She was elated that she'd managed to control her gag reflex and get all the way down on him. Christ, he's almost in my stomach, she thought as she gently bobbed up and down until she had to come up for air. That's one thing she still needed to learn - how to breathe with a dick down her throat. Fuck, he's got to be 10 inches, anyway, she thought. And thick. Almost as big as my Johnny. \n\nWithout answering him, she decided okay, let's see what else I remember. She came up off his cock and sank down, holding him out of the way so she could get at his balls. They were still drawn up tight, but she put her mouth over one and started sucking, gently at first, pulling it into her warm, wet mouth. \n\n\"Oh, my God...\" His moan was music to her ears as she pulled his testicle in far enough to run her tongue around it. He was big enough, she wasn't sure she could get both in her mouth at the same time, but taking turns wouldn't be so bad. She popped the one out with a little smacking sound, then went after the other, successfully pulling it in far enough to twirl her tongue around as well. \n\nI think I'll wait to find out if he likes anilingus until later, she thought. Besides, I'm so fucking hot, I'm running down my legs. Now would be a good time to see if he fits. \n\nShe came up from between his legs and fixed him with her gaze. He was, as far as she could tell, mesmerized. He was staring back at her in what she hoped was awe as she stood up, knelt forward onto the couch, position him against her slit and sat down. All the way. \n\n\"Karen, don't!\" he tried to tell her as she mounted him. \"You're going to hurt yours...\" His words died in mid-sentence. \n\n\"Oh, my God, you're fucking HUGE!!\" she cried out as she hit bottom. \"Oh, my fucking God!...\" \n\nRather than stop, though, she stayed right where she was, grinding her pussy back and forth on his groin and feeling her own need rising up like a volcano ready to blow. \n\n\"Oh, fuck, you're good... oh, fuck... damn, I've needed this...\" she began muttering, her controlled intent giving way to her animal needs. As she ramped up, she sped up, rising and falling faster and harder. \n\n\"Jesus! You have one hell of a way of 'touching' a guy,\" John managed to moan. Her sheathing was driving him nuts. \n\n\"Is that a complaint?\" groaned as she climbed towards her climax. \"Sir???\" \n\n\"Not at all... Bitch!\" He suddenly grabbed her under her butt and stood up, keeping her impaled on him and making her throw her arms around his neck to stay upright. With sheer strength, he kept her coupled to him as he strode towards his bedroom. \n\n\"You are my Bitch... right?\" he demanded as he pulled her head to him and crushed her lips with his. \n\nWhen she could break away enough to answer, she told him meekly, \"yes...\" \n\n\"Yes, what?\" he asked as he positioned them near the foot of the bed. \n\n\"Yes, I am your Bitch, Sir,\" she answered, her head buried in his shoulder. It didn't stay there long, though, as he literally picked her up off of him and placed... more like threw... her in the middle of his bed. His sudden action and the soft landing confused her as she looked up at him, towering over her. \n\nHe didn't wait. He crawled up on the bed, between her thighs which he spread further, anchoring them in place with his forearms while his fingers spread her nether lips. He was delighted. The corrugations of her labia made her pussy look like a pink orchid with a large pearl at the top. He lowered his mouth to her nethers and she almost had a coronary, she came so hard. \n\nOh, fuck, oh, fuck, oh, FUCK!! she screamed to herself as her body clenched, hard, and she felt herself blown over the edge by the simple sucking of her clit. Too soon, too fast... she complained to herself. Too fucking ready... OH MY GOD HE'S DOING IT AGAIN!! \n\nTo her astonishment, John started taking broad licks, from her anus to her clit and back, sucking and licking everything in between. He was slow, he was steady, he was methodical and he was going to make her lose her mind. She felt the next cum warming up and tried to respond to him, tell him to take it easy, but easy wasn't what he had in mind. She wanted to grab his head and push him back, but all she did was grab the bedcovers in a death grip and hold on for dear life. \n\n\"Oh! OH! OHHHH... FUCKING CUMMING!!\" \n\nShe hadn't meant to give him that kind of power over her, but he'd just taken it... and now she didn't want it back. He just held her in place and kept at her. Over and over and over... \n\nShe had no idea how many times she'd cum when he finally eased up off of her. She lay there exhausted, quivering, feeling the aftershocks rip through her body like tsunami smashing the shores. She didn't even realize he'd left the bed until she felt her foot pulled up near her butt and her hand taken off the bed, and moments later heard a distinct Click! She was puzzling over the click when he moved her other foot and hand near each other and there was another Click! That's when she figured it out. She tried moving her hands and feet and found they were now coupled together. \n\nThe third and fourth Click! were her ankles and wrists being connected to the waist of Number 27. She was trussed up good. She could close her knees some, but everything else wasn't going anywhere and she was helpless to interfere with whatever he had planned. She lay there with her eyes closed, hoping. \n\nHoping he knew what he was doing. \n\nI haven't allowed myself to be helpless since Greg walked out on me, she thought, fighting down the fear and the memories of being tied up and left alone. Please, God, if you're listening, please let him know what he's doing. \n\nThen she felt the soft cord being wrapped around her thigh, just above the knee. Her heart went into overdrive as she imagined what he must be doing. He hadn't hoodwinked her, but she was afraid to look. That got overridden when she heard a metallic snap-snap-snap and felt something pushing underneath her. She looked. \n\nThere was now a metal tube sticking under her waist and a thick, soft cord running from her knee into it. And on the other side, he was pulling the cord out and drawing it taught. \n\n\"I think I forgot to mention,\" he told her casually as he worked with the rope, \"I had a couple of things delivered while you were, um... relaxing.\" He took the other end of the rope and looped it around her other knee. As soon as he started tightening it up, she realized what was happening. \n\nHer knees were being drawn apart, exposing her. And her own body weight was keeping the tube in place. She was being spread open with no chance to close her legs and protect herself. She was truly at his mercy. He reinforced that point when he was done tying her knees and spent a minute tying the tube to the harness. \n\nHer hands were anchored, her knees were drawn up and her legs were spread. She wasn't going anywhere. \n\n\"Okay, let's see...\" he mused half-aloud as he brought out a container the size of a shoebox and opened it. \"Mmm...\" he continued as he pawed through the contents, eventually withdrawing what seemed like pieces of jewelry. \"Let's try these...\" \n\nShe realized what he was holding were a couple of nipple clamps with chains attached about the same time he was affixing them. She moaned and lay her head back. She knew how sensitive her nipples got and how connected they were, straight to her clit. Playing with them could sometimes trip her over when she was having trouble getting there. And he was attaching them to her nipples and attaching the ends of the chains to the D-rings on the belt. At the sound of her moan, he looked up at her curiously. \n\n\"Would you like a blindfold and a ball gag?\" he asked as if it was only polite conversation. \n\n\"Pickles,\" she said as she slowly shook her head \"no\". \n\n\"Excuse me?\" He wanted to be sure he understood her. \n\n\"Safe word. Pickles,\" she iterated and he smiled. \n\n\"Got it,\" he told her and finished the clamps and chains. Then he dug around in the box again and brought out a Magic Wand. \n\n\"Oh, my God... I'm dead,\" she told him, and she was mostly serious. \n\n\"Nope!\" he told her brightly as he looked for a place to plug in the vibrator. \"No dying allowed. I need you functional for tomorrow's meetings.\" \n\n\"Please remember that,\" she said softly, but loud enough for him to hear and smile. \n\n\"Absolutely,\" he told her as he finished plugging it in and switching it on to test it. It came to life and her body went crazy. Pulse, respiration, flooding... all through the roof. Then he turned it off and she started coasting back down to normal. Until he slipped in the butt plug. Granted it was small, but it was still a surprise. \n\n\"Oh, God, John...\" she whimpered, now torn between trepidation and pure lust. \"I haven't had anything bigger than a finger in my ass in a very long time. You'll tear me!\" \n\n\"Then that will be just for show tonight,\" he assured her. \"Nothing bigger than that in your ass until you okay it. Now... where was I?\" He remembered soon enough. \n\nHe took his position between her legs again and she knew the ride had only begun. He started by going back down on her, long, languorous strokes with his tongue, tickling her ass to her clit and everything in between. He tugged on one of the chains while sucking her clit and she involuntarily clenched, hard. He noted that. He inserted one and then two fingers, feeling her heat and her slipperiness, probing around until he found her cervix and her G-spot. A gentle, circular stroking of that area and she was squirming. \n\n\"Oh, God, John...\" she whimpered again, but seemed resigned to taking more pleasure than she thought she could stand. He didn't disappoint. \n\nWith his fingers still buried in her, he brought the wand over and placed it against his palm, and turned it on. A long, low moan was the only intelligible thing to come from her mouth at the incredible feeling of his precisely aimed fingers beginning to vibrate. She'd had vibrators in her pussy before, but never living, moving, pinpoint vibrating fingers that made everything tingle in very, very intense ways. \n\nIt didn't take her long. Between the powerful, insistent vibrations and his massage of her paraurethral glands, she lost it. Zero to sixty in two-point-five seconds. \n\n\"Oh, GOD!!\" she screamed out as the orgasm was ripped from her and she felt herself explode. Literally. Everything clamped down hard, like a major muscle cramp and then she blew out a load of fem-cum. And the follow-on pulsing and crashing waves of ecstasy had her thrashing in place. \n\nShe didn't need confirmation to know she'd squirted, but when he stood up and his chest was dripping, she got it. \n\n\"Forgot about that...\" he commented as he went into the bathroom and came back with a couple of towels, one of which went under her butt. \"Do you squirt very easily?\" he asked as he got back in position. \n\n\"Less than half a dozen times in my life and you just tore that one out of me!\" she managed to tell him in ragged breaths. \n\n\"Really...\" he mused as he put his fingers back in. \"Let's see what we can do if we go slowly...\" \n\n\"No dying allowed, remember?\" she asked and then it was too late. The vibe went on and she went over moments later. Not hard enough to squirt but stronger than an aftershock. Then he took his time, gently probing around and alternating pressure with the vibrator until he had her right on the edge and begging. \n\n\"Oh, God, please, Sir!\" she moaned. \"Please, Sir, make me cum! Please! Oh, God, I am SO CLOSE! Please! Please, oh, please, oh, please, oh, oh, oh... Oh! Oh! Oh, my Fucking GOD! CUMMING!!\" \n\n\"I think you're right,\" he commented offhandedly as she thrashed through her climb. \"I like it better without the gag.\" But when she went over, he made sure to go after her G-spot again. \n\n\"OH-FUCKING-HELL-FUCKING-CUMMING... FUUUUUUUUUUUCKKKK!\" And she squirted again. Hard. Her body was wracked with orgasmic spasms as she felt herself shoot, and heard him laughing. \n\nLaughing. She was cumming her brains out and he was laughing! What the fuck?!?! She struggled to lift her head and look at him and was amazed. Through the haze of her body's continued twitching and spasming, she saw him sit back - taking the vibrator away, thank God - and she saw his entire face, from his hair to his chin, was dripping with her cum. And he was delighting in it. \n\nHe was absolutely, certifiably insane. Bonkers. Looney. And maybe exactly what she needed. She laid her head back and closed her eyes. \n\n\"I hope you're going to fuck me, Sir,\" she told him. \"Because this foreplay is headed for more than I can take. Passing out is the same as a safe word, right? Sir?\" \n\n\"Well, we wouldn't want that,\" he agreed. \"And yes, if you wish, passing out can be safe wording.\" He set the vibrator down and knelt between her knees. She looked up and saw his monster schlong bobbing there and a momentary pang of fear ripped through her. But it dissipated, replaced by lust. \n\nShe closed her eyes again, but soon felt him unhooking her ankles from the restraints, leaving everything else bound. He lifted her legs with his forearms, raising them as he nestled forward, easing the tip of his prodigious shaft into her recesses. She gasped as he entered her, moving slowly and steadily in. \n\n\"Say when,\" he told her, smiling down at her when she opened her eyes to look at him. \n\n\"All of you... please... Sir,\" she whispered and she felt the shudder run through his muscles as he held her. \n\n\"As you wish,\" he muttered as he buried himself to the hilt. \n\nBalls deep in this hot bitch and she's taking my all, he thought as he bottomed out. She is fucking amazing! \n\nHer moans as he drove into her kept rising in pitch and volume, and it turned him on like crazy. God I love her sounds! he thought as she wrapped her legs over him and pulled him in. And she's so wonderfully sensitive! No fucking faking it with this one... thank God! \n\nShe was borderline delirious. Oh, my God, he feels so fucking good! she kept thinking. God, he's stretching me out so fucking much! And I love it! Oh, fuck yeah! Gonna cum! \n\n\"Oh, fuck, oh, fuck, right like that! Right there! Don't fucking move! Right like... OH! FUCK! CUMMING!\" she cried out as she went over. And John, being one of the few males to actually take her literally, did not change pace, depth, position or anything... and took her right back up again. ",
        "\"Oh! Fuck! Yes!\" she moaned before she'd even come down from the first cum. \"Again! Oh, fuck, again! You're gonna make me... oh, fuck, cumming!\" \n\nThat butt plug has him pushed up against my spot real, real hard, she thought as he drove her over repeatedly. Maybe... maybe I can take him... \n\nJohn figured he'd gotten her off a half dozen times or more before she almost made him cum using words alone. She grabbed his biceps tight and cried out \"John! John, look at me!\" When he did, she fixed him with one of the most intense stares he'd ever seen. Pure wild animal. \n\n\"Fuck me in the ass, John.\" He almost came in her pussy. \n\nShe wants it in the ass??? he thought as he tried to pull out without losing it. Thank you, Lord! Thank you, thank you, thank you... \n\nHe reached down and eased out the butt plug, then smeared a little of her lube on her rosebud, carefully lining up with her and easing in. She was tighter than a snare drum, but slow and steady won out as she gently yielded to him and his glans finally popped in. \n\n\"Oh, fuck, yes!\" she moaned. \"Fuck me, John. Fuck me deep, fuck me hard, fuck me into next week!\" \n\n\"Your wish is my command,\" he smiled and began a slow and steady fucking, buried in her hot, tight, throbbing ass and feeling like he wasn't going to last very long. He could feel himself building, getting larger and harder, and apparently she could, too. \n\n\"Cum in me, John. Please,\" she moaned. \"Cum in me! Deep. Cum deep in me, John!\" \n\nThe power of her words was amazing. He couldn't have resisted if he wanted to. He felt his balls in his throat as his ass snapped shut and everything tensed with the explosion to come. He pounded away into her, driving deep, his need taking over until he finally hit his peak... and felt rope after rope spurt into her blast furnace ass, taking his release and milking him for more. \n\nThey kept thrashing together, her bound by the harness, him free to manhandle her as he wished, and yet both in a dance of pure ecstasy. A dance which left them exhausted and near passing out. He managed to stay coupled with her, deep in her ass, as he unclipped her hands from the restraints, then fumbled with the ties on her knees. She helped with the ties, then wrapped her arms over his back and drew him down onto her once she was free. \n\nHe struggled to keep his weight on his hands and knees. She struggled to pull him down to her. She finally got exasperated and told him, \"give it up, John! I can take your weight!\" Then she cheated. She pulled him into a kiss and while he was busy being distracted by that, grabbed his wrists and pushed them towards the headboard as hard as she could. \n\nHe collapsed. \n\n\"Much better,\" she sighed. \"I'm glad you got the towel. There's going to be a hell of a puddle when you pull out...\" He could hear the smile in her voice. \n\n\"You are fucking amazing,\" he told her. \n\n\"Thank you. So are you,\" she smiled. \"So I don't have to go job hunting?\" \n\n\"We'll see, after your performance at the meetings this week,\" he teased. \n\n\"Hey, no fair!\" she complained. \"We haven't gone over the notes, yet, and I'm about to pass out.\" \n\n\"Then let's pass out,\" he suggested. \"Actually, let's get you out of Number 27 and you and me cleaned up a little, then pass out. We can get up early to look at the stuff.\" \n\n\"That, Sir, sounds like a plan,\" she smiled. \n\n\"What did I tell you about...\" he started, but she interrupted him with a kiss. \n\n\"Ah, ah, ah,\" she admonished him when she broke it. \"I'm still in leather and D-rings.\" \n\n\"Yeah, yeah, yeah,\" he grumbled, but did eventually pull out and helped her out of the harness. A quick shower and light snack with a glass of wine, and she curled up with him in his bed, tucked in under his arm and reveling in his scent and feel. \n\n\"Five o'clock,\" he told her as he reached for the lights. \n\n\"Five o'clock,\" she muttered to the darkness. God, please let this have been the right thing to do... \n\n[to be continued]"
    ],
    "authorname": "eidetic",
    "tags": [
        "erotic coupling"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/necessity-is-the-mother-of-obsession-ch-01"
}