{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 13",
    "pages": [
        "This is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this.\n\nStandard disclaimer\u2014this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*****\n\n\"Do you think Walt will miss working?\" \n\nGwen had redressed soon after the last tremors of her orgasm had passed, crouching in the cockpit to put her bikini back on before adding a layer of t-shirt and shorts. The urge to openly flaunt her sexuality had quieted after her climax; modesty and common sense returned. \n\nTim scanned the open expanse of water in front of him. \"I doubt it. He's been ready to hang it up for a while\u2014we both know that. No, I think there's only one thing he's gonna miss about showing up to work now.\"\n\nWhat's that?\" \n\nTim didn't respond, debating the wisdom of his answer. \n\nGwen sensed his hesitation. \"Tell me.\"\n\n\"Don't get mad, but you know he's an old horndawg\u2014always has been, right?\" Gwen nodded. \"Never passes up a chance to look down a woman's shirt or up her skirt. I was always worried one of our customers was going to catch him doing that. That's one of the reasons I had you send him out to the industrial jobs as much as possible. That and because there was usually more space for him to move his fat ass around in a warehouse than some poor lady's bathroom.\" \n\n\"I always suspected that about him. To tell you the truth, I think he tried to do it do me more than once. I just thought I was being paranoid.\"\n\n\"You weren't paranoid. I caught him checking you out a few times. Checking to see if you mighta missed a button or something, I guess. He's harmless,\" Tim quickly added. \"He never tried to do anything more than look\u2014he knew that me and Cliff would kick his ass if he stepped out of line with a customer, and Norma would finish the job when he got home\u2014but he does like to look. He'd get some quick peek at some poor woman's bra strap and tell the apprentices how she was practically naked. 'Course, ninety-nine percent of Walt's stories are bullshit, and we all know that, but he liked to think that the apprentices were more gullible than Cliff or me.\"\n\n\"Did he ever make up things about me? And weren't you upset that he was looking at me like that?\"\n\nTim shrugged and smiled apologetically. \"No, he never said anything about you when I was around. Besides, I think everyone knew you were really good at not showing anything, even on the hottest days, so he didn't have much of anything to make shit up about...at least until a few weeks ago.\" \n\n\"What happened a few weeks ago?\"\n\n\"He spent all those years working around you every day and never got even a little peek of something he shouldn't have. And then you came up to the pool in your bathing suit...\n\nGwen was shocked. \"How do you know all this? And you said that bathing suit wasn't too revealing! I told you I should have stayed in the house!\"\n\n\"Your suit's not revealing at all,\" Tim said with a laugh. \"But it still showed more of you than he's ever seen. And I only know because I heard him talking to Andrew a few days after. They didn't see me in the parts room. He seemed real happy about hauling his ass up to the pool and how what he had seen gave him some pretty detailed guesses at what he hadn't.\" Tim thought back to how Andrew's guess as to the style and volume of Gwen's pussy hair had been much more accurate than Walt's. \"By the way, Andrew thinks you're hot, too.\" \n\nThe Lady was both horrified and insulted at thought of Walt and Andrew discussing her in a less than professional manner, but the Slut awakened from her orgasm-induced stupor to purr seductively. The idea that the young apprentice in particular found her pleasant to look at was exciting news. I'll show you mine if you show me yours...the Lady hushed her. \"Well, thank you very much for that information,\" Gwen huffed. \"I'll be sure to wear my winter jacket tomorrow when Walt comes by to finish his retirement paperwork!\" \n\nTim was silent for a moment. \"Or,\" he began slowly, \"you could go the other way. Maybe show him a little bit more as a going away present.\"\n\n\"Timothy Allen Nelson! Are you suggesting I expose myself to one of our employees?\" \n\n\"Our retired employee,\" he corrected. \"He's leaving town on Wednesday. Might be fun to give him a little something less than your bathing suit to remember you by.\"\n\n\"What do you expect me to do? Meet him at the door naked?\" \n\n\"I think showing him that much might give him a heart attack, but I'll let you decide just how much you want to let him see. Maybe leave some parts for his overactive imagination to fill in?\" \n\n\"He'll tell everyone!\"\n\n\"And everyone will think it's one of his bullshit fish stories. Nobody's gonna believe it for a second.\"\n\n\"I'm going to be there alone with him! He might attack me!\"\n\n\"I doubt it. He's all look and talk, no action. Always has been. He's afraid Norma would turn him into a gelding if she ever found out.\"\n\n\"I can't believe you're suggesting your own wife expose herself to another man!\" \n\n\"What can I say? Andrew's right. You're hot. It's kind of a turn on knowing other guys can only look at what I get to touch. Sorry, I know I'm sounding like a pig, but I guess it's a quirk of mine. I've always wished I could show you off a little. Besides, it wouldn't be the first time you've given a guy a peek, right?\" Gwen wanted to reply that the dressing room had been an accident, but she knew that would not ring true and fell silent at this reminder of her recent history. \n\nThe ride home was quiet. The illicit thrill of being naked in front of others as well as the display that other couple had put on had culminated with her shamelessly rutting with Tim out in public (not quite in public, the Slut grumbled), and then her own thunderous orgasm in the cockpit of their boat. Her arousal had subsided with her release, but Tim's suggestion had given it an excuse to flare to life again. And now her lust was mixed with doubt, worry and guilt. She had displayed herself to others, had watched a complete stranger being pleasured, and had made no effort to hide the fact that she had serviced her husband. And now the dilemma of perhaps a more personal retirement gift for Walt...this couldn't be normal! Even Natalie would have to agree! \n\nIt worried her more that as far as she had gone with this, she wanted to go further. She would have liked to let Bob look all he wanted, maybe even open her legs to him; but the idea of being \"proper\" was a tough one to shake, even when there was no clothing to hide behind. She would have loved to watch how the pregnant woman safely 'did it' while satisfying her partner, or to see if the woman's husband took her desires and the baby's well-being into account, and it would have been so scandalous to have returned the favor and let the couple watch Tim make love to her! Of course, they would likely not have had any interest in two old people rolling around in the sand. But all that was way, way outside the limits of decency, and if any of her perverted behavior was ever revealed to her family and associates...\n\nShe and Tim made love that night. The Lady had managed to quell the fires of arousal and her heart was not in the act, but her husband's erection had led the way as he came out of the bathroom at bed time despite their activities that afternoon (or perhaps because, the Slut suggested), and she took care to make sure he was satisfied before they slept. There would certainly be no orgasm for her; that was the Lady's punishment for her inexcusable behavior on the beach and lewd thoughts beyond, and she enforced it with a mix of guilt and remorse that Gwen had not felt in a while. Still, the dreams returned that night. They were a curious mix of snippets from old dreams mixed with utterly fantastic and impossible situations stemming from her adventures; jumbled fragments of remembered people, places, and what-if situations. \n\nGwen awoke early, vaguely aware that her dream-fueled lust had regained the upper hand during the night. She knew she was ready for some more of...that, whatever that might be. Maybe she could take the edge off with Tim when he awoke. Maybe a tongue in the right spot might help him get up...The Lady vetoed that plan. Let him sleep. He has a long day of work ahead of him. \n\nHe awoke at the normal hour, enough time to get ready, not enough to make love, Gwen thought sourly. Maybe I can sneak back here after the trucks are gone and get out my toys, to remove the edge before Walt is due to arrive so I'm not tempted to act improperly.\n\nNo, I can't do that either. It's Eric's first day. We need to do his new hire paperwork, and Tim's going out with him on appointments today, so they can't leave until everything's finished. The Slut suggested asking Eric to wait in the shop while Gwen dragged her husband to the office couch upstairs for some satisfaction. Gwen dismissed the notion with a nervous laugh, but not before imagining herself with her husband between her legs while the new hire waited patiently downstairs. \n\nTim barely beat his new employee to the shop that morning. The first hour or so was spent introducing him to the others as they straggled in, then familiarizing him with the routine before he sent the young plumber up the stairs to begin filling out all the necessary forms. Gwen's sexual fervor was temporarily quieted as she concentrated on the tasks before her, although the Slut insisted the young man should strip down for an exam before he was allowed to leave. It was nearly ten o'clock before Tim and Eric finally pulled out of the yard on the way to their first job. Gwen glanced at the clock and knew that her plan for self-satisfaction would have to wait. Work before pleasure, and there was still plenty to do before Walt was due to arrive around noon. Behave yourself while he's here and I might allow a little self-abuse and degradation after he leaves, the Lady bargained. \n\nWalt kept popping into her mind as she worked. He had been here a long time and she had grown fond of him despite his crude nature and gruff ways. His feelings on the female form and the pleasures he expected women to provide came as no shock, although it would surprise her greatly if his own wife saw things the same way. She also knew that while Walt called her 'boss', albeit in a barely-concealed patronizing tone, to him she was first and foremost a member of the weaker sex. Her husband's revelation of Walt's interest in what she had hidden beneath her conservative dress all those years had not been a shock either. In many ways, Walt exemplified the traits Gwen's mother had told her to expect from men, especially working class men.\n\nWalt probably would have had a stroke if he had seen me on that beach yesterday, she mused. Would have served him right. Her musing began to coalesce into something more serious, something more thought out. The plan that was forming was no doubt a product of her current sexual frustration, and was risky, stupid, and downright dangerous. On the other hand, Tim was most likely right-it could be fun to see if she could fluster him, and Walt probably wouldn't object to being flustered under those conditions. It might even be a nice going-away present. Not to mention great payback for all those years of being ogled.\n\nGwen turned off the air conditioning and hurried back to the house and her bedroom closet. Their uniform company had given her a woman's blouse with the Nelson Plumbing logo on it as a sample some time back\u2014she had considered it too risqu\u00e9 back then, with its wide open short sleeves and fabric more sheer than the customary denim. It might be just the thing today. Ali's closet was next and the golf skirt she had worn on that trip to the supermarket a few towns over was removed. Her sole concession to the Lady's plaintive moaning was a sweater she might throw on if she chickened out, or worse yet, Norma came along for the ride. \n\nShe carried the outfit back to the office, debating for the next half hour whether or not to actually go through with this insane plan. He'll tell everybody what he saw, the Lady screamed. The slut was quick to repeat Tim's counterpoints. He's leaving town in two days, and even if he tells people, no one's going to believe him. Everyone knows he's quick with the tall tales, and this would be so unbelievable. What if he tries something? The Lady argued. You'd be helpless. He's all talk, the Slut countered. He knows if Norma found out, it would be bad news for him. Mind made up, Gwen stripped. Slacks, long sleeve shirt, and sensible shoes were replaced with the golf skirt, blouse, and sandals, only the now-customary high-cut underwear she had put on that morning left in place. A peek or two, not a full show, she reminded herself. \n\nGwen fiddled with the buttons on her blouse, playing with various combinations until she settled on an open collar down to the button holding the shirt together across the top of her breasts. She wondered whether she was being too obvious. \n\nThe sound of crunching gravel outside ended the debate. Gwen hurried to the window. Walt, and only Walt, was slowly easing his bulk out of the parked truck. With a deep breath and trembling knees, she made her way downstairs to meet him. \n\nShe was waiting for him as he entered through the side door. \"Walt, congratulations on your first day of retirement!\"\n\nThe big man stopped short. The slacks and long sleeve shirt he had known for so many years, rain or shine, hot or cold, had been replaced with bare arms and legs. \"Uh, hi Gwen, thanks. It seems pretty strange.\" Not retirement, he thought. This seems like just another day off. But seeing you dressed like that is definitely not what I expected when I woke up today. \n\n\"I'm sure it does! You and Norma are heading out Wednesday, right?\"\n\n\"Uh, yeah. Maybe even tomorrow, if we can get a couple of things done.\" He tried to not be too obvious about checking out the strange woman with the plunging neck line in front of him. Fucking great, Gwen, he grumbled to himself. I'm done and you start dressing like this? \n\n\"Well, let's get your paperwork done and get you on your way as quickly as possible. Come on up to the office.\" Gwen hurried up the stairs, stopping about halfway up before Walt had even reached the first tread. He looked up at the waiting woman and nearly stopped breathing. He could see up underneath the hem of her skirt, nearly to where the backs of her thighs flowed into that cute little ass he had always imagined to be under her shop foreman's pants. \"Sorry, but the air conditioner finally died,\" she said looking down at him. It's a little stuffy up here, so I've been dressing down to stay cool.\"\n\n\"Uh, that's okay, I don't mind. And your outfit looks nice,\" he hurriedly added. \n\n\"Why, thank you sir.\" \n\nC'mon, go up another stair or two, Walt begged. Lemme get a better look at what's under that skirt. Gwen held her ground, looking down at him expectantly, and finally the big man gave in, trudging upwards. She hurried the rest of the way up as he tried to catch a glimpse underneath the swirling fabric, imagining he saw asscheeks and the darkened space between them before she reached the landing and disappeared off to the left. \n\nHe finally reached the top of the stairs and Gwen offered him the chair across from her desk. Yer right, kinda warm up here,\" he volunteered, pulling a handkerchief from his pocket to wipe the sweat his brow was accumulating from the still air, his climb, and Gwen's attire. \n\n\"Can I get you something to drink?\" Gwen offered, a sly grin on her face. \"You're retired now. Would you like a beer?\" \n\n\"I guess I can do that now, huh? That'd be nice.\" \n\n\"Be right back.\" Gwen hurried back down the stairs, Walt noting his boss's chest seemed to have more of a bounce than he had ever remembered seeing before. Must be the shirt. Doesn't strap her down as much as that armor plate she always wears. I dunno what the fuck is goin' on here, but if I didn't think it was impossible, I'd swear ole' Gwen Nelson done took that stick outta her ass! Maybe Tim got tired of her stuck-up shit and fucked some sense into her after his party Saturday. Or maybe before\u2014she did seem pretty happy all night.\n\nHe was focused on the stairs at the sound of her return, noting just how much the sheer fabric jumped and shifted as Gwen bounced up the steps.\n\n\"A beer for you, sir,\" she said setting down the can before him. \"Water for me, I'm afraid. I'm still on the clock for a few more years. I'm really sorry about the heat,\" she apologized, delicately grasping the shirt between her breasts and pulling it away from her body a few times in an attempt to fan herself. Walt did his best not to stare at the bare flesh that was being flashed like a deer's tail. \"Alright, let's see what we have left and get you out of here as quickly as possible.\" Gwen stood behind her side of the desk and selected a paper from the top of a nearby pile. \"Alright, this\u2014\" she bent over and placed the paper before him, gently putting a finger on the first spot to sign \"\u2014is for Social Security.\"\n\nWalt looked down to where her finger lay, then up for confirmation. His gaze stopped for a fraction of a second at the gap that had opened between her shirt and chest\u2014he could swear he saw the side of her breast dangling in there, unencumbered by a bra\u2014 Holy fuck-tit flesh!-before long years of practice forced his eyes up to avoid being caught peeking. Gwen smiled at him expectantly and gave no indication he had been caught. \n\nWalt peered intently back down at the paper, willing himself not to try for another look at the tits practically hanging free just inches from his face. Gwen held her pose as he initialed and signed all of the necessary blanks on the paper. Satisfied, she straightened and took the document back.\n\n\"One down!\" The next piece of paper from the stack slipped through Gwen's grasp and fell to the floor behind the desk. She quickly turned and bent at the waist to retrieve it, the hem of her dress tantalizing the man on the other side as it rose high up her legs, enough to reveal all of her toned thigh. Could probably suffocate somebody with those legs if she ever wrapped 'em around their head, Walt thought with amusement, reaching for his beer and feigning disinterest as she straightened with paper in hand. He was ready for her this time, his eyes already at her expected chest level as she bent to explain the document to him. He was not disappointed, most of Gwen's right breast now on display under her gaping shirt, only her nipple obscured by his viewing angle.\n\nThe image of her hanging breast was burned in his mind as he turned his attention to the paper in front of him. 32c's, he decided with the confidence of a man who had spent more than a few hours in the county's strip clubs. Small, but I'll bet they don't sag. His imagination suggested pink nipples with quarter-sized areolae capping those little beauties as his sleeping length stirred.\n\nHe managed another peek after signing in all the appropriate spots and allowing her to whisk the paper away from him. It was put back on the pile, and Gwen turned her back to the appreciative man. He didn't have to pretend to be looking somewhere else as she again bent at the waist and opened the bottom drawer of the cabinet behind her. Walt's beer stopped midway to his lips as the skirt again lifted high up her thighs, revealing the bikini panties beneath. They were doing a noble imitation of a thong, the dark-blue fabric bunching up between her cheeks, the dark line in stark contrast to the flesh of her pale buttocks. Walt's shifted uncomfortably in his chair as his cock pushed against the roll of belly fat holding it down, his little head suggesting this display was intentional and she wanted it even as his calculating, cautious side thought that too good to be true. She's been wearing the old lady clothes for so long she doesn't even know how to keep herself from showing off in this outfit. He had plenty of time to admire that beautiful ass and still be looking somewhere else when she straightened and turned. ",
        "The document was placed in front of him and she again bent to show him the places to sign. He risked a slight shift of his eyes upward and was rewarded with her right breast in all its glory, capped with the perfect little pink nipple he had imagined. A swirl of whipped cream on it would make for a helluva dessert and he briefly imagined using his tongue to clean them off. He managed to sign in all the proper places and still got in another glance before she took the paper and stood. Gwen bent over the filing cabinet again and Walt was given plenty of time to imagine what delights lay beneath that thin strip of fabric running between her asscheeks and through the slight spread of her thighs. No stray hairs that he could see, although the thought of Gwen Nelson shaving down there was not really considered\u2014hell, the only bare pussies he had ever seen was in magazines and on strippers. Wives and mothers didn't shave their shit, no matter how much Andrew said different. His cock filled his mind with thoughts of bending her over like that while he drove it home, ignoring the fact his sizeable stomach would likely make that very difficult. \n\n\"Last one!\" She announced brightly, turning and placing the document before him. Walt took his time, pretending to read, sneaking quick glances at the left tit now hanging in almost-plain sight. Finally satisfied, he signed one last time and allowed her to take the paper away. \n\n\"And now, you are officially retired,\" Gwen said to the man doing a poor job of keeping his eyes off her chest. \"Well, once I send the paperwork in, of course. But you don't have to come here any more.\" \n\n\"I'll miss coming here,\" Walt replied, finding her eyes. \"Maybe I'll come back and visit when we're in town.\" \n\n\"You better,\" Gwen said sternly. \"I'll want to hear what Tim and I can look forward to in retirement.\" \n\nWalt was reluctant to rise, afraid the bulge in his crotch would give away what he had been viewing, doubtful what Norma called his dunlap (because \"his belly dunlap over his belt\") would be an effective shield. The smiling woman in front of him was expecting him to move though, and he slowly rose, turning slightly away from her. She let him lead the way to the stairs, following him down the first couple of steps. \"Whoops\u2014sorry, be right down,\" she called over her shoulder as she turned and hurried back up to her desk. Walt cursed himself for not being quick enough to turn and get another look at that delicious ass as it retreated and he continued to the bottom to be ready for her reappearance. \n\nGwen was back at the top of the stairs a few seconds later, intently studying one of the forms. From his vantage point, Walt had a perfect view up the front of her skirt and between her legs, only the dark blue panties keeping him from gazing upon the gates of paradise. \"No, no, you're fine,\" she said without taking her eyes from the paperwork. \"Everything's been signed.\" Paradise was lost and the document returned to her desk. Gwen descended the stairs, the big man glued to his spot until she reached the bottom. \n\n\"Well, uh, I should goin',\" he mumbled, looking down at her.\n\n\"Be safe. Come back and visit. Hopefully we'll have the air conditioner fixed.\"\n\nChrist, I hope not, he thought. I wanna see how you cool off next time. Gwen opened her arms to offer him a hug. Walt hesitated, unsure about her first outward sign of affection since he had started here all those years ago. \"Uhh, I'm kinda sweaty,\" he offered, trying to figure out what the hell she was doing. \n\n\"So am I.\" Her arms were around his massive midsection, and he tentatively returned the hug, his hands on her back obstinately confirming what he already knew\u2014that she was braless. \n\nGwen released him. \"Give our best to Norma.\" \n\n\"I will.\" And then I'll give her mine, he thought. A roll in the hay is gonna be real nice. 'Course, it might have to wait until tonight. Norma might start askin' questions if I start lookin' to get laid in the middle of the afternoon. \n\nGwen walked him out to his truck, waving until the bumper disappeared out of sight down the driveway. The remaining buttons on her shirt were undone and the garment quickly pulled off even as the sound of Walt's truck accelerating on to the road echoed from beyond the screen of trees. \n\nThe breeze against the wet skin of her bare torso had a tingling, sensual feel to it, no doubt inspired by the thoughts of what she had just done racing through her mind. The Lady nagged that she was fortunate Walt had not drawn his own conclusions to the show and that, despite his earlier assertions Tim would not be pleased, but the Slut crowed triumphantly. It was one thing to flash total strangers, but exposing herself to someone she knew, someone who knew her, brought the excitement to new levels. \n\nThe skirt slipped from her waist and puddled on the floor two steps inside the kitchen, and Gwen paused just long enough to avoid tripping as she stripped off her panties and discarded them in the hallway. She couldn't be bothered to remove her sandals, hurriedly retrieving the rabbit from her nightstand and flopping back onto the still-made bed, not caring that she was likely tracking dirt on the duvet. \n\nGwen thumbed the switch and laid the humming length down her furrow while her free hand gently grasped a breast. It was only a moment before the sensation against her clitoris became too much and she withdrew the length from her slit. She had other plans for it, and her opening willingly gave way to the cool bulbous head as it bulled through. Gwen buried the vibrator to bring the ears of the tickler up against her suddenly neglected clit. She jerked and shuddered, fighting to maintain the sensations coming from between her legs, her impending climax roaring like a wave in her ears as it approached. With a crash, it broke over the splayed woman, thighs clamping together convulsively while her hand cruelly squeezed her breast. Gwen's eyes were squeezed shut against the intense assault on her nerves, but her mouth was open. The roaring in her ears prevented her from hearing the 'oh\u2014' she couldn't stop from escaping. \n\nAnd then it was over. Gwen rose and trudged back to the shop office on unsteady legs, only performing a cursory check as she stepped out of the kitchen door naked and covered in orgasm-induced sweat as to whether anyone might have returned during her self-pleasuring,. The air conditioning was running when the crews returned several hours later and Gwen made sure everyone could see she was dressed as she had been when they left that morning. There would be no evidence that would back up any story Walt might tell. \n\nShe had dinner waiting when Tim finally made his way over to the house. They sat and ate as they had so many evenings before, catching up on the day's events, Gwen listening appreciatively as Tim discussed the wisdom of Eric's hiring. \n\n\"So, one employee in, one employee out,\" he said, cutting a piece of chicken. \"How did paperwork with Walt go?\"\n\n\"Fine,\" Gwen replied, taking a sip of tea. \"I, uhh, did what you suggested and, well, you know...\"\n\nTim's knife stopped and he looked up. \"You mean, what we talked about yesterday?\"\n\n\"Yes...you were serious, right? You said you wanted me to?\"\n\nTim ignored her question. \"In the office, while he was signing papers?\" Gwen nodded.\n\n\"How'd you do it?\" \n\n\"Well, I had a short-sleeve blouse that\u2014\"\n\n\"Show me.\" Tim rose from the table. \"Go get dressed like you were when he was here and I'll meet you over at the shop.\"\n\nGwen rose, still uncertain. \"You're not mad, right?\"\n\nTim laughed. \"No, I'm not mad at all. Just surprised\u2014I didn't think you'd do it! You're getting to be full of surprises! Go on, get changed.\" He looked at her expectantly until she turned for the hallway. \"Meet you over there,\" he called out over his shoulder, heading out the door. \n\nGwen took her outfit out of the dirty clothes, the shirt still slightly damp from her sweat. She dressed, hesitating on her choice of what buttons to leave undone and what panties to wear, unsure if it was a good idea to show Tim just how much she had revealed. The Slut sagely preached complete honesty, and Gwen relented. She made her way across the yard to where a light shone from the side door. \n\nTim was waiting inside for her. His eyes widened a bit in surprise, and the Lady quickly announced that she had made a serious mistake following the Slut's advice. \"Too much?\" she asked weakly.\n\n\"No, you look great, really nice,\" her husband replied with controlled enthusiasm. \"A lot less than what he's ever seen you in before, but still more than what a lot of our customers answer the door in. Tim walked by her to the door. \"So he came in here? Where were you?\" \n\n\"I was at the bottom of the stairs,\" Gwen replied, trading places with her husband. \"Once we said our hellos, I went upstairs and he followed.\" She began to climb, stopping halfway up to look back down where her husband was now standing at the bottom, grinning. \"We did the paperwork up here,\" she called down, wondering if he intended to join her. \n\n\"Did you stop there?\"\n\n\"I guess, why?\" \n\n\"I can see a beautiful pair of blue panties from here. Did you know he could see them?\"\n\n\"Maybe, I wasn't sure...\" Gwen hurried up the stairs, embarrassed to admit she had been hoping for just that. Tim hurried up behind her. \"I had the air conditioning off. I told him it was broken and that's why I was dressed like this\u2014I was trying to stay cool.\" \n\n\"Good plan,\" Tim agreed. \"So I guess he sat on one side of the desk and you sat on the other?\"\n\n\"Well, he sat and I stood.\" Gwen walked behind the desk, and Tim took the seat across from her. \"And then I started going through the papers with him, showing him where to sign.\" She took a piece of paper and set it down, then mimicked her pose. \n\n\"Holy shit, Gwen, I can see right down your shirt!\" \n\nShe looked down, already knowing the truth\u2014she had practiced it before Walt had arrived. \"Can you see-everything?\"\n\n\"Everything.\" He reached out and slid his hand between shirt and skin, gently palming the dangling breast, sliding the stiffening nipple between two fingers like the stem of a wineglass. \"Did you show him anything else?\"\n\nGwen was reluctant to move away from his touch, but felt a greater need to continue the reenactment. She backed away and stood. \"I accidentally dropped the next form and I had to pick it up.\" \n\nThe skirt rose, and Tim chuckled. \"I actually kinda feel sorry for that poor bastard. I'm havin' a hard time sitting comfortably.\"\n\nGwen put the retrieved paper on the desk and resumed her position while Tim gladly slipped his hand back inside her shirt. \"Did you show him anything else?\" \n\n\"I had to get some things from the filing cabinet,\" she replied again reluctantly moving away from the hand on her breast and turning around. \n\n\"God, what an incredible ass,\" Tim breathed appreciatively. \"He didn't try and do anything, right?\" \n\n\"No, he just fidgeted and sweat a lot. It was pretty warm up here.\"\n\n\"I'll bet he did. So you kept doing that until he was done signing stuff?\"\n\n\"Yes, and then I walked him downstairs.\" \n\n\"Same way? You at the top, him at the bottom?\"\n\n\"I suppose, yes. I had to go back to check and make sure he had finished a form.\"\n\n\"The paperwork's gotta be right,\" Tim agreed with mock seriousness. He rose and made his way down the stairs. \"Come show me where you were.\" \n\nGwen waited until the sound her husband's boots on the wooden steps became a thud on the cement pad at the bottom. She moved to the top of the stairs and stood. Tim stared back up at her, the look on his face what she could only describe as confident lust, and began to slowly make the climb back up. He stopped several treads down, his face even with her crotch. \"A little piece of underwear,\" he said, putting one knee on the next stair and leaning forward, \"was the only thing keeping him from seeing that beautiful pussy.\" Tim reached under her skirt, hooked his fingers into the sides of the offending garment, and pulled them down. \"Yup. Beautiful.\" He flipped up the front of her skirt and bent forward, his lips gently nuzzling her cleft. Gwen shuffled forward a bit, anxious to give him better access and his tongue began to probe. \"You're wet,\" he said. \"I'm gonna guess you liked all this.\"\n\nGwen looked down at the man under her skirt, and the staircase behind him. As much as she was enjoying his attention, she didn't relish the thought of explaining the circumstances under which her husband had fallen down the stairs. \"Tim, we can go back to the house, if you like,\" she offered, backing away, giving him space to join her on the landing. \n\nHe smiled up at her and climbed the last few stairs to join her. \"Uh-uh.\" Gwen was gently spun away from her husband. \"Go.\" His hands on her shoulders guided her back to her chair, stopping and spinning her back once she stood between her chair and the desk. She could smell the sweat, PVC cement and acetylene imbedded in his clothes as he removed hers and gently lay her back on the surface behind her. Tim brought the chair in front of where he legs now hung, sat, then grabbed both ankles and propped them up on the arms of the seat. Satisfied, he resumed his oral explorations. \n\nHis patient roving hands and tongue and the thrill of being taken in such a commanding way by the man she loved brought her to the edge of her second orgasm of the day. She was close, very close, when the hands and tongue were removed, his stubble teasingly scratching her inner thighs. Gwen looked up, eyes begging, at where her husband now stood. \"Please, just a little more!\" \n\nHis answer was his grin and the unbuckling of his belt and pants. With a push of his boxers he released hid very ready erection, swaying just inches from her sex. My cunt, she corrected. That's the right word for this occasion.\n\nTim's first thrust triggered her climax, her walls allowing him access before clenching spasmodically around the invader as he buried himself in her. He would normally hold still to avoid being a potential distraction when Gwen would shudder through her little deaths, but he could not bear to afford her that courtesy today. He pounded harder as her breathing stopped and her body tensed almost painfully; pulling her back onto his cock as she slid across the wood surface after she went limp with one final convulsion. Gwen came back to the here and now at the sound of Tim's loud grunt and the feel of his body between her legs trying to get just a little deeper as he filled her with his seed."
    ],
    "authorname": "BusyBadger",
    "tags": [
        "flashing",
        "underwear",
        "husband",
        "wife",
        "teasing",
        "masturbation",
        "employee"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-13"
}