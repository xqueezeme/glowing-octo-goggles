{
    "title": "Donor",
    "pages": [
        "Part 1 \n\nI had been a sperm donor for four or five years - visiting the nearby fertility clinic three or four times annually to jerk myself off into one of their little plastic cups - when the letter arrived.\n\nThe need for sperm donors had only been brought home to me when friends of my older sister had trouble getting pregnant and found that their tests revealed it was the husband's non-viable sperm that had been the cause of their difficulties. But although at first they were devastated by this news, they said that they had been made to feel just a little better by being told that this was becoming an ever more common problem in the community. It seemed that at that stage none of the researchers was really sure why this was the case; some thinking that the increasing prevalence of the ever-widening range of chemicals in our society was the cause, others that it was just a problem that has always been in the male genome and that it was only because we were actually researching the problem that we were finally discovering it existed.\n\nThey went on to say that whatever the cause or causes, fertility clinics were always on the look-out for healthy young men to act as regular sperm donors, and perhaps fired by youthful idealism, I took myself off and registered with them. Having been given a thorough medical check and found to be free of any 'nasties' I made my first 'donation' and when it was found to be full of healthily vigorous little 'swimmers', I was accepted. Since then I have, as I said, taken myself off there three or four times a year and hopefully done my bit for at least some unfortunately infertile couples.\n\nThe contents of the letter were innocuous enough - advising that some extremely generous, and anonymous donors had endowed the clinic with funds sufficient for them to build a new and rather specialised research facility that would enable them to further investigate the more subtle variations in male sperm characteristics - and in the process of doing so, perhaps discover at least some of the causes of the increasing non-viability of so many men.\n\nThe letter went on to say that as a long-term and regular donor I had, if I agreed to be, been selected as one of a small group of men who would then be tested in a range of new 'donation' procedures - the initial purpose of which was to discover if the quality of our sperm actually varied under such conditions. I was then given a tentative appointment date and time for a further briefing and asked to phone to confirm whether that was or was not, acceptable. Naturally I was intrigued enough to at least want to find out a little more about the proposed research, and its methodology, so I confirmed the appointment, and a week or so later, presented myself for the briefing.\n\nHaving confirmed the basic details on my records file the receptionist handed me over to two doctors, a male and female both apparently in their late thirties, who took me through to a very pleasantly furnished room where we were able to sit and relax in three of the several comfortable arm chairs. They introduced themselves and said that they would prefer it if we could all speak on a first name basis - and that theirs were Rosemary and Victor. Rosemary outlined the overall purpose of the research programme; which was to discover whether or not an individual's sperm varied from time to time - which would require me to present myself once a week for a period of approximately six weeks from the start date of my particular programme. Then that they were also researching whether or not the quality of the individual donor's sperm varied in quality even within each ejaculation - which would require them to not only analyse each donation in much more detail than usual, but to also try to obtain the maximum amount of ejaculate on each occasion.\n\nShe explained that these issues had been much on their mind for some time, but that until they had received the fortuitous endowment from a wealthy couple that the clinic had finally been able to treat successfully, they had only been able think about how such research might be carried out. But once they had received the funding they had been able to not only plan and construct the building but to also design and develop the equipment they believed they would need to enable them to achieve the very best possible results. She went on to say that her primary role was in the technical and laboratory processes involved in the research, and that she would then leave her colleague to explain to me what she called the 'nuts and bolts' of the procedures I would be letting myself in for if I agreed to sign myself on as one of their team.\n\nThen, as Victor placed a large folder down on the table-top, Rosemary stood and asked if I would like some coffee, and when I said that I would, she went across to one corner of the room to prepare it.\n\n'As Rosemary told you Brian, we not only want to analyse a much greater proportion of each donor's semen than is usual in all such clinics, we also want to try to obtain the maximum amount of it each time he visits us.' Victor said. 'Now a small amount of quite separate research has seemed to back-up the sometimes quoted belief that the average male is capable of producing a larger volume of ejaculate if he has been kept in a state of high arousal for longer than might be usual in most sexual acts. Believing that could well be true we have designed this clinic's facilities to enable us to do exactly that; raise your level of sexual arousal, and then keep it there for what might sometimes seem to be a rather longer time than you might like.\n\nNow at first glance what we have here might seem a little odd to you, and to some they might even seem offensively intrusive - if so, you are of course quite at liberty to leave the programme at any time you wish.' As he spoke Victor opened the folder and showed me the first of a series of pictures that at first made very little sense to me.\n\nAt first glance it looked like a fairly standard, padded massage table, but one that had for some reason had a long but narrow slice taken out of one end of the middle of it. 'During these trials Brian you will not be expected to simply masturbate with just a few girlie magazines to help you along - you will be lying face down on such a bench, and be able to watch various kinds of videos that will be showing on a TV screen set in the floor beneath you. The reason for this channel down the centre of the top half of the bench is so that your genitals can protrude down through it - and they will be connected to a specially designed electro-stimulator operating beneath you, and that same piece of equipment will also be used to collect your eventual discharge.\n\nAt that stage Rosemary returned with three coffees and as she placed mine in front of me, she said. 'The electro-stimulator has of course already been thoroughly tested Brian, and -' she added with an almost wickedly mischievous smile, ' - it must produce rather dramatic effects because I understand the researchers who ran the trials were all queuing up for a second and third go on it!'\n\n'That's as maybe Rosemary.' Victor broke in. 'But Brian is not just here for some sort of mechanically assisted relief, the very fact that he is talking with us not only demonstrates he understands the serious nature of this work, but also his desire to assist us in a practical way.'\n\nAnd of course he was quite correct, that had been my primary motivation - however, the cheeky grin Rosemary had given me while telling me of the apparent effectiveness of the electro-stimulator certainly gave the whole concept a rather more excitingly interesting edge. But even as the thought of what such a piece of equipment might actually do to me was drifting around inside my head, I realised that Victor had continued on with explanation of what I could expect if I signed on to their project. 'In addition to the electro-stimulator beneath you there will be another, much smaller of course, inserted into your rectum, to provide similar stimulation to your prostate gland. Have you ever had a rectal examination Brian?' he asked.\n\nWhen I nodded that I had, he continued. 'Well I can assure you from my own personal experience on this particular aspect of the business, that you will find this part of what we plan to do much, much more pleasant than that procedure would have been for you. I don't know if you are aware of the sensitivity of the prostate to quite gentle pressure, but in fact many men swear that they are able to achieve an orgasm from just such stimulation. Now whether that is true or not, having already submitted myself to this piece of apparatus I can assure you it definitely gives you a stronger one! And that is of course exactly what we will be after from each of you.' he added before continuing to explain what else would be expected of me.\n\n'Before we start we would require you to complete a rather lengthy questionnaire form Brian - not covering your medical and physical details, we already have those on file of course - but one that delves rather more deeply into your personal sex-life. Some of that will be used, anonymously of course, to provide a profile of each of the men involved in the research, but other parts will be used to assist us in preparing a video that is tailored to your own personal tastes, so that we can ensure we provide you with the very best chance of achieving a state of the highest possible sexual arousal.'\n\nEven as Victor was continuing to show me pictures of the components of the apparatus and explain the other, but what were for me the less significant intricacies of his part in the overall programme, I found myself thinking about what I might have quite unwittingly stumbled into. If I understood them both correctly, by allowing myself to be signed up for their scientific trials I might not only be contributing to a better understanding of some of the problems besetting many couples baby-making attempts - but could also look forward to experiencing at least half a dozen of what might prove to be some the most intense orgasms I might ever experience.\n\nSo, did I want to put myself in such a position? You bet I did!\n\nThen as we continued sipping our coffees the three of us spoke in more general terms about their expectations as to the duration and hoped for results of the research, and then, having taken the questionnaire form to fill-in and return a few days later, we shook hands and I left.\n\n<p align=\"center\">*****</p>\n\nI left it until that evening to take out and settle down with what turned out to be a much more voluminous questionnaire than I had expected - but a quick, somewhat cursory glance through it reassured me that I would in fact only need to complete just one section. It had obviously been designed to cover as many aspects of male sexuality as possible, with separate sections for; homosexual, bi-sexual and a range of other activities that I frankly preferred to not even think about. However, even just the heterosexual section was large enough to keep me busy for the best part of an hour.\n\nThe clinic not only wanted to know such things as; my preferred type of sexual partner - blonde, brunette, red-head, Asian, women of colour, etc. - but which of a long list of sexual activities I most enjoyed us participating in. There was a simply enormous selection of such things to choose from; ranging from mutual masturbation, through a wide variety of every imaginable physical position, then a long list of much more fetishised behaviours - many of which I had never even heard of. And by the time I had finished ticking what were for me the most appropriate boxes I was beginning to think that although I had always considered myself to be a rather creative lover, if the large number of un-ticked boxes were any indication, I might have in fact been rather too unimaginative.\n\nThey also asked as to what time of day I felt I considered myself to be at my sexual peak - and whilst I had always enjoyed what I liked to think of as a 'morning glory', and thought there was no better way of spending an evening than in a series of long, slow sessions with a similarly like-minded woman, I knew that my most explosively dramatic climaxes had usually come when I had been able to participate in an 'afternoon delight' - so, as my work enabled me to take the odd afternoon off, I ticked that little box.\n\nHaving returned the form, and while I waited to hear back from them, I began thinking about what I would be saying to the young woman I was currently seeing as to why our sexual couplings would from time to time over the subsequent weeks, be interrupted. Victor had explained that one of the few demands the clinic would place on me was that I desist from any form of sexual activity - including masturbation - for at least forty eight hours before each of my appointments with them. So although she and I weren't actually living together, we were seeing each other, and more often than not, having sex most days of the week. After toying with a variety of excuses, each sounding more ridiculously inept than the one before it, I decided that perhaps it was a case where honesty might well be the best policy. Of course there was a risk that the idea of me being a sperm donor might either embarrass or offend her, and perhaps even the thought of me jerking myself off into a little plastic cup could turn her off - but, I thought, surely most women should be able to think a little more highly of a man who is prepared to do his bit to help other, less fortunate people.\n\nAs things turned out she was quite blas&eacute; about it all, and in fact I even got the sneaky impression that she might be thinking that a couple of nights a week free of my demands, was a bit of not totally unwelcome news.\n\n<p align=\"center\">*****</p>\n\nIt was about ten days before I received a confirming letter back from the clinic, which set out my schedule of appointments during the following six weeks - and so, one afternoon a week later, I presented myself to the receptionist at their front desk.\n\nVictor came out a few minutes later, greeted me, then took me down a corridor to a room that was dominated by the real life version of the bench I had seen a picture of in the folder he had showed me at our previous meeting. 'This is Kelly.' he said, introducing me to a young woman standing beside it. 'She will be taking care of you Brian.'\n\nRight then my very first thought was - 'Why the hell do they need all the expensive equipment they've told me about?' - Kelly was an absolute stunner, and if she were in the mood to, could herself have quite easily given me the most massively eruptive ejaculation!\n\nShe was tall, only just a little shorter than myself, with softly waving light-brown hair, a face that was made beautiful by its clear and brightly flecked hazel eyes, plus a cute little turned-up nose and a pair of full, dark ruby-red lips. Although much of the rest of her was cloaked in a knee-length white laboratory coat, it fitted her so well that it clearly outlined the shape of the slim but decidedly curvy body beneath it, and from what little I could see of her legs, they looked just as phenomenal as the rest of her.\n\n'Hello Brian.' she purred in a vibrant and darkly seductively voice. 'Let me say just how much we appreciate you helping us in this most important research. And if there is at any time anything I can do to make it either less embarrassing, or more pleasant for you, please don't hesitate to tell me.'\n\nI wondered if Victor hadn't been standing there with us, would I have had the nerve to tell her what thoughts I immediately had as to how she could very easily make it not only pleasant, but positively exhilaratingly wonderful for me! However, he was there, and as I reached out and took Kelly's soft, proffered hand, I merely mumbled something ineptly polite in reply.\n\n'Each time you visit us we will ask you to first take a shower Brian.' Kelly continued. 'I'm quite sure you understand the reasons for that - and once you have dried yourself just hook one of the clean, dry towels around your waist before coming back out here. Is that all right?'\n\n'Of course.' I replied. 'Perfectly understandable Kelly.'\n\n'Good, I'll leave you two to carry on now.' said Victor. 'If you need to ask me any questions Brian, just let the receptionist know, she will know where to find me.' And with that, he left, and Kelly went across to open a door to another room, where the shower was.\n\nThe effect that just that short time in Kelly's presence - and the thoughts the sight of her had prompted - was clear to see when I began stripping off; my cock, although by no means erect, had already begun to at least partially inflate, already hanging thick and heavy with the initial flow of blood that just those momentary thoughts had triggered. Perhaps under other circumstances I would have been awkwardly self-conscious of my unwarranted reaction to her, but, I rationalised, I was there to not only get an erection, but to climax - so in one way, I had made her job just that much less onerous. And with that thought in my head, coupled with the continuing imaginings of what might actually lie beneath that pristine white coat, while I washed myself, I allowed my cock to steadily grow both longer and firmer.\n\nSo, by the time I stepped back into the other room the still stiffening length of it was making a rather distinct bulge in the towel that hung from my waist - and it was something that Kelly's sharp eyes certainly didn't miss. 'Ah, that's good Brian - I'm glad to see you are not too embarrassed by what's about to happen, a good sign that we will be able to achieve very good results with you. You'd be surprised how some guys find the whole procedure rather daunting - even after they have been through the counselling and then signed themselves up for it. I'm very glad to see that you're not one of those. Now -' she added, '- before I ask you to get up on to the bench I just have to attach a few electrodes to you.'\n\nAs she spoke she snapped on a pair of thin medical gloves with what was obviously practiced efficiency and then picked up perhaps a dozen small electrodes, each one trailing a fine wire behind it, all of which were obviously connected to whatever was stored beneath the bench itself. 'These will monitor a variety of body functions Brian; respiration, heart rate, blood flow to certain parts of your body, and a number of other but equally important functions. So would you take the towel off now please!'\n\nAlthough she spoke in a coolly dispassionate voice and seemed to be concentrating on unravelling the dozen or so wires, I saw her eyes flick briefly across at me, then noticeably widen when she saw just what I had been shielding beneath it. That reaction, plus both her nearness and the feel of her hands pressing the sticky electrodes to various parts of me were more than enough to continue, and perhaps even speed up the blood flow to my genitals and by the time she was ready to attach the last two my cock had filled and stiffened enough that it had begun to slowly lift itself.\n\nShe looked up and gave me a small, tight-lipped smile. 'That makes the final part of what I have to do so much less difficult Brian - these last two need to be attached to the area just at the very base of penis, and having an erection - even a partial one - makes that so much easier.' As she spoke she allowed the latex gloved hand that wasn't holding the last two electrodes to drift lightly up and down the length of the still rising flesh, her finger-tips triggering tingling jolts of strongly excited pleasure. 'Ah!' she breathed as she saw the strength of my immediate reaction. 'Mother Nature has been very generously kind to you Brian - very generous indeed.' She added in a low, resonant voice - then quickly and efficiently attached the last of the electrodes and, after another, rather longer look at the by then jerkily hardening length of my cock, said that I should get myself up on to the bench.",
        "Doing my best to ignore both the darkly misty look I thought I had seen in her eyes, and the swiftly rising erection, I hoisted myself up, and wriggling across until both it and my balls, hung down through the channel cut down the top half of the bench, I waited to see exactly what would happen next.\n\nBut even as Kelly squatted down and began doing something with whatever it was that was beneath me, I remembered the description of the equipment that was to be used, that I had read in the lengthily informative leaflet that had accompanied the questionnaire.\n\nA great deal had been made of the exhaustive studies that had already been carried out in tracking down not only devices that could monitor the various bodily functions they believed to be involved, but even what kinds of materials existed in a variety of industries that might prove beneficial to their particular research project, always striving to find those that best suited their particular needs.\n\nOne such material was what the actual 'penile sheath' - as the leaflet had described it - was made from. This was yet another of the myriad forms of latex, but one considerably more technically advanced than that used in the gloves Kelly wore, latex that in fact was embedded with hundreds of tiny, almost microscopic electro-magnets. Electro-magnets that reacted, attracting and repelling each other, as extremely small electric charges were turned on and off. And, the leaflet went on to say, these tiny objects were aligned in two ways - some lengthwise, rows of them aligned up and down the sheath - others, a dozen or so rings of them, around it.\n\nI recalled that even when merely reading about the design - and the information that the basic principle of it was that it should, as short, very fast pulses of electricity were sent into it, emulate the stimulation the penis received when pushing back and forth in a responsively pulsating vagina - had been quite enough to start to turn me on. And I could tell that the thought that such a sheath would soon be slipped up on to me, was only adding to the strength of blood flow to my already quickly engorging cock.\n\nI also remembered two other almost equally exciting things about what was soon to be attached to me. The first that the inner lining of the sheath was made from a much softer, even more flexible version of the latex - and that it had been embossed with dozens of tiny nodules, each having a tiny pin-prick hole in the tip of it, and that these were connected to a small reservoir containing some sort of semi-sticky lubricant. The second thing was that as one of the aims of the research was to stimulate the body to produce the maximum volume of semen, the 'on-again', 'off-again' delaying of the eventual ejaculation was in part achieved by the subject being fitted with two, also electro-magnetically controlled, rings - one around both his cock and balls, the other, around the very base of his cock.\n\nJust as that final thought flitted through my brain, I heard Kelly speaking. 'I'm just about to fit the electro-stimulator now Brian, are you ready for me to do that?'\n\n'Sure, go ahead Kelly.'\n\n'Good - now although the sheath has its own source of lubricant, the flow of that isn't started until I turn the machine on, but as it makes it easier to ensure a really snug fitting I'll just need to apply a little in the more old fashioned way.' she explained, and before I even had time to reply to her I heard myself give an low and purely involuntary gasp of pleasure as once again I felt the light touch of her fingers running slowly up and down the length of my cock.\n\nA few moments later I was forced to give an even louder response as I felt something locking firmly around the base of it, then again when something else was applied, perhaps even more tightly, around both it and my balls. But if I had thought those things had been arousing, they were actually no more than a childish tickle when compared with the ten times stronger thrills I felt when Kelly began to fit the sheath itself on to me. Of course I had forgotten that as my erection had grown my cock-head had become both enlarged and in that process made much more sensitive, and as the entire length of the sheath had to be eased up over it I was treated to the breath-taking feelings the slightly knobbly lining generated at it skimmed and slid its way upwards.\n\nYet even as I was receiving those undoubtedly intense thrills I couldn't prevent myself from trying to visualise what Kelly might be seeing from her position beneath the bench. My ring tightened balls, and my still jerkily engorging cock slowly disappearing into the pink latex sheath with the wires and tubes attached to the tip of it - 'What a bizarre sight it must make!' - I thought, but at the same time also wondered if her view of it might actually trigger some sort of sexual arousal in herself.\n\nI admit that until that moment I had completely forgotten that I too would soon have something to watch, had forgotten the purpose of the rectangular area of non-reflecting glass set flush with the floor immediately beneath my head - the screen on which I would soon be watching the promised, and, at least so I had been told, intentionally stimulating video.\n\n'That seems fine!' I heard Kelly mutter from beneath me. 'Does it feel quite comfortable Brian?'\n\n'It's OK now.' I replied, then added. 'Though sliding the sheath on was a bit more stimulating than I'd expected.'\n\n'I noticed that.' she answered with a barely suppressed giggle. 'But then you are rather more generously built than I'd anticipated, so it was a bit of a tight fit - but that should also ensure we get really good results.' Then she was silent for a few moments before saying. 'I don't know how you'll react to the last thing I have to do though - inserting the prostatic probe.'\n\nI admit that until that moment I had all but forgotten that other part of the equipment, and my initial reaction to the thought that Kelly was about to shove something up my arse, was one of acute embarrassment. But then I realised that was being a bit small-minded, and when I felt her hand slip beneath me and indicate I should lift myself, I did my best to relax. 'Just move your legs apart a little please Brian, then push your bottom a bit higher for me. The probe is already well lubricated so after a moment's discomfort, it should be fine.' she said, in a vibrantly caring tone.\n\nShe was of course absolutely correct, the initial pressure on my anus was brief, then I felt the slim tube of the probe slipping smoothly and deeply inside me. 'Of course I'm flying blind with this Brian.' Kelly murmured as the probe slid deeper. 'But you should feel some kind of change in sensation when I reach the area closest to your prostate, I'll take it very slowly, just let me know the moment you feel anything please.'\n\nAgain she was dead right, a few moments later I felt a sudden, and strangely pleasurable, tingling shock-wave rippling through my groin. 'I feel that!' I grunted.\n\n'Very good! So, that's it then, is it OK if I start your video now?' she asked as I settled myself back down on to the bench.\n\nWhen I said it was I heard a soft click then she pushed herself up to stand alongside me. 'I want you to try and forget that I'm even in the room Brian, just let yourself go - if you know what I mean. I don't want you to feel in the slightest way embarrassed - we both understand exactly why you are here, and why we are doing this project together. But if at any time you begin to feel physically uncomfortable, please let me know.'\n\nHaving said that, she stepped away and I watched as the screen beneath me came to life.\n\nWhoever had procured the video had not only thoroughly read my responses to the questionnaire, but must have had access to a range of films of a far higher quality than I had previously come across; the story-line was exactly the kind of thing that was guaranteed to excite me, and not only the women, but also both the camera work and the production itself were absolutely brilliant.\n\nThe plot was one that I'm quite sure most men have fantasised about several times; a guy being treated by two adoring and sexually compliant women - in my case the combination of a blonde and a brunette. The scene opened with the two girls talking together, exchanging their own fantasies - which of course both just happen to revolve around them being able to engage in a threesome with a guy and another girl. The fact that this conversation takes place while both girls are getting themselves ready for bed meant there was plenty of time to watch each of them slowly undressing and then slipping into their night clothes - the blonde in an ultra-slinky pair of very pale pink silk pyjamas, the brunette into a skimpy pair of lacy white panties and a matching shortie nightie - and provided more than enough visual stimulation to ensure my cock quickly reached its maximum engorgement.\n\nThe girls then discuss which of the various guys they know would be the most likely candidate for such a scenario, and having settled that, decide to actually ring him, and make the offer.\n\nThe girls don't have to be too persuasive to get their chosen guy to agree to their plan, then while they're waiting for him to come over to join them, they decide that a little girl-to-girl foreplay might not be a bad idea. Now like many guys I've spoken to, the idea of watching two girls pleasuring each other, is a real turn-on - and the sight of those two beauties slowly exposing various parts of each other's body, was itself excitingly thrilling. Then watching them teasingly caress each other was even more so, and by the time the blonde got around to going down on the brunette I wanted nothing more than to have the opportunity of doing just a little of what she was, to either one of them.\n\nBut then I suddenly realised that although I thought I had been totally concentrating on the delights on the screen, I had at some level of consciousness, also become aware of what was happening beneath me. I could feel the initially slow movement of the moist warmth of the lining of the sheath - feel the rippling pulses, as the dozens of electro-magnets responded to the on-again, off-again current - feel its stickily snug lining doing exactly what I had been told it would. It really did feel just as though my cock was slowly pushing itself back and forth into one or other of the two girls' quiveringly receptive pussies!\n\nEven as the first of a series of increasingly strong waves of excitement began rippling up through me I watched as the two girls flipped themselves over into the classic sixty-nine position, and was then treated to alternating close-ups of their fingers and tongues as they began to delicately but insistently pleasure each other's pussies. Each of them had gone for the shaved-pussy look, so there was not a trace of hair to hinder or blur the images. Moist and puffily pouting lips were gently parted as long slender fingers slid effortlessly deep within. Tips of already stiffened clits poked out from beneath protective hoods, for quickly flickering tongues to teasingly stimulate. Trickling beads of lubricant freely flowed, only to mingle with the glistening strings of saliva.\n\nThe images were so close and so crystal clear that to a man like me - who had always absolutely loved the time I spent going down a woman - they were as powerfully effective as if I had actually been licking and sucking on those two adorably perfect pussies, and, at least inside my head, I felt sure I could really taste their sweet acridity. In fact they were so powerfully effective that when I allowed my brain to click back into reality, I could feel my already swollen balls tightening, feel the first signs of the draining rush that would soon take me on to orgasm.\n\nBut even as I sucked in an extra large intake of air, preparing myself for the inevitable rush that always literally took my breath away, the sensors monitoring my reactions kicked-in; I felt the motion of the pussy-like sheath slowing and tightening, then the even stronger grip of the two rings that were there for the sole purpose of preventing my climax's onset.\n\nI heard myself groan with both disappointment and frustrated tension, but even so, I still couldn't tear my eyes away from the continuing display that was being played out on the screen beneath me - couldn't stop myself from watching as the two girls took each other on to the orgasm I had been denied.\n\nBut even once they were done with each other I wasn't really given too much of a chance to come down from the state of high arousal those images had taken me to; just watching them shower together, each gently soaping and sponging the other's body, was quite enough to maintain it, then seeing them choose and slip on the lingerie they had decided to wear for the guy who was soon to join them, if anything, merely re-stimulated it.\n\nAlthough the brunette stuck with her original colour choice, white - which made a dramatic contrast against her smoothly olive skin - that time she selected a really snugly fitting pair of skimpy satin panties and a matching and equally tiny bra, over which she slipped a long but loosely fastened satin robe.\n\nBut even though she too chose to wear a bra and panty set beneath a flowing outer robe, both the colour and fabric the blonde chose to wear were sufficiently different for her to make an even more striking display of herself. All three items were made from a very open pattern lace, in sheer black - so almost every inch of her creamily white skin showed through. And even though I had watched as she had slipped them up on to herself, it was only some time later that I was to discover that not only was the lace-work unusually open, but her panties were also crotch-less!\n\nAs I said, by the time the pair of them had dressed and re-touched their hair and make-up, I could tell from the feel of it that my cock was still as strainingly engorged as it had been earlier, and as they had no sooner finished getting themselves ready for him, than their front door-bell rang, I knew I wasn't going to be given time for it to do otherwise.\n\nNow it would be both foolish and incorrect to say that the guy who arrived really looked like me, but he was not so dissimilar that I couldn't relate to the image of him, as might have happened if he had been vastly different in size, colour or build. So, once he arrived and the plot moved quickly on to the three of them starting to get it together, it was all too easy for me to once again find myself imagining it was me doing, and having done to me, all the things that were happening on the screen.  \n\nTo begin with they very quickly undressed him, then lay him down on their bed, and while the blonde slipped off her bra and let him caress and suck on her breasts, the brunette got down between his legs and gave him one of the most phenomenal blow-jobs I've ever seen - and even now I can still remember a slow-motion section which showed her lips sliding back and forth down over his taut and fatly bloated cock-head. But long before she actually allowed him to come, the blonde hoisted herself above him and, spreading the split in her panties wide apart, gave him her pussy to lick and suck.\n\nAt that point the screen split in two; one half showing the brunettes mouth slowly, very slowly but skilfully working the guy's cock towards its inevitable climax, the other, the guy's tongue doing the equivalent thing with the blonde's clit and pussy.\n\nAnd yet again, if it hadn't been for the suddenly tightly gripping pair of rings around my own cock and balls, when both the blonde and guy finally reached their orgasms, I would have undoubtedly had mine too.\n\nAlthough the guy may have looked a little like me, in one respect he was completely different; whereas it usually takes me some little time to recover from a climax before I can even think about starting again, he was ready in no time - but then maybe that was just because he had two such stunningly beautiful women making a fuss of him!\n\nOnce they saw his cock was starting to get hard again, the two girls stripped, and of course the sight of their curves and eagerly sparkling eyes was more than enough to fully fire him up - and in no time at all the three of them were twining themselves together as each strove to both stimulate and be stimulated by the other two.\n\nI admit that in my own fantasies of what I would do if I was ever lucky enough to find a pair of compliant women, I vary the matter of 'who does what to whom', depending on my mood at the time. Sometimes I imagine myself being in the position similar to that in which the guy was originally; having one squatting above me, while the other either gives me a blow-job, or more usually, sits on my cock and fucks me that way. But in all the variations I have imagined I have never come up with the solution this trio did - getting themselves into a position where he could actually fuck both of them!\n\nUntil then, although I had of course noticed that the bed itself seemed rather higher than any bed I'd ever come across, I had no idea it was like that for a particular purpose, but I was very soon to find out that it was.\n\nWhat they did was for the brunette to lay down right at the end of the bed, so her legs hung down over its edge, then the blonde got up kneeled astride her, positioning herself so that when she got down on her hands and knees, her pussy was immediately above the brunette's. Then, because of the height of the bed, when the guy stood at the end of it he was able to push his cock into either one or the other of the two moistly waiting pussies.\n\nIf I thought the two previous sections of the film had got me stirred up, their effect paled into insignificance when I watched the guy thrusting in and out of one, then the other pussy. By then it was all too easy to put myself in his place - imagining myself doing it, imagining how different each of those two pussies might feel, and also imagining the different sorts of thrills that each or either one of them would give me.\n\nAnd of course, even as all that was going on inside my head, beneath me, the electro-stimulator was playing its part - the stickily slick sheath emulating at least some of my imagined sensations as it pulsated and moved back and forth, kneading and working my by then super-charged cock in much the same way that I imagined either one of those lubriciously tight pussies would. \n\nBut then, although my eyes never left the action on the screen, out of the corner of my eye I detected movement - and glancing momentarily sideways, I saw that Kelly had come to stand alongside me. Even as I found myself wondering if she too had been sneakily watching the same thing I had, I felt her hand taking hold of mine, then guiding it, guiding it to her leg!\n\nThe feel of the silky soft warmth of her skin was as erotically charged as the film I'd been watching, and when I felt her shift her legs a little further apart, and then her hand pushed mine to move higher, my reactions went into over-drive!\n\n'Do it for me - please Brian!' she whispered huskily.\n\nNow I ask you, what man could refuse a request like that? Certainly not this one!\n\nSo I lay there; my cock being slowly but insistently massaged by the rippling movements of the electro-magnet controlled sheath, my brain being filled with the fantasy images playing out on the screen beneath me, and my fingers stroking the already wet and thin silk covered pussy of the gorgeous Kelly.\n\nOnce I was certain that she really wanted me to continue, I managed to tug the panties to one side, giving my fingers room to slip inside her, giving me the even more intense thrill of feeling their wetly clinging folds - then pushed my arm just that much further forward, so that I could both embed my thumb inside her, and also reach up with my middle finger, for her clitoris.",
        "She gave a loud, gasping grunt when I found it - grunted and wriggled herself even more firmly down against my hand, and then the two of us headed towards our separate, but strongly inter-linked releases.\n\nI have no real idea of how long it took us to get there - in some ways no matter how long a time, it still wasn't enough for me. I had never had so many senses being assailed so powerfully. Visually, by the slow and thorough fucking the guy was giving the two beauties on the screen. Tactilely, by the feel of having Kelly's wetly receptive pussy-lips wrapping themselves around my fingers. Aurally, by the slurping sound they made as they slid in and out of her, plus the moaning sighs and grunts coming from the screen beneath me. And of course, internally, by the skilful and tirelessly insistent stimulation the electronically controlled sheath was giving to my by then very close to bursting cock.\n\nWhen Kelly's orgasm eventually hit her she gave a long, and vibrantly resounding series of steadily rising moaning cries of ecstasy, and I felt my hand and fingers covered with a sudden rush of her sticky fluid. Then, even as I was doing my best to prolong it for her by working my fingers even more briskly, I felt a sudden surge of super-charged excitement as the prostatic probe added its stimulation to all the others, and mine exploded - making me give even louder, but far more gutturally raucous wails as I felt the equipment beneath me urging my cock and balls to finally blast what felt like the entire reservoir of churning semen.\n\nAnd even when I was sure I had already given up every last drop, I felt the relentless electro-stimulator continuing to squeeze and pump me; successfully urging me to produce just a few, much more reluctantly jetted spurtings.\n\nBecause the draining had been so massive, it took me a minute or two to regain control of myself, and when I did and looked around me I saw Kelly standing there, sobbing scarletly.\n\n'I'm - I'm so awfully - sorry - Brian!' she stuttered between barely controlled sniffling whimpers. 'I don't know what came over me - I assure you I've never done anything remotely like that before.'\n\nOf course, apart from anything else, I was anxious to reduce the cause of her all too obvious embarrassment, so replied as reassuringly as I could. 'There's no need to apologise Kelly. I loved what you did, and apart from the pleasure it gave me, I'm sure I came even more strongly because of it - and after all, that is what we are both really here for, isn't it!' \n\nAlthough her face retained its crimson hue, she did manage to bring her spluttering under better control. 'But apart from being totally unprofessional, I've never acted like that with anyone, at any time! I've no idea what made me do what I did!'\n\n'Well something obviously got to you Kelly - were you watching the film?'\n\n'Yes I was, I have to, so I can monitor the client's responses - we need to understand what does and what doesn't stimulate arousal, in case we need to make adjustments for his future visits.'\n\n'Well there you are then - I know just how much the film turned me on, it obviously got to you too.'\n\n'Maybe, but there was something else going on too - I mean I felt myself reacting when you first came in Brian, and then even more strongly when you came out after having had a shower. But even so, I've still never done anything quite so sluttish with any other man!'\n\n'Please don't use that word Kelly - there was certainly nothing sluttish about your behaviour, just sexy!'\n\n'You don't think that was totally out of order of me?'\n\n'Good heavens no! As I said, I thought it was very, very exciting, I loved what you did.'\n\nShe could obviously see that I really meant what I said - that I wasn't just saying it to make her feel that much better about herself - and she even managed to give me a crooked little half smile as she replied. 'Well it certainly felt nice Brian - though not as nice as I think you felt a few moments later!'\n\nI chuckled - 'You're not wrong about that, that machine is fabulous - though of course it was still nowhere near as satisfying as actually making love with a woman you feel strongly about.' I added meaningfully.\n\nShe gave me a long, questioningly lingering look, then seemed to mentally shake herself. 'That's quite a different matter Brian. But for now, I have to get you unhooked from the equipment - then while I am sorting everything out you will probably want to take another shower before you get dressed again.'\n\nIt only took her a few moments to remove the electrodes that had been monitoring my responses, a few more to simply pull the sheath down off what was left of my erection, then I did as she'd suggested, took a shower before getting dressed again. She was still tidying up the equipment when I returned, and as I would undoubtedly never have a better opportunity to do so, I said. 'What happened between us was very special Kelly, at least for me it was - I'd really like the chance of getting to know you, I mean as a real person, not somebody in this fantasy space. Do you know what I mean?'\n\nWhile I had been speaking she had been watching me with the same lingering look I had seen earlier, and when it became clear just what was implied by what I'd said, she smiled - then after a short, thoughtful pause, she nodded.\n\n'Well I don't know what time you finish here, or what other plans you probably have for later, but could we at least meet up for a drink somewhere?'\n\n'I'd like that Brian.' she answered in the same vibrantly seductive voice I'd heard the first time she'd spoken to me - and as luck would have it, she had no other particular plans for that evening - and so that's how Kelly and I came to get together.\n\n<p align=\"center\">IF YOU ENJOYED THIS STORY CHECK OUT ALL MY OTHER SUBMISSIONS - AND\n\nIF YOU WANT CONTRIBUTORS TO CONTINUE POSTING TO THIS SITE\n\nPLEASE DO YOUR BIT AND VOTE!!!</p> "
    ],
    "authorname": "TonyDowse",
    "tags": [
        "sperm donor",
        "male masturbation",
        "medical",
        "doctor"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/donor"
}