{
    "title": "Life after the Lottery Ch. 51",
    "pages": [
        "This is really the second part of Chapter 50. I got caught up in it, and it got real long, so I cut it in half. There is a lot in this one to read for upcoming chapters. Stick with it! Copyright 2016, LATL.\n\n*****\n\nLife after the Lottery, Ch. 51\n\nDawn's surgery and more\n\nTuesday morning.\n\nI never did go to sleep. I lay in bed thinking about what was happening with Dawn and me, and the girls. It startled me when the alarm went off at 5:00. I was still holding Sam as she slept. I knew it was going to be a long day.\n\n\"Sam,\" I said as I pulled some of her hair away from her face. I kissed her. \"Sam.\"\n\n\"emmm\"\n\n\"Honey, we need to get up.\"\n\n\"Emmm. Oh...what?\" Sam said opening her eyes. \"Wait...did I go to sleep?\"\n\n\"It will come to you. We need to get up.\"\n\nI rolled to the side of the bed and sat up.\n\n\"Wait a minute! I passed out!\"\n\n\"Yes, you did.\"\n\nI felt Sam move, then she grabbed me from behind and wrapped her arms around me.\n\n\"I remember! Oh my god, James, you tortured me!\"\n\n\"You didn't act like I was torturing you.\"\n\n\"You have never done those things to me.\"\n\nShe moved and sat next to me on the bed.\n\n\"I only do that for my wife.\"\n\nShe grabbed me and kissed me and held me.\n\n\"We need to get ready,\" I told her.\n\n\"I need to shower,\" she said and got up and went to the bathroom.\n\nI followed her and cleaned up while she rinsed off in the shower. Sam was soaping up her body under the shower head while I showered. She made sure she didn't get all of her hair wet. We both rinsed off about the same time.\n\n\"James?\" Sam said walking to me. \"Last night was wonderful.\"\n\n\"You mean while ago?\"\n\n\"Whatever, it was wonderful.\"\n\nSam reached for my cock and began to play with it.\n\n\"Honey, we need to get going,\" I said.\n\n\"Okay.\"\n\n\"Sam? Are you ever satisfied?\"\n\n\"James, you always satisfy me. It's just that right now, I feel so good, I just want to make sure you are satisfied.\"\n\n\"I am. I had a very satisfying night.\" I leaned over and kissed her.\n\n\"I had a good time,\" she said.\n\n\"I did too. I'm sure Dawn will enjoy watching.\"\n\n\"Oh.\"\n\n\"What, Sam?\"\n\n\"I sort of forgot about that. Will she get upset?\"\n\n\"Why would she?\"\n\n\"I said and did a lot of things last night for just you,\" Sam said.\n\n\"So did I. Honey, Dawn won't care. I think she will be happy to see you enjoying yourself.\"\n\n\"Well...does she have to see it right away?\"\n\n\"Sam, if you don't want her to see it right now, I will tell her.\"\n\n\"Would you?\"\n\n\"Yes, but you will have to let her watch it soon.\"\n\n\"I will.\"\n\n\"Go get dressed,\" I told Sam. She left while I shaved and got dressed.\n\nSam came back wearing blue jeans and a top. I was dressed and ready to go. We went down the stairs.\n\n\"We can stop and get something for breakfast,\" I told Sam.\n\n\"Shit! I didn't clean up from dinner. Give me a few minutes to put the dishes in the dishwasher and clean up. I don't want Dawn to see I left a mess.\"\n\nI helped Sam clean the kitchen up and put things away. She was being self-conscious about leaving a mess after playing wife.\n\nWe left and stopped and grabbed something for breakfast and some coffee. I didn't know about Sam, but I was dragging. As we drove, we sipped our coffee.\n\n\"James?\"\n\n\"Yes?\"\n\n\"Amy needs a chance to do that,\" Sam told me.\n\n\"I know. I will find time.\"\n\n\"Thank you. I am not sure she is ready to see what we did either.\"\n\n\"Sam.\"\n\n\"I know, we don't keep secrets.\"\n\nWe drove to the hospital and went to Dawn's room. She was eating breakfast.\n\n\"Good morning, honey,\" I said.\n\n\"Good morning, did you two have a good night?\" Dawn asked.\n\n\"Yes we did,\" I told Dawn.\n\nSam walked over and kissed her.\n\n\"Sam?\" Dawn asked.\n\n\"We had a good time.\" Sam was being a little quiet.\n\n\"Did you have a good night?\" I asked.\n\n\"I was a little sore, but I'm ready to go home now.\"\n\n\"When is John coming by?\"\n\n\"Kevin came by earlier; he said he would tell John I was ready to go home. Today is office day so he will come by soon.\" Dawn told us.\n\n\"Hey you two!\" I heard Amy say from behind me.\n\n\"Hey, honey. Did you keep her straight last night?\" I asked.\n\n\"She slept most of the night.\"\n\n\"Good.\"\n\n\"Sam? Did you sleep most of the night?\" Amy asked her. Sam just looked up and smiled. \"I will be off soon. You all wait for me.\"\n\n\"Don't get in a hurry,\" Dawn said.\n\nAmy left, and Sam followed her.\n\n\"What's up with Sam?\" Dawn asked.\n\n\"We had an interesting night. She treated me like her husband, and I treated her like a wife. I have told you how she gets when it is just the two of us in the house.\"\n\n\"I have seen how she gets. What happened.\"\n\n\"I treated her to some things that I do just for you. She thinks you will get mad about it.\"\n\n\"You treated her like a wife then?\"\n\n\"Yes. That is what we talked about. I hope you're okay with that.\"\n\n\"I'm okay with it; I'm just not sure how to treat them. I haven't had a wife.\"\n\n\"Honey, is all of this going to be a problem?\"\n\n\"No. We have talked about it. I know you have talked to Sam about her and Amy being as close to you as a wife would be.\"\n\n\"Honey, I may treat them like a wife, but you know, and they know that I will always have different feelings toward you. Sam asked me what we were legally. I had a talk with her about it.\"\n\n\"What are we legally?\" Dawn asked.\n\n\"Cohabitating polyamory.\"\n\n\"There is a name for it?\"\n\n\"Yes, and in some states it is illegal.\"\n\n\"That's stupid. I hope it's okay here.\"\n\n\"There is nothing on the books in this state about it.\"\n\n\"How do you know this?\"\n\n\"I asked our attorney to look into it.\"\n\n\"Why did you ask him?\"\n\n\"I was talking to him about changing our will. The girls have no legal claim to anything if something happens to us.\"\n\n\"Okay. I'm sure he had a few questions,\" Dawn said.\n\n\"He did.\"\n\n\"I guess there are things we need to discuss and make arrangments for,\" Dawn acknowledged.\n\nDawn and I had talked about this some at night while we lay in bed. We were already making some plans and had some other ideas. Sam walked back in the room.\n\n\"Sam, come here and sit,\" Dawn told her. She sat on the edge of the bed. \"Listen, if you need some time before you tell me about last night, that is okay.\"\n\nSam leaned over and kissed Dawn.\n\n\"Thank you for letting me play wife last night,\" Sam told her.\n\n\"I hope you think of it more of than just playing wife,\" Dawn said.\n\n\"Okay, but we need to talk about this. Amy needs to talk about it too,\" Sam replied.\n\n\"Yes, we do. While I am home will be a good time. You want to tell me anything, honey?\"\n\n\"Later. I have some questions.\"\n\n\"I thought you would,\" Dawn told her.\n\n\"Why? You don't know what happened. James, did you tell her!\"\n\n\"No.\"\n\n\"Sam. We don't have secrets from each other, but, there are things that only James and I share in bed. I am guessing he shared some with you last night,\" Dawn told her.\n\n\"We...I...we only...\"\n\n\"Sam, I can imagine what happened. We will talk later.\"\n\n\"Sam, tell her how much sleep you got last night,\" I said.\n\n\"An hour or so, but...he made me pass out and didn't wake me until this morning.\"\n\n\"You passed out?\" Dawn questioned a little shocked.\n\n\"Yes.\"\n\n\"What were you doing when you passed out?\"\n\nSam looked at me first, then looked at Dawn.\n\n\"I was sort of standing on my head,\" Sam told her.\n\n\"Oh, I see. I hope you remember everything.\"\n\n\"Oh, I do.\"\n\nDawn didn't get much more out of Sam. They talked about other things, but not last night. About 9:30, Dr. John came in.\n\n\"You think you are ready to go home?\" He asked.\n\n\"I didn't need to stay,\" Dawn told him.\n\n\"I just wanted to make sure everything held together.\"\n\nHe sat on the bed and looked to make sure there was no bleeding on the bandages.\n\n\"How do you feel?\"\n\n\"I itch! We are going to have to take into consideration that damn scrub soap.\"\n\n\"You know it has to stay on for 24 hours.\"\n\n\"I know, but we send ladies home for a week with this crap still on them. We need to think about having them come back sooner so we can clean it off,\" Dawn told him.\n\n\"You want me to rebandage you and clean it off?\" John asked.\n\n\"Yes!\"\n\n\"Well, I usually would have my chief nurse do I that, but...\"\n\n\"Fuck you, John!\" Dawn exclaimed.\n\n\"Sam, go tell the nurse I need a six-inch chest bandage, some four by fours, a washcloth, a basin, and some soap,\" John told her. She jumped up and left.\n\n\"Thank you.\"\n\n\"Dawn, I am very serious about you not using your arms for a week. You dreamed this up, so we have to be careful to make sure it works. Do not pick anything up, do you understand?\"\n\n\"Yes.\"\n\n\"James, I know her, you are going to have to make sure she doesn't do anything. I will come by Thursday night and see how things are going.\"\n\nSam came back in carrying a basin full of things with a nurse following her.\n\n\"Doctor, do you need any help?\" The nurse asked.\n\n\"I think I have it, thanks.\" She left.\n\nDawn sat up in bed, and John started unwrapping her bandage. When he got down to her skin, he took it nice and slow. He removed the bandage and Dawn had gauze packed under her breasts. I liked what I saw. John slowly peeled away the gauze that had some blood on it.\n\n\"Good, you didn't bleed much. Lay back against the bed.\"\n\nDawn laid back, and he lowered the bed, so she was flat. He gently lifted each breast to check the sutures.\n\n\"They look nice,\" he said. \"The edges are nice and tight. Don't move. Sam, go get us some hot water.\" She went to the bathroom.\n\nDawn was covered in the orange soap they used to kill germs. John was poking around on her breasts as I watched.\n\n\"You are a little swollen, but not much.\"\n\n\"Good!\" I said.\n\n\"James!\" Dawn yelled at me.\n\n\"They do look good,\" John told her. \"Since you were symmetrical to start with, you made my job easier.\"\n\n\"I better still be symmetrical,\" Dawn said.\n\n\"Dawn, you have one of the most perfect racks I have ever seen on a woman. You know most women are not symmetrical. You were, are.\"\n\n\"I guess that is a compliment,\" Dawn said.\n\n\"Dawn, since the first time I saw you naked, I have thought you had one of the most perfect bodies I have ever seen,\" John told her.\n\n\"Thank you then. I will have to let you see me naked more often then, John,\" Dawn told him with a big smile.\n\n\"I look forward to it.\"\n\nSam came back with the water. John got up and told Sam to sit.\n\n\"You get to clean her up,\" John said.\n\n\"What?\"\n\n\"You are going to be my nurse aren't you?\"\n\n\"I guess.\"\n\n\"Just use the water and the soap to scrub off the orange soap, Sam. Just stay an inch or so away from her incisions,\" John told her.\n\nWe watched for a few minutes as Sam gently scrubbed the soap off of her.\n\n\"Come with me,\" John said to me. We walked out into the hall. \"When she figures it out, I hope she doesn't kill the two of us.\"\n\n\"I think she looks good.\"\n\n\"I hope she is okay with it,\" John said.\n\nJohn walked to the nurse's station to get something; I went back in the room.\n\n\"What were you two talking about?\" Dawn asked.\n\n\"He was telling me what you could and couldn't do for a while.\"\n\n\"Like what?\"\n\n\"He said you couldn't have sex or orgasms for ten days.\"\n\n\"Bull shit!\"\n\nSam was still scrubbing the orange goo off of Dawn when John came back in. He talked to Dawn while Sam finished up. Dawn sat her bed up some more and leaned forward.\n\n\"I feel like it has run around on my back,\" Dawn said.\n\n\"Only lean forward a little, Dawn,\" John told her.\n\nShe leaned forward, and Sam looked.\n\n\"It did. Let me clean it off,\" Sam said and started scrubbing her back.\n\nOnce Sam finished, she took a towel and dried her off. John handed her a pair of sterile gloves and told her to put them on. He handed her a packet of ointment and told her to apply it gently to Dawn's incisions. Sam slowly did as told. When she finished, John traded places with her. I watched as he took the four by fours and placed them under Dawn's breasts. He used a small piece of tape to hold them in place. Before John wrapped her again, she asked Sam to get her lotion from her bag and rub it on her where she had been scrubbing. She got the lotion, and we watched as she rubbed it into Dawn's skin. John watched closely as Sam gently rubbed it into Dawn's breasts.\n\n\"Sam, I need your help,\" John said.\n\nSam held the end of the bandage while John started wrapping the big Ace bandage around Dawn. It took him a few minutes, but soon Dawn was wrapped again.\n\n\"Any pain?\" John asked.\n\n\"Not really. I feel better. You need to remember this,\" Dawn said. \"A week is too long for women to wait to come back.\"\n\n\"Okay. You figure out who can take care of them. I'm too busy.\" John told Dawn.\n\n\"You have plenty of office nurses, John.\"\n\n\"I have another surgery tomorrow. I am going to use your procedure,\" John said. \"If this works out well, I will have to name it after you, but, I don't think we can name it 'The Dawn' procedure.\"\n\n\"We worked on it together.\"\n\n\"You thought of it, Dawn.\"\n\n\"It has to work first.\"\n\n\"What is your middle name?\" John asked. Dawn smiled. \"What?\"\n\n\"My middle name is Ahyoka.\"\n\n\"What?\"\n\n\"It is Cherokee. It means 'She Brought Happiness,'\" Dawn told John.\n\n\"That's perfect! We can call it the Ahyoka because it should bring happiness to women.\"\n\n\"Are you sure, John?\" Dawn asked.\n\n\"Yes! That is perfect. The Ahyoka. I like it! Now spell it.\"\n\nDawn spelled it for him. John couldn't believe that was Dawn's middle name. She had told me it was her grandmother's name.\n\n\"Okay. You can go home now if you follow my orders. We have to make sure this leaves no scars. If it works well, it should help the ladies that have keloids. It would greatly reduce their scarring.\"\n\n\"That was what I was hoping. I hate it when we have to tell women that have keloids and hypertrophic scars that they will scar badly,\" Dawn said.\n\n\"I am going to go back through some of the ladies that didn't have surgery because of that and see if they will let me try it on them. I think if I used a topical steroid on the incision for them it would also help.\"\n\n\"Good. Now get out of here so I can go home.\"\n\n\"I will tell the nurse.\" John left, and Sam cleaned up the mess.\n\n\"Thanks, Sam,\" Dawn told her.\n\nI helped Dawn put on her pants and a button up top. Sam put her tennis shoes on for her. Amy came in ready to go home too. We still had to wait about 30 minutes before the nurse came with a wheelchair.\n\n\"I can walk.\"\n\n\"Dawn, you know the rules,\" the nurse said.\n\nShe sat down in the wheelchair, and we headed out. I went to the Escalade and drove around to discharge and helped her into the truck. Amy had gone to her car while we got into the truck. Once Dawn was in, I pulled the seatbelt around her.\n\n\"James, that will rub,\" Dawn said.\n\n\"You will have to hold it then.\"\n\nI got in, and we drove off. \n\nDawn wanted to stop for a hamburger before we got home. We pulled into a Sonic and let her get a burger and milkshake. Sam and I ordered some more coffee. We final got home, Amy and Sam helped Dawn to the sofa.\n\n\"Do you need to be in bed?\" I asked.\n\n\"I'm fine. With this bandage, nothing is going to move.\"\n\n\"What can I get you?\" Amy asked.\n\n\"I'm good for now if you will help me get this top off. You need to eat and get some sleep,\" Dawn told her.\n\nAmy helped Dawn take her top off so she would be more comfortable.\n\n\"I don't have to work tomorrow,\" Amy told her.\n\n\"Then you are working another 12 this week?\"\n\n\"Yes, Sunday. I swapped.\"\n\n\"Amy, you and Sam start school in September. Why don't you think about quitting work soon,\" Dawn said.\n\n\"We'll talk about that later.\"\n\n\"We will talk about it soon. Everyone there knows you are going back to school,\" Dawn told her.\n\nDawn settled eventually. Sam had gone and gotten her several large pillows off the bed. While Sam and I ate lunch, I watched as Dawn started nodding off. I got up and went to her.\n\n\"Here.\" I placed the big pillows on the other end of the sofa and helped Dawn turn and put her legs up so she could lie back. \"Take a nap.\"\n\nI went back to finish lunch. \n\n\"You two look tired,\" Amy said.\n\n\"Sam didn't let me get much sleep.\"\n\n\"Me!\"\n\n\"Shhh.\"\n\n\"Me? You...never mind,\" Sam said.\n\n\"Sam, I will be up for several hours if you want to go take a nap,\" Amy told her sister.\n\n\"I will go take a nap if you come with me and get some sleep.\"\n\nAfter the two of them had finished lunch, I told them I would clean up. They headed upstairs. I cleaned up and went to the den and sat in one of the loveseats. I watched Dawn sleep for about half and hour before she woke up.\n\n\"I have a problem,\" Dawn said.\n\n\"What?\"\n\n\"How do I get up without pushing down with my arms?\"\n\n\"Well, for now, you still have your jeans and a belt on. I can pull you up by it.\"\n\n\"Good idea for this, but I have to piss.\"\n\nI got up and grabbed Dawn by her belt and stood her up. She walked to the bathroom, and I had to unbuckle her jeans and pull them down.\n\n\"I think you better plan on wearing shorts or nothing for the rest of the week,\" I told her while she pissed.\n\n\"We tell the ladies to have someone lift them up under their armpits. John and I didn't talk about this,\" Dawn said. \"I hope the glue holds as well as stitches.\"\n\nWe sat and thought a minute. I pulled her jeans off her feet.\n\n\"You can't lift your arms up, so I will have to pick you up.\"\n\n\"Oh, no. You are not carrying me from the bathroom.\"\n\n\"Okay. I will have to lift you under your arms. If you feel it pulling, stop me.\"\n\nDawn held her arms down, and I slid my hands under her arms and gently lifted her up, so she was standing.\n\n\"I'm glad you don't weigh much,\" I said. \"Was that okay?\"\n\n\"Yes. That will work. I know what will work better.\"\n\n\"What?\"\n\n\"They make a potty chair that sits over the toilet for older folks that can't get up and down. I need you to go and get one. I need to see if that will work so we will have a solution for our patients.\"\n\n\"I know what you are talking about.\"\n\nI walked her back to the den.\n\n\"Do you want to sit or lay back?\"\n\n\"I want to sit in the recliner, but I need to do something with this hair first.\"\n\nDawn had beautiful long black hair, but sometimes she didn't like all of it.\n\n\"I got it,\" I told her.\n\nI got her turn away from me for a minute, and I weaved all of her lovely hair into a long braid. I helped her ease into the recliner and pulled it up so she could sit back and put her feet up.\n\n\"Hmmm. We tell other ladies not to use their arms a lot. I never thought about how it would affect them,\" Dawn said. \"I guess I will be doing some research while I am recovering.\"\n\n\"There is always a bed pan,\" I said. Dawn looked up at me and gave me a stern look. \"Just make sure you don't forget and try and push up.\"\n\nBefore Sam got up about 4:00, I had to take Dawn to the bathroom again. While we were talking she told me, she would have to tell John to make sure he gave his ladies as little IV solution as possible. When Sam came down wearing her robe, she sat next to Dawn.\n\n\"How are you doing?\" She asked.\n\n\"Well, James and I have had some issues getting me up and down off the toilet since I can't push myself up.\" Sam giggled.\n\n\"Sam, I need to run into town for an hour or so,\" I told her.\n\n\"You need to get some sleep. Can I do it for you?\" Sam asked.\n\n\"Dawn wants me to get her one of those toilet seats for older folks that can't get up and down to see if that will work for her and her patients.\"\n\n\"I know what you want to get. I will go and get it.\"\n\nSam headed back upstairs to put some clothes on. She came back down a few minutes later in shorts and a T-shirt. I gave her the keys to the Escalade, and she left.\n\n\"James, did you really hold her up while she was on her head and eat her?\"\n\n\"Yes.\"\n\n\"I bet that surprised her.\"\n\n\"She wants to talk to you before you watch it.\"\n\n\"Okay.\"\n\n\"Honey, did I go too far with her?\"",
        "\"Was that what you wanted her to experience?\" Dawn asked.\n\n\"Well, you know how we end up sometimes.\"\n\n\"What about for Amy?\"\n\n\"She needs to get the same opportunity,\" I told Dawn.\n\n\"Yes, she does.\"\n\n\"I guess I need to ask you if there is anything you don't want me doing with them now?\" I asked.\n\n\"I don't guess so, but, we don't do those things very often.\"\n\n\"I will surprise you and come up with something else for just us,\" I told Dawn.\n\n\"I bet you will.\"\n\nWe talked some more, then Dawn hesitated and asked me for some water.\n\n\"I hope the potty chair works; the girls can't get you up and down,\" I told her.\n\n\"I think it will work. I should be able to slide on and off of it.\"\n\n\"Do you want me to get you some shorts?\"\n\n\"No. You can get me a robe to lay on the chair in case someone comes over.\"\n\n\"Are you expecting someone?\" I asked.\n\n\"Just get me a robe or a blanket.\"\n\nI went to the closet and got one of her long robes.\n\n\"I can't wait to see you naked,\" I told her as I handed her the robe.\n\n*****\n\nWednesday morning I woke up about 6:00. I had slept downstairs on the sofa because Dawn had decided it was easier for her to sleep in the recliner. Sam and one of his helpers were supposed to be at the house by 8:00 to explain all the new security things to me. I would need to wake Dawn before then so she could put some clothes on since he was bringing someone. I got up and went to take a quick shower in the downstairs bathroom. When I returned, Dawn was awake.\n\n\"I didn't mean to wake you up,\" I said.\n\n\"It is after 7:00, I slept late.\"\n\n\"I'm going upstairs to put on some clothes. Sam and one of his guys are coming at 8:00. What would you like me to bring you to wear?\"\n\n\"Some shorts and button up.\"\n\nI went upstairs and put my clothes on and grabbed Dawn's clothes. I looked in on Amy and Samantha. They were in their own bedrooms. I took Dawn's clothes down to her and helped her put them on. I started breakfast for the two of us. Once I was finished, I took Dawn a plate, and I sat on the sofa and ate with her. I watched her eat; she seemed hungry this morning.\n\n\"Can I get you more?\" I asked.\n\n\"No, this is plenty.\"\n\nAfter we had finished breakfast I helped Dawn get up; she wanted to walk around. I went with her outside so she could walk around the patio.\n\n\"It's going to be hot today,\" Dawn said.\n\nShe walked around the pool once then went back inside and to the bathroom. I went upstairs to check on the girls. Amy was in the shower. I went in to tell her something.\n\n\"Amy, put some clothes on before you come down. Sam and one of his guys are coming at 8:00.\"\n\n\"Okay.\"\n\nI went to check on Samantha; she was still asleep. I sat on the edge of the bed.\n\n\"Sam!\"\n\n\"Emmm, what?\"\n\n\"When you get up, put some clothes on before you come downstairs. There will be people here.\"\n\n\"k\"\n\nI left Samantha as she rolled over to go back to sleep. About the time I got downstairs, I heard two cars pull up to the front door. I went and opened it, and it was Sam and one of his guys. He had also brought Olivia.\n\n\"Hey, guys. Hi, Olivia.\" I said.\n\n\"James, I thought I would come and check on Dawn. Is that okay?\" Olivia asked.\n\n\"Sure, she is up. Come on in.\"\n\n\"James, this is Charlie. He is my security specialist,\" he told me.\"\n\n\"Hi, Charlie. I hope you all finished with everything.\"\n\n\"We have all the equipment in place, I need to finish a little programming then I can show it all to you,\" Charlie said.\n\n\"Great.\"\n\nSam took Charlie to the equipment room then came back to see Dawn. Olivia was sitting on the sofa talking to her. I went over to them.\n\n\"Dawn, I can't wait to see,\" Olivia said.\n\n\"It will be a week or so before you can see. I can't move my arms much for a while because of the way Dr. John closed my incisions. I have this wrap on right now,\" Dawn said as she pulled the top open.\n\n\"If you need me to come over to help you, call me,\" Olivia told her.\n\n\"James and Sam will be here, but I may call you if I get tired of them.\"\n\n\"Where are the girls,\" Sam asked. He always wanted to see them.\n\n\"Amy should be down soon. Sam is still asleep,\" I told him.\n\nAmy came down a few minutes later and fixed herself some breakfast while we all talked. About 10:00, there was someone at the gate. I went over to the intercom, and he said he had flowers. When he knocked on the door, I opened it, and he was standing there with a vase with about four dozen red roses in it.\n\n\"These are for a Dawn Smith.\"\n\n\"Bring them in.\"\n\nHe brought in the flowers and Amy took them and sat them on the side table next to Dawn. \n\n\"Oh, these are beautiful.\"\n\nShe pulled out the card and read it.\n\n\"They are from Linda.\"\n\nThe delivery guy came back to the door.\n\n\"That's not all of them,\" he said.\n\nWe watched as he brought in two more vases filled with roses. Amy found places to set them all in the den. The delivery guy left.\n\n\"These are so pretty,\" Dawn said looking at all the roses. \"I should call her.\"\n\nDawn took out her cell phone and called Linda. I heard her leave a message. A while later, Charlie came out and said he was finished. Sam got up, and we joined Charlie in the equipment room. He spent about an hour explaining all the new things to me. One of them was the touchpad that had been installed in several places around the house.\n\n\"Mr. Smith, all the touchpads work the same. Do you want me to show you the one by the front door in that hidden cabinet?\"\n\n\"Not right now. I can figure it out.\"\n\nHe pulled up all of the new cameras on the second large screen now on the wall. He spent a while showing me how to operate all of them. Once he finished that, he pulled up all the motion sensors on the screens.\n\n\"We set the motion sensors to low sensitivity, so they won't' be going off if a dog or cat walks across the property. You are going to get some alerts still. The zone that gets an alert will pop up on all of the TVs in the house if they are on and on the smaller monitors we installed around the house. It appears like the gate notifications. Just push the view button on the remote and the camera in that area will come up.\" Charlie told me.\n\nHe spent almost another hour showing me the perimeter alarm system and all the other things I had them install.\n\n\"Here is the last thing I need to show you. This is the gate camera.\"\n\nHe pulled it up on the big screen. I had them install a high-resolution camera pointing out from the gate to the road.\n\n\"It has night-vision, but as you requested, there is a small, but powerful light on each side of the gate. If you set this on motion activation, you will blind every car that drives by at night. You have two options. Set the camera only for motion activation, or leave it on with the night-vision. You can pull this up on the TVs like all the other cameras. On the remote, touchpads, and the computer, click on Gate Floods to turn it all on.\"\n\n\"It looks good,\" I told Sam. \n\n\"We put the screens and computer in the bedroom next door like you asked. It all operates the same way. Plus the computer in your bedroom.\"\n\n\"And I can access all of this from a remote location like I could before?\" I asked.\n\n\"All of that is the same. James, why did you add all of this?\" Sam asked.\n\n\"Later.\"\n\n\"Charlie, is that all?\" I asked.\n\n\"That should be it. If you have any questions at any time, this is my cell number,\" Charlie said handing me a card.\n\n\"James, all the security cameras, and items are installed on a separate server I put in here. It has its on login behind the firewall, just like the other servers.\"\n\nSam was telling me that access to all the new cameras was independent of the house cameras.\n\n\"I added several new large hard drives in the rack downstairs for recording and backup for all the outside cameras,\" Sam told me. He took a card out of his pocket and handed it to me. \"This is the login and temporary password. You can set it all up like the other system.\"\n\n\"I guess I will have something to play with this week while Dawn is recovering. Sam, did you order the other items I asked for?\"\n\n\"Yes. They should be here by Friday. I will bring them over and show you how to use them.\"\n\n\"Good. Bring me the bill also.\"\n\n\"Charlie, if that is it, you can go,\" Sam said.\n\nWe walked back to the den. Samantha was up and sitting with Olivia.\n\n\"Hi, Sam\"\n\n\"Hi, Sam.\"\n\nThe two of them did this every time they saw each other.\n\n\"Olivia, we are finished; are you ready to go?\" Sam asked.\n\n\"Why don't you ride back with Charlie. I want to stay and talk to Dawn,\" Olivia said.\n\n\"Okay. Charlie, let's go.\"\n\nSam and Charlie left. Olivia and Dawn were giggling as I sat on the loveseat.\n\nIt's time for lunch,\" Amy said.\n\nAmy asked what we wanted for lunch. She and Samantha went to the kitchen to cook. Olivia and Dawn kept talking.\n\n\"Does it hurt?\" Olivia asked.\n\n\"Just a little sore.\"\n\n\"I can't wait to see.\"\n\n\"They look great,\" I told Olivia.\n\n\"What did you go to? A D?\" Olivia asked.\n\n\"I should be a full D cup now.\"\n\n\"I hope my husband doesn't get any ideas,\" Olivia said giggling.\n\n\"Olivia, I think you have nice tits. Don't let him talk you into anything,\" I told her.\n\nThe two of them kept talking. I went to the kitchen and walked up behind Amy and wrapped my arms around her.\n\n\"I don't like you working 12-hour shifts. I don't get to see you in the mornings,\" I told her.\n\n\"It won't be for much longer,\" she said.\n\nI reached up and pulled her hair away from the side of her neck and leaned over and kissed her there.\n\n\"James, I can't concentrate when you do that, and you know it.\"\n\nI had found a place on the right side of Amy's neck that turned her on when I kissed it. I kissed her again then licked the spot.\n\n\"James...\"\n\nI slid one hand down inside her shorts and found her patch and ran my fingers through it.\n\n\"Oh god...do you want to eat lunch or not?\" She moaned.\n\n\"I could eat you for lunch.\" I heard Samantha giggle.\n\nI slid my hand down a little and ran the tips of my fingers over her pussy lips as I kissed her on the neck again.\n\n\"Not fair...\"\n\nI kept kissing on her neck as I ran my hand over her mound. She had stopped helping Sam as I held her.\n\n\"Sis, I can cook lunch,\" Sam said.\n\n\"You may have too,\" Amy said breathlessly.\n\n\"Go on, I will cook,\" Sam said.\n\nAmy sat what she had in her hands on the counter and wilted in my arms.\n\n\"James...you are not playing fair...\" Amy moaned as I tickled her pussy lips.\n\n\"Come with me,\" I told her and took her hand and led her out of the kitchen and to the big downstairs bedroom. I got on the bed and pulled her to me.\n\n\"Why do you do this to me?\" She asked. \"Now I am horny.\"\n\n\"Good, honey. Take your clothes off, please.\"\n\nAmy looked at me, then pulled her T-shirt off and pushed her shorts down. I pulled her on top of me and started kissing her neck again.\n\n\"Ohhh... I should never have let you find all of my spots,\" she said.\n\n\"Too late now. Amy, you have spots that I haven't even used yet.\"\n\n\"Oh god.\"\n\nI held Amy and kissed her for a few minutes. She was breathing hard when I finished.\n\n\"What does my wife want?\"\n\nShe lifted her head up and looked at me for a moment, then she placed her lips on mine and kissed me for a long time.\n\n\"Are you sure about all this?\" She asked.\n\n\"Yes, we are.\" Amy kissed me again.\n\n\"Take your clothes off,\" she instructed me.\n\nAmy helped me get my clothes off. She straddled my cock and lowered her pussy down and rubbed her lips on it by working her hips. I watched her alabaster body as she looked at me and slowly began rubbing her pussy lips up and down the length of my cock. \n\n\"Honey, are you okay with the idea?\" I asked.\n\n\"Yes, as long as Dawn is comfortable with it.\"\n\n\"You know it was her idea also.\"\n\n\"I know.\"\n\n\"She doesn't know what being a wife to you entails?\"\n\n\"I will explain it to her,\" Amy said smiling at me.\n\nAmy leaned forward and placed her hands next to my head and began rubbing her wet clit on my cock. She looked at me and slowly ground her clit along my cock.\n\n\"You are the only man I have ever be able to do this with and have an orgasm.\"\n\nAmy kept slowly rubbing her clit up and down my cock. I took each nipple between my fingers and played with them. Amy kept going for a while.\n\n\"Ohhhh...yes...\" she moaned.\n\nShe started to speed up as I twisted her nipples gently.\n\n\"Emmmm...ahhhh...oh yes!\"\n\nShe ground her clit into my cock for a few more minutes. She was holding back her orgasm.\n\n\"Honey?\"\n\n\"James! I want to put my clit in your mouth...ahhhhhh!\"\n\n\"Go ahead.\"\n\nI could feel her muscles starting to tremble. She slowly lifted her pussy up as she struggled. I grabbed her legs and slid myself down as far as I could, then grabbed her ass and pulled her up to my mouth.\n\n\"Ahhhhhhh...I can't hold it any longer!\"\n\nSince she was holding herself up, I pulled her forward hard until she was lying on my face. I stuck my tongue out and pulled her down hard and sucked and licked her clit.\n\n\"Ahhhhhhh!! Yes!! James!!\"\n\nAmy started shaking as I pulled her to me.\n\n\"Ohhhhhh...fuck!!\"\n\nShe started humping my mouth as she came in one huge gush, then another. I sucked and tongued her swollen clit.\n\n\"Ahhhhhhhhh!!\" She screamed and collapsed on me.\n\nI held her hips tight and sucked up all of her juices as she jerked while she laid on me. I could hear her struggling to breathe as I kept sucking on her clit and driving my tongue into it.\n\n\"Ahhhhh!! I'm coming again!!\"\n\nAmy humped my head again and squirted into my mouth as she had another massive orgasm. When she relaxed, she rolled off of me carefully. I rolled to her and moved up and placed my mouth over hers. She grabbed my head and held me as she worked her tongue in my mouth for a long time.\n\n\"Oh...my,\" she got out as she looked into my eyes.\n\nI was now lying on top of her. I slid one hand down and under a leg and lifted it up and held it. I did the same thing with the other hand. I held her legs up and eased up her body until I felt the tip of my cock touch something hot and wet.\n\n\"Oh, yes. Push it inside me,\" Amy said.\n\nI eased up some more and felt my cock slip inside her pussy.\n\n\"Yes!\" Came from Amy as she arched up.\n\nI kept easing up as my cock slid into her inch by inch. Once I was all the way inside her, I held her legs and pushed myself up.\n\n\"Ohhh...James...make love to me...\"\n\nI began to work my cock slowly in and out of her as we looked into each other's eyes. We looked at each other for a few minutes as I slid in and out all the way. Amy would usually ask me to speed up when I was in her like this, but she said nothing. I lowered myself between her legs and kissed her for a minute. \n\n\"Let me have my legs,\" she said.\n\nI let go of her legs, and she wrapped them around my waist and locked her feet together.\n\n\"James...don't ever leave my sister and me. We love you and Dawn so much.\"\n\nI held myself up and kept slowly sliding in and out of her as she looked at me. Until she asked for anything else, I was going to keep doing this. Amy kept her feet locked behind me. We kept this up for a long time.\n\n\"Ohhhhh...yes, yes, yes...\"\n\nI was so absorbed in what we were doing that I didn't realize that I was feeling the incredible love from her. I concentrated a few seconds then realized I was not only feeling love from Amy, but I felt her love energy being pushed into me and something else, something from deep inside her. It took me a minute to understand I was feeling a deep emotional satisfaction, like deep contentment.\n\n\"God, I love you,\" I told her and started kissing her.\n\nI had only been making love to her up until this point. I was so absorbed in it; I didn't realize what was happening. As I kept sliding in and out of her, I made sure I filled her with my love energy. She moaned beneath my lips. I kissed her for another minute, then felt her pussy muscles begin to squeeze my cock. She moaned again. I removed my mouth from hers.\n\n\"I love you...\" Amy said as tears rolled from the corners of her eyes.\n\nI looked at her for a minute. She closed her eyes for a few seconds; then they shot open.\n\n\"Ahhhhhhhhhhh!!\" Amy screamed.\n\n\"Oh my god!!\" I yelled as I was hit with it. \"Amy!! Yes!!\" I screamed as I felt an incredibly strong sensation run through my body.\n\nThere was nothing we could do. Amy squeezed me very tightly with her legs as she quivered and jerked beneath me. My cock started exploding. I pushed into her and pumped load after load of cum into her as I shook. The sensation was incredible.\n\n\"Oh my god.\" I heard come faintly from behind me.\n\nAmy and I held each other as she shook. Several minutes later, we both collapsed. I lifted my head up and looked at Amy. Tears were running from her eyes. It took all the effort I had to place my mouth over hers. After a minute or two, I lifted my head and looked at her.\n\n\"I know...\" I said.\n\nAmy wrapped her arms around me and hugged me tight. I felt her crying under me as she held me. Then I felt someone touch me on my back. I inhaled sharply, and so did Amy.\n\n\"Sam...\" we both said.\n\nI felt a sudden wave of calm run through me and knew it was running through Amy. We both just lay there and absorbed it. I felt Sam wrap her arms around me and hold me. The three of us stayed that way for a while until I pushed myself up. I looked at Amy, and she had this incredible smile on her face.\n\n\"I know too,\" she said.\n\nI pushed myself up onto my knees, slipping my limp cock from her. I turned and looked; Sam was sitting on the side of the bed with tears running from her eyes, but she had the same smile.\n\n\"Sam...\"\n\nShe lunged for me and wrapped her arms around me. I held her while I felt her crying. She began to sob as I held on to her. It was a long time before she released me and kissed me. She looked deep into my eyes for a minute.\n\n\"We know...\" she said and kissed me again.\n\nAmy had sat up; she wrapped her arms around Sam and me. I could feel the tears running from their eyes as I held them. I felt Sam kiss me on the cheek, then kiss her sister.\n\n\"I have to go. Dawn needs me,\" Sam whispered.\n\n\"I need to go with her,\" Amy said.\n\nI helped her off the bed; she went to the closet and got a long robe. I turned and watched the two of them open the bedroom door and leave. I sat there breathless for a few minutes. I finally made my way to the bathroom and managed to clean up. I returned to the bed and put my clothes on and walked back to the den. I had to stop and look for a second. Dawn was up, and Sam and Amy were hugging her as they all cried. I looked for Olivia; she was in the kitchen cooking as she looked over her shoulder. I walked up behind Dawn and wrapped my arms around the three of them. After a minute, Sam kissed Dawn and released her hold and walked to the kitchen.\n\n\"Thank you, Olivia,\" I heard her say.\n\nAmy released us and kissed Dawn. Dawn turned to me and held me. Amy went back into the bedroom.\n\n\"Help me sit,\" Dawn said.\n\nI helped her sit down in the recliner.\n\n\"What happened?\" I whispered.\n\n\"You won't believe it.\"\n\nI sat on the arm of the recliner and held Dawn's hand. I could feel coming from her what I felt when Sam touched me. A few minutes later Amy came out. She had cleaned up and had her robed tied.\n\n\"Everyone ready to eat?\" I heard Sam say.\n\n\"That's it! You are just going to eat lunch now! What the fuck just happened!!\" We heard Olivia exclaim from the kitchen.\n\n\"Oh, boy,\" I heard Dawn say.\n\nAmy and I walked to the kitchen as Olivia stared at us. I went to Olivia and wrapped my arms around her.\n\n\"Let's eat first,\" I said.\n\n\"\u00bfQu\u00e9 carajo est\u00e1 pasando!\" Olivia exclaimed.\n\nI fixed Dawn a plate and a glass of wine and took it to her. Amy followed me. I went back to the kitchen.\n\n\"Are you going to tell me anything?\" Olivia asked.\n\n\"Olivia, it is going to take us some time to figure it out. Get something to eat and go sit with Dawn.\"",
        "Olivia fixed a plate while Sam and I did. We all walked back to the den and sat. We ate in silence for a few minutes.\n\n\"Olivia, we are not sure what happened,\" Dawn said.\n\n\"Dawn, what is going on between all of you? What happened with Samantha?\"\n\n\"We don't know yet.\"\n\nI looked over at Sam wondering what they were talking about. She looked up at me and smiled.\n\n\"Let me find a place to start,\" Dawn said as she sat her plate down and picked up her wine. \"Olivia, have you ever had feelings that you knew something was happening but didn't know what?\" Dawn asked.\n\n\"Yes, like right now.\"\n\n\"Not that way. Have you ever woken up in the middle of the night and knew something was wrong?\"\n\n\"Sure, everyone does that.\"\n\n\"Not really. Have you ever had a feeling like that and found out something did happen?\"\n\n\"Yes. One night I woke up when I was young and knew my uncle had died. In the morning I found out he had. Why?\"\n\n\"Why do you think that happened?\" Dawn asked.\n\n\"I think it was because I loved him very much.\"\n\n\"Do you think you two had some kind of bond?\"\n\n\"I don't know. I just knew it.\"\n\n\"Some people that are close have very strong bonds like that between them. In a few people the bond goes way beyond just feelings. My mother and I have a very strong bond between us. As I grew up, I could feel the way she felt and sometimes knew what she was thinking. She had the same feelings with me.\"\n\n\"Some people have that,\" Olivia said.\n\n\"Some. Olivia, you know I am part Cherokee, right?\"\n\n\"Yes, you told me.\"\n\n\"My great-grandfather was a Cherokee Shaman or a witch doctor as you may call him.\"\n\n\"A Curandero. The Spanish know of them.\"\n\n\"My grandmother and my mother both can feel things from other people.\"\n\n\"And you can too?\" Olivia asked.\n\n\"Yes.\"\n\n\"Like what?\"\n\n\"There are some people I know, that when they walk into a crowded room, I know they are there.\"\n\n\"How?\"\n\n\"Everyone says it is from my great-grandfather. I can not only feel their presence, but I know how they are feeling emotionally.\"\n\n\"There are people like that in my culture.\"\n\n\"So you believe I can do that?\"\n\n\"I guess.\"\n\n\"I can. And when I married James, I discovered he could too on some level.\"\n\n\"How?\"\n\n\"I don't know. He is just one of those people.\"\n\n\"But, that doesn't explain what just happened.\"\n\n\"Since we have known Amy and Samantha, we have discovered that the two of them can do this too.\"\n\n\"Why can they do it?\"\n\n\"We are not sure. But the four of us have discovered that when we are close, we can feel each other's emotions very strongly.\"\n\n\"You have told me something like that before,\" Olivia said. \"But what happened with Samantha?\"\n\nDawn looked at me for a moment.\n\n\"Olivia, the four of us have been going through some things lately. We have all been exploring our relationship because we have grown very close. If I tell you something, I need you to keep it to yourself for now.\"\n\n\"Okay.\"\n\n\"James and I have asked Sam and Amy to be our wives...\"\n\n\"What?!\" Came from Olivia.\n\n\"We can't be married to them legally, but that is how we feel about them. We have all talked about it, and this is the way we feel. The two of them have said yes...but Amy has not been able to understand fully how much we love her.\"\n\nAmy looked over at Dawn and smiled.\n\n\"What just happened was Amy understanding the depth of our love for her. I am guessing that it was such a strong emotional feeling that her sister felt it and had to go to her,\" Dawn said.\n\n\"Did you feel it?\" Olivia asked.\n\n\"Yes, I did.\"\n\n\"That was why I stopped and kissed her,\" Sam said. \"We were both overcome by James' and Amy's feelings. I had to be with my sister.\"\n\n\"Amy, what happened?\" Olivia asked.\n\n\"James was making love to me, and I suddenly knew that Dawn and he loved me very much. When I reacted to it, James felt it too. I didn't know my sister and Dawn could feel it out here, but it was an incredible feeling,\" Amy said with a huge smile.\n\n\"James, how are they going to be your wives?\" Olivia asked.\n\n\"Our wives. We are still working on that, but I have told them I love both of them like a wife. They know that I will always have stronger feelings for Dawn, and they accept that. But Dawn and I decided that we loved them that much. For now, it is just something we have told them to express how much we love them and want them to stay with us forever.\"\n\n\"Dawn, this is okay with you?\"\n\n\"Yes, it is. I didn't know any other way to let them know how I felt about them. Olivia, we have progressed beyond just being lovers.\"\n\n\"It sounds like it. Do any of you have other powers besides just feeling each other's emotions?\" Olivia asked.\n\nOlivia was putting us on the spot now. Dawn looked at me for a few seconds.\n\n\"Olivia, some people that can do what we can do can also give their emotional energy to other people. Not all people, but some,\" I told her.\n\n\"Can you all do that?\"\n\n\"I can and James can,\" Dawn said.\n\n\"What about the girls?\"\n\n\"They are learning,\" Dawn replied.\n\n\"How does that work?\" Olivia asked.\n\nSam was sitting next to Olivia; she looked up at me.\n\n\"It is just something we can do?\" Dawn said.\n\n\"Olivia, give me your hand,\" Sam told her.\n\n\"Sam,\" Dawn said.\n\nSam reached for Olivia's hand and took it into hers. \n\n\"What are you doing?\" Olivia asked.\n\n\"Olivia, you and I have made love to each other several times. You always enjoyed it, didn't you?\" Sam asked.\n\n\"Of course, you always make me so hot and horny that I come like crazy.\"\n\nSam was holding Olivia's hand and looking at her as Olivia watched her. Suddenly the look on Olivia's face changed. She was looking at Sam intensely now.\n\n\"What do you feel?\" Sam asked her.\n\n\"Ummm, I feel warm...\"\n\n\"Anything else?\"\n\n\"Sam, what are doing?\" Olivia asked.\n\nOlivia looked at Sam for a minute.\n\n\"Are you doing that?\" Olivia asked.\n\n\"What do you feel?\" Sam asked.\n\n\"I...uh...I feel like I need to be made love to. What are you doing?\"\n\n\"Just holding your hand. Don't you get a feeling like this when you are with your husband?\"\n\nSam held Olivia's hand for another minute. Then Olivia pulled her hand away from Sam.\n\n\"You made me feel this?\" Olivia asked.\n\n\"Maybe I did, maybe you just suddenly felt like you need love,\" Sam said.\n\n\"I don't know about you four,\" Olivia said looking up at us.\n\n\"Olivia, please keep this to yourself for now,\" Dawn said.\n\n\"I will. Someday, you are going to have to tell me more about this. Right now I think you all need to talk. Dawn, if you need anything, let me know. Thanks for lunch.\"\n\nOlivia stood up, and Sam took her plate.\n\n\"I will see you all later,\" Olivia said.\n\n\"Thanks for stopping by,\" Dawn told her.\n\n\"Okay.\" \n\nOlivia turned and headed for the door. I jumped up to go with her.\n\n\"Be careful driving,\" I said.\n\nShe looked up at me and smiled.\n\n\"I am just going to my husband's office.\"\n\n\"Okay.\"\n\nOlivia left, and I closed the door.\n\n\"Sam!\" I heard Dawn say. \"What did you do to her?\"\n\n\"I just wanted her to go, so I tried to make her want her husband.\"\n\n\"I think it worked,\" I said as I walked back to the den.\n\n\"Okay, we all need to have a long talk,\" Dawn said.\n\n\"Not right now,\" Amy said. \"Later, please.\"\n\n\"Okay. But, we must talk about this.\"\n\n\"Dawn, you were right. I wasn't sure how much you two loved me, but now I know. I love both of you the same way; I know that now.\" Amy told us.\n\nBy 1:30, we had all finished eating. By 2:00, Amy and Sam were taking off their robes so they could go swimming.\n\n\"What happened?\" I asked Dawn.\n\n\"I was going to ask you the same thing. What did you do to Amy?\"\n\n\"Nothing. I was making love to her slowly, and something happened. I suddenly felt a wave of love come from her, and I knew what she was feeling. It was incredible. She started crying then told me she knew. What happened with Sam?\"\n\n\"She was in the kitchen cooking lunch. I suddenly felt the love coming from you and Amy as I talked to Olivia. Sam walked up behind me and leaned over and kissed me. She whispered in my ear and said 'She knows now.' She asked Olivia to watch the stove then walked into the bedroom and closed the door. After she kissed me, I was overcome by all of your feelings. James, nothing like that has ever happened to me, except when I feel your love. What happened when she went into the bedroom?\"\n\n\"I was holding Amy as she cried, then I felt Sam touch me. Amy and I both felt her energy.\"\n\n\"What did it feel like?\"\n\n\"It was wonderful. We both were overcome by an incredible feeling of peace and calm. It was odd, I just suddenly knew everything was going to alright between all us. Then Sam got on the bed and held Amy and me, and we all started crying. A few minutes later she said she needed to be with you, and so did Amy.\"\n\nDawn just sat there and looked at me for a minute.\n\n\"James, I don't know what to do. When the two of them came out, I was standing waiting on them. I knew they were coming to me. When they hugged me, I think I felt the same thing you felt. The three of us started crying. What do we do now?\"\n\n\"I think for now we wait until they want to talk about it. Right now, the two of them are laying in a recliner holding each other,\" I said as I looked out the window.\n\nAs Dawn and I talked, I kept watching Amy and Sam. They were just holding each other. Dawn was worried about Sam now; she was afraid she wouldn't know how to control everything. I told her it looked like she had control by what she did to Olivia. Dawn got quiet; I knew she was thinking about everything. I cleaned up from lunch while she was thinking. I got her another glass of wine and took it to her.\n\n\"James...I know where my powers come from, I don't know where yours come from, but Sam didn't just develop hers from her relationship with Amy. She and Amy got theirs from some place. Sam is just too strong to have developed this on her own,\" Dawn told me as she sipped her wine.\n\n\"What are you thinking?\"\n\n\"I'm not sure, but I would be curious to know more about where her parents come from and yours for that matter,\" Dawn said.\n\n\"We know that the two of them are definitely of Irish decent.\"\n\n\"James, what do you know about your parents?\"\n\n\"I think my dad's great-grandparents are from Scotland way back. My mom told me once that her ancestors were from Europe, or Italy I think?\"\n\n\"I wish I knew more about your parent's ancestors and theirs. I know about my Cherokee ancestors, my grandmother told me all the stories about them, and I had to remember them.\"\n\n\"Maybe we can look into it.\"\n\nThe two of us talked for about an hour.\n\n\"Dawn, can you come outside and sit with us,\" Amy asked from the door.\n\n\"It's too hot sweetie; it will make me sweat under this bandage.\"\n\nAmy went back out, and I saw her, and Sam get in the pool.\n\n\"How are you doing,\" I asked.\n\n\"Okay. Help me get these clothes off.\"\n\nI help Dawn out of the shirt and shorts.\n\n\"Would you get my laptop?\"\n\n\"No. No working on the laptop or your files unless Sam is helping you.\"\n\n\"I want to do some research.\"\n\n\"Not right now,\" I told her.\n\n\"Then I can turn pages and read, would you get me some of the files, please,\" Dawn said.\n\n\"Are you sure?\"\n\n\"Yes. Bring me some of the student folders.\"\n\nI went to the table and picked up about ten folders and took them to her and laid them in her lap. I watched as she carefully flipped through the first few pages of one. I went and poured two more glasses of wine and took one back to Dawn. She sipped her wine and read for a while. \n\nI had pulled up the new items on the TV in the den and was checking all of them out. Two new cameras pointing at the pool gave me a nice view of Amy and Sam swimming laps. I looked over at Dawn about an hour later, and she had gone to sleep. I went outside to check on the girls.\n\nI found Amy on top of Sam in a recliner out of the sun, the two of them were doing each other. They were wet, either from the pool or sweat. I stood for a few minutes as the two of them moaned and worked on each other's pussy. \n\n\"Emmm...emmmm...emmm,\" was all that was coming from the two of them.\n\nThey were deep into what they were doing; I sat in a chair next to them to watch. They kept going for about 15 minutes until they were both having a huge orgasm.\n\n\"Oh god, sis!\" Amy screamed.\n\nThe two of them spent a few more minutes finishing each other off before they separated. When Amy stood, she looked at me, then sat in my lap and kissed me for a minute.\n\n\"What have you done to me?\" She asked.\n\n\"What do you mean?\"\n\n\"Everything is different now. Just now, I felt completely different when Sam was making love to me than I have ever felt.\"\n\n\"How?\"\n\n\"I feel my sister's love for me now stronger than ever.\"\n\n\"Honey, I don't think it is a matter of you feeling it stronger; I think you are just more aware of it now.\"\n\n\"Maybe, but I like what I feel.\"\n\n\"Good.\"\n\nI looked over at Sam, and she was looking at us smiling. Amy kissed me again for a few minutes.\n\n\"You feel different now too,\" Amy said.\n\n\"Just kissing me?\"\n\n\"Yes. It is the same thing. I feel your love for me now when we kiss.\"\n\n\"Wonderful.\"\n\n\"Is that the way you and Dawn feel all the time?\" Amy asked.\n\n\"Yes, it is. I hope you and Sam now feel that from us all the time now.\"\n\nAmy looked over at her sister.\n\n\"Sis, have you felt that before?\" Amy asked.\n\n\"I do, but it's still on and off with how strong I feel it,\" Sam said.\n\n\"You two, this is all still new to you. Dawn and I are going to have to work with you to make all this work,\" I told them.\n\nAmy looked back at me with a seductive smile.\n\n\"Can you work with me a little right now?\" She asked.\n\n\"You are starting to be like your sister, never satisfied.\"\n\n\"It's just...I still feel so happy, and horny,\" Amy said with a big smile. \"I feel a need to be close to you.\"\n\nAmy reached for my shirt and started pulling it off.\n\n\"I'm going inside,\" Sam said and got up.\n\n\"Amy, what do you need?\" I asked.\n\n\"I want to be close to you.\"\n\n\"I ask what you needed, not what you wanted.\"\n\n\"I need to be close to you right now.\"\n\nI lifted Amy, so she was standing, then stood. I took her hand and led her around the pool, and we walked out to the gazebo.\n\n\"It is hot out here,\" I said once we were in the shade.\n\n\"That's okay.\"\n\nAmy started removing my pants. Once she had me undressed, I led her to the tantra chair.\n\n\"Sit,\" she said.\n\nI stepped across it and sat in the bottom of the swell. Amy stepped over me and sat in my lap. She reached down and played with my cock until it was nice and hard.\n\n\"James, do you think I will ever be able to do what Dawn does when she just sits in your lap?\"\n\n\"You will be able to do that one day in whatever position works for you,\" I told Amy after what had happened with her sister.\n\n\"Can you teach me?\"\n\n\"It is not a matter of me teaching you. There are things Dawn and I can tell you that will help, but, honey, it happens a lot like it happened to you today. Just instead of it happening without you knowing it is going to, you know how to make it happen and control it. That is something Dawn is going to be better at explaining than I can.\"\n\n\"Can we practice a lot,\" Amy said with a big smile.\n\n\"All the time.\"\n\n\"Can we start now?\" Amy said as she pushed herself up on her knees and grabbed my cock and started it into her pussy.\n\n\"Why don't we just be close to each other right now,\" I told her.\n\nAmy eased all the way down on my cock. She took a deep breath and closed her eyes for a minute.\n\n\"Oh...my...\"\n\n\"Different?\" I asked.\n\n\"Yes...\" Amy replied as she opened her eyes and looked at me. \"Will I feel this way from now on?\"\n\n\"Honey, right now, your senses and emotions are in a heightened state, that is why everything feels different to you.\"\n\n\"It won't always be this way?\" Amy asked concerned.\n\n\"I don't know yet; I think it won't be this way all the time for a while.\"\n\n\"Why?\"\n\n\"Amy, if it is like when Dawn I discovered it, it will take some practice to put yourself in this type of mood.\"\n\n\"No!\" Amy exclaimed frustrated.\n\n\"You will be able to do it, don't worry. Dawn and I will have a lot of fun and time to teach you and your sister. Besides, Dawn says she can't maintain this elevated mood all the time; it tires her out.\"\n\n\"Good, because you can always make me feel this way.\"\n\n\"Amy...I didn't do this to you. You did this; you just let it happen.\"\n\n\"You didn't push me and make me feel this way?\"\n\n\"No, I just gave you back what you were giving me.\"\n\n\"But you can always push me, so I feel this way.\"\n\n\"Not anymore. I could, but now I will work with you so that you let yourself feels this way when you want to.\"\n\nAmy smiled and worked her hips a little to make sure I was all the way inside her.\n\n\"I need to ask you something?\" She said. \"Can my sister already do this?\"\n\nI knew this question was going to come up.\n\n\"Your sister is more open to this. You know she is a freer spirit than you are; we talked about this. You spent most of your life looking out for her you said once.\"\n\n\"Is she better than I am?\"\n\n\"Okay, stop. There is no one better than anyone else. This is not going to happen overnight, Amy. You and your sister are just at different places right now.\" I leaned up and wrapped my arms around her and held her. \"You have just learned to accept love, start there because that is the first step.\"\n\n\"Okay.\" Amy kissed me then laid her head next to mine.\n\nAs I held Amy for a few minutes, the heat outside and the heat between us grew. My arms were feeling the perspiration from her skin as I touched her. Her hot breasts pressing against my upper chest were perspiring. I held her for a few more minutes then let go of her.\n\n\"Should I feel hot inside?\" Amy asked.\n\n\"I don't know, but you always feel hot inside when we make love.\"\n\nAmy leaned back a little and worked her pussy some.\n\n\"I don't think I ever cooled off,\" Amy said with a smile.\n\nA zepher went by and cooled us slightly.\n\n\"Emm, that feels good.\"\n\n\"Amy, remember when we were in Hawaii making love on the beach?\"\n\n\"Oh, yes.\"\n\n\"Do what I told you to do then. Just feel the air moving around you.\"\n\nI watched as she closed her eyes and sat on me. The gentle breeze came back; I could feel her moan.\n\n\"Lay back,\" I told her.\n\nI took her hands and let her lie back against the chair. I leaned against my side. I looked at where my cock was buried inside her.\n\n\"Just relax,\" I told her.\n\nWe lay that way for a little while. I started to feel Amy's insides twitching.\n\n\"Honey, what do you feel?\" I asked.\n\n\"You.\"\n\nAmy had been pushing and pulling different energies from me as I let her. I took my hands and placed them on her mound and did nothing to her. This was something Dawn had taught me early on, to just touch and feel. I closed my eyes and very carefully felt for her energy without adding to it or taking it. I could feel the same thing I felt earlier, she was happy and content. She was also highly aroused. I a little stronger breeze blew through the gazebo. I watched as the goose bumps formed slowly on her fair skin, then spread around her nipples.\n\n\"Emmm...\"\n\n\"What did you feel, honey?\"\n\n\"Emm, the breeze made my skin tingle,\" she said lying back with her eyes still closed.\n\nI tried something with her I used to do with Dawn. When we used to touch each other and see if we could produce different feelings on our skin, I had learned to give Dawn goose bumps. I tried it on, Amy.\n\n\"Ohhhhh! Wow...\" she said as the goose bumps spread from her mound and up to her chest. \"You did that.\"\n\n\"I'm just playing with you.\"\n\n\"Oh, you made me tingle inside too.\" I hadn't been trying to do that.\n\n\"Really?\"\n\n\"Yes. I felt the tingling around your cock. Do it again.\"\n\nI pushed again, but a little harder. Amy's stomach arched up.\n\n\"Ohh, god!\"",
        "Amy worked her pussy slightly.\n\n\"Damn...I feel like something electric is inside me where your cock is for few seconds.\"\n\nDawn and I had only played with the sensations of touching a little. I had never had a reaction from Dawn like this, she also just shivered and giggled. For me, it was just something simple I could do. It was why some women always said my touch felt tingly or electric.\n\n\"Amy, I want to try something.\"\n\nI removed my hands from her mound and gently placed them around each breast and tried it. Amy opened her eyes and looked at me.\n\n\"Ohhhhhhh, wow...my nipples and breasts are tingling. What are you doing?\"\n\n\"Not sure. I used to do this to Dawn to give her goose bumps.\"\n\n\"Oh, the feeling is much more than goose bumps.\"\n\nI removed my hands and took the tip of my index finger and placed it on one of Amy's erect nipples and tried, hard. Amy jumped a little.\n\n\"Oh, my...that runs all the way through my boob.\"\n\n\"Do you like it?\"\n\n\"Oh, yes. James, would you try something else?\" Amy said.\n\n\"Sure.\"\n\nI moved my hand down and slid the tip of my index finger between her pussy lips and gently touched her clit, and tried, hard. Amy stiffened abruptly.\n\n\"Stopstopstop!\"\n\nI withdrew my finger.\n\n\"That was great, but can you dial it back some?\" Amy said.\n\nI placed my finger back on her clit and slowly pushed.\n\n\"Oh, yes! It feels like one of those things you put on muscles to shock them.\"\n\n\"You want me to keep going?\" I asked.\n\n\"Yes, just slowly.\"\n\nI began to slowly rub her clit with the tip of my finger as I tried to slowly intensify what she was feeling.\n\n\"Ahhhhhhh! Ahhhh!\"\n\nAmy was tensing up while she had her head thrown back.\n\n\"More!\"\n\nI kept experimenting with her. She began to tremble. \n\n\"Ahhhhhh!!\"\n\nAmy began to jerk her hips up as I kept going. She moaned and shook for another minute.\n\n\"Ohhh!! God!!\" Amy screamed and started jerking hard against my cock as she began squirting. \"Fuuuuuck!!\" She screamed then squirted and jerked some more. \"Stop!!\"\n\nI stopped; Amy collapsed.\n\n\"Oh, fuck...I bet Dawn loves that,\" Amy moaned.\n\nThat would be okay, but Dawn had never reacted like that. I slowly rubbed her thighs as she lay. After a few minutes, Amy held her arms up, and I took them and pulled her up, so she was sitting. She ran her hands up through her hair.\n\n\"Oh, my. That was wonderful.\"\n\nShe relaxed and looked at me for a minute.\n\n\"My turn,\" she said.\n\nI watched as Amy began to work her pussy slowly on my cock. After a few minutes, she had a sexy wiggle going working my cock deep into her pussy. She kept going as I watched her reach up and grab her breasts and squeeze them.\n\n\"Emmmm...\"\n\nShe was looking into my eyes as she kept going. I reached for her hips and held her as she worked her magic. Amy kept going for a long time as she wiggled on my cock. She kept looking into my eyes.\n\n\"Ohh...ohh...ohh...\"\n\nAmy felt different now. She always felt wonderful to me, but now she was beginning to feel more like a part of me like Dawn did. Right now, she wanted nothing but to please me.\n\n\"Ahh...ahh...ahh...you feel so good inside me...\"\n\nAmy kept going at a nice steady pace. The heat between my cock and her insides growing hotter and hotter.\n\n\"Oh, honey...fill me full of cum...\"\n\nAmy kept going as she squeezed her breasts harder.\n\n\"Do it...do it...Do It!!\" Amy screamed as an orgasm hit her. \"Ahhhhhh!!\"\n\nI let go and began pumping cum into her hot depths.\n\n\"Ohh!! Fuck, yes!! Come inside me!!\"\n\nI kept shooting load after load of cum inside Amy as she kept going. This was one of those times I wasn't sure I would stop.\n\n\"Oh, fuck, Amy!!\" I screamed as I thrust up into her.\n\n\"Yes!!\"\n\nMore cum. After a minute, my cock was just spasming, no cum left.\n\n\"Ohhhh, my, god...\" Amy said as she stopped. \"That was incredible.\"\n\nI reached for her and pulled her down onto me and kissed her for a minute.\n\n\"Honey, I am going to enjoy teaching you things,\" I said to her.\n\n\"I can't wait.\"\n\nAfter a few minutes, we got up and walked back to the patio. I threw my clothes in a chair, and we stepped under the outside shower and let cold water run over us for a few minutes. Sam brought us some towels to dry off with before we went inside.\n\n\"Didn't you two get hot?\" Dawn asked.\n\n\"Very,\" Amy said and headed for the stairs. Sam followed her.\n\n\"We have been watching you two from the camera in the gazebo. What did you do to her with your finger?\" Dawn asked.\n\nI sat next to Dawn on the sofa and laid my bare hand on her exposed thigh.\n\n\"Stop! That makes me cold!\" Dawn said as the goose bumps appeared on her leg.\n\n\"Just cold?\"\n\nDawn looked at me for a minute.\n\n\"That is what you did? That's it?\"\n\n\"I was just playing with her like we used to do. She said it made her tingle, so I experimented,\" I said.\n\n\"Really? Maybe it affects other people differently,\" Dawn said.\n\nI slid my hand inside her shorts and slid the tip of my finger between her lips and found her clit. She jumped.\n\n\"Shit! That makes me cold!\" I looked at Dawn and laughed.\n\n\"I guess you're frigid.\"\n\n\"Fuck you!\" Dawn yelled, then started laughing.\n\nI talked to her about some of what I had felt from Amy. She wanted to know if I had pushed her for the last part; she was surprised when I said no. Dawn and I talked awhile about what was happening. Sam came back downstairs in her short robe hanging open. She walked around to the front of the sofa and sat in my lap and wrapped her arms around my neck and held me.\n\n\"My sister is happy,\" she said. \"I could feel it.\" Sam kissed me on the cheek and held me.\n\n\"Where is she?\" Dawn asked.\n\n\"Asleep.\"\n\n\"She will miss dinner.\"\n\n\"Don't worry. When her schedule is off like this, she will sleep until about 9:00, then get up and eat and then go back to bed,\" Sam said.\n\n*****\n\nAfter dinner, I showed Dawn and Sam the new security things on the TV. I showed them how to operate everything that could be controlled from the remote and the touchpad by the door.\n\nAmy surprised us when she came down the stairs about 8:30. She sat with us on the sofa.\n\n\"Amy, what time are you going in tomorrow?\" Dawn asked.\n\n\"At 6:00 am, I will be working 12 hours.\"\n\n\"Sam, are you going with her?\"\n\n\"No. I am taking care of you.\"\n\n\"Okay. I will need you to run into town for me tomorrow and get me some things.\"\n\n\"As long as James is here.\"\n\n\"I'll be here. Where are you sleeping tonight?\" I asked.\n\n\"I'll try the bed,\" Dawn said.\n\nAbout 10:30 we all went to bed after Amy had eaten. I got Dawn in our bed and comfortable, then I got in bed next to her.\n\n\"I want to hold you, but I better not,\" I said. Dawn reached over and took my hand.\n\nI turned off the lights, and we went to sleep.\n\n*****\n\nI left Dawn sleeping Thursday morning. I got up about 5:00 to go and check on Amy. She was just coming out the shower.\n\n\"What would you like for breakfast?\" I asked.\n\n\"If you're cooking, everything.\"\n\nI moved to Amy and wrapped my arms around her naked body and held her, and moved her to the bed and laid her down. I kissed her then kissed on her nipples for a minute.\n\n\"Are you back on your regular schedule tomorrow?\"\n\n\"Yes.\"\n\n\"If your sister will sleep with Dawn tonight, can I sleep with you?\" I asked her.\n\n\"Of course.\"\n\n\"Good. You and I need to talk about some things.\"\n\n\"Okay. I'll be home by 7:00.\"\n\n\"I will go and fix your breakfast.\" I kissed her and headed downstairs.\n\nAmy came down about 15 minutes later and joined me for a nice big breakfast. \n\n\"I like the naked chief you hired,\" Amy said with a giggle.\n\nAfter she had left for work, I went and checked my email and some other things on the computer. About 8:30 I went up to check on Dawn. She was in the bathroom trying to clean herself up.\n\n\"Let me do that.\"\n\n\"I can do it.\"\n\n\"Come with me,\" I told Dawn as I led her into the shower.\n\nI took one of the shower heads off the wall and turned the water on.\n\n\"Don't get my bandages wet.\"\n\n\"I won't. You hold the shower head.\"\n\nDawn took the shower head and wet herself down from the waist down. I grabbed the body wash and soaped up from her waist to her toes while I sat on the tile floor. When I was finished, she rinsed off.\n\n\"Feel better?\" I asked looking up at her.\n\n\"Yes.\"\n\nI slid my hand up her wet leg to her pussy and brushed her lips. She was still looking down at me when I slipped two fingers inside her pussy.\n\n\"Emmm...\"\n\nI sat in front of Dawn for a while and fingered her pussy until she was moaning nicely. I put my hand on her ass and pulled her closer to me. I placed my mouth on her pussy and found her clit with my tongue.\n\n\"Oh, yes, honey!\"\n\nI worked my fingers inside her while I tongued her clit for a while. Dawn had placed her hand on the back of my head and was pulling me into her. I took my time as she held me and moaned.\n\n\"Ohh, I need this.\"\n\nI began to lick her clit harder as I started rubbing one of her spots.\n\n\"Oh, yes...just like that!\"\n\nTen minutes later, Dawn had a nice orgasm.\n\n\"Oh, honey...thank you. That was perfect.\"\n\n\"You need to shave,\" I told Dawn looking up at her smiling.\n\n\"Hey! Bite me!\"\n\nI bit Dawn on the top of her thigh.\n\n\"Ouch! Stop that!\"\n\nI stood, and we left the shower and dried the two of us off.\n\n\"You left bite marks on me!\"\n\n\"You said bite you.\"\n\n\"Asshole!\"\n\n\"If Sam will stay with you tonight, I am going to sleep with Amy.\"\n\n\"She will be happy about that.\"\n\n\"While we are settled in, I am going to call Deputy Steve and our limo driver,\" I said.\n\n\"About your limo idea?\" Dawn replied.\n\n\"Yes. I want to get that off the ground.\"\n\n\"Will it make any money?\"\n\n\"Probably not for a few years. We are going to have to offer some very special services to attract customers.\"\n\n\"I thought you had an idea about putting cameras in them?\"\n\n\"I do, but that will just be one service. After thinking about Linda and her armed drivers and security people, I'm thinking about offering armed security as an option.\"\n\n\"So what kind of idea do you have for this? Are you going to get a couple of limos and let the deputies drive them, or start an entire company?\" Dawn asked.\n\n\"I would like to start a company. Get some limos, have Sam wire them for cameras. Then get some exotic limos and some other things like mobile offices, executive services, party limos, and anything else they may think of.\"\n\n\"How much are you planning on spending?\"\n\n\"I am guessing the deputies and our driver may be able to come up with a couple of hundred thousand. I thought about starting with 2 million or so.\"\n\n\"That should be a big start. Where is the money coming from?\" Dawn asked.\n\n\"Our investments have been doing well.\"\n\n\"Why don't you ask Linda if she would be interested in going in with you?\"\n\n\"I don't think she would; she has her own limos.\"\n\n\"Call her anyway.\"\n\n\"Let me see what all the guys want to do. I am going to have all of them that are interested over Saturday.\"\n\n\"Okay.\"\n\nAfter I got Dawn downstairs and fed her breakfast and got her settled, I went to the study to call our limo driver and Steve first.\n\n\"Hello?\"\n\n\"Hey Jeff, this is Dr. Smith. I was thinking it was about time we talked about starting a limo company.\"\n\n\"Really! I am sure ready!\" Jeff said.\n\n\"I thought you and any other drivers that are thinking about investing in a new company or driving could come to the house Saturday about noon.\"\n\n\"That would be great. I have two other drivers that are interested.\"\n\n\"Jeff, just so I know where we are starting, how much money are you thinking about investing?\"\n\n\"I can put my hands on about a hundred thousand. That is what I have been saving to buy a custom limo. Is that enough?\"\n\n\"That will be good. I know a few deputies that want to get involved too. They will be here Saturday also.\"\n\n\"Maybe we will have enough for a couple of new or used limos,\" Jeff said.\n\n\"I am thinking bigger than that. I thought we would start a new company and offer some executive services and other things. I want to see what kind of ideas you have since you drive all the time.\"\n\n\"You mean a full-time company?\"\n\n\"Yes. Be thinking about anyone we can steal from other businesses for drivers and managers.\"\n\n\"Okay. Anything else?\"\n\n\"Since you have been researching it, bring all the information you have on new limo costs and styles.\"\n\n\"Will do. I have a complete list of what standard and custom limos cost and some of the others.\"\n\n\"That will help us. See you Saturday around noon.\"\n\n\"Okay.\"\n\n\"Bye.\"\n\nI called the cell number for Deputy Steve next.\n\n\"Hello?\"\n\n\"Steve? This is Dr. Smith. Do you have a few minutes to talk?\"\n\n\"Sure.\"\n\n\"Can you come to the house Saturday about noon?\"\n\n\"Sure, why?\"\n\n\"I am bringing in several limo drivers that are interested in starting a new limousine service. You had said you might want to invest.\"\n\n\"Sure!\"\n\n\"I'm ready to start researching the idea. Can you come and bring any of the other guys that either wants to invest or drive part-time?\"\n\n\"I sure can. I know there are a couple of other guys that are thinking about buying their own limos to drive.\"\n\n\"Tell them to come. Something I will need your help on is the things we talked about for providing armed security. I want to offer executive security services.\"\n\n\"Okay. There would probably be issues for any of the deputies to provide the services, but we can talk about it.\"\n\n\"Do you know any guys on the city police force that might be interested?\" I asked.\n\n\"Several.\"\n\n\"Call anyone that is interested in investing or driving and have them come Saturday.\"\n\n\"I can do that.\"\n\n\"I'll see you Saturday.\"\n\n\"Great.\"\n\n\"Bye.\"\n\nNow I had started the ball rolling. I couldn't wait to see what kind of money the group had to invest. I didn't think it would be that much, but I wanted them to be part owners. I went to check on Dawn. She was sitting on the sofa going through her files.\n\n\"Come here,\" she said.\n\nI walked over and sat with her on the sofa.\n\n\"I'm so tired of sitting around the house.\"\n\n\"You have been working on your students for school.\"\n\n\"I know, and I am ready to bring in the contractors in for your studio.\"\n\n\"Maybe next week.\"\n\n\"Go and get Sam up, I need her to do some things for me.\"\n\nI went upstairs to Sam's room; she was slipping on some shorts and a T-shirt.\n\n\"Dawn wanted me to see if you are up. She needs you to do some things for her.\"\n\n\"Okay.\"\n\n\"Honey, would you watch Dawn tonight? I want to sleep with your sister.\"\n\n\"I guess. Will she let me sleep with her?\"\n\n\"Yes, but you can't hold her at night while you sleep.\"\n\n\"Okay.\"\n\n\"I will cook you breakfast.\"\n\n\"Cereal is good today.\"\n\nWe went back downstairs; Sam went and sat with Dawn. I went to my study. I was looking on the internet at limos. I got a popup for a new email. I checked, thinking it would be Sam, but it was from Linda.\n\n\"How is Dawn doing? I want to come by and see her tonight?\"\n\nI sent her a reply.\n\n\"She is doing good. Come on by.\"\n\nI went back to looking at limos. It looked like there were a few places that could be useful for buying and building. I found several places that built armored limos. A few were much closer than some of the others a few states away. I spent about an hour looking at prices and options. I took a break and went to check on Dawn.\n\n\"I got an email from Linda; she is stopping by after work to see you.\"\n\n\"Good. I will need to thank her for the roses.\"\n\n\"Where did Sam go?\" I asked.\n\n\"She is picking me up some sports bras to see if I can wear them once the bandages are off.\"\n\n\"Maybe John will let you leave them off tonight.\"\n\n\"I hope so. I need a shower bad.\"\n\n\"He will probably get here about the same time as Linda.\"\n\n\"She is bringing Rachel, isn't she?\" Dawn asked.\n\n\"I'm sure she is.\"\n\n\"Good, she can meet the girls.\"\n\n\"I'm going back to look at limos. Do you need anything first?\"\n\n\"I'm good. What does a new stretch limo cost?\"\n\n\"From about $80,000 up.\"\n\n\"Well, price some nice ones. You will have to be better and different from everyone else,\" Dawn said.\n\nI went back to my study. Later I heard Sam come in.\n\n\"What are you doing?\" Sam asked.\n\n\"Looking at places to get limos.\"\n\n\"Are you going to start the limo company soon?!\"\n\n\"I am having a meeting with everyone interested Saturday.\"\n\n\"Great! I can't wait until we have our own personal limo!\"\n\n\"We won't. They will all belong to the company.\"\n\n\"Still.\"\n\n\"You want to be at the meeting Saturday? I need someone to take notes.\"\n\n\"Sure!\"\n\n\"Linda is stopping by to see Dawn.\"\n\n\"Tonight?\"\n\n\"Yes.\"\n\n\"Is she bringing Rachel?\"\n\n\"I am sure she will.\"\n\n\"Are you still planning on inviting them for dinner so we can get to know them?\" Sam asked.\n\n\"You can get to know her tonight, but we are going to invite them one Friday night to stay the weekend if they want to do that.\"\n\n\"When?\"\n\n\"Why don't you and Amy invite them tonight.\"\n\n\"When?\"\n\n\"Soon. Maybe over the next couple of weeks,\" I said.\n\n\"Okay. I'm going to talk to Dawn about it. Are you coming?\"\n\n\"Go ahead. Linda will probably be here by 6:00. See what Dawn wants for lunch,\" I asked.\n\nSam left my study. About 12:30, I went to check on Dawn and lunch. Sam was showing Dawn the sports bras. I interrupted to see what they wanted to eat. I then went to fix lunch for all of us.\n\n*****\n\nAmy got home about 5:45 and went upstairs and came back in robe. She had gotten off work early.\n\n\"John said he would be here about 6:30 or so, he is tied up,\" Amy told Dawn. \"Sam said Linda is coming.\"\n\n\"She emailed me; she wants to come and see Dawn.\"\n\n\"I guess she is bringing Rachel?\" Amy asked.\n\n\"I would think you are right. Did you three decide pizza was good for dinner?\" I asked.\n\n\"That will be fine,\" Dawn said.\n\n\"I'm good with that,\" Amy said. \"Oh, I swapped for tomorrow so I can be off. I will be working Sunday though.\"\n\n\"Good. I think I am going to get Dawn out of the house tomorrow and take her shopping,\" I said.\n\n\"Me too?\" Amy asked.\n\n\"Of course. Sam, go order the pizzas. Get an extra one just in case Linda and Rachel want to eat with us,\" I told her.\n\n\"Sam said you want the two of us to invite Linda and Rachel for a weekend,\" Amy said.\n\n\"We told them we would so they could get to know everyone. Now that Dawn is getting up and around, maybe within a few weeks.\" I said.\n\n\"Okay.\"\n\n\"The pizzas will be here in about 45 minutes,\" I heard Sam say.\n\n\"Sam, come here a minute,\" I told her as I sat next to Amy. She walked up and stood next to me.\n\n\"What's up?\"\n\n\"We haven't talked about this, but I need you and your sister to start thinking about going and getting all of your things from your school.\" Sam looked down like she didn't want to talk about it. \"What all do you need to get?\"\n\n\"Just some things from my apartment.\"\n\n\"Anything else?\"\n\n\"I don't know,\" Sam mumbled.\n\n\"Sam, if you are moving here, you have some things at the house you need to get,\" Amy told her. Sam mumbled something.\n\n\"You two get together and decide when you want to go get your things,\" I told them. Sam walked away and went upstairs.\n\n\"Amy, what is wrong with your sister,\" Dawn asked.\n\n\"I will have to talk to her.\"\n\n*****\n\nI was at the door paying the pizza guy. It was almost 6:45.\n\n\"Mr. Smith, is your wife here?\" He asked.\n\n\"Next time, Bob,\" I told him and tipped him well for driving out to our house.\n\nLinda came screaming up the drive in her Diablo. She didn't get out until after the pizza guy drove off.\n\n\"Is that dinner!\" She yelled as I stood there with the pizzas.\n\n\"If you want to eat with us.\"\n\nI watched as Rachel got out of the car and followed Linda to the door.\n\n\"Hi, Rachel.\"\n\n\"Hi, James.\"\n\n\"You two come on in.\"\n\nDawn was walking to the door as they walked in.\n\n\"Linda, how are you doing?\" Dawn asked.",
        "\"Okay, I wanted to come and see you,\" Linda said as she gently hugged Dawn.\n\n\"Thank you for the roses.\"\n\n\"My pleasure. James said they were your favorite flower, mine too.\"\n\n\"Rachel, how are you doing?\" Dawn asked.\n\n\"I'm doing fine, trying to keep tabs on her.\"\n\n\"Is she not cooperating?\" Dawn asked.\n\n\"What do you think?\"\n\n\"Where are the girls?\" Linda asked.\n\n\"Outside by the pool.\"\n\nI walked to the kitchen to set the pizzas down while they talked. I looked out the window and saw Sam and Amy slipping their robes back on before they came in.\n\n\"There they are,\" Linda said walking up looking out the window. Amy and Sam walked into the house.\n\n\"Hi, you two. I wanted you to meet Rachel,\" Linda said.\n\nShe introduced Rachel to the girls. Sam and Amy told her they couldn't wait to talk to her about the trips.\n\n\"Do you two want to eat with us?\" Dawn asked.\n\n\"Sure.\"\n\n\"We need to go put some clothes on,\" Sam said.\n\n\"You don't have to, if you don't want to,\" Linda told them smiling.\n\nWe grabbed some plates and glasses and got pizza and went to the dining room and sat down after I grabbed some wine. We all sat, and I poured wine for everyone.\n\n\"Dawn, how are you healing?\" Linda asked.\n\n\"Nicely, I hope. Dr. John will be by tonight to check. This wrap has been a pain in the ass.\"\n\n\"That part sucked. You look great,\" Linda said. \"What are you all doing this weekend?\"\n\n\"Nothing,\" Dawn said.\n\n\"I am having a meeting about noon Saturday with some guys that are thinking about starting a limo company,\" I told her.\n\n\"Are you going to get into the limo business?\" Linda asked.\n\n\"Maybe. I am thinking about a limo business that offers special items.\"\n\n\"I bet you are.\"\n\n\"Did you want to come over?\" Dawn asked.\n\n\"Rachel and I were thinking about it. But if you are going to have a house full of people Saturday, maybe next weekend.\"\n\n\"Linda, why don't you and Rachel plan on coming next Friday evening and staying the weekend,\" Amy said.\n\n\"Rachel, how does that sound to you?\" Linda asked.\n\n\"Sounds fine.\"\n\n\"Rachel, I can't wait to hear from you about what all happened, I don't think they are telling us everything,\" Sam added with a big smile.\n\n\"I hope they're not!\" Rachel said. \"James, have they finished updating your security system?\"\n\n\"Yes.\"\n\n\"What all did they do?\"\n\n\"I will show you next weekend.\"\n\nWe ate for a while and finished off most of the pizza. Linda held off on any more wine since she was driving. We all moved to the den.\n\n\"I love your house,\" Rachel said as she looked around.\n\n\"Linda, have you told Rachel everything?\" I asked.\n\n\"Yes.\"\n\n\"Is that what you are looking for, Rachel?\" I asked her.\n\n\"Maybe.\"\n\n\"You can't see them unless I show you where they are.\"\n\n\"All over the house?\"\n\n\"Yes, and outside.\"\n\n\"Motion activated?\"\n\n\"Can be. Rachel, I'll show you everything when you come back.\"\n\n\"I expect you to.\"\n\nWe all sat and talked until Dr. John showed up about 7:15. I met him at the door, and he came inside.\n\n\"Dawn, how are you doing?\" He asked as he walked to her.\n\n\"Good. I'm hoping you will take these bandages off.\"\n\n\"I will have to look. Hi, Linda.\"\n\n\"Hi, John. John this is Rachel; she is...my...\"\n\n\"Bodyguard,\" Rachel said as Linda was thinking.\n\n\"Nice meeting you, Rachel.\"\n\nI got up so John could sit next to Dawn. He started unwrapping her bandage slowly until it was off.\n\n\"Dawn, lean back on the sofa,\" he told her.\n\nShe leaned back so John could pull off the rest of the bandages off then lifted her breasts up and looked at the incisions.\n\n\"Oh, they look great,\" he said. \"They are healing very well.\"\n\n\"Well enough to leave the Ace bandage off?\" Dawn asked.\n\n\"I think so. I wish I had brought the camera.\"\n\n\"I can get mine, I have a ring-flash,\" I told him.\n\n\"Great.\"\n\nI went to my study and set up my camera and went back; John was wiping away some of the orange soap stains from Dawn's breasts as she lay on the sofa. Amy was handing him alcohol swabs while he cleaned Dawn off.\n\n\"What do you need, John?\" I asked.\n\n\"Some close ups of the incisions. Let me lift a little and you take some of each side.\"\n\nI got down on the floor to look, and the incisions were just a thin red line.\n\n\"Wow, Dawn. The incisions look great,\" Linda said looking.\n\nI worked with John a few minutes and took the pictures he needed.\n\n\"Can I sit up?\" Dawn asked.\n\n\"Let me lift you up from the back,\" John said and helped Dawn sit up.\n\n\"Wow! They look nice!\" Linda said.\n\n\"Yes, they do,\" Rachel added.\n\n\"He ran one long suture through the incision to hold it closed then glued the edges,\" Dawn told them.\n\n\"You are not going to have much of a scar.\"\n\n\"I want him to do mine,\" Rachel said.\n\n\"I wish my scars looked that good,\" Linda said.\n\n\"Yours are not bad,\" Dawn said.\n\n\"I have a lot of stitch scars.\"\n\n\"But yours are like mine; they are under your breasts. They look great,\" Dawn told her.\n\n\"I still have a lot of stitch marks.\"\n\n\"Linda, let me look at them,\" John said.\n\nLinda pulled off her coat and blouse then took her bra off. She leaned back on the sofa and John lifted her breasts up to look.\n\n\"I know your doctor, he does good work,\" John said as he lifted and looked over Linda's breasts. \"How big were you before?\"\n\n\"A full C.\"\n\n\"Your stretch marks are not bad at all. You do have some tiny scars from the small stitches he used, but that was the best we knew how to do a few years back,\" John told Linda.\n\n\"The scar is kind of long,\" Linda said.\n\n\"He put a large implant inside you. He did a great job. Linda, are you self-conscious about the scar?\"\n\n\"Some. It is under my breasts, so no one sees it unless I am lying back.\"\n\n\"Does that bother you?\"\n\n\"Well, everyone knows I have implants, so maybe not.\"\n\n\"Linda, it is not that obvious. What are you a Double F?\" John asked.\n\n\"Yes. I went too big.\"\n\n\"No, you didn't. They fit your tall body well. If that scar bothers you that much, it could be lessened.\"\n\n\"How?\"\n\n\"If what I am trying on Dawn and a few others works fine, I could actually cut the scar out and then connect the skin like Dawn's. But, it will be a while before I would be comfortable trying that. Since I do facial reconstruction, I do a lot of scar removal and rebuilding.\"\n\n\"Let me know.\"\n\n\"I will.\"\n\n\"Linda, can he do mine?\" Rachel asked.\n\n\"Honey, you have nice breasts.\"\n\n\"I want to be a full D.\"\n\n\"If that is what you want.\"\n\n\"John, what do I do now?\" Dawn asked.\n\n\"You know the follow-up. What do you have to hold you up for a week or so?\" John asked.\n\n\"I have some sports bras like we tell all the women to wear.\"\n\n\"Okay. You have the cream, keep the incisions coated with it for a week. Don't lift anything for a few more days.\"\n\n\"Do I have to wear support all the time?\"\n\n\"For the next few weeks, you know that. Keep a good moisturizer on your breasts for the next few weeks also.\"\n\n\"Can I lay in the sun?\" Dawn asked.\n\n\"Not until late next week. I have told you about the sun drying your skin, Dawn.\"\n\n\"I keep it oiled up and use the best moisturizer there is all over my body.\"\n\n\"I know. Don't let the sun hit the incisions for a week or so.\"\n\n\"Thanks.\"\n\nJohn felt Dawn's breasts for a minute.\n\n\"They look perfect,\" he said. \"Anything else?\"\n\n\"I guess I know what to do. Thanks, John,\" Dawn said.\n\n\"Okay, I need to get home.\"\n\nI escorted John to the door, and he left. I sat down next to Dawn; she was gently rubbing her breasts.\n\n\"Amy, would you get some more alcohol and something to clean the rest of this sticky soap off?\" Dawn asked. Amy went down the hall.\n\n\"Can I ask something?\" Rachel said while she looked at Sam.\n\n\"Sure,\" Dawn said.\n\n\"Sam, are you really over 18?\" Sam giggled.\n\n\"Yes, I am. I will be 19 soon.\"\n\n\"You sure don't look it.\"\n\n\"I don't have any makeup on.\"\n\n\"I know, I hate you,\" Rachel said smiling.\n\n\"Rachel, would you like to take your suit coat off,\" Sam asked. \"I know you have a gun.\"\n\n\"If you don't mind.\"\n\nRachel stood to take her coat off; Sam stood and helped her. When Rachel turned around, she looked at Sam standing there with her robe open.\n\n\"I'll hang your coat up,\" Sam said walking to the closet. \n\nWhen Amy walked back in the den, her robe was open. She sat on the sofa letting her robe fall open. I watched as Rachel looked her over closely while Linda watched her.\n\n\"Rachel, is there anything you would like to ask?\" Linda questioned her.\n\n\"Are all of you okay with me tagging along with Linda?\"\n\n\"Rachel, you are not tagging along. You are a part of Linda's life; now you are part of ours,\" Dawn told her. \"We talked about this.\"\n\n\"Amy and Sam, is it okay with you two?\" Rachel asked.\n\n\"Of course, it is,\" Amy told her. \"Linda is now a part of our family. Since you two love each other, you are now part of our family...if you want that.\"\n\n\"I do. I don't really have a family.\"\n\n\"Yes you do,\" Linda said. Rachel didn't say anything.\n\n\"Rachel, have you heard anything about her stalker,\" I asked.\n\n\"We haven't heard anything. The company has not updated us on where he is.\"\n\n\"Do they still have him?\"\n\n\"We don't know.\"\n\nLinda was looking at Dawn's tits closely.\n\n\"Dawn? You said you were going up to a D cup, right?\" Linda asked.\n\n\"Yes...why?\"\n\nLinda reached over and gently felt Dawn's breasts. She slid her fingers under them and looked.\n\n\"If you are D, you are very full D.\"\n\n\"I know,\" Dawn said looking down. \"I am going to have to do some investigating. I think Dr. John and James got together before my surgery.\"\n\nAmy and Sam giggled.\n\n\"If you two were in on this, I will have your asses,\" Dawn told them.\n\n\"They are probably still swollen, honey,\" I said.\n\n\"No, they're not!\" I got back.\n\n\"I think they look perfect,\" Linda said removing her hands.\n\n\"Linda, when can I get mine done?\" Rachel asked.\n\n\"Honey, you have nice breasts. I keep telling you that,\" Linda said.\n\n\"You promised.\"\n\n\"I know.\"\n\n\"I like Dawn's. They do look perfect,\" Rachel said.\n\n\"Rachel, what are you? A C cup?\" Dawn asked.\n\n\"Yes, but not a full C.\"\n\n\"I was a full C, it wasn't much to go to a D,\" Dawn told her.\n\n\"I am not as full as you were.\"\n\n\"Let me see,\" Dawn told her.\n\nRachel looked around a second.\n\n\"Go ahead,\" Linda told her.\n\nRachel slipped her holster off and unbuttoned her top and pulled it off. We watched as she removed her bra.\n\n\"Come sit next to me,\" Dawn told her.\n\nRachel got up and sat next to Dawn. Dawn reached over with one hand and felt one of Rachel's breasts and lifted it up.\n\n\"You are pretty full C. Since you are taller than I am, you can easily go to a full D if you want,\" Dawn told her.\n\n\"You think so?\"\n\n\"Sure. But, I think I am a little more than a full D, thanks to James.\"\n\n\"May I feel?\"\n\n\"Of course.\"\n\nRachel took her hands and felt Dawn's breasts. She squeezed on them gently for a minute.\n\n\"Oh, they feel nice,\" Rachel said. \"You think I can go this big?\"\n\n\"Probably, but you would have to see Dr. John. Do you have any bad scars?\"\n\n\"I have some places I have been cut, but the scars hardly show.\"\n\n\"Can I see?\" Dawn asked.\n\n\"She heals well, Dawn. Her scars are hardly visible. You would have seen them,\" Linda said.\n\n\"Okay, good,\" Dawn said with a puzzled look.\n\n\"Linda, can I after we catch the nut job?\" Rachel asked.\n\n\"I guess.\"\n\nRachel got up and hugged Linda. Rachel sat back down after a few seconds, forgetting she was half naked.\n\n\"Rachel, would you like to go for an evening swim?\" Amy asked her.\n\nRachel realized she was topless.\n\n\"Oh, sorry,\" she said reaching for her bra.\n\n\"Come on; I'm going to the pool,\" Amy told her.\n\n\"Okay!\"\n\nRachel slipped off her pants and underwear and went with Amy to the pool. \n\n\"Sam, why don't you go with them,\" I said.\n\n\"I wasn't invited.\"\n\n\"Linda, are things going okay?\" I asked.\n\n\"I guess.\"\n\n\"What's up?\" Dawn asked.\n\n\"I'm having trouble bringing up the whole public thing with Rachel.\"\n\n\"Have you gotten anywhere?\"\n\n\"We have talked some. She agrees now is not the time.\"\n\n\"But?\"\n\n\"We haven't gotten passed that.\"\n\n\"Linda, are you worried about her, or your image?\" I asked.\n\n\"I don't know.\"\n\n\"Times are different now, Linda, but things are not totally fair yet,\" I told her.\n\n\"It is something you have to think about. Why don't you talk to some of your publicity people?\" Dawn asked.\n\n\"I can't let them know yet!\"\n\n\"I think you need to find out what public opinion is going to be. If you go public and it hurts your business badly, Rachel will feel like it is her fault.\"\n\n\"It wouldn't be her fault,\" Linda said.\n\n\"I said she would feel like it is her fault,\" I told her.\n\n\"Thanks...something else for me to have to think about,\" Linda said.\n\n\"Linda, how are your feelings changing for her?\" Dawn asked.\n\n\"For the better.\"\n\n\"I don't know what to tell you, Linda. I don't think you are going to know what to do until you can gauge the impact it will have on your business.\" \n\n\"I don't know what to do! If it comes out, there will be people that will call me a bitch dyke because I have been a ball buster since I took over everything.\"\n\n\"Will that bother you?\" I asked.\n\n\"I don't want to be thought of that way.\"\n\n\"Can I say something?\" Sam said.\n\n\"Sure, Sam,\" Linda said.\n\n\"Amy had some guys calling her a dyke when she lived with other girls. She never said anything to them because she didn't care for one thing, and, because she also went out with men. Everyone finally stopped saying anything to her.\"\n\n\"Sam, people haven't seen me with Rachel like that; and I can't date men in public,\" Linda said.\n\n\"Why not?\" Sam asked. \"You don't have to fuck them, just date some in public. If people think you are doing them, so what? You are a beautiful woman; people expect you to be dating handsome men.\"\n\n\"I can't do that.\"\n\n\"Why not?\" Dawn asked.\n\n\"It would hurt Rachel's feelings.\"\n\n\"Linda! You are fucking my husband; you have been fucking other guys we know. Rachel hasn't gotten her feelings hurt has she?\" Dawn asked. \"And, if I remember right, Rachel has been doing a few guys.\"\n\n\"That is different.\"\n\n\"Bull shit!\" Dawn yelled. \"You just don't trust her, Linda! Your problem is that you don't want to be seen as a lesbian or as a bi-sexual. You were raised by very conservative parents and grand-parents. I think you want the world to see you as hetero when you are not.\"\n\nLinda sat quietly for a few minutes.\n\n\"I'm sorry, Linda. I shouldn't have said that,\" Dawn said.\n\n\"No...you're right. I'm bi-sexual, but if the public thinks I am in a relationship with Rachel, that is not what they will think.\"\n\n\"Uhh...Linda, I wanted to know if you wanted to join us,\" Rachel said standing at the door.\n\n\"Rachel...\" Linda said.\n\n\"I'll go back outside,\" Rachel said and turned and went back outside.\n\n\"Rachel!\" Linda yelled after her. \"Fuck!!\"\n\nLinda started crying.\n\n\"Linda?\" Dawn asked.\n\n\"Now I have fucked all this up! I don't know how to handle all of this!\" Linda yelled as she sobbed.\n\nI got up and went out to the pool; Amy was holding Rachel as she cried.\n\n\"Rachel, honey,\" I said sitting next to her, \"Linda was only talking about what she is worried about. We finally got her to tell us. I need you and Amy to come inside so we can finish talking about this.\"\n\n\"I don't care if people know about us or not!\"\n\n\"That is not the problem, Rachel. Linda is worried about you.\"\n\n\"I don't care if people know.\"\n\n\"Linda is not sure what to do. She is afraid if you two go public and it hurts her business, you will feel responsible; that is what she is upset about. She is trying to protect you,\" I told her.\n\n\"It didn't sound like it.\"\n\n\"You only heard part of the conversation. Please come inside.\"\n\nI took Rachel's hand and led her and Amy inside the house; Linda was waiting at the door.\n\n\"Rachel, I am sorry!\" Linda said and took her in her arms and held her.\n\nAmy got two robes out of the closet. When Linda released Rachel, she handed her one.\n\n\"Everyone come and sit,\" Dawn said.\n\nWe all sat and talked over the situation. I helped Linda explain to Rachel that she had legitimate concerns about her business and about hurting her. Rachel had leaned into Linda and had her head on her shoulder as we talked.\n\n\"Linda, you don't have to tell anyone about us,\" Rachel said.\n\n\"Honey, I love you, I know that now. I want us to be together and you know it will get out somehow,\" Linda said. Rachel looked up at her, then sat up and kissed Linda.\n\n\"I love you too.\"\n\n\"James, what do we do?\" Linda asked.\n\n\"You know; I think Sam may have had a good idea.\"\n\n\"I did?\"\n\n\"I think you dating some eligible men in public may not be a bad idea,\" I told her. \"Rachel, you wouldn't mind would you?\"\n\n\"Of course not, but I would still have to be with her.\"\n\n\"I can't be running around in public with strange men,\" Linda said.\n\n\"Okay, Linda, her are your choices. You can publicly be a lesbian, bi-sexual, or a swinger. Which do you prefer?\" I asked.\n\n\"Well, I am already a bi-sexual swinger!\"\n\n\"Linda.\"\n\n\"Do you think the general public would be more excepting of me being bi-sexual?\" \n\n\"I think if the media saw you dating a few handsome men, they would think you are hetero. If later on, they saw you with another woman, they may just think you are bi. There is nothing wrong with the public thinking you are a lesbian, but you seem to be hung up on that,\" I explained.\n\n\"But, I am bi-sexual, and I love Rachel.\"\n\n\"And Rachel is bi-sexual, so, if later when you two let everyone know, it may do less damage to your business if that is going to be a problem. That is just the way things are, sorry, honey,\" I told her.\n\n\"Rachel, what do you think?\" Linda asked.\n\n\"You have already been married; the public knows that. You stay out of the media...maybe it is time you stopped. I don't think you being seen with some eligible bachelors, and maybe having a little sex, would be a bad thing.\" Rachel said.\n\n\"Rachel! I can't just pick up men!\"\n\n\"What about some very eligible, high-profile doctors?\" Dawn asked.\n\n\"What are you talking about?\"\n\n\"I just happen to know some very nice doctors that are always in the media for the good things they do. Maybe I could introduce you to a few.\"\n\n\"That sounds good,\" Rachel said. \"Maybe you could introduce me too, and we could double date!\"\n\n\"Maybe.\"\n\n\"How would we do this?\" Linda asked.\n\n\"Linda, you give money to the hospital and the university, but it is never public. These doctors I know also give a lot of money back to the hospital, mostly for research. The hospital has huge parties several times a year for large donors; I'm sure you have been invited before. There is one the second weekend of September for the start of school. I think you should go.\"\n\n\"And how do you propose introducing me?\"\n\n\"I won't have to. You show up in one of your revealing dresses, and I think they will find you,\" Dawn said.\n\n\"Will you two be there?\"\n\n\"The four of us will be there. Dawn is starting to raise money for the new program. You better make sure you are exposing more skin than she is,\" I said. Dawn and the girls giggled.\n\n\"Are you planning on showing off your new tits!\" Linda said.\n\n\"You bet I am. I need money for the new program!\" Dawn told her.\n\n\"Oh! Speaking of that, I have to take you shopping for new clothes,\" Linda said.\n\n\"You said you were going to take me to your tailor.\"\n\n\"When do you want to go?\"\n\n\"Soon.\"\n\n\"Okay.\"\n\n\"So you will date a few of my doctor friends then?\" Dawn asked.\n\n\"I guess, but I am not having sex with them.\"\n\n\"Why not?\" Rachel asked.\n\n\"Yes, Linda; why not? I know some tall, cute ones,\" Dawn said. \"There are two I am sure would love to have sex with you, at the same time.\"\n\n\"I can't do that!\" Linda exclaimed.\n\nLinda smiled and looked at Rachel.\n\n\"You all are going to get me in trouble,\" Linda said.",
        "Rachel stood and took Linda's hand.\n\n\"Join us in the pool.\"\n\nLinda stood and started taking off the rest of her clothes. Once she was naked, she went with Rachel, Sam, and Amy to the pool.\n\n\"Who are you thinking about for Linda?\" I asked.\n\n\"Dr. Mitchell, Dr. Vanguard, and Dr. Sheraton. The all are all nice and tall, and handsome.\"\n\n\"What if Linda decides to go home with one of them? What about Rachel?\"\n\n\"Then I better make sure she meets Dr. Mitchell.\"\n\n\"Why?\"\n\n\"He asks me about once a year to join him and his nurse at his house.\"\n\n\"I didn't know about that,\" I said.\n\n\"I think Linda might feel more comfortable at first if she is in a threesome with Rachel.\"\n\n\"I hope he can satisfy both of them.\"\n\n\"He can,\" Dawn said as she got up and headed toward the back door.\n\n\"How do you know!?\"\n\nDawn went outside, and I got up and followed her. When we got outside, Amy and Sam were in the pool. Rachel and Linda were in one of the big lounges making out as the sun went down.\n\n\"How do you know?\" I repeated.\n\n\"I know his nurse pretty well. She keeps asking me too.\"\n\n\"Then do it,\" I said. \"Or invite them over.\"\n\nDawn sat in a chair so she could watch Linda and Rachel, I sat down next to her. Linda and Rachel kissed and played with each other's breasts for a while, then slowly got in a 69 with Rachel on top. Sam walked up and sat in my lap.\n\n\"You're wet!\"\n\n\"Yes, I am,\" Sam said watching Linda and Rachel.\n\n\"Later, honey.\"\n\nSam stayed in my lap as she watched Linda and Rachel for a while. They got each other off several times before they parted.\n\n\"They do seem to enjoy each other,\" Sam said rubbing my cock through my pants.\n\n\"Yes, they do,\" Dawn said. \"I hope we can help solve their problem soon.\"\n\n\"Honey, will there be plenty of media coverage at the party?\"\n\n\"We always end up in the paper and on the internet. I think if they know Ms. Linda Williams will be there; there will be plenty of coverage.\"\n\n\"Is Dr. Mitchell discreet?\"\n\n\"You don't know he is doing his nurses do you?\" Dawn asked.\n\n\"All of them?\"\n\n\"Yes, they all meet regularly at his house.\"\n\n\"How do you know all of this?\" I asked as Dawn got up and walked over to Linda and Rachel and sat.\n\nAmy came over and sat where Dawn had been sitting.\n\n\"Rachel is not shy,\" she said.\n\n\"You two, Dawn and I just spent two weeks with them having sex with them. Rachel knows about you two.\"\n\n\"I think she is cute,\" Amy said.\n\n\"Linda is not her first.\"\n\n\"Ummm,\" came from Amy.\n\nDawn stood, and they got up and went with her back inside. Amy got up and followed them.\n\n\"I'm still wet,\" Sam said.\n\nI ran my hand between her legs and slid the tips of my fingers over her pussy lips.\n\n\"Do me.\"\n\n\"Let's see how long they are staying.\"\n\nSam got up, and I followed her into the house. Dawn was sitting on the sofa with Linda and Rachel talking. Amy was sitting in one of the loveseats checking out Rachel, Sam and I sat in the other.\n\n\"Can you two stay the night?\" I asked.\n\n\"No, we would have to stop by the house on the way in and change clothes,\" Linda said.\n\n\"Why don't you two bring some clothes here and leave them. We can give you two the other bedroom upstairs,\" I told her.\n\n\"That sounds like a good idea,\" Dawn said.\n\n\"Yes it does,\" Rachel said looking at Linda.\n\n\"I don't know. It might look funny with us leaving from here in the morning,\" Linda said.\n\n\"Out here! You come and go all the time,\" I said.\n\n\"And you have been driving your car to work lately,\" Rachel said.\n\n\"That was your idea in case we needed to get away from someone,\" Linda told her. \"I'll think about it.\"\n\n\"Are you two going to come and spend next weekend with us?\" Amy asked.\n\n\"I guess we will,\" Linda replied.\n\n\"Good, I look forward to getting to know Rachel better,\" Amy said. Rachel looked at her and smiled.\n\n\"We need to get going,\" Linda said.\n\nWhen she stood, Dawn stood and moved to her and hugged her. Linda leaned over and kissed her. Linda walked to me, and I stood up.\n\n\"Thank you,\" she said and kissed me.\n\nLinda and Rachel got dressed and got ready to go.\n\n\"Next weekend, we need to talk about our store,\" Linda said.\n\nDawn and I walked Linda and Rachel outside. I watched Dawn kiss Linda then Rachel and tell them we were looking forward to them coming back more often. They got into her car and took off down the drive. When I sat down on the sofa again, Sam came over and sat next to me and started pulling my clothes off.\n\n\"You still wet?\"\n\n\"Yes,\" she said pulling my shirt off.\n\n\"Dawn, you need to put the sports bra on,\" Amy told her.\n\nSam was down on the floor pulling my pants off. I watched as Amy carefully helped Dawn get the sports bra on. Sam moved up and sucked my partially hard cock into her mouth. I watched her for a while until she was deep throating me. She slid her mouth off of my cock and stood and straddled my legs facing me.\n\n\"Is she good?\" Amy asked Dawn.\n\n\"Rachel?\"\n\n\"Yes.\"\n\n\"She is very good,\" Dawn told her.\n\nSam reached between her legs and grabbed my cock and started feeding it into her dripping pussy. I slid down into the sofa some, and she slid all the way down on my cock. Sam wiggled and sat all the way down on me. Sam started working her pussy slowly on my cock. I reached up and grabbed her huge tits with both hands and squeezed. She smiled at me and leaned over and placed one of her nipples next to my mouth; I gladly sucked it in.\n\n\"James, now that I have the bandages off, you can do me,\" Dawn said as she and Amy watched.\n\nSam kept me busy switching which nipple I was sucking and kissing as she worked her pussy on my cock. I pulled my mouth off a second and looked at her. She smiled and reached back and grabbed her hair and pulled it over her shoulders, so it was falling over her breasts. I went back to work on her nipples.\n\n\"Dawn, come with me,\" Amy told her as she took her hand and led her to the downstairs bedroom.\n\n\"Oh, yes!\" Sam let out as she sped up.\n\nShe was mashing her breasts into my face as she drove her pussy hard onto my cock. I wrapped my arms around her and held her as she took what she needed. She kept moaning and working her hips hard for another ten minutes.\n\n\"Oh...oh...oh...I'm coming!\" Sam exclaimed as she started gushing onto my cock. She kept humping me for a few more minutes then sat up. \"Ohhh, I needed that.\"\n\n\"I know you did. You want the rest?\"\n\n\"In a minute.\"\n\nSam was sitting up with all her long red hair hanging over her chest. I ran my hands down over her hair until it ended at her hips.\n\n\"Your hair is getting longer.\"\n\n\"I guess so?\"\n\n\"Uh, what do you mean?\"\n\n\"You know what I mean.\"\n\n\"I don't, but I like your hair getting longer.\"\n\n\"That is what I am supposed to do.\"\n\n\"What are you talking about, Sam?\"\n\n\"Dawn told Amy and me that you forbid us from cutting our hair because you like it long.\"\n\n\"I did no such thing...oh.\"\n\n\"Oh, what?\"\n\nI laughed.\n\n\"What?\"\n\n\"Dawn is forbidden to cut her hair. I guess she assumed that applied to you two.\"\n\n\"She said you forbid us!\"\n\n\"She must want you two to let your hair grow.\"\n\n\"Do you really like it longer?\" Sam asked.\n\n\"Honey, you know how much I love long beautiful hair on a woman.\"\n\n\"Okay, then I won't tell Amy it is okay for her to cut her hair.\"\n\nSam looked at me and smiled. I smiled back at her and rubbed her breasts and hair some more.\n\n\"Do you want me to let my pussy hair grow? You like Amy's.\"\n\n\"Sam, I want to ask you something?\"\n\n\"Sure.\"\n\n\"How do you feel being so young and in this relationship?\"\n\n\"Do you think of me as young?\" Sam replied.\n\n\"Sam, I think of you as a very sensuous and beautiful woman. But, you are young.\"\n\n\"Too young for you?\"\n\n\"I could almost be your father.\"\n\n\"Well, I don't think of you that way. I think of you as a very loving man. Now, I get to ask you something. Do I excite you more being young?\"\n\n\"Yes you do, but that is not why I love you.\"\n\n\"I know. But, you like me looking young, so is that why you like me bare.\"\n\n\"Sam, I like all women bare.\"\n\n\"What about Amy?\"\n\n\"I like Amy's ginger patch, and I don't think she likes shaving that much,\" I said.\n\n\"She doesn't. We don't have to keep our patches to prove we are true redheads, so I shave mine, and she keeps her small triangle.\"\n\n\"No...you two don't have to prove you are true redheads. There is no doubt about that.\"\n\n\"Why would you say that.\"\n\n\"Sam, you two probably don't even notice it, but true redheads are just very fiery and feisty.\"\n\n\"You think so?\"\n\n\"I know so.\"\n\n\"When I get older, do you want me to grow a red patch?\"\n\n\"No, but if you want to, it is okay.\"\n\nSam smiled at me.\n\n\"Since I am young, as you say, is that why the other men like having sex with me. Your friends seem to enjoy it when I fuck them, especially Sam.\"\n\n\"I am sure that adds to it, but honey, I think most men have a fantasy about having sex with a beautiful redhead.\"\n\n\"Why?\"\n\n\"For me, it is because there are so few of you. Remember, I told you that true gingers are less than 1% of the entire population. And beautiful ones like you are even rarer.\"\n\nSam leaned forward and kissed me.\n\n\"One more question, please?\" Sam asked.\n\n\"Anything.\"\n\n\"How old do I look when I am naked with no makeup?\"\n\n\"About 16, why?\"\n\n\"Just wondering.\"\n\n\"Amy looks about 19 when she is naked with no makeup.\"\n\n\"Dawn only looks about 26 or so naked,\" Sam said.\n\n\"I know, you three make me look old.\"\n\n\"We like that. It looks like you have three young women with you.\"\n\nSam had been slowly working her pussy on my cock as we talked and listen to Amy and Dawn moan.\n\n\"You will be 19 soon. What would you like for your birthday?\"\n\n\"I have everything I want.\"\n\nSam pushed herself up and off my cock, then stood in front of me. She turned around and started lowering herself down. I felt her grab my cock and the next thing I knew she had the tip at her asshole. She held me and slowly pushed down; I felt the head slip into her ass.\n\n\"Emmm. It has been a little while,\" Sam said as she wiggled a little.\n\nShe kept holding my cock and pushing down until I was sliding into her ass all the way. Sam always had to take her time, but she was all the way down and sitting. I gathered her hair together and ran my hands down it.\n\n\"Let me have it,\" Sam said.\n\nShe reached back and grabbed her hair with both hands and separated it then pulled each half over her shoulders. She settled and leaned back against me. I wrapped my arms around her and held her, Sam just liked to sit for a while at first when I was in her ass.\n\n\"This what you want?\" I asked.\n\n\"Yes.\"\n\nShe took one of my hands in each of hers and lifted them up and ran my palms down over her hair and her breasts. She released my hands, but I kept running them over her hair covering her breasts. A minute later, I felt her move her hands to her mound and start rubbing her pussy.\n\n\"Oh, fuck!! Amy!!\" I heard from the bedroom. It had been Amy screaming a bit earlier.\n\nI could feel Sam slowly rubbing her pussy lips as she leaned against me. At these times, I wouldn't push any energy into her; I would just feel for hers. I could feel her love as I ran my hands down her body. I didn't push, but I made sure she felt my love for her.\n\n\"Sam, I love you too.\"\n\nSam reached between her legs and rubbed the base of my cock for a minute.\n\n\"You feel that from me?\" Sam asked.\n\n\"Yes, honey.\"\n\n\"James, I feel all your love for me right now. Is this what it is like?\"\n\n\"Yes. You are very special, Sam. I want you just to do whatever you want to right now.\"\n\n\"I'm doing that.\"\n\nWhen Sam was like this, I would get lost in her like I did with Dawn. Just closing my eyes and feeling her both physically and mentally. I had talked to Dawn about it, and she had told me just to let her go so she could learn. It was so different feeling this from someone other than Dawn. I felt a lot from Amy also, but not like with Sam.\n\nI stopped rubbing her breasts and wrapped my arms around her and held her.\n\n\"Ahhhh...\" came from Sam.\n\nShe sat on me for a long time as we just held each other.\n\n\"Amy, thank you. You were wonderful as...let's go shower.\" I heard off in the distance.\n\nSam lifted her feet up and placed them on top of my legs. She used them to move her ass up and down on my cock slowly. I slid a little further down, so we were lying back more. Sam kept going for a long time.\n\n\"Oh, James. You feel so good inside of me.\"\n\nSam was doing a good job of sliding up and down on my cock. I held her while she worked her ass. A few minutes later she started a soft moan and kept it up for a few minutes.\n\n\"James...\"\n\nI felt Sam tense up beneath my arms then shiver for a few seconds.\n\n\"Ohhh...fuck...\" Came from Sam as her gentle orgasm faded.\n\n\"Sam, that was different for you.\"\n\n\"Yes, it was. I was just enjoying the feeling of your cock inside my ass when I had an orgasm.\"\n\n\"Yes, you did. Did you enjoy it that way?\"\n\n\"Emmm, I did. James, did you push me?\"\n\n\"No honey, I was just enjoying your energy.\"\n\n\"That was nice, but I want you to fuck me good now,\" Sam said.\n\n\"Nice and hard?\"\n\n\"Yes...please.\"\n\n\"Hold on.\"\n\nI held Sam tightly and rotated us, so we were lying on the sofa. I got my legs up, and she spread hers and laid back on me. I held her and slowly started shoving my cock up into her as she lay on top of me.\n\n\"Just like that,\" Sam said.\n\nI kept working my cock up into her ass as she spread her legs. I slowly sped up my thrusting as Sam moaned.\n\n\"Oh, yes! Harder!\" Sam asked.\n\nI held her tight and started thrusting up all the way into her. I got faster and faster as she started crying out. I was driving up into her hard and fast now.\n\n\"James!!\" Sam screamed.\n\nI was working hard and thrusting my cock up into Sam's ass as hard and fast as I could.\n\n\"James!! Yes!! Fuck me until I come!!\"\n\nThat only took about five more minutes; then Sam started screaming she was coming.\n\n\"James!! Come in me!!\" Sam screamed.\n\nHer asshole clamped down on my cock, and she started jerking. I shoved my cock all the way into her ass and started pumping cum deep inside her.\n\n\"Oh god, yes!!\"\n\nSam jerked for a minute as I filled her ass full of cum.\n\n\"Ahhhhh!!\"\n\nSam wilted on top of me as I held her.\n\n\"Are you okay, honey?\"\n\n\"Perfect...thank you,\" Sam said.\n\n\"Sam, that was all you. I didn't help; I just enjoyed you.\"\n\n\"Emmm, that was great. I like you driving into my ass like that.\"\n\n\"As long as I am not hurting you, honey.\"\n\n\"I'm past that now. You can do my ass any way you want,\" Sam said as she pushed up and sat.\n\nThere was a sheen of sweat on her back and my stomach. She reached between her legs and rubbed my balls for a minute.\n\n\"Come with me,\" she said as she slowly stood up.\n\nShe took my hand and pulled me up and led me upstairs to her bedroom. When we were inside, she turned and hugged me then pulled my head down to kiss me for several minutes.\n\n\"Was your 16-year-old okay?\"\n\n\"No, but my 18-year-old woman was wonderful.\"\n\nSam smiled at me and kissed me again then led me into the bathroom. We got in the shower.\n\nWhen we came out of the shower, Amy was lying on the bed naked.\n\n\"Are you finished with him?\" Amy asked her sister.\n\n\"I guess.\"\n\n\"It's 10:00. I need to go to bed, and he is sleeping with me tonight, remember,\" Amy said.\n\n\"I remember,\" Sam said pouting.\n\n\"Sam, you can't have him all the time,\" Amy said laughing at her.\n\nSam walked over and sat with her sister and kissed her.\n\n\"What do you want, Sam? You want to spend the night with him?\" Amy asked.\n\n\"No...I wanted to sleep with you,\" Sam said softly. \"Please...\"\n\n\"James, can we swap for tomorrow night?\" Amy asked.\n\n\"Amy, whenever you want.\"\n\n\"Sam, I'm not staying up all night talking. I need to get some sleep,\" Amy said.\n\n\"You weren't going to get any sleep with him!\" Sam said.\n\n\"We weren't going to be talking,\" Amy said. Sam grabbed her and pushed her back on the bed and straddled her chest.\n\n\"Good night you two,\" I said and walked down to my room.\n\n\"I thought you were sleeping with Amy?\" Dawn said.\n\n\"Plans changed, move over.\" I got in bed with my wife.\n\n\"Sam was enjoying herself, what did you do to her?\"\n\n\"Nothing. It was all her,\" I told Dawn.\n\n\"What happened?\"\n\n\"After you two had gone to the bedroom, she straddled my legs and made love to me, then she got up and turned around grabbed my cock and started it in her ass.\"\n\n\"She looked like she was in heaven when I saw her. I figured you were pushing her, so I took Amy back to the shower.\"\n\n\"I have told you about her. She is learning to take what she wants.\"\n\n\"I am going to have to have a long talk with her.\"\n\n\"Yes, you are.\"\n\nI reached over and rubbed Dawn's nipple through her sports bra.\n\n\"How much longer do you have to wear that to bed?\"\n\n\"A week.\"\n\n\"Did you and Amy have a good time?\"\n\n\"Yes, we did. She had missed me, and I had missed her.\"\n\n\"Sam said Amy was horny from looking at Rachel.\"\n\n\"She was, she told me she was.\"\n\n\"You want anything else tonight?\" I asked.\n\n\"In the morning.\"\n\nI turned off the light, and we went to sleep.\n\n*****\n\nI woke up suddenly Friday morning because I had felt Dawn straddle my stomach. I opened my eyes and looked; she was sitting there naked, no sports bra. She reached behind her and wrapped her hand around my cock and stroked it until it was hard.\n\n\"Honey, you look great. I have missed seeing you like this.\"\n\n\"I have been up a little while. I pulled my sports bra off and was lying here in bed and started rubbing my tits. My nipples are very sensitive for some reason. I started playing with myself; then I decided to wake you up.\"\n\nDawn pushed herself up on her knees and moved back and started my cock into her pussy. She worked her way down and sat on my cock.\n\n\"Honey, you look wonderful.\"\n\n\"So you like my new tits?\"\n\n\"I liked your old tits, but I also like the new you.\"\n\n\"Good. Now you are going to tell me what you and John did.\"\n\n\"I just ask him to make you a little fuller. It wasn't much.\"\n\n\"I am almost a DD.\"\n\n\"You look wonderful, though. He said it would help lift your breasts a little more than you wanted to go.\"\n\nDawn took her hands and mashed her breasts together as she looked at them.\n\n\"They do look like nice. I know John wouldn't have done it unless he thought it would look natural.\"\n\n\"He said you were afraid to go up one step.\"\n\n\"I was. I didn't want it to look like I had implants.\"\n\n\"You don't look like that, only people that have seen you naked will notice.\"\n\n\"Okay, you two are off the hook,\" Dawn said and started working her pussy on my cock.\n\nI reached up and gently rubbed her breasts as she worked her hips. She had some nice new cleavage like she had when she was younger, but her breasts were soft but firm.\n\nMy wife wanted to sit and wiggle, so I let her. It was early, and the girls wouldn't be up for a while. I watched Dawn wiggle sensuously on my cock for a long time. I was just lying back and watching her because this was what she wanted. She kept going for a long time, but just as I had felt from Sam, she was full of love. She was taking what she needed.\n\n\"Ohhhhh...yes, honey...yes...\" Dawn moaned.\n\nI looked my wife's perfect body over as she wiggled on my cock. I reached out and ran the tips of my fingers over her smooth mound down to where my cock was entering her.\n\n\"Don't do it,\" she said. \"If you make me cold, I will stop.\" I laughed at her.\n\nThis was one of the times she didn't want to fuck all morning; she just wanted to make love for a while. I knew she couldn't get crazy, but she needed me inside of her. We did just that. Fifteen minutes later she was coming, and I was filling her full of cum.\n\n\"Oh god, just what I needed.\"\n\n\"I know you did, honey. You look so sexy and feel so good.\"\n\n\"Thank you for letting me do what I wanted to do.\"",
        "\"I always let you do what you want when I know you are like this.\"\n\n\"I know.\"\n\nDawn leaned forward and placed one of her nipples at my mouth. I gently licked and sucked on it for a minute.\n\n\"Wow, my nipples are sensitive.\"\n\n\"From the surgery?\"\n\n\"Yes. I have had women tell me that when the implants push up on the tissue under their nipples, they get real sensitive.\"\n\n\"Is it enjoyable?\"\n\n\"Oh, yes.\"\n\n\"How long does it usually last.\"\n\n\"For some women, a long time.\"\n\n\"Maybe you'll get lucky.\"\n\n\"I hope so.\"\n\nAfter laying next to each other for a while, we got up and showered. After we had finished, I helped Dawn slip on her sports bra, then I went and woke up the girls. They showered while Dawn and I cooked breakfast. When we finished and cleaned up the kitchen, Amy and Sam sat down at the bar.\n\n\"Amy, talk to your supervisor about when you can turn in your notice,\" Dawn told her while she was eating breakfast.\n\n\"I'll see.\"\n\n\"What time are you two going out?\" Amy asked.\n\n\"The stores don't open until 10:00,\" Dawn said.\n\n\"Are you going somewhere other than the bikini boutique?\"\n\n\"We are going to our lingerie store also.\"\n\n\"Do you want to poach Brenda,\" Amy asked.\n\n\"Maybe. You two, it will be about six months or so before we get the store opened,\" I told them.\n\n\"Where is it going to be at?\" Sam asked.\n\n\"Linda said she thought she had a place downtown.\"\n\n\"Can we go with you today?\" Amy asked.\n\n\"Sure,\" Dawn told them.\n\n\"Can we get some more bikinis?\" Sam asked.\n\n\"You don't wear them,\" I said.\n\n\"Can I at least look?\"\n\n\"You know you can have anything you want,\" I told Sam.\n\n\"It's 8:30, can you two be ready to go by 9:30?\" Dawn asked.\n\n\"Yes!\" They said and headed upstairs.\n\nDawn and I went back up to our bedroom.\n\n\"Help me get this thing off,\" Dawn said pulling at the sports bra. I had her lift her arms up, and I slipped it off.\n\nDawn went to her closet and came out with a bag. She pulled out several bras.\n\n\"I hope one of these will work, I am tired of that thing,\" she said.\n\nI watched Dawn put on one of the bras and work her breasts into it. She connected it in the front and turned to look in the mirror. It was pushing her breasts up nicely.\n\n\"I like that one,\" I said.\n\n\"It is an underwire push-up bra. I think it is too early for it; it is pressing on the incisions.\"\n\nI watched her unsnap it and take it off. She picked up another bra and put it on. She looked good in it as she looked in the mirror. She turned around and showed it to me. It was a heavy lace bra that looked like it was holding her up nicely.\n\n\"How does that one feel?\" I asked.\n\n\"I think it will do for today.\"\n\n\"It looks nice.\"\n\n\"It is also a DD.\"\n\n\"Honey, how long will it be before you can go without a bra?\"\n\n\"I will have to ask John; probably a month to make sure my skin doesn't stretch and leave stretch marks.\"\n\nDawn slipped on some high cut matching white panties to go with the bra. She went in the closet for a while. When she came out, she had on her short white tennis skirt and an open white blouse.\n\n\"Get dressed!\" She said.\n\n\"Just watching.\"\n\n\"Come here.\"\n\nI walked over to her, and she hugged me and pulled my head down and kissed me.\n\n\"It makes me happy that you still like to watch me get dressed.\"\n\n\"I always will.\"\n\n\"I hope so.\"\n\nI went to find some clothes while Dawn went to fix her hair and put on some makeup.\n\n\"We're ready!\" Amy and Sam said coming in the bedroom.\n\n\"Where do you all want to go first? The swimsuits or lingerie.\"\n\n\"Swimsuits!\" They all agreed.\n\n*****\n\nWe pulled up in front of the small swimwear boutique, and the girls rushed inside. When I got through the door they were all talking to Sherri; I was happy that she was working. Dawn stayed to talk with her while Amy and Sam ran off.\n\n\"Sherri, do you remember my husband, James?\"\n\n\"Oh yes.\"\n\n\"Are you wearing my swimsuit when you can?\" I asked.\n\n\"When I can. I have a much nicer tan now, thanks to you.\" Sherri said.\n\nI looked Sherri over; she had on a mini-skirt and a white top.\n\n\"I'm going to find a suit or two for my new tits,\" Dawn said walking off.\n\n\"New tits?\" Sherri asked.\n\n\"Yes, she had a small boob job. She went from her full C to a full D. She needs something with cups on it right now to hold her up while she heals.\"\n\n\"Oh...okay.\"\n\n\"Did you try the new marketing method any other time?\" I asked.\n\n\"I actually said something to the lady that owns the place; she didn't think it was a good idea.\"\n\n\"Too bad. Would you actually work all day in a swimsuit if it made more sales?\"\n\n\"Sure.\"\n\n\"Sherri, you have the body for it.\"\n\n\"Thanks.\"\n\n\"How much do you work a week?\" I asked.\n\n\"Right now, five days a week, and Sunday afternoon.\"\n\n\"Any college?\"\n\n\"B.A. in Marketing but a Liberal Arts degree doesn't go far.\"\n\n\"Let me ask you something, if you don't mind. In an average week, how much do you make?\"\n\n\"Well, after the initial store opening for the first six months, I'm down to about $9.50 an hour.\"\n\n\"Not making enough commission?\"\n\n\"Nope.\"\n\n\"How is the store doing?\" I asked.\n\n\"About average, nothing to brag about.\"\n\n\"How many of the expensive designer suits do you sell?\"\n\n\"Not many now, the owner hasn't ordered very many, we sell just the regular suits mostly.\"\n\n\"You did a pretty good job of selling my girls plenty of them.\"\n\n\"I don't usually get a man in here that has three ladies to buy for that has that kind of money.\"\n\n\"It wasn't just the money; you did a good job of making the sale. If you had a better clientele, do you think you could sell the expensive stuff if that were all you had to sell?\"\n\n\"Sure. I know the designer stuff pretty well, it will sell to ladies that have good taste and money,\" Sherri said.\n\n\"Well, they need to have a nice body, too.\"\n\n\"Most younger rich ladies do!\" Sherri said with a giggle. \"Why are you asking me all of this?\"\n\n\"Just curious. I better go check on them.\"\n\nI walked back into the store, and Dawn was coming out in a red bikini. It had modest full-cup top and high-cut bottom.\n\n\"What do you think?\" She asked.\n\n\"I like it. Does it hold you up?\"\n\n\"Yes. Some of them are under-wire, I can't wear those yet.\"\n\n\"Turn around.\" Dawn turned and showed me her ass. It wasn't a thong, but it was small. \"Looks nice.\"\n\n\"I want to wear it while I look around. Did you talk to her?\"\n\n\"Yes. It seems the newness of the store has worn off, and they are not selling as much now.\"\n\n\"I noticed they had a lot fewer of the designer suits.\"\n\n\"She said she was making about $9.50 an hour.\"\n\n\"Ouch. If she works for us, I would hope her commission would be a lot more than that.\" Dawn said.\n\n\"We will probably have to guarantee her more until things get off the ground. I asked her if she would wear a suit all day if it helped her sell more, she said yes.\"\n\n\"You really want to do that in the store don't you?\"\n\n\"We couldn't make everyone do it, but if they wanted to, they could.\"\n\n\"You don't think it will bring in a lot of lookers?\"\n\n\"I'm sure it will, but I hope most of them have plenty of money,\" I told Dawn.\n\n\"It could be a problem, though.\"\n\n\"If it became one, we would not allow unaccompanied men in the store, unless they had the money.\"\n\n\"Maybe.\"\n\nDawn walked over to a rack of suits.\n\n\"Linda has mentioned that she would like pretty salesladies to wear the fashion clothes that she wants to sell.\"\n\n\"I think that is a good idea,\" Dawn replied.\n\n\"What if I want the pretty salesladies that work in the lingerie department to wear lingerie?\"\n\n\"James, I don't know about that. We don't want the place to be a strip club.\"\n\n\"Oh, that gives me an idea. You think that would be too much?\"\n\n\"I'm not sure you can find enough women that would do that.\"\n\n\"I bet I could find plenty of young college ladies that would, working part-time.\"\n\n\"You will have the same problem with men coming in just to look.\"\n\n\"I think I can deal with that. I think as swank as Linda wants the store to be, we could have a VIP card for shoppers or something like that.\" I said.\n\n\"Maybe. What do you think about this?\" Dawn said holding up a very skimpy designer suit.\n\n\"That won't hold you up.\"\n\n\"For after. I will need some new suits.\"\n\n\"Sure you will.\" Dawn looked up and smiled.\n\n\"James, what do you think,\" I heard Amy say.\n\nI turned to look; she had on a bikini that had a full top on it that obviously was a pushup. Her breasts looked great.\n\n\"I like it.\"\n\n\"It's not a designer suit, but I like the pushup.\"\n\n\"I do too.\"\n\nSam walked out in a similar suit.\n\n\"You look nice too.\"\n\n\"Do you like the blue?\" Sam asked.\n\n\"Yes, I do.\"\n\n\"I'm going to try this on,\" Dawn said heading back to the changing rooms with the skimpy bikini.\n\nI went through some suits with Amy and Sam. A few minutes later Dawn walked out.\n\n\"What do you think?\" She asked.\n\nThe top had just enough material to cover her nipples, and the bottom barely covered her pussy. Her fuller breasts looked like they were going to pop the top open.\n\n\"I like it, but where are you going to wear it?\"\n\n\"I'll find someplace to wear it,\" she said with a seductive smile.\n\n\"Dawn, you look fabulous!\" I heard Sherri say.\n\n\"I want to show off my new tits,\" Dawn said.\n\n\"Well, if you move around a lot, you will do that.\"\n\n\"Sherri, how do I look, really?\" Dawn asked.\n\n\"You look very good. Just enough to be a little more enticing,\" Sherri said.\n\n\"You think so?\"\n\n\"Oh, yes. You added just enough.\"\n\nDawn smiled and walked around in the store looking; I followed her.\n\n\"I have a question, honey. Will your nipples get bigger?\"\n\n\"Maybe a little, they are pretty big now.\"\n\n\"Do you remember what size suit I got for Sherri?\"\n\n\"Sam size as me, she is a C though.\"\n\n\"Find that suit in a C for me.\"\n\n\"James, this suit exposes a lot of my tits.\"\n\n\"I know, and the thong that is not there is nice too.\"\n\nWe went back to the rack that Dawn had gotten the skimpy suit from. She found the right size for Sherri and handed it to me. The price tag said $300, cheaper than the last time I was in here. A couple that had come in moved next to us to look, he was looking over at Dawn's tits.\n\n\"Good luck,\" Dawn said.\n\nI turned around, and Sherri was helping Samantha adjust a suit. I walked over to Sherri.\n\n\"Try this on for me.\"\n\n\"That is skimpy,\" Sam said.\n\n\"Not you, Sherri.\"\n\nSherri looked at the suit then looked at me.\n\n\"That one is a little skimpy,\" she said. \"Why do you want me to try it on?\"\n\n\"Job interview,\" I told her.\n\n\"What?\"\n\n\"And I will buy it for you.\"\n\n\"What do you mean job interview?\"\n\n\"Convince me you would work all day in a suit like this,\" I said.\n\n\"Why?\"\n\n\"I may have a job offer for you.\"\n\n\"For what, a stripper?\"\n\n\"No, sales.\"\n\n\"Where?\"\n\n\"Confidential for now,\" I told her.\n\n\"Are you going to open a store or something?\"\n\n\"Something like that. Will you wear it for me?\"\n\n\"I guess.\"\n\nSherri took the suit and went to change.\n\n\"James, what are you doing?\" Sam asked.\n\n\"I'm thinking about having the ladies that work for us in the swimsuit department wear swim suits all day.\"\n\n\"You mean it!?\"\n\n\"I'm thinking about it. What would you think about Sherri managing the swimsuit area?\"\n\n\"I think she would be perfect!\"\n\n\"Don't say anything to her.\"\n\n\"Okay. I have a question? Can I work part-time?\"\n\nI smiled at Sam and laughed.\n\n\"Sure!\"\n\n\"That will be cool!\" Sam said.\n\n\"What?\" Amy said coming out in a one-piece halter suit.\n\nSam grabbed her and led her away. A moment later, Amy turned and looked at me with a big smile. I saw Sherri walking my way.\n\n\"Your tan is much more complete now,\" I told her.\n\nShe kept walking. The suit barely covered her nipples and her pussy. She stopped in front of me and spun around. She had a perfect, young, tight ass.\n\n\"Sell me that suit,\" I told her.\n\nShe looked at me a few seconds then smiled. She went into full sales mode and sold me the suit, telling me how good it would look on my girlfriend.\n\n\"Did I pass?\" She asked.\n\n\"You already passed, I just wanted to see you in that suit.\" Sherri shook her head at me and smiled. She started back toward the changing rooms.\n\n\"Wait a minute; I want to see you work in it,\" I told her.\n\nShe came back and helped the girls look through some suits. Sherri looked very hot. I walked around and looked over everything in the store for a while. The girls were piling up suits they wanted again. It was getting close to lunchtime, and I was about to tell the girls to finish up when I nice looking guy came in the store.\n\n\"Sherri, you have a customer,\" I told her. She looked up.\n\n\"Shit.\"\n\nShe walked toward him as he looked around. I heard her ask him if she could help him, he stood and looked her over for a moment, then said something to her. She led him off to another area of the store.\n\n\"Are you keeping an eye on her?\" Dawn asked walking up to me.\n\n\"Yes.\"\n\n\"I have one more suit I want to try on, then we can go.\"\n\nDawn went back to the dressing rooms. Amy and Sam were still looking through suits. Neither of them had much on. Sherri was showing the man some different one piece suits. After a few minutes he had selected two; she started walking toward me.\n\n\"...I really think she might like something more daring, maybe just for you,\" Sherri was saying as she led him over near Sam and Amy. He paused to check them out. \"Dan, I am assuming from then one-piece suits you decided on, that she keeps herself trimmed?\"\n\n\"Shaved.\"\n\n\"Like me?\" Sherri said placing her hand on her stomach and letting him look at the tiny piece of material covering her pussy.\n\n\"Yes, just like you.\"\n\n\"Very good,\" Sherri said. \"You said she probably wouldn't wear something like what I have on, but look at this, it has a little more to it,\" Sherri said holding up a bikini top over hers. \"Dan, I'm sure she would wear it just for you around the house...then maybe you could get her something more like mine. From what you have selected so far, I get the impression she wouldn't buy something like this. Dan...are you wanting your girlfriend to show a little more off in public?\"\n\n\"Well...I was hoping I could get her to start with the one-piece high-cut suits,\" the guy said.\n\n\"She will do that for you I am sure. I think you are on the right track. You said you have a big pool in your condo development?\"\n\n\"Yes, we do.\"\n\n\"You have some guy friends you want to see her? I think that is hot.\" Sherri told him and got a big smile from him.\n\n\"Maybe.\"\n\n\"I think you have the right ideas then. Now this suit is a little more than the one-piece, but you said it was for her birthday, so that shouldn't be an issue.\"\n\n\"But, what if she won't wear it?\" He asked.\n\n\"If she just won't wear it, bring it back with her, and we will find something daring she will wear.\"\n\n\"Okay.\"\n\n\"Good. Let me show you something else to consider.\"\n\nSherri walked him over a few rows and picked up a white one-piece suit.\n\n\"That looks a little thin,\" he said.\n\n\"Well, Dan, it is. You will be able to see her nipples a little through it when it is dry. I think it is just sexy to wear around. I have one.\"\n\n\"But what if it gets wet?\"\n\n\"Maybe if it was just the two of you down at the pool late. You will be able to see all of her sexy body through it if it gets wet. Maybe you shouldn't tell her that,\" Sherri said with a big smile.\n\n\"That would be funny.\"\n\n\"It's only $75; we don't sell many. A man has to be very comfortable with his relationship with his girlfriend to let other men see her in this. I'm sure you would be okay with that, right?\"\n\n\"Oh, yes.\"\n\n\"These should make a nice birthday present for her. Let's go ring them up and I will wrap them for you,\" Sherri told him.\n\nShe escorted him to the counter.\n\n\"Hire here,\" Dawn said from behind me.\n\n\"I'm planning on it.\"\n\nThe girls gathered up the suits they wanted and then went and put their clothes back on. While they were looking everything over, Sherri came back to me.\n\n\"Did I pass?\" She asked with a smile.\n\n\"Yes, you did.\"\n\n\"The owner will be here soon; I need to get out of this suit before she gets here.\"\n\nSherri headed down the hall to the changing rooms.\n\n\"Let me talk to you a minute, Sherri,\" I said following her.\n\n\"Make it quick.\"\n\nShe stopped and turned to look at me.\n\n\"I have an offer for you, but I need you to keep it quiet until everything comes together.\"\n\n\"What would that be,\" she said stepping behind one of the half doors.\n\n\"Another investor and I are pretty sure we are going to open a very upscale store. We are going to sell exclusive designer swimsuits; expensive lingerie from around the world, mostly French; and very high-fashion ladies clothes.\"\n\nI watched as Sherri untied the top and bottom of the suit and took it off; she had a sweet little body. I kept looking at her.\n\n\"Do you have a position for me?\"\n\n\"I can think of several, Sherri.\"\n\n\"Mr. Smith...\"\n\n\"Would you be interested in being the swimsuit department manager?\"\n\n\"Oh my god!\" She said as she turned to look at me. \"Are you serious?\"\n\n\"I am, but let me ask you something first. Do you think you could get other ladies to work all day in designer swimsuits? Maybe not as skimpy as that one.\"\n\n\"Ever since you told me to do that the last time, I have wanted to do that! There are some nice mono-bikini that would work well for that.\"\n\n\"It seemed to have just worked pretty well.\" I got a big smile.\n\n\"It did, didn't it!\"\n\n\"You would be paid a salary to manage and commission. The clothes in this store are going to be expensive. We plan on making a place in this area of the country to come and shop for ladies that have plenty of money, with their rich husbands. I think some very pretty ladies selling the luxury clothing will encourage the husbands to spend more.\"\n\n\"It would!\" Sherri exclaimed.\n\n\"We will add some incentives for a while until the store takes off. It will probably be near Christmas before we get it open. We have a lot of planning to do.\"\n\n\"Mr. Smith, this will take a lot of money.\"\n\n\"Not a problem.\"\n\n\"Who is the other investor?\"\n\n\"I can't tell you right now.\"\n\n\"Have you even started?\"\n\n\"Still in the planning stages, but it is going to be in a nice building downtown.\"\n\n\"It will take you forever just to buy all the stock, especially if it is from overseas.\"\n\n\"You seem to know your swimsuits, would you be open to going with someone for three or four weeks to Europe to purchase inventory and setup accounts?\"\n\n\"Really! Hell, yes!\"\n\n\"Okay. I will get with you about it more later if you are interested. As soon as we know a schedule, you can start with us for several months before the opening. Since you have a degree in Marketing, I expect you to use it.\"\n\n\"I will! I'm still curious who your partner is?\"\n\n\"It will surprise you. She and I and Dawn thought this up.\"\n\n\"Oh, my god! I can't believe this!\"\n\n\"Does this sound like something you would be interested in doing?\"\n\n\"Oh, course.\"\n\n\"Once you come to work for us, we may need you to help us recruit some other talented young ladies to work for you. We are also thinking about having the salesladies in the lingerie department wearing lingerie all day.\"\n\n\"Oh my! This will be fun!\"\n\n\"Okay, you have to keep this quiet and to yourself until it is announced.\"\n\n\"I will.\"\n\nI was enjoying looking at Sherri's naked body as we talked. I was thinking she had forgotten she was naked.\n\n\"You better put some clothes on and ring up my girls.\" Sherri looked down.\n\n\"Oh...I guess I better.\"\n\n\"Bring the suit,\" I told her and walked off.\n\nWhen I got to the counter, the girls were waiting.\n\n\"Did you talk to her?\" Dawn asked.\n\n\"Yes. She thinks it is a great idea and is onboard.\"\n\n\"She is going to work for us?\" Amy asked.\n\n\"Yes, but none of you say anything to her yet.\"\n\nSherri walked behind the counter while she buttoned up her top.",
        "\"Sorry. I had to take the suit off; the owner will be here soon.\"\n\n\"Sherri? Have you been back there naked with my husband?\" Dawn asked.\n\n\"Uh...oh...ummm, I sort of forgot I was naked while he was talking to me. I'm sorry Mrs. Smith.\"\n\n\"Sherri, don't worry about it. He said you looked fabulous,\" Dawn told her.\n\n\"Sherri, do you have a boyfriend?\" I asked.\n\n\"Nothing steady.\"\n\n\"Good choice.\" Sherri looked at me and smiled.\n\n\"Any girlfriends?\" Sam asked. Sherri just smiled at her.\n\nShe blushed a little then started ringing up all the swimsuits. She got that finished and put everything in bags.\n\n\"In a month or so, can you come to the house for a few planning meetings?\" I asked. \"I will pay you for your time.\"\n\n\"Sure.\"\n\n\"Okay, I'll call you.\"\n\nWe grabbed the bags and left a shocked Sherri behind.\n\n\"Are you going to get Brenda naked at my lingerie shop?\" Dawn asked. I heard Amy and Sam giggle from the back seat.\n\n\"That won't be a problem,\" I said.\n\n\"And, why is that?\" Dawn asked.\n\n\"She wants me to do her.\"\n\n\"I know she does!\" Dawn said laughing. \"Are you going to get her into some skimpy lingerie like you did Sherri?\"\n\n\"I hope to.\"\n\n\"I still don't know if that will work, honey. A lot of that French lingerie you can see through.\"\n\n\"We will have to figure that one out.\"\n\n\"We could get in trouble with the police,\" Dawn said.\n\n\"I will have to talk to the Police Chief and the Sheriff and see what they say.\"\n\n\"I think you need to talk to the Attorney General,\" Dawn said.\n\n\"That is a good idea. He has a hot wife.\"\n\n\"How do you know?\"\n\n\"I met her. She is a very good lawyer.\"\n\nWe stopped and got some lunch; then we drove downtown to the lingerie store. Amy and Sam were pulling everything out of the bags and looking at it all again.\n\n\"Are you and Linda still shooting for the end of the year?\" Dawn asked.\n\n\"We hope so. It is going to be a rush. She is going to show me the building next week.\"\n\n\"That only gives you four months if you want to open before Christmas.\"\n\n\"I know, and I need her and some other ladies that know what to buy to go over to Europe and make some purchases. Sherri said she would be happy to go.\"\n\n\"You're not going to make it.\"\n\n\"I think Linda is going to hire some buyers from New York, if she hasn't already,\" I said.\n\n\"That would speed things up.\"\n\n\"Dawn, James said we could work part-time in the lingerie and swimsuit departments,\" Sam said.\n\n\"Oh my god.\"\n\n\"Honey, once you are back up and around, can you help?\" I asked.\n\n\"I can't. I have too much to do. This was yours and Linda's idea. You are going to have to find someone else.\"\n\n\"Okay. I have Sherri; maybe Brenda can help if she has an eye for expensive lingerie.\" I replied.\n\n\"She carries some, I have bought plenty,\" Dawn said.\n\n\"I guess I will have to find out.\"\n\n\"If you pull this off before Christmas, what are you going to do for a Grand Opening and advertisement?\" Dawn asked.\n\n\"Linda said once we firm things up, she is going to start a rumor campaign about a very fancy store coming to town.\"\n\n\"That's a start. Anything else?\"\n\n\"She said we should have a fashion show for several nights in a row with models. I have some ideas for models for the lingerie and swimsuits.\"\n\n\"I don't want to know. I think if you included some local ladies like Katrina and some of the other lovely women we know, it would make the local press.\"\n\n\"That is a good idea...maybe we could ask some of the other local hot ladies around town.\"\n\n\"Was Sherri hot?\" Dawn asked.\n\n\"Very. She has a hot little body.\"\n\n\"She looked good in that bikini.\"\n\n\"Yes she did,\" Sam added from the back seat.\n\n\"You two be on the lookout for some of your college friends that you think are hot and would work in bikinis and lingerie,\" I said. \"Just don't say anything yet.\"\n\nWe stopped and got a quick lunch, then headed on to the lingerie store. When we got there, they appeared busy. We all got out and walked inside. There were about ten people in the store looking around. We saw Brenda helping a lady. She now had a young lady working for her.\n\n\"You three look around and shop.\"\n\n\"Okay!\" Amy said.\n\nI walked around the store and looked at how things were laid out. Brenda did a good job of keeping the store looking nice. I went to the expensive import section and looked around. She had some nice looking things that Dawn owned most of. I looked at the prices, and they ranged from $150 to $300 a set. Nothing was as nice as what we had bought in France. I looked around, and there were two young couples that appeared to be married or dating looking around.\n\n\"Anything new?\" I heard Sam ask me.\n\n\"See anything you like?\"\n\nSam looked through a few things and pulled out a lacy black bra and thong. She held it up, and it looked big enough for her breasts.\n\n\"I like this.\"\n\n\"You don't wear much black.\"\n\n\"I know, but you like it on Dawn.\"\n\n\"Go try it on and come out and show me.\"\n\nSam looked around the store. \"Seriously?\"\n\n\"If you don't mind.\"\n\n\"I don't care.\"\n\n\"I know.\"\n\nSam took the outfit and went to one of the changing rooms. A few minutes later she came out in the skimpy black lace outfit and walked to me.\n\n\"Do you like?\" Sam asked.\n\nShe held her arms up and turned around several times. I reached over and took the straps to the bra and pulled them up on her shoulders.\n\n\"You like nice.\"\n\n\"Anyone looking?\" Sam asked.\n\n\"Oh, yes. You have the attention of the young guy and his girl.\"\n\nSam took her hands and lifted her breasts up and squeezed them.\n\n\"Can I get this one, daddy?\" Sam said a little loud and smiled.\n\n\"Yes, honey, see if you can find one in white for me.\"\n\nSam wanted to giggle. She stayed in the outfit and looked through the lingerie. She picked up a pretty white lace set and held it up.\n\n\"What do you think?\" She asked smiling real big.\n\nThe outfit was a very thin white lace. The bottom was a lacy thong, but it was thin, and Sam knew it as she smiled.\n\n\"What are you two up to?\" Dawn asked.\n\n\"Sam is trying on some lingerie for me.\"\n\n\"I heard the 'daddy' comment. Sam, don't do that. I like that outfit; I have it,\" Dawn said.\n\n\"Oh, good. What do you think about this white one?\"\n\n\"It is very thin, and you know it, young lady.\"\n\n\"It would probably be too thin to wear if I was working part-time then?\"\n\n\"Are you going to model that?\" Dawn asked.\n\n\"I thought I would.\"\n\n\"Okay...but after James looks at it, walk over to Brenda and ask her if she has it in blue.\"\n\nSam smiled and went back in the changing room.\n\n\"She would work in the store naked if you let her,\" Dawn said.\n\n\"I know.\"\n\nDawn went through the lingerie and picked up some with fuller tops. She picked up several pairs and went to one of the changing room. About that time Sam came out. She started walking toward me; I could see her lovely pink nipples and her pussy lips. She stopped in front of me and turned around and let me look at her ass. I had noticed that the young couple had moved closer to us and were looking through the expensive things now.\n\n\"Do you like this?\" Sam asked.\n\n\"Turn back around.\"\n\nSam turned around and held her chest out for me. I took my hands and felt the weight of her breasts.\n\n\"Will that hold you up, honey.\"\n\n\"Well, it is not doing much in the way of holding me up. It is not for that,\" Sam said.\n\nI looked up, and the young guy was looking at Sam's ass.\n\n\"Turn around again.\"\n\nSam turned around so I could see her ass.\n\n\"Oh, hi!\" She said to the young guy.\n\n\"That looks nice on you,\" he said looking her over.\n\n\"Thank you.\"\n\nSam turned back around with a big smile.\n\n\"Get that one. Go find Brenda and ask her if she has that in blue,\" I told her.\n\n\"Okay.\"\n\nSam walked off past the young couple and walked across the store to where Brenda was talking to a nice looking middle aged lady.\n\n\"Is that really your daughter,\" the lady with the young guy asked.\n\n\"No, she pulls that shit in public sometimes. She is one of my lovers.\"\n\nDawn walked up to me in a lacy red bra and a lacy red thong. Her breasts looked nice straining against the top.\n\n\"What do you think?\" She asked.\n\n\"I think it looks nice, but I think you need to go up a cup size.\"\n\n\"This is a D.\"\n\n\"Try a DD.\"\n\nDawn looked through more tops until she found a DD matching top. She took it and walked off.\n\n\"I noticed a wedding ring, is that your wife?\" The young lady asked.\n\n\"Yes. I think that blue set you have would look good with your blonde hair,\" I told her.\n\n\"Sir, do you think the blue or the green would look better?\"\n\n\"Oh, uh...I think the blue ones,\" her boyfriend said.\n\n\"You should go try them on,\" I told her and turned back to look through some more lingerie for Dawn.\n\nThe young lady looked at me, then at her boyfriend. She smiled and walked to one of the changing rooms.\n\n\"The nice stuff is so expensive, but it looks nice doesn't it?\" I said.\n\n\"Oh...yes it does,\" he said.\n\nI found a dark green set for Dawn. I checked, and the top was DD. \n\n\"Is this better?\" Dawn asked as she walked up in the DD top.\n\n\"That fits better. I like that.\"\n\nDawn smiled at me.\n\n\"Try this on,\" I told her and handed her the green set and she walked off.\n\n\"I didn't think they could walk out here in the lingerie,\" the young guy said.\n\n\"Well, the store is usually not this busy when we come in, but I want to see everything, and I can't hardly walk back to the changing rooms can I?\" I said.\n\n\"I guess not.\"\n\n\"Someone should open a store where the ladies can walk around in lingerie while they shop.\"\n\n\"That would be fun.\"\n\n\"Would you take your lady friend there and let her walk around in lingerie?\"\n\n\"If she wanted to. She is pretty daring.\"\n\n\"I think it would be a good idea,\" I said.\n\n\"What do you think, honey?\" His girlfriend said walking up.\n\nShe looked hot. Average height with a nice ass and some nice C tits. The blue outfit looked nice with her blonde hair. He turned toward her and paused for a minute as he looked her over. He looked around to see if anyone else was looking at her. She looked over his shoulder at me and winked.\n\n\"You look hot, honey.\"\n\n\"Can I see?\" I asked.\n\nShe walked around her boyfriend and stood in front of me, then spun around. Her ass looked fantastic.\n\n\"What do you think?\" She asked turning to face me.\n\n\"The blue is perfect, it brings out your blue eyes,\" I told her looking into her eyes.\n\nShe smiled and turned back to her boyfriend. I looked over her ass again as she stood talking to him.\n\n\"I know it is a little expensive, but I am worth aren't I?\" She asked as she got close to her boyfriend and squeezed his cock.\n\n\"You do look very sexy in it, honey.\"\n\n\"Do you like the green?\" Dawn asked walking up.\n\nThe green outfit I had handed her was similar to the very thin one that Sam had on. Her huge nipples were clearly visible through the bra.\n\n\"I like that.\" Dawn turned around to show me her ass for a moment.\n\n\"Oh, I like that,\" the young lady said looking at Dawn.\n\n\"It feels nice next to my skin,\" Dawn told her as she rubbed her tits.\n\n\"Let me see if I can find my size,\" the blonde said.\n\nDawn helped the young lady look. The blonde picked up a set in green and walked away. Sam walked up in a very thin blue outfit like the first one.\n\n\"Oh Sam, I like the blue,\" Dawn said. \n\nSam turned around so we could see the back and so the young guy could look at her breasts. She turned back around.\n\n\"Find one like mine, then we will match,\" Sam said.\n\nThe two of them looked for another blue set for Dawn, taking their time. Amy walked up to us. I wanted to laugh. She had on a thin lace bra that exposed the tops of her nipples. The bottom she had on had a little more to it.\n\n\"Will this work for this weekend?\" Amy asked pushing her breasts up.\n\nDawn looked at her and smiled.\n\n\"Where did you find that?\" Dawn asked.\n\n\"On the other side of the store. It is in the cheap novelty section; I thought you two would like tearing it off of me this weekend.\"\n\n\"Oh, that will be perfect!\" Dawn said. \"Let's see if we can find a set for me and one for you sister.\"\n\nThey walked across the store to plenty of looks from the other customers that had come into the store.\n\n\"Can I ask you something?\" The young guy asked.\n\n\"Sure.\"\n\n\"Do the three of them live with you?\"\n\n\"Yes. Oh, that looks nice on you,\" I said as his girlfriend walked up in the thin green lingerie.\n\n\"I think it does too,\" she said smiling at me.\n\nHer boyfriend turned to look at her. She was rubbing her breasts with her hands; I noticed her areolas and nipples were swelling. Her boyfriend looked her over for a minute.\n\n\"That is pretty thin, and I can see through it. But you look hot,\" he said.\n\n\"Can I have it?\"\n\n\"I don't know, what do you think?\" He said turning to ask me with a smile. His girlfriend moved closer to me.\n\n\"You have a beautiful body. You look very sexy in that outfit,\" I told her. She looked at me and smiled and turned back to her boyfriend.\n\n\"Please?\" She begged.\n\nI reached out a little and ran my hand over her ass as her boyfriend looked at her nipples swelling.\n\n\"Sure, but I think the two of them are all I can afford today, honey.\"\n\n\"Thank you! I'll make it up to you,\" she said reaching out and rubbing the bulge growing in his pants.\n\n\"Honey, stop that,\" he said.\n\nShe looked around the store.\n\n\"Is this making you horny?\" She asked Tim.\n\n\"Honey, I am surprised at you showing off your body in public.\"\n\n\"Everyone seems to like it,\" she said. \"I think you like it. I think you liked him looking at me.\"\n\n\"I think I need to get you home,\" he told her.\n\n\"I don't think I will make it that far,\" she said as she kept rubbing his crotch. \"This has made me so hot,\" she whispered as I watched her rub.\n\n\"Go change.\"\n\nShe walked back to the changing room.\n\n\"That was nice of you,\" I told him.\n\n\"I think she will be very appreciative.\"\n\n\"I'm sure she will.\"\n\n\"Hi, James,\" Brenda said walking up to me and putting her arm around me.\n\n\"Hi, Brenda.\"\n\nShe used the arm she had wrapped around me and turned me and walked me away from the guy.\n\n\"What are you and the girls up to?\"\n\n\"Shopping.\"\n\n\"They don't usually shop like this when the store is full of customers.\"\n\n\"You seem to be selling plenty.\"\n\n\"I am, your girls have been stopping and talking to the customers,\" Brenda said.\n\n\"I bet you have walked around the store in lingerie at times.\"\n\n\"Well...\"\n\n\"Did you sell more?\"\n\n\"Usually. But what are they up to?\"\n\n\"They are just buying, and being a tease. Who is your helper?\"\n\n\"Owners kid. She put her to work here when she flunked out of college.\"\n\n\"The customers have thinned out; can she handle the place?\" I asked.\n\n\"Yes, why?\"\n\n\"Let's go in the back to your office.\"\n\nI walked to the back of the store with Brenda; we went to her office. Brenda sat in a chair across from a sofa. She was wearing her usual mini-skirt and revealing top.\n\n\"James? What is going on?\"\n\n\"Dawn needs some new lingerie; she had a small boob job.\"\n\n\"But why are they walking around the store in lingerie. I know they will come out and model for you, but they are running around the store.\"\n\n\"Brenda, what would you think about working in a high-end lingerie store where the salesladies wore the merchandise all day long?\" I asked her.\n\n\"Could they do that without getting arrested?\"\n\n\"We are looking into it?\"\n\n\"Why would you be doing that?\"\n\n\"We were in France a few weeks back and went to a French Lingerie store. The items they sold were very nice. I have someone else that is wanting to go in with us and open a very high-end lingerie store in town. I had the idea of letting the salesladies wear the merchandise all day.\"\n\n\"High-end lingerie doesn't sell well, especially European items with the high price tag.\"\n\n\"But they look very nice.\"\n\n\"Oh, yes, they do. But to bring in that type of lingerie into the US and sell it, the price has to start around $300 to make any money.\"\n\n\"We are thinking $350 and up. The store we went into hand makes all of their merchandise. It was very nice stuff. We paid around $150 a set there. The lady that owned the place said the women that make the lingerie could supply plenty more.\"\n\n\"Well, there is only one place in town that sells that class of lingerie, it is a small part of their business.\"\n\n\"We are thinking about an entire high-end store; swimwear, lingerie, designer clothes.\"\n\n\"Wow! That will be a tall order,\" Brenda said.\n\n\"Do you think it would do well with the right kind of promotion and marketing?\"\n\n\"I don't know. The area really doesn't have a place that high-end.\"\n\n\"The idea we have is to make it a draw from all over the area. Like women go to Chicago and New York to shop.\"\n\n\"But those towns have shops for different designers,\" Brenda told me.\n\n\"We know. I have enough backing that the store will carry different popular designers. We want to make it appeal to women in this part of the country.\"\n\n\"Inventory will cost you a bundle, plus a nice store. It will be tuff going until it gets off the ground. Who is your partner?\"\n\n\"Can't tell you that right now. Dawn and the girls will be part owners. We have been out today trying to poach people to work there.\"\n\n\"Are you thinking about me working there?\" Brenda asked.\n\n\"Dawn and I were thinking about you managing the lingerie department. You run this place.\"\n\n\"Oh, I see.\"\n\n\"What kind of money do you make a year here, Brenda?\"\n\n\"I do okay.\"\n\n\"What is okay? Are you salaried or do you make commission?\"\n\n\"A combination of both.\"\n\n\"How much?\" I asked again.\n\n\"Thirty-five to forty thousand a year.\"\n\n\"Okay. Would you be interested in working for us? We are trying to get the store open before the holidays, but it will probably be spring.\"\n\n\"Maybe, but what all would I be doing?\"\n\n\"Managing the department and the staff, helping with buying, maybe traveling to Europe to pick out lingerie to carry. It would be like running a store within the store.\"\n\n\"What kind of money are you planning on paying someone that takes this job?\"\n\n\"We have some ideas, but we were hoping you would have some ideas to motivate the sales staff. I heard you have worked at several different stores over the years.\"\n\n\"I have. This one has worked out well. We carry nicer lingerie and some of the low-end items. They sell well.\"\n\n\"Do you get many rich clients in here?\"\n\n\"Just you and Dawn.\"\n\n\"Well, Dawn has been buying from you since before we won the money. But Brenda, she looks very nice in the things we bought in France. We want to appeal to people that have more disposable income than average, not necessarily wealthy. Men that want their ladies to look nice in all types of clothing. Women that want to look nice for their men.\" I said.\n\n\"My biggest concern would be how long it would take for the store to catch on? It could take a few years. Do you and your partner have that kind of cash reserve?\"\n\n\"Yes.\"\n\nBrenda looked at me and smiled.\n\n\"Are you thinking about it, Brenda?\"\n\n\"Yes, I am. I have one question, though? As a manager, would I be expected to work in lingerie?\"\n\n\"Brenda, with your body you could do it. We plan on having a sales staff of all ages.\"\n\n\"What are you saying?!\" Brenda mocked me.\n\n\"I am saying, that for a woman in her early forties, you have a hell of a body. Would you work like that?\"\n\n\"You are going to get a lot of lookers in the store.\"\n\n\"We are working on that issue.\"\n\n\"I could work like that if the place is high-end enough,\" Brenda said.\n\n\"Could you hire and motivate a sales staff to work like that?\"\n\n\"I'm sure I could.\"\n\n\"Show me,\" I said.\n\n\"What?\"\n\n\"Show me you could work dressed that way.\" Brenda gave me a sexy smile.\n\nBrenda stood and looked at me, then started unbuttoning her top. She always wore a revealing top, usually without anything under it. She got it off and unzipped her mini-skirt and let it fall to the floor. Brenda did look nice; I already knew she kept herself bare. She smiled at me then reached into a bag on her desk and pulled out some lingerie. I watched as she stepped into a very lacy pair of panties, then slipped on the matching bra.",
        "\"Is this okay?\" She said.\n\n\"I like the outfit before this better, but this looks fine.\"\n\n\"One more question?\" Brenda asked. \"Do I have to fuck the owner to get this job?\"\n\n\"Maybe we could work that into your contract if you want it to be a condition of your employment.\"\n\nBrenda smiled, then reached into the bag and pulled out a very skimpy cover and slipped it on over her arms. It looked nice and had just the right kind of material to just partially cover her up.\n\n\"Let's go,\" she said.\n\nI followed her back out to the store. I saw my girls piling up lingerie at the counter. There was a couple that looked to be about thirty in the store looking around; Brenda walked to them.\n\n\"What did she say?\" Dawn asked.\n\n\"I have her interest.\"\n\n\"Did you ask her to come out here like this?\"\n\n\"I need to see if she is comfortable this way. She seems to be very comfortable.\"\n\nWe watched as Brenda led the couple around the store showing them different things. I noticed she had moved them to the area that had more expensive lingerie. After a few minutes, the lady smiled at her husband and went to try on something. Brenda walked to the counter.\n\n\"How is it going?\" Dawn asked.\n\n\"Well, he asked me where the lingerie I had on was. She is going to try some on. Did you three find everything you wanted?\"\n\n\"For now,\" Dawn said.\n\n\"Let me see,\" Brenda said to Dawn.\n\n\"See what?\"\n\n\"Your new tits.\"\n\nDawn unbuttoned her top and pulled it open.\n\n\"Oh, they look nice,\" Brenda said. \"Just a little more to make you look a little bigger and firmer.\"\n\n\"I like them,\" I said.\n\nDawn buttoned up her top as Brenda went behind the counter to start ringing up everything the girls had bought. I walked off to the back of the store; a minute later a woman with the guy was saying something to him.\n\n\"Come here and look,\" she said.\n\n\"Come out here.\"\n\n\"Honey...\"\n\nI watched as his lady friend stepped out of the doorway leading to the changing room. She was modeling for her guy. I walked up the aisle they were in until I walked up behind her.\n\n\"That looks nice on you,\" I said.\n\n\"Oh!\" She exclaimed and turned around to look.\n\n\"Red would look really nice,\" I said and walked around her, back to the front of the store.\n\n\"Other men looking at the ladies trying on lingerie could be a problem,\" Brenda said.\n\n\"She is confident. They don't have to walk out and model,\" I told her.\n\nI handed Brenda my credit card so she could finish ringing up our purchases.\n\n\"We are thinking about private viewing rooms,\" I told Brenda. \"A place where the men, or women, could watch their lady model for them. Maybe a little wine, or something like that?\"\n\n\"Oh, you are thinking like they do in the stores in New York,\" Brenda said.\n\n\"They do that in New York?\" I said looking at Brenda. She smiled back at me. \"They do it that way in France.\"\n\n\"James, you are talking about a lot of overhead,\" Brenda told me.\n\n\"We are talking about some high prices. You three ready to go?\"\n\nThey picked up their bags.\n\n\"Brenda, think about it. I will call you soon,\" I told her.\n\n\"I will be thinking about what I want in my contract,\" she said.\n\nWe loaded everything up and headed home.\n\n\"What does she want in her contract?\" Dawn asked.\n\n\"She asked me if she had to fuck the owner to get the job.\"\n\n\"And you told her you would put it in her contract?\"\n\n\"I mentioned it.\"\n\nAmy and Sam giggled in the backseat.\n\n\"Maybe you can make that her bonus,\" Dawn said. \"I guess you and Linda have been talking about this more?\"\n\n\"Emailing back and forth.\"\n\n\"Where are you two on it?\" Dawn asked.\n\n\"She was wanting to have the store open by Christmas, but now she is thinking Spring so that we can get everything in place.\"\n\n\"How complicated has this gotten?\"\n\n\"Linda wants to have a major fashion attraction for this part of the country.\"\n\n\"I was afraid of that. What happened to our lingerie shop and swimwear idea?\"\n\n\"With Linda involved, what do you think?\"\n\n\"I can guess.\"\n\n\"She has some great plans; I'm just not sure how much money she is planning on putting into it,\" I said.\n\n*****\n\nWhen we got home, they got all of their new items carried into the house. Dawn sat on the sofa while Sam and Amy went upstairs.\n\n\"I need help putting this cream on my incisions.\"\n\nShe handed me the cream, and I helped her get her top and bra off.\n\n\"God, that feels better,\" she said.\n\n\"Lay down and let me rub this on you.\"\n\nDawn laid back on the sofa, and I gently lifted her breasts up and rubbed the cream on the incisions carefully. They were about healed, but she still needed to keep putting the cream on so the scars would be less noticeable.\n\n\"They do look nice,\" I told her.\n\n\"They do. I needed a little more and a lift.\"\n\n\"Can you sit up a while without the bra on?\"\n\n\"For a little while.\"\n\nDawn sat up, and I admired Dr. John's work. Her breasts were now larger and firmer, they looked very nice.\n\n\"You look great. How much longer will you have to wear something for support?\" I asked.\n\n\"A few more weeks.\"\n\n\"Is a bikini top enough support?\"\n\n\"If I wear one that actually has cups on it. I can't wear the string bikinis yet.\"\n\nI reached over and felt her breasts for a minute.\n\n\"Do they feel better?\"\n\n\"Honey, your breasts have always felt wonderful.\"\n\n\"But, how do they feel now?\"\n\n\"Firmer and larger.\"\n\n\"Do they feel or look fake?\"\n\n\"No, they don't. You didn't get that much bigger. They feel and look natural.\"\n\n\"Are you sure?\"\n\n\"I promise.\"\n\nDawn took her hands and felt her breasts and rubbed them for a few minutes.\n\n\"I know you need support for now, but can you go for a swim? The water should hold you up.\" I asked.\n\n\"That sounds like a good idea. The incisions are healed enough.\"\n\n\"Go out to the pool then.\"\n\nDawn stood and took her skirt off and her thong and went to the pool. It was mid-afternoon, but there was still plenty of sun. I watched through the windows as Dawn walked down the steps and into the pool. I went to the study to look at limos on the internet to get some ideas. I also sent Sam an email and asked if he could come Saturday.\n\n\"Where is Dawn?\" I heard Amy ask.\n\n\"Out in the pool.\"\n\n\"I'll join her.\"\n\n\"Make sure she stays in deep enough water to hold her tits up.\"\n\nAmy left my study.\n\n\"Sam!\" I heard her yell.\n\nI spent some time looking and doing some research. After an hour I so I went to check on the girls.\n\n\"How are you doing?\" I asked Dawn as she walked around the pool.\n\n\"Okay, but I need to get out and shower.\" \n\nI watched her as she got out of the pool and walked to me. She looked nice all wet. I went inside with her, and she went upstairs.\n\n\"Is that all for her today?\" I heard Sam ask.\n\n\"Yes. She is upstairs showering to get cleaned up. Why don't you go and help her?\"\n\nI watched Sam run through the den naked and up the stairs.\n\n\"Where is she going,\" Amy asked coming inside.\n\n\"To help Dawn shower.\"\n\nAmy walked to me.\n\n\"When do I get to play your wife?\" She said looking up at me.\n\n\"Amy, you will not be playing my wife. We will find some time to be alone so I can treat you like my wife.\"\n\n\"Okay.\"\n\n\"Honey, would you like to go away one weekend, just the two of us?\"\n\n\"We've done that,\" Amy said.\n\n\"That was just to a hotel; I was thinking of something else.\"\n\n\"Maybe. James, are you and Dawn sure you are okay with this idea of having three wives?\"\n\n\"Dawn is okay with it. She is concerned because she doesn't know how to treat a wife. You two need to spend time together alone also.\"\n\nAmy wrapped her arms around me and held me.\n\n\"I love you and Dawn,\" she said. \n\nShe held me for a minute then released me.\n\n\"I better go check on Sam,\" she said and headed up the stairs.\n\nI sat on the sofa with the remote and all the new cameras. I little while later Sam came running in naked. She went and picked up the tube of cream I had put on Dawn's incisions.\n\n\"Need this,\" she said and headed back up the stairs in a hurry.\n\nI pulled up the camera in the bedroom to see what they were doing. Dawn was lying on the bed, and it looked like Amy was rubbing moisturizer all over Dawn. Sam came in and got on the bed. She took the tube of cream and got some out then slowly rubbed it on Dawn's incisions. When she finished that, she picked up the bottle of moisturizer and she went to work rubbing it all over the rest of Dawn's breasts. Amy was rubbing it all over the rest of her body. I watched until they finished her front side, then they had her roll on her side. Sam rubbed the moisturizer on her back while Amy rubbed it into her ass and thighs. They looked very sensuous working on Dawn. I flipped through some of the new cameras outside for a few minutes.\n\n\"James,\" I heard Amy say from the balcony. I turned to look. \"Would you like to join us?\"\n\n\"I think the three of you are having a good time. I will just watch.\"\n\n\"Okay.\" She walked back down the hall.\n\nI pulled the bedroom cameras back up. I saw Sam working her fingers into Dawn's pussy. Amy got back on the bed and took some more moisturizer and rubbed it slowly into the skin of Dawn's face as she lay there peacefully. I watched for a while as Sam and Amy would trade places; each of them slowly working their fingers inside of Dawn. After a bit, I watched as Dawn tilted her head back and moaned as she had an orgasm. A few minutes later, Amy was between her legs. I decided while they were busy, I needed to put some things back in the hidden cabinet by the door. I had been moving things back up from the safe room for about an hour.\n\n\"What's that?\" I heard Sam say from behind me as I finished with the last item. \"James? Are those guns in that cabinet?\" She asked walking up.\n\n\"Yes, it is where I keep some.\"\n\n\"I haven't seen that. Did it come out of the wall?\"\n\n\"Yes.\" I stood and pushed the button inside the cabinet, and it slid back into the wall. I closed the hidden panel that covered it as Sam watched.\n\n\"What is that for?\" Sam asked.\n\n\"Nothing, I hope.\"\n\n\"I didn't know you had secret hiding places.\"\n\n\"There are a few. One day I will show you where all of them are.\"\n\n\"How do you get into that one?\" She asked running her hand over the panel.\n\n\"Sam, you and Amy do not need to know that yet.\"\n\n\"Why not?\"\n\n\"Because I have already told you that until you two learn to handle guns, to leave them alone.\"\n\n\"When are you going to teach me then?\"\n\n\"Whenever you are ready. What did you two do to Dawn?\"\n\n\"She is asleep. Amy is sleeping with her.\"\n\nSam's skin looked nice and shiny; I ran my hand over her shoulder.\n\n\"You feel nice.\"\n\n\"We had a moisturizing party.\"\n\n\"Dawn is not supposed to be using her arms like that.\"\n\n\"Well, we put moisturizer all over her, then she watched as Amy and I did each other.\"\n\n\"You have never asked me to do that to you.\"\n\n\"It's a girl thing,\" she said smiling.\n\n\"Are you three doing okay?\"\n\n\"Yes, we are.\"\n\nSam wrapped her arms around me and held me. I held her for a minute. She released me and looked up at me.\n\n\"Sam, how have you felt since Wednesday?\"\n\n\"The same way I always feel.\"\n\n\"No different?\"\n\n\"No. I that was just something I felt from my sister.\"\n\n\"Sam, I think there was more to it than that.\"\n\n\"Maybe. You keep telling me that I am special.\"\n\n\"You and your sister are special,\" Sam smiled at me.\n\n\"Why don't you show me how special I am,\" Sam said.\n\nI took her hand and led her to the big bedroom downstairs. Sam removed my clothes, and we moved to the bed. I laid on my back, and Sam laid on top of me. We kissed for a while.\n\n\"Honey, what was your mother's maiden name?\"\n\n\"Why?\"\n\n\"Just wondering about your Irish background.\"\n\n\"Her maiden name was Early.\"\n\n\"That's Irish?\"\n\n\"I guess.\"\n\n\"What do you know about your grandparents?\"\n\n\"Not much. I do remember my grandmother; she was a very pretty Irish lady like my mother. My grandfather was drunk like my father.\"\n\n\"You haven't told me much about your parents. Is your father Irish?\"\n\n\"Half.\"\n\n\"What else?\"\n\n\"There is not much to tell. How were you making love to my sister yesterday?\" Sam asked changing the subject.\n\n\"Nice and slow.\"\n\n\"Did you do anything to her?\"\n\n\"You mean did I push anything into her?\"\n\n\"Yes.\"\n\n\"No, I didn't at first. But I felt a lot of love coming from her, so I made sure she felt mine.\"\n\n\"When I touched you, I could feel your love for her and hers for you. It made me feels so wonderful inside.\"\n\n\"Your sister and I felt how you felt when you touched me.\"\n\n\"I liked how I felt. Can you make me feel that way again,\" Sam said with a big smile.\n\n\"Sam, honestly, I have never felt exactly the way you felt. It was very different; sort of like incredible happiness. I feel something like that from Dawn sometimes, but not exactly like I felt from you.\"\n\n\"Just make me happy then,\" she said smiling.\n\nI held her and rolled her over on her back. I leaned over her and started kissing her. I was kissing her and rubbing her breasts for a minute, then slid my hand down between her legs. I played with her pussy lips for a minute, then slid my fingers inside her.\n\n\"That makes me happy,\" she said as I removed my mouth from hers.\n\nI started kissing on her neck as she lifted her chin up. I moved to the hollow of her neck and kissed, then kissed over to her collarbone. Sam moaned as I kissed her there. I kissed on her collar bone out to her shoulder, then kissed my way back under her collar bone until I was back at her neck. I slowly kissed up until I got to the hollow above her collarbone next to her neck.\n\n\"Ohhhhhh...not fair...\" Sam moaned.\n\nShe had an extremely erogenous spot right there that I had explored before. I kept kissing her there as she wrapped her hand behind my head and held me in place. I as I kept kissing her, I could feel her pussy growing wetter and wetter.\n\n\"Husband...I love you...\"\n\nAfter about ten minutes, Sam was moaning softly as I kept kissing her on that spot and fingering her pussy. I could feel how aroused, and content she was at the moment. She felt much like Amy had felt.\n\n\"James...I need you inside me...\"\n\nI took my hand that was inside her pussy and lifted the leg nearest me up. Sam rolled on her side. I pulled her leg back over me, then pulled her in tight. She reached between her legs and found my cock. I pulled her leg back some more, and she started the end of my cock into her pussy. I slid into her slowly.\n\n\"Ohh...thank you...\" Sam moaned as I slid into her all the way.\n\nAs I held Sam, I explored how she felt. She felt different. She was aroused and full of love as always, but I explored deeper. She had hooked her top leg behind mine so she could pull her ass into me tighter. I slid my hand down and placed it between breasts. I suddenly felt her energy connect with mine, so much like Dawn. As I worked my cock slowly in and out of her, I was concentrating on what I was feeling. Then I felt the same feelings of deep contentment that I had felt from Amy. Sam felt so peaceful and loving at the moment. She felt so wonderful; I tried to pull that feeling from her slowly.\n\n\"Take it,\" Sam said.\n\nSuddenly, I felt the feeling much stronger. I was not pulling harder; Sam was pushing it into me. It was an incredible feeling of peace and happiness. I held her and just absorbed what she was giving me. I didn't know what to give her back. I just held her and slowly slid in and out of her.\n\n\"Sam...\"\n\n\"Shhh.\"\n\nWith my hand on her chest, I could feel her breathing slowly like I had been teaching her. She was so content letting me feel her love and happiness. I had to explore my reservoir of feelings to find something to match hers. I stop trying and just let go; something Dawn had taught me to do years ago. I kept sliding in and out of her as I relaxed like I had taught them to do.\n\n\"Emmm...\" came softly from Sam.\n\nI just relaxed and made love to her slowly. I felt Sam place her hand over mine on her chest. The bond between us got stronger. I just relaxed and let it come to me. After a few more minutes, I felt it inside of me. I felt her deep passion and love like I felt for Dawn when she was sitting in my lap during one of our slow fucks. It surprised me because I only felt that way when we were like that because of what Dawn would be giving me. The feeling grew inside me.\n\n\"Yes...\" Sam said.\n\nI pulled her in tighter and just made love to her like I had never done before. She felt even happier now. I worked my cock in and out of her slowly for a long time.\n\n\"Ohhhhh...,\" came from Sam from deep inside her.\n\nI could feel her pussy squeezing my cock over and over; a feeling so familiar. Then I felt another familiar feeling, the need to hold on and wait for her. The growing heat inside her pussy was wonderful. Over and over her muscles squeezed my cock. \n\n\"Emmmmmm...\" came from Sam.\n\nShe took her hand off of mine and reached behind me and grabbed my hips and pulled me into her. I pushed all the way in and held it. Suddenly, I felt Sam begin to tremble. I held her tight.\n\n\"Ahhhhhhhhhhhh!!\" Sam screamed and jerked hard, but slowly.\n\n\"Oh my god!!\" I yelled out.\n\nI began coming just like I did when Dawn was sitting in my lap. Sam jerked more and more as I kept pumping cum into her over and over. I was lost in Sam's feelings.\n\nI realized Sam had stopped jerking, and I was still holding her tight. She was rubbing my arm that was holding her.\n\n\"Sam?\"\n\n\"Yes.\"\n\n\"Are you okay?\"\n\n\"Perfect.\"\n\nI held her for a while longer. She finally pulled away from me and rolled to me. I looked into her eyes and knew she was happy. She wrapped her arm around me and held me.\n\n\"Was that like when you and Dawn do it?\"\n\n\"No, honey. It was just like you and I do it.\" She kissed me and placed her head under my chin.\n\n*****\n\nI woke up when I felt Dawn touch me.\n\n\"Don't move,\" she said she whispered.\n\nI knew instantly she was exploring my feelings and energy. I lay there for a few minutes.\n\n\"Oh, my god,\" Dawn said. \"She did it.\"\n\nI felt Dawn kiss me on my neck, then she got off the bed and left the bedroom.\n\n\"What did I do?\" Sam said.\n\n\"Just what you wanted to do, honey.\""
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "amy",
        "samantha"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-51"
}