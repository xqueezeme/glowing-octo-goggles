{
    "title": "The Wallflower Ch. 07",
    "pages": [
        "Don't have much to say about this chapter. All I can say is I had a lot of fun writing this chapter :D I'm excited for all of ya'll to read it. Comment/ Rate/ Email me what you think. Your comments are useful, I do read all of them. It lets me know what your assumptions are and what your mind process of this story is. It also helps me figure out if there are some things I have not considered yet. Enjoy the read -BlessingAndCurse \n\n***** \n\n\"Who are you trying to impress?\" \n\nThe words came from behind Lily as she was looking at the mirror in her locker, fluffing out her hair and tucking away any loose strands. She closed her eyes and breathed out slowly as she knew who it was already. Brandon Atreides. \n\n'Just ignore him and walk away. Don't say a word. Walk away.' She thought to herself as she inhaled deeply to quail the fear that was in her heart. She closed her locker door and turned to walk away without a glance towards him, but he wasn't going to let himself go unnoticed. He jerked her by her forearm and slammed her back into the lockers. Lily felt like her eyes were rolling as the back of her head crashed into the metallic doors. When her eyes refocused she saw an enraged Brandon. \n\n\"I asked you a question,\" he bit out. \"I want an answer.\" \n\n\"Why does it matter to you?\" Lily asked quietly. \"It's not like it matters.\" \n\n\"I don't care if it matters or not. I asked you a question.\" When she still refused to answer him, the pressure applied to her arm became sharp and painful. Lily began to yelp, but the look on his face told her to shut the hell up or else he would make it worse. \n\n\"These are just my normal clothes. I like them.\" A glimmer of humor passed across his face as his lips twitched with obvious mirth. \n\n\"Are you serious?\" he asked, barely containing laughter. His gaze started at the bottom of her feet and came back up to look her in the eyes. She looked down at herself to see what could have possibly been wrong with her clothes. She wore a nice pair of cobalt blue flats with a dress to match. She had on a few additional golden accessories just to accentuate the look. Some of the girls at her school wore something similar, so she didn't see what the problem was. \n\nBrandon shook his head at her and looked back up at her. \"You look like a slut.\" \n\nThose words hit her like a splash of freezing water. \"I am not-\" \n\n\"Like I believe that shit. You have people thinking your all bougie and acting like you too good for them. But you walkin' around in a dress that hardly comes over your big ass while you're standing. As if you're begging to be fucked from behind.\" He leaned closer to her to whisper loudly, \"And I bet you have let a nigga hit it from the back. I can imagine your legs spread open like a nasty slut.\" As he talked, he placed his hand flat against her stomach and eased it down to her thigh. All of a sudden, he shot his hand up between her thighs and began rubbing his fingers across her core. \n\nLily tried twisting her arm and kicking her legs to get away, but all it did was make Brandon hold onto her other arm with the same amount of excruciating pressure. Tears began to fill her eyes as the pain was becoming too much. She bit her trembling lip to keep from crying out. \"Just leave me alone. Stop touching me.\" \n\n\"Why, when you like guys touching you. You like to tease them with that outfit. You trying to offer niggas what you got. Why you mad when they take what you're offering.\" The smile suddenly slipped from his face as he continued to look at her. \"But sex is all you have to offer because all you good for is for guys who don't give a shit about you. Because you ain't nothin' but an ugly slut.\" With that, he released his hold on her and walked away. She let out a withering sigh as she combed her hand through her hair. She looked up and noticed the stares she got. Some were disgusted and looked down on her clothes. Others focused their eyes on the pushed up hem of her dress that now exposed her thighs with a look of humor. Others openly laughed at her. That's when the tears came. \n\nShe rushed home from school and threw off her clothes as she entered her bathroom. All the way home, she couldn't shake this feeling of filth and grime all over her whole body. She just felt so dirty. The clothes made her feel dirty now. In her mind, it was the clothes' fault of what happened today because she certainly didn't ask for any of that to happen. \n\nAs she took off her clothes, she looked up at the mirror. She stopped what she was doing and took another look. Bruises. There were bruises. Lily shifted her hair over to her shoulder as she saw the red imprints of Brandon's hands around her arms. When she turned around to see her back, she could actually see purple welts forming from where he had slammed her against the lockers. The worst yet were the bruises around her thighs. The tears returned as she stood there staring at her body. Disgusted.  \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"Hey, Lily!\" Vanessa waved excitedly at her from their lunch table the next day. \n\nLily plastered on a smile as she placed her tray across from Vanessa's. As Vanessa continued to look at Lily, the smile from her face began to slip. \n\n\"Lily, what's wrong.\" \n\n\"Nothing's wrong,\" Lily lied as she ate a spoonful of mashed potatoes. \n\n\"Honey, you're wearing sweats.\" \n\n\"And?\" \n\n\"It's August,\" Vanessa said bluntly. \n\n'Crap.' She was hoping out of all people that Vanessa didn't notice. \n\n\"What happened to your usual clothes?\" \n\n\"There in the wash.\" \n\n\"Lily, I know you have a tank top, some jeans...something! I have never seen you in a sweat suit ever since I've met you. You always wear something classy or something.\" \n\nLily silently shrugged and continued to eat. How could she tell Vanessa that she gave away all those clothes to charity?. How could she tell her that she was molested and harassed by one of Vanessa's friends? How could she tell her that it was Brandon Atreides? \n\nIt never was lost on Lily that Brandon treated people differently. Especially Vanessa and her. She would notice how he was a completely different person with Vanessa. He would be smiling and laughing with her and doing all kinds of nice things for her. He was a completely different person. But with Lily, he was also a completely different person. He made sure to humiliate her in front of an audience. He would always say the ugliest things and would always put his hands on her. This was who he really was. But that side of him was so completely different from the Brandon Vanessa knew, that Lily was afraid that her only friend wouldn't believe her and that she would not talk to her anymore. \n\nThat's what held her back from reporting what Brandon did to her yesterday. She tried that once, but the school didn't do anything. They sat on their asses and did nothing. The word Nothing meant exactly what it meant. He didn't get expelled, suspended, or even get taken off any football games. He went to school as if he had done nothing wrong. Somehow it had gotten back to him about what she had done, and he threatened her about what would happen to her specifically if she tried the shit again. Even if they had believed her, the students would just stand up for Brandon, change the story and say that Lily deserved it. Lily had no other option but to give her clothes up for charity because if she didn't want Brandon to touch her again that was the sacrifice she had to make. \n\n\"I just felt like being comfortable today,\" Lily said. Vanessa continued to stare at her as the continued to eat, but the topic was totally dropped. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nAll those memories flooded back to the forefront of Lily's mind as she stared at Brandon in his Camaro. All those years. All those years and she never stood up to him. All she did was give up. Because the fact was Brandon had everyone on his side, including the one person who was supposed to be on hers. \n\nLily felt jealousy and betrayal creeping up her brain. Why was Vanessa treated so much better than her? Because she was pretty, skinny, and tall? That was it?! Why was it so hard for people to treat anyone that didn't look like Vanessa like a human being. Yes, Lily was short. Yes, she was on the thick side. And yes she was ugly, but why did it have to keep people from treating her like everyone else. \n\nBut as soon as those thoughts came, she felt them leave just as they came. That wasn't fair. It wasn't fair to be mad at Vanessa. Ever since Lily met her, all Vanessa did was try and be helpful and supportive. If she was on anybody's side it was Lily's. That was why Vanessa made her go to all those stores and to this party. She wanted to see Lily grow. It wasn't her fault that she was favored by Brandon and neither was it her fault for bringing him to the party. It was Lily's fault for not telling her who Brandon truly was in the first place \n\nLily said a hollow hi as she leaned back in the seat. Vanessa looked at her with her eyebrow quirked as she continued to speak. \n\n\"We're going to a frat house that he's pledging to. He asked me to go and said I could bring a friend, so...Ta-da!\" Vanessa said with lackluster as the awkwardness began to fill the car and its occupants. \n\nWithout another word, Brandon turned back around in his seat and started the car. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nNo one talked on the drive to the frat house. Fortunately, it was a short drive, so they didn't have to feel awkward for long. As Lily stepped out of the car, the first thing that greeted her was the loud thumping music. With the memories forgotten, she felt the excitement bubble up inside her once again. Fuck Brandon, she was going to have a good time anyway. \n\n\"C'mon, Lily,\" Vanessa yelled in her ear and grabbed her hand. Vanessa dragged Lily with her as Vanessa raced across the lawn. Lily was just as excited but her feet were too slow to keep up with Vanessa. Brandon was already at the door by the time they got there. When he opened the door, the music hit Lily full force. She looked inside in awe as she saw the floor lit up with neon colored lights and people were on the floor dancing closely with each other having a good time. \n\n\"Hey Brandon, what's up?!\" she heard as she focused back on the entrance of the house. A fellow frat guy in a letterman jacket greeted Brandon as they slapped each other on the back. As the guy stepped away, he began eying both Vanessa and her up and down. \"Well I can see you brought some sexy ladies here with you,\" he said as he stared flirtatiously at Lily. Lily stood there dumbstruck as her face heated up. The guy even swiped his tongue over his bottom lip as he continued to look at her. \n\n'This has got to be some kind of parallel universe', Lily thought. Guys never hit on her. Especially not sexy ones. This guy was 6\"1 with a nice lean muscular build. His glowing tan skin and raven black fohawk accentuated his Latino features. His eyes were a deep coffee brown and his lips were pouty and full. As much as Lily wanted to stay concentrated on his face, she kept looking down at his t-shirt clad chest. She guessed she must have been staring too long because he made a show of flexing his chest and giving her a smirk. Lily quickly looked away. She felt her cheeks erupt in flames in embarrassment. \n\nThe guy stuck his hand out towards her and introduced himself, \"My name's Louis.\" \n\nLily smiled sheepishly at him and shook his hand, \"My name is Lily.\" She heard Vanessa giggling beside her and nudged Vanessa in the ribs. \n\n\"I brought her here to have a good time for once in her life,\" Vanessa yelled over the music. \n\nLouis smiled with his eyes still on Lily and said \"Well we have more than enough beer here for everyone. The music is loud and booming. There's at least one guy around here to dance with.\" He gave Lily another smirk and wiggled his eyebrows at her devishly. Lily laughed at his openness and smiled back at him. \n\nVanessa began to drag Lily towards the dance floor. \"C'mon, girl. My favorite song is about to play.\" Vanessa began swaying to the rhythm of \"I've Got A Feeling\" by the Black Eyed Peas. After awhile, she started singing the words to the song and moving her hips as she danced. Lily stood there not knowing what to do. \n\n\"Lily what are you doin?\" Vanessa said smiling at her. \n\n\"I don't know,\" Lily said nervously. \"I don't know how to dance.\" \n\n\"Try!\" As Lily continued to still stand there, Vanessa began chanting, \"Dance, Lily, Dance!\" After awhile people started looking towards their direction which made Lily more nervous. \n\n\"Lily if you don't dance, I'm gonna make you!\" Vanessa yelled teasingly. Lily's eyes got wide at what Vanessa was inferring. Out of all the years they've been friends, Lily knew Vanessa played dirty if she wanted her to do something. \n\nAs the next song \"Yeah 3x\" by Chris Brown began to come on, Vanessa spun Lily around with her back to hers and grabbed her arms and brought them over her head and made her begin to sway her hips to the song.\"Vanessa!\" Lily cried out but couldn't help laughing as she moved around with Vanessa's help. As Chris Brown began to sing, Lily began to get in tune with the song as she began to bob her head lightly and moved her arms with Vanessa. Without realizing she began to move her hips to the beat and move her feet on her own accord. \n\nAfter awhile, Vanessa let her go and danced with her. They laughed and jumped to the chorus of the song. At one point, Vanessa grabbed Lily's hands and swung her around in circles as they laughed at the foolishness of the feeling of it. Lily laughed loudly when she felt lightheaded when Vanessa let go. The next song blasted a booming sound across the speakers. The bass was so strong, Lily though the speakers might explode. \n\nWith adrenaline pumping, Lily crouched a little popping her ass to the beat. Vanessa followed suit and moved her hand alternately in front of her. When the music began to slow down slightly, Lily got up slowly as she still moved her ass from side to side. As she danced, she couldn't help but feel someone watching her. She turned her head to the left and saw Brandon staring right at her with a scowl. Lily smiled and began concentrating back on dancing as she popped her ass furiously while gradually crouching her body towards the floor. Her heels were killing her, but she didn't care. She was having fun. \n\nAs the song came to an end, Vanessa yelled \"Do you want to get something to drink?\" \n\n\"Sure!\" Lily answered back. Vanessa pulled her off the dance floor as they went in search for the drinks. Lily noticed that her dress bunched up around the bottom of her ass. She pulled down on her dress and continued to follow Vanessa. When they finally found the coolers, they found Brandon talking to Louis with beers in their hands. Vanessa picked up a fruit cooler while Lily got a Coca-Cola. \n\n\"Looks like you girls were having fun.\" Louis said grinning at them. \n\nLily smiled at him but she could barely catch her breath as she pressed the cold can to her sweating forehead, then over her neck. When she was able to catch her breath she looked back at Louis, catching him staring at the droplet of water from the can dripping down her neck to her chest. \"Yeah, it was more fun than I thought it would be,\" Lily said smiling up at him. \n\n\"I bet it was. What would you usually be doing about now?\" Louis asked moving towards her while Vanessa went over to hang out with Brandon. \n\nLily shrugged. \"I don't know. Fighting with my asshole roommate.\" \n\nLouis chuckled. \"How is she an asshole?\" \n\n\"He and he always got something smart ass to say, he's always drunk and he brings his bitchy two-faced girlfriend over.\" \n\nLouis gave her a charming smile as he looked at her with a glint of humor. \"Is she really two-faced or are you jealous?\" \n\n\"No, I mean it. She cussed me out because she thought I was messing around with him. The moment him and his mom came in, she acted pleasant as a peach pie to me.\" \n\n\"Well if you look like this all the time, then she has reason to be suspicious.\" He took a swig of his beer slowly. \"But I'm still not convinced you're not jealous of her. Maybe you could convince me by dancing with me.\" He took her hand and wrapped her arm around his neck. \n\n\"Sure,\" she said smiling back at him. He smiled even wider as he led her back onto the dance floor. \n\n'Officially the greatest night of my life!' Lily thought as she was led by this sexy Latino man. Lily's mind was just swimming with happiness. \n\nA slow Adele song came over the speakers as he wrapped her arms around his neck. His hands wrapped around her waist as they swayed back and forth. They glided across the floor slowly and he rocked her slowly to the music. He slowly ground his pelvis into as they continued to dance and he bit his lip seductively. He twirled her and placed her back flush up against his front. His hand pressed against the hole in her dress for her navel. Louis snuggled against her neck as they continued to dance. Lily mentally smiled as she felt the warmth of his breath ghosting against her face. \n\nOnce the song finished, he twirled her around and yelled above the music, \"Do you have a number?\" \n\n\"Yeah! Do you have a pen?\" \n\nHe led her off the dance floor and went over to a set of table to pick up a pen. He gave it to her and took off his letterman jacket, so she could put her number on his arm. Once she finished, he smiled and promised to call her tomorrow. He went off somewhere else in the house. 'Probably to hang out with the other frat boys,' Lily concluded. \n\nLily fought through the crowd of people to go get another soda. With her soda, she sat on a couch nearby. Lily sunk further onto the cool couch and took a few breaths. 'Oh my God, this couch feels so good,' she thought as she lay sprawled out on the couch. She felt the cushion next to her dip. Expecting it to be Louis, she straightened up and turned to look at him, but she froze in place. \n\nSitting beside her was Brandon Atreides taking a swig of his beer. His body was hunched over with his feet spread apart. He said nothing to her and looked straight ahead at nothing in particular. After awhile, out of the corner of his eye his gaze fell on her face. His eye roamed down her body slowly, making an icy trail in its wake. She folded her hands over her chest and crossed her legs, hoping to disrupt his view. She turned her body as she looked away from him, \n\n'Focus on something else, Lily,' she thought to herself. 'Focus on something else. He'll leave you alone if you do.' She nearly smiled at her own thoughts. That didn't work in high school. How in the world that work now? He wasn't some kind of monster she could just ignore and he would go away. He was the kind of monster that wouldn't let her walk away. He was the kind of monster that didn't care if he was seen or not. He was the kind that made her nightmares come true no matter what she did. \n\nLily sat there unsure of what to do. If she sat there, he would take his time to toy with her mind until he was ready to do what he wanted. If she stood up, he would make it worse for her. As the seconds ticked by, the decision and the waiting began to frustrate her. Lily had enough. She had had enough of Brandon, period. Fuck it if he got angry. \n\nShe grabbed her soda and went to get up from her seat. As she expected, Brandon grabbed her wrist with an iron clad hold. What she didn't expect was the force he used to pull her back down on the couch with. It caused her to spill the soda down the front of her dress. Still in the same position, he said, \"Who told your ass to get up?\" \n\nLily pulled her hand free and attempted to get up again, but Brandon was just as quick and grabbed at her wrists with both his hands. She got free again and attempted to push him away from her but he didn't even stumble. As he continued to restrain her, she fought just as hard to get out of his restraints. She finally made a mistake and turned around to leave. He grabbed her wrist and bent it to her back over her shoulder. Lily yelled out in pain, but the music was too loud for anyone to notice. He took her other arm and bent it behind her back as well. He pulled her onto his lap as he gasped for air, seething with anger. ",
        "\"I'm tired of your shit, Brandon!\" she yelled at him. Brandon laughed deep in his throat as he came closer to her ear. \n\n\"Oh you think you're some hot shit that you can disrespect me now, bitch?\" Brandon said. He continued to laugh but it began to die out. \"You raise your hand to me again, I will beat the hell out of you. You hear me?\" \n\nSilence passed between them. \n\n\"Ahhh, so you think because you wearin' this short ass dress that you real woman now, huh? That you too good to talk to a dude like me? Shaking your ass at me like I can't have you? Trying to get with Puerto Rico over there, huh? Like he wants you? Please. Bitch, underneath all those clothes and makeup you still ugly as hell.\" He leaned back in his seat. She could feel her body became frozen against him. \n\n\"You ain't too good for anyone. And I'm here to remind you. You finally feel good about getting with a guy. A guy finally noticed you, huh? Well any guy that high and loaded would think a skinny Precious like you would look like a Nicki Minaj. Especially a guy desperate in taking a girl home. You saw him drinking. Any man would have to get drunk before sleeping with you because you're dark... stupid... and ugly.\" He said this with a tone of finality as he laid back. \n\nHer body began to shake as the tears began to roll down her face. Lily tried to still her body, but the harder she tried, the more the tears fell down. She wanted to wipe away her tears before he could see her cry, but Brandon still restrained her. After awhile he let her go. Lily hurriedly moved her arms away from him and dabbed at her eyes to not mess up her makeup. \n\n\"Go ahead. Cry. Ruin all that Cinderella magic so you can turn right back into an ordinary ugly bitch.\" \n\n\"Fuck you, Brandon,\" she said under her breath. \n\n\"What did you-\" Brandon started, but Lily was tired of him talking. \n\n\"SHUT THE FUCK UP, BRANDON ATREIDES!\" She yelled loud enough over the music that several people looked in their direction. \"I am tired of your shit! I'm too dark! I'm too stupid! I'm too ugly! I know that! I'm all of that, but when you do everything you can to remind me of that every day and you DARE to put your hands on me, then yeah...\" She glared down at him. \"I am too good for you.\" \n\nBrandon sat there dumbstruck, shocked at what she had just said. After awhile, he came to his senses and his body began to tense and his breathing became erratic as he literally looked as if he was seething his anger. Lily didn't care no more. She turned her back at him and picked up her soda. She turned back towards him and threw it in his face before throwing the empty can at his feet. As her heels clicked away, she said \"Cool off, hot head.\" \n\nAs she walked farther away, she heard Brandon bellowing threats at her. Lily rolled her eyes. One thing she did note was that Brandon was going to get her back for this offense. \n\nLily went to the dance floor to go find Vanessa. When she found Vanessa, she was dancing with some guy. She went over and yelled, \"I'm going to go home! I'll get a taxi!\" \n\n\"What's wrong?\" Vanessa asked, openly worried. \n\n\"Nothing! I just feel like going home! I'll see you later!\" Vanessa gave Lily a quick hug before going back to dancing. Lily went outside and called a cab. When it finally came, she got in and gave him the address of her house. As she rode, Lily sank into the seat and closed her eyes. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n'Thank you dear Jesus for my bed,' she said as she slid out of her heels. Lily let out an audible sigh as she laid face first on her bed. It may not have been the softest bed, but it was soft enough to want to come back to everyday. \n\nAs she was about to close her eyes, a faint blue light came through her peripheral vision, 'AGHH! I'm too tired!\" But she no good and well the Spirit liked to pull sadistic pranks if she ignored him, and she had even little energy to deal with that. \n\nShe sat up in her bed and looked at the wall. \n\nSo how was your night? \n\nShe heard the knife plop down her bed beside her, so she picked it up and went towards the wall. \n\nIt was a little good. A little bad. Still had a good time. Why aren't you talking tonight? \n\nWhen The Spirit took the knife from her, she felt something like finger but the texture was ...was like tingly feathers. She had no other way to describe it. The feel of him caused a jolt to go down her spine...and it felt good. She heard a tap on the wall, drawing her attention back to it. \n\nNicholas is more drunk than usual. When he got in he had to crawl up the stairs with the help of his mum. When I tried to take control, the room swirled and moved so fast that I thought I would throw up, so I let him be. If I used him, I wouldn't be intelligible and I may be affected to do something rash...What was bad about tonight? \n\nLily sighed when she picked up the knife to respond. \n\nJust an asshole. I handled it. \n\nHow was he an asshole, he wrote. \n\nHe's an old bully. He hasn't gotten through his head yet that this isn't high school. \n\nA few seconds ticked by before The Spirit scribbled out the next message. \n\nDid he beat you? \n\nNo, she wrote back. \n\nThen why are their bruises all down your arms? \n\nLily took that chance to look down at her wrists 'Were they that noticeable?' She looked down to see purple fingerprints around her wrists. It would be hard not to see them. As she looked up her arms, she saw several other smaller marks on her skin but just as purple. \n\nWe struggled. \n\nThe Spirit snatched the knife out of her hand and carved the message slow and hard into the wall as if anger was beginning to bubble over. \n\nStruggling doing what? \n\nI was trying to get away from him. He just wanted to talk shit to me. \n\nAnd that involves putting his hands on you? \n\nLily shifted on her feet and bit her lip. She didn't have to hear the scratching on the wall to tell that he was seething with fury. She didn't know how to explain it to him without causing him anymore anger. \n\nI handled it. She simply wrote. \n\nIf \"handling it\" doesn't involve his hands being cut off and singed close so he can never touch you again, I don't believe what you're saying for one minute. \n\nI told him off and threw soda in his face. \n\nThere was a complete moment of silence. \n\nHold on. \n\nAnother moment of silence, \n\nYour telling me that this guy has put his hands on you for God knows how long, has left bruises on your skin for years, and has verbally abused you. But all you did for all those years of mistreatment was cuss him out and pour your drink over his head? And you call this handling it? \n\nI threw it in his face. \n\nI DON'T CARE! The bastard is still breathing! \n\nLily crossed her arms and stared daggers into the wall. \n\nI didn't ask for your commentary. I handled it the best way that I could. You don't know what this guy has done to me and you don't know my life. All I thought about was getting away. I didn't want to stay around to put his hands on me more than he usually does. I wasn't going to stay around and be abused more than I had to. You have no idea what it's like to be me. \n\nLily felt the tears pouring down her face as she dropped the knife to the ground. She wiped the tears away, smearing the makeup on her face. She stood up to Brandon. After four years of her life, she had stood up to him. Now the Spirit was telling her that it wasn't enough. Screw him, then. She was proud of herself. \n\nOnce her tears were cleared, she looked up at the dying light on the wall just when it was about to go out. \n\nI won't know what it's like to be you unless you tell me. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\n\"Lily,\" a voice said above her. \n\nLily tried opening her eyes but they were too heavy. \n\n\"Lily, get up,\" the voice said again. \n\nLily rolled over on her side and continued to sleep. \n\n\"Ok, you made me do this.\" Lily felt her body become airborne and the next thing she knew, she felt herself drowning in freezing water. Lily eyes shot open and began gasping for air. She immediately began trying to swim for dear life, but soon noticed that she was swatting against the air. She finally got her eyes to focus clearly to see that she was staring at the bathroom ceiling. \n\n'What the-' her thoughts began. \n\nAnd when she laid still, she noticed that her back was lying on a slippery solid ground. She sat up and noticed that she was in the bathtub and when she turned her head, she found the person who put her in it. Grinning like the Cheshire cat, Nicholas peered at her with his elbows on the side of the tub. \n\n\"You asshole! You could have drowned me!\" Lily screamed at him. \n\n\"Aren't you over exaggerating just a little bit,\" Nicholas said looking at her bored. \"The water only goes up to your ankles.\" \n\nLily pushed her lip out at him. \"Why in the world did you put me in a tub full of water?\" \n\n\"You were sleeping on the hardwood floor with your makeup smeared over your face. You hadn't even removed your clothes from last night. I thought you were drunk.\" \n\n\"Aren't you supposed to be busy recovering from a hangover? In fact, I think you need this cold bath more than I do.\" With a devilish smile, Lily grabbed his forearm and pulled him in the tub with her, landing him beside her. \n\n\"Dammit, Lily! I have to go to work in the next hour.\" He tried gripping the edge of the tub but ended up on top of Lily when he slipped. \n\n\"Get off me, Nicholas!\" Lily yelled flailing at him. \n\n\"Not like I wanna be, cowgirl!\" Nicholas growled back at her. \n\n\"You're crushing me!\" \n\n\"Well you're the one who pulled me in this stupid bath tub!\" \n\n\"You're the one who put me in this tub in the first place! Now I'm all wet.\" \n\n\"How's that different from your usual condition?\" he smirked at her devishly. \n\n\"Shut up!\" With enough wriggling, she flipped herself on top of him and climbed out the bathtub. \"Now get out so I can take a shower.\" \n\n\"Why not just shower together?\" he said giving her a flirtatious wink. \"Save some water together.\" \n\nLily narrowed her eyes at him. No red eyes to be seen. Just Nicholas being his usual. She went towards Nicholas and took a hold of his hair and lifted him and made him stand up to the height of Lily's short stature. As she guided him out the door she said, \"Knowing you, you already had a shower. All you need to do is go change your clothes. So get out and change your clothes.\" Once she put him outside the door, she released his hair and closed the door. \n\nWhen she got out from taking her shower, she looked back at herself. The woman she saw last night was gone. She saw the ordinary girl looking back at her. She was just the ordinary dark skinned girl. Like she had always been. She sighed as she began to twist her hair to relieve her hair shrinkage. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nLily walked down the stairs in a pair of shorts, tank top, and sneakers ready to enjoy her Saturday off. There was no work. No Nicholas. No Spirit. Just the perfect day to laze around and do whatever she wanted to do. \n\nLily said good morning to Mrs. Yates as she retrieved her Cinnamon Toast Crunch cereal. She got a bowl and joined Mrs. Yates at the table. \n\n\"So how's it going with you and my son?\" Mrs. Yates said before sipping her coffee. \n\n\"He's an asshole as usual,\" she said taking a spoonful of cereal. Mrs. Yates chuckled deep in her throat at Lily's honesty. Lily smiled as well. \"But I'm getting used to it. I think he knows it though, so he tries to one up himself. Has he always been that way?\" \n\n\"He's been like that since the day he was able to talk. I'd be called by the principal office every week when he was in elementary school because he would either insult the teacher, make a girl cry, or got into a fight. When the principal asked him why he did it, he would shrug and say 'They wanted my opinion, and I was honest. If they don't like the truth, don't ask me for it'. To this day, you can always expect honesty out of him.\" Mrs. Yates laughed at the memory and flipped through the newspaper on the table. \n\n\"Amazing,\" Lily heard Mrs. Yates mumbled. \n\n\"What is?\" Lily asked scooping another spoonful of cereal into her mouth. \n\n\"Oh, it's just amazing the world we live in. People want honesty unless it hurts. That's how my husband was,\" Mts. Yates said thickly in her British accent. \n\n\"Whatever did happen to Nicholas's dad?\" \n\n\"I divorced him. Don't know where he is and I don't care.\" \n\n\"How old was Nicholas when you divorced him?\" \n\n\"I can't remember at the moment, dear. Nicholas wouldn't have liked him anyway.\" Mrs. Yates took a sip of her tea before she leaned back in her seat with a faraway look of remembrance in her gray eyes. \"He was a man full of secrets. Always hiding something. Always lying while he smiled in your face. Nicholas wouldn't have liked his father much. He can't stand liars and he can't stand secrets. I guess that's why he treats me the way he does.\" She sighed. \"He can't hide behind a mask and pretend he's the perfect son. He's flawed, but I love him. His father would never love a son so flawed.\" \n\nLily saw Mrs. Yates looking pass the present and back to whatever had happened into her past. Once she was done, Mrs. Yates looked back over at Lily and gave her a faint smile. \"Which makes me question why he hangs around trash like Anna Belle.\" Her face scrunched up as if her name alone brought a bad taste to her mouth. \"You know when he comes home drunk, he's been out there with her, right?\" \n\n\"Oh?\" \n\n\"Of course, he's doesn't hang out with her alone. He hangs out with his friends from the tattoo parlor. Somehow she just manages to get to him.\" \n\n\"Well in his right mind, he hates liars. When he's drunk, I guess he can't tell the difference. I guess she knew that in the first place and took advantage of him when he was drunk,\" Lily said, presenting that possibility. \n\n\"Would explain a lot. Just wished he had a girl more like you,\" Mrs. Yates said giving her a teasing smile. \n\nLily rolled her eyes and smiled at him. \"Please. I'm not two-faced like Anna Belle, but I have my share of secrets as well.\" \n\n\"As everyone does, but there are three kinds of people who keep secrets. There are good people who keep secrets to protect others. There are horrible people who keep secrets because they want to continue their selfish deeds. And there are scarred people who keep their secrets because they are hurt and they believe that if anyone else knew they would be viewed as ugly.\" Mrs. Yates looked directly into Lily's eyes, holding her in place with her knowing gray eyes. \n\nLily broke eye contact with her and continued to eat her breakfast. \"By the way, around noon could you take Nicholas's lunch to him. Boy keeps forgetting.\" \n\nLily looked over at the clock and saw it was eight a.m. \"Sure.\" \n\n\"Well, I'll see you later. I'm going to my gardening class.\" Mrs. Yates pushed back her seat and got. Lily must have been looking at her strangely because she turned around and said, \"What? I don't just sit around here while you and Nick go to work. I have a life too.\" She gave Lily a wink and went out the front door. \n\n~~~~*~~~~*~~~~*~~~~*~~~~*~~~~*~~~~ \n\nThe bell jingled as Lily entered inside the tattoo parlor. All eyes were on her as she came in. The male tattoo artists and patrons stared at her ass as she went up to the receptionist. Usually Lily wouldn't leave the house in shorts but right now, but she was too lazy to put on jeans and it was too hot for that anyway. \n\n\"Hey, I'm here to give Nicholas his lunch,\" Lily told the bald man at the desk. She really should learn his name. \n\n\"He's in the break room waiting for you,\" he answered. \n\n\"Thanks,\" Lily said, smiling at him. \n\n\"No problem, sweetheart.\" He reciprocated with a smile of his own. \n\nAs she walked to the back to the break room, she spotted Anna Belle staring daggers into her. Lily had to stifle the urge to flip her off. After standing up to Brandon, she didn't feel threatened by anyone at this point. If Anna Belle wanted to act like a jealous little girl, let her. Lily wasn't going to stoop to her level \n\nWhen she went into the break room, Nicholas didn't even notice her. He was too busy with his head in a book. Lily took a look at the title. It was 1984 by George Orwell. \"That's a good book,\" she commented. \n\nNicholas nearly jumped out of his seat. He looked up at her in surprise. \"Jesus, you scared the hell out of me,\" he said with a hand to his heart as he tried to catch his breath. \n\nLily laughed at him as she watched him recovering from his mini heart attack. He wore a Rolling Stone tank top with the iconic red mouth with the tongue out. The shirt showed off the colorful tattoos that went down the entire length of his arms. He had his usual nose stud and red snakebites in his mouth. The newest addition was the chained ear cuff that connected to one of his snake bites. 'How the hell can he be so attractive with so many piercings?' she thought to herself. \n\n\"Stop laughing at me, cowgirl,\" Nicholas said, beginning to sit straight up in his seat. \n\n\"Well, you would've known I was here, if you took your nose out of the book,\" Lily said, sticking her tongue out at him. She sat the brown paper bag on the table. Nicholas snatched the bag away as soon as it touched the table. \n\n\"It was at a good part.\" Nicholas took the overstuffed sandwich out of the Ziploc bag. \n\nLily picked up the book and scanned over a few sentences in the book. \"Nicholas...you were at one of the sex scenes.\" \n\nNicholas turned a blush red before answering. \"I'm not reading the book for the sex scenes, cowgirl, so you can stop looking at me with that dirty mind of yours.\" He took a large bite out of his sandwich and looked back up at her. \n\nLily gave him a look that told him that she didn't believe it for a minute. \"Then tell me what is so interesting about this book that is not a sex scene.\" \n\nNicholas licked mayonnaise off his fingers before he answered. \"That's easy. What's interesting is how they fear a man that does not exist and never did exist. The book describes this government as if it is a religion. The people directly in the Party act like mini gods that ensure everyone acts right or else they are tortured and punished. This Big Brother they talk about is no more than a false God they use and hide behind, so they can continue to deceive people that they are good.\" Nicholas made a disgusted snort in his throat. \"Makes me sick. Thinking about living in a world where my rights and emotions, everything that makes me human, are considered an abomination when they themselves are an abomination from Satan himself.\" \n\n\"Wow...I never thought of it that way. I just thought of it as a warning about what happens if we let the central government become too strong. Then they would be able to decide what is illegal right down to how I feel.\" \n\n\"Isn't that what government is basically. When people don't believe in an actual God, they have physical entities take his place. But any organization made up of people has a possibility of being corrupted at any time. I mean our government doesn't even treat everyone in this country fairly, but yet we still expect it to treat us fairly. Like in the book, all the government wants is praise and loyalty to the party. That's why they don't want you to feel anything but loyalty and praise- even when the main character is fucking his wife. So in a way, isn't government like a god or a religion in some way?\" ",
        "\"Do you...believe in God?\" \n\nNicholas looked at her directly in her eyes. His dray eyes darkened with sincerity. \"I've seen him. I've seen him through the memories of the Spirit. Well I see some God-like figure.\" Nicholas smirked to himself. \"There is a life after death. If I'm not a living example then I don't know what is.\" He laughed a little before finishing his sandwich. \n\nLily's phone suddenly went off. She took her phone out of her shorts' pocket and answered it. \n\n\"Hello?\" \n\n\"Hey, beautiful. This is Louis,\" she heard over the phone. Lily visibly became more excited as a big smile spread over her face and she began to bounce slightly in her seat. Nicholas looked at her like she was crazy as he opened his big bag of Doritos. \n\n\"Hey what's up?\" \n\n\"Nothing much. Just sitting here on the couch thinking about you. What about you?\" \n\n\"Sitting here with my friend as he stuffs his face full of Doritos.\" \n\n\"I haven't eaten since breakfast and I have a high metabolism, so I'm hungry as hell. Fuck off,\" Nicholas said while stuffing his face with more chips. \n\n\"Was that him?\" Louis asked, poorly hiding his chuckles. \n\n\"Yeah, maybe if he laid off the weed then he wouldn't be so hungry,\" Lily said looking straight at Nicholas. Nicholas simply flipped her off as he crunched loudly. \n\n\"Anyway, I was wondering would you like to go out with me on Monday?\" \n\nLily sat there for a minute. 'Did I just get asked out on a date?' she thought. \n\n\"Hello?\" Louis said. \n\n\"I'm sorry, I couldn't hear you. What did you say?\" She pressed the phone more firmly to her ear. \n\n\"I asked would you like to go on a date with me this Monday?\" \n\n\"Sure,\" she said a little too excited. \n\n\"Awesome. I'll pick you up at eight. Is that alright?\" \n\n\"Yeah!\" \n\n\"Great. I guess I'll see you then. Bye.\" \n\n\"Bye.\" She hung up the phone and sat there with the biggest goofiest grin on her face. Something waved in her face which caused her to jump. \n\n\"Earth to cowgirl,\" Nicholas said waving his hand in her face while holding his Doritos in the other hand. \"What's with the orgasmic smile you have on your face?\" \n\n\"I gotta daaa-aaattte. I gotta daaaaa-aaaattteee! Woo hoo! Woo hoo!\" she said in a sing song voice waving her hands in the air. She began to happily bounce in her seat in excitement. Expecting to hear some wise crack from Nicholas, she looked up to see the most dead serious eyes she'd ever seen. His lips were thinned in seriousness. \n\n\"What's wrong, Nicholas? You're bumming me out.\" \n\n\"You can't go on that date.\" \n\nLily looked at him like he had lost his mind. \"Of course, I'm going on this date. This is my first date.\" \n\n\"Lily, I would love to tease you about going on your first date, but I'm being serious as hell. The Spirit is not going to like this.\" \n\n\"Oh hell no. I'm telling you right now the Spirit needs to back off. I have my own life outside of you and him.\" \n\n\"Lily, you're different from other people. If it was any other day than today or any other person, then he wouldn't care about your date.\" \n\n\"What's so special about today? What's so special about me?\" Lily asked looking at him confused. \n\n\"Well you told him what happened to you last night. He thinks you're too frail to protect yourself from people abusing you. I can kinda see what he means because Lily- look.\" He grabbed her wrist and extended her arm. The bruises were a lighter but they were still noticeable. \"This guy has been abusing you for years, but you still let him abuse you until he decides he's done. Who's to say that this guy won't try anything? Are you just going to let him do it and get away with it like this other guy has been doing?\" \n\n\"Shut up! You and the Spirit don't know a damn thing about me.\" \n\n\"We know enough to know that someone is being abused and harassed,\" Nicholas said with an edge to his voice. \n\nLily glared at him as she pulled her wrist from Nicholas's hand and turned to walk out. \n\nAs she walked away, Nicholas called out to her, \"Lily, he will be watching, and if he finds anything out of place about this guy, it will be your first and your last date with him.\""
    ],
    "authorname": "BlessingAndCurse",
    "tags": [
        "black girl",
        "white guy",
        "spirit",
        "party",
        "memories",
        "bullying"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-wallflower-ch-07"
}