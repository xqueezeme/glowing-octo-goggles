{
    "title": "The Morrisons Ch. 24",
    "pages": [
        "I want to thank Fat_Dad for editing this chapter of \"The Morrisons.\" Fat_Dad contributed the section of this chapter where (Mike) Dr. Marshall (Marsh) Mitchel and (Judy) Rebecca (Becca) Andrews pick up Dan, Kim, Beth, Ted and Marion for their two hour lunch via a helicopter ride. Fat_Dad knows more about the assets of Turner Company than I do. I believe you will find he gave us a wonderful abbreviated overview during the lunch break. \n\nWith express permission and assistance from Fat_Dad, we have incorporated some of the story characters from \"A New Life for Dr. Mitchel\" into \"The Morrisons.\" and vice versa. I have a complete character list on the last page of this chapter. \n\nWe've had unbelievable positive response to the integration of story characters and aligning our story lines, although each story remains a separate entity. We've interlinked some situations since we found out Marsh and Dan are neighbors. \n\nAgain, a profound thank you goes out to Fat_Dad for all the hard work he's invested in editing and assisting me. I know Fat_Dad is only a phone call away. \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\n**Author's Note: The Morrisons is a continuing story where each chapter builds on previous chapters. If this is your first encounter with The Morrisons, I'd like to suggest you read the previous chapters prior to reading this one. Please enjoy! \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\n**PLEASE NOTE: \n\n**Before you read this chapter, be advised that it contains very graphic depictions of raw sex and/or love-making between two or more consenting people. IF such depictions upset you or make you lose sleep, PLEASE don't read any further. You may not enjoy reading a particular portion of the story; that doesn't mean other readers will dislike that same portion. It's a different-strokes-for-different-folks kind of story. \n\nFor the sophisticated intellectuals who read incest/taboo stories on Literotica expecting to find professional authors with perfect everything, including but not limited to, punctuation, spelling, dialog, characters with only sophisticated actions, etc., please pass this chapter by, you won't find that here! We do our best to correct all typos and spelling errors but some may still slip past us. \n\nI appreciate hearing from readers, and I want to thank all those who took time to send me a public or private message. However, please don't leave a derogatory comment, if you willingly overlook THIS WARNING. \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\nFor the record: All characters engaging in sexual activities are of legal age!  \n\n~ ~ ~ ~ ~ ~ ~ ~ \n\n**************************** \n\nI woke up the next morning to a gentle motion of the bed with a cool breeze blowing across my body but I had a wonderfully warm sensation in my groin area. Something was very different and it took me a few seconds to realize I wasn't in my own bed and the gentle motion was being caused by Terri's movements. I blinked the sleep out of my eyes before I could look down my body where what I saw was Terri's hot mouth wrapped around my morning wood. Her head moved rhythmically up and down as she slowly devoured my cock. \n\nShe paused for a moment and looked up at me with her mouth still full of my cock. She used her teeth to bite down gently on my cock head before she lifted her head up saying, \"Good morning daddy, I thought we should start the day off right since you'll be leaving tonight and I won't see you for a few days.\" \n\nI looked at her big blue eyes and suddenly felt guilty about not taking her with me, to Hawaii. Without another word Terri opened her lips and devoured my cock once again. I whispered, \"Straddle my face; I want to lick your delicious pussy, especially your clit. I want to give you the best orgasm you've ever had.\" \n\n\"No daddy, I want you to make love to me. I want both of us to enjoy this early morning rendezvous. I want you to be on top of me and slide your beautiful cock slowly into my pussy. You don't have to worry; I'm so wet from thinking about making love to you, I'm ready. I love you daddy and I want to have your baby.\" \n\nI moved into position and Terri raised her legs up and wrapped them around my waist. I moved slowly forward and Terri moaned in pleasure. Her bright blue eyes looked up at me as she said, \"I love you dad. I can't explain to you how much, but just know I love you.\" \n\nI smiled and said, \"I love you too sweetheart.\" \n\nI made slow passionate love to Terri until both of us experienced mutual euphoric orgasms which lasted forever, or so it seemed. I pulled out of her tight pussy and moved to Terri's right side and collapsed on the bed. In the twilight of our sexual gratification both of us took some time to catch our breath and wait for the tingling to subside. \n\nTerri giggled and said, \"I have to get up soon and go down and turn off the alarm. Mike will be here to pick up Joanna. I wonder if I can get him to stay for some coffee.\" \n\nTerri started to scoot towards the edge of the bed and I rolled to the opposite edge and stood up. I followed Terri into her bathroom and while she was peeing and douching, I turned on the shower and then I peed. Terri joined me in the shower and we washed each other's body thoroughly. \n\nWhen we finished we dried each other and I paid special attention to that crack between her legs. I made sure I dried that completely. Terri stopped at her mirror and brushed her hair and then turned to me and said, \"Your turn. You don't have a brush in my bathroom so I'll brush your hair for you, now lean down here.\" \n\nTerri and I walked out of her room and we heard some noises so we walked towards my room to investigate. When we got to the doorway we stopped and watched the lovely view. We saw Ted between Kim's legs, holding them up in the air, pumping into her pussy. On the right side of the bed Marion and Beth were locked in a sixty nine position, both of them moaning with pleasure. \n\nKim was encouraging Ted to fuck her hard as she enjoyed endless shockwaves of pleasure. The slapping of Ted's groin against Kim's ass was loud and I was surprised it didn't wake up everyone in the house. Soon, Kim and Ted enjoyed euphoric orgasms before they collapsed on the bed. \n\nWhen the show was almost over I turned us around and we started down the hall. As we walked down the stairs I told Terri, \"Go ahead and start making the coffee and I'll shut off the alarm.\" \n\nWhen I walked into the kitchen that wonderful scent of brewing coffee filled my nostrils. I walked over and opened the vertical blinds and unlocked the sliding door. I slid the glass door sideways and that wonderful morning aroma mixed swiftly with the brewing coffee and I was in heaven. Terri poured two cups of coffee and we had just sat down at the breakfast counter when Joanna rounded the corner and came into the kitchen. We exchanged morning pleasantries and Terri asked, \"Would you like a cup of coffee before you go for your run?\" \n\n\"Actually, I'd rather have some orange juice. I'll get it, please stay seated.\" Joanna replied. \n\n\"Joanna, I want to throw something at you and see what you think. I'm in need of a security person starting this evening thru sometime on Monday; do you know where I can find one?\" \n\nJoanna turned and stared at me before she said, \"You have four security people living here in your home, what more are you looking for Dan?\" \n\n\"The right person I need, should be a female, have short brown hair with beautiful green eyes. She should also have \"B\" size titties with brown areola topped off by pencil eraser sized nipples. I think she should be in shape with ripped abs and muscular thighs, and her pussy ...\" \n\nJoanna interrupted me by saying, \"Alright Dan, I get the picture! What do you want me to do for you?\" \n\n\"As I said, I need a security person who is willing to travel at short notice and protect me and the people who accompany me. The person needs to be highly trained ...\" \n\nOnce again I was interrupted by Joanna, as she laughed, \"You're leaving for Hawaii tonight so is this person you're searching for, going to be on that plane with you?\" \n\n\"Unless she's going to walk to Hawaii, I'd think it would be much better if she was on the plane with me.\" I said smugly. \n\nThe gate phone rang and Terri picked it up asking, \"How may I help you?\" That was quickly followed by, \"Ok Mike, please pull through the gate and wait for it to close. Please come to the front door, Joanna is not quite ready to go.\" \n\nJoanna looked at Terri before saying, \"I'm ready to go, and I'm not wearing anything other than my running shoes.\" \n\n\"I'm not talking about not ready to go in what you're wearing, I think dad wants an answer before you rush off. Do you want to walk to the front door with me?\" Terri replied. \n\n\"Stay here, I'll let Mike in.\" Joanna giggled. \n\nA couple minutes later Mike walked into the kitchen and immediately Terri asked, \"Mike would you like some coffee, orange juice or...\" \n\n\"Water would be fine.\" Mike said. \n\nTerri got up and pulled a bottle of water out of the refrigerator for Mike and handed it to him. Terri leaned forward and pressed her nude body against Mike and hugged him. Before she stepped back she gave him a quick kiss on the cheek and he did the same to her. \n\nWhen she was seated again she said, \"Ok dad, as you were saying.\" \n\nI looked at Mike then at Joanna before I said, \"Well, do I have that female I'm searching for right here in the kitchen?\" \n\n\"Are you saying you want me to go to Hawaii with you? Who am I going to protect besides you?\" Joanna queried. \n\n\"I decided I can't travel with only one of my daughters, so I'm taking all three of them. I want you to go with me since Shelly and Mary went with me the last time. Will you go or do I have to start my search all over again?\" I stated in a clear concise voice. \n\nOut of the corner of my eye I saw Terri smiling from ear to ear but she was doing an excellent job containing her excitement. All of us waited for Joanna to say something but suddenly I saw she was holding her breath. I said, \"BREATHE Joanna, I'm serious.\" \n\nShe set her orange juice down on the counter and her arm flew out from her body and around my neck as she squealed in delight. Joanna hugged and kissed me all the while saying, \"Yes ... Yes ... YES! Thank you Dan! Of course I'll go and make sure the girls stay safe. OH GOD! It keeps happening ever since I came here the first time.\" \n\n\"What keeps happening?\" I asked. \n\n\"I keep being overwhelmed by events and offers and ...\" Joanna joyfully squealed. \n\n\"Don't worry sweetheart, you work for and deserve what you get. Nothing is being handed to you.\" I assured her. \n\nI hugged Joanna and pulled her naked body closer to me. We remained in our embrace for a couple of minutes until Mike asked me, \"Where are you going in Hawaii?\" \n\n\"We have reservations for beach cottages on the island of Oahu. I was recently promoted to Chairman of the Board/CEO of my company when our former Chairman of the Board was diagnosed with cancer. He worked all his life and has never done one spontaneous thing. This trip isn't really a spur-of-the-moment type trip but, it is for him. Unless it was business related, all other trips for him had to be planned months in advance. We've put this together in less than a week. His doctors have diagnosed him with stage four pancreatic cancer. The doctors at the cancer center only gave him six month to live, at best. He's been to Hawaii before but always stayed in a five star hotel or a resort that catered to the rich. I want to take him to a place he's never been before and let him do something fun with his family. We have reservations for luxury cottages on a private beach area.\" \n\n\"I didn't want to take him to a hotel because there would always be plenty of people around. I wanted something private where it would only be us, our group. I asked Beth to find a resort that had luxury cabins on a private beach. She found what I was looking for on the island of Oahu. We are going to make this into a fun trip and discuss business only while we're flying. Tom and I will discuss company business while Beth, Brenda and Kelly will discuss secretarial business, on the way there. Once we arrive, we can enjoy our three day stay and the business end will be over.\" I told Mike. \n\nMike listened to me while he sipped his water. When I finished he said, \"I'm sorry to hear that you old boss has cancer but I like your idea to take him on the trip. I'm sure it will give him and his family something to cherish forever. Let me know if you need anything.\" \n\nJoanna hooked her arm into Mike's arm saying, \"I'm ready for that run now. Oh boy ... today is starting off wonderfully. I find out I'm going to Hawaii and then I get to have this handsome male specimen in the woods all by myself.\" \n\n\"Well, not exactly,\" Mike said, \"I have to stop and get Wolf and Judy before we hit the trail.\" \n\n\"I can share\" Joanna said as a big broad smile spread across her face. \n\n\"I'll walk you to the door and lock it when you leave.\" I said. \n\nWhen I returned to the kitchen I was met by another squealing female but this one launched her body at me. I had to catch her to keep her from hurting herself. Terri clung to me and asked me, \"Are you really going to take Hanna and me to Hawaii with you?\" \n\n\"Yes sweetheart, I decided that whatever it costs me for the extra cottage is going to be well worth it. I enjoyed watching the two of you in Germany and I'm going to give you another chance at some freedom. You'll be able to do whatever you want. Even when we travel, I want both of you to be safe so all I ask is that you make sure Joanna is with you at all times. We are going to be on a private beach so if you want to tan or swim nude, you can.\" \n\n\"What about the others?\" Terri asked, \"What will they say if they see us nude?\"\" \n\n\"I'm going to meet with Tom while we're flying and I'm going to tell him about our nudist lifestyle. I'll throw out the invitation for him and his family to join us.\" I said with a smile. \n\nWhile Terri was still in my arms with her legs wrapped around me, Kim, Beth, Ted and Marion walked into the kitchen. Marion asked, \"Umm, are we disturbing anything?\" \n\nI turned slowly with Terri still in my arms before saying, \"Nope, we're just celebrating. I've decided to take Terri and Hanna to Hawaii with me. I think Terri is very happy.\" \n\n\"Oh yes, Terri is very, very happy. Terri is so happy she's wrapped her body around this wonderful man and she's not sure if she's gonna let him go.\" Terri responded. \n\nI looked into her blue eyes saying, \"Do you have any idea how many people are going to see your cute lil butt and my cock during the day, if you aren't going to release me?\" \n\n\"Oops, I guess I'd better let you get dressed. I might end up bumped and bruised when I try to fight off all the women who'll want a piece of you.\" Terri giggled. \n\nTerri slowly released her grip on me and slid down my body. When her feet hit the floor she leaned in and kissed me before she turned and asked, \"How many of you want some coffee?\" \n\nAll four of the newcomers wanted coffee so Terri said, \"Have a seat in the dining room and I'll bring it right in for you.\" \n\n\"I'll help you,\" volunteered Marion, \"Should I get out some snacks while you work on the coffee?\" \n\n\"Yes, thank you,\" Terri replied, \"There are some on the left side of the pantry. I think on the second shelf.\" \n\nWithin a few minutes everyone had steaming hot coffee in front of them and a plate of cinnamon coffee cakes were in the center of the table. I looked at Kim and said, \"We are going to Hawaii as a family, a whole family.\" \n\n\"Yes dear,\" Kim replied, \"I know.\" \n\n\"You know what?\" I inquired. \n\n\"I know we are going to Hawaii as a whole family.\" Kim said with a big smirk spread across her face. \n\n\"Oh yeah smarty pants, what exactly do you know?\" I countered. \n\nKim sipped her coffee to wash down her cinnamon coffee cake before she looked at me and said, \"Our family includes, you, me, Beth, Jenna, Terri and Hanna. And then, there are all of our friends who are nearly members of our family. But for this trip, I think you are going to limit it to the six of us. How am I doing Mr. Executive? Oh, by the way, I'm not wearing pants or anything else, as you can clearly see, smarty or otherwise.\" \n\n\"How do you know so much?\" I asked. \n\n\"Sweetheart, I've been married to you for how long now? I can read you like a book. Do you want me to tell you when you made up your mind to take Terri and Hanna with us?\" Kim challenged. \n\n\"Ok smart-ass I'm in, tell me when I made up my mind to take Terri and Hanna.\" I challenged Kim back. \n\n\"This is gettin' good; I can't wait to see who wins this one.\" Ted added quickly. \n\n\"Shut up Ted and learn something, will ya?\" Marion said as she slapped Ted's arm playfully. \n\n\"Dan, There are parts of me that are quite a bit smarter than my ass. They may not be any prettier, but I know you love them all. Now then, I'm going to guess, a thought passed through your brain, about taking them, yesterday. However it was this morning when you firmed up your plan and decided to take both girls with us. How am I doing ... Sweetheart?\" \n\nI stared at Kim because she had me pegged again. Although I hated to admit it, she was right again. Beth broke the silence by saying, \"WOW, Kim is he that predictable? When I was working on the reservations he never said anything about taking Terri and Hanna.\" \n\nKim looked directly into my eyes as she said, \"To quote Paul Harvey, \"And now, the rest, of the story.\"\" \n\n\"Beth, you have to understand, in the back of that twisted little brain of his, there's a computer that's always working at high capacity. Important information is processed immediately for rapid use. However, sometimes other information takes a little while to make it out of the computer into the active brain cells to be processed for use when he least expects it. There are plenty of filters in that brain so Dan has the ability to say the right things at the perfect time.\" \n\n\"Holy shit buddy,\" Ted exclaimed, \"She has you nailed down like a fact sheet.\" \n\nMy eyes never left Kim's while my smile spread across my face and I marveled at the intelligence of the woman to my right. Finally I said, \"You're right, my dear, as always, ... even about the parts.\" \n\nThe spell was broken when Shelly and Mary walked into the room and said in unison, \"Good morning.\" \n\nEveryone around the table returned their greeting and Terri started to get up to get coffee for them. Mary said, \"Stay where you are Terri, we'll make a carafe of coffee and we'll be right back. \n\nOur early morning conversation continued by me saying, \"Oh Ted, I've hired Joanna to go on this trip with us. You know, as security for Terri and Hanna.\" \n\nTed looked at me and in a monotone voice said, \"I knew that was coming. I was going to make that guess a couple of minutes ago, when Kim finished speaking, but that would have sounded too much like we were married. I didn't want Marion to think we're having an affair and piss her off.\" \n\nEveryone was still laughing when Hanna walked into the room. All of us took turns greeting her on her way through the dining room on her way to the kitchen. Just as Hanna came back into the dining room, Jenna, Kevin and Sue came into the dining room. Kevin was in the middle of the two girls and after greeting everyone Jenna told Sue and Kevin to find a seat and she would get some cups for them. \n\nWe moved our chairs around so everyone could fit at the table and when Kevin brought some chairs up to the table there was a wide space beside Kim. He set three chairs in place before he asked, \"Young lady, may I sit next to you?\" \n\nKim's head snapped around as she asked, \"Who were you talking to?\" \n\n\"I was talking to the gorgeous mother of my most beautiful girlfriend.\" Kevin replied. ",
        "Kim smiled as she said, \"Son, I think you and I are going to get along just fine if you keep talking like that.\" \n\n\"Yes ma'am,\" Kevin replied, \"But I'm very serious, you are beautiful, young looking, and you definitely all woman from the tips of those delicious looking breasts all the way to that tight looking slit between your thighs. You and Jenna could be twins.\" \n\n\"Sit right down here son, I like the way you talk.\" Kim replied. \n\nKevin sat down next to Kim and Sue left the seat in the middle open for Jenna. Kim turned her upper body towards Kevin and pulled him towards her and kissed him passionately. They were still kissing when Jenna came back with the cups. She set the cups down on the table then stood looking at Kevin and her mother kissing before she said, \"I guess mom approves of my choice for a boyfriend.\" \n\nJenna sat down and poured coffee in all three cups before she tapped Kevin's arm saying, \"Umm Kevin, your coffee is going to get cold if you don't stop that.\" \n\nKevin broke the kiss with Kim long enough to ask, \"I'm sorry, what did you say?\" \n\nJenna swatted Kevin's arm playfully saying, \"I said, your cock is getting hard. I thought you had to leave soon.\" \n\n\"I do have to leave soon.\" Kevin replied, \"I have to go home and change clothes before I go to work.\" \n\n\"I'm sure we have some shorts around here somewhere you can put on so you don't have to get dressed.\" Jenna added. \n\n\"I have a pair of shorts that will fit you Kevin. You can borrow them if you'd like.\" I said. \n\nKevin replied, \"Thank you sir, I'll do that. Then I don't have to put on the work clothes I had on yesterday.\" \n\n\"You can always ride home naked.\" Shelly said with a grin. \n\n\"Not with this big thing standing up like this.\" Kim said as she continued to stroke Kevin's cock. \"Jenna, you can't let this guy go home like this.\" \n\n\"Mom!\" Jenna stated in an exasperated voice. \"Sue and I worked on that thing all night long. We finally got it down and now you've got it standing back up again.\" \n\n\"Sorry Mrs. Morrison.\" Kevin said, \"IT has a mind of its own.\" \n\n\"Yes, I know sweetheart,\" Kim replied, \"Don't worry about her; I can handle this thing as good as she can, if not better.\" \n\nJenna quickly leaned over and devoured Kevin's cockhead while Kim continued to stroke it. Kevin enjoyed the attention he was getting from both mother and daughter. Before long, he leaned his head back and his breathing increased while his body started to vibrate. Within a few minutes he stated loudly, \"OH SHIT! Jenna, I'm going to cum soon!\" \n\nSeconds later, he groaned as he held the back of Jenna's head and gasped for breath while he shot his load into Jenna's mouth. All of us could hear the slurping noise Jenna made as she cleaned up all Kevin's cum without wasting a drop. She sat up quickly and pulled Kevin's face towards hers and kissed him passionately. He wasn't a bit surprised when Jenna pushed some of his cum into his mouth before she pulled back and watched as he swallowed it. \n\n\"Yep, he's a keeper alright.\" Kim added. \n\nJenna and Kevin licked their lips and then took a sip of their coffee. The family oriented conversation continued and everyone poked good natured fun at one another. Finally I said, \"It's time for us to go up and get dressed, Joe will be here soon.\" \n\nKim and Beth stood up first and I quickly followed. I took their cups and said, \"Go ahead, I'll put these in the sink and catch up with you.\" \n\nTed stood up followed me to the kitchen with his own cup. We walked up the stairs together and parted company when we passed his bedroom. We got dressed and went back downstairs where we found Joe sitting at the table and enjoying a cup of coffee with everyone. Ted came back down stairs in his uniform. I immediately noticed, for the first time, Ted was wearing his Kevlar vest under his shirt. I looked at Ted questioningly and he winked at me. \n\nWe talked while Joe finished his coffee and when he was done, he stood up and thanked everyone for the great conversation and the coffee. Mary stood up and said, \"When you come back here tonight, I'd love to have you with me in the hot tub.\" \n\nJoe blushed before he said, \"We'll see what happens. I'm still a little leery taking off my pants with so many beautiful ladies here.\" \n\n\"Don't worry about that Joe,\" Mary said, \"We'll take your hard-on as a compliment. It will prove we look good enough, to get a rise out of you.\" \n\n\"I never thought of it like that.\" Joe replied. \n\nMary said, \"Come on, I'll walk you to the door.\" \n\nKim, Beth and I picked up what we needed to take to the office, everyone staying behind formed a line and the three of us were hugged and kissed and each one wished us a good day. When we made it out to the car we saw Mary was standing with Joe, next to the open car door, and Mary held Joe's hand over her right tit, encouraging him to squeeze it. \n\nI stood beside the car and allowed both Kim and Beth to enter the car before I ducked my head and entered. As they had the previous morning, both of them were in the back seat with a space for me to sit between them. \n\n**************************** \n\nThe Simpson children were still sleeping while Tina and Jeff sipped their coffee on the deck in the back of their new home. Both of them were nude and while looking out over their back yard, Jeff said, \"Honey, you know, we are so lucky. We owe all of this to Dan Morrison. He's taken us under his wing and I didn't do anything more than a normal man would do.\" \n\nTina smiled remembering Joanna coming to pick her and the children up so they could go play at his house before she said, \"Yes, we are very lucky. He gave you a decent job and has treated us like family. Now, we have this beautiful house we're going to make our home. The children can play out there in the huge back yard and not worry. And we can make love out here on the deck.\" \n\n\"You know honey, the kids are still sleeping and...\" \n\nTina was out of her chair in a heartbeat with a huge smile on her face. She knelt down in front of Jeff and picked up his hardening cock. After a few licks, Jeff was hard as a rock so she stood up and pulled on Jeff's hand to get him out of his chair. She quickly walked to the railing and bent over with her elbows firmly planted on the railing she said, \"Jeff, please slide that beautiful cock into me.\" \n\nJeff was right there and he rubbed his cock up and down her slippery slit before he gently pushed forward until he was buried as deep as he could possibly go. He purposely twitched his cock a couple of times before he reached out and put his hands on her hips and slowly started fucking his wife on their own deck. He was in no hurry, but he also realized the kids could wake up at any time so he picked up his pace and told Tina, \"Sweetheart, as much as I'd love to stretch this love making session out, we'd better finish soon, in case the kids wake up.\" \n\nTina knew what he was talking about so she reached down between her legs and rubbed her clit while Jeff pumped his cock into the depths of her body. Soon their breathing patterns changed and both of them were on the verge of an orgasm. Jeff said, \"I'm almost there.\" \n\nTina, barely able to speak said, \"Oh ... God ... yes ... Jeff ... please ... cum ... Nowwwww!\" \n\nJeff pumped wildly into his lovely wife's tight pussy and deposited plenty of cum inside her. He continued to pump into her even when he'd finished because her pussy muscles squeezed his cock and drained it completely. Jeff leaned forward on Tina's back and said, \"I love you darling, more than I could ever express. You are my whole world.\" \n\nSlowly Tina stood up and Jeff's cock slipped out of her. She spun around in his arms and planted a loving and passionate kiss on his lips. She whispered, \"I love you Jeff. You're my whole world also.\" \n\nThey were still locked in their embrace when they heard their son John ask, \"Do you guys do that all the time?\" \n\nWithout breaking away from each other both of them turned their heads and looked towards the sliding glass doors and saw their son John standing in the doorway. A few seconds later Jeff said, \"When you get older you'll find the girl you love dearly; you'll want to hug her all the time too. Your mom and I love each other and we love all three of our children. That's why you get plenty of hugs.\" \n\n\"So why aren't you both hugging me too?\" John asked. \n\n\"Come here honey, we'll hug you.\" Tina said as she turned and held out her arms towards her son. \"I'll hug you any time you want a hug.\" \n\nJohn was tall enough, when he stepped up to his mom for her hug, his face lined up perfectly with her breasts. John didn't hesitate to nestle his face between her \"C\" cups while he hugged his mother's naked body to his own. He squeezed her several times playfully. Tina felt his cock press against her upper thigh but didn't say anything. \n\nJohn finished hugging his mother and when he turned around he saw his father hold out his arms to hug his son too. Jeff smiled at his son and said, \"I love you son. I'll try to always be here for you, whenever you need me.\" \n\nJohn looked out across the huge back yard and said, \"Moving us out of the city to this house is a great start dad. I love my new room. It was a little scary last night but I'm ok now.\" \n\n\"I can't wait for the girls to get up so we can go exploring.\" John added. \n\n\"Son, I don't want you to wander off without your mother. At least until we get used to this new house, it would be better if your mother goes with you and the girls.\" Jeff said. \n\n\"That's right honey,\" Tina quickly added, \"I want to go with you when you and your sisters wander around the first few times. We just moved here so I want to know what's out here. I want to make sure there are no hidden dangers like old buildings, foundations, or well casings that you could get hurt in.\" \n\n\"Alright mom,\" John said, \"I really like it because we can be naked outside like we did at the Morrison's house.\" \n\n\"Your mom and I are really going to enjoy being nude outside too.\" Jeff said. \n\n\"Yeah, I saw you two this morning enjoying being nude. Mom was making a lot of noise and that's what woke me up. I waited for it to get quiet before I came out.\" John said. \n\n\"I think we'll get a pool and set it up out here.\" Jeff immediately said to change the subject. \n\nTina was blushing a deep red when she said, \"John ... honey, your mom and dad love each other very much and we show our love to each other, in a different way.\" \n\n\"Is that like when you and dad were standing behind the sofa the other night?\" John asked. \n\nTina blushed a deeper red as she replied, \"Yes dear, daddy was showing me how much he loves me. But you can't do that until you are older.\" \n\n\"How old do I have to be mom?\" John asked. \n\n\"Honey, I don't want you to think I'm avoiding your question but the law says you have to be eighteen. However, some people don't wait that long. When you get older, your dad will have a man to man talk with you.\" Tina smiled at John. \n\n\"One good thing about our nudist lifestyle is you won't have to be curious what girls look like and the girls won't have to wonder what boys look like. When your father and I were growing up, our parents were very strict and we had to wear clothes all the time.\" Tina added. \n\n\"I know that you, Abby and Deana have a pussy because I heard the guys at school say that. I also heard the guys call this thing, a cock.\" John said in a serious tone. \n\nJeff spoke up saying, \"I'll answer any question for you son, instead of you hearing what someone says. I want you to feel free to come to me anytime. But to clarify a couple of things for you, some guys do call it a cock. However, the correct name for what you have down there is a penis. That sack that hangs down below your penis is called a scrotum. Inside your scrotum are your testicles. Some guys refer to them as their balls or family jewels.\" \n\n\"Dad ...\" John said, \"I saw your cock standing up sometimes and mine gets like that sometimes too. When I wake up in the morning it's hard to pee because my cock is standing up. What causes that?\" \n\n\"John to be honest with you, I really don't know why we get hard in the morning when we have to take a piss or a leak, but we do. Most guys call that a piss hard-on or a morning wood. I also have a hard time peeing first thing in the morning when I'm hard.\" Jeff explained. \n\n\"Son, I want to keep this simple enough for you to understand what I'm saying so I'll refer to the garden hose. I know you and your sisters have sprayed each other with the hose. I don't know if you realized it but when you squeeze the handle on the nozzle and squirt water out of the hose, behind the nozzle the hose is flexible. But when you aren't squirting any water, the hose gets hard and builds up pressure. So we'll call the nozzle a valve. Inside your penis or cock, there are valve like things that trap the blood flow and make your penis hard. When the blood is released, like you squirting the hose, your penis will go soft again.\" \n\n\"John, as you get older, other things will trigger your brain to send signals down to your penis or cock to close the valves and make you hard or stand up. But we can save that topic for another day. For now, don't worry about your cock standing up, it's all part of nature and it won't hurt you.\" Jeff told his son. \n\nTina was sitting in her chair sipping her cold coffee with a Cheshire cat grin on her face listening to Jeff. Finally Jeff said, \"I have to go take a shower and get ready to go to work.\" \n\nTina followed him into the house and said in a quiet voice, \"So you have a garden hose down there, do ya.\" \n\nJeff turned around with a smile saying, \"You don't seem to mind when this hose squirts in you, so yeah, I do have a hose... not necessarily a garden hose.\" \n\nTina followed Jeff into the bathroom and she douched while Jeff shaved. When both of them were ready, they took a shower together and washed each other. When they finished they dried each other and Tina wandered naked back to the kitchen where she found John sitting out on the deck drinking some orange juice. \n\nJeff finished dressing and when he came downstairs, Tina had breakfast waiting for him. They talked quietly as Jeff ate. When he was finished, he stood up and hugged Tina. John came running in and said, \"Bye dad and thank you again for finding this beautiful house for us.\" \n\nThe three of them walked to the front door together and Tina and John didn't stop at the front door. They walked out on the front porch and stood there completely naked and watched Jeff get into his car and drive away. \n\nWhen Jeff left for work, he was feeling like a million bucks. Sure the drive to work was a little longer but it was worth it. He smiled to himself thinking about the freedom his children now had in their new home. \n\nTina and John stood there on the porch for a little while longer looking around before they turned and walked back into the house. They walked through the house out to the back deck and both of them sat down. Tina picked up her cold coffee and John finished his orange juice. \n\nThey weren't alone for long, Abby and Deana came running through the kitchen and stopped when they saw their mother and brother sitting on the deck. Abby said, \"Thank goodness you're here, we thought everyone left us.\" \n\nTina smiled and said, \"Welcome to your new home. It's bigger than our old house and we can't hear you down here, from your bedrooms.\" \n\nThey asked for some orange juice and when Tina went into the kitchen to get some they went around the table and brought the chairs to the front so they could sit between their mother and brother. Tina came back with the orange juice and her refreshed coffee and the four of them sat comfortably on the deck, which is something they didn't dare do at their old house. \n\n**************************** \n\nOnce again our ride to the office seemed shorter than it was when I was driving to work. It seemed like only a short while after leaving home we pulled up in front of Kim's office building. Kim waited for Joe to open the door before she opened her legs wide in an exaggerated move to get out of the car. Her skirt rose up her legs and I'm sure Kim's sheer panties were on display. He held out his hand and helped her stand next to the door until her skirt was back in place. Kim leaned over and kissed Joe and said, \"Thank you kind sir.\" \n\nKim walked with plenty of confidence towards her office building. At the door she turned and waved goodbye to us. Joe closed the door and drove us to our office. Beth told me to get out first and when she slid across the seat; her legs were also spread wide. Joe looked at me briefly and then watched as Beth finished getting out of the limo. She brushed her skirt back into place while Joe said, \"Thank you Beth, you look very beautiful this morning.\" \n\nBeth also leaned over and kissed Joe before she turned and we headed into the building. Joe said as we walked away, \"Dan, remember if you need me for anything at all, just call me.\" \n\n\"I will Joe, I will.\" \n\nWe got off the elevator and walked the short distance to our offices where we were met by three beautiful young ladies. Taffy Davis, Connie Swensen and Kelly Jones stood up when we walked into Kelly's office. Beth and I stopped and looked at Taffy and Connie standing there in their new business suits. Even though I had seen them try the suits on for the tailor yesterday, I was awe struck at their beauty this morning. Both of them dressed for success, in business attire. \n\nAll three of them greeted us at the same time and Beth and I returned their greetings. I regained my composure before saying, \"Please come into my office.\" \n\n\"Dan, before we go into your office I'd like to tell you something.\" Taffy said. \n\nI stopped walking and turned towards her asking, \"What is it?\" \n\n\"My father and Connie's father are downstairs. I had to bring my dad with me because his car isn't on the road. He didn't have the money to pay car insurance so he had to turn in his plates. Connie's father's car broke down yesterday. Neither one of them has money for bus or taxi fare so I picked up Connie and her dad this morning, so they could come here for an interview.\" \n\nI smiled and asked, \"So Taffy, what's the problem?\" \n\n\"I only wanted you to know they are here and ready to be interviewed any time you can fit them in. They said they'd even wait all day if necessary.\" Taffy replied. \n\n\"Where are they now?\" I asked. \n\nTaffy replied, \"Both of them are in the lobby as we speak.\" \n\n\"Kelly, please call down to the lobby and have Mr. Swensen and Mr. Davis sent up here to my office. Please wait for them to arrive and bring them in. Now, if the rest of you will follow me, we'll go into my office and wait for them.\" \n\nTaffy turned to Connie and said, \"See, I told you it would work out. Mr. Morrison is a very nice man.\" \n\nWe entered my office and Kelly opened my door a few seconds later and asked me if I wanted coffee or something. I told her, \"Yes, I'd love a cup, why not make a pot so we'll have enough for everyone.\" \n\nKelly said, \"Will do Dan, it'll be ready soon.\" \n\nI put my briefcase down beside my desk and asked Taffy and Connie to bring a couple more chairs over in front of my desk from the far wall while we waited for their fathers to arrive. Beth walked into her office and put her laptop and bag away before she came back to my office. I pointed to the chairs I wanted Taffy and Connie to sit in and Beth sat down in the chair beside my desk. \n\nA few minutes after we were settled, Kelly knocked on my door and announced Mr. Swensen and Mr. Davis are here to see you Sir.\" \n\n\"Please bring them in Kelly.\" \n\nI stood up and walked around my desk as the two men walked into my office and I saw both of them look at their daughter sitting in front of my desk. I extended my hand and said, \"I'm Dan Morrison and you are?\" ",
        "Mr. Davis shook my hand first with a firm grip followed by Mr. Swensen with an even firmer grip. I asked both of them to sit down and indicated which chairs I wanted them to sit in. Kelly asked, \"Does anyone beside Mr. Morrison want some coffee?\"  \n\nBeth spoke up saying, \"Yes, I'll have some, thank you.\" \n\nBoth Taffy and Connie took turns asking for a cup. The two men finally spoke up and added their names to those who would like coffee. Kelly excused herself and said she'd be right back. \n\nWhen she came back she had a carafe of coffee on a tray with enough cups for everyone. She also had a container of cream and a sugar bowl on the tray. When she entered the room Taffy and Connie stood up and offered to help her with the coffee. Beth walked over and fixed some coffee for me and some for her. Each girl fixed coffee for their father and then one for themselves. Soon we were all sitting and sipping delicious coffee. \n\nMr. Davis spoke up first and thanked me for what I did for his daughter the day before. He informed me that Taffy had kept everything to herself because she needed her job but he was glad that she wasn't working for that guy Bart anymore. \n\nMr. Swensen echoed Mr. Davis's sentiments and also thanked me for saving his daughter from being harassed by Bart. He went on to thank me for the opportunity I had given both girls and he'll never understand how an executive would take an interest in not only his current employees but offer their father's a chance to get back to work also. He told me as one father to another, he was grateful for what I did. \n\nI thanked both of them for their heart felt thank you but told each of them I won't allow any employee to be bullied or harassed. I congratulated both men for raising their daughters with the high morals and virtues both of them possessed. \n\nMr. Davis looked at his daughter and then at me before he said, \"I'm sorry to intrude on you so early in the morning. I know I was supposed to call for an appointment but circumstances beyond my control prevented me from being able to make an appointment...\" \n\n\"I don't mean to interrupt you sir, but sometimes things happen for a reason. Believe it or not, this is going to be my slowest time of today. The rest of my day is packed with appointments and preparation for a business trip this afternoon. So there is no need for you to explain anything. I don't normally have two candidates in the room together when I conduct interviews but in this case if no one minds, we can sit here and talk for a little bit and I can find out what kind of work you did. It's up to you, how do you want to do this?\" \n\nBoth men looked at each other and at their daughter before Mr. Davis spoke up saying, \"Our daughters have been friends for a while and I've met Mr. Swensen a few times, but under the current circumstances, I'll be very happy to be in the room all together. I'm looking for a job and I don't care who knows it.\" \n\nMr. Swensen was next to say, \"I just want to work. My daughter told me she told you a bit of my situation so I'll confirm it by saying, I'll also take any job you have available. I don't care who listens. As I look around the room I only see smiling faces so it can't be all that bad.\" \n\n\"I understand that both of you will take any job I have available and it just happens that two of our trash collectors were promoted yesterday so there are two positions open in that department. So after you're processed through our HR department and your references come back clean and if your drug test is negative, both of you have a job right now! HOWEVER, I want to hear more about what you used to do, so I can determine if we have any openings close to those positions available for you.\" \n\nFor the next half hour I alternated between both men asking them questions and listening to their answers. I am very familiar with all functions of our company and it became evident to me I could place both men in a position close to what they had done before they were laid off. \n\nI wrote two names on a piece of paper and handed it to Kelly and asked her to call both people to my office. While we waited, I informed both men I was going to hire them and they would be on a probation period just like any other recently hired employee. Smiles filled their faces and I looked at both daughters and noticed they were fidgeting in their seats. \n\nI smiled at them as I said, \"I recently returned from Germany where our company was able to secure a very lucrative contract. We are going to be able to hire hundreds of new workers so you're only the beginning. I'm going to send both of you down to HR and have you fill out an application and I'll advise HR to fast track processing your applications. Like I said before, if there are no problems with your references or drug test, I'll have you report to work tomorrow morning and you can all ride together.\" \n\n\"In a few minutes there will be two department heads coming in here. I'm going to assign each of you to one of those department heads based on what each of you've told me. They also will evaluate you today and I'll have them report to me later this afternoon.\" \n\nThere was a knock on my door and Kelly opened it and said, \"The two department heads you wanted to see, are here Mr. Morrison.\" \n\n\"Please have them come right in.\" I responded. \n\nKelly led the two department heads into my office and I introduced everyone. I explained that each man had to go to HR first to fill out an application. Then I explained what I wanted each department head to do with their potential new employee. I also informed each of them I wanted a report sent to me, on each man, before the end of the day. \n\nI stood up and walked around my desk and said, \"I don't care how old a person is, all I care about is having a team worker who can do the best he or she can for our company. I wish both of you well and I will be personally checking on your progress.\" \n\nBoth men shook my hand vigorously and kept thanking me. Each daughter stood up, hugged and kissed their dad before they left the room. I reminded Beth we hadn't had a chance to eat yet so I asked her to order something to eat from the deli and have it delivered. Beth stood up and left my office saying, \"If you don't need me for a little while, I have some work I need to do before we leave.\" \n\n\"Go ahead and get your work done and if I need anything, I can have Kelly fill in for you.\" I replied. \n\nI asked Taffy and Connie, \"Do you think your fathers are happy?\" \n\nBoth of them tried to talk at once and then stopped and looked at each other and giggled. Finally Connie said, \"Go ahead.\" \n\nTaffy opened her mouth to talk and that girl gave me at least a five minute condensed speech, telling me many things from the time she returned home last night, until her parents saw her dressed in her new clothes this morning. She told me she was so excited when she got out of the shower and finished in the bathroom, she put on one of her new panty and bra sets and ran out to show her mom. The panties were white silk, French Cut, mid-rise and they hugged every portion of her body which they covered. She told me her father stared at her for a few seconds before he reminded her they were underwear and not meant to be seen by everyone. \n\nConnie was next to tell me her story and she also started out from the time she went home yesterday until this morning. Her story wasn't as long by just as interesting as Taffy's story. At the end of her tale Connie asked, \"Dan, may I hug you for all you've done for me and my father.\" \n\nI stood up and I and smiled before saying, \"Sure you can hug me. When we are in a private setting like this, you may hug me anytime you get the urge. I wouldn't want you to hug me in front of other employees and give them the wrong impression of you. We have not engaged in any sexual activities nor have I allowed my hands to wander to places outside a normal hug, so I don't want others to think you are doing special favors for the boss. And the same goes for you too Taffy.\" \n\n\"Dan ...\" Taffy said then stopped and looked at me. \n\n\"Yes?\" I asked \n\n\"Is there ... I mean ... what can I do, ummm ... to show you I appreciate everything you've done for me and my family since yesterday?\" Taffy asked in a quiet submissive type voice. \n\nI looked directly at Taffy and then at Connie before saying, \"Come here give me a hug.\" \n\nWhile both of them were hugging me and I had an arm around each of them I said, \"You don't have to do anything for me. Neither of you owe me anything. I helped you because it was the right thing to do.\" \n\nWe talked quietly while both girls hugged me in appreciation for what had transpired in the past twenty four hours. We were standing together with our arms around each other and Taffy said in a matter of fact voice, \"I know you enjoyed seeing us in the nude yesterday because you had a hard-on. Now that you've seen all of me, I will be very happy to show you my naked body any time you want to see it.\" \n\n\"If you want, I'll take off my suit right now and work for you in my bra and panties. I know you loved watching us yesterday at the lingerie shop.\" Connie added \n\nI looked at both Taffy and Connie before saying, \"Yes, I did enjoy myself yesterday, however I don't want you to think I helped you only because I wanted to see you naked or even in a bra and panty set. As you learned yesterday, I am a nudist so I love seeing people nude. Here in the office, I have to be careful not to let other executives know of my interests. Remember, I explained there's a difference between men and women. Any allegation, even if it was proven false in the end, could prove to be a career ender. I'm not ready to retire yet.\" \n\n\"AND, we're not ready to do anything that will cause you any harm, either. Connie and I talked last night, about a lot of things. We've both heard stories where some executives take younger females with them to conventions and on business trips to impress a client. Dan, both of us want to offer you, our services. I'm going to be blunt, I'm not saying we want to fuck anyone, but if someone wants to see us nude or in a skimpy bathing suit, we're down for that. So if you want a couple of very discreet young ladies to call upon for extra duties, above and beyond your average worker, we are what you'd be looking for.\" Taffy added. \n\n\"There is no way I would feel right or bring myself to ask either of you to strip naked for a client.\" I said. \n\n\"Dan, please don't confuse our offer with you making us do something that may or may not be questionable. Our offer is from us and not something you're asking us to do. Any actions we take will be merely intentional and in some cases accidental. We're even interested in wearing revealing or provocative clothing without bra or panties if you have to take a client to dinner. Dan, since yesterday, we learned we get very excited showing off our body, partially dressed or nude. We want to use our new interest to help you, like you helped us. As I said, both of us will be very discreet.\" Taffy said. \n\nTaffy quickly continued with, \"I have something I want to show you, if you'll let me.\" \n\n\"Ok, what would you like to show me?\" I asked. \n\nImmediately Taffy slipped off her jacket and put it on the chair next to her. Next she started to unbutton her blouse. I said, \"Wait a minute Taffy. If you're going to do what I think you're going to do, I want you to know, there'll be no grab and dash if someone else comes into this office.\" \n\n\"What do you mean?\" Taffy asked. \n\n\"I mean if you are going to take off your clothes and someone comes to see me, I don't want you to grab your clothes and try to dash to some place where you won't be seen. What I'm saying is you'll have to remain in whatever state of undress you are or continue undressing until you are nude but you can't hide any parts of your body. Do you understand what I mean?\" I stated. \n\n\"Dan, I fully understand what you mean and I agree I won't grab and dash nor will I cover any of my parts if someone comes in here. However, I don't want to get you in trouble either.\" Taffy said confidently. \n\nI watched as she removed one article of clothes at a time and placed it on the chair near her. Taffy's small titties jiggled as she undressed. Finally, she was only wearing her black thigh high stockings her new shoes and her white silk, French Cut, mid-rise panties that hugged her pussy slit enough to show us a camel toe. Standing directly in front of me, I took note that her wonderful small breasts were topped with light brown areola and small nipples. Taffy stood completely still and let me look at her body until I looked up at her face. Taffy's smile was spread across her face in approval of me openly staring at her lovely body. \n\nEven though I was looking at her face, I could see her cup her titties and squeeze them before she asked me, \"Do you like the looks of my \"B\" sized titties? I love them because they're just big enough to jiggle on my chest but not too big to be cumbersome.\" \n\nI continued to look into her eyes a few seconds longer before I looked back down. \"They're lovely and so perfect for you. I personally love small breasts. Anything more than a mouthful is wasted, my grandfather used to say.\" \n\nTaffy smiled and said, \"I don't mind showing you my titties but I have something else I really want you to see.\" \n\nShe hooked her thumbs into her panties and started pushing them down ... and suddenly there came a knock on my office door. \n\nTaffy's head snapped around and looked first at the door and then back at me. Her panties were at a point where her pussy was almost viewable when she stopped. I looked down and then came the second knock. Finally I said, \"Come in.\" \n\nKelly opened the door part way and said, \"The delivery person is here with your breakfast sir.\" \n\nKelly's eyes went wide when she saw Taffy's almost naked body. Suddenly she asked, \"Do you want me to pay for the order and bring it in later?\" \n\nI held up my hand and said, \"No, you can show him in. I'll pay him.\" \n\nI looked at Taffy and said in a low voice, \"This is accidental; now you'll have to decide what you're going to do.\" \n\nKelly opened my door wide enough for the delivery person to walk past her and when he stepped into my office he stopped dead in his tracks and looked at Taffy's almost naked body caught midway in pushing her panties down. \n\nI waved for him to come in and with only a second of hesitation, Taffy finished pushing her panties down her legs and held them as she stepped out of them. She placed her panties on the chair with the rest of her clothes and turned to face both me and the delivery person. I looked at her naked body and noticed right away Taffy had shaved or waxed her landing strip and now her pubic area was completely devoid of any hair. \n\nThe young delivery person was trying not to look at Taffy but I said, \"She looks rather cute in her stockings and pumps, doesn't she?\" \n\nHe took a quick glance and said, \"Yes sir, she's cute alright.\" \n\nI reached in my pocket and pulled out my money clip before I asked, \"How much?\" \n\nThe young man was definitely nervous and he fumbled with the slip before he said, \"The whole order is fifteen dollars and forty five cents. I left the other sandwiches with your secretary.\" \n\nI looked at the young man and asked, \"Son, what kind of tips do you make in a day's time?\" \n\n\"Sir?\" Came his one word question. \n\n\"How much do you make in tips each day?\" \n\n\"It depends on the deliveries and some people don't give tips. So there's no way for me to tell you a dollar amount sir.\" He responded. \n\n\"Son, as you can see, one of these girls has something to show me and you came at a time when it was less convenient. I might have to order breakfast from your place of business again and I do believe in giving tips. However you are receiving a bonus this trip because as you can see, she hasn't covered her body and you can see both her lovely tits and her beautiful bald pussy. Now I wouldn't want anyone else to know what you saw here today. I'm going to give you a tip and request that you don't tell anyone. Is that a fair deal?\" I asked. \n\nNervously the young man nodded his head. So I said, \"Go ahead and look at her while I get the money for you.\" \n\nI saw his eyes drop down Taffy's body and come to rest at her crotch. Taffy surprised me when I saw her instantly part her feet wider giving both the young delivery guy and me a clear, unobstructed view of her delicious looking pussy. \n\nI took my time getting my money out and when I handed it to him, there was a healthy tip included. He looked at his hand and started to reach for change when I simply said, \"Keep it, tip is included.\" \n\n\"Thank you sir, thank you so much.\" He said as he continued to look at Taffy's pussy. \n\nFinally he said, \"I have to get going.\" \n\n\"Remember, this is just between us.\" I cautioned. \n\n\"Yes sir, just between us. My name is Dave and I'll come back anytime you need something.\" \n\nKelly was waiting by the door and she opened it when the young man got to her, she whispered, \"Remember, don't tell anyone.\" \n\nI heard her add as she watched him scurry across her office, \"There's a men's bathroom over there on the left, just down from the elevators.\" \n\nKelly asked, \"Should I hold all your calls, sir?\" \n\nI looked at Taffy and said, \"No, if someone comes to see me, call me on the phone and let me know who it is. Other than that, we'll be fine.\" \n\nI told Taffy to go into my bathroom and get a towel to sit on. When Taffy returned Connie said, \"What the hell, if she's going to be naked, I will be too.\" \n\nI told Connie to go get a towel for herself. When she came back she stripped down to her stockings and shoes before she sat down. Both of them sat in front of me with their legs parted enough so I had an unobstructed view of their pussy. \n\nTaffy was the first to say, \"I am so wet from allowing him to see my body, I could jill one out, about now.\" \n\n\"You did much better than I expected you to do Taffy. I thought for sure you would grab your clothes at the last second and dash. I also noticed you either waxed or shaved your landing strip last night. I love a completely bald pussy and both of you fit my preferences.\" I said. \n\n\"That's what I wanted to show you. I normally get waxed because I have such dark hair. It takes longer to grow back in when I get waxed, but last night I shaved it all because I saw both Connie and Beth are bald down there.\" Taffy replied. \n\n\"I hope you don't mind me saying this but I love the view between your legs, it's an excellent view, thank you. Even though I've been a nudist most of my life, I'm always interested in looking at pussy.\" \n\n\"Now let me talk to you about the offers both of you made. I am the first one who will stand up and protect you, but the offers you made, put me in a risky position. I certainly don't want to take advantage of you and make it seem like I am forcing either of you to do something against your will. That's totally against my character, principles and I just won't do that.\" \n\n\"But Dan, you won't be taking advantage of us. We've made our offer as clear as we can. You can see across your desk, both of us are completely naked and if you want to call someone into your office right now, we'll remain seated with our legs spread and your guest will see us, as you are seeing us. Another example would be if we were in a hotel suite and naked, we would stay naked even if you invited a guest into the room for a meeting and we stayed in the room with you. We talked about many scenarios last night and as Taffy told you, we want to do this, especially if it will help you. We will show off our bodies but we'd prefer not to fuck anyone, unless it was you, of course.\" Connie said in a convincing voice. \n\nI thought for a moment before asking, \"What would you do if one or both of your fathers came back to see me right this minute, with the department head they're with?\" ",
        "Taffy's mouth flew open and she looked at Connie who was also showing shock in her face. I sat and watched them eyeball each other before Taffy turned to me saying, \"We didn't think about that one. I know my father would be very upset with me and would most likely rush to cover me up with something. I most certainly would have to answer to a lot of questions. But I could honestly tell him I was not fucking the boss, to get ahead. I want a long career in this company and I want to work for it. I don't see any problem using all of my assets such as my brain and my body to contribute to the team effort. I want to advance in this company but I promise you, I'm not going to fuck anyone to make that happen.\" \n\n\"My father would be very upset also but I agree with Taffy, all of us have to contribute something to advance, whether it's working late or taking on extra duties. I'm not going to use sex either, to climb that ladder.\" Connie added. \"But there wouldn't be any way to change the image he would see of me. I am willing to take that chance and I'll remain completely naked and sit here with my legs spread so he would see my completely naked body. I would not allow him to cover me with anything. I would tell him that although the view might look daunting, with me being naked in here with you, it was completely my idea. I too would be honestly able to tell him I'm not having sex with you. I also want a long career with this company.\" \n\n\"There's a right and wrong time to be naked so both of you would have to learn the difference, if I were to consider your offers. I wouldn't want either of you to flaunt your young body in front of certain people. That could be a business deal gone badly. However, there are some people who would appreciate the view I have presently.\" \n\n\"If I were to take you on a trip, we would have accommodations with connecting suites or in some cases multiple bedroom suites. There would be no privacy for any of us, even in the bathrooms. Is that something you could deal with?\" I asked. \n\n\"What exactly do you mean?\" Taffy questioned. \n\n\"Since both of you have signed a non-disclosure/confidentiality statement for me, I won't beat around the bush. I mean, at my home, we have an open door policy. We even use the bathroom together. I have been known to wipe both my wife and daughter's pussy when they finish peeing. They have held my cock for me when I'm peeing. They love to make bubbles in the water with my pee. You might as well know that Beth lives with me and my family. So when we travel, we share a suite as both or one of you would do, if you went on a trip with us. When we are in our suite, we are always nude. Therefore we would see each other nude and you're likely to see me enjoying sex, since we don't close any doors.\" \n\n\"Finally, when we are on the road, there are no business hours. In other words the morning might start at eight or nine and go straight through until midnight. There is no way the company will allow me to pay either of you an hourly rate with overtime for road trips. However there would be a salary adjustment in your next pay check. So after hearing all of this, are both of you sure you'd like to travel and do the things you offered to do?\" \n\nIt took several seconds before Taffy spoke but when she did, she said, \"Dan are you serious? Do the males and females in your house go into the bathroom at the same time and not close the door?\" \n\nI laughed and said, \"Yes Taffy. We have nothing to hide.\" \n\n\"But ... but ... what about when the females have their period, do you still go in with them? Don't they demand privacy during that time of the month?\" Connie inquired. \n\n\"No there is no privacy in our home. Right now all of the females in my home are on the Depo-Provera birth control shot so they don't get their periods. When they go off the shot, they'll start getting it again, however that doesn't matter, I can change a tampon as good as they can.\" \n\n\"EEEEEwwwwwwwwww!\" Both girls exclaimed. Taffy asked, \"You've changed a tampon for your wife? Guys don't do that!\" \n\n\"And my daughter's tampon, as well. Yes, this is one guy who is involved with all facets of my family's life. I know everything about them and they know everything about me. That's the way it is in our home.\" I said rather proudly. \n\n\"HOLY SHIT! I'M SLOW TODAY! You said you've changed your daughter's tampon too? Does your daughter stay nude, around you, in your home also?\" \n\n\"Yes, my daughter Jenna was raised as a nudist; she's a very beautiful young lady. Yes, I've changed her tampon. It's no big deal.\" \n\n\"But ... That means ... You touched your daughter's pussy. Holy shit, I can't believe it.\" Taffy said. \n\n\"Jenna's pussy isn't any different than your pussy or any other female's pussy.\" \n\n\"But she's your daughter. Wasn't that way too weird?\" \n\n\"No, there's nothing wrong with our family's loving and giving lifestyle. We show our love for each other in a little different way than other families. That doesn't mean our lifestyle is wrong or weird. I will defend my family's lifestyle because of the love and respect we have for each other.\" \n\n\"I suspect you would defend your family, after I saw what you did to Bart yesterday. You know Dan, I'm feeling much more comfortable sitting here completely naked, talking to you. We've been naked for a while and you have not attempted to grab any of our body parts or even fuck us. You are the type of man I would want to marry someday. I hope I can find someone to love and share my life with, who shares the same views as you do.\" Taffy said. \n\n\"How do you start being a nudist?\" Connie asked. \n\n\"Well, the obvious first step would be to take off your clothes and stay nude. I don't know anything about your families other than it seems each of your families pull together during hard times. I think it's wonderful each family is close enough where those who can work, help pay the household bills. That alone is special and I applaud each of you for doing that. I'm going to make sure each of you and your father will get enough hours so you can catch up on your back household bills and get ahead.\" \n\n\"But let me get back to your question. Our home is a nudist home. When we get home we undress and stay that way until we have to leave again. So depending on how your family is structured, you may or may not have that same openness.\" \n\n\"My family has seen me in my bra and panties but that's about the limit. I've never thought of being nude in the other rooms of our house except the bathroom and my bedroom.\" Taffy stated when I paused. \n\n\"Being nude in the other rooms of your home is no different than you sitting here completely nude. The normal routine activities in your homes and everyone else's are the same in my home; the only difference is we are all nude, when we do those normal things. The only other thing you might not do when you are at home is sit with your legs open like they are now. That is, unless you want other family members to view your delicious looking pussy.\" \n\n\"I can't tell you what to do in your individual homes because I don't know your families or how you were raised. However, I have seen girls wear only a tee shirt with panties on under it or no panties at all. That gives them the freedom to show a little and get others in the house used to seeing more than what's normally displayed. It also allows one to be in the room with other family members being less than fully dressed. Being that the tee shirt won't be that long in the first place, raising one's arms or sitting will raise the hem and give others a peek of the goods that the tee shirt is intended to cover. Finally, a tee shirt worn without anything under it will give you the opportunity to lift the hem as high as you want and expose as much of your body as you want and still be able to cover up again, if someone comes into the room.\" \n\n\"One other thing I'm positive you already know about is, bending over. If you were to wear a tee shirt with nothing under it and bend over in front of a family member, they would most certainly enjoy a view of your charms.\" \n\nTaffy said, \"I think I'm going to start wearing only a tee shirt around the house when I'm home.\" \n\n\"But what happens when someone comes to visit you at your house.\" Connie asked. \n\n\"When we are at home, we are nude. If someone comes to visit us, they have three choices. The first being, they can come in and sit down and remain completely dressed. The second choice is, they can come in and take off their clothes and be comfortable, or for the third choice, they can leave. It's as simple as that. We don't care who it is, we aren't going to get dressed.\" \n\n\"Are you saying that people who come to your home see you, your wife and your daughter naked?\" Taffy asked with a tone of surprise in her voice. \n\n\"The simple answer to that question is yes. They also see all the other people who live in our home. Let me clarify something. On rare occasions, certain business activities take place at our home. On some of those occasions we wear a robe or shorts and a shirt. Our clothes would be minimal and they would serve for the comfort of say, some police officers taking a report, or a lawyer doing a contract. Our clothes are for business only at our home. Otherwise all of us are nude all the time. I am only telling both of you this information because you asked and I've heard you say you will keep our conversations in the strictest of confidence.\" \n\n\"Yes sir, I will never divulge anything we speak about to anyone other than those present. I have some faults but I want you to know you can trust me.\" Taffy was quick to add. \n\nConnie also added, \"Dan, I want to work with you and I want you to know you can trust me as well. I believe Aristotle is the one who declared a virtuous person as someone who has ideal character traits. I'd like to believe myself to be a combination of ethical, moral and virtuous.\" \n\nThis time is was Taffy's turn to say, \"I can't add anything to what Connie said. We are like two peas in a pod. Dan, we had a real eye opener yesterday and Connie and I want to seize the opportunity to not only show you what we can do but we want to earn your trust at the same time. It is important to us because it's not every day the big boss gets involved in the lives of the little people.\" \n\n\"I appreciate your re-assurance our conversations will be held in the strictest of confidence.\" I replied. \n\nTaffy started to giggle as she said; \"Besides none of our friends would ever believe we sat in front of you completely naked with our legs spread and you as a man never attempted to touch us. They'd call us liars and that would piss me off. I'd probably get into trouble.\" \n\nI looked at Connie saying, \"To get back to your original question, you can go online and look up \"American Association of Nude Recreation.\" (AANR) Since many females are shy about being seen nude, they have a FAQ page to answer your questions. If you don't find the answer you're looking for, you can always ask me since I've been a nudist for a long time. If you'd like to try nudism in a small family setting, both of you could stay overnight in my home sometime.\" \n\n\"I have a trip coming up this afternoon through Monday and I'll be back in the office on Tuesday morning. If both of you are truly interested in the nudist lifestyle, I'll invite you to stay over so you can experience what it's like to live nude.\" \n\n\"WOW, you'd let us come to your home?\" Taffy exclaimed. \n\n\"Yes, I am giving you an invitation to come to my home. However, I want you to remember we have an open door policy so you may witness sexual activity which isn't part of the nudist lifestyle. However, it is part of human nature to enjoy healthy sexual activity. We don't filter anything in our home. I want to also tell you, anyone old enough to consent to sexual activity, can have sex in my home. I will NOT however, allow anyone to be coerced into having sex.\" \n\n\"Ok, let's get back to your offer. If both of you are serious about your offer and are willing to do what you described earlier, without any prompting from me, I'd like to give you an opportunity to see if that's what both of you want to do. I'm not sure taking both of you on the same trip would be beneficial unless we went to a convention type setting, so how would you go about deciding which one of you would be ... let's say ... willing to go first?\" \n\nTaffy looked at Connie before she looked back at me and said, \"We can draw straws for the first time out and then alternate after that.\" \n\n\"That sounds like a wonderful idea. Taffy and I share everything, so no matter which one of us goes first; we'll end up talking on the phone after the trip. Dan, we are committed to our offer; otherwise we would not have made it. We will do anything to help you, except have sex with a client.\" Connie stated. \n\n\"I'm repeating myself but I can't overemphasize this enough. I won't ask either of you to strip or have sex with anyone. I'm actually a little overwhelmed that both of you are sitting in my office, completely naked, while I'm enjoying looking at your bodies. I love what I see and I'm positive others will also.\" I said. \n\n\"Ok, when we get back from our trip, Beth and I will take you shopping again. This time we'll purchase some evening wear. I'll buy both of you some clothes which, let's say, will allow certain parts of your body to be more visible, especially if you were to move or sit in a certain way. Sometimes we end up back in our suite to talk business and that would be a time for you to get comfortable, if you know what I mean. You'll even have a couple of negligees to choose from if you were to decide against being nude.\" \n\n\"The clothes I just referred to, I'd rather you kept those clothes in Beth's or my closet here in the office rather than at your home. I don't want anyone in your home to get the wrong idea. I want you to realize you will be showing parts, if not all of your body, but no one will ever touch you if you don't want them to.\" \n\n\"You will need your business suits for daytime business hours but I might ask you to forgo your bra or panties and sometimes even both. If I've said anything that is outside of your offer, let me know.\" \n\nTaffy quickly said, \"Dan, if you ever get to the point where you ask me to strip completely naked, I'm ready to do that for you, anytime or anyplace. I trust you to protect me. All you have to do is ask. But at the same time, for now at least, I understand I will have to take the lead and wear provocative clothes on my own. I know the difference between dressing to please and dressing slutty. Neither of us will ever dress slutty. I'm positive you can give me a gentle hint what you want without asking me to do something directly.\" \n\n\"I'd love to get a Depo-Provera birth control shot so I didn't have to worry about when my period will come each month. It would make traveling much easier. Right now I'm on birth control pills and I have my period for six days each month.\" \n\nTaffy stopped talking and the look of shock enveloped her face as she exclaimed, \"OH MY GOD!\" \n\nTaffy's hands flew up and covered her face and after a few seconds she said, \"I suddenly realized I'm sitting here talking about my period with not only my boss but the CEO of the company. I'm so fucking sorry if I've grossed you out Dan.\" \n\nI smiled at Taffy and said, \"Don't worry, I am very familiar with a female menstrual cycle and I'm not grossed out by it. It's part of nature and please remember, I've changed tampons before.\" \n\n\"Are you for real? Even my father doesn't want to hear about mom and I having our periods. He's the one who says it's gross.\" Taffy added. \n\n\"It takes a week or so for the shot to take effect so you'll have to make an appointment with your gynecologist soon and get the shot.\" I advised. \n\n\"Ummm ... oops.\" Taffy stopped and looked at Connie, \"Dad lost his insurance when he was laid off. I won't be able to go until my next check.\" \n\n\"That goes for me too!\" Connie quickly added. \n\nI pushed the button on my desk for Beth. When she opened my door she looked at both girls sitting in front of me with their legs spread and completely naked. She walked over to my desk and said, \"Both of you look lovely this morning. Taffy I see you joined the bald beavers club. It looks great.\" \n\nTaffy asked, \"What's a bald beaver club?\" \n\nBeth giggled and said, \"That's a little before your time. Truck drivers used to have Citizen Band (CB) radios and they used to call our pussy a beaver. So a bald beaver is a bald pussy.\" \n\nI turned to Beth and said, \"The girls have made me a very interesting offer. I am seriously considering taking at least one, maybe both of them with us when we go on that four day trip we have coming up. Both of them have expressed they aren't interested in having sex but they are willing to be caught partially or completely naked and will remain that way no matter who sees them. They have also expressed an interest in wearing revealing clothes, such as evening wear.\" \n\n\"Before I go any further, girls I'd like to know if you will wear the clothes I choose for you and in the way I choose to have you wear them?\" \n\n\"What do you mean?\" Connie inquired. \n\n\"A perfect example would be I may ask you wear a white blouse without a bra and the top four buttons undone. Or I may ask you wear a sheer bra and only your suit jacket without a blouse. I may or may not unbutton your jacket or leave only the bottom button buttoned. In our suite, I might choose to have you wear a sheer negligee in case we have guests. That's only a couple of quick examples.\" \n\n\"And while wearing the clothes you choose for us, you'd like for us to stand or sit in a position which would likely cause the exposure of our assets, but not in a slutty way, correct?\" Taffy asked. \n\n\"Yes, that's correct. I remember the way you phrased your offer.\" I replied. \n\n\"I'm in.\" Taffy said. \n\n\"I'm in.\" Connie added. \n\n\"Beth, both of these girls are on birth control pills however they want to get a Depo-Provera shot. They don't have insurance so it's difficult for them to get the shot. Would you be so kind as to call your gynecologist and see if we can get them right in today so the shot will have a chance to work before we have to take that other trip. Getting the shot doesn't mean they are willing to have sex with anyone, they are getting it so they won't have their period.\" \n\n\"I have her number on my cell phone, let me go get it.\" Beth replied. \n\nI looked at both girls and said, \"I have some work to do, I'm not sure what Beth has in store for you but if you remain in my office like that, you'll be seen for sure. I have an appointment for lunch today but I want you to see me before you go home.\" \n\nBoth girls stood up and started to put on their panties when I asked, \"Will both of you leave your panties here on my desk until this afternoon.\" \n\nWithout hesitation both girls handed me their panties. Before I placed them on my desk, I held each pair up to my face and inhaled deeply. Both girls looked at each other and then back at me. After a few moments, I placed them on the right side of my desk. \n\nBeth came back into my office while she was talking on her cell phone and she looked directly at me before turning to Taffy and Connie repeating what she heard, \"All you have is an appointment for three thirty. Yes, I'd like to fill that time slot with Taffy Davis and Connie Swensen. Yes, both of them want to get a Depo-Provera shot. Yes, I believe both of them are on birth control pills currently. Ok, we'll see you at three thirty.\" \n\n\"Beth, call Joe and have him bring the car around to the front entrance at three o'clock. Here take this card and put it in your wallet. You can escort them to your doctor and pay for their visit and the cost of the shot for each of them.\" I said. ",
        "Taffy immediately said, \"Thank you Dan. I'll make sure you're re-paid for your generosity.\" \n\nConnie agreed with Taffy. \n\nBoth of them finished dressing and I asked Beth if she would take the girls to the secretary she was going to place them with. I reminded both girls to come back to Beth's office at three o'clock. \n\nI called Kelly and asked her to call Jerry Wilber and have him to come to my office immediately. I also asked Kelly to call the security office and have the chief of security call me. While I was waiting I opened my breakfast and started eating. My cold coffee did a half assed job of washing down my cold scrambled egg and cheese on a hard roll. \n\nWhen my phone rang I picked it up and spoke with the head of security. I told him there would be a helicopter landing on our front lawn to pick me up at 11:30 am. I asked him to send a detail out there to keep the area clear from 11:00 and until we left. I told him we'd be gone for a couple of hours and then return by helicopter and I'd call him to let him know what time we'd return so he could clear the area. I also informed him Police Sergeant Ted Johnson would arrive shortly before 11:30 and he would be going with me. I thanked him for his assistance and hung up my phone. \n\nI had just finished swallowing the last bite of my sandwich when my phone rang. Kelly let me know Jerry was in her office. \"Please come in with him.\" I said. \n\nI stood up and Kelly opened the door and motioned for Jerry to enter. She followed Jerry into my office. While I was shaking hands with him, she walked past us and sat down in the chair Beth normally sat in when I had someone in my office. Jerry congratulated me on my newest promotion even though he had congratulated me before. \n\n\"Jerry ...,\" I started, \"I don't want to give you a complex or anything but you and I have worked together for many years. You were promoted to my old position when I was promoted to CEO. Now my new title is CEO/Chairman of the Board so you can't fill my old position for a second time. However, I need to create a second in command position and I don't know what I'm going to call it yet. I'll be on the road a lot so I need someone who I can trust and depend on, to carry on, as if I were here.\" \n\nUnlike when Tom Banks brought me to his office to talk, I turned one of the chairs in front of my desk and sat down facing Jerry. For the next hour, Jerry and I talked business. At the end I told Jerry I was going to talk to the board members and I would get back with him as soon as possible. \n\nJerry stood up and shook my hand and said, \"I'd appreciate the chance Dan. I know I can do a great job for you. Oh and I found a secretary who is my gal Friday. She's right on top of things and if you promote me, I'd love to bring her along with me.\" \n\n\"I know what you mean Jerry. I now have two top of the line secretaries working for me. I wouldn't want to part with either one.\" \n\n\"Kelly will you please show Jerry out and then come back.\" I said. \n\n*************************** \n\nBack at the Morrison's house, the morning was progressing well. Debbie and Ashley showed up to clean the house and Bill came to the house to clean the pool and hot tub. But before anyone started to work they all sat down and had some coffee. \n\nAlmost immediately after they were all seated, Tony, Patty, Beth and Barbie walked into the kitchen thru the sliding glass doors. Terri jumped up and said, \"Have a seat, I'll make some more coffee.\" \n\n\"Nonsense!\" Patty quickly said, \"I'll make the coffee, you stay seated and I'll bring in the extra coffee to warm up everyone's cup.\" \n\nTony pulled some towels out of the cabinet and handed a couple to his sisters and then he wandered into the dining room and shook hands with Bill and hugged those who stood up for a hug before he took a seat beside Bill. \n\nShelly stood up and said, \"I'll be right back, I have something for each of you, I picked up in Germany. \n\nSuddenly there was a rush of people getting up and leaving the table. When they returned, each one of them had a bag with them. Shelly looked around and said, \"Since I started this, I'll go first, the rest of you can decide whose next.\" \n\nEveryone laughed and Shelly handed a souvenir to each one of the people who had not gone to Germany. After each person unwrapped or unboxed the item they received from Shelly, the room filled with \"thank you.\" This continued until everyone who went to Germany had presented their gift to each person who stayed behind. There were plenty of hugs and kisses going around the table. \n\nSoon everyone got up and those who came to work went to work. Terri asked Mary, \"Can we take a walk out by the waterfall? That's so peaceful and I really enjoy going out there.\" \n\n\"I'd love to take a walk out there also.\" Hanna said. \n\nMary and Shelly agreed to go for a walk with Terri and Hanna while Marion said, \"Go ahead, I'll keep track of the phone and the gate for you.\" \n\nMary and Shelly went upstairs and put their service weapon in a cloth bag and came back down wearing only their sandals. Terri and Hanna dashed upstairs and slipped on some flip flops before then returned to the dining room. Each one of the girls grabbed a bottle of water and a towel from the cabinet before they walked down the steps of the deck. \n\nThe four nude bronzed beauties strolled slowly across the back yard of the Morrison's estate with Terri doing the most talking. What she was saying was irrelevant but she garnered giggles and laughs from the others. \n\nWhen they reached the trail that led through the woods, Mary immediately started looking around to see if she could spot someone on the security detail. She knew they were out there and watching. In her mind she wondered what they must be thinking, seeing four naked females walking along, not covering their body. She thought the guys must be rock hard and want to jerk off, but couldn't because they'd give themselves away. \n\nThey reached the small pond with the waterfall within a few minutes and the sun was shining through the trees and a beam was focused on the waterfall. All four of them stopped and stood still, not talking but enjoying the only sound of splashing water. Finally Terri said, \"This place can make me feel like I'm on top of the world without any worries.\" \n\nThe four of them spread their towels out on the ground and slipped off their sandals. Terri stepped carefully into the water, followed closely by Hanna and Shelly. Mary watched them but at the same time she was looking around trying to see if someone had followed them to the pond. Mary's concentration was broken by the squealing of the three girls in the water. Terri called for Mary to catch up to them in waist deep water. She tested the water with her toe before she said, \"That water is cold. Are you guys crazy?\" \n\n\"Not exactly,\" Terri said, \"I wanted to come out here for the peace and quiet.\" \n\nShelly started laughing, \"Terri, you talked all the while we were walking and you're still doing a fair job.\" \n\n\"Ok ...,\" Terri said, \"I'm guilty but you have to admit this is a wonderful place. There's just something about this waterfall and the pool that draws me to it.\" \n\n\"I agree with Terri.\" Hanna said, \"This place, not far from the house, has a mystical setting. There's something about this place that makes me feel safe. I'm glad Dan bought all the surrounding property so we don't have to worry about anyone invading our privacy.\" \n\nAll four girls swam to the bottom of the waterfall and found a sizable rock. Each of them was able to claim a spot on which to park their ass. However, their tops remained above water level. For them to remain seated, they had to put their arms around each other. The sound of the waterfall flushed all their worries as they enjoyed the spray and plenty of giggles. The sun warmed their bodies so no one was in a hurry to move. \n\nThey alternated between swimming and sitting in the sun. Terri finally looked at her hands and saw they were white and wrinkly so she said she was going to go lay down on her towel for a little while. Everyone followed her across the small pond and all of them climbed out together. \n\nThey used their towels to dry off and then spread them out on the ground. Each one sat down and then lay down and stretched out. All four of them lay together with their arms at their sides and their legs slightly spread, with their eyes closed. They talked quietly until Hanna said, \"Hey listen. Stop talking for a few minutes and just listen to the quietness and the sounds of the animals around us.\" \n\nShelly suddenly got a case of the giggles and it was so contagious, soon all four girls were giggling and no one even knew why. The four of them were a scene of tranquility. \n\n*************************** \n\nOver at the White's house the morning started off as normal with Ken going to work and Amy, Angela, Brian and Andy eating breakfast together. \n\nBrian asked, \"Mom do you think we could go over to the Morrison's house today?\" \n\nAmy picked up the phone and called the Morrison's house. Marion picked it up on the second ring saying, \"The Morrison's residence, Marion speaking, how may I help you.\" \n\n\"Hi Marion,\" Amy began, \"Is Shelly there?\" \n\n\"No she's out in the back by the waterfall with Terri, Hanna and Mary.\" Marion replied. \n\n\"Oh damn, I was calling to ask Shelly if it would be alright for me and the kids to come over and see her today.\" \n\n\"I don't see any reason why you can't come over if you want to. If she's not back when you get here, you can always walk out there where they are.\" Marion said. \n\n\"Thank you Marion I appreciate the offer but she is working and I don't want to disrupt her. We'll wait for another time. Please have Shelly give me a call when she gets back.\" Amy said. \n\n*************************** \n\nThe few moments that Kelly was out of my office I sat down at my computer and sent a memo to the Board Members about Jerry Wilber, requesting immediate action to approve him as my second in command, a title to be determined. \n\nWhen Kelly returned to my office, I informed her that Beth and I would be gone for approximately two hours during lunch. \n\n\"Is the other secretary at your desk now?\" I asked Kelly. \n\n\"Yes Sir,\" Kelly replied, \"I've had her sign all the necessary paperwork and since she was a runner up for the job you gave me, she has already been certified. Would you like to talk with her?\" \n\n\"Yes, please bring her in so we can get acquainted.\" I replied. \n\nKelly walked out of my office and left the door ajar for the few seconds she was gone. When she returned she knocked softly and walked in with another woman who I remember seeing before but I didn't remember her name. I stood up and walked around my desk to greet them and Kelly said, \"Sir, I'd like to introduce you to Allison Fields. She is going to fill in for me when I travel with you or I am away from my desk.\" \n\nI shook hands with Allison and asked her to have a seat. I walked around behind my desk and sat down before I asked Allison if she wanted anything to drink. \n\n\"No sir,\" she said as she smiled a pretty white toothy smile, \"I've had enough coffee this morning to float a ship. If I drink any more, I'll have to make a side trip.\" \n\nKelly sat down at the end of my desk where Beth normally sits and opened her pad. I leaned back in my chair and asked, \"Allison, please tell me about yourself.\" \n\n\"What would you like to know sir?\" Allison said coyly. \n\n\"Whatever you feel is important for me to know. You'll be working closely with Ms. Thompson and Ms. Jones and I'm positive they've already asked you about your background and about what you've done while working with our company. So basically you can start anywhere you want.\" \n\n\"Has Ms. Fields signed a non-disclosure/confidentiality statement yet?\" I asked while looking at Kelly. \n\n\"Yes sir,\" Kelly responded, \"We had her sign that almost immediately.\" \n\n\"So Allison,\" I said, \"You can relax, although, I'm the top executive for our company, I was working in one of the departments, when I first started here. I worked my way up from the bottom so I know what it's like to be on that side of the desk.\" \n\nAllison visibly took a deep breath before she said, \"I've been with the company for ten years and although I love my job, this is the first time I've been considered for advancement. I applied for the position that Kelly holds. Kelly I don't mean to offend you.\" \n\n\"No problem,\" Kelly injected. \n\n\"I truly appreciate this opportunity,\" Allison stated, \"All I want is the opportunity to show I have what it takes to do the job, even if it is only part time.\" \n\n\"Kelly will you please have a copy of Allison's annual evaluations sent up to me immediately.\" I said as I looked at Kelly. \n\nKelly excused herself and was out of the room for only a couple of minutes. When she returned she told me a courier would bring the reports up, in a few minutes. She also informed me she told them to have the courier knock on my door when he or she arrived. \n\nFor the next ten minutes or so, Allison and I discussed her qualifications and where she went to school. I was well satisfied with all her answers. \n\nWhen the knock on my door sounded Kelly quickly walked to the door and took the sealed envelope from the courier and thanked him. She handed me the envelope on the way back to her seat. I opened the envelope and read the evaluation reports. Every one of the evaluations listed Allison as a valued employee. According to the evaluations she was always on time, she didn't take off an excessive amount of time and her immediately supervisor listed her as a hard worker. \n\nI put the reports down on my desk and looked at Allison before I said, \"Your evaluation reports show you to be an exemplary employee. Can you think of any reason why you've never been considered for a promotion?\" \n\n\"Sir, I've worked hard for this company, I'm always on time and it should reflect that I don't abuse my time by taking a lot of time off. I would like to advance; I've always taken on the extra work because it needed to be done. I want you to understand, I'm not complaining, but you asked, and I see my chance to plead my case. I can and will do whatever is required of me, no matter what it takes. And, I'd like you to know, I am part of a larger team, so I'd like to be considered as such.\" \n\n\"Allison,\" I said after a pause, \"I want employees who can work as part of a team. Someone who is willing to go the extra mile and do whatever it takes to get the job done. When I first came to work here, I came in early and stayed late. My supervisor recognized my commitment and that's the reason I'm sitting in this chair today. The reason I'm telling you this is because I would like for you to remain committed to your job and always do the best you can. I'll look into why you've never been promoted but at the same time I can't promise you anything. I will inform Beth that I want you to be compensated for your work at this higher level. Also I'll let her know that you will be the one who will fill in when Beth and Kelly are involved with other business.\" \n\nI looked at Kelly and asked her to call Jerry Wilber on my phone and ask him to come back to my office for a few minutes. We were quiet while Kelly made the call and when she hung up she said, \"He'll be right here.\" \n\nA couple of minutes later Jerry knocked on my door and I said, \"Come in.\" \n\nJerry came in and I motioned for him to have a seat next to Allison. I made the introductions so everyone knew each other's name. I informed Jerry I had submitted his name to the board. I told him since I would be away on Friday and Monday I informed him Allison would be filling in for Kelly. Jerry and Allison shook hands and greeted each other warmly. \n\nI explained to both of them if anything major happened, I wanted to be notified immediately. I explained to Jerry he would be able to make decisions based on need only. I also told him when I returned we would have an executive meeting with the board and make a formal announcement. \n\nI informed Jerry I would be in contact with Allison daily so he should keep her updated on everything so she will have the information to pass along to me and I would give her any information to pass on to him. Both Jerry and Allison agreed they would share information. I also informed Allison I wanted our offices locked while we were away and that no one should have any reason to enter them. \n\nWe talked for another ten minutes before Jerry left my office. I looked at Allison and saw her take a couple deep breaths and compose herself, before she finally said, \"Thank you sir, I'll do the best I can and I hope you'll call upon me often. I'll do whatever job you have for me.\" \n\n\"I appreciate your commitment and I'll look forward to working with you in the future. I have some other work I have to get done so if you'll excuse me.\" I said in a business-like manner. \n\nBoth Kelly and Allison stood up and walked out of my office. For the next hour and a half, I stayed busy by making some important phone calls and I sent a few emails and inter-office memos. Soon Beth came into my office and told me it was eleven fifteen and we had to leave soon. I finished up what I was doing quickly. I stood up and reached for my jacket before I remembered, Mike said our lunch was going to be business casual. I left my jacket on the hanger and turned to Beth saying, \"OK, I'm ready.\" \n\nWe left my office and when we reached Kelly's office I stopped and said, \"Kelly, I want you to take Allison out to lunch and you can talk about secretarial duties over lunch. Use one of the company credit cards. You can call Joe and have him come and pick you up. Don't be gone too long but have a nice lunch. We'll be back in a couple of hours.\" \n\nBeth quickly added, \"Please make sure you pay for Joe's lunch also.\" \n\nKelly smiled and winked at Beth before saying, \"Thank you Dan, I know a very nice place to go and have lunch.\" \n\nBeth and I took the elevator down to the first floor and as we started walking towards the front doors the head of security walked over to us saying, \"I've secured the area like you asked sir, and Sergeant Johnson has already arrived and he's waiting outside for you.\" \n\nBeth and I walked out of the building and in the distance I could hear a helicopter. We walked over to the shade where Ted, Marion and Kim stood. Kim turned and hugged me like it'd been a long time since she had seen me. Soon the helicopter was hovering over the landing area and descending slowly to the ground. The head of our security walked up behind me and tapped me on the shoulder, I turned my head in his direction and he immediately shouted, \"Have a safe trip sir.\" \n\nI smiled and nodded my head at him since the hovering helicopter's noise got louder as it got closer to the ground. I looked at the pilot and co-pilot and saw the pilot signal for us the walk forward to the helicopter. The co-pilot jumped out and opened the side door for us. As we walked forward, Beth and Kim learned at the same time they needed to hold their skirt down. Everyone standing near the landing zone was treated to a few moments view of Kim and Beth's thigh high stockings and panties when their skirt was blown up around their waist. Both of them tried to push their skirt down but it didn't happen without a struggle. \n\nWe climbed into the helicopter and Mike told us to fasten our seat belt. He stood by and waited, then slid the door shut. He climbed back into the co-pilot seat and fastened his seat belt and put his head phones back on. Joanna was smiling broadly at us as we started to lift off. Kim and Beth were on either side of me and both of them squeezed my hand very tightly as we rose above my office building. Once we were up the pilot seemed to dip the nose of the helicopter and we started moving forward. \n",
        "Mike turned his head and said, \"On the way back, we can leave the side doors open so you can see what we're flying over much better. I didn't want to scare any of you on your first time up, that's why I closed them.\" \n\nI looked at Kim and then at Beth and both of them had a certain amount of concern showing in their faces. I smiled and asked each one, \"Are you alright?\" Both of them nodded their head but neither of them was smiling. Both Beth and Kim maintained such a tight squeeze on my hands that when I looked at my fingers I noticed they were turning white. I tried to look out the window but my view was limited. Kim and Beth, I noticed, had their eyes closed. \n\nI looked around and saw Marion had a tight grip on Ted's hand and she had her eyes squeezed tightly shut also. \n\nThe helicopter turned to a direction that I knew would take us towards my home. The flight was smooth, and we had a chance to see the countryside from a new and exciting view. As I relaxed more I noticed that Beth and Kim were also relaxing. My hands started to get the circulation back and returned to a more normal color. \n\nThe pilot slowed down and swooped quite low over our house. Tony was in the yard, and waved at us. I didn't know if he knew who we were, but we were close enough he just gave us a friendly wave. \n\nNext the pilot took a gentle left turn and went over the ranch across the street. Mike turned around again and told us we would see more of that later. My curiosity was piqued, as the helicopter made a gentle turn to the right and flew up the road a few miles. The pilot slowed and brought the helicopter to a stop above a place I now recognized as what I thought was a sleazy biker bar. \n\nAs the helicopter intentionally lost altitude, I could see that the parking lot had a couple dozen motorcycles in the front of the building, and mostly pickup trucks in the parking spaces. There were a few SUVs and even fewer cars. Every vehicle I saw looked like it was either new or at least well maintained. \n\nThe helipad where we landed had three other helicopters sitting on it. One of them looked like what I'd seen in the war movies and I think they call them a Huey. One was obviously a gunship. That thing looked fearsome, just sitting on the ground. The last one was similar to the Huey, but it was painted with a shiny blue and gold paint scheme. It looked like a twin to the helicopter we were riding in. There was a logo behind the back door with the words \"Turner Security\" under it. I'd seen that logo, and I'd heard of the Turner Security company. \n\nThe pilot spent a couple minutes going through a routine of turning switches and checking gauges as she shut down the engines. I had noticed that the pilot was a woman with long red hair, but that was all I could tell, because she was wearing a flight suit and a helmet. \n\nWhen we had loaded up at my office, Mike had put on a headset with a boom microphone on it and I could see and hear brief portions of his conversations with the pilot. Her replies were muffled by her flight helmet. \n\nWe sat in the helicopter for a couple minutes. When the pilot finished her shutdown routine, Mike took off his headset, opened his door, and got out to open the back door on his side. \n\nThe pilot took off her helmet and shook out her long hair. We didn't get a good look at her till she got out and opened the other side door. I was immediately struck by her beauty. She was as pretty as Terri and looked a little like Martina McBride with red hair. If you put her and Terri together with a good fashion photographer, you could do a photo layout for any glamour magazine, or maybe a Sports Illustrated swimming suit edition \n\nBeth turned and looked at me, and Kim squeezed my hand as she looked at the gorgeous pilot. She couldn't help herself as she turned towards Mike and blurted out, \"Oh My God Mike! Your pilot is beautiful!\" \n\nBoth Mike and the pilot laughed and the pilot said, \"Why thank you ma'am. That's the nicest thing you've ever said to me.\" \n\nNow Joanna joined Mike and the pilot's laughter. She looked at us and said, \"What's the matter? Didn't you think a helicopter pilot could hear and speak? Or are you just surprised that she looks like a woman? Pilots don't have to be ugly old men, you know? \n\nTed was first to gather his composure. \"Judy?\" he said with more than a little surprise in his voice. \"Is that you with a different mask? I know you told us you could be someone different each time we saw you, but My God, you sure put on a change of scenery today.\" \n\nKim had recovered enough to talk by now. \"I'd recognize that voice anywhere, but that's a great disguise, girl. Can I get your mask maker to work one of those up for me?\" \n\nJudy laughed. \"Kim, I can ask Jesse to make you a disguise, but this one is reserved. My fianc\u00e9 told me this one is his favorite, and I don't want him to have to make a choice between you and me.\" \n\nMike interrupted the conversation. \"I hate to put a wet blanket on your conspiracy, but would y'all like to get out of the helicopter and follow me into the restaurant?\" \n\n\"Oh yeah,\" Kim responded. \"That might be a good idea\" \n\nMike and Judy gave each of us a hand as we stepped out of the helicopter. Mike led the way over to a set of double doors. They were mammoth slabs of solid wood, and the finish was beautiful. \n\nMike saw me do an extended look at the doors. \"If you like those doors, Dan, wait till you see the bar.\" \n\nAgain my curiosity was aroused. \"What is so special about the bar?\" I asked. \n\n\"Just walk in and feast your eyes.\" Mike replied. He stood and held the door for all of us to enter. \n\nI stopped at the doors and stepped aside for the ladies and Ted to walk in first. I followed them and Mike followed me as he let the big door close behind us. \n\nI walked in and straight over to the bar. \"Holy shit Mike, now I get it.\" I put my hand on top of the shiny wooden top. It was a forty foot long piece of wood six inches thick, and I could see a return about eight feet long on the far end. \n\nA tall pretty woman walked briskly over to speak to Mike. \"Your conference room is ready for you Marsh.\" She greeted him. \n\nMike put his hand on her shoulder. \"Ginny,\" he said. \"I'd like you to meet my neighbors, from across the street from the ranch. This is Dan Morrison, his wife Kim and his executive secretary Beth. Over there is his friend Sargent Ted Johnson and Ted's wife Marion. Last but not least, hopefully one of our new employees, Joanna Doyle. They all get the family treatment if and when they come back. Ted and Joanna are currently employed by the group that has been persona non grata around here; however they are welcome here any time.\" \n\n\"I'm glad to meet all of you,\" Ginny said. \"I'm Virginia Hastings, but I prefer Ginny. I hope you have an enjoyable lunch.\" She turned and led the way across the room and turned down the hallway to the right, stopping at an open door, and ushering us into a nicely set conference table inside. \n\nMike and Ginny had a short hushed conversation. Finally she spoke out loud, \"Whenever you're ready, boss man.\" \n\nGinny stepped out of the room and Mike came over to the table. He chose to stand behind the chair at the end of the table. Judy had chosen to sit at the end of the side of the table to Mike's right. Joanna sat beside her. Ted and Marion sat next to Joanna. Kim, Beth and I sat on the side to Mike's left. \n\nMike remained standing until all of us were seated. He took a deep breath and looked at Judy. \"Do you think we're ready for this, sweetheart? He asked her. \n\n\"As ready as we're ever gonna be,\" she answered him. \n\nMike pulled out his chair and sat down. \n\n\"Dan, I need to clear up a couple of details. Last night was the first time any of you met me. I am new to this geographical area. I was imported from Southern California to take over a group of businesses known as the Turner Companies. I was completely ignorant of the situation you have been through, till last week. My current partner was the driving force behind what happened at the show you saw a few weeks ago, and he and his granddaughter have been in charge of the security detail that you have been learning about in the last couple of days.\" \n\n\"This morning during our run I told Joanna the things I'm about to share with you. I asked her to come to lunch with us to help the rest of you work with the new facts.\" \n\n\"You already know my real name is not Mike. My mother named me Marshall Edgar Mitchel. I go by Marsh. I saw the look on your face, Beth, when you heard Ginny call me Marsh when she met us at the door. Ginny doesn't know that I've ever been \"Mike\", and if y'all can make the switch, I'd like it if you start using my real name, - Marsh. Unlike my pilot, I was not using a disguise when you met me. This is the real me. What you've seen is who I am.\" \n\n\"The beautiful red-head to my right is not Judy. This is the love of my life. She has been the chief pilot for the Turner Companies, and has developed a reputation in the shady underworld of mercenaries. She has been nicknamed, The Flaming Red Widow Maker. Please meet my fianc\u00e9, and executive vice president of the Turner Companies, Rebecca Andrews. She usually goes by Becca, and between the two of us, I did more of the destruction to your kitchen than she did. The blood pools were mostly from the intruders, but Kim was correct last night. One of them managed to get a blade on me, so there was a little of mine there. I really appreciate Joanna and the rest of your crew cleaning up after us. Part of my team carried me from your pond to the mobile ER, out on the road where my partner started the patch job. And just to clarify Becca is not wearing a disguise this morning. She's the real deal and Kim if you want a disguise we'll make you one but I'm keeping the original. Well, I guess I'll share the original with my neighbors.\" \n\n\"The Turner Companies include a rather significant group of mercenaries, providing security services to companies and a few small countries around the world. Please understand that I had nothing to do with establishing any of these companies. I'm a simple emergency room doctor that got caught up in a unique new field of medicine, and ended up attracting the attention of the founder of the companies.\" \n\n\"Dr. Turner tricked me into driving here from Southern California, and used the sneakiest trick in the books to get me to stay. Becca is the identical twin sister of my late wife, who was killed by a drunk driver four years ago. I'm not going to bore you with the long story. Short story is that I live across the street from you now, and I'd like us to be friends. I'll take you on a tour of some of our locations after lunch.\" \n\n\"Mike...uh... Dr. Mitchel...\" Marsh held up his finger and turned to a phone that was on a table behind him. He spoke to someone for a few seconds and then turned back to us. \n\n\"Let me tell you a little about The Hole. That's this restaurant. The Turner Company bought it several years ago after it burned down. It was rebuilt to serve the hundreds of employees that cycle through the area. Our employees spend time in a lot of different countries, and when they are here at our headquarters, and the local training facility, we like to make sure they are well fed.\" \n\n\"Chefs and cooks have been hired from around the world. Since we have transport planes coming and going from all over the world, on a daily basis, we also have foods brought in from all around the globe. Our chefs are trained to prepare any food you want, at any time of the day, 24/7/365. If you want Cheerios, you can have them. If you want steak and lobster you can have that. We get Maine lobster, Alaskan king crab, Rocky Mountain Rainbow trout, Pacific blue fin tuna, Wyoming Herford steak, or most anything else you can think of. And your meal will be prepared as you would like. If you would like Italian food, Oriental food, Greek, Mexican, and so on, two of the chefs will be in here in just a few minutes, and you can tell them what you would like. Whether it's a simple sandwich or a complex European dish, they will make it for you. You can even get a plain cheeseburger and fries, if you'd like. You call it.\" \n\nMarsh had just finished telling us about the food, when a man and woman in white aprons walked into the room. The man began by introducing himself. \"Good afternoon, I'm Jack Davis. I'm the head chef here at The Hole. This is Teresa Gonzalez. Her specialty is Mexican food but she can make almost any other dish you would like. We'd like to take your order and prepare your lunch.\" \n\nTed was the first person on his side of the table. \"Marsh said you have rainbow trout?\" He sounded a little tentative. \n\nTeresa smiled, \"Would you like that grilled or baked, sir?\" \n\n\"Ah, how 'bout grilled.\" Ted replied. \n\n\"Spicy or plain rub?\" \n\n\"I think I'll try the plain rub.\" \n\n\"Would you like tartar sauce, Hollandaise or just fresh lemon?\" \n\nTed smiled. \"Tartar sauce I think.\" \n\nTeresa smiled back at Ted. And would you like a vegetable with that, I have some really good asparagus and baby red potatoes, or some great fresh peas and carrots, and corn on the cob? \n\n\"Oh my, you want me to make so many decisions. Let's try the asparagus and red potatoes.\" Ted responded. \n\n\"No problem sir. Would you like something to drink? I have a nice white Pinot Noir if you'd like to try it.\" \n\n\"That would be fine.\" Ted replied \n\nTeresa went down the other side of the table taking orders from each member of our group, while Jack walked down our side. The fresh foods they offered and the drinks were amazing. I wondered how the food would turn out. \n\nWhen Teresa got to Becca and Marsh, they both ordered in Spanish. I could tell from her smile that Teresa was very pleased with that. I had no idea what they had ordered, but I was pretty sure I'd see it when it came out. \n\nI had decided to test them and ordered a steak and Maine lobster tail. Jack went through the sides and drinks and I felt like I was in a very high class restaurant. \n\nWhile we waited for our food, Marsh and Becca answered a lot of questions. I was impressed at how open and freely they answered us. \n\nBeth's phone rang while we were sitting at the table. She got up and left the room to take the call, and our conversation around the table continued. \n\nWhen Beth returned, I could see a genuine look of consternation on her face. Marsh saw it as well. Beth turned to me and tried to speak softly. \"That was the resort in Hawaii, Dan. They just had a fire and the bungalows we were going to stay in have been destroyed. What do you want me to do? \n\nBecca perked up. \"Excuse me, she spoke up. Did you say you just got bumped from a reservation in Hawaii?\" \n\nBeth sounded despondent. \"Yes. We were supposed to leave tonight and spend the weekend on the North Shore of Oahu. I don't think I can find a place that quickly at this point. I mean I know it's not their fault, a fire is not something you can preschedule, but we had six bungalows reserved for twenty some people.\" \n\nBecca had a huge smile on her face and I wondered what she was so happy about. She quickly ended my curiosity. \n\n\"As it happens, Beth, You came to exactly the right place. Marsh just happens to have just acquired a resort on the North Shore. He signed the paperwork yesterday. His partner bought it a few years ago to provide R &amp; R for some of his employees. There are almost always some openings. Let me make a quick call.\" \n\nBeth's face was a mixture of deep concern and shocked disbelief. \n\nBecca pulled her cell phone out of a pocket in her flight suit. After a short conversation with whoever it was who answered the phone on the other end, Becca covered her phone and asked, Beth, would eight bungalows that sleep four to six in each be enough? They're kinda off the beaten path, and the beach is kinda private, and you won't get to see throngs of almost naked women, unless you bring your own.\" \n\n\"Oh God, Are you serious? That would be awesome. We were going to be in six, four person cabins. It was supposed to be on a private beach also. How much will it cost us?\" Beth was in shock, and quite frankly I was more than a little surprised myself. These people were something else. \n\nBecca pulled her phone up to her ear again, and spoke to the person again. I heard her say, \"That would be great Leyanni. I'll give Beth your number and she can call you back in a little bit. Thanks girl, I owe ya one.\" \n\nBecca pushed the end button on her cell phone and turned back to Beth. \"Done deal. You're in the coconut grove, by the beach. There's a couple of surfing instructors and a couple of dive boats, with guides available to you during your stay. There are also a couple of conference rooms if you were going there for business. The main lodge has a cafeteria where you can eat, or there's a restaurant there almost the same as this place.\" \n\n\"You can give Leyanni a call after lunch, and tell her how many there are in your group, and what time your flight gets in, and she'll have helicopters at the airport to pick y'all up and take you to the resort. Will that cover it for you?\" \n\n\"Oh yeah, I should warn you.\" Becca added. Leyanni hates to wear clothes, so she has a couple of BIG guys that hang out around her, to discourage the Mercs from messing with her. I doubt she really needs the guys, 'cause she's a little package of hell on wheels. I think it's on account of her brother doesn't trust that she can defend herself.\" \n\nBeth's mouth hung open, and suddenly I realized mine was just like it. \n\nJack and Teresa broke the screaming silence in the room, as they pushed a couple of food carts in and began to serve our lunch. Everything looked and smelled fantastic. The lunch plates were placed in front of each of us, and while Teresa put the last three plates down, Jack poured the wines. Like at any fine restaurant, Jack asked each of the wine drinkers to smell the cork and he poured a very small portion for each to taste before he filled each glass. Each wine selection was a perfect match for the meal it was served with. This was a high class restaurant. \n\nJack and Teresa took the food carts out of the room, and Jack came back in a few minutes and asked if everything was alright. Did anyone want anything more or different? My food was cooked to perfection, and it looked like that was the case around the table. \n\nTed's face looked like he was close to ecstasy. I don't think I've ever seen someone look that pleased with their food. \n\n\"Dan, I hope your food is close to as good as this trout. This is the best fish I've ever tasted. The vegetables are cooked just right, and this white Pinot Noir sets it off perfectly. Marsh, I'm impressed.\" Ted was genuinely appreciative. \n\nMarsh smiled as he finished the bite of food he had just put in his mouth. He finished chewing and replied, \"Ted I can't take any of the credit for this. Yesterday was the first time I've been here, and I certainly share your assessment. Somebody did a great job hiring the cook staff, and the fresh food selection is fantastic.\" \n\n\"I'm going to be proud to share this establishment with my friends, but I'm pretty sure it's Dr. Turner's doing.\" \n\nI looked at Marsh. \"Marsh, can anybody show up here and buy a meal, or is it invitation only? I can see myself bringing my family and friends out here frequently if it's open to the public.\" \n\n\"Hmmm,\" Marsh mused. \"That's a good question, Dan. I've heard that the city police are generally not welcome. Present company excluded of course. This section of the county road isn't well traveled, as I understand it. I also have it on reliable information that the new owner is a friend of yours, so I suspect you and your family are on the preferred guest list. If you're not, I know you soon will be.\" \n\n\"And is there a menu, or a price list?\" Kim asked. "
    ],
    "authorname": "RecHiker",
    "tags": [
        "mother son incest",
        "mother",
        "sister",
        "voyeur",
        "father",
        "masturbation",
        "brother sister sex",
        "incest",
        "nudist",
        "exhibitionist"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/the-morrisons-ch-24"
}