{
    "title": "Played by the Billionaire",
    "pages": [
        "2This is my contribution to the April Fool's Day contest 2020. Please remember to vote at the end and thanks for taking the time to read. \n\nA special thanks goes to AussieGuy52 for editing this story.\n\nNote 1: This is a long story. Word count is 29k, so about 8 Lit pages. \n\nNote 2: The story is mostly a romance, but contains some Reluctance/Non-con which is the reason for the category choice.\n\nThemes: Mistaken identity, Alpha male, Best friend's older brother, Protector, Happily ever after, Billionaire romance, Office romance, Matchmaking, Pranks, Love triangle, Opposites attract, Unrequited love\n\n-------------------------------\n\nCopyright (c) 2020 Ada Stuart, All Rights Reserved.\n\nThis work may not be published whether for fee or free without this copyright. \n\n-------------------------------\n\n<center>***</center>\n\n<center>Chapter 1 The party</center>\n\n\"Your brother is gorgeous as usual, Lucy,\" Ava said to her friend and sighed at the same time. \n\n\"Which one of them?\" Lucy asked.\n\n\"Matt, of course. You know exactly what man is the centre of my universe. I think I'm in love,\" Ava had to admit as she stared longingly after the man that had been the focal point of her girlish infatuations for as long as she could remember. \n\nThe fair-haired man was oozing charm and attracting every woman in sight to stare at his handsome face. But Matt had always treated her like a younger sister, teasing and making light conversation the way he often did. \n\nIt was impossible not to like him, and his boyish good looks only added to the appeal. He made everyone around him feel happy, and Ava adored that quality in him. \n\nIt was so reviving to be in the vicinity of someone that felt like a warm sunny day when he turned his attention to you. Unfortunately, she was not the only one that begged for that attention. \n\nLucy laughed. \n\n\"Matt is his usual charming self. No change there.\"\n\n\"He's perfect.\"\n\n\"You're not the only one that thinks that.\"\n\n\"I know,\" Ava said while she watched the group of women standing close to her dream prince. \n\nHe seemed to bear the attention only too well. He was probably used to it, the way women seemed to be drawn to him like he was a magnet of some sort.\n\n\"I have another brother, you know,\" Lucy said cheekily.\n\n\"Where? I haven't seen Damon all day. Has he gone into hiding?\"\n\n\"No, he promised to stay all through the weekend. It's not every day his favourite sister turns 25, you know.\"\n\n\"I'm still surprised your parents allowed you to invite all your friends to their summer house,\" Ava said.\n\n\"That's why my brothers are here. To act as alibis and making sure that we don't tear the place down,\" Lucy said and laughed.\n\nThey had been best friend for many years, and after sharing an apartment they had become even closer. She knew Lucy was happy to be back home with her parents but celebrating her birthday with a large group of friends was even better. \n\nThe summer house was a typical detached house situated along the shoreline. Lucy's parents were well off, and they had several homes around the world. They didn't use them much, but they had spent several summer holidays in this house when they were younger. \n\nThere was a large living room in the middle of the house, and on each wing there was a long hallway leading to several bedrooms. Now that the place was packed, people were cramped together. Ava had been placed in Lucy's room, along with another girl. Still, it was worthwhile to sleep on the floor for a few days. \n\nShe wouldn't have missed this weekend for the world. If only she could get close to Matt, the weekend would be perfect.\n\n\"Well, we're 25, not 5. No need to worry,\" Ava concluded.\n\n\"Just wait until you see how much alcohol I've brought,\" Lucy said with a laugh. \"And you're helping me taste them all.\"\n\n\"Not a chance. I want a man, not a drink,\" Ava said easily.\n\n\"Why not both?\" Lucy suggested. \"With your looks, hon, you can pick anyone you want,\" Lucy said as she brushed Ava's long brownish hair away from her shoulder.\n\n\"Both sounds even better,\" Ava said and grabbed her friend's arm so they could join the rest of the party.\n\n<center>***</center>\n\nA few hours later, the party was well underway. Everyone seemed to be enjoying themselves, and Ava could hear lots of people talking and laughing in between the music. At the other end of the living room, some people had even started dancing.\n\nThey had to move several large sofas to create the space, but it seemed to be very successful, allowing the people that attended dancing classes to show off their technique. Ava was not one of them, and she had briefly considered accepting a proposal until she realised they were dancing salsa. \n\nThat was way beyond her abilities, so she had reluctantly turned down the man's offer and asked if he could invite her when next there was a slow one instead. That was more suitable for her dancing skills. Besides, if she ever tried dancing salsa, she would probably cause more damage to the people around her than to herself.\n\nLucy was enjoying her party and dancing elegantly with the man Ava had turned down. She would not see more of him this evening, judging by how well he got on with Lucy. Oh well, Lucy was her best friend and she deserved to enjoy her birthday party. \n\n\"Ava. Come and dance with us,\" Lucy shouted and waved at her to come closer.\n\nAva just shook her head and lifted her glass to indicate she was happy where she was. It was not a great loss. Ava only had eyes for one man, and Matt hadn't noticed she was here. She sipped her drink and looked around for his fair hair and listened for his laughter. It was easy to spot him, or at least the crowd that surrounded him. \n\nShe hadn't got any chance to talk to him yet, but that was no surprise. He was constantly bombarded with female attention, and this party was no exception. Matt was his usual self. She wondered how she could ever get close to Matt and talk to him? Maybe it would have been easier if she tried during one of their family dinners that she sometimes attended. \n\nStill, to start flirting with a man in front of his parents didn't feel right. Ava was not that outgoing that she felt comfortable doing something like that. She did have some experience with men, but it was usually they that took the initiative. In Matt's case, he didn't need to make any effort. The women seemed to throw themselves at him, so he only needed to catch the ones he wanted.\n\nIf she was smart, she would have admitted defeat a long time ago and moved on. Trying to find another man to fall in love with. It would be much easier. She allowed her eyes to search through the crowd, trying to picture herself in the arms of any of the other men. No, there was no reaction in her body to any of them. Too bad. \n\nSeveral of them were friendly and good-looking, but compared to Matt, they could never compete. She had talked to several of them during the day and particularly to his good friend Peter. He was a good man and she enjoyed his company, but he could never be anything more than just a friend. \n\nShe had seen in his eyes that he had wanted more, but luckily he had never pushed the issue. She was grateful for that. It always felt terrible when she had to turn someone down. It was easier to make it evident that they were only friends and hope that the man took the hint.\n\nShe emptied her glass before grabbing a few empty bottles from the nearest table and carried them into the kitchen. With so many people around, it would take some effort to clean up after them. Which made it preferable to tidy during the party instead of postponing it all until the morning after. \n\nAfter all, she had volunteered to help Lucy with the tidying after the weekend, and she doubted that there would be many others that would volunteer.\n\nAs she walked into the kitchen, she saw the broad back of Lucy's elusive older brother, Damon. He was just as handsome as Matt, but he was a more masculine version of his younger brother. He was dark-haired with a taller and broader body compared to Matt. Based on looks alone, Damon had the upper hand, but in personality, they were complete opposites. \n\nMatt was outgoing and friendly while Damon was silent and controlled, barking out orders and expecting them to be fulfilled at every turn. He had a presence that made everyone aware of him and most people quickly realised that he was the last person you wanted to come up against. \n\nHe could be charming when he wanted, and Ava had always been amazed about the transformation in his face when he smiled. Still, when placed beside Matt, everyone's attention turned to the younger, more easy-going brother. At least they did in a party setting like this.\n\nAva had never got to know Damon well. She had been friends with his younger sister since they were kids, but since he was six years older than Lucy, he had always acted the mature, conservative type that scowled and reprimanded them whenever they did something stupid. In the absence of their parents, he was the father figure and the natural leader just like any other older sibling.\n\nLucy loved to tease him while Ava had always thought he was a bit scary and too grown-up to make fun of. Still, as she grew older, she had become more appreciative of his qualities and the calm that seems to emerge just knowing he was around and took charge. \n\nIt was no wonder he had built his own company and seemed quite successful about it. She could easily imagine his staff running around like minions whenever he gave an order. The man was so controlled that he probably needed to chill out more. \n\nAccording to Lucy, he was more bark than bite, so she felt an inevitable need to nudge him a little and see if she could bring forth a smile on his face.\n\n\"So this is where you're hiding, Damon?\" Ava asked cheekily as she looked at Damon's shirt-clad chest. \n\nHis expensive clothes didn't quite fit into the kitchen duty, and she noticed that he had unbuttoned the upper three buttons in his shirt, revealing some tanned skin and a muscled chest. \n\nHmm, nice, she thought. No wonder he's hiding out here. He was probably trying to avoid the more ambitious women that wanted a share of his wealth and his masculine body.\n\n\"Someone has to make sure people are fed,\" he said. \"Lucy could at least have included a few staff-members as well if she had bothered thinking.\"\n\n\"Why do that when she has brothers? Hah, just admit that you're hiding from the single women. No, wonder. You do look nice and yummy today,\" she said teasingly.\n\nHe snorted. \"What do you want?\"\n\n\"Hey. At least I'm doing my share,\" Ava said while she placed the empty bottles in the box.\n\n\"Fine. Just spread the word to the other lazy bastards. I have more important things to do than clean up after a bunch of featherbrained butterflies.\"\n\n\"I thought you were here to celebrate Lucy's birthday?\"\n\n\"Some of us actually work for a living instead of sucking up to parents and posting nude pictures on YouTube,\" he said and gave her a hard look.\n\nShe knew he had recognised some of the local celebrities that desperately tried to make a name for themselves by undressing in front of a camera.\n\n\"Ah, I guess you've seen the guest list?\"\n\n\"Parasites,\" he said harshly.\n\n\"Lucy invited them, so she likes them well enough.\"\n\n\"Some people need to get a decent job and start living in the real world.\"\n\n\"I will do that as soon as I get a job,\" Ava retorted.\n\n\"And when is that? After you've spent the allowance your parents gave you? Or are you going to be a party-girl like some of those lazy friends of yours?\"\n\nDamon was always challenging Lucy and Ava to do something more than just live on their parents. Ava knew he meant well, but it could sometime come off as rough and annoying. Like now.\n\n\"Damon, relax. This is just a party weekend, so you don't have to nag on me before Monday.\"\n\n\"Well, someone needs to kick you in the butt once in a while.\"\n\n\"Have you forgotten that I've just finished my studies? I will find a job, but I don't have to starve while I do that.\"\n\n\"Don't tell me you've found a nice sugar daddy to buy jewellery for you?\" he asked suspiciously.\n\n\"A sugar daddy?\" Ava laughed heartily. \"Why, Damon? You have a dirtier mind than I suspected,\" she added cheekily.\n\nHe just lifted his eyebrows and challenged her to answer him. His arms folding in front of his muscled chest, making him seem even larger than before. She wanted to just bow her head and escape his scrutiny. He seemed to see right through her and see all her weaknesses. \n\nShe lifted her chin and looked him straight in the eye. She wasn't a little misbehaving girl anymore, and she was not going to bend to his bullying.\n\n\"Absolutely not, Damon. I want a handsome man, not an ugly one that needs to pay for his pleasure.\" \n\nShe shuddered as she pictured herself in bed with a man thirty years older than herself. Nope, never going to happen.\n\n\"Then you're barking up the wrong tree. Matt won't inherit until he's 30.\"\n\n\"Oh, I don't care about his money. There are more basic needs that take priority and must be fulfilled first.\" \n\nShe grinned at him and gave him a wink. She had never talked like this to him before. It had to be the alcohol that gave her the added confidence to tease him and wait for him to react.\n\n\"So good looks is the most important feature in a man?\" he asked icily.\n\n\"No, I didn't say that. I was using another part of my body when I came to that conclusion.\"\n\nHe carefully studied her body, letting his eyes rest on her breasts for a moment too long. She could feel her heart rate jump as he seemed to judge her the same way he would judge a racehorse before he started bidding for it. Ooh my, she thought. Where had that idea come from? \n\nShe had better stop at once and rein in her stupid thoughts. This was Damon, the parent-substitute. Always treating her like a silly child instead of the grown woman that she had become.\n\n\"Don't forget to use your brain when choosing a man, Ava.\"\n\n\"I'm not a teenager, Damon.\"\n\n\"I know that. But you can still do stupid mistakes that cannot be undone.\"\n\n\"Yes, yes, Damon. I'm behaving. Just watch me.\" \n\nAva grinned at him, feeling the buzz from the alcohol reduce her nerves in front of his stern look.\n\n\"You should take care, Ava. Matt's attention seems to go in another direction,\" he said.\n\n\"Thanks, Sherlock. My eyesight must be declining since I didn't notice that. I don't care. He will come around once he's ready to settle down.\"\n\n\"He will never make you happy, Ava. You're too different. You should look elsewhere.\"\n\n\"Oh, should I?\"\n\n\"Yes.\"\n\n\"Sure. I can always go to a bar and pick up a new hotshot every weekend. But no, not my style. Besides, some of those hotshots are probably just lousy in bed.\"\n\n\"Practise makes perfect, they say.\"\n\n\"So does STD's.\" She giggled loudly.\n\n\"Just be careful,\" he said and gave her a stern look.\n\nThat sobered her.\n\n\"About what?\n\n\"Too much alcohol can lead you to a pity fuck instead of the one you want.\"\n\n\"You're not my brother, Damon. I'll do what I want.\"\n\n\"I can still put you over my knee if you do something stupid,\" he said in a voice that sounded like a warning.\n\nShe retreated a few steps and laughed at his words. She lifted her finger and waved it in front of him as if to say 'No'.\n\n\"Ha! You will never dare to do such a thing, Damon, so it's no use giving empty threats.\"\n\n\"Just keep that in mind, and we won't have to find out what I dare or not.\"\n\n\"Huh,\" she said and turned to walk away from him.\n\n\"What sort of job are you looking for?\" he suddenly asked.\n\n\"A normal job with a paycheck once a month. I'm not turning to striptease or sugar daddies yet,\" Ava said.\n\n\"Give me a call before you become desperate.\"\n\n\"What for?\"\n\n\"I might be able to help.\"\n\n\"With a decent job or offering something else?\" she flung at him.\n\nHe stared at her as if he was contemplating how much she could handle.\n\n\"A job. A normal job where you can work your ass off for little money.\"\n\n\"Doesn't sound very tempting. Maybe I prefer the sugar daddy, after all.\"\n\n\"It's the reality, and it's about time you face it instead of acting like a pampered princess.\"\n\n\"No, thanks, Damon. Don't wait up for my phone call,\" Ava said while she grabbed the nearest plate with food and started carrying it into the dining room.\n\n\"It's better than selling your body.\"\n\n\"I wasn't planning to do that.\" \n\n\"You might reconsider when you need the money,\" she thought she heard Damon say behind her. \n\n\"Never,\" she said haughtily.\n\n\"Ava?\" He raised his voice slightly. She stopped and turned around. \"Can you promise to call me before you do something stupid?\"\n\n\"I'll think about it,\" she said as she left him.\n\nAs Ava returned to the party, she walked over to Lucy.\n\n\"How come one of your brothers got all the charm, and the other didn't get any?\" she asked her friend.\n\n\"Have you spoken to Damon?\" She laughed. \"What did he say this time?\"\n\n\"He threatened to spank me and offered me a job.\"\n\n\"Nice. You should accept both.\"\n\n\"Yes, as if I've always wanted to know what a good spanking feels like. I don't think so.\"\n\n\"Why would he offer that?\"\n\n\"I got a lecture on STD as well. And alcohol.\" \n\n\"Don't worry. It's Damon's way of saying that he cares.\"\n\n\"Yes, he's probably adopted me as a kid sister by the sound of it.\"\n\n\"Oh, I wouldn't be too sure about that. What kind of job? Anything interesting?\"\n\n\"Desk job, I guess. He mentioned low pay and plenty to do.\"\n\n\"Still, it's easier to land a job if you already have one. But he didn't offer anything more interesting?\"\n\n\"Nope. Only warned me away from sugar daddies. He takes immense pleasure in insulting other people.\"\n\n\"No, he usually doesn't care enough to do that. I think he likes you.\"\n\n\"I don't think so. He turned almost sickly green when I mentioned getting a job as a stripper.\"\n\nLucy laughed. \"Oh boy, I wish I could have seen that. But there might be another reason why he didn't like that idea, you know.\"\n\n\"I know. But those things require plastic surgery, and I need a job to earn that sort of money.\"\n\n\"No, I think he wanted a private show.\"\n\n\"Excellent. Easy money, here I come,\" Ava said ironically as she grabbed her friend's arm and pulled toward the rest of the party. \"Come along. I think I need another drink after the thought of undressing in front of Damon. He would probably laugh his head off if I did.\"\n\n\"Let's get one of those umbrella drinks first,\" Lucy said.\n\n<center>***</center>\n\n\"I didn't know you were into BDSM, Damon?\" Lucy said as she entered the kitchen a while later.\n\n\"What?\"\n\n\"Ava wasn't exalted by your charm, you can safely say.\"\n\n\"Charm can only get you so far.\"\n\n\"Matt seems to be doing all right.\"\n\n\"Yes, I've noticed,\" Damon said and concentrated on putting away the clean dishes.\n\n\"It might work better if you tried to charm her instead of threatening to spank her.\"\n\nDamon just gave his sister a stern look before he continued on his task.\n\n\"Stay out of this, Lucy.\"\n\n\"And let you make a mess of it all?\"\n\n\"That's my decision.\"\n\n\"No wonder you're single, Damon. Most women prefer to be wooed, not spanked.\"\n\n\"It was a bit of friendly advice, that's all.\"\n\nLucy laughed.\n\n\"Nice try, bro. I've never had any of my male friends offer to spank me before. Unless they wanted something else entirely.\"\n\nDamon ignored her.\n\n\"All right. Have it your way. Let's just hope that it won't take too many years before her attention turns from Matt to you.\"\n\n\"Forget it, Lucy. She's not interested anyway.\"\n\n\"You have to make a bigger effort then, so she knows you're interested. Right now, she doesn't even know about it.\"\n\nShe could see that her brother seemed to understand that. The stubborn fool. With his pace, he would never get anywhere. Maybe it was time to give them both a little push in the right direction, Lucy thought. ",
        "Otherwise, they would still be at the same spot ten years down the road. Dropping hints didn't seem to help any of the blockheads.\n\n\"Besides, she's single now. How long do you seriously think that will last?\"\n\nJudging by Damon's expression, he seemed well aware of the fact.\n\n<center>***</center>\n\n<center>Chapter 2 A lover in my bed</center>\n\nLater in the evening, Ava knew that she'd had too much to drink. Her head was spinning, and what was immensely funny an hour ago, was just making her fall asleep. She had tasted a lot more of the colourful drinks than she had initially intended. \n\nHer conversation with Damon had probably been the main reason why she had drunk too much. The reminder about her future and the need to find a job had been lurking at the back of her mind. \n\nCombined with the unsuccessful attempts to gain Matt's attention, the evening had been long and tedious. It was time to head for her bed before she fell asleep on the floor or on the sofa she was currently sitting on.\n\n\"Hey, are you sleeping?\" Lucy asked her as Ava leaned heavily on her friend.\n\n\"I'm not feeling too well, Lucy,\" Ava admitted.\n\n\"Come here,\" Lucy said. \"I'll take you to your room.\"\n\n\"Thanks.\"\n\nAva got to her feet and closed her eyes while Lucy steadied her.\n\n\"I will never have a chance with your brother,\" Ava said remorsefully to her.\n\n\"What makes you think that?\"\n\n\"He doesn't see me.\"\n\n\"Oh, I think he does.\"\n\n\"You're always so optimistic, Lucy.\"\n\n\"Just wait and see.\"\n\n\"It's pitch black in here. I can't see where I'm going,\" Ava said, and she leaned against the wall in the hallway.\n\n\"The lightbulb must be broken. Never mind, I know the way,\" Lucy said as she steered Ava further down the dark hall. \"Here you are,\" Lucy said and opened a door. \"Just get undressed and lay on the bed. I'll take the floor unless I get lucky.\"\n\n\"Thanks, Lucy. You're a good friend,\" Ava said.\n\n\"Sleep well,\" Lucy said and closed the door behind Ava.\n\nThat made the room seem even darker than before, but it didn't matter. Ava started to remove her clothes until she was completely naked. She still felt warm all over, but that was probably due to the amount of alcohol she had consumed. \n\nShe might regret this tomorrow, she thought, as she stumbled across the room and found the bed. She lifted the duvet and lay down underneath it. It felt warm. This was nice, she thought as she closed her eyes and rolled herself further underneath the duvet.\n\nShe moved her arm to locate the wall beside the bed. The duvet and the sheets were even warmer here. She sighed contently as she rolled to the side. \n\nSuddenly she met warm skin. Another person. What? She barely registered until she heard a man's voice.\n\n\"What are you doing?\"\n\nHe sounded sleepy, but she recognised that voice. It was Matt's. Holy crap, she thought. He must have gone to bed while she was drowning her sorrows in liquor. \n\nWhat luck. Ava snuggled closer to his back, spooning his larger body against her chest, knowing he could feel her breasts against his back. He gasped and started to turn away from her. \n\nShe didn't like that. This was her perfect opportunity, and she intended to use it. She placed her arm around him, spooning her naked body closer to his while she moved her hand across his chest and further down to his stomach.\n\nHe seemed to freeze instantly, and it sounded as if he had stopped breathing. \n\n\"Who are you?\" he asked and tried to turn to her.\n\n\"Just relax and enjoy,\" she said as she slid her hand down to his dick and started to explore him. \n\n\"Ava?\"\n\n\"Oh, yes,\" she said in agreement to his question. \n\nHe recognised her, and he was alone. Fantastic. Maybe this day didn't turn out too bad after all. She slid her hand across his skin, trying to feel as much of him as she possibly could. \n\nShe had been dreaming about this for such a long time, and now she was going to indulge herself. He was naked all over and more muscled than she had anticipated. \n\nShe saw Matt without a shirt on last summer, but he seemed to have added a fair share of muscles since then. He was gorgeous, she thought. Absolutely gorgeous. But what was he doing in Lucy's bed? \n\nThen it dawned on her. Lucy had led her to the wrong bed. \n\nOr the right bed once she thought about it. Lucy knew how she ached for her brother's attention. Now, that was something a good friend would do. \n\n\"What are you doing here?\" he asked.\n\n\"Fulfilling my fantasy,\" she said truthfully.\n\nShe wasn't going to waste this opportunity, and she placed her hand around his dick and squeezed slightly. She felt how he hardened against her palm, increasing in size and feeling how his shaft filled with blood. He groaned deeply. \n\n\"Ava,\" he murmured. \"Shit. I must be dreaming.\"\n\nShe chuckled.\n\n\"Feels real enough for me,\" she said as she moved her hand along his hard shaft. \n\n\"Fuck. Don't...\" he started, but his words stopped as she squeezed her hand around him. \n\nHe made a loud moan as he pushed his shaft forward and into her hand. She held on to him while she started kissing every part of his skin that was within reach. It was intoxicating to feel his warm skin against her lips and the slightly salty taste of him. \n\nHis scent was masculine and fresh at the same time, she could feel the strength within him even though he allowed her to do what she wanted. Oh my, this was heaven, she thought as she felt her brain prepare to have a meltdown from pure happiness. \n\nIf she had known he was in bed, she should have stopped drinking an hour ago and joined him instead. This was all her dreams coming true at the same time, and she wanted to take as much as she could from this night. \n\nIt might not be a repetition any day soon unless she could do something he would not expect. Something that would make such an impression on him that he would want more.\n\n\"Let me pleasure you,\" she said.\n\nShe giggled as she had an excellent idea on how to leave a lasting impression on his mind. She lifted her body and leaned over him. She pushed him over to his back before she leaned further down and held his dick in her hand. \n\nLicking her lips, she bent her head and took him inside of her mouth and started sucking. His reaction was instant. A whoosh of air came from his mouth, and his entire body shook. \n\nShe could feel how shocked he was at her action. She had definitely managed to surprise him, and she smiled around his wide cock as she congratulated herself on that small victory.\n\n\"Oh, fuck. Yes,\" he wheezed out before he lifted himself slightly to push himself deeper into her mouth. It was as if he couldn't resist, couldn't hold back his movement. \n\nShe placed her hands on his hips to prevent him from pushing too hard. She didn't want to gag and judging by his size, there was a high risk that she would. She worked his cock, tasting and sucking until she thought he would beg of mercy. He wouldn't forget this encounter anytime soon, she hoped. \n\nSuddenly he grabbed her under her arms and flipped her down in the bed, before leaning over her. He dove in, his lips meeting hers as he kissed her hard. \n\nHe was obviously done with being on the receiving end and wanted to run the show instead. It was a dominant side of him that she had never anticipated, but it was intensely sexy.\n\nShe felt a sudden sparkle start inside of her belly, heating her entire body to his touch and making her spread her legs wider to wrap around his back and pull him closer. \n\nOh god, how good it was to feel him against her. Towering above her and protecting her from the cold air that surrounded them. She arched into him, pushing her breasts against his chest as she wordlessly pleaded for him to do more, to give her whatever she needed. \n\nShe whimpered in distress as his lips left hers, and he started kissing a trail down to her breasts.\n\n\"Please,\" she said out loud before she could stop herself. \n\nHe chuckled at her admission, rejoicing in her submitting to his touch. He pushed his hard dick against her thigh, and she moved her body slightly so that he rubbed against her centre instead. She wanted him so badly, she acted on pure instinct. \n\nShe grabbed hold of his waist, and held him close, trying to make the strong man obey her wishes even if she knew her strength was nothing compared to his. All she could do was to use her body to tempt him into giving her what she wanted. What she desperately needed. \n\nShe whimpered in distress as he took his time, moving his fingers slowly across her clit and heating her body to even higher levels. She felt as if she was about to self-ignite. Feeling as if her brain cells had shut down and gone on strike, while everything inside was focused on her basic needs. \n\nShe could feel her arousal pour through her in wave after wave as she knew she was wet and ready against his finger. She could hear the sound of her inner liquids as she rubbed her thigh against his, feeling his hairy legs against her softer skin. \n\nOh my, he was a grown man and one that she had always wanted, always longed for. To lay naked beside him, underneath him while he pleasured her body was definitely an erotic dream coming true. \n\nFor a brief second, she wondered if she was actually dreaming the whole thing or if this was reality. But then she felt his hard dick against her pussy as he started to push inside. She lifted her lower body toward his, spreading her legs wider as she welcomed him inside. \n\nThis would feel so good, she thought, until she felt the pain start as he pushed deeper and faster than she was prepared for. She froze and yelped in pain as her body protested his invasion. She had had sex before, but it had never felt like this. As if he was too large for her to be able to accommodate him.\n\nHe slowed down immediately. Pulling back to relieve her pain. She held on to him. She did not want him to go anywhere.\n\n\"I'm sorry, Ava. I should have been more patient,\" he said before he kissed her lips.\n\nShe wrapped her arms harder around him. She wanted this man. Wanted him so badly. She tried to relax all her inner muscles, feeling as her body started to heat again after the pain had shut her down. \n\n\"Don't go anywhere. I want you,\" she said.\n\nShe moaned contently as he kept on kissing her, moving his hands along her thighs and up to her nipples, fondling them before he squeezed them slightly. \n\nShe felt a new spurt of liquid gather in her channel, coating the way for him. She lifted herself toward him, inviting him to come further inside. She could feel his dick pushing deeper inside of her.\n\n\"Damn, you're so tight,\" he groaned as he let go of her lips and retreated slightly.\n\nImmediately she tightened around him, didn't want him to leave. Seconds later, he plunged inside of her again, one inch deeper than before, but this time the pain had subsided, only to be replaced by the sheer desire to be filled completely. \n\nIf any of her lovers would ever be able to fill her, this was the man. She moved her hands further down his body, wanting to feel where they were connected and trying to decipher how many inches he had to spare. \n\nWould he be too long for her, she wondered? Or would she be able to take every inch of him inside? She squeezed her hands around his shaft and smiled as she heard his groan.\n\n\"Careful,\" he said, as he slowly pushed inside of her again. \n\nSuddenly, he seemed to remember something, and he almost jumped away from her.\n\n\"Damn it,\" he said and retreated from her. \"I forgot the condom. Don't go anywhere.\"\n\nShe chuckled. As if she had any intention of going anywhere now that she had everything she wanted within reach. Soon after he returned and she heard the sound as he ripped open a package and sheathed himself. He lifted the duvet and lay between her legs, covering them both with the warm cover.\n\nThe warmth from his body was making her feel warm and cherished. She widened her legs and felt how he entered her, pushing his large dick deeper inside of her tight channel. She wanted to see him. Wanted to look into his eyes as his face glazed over with the need to possess her. \n\nInstead, she listened to the sound of their breathing and heard his groan as he brought them both closer to the pleasure that they wanted. The room was so dark she could not make out his features, but it didn't matter. She could feel every part of him as she spread her legs and felt him push directly against her g-spot. \n\nShe moaned and tried to hold him and prevent him from moving at all. She desperately wanted him to push more against her best spot. Then he started fucking her. Slowly, pushing inside of her, before retreating. At first, ever so slowly that she wanted to scream in frustration. \n\nGradually he started to go deeper as her body coated his way, longing for each plunge and protesting every time he retreated. Only to feel him return deeper and faster than before. He was amazing, Ava thought briefly. \n\nThe way he interpreted her every sigh and moan and translated it into motions that increased her pleasure at every turn. It shouldn't be possible to find a bed partner that was so attuned to her needs. It was a clear sign that they were meant to be together. Just like she had always known. \n\nShe held on to him, not willing to let go and feeling her climax coming quicker than she had anticipated. She was going for it, and nothing could prevent her from it. She arched her body to meet his every thrust, trying to get the maximum pleasure from every plunge that he did. \n\nShe tightened around him. Forcing every muscle along the walls of her sheath to cling to him, making him feel how good he was inside of her. How he belonged there.\n\nIt could not last long. It was inevitable that something would snap, and she could feel her entire body starting to shake in the effort of holding back a little longer. To enjoy the pleasure of him for a short while. She gasped deeply as she felt her climax approaching, wanting and both dreading the event as it would mean the intense pleasure would increase and stop. \n\nShe grabbed hold of his buttocks and rubbed herself against him, tilting her pelvis at the same time. He answered her silent plea and pushed deep inside of her before he stayed there, allowing her to use him to gain her release. The feeling was exquisite, and she tightened around him as she fucked herself on his hard shaft. Feeling the intense delight as he rubbed against her g-spot. \n\nImmediately, her body started to plunge into a deep release. She moaned loudly as she bit her lips to hold back the scream that wanted to come out. She felt her entire body shake as contractions poured through her lower body. A deep sense of contentment settled inside of her as she enjoyed the intense orgasm he had given her.\n\nHe retreated and plunged deep inside of her, fucking her harder and faster as he pushed toward his own release. She held on to him, wanting him to get as much pleasure as she had just had. Tightening her inner walls around his dick as he took what she offered. \n\nShe could hear the sounds he was making, knowing that he was getting closer. Listening to his breathing as he opened his mouth to take in enough air.\n\n\"Ava. Oh god,\" he blurted out as he pushed inside of her, holding her tightly as he groaned softly into her ear. \n\nShe held him in her arms, her legs still wrapped around him as she tasted the utter enjoyment of sharing her body with the man that she had wanted for so long. It was perfect. So perfect. \n\nHe kissed her deeply. Taking his time to explore and tease her lips in a light and playful way. Now that they were both content, it seems to be time to just enjoy and feel his warm skin against hers. She could still feel his dick being deep inside of her, but she wasn't going to complain at all. \n\nHe would probably pull out as soon as his erection softened. Ava wished he could just stay inside of her until he hardened again. It had felt so good with him, she wanted to repeat the pleasure as soon as he was able to. He seemed to have a similar idea, and he laughed as she giggled when the stubble on his cheek tickled her lips.\n\n\"Amazing,\" he murmured. \"You feel just as amazing as I've always dreamed you would.\"\n\n\"Hmm, and how long have you had this dream?\" she asked lazily.\n\n\"Too long.\"\n\nShe held him tight as she listened to the sound of his heartbeats, kissing his chest and feeling his chest hair against her lips. Hmm, strange, she thought. She had always thought Matt didn't have any chest hair, but clearly, he did. It was not a lot. Just enough to tease her lips and prove that he was a man and not a boy anymore. Sexy, she thought. It was just hot.\n\n\"Oh, Matt,\" she sighed deeply as she kissed him again. \"That was fantastic.\"\n\nShe could feel how he stiffened, and an eerily sense of something terribly bad invaded her mushed brain.\n\n\"Matt?\" he asked, his voice cracking slightly. He sounded as if he couldn't believe what he had heard. \"Shit! Do you think I'm Matt? Fuck.\" \n\nHe sounded agitated, even if he had just released his load inside of her body. Or actually inside the condom, but still. \n\nShe froze too and gasped out loud. \n\nHe wasn't Matt? Then who the hell was he? And he still had his dick deep inside of her body.\n\nShe whimpered in distress. It felt as if a large bucket of cold water had been flushed into her veins, making her feel cold all over her body. The warm encounter had suddenly turned into something completely unexpected, and she failed the grasp the consequences.\n\n\"Oh shit,\" he said, and she would have said the same if she could get her tongue to work. \n\nInstead, she just opened her mouth, but no sound emerged. She probably looked like a fish out of water.\n\nQuickly, he moved away from her body, and she felt a puddle of warm liquid escape her channel. All the sex liquids she had produced to allow him to enter her. It felt strange now to become aware of something like that when she could barely breathe. \n\nWho was he? She felt her stomach turn over in shock as she frantically tried to understand what had gone wrong. She had been so sure. She had heard his voice, and there was no one else that sounded like Matt, except...\n\nA shilling sense of disaster flushed through her. She heard him turn on the light. Her eyes blinked and tried to get used to the light, taking in the large naked body of the man she had just attacked in his sleep and fucked senseless. \n\nHe turned around to face her. Her eyes widened in shock. \n\nIt could not be. It was impossible. Ava gasped as she roamed her eyes over the naked and semi aroused body of Damon. \n\n\"D-D-Damon?\" she asked as she grabbed the sheet and hid her body from his eyes. \n\nShe gasped again as she took in the size of his dick. Even though he wasn't fully aroused, she could still see why it had been so painful when he had entered her.\n\nEntered her? \n\nOh my god, she thought. Damon had touched her entire body, feeling her every response as he made her orgasm with him lodged deep inside of her. She placed her left hand in front of her mouth to prevent the sound of distress from erupting. What had she done? And what had he done? \n\nIt was not supposed to be like this. She wasn't supposed to be in his bed. It was the wrong one and the wrong man. Definitely the wrong man. Oh my god. \n\nHow could she ever hide something like this from Matt? How would Matt ever give her a chance if he knew she had slept with his older brother? She was doomed. This was all wrong.\n\n\"No, no, no,\" she said weakly as she stared at him. \n\nA flash of pain was evident on his face at her words. He was probably just as shocked as she was. \n\nExcept... Her muddled brain was trying to work it out for her. He had said her name. He had known who she was all along, and he had accepted it. Why?\n\nShe knew that her mouth was open, but the shock was too big to control herself. Oh my god, she thought. What had she done? She had been so sure he was Matt. ",
        "She could feel the remnant of the orgasm she had just had and as her eyes quickly moved over his body and could see that his naked body was just as well-toned and muscles as it had felt.\n\n\"Dammit! You knew it was me. You had to know this was my room,\" he growled even if his voice cracked a little at the last word.\n\nShe just shook her head, unable to say the words out loud. Wanting to fall into a hole in the floor and just disappear completely. \n\n\"Then what the hell are you doing here?\" he asked in an angry voice. \"Crawling naked into a man's bed and begging him to fuck you tend to give that result,\" he said harshly.\n\nHe finally seemed to be himself again. The tender lover had been replaced by the infuriating man that he usually was. His words cut into her like knives. \n\nShe knew he was right. She had been very persistent, almost to the point where she had practically forced him. Or to be honest, she had pushed him until he didn't want to resist any longer. \n\nForcing him to fulfil her wishes even if he had not wanted it to start with. She felt like the lowest of creatures. She had taken what he did not want to give. What did that make her? A slut? Or something much worse?\n\nHer stomach seemed to somersault in reaction. She felt sick. He had warned her about drinking too much, and now she had proved to him that she hadn't listened. She felt ill and embarrassed beyond everything. \n\nWhy couldn't she just faint like they women did in the movies? Escaping the most embarrassing moment in her life by going unconscious? \n\n\"Damon. Oh no. I'm so embarrassed. I'm so sorry,\" she blurted out and knew that her entire face had turned a rosy colour. \"I didn't mean for this to happen. Oh shit.\"\n\nShe glanced briefly at him, wondering why he just stood there as if he had taken a punch to his stomach and was feeling the pain spread from the injured area. \n\nHis shoulders slumped forward, and he supported himself against the wall. Then he turned away from her as if he couldn't bear to look at her. It made her feel even worse, to know that her actions had caused him pain. \n\nHe probably felt forced. It had never been her intention to do something like that to him. He was a decent man, and he didn't deserve any of this. He was annoying, but his warnings had only been given to guide her and prevent something like this from happening. \n\nShe put her hand in front of her mouth and gasped again. At the same time, she felt as if her stomach was trying to switch place with her throat. She whimpered as she knew what was coming. \n\nQuickly she sat up and tried to force back the queasiness. The abrupt movement only made it worse. She glanced over at Damon but knew it was too late. She turned to the side of the bed and threw up onto the floor. Her entire body heaved as she threw up everything she had been drinking and eating for the last few hours.\n\n\"Oh crap,\" he said and came closer. \n\nShe felt him collect her hair and hold it away from her vomit. She coughed, and more vomit forced its way out from her stomach and up her throat. Her body wretched, but nothing more came of it. She lay flat on her stomach. Feeling sicker than she had ever felt before and knowing that she had really messed up this time. \n\nShe closed her eyes and hoping to wake up when everything had returned to normal. If they ever would.\n\nSuddenly she realised that Damon stood before and was washing her mouth with a wet cloth. She welcomed the assistance and soon after a glass of water appeared in front of her. He must have collected it from the bathroom nearby.\n\n\"Drink this,\" he said as he handed her the glass.\n\nShe was worried she would start to vomit again, but she did as he instructed. He cleaned up her vomit, and she lay still staring at him. He had put on his trunks but was still naked except for that. She felt something warm being placed across her back. Probably his duvet, she thought.\n\nShe felt mortified. Absolutely mortified. How could she ever have mistaken him for Matt? Their voices were somewhat similar, but his voice was more profound. Body-wise they were even more different with Damon being both larger and broader than Matt. \n\nWhy couldn't she have noticed that sooner and before they fucked? \n\nShe should have known he wasn't who she thought he was. Maybe it was just her wishful thinking that had convinced her. Either way, she should at least have made sure and asked him sooner. Not just blurt it out while they were resting after the best orgasm she had ever had.\n\nShe kept her head down, feeling the embarrassment colour her cheeks and probably the rest of her body too.\n\n\"Feeling better?\" he asked, his voice sounding as if he really cared for her well-being. \n\nIt was so typical of Damon, but this time it made her feel even worse. He was kind to her. She didn't deserve that right now.\n\n\"Yes. Thank you,\" she stuttered.\n\n\"You're not used to drinking this much, I guess?\"\n\n\"No,\" she admitted quickly. \n\nLet him think that it was the alcohol that made her do what she had just done. It would be better than knowing it was a major mistake. She felt tiredness overwhelm her. She did not want to take this in right now. It was too heavy. All she wanted was to just curl up and pretend nothing had happened. She shivered.\n\n\"Lay down,\" he said, and she let herself follow his orders. \n\nHe covered her with another blanket, and she closed her eyes again. The room was silent. He probably didn't know what to say either.\n\n\"How did you end up in my room?\" he finally asked, sounding resigned.\n\n\"Lucy followed me,\" Ava admitted, suddenly realising that Lucy must have chosen the room on purpose. \n\nWho else would know which room belong to whom?\n\n\"I see. Damn her. I should have known she would pull something like this.\" \n\nHe sounded angry, but Ava wasn't sure if it was her or Lucy that he blamed the most.\n\n\"I'm sorry, Damon,\" she said just before she felt her body shutting down on her.\n\n\"Yes, me too,\" he said quietly.\n\n\"I should leave,\" she said and tried to move. Her entire brain seemed to move sideways by the quick motion. \"Oh dear,\" she said and lay down again.\n\n\"Stay right where you are. You're drunk. Who knows which bed you will end up in next time, or what other disasters you might instigate,\" he said harshly.\n\nHe sounded really pissed. He was probably fed up with fixing her mistakes, but as long as she didn't have to move, it was perhaps better to stay put. \n\nShe just closed her eyes. Hoping that the entire world would stop turning while she fought the queasiness from taking over.\n\n<center>***</center>\n\n<center>Chapter 3 Reminded of his touch</center>\n\nDamon lay down beside Ava, making sure that she was covered up and warm. She was still naked and in no state to do anything about it. He grabbed a few blankets and covered himself. \n\nShe would probably need someone to look after her this night, and he didn't trust anyone else with that task. She was in his bed, and he wanted her to remain there. Even if she had believed she was sleeping with his brother. \n\nThat prank his sister had pulled was pure evil. Knowing his sister, she probably thought she was doing them a favour. Instead, it was bound to change the relationship between Ava and him, making it even more awkward between them and ruining every chance of a future together. \n\nShe would never be able to look at him again without remembering the embarrassment of bedding another man than the one that she intended. The pain was ripping his soul apart. \n\nWatching her yearn for his brother was nothing compared to the agony that came when she looked at him with revulsion when she discovered he was the wrong brother. Her words had only emphasised her shock when seeing him. \n\nShe had been making love with another man - at least in her mind. The perfect pattern that had emerged as their body moved in unison, both striving for the same goal and giving more than taking. All that had been a damn lie. And he had revealed himself so entirely to her. \n\nOnce she sobered up, she would understand the extent of his feelings for her. He should have known that it was too good to be true to have a naked and willing Ava in his bed, touching him and sucking his dick. He sighed. Definitely too good to be true.\n\nIt was even worse than not knowing how good they could be together. \n\nHe had long ago come to terms with the fact that she wanted Matt. He might not like it and tried to make her see what other options she had. \n\nBut she had never thought about him in that way, and now he finally had proof that she never would consider him as her lover. All he could ever hope for was to remain her friend, and now even that seemed unrealistic. Lucy had probably meant well, but she had failed to predict how Ava would react. \n\nStill, one thing has been accomplished. Now he knew how perfectly they matched sexually. He would have preferred not to know. It would only make things worse to have the memory of her warm body underneath his, moaning as she climaxed around his dick. \n\nShe had been so tight, he felt as if he was pushing inside a tight glove, feeling as she gave herself completely to his touch and enjoyed herself immensely. It had been magical, by the lack of a better word. \n\nHe knew it was stupid, but it had been everything he had ever hoped for and dreamed about. Up until the point where she said his brother's name. It had never occurred to him that she didn't seek him out on purpose. \n\nIn fact, when he had awakened to find her in his bed, touching his dick and trying to make him respond, he had thought that she knew exactly what she was doing and with whom.\n\nHe had always liked Lucy's friend, Ava. But as the years passed and he had turned into a man, that liking had turned into something more. He had tried to shrug it off, to believe that he was just admiring the good looks of a beautiful woman. But it wasn't just her looks that appealed to him. \n\nHe enjoyed her mind and just being with her. He often came across as gruff and blunt to other people, but Ava always seemed to enjoy teasing him and putting him off his guard. Making him say things that should probably never been spoken out loud. He felt more alive and human when she was around.\n\nHe had tried to hide his feelings from his siblings, knowing that Ava adored his brother Matt's joviality and smiling face. Damon was the opposite personality. Some women felt intrigued by him, while others kept far away. \n\nStill, after he realised that Ava preferred Matt, he had taken a step back, not wanting to admit he was interested in her. But judging by their talk earlier, Lucy had seen straight through him and steered Ava into his room.\n\nHe felt the pain inside of him. Wondering what to do now and how to solve this mess. Fearing that it could never turn out the way he had hoped and longed for.\n\n<center>***</center>\n\n\"Did you sleep well,\" Lucy asked Damon as he entered the kitchen the next morning. \n\nLucy seemed to be busy preparing sandwiches for the morning breakfast.\n\n\"As well as could be expected,\" Damon said.\n\n\"And where's Ava?\" she asked cheekily.\n\n\"Sleeping it off. She was quite drunk last night.\"\n\n\"Nah, just a little happy.\"\n\n\"If you say so.\"\n\n\"Did you do anything interesting?\"\n\n\"None of your business, Lucy.\"\n\n\"Just curious,\" she said and grinned at him.\n\n\"Why did you take her to my room when it's Matt she wants?\" Damon asked.\n\n\"Did she say that?\"\n\n\"Loud and clear.\"\n\n\"What she wants and what she needs is not necessarily the same.\"\n\n\"Very philosophical. Stop messing with other people's lives, Lucy.\"\n\n\"I just want you to do be happy, Damon.\"\n\n\"Then, don't interfere. This isn't helping.\"\n\n\"Oh, I think it does. I've seen how you look at her.\"\n\n\"That doesn't justify pushing her into my bed when she didn't plan to be there.\"\n\nLucy's smile widened. \n\n\"So, you two did do the nasty, eh?\"\n\n\"I hope you didn't lose a friend after that prank you pulled,\" Damon said in a hard voice.\n\n\"With your pace, you would never have gotten to the first base in this decade, Damon. You should thank me.\"\n\nHe scowled at her while he grabbed a bottle of water and some sandwiches before returning to his room.\n\n<center>***</center>\n\nReturning to his bedroom, Damon closed the door carefully behind him. The rest of the party didn't need to know Ava was in his bed. She was still asleep. He placed the water and the food on the bedside table and looked at her.\n\nShe had wiggled her way out of the duvet again. The towels he had used to clean up her vomit last night, had been washed and was drying in the washing room next door. He had taken care of that during the night. His room still smelled of vomit, and he opened the window to freshen the air. \n\nHe looked toward the bed and noticed she had started to stir. She looked as if she was shivering and she huddled underneath the duvet. Still, the fresh air was needed. He lay down beside her on the bed, fully clothed and snuggled in behind her to keep her warm. \n\nImmediately she moved closer and pushed her back against his front. She was still asleep, so her actions were mostly instinct. He took a deep breath as he felt his body respond to her, the way it always did. \n\nHe should have learnt his lesson by now. She wanted Matt, not him. There was no sense in getting excited. Unless he counted the fact that she was naked and lying in his bed as an improvement. She stirred slightly, and he knew that she was beginning to awake.\n\n\"Are you feeling better?\" he asked her.\n\nShe gasped as she finally seemed to realise where she was.\n\n\"I still feel sick,\" she said, but she didn't turn around to face him.\n\n\"That's to be expected. Try to drink or eat something,\" he said.\n\nShe moved slightly.\n\n\"Uhm, I think I'll give it five more minutes.\"\n\n\"Okay.\" \n\nHe felt her body against his, and he could feel that she was still naked underneath the duvet. The thought did nothing for his equilibrium. He rolled further away from her. \n\nThis was a terrible idea, he thought. Tormenting himself because he didn't want to stay away. He lay still for a few more minutes, before getting up and closing the window. He turned to her. \n\n\"I brought you sandwiches and water. Just rest and I'll be back later,\" Damon said before he turned to the door.\n\nShe murmured something incoherently, and he wondered if she had returned to sleep already. He would return later and get her out of his room. If she remained naked in his bed, he would soon start taking advantage of the opportunity. \n\nYes, that was probably the best way to scare her away from him and his room. He would just let her sleep for a little longer before using that solution.\n\n<center>***</center>\n\nAn hour later, Ava still felt more alive than dead, although barely. She had eaten a sandwich and drank some of the water. The food had helped. Her stomach had settled down, and her head felt as if it was still attached to her neck, and not dangling from her knee. \n\nA few painkillers had finally done their magic, and she was starting to wonder where her clothes were, just as Damon entered the room.\n\n\"Ah, Miss lazy-pants is finally alive,\" Damon said cheerfully. \n\nHe seemed to have regained his humour in the last few hours, Ava thought. Maybe he had forgotten that she had practically forced him last night. Ugh, even better, she thought. It would be foolish to bring up that incident if he preferred to forget all about it.\n\n\"I'm not too sure that 'alive' is the best word for it,\" Ava said and groaned.\n\n\"You'd better get dressed and show yourself. My sister thinks I've murdered you and hid the body somewhere.\"\n\n\"She deserves it after that trick she pulled yesterday.\"\n\n\"I can hold her while you tickle her,\" Damon offered.\n\n\"Don't make me laugh. I feel like I've been run over by a truck.\"\n\nDamon made a snort of some sort, and she looked at him with suspicion. Was he laughing at her?\n\n\"What is it?\" she asked with a clear suspicion as to what was so funny.\n\n\"Nothing,\" he said as he turned away from her and started to tidy the room. \"Just get dressed.\"\n\n\"Have you seen my clothes?\" she asked.\n\n\"I brought you some new ones. They are over there at the dresser.\"\n\nAva pulled the sheet with her and started to get out of the bed. She wheezed as her muscles protested.\n\n\"Do you need any help?\" Damon asked.\n\n\"No.\" \n\nShe moved more slowly to limit the pain. Then she turned to check on Damon. He was watching her intently.\n\n\"Turn away, Damon,\" she said. \"I'm not going to faint.\"\n\n\"Could fool me,\" he said as he lifted an eyebrow.\n\nShe grabbed the first item she could reach and threw it at him, only to realise a little too late that she had just thrown away her panties. Oh, crap. Was she going to break her record of stupid-things-to-do-in-just-one-day? \n\nIt shouldn't be possible to sink any deeper. She thought yesterday was the ultimate low point in that career.\n\n\"Uhm, could I have those back, please?\" she asked him.\n\n\"No, you gave them to me,\" he said and laughed heartily while he put them in one of his back pockets.\n\n\"Trophy hunting?\" she asked ironically.\n\n\"Behave, or you won't be so pleased with the next trophy I'm collecting,\" he said as if he challenged her to misbehave some more.\n\nShe stared at him. Was he flirting? Nah, this was Damon. He never flirted with her. Most likely, he was treating her like he would handle an annoying little sister, and now he wanted to chase her from his room, no matter what he had to threaten her with. \n\nEither way, he had the upper hand. Her brain had ceased to function sometime yesterday, and the response rate was still far below her ordinary levels. But she wasn't going to budge any faster than she had to, no matter how much bullying he tried.\n\n\"In English, please?\" she asked.\n\n\"Three minutes,\" he said.\n\n\"Huh?\"\n\n\"You got three minutes to put on those clothes and get out of here. Or else.\"\n\n\"Or else what?\"\n\n\"Or there will be a repetition of last night.\"\n\n\"Repetition?\"\n\n\"Have you forgotten already?\" He leaned over her. \"In that case, I have no problem giving you a reminder.\"\n\n\"You must be kidding,\" she blurted out and swallowed.\n\n\"Try me, and you'll see if I'm kidding or not. Laying naked in a man's bed is enough to give any man ideas. You should know that by now.\"\n\nShe stared into his eyes and saw the heat there. Oops. He didn't have to remind her at all. She remembered every detail of how he had pleasured her body last night. Coming inside of her, even though he was much too large compared to what she expected. \n\nHis masculinity was both scary and intensely irresistible at the same time, and she felt her heart jump inside her chest just by thinking what this man could do to her blood pressure. Oh shit, this was not a man to fool around with. Not at all. Even if her body screamed for her to take him up on his offer.\n\n\"You seemed to enjoy my touch last night,\" he said in a smug voice.\n\nShe just stared at him in shock. Was he actually suggesting...? Oh my god. She swallowed and held the sheet tighter as she stared at him. For a brief moment, she considered losing the sheet and take him up on his offer. Just to see if it was just an empty threat or if he would fulfil his promise. \n\nAt least, that was what she wanted to convince her muddled brain. He seemed to read her clearly, knowing she would never dare to test him. His face turned into a frown, and he turned his eyes away from her.\n\n\"Three minutes, Princess. No more.\"\n\nThen he turned and opened the door.\n\n\"Oh, and it wasn't a truck that ran you over, but I'll consider that a compliment.\" \n\nHe grinned at her before he closed the door behind him. She wanted to grab something and hurl at him. Then she remembered that he still had her panties. Damn that man. Damn his sister and the alcohol. Just damn everything and the mess this weekend had turned out to be. What else could go wrong in her life? ",
        "Oh boy, she needed to hurry. There was no way she was going to test if Damon would back up his threats. Even if a small part of her was creating a fluttering feeling by how that would feel like. \n\nMaybe there was a kinky side to her sexuality after all. She shouldn't feel turned on by his alpha male behaviour, but even if her brain wasn't buying it, her body seemed to disagree. She dressed quickly before she grabbed her things and hurried into the bathroom to clean up.\n\n<center>***</center>\n\n\"You tricked me,\" Ava said to Lucy as soon as she met her.\n\n\"Yes, I did.\"\n\n\"Why?\"\n\n\"Damon will suit you much better than Matt.\"\n\n\"I don't think so.\"\n\n\"Sure, he will. I know my brothers. Matt is the easy-going socialite that will not settle down for the next ten years or so. And when he does, he will find someone similar to himself. You will only get hurt or bored with him.\"\n\nAva harrumphed. \"I'm not too sure about that.\"\n\n\"I am. I know you, and I know my brothers.\"\n\n\"Then why Damon?\"\n\n\"He wants you.\"\n\n\"No, he doesn't.\"\n\n\"Yes, he does. You're just not seeing it.\"\n\n\"Not anymore. Not after that lousy prank, you pulled on me.\"\n\n\"Oh? He didn't do anything interesting then?\"\n\nAva blushed.\n\n\"I knew it. Give me some details, hon.\"\n\n\"He's your brother. Forget it.\"\n\n\"Oh, come on. I know he's larger than life.\"\n\n\"What?\"\n\n\"Well, that what the rumours say. Are they true?\"\n\nAva just turned away from her curious friend.\n\n\"Well, are they?\"\n\n\"He's absolutely stunning, okay?\" Ava admitted. \"Satisfied?\"\n\n\"Not quite, but you might be?\"\n\n\"Not a chance. Thanks to you, I had the most wonderful encounter with a man, before I called him by the wrong name. He's seriously pissed.\"\n\n\"You did?\" Lucy gasped.\n\n\"Sure did.\"\n\n\"Oh, my god. You didn't find out who he was before you got down and dirty with him?\"\n\n\"I was drunk, and I believed he was Matt. Uhm, well, and I practically forced him.\"\n\n\"No way!\"\n\n\"It wasn't my brightest moment. He can probably press charges if he feels like it.\"\n\n\"Oh, my god,\" Lucy wheezed.\n\n\"God has nothing to do with this. Try the devil instead. I've never felt so stupid in my entire life.\"\n\n\"Ouch.\"\n\n\"Yes, ouch.\"\n\n\"Will he forgive you?\"\n\n\"He's pissed, all right? Surprise, surprise. He will probably never speak to me again if I get off lightly. Besides, I think you should be more worried about me ever forgiving you, Lucy,\" Ava said angrily.\n\n\"Oh, come on. I bet you had a hell of a night before that little... mishap.\"\n\n\"Fantastic,\" Ava said glumly. \"Absolutely fantastic. I even puked on his floor afterwards. I bet he's got an excellent impression of me.\"\n\n\"Oh, hon.\"\n\n\"This weekend can hardly turn out anything worse than it already did.\"\n\nLucy laughed heartily. \"Now, if that doesn't leave an impression, nothing will.\"\n\n\"Just shoot me next time, all right? And no more pranks.\"\n\n\"I promise,\" Lucy said with a smile.\n\n\"I don't believe you. You could at least look remorseful.\"\n\n\"I only want what's best for you, hon. Besides, I think it's a good sign that he didn't let you out of his room until now.\"\n\n\"That's because I was ill. He took care of me, despite all.\"\n\n\"Hmm, and he didn't try anything exciting?\" Lucy asked.\n\nAva blushed as she remembered Damon's threats that same morning. He was probably just joking, trying to brush it off and pretend that he didn't have any hard feelings. Still, his words had had some effect on her lower regions, and she would probably hear those words in her sexual fantasies.\n\n\"I knew it,\" Lucy said triumphantly.\n\n\"Oh, just shut up, Lucy. I know exactly who to call next time I want to make a complete fool of myself.\"\n\n\"Well, we're staying one more night. You can always give him another try and use the correct name this time.\"\n\nAva laughed ironically. \"I bet he will be bolting his door from now on. Besides, you can't fool me twice.\"\n\n<center>***</center>\n\n<center>Chapter 4 Playing by the rules</center>\n\nAva avoided Damon for the rest of the day. She did her utmost to stay at the other side of the room, or the other side of the valley whenever they went outside. But she couldn't make it too conspicuous, she thought. \n\nShe didn't want the rest of them to notice. Some probably had already seen which room she had walked out from that morning, but the rumours hadn't spread far. Yet. At least not that she had heard. \n\nShe glanced over at Matt and watched how he laughed and talked to the women around him. He seemed to have chosen a favourite for the weekend. It didn't matter. \n\nShe wasn't going anywhere near a man's bedroom for the rest of the year if she could help it. And she wasn't drinking any more alcohol either. Never again. She didn't hold her liquor very well, and last night was a clear reminder about that. It was better to stay the hell away from it all.\n\nLater in the evening, she realised that the rumours had spread far and wide. Even Matt was giving her curious looks. Damn it. There went the only chance of ever hooking up with him. She knew there was a risk after what happened with Damon, but in the back of her mind, she had still hoped that no one else would know about her mistake.\n\nTypical. The only time she really messed up, there were plenty of witnesses to share the news. And the story was probably juicy enough to start a whole fire of rumours. Just what she didn't need right now. \n\nShe didn't care what they were saying. It was probably nothing that she wanted to have repeated. She didn't have to wait long to know exactly what was going on.\n\nAs she entered the ladies' room, she noticed that the conversation died down all of a sudden. Then, one of the blonde women turned to her. Ava knew her as a rival that had set her eyes on Matt. Fucking perfect.\n\n\"Oh, Ava, dear. We heard you spent the night with Damon. Is it true?\"\n\nAnd another took over. \"And afterwards he kicked you out. Oh, dear. Did you fail to please him?\"\n\n\"He probably wants higher standards than his brother's wasted goods,\" another toned in.\n\n\"No wonder since he's the richest man here and the biggest catch of them all. Oh dear, oh dear, Ava. You should have aimed lower, and tried to find someone at your own level, you know.\"\n\nShe just ignored them and walked away, listening as they giggled loudly behind her back. \n\nShe just kept her smile and concentrated on talking to the people that would not bother asking about the rumours. All the time keeping herself busy with tidying and doing the dishes.\n\nLater, as she stood by the kitchen sink and washed the plates from their dinner, she heard heavy footsteps coming toward her. She turned her head and saw that Damon was coming straight for her. She turned away and concentrated on her task. He had probably heard the rumour and wanted to gloat. \n\nIt would be the perfect revenge if it was him that started the rumours, but she doubted that. He didn't need to. You only needed one person to see her come out of Damon's room to start the nagging. People would always prefer to think the worst of another person. And for once, it was her that was at the receiving end. \n\nIt was just as uncomfortable as she had always pictured it to be. This weekend could not go quick enough for her taste.\n\n\"You're staying with me tonight,\" he said to her.\n\n\"What? Why?\"\n\n\"You've probably heard the rumours already.\"\n\n\"And me staying with you will only give them more wind, not less.\"\n\n\"If you go for Matt now, you know what they will say.\"\n\nShe nodded. She knew exactly what her reputation would be. She didn't need that now, just as she was looking for a job. She needed people to help her, not ditch her because of a reputation as a loose woman. \n\nDamn it. She should have left his room last night. Not fall asleep and hope that it was all a nightmare.\n\n\"And what will you demand in return for that offer?\" she asked.\n\n\"Nothing.\"\n\n\"Nothing?\"\n\n\"Nothing more than what you want to give me,\" he said and winked at her. \"But you need to stay closer to me if this is to work. People have noticed that you've been avoiding me.\"\n\n\"Have they?\"\n\n\"Yes,\" he stepped behind her and wrapped his arms around her waist.\n\n\"Hey, what are you doing?\"\n\n\"I'm helping you. Play along,\" Damon whispered before he bent and kissed her neck. \n\nShe gasped and leaned her head to the other side, giving him more room. Surprising herself at her instinctual response to his touch, but unable to pull away.\n\n\"Good,\" he whispered, just as she heard a large group of people enter the kitchen.\n\n\"Oops,\" she heard someone say and then it was followed by a lot of giggles. \"Are you two still at it?\"\n\n\"Get a room, Damon,\" another person added.\n\n\"Oh, I will,\" Damon said before he gave her one last kiss. \"Later,\" he stage-whispered so that everyone knew what they were planning.\n\nAva didn't even need to pretend as a blush spread across her face.\n\nDamon let go of her and answered a few more of the snide remarks with a confident voice while he walked away. Ava was too busy blushing, so she concentrated on her task. He probably thought he had done his share, and she wasn't going to make things worse by shouting after him.\n\nInstead, a woman came up to her.\n\n\"You sneaky girl, Ava. You're so clever to go for Damon. He's far richer than the rest of the lot.\"\n\nAva just nodded. So that was what people was thinking. That she was some sort of gold digger? Was that any better than letting them believe her to be a slut?\n\n\"But it's cute to see how besotted with you he is. Good going, girl.\"\n\nYeah right, Ava thought. Besotted was definitely not the right word for it. Most likely, he was thinking of protecting his sister and included her friend in the same category. Taking it upon himself to help her when she'd made such a fool of herself. He had always done the same thing for Lucy. \n\nShe was never going to drink again, and particularly not when there were an entire group of gossip-loving people around. Still, she wasn't sure that leaving people with the impression that they were a couple, was the right way to solve the problem. But they probably saw that it was just a fling or something. \n\nWhat a mess this weekend had turned into. \n\nIf she had known in advance, she would have stayed at home. She considered going home a day early, but that would probably make it worse. She would just have to play along and wait for the weekend to pass.\n\n<center>***</center>\n\nThe day passed slowly, but uneventfully. Damon touched her waist or shoulder whenever he slipped passed her, but apart from creating a fluttery feeling in her stomach, he didn't do anything more.\n\nLucy nudged her several times as she found herself watching him, paying more attention to him than to Matt. She didn't understand it herself. She had never been interested in Damon before, so why start now?\n\n\"You're drooling,\" Lucy said with a smug voice.\n\n\"I'm not,\" Ava retorted, and moved her eyes back to the plate she was holding.\n\n\"He was that good, eh?\"\n\nAva snorted. \"I have no idea what you're talking about.\"\n\nLucy just laughed.\n\n\"Have it your way. Faking ignorance as not going to help at all. Just admit that you've been going for the wrong brother all along.\"\n\nAva sighed loudly while begging for patience.\n\n\"Just stay out of this, Lucy. And no more pranks.\"\n\n\"Fine. I'll leave you to it. As long as you sleep in the right bed this night.\"\n\n\"And which bed is that?\"\n\n\"His. Which one did you plan to use?\" Lucy laughed even harder, making all the people around them stare at them.\n\n\"Can you please remind me why we're friends?\" Ava asked her.\n\n\"Because I want what is best for you, hon.\"\n\n\"I'm perfectly capable of making my own decisions.\"\n\n\"No, you're not.\"\n\nAva snorted. \"It's easy to see that you two are related.\"\n\n\"Hmm, is he going all alpha male on you, hon?\"\n\n\"To some extent, yes.\"\n\n\"Ooh, sexy.\"\n\n\"Don't even start!\"\n\nLucy just winked at her.\n\n\"Enjoy,\" she stage-whispered so that everybody around heard.\n\nAva just bowed her head and hoped that her blush would vanish just as suddenly as it had appeared.\n\n<center>***</center>\n\nLater in the evening, Ava was so tired she could barely walk straight. Damon came up to her as she walked toward the bathroom at the end of the corridor.\n\n\"Ready for bed?\" he asked.\n\n\"I guess so.\"\n\n\"Just go inside. I'll be right with you.\"\n\n\"Damon, I don't think this is necessary.\"\n\n\"Yes, it is. Trust me.\"\n\n\"But...\"\n\n\"We will just sleep, okay? Relax.\"\n\n\"Yes, sure,\" she said as she hurried away from him. \n\nHe was reading her mind, or she was a lot more obvious than she had thought. She collected her toilet bag and a few clothes from Lucy's room before she made herself ready for the night.\n\nA short while later, she lay under the duvet in Damon's bed this time dressed in an oversized t-shirt that she used to sleep in. She had barely started wondering where Damon was when the door opened, and he stepped into the room. \n\nShe glanced at him and saw that he had already started undressing. He lifted his t-shirt upwards, and she could count his abs. She stared at him until she realised he was looking straight at her. She was caught. \n\nHe winked at her before unzipping his pants. She knew exactly what he looked like underneath his clothes. It was one of the images that seemed to be glued to her memories from the previous night. \n\nQuickly, she lowered her eyes and turned around to face the wall. It was better to give him some privacy while he undressed. She could hear him chuckle behind her.\n\n\"Did I scare you off so soon, Ava?\"\n\n\"Uhm, I've seen it all before,\" she muttered.\n\n\"No need to be shy then. I don't mind if you want to check if you got all the details correct,\" he said in a smug voice as if he was enjoying this immensely.\n\n\"I'm fine, thanks,\" Ava said.\n\nThe bed moved as he lay down behind her. She lifted the duvet to give him his share of it.\n\n\"Keep it. I'll use the blankets.\"\n\n\"But you'll get cold,\" she said.\n\n\"I'll manage.\" \n\n\"Thanks, Damon,\" she said, knowing that she had to say something to make up for the awkwardness in the situation.\n\n\"Just sleep, Ava.\"\n\nHis voice sounded so neutral she didn't know what he was really thinking. She had never completely understood him, but she knew he was loyal to his family, and that seems to include her this night.\n\nShe closed her eyes and a picture of his naked body from the night before came to mind. Maybe she should have taken the opportunity to watch him when he undressed earlier. \n\nShe would probably never get another chance to do so. Still, she hadn't been interested in him before, so why start now? She felt terribly confused and embarrassed. Tomorrow the weekend would be over, and she could return home. She looked forward to that. \n\nSuddenly she felt his hand pat her waist.\n\n\"Sleep, Ava. Just relax and get some sleep.\"\n\n\"What am I doing here, Damon?\" she asked instead.\n\n\"We're salvaging your reputation.\"\n\n\"What's left of it, you mean?\"\n\n\"The rumours will quickly die down if we don't feed them. Just ignore them.\"\n\n\"Why are you helping me? I thought you were still angry.\"\n\n\"You're Lucy's best friend.\"\n\nSo that was the reason, was it? Ava wasn't so sure that was the entire explanation. There had to be something else. Some other detail that she was missing. \n\nAt the same time, she recollected how much pleasure he had given her the night before. Making her orgasm while he was deep inside of her. His touch so soft and firm at the same time, whispering endearments before he kissed her. \n\nWhy would he do that? Wasn't that the way of a lover, not something a one-night stand would do? Maybe he didn't know who she was? \n\nThen it occurred to her. He had known from the start. He had said her name, and she was the only one around by that name. He had thought he was dreaming. Did he dream of her making love to him? Or had he been so half asleep that he would have accepted any woman into his bed?\n\n\"Did you know it was me yesterday?\" she asked. \n\nShe already knew the answer, but her memory could be playing tricks on her. \n\nThere was a long silent pause, and she wondered if he had fallen asleep or if he was ignoring her question. She turned her head to look at him.\n\n\"After a while,\" he said.\n\n\"Why did you allow me to do it?\" she asked, not sure if he would bother to answer.\n\n\"I wasn't completely awake. Or sober,\" he said.\n\nShe wondered if he was lying to her. She hadn't seen him drink much last night and he had seemed very alert when he had remembered to find a condom.\n\n\"Did I force you?\" she blurted out, scared to hear his answer.\n\nHe laughed. \"Technically, no. But you were very persistent.\"\n\nUgh, yes, she remembered that part quite clearly.\n\n\"Will you report me?\"\n\n\"No, but I hope you will be more careful from now on, so you don't end up with another man that you did not plan to sleep with.\"\n\n\"Ugh, yes. I'll never drink that much again. I'm terribly sorry, Damon.\"\n\nHe sighed deeply as if he wanted to say a lot more, but he held back.\n\n\"Can we just forget it ever happened?\" she asked hopefully.\n\n\"No. We can't,\" he said.\n\nShe would never be able to make it right to him, she realised. If she had only known who he was, the experience might have been remembered as something pleasant. Something worth keeping. It had been the most exhilarating experience of her life. At least for a while. \n\nShe wondered if he had felt the same way. And would he ever want to repeat it? When the dust had settled, and they went back to their ordinary life, would he still remember and want her? Or would she only be a vague memory that he preferred to forget as soon as possible?\n\nWhat if he wanted to repeat that experience right now? It would have been the perfect opportunity now that they shared the same bed. Why didn't he say that she owed it to him? Any other man would jump on the chance to get laid. Wouldn't they? \n\nShe felt her heart beating faster at the thought. Would it feel just as good now when she was sober? Or even better? What if she would just turn around and look at him right now? Would she see anger or arousal? What if he wasn't asleep yet? She couldn't hear anything. Couldn't really know for sure.\n\nHe might have fallen asleep already. She would have to wait until she was sure he was sleeping, then she would turn around and look at him. Unfortunately, the room was so dark she would probably not be able to see anything until the next morning. \n\nShe moved closer to the wall and felt tiredness overwhelm her. Tomorrow. Then she would peek at him.\n\n<center>***</center>\n\nThis had been his worst idea ever, Damon thought as he looked at the woman lying beside him and underneath his duvet. The bed was a queen size double bed, forcing him to lay on his side to avoid coming into contact with her body.\n\nThere was nothing he wanted more than to snuggle against her backside and share the duvet with her. Feeling her body against his own, preferable naked, as he had the night before. \n\nStill, he had promised they would only sleep. Nothing more. And he was going to hold that promise even if he felt his body respond to her presence.\n\nHe forced himself to remain calm. To breathe evenly, trying to lie completely still, and allow her to feel safe enough to fall asleep. Eventually, she did. He could hear from her breathing that is was calmer than it had been before. \n\nHe could almost scent something that resembled arousal, wondering if she thought about the same thing he did: the night before, and the way her body had clasped around him, tightened around his dick as he lost himself inside of her. \n\nIf she had been willing, he could easily have agreed to another night like that. The pain that would eventually follow, would still make it all worthwhile. But she had wanted to forget the entire thing. To ignore all that had happened between them, and never talk about it again. ",
        "It was impossible. He would never be able to forget how perfect it had been, how she seemed to be made for him even if she never saw the same picture. \n\nThe pain was tearing him up inside. How could she not see what was right in front of her? It was so obvious to Lucy even if he had tried to hide his feelings. How many other people had seen the same thing?\n\nHolding and kissing her in the kitchen earlier had been so easy. It was the first time he had allowed himself to do what he wanted while masking it under the pretence of helping her. He had been honest. He was helping her, even though he took great delight in doing so. \n\nAva did not need to know the full extent of his plans. Not yet. If he played it cool for a while longer she might even come closer and open her eyes to other possibilities than Matt. He just needed patience, he reminded himself for the zillionth time. \n\nHis perfectly amiable brother was a scatterbrain when it came to turning down the women he didn't want. Instead, he was trying to please all and everyone, leaving Ava in the constant misconception that she still had a chance with him. \n\nMatt had always considered her a friend, a sister-substitute, but he would never have the balls to say that directly to Ava. Instead, he flirted with all the women and kept them on his tail. \n\nWhich meant that he would have to wait for Ava to decide what she wanted. To allow her to take the first step away from Matt and toward another man. He just hoped that it would be him she turned to when that day arrived. \n\nAll he could do was remain close to her and give her what she wanted. If she ever wanted him again. But she would have to make the first step. This time.\n\nSuddenly, she rolled over in her sleep and slid her arm over his waist. He felt her snuggle closer into his warm body, probably to steal some warmth from him. He moved his hand over her arm. She was cold. \n\nHe turned her over and moved in behind her. Sharing his warmth with her while keeping his aroused dick away from her. Luckily there were a few layers of fabric between them. Even so, this would be a long night. He sighed. It was the worst idea ever and the best.\n\n<center>***</center>\n\nThe next morning when Ava woke up, Damon was already gone. He seemed to have awoken early and was busy helping the other guests to leave for home. The house was buzzing with life, and everyone was occupied with packing and loading into their cars. \n\nAva had caught a ride with Lucy earlier and assumed that she would do the same on the return trip. In the meantime, she was tidying the house for the cleaners that would arrive a while later.\n\nThere was no chance to talk to Damon and to be honest, she wasn't exactly sure what she should say to him. She had already said she was sorry, but she couldn't turn back time and undo what had happened. It was better to just forget it and move on.\n\nSeveral people had congratulated her on her great catch, and she got the feeling that many considered her more attractive than she had been before. It was perhaps only natural that when one man stated his interest, other men would follow. \n\nSoon, there was only Lucy, Ava and Damon left. Matt had left earlier with a group of friends.\n\n\"Damon, can Ava ride with you?\" Lucy suddenly asked.\n\nBoth Ava and Damon looked equally surprised.\n\n\"Sure,\" he said. \"Aren't you heading back to town?\"\n\n\"In a while. I have a few errands to run first,\" Lucy said, but all of them knew she was lying.\n\nSoon after, they drove off, and even if this was the perfect opportunity to talk to Damon, Ava discovered that she still had no idea what to say to him. \n\nHe had changed from being her best friend's brother to lover to accomplish and maybe even friend. She wasn't exactly sure what their relationship was and how any of them would fit into the puzzle. Most likely, they wouldn't.\n\n\"What was Lucy up to?\" Damon asked after a while.\n\n\"Who knows? She has been acting really strange lately.\"\n\nThe rest of the journey passed in ordinary small talk, and Ava was starting to relax in his presence. He was a nice man, but there was still this enormous mountain between them. None of them seemed to want to dive into the one topic that both of them carefully avoided. \n\nIt was just the same. Some things couldn't be solved by talking about them. It was better to let the matter rest and let time weaken the memory.\n\nSoon, he stopped outside her apartment building, and they got out to retrieve her luggage.\n\n\"Do you need some help carrying?\" he asked.\n\n\"No, I can manage,\" she said, thinking that if she was really interested in him, she should have invited him inside. \n\nShould she? She wasn't sure. She was still in love with Matt, wasn't she?\n\n\"I'll see you around then,\" he said as he sat into the car again. \n\nHe opened the window before he started the engine. \n\n\"Ava,\" he said. \"Remember to give me a call about that job if you don't have any luck, okay?\"\n\nShe nodded and watched while he drove off.\n\nShe wouldn't call him. If it felt this awkward to be around him, how bad would it feel to be around him daily? Nope. It wasn't happening. She would try every other alternative before she did that.\n\n<center>***</center>\n\n<center>Chapter 5 Damon's coffee</center>\n\nA few weeks later\n\nThe next few weeks, Damon, drowned himself in his work. There were plenty of tasks to be done, and he needed something to make him forget. To fill his mind with everything else besides a small woman in his bed. \n\nTo some extent, it was working. He spent so many hours at his workplace, that whenever he went home, he collapsed onto his bed and got a few hours' sleep before he returned to work. \n\nSome of his closest colleagues had started to give him a few hints that it was time to calm down and get some rest, but that would leave him too much time to think, to remember and to fantasise. Bad idea.\n\n\"You're working too much, Damon,\" his father said at their dinner table while Damon struggled to keep his eyes open.\n\n\"Probably.\"\n\n\"We haven't seen you at all for the last few weeks. What have you been doing?\"\n\n\"Working, as you said.\"\n\n\"You need to hire more staff.\"\n\n\"Sure. I know that. I have done nothing but doing interviews and trying to find candidates that could fit. But so far nothing has come of it.\"\n\n\"I know someone,\" Lucy intervened.\n\n\"Excellent. Just hire him and unload some of your tasks.\"\n\n\"It's 'she', not 'he',\" Lucy said.\n\n\"Do I know her?\" Damon asked with a suspicious frown.\n\nMatt just laughed. He probably knew where this was going.\n\n\"She will suit you perfectly,\" Lucy said.\n\n\"Just give her a temporary position if you're in doubt,\" his father said. \"All help will be useful at this stage.\"\n\nDamon thought about it. \"Maybe I will,\" he said.\n\nLucy grinned widely, leaving Damon in no doubt that she was up to something. Well, if it was what he suspected, he might as well bite and see what the outcome would be. \n\n<center>***</center>\n\nThis was probably a terrible idea, Ava thought as she turned up for her first day at work at Damon's company. But she desperately needed a job, and Damon had offered her one. \n\nShe wasn't stupid, so she had accepted the job as soon as possible. The last few weeks had taught her how important it was to have some sort of experience, some people that could vouch for you and tell the next company what a great worker you were. \n\nShe had neither. All she had was her family, her background and her parent's money. They had offered to help, and she had eventually accepted their help so that she could pay off the monthly mortgage on her apartment. \n\nShe would lose it if she didn't pay, and the job market had proved a lot more difficult than she had expected. She could always move up north and get a job there, but she wanted to stay close to friends and family. \n\nThat meant that the offer from Damon was too hard to resist. He had offered her an assistant position at a wage that was below what she had hoped for, but in the end, everything was better than having no income at all. \n\nShe had accepted, and she vowed to do everything she could to make a good impression. She wanted a permanent job so this was just the first step on the corporate ladder.\n\nThe rest of the day was spent with a colleague named Robert. He was showing her around and introducing her to all her new tasks. Some were familiar while others were completely new to her. \n\nIt was a large company, something which surprised her since she had heard that Damon had built it from scratch. They were in the IT industry, and they were making a set of programs as far as she had managed to dig up from her Internet searches. \n\nShe listened carefully to Robert and wrote down as many details as she could about her new tasks before she received her first task and were given a desk. She hadn't seen Damon at all, but that suited her just fine. \n\nShe had no intention of being reminded of his naked body and how he felt as he pushed deep inside of her. None, whatsoever, she thought while she knew the telltale blush was appearing in her cheeks. She took a deep breath before she concentrated on her computer and started working.\n\n<center>***</center>\n\n\"How's the new girl getting on?\" Damon asked Robert at the end of the day.\n\n\"Excellent. She's clever and easy to like. She will fit in perfectly.\"\n\n\"Good. So, no problems then?\"\n\nRobert laughed. \"None, except that even the geeks have started to notice her.\"\n\n\"You should drop a word that she's engaged or something,\" Damon suggested.\n\n\"Too late. She said she was single when Judith asked her. It's all over the place already.\"\n\n\"All right. Keep an eye on that, will you?\"\n\n\"Sure. Any reason why?\"\n\n\"She's almost family. Best friend of my kid sister.\"\n\n\"Oh, I see. I'll make sure that they don't bother her. Don't worry, boss,\" Robert said.\n\n<center>***</center>\n\nA few days later, Ava was given the momentous task of carrying coffee to Damon's office. She had seen a few glimpses of him, but apart from a small greeting, he had ignored her completely. Which suited her just fine. \n\nHe was obviously done with her, and she was done with him. No doubt about that. Well, she hoped she was. As Lucy's older brother, she was bound to meet him on several occasions, but it would probably become easier given time.\n\nShe pushed the door open and walked into his office. It seemed to be empty. Even better, she thought, as she carried the coffee to his desk, and placed it on top of a plate.\n\n\"Thanks, Ava,\" she suddenly heard a familiar voice say behind her. \n\nShe jumped and almost dropped the other coffee cup she was holding.\n\n\"Jesus, you scared me,\" she said to Damon as he came into his office.\n\n\"Sorry,\" he said and grinned at her as if he wasn't the least sorry of making her jump at his command. \n\nHe was enjoying this far too much, she thought and scowled at him.\n\n\"How are you getting on?\" he asked and sounded both friendly and interested.\n\nThat deflated all her anger and removed her suspicions that he had been laughing at her.\n\n\"Oh. Great. It's great,\" Ava said. \"I'm learning so much new stuff, and it's so interesting to see how a real business is run.\"\n\n\"You haven't received too many tasks then?\"\n\n\"No, not at all. I can easily manage a few more.\"\n\n\"Good. We'll fix that. Just ask Robert, and he'll help you. There's a ton of work that needs to be done around here.\"\n\nShe smiled at him.\n\n\"Thanks for the chance, Damon. I'll go and hand this cup to Robert, and get on with my work.\" \n\nShe turned and walked away from him, relieved that they had settled on being polite and friendly toward each other. She had been anxious about how to treat him or how he would treat her, but their conversation had removed those worries.\n\n\"Have you fallen into any other men's bed's lately?\" he suddenly asked.\n\nShe gasped and stopped abruptly, feeling her cheeks turning a pinker colour. Talk about being stabbed in the back when she didn't expect to.\n\n\"Uhm, well, no. Not yet,\" she murmured without turning around, stiffening her shoulders at the same time.\n\n\"Make sure you keep it like that,\" Damon said.\n\nWhat? She felt annoyed at him for kicking below the belt. She turned around, a puzzled expression was probably evident on her face.\n\n\"Is this a warning? Are you worried that I do not know proper conduct at a workplace?\" Ava asked.\n\n\"No, it's just a friendly warning, Ava. Nothing more.\"\n\n\"Why do you ask?\"\n\n\"Just curious, that's all,\" he murmured.\n\n\"Right,\" she said, feeling more puzzled than before. \"Thanks, Mr Sheridan.\"\n\n\"Call me, Damon, Ava. You know me more intimately than most people,\" he said and sounded somewhat smug about it.\n\nShe opened her mouth to speak but was unable to. Why would he mention that unfortunate incident now, and with plenty of colleagues nearby? They were beyond their hearing distance, but still. Anyone could suddenly come to the doorway and watch how she blushed. And how would that look? She was shocked. \n\n\"Besides, we're all on first names around here,\" he continued as if that was his message all along. \n\nHe didn't have to worry. She had learnt her lesson the hard way.\n\nShe straightened and gave him an icy stare.\n\n\"Mr Sheridan. I can assure you that I've learnt my lesson, and I have no plans to repeat any previous mistakes.\"\n\nHe seemed equally annoyed by her answer. He raised his right eyebrow as if to challenge her to prove it to him. She nodded regally before she turned and started walking.\n\nHe chuckled behind her. \"You still seem to have some difficulty remembering my name, Ava.\"\n\nShe almost fled from his office. She hoped he wouldn't think her reputation would ruin her chances at the job. He was probably just warning her from fraternising with any of her colleagues. \n\nHe didn't have to worry. After that night, she was taking extra precautions. She hadn't had a single drop of alcohol, and she stayed at home when her friends went out in the evenings. \n\nShe needed a break from that life. And that night had taught her a lesson. Well, actually several lessons, and most of them she had no intention of repeating ever again. Like throwing herself after a man that clearly didn't want her anymore.\n\n<center>***</center>\n\nFriday\n\nAnother two weeks had passed, and Ava was starting to feel more confident in her work. She had received some regular tasks, and she was regularly asking for more work, giving her closest colleagues a welcome reprieve from the workload. \n\nIt had made them respect her a lot more, and this morning she had gotten a contract in her mailbox for permanent employment. She was so happy. At last, she had made it. \n\nThe tension inside of her was beginning to loosen, making her feel more at ease. At last, she felt confident that she would be able to make it on her own. To pay her bills and start paying off her student loan. \n\nThings were looking brighter for her, and she felt a new calm settle inside of her. She read through the contract and noticed that they were offering her a higher salary too. \n\nNow it would resemble the one she originally had wanted, and there was no doubt in her mind as she signed the document and handed it to the HR leader as he passed her desk.\n\n\"Thanks, Ava,\" he said. \"Damon will be very pleased.\"\n\n\"I hope so.\"\n\nAfter that morning in his office, Ava had taken his warning to heart, and she did her utmost to behave professional and avoided any sort of flirtation. Her colleagues had got the message after a while, and she hadn't received any unwelcome attention. \n\nMaybe Damon had done her a favour even if it had felt more like an insult at the time. Oh well, she was here to work, not to get a new boyfriend. If she ever thought about that, Damon's naked body was usually the first picture to appear in her stupid memory. \n\nShe could not seem to forget what he looked like or how good he had felt that night. She groaned softly before she quickly placed her hand in front of her mouth and hoped that no one had heard. \n\nOh crap. She knew better than to think about that night when she was still at her desk. That's what a tedious task did to her brain. Just as long as the man himself didn't read her mind. Now that would really be embarrassing. \n\nAt the same time, she heard a sound in front of her desk. She looked up and met the knowing eyes of the leading man in her fantasy. \n\nShe knew she looked just as guilty as she felt, and his intense stare seemed to read her mind and know exactly what kind of thoughts had been running through her brain. Quickly, she lowered her eyes and tried to remember how to breathe. \n\nShe heard a small sound, a whimper, and she realised that it was coming from her. Oh god. There seemed to be no limit as to how stupid she could act in front of Damon. No limit, whatsoever. \n\nShe hoped that the floor would just open and swallow here, transporting her away to someplace where there were no spectators to her clumsiness. Just to make matters worse, Damon came up to her.\n\n\"Ava. Lucy told me you were also invited to the family dinner this evening.\"\n\nShe glanced up and nodded.\n\n\"Would you like to ride with me?\" he asked casually, but she could see from his smirk that he noticed the hidden meaning in his words.\n\nShe wanted to refuse him, but if she did, Lucy would nag on her for the rest of the evening. And since she didn't have a car of her own, she had to rely on someone else to do the driving. \n\nIt would be strange to drive with Damon since she always came with Lucy, but it was the most practical solution. \n\n\"Sure,\" she said. \"Thanks.\" \n\nSince the dinner would take place late Friday evening, most of the guest had been invited to stay overnight. She had often been invited, and she had quickly accepted. She had always adored Lucy's family, but she wondered how she could have forgotten that Damon would most likely be attending. \n\nIt hadn't really crossed her mind, but of course, he would. She wanted to reboot her brain so it might work faster. It seemed to need it. Still, she couldn't help feeling that Lucy was still up to her matchmaking pranks when manoeuvring Ava to come with Damon. She didn't have any proof, but she was positive that Lucy was up to something. Again.\n\n<center>***</center>\n\nDamon came to her desk at the end of the workday.\n\n\"Are you ready?\"\n\n\"Yes, in a moment,\" she said and smiled at him. \n\nShe collected her coat and suitcase, and they walked to his car. It felt strange to be alone with him again, but it had been so long since that night, she just needed to concentrate, and everything would be all right.\n\nHe looked at her, and she felt uncertain at the warmth in his eyes.\n\n\"I hear from Robert that you're doing well at work.\"\n\n\"Yes, I enjoy it a lot more than I had thought I would,\" she said. \"But since you're the boss, I can't complain, can I?\"\n\n\"Of course, you can. That's what the boss is for, you know.\"\n\n\"Yes, well, I like it here actually. You have some good people working for you.\"\n\n\"I know.\" He held the door open for her, and she got inside.\n\nAs he started the car and pulled out of the parking lot, she turned and looked at him.\n\n\"Is there a special occasion since we were invited today?\"\n\n\"Not that I know of. Just my parents wanting to have some company, I guess.\"\n\n\"Will Matt be there?\" she couldn't help herself from asking as she tried to act casual and look out the window.\n\n\"I believe so,\" he said in a voice that sounded a bit off.\n\nShe turned to him and saw that his smile had turned into a frown. Maybe it wasn't the best topic for conversation. He knew all about her infatuation for Matt.\n\nThe silence settled between them as he drove them out of the city and onto the motorway, heading north to his parent's mansion outside the city.\n\nThe few attempts that she did on starting a conversation on neutral topics were only met with short answers from Damon. Eventually, she took the hint and watched the scenery as he drove. It felt nice to just sit quietly together, each lost in their own thoughts. ",
        "She leaned her head against the window and closed her eyes for a while, feeling her body calming down and resting. It had been a long day, and it would be a long evening too. Through half-opened eyelids, she glanced over at Damon. \n\nHis eyes focused on the road and watching the traffic, while he moved his hands with sure motions on the steering wheel and the gear shifter. His hands were tanned and looked strong. They reminded her how it felt to be touched by those hands. \n\nThey were about twice the size as her own hands. Each of his fingers both longer and broader than hers. She had never really thought about how different a man's hands were compared to a woman's. \n\nShe glanced down to her own smaller hands and realised that she would never have the same strength as he did. She wondered briefly what it would feel like if he chose to corner her against a wall and started lifting her. \n\nWould he break a sweat or would it so effortlessly that she wanted to just stay there? Would he want to take there like that? She felt a flush of warmth spread across her lower body at the thought. Would she want that? Oh yes, most definitely. \n\nShe felt herself getting aroused just by the feeling of being unable to move away from him. To have him force the pleasure upon her body, to let him decide how fast and how deep he wanted to go while she wrapped her arms and legs around him to hold on to him.\n\n\"What are you thinking about?\" Damon suddenly asked, making Ava jump in her seat.\n\nOh shit. Was he a mind-reader, after all?\n\n\"Uhm, nothing,\" she said quickly, knowing that her voice sounded a bit hoarse. \n\nShe shifted in her seat, and at the same time, she felt a sweet scent of arousal coming from her lower body. She felt mortified. Could he scent her arousal?\n\nShe needed to think of something boring. She looked out the window and tried to concentrate on reducing the heat levels inside of her. Once again, Damon was at the front of her mind, while Matt was nowhere. And she was supposed to be in love with Matt, wasn't she? \n\nSo, why had her mind started to focus on Damon instead? Was it because he was there, or was it merely because she responded more when he was around?\n\nShe quickly glanced back at him and saw that his eyes were focused on the road again. She roamed her eyes over his muscular thighs, and further up to the bulge that his suit-jacket couldn't fully hide. Was he aroused, she wondered briefly? \n\nNo, he was just large. He didn't need to be aroused to fill his pants. She shook her head at her own thinking. She was beginning to have sexual fantasies all the time. It was a sure sign that she needed to get laid or find another outlet for her feelings. \n\n<center>***</center>\n\nThe dinner at the Sheridan residence was as always a crowded and nosy affair. Several people had been invited besides the family, and they all sat around their large dining table and enjoyed an excellent meal. \n\nSeveral friends of the family were present, along with a few family members that Ava had met many times before. But the most interesting addition was the girlfriend that Matt had brought with him. \n\nShe was a beauty, and Matt seemed totally lost in her. It was cute to watch, and Ava was surprised to discover that she didn't feel as envious as she thought she would. They had met the woman on the weekend of Lucy's birthday party, and it seemed that they had really gotten on well after that.\n\nStill, judging by the sort of woman that could win Matt, Ava knew that she had never stood a chance. She wasn't the easy-going, flamboyant sort of person. Matt's new girlfriend seemed to match him a lot better than she would ever have done. \n\nSuddenly she felt as someone was watching her, and as she turned her head to the right, she saw that Damon was watching her reaction to Matt's date. She lowered her eyes to her food. \n\nHe would probably mistake her sadness for unrequited love for his brother. Well, maybe it was. She had been so sure that she had been in love with Matt, longing to talk to him and hear his laughter as someone told a joke. But the rest of that fantasy had always felt like a blur. \n\nShe had never felt any strong urge to bed him or stare at his body for hours. She lifted her eyes and glanced at Damon again. He was still watching her in his silent, monitoring way. She smiled at him, noticing how he surprised he was by that sudden turn.\n\nAfter the food had been eaten and praised, the party started moving into the parlour for coffee and brandy. Ava took the opportunity to hurry to the ladies' room.\n\nWhen she came out, she saw that Damon was standing in the hallway.\n\n\"The gents are in the other direction,\" she informed him.\n\n\"I need a word,\" he said and turned into another hallway.\n\nAva was surprised but followed him. He stopped by a window at the end of the hallway. They could still hear the faint music from the parlour, but none of the other guests would listen to their conversation unless they started shouting.\n\nAva waited for Damon to start talking. This was his idea, so he could decide the agenda.\n\n\"Are you okay?\" he asked.\n\n\"Huh? Yes, sure.\"\n\n\"I'm sorry I didn't tell you about Matt earlier. I should have remembered that he would bring someone.\"\n\n\"I'm fine, Damon. Don't worry.\"\n\n\"Are you really sure? We can drive back tonight if you prefer. I didn't drink anything.\"\n\n\"Please, Damon. Can we just not talk about it?\"\n\n\"I know you wanted him, Ava. You said so yourself. And you looked so sad when we sat at the table.\"\n\n\"That was because I realised that it was all a childish crush, and it made me feel stupid.\"\n\nWithout hesitation, he embraced her softly, holding her in his arms and comforted her. It was too much. The strain from the last few months combined with the evenings event proved too much. She had managed to keep herself under tight control the whole evening, but now the dam was breaking. \n\nShe felt a few tears threaten to fall and her throat tightened. She tried to hold it all back, but it was no use. She started sobbing, digging her face into his shirt, and allowing herself to feel the remorse of having lost a chance at love. \n\nTears were streaming down her cheeks, and she knew that her makeup would probably go the same way. She tried to pull back, so she didn't ruin his shirt, but he just held her closer. Giving her his strength when she needed it the most. \n\nShe clung to him, allowing herself to be weak and accept everything he offered. Knowing that it was better to face the reaction than to suppress it any longer.\n\nEver so slowly, her sobs became fewer, and the shaking of her body was coming to an end. She felt his strong arms holding her so close, feeling as if his strength finally rebuilt her own. Eventually, the flood of tears stopped, and it felt as if everything had been lifted away from here. \n\nThe heavy burden that had rested on her shoulder felt somewhat lighter and more bearable. Damon's warm body was enveloping her, making her feel safe and protected. He always had that effect on her, and this time she really appreciated it. \n\nShe felt his chin resting on the top of her head, as she started to take in his manly scent coming from his broad chest. \n\nHe was always so strong and confident. She had always wished that some of that confidence could transfer to her. She wanted him to keep holding her, to stay with her for a while. She wrapped her arms around him and rested her head against his chest. \n\n\"Feeling better?\" he asked.\n\n\"Yes. Much better. Thanks.\"\n\n\"Come. I'll show you to your room. You can relax there. There's no need to rejoin the party.\"\n\nAva laughed sheepishly.\n\n\"No, I probably look frightful, right now,\" she said and dried her eyes with a handkerchief. \"Oh, no, your shirt, Damon,\" she said as she pointed to the mascara smudges at the front of his white shirt.\n\n\"I need to change that. Or they will think I have been having a lot of fun with a mascara wearing woman.\"\n\n\"Fun, no. I'm sorry for the mess, Damon.\"\n\n\"Don't worry. I have plenty of others.\"\n\nHe put his arm on her shoulder and steered her to the back stairway. Soon they were standing outside the guestroom that she usually had. She opened the door and walked inside. Her suitcase lay open, and her work-clothes were hanging on the cupboard.\n\n\"Can I get you something?\" Damon asked.\n\n\"I'm good,\" she said. \"Thanks, Damon,\" she said and turned to him. \"For everything.\"\n\n\"You're welcome.\" He gave her one last pat on her shoulder before he turned to the door.\n\n\"Damon?\"\n\nHe stopped and turned to look at her.\n\n\"Will you stay?\" \n\nShe felt the world turning as she uttered the question. She wanted to keep him by her side, no matter what that included.\n\nShe could see him struggling with the answer. He was probably thinking of a polite way to turn her down.\n\n\"We don't have to do anything. Just lay beside me?\" she pleaded.\n\nHe ran his fingers through his hair. A clear sign that he was stalling or thinking heavily.\n\n\"I can't, Ava,\" he said hoarsely. \"I won't be your rebound guy... and I can't keep my hands off you for one more night. I have to go,\" he said and almost ran from the room.\n\nAva watched as he walked quickly away from her as if some scary guard dogs were chasing him. If it was one night she really needed a man, this was the one. And he wasn't willing. \n\nIt was too bad. She would have given him everything just to be near him.\n\nShe closed the door to her room and started to undress. \n\nShe could go to his room. She had done that before, but he was probably right. This was not the time to build a new relationship. To try to start over with clean slates when her heart felt broken by another man. \n\nNo, she would sleep alone tonight, and use the next few weeks to decide what she really wanted. \n\nDamon was a good man. She had always known that, and his refusal to stay only made it more evident. \n\nStill, his words indicated that he had actually wanted to stay. Why didn't he? Why couldn't he just have lowered his standards for one night? Any other man would have jumped on her suggestion and stripped her naked. \n\nMaybe Lucy was right after all. The older brother would suit her much better than the younger. She just hoped that Damon would still be available when she had done her recuperating time. \n\nShe located her mobile and placed it on the nightstand. A message from Lucy was drawing her attention.\n\n'Are you all right?'\n\nYes, they were siblings. They even sounded the same. Ava smiled. They were the best friends she could have. Really, the best.\n\n'Yes. I think I'm falling in love with Damon.' She sent it to Lucy.\n\n'Told you.'\n\n'Wiseass!'\n\n'Why is he here and not in your bed?'\n\n'He's a stubborn gentleman.'\n\n'I can knock him over the head and take him to you.'\n\n'Don't you dare! Give me his phone number. I'll send him some nude shots instead.'\n\nThe phone number arrived shortly after, and Ava saved it to her contact list. Then she sent him a message.\n\n'Can I drive with you tomorrow?'\n\nShe skipped the nude shots she had threatened with. Lucy would probably be beyond herself with curiosity when she saw that Damon got a text message.\n\n'Sure. We will start at 10. Damon.'\n\nLucy answered right after.\n\n'What did you send him? He's got a broad grin on his face.' \n\n'X-rated material. Not for the faint-hearted.' \n\nShe wrote, followed by a few winks and smiles. She bet that would keep Lucy up for a few hours if she didn't manage to steal Damon's mobile before that. All in all, it was a small payback for that prank that Lucy had pulled on her.\n\n<center>***</center>\n\n<center>Chapter 6 Yanking his tie</center>\n\nThe next morning, they said their goodbyes and headed back home. Ava enjoyed sitting beside Damon while he was driving.\n\n\"Did you get any sleep last night?\" Damon asked.\n\n\"It could have been better,\" Ava said truthfully.\n\n\"Oh?\"\n\n\"But it was okay. You? Did you sleep well?\"\n\n\"Could have been better, yes,\" he said with a smile and a look in her direction.\n\n\"Did Lucy show a keen interest in your phone yesterday by any chance?\"\n\n\"Yes, since you mention it. She tried to grab it from my hands. It nearly crashed to the tiled floor.\"\n\nAva laughed. \"I thought so.\"\n\n\"What was that about?\"\n\n\"I just texted her a little. Gave her a piece of her own medicine.\"\n\n\"Which medicine?\"\n\n\"A small prank, that's all.\"\n\n\"Anything interesting?\"\n\n\"Nah, I was just taking advantage of her vivid imagination.\"\n\n\"Okay, spill. Anything illegal?\"\n\n\"In some countries, probably.\"\n\nHe sighed. \"Let's hear it.\"\n\n\"Relax, Damon. I only threatened to send some nude shots to your phone right in the middle of the party.\"\n\nHe grinned. \"Nude shots, eh?\"\n\n\"Yep.\"\n\n\"Of you?\"\n\n\"Of course. What do you take me for? I won't mess with copyright.\"\n\n\"So, when will I get them?\"\n\n\"Get what?\"\n\n\"The shots?\"\n\n\"It was just a joke, remember?\"\n\n\"I have to have something to show Lucy when she nags.\"\n\n\"Ha-ha. No way.\"\n\n\"You're not giving me something to masturbate to?\"\n\n\"Yikes, Damon. I don't want to know that.\"\n\n\"Sissy,\" he said and sounded all too smug about it.\n\n\"Probably. I prefer to say conservative.\"\n\n\"Nothing wrong with that. But a few nude shots would be fun. Just send them over when you're ready.\"\n\n\"Will you send me dick-picks in return?\"\n\n\"Not a chance.\"\n\n\"I'm not the only conservative person in town, I guess?\"\n\n\"Guess not,\" he said and laughed.\n\nShe liked this Damon a lot better than the brooding one. He seemed a lot more relaxed this morning as if the dinner party had done him good. He worked too much. Ava had concluded that a long time ago, and after working beside him for a few months, she had proof. \n\nNo wonder his business was thriving. But what did it cost him to invest that amount of time in his work? He had never been married or had kids. She knew he'd had plenty of girlfriends in the past, and there were a lot of women throwing themselves after him, so it was clearly not a lack of offers.\n\n\"Why haven't you settled down, Damon?\"\n\n\"Settled how?\"\n\n\"Wife, kids, large house, dog and cat. That kind of settled.\"\n\n\"Maybe I'm not the family man?\"\n\n\"I doubt that. You spent a lot of time fawning over your siblings.\"\n\n\"Maybe I want that but only with the right woman.\"\n\n\"Seems fair. So, where is she? This perfect enigma.\"\n\n\"Maybe I haven't found her yet.\"\n\n\"Or maybe you haven't even bothered to look for her.\"\n\n\"What makes you think that?\"\n\n\"Duh! Since you haven't settled, of course.\"\n\n\"Maybe it's not me that slows us down.\"\n\n\"Oh, dear. Lost love and all that?\"\n\n\"You could say so.\"\n\n\"Have you ever thought of working less? Maybe that will improve your searching.\"\n\n\"I'll just get bored.\"\n\n\"You need to practise more.\"\n\n\"Practise?\"\n\n\"Yes, practise how to relax. To do something else with your time.\"\n\n\"Any suggestions?\"\n\n\"Plenty. I'm the chill expert. All it takes is a good movie and some fast-food.\"\n\n\"Sounds fun,\" he said and smiled.\n\n\"I know one thing for sure,\" she said.\n\n\"What's that?\"\n\n\"You will be an excellent father one day, Damon.\"\n\n\"Oh?\"\n\n\"Yes. With the way you're constantly monitoring and steering the rest of us like you were some kind of father substitute.\"\n\n\"That didn't sound like a clear compliment.\"\n\n\"It is a compliment. But it's needless to add that your younger siblings can't wait for you to get started on those kids, so you can get out of their hair though.\"\n\n\"Have they said that?\"\n\n\"They don't have to. I can guess very easily based on Lucy's attempts to get you messed up in my affairs. It's a desperate attempt to get more space to breathe.\" \n\nShe sent him a knowing smile, to emphasise that she saw right through them all.\n\n\"I don't think that's the entire truth.\"\n\n\"No? So what else is missing?\"\n\n\"You'll figure it out one day,\" he said as he stared right ahead, and seemed to concentrate on the road.\n\n\"I can probably force you to confess,\" she said and glanced down to his thigh.\n\nHe gave her a quick look and noticed where she was staring.\n\n\"How?\" He seemed to take a deep breath at the same time as if he was preparing for something truly painful or evil.\n\n\"I bet you're ticklish,\" she said and grinned.\n\n\"Nope.\"\n\n\"Oh, come on. Everyone is ticklish somewhere.\"\n\n\"I'm driving, in case you haven't noticed,\" he said in a firm voice, but she could still see that he was smiling.\n\n\"Okay, I'll just test that theory some other time, so we don't end up in a ditch.\"\n\n<center>***</center>\n\nAnother few weeks passed, and Ava settled into the daily routine of going to work and spending the weekends relaxing. She often went for long walks with Lucy and other friends. Life was good, except for one thing.\n\nDamon kept his distance, only sticking to the professional, work relationship that was needed. She knew that he was doing the right thing for her as she was in no position to start a relationship. Still, it sometimes ached to look at him and feel the ever stronger need to be beside him. \n\nIt had come on so gradually that she hadn't even noticed that Damon had become her sole focal point in life. She felt drawn to him as if her eyes had finally opened and revealed him. It was like she had never really seen him before. \n\nWell, she knew she had since she had known him for a great many years, but he had always been Lucy's annoying older brother and nothing besides that. Now, he was so much more. Her boss, her friend and at one time, her lover. \n\nShe didn't miss loving Matt. She wanted to feel loved, to feel cherished by another person. To feel that she meant something. Why hadn't Damon just have accepted her offer and take advantage of her that night of his parent's dinner? \n\nIt puzzled her that the teasing man that had thrown sexual suggestions to her had suddenly decided to give her space to finish one relationship before moving on to the next. It was too noble and totally unnecessary. She was ready to move on.\n\nShe was constantly reminded of that night that they had shared, and the memories were providing her dreams with constant pictures of a sexy man making love to her. Which was quite lovely actually, had it not been that she had to meet him every day while remembering every little detail from her X-rated dreams at the same time. \n\nIt was unnerving, and she found herself trying to hide her face whenever he was near. She was sure he knew everything about that as he often gave her a self-satisfied smile and asked if she had slept well. \n\nHe never did that with any other of their colleagues, and she just knew that he was well aware of what sort of dreams were haunting her. The temptation to touch him was building. \n\nThe more she got to know him, the more she liked about him. And she knew she wasn't the only one to have that longing look when Damon was around. She could see it in her female colleagues, and hear the collective sigh that went through the group. \n\nIf Damon ever showed up shirtless, she was positive that a few of them would faint. And she would probably be one of them, she smiled ironically. Oh well, eye candy was brightening her day, that was for sure. \n\nApart from that challenge, she enjoyed her work immensely. The men outnumbered the women among the staff, but that wasn't bad at all. She got on really well with most of them and liked the friendly atmosphere.\n\nSome of her male co-workers had shown interest in her, but they kept their attention on a professional level. Even Robert gave her a wink from time to time, but he held himself back. \n\nShe liked Robert very much. He was her supervisor. He was pleasant to work with, and he had a lot of patience whenever she made a mistake. She knew he was single, but he had told her that the boss had ordered them all to give her some room since she was close to his family. \n\n\"And you don't mess with the boss,\" Robert had told her with a broad smile. ",
        "She had understood that, even after a short while. Damon was the boss here as well, and he demanded complete focus and effort.\n\nBut that comment that he had warned them off, bespoke of an older brother threatening to hit anyone that dared come near a younger sister. Ava thought it was hilarious, that he would even think that she needed protection. \n\nAs she carried a cup of coffee into Damon's office, she couldn't help but wonder who took care of Damon? As the oldest brother, he seemed to take care of his siblings, and at work, he took care of his staff. But who took care of him? \n\nDid he have a girlfriend stashed away somewhere that popped into his bed once in a while? Lucy hadn't said anything about that. At least not lately. In earlier years, she had heard plenty of Damon's conquests, but lately, there had been a blank spot in that information flow.\n\n\"Here you go, Damon,\" she said as she placed the coffee cup on his desk.\n\n\"Thanks, Ava,\" he said and smiled at her.\n\n\"Have you got a minute?\" she asked.\n\n\"Sure.\" He grabbed his coffee and leaned back in his leather chair. \"What can I do for you?\"\n\nShe laughed. \"It seems you have done too much already.\"\n\n\"In what context?\"\n\n\"Have you actually warned the other men from flirting with me?\"\n\n\"Not in those words, no.\"\n\n\"Then what did you say?\"\n\n\"I just asked Robert to make sure no one bothered you.\"\n\n\"As in scaring them off, right?\" she asked ironically.\n\n\"I've left the interpretation to them, yes.\"\n\n\"You didn't consider the fact that I might appreciate some masculine attention?\"\n\n\"Would you?\" he asked curiously.\n\n\"Well, I won't know now since you've scared them away, would I?\"\n\nHe just shrugged his shoulder as if he was pleased with the outcome no matter what she thought she was missing.\n\n\"You seem to forget that I'm a grown woman who can take care of myself,\" Ava reminded him.\n\nHe studied her slim, petite body, and shook his head.\n\n\"Nope. You're not scary enough, Ava.\"\n\nShe harrumphed and leaned across his desk. \n\n\"And what do you seriously think anyone will do in the middle of the day in a crowded office?\"\n\nHis eyes turned warmer, and he smiled knowingly as his eyes lowered to her cleavage. She quickly realised that she might be showing more of her skin than initially intended, but she wasn't budging now.\n\n\"I can think of several good answers to that, and none of them will be to your liking,\" he said as if he enjoyed challenging her with his experience.\n\n\"I begin to realise why Lucy wants to choke you with your own tie ever so often.\"\n\nHe laughed heartily. \"Does she? I suppose a tie can have a lot of other good uses.\"\n\n\"Such as?\"\n\n\"I'm not sure you will be ready for that, Ava. Or even want to know.\"\n\nOh, he thought she was some sort of ignorant young virgin, did he? Well, he should know that she was definitely not that innocent, and she was fed up being that only one walking around with sexual fantasies ruining her day. \n\nHe was an expert in using words with double entendre, keeping her wondering if he really meant it in a sexual or a non-sexual way. It was way past payback time, and this opportunity was too good to miss. \n\nShe moved closer, knowing that her position would give him an even better look down to her bra and the top of her breasts. Watching how his eyes followed her lead directly to what she was revealing. \n\nShe moved her right hand toward him and placed her palm on his chest, slowly sliding it down across his chest only covered by his thin shirt. \n\nAs she reached his stomach, she could hear him inhale sharply, and she stared down to his lap, taking in the bulge in his pants and wondering if she should touch him or only watch. \n\nShe moved her fingers to his centre, closing her fingers around his tie, before sliding her hand against his bulge. He moaned. It sounded like a sort of protest reaction, but he didn't move away. Only sat still as if he was too shocked to retreat.\n\nShe grabbed his tie and yanked him a little closer to her face. She opened her mouth as if she was aiming in for a kiss. His eyes were wide open, and he opened his mouth, but no words emerged. She leaned closer and kissed his cheek, using her tongue to push against his skin.\n\n\"I guess a tie can be used for more than bondage, Damon,\" she chuckled into his ear.\n\n\"Oh fuck,\" he cursed.\n\n\"Exactly. Now, are you still worried that I can't take care of myself?\" she asked while she gave him a knowing look.\n\n\"Jesus,\" he said while he breathed deeply.\n\nShe glanced down to his lap and saw that there had been some changes. Some larger changes.\n\n\"Hmm, nice,\" she said. \"And you're asking the wrong question, Damon. I think what you should be asking is whether you are ready or not.\" \n\nHis eyes widened, and he stared at her in shock.\n\n\"When you decide to do something about it you know where to find me,\" Ava said before she turned and walked away swaying her hips a little extra just for the fun of it.\n\n\"Fuck, woman,\" Damon said out loud. \"I have a meeting in five minutes.\"\n\nShe turned and looked at him.\n\n\"So?\"\n\nHe waved his hand to his crotch.\n\n\"I need a few more minutes. Can you tell them?\"\n\n\"Oh dear, oh dear,\" she said in feigned ignorance while she grinned broadly. \"Where is the controlled boss when we need him?\"\n\n\"I'll deal with you later,\" he threatened.\n\n\"Can't wait. Maybe this will teach you from going all alpha male on me. I can take care of myself, Damon. Remember that.\"\n\nAva was still laughing after she had returned to her desk. Damon had managed to control himself and joined his meeting on time, but not before he had delivered a discreet pat to her ass. She had wanted to return the favour, but that would have to wait until the opportunity presented itself. \n\nStill, it had been fun to throw Damon off his high horse for once. She had never seen him that surprised before. At least not that she could remember. It was fun to tease him for a change. \n\n<center>***</center>\n\n<center>Chapter 7 Going all-in</center>\n\nAfter the meeting, Damon came to her desk.\n\n\"I need a word, Ava. Can you come?\"\n\n\"Sure.\"\n\nHer closest colleague looked up in surprise.\n\n\"I yanked his tie earlier,\" Ava explained. \"He's probably still angry about that.\"\n\nThe woman snorted in laughter.\n\n\"Maybe you should consider yanking something else the next time.\"\n\n\"He deserved it after scaring off all my potential suitors,\" Ava said jokingly.\n\n\"He didn't like the competition, I guess,\" another woman said.\n\n\"Keep dreaming, you two,\" Ava said as she grabbed her notebook and heading for Damon's office. \n\nIt was late in the afternoon, and some of the people had already started going home. Ava noticed that the offices beside Damon's were empty. The leaders were often off-site on meetings with clients. It wasn't that unusual.\n\nShe went inside his office and watched as he removed his jacket on hung it on his chair.\n\n\"Close the door, will you?\"\n\nShe turned and did what he asked, before sitting down in the visitor chair in front of his desk. He was removing his tie as well, and Ava lifted her eyebrow and stared at his silk tie.\n\n\"Scared that I will choke you with it?\" she asked.\n\nHe snorted. \"Scared is not the word, no.\"\n\nShe waited for him to decide on the agenda. She opened her notebook and sat ready with her pen.\n\n\"You don't have to write this down,\" he said and smiled.\n\n\"We're still at work so I can at least pretend to be professional,\" she said.\n\nHe sat down on the top of his desk, just a meter from her.\n\n\"Did you mean what you said earlier?\"\n\n\"Mean what?\"\n\n\"When you said that you're ready to move on.\"\n\n\"Yes. I meant it. I've been ready for a long time now.\"\n\n\"What about Matt?\"\n\n\"What about him?\"\n\n\"He's single again. Did you know that?\"\n\n\"No, Lucy must have forgotten to tell me that.\"\n\n\"Will you go for him?\"\n\n\"No. Matt is a nice man, but he's not for me.\"\n\n\"I'm sorry to hear that.\"\n\n\"I'm not,\" she said and smiled. \"I believe my taste has developed. Matured, you can say.\"\n\n\"Oh?\"\n\n\"Yes, I think I'm more interested in men that are older than me.\"\n\n\"How much older?\"\n\n\"A few years at least. Older both in experience and years.\"\n\n\"I'm 31,\" he said. \"Is that too old for you?\"\n\n\"Perfect.\"\n\n\"Ava. Are you playing with me?\" Damon asked directly.\n\n\"No. I'm done playing.\" She leaned forward and placed her hand on his knee, caressing his leg through his pants. \"Now, I'm aiming for taking what I want,\" she said.\n\nHe placed his hand above hers, preventing her from moving further up his thigh.\n\n\"I'm not interested in a one-night stand,\" he said. \"If we go for this, we're going all-in. Nothing less.\"\n\nShe gasped and looked into his eyes.\n\n\"All-in sounds good,\" she said hoarsely.\n\n\"You get that? I won't allow you to throw me out in the morning.\"\n\nShe laughed. \"As if I could.\" She looked him over. His stern look forced her to be truthful. \"One night will never be enough, Damon.\"\n\n\"Good,\" he said and leaned toward her. \n\nShe watched him and opened her mouth as his lips came down on her, kissing her softly, before turning deeper. She moaned and wrapped her arms around his neck, leaning back to allow him to tower above her. \n\nOh my, she thought as she held on to him like she was starving. He felt like an erupting volcano. Calm and collected for a moment, before erupting with full force, unleashing hidden desires that she had always hoped for but couldn't see. \n\nHe moved his hand across her breast, and she wanted to feel him against her naked skin. Wanted to have him in a bed instead of a hard chair.\n\n\"Damon,\" she murmured, as soon as he let go of her lips. \"Not here,\" she protested.\n\nHe leaned his forehead against hers and breathed deeply. His hands had stopped wandering underneath her blouse.\n\n\"Sorry,\" he said.\n\nShe placed her hands on his cheeks and kissed him.\n\n\"I want you in a bed,\" she said and saw his confusion turn into understanding.\n\n\"Yes,\" he said.\n\nQuickly they arranged their clothes and headed out of the office. Her female colleagues gave her a thumb up as Ava collected her things. She blushed and gave them a smile as she hurried after Damon.\n\n<center>***</center>\n\nAs they entered Damon's apartment, Ava barely had time to look at the place, before Damon lifted her and carried her into his bedroom.\n\n\"Oh my,\" she said out loud. \"Sexy.\" \n\nBeing carried was probably old-fashioned, but it was immensely stimulating to feel his strong body against hers. She knew that her lower regions were feeling wetter just by having him around.\n\nInside the bedroom, he sat her down on the bed, and they both started undressing. Ava laughed as she saw Damon struggle with the buttons in his shirt.\n\n\"Would you like some help?\" she asked cheekily before she started to unbutton the rest of his shirt. \n\nHe unbuttoned his cufflinks at the same time. As she opened the last button, she pulled his shirt down from his shoulders and leaned in to kiss his naked chest. Standing so close to him, the top of her head reached his chin, and she had a good view of his muscled forearms and chest. \n\nShe placed her palms against his warm skin and moved them all over his tanned skin, taking in all the bulges and tracing the small mat of hair from his nipples to his lower body. She ran her fingers to the top of his pants and started opening them.\n\nShe could already feel how hard he was behind his clothes, rubbing her fingers slowly across the bulge in his pants.\n\nHe grabbed her hands and stopped her.\n\n\"Wait,\" he said hoarsely. \"I will come in my pants if you keep that up.\"\n\n\"I want to see you. To feel you,\" she said.\n\n\"You will,\" he said and kissed her deeply.\n\nShe felt as if she was swooning. Feeling him undressing the rest of her clothes as he made love to her mouth. It was like her body had ignited from the inside and out. Preparing itself for anything that he wanted to give to her. \n\nShe wrapped her arms around him, feeling how large and strong he was. Taking comfort in the fact that he seemed just as engrossed in her as she was in him. She had never lost all sense of time and place before when she was with a man. \n\nUsually, it would feel awkward to stand naked in front of another person, but with him, she felt sexy and warm all over. He bent his head and kissed her right nipple, sucking her slightly until she moaned and leaned back. \n\nFeeding herself to his hungry lips while holding on to his arms to prevent herself from falling. In a daze, she felt him push her back, and soon she felt the soft bed against the back of her knees. \n\nHe gave her a light nudge, and she fell onto his bed, laughing as she tried to pull him with her. He didn't budge as easily as she had, and he leaned over her in a more controlled manner. She guessed he was trying to avoid crushing her. \n\nShe pushed her hands down to his pants, and this time he allowed her to undress him. She pushed his pants and trunks down and felt his hard dick against her hand before he retreated from the bed.\n\nShe protested loudly but watched as he removed the rest of his clothes and stood before her. He breathed a sigh of relief as he let his dick free of the confinements. She stared in awe as his manhood hardened even more until it pointed upwards. \n\nShe took in the sheer size of him and reminded herself that she had been able to take him last time she had tried. Still, she wasn't scared. She wanted him too much to worry about the slight pain that she would probably feel when he entered her. \n\nHe turned to the dressing table and found a package of condoms. She watched as he ripped open one and started rolling the condom over his shaft. She felt a strong need to touch him, to caress him, and she held her arms open to him, inviting him to come closer. \n\n\"Come here, Damon.\"\n\nHe smiled as if he enjoyed that she knew exactly who was with her this time. He climbed on top of her before lifting her further up in the bed.\n\nShe giggled softly as she wrapped her legs around his waist and held on. He leaned down and kissed his way from her neck and down to her breasts, sucking her nipples. She tried to grab his face and bring his lips over to her mouth again, but he kept on kissing his way down to her stomach.\n\n\"Damon,\" she protested.\n\n\"Hmm,\" he murmured.\n\n\"My lips are up here,\" she reminded him.\n\n\"I know. But you have some lips down here as well,\" he said in a suggestive voice.\n\nShe squealed in protest as she tried to move away from him, laughing at the same time.\n\n\"It tickles,\" she gasped as he kissed her belly button.\n\n\"Lay still and let me feast on you,\" he said.\n\n\"Uhm,\" she started to protest, but at the same time, she felt him kiss her clit. \n\nThe stubble from his beard was rubbing against her sex lips, and she sighed in surrender. Silly girl, she wanted to kick herself. If a man wants to get down on you, why object? She spread her legs wider to allow him more room and she felt how he kicked her arousal into another gear. \n\nShe groaned loudly, and he sucked her clit and slowly pushed a large finger inside her. She could hear the sound of the wetness he found inside of her, and she arched her body closer to meet his finger as he pushed deeper.\n\n\"Damon,\" she gasped. \"I want you.\"\n\nHe kissed her clit one last time, and she felt his body shake in response. She reached for him, trying to hold him closer to her and finally, he moved higher, positioning his swollen dick against her sex lips. She wrapped her legs behind his back, trying to pull him closer. \n\nHe held his shaft as he positioned himself, before sinking slowly inside of her. She inhaled sharply as she felt the sting as his large dick pushed against her tight channel, feeling how much larger he was compared to his finger. \n\nHe retreated slightly, taking it slow and easy to make sure she got used to him. She followed him, did not want to let go.\n\n\"Easy,\" he murmured before he bent down and kissed her lips.\n\nShe tasted her own essence, and the thought of that made it even more arousing. She lifted herself toward him, taking him deeper inside. Feeling how his body enveloped hers and made her feel safe and protected in his arms. It was like nothing she had ever experienced before. \n\nHe was the attentive lover that cared more about her pleasure than rushing for his own finish line. Usually, her lovers had been too occupied with their personal experience than to worry about hers. But Damon had never been the egocentric type. Not with her. \n\nInstead, he pushed slow and deep inside of her, before retreating slightly, and repeating the process. Rubbing against her g-spot and her inner walls while she tightened around him in a desperate attempt to keep him inside. \n\nShe moved her hand down his chest and aimed straight for his dick. Wanting to know how many inches he kept from her.\n\n\"Impatient, eh?\" he murmured as he grabbed her wrists and held her arms over her head, preventing her from exploring.\n\n\"Unfair,\" she groaned.\n\nHe chuckled slightly and kissed her to make her happier. She smiled at him.\n\n\"Next time,\" he said. \"Then you can explore.\"\n\nInstead, she used her legs to push him deeper inside, tilting her pelvis as she pleasured herself on his shaft.\n\n\"Oh my,\" she gasped as she realised just how good it felt to feel him rub against one specific spot. \n\nAt the same time, he pushed deep inside of her and stayed there. She felt as if she was going crazy by the lack of movement but realised quickly that she could provide the motion by tilting her lips. A deep groan came from him, and he started moving again. \n\nRetreating slightly before pushing inside again. He let go of the arms and moved his right hand down to her clit and started rubbing her. It was as if he had begun to press another button, leading to her ultimate surrender. Instantly all her inner muscles tightened, and she opened her mouth to collect the air she needed. \n\nShe could hear herself moaning. Knowing it was just a matter of time before she started begging. It was too much. Too good. And she knew something would have to give and soon. The tension inside of her had been so high that it was inevitable that something would slip.\n\nShe didn't have to wait long. Just as he plunged inside of her one last time, her body went over the edge that she had been clinging to. She screamed as her channel clasped around him. \n\nPulses and contractions started deep inside of her, and she felt her entire body concentrate on him and the pleasurable wave that she was hanging on to. Temporarily she lost all control of her muscles. \n\nShe was relieved that she was laying on the bed, or she might have collapsed entirely by the powerful release. She discovered that Damon was still hard, still plunging inside her body, and she tightened her inner muscles as she tried to help him gain his release. \n\nIt didn't take long. He moved faster and pushed harder inside of her a few more times before he did one last deep push and groaned deeply. She could feel his entire body tightening as he came deep inside her. \n\nHe was breathing hard, and momentarily he closed his eyes as if the pleasure had been too overwhelming to keep them open. She held on to him as he turned them to the side as he collapsed on the bed. She snuggled beside him and placed an arm across his chest in a possessive manner. \n\nMine, she thought. He's all mine. And she had no intention of sharing. Ever.\n\n\"I'm dead,\" he blurted out and laughed slightly.\n\nShe joined in his laughter, and they lay beside each other for a while trying to catch their breath. \n\n\"Me too.\" She slid her hands down to his chest and found the condom still on his semi-erect dick. \"Then I guess I'll have to do the tidying?\"\n\nHe rolled over her and kissed her deeply.\n\n\"You've awakened the dead,\" he said smugly.\n\nShe laughed deeply.\n\n\"Lay down, you maniac. I need a longer break.\"\n\nHe rolled to her side again and got rid of the condom.",
        "\"Come here, honey,\" he said as he pulled her back to his front and spooned her body with his.\n\nShe pulled the duvet over them both and settled in as she felt his hand touch her stomach.\n\n\"Ooh, nice. I'm staying right here.\"\n\n\"Good,\" he said contently behind her.\n\nThe lay beside each other, softly talking until they both drifted into sleep.\n\n<center>***</center>\n\nThe next morning, Ava woke up to a slight buzzing sound. She didn't recognise the room at first. Then she remembered. Damon. His bed and the best sex ever. Right. Perfect. Except for that annoying sound that was coming from the bedside table. \n\nDamon was still sleeping, and she didn't want to wake him up. That meant silencing that damn thing. She reached for his mobile and saw Matt's name on the screen. She pressed the green button.\n\n\"Damon's phone. How can I help you?\"\n\n\"Ava?\" she heard Matt ask in a surprised voice at the other end. \"What are you doing with Damon?\"\n\n\"Take a wild guess, Matt,\" she said and giggled when Damon tried to snatch the phone from her.\n\n\"About time you two saw some sense,\" Matt said and laughed.\n\n\"You knew?\"\n\n\"Duh? I'm not completely blind yet. Just be nice to him, will you?\"\n\n\"Oh, no problem. I'm always nice.\"\n\n\"Is that for me?\" Damon asked.\n\n\"No, I think he prefers talking to me,\" Ava smiled at Damon.\n\n\"Whatever he has to say he needs to be quick. We have more important things to do.\"\n\nMatt laughed so loud that Ava had to put the phone away from her ear.\n\n\"I heard that, Damon.\"\n\n\"Then take a hint, bro.\"\n\n\"It's not my fault you take so long. About time, so congratulations.\"\n\n\"Thanks. What do you want?\"\n\n\"Mum wanted me to remind you of the family dinner this afternoon.\"\n\nDamon sighed. \"Damn, I forgot.\"\n\n\"That's why I'm reminding you. So you won't have to endure a few hours of phone calls. Bring Ava.\"\n\n\"Tell them we're busy.\"\n\n\"No, we're not,\" Ava interrupted. \"We'll be there,\" she said and ended the call.\n\n\"Why did you say that? I had great plans about staying in bed all day and trying all the positions I've ever dreamed about.\" \n\nHe pulled her toward him and kissed her.\n\n\"Well, you heard him. It's either show up and behave for a few hours or get bombarded with phone calls. I picked the easy way out.\"\n\n\"You think so? At least the phone can be switched off, while at the dinner table I can't have you naked and be inside you.\"\n\n\"Have you considered that my insides may need some rest? You know, exhaustion from overuse is not such a good idea. Besides, you might get skid-marks from too much rubbing.\"\n\nHe laughed heartily.\n\n\"I'm not too worried about that yet.\"\n\n\"Oh, well, maybe you've had more partners than I've had for the last year.\"\n\n\"Ah, no. I think that's the main reason for the urgency yesterday.\"\n\n\"I think you had the patience of a saint, Damon.\"\n\n\"Hmm, does that mean that I get rewarded?\"\n\n\"Most definitely. But I need some sustenance before I can reward you more.\"\n\n\"I can feed you,\" he said and lay spread out on the bed. \n\nThe large bulge underneath the duvet indicated quite clearly what sort of reward he wanted.\n\n\"I meant food, Damon,\" Ava reminded him as she grabbed one of his t-shirts and put it over her head.\n\n\"Hey, where are you going?\" Damon asked when she moved out of the room.\n\n\"I'm going to find out what you normally have for breakfast.\"\n\nHe groaned, clearly not happy with her choice. A few minutes later, he joined her in the kitchen and showed her how to operate the coffee machine.\n\nAs they later sat down and ate cereal, Ava took a sip of the cappuccino he had made her.\n\n\"I'm moving in,\" she warned him. \"This coffee is insanely good.\"\n\n\"And here I thought that I needed to persuade you with my bed-skills? Damn.\"\n\nShe laughed.\n\n\"I can pretend to be undecided if that helps. I adore your bed-skills.\"\n\n\"That's a relief. For a minute there I thought you would prefer the coffee before me.\"\n\n\"Not a chance. I'm just building the necessary reserves so I can keep up with you. But, come to think about it, older men might need a longer rest than us young women,\" she grinned at him.\n\n\"Older men? Just come here, and I'll show you who gets tired first.\"\n\nShe made a kissing sound with her mouth. \"Gladly, but after the cereal.\"\n\n\"Hrmph,\" he said but continued eating his breakfast. \"I have a feeling that the world is against me these days,\" he muttered.\n\n\"Because you have to wait?\" she teased him.\n\n\"I've done nothing but wait for a very long time,\" he said.\n\n\"Meaning?\"\n\n\"I still remember that night,\" he suddenly said.\n\n\"Oh?\"\n\n\"Lucy instigated it. I wasn't aware of what she was planning.\"\n\n\"I know.\"\n\n\"But I know very well why she did it, and I don't regret any of it.\"\n\nAva knew she had to make a decision about what to tell him. It would not help to hide the truth from him.\n\n\"I remember that night too,\" she said.\n\n\"In a good way or a bad way?\"\n\n\"Both, I think. I have never felt so embarrassed in my life.\"\n\n\"And what was the good thing you remember?\"\n\n\"You,\" she said. \"You, Damon.\" \n\nShe lowered her eyes and looked down at her hands.\n\n\"In a friendly sort of way, or something more?\"\n\n\"I love you, Damon,\" Ava blurted out.\n\n\"What?\" He stared at her. \"When did that happen? I thought you were only thinking of Matt?\"\n\n\"Yes, for a long time, I thought Matt would be the one, but he was never available. But after that night, I started seeing you in a different light than before.\"\n\n\"You didn't say anything.\"\n\n\"No, it's been coming on so gradually, and I thought you didn't want me.\"\n\n\"Nothing could be further from the truth.\"\n\n\"Actually, when I first met you, I thought you were kind of scary.\"\n\n\"As kids?\"\n\n\"Yes. You were always Lucy's bossy, older brother, watching out for the silly kids and keeping us in line. It was safe, but I always thought you were kind of scary and grown-up.\"\n\n\"Ah-ha. And am I still scary?\"\n\n\"Not a chance. You're just a big teddy-bear that I want to tickle.\" She grinned at him. \"And to do a lot of other nasty stuff with.\"\n\n\"What nasty stuff?\"\n\n\"I think you will be shocked.\"\n\n\"Not a chance. I've wanted you for so long that I will take anything you will give me.\"\n\n\"Oh?\"\n\n\"I've loved you for a long time, Ava. Ever since you were a skinny teenager and started discovering boys. But you never saw me. You only saw my brother.\"\n\n\"So, all that stupid infatuation for Matt...?\"\n\n\"Hit me right in the chest, yes.\"\n\n\"Oh, god, I'm so sorry.\"\n\n\"But it also gave me plenty of time to build my company, so it wasn't all for nothing.\"\n\n\"I'm sorry that I didn't see you earlier. I thought you were only having brotherly feelings for me.\"\n\n\"Yeah, right. Not very brotherly when I fantasised about your naked body in my bed. I didn't want you to avoid me. And you would have if you had known.\"\n\n\"Perhaps,\" she had to admit.\n\n\"You weren't ready. I knew that. Until Lucy decided that we both needed a kick in the butt.\"\n\nAva laughed. \"Maybe we should return that favour?\"\n\n\"Any ideas?\"\n\n\"Not yet, but I'm sure we can come up with something. As long as it's good and embarrassing at the same time.\"\n\n\"Are you done eating?\" he asked suddenly.\n\n\"Yes, I believe there's another sort of hunger that is more evident.\"\n\nHe placed his hand on top of hers and held on to her.\n\n\"Come here and prove it to me,\" he said.\n\nShe looked up and met his eyes. The heat in his eyes was pulling her toward him. Indicating that he was just as ready for this as she was. He met her halfway, and she felt his warm lips against her own. \n\nShe opened her mouth slightly and started kissing him, taking in the scent of him as she moved her hands up to his shoulders. As the kiss deepened, she heard him groan. \n\nHe lifted her onto his lap and wrapped his arms around her while kissing her harder. She spread her legs over his and pushed her breasts against his chest, feeling as if her entire body was on fire. \n\n\"I love you, Damon,\" she murmured to him.\n\n\"Please, say it again, love,\" he pleaded as he lifted her into his arms.\n\n\"I love you, Damon.\"\n\nHe gave her a long kiss before he placed his hands underneath her thighs and walked toward the bedroom.\n\n\"Prove it to me,\" he said.\n\n\"Oh, I will,\" she said and smiled at him. \"We might be late for that dinner.\"\n\n\"I don't care,\" he said, and Ava saw that he had forgotten his mobile on the kitchen table. \n\nIt was just as well. She wasn't sharing him. Not with a phone nor with anyone else.\n\n<center>***</center>\n\n<center>Epilogue</center>\n\nA few months later\n\nAva grabbed the morning newspaper by the front door. Damon's apartment was now their apartment. Since she was always spending the night in his bed, it had seemed pointless to have an apartment that she never used. \n\nSo, they had put it on the market and had decided to look for a house they could buy together. So much had happened in the weeks following that first night in Damon's apartment. \n\nThey had managed to attend some of the weekly dinner parties at his parent's house, but they received endless teasing about the way they were almost glued together as one person. \n\nShe had never pictured that life with Damon could be so fulfilling and make her feel so happy. They had even started talking about having kids and getting married. It felt so natural and right to think along those lines when she was with him. \n\nHe had cut down on his working hours, and she did her best to make him think about anything else than work when they were together. Their colleagues hadn't seemed surprised at all when they realised that they were a couple. \n\nRobert had only given Damon a clap on his back and pronounced that he had seen the signs a long time ago. It seemed that most of the people around them had known everything that they had failed to see themselves. \n\nWell, Ava blamed herself for most of that, but she was trying to make up for all those lost years, so she wasn't complaining. All ends well for good girls, she smiled to herself as she glanced at the front page of the newspaper she had just collected.\n\nShe laughed out loud.\n\n\"Hey, Damon? Have you seen the newspaper this morning?\" she said as she entered the kitchen.\n\n\"No, why?\"\n\n\"These journalists don't even know how to count. Or spell. Just look at that.\" She handed him the paper.\n\n'Billionaire buys rival. Damon Sheringham, the billionaire, takes his company to new levels by buying rival IT company.'\n\n\"See! And just underneath they have misspelt the company name. But calling you a billionaire is just over the top. Maybe they just added a few extra zeroes to your income. It's a terrible background check. They should be ashamed of themselves. Writing something that silly.\"\n\nDamon just grinned at her.\n\n\"Nah. I think it's great publicity.\"\n\n\"Sure, you do. Every gold digger from miles away will be crawling all over you. Of course, you will enjoy that. Me, I hate that. I might have to sharpen my nails again, and hand out a few uppercuts to the more persistent ones.\"\n\n\"Sounds fun.\"\n\n\"No, it's not. It will ruin all that nice publicity that you just got when I scratch the eyes out of a few women.\"\n\nHe laughed. \"Feel free, Ava. I like it when you get jealous.\"\n\n\"I bet you do. Just wait until I use those fingernails on your backside.\"\n\nHe laughed even harder. \"I knew you had a kinky tendency.\"\n\n\"Still, those reporters should at least have learnt to use the Internet by now.\" \n\n\"Uhm.\"\n\n\"What?\" She glanced at him with a suspicious frown. \n\n\"I think you should sit down first.\"\n\n\"That bad, eh? Don't tell me you're broke and I just lost my job?\"\n\nHe grabbed her by the waist and pulled her into his lap.\n\n\"No, silly. We're safe and sound. But you seem to forget your most important task.\"\n\n\"And what is that?\"\n\n\"To keep me content and satisfied at all times.\" \n\nShe grabbed the newspaper and gave him a playful whack over the head with it.\n\n\"As if,\" she snorted.\n\n\"It's true,\" he said.\n\n\"What is true?\"\n\n\"I am a billionaire.\"\n\n\"You're kidding. No way.\" She tried to leave his lap, but he held her tight.\n\n\"No, I just sold a lot of shares and invited a few investors into the company. So, I am actually a billionaire.\"\n\n\"For how long?\"\n\n\"Well, the money has been invested in property and spread across other shares to reduce the risk. So, forever, I guess?\"\n\n\"I'm fucked,\" she blurted out.\n\n\"Not yet.\" He winked at her. \"But you will be.\"\n\n\"Jesus. People will think I'm the gold digger. This is just so embarrassing.\" She jumped up.\n\n\"So?\"\n\n\"So? Is that all you can say? Oh my god. And they will think that I've slept my way to the top by crawling into the boss's bed.\"\n\n\"An excellent idea. Come here.\"\n\n\"But, Damon, don't you see how that's terribly embarrassing? To have people whispering behind my back that you're fucking your assistant?\"\n\n\"You're not my assistant any longer.\"\n\n\"No, but I started as one when I first got the job. The press will have a field day over that detail.\"\n\n\"Does it really matter, Ava? The people around us, our families and the people we work with, they all know the truth. They know how I've been dogging you around for years. They have seen right through me all that time. Now, how is that for embarrassment?\"\n\n\"Hmm. Yes, fair point.\"\n\n\"Why do you think Lucy took you to my room that night? And why does Robert always ask you to bring me a coffee?\"\n\n\"So it's a conspiracy?\"\n\n\"No, it's love. Everyone knows I love you and have done for years. So, that's what they will tell the reporters if they ask.\"\n\n\"Oh, Damon,\" Ava blurted out and threw herself into his arms and started kissing every part of his face. \"I love you so much.\"\n\n\"Not as much as I do,\" he said and smiled at her.\n\n\"Why don't you prove it to me then,\" she said. \"Before I have to use those fingernails on your back.\"\n\n\"I have a better idea. Why don't I show you my favourite trick with that tie you adore?\"\n\n\"As in tying you up?\" she asked.\n\n\"No, I was more thinking about me tying you up.\"\n\n\"It's my turn to be the boss, Damon,\" Ava said while she rubbed her lower body against his thigh.\n\nHe took a deep breath as his arms tightened around her.\n\n\"Is it?\"\n\n\"Hmm,\" she murmured while she started unbuttoning his shirt.\n\n\"I will be late for work,\" he said.\n\n\"So will I. Do you think the boss will fire me?\" she asked.\n\n\"He might demand some sexual services instead.\"\n\nShe opened his pants and found his hard dick.\n\n\"Something like this?\"\n\nHe groaned loudly. \"Oh yes,\" he said.\n\n\"You're all mine, Damon,\" she said as she kissed his lips while she started fondling his cock head.\n\n\"God, yes. Bossy woman.\"\n\nShe chuckled. \"That's what we gold diggers do, you know.\"\n\n\"I don't care. Sit on me, will you?\"\n\nShe rose up and removed her pants and panties before climbing into his lap again. \n\n\"I guess we need to show people that I've chosen you for more than your money, Damon,\" she said as she placed herself against his hard dick and slowly sank down on him.\n\n\"Like what?\" He groaned.\n\nShe wrapped her hands around his shoulders and started riding him.\n\n\"Your body, of course.\"\n\n\"Hmm. I always thought you preferred my brain.\"\n\n\"I love every part of you, Damon. But right now, I prefer your lips right here,\" she said and pointed to her mouth.\n\n\"Bossy gold digger,\" he said and laughed heartily before he kissed her deeply. \n\nShe moved her arms around his shoulder and held on as she gave as much as she took, leaving them both breathless and late for work. \n\nSometimes sharing wasn't so bad, she thought. As long as they were both happy at the outcome. Getting into the wrong bed had turned out to be an excellent idea, after all. \n\n<center>***</center>\n\n------------------\n\nTHE END\n\n<center>***</center>\n\nPlease leave a comment, either public or anonymously. Whether it is praise or criticism, I'd love to hear from you and learn how to improve my writing. \u202f\n\nTo read more of my stories, please check my author page for links to stories on Literotica and other sites.\n\nIf you want to know when my next story is released, just press the 'Favorite \u202fAuthor' link below this story. All updates will be shown in your Lit profile under 'All activity'. I regularly post new stories and chapters. \u202f\n\nAda"
    ],
    "authorname": "Ada Stuart",
    "tags": [
        "big cock",
        "billionaire",
        "blowjob",
        "boss",
        "brunette",
        "forced sex",
        "friends to lovers",
        "love story",
        "office",
        "reluctant"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/played-by-the-billionaire"
}