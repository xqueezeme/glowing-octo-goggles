{
    "title": "Conjunction",
    "pages": [
        "CHAPTER 1: ENDLESS SUMMER\n\nThe sun beat down on Caden as he made his way through the narrow, winding alleys, its harsh light baking the paved streets enough that he could feel it through the soles of his boots. He wrapped his cloak more tightly about his shoulders, its drooping hood casting a dark shadow over his face. There were few who would brave the streets these days, he only encountered a handful of people who were going about their business, all of them sticking to the shadows of the buildings as they skirted the glare. The white and beige facades of the timber-framed structures seemed to glow such that he found himself averting his eyes, their narrow windows protected by wooden shutters in the vain hope of keeping out the pervasive heat, their towering brick chimneys long idle. He could see the heat haze coming off their sloping, tiled roofs, making the air above them shimmer like a mirage. They had been fashioned to ward off rain and snow, not to endure these temperatures.\n\nWhere once the city had been overflowing with greenery, now the patches of grass were yellow and sickly, the once-proud trees wilting. Caden remembered a time when each and every home had sported window boxes that overflowed with lush flowers, their bright colors, and their wonderful scents raising the spirits of the townsfolk. Now, they lay empty, the gardens left untended. There were no bees buzzing from blossom to blossom anymore, no butterflies fluttering on the breeze.\n\nIt was noon, but that term was slowly losing its meaning. The days grew ever longer, the sun lingering in the heavens, the cloudless sky as deep a blue as he had ever seen it. How long had it been since he had felt the rain on his face? When exactly had the seasons ground to a halt, plunging the world into an unending summer? He had become accustomed to this such that it was starting to feel normal, and that thought worried him. To adapt was also to forget, to become complacent.\n\nHe crossed a small bridge, the burbling stream that used to course beneath its stone arches long dry. He leaned over the side, seeing its parched, cracked bed. It wasn't too long ago that a chorus of croaking frogs would have greeted him here, the cool night air rustling the reeds on the shores, but he found that he could scarcely recall the sound.\n\nHis destination loomed ahead of him, the twisted tower rising above the city's slanted rooftops. It was a far older edifice than the buildings that surrounded it, the aging stonework held together more by the creeping plant life that had woven between the bricks than by its own ancient mortar. At its base were several gnarled trees, their stout trunks sprouting from the structure's foundations, their winding branches serving to brace it. They had also suffered as of late, but they still retained some green leaves here and there, kept alive by the arcane power that resided within the crumbling walls. At its peak was a thatched roof that framed a large clock, its bronze hands slowly ticking away in spite of the fact that the twenty-four-hour day no longer held much meaning for the people who lived beneath it.\n\nCaden walked up a snaking path that was lined with old cobblestone, the grass to either side of it slowly growing healthier as it neared the base of the structure, leeching off the aura that it exuded. Caden was attuned to its magic. He could feel it on his skin, in his very bones, an entirely different kind of warmth washing over him. If he strained, he could almost hear it on the air, a kind of musical hum with no obvious source. As he reached the old oaken door and turned the handle, the oppressive heat seemed to fade, as though a bubble of cool air had settled around the tower. It was relieving, but it did little to put him at ease.\n\nIt swung open on creaking hinges, and he stepped over the threshold, emerging into a grand library. From the outside, no one would have guessed that such a wealth of knowledge could have been contained within, shelves packed with dusty tomes extending high into the air as they spiraled up the center of the tower. A winding staircase led up to the top level, corkscrewing its way up the length of the structure, its banister carved with flowing floral patterns. No matter how many times Caden set foot inside, the disconnect between its outward appearance and its interior always made him do a double-take. The space within was somehow larger than the structure should allow, a powerful spell that had been cast long ago bending reality like a bowed branch, keeping it from springing back into shape.\n\nIn the center was a large wooden table, its surface strewn with yellowed manuscripts and leather-bound books. The Master was hunched over it, poring over a scroll, holding up an eyeglass as he scanned the faded text. He looked up from his work as he heard the door close behind Caden, his bushy brows furrowing. He was wearing a long robe that was fastened about his waist with an ornate belt, the fabric a slate grey in color, patterned with arcane runes woven from threads of shining gold. His bushy, grey beard was almost long enough to reach his stomach, his face wrinkled by age. As old as he was, he remained spry, his blue eyes bright and alert.\n\n\"Oh, it's you, Caden. Come, come,\" he said as he waved him over with a liver-spotted hand.\n\n\"You summoned me, Master?\" Caden asked as he walked around the table. \"If this is about the books on cryomancy, I'm still sorting through them.\"\n\nHe stopped beside the old man, eyeing the scroll that he had been examining. The yellow parchment was stretched taut between two wooden rollers, each one topped by ornate finials cast from sterling silver. There were notes strewn around it haphazardly, it seemed that the Master was in the process of translating the rows of odd pictograms. It was no language that Caden recognized, nor did he see any common runes or symbols. Whatever it was, it was obviously very old.\n\n\"I knew that it was somewhere in the library,\" the Master began, picking up his eyeglass again. \"There was some...vague recollection in the back of my mind, a feeling of deja-vu, as if I had lived this moment before. When one reaches such an advanced age as I, one's memory tends to get...patchy.\"\n\n\"What is it?\" Caden asked, pulling back his hood and shaking out his mop of brown hair.\n\n\"This has all happened before,\" the Master replied, sifting through his stacks of notes with a frantic urgency. \"It is cyclical, at least...that's what these accounts have led me to believe. I must have read this scroll in passing long ago, or perhaps it was referenced by another scholar, but it tells of a great calamity that befell a long-dead civilization.\"\n\n\"Read it in passing?\" Caden asked, cocking his head. \"It looks like you're translating it to me.\"\n\n\"I can hardly be expected to memorize every damned language that has ever passed beneath my nose, boy,\" the Master grumbled. \"There are thousands of them, and my memory is finite. I'm sure there must be a book of old notes hidden somewhere in the tower, but I found this first, and time is not our ally.\"\n\nHe snatched one of the pieces of paper, his eyes scanning the looping handwriting that he had scrawled upon it with his quill.\n\n\"It was five thousand years ago that an identical event took place, though this scroll is not nearly that old. It is simply a record of an account passed down to a historian during the fourth age. Thank the Gods he saw fit to make a record of it, or we might never have come across this crucial piece of information.\"\n\n\"Are you going to tell me what it is?\" Caden asked, the Master grumbling under his breath.\n\n\"Would that I had been granted an apprentice with some measure of patience,\" he complained, rolling the scroll across the table to expose more of the parchment. \"The account tells of an age when the days grew ever longer, and the people began to pine for winter's release. The sun lingered in the sky, scorching the land, bringing drought and famine. The rivers dried up, the crops failed, and hope that the calamity would pass began to fade. I have been able to find myths and oral histories from other cultures that corroborate this. The sorcerers of the time, known as the Magi, devised a plan. They found a way to correct the celestial imbalance that they saw as the source of the problem.\"\n\n\"Who were these people?\" Caden asked, leaning on the table as he glanced over the faded pictograms.\n\n\"Their name has been lost to the ages, none still live who remember what they called themselves, but they constructed great monuments and temples in the far East. Those edifices still stand to this day, if the reports of explorers and traders are to be believed. Their kingdom spanned the shores of an ocean in a land that was once green, but has long since given way to barren desert. It appears that they were very knowledgeable in the ways of magic, because whatever secrets they used to perform this feat are not known to the sorcerers of our age. The scroll speaks of an object that they created, an artifact that shone with dark light, though I cannot discern what the author meant by that. I know of no such devices.\"\n\n\"I don't suppose they made a record of a recipe or a blueprint?\" Caden muttered, already knowing the answer.\n\n\"Caden,\" the Master began, turning to glance up at him. \"You know as well as I do that there will be no end to this summer unless we make it so. How long has it been since the last winter, since the last rainfall? Five years? More? The King has sought my council in private, and he has spoken of how the stores of grain are diminishing by the day, how rivers that once overflowed with fish are now little more than mud puddles. I explained to him that controlling the weather and directing the movements of the planets was beyond the power of any living sorcerer, there are none among our number who possess such knowledge. At this rate, our people will face starvation. This may be our only chance to save the kingdom, to save the world, but this scroll alone is not enough. I need someone to travel East, to find the ancient city spoken of in this text, and to uncover the relic hidden within.\"\n\n\"Hang on a minute,\" Caden stammered, taking a step away from the table as he raised his hands defensively. \"Are you suggesting that I make this journey? Why not go to the King, have him hire an army of mercenaries and explorers to go there in my stead? What about sorcerers from other lands? I'm just an apprentice, little more than a scribe. You have taught me some magic, yes, but my time is spent stacking books and dusting shelves. What makes you think that I could do this?\"\n\n\"It is precisely because you are my apprentice that I wish for you to go,\" the Master insisted. \"If the Magi who helped build that city were worth their salt, then they will have protected their treasures. There will be ancient curses put upon its ruins that will have endured long after their deaths, and those without knowledge of the mystic arts will stand no chance of surviving them.\"\n\n\"But...\"\n\n\"This artifact holds an arcane power, Caden,\" the Master warned. \"Each kingdom has its Master, and each Master has their apprentices and students, this is true. But what might a Kingdom that obtains this power do with it once the task is complete? No, we must not let it fall into the wrong hands, I cannot even trust my fellow Masters with such a temptation. You are my protege, Caden, and there is no greed in your heart. You devote yourself to study and practice, you are honest, loyal. I place my trust in you alone.\"\n\n\"I've never even ventured beyond the borders of the kingdom,\" Caden protested, \"and my knowledge pales in comparison to yours.\"\n\n\"I cannot leave this tower, I am far too old,\" the Master lamented. \"You know that well, Caden. I have accrued a debt to the Universe that will be collected the moment I set foot outside, and all my hundreds of years will catch up with me in an instant. Only the beating heart of this building sustains me, prolonging my existence, keeping me isolated from the stream of time. Even if I wanted it, I could not go.\"\n\n\"This is madness,\" Caden replied, shaking his head.\n\n\"You must also go alone,\" the Master added, giving his confused apprentice a solemn glance. \"None can know of your quest. You cannot travel with an entourage, nor can you employ a guide. This power is too great a temptation, the wealth that it represents may drive your companions to murder and treachery. You must trust nobody but yourself.\"\n\n\"You expect me to travel across the world, and brave the dangers of this cursed city, entirely alone? Master, you know that I have the greatest respect for you, but what you ask cannot be done! I won't make it ten steps outside the city walls! What about bandits on the roads? The dangerous beasts that haunt the wilds? Would you have me take up a sword, too?\"\n\n\"No,\" the Master replied, shaking his head. \"It is time to accelerate your training, Caden.\"\n\n\"What do you mean?\" he asked, cocking an eyebrow as the Master stepped away from the table. He gripped the winding banister and began to climb the spiral staircase, Caden following behind him, the aged steps creaking underfoot. They made their way up past hundreds of shelves that were piled high with dusty old books and rolls of parchment, the height of the tower extending far above what physics should have allowed. At its peak was another level, the staircase emerging onto a round floor made from crooked planks, the pointed spire of the tower rising above their heads. This was where the Master kept all of his magical artifacts. The room was packed with glass display cabinets, racks of staffs and rusted weapons, tables that were strewn with all manner of items. Everything was coated in a fine layer of dust, as many of these objects hadn't been touched in decades, maybe hundreds of years. There were four narrow windows, one for each cardinal direction, bright beams of sunlight bleeding through the grimy glass to illuminate the floating motes of dust. One of them was open, a large telescope that was standing on a tripod pointing through it.\n\nThe Master waded through the clutter, making his way over to one of the racks, beginning to sift through the many staffs that occupied it. They looked like walking canes to Caden, some more elaborately carved than others. Some were encrusted with jewels, or overlaid with precious metals, while the rest were little more than polished branches.\n\n\"Ideally, I would have waited far longer before introducing you to this kind of magic,\" the Master began. He stroked his long beard pensively, running his bony fingers across the staffs as though somehow testing them. \"It is our custom to first instill a great respect for magic in our apprentices, to teach them to be studious and patient before ever allowing them access to something with such a great potential for...destruction.\"\n\n\"Master?\" Caden asked warily.\n\n\"You have studied our history, you know that sorcerers once fought wars, wielded terrible power against their fellow man. Long ago, we put a stop to that. We decided that only the most senior and trusted among our ranks would be taught these skills. I was a hundred and ten years old before my Master saw fit to entrust me with my own staff.\"\n\nHe pulled one of the staffs from the rack, balancing it in his hand, weighing it as he scrutinized it.\n\n\"I don't understand,\" Caden said, the Master turning to face him. \"Are staffs and wands not merely conduits? A way to better direct and focus magical energy? I have studied runes and incantations, simple enchantments, my duties have mostly been academic in nature thus far. What would I do with a staff such as this?\"\n\nThe Master blew some off the dust from the stave, then thrust it into Caden's hands. As his fingers wrapped around it, he felt an energy coursing through him, a tingling sensation assailing his skin. His eyes wandered up its length, lingering on the precious ruby that sat at its tip, held in place by a spiral that had been hewn from the dark wood.\n\n\"What do you feel?\" the Master demanded, watching him intently.\n\n\"I feel...pins in my fingertips,\" Caden replied, grimacing with discomfort.\n\n\"Don't feel with your fingers, fool,\" the Master snapped. \"You know better than that.\"\n\nCaden closed his eyes and exhaled, beginning to concentrate on the staff. In his mind's eye, with a sense beyond sight or touch, he saw magic coursing into it. Like the winding streams of a river delta, he watched the glowing energy making its way down his arms and through his fingers, as bright and as brilliant as starlight. It poured into the stave, focusing there, roiling within its confines.\n\n\"It feels...wrong,\" he grumbled.\n\n\"How so?\" the Master demanded.\n\n\"It's...dissonant.\"\n\n\"Good,\" the Master replied, snatching the staff from his hands. Caden's eyes jolted open, the connection that he had felt to the object interrupted in a way that felt oddly jarring. \"Then this one is not for you.\"\n\n\"What are we doing?\" Caden demanded.\n\n\"Stop asking so many questions, and use a little deductive reasoning,\" the Master muttered. \"You will not be able to rely on my knowledge for much longer, you will have to make your own way.\" He picked out another stave and handed it off to Caden. \"Your magic is like music, and your staff is a tuning fork. You must match the tone, the frequency, the two must resonate harmoniously.\"\n\nThis one was even more ornate, the pale birchwood overlaid with silver and gold, intricate reliefs spiraling their way up towards a pointed crown at its tip. Its handle was wrapped with fine, tightly-bound leather, its weight far greater than that of its predecessor.\n\n\"This one looks a little expensive for the likes of me,\" he grumbled, but the Master's only response was a dismissive wave of his hand. He closed his eyes again, concentrating on the feeling of the leather against his skin, the blazing image of the staff seeming to burn itself into his retinas. He felt it siphoning the energy from his very body, drawing on it with a palpable thirst, his arms starting to tremble.\n\nIt was snatched from his grasp just like the last, jolting him out of his trance. He blinked at the Master as he returned the staff to its place on the rack, the old man shaking his head as he muttered to himself.\n\n\"Not that one, not that one...\" Once more, he lifted another stave, this one far more modest than the prior two. Its design was simple enough that it could have been mistaken for a mere walking stick, an unimpressive rod of polished rosewood that was topped with a bronze hook in the shape of a falcon's beak. As soon as his fingers touched it, he felt the air around it begin to vibrate, as if a low hum was emanating from it. His energy poured into it, the staff becoming an extension of his own body, as though he was being reunited with a lost limb. Where the other staffs had leeched away the magic that coursed through his body, this one circulated it, amplified it. What he gave was returned fivefold. It was intoxicating, he could feel its strength welling within him.\n\n\"What do you feel, Caden?\"\n\n\"It's...powerful,\" he gasped, unable to stop himself from grinning.\n\n\"Be wary, apprentice,\" the Master warned as he watched him turn the staff over in his hands. \"This is a power that corrupts. It can make you brash, overconfident, it will seduce you into using it for unnecessary purposes.\"\n\n\"Does it possess a will of its own?\" Caden asked.\n\n\"No,\" he replied with a shake of his head. \"It is no more conscious than a rock or a tree, but the power that it bestows upon its wielder preys upon many human failings. Greed, ambition, vanity. It can be used to accrue wealth, to take that which does not belong to you, to elevate you beyond the station of common folk. But it must never be abused in such ways, Caden. Promise me.\"",
        "Caden struggled to get a hold of himself, willing that burning sensation of power to recede, his breathing becoming more regular as the feedback of amplified energy faded.\n\n\"You have my word, Master.\"\n\n\"And I know that you will keep it,\" he replied, breathing a sigh of relief. \"To be granted a staff at the age of twenty-two has been unheard of for generations, but our need is extreme. You must always remain conscious of this danger, Caden, keep it in the forefront of your mind.\"\n\n\"You still haven't told me why I need this,\" he replied.\n\n\"To defend yourself, of course,\" the Master explained. \"Wands are used merely as an aid to direct energy during spells and incantations, they are tools that help one focus. A staff is a weapon, it amplifies that energy, draws on it to destructive effect. Just as a knight wields a sword, so too does a sorcerer wield his staff. Before you venture out into the world, you must learn to harness its power, you must memorize the relevant spells.\"\n\n\"Wait just a moment,\" Caden protested, the staff still clutched in his hand. \"I became your apprentice because I wanted to learn, not because I wanted to hurt people.\"\n\n\"I realize that, but there are people out there who may wish to hurt you,\" the Master replied. \"You will have to learn how to protect yourself if you are to succeed in your mission. If you should die, then all of our hopes would die with you.\"\n\n\"I don't know about this...\"\n\n\"The time for doubt is long past, Caden,\" the Master chided. \"The path that you must walk is clear now, do not shy away from it. Will you refuse this burden?\"\n\n\"No,\" he replied after a moment of hesitation. \"You're right, as always. Only I can see this through.\"\n\n\"Then we must make haste,\" the Master said, giving him an encouraging pat on the arm as he passed by him. \"Follow me.\"\n\nThey made their way back down the staircase, the Master leading Caden to a door at the rear of the tower. It opened into a room that he had never seen before, so vast that there was no way it could have existed through natural means, there wouldn't have been space for it. The great stone chamber was full of mannequins made from sackcloth and stuffed with straw, like scarecrows in a wheat field. They were lined up in rows, illuminated by the wavering candlelight of dangling chandeliers.\n\n\"What is this place?\" Caden wondered, following the Master inside. \"You've never shown it to me before.\"\n\n\"It exists when I wish it,\" he replied cryptically. \"This will provide a safe environment for you to practice and hone your skills. You won't be able to accidentally harm anyone in here, nor set any fires...\"\n\n\"I do not yet know what I am to be practicing,\" Caden replied.\n\n\"You've always learned well through reading. Perhaps we should fetch you some relevant books.\"\n\n***\n\nCaden held his staff in both hands, aiming the falcon's head at one of the sackcloth dummies, chanting an incantation under his breath. He was good at remembering things, always had been, so the concept of committing spells to memory was already familiar to him. It had been the main focus of his studies up until now, poring over books in the library, expanding his knowledge of history and the mystic arts.\n\nAs the words left his lips, he felt the energy begin to flow down his arms and through his hands, into the carved wood of the stave. It began to hum louder, the almost musical frequency that he had felt when he had first laid hands on it resonating, growing ever more powerful. If he concentrated, he could almost see it, like strands of liquid starlight weaving their way from his fingertips.\n\n\"Yes, good!\" the Master exclaimed. \"Listen to its song, it must be in perfect harmony with your own.\"\n\nThe staff seemed to shake in his hands, and he tightened his grip, feeling that raw power welling inside him again. It was like adrenaline coursing through his veins, but so much stronger, as though an electrical charge was building up inside of his very being.\n\nWith a crescendo, the energy was released, a bright flash of light emanating from the bronze tip of the staff. When his eyes adjusted, Caden beheld a burning dummy, the straw within catching aflame. The spell had conjured a bolt of fire, directing it towards his target like an arrow from a bow.\n\n\"Good, Caden!\" the Master exclaimed. \"With these spells, you will be able to harness the very elements themselves. You can create fire, conjure water from thin air, summon a bolt of lightning. They harness simple physical and alchemic principles, manipulating matter, and energy.\"\n\n\"Then...it isn't just a weapon,\" he replied, lowering his staff. \"I could start a campfire, fill a cup with water.\"\n\n\"Precisely!\" the Master replied, clapping his bony hands together gleefully. \"Where a lesser man would only see a weapon, you see a tool, and that is exactly why I feel I can trust you with this responsibility. The staff is not a mere cudgel, it has many potential uses. If you possess the necessary knowledge, you can conjure light to illuminate a dark path, or freeze water to make an ice bridge across a river.\"\n\n\"What are the limits?\" he asked breathlessly, his hands still trembling as he gripped the wooden shaft. He was still growing accustomed to the bizarre sensations that assailed him whenever he drew upon this power. It was invigorating, and a little frightening.\n\n\"Only your knowledge and your wisdom,\" the Master replied. \"Always remember that just because you can do something, does not mean that you should. You are studious, and you have a great knowledge of the natural laws, Caden. I am confident that you will make good use of this gift.\"\n\n***\n\nThe Master circled around Caden in the center of the stone chamber, the scarecrows pushed up against the walls on their heavy, iron pedestals. He was wielding his own staff, an unassuming oak walking stick that was engraved with patterns resembling creeping vines, culminating in an ivory handle at the tip. Caden had seen him make use of it on many occasions, the Master was very old and sometimes needed a little extra support. But until now, he would never have guessed at the secret power it held.\n\n\"I will now demonstrate another way that you can use your staff to defend yourself,\" he began, making a point of leaning on it as he hunched over. \"We sorcerers are few, and on a quest such as yours, it may be prudent to avoid drawing attention to yourself. Revealing your power may inspire fear and suspicion, or it may alert more dangerous forces to your presence. Let us imagine a scenario where you are accosted by ruffians, and you must protect yourself without calling upon thunder or flame.\"\n\n\"Yes, Master,\" Caden replied as he waited attentively.\n\n\"Strike me with your staff, boy.\"\n\n\"W-what?\" Caden stammered, raising his eyebrows in surprise. \"Are you joking?\"\n\n\"Do you think me too frail to withstand it?\"\n\n\"Master...I would never dream of raising a hand against an old man, never mind my mentor. I could never...\"\n\n\"Appearances can be deceiving,\" the Master warned with a wag of his finger. \"Very well, if your conscience will not allow it, I shall strike you instead. Prepare yourself.\"\n\nCaden watched as he hobbled closer, the sound of his walking stick clicking against the stone floor echoing through the cavernous chamber. He wasn't sure what to do. Should he raise his staff and attempt to defend himself? Calling the Master old was an understatement. His body was haggard beneath his robe, and he had not the strength to lift a heavy book, never mind strike his young apprentice.\n\nThe old sorcerer steadied himself, gripping his walking stick like a quarterstaff, Caden watching in confusion. He raised it, then struck with the speed and agility of a man a fraction of his age, the blow catching Caden on his upper arm. It was like being hit by a mailed fist, Caden losing his balance, thrown to the ground by the force of the impact. His staff clattered across the floor as it fell from his hands, the apprentice grunting in pain as his back hit the stone.\n\n\"Only a fool would think that one's physical properties were relevant in matters of sorcery,\" the Master chided. Caden climbed to his feet and stooped to retrieve his staff, bruised, and more than a little embarrassed.\n\n\"How did you do that?\" he asked.\n\n\"I used magic to amplify the force of my strike. Imagine a swinging pendulum, the inertia of it, the way that gravity acts upon its mass. Now, imagine that you can change those properties, concentrate on that thought.\"\n\n\"Don't I need to learn an incantation?\" Caden asked, rubbing his arm.\n\n\"For something as simple as this? No. In time, even more complex spells may come to you just as naturally. As in all things, study and practice are key. Now, strike me.\"\n\nCaden gripped his staff, still hesitant. Although he knew better than to judge his Master on appearances alone, he was still faced with a diminutive old man, his instincts fighting against him as he raised the weapon.\n\n\"Concentrate, Caden. See the weight of the staff in your mind's eye, feel the swiftness of its swing. Direct your energy into amplifying those properties.\"\n\nHe swung the far end of his stave, but there was no conviction behind it, the Master easily batting it away. He swung his walking stick into Caden's shin, a muffled yelp of pain escaping his lips as he began to hop on one foot.\n\n\"Do you think that a brigand on the road will show you mercy? A cutthroat will live up to his namesake for a handful of coins, he will not lose a moment of sleep over leaving you bleeding in a ditch.\"\n\nCaden steadied himself, his fingers tightening around his staff. Just like with the incantations, he focused his mind, pouring his will into the implement. There was no complex spell to recite this time. It was more about feeling, intuition. He swung the staff again, and this time, the energy that flowed from his hands acted upon it. It sang through the air as he willed it to strike with more force, feeling its weight increase in his very grasp, as though there was a lead hammer at its tip. There was a tremendous crack as the Master blocked the blow, echoing off the stone walls like thunder.\n\n\"Good,\" he said, nodding approvingly. \"With a little training in how to properly handle a quarterstaff, you will become a force to be reckoned with.\"\n\n***\n\nWhat followed was three days of intensive training. It seemed too little to prepare Caden for the monumental task that stood before him, but time was not on their side. He learned what he could, devoting himself to study and practice, honing his new skills as much as he was able. He was little more than a novice, but even a novice sorcerer was a potent force when compared to the average person.\n\nWhen the Master deemed that he was ready, he led him up the spiral staircase again, and into the room at the top of the crooked tower that housed its hoard of magical artifacts. Their destination today was one of the many display cabinets, rusted hinges that had not seen use in an age creaking as he opened the glass doors.\n\nThe Master reached inside with a tentative hand, withdrawing an unassuming, wooden box. He set it on a nearby table, brushing aside more faded notes and maps, Caden hovering over his shoulder as he watched him open the lid. The interior was lined with red velvet, and sat upon its cushion was a dagger. Its handle was ornate, made from what looked like silver, adorned with intricate geometric carvings of impressive complexity. At its tip was a glittering sapphire, Caden immediately aware of its magical hum, sensing the power that was imbued within it. The weapon was sheathed in an elegant, leather scabbard, equally ornate. More patterns had been pressed into it, and there were gold studs where it was intended to be joined to a belt.\n\n\"What is it?\" Caden asked, in awe of the object. Despite the dust that caked the box, the dagger itself was spotless, as clean and as brilliant as the day it had been forged.\n\n\"This dagger is known as the Blade of Umorath,\" he replied, gingerly lifting it from its case. \"These walls house many artifacts that have been entrusted to our order over the millennia. They were given to us for safekeeping, or because they were too dangerous to be allowed to fall into the possession of the uninitiated.\"\n\nHe set the weapon down on the table, gripping it by the handle and slowly withdrawing it from its scabbard with a sound like metal scraping on metal. The curved blade shone under the harsh light that bled in through the windows, a long groove running down its length, filled in with what looked like a vein of blue ore. There were wavering patterns in the steel, if that was indeed the material used, its razor-sharp edge glinting as the Master turned it over.\n\n\"If you are to set out on this quest alone, I must arm you as best I can. There are many tools here that may help you on your journey.\"\n\nCaden reached out to touch the knife, but the Master swiftly batted his hand away.\n\n\"Careful, fool! The power of this blade lies in its ability to cleave through anything.\"\n\n\"Anything?\" Caden repeated.\n\n\"Yes,\" the Master grumbled, \"and that includes your fingers. Neither steel nor stone can prevail before its edge. If you take it with you, you must always keep it inside its scabbard unless you intend to use it, as any material that it comes into contact with shall be cut.\"\n\n\"Can I really be entrusted with such rare and powerful artifacts?\"\n\n\"If the world ends, then they shall be of no use to anyone,\" the Master replied with a shrug. \"Might as well use them while we can, it's better than letting them gather dust.\"\n\nNext, the Master stooped to rummage inside a large chest, grumbling to himself for a few minutes as he sifted through its myriad contents. He reemerged with a rather plain spool of rope that would be right at home mooring a ship to a dock.\n\n\"This artifact is known as the Infinite Strand,\" he said, extending some of its twisted length. \"You will find that no matter how much of it you unspool, you will never reach its end. It will always be as long as the given situation requires. No weight can snap it, nor can any force untie it once knotted, save for the will of its owner.\"\n\n\"Could it be cut with the enchanted dagger?\" Caden asked. The Master started to reply, then stopped, twirling the tip of his long beard pensively for a few moments.\n\n\"That is an experiment best avoided, I think,\" he replied.\n\nThe next item that he handed to Caden was a simple leather coin purse with a drawstring.\n\n\"This purse may not look like much,\" he began, Caden pulling it open to peer inside and finding nothing out of the ordinary. \"But it holds an enchantment that will conceal its contents to any who open it with ill intent, and any pickpocket who attempts to steal it will find it far too heavy to lift.\"\n\n\"It can sense one's intent?\" Caden asked, glancing up at his mentor.\n\n\"Indeed. I will provide you with coin enough to pay for lodging and provisions during your travels, it will be no small sum. This artifact should make stealing it from you quite impossible.\"\n\n\"This is all well and good, but how will I find this city?\" Caden wondered. \"I am no cartographer, I know nothing of map reading or navigation. How far East will I have to travel, exactly? Do you know the precise location of the ruined city?\"\n\n\"I have...some idea,\" the Master replied somewhat hesitantly. He turned to a glass display case and opened the lid, retrieving a circular, brass tool that fit neatly in the palm of his hand. There was a hinged cap protecting it, and he unfastened the clasp, opening it up like a clam shell. Beneath it was a glass lens that protected a needle within, mounted atop a white disk that was surrounded by numbered symbols. It took Caden a moment to recognize it. It was a compass, a device sometimes used by mariners to find their way at sea. The needle was magnetized, like a lodestone, and always pointed in a Northernly direction.\n\n\"What enchantment does this one possess?\" Caden asked.\n\n\"None, it is an ordinary navigation tool that you will need to familiarize yourself with if you are to stand any chance of finding your way. Coupled with the map that was included in the scroll, you should be able to reach your destination.\"\n\n\"Did you not say that the scroll was penned during the fourth age?\" Caden asked skeptically. \"That was nearly a thousand years ago. How can you know that the lay of the land is even remotely the same as it was when the map was made?\"\n\n\"I cannot,\" the Master replied with a shrug, \"but what choice do we have? This is all the information that is available to us. Come, let us go over the map.\"\n\n***\n\nCaden leaned over the yellowed parchment as the Master gestured to the map that had been drawn onto the aged scroll. It showed the world as it had been known at the time, the continents and landmasses oddly shaped, not quite true to their real-world dimensions. They were still recognizable, but it didn't exactly fill Caden with confidence. The Master had placed a more modern map beside it and was using it as a reference to make better sense of what they were seeing, turning to his mountain of notes as he translated the place names.\n\n\"Our kingdom did not exist during the fourth age,\" he began. \"The territory that we now inhabit was home to several smaller city-states. It is hard to say whether these coastlines have changed significantly over time, or if the cartographers of the era simply did a poor job of reproducing them. The borders of our kingdom end here,\" he said, gesturing to the old map with his bony finger. \"Although we are on good terms with neighboring powers, the roads can be treacherous. In these trying times, banditry is on the rise, and the more remote areas are reported to be plagued by highwaymen.\"\n\n\"That is why you thought it necessary to arm me,\" Caden muttered, his mentor replying with a solemn nod.\n\n\"Avoid the cities and large towns as you head East. Follow the roads, the more well-trodden, the better. There are many small villages and hamlets along the route where you might seek shelter in taverns and inns. Remember, you must not advertise the nature of your quest. Tell no one who you are or where you are headed. Assume a new identity if you must.\"\n\nHe slowly dragged his finger to the right, referencing the modern map as he went.\n\n\"This land bridge connects our continent to the Eastern peninsula. From there, our knowledge grows spotty.\"\n\nCaden looked over the parchment, the depictions of green forests and hills gradually giving way to sandy deserts and barren wilderness.\n\n \"There are other kingdoms even further East that are said to be civilized,\" he continued, \"but this expanse of desert is oft-rumored to be inhabited by tribes of savages and feral beasts that have made establishing trade routes over land impossible. None now venture there, save for a few brave explorers who have brought back word of harsh conditions and hostile natives.\"\n\n\"And...my destination is right in the middle of that?\"\n\n\"Naturally,\" the Master replied. \"Bandits and beasts of the forest are one thing, but tell me, what do you know of monsters?\"\n\n\"Monsters?\" Caden repeated, swallowing the lump in his throat. \"Beasts that take the shape of a man, lacking in intellect, aggressive. They are sometimes imbued with a primal magic of their own, derived from shamanistic rites, far removed from the sophistication of spells and incantations. They have fallen into myth, none have been sighted in civilized lands since the dawning of the age of men.\"\n\n\"They are very real,\" the Master replied. \"They once inhabited the forests and mountains of our continent, but they were expelled centuries ago. In modern times, they persist where the land is remote and inhospitable, thriving where men dare not tread. Merchants and explorers have spoken of encountering them in this area,\" he added, pointing to another part of the yellowed map. \"This is known as the great Coral Sea, and the ruined city lies on the far side of it. These accounts are old, ranging from decades to hundreds of years, and so it is difficult to predict exactly what you might encounter.\"",
        "\"It doesn't look like a sea to me,\" Caden said, comparing the two maps. \"There's no water.\"\n\n\"It dried up long before our ancestors walked the earth,\" the Master replied. \"In a way, we should be thankful. It is mostly due to this natural barrier that the ancient city has remained largely untouched.\"\n\n\"So...I should expect to encounter monsters during my trek across it?\" Caden asked.\n\n\"Are you afraid?\" the Master demanded, narrowing his eyes at his apprentice.\n\n\"Yes,\" he replied.\n\n\"You would be foolish not to be. Fear is a healthy sentiment, Caden. Now, fetch your things while I transcribe this map as best I can. You set out in the morning.\"\n\n\"So soon?\" Caden lamented. \"Master...you know that I am not ready. I've barely learned how to use my staff, I have almost no idea of what I'm even supposed to be looking for!\"\n\n\"Few who must shoulder such burdens ever are,\" he replied, \"but that does not change our situation. Bring everything that you think you might need, but do not weigh yourself down unduly. I would have you make the journey to the Coral Sea on horseback, but you know not how to ride, and we do not have the time to teach you.\"\n\n\"I make a rather poor adventurer,\" Caden muttered.\n\n\"You will do fine, I am sure of it,\" the Master replied. \"If you can read a book, then you can read a map. You may not know how to ride a horse or swing a sword, but your mind can be sharper than any blade, and it is upon that which you must rely.\"\n\n\"Sharper than the Blade of Umorath?\"\n\n\"Not quite,\" the Master replied with a chuckle.\n\n***\n\nCaden slung his pack over his shoulders, the straps cutting into his skin through his robes as he adjusted its weight. He was traveling light, but even so, it was unwieldy.\n\n\"What do you have in here?\" the Master grumbled, Caden feeling him rummage through the bag. \"What the...a guide to outdoorsmanship? A wilderness cookbook? I told you not to weigh yourself down unduly, Caden. Surely you do not need step by step instructions for making a campfire, or filleting a fish?\"\n\n\"I must keep the spellbook, at least,\" he protested as the Master set the leather-bound tomes on a nearby table.\n\n\"That you may, but you need to start thinking about solving problems with your wits alone. Ever since your family entrusted me with your education, you have spent almost every waking moment with your nose buried in the pages of a book. When faced with a problem, it has become second-nature for you to look it up, to pluck your solutions from a shelf. You cannot rely upon that knowledge in the real world, you must learn to get by on your own judgment.\"\n\n\"Must everything be a lesson?\" he complained.\n\n\"Every experience in life is a lesson,\" the Master chided. \"Now, turn around and let me have a look at you.\"\n\nCaden was wearing a tunic and a pair of loose pants that would give him some reprieve from the heat, a hooded robe draped over his shoulders to protect him from the lingering sun. It was all dull shades of brown and green, made from linen, nothing out of the ordinary. Wool had traditionally been the preferred fabric in the region, favored for its warmth, but there had been no winters for many years. On his feet, he wore a tough pair of leather boots that would hopefully survive the journey.\n\nThe belt around his waist was laden with several items, including a large waterskin, as hydration would be of the utmost importance. With the knowledge that he had recently gained, he would be able to use his staff to conjure water from the very air, meaning that he could drink as much as he pleased without having to worry about finding a river or a stream from which to refill it.\n\nThe enchanted dagger hung from his hip in its ornate scabbard, Caden careful to keep it concealed beneath his cloak lest it draw attention to him, as it was so lavish as to be out of place on his more mundane outfit. The magic coin purse was now heavy with gold, tied to his belt by its drawstring. He had questioned whether the Master could afford to give him so much, but as he had said, money would be of no use if the world came to an end.\n\n\"You have enough provisions to take you to the nearest town once you leave the city?\" he asked, Caden nodding his head.\n\n\"I can make it at least that far on my own, you needn't worry.\"\n\nHe was unaccustomed to seeing the Master fret over him like this, and it was rather endearing. He was not a callous person, but he rarely showed any overt affection towards his charge. The man had served as his surrogate father since the age of ten, when his parents had handed him over to the Sorcerer's Guild for training. One of their scouts had sensed a magical potential in him, and his family had decided that sending him away to become an apprentice would give him a better life than that of a simple farmhand. Caden missed them sometimes, but he understood that the decision had been made with his future in mind and that it didn't mean they loved him any less. His training and studies had afforded him no time to visit them, but perhaps one day, he would make his grand return. Assuming that the world didn't burn to a cinder before then...\n\n\"All that I have left to give you now is my blessing,\" the Master said, reaching up to rest his hands on Caden's shoulders. \"I know all too well the burden that I have placed upon you, boy, but I would not do so unless I was certain that you had the strength to carry it. You have more potential than you know.\"\n\n\"Thank you, Master,\" Caden replied. \"For everything.\"\n\nThere was no more that needed to be said, the two sharing one last farewell before Caden turned to the door, stepping out into a wall of sweltering heat. He turned to look back at the crooked tower as he made his way down the winding path, feeling the sun beating down on him. He raised his hood over his head, gripping one of the leather straps of his pack as he continued on his way.\n\nCHAPTER 2: DUSTY TRAILS\n\nThe city was as deserted as ever, the sun baking the paving stones to create a shimmering heat haze between the timber-framed facades of the buildings. It was like midday in the heart of a hot summer, despite the calendar's insistence that it should have been a cool autumn evening. The way that the days lingered threw Caden's internal clock off-kilter. There was no twenty-four-hour schedule anymore, the nights were short and hot, resulting in people going about their business in a kind of confused trance. He came across a few of them here and there, tightly wrapped in shawls and cloaks as they ran errands. They clung to the dark shadows as though they were the shores of a river, the light pooling in the street, so bright that it was hard to look at.\n\nHe knew the way out of the city, there was no need to bring out the map or the compass yet, and he would be able to make his way to the border of the kingdom without too much trouble. Civilized lands were well signposted, and the roads were properly maintained. Or at least, they had been until recently. With the world slowly grinding to a halt, there were more pressing matters to concern oneself with than filling in potholes and trimming hedges.\n\nLike many older settlements in the kingdom, this one had once been fortified, but the city limits had expanded far beyond the old battlements over time. The castle keep rose up in the distance, the great stone walls draped with the king's heraldry, the ramparts towering over the squat dwellings that surrounded it. The wall of the outer bailey was visible in places where it rose above the slanted rooftops, the crenelated bastions that had once served as watch towers keeping their silent vigil. He passed through one of the gateways in the old stone wall on his way out, a rusted portcullis that hadn't been lowered in an age hanging high above his head. There was a city guard sitting on a stool in the shadow of the arched passageway, but he was too hot and tired to do much more than glance at Caden as he passed by. Beyond it was a bridge that led over a moat, now little more than a trench with a puddle of muddy water at the bottom.\n\nThe claustrophobic city streets gradually gave way to more sparse hamlets as he made his way into the surrounding countryside. He followed winding roads that snaked their way through the rolling hills, passing by thatched cottages and small farmhouses. The meadows and pockets of forest had once overflowed with lush greenery, but now they were yellowed and sickly, suffering in the oppressive heat. The trees were shedding their dead leaves, their branches naked and skeletal, only the weeds that grew in their shade seeming to cling stubbornly to life. Even the hardy patches of grass and wildflowers that sprouted in the middle of the rocky paths were wilting these days. The rolling fields were separated by wild hedgerows and crumbling stone walls, but what was once an ocean of golden wheat and barley was now decaying. The growing seasons had been scrambled by the calamity, and the seedlings were mostly dying before ever reaching maturity, making harvesting crops next to impossible. The flocks of sheep that would usually be scattered about as they grazed were huddled beneath the shelter of whatever trees they could find, the herds of dairy cows crowding their water troughs.\n\nCaden made his way up one of the dirt tracks, stopping at the top of a hill, turning to look back the way he had come. He could make out the city in the distance, perhaps ten miles away now. It had been a long time since he had seen his home in its entirety like this. He could see the keep, and the Master's tower, along with the town square. He paused there a few minutes longer, knowing that it might be months or even years before he would lay eyes on it again. If he survived his journey at all...\n\nHe turned back to the road, finding himself longing for the shade of the forest.\n\n***\n\nIt wasn't long before Caden's waterskin ran dry. He had been walking for the better part of a day beneath the blazing sun, and the speed at which he had drained it took him by surprise. He was making his way along a woodland path, what had once been dense forest rising up to either side of the dirt road, forming a kind of tunnel above his head. Most of the leaves were dead, bright rays of sunlight bleeding through the sparse canopy, but the gnarled branches still provided some reprieve from the heat.\n\n\"Damn it,\" he muttered to himself, putting his lips to its mouth as he upended it. After taking a moment to look around, making sure that he was alone, he slunk off the path and into the brush. Bone-dry leaves and desiccated ferns crunched underfoot as he trudged deeper, finding a small clearing with a large boulder rising from the ground in its center. He would have expected to hear the chirping of birds, to see a skittish deer or a curious rabbit rush by, but there was only the sound of the branches creaking in the breeze.\n\nHe walked up to the rock and set the waterskin down on top of its mossy surface, hesitating before screwing the cap back on. The water would just pour out of it otherwise, and it wasn't as though he was filling it from any tangible source. After setting his pack down beside it, he fished inside for the book on magic that he had brought with him, opening it at the index. He leafed through the dusty pages until he came across the passage that interested him, hydromancy.\n\nAs with all magic, performing a predefined ritual was not enough. Knowledge of the subject was required. One could not command fire without having a deep understanding of its properties, how it behaved, and how one's magic acted upon it.\n\n\"Let's see,\" Caden muttered, licking his thumb before turning another page. Water was not only found in wells and rivers, nor in lakes and oceans. It could be found in the very air itself, in humidity, taking the form of vapors and mists. This spell required that he focus on the invisible droplets that surrounded him, calling on them to coalesce.\n\nCaden set the open book down on the dry grass, taking a step back and raising his staff. He exhaled, letting his power flow through its haft as the Master had taught him, the wood seeming to come alive in his hands in response. It pulsed with magic like a beating heart, that familiar hum seeming to fill the clearing with its silent song, the hairs on his arms standing on end.\n\nHe opened his eyes, glancing down at the incantation, mouthing the words quietly as he read them off. After memorizing the short passage, he began to cast the spell, lifting the falcon's beak into the air as he chanted. With a sense beyond sight, he watched the shimmering strands pour from his fingers like streams of quicksilver, winding their way through the shaft. They concentrated at its bronze tip, Caden feeling a swell of pride as he watched what looked like droplets of morning dew collect on the metal. They began to merge together, water dripping from the carving, running down the polished shaft to wet his fingers.\n\nSuccess! He was conjuring water from nothing. Now, he just had to concentrate on directing it into the waterskin. His brow furrowing as he concentrated, he willed the moisture to collect within the leather receptacle, seeing those sparkling droplets clinging to its interior in his mind's eye. Still whispering the incantation under his breath, he brought the bronze tip of the staff to the waterskin, hovering over it. Before his eyes, it began to fill, slowly expanding on the rock until it was stretched taut. As he stopped his chanting and lowered his stave, the energy that was coursing through his veins faded, the hum abating. Caden took a moment to collect himself, that intoxicating feeling of adrenaline gradually receding.\n\nThe water sloshed around in the waterskin as he raised it, its weight suggesting that it was indeed full to the brim. Caden opened the cap and lifted it to his lips tentatively. Cool, fresh water poured into his mouth, its taste that of a mountain spring. He couldn't help but grin as he drank his fill, feeling the cold liquid settle in his belly. One of the greatest dangers that faced him was crossing the Coral Sea, but now that he had an infinite supply of water, that task seemed far less daunting.\n\nSatisfied with this small victory, he returned the waterskin to his belt and turned back towards the road.\n\n***\n\nNight had finally fallen, the stars twinkling in the cloudless sky as Caden marched, the cracked earth crunching beneath his boots. The days now lasted thirty hours or more, and after sunset, there were only a scant few hours before the cycle began anew. People tended to sleep whenever they became tired, even if their every instinct told them that it was the middle of the day, resulting in no small measure of disorientation. He always found himself sleeping either too much or too little.\n\nHe paused to glance up at the mercifully dark sky, noting that the constellations that he had learned to recognize during his studies had either vanished entirely, or had strayed far from their usual positions in the heavens. It was as though the entire sky had moved in relation to the world, or perhaps the world had moved in relation to it...\n\nIn the distance, he spotted the inviting glow of a building, the yellow light of oil lamps spilling out onto the road. It was one of the many inns that would provide a warm meal and a safe bed for weary travelers. Caden's feet were starting to blister, he had never done this much walking, and the idea of a soft mattress was irresistible. At least while he was still journeying through civilized lands, he needn't spend the night in the wilderness with only the light of his campfire to ward off hungry predators. Even if the monsters had been driven out long ago, the more remote forests were still home to bears and wolves that occasionally preyed on the unwary.\n\nThe inn came into view, illuminated by the golden glow of a solitary oil lamp that hung above its entrance, and the light that escaped through its many windows. Its crooked, timber frames were visible between the white plaster infill of its facades, the wood stained a dark brown that bordered on black. The second storey was jettied, projecting further out than the floor beneath it, supported by rows of decorative wooden brackets. The thatched roof drooped low over the building, extending to the dormers on the upper level that likely denoted where the guest rooms were. The whole building had a very top-heavy look, as though it was slowly collapsing in on itself. He was surprised to see smoke billowing from the brick chimney, but that probably originated from ovens rather than hearths.\n\nCaden passed the adjoining stable that would provide shelter for the horses, making his way to the large, oaken door. He had never been to a tavern before, but he had read about them. After reaching down to brush his hand against his coin purse, reassuring himself that it was still present, he pushed open the heavy door. It creaked on its old hinges, Caden stepping over the threshold, the smells of home-cooked food immediately setting his stomach gurgling.\n\nHe emerged into an expansive common room, the floor beneath his feet lined with wooden planks, the ceiling crisscrossed by exposed beams from which more oil lamps dangled on chains. On the wall to his far left was an ornate brick fireplace, the hearth presently empty due to the heat, its mantle lined with partially melted candles. The majority of the space was taken up by large wooden dining tables, their polished surfaces laden with pitchers and loaves of bread, the places set ready for guests. Only a few of the seats were occupied, the strangers turning their heads to glance at the newcomer.\n\nCaden felt quite out of his element as he made his way over to a counter at the other end of the room, behind which a portly old man was standing, his attention focused on a mug that he was cleaning with a rag. He wore a dirty apron over his tunic, his head shaved bald, the beginnings of a beard failing to conceal his second chin. Behind him were barrels of what was presumably ale, along with a few dusty bottles of spirits with faded labels that were impossible to make out. There was a door to his left that probably led to a kitchen, and to the right of the counter was a staircase that led up to the second storey, where the rooms must be.\n\nAs Caden approached, the man glanced up from his work, setting the mug down on the countertop with a clunk. He looked him up and down, not suspicious, but curious. Judging by the number of tables and places, the staff must be accustomed to more visitors, but the calamity had likely reduced the number of travelers who passed through these parts to a trickle.\n\n\"What'll it be?\" the innkeeper asked.\n\n\"A room for the night, please,\" Caden replied. \"Or rather...a room for eight hours. Do you have much in the way of food?\"\n\n\"Stores are low, but I'll see what I can come up,\" he replied. \"What's your pleasure? Breakfast, lunch, or dinner? These days, there's not much of a difference.\"\n\n\"As hearty a meal as you can manage,\" Caden said, leaning on the counter. \"The road has been long and arduous.\"\n\n\"In this heat, I'm surprised you didn't collapse,\" the innkeeper remarked. \"Very well, young sir. That'll be six crowns.\"\n\nCaden lifted his purse from his belt, opening the drawstring and fishing inside, setting a stack of six gold coins on the counter. The innkeeper scooped them up, pausing to bite one of them, making sure that it wasn't gold-plated lead.\n\n\"Take a seat at one of the tables,\" he said, \"and I'll have your meal brought to you when it's ready.\"\n\nCaden thanked him, the man exiting through the door to the kitchen. He turned and made his way to one of the tables near the far wall, choosing a seat that put him as far away as possible from the other patrons, pulling up a chair as he shed his pack. He set it by the wall, leaning his staff beside it, sighing with relief as the weight was finally taken off his blistered feet. He raised his waterskin and took a generous swig, then reached into his bag, rummaging for his book on magic. He slapped it down on the table, beginning to leaf through the pages as he waited for his meal, brushing up on his incantations. Unless one of the patrons was a fellow sorcerer, which was extremely unlikely, it shouldn't draw any undue attention.",
        "It was a good half-hour before Caden's meal arrived, brought to him by a rather fetching blonde whose age suggested that she might be the innkeeper's daughter. She set the tray down on the table beside him, reaching over to place a large bowl of stew in front of him, wisps of steam rising from the broth. He could see chunks of floating vegetables, mostly potatoes and carrots, its scent inspiring a fresh wave of hunger. On a small plate beside it were a pair of spiced sausages and some butter for the loaf of bread that had already been waiting for him at the table. It was probably a little stale after sitting out in the open, but if he soaked it in the stew, it would make a fine addition to his meal.\n\nShe was wearing a low-cut blouse that showed off her cleavage, sparsely dressed on account of the heat, Caden keeping his nose buried in his book to save from accidentally catching an eyeful. It might appear rude of him to avoid her attention so, but having spent the majority of his life in the confines of the tower's library, he had next to no experience when it came to the fairer sex. One could learn almost anything from the pages of a book, but confidence and the ability to woo a lady were not among them. A sorcerer should not concern himself with such matters anyway. Romantic entanglements would distract him from his studies, as the Master had always told him. Celibacy was not enforced by the guild, merely encouraged.\n\n\"Thank you,\" he muttered as she left his table. She responded with a polite smile but was swift to turn her back on him, carrying her tray over to one of the other patrons. This man was stout and broad-shouldered, the sharp edge of his chin peppered with beard stubble, a faded scar on his cheek suggesting that he was no stranger to violence. He wore a padded gambeson of the kind usually worn alongside chain mail or beneath plate armor, identifying him as some manner of warrior or sellsword. The Master had told Caden that highwaymen and bandits were setting upon travelers with greater frequency as of late, and so it was not unexpected to come across mercenaries and bodyguards on the road. Perhaps his profession was guarding supply caravans or protecting wealthy travelers.\n\nThe woman's reaction to him was markedly different, the smile that she gave him far warmer and more sincere. She lingered beside the brute of a man as he plunged a chunk of bread into his broth and began to eat noisily, the two of them chatting as she twirled her golden hair flirtatiously.\n\nCaden glanced over at them as he speared a sausage on his fork and bit into it, feeling an unwelcome pang of jealousy. For all of the man's brawn, his strength paled in comparison to what Caden could bring to bear. The power of swords and spears was insignificant next to the magic wielded by a sorcerer. With a few spoken words and a wave of his staff, even a knight's shining steel could be melted to slag.\n\nHe turned his attention back to his book, chiding himself for allowing such ill-humored thoughts to fester. It was as the Master had warned him, this newly discovered power had the potential to corrupt, to turn his mind to ideas of cruelty and supremacy. It was not to be wielded for reasons of self-aggrandizement or petty jealously, he had to remain humble in all things.\n\nIgnoring the woman's exaggerated laughter, he turned his attention back to his spellbook, contenting himself with enjoying his sausages.\n\n***\n\nWhen Caden was done with his meal, he packed away his book, heading towards the stairs that led to the second floor. As he stopped by the counter to collect the large, iron key to his room, he felt someone's gaze on his back. He turned his head to see a man staring at him from a shadowy corner of the room. The stranger was sitting on a stool beside a small, round table, the hood of his cloak hiding his face from view beneath the dim light of the oil lamps. Although Caden couldn't make out any of his features save for a few strands of long, dark hair, his instincts warned him that the man was fixing him with an intense gaze. He was smoking a long pipe, nursing a tankard of ale between puffs, a haze of wispy smoke hanging over him like a cloud. If Caden had to guess, he was likely a fellow traveler, judging by the pack at his feet. There was a short sword in a scabbard hanging from his belt, but his attire was not that of a mercenary. His clothes were worn, not those of a vagrant, but certainly someone of modest means.\n\nCaden suddenly realized that his knife was showing, its ornate handle glittering as it caught the light. He hastily covered it up with his cloak, chalking up the stranger's interest to mere curiosity. The innkeeper handed him his key, and he mounted the stairs, emerging onto a carpeted landing. There were two dozen rooms, and it took him a moment to find his own, Caden careful to lock the door behind him after his mildly unnerving encounter with the hooded stranger.\n\nInside was a bed and a washbasin, nothing lavish, but more than enough to satisfy a weary traveler's needs. After walking so far, being able to lie down on a soft mattress was a small taste of heaven, Caden quickly letting his fatigue overcome him as he drifted off to sleep.\n\n***\n\nCaden awoke feeling refreshed and ate a hearty breakfast before setting out again. The Master had been wise to give him as much money as he had, because the prices of food and board were rising as resources dwindled. By the time he was leaving the inn, he had spent eight gold crowns, which would have been considered extortionate just a couple of years ago. Famine was not yet upon the kingdom, but the threat was looming ever closer. Still, the feast of eggs and bacon almost seemed worth the price.\n\nAs he left the tavern behind him, making his way along another winding path, he noticed that he was not alone. There was a figure following him at a distance, keeping to the shadows of the trees that lined the road. It wasn't until Caden reached the top of a hill and paused to take a nonchalant draw from his canteen that he took the opportunity to glance back at them, realizing with no small measure of concern that it was the hooded man from the night before. He reminded himself that there were only two routes to take from the tavern, and that another traveler setting out in what now passed for the morning was not anything to be worried about.\n\nWhen he eventually came to a fork in the road, he paused to read the weatherbeaten signposts for a moment, then continued on his way. The stranger followed, his tattered cloak wrapped tightly around him. Another coincidence? Caden was starting to become nervous. The winding path led through a patch of dense forest, Caden waiting until a bend put the trees between him and his pursuer before slinking off the road, concealing himself between their gnarled trunks. As he peered out from the shadows, he began to feel rather foolish. Maybe he was just overreacting, and the man meant him no harm at all?<br >He waited with bated breath as the stranger rounded the same corner, Caden's heart starting to beat faster as he watched him pause, glancing from left to right beneath his cowl. His body language was confused, surprised, he was searching for his quarry.\n\nCaden's instincts had been right, he really was being followed, but to what end? Could this man somehow know about his quest? Could he be a sorcerer from a rival kingdom out to steal the artifact for themselves?\n\nThe hooded figure reached a gloved hand down to touch the hilt of his short sword, then crouched low to the ground, brushing the dusty earth with his fingers. With a start, Caden realized that he was searching for tracks. He considered moving deeper into the forest, he was only a hundred feet from the road, but the sound of the desiccated plant life crunching underfoot would certainly give him away.\n\nHis breath caught in his throat as the man found his footprints, the stranger's hand resting on the leather-bound hilt of his blade as he began to make his way closer, Caden finding himself paralyzed by fear. Only the day before, he had imagined himself besting an experienced sellsword, but now, he couldn't lift a finger. He was rooted to the spot, just like the trees that surrounded him. What should he do? Stay hidden, and hope for the best? Leap out and confront the man? His well of courage had run dry.\n\nThe snapping of twigs and the rustling of desiccated foliage alerted him that the stranger was drawing closer, Caden holding his breath as he pressed up with his back against the trunk of a tree.\n\n\"Show yerself!\" the man shouted, Caden almost jumping out of his skin. \"I know you're 'ere, you little whelp. You can't hide from the likes of me.\"\n\nSlowly, Caden emerged from behind his tree, gripping the shaft of his staff tightly in his trembling hands.\n\n\"W-what do you want with me?\" he demanded, his voice wavering. The man drew his sword, the sharp blade glinting in the sunlight that made it through the sparse canopy, Caden recoiling at the sight of it.\n\n\"That fancy knife on yer hip,\" he replied in a rasping voice, the beginnings of his angular face visible beneath his shadowy cowl. \"Throw it on the ground. Yer coin purse, too. Drop it. Empty yer pack and turn out yer pockets.\"\n\nCaden was too afraid to move, the man brandishing the sword angrily.\n\n\"Are ye hard of hearin'? Hand over all of yer possessions, or I'll take yer life as well, savvy?\"\n\n\"Alright, alright!\" Caden exclaimed. He began to reach for the knife, then hesitated. What was he doing? This was precisely what the Master had prepared him for, he couldn't roll over and give up the moment a common brigand flashed a sword at him. A plan began to formulate in his mind, and he moved his hand to the coin purse. What was it the Master had said about the enchantment that lay upon it? Those who tried to steal it would find it far too heavy to lift...\n\n\"Don't try any funny stuff,\" the thief warned, waving his blade.\n\n\"Okay, just...don't hurt me,\" Caden pleaded as he unfastened its drawstring from his belt. He tossed the purse to the man with an underhanded throw, his hooded assailant faltering as he snatched it out of the air. He weighed it in his hand, a grin spreading across his face beneath the shadow of his hood.\n\n\"What are ye, some rich merchant's son? I saw ye throwin' gold around back at the inn, but there must be a hundred crowns here. My luck must be turnin'.\"\n\nHis smile faltered as his arm began to droop, the purse growing heavier as it sat in his palm. His momentary confusion turned to panic as it pulled him off-balance, his sword still tightly clutched in his right hand as the left was suddenly brought to the ground with an audible thud. A yell of alarm and pain echoed through the trees as it pinned him to the forest floor, dragging him to his knees, the brigand fighting to free himself from the ever-increasing burden.\n\n\"M-my hand!\" he wailed, the enchanted coin purse driving it deeper into the soil. It was as though an invisible anvil had been dropped on him. He finally managed to pull himself free, toppling over backwards onto the carpet of dead leaves, scrambling to his feet. His hood had fallen off, revealing a mop of long, dark hair that fell about his shoulders. His stubbly cheeks were gaunt, his piercing, green eyes full of fear as they stared out from beneath a furrowed brow.\n\nHe pointed the tip of his blade at Caden as the young sorcerer took a step forward, the man scooting away as he leaned down to pick up the purse. The brigand's eyes widened in confusion as he lifted it effortlessly, stowing it in one of his pockets.\n\n\"What the hell is that?\" the stranger demanded, his injured hand shaking as he held it by his side. \"What did you do?\"\n\nCaden was still terrified, adrenaline coursing through him, but he mustered the courage to brandish his staff.\n\n\"Leave me be,\" he replied, his tone a little more panicked than he had intended.\n\n\"You little wretch,\" the brigand snarled, his fear turning to anger. \"Think you can play tricks on me!?\"\n\nHe lunged, his sword flashing as he stepped in to drive it towards Caden's belly with a violent thrust. Caden reacted reflexively, deflecting the blow with a quick swipe of his staff, wood clattering against steel. The brigand stumbled, but quickly overcame his surprise, raising his blade above his head with a frustrated growl. It whistled through the air as he brought it down, Caden blocking it with the haft of his stave. Rather than biting into the wood, the blade bounced off it as though it were as hard as stone.\n\nOnly now did Caden's mind catch up, and he remembered his training, how the Master had taught him to amplify the power of his strikes. It was so difficult to concentrate in the heat of a fight, but he willed that energy to flow from his fingers, pouring it into the staff. His grip on it tightened as he swung it again, but this time, he felt it grow heavier. He could feel its mass shifting towards one end, as though a lead weight had been fastened to it. The blow connected with the thief's wrist with a crack, sending the blade toppling from his hand, Caden following up with another swift strike to his ribs that sent him reeling.\n\n\"I yield, I yield!\" the brigand wailed as he scurried clear. He clutched his bruised ribs, his eyes wide. After making to retrieve his sword, he thought better of it, slowly backing off as Caden aimed the bronze falcon beak at him. How easy it would have been to set him aflame, or strike him with a bolt of lightning, but the confrontation was over. He willed himself to calm down, letting the impulse pass, breathing hard as he stared down his would-be assailant.\n\n\"Off with you!\" Caden shouted, jabbing his staff at the man. The thief turned tail, stumbling through the underbrush in his haste. When he reached the road, he headed back in the direction of the inn, quickly rounding the corner and vanishing from sight.\n\nCaden took a few moments to catch his breath, composing himself as he lowered his staff. He had known that he would face challenges, but he hadn't expected to be tested so soon, he was barely out of the city. Even so, he had prevailed, the Master's training had paid off. As frightened as he had been, he now felt the warmth of pride filling his belly, a kind of elation overcoming him. For the first time since leaving the tower, he felt as though he might actually succeed in this endeavor.\n\nHe checked that he still had all of his belongings, walking past the discarded sword as he made for the road. After checking that the brigand had indeed fled, he continued on his way, feeling a little more sure of himself.\n\n***\n\nIt had taken several long days of walking, but Caden had finally reached the border of the kingdom. The grassy fields and patches of woodland were now giving way to heath, the hills becoming rockier as they transitioned to more mountainous terrain. Boulders protruded from the hardy vegetation, covered in furry mosses and patches of lichen, surrounded by tough grasses and squat bushes. The violet of thistles and clusters of heather contrasted against the greens of the grass and the yellow flowers of the blooming shrubs, not one of them rising above three or four feet. What few trees persisted here were twisted bristlecones, their gnarled trunks bleached the color of bone by the sun. He would have assumed that they were long-dead, had it not been for a few clusters of green leaves clinging to their skeletal branches here and there. They fared well in harsh climes, and they seemed relatively unfazed by the drought compared to some of the yellowing plant life that surrounded them.\n\nThis was the last natural obstacle that stood between Caden and the desert. He set down his pack and retrieved the leather tube that held the map that his mentor had transcribed for him, rolled up inside its container like a scroll. He unfurled it, holding the parchment up as he compared it to what lay before him. There would be no more carefully signposted roads traveled by trade caravans and wandering merchants beyond this point, he was heading into the wilderness. His kingdom was one of the Easternmost on the continent, and most of the trade flowed in from the West.\n\nAfter his encounter with the brigand, he was more confident in his ability to defend himself, but the thought of meeting a more organized band of outlaws or tribals worried him greatly. Not to mention the feral beasts that might be roaming these plains, starved and desperate enough to set upon a person.\n\nAlthough the delineation between the wilderness and the kingdom that he had always known existed only as a line on a map, and there was no physical indication that he was about to leave it, he still felt a powerful swell of nostalgia. He turned to look back at the hills and forests, the city far beyond his sight now, then stepped over that imaginary boundary.\n\n***\n\nCaden paused to sit in the shadow of one of the gnarled trees, taking a long draw from his waterskin. He was doubly glad of the ability to refill it using magic, as there wasn't a river or a spring in sight. This part of the world had been dry and harsh long before the endless summer.\n\nWincing, he began to remove one of his boots, finding that his sock was stained with blood. Blisters had been plaguing him ever since he had set out, and his feet were killing him. The furthest he ever walked under normal circumstances was to and from the library, his body was not built to hike across hundreds of miles of rough terrain.\n\nFortunately, he had a solution for that, too.\n\nHe pulled the spellbook from his pack and opened it in his lap, leafing through the pages until he reached the chapter on healing magic. The incantations were more complex, harder to master, but he wouldn't be able to proceed much further if he didn't deal with his injuries. His eyes scanned the text as he memorized the spells, relieved to be able to immerse himself in study once again. It was oddly comforting, and the scent of the library was still imbued in the old tome's pages, reminding him of home.\n\nWhen he was ready to give it a try, he took off his boots and socks, and was alarmed to see the extent of his wounds. Especially around the ankles and the balls of his feet, the skin almost seemed to be peeling away, leaving them red and raw. He stopped to pour some water over them briefly, washing away the sweat and dirt, the cool liquid soothing him.\n\n\"Alright,\" he muttered to himself, \"let's see if this works...\"\n\nHe reached over and gripped his staff, which had been leaning up against the tree, remaining seated due to his soreness as he began to chant under his breath. Healing was a more difficult task than conjuring fire or water. Not only were the incantations themselves longer and more complex, but the knowledge required to truly understand what one's magic was acting upon was far greater. Caden was no apothecary, and so the workings of the human body were somewhat of a mystery to him beyond what he had read in passing. The spellbook contained the necessary reference material, he just had to hope that it would be enough.\n\nThe staff began to pulse with magic as he imbued it with his will, his lips moving ceaselessly as he whispered the incantations under his breath, his eyes slowly closing. The energy that he relinquished was returned to him amplified, he could feel it coursing through his body, its power growing within him. Once again, he saw those silver strands with a sense that transcended sight, joining his body to the staff as though they were being sewn together by ethereal threads. Like the string of a harp being plucked, they seemed to vibrate in harmony, a sensation that he could only compare to being moved by a beautiful orchestra overwhelming him.\n\nHealing magic was different from that which manipulated the elements. One could create a static charge to form a bolt of lightning or ignite the air to conjure flame, but the way that one's body repaired itself was quite different. If that natural process was to be accelerated and enhanced, then the nutrients and energies required had to come from some external source. In this case, it was the nature that surrounded him.",
        "More of the silver filaments began to rise from the grass at his feet, the nearby shrubs wilting, the petals of their flowers falling to the dusty ground as he drew upon their vital energy. He couldn't shake the feeling that he was stealing from them, but his cause was a noble one. If he did not succeed in his task, then there might be no bushes or flowers ever again...\n\nAs the nearby plant life shriveled, he sensed those weaving streams of magic coalesce in his feet, gravitating towards his injuries. His staff still tightly clutched in his trembling hands, he watched as the torn flesh began to knit, fresh skin growing over the sores before his very eyes. Healing that would have taken days or weeks under normal circumstances took place in mere seconds, a feeling of wellness driving away the pain and discomfort that had been plaguing him for the last few miles.\n\nThis spell took more out of him than the previous ones had, and he leaned against the trunk of the twisted tree for a few minutes while he rested, wiggling his toes as he marveled at the miraculous recovery. He was but a novice, but he found himself wondering to what extent wounds could be repaired in this manner. Blisters were one thing, but what about a broken leg? What of a sword wound, or a severed arm? It was a shame that the Master was so far away, or Caden would have asked him whether sorcerers had served as healers in the wars that he so often described. In any case, there was still much for him to learn. His journey towards mastering magic was still in its first faltering steps.\n\nHe pulled a fresh pair of socks from his pack, then put his boots back on, rising to his feet. Feeling refreshed, he hoisted his rucksack onto his back, using his staff as a walking stick as he continued on his journey.\n\n***\n\nAnother night was finally falling, granting some brief reprieve from the heat, the unfamiliar stars lighting up the dark sky. This far from civilization, there was no shelter, certainly no cushy taverns with soft beds waiting for weary travelers. At least the consistent weather made camping more tolerable. There was no chance of a sudden downpour catching him off-guard, or a frigid wind uprooting his tent.\n\nAfter searching around for a suitable place to make camp, Caden found a pile of boulders that formed a sort of protective ring that should provide some cover, and he set his pack down between them. He unfurled a straw-filled bedroll and laid it on the dry grass, then set off to find some firewood. It was plentiful thanks to the bristlecones. Many of the dead trees had shed sticks and branches, the lack of moisture drying them out to create the perfect kindling. Caden arranged a few stones in a circle, and stacked the wood inside it, using his staff to conjure a licking flame that quickly took hold. Before long, he had a crackling campfire going. It wasn't that he needed its warmth, the nights were scarcely cooler than the days, but some cooked food would raise his spirits.\n\nHe had departed the Master's tower with enough salted pork and stale bread to see him through a good few days, but he had stocked up on some more appetizing rations before leaving the inn. He reached into his pack and produced a small, portable cooking pot that he balanced on top of the burning embers, filling it from his waterskin. There was no reason to be conservative, there was plenty more where that came from. As the water began to boil, he withdrew some strips of dried and salted mutton from his pack, dropping them into the bubbling pot. He seasoned them with a few conservative pinches of salt and pepper from the glass vials of spices that he had brought along, stirring as he waited patiently for the meat to boil.\n\nWhen the time was right, he withdrew a small, paper parcel that was tied up with a piece of hairy string. Within it were firm, leathery strips that almost resembled flakes of tree sap, but were actually pieces of dried gelatin made from beef broth. It was a kind of portable soup that, when placed in water, would rapidly regain its consistency and flavor. It kept for months and took up very little space. He placed three or four of the flakes in the pot, watching them dissolve, stirring the concoction with a ladle. The final ingredient was some pieces of stale bread, Caden tearing off some chunks and tossing them into the soup to thicken it.\n\nCooking was not too far removed from alchemy, and he had grown rather proficient ever since he had been sent to live in the city. The Master was often too busy to deal with household chores, and so cooking had become one of his responsibilities, and he had accrued a lot of experience over the years.\n\nAs he stirred his pot over the open flame, he heard the far-off howl of a wolf, the sound penetrating him to the core. He reached for his staff, reassuring himself that it was nearby, then returned to his cooking as he glanced around warily. They could be miles away, the sound would carry a great distance over this open terrain. There was probably nothing to fear. Even so, he doubted that he would sleep soundly now...\n\nThe soup turned out great. Caden had developed a healthy appetite after a day of walking, and he wolfed it down in only a few minutes, using more bread to soak up the broth. When he was finished, he lay down on his bedroll, the fading embers of his campfire casting his surroundings in their orange glow. There was no need for a blanket, he just balled up his cloak and used it as a pillow, gazing up at the scrambled constellations above. What could have happened to make them so askew? Why had they drifted so far from their usual positions?\n\nHe had read many books on astronomy, it was a subject that had always interested him greatly. It was known that the world stood at the center of the Universe and that the heavenly bodies such as the Sun, Moon, stars, and planets orbited around it. One could plot their trajectories with a telescope, calculate their motions with great reliability. Their orbits were once thought to be flawless, untouchable, like the endless ticking of an intricate clockwork timepiece. When one gazed at the night sky, they saw perfection, as pristine as the moment of its creation.\n\nBut that could not be true, something had gone awry. Had the world somehow shifted on its foundations, or were the heavens themselves broken? How could the artifact that the Master had sent him to find possibly correct that?\n\nHis mind continued to wander as he drifted off to sleep, but he was soon awoken by the sound of another howling wolf. This one was closer, jolting him awake, Caden reaching for his staff groggily as he sat up on his bedroll. The lichen-covered boulders that surrounded him were still lit by the fading glow of his campfire, its dim light casting deep shadows, his vision slowly adjusting to the gloom.\n\nA pair of eyes appeared between two of the rocks, seeming to glow like burning coals as they reflected the firelight. A long, furrowed snout slowly emerged from the shadows, its jowls pulled back to expose rows of sharp fangs as it loosed a rumbling growl that shook Caden to the bone. It was a wolf. Despite its considerable size, it was gaunt, its bones clearly visible as they moved beneath its coat of matted, grey fur. There was almost no fat on the thing, it must be starving, which made it all the more dangerous. Wolves usually avoided people, they wouldn't attack like this unless they were truly desperate.\n\nCaden's attention was drawn to his left, where another of the creatures lurked in the darkness, its pointed ears flattening against its skull as it snarled. It fixed him with its intense stare, unwavering, unblinking. A primal terror that bordered on blind panic overtook Caden as he realized that a whole pack was surrounding him. He could heart their growling, he could see more of them emerging from the gloom to peer at him, stalking between the boulders and climbing over the rocks.\n\nHe lifted his staff, moving as slowly as he could manage, struggling to suppress the fear that was turning his legs to jelly. He was moments away from being torn apart by ravenous beasts, his gaze lingering on their pearly teeth, strands of drool hanging from their maws as they anticipated their next meal. Magic could not be practiced with a clouded mind, he had to clear his head, as impossible as that seemed. It was his only hope of avoiding a grisly fate.\n\nOne of the wolves snapped its jaws at him as he rose to his feet, the growling intensifying, coming from all directions. His addled mind raced as he tried to formulate a plan. If he could conjure fire, then he could scare the wolves away. His terror made it doubly difficult, but he tried to focus on the incantation, his lips moving silently as he gripped the shaft of his staff with white knuckles. His roiling emotions were interfering with the spell, he could sense it, his lack of concentration making the flow of energy erratic. The glittering strands of quicksilver were fluctuating, what should have been a calm stream now a churning rapid. Caden aimed the bronze beak at the wolf directly ahead of him, the beast now close enough that he could have jabbed it on the nose, its rancid breath lingering on the air as it panted.\n\nA shower of sparks shot from the tip of the staff, like a smith's hammer striking a hot iron, the wolf recoiling in alarm. It did not flee, however, those piercing eyes staring him down as it began to creep forward again. The rest of the pack were slowly closing in, waiting for the signal that would spur them into action.\n\nCaden cursed under his breath, cold sweat pouring down his face. Was that all he could muster? Under normal circumstances, he had no difficulty producing a ball of burning flame, but terror held him captive in its paralyzing grip. He had but a scant few seconds before they struck...\n\nHe closed his eyes, exhaling slowly, willing his trembling hands to be still. Driving the wolves from his mind, he concentrated on those beautiful, shining strands of magical energy. They looked like liquid starlight, like sterling silver that had been smelted down, flowing in winding channels like a forest stream. Their otherworldly beauty calmed him, the adrenaline that flowed through his veins giving way to something more powerful, the crackling energies seeming to leap from his fingers to his staff like arcs of electricity. Fear gave way to a kind of exhilaration, courage warming his belly, making him feel like he could move the very mountains themselves if he so desired. It was intoxicating, invigorating.\n\nAs he opened his eyes, bellowing the final verse of the incantation, a jet of white-hot fire belched from the end of his staff. It was so bright that it lit up the surrounding boulders and shrubs like the rays of the rising sun, the hissing flames spitting bright sparks. He could feel its heat on his face, igniting the air around it, so intense that it could have melted steel.\n\nThe pack recoiled in confusion and alarm, yelps of surprise echoing across the heath, the blinding light forcing them to turn their heads away from it. Caden loosed a wordless yell, lunging at the nearest wolf. He didn't make contact with it, but he didn't need to, the smell of singed fur reaching his nose as the creature loosed a wail of pain. It scrambled to escape, scurrying between the boulders, Caden spinning his staff in a wide circle to ward off its companions.\n\nHe couldn't see anything other than the blinding flames, but he could hear their dull claws scrabbling on the rocks as they turned tail, their cries of alarm rising above the roar. When the fire abated, he found himself alone once again, the bright afterimage fading as his eyes gradually adjusted to the darkness. He began to laugh, the sound surprising him, a blend of triumph and relief overcoming him.\n\nCaden sat down on his bedroll, still shaky, but less from fear now. As he lay back, he doubted that he was going to sleep much after all the commotion, but the distant baying of the wolves was no longer a concern to him.\n\n***\n\nIt took almost fifteen days to reach his destination on foot, Caden stopping only to eat, sleep, and to heal his blistered feet. The heath became more arid and rocky as he went, the dusty earth giving way to sand, greenery becoming even less common. The twisted bristlecone trees were replaced with large cacti that bloomed with purple flowers, tall enough to tower over a man, growing in strange clusters. They were not the only variety. Everywhere he looked, he found a cactus with a radically different shape. Some were spherical and squat, while others grew like small trees with fleshy pads that branched off from a central trunk, covered in wicked needles. Still more sprouted in little clusters that almost resembled soap bubbles, each one sporting a colorful flower at its peak. Some were so covered in spines that they took on the appearance of fur. There were no more grasses or leafy shrubs. In their place were plants more adapted to the dry climate. The pointed leaves of agaves and aloes jutted in all directions, succulents sporting paddle-shaped leaves, desert sage adding more splashes of color as it protruded between the rocks. It was so far removed from the environment that he was accustomed to, but it had an undeniable exotic beauty about it.\n\nFor the first time in days, he came across signs of civilization in the distance. It looked like a trading post, its architecture far removed from the timber and plaster that he was used to. The structure was made from blocks of stone that had been overlaid with mortar that matched the tone of the desert around it, wooden supports protruding from it at intervals. There was no gabled roof, nor was there any thatching or tiles. This far East, there was scarcely any rainfall, and the people who lived in these parts might never have seen snow in their lives. It was tiered, two storeys tall, with more wooden beams jutting from the facade where the floor would be. The roof was simply flat, as it had no other purpose than to provide shade for the occupants. The windows were small and thin, covered up by wooden shutters, and there was a stone staircase leading up to the second level.\n\nAs he made his way closer, he could also make out hitching posts for horses that were in the shade of a large, fabric awning. There were a couple of them standing in the shade, drinking noisily from a water trough as they batted at clouds of swarming flies with their tails. There was a well nearby, too, where the occupants presumably drew their water. It could be the only source for miles, it was no wonder that the owners had set up their business in such a seemingly random location. Outside were signs hanging from chains, offering trade and supplies in several languages, including his own. It seemed that they welcomed visitors.\n\nCaden walked up to the front door and pushed it open, emerging into a large room. It was cooler than the desert outside, and pleasantly gloomy. The only light bled in through the gaps in the shutters, providing just enough illumination to see by. The interior was much the same as the exterior, the walls packed with mortar, exposed structural beams visible above his head. At the far end of the room was a large counter, and behind it were shelves stacked high with all manner of food and supplies. He could see dusty crates, racks of weapons and what must be mining tools, along with parcels of non-perishable food. Beans, jerked meat, dried fruit, hard biscuits. His supplies had started to run low over the last few days, and he had been rationing, the sight of such a wealth of food making his stomach growl.\n\nThe trading post was far from deserted. There were a few tables and chairs scattered about the stone floor, some of them occupied by merchants from distant lands sporting capes and shawls. Caden was surprised to see a party of Dweorh crowded around one of the circular tables, nursing oversized mugs of ale. They were squatter than the average man at maybe four feet and change, but they were a robust, broad-shouldered people. Their arms were heavily muscled, each one of them sporting the physique of a circus strongman, their faces adorned with bushy beards in spite of the heat. The hairs were carefully braided, decorated with shiny beads and precious stones, clearly a source of great pride for their wearers. Their clothing was just as elaborate, their tunics decorated with geometric patterns woven from golden threads, the fabric dyed shades of vermilion and magenta. Their thick, hairy fingers were adorned with golden rings, each one of them wearing some kind of pendant or necklace.\n\nIt wasn't the first time that Caden had come across their kind, they sometimes traveled to the city to barter, and the Master had dealt with Dweorh merchants who traded in rare artifacts. They were a civilized race, known for the quality of their metalwork and their shrewdness when it came to business. They were said to live beneath the earth in vast, underground vaults where they mined ores and jewels. What business could they have out in the desert?\n\n He was greeted by a man who was standing behind the counter, his skin a darker tone than the people of Caden's homeland. Around his head and shoulders was wrapped a long, colorful scarf, presumably to shield him from the sun. His clothing was made up of a linen tunic, not unlike the ones that had come into fashion back in the kingdom. The material was light and breezy, perfect for this sweltering weather.\n\n\"Welcome, traveler,\" he said with a rolling accent. \"Come, come.\"\n\n\"It's nice to see a friendly face,\" Caden replied, walking up to the counter and shedding his pack. \"I've been traveling the wilderness for weeks.\"\n\n\"You want food, supplies?\" the man asked eagerly. \"We have everything you could need.\"\n\nCaden began to point to items on the shelves, the shopkeeper making conversation as he placed them on the counter one by one.\n\n\"So, you're a Westerner?\" he asked as he set a parcel of dried dates down in front of Caden. \"We don't see many of your kind in these parts, they rarely venture so far East. What's your business, if I might ask?\"\n\n\"Certainly,\" Caden replied. \"I'm...a botanist, my guild sent me here to conduct research on desert plants.\"\n\n\"Is that so?\" the man replied as he placed a bundle of salted pork on the counter, looking him up and down. \"Then, you're a scholar? Where are you headed next?\"\n\n\"Further East, my destination is the Coral Sea.\"\n\n\"The Coral Sea?\" the shopkeeper repeated, his brow furrowing beneath his colorful headscarf. \"Take my advice, sir, and travel no further than this outpost. The only thing that awaits you in the Coral Sea is death...\"\n\n\"Death?\" Caden asked skeptically. \"Why do you say that?\"\n\n\"Our well is the last sure source of drinking water until you reach the other side,\" he replied, \"and you won't. There are oases, but there are no maps of that place, no cartographer has ever lasted long enough to make one.\"\n\n\"Why wouldn't I survive?\" Caden asked. \"I have ample supplies, and I've made it this far. What makes the Coral Sea so different from the desert that lies behind me?\"\n\n\"There are worse fates than dehydration that await you in the Coral Sea,\" he replied ominously, tying up a parcel with a piece of hairy string. \"If the land doesn't kill you, its inhabitants will. There are tribes of monsters living amongst the ancient reefs and crumbling spires who will murder any trespassers they come across.\"\n\n\"Murder them? Why?\"\n\n\"Who can say?\" the man replied with a shrug. \"Maybe they eat them. Maybe they capture them for use in their shamanistic rituals. Whatever their motive, it's not worth risking your life over some flowers.\"\n\n\"I appreciate the advice,\" Caden said, the shopkeeper dropping the subject when he realized that he had no intention of following it.\n\nWhen Caden was stocked up with supplies, he added a tankard of ale to his bill and made his way over to the table beside the Dweorh. If they were so far East, it was likely because they were prospecting, maybe even operating a mine in the mineral-rich desert. If anyone knew anything about the ruined city, it would be them. The allure of rare artifacts and ancient tombs would be irresistible.",
        "He had only taken a few sips of his drink by the time one of the Dweorh leaned over and cleared his throat.\n\n\"Pardon me,\" he began, his voice far deeper than seemed fitting for someone of his stature. \"I couldn't help but overhear your conversation with the shopkeep. Is it true that you're headed into the Coral Sea?\"\n\n\"That's my intention, sir,\" Caden replied as he took another draw from his cup.\n\n\"Then you're braver than you look,\" he added, his companions chuckling. \"I'd heed the warnings if I were you, lad.\"\n\n\"May I ask what you're doing all the way out here?\" Caden asked. \"It was my understanding that the Dweorh people were mountain folk.\"<br >\"Aye, that we are,\" the man replied. He lifted his tankard to his lips, spilling some of its contents down his bushy beard as he took a greedy draw. He slammed it back on the table, suppressing a belch before continuing. \"We're surveyors representing a mining concern, we've come in search of riches. This desert is full of mineral deposits that nobody has been able to exploit until now.\"\n\n\"Don't you go giving away all of our secrets, Alberich,\" one of his companions warned as he nudged him with his elbow.\n\n\"It's quite alright,\" Caden said, \"my business here is purely academic. Speaking of which, has your prospecting taken you very far into the Coral Sea?\"\n\n\"Aye, once,\" the one called Alberich replied. He turned back to his drink, taking another noisy swig. \"We know better than to set foot beyond this trading post now.\" He gestured to one of his friends, who pulled back a mop of tangled hair to show Caden an ugly scar that trailed from his forehead to his cheek. It was recent, disfiguring, but the flesh had knitted well enough. He might have offered to heal him under different circumstances, but he wasn't sure that he'd be able to do much to help.\n\n\"Monsters?\" he asked, grimacing at the sight.\n\n\"We lost two members of our company,\" Alberich replied, staring into his cup for a moment. \"They attacked while we slept. The sun was still up, always is these days, and Osgar was on watch. They moved so fast that by the time the sound of his cries roused us, he was already dead. Ludek took up his sword and tried to fight them off, but they fell upon him like a pack of wild dogs. Heimrad here hit one of them with his pickaxe, the brave old sod, but he got a blade to the face for his trouble.\"\n\n\"How did you escape?\" Caden asked, both horrified and captivated by the tale.\n\n\"We were carrying black powder charges,\" he explained, \"we use them in our mining operations. Before stopping to rest, we had rigged them to destroy one of the spires, hoping that it would expose a vein of ore. Robrecht detonated them. The noise and subsequent collapse created enough of a diversion that we were able to flee Westward. We won't go back, not even to recover the bodies.\"\n\n\"What are these spires you speak of?\" Caden asked.\n\n\"There are stone pillars all over the Coral Sea,\" Alberich explained. \"They must have formed when everything was still underwater, because none of us have ever seen structures like those anywhere else. They're made from minerals that were deposited over time, we think, they're too irregular to have been carved by masons.\"\n\n\"I think they're volcanic,\" another of the Dweorh added, \"like miniature volcanoes.\"\n\n\"These monsters,\" Caden added, \"did you get a good look at them? What are they like?\"\n\n\"They were tall,\" Alberich began, quickly realizing that the term had a different meaning to Caden. \"Taller than your folk, maybe seven feet. They had the shape of a man, more or less, but in place of skin, they had the scales of a serpent. Hard as chain mail it was, tough like leather. Their faces were like nothing I've ever beheld. They had snouts like lizards, and their mouths were full of razor-sharp fangs. They fought with the ferocity of a wild animal. We were attacked with spears and axes, so they have sense enough to make tools, at least.\"\n\n\"Not from iron or steel,\" another added, \"they were fashioned from stone.\"\n\n\"Aye,\" Alberich replied with a nod. \"Flint, or maybe obsidian. We didn't linger long enough to find out the details. They didn't wear much in the way of clothing, either. Savages never do.\"\n\nTheir description filled Caden with dread, but as tough as these Dweorh were, they weren't sorcerers. Still, could he really face off against monsters that had sent a party of half a dozen armed men packing? What's more, they were said to practice magic themselves. Both the Master and the shopkeeper had mentioned their shamanistic rites. As primitive as they must be, what powers did such rituals bestow upon their practitioners? Was it anything like the magic that he knew?\n\n\"When did all of this happen?\" Caden asked.<br >\"Maybe two weeks ago,\" he replied. \"If you're wondering whether they might have moved on by now, I wouldn't put money on it.\"\n\n\"During my travels, I heard rumors of ancient ruins that lay beyond the Coral Sea,\" Caden said as he leaned closer to his neighbors. \"A long-abandoned city that lies on its far shore. Those who built it have no name, but scant records of its existence remain. Is this something that is known to the Dweorh?\"\n\nAlberich exchanged glances with his companions, reaching up to stroke his braided beard as he considered.\n\n\"We've heard rumors,\" he replied, lowering his voice. \"Some speak of a grand city that was lost to the desert eons ago, of long-abandoned vaults packed to the ceiling with riches, just waiting to be claimed. That is, if you can reach it. I don't pay it much mind, myself. I've heard such talk before. Lost cities of gold, uncharted islands where pirate lords buried their ill-gotten gains, hidden tombs where mummified kings still preside over their worldly possessions. It always ends up being nonsense.\" He took another long drink from his cup, pausing to wipe the foam from his mouth. \"Me, I prefer to dig my riches out of the ground. It's far more reliable.\"\n\n\"Say, you look like the scholarly type,\" another of the Dweorh interjected. \"Any idea when this summer might come to an end?\"\n\n\"Hopefully soon,\" Caden replied, relieved to be able to take his mind off the monsters for a moment. \"I have it on good authority that the guild of sorcerers is working on a solution. The problem has something to do with a misalignment of the heavenly bodies, so I heard.\"\n\n\"How are they able to correct something of that magnitude?\" the Dweorh asked. \"It's not as though they can reach up and put everything back into its proper place...can they?\"\n\n\"They're sorcerers,\" the one with the scar replied, \"they spend all of their time cooped in their towers staring at the sky. If anyone can work it out, it's them.\"\n\nCaden wanted to tell them more, but the Master had warned him of spreading word of his mission. He couldn't let them know of his true purpose here, or of the treasure that the ruined city held.\n\n\"How are your people faring?\" he asked, changing the subject.\n\n\"We build our cities deep beneath the mountains,\" Alberich explained. \"It's always cooler underground than above, you'd be shocked by how cold a cave can get just a few feet below the surface. The heat is no concern of ours, but the crops have been unreliable. I fear that the grain stores will start to run low.\"\n\nThey talked for a while longer until Caden had finished his drink, then he lifted his pack, bidding the Dweorh farewell as he headed for the door.\n\n\"Do you still intend to enter the Coral Sea?\" Alberich called after him, Caden nodding in reply. \"Won't you even take a sword with you?\"\n\n\"What difference would that make?\" the scarred Dweorh scoffed, taking another draw from his tankard.\n\nCHAPTER 3: CORAL SEA\n\nCaden stood at the edge of the Coral Sea, what had once been a sloping shore giving way to a vast expanse of desert that resembled a canyon. It extended as far as the eye could see. The far side must be over the horizon, whatever it looked like. He unfurled his map and checked it, making sure that he was indeed where he was supposed to be.\n\nFrom this vantage point, he could make out the spires that the Dweorh had described. They looked like chimneys of stone, their surfaces covered in what resembled colorful moss, but was actually discoloration in the minerals. They were uneven, bulbous, no two of them exactly alike. They sprouted from the ground in clusters, many of them seeming to emerge from the same formation of rock. They were far higher than he had imagined, some of them looked to be skirting a hundred feet. Many had collapsed under their own weight, but there were plenty still standing tall.\n\nSurrounding them was the coral that gave this place its name. It was so abundant that the Coral Sea could scarcely be referred to as a desert, the ancient growths creating massive shelves where they had built atop one another over eons, like a petrified botanical garden. They took on such varied shapes. Some bore a close resemblance to fungi, like giant mushrooms that sprouted from the rock, while others were more plant-like in their appearance. There were even corals that had taken on an uncanny resemblance to trees, rising from the ground on stout trunks, branch-like formations creating a sort of table that cast shadows on the land beneath then. Unfortunately, the vibrant colors that they must have sported in life were long gone, time having made them as lifeless as the stone that surrounded them.\n\nBetween the clusters of spires and outcrops of coral, paths formed in what had once been the seabed, filled in with sand that bore a striking rust-red color. Caden began to descend the sandy incline, dropping down into the maze of spires and reefs. It would be easy to get turned around in here, and although he might have an infinite supply of water, the same was not true of his food. He would have to make sure his path remained straight.\n\nHis heart began to race as he walked between the towers, the jagged formations casting deep shadows in the harsh sunlight. He was glad of the shade, but his mind played tricks on him, insisting that monsters could be lurking wherever the darkness pooled. The story told by the Dweorh had rattled him, but he couldn't turn back now, he had no choice but to press on.\n\nHe marveled at the strange structures as he made his way along the path that had been carved out by the sand, like a red river that snaked between the rock formations. A sudden movement caught his eye, startling him, but he quickly realized that it was just a snake. The creature had been basking on the hot stone beside a cluster of bulb-shaped corals, its orange scales patterned with black diamonds that ran down its long spine. When it saw him, it darted into the corals, winding its way into the holes in their sponge-like surfaces. There must be all kinds of wildlife down here that had made their homes in the rocks.\n\nCaden proceeded ever deeper, craning his neck to admire the tall towers that surrounded him. The colors that stained their uneven surfaces were quite beautiful, streaks of greens, reds, and oranges discoloring the mottled stone. As he rounded a corner, he faltered, coming across a grisly sight. There was a relatively flat outcrop of rock, creating a sheer wall directly ahead of him, its surface stained with some kind of red pigment. It was clearly man-made, or at least, made by something with intelligence approaching that of men. It had been painted over with some kind of white, chalky substance, crude figures and strange runes adorning it. The figures stood upright, with two arms and two legs, but their features were decidedly bestial. Although they lacked any real detail, little more than stick figures, he could make out their winding tails and their elongated faces. In their hands were clutched spears and axes, and at their feet lay the bodies of what were obviously supposed to represent people, broken and dismembered.\n\nThat wasn't what turned Caden's stomach, however. Arranged in a neat row at its base were five spears that had been driven deep into the sand, and at the tip of each one was a head in varying stages of decomposition. The oldest was little more than sun-bleached bone, its lower jaw missing, the tip of an obsidian spearhead jutting from a crack in its crown. The others were covered in desiccated flesh, their sunken eye sockets empty, jaws that were only connected by rotted strands of muscle and sinew hanging agape as though they were screaming silently. Clouds of insects buzzed around them, crawling across their flaking skin, and inside their...\n\nCaden turned away, covering his mouth with his hand as he gagged. The warning was obvious enough. These creatures did not want anyone trespassing in their domain, and the fate of those who ignored the gruesome display was death. Had the party of Dweorh prospectors come across such warnings and ignored them?\n\nHe looked back at the shore, doubt overwhelming him. He should be sitting in the tower library with his nose buried in a book right now, he had no business being out here, no business fighting off wolves and savages. What had the Master been thinking, assigning him this task? Even a company of the King's most seasoned knights would be hard-pressed to make it through this unscathed. A monster could be lurking behind every rock, waiting for the right moment to chop off his head and impale it on a pike as a warning to others.\n\n\"This is folly,\" Caden muttered to himself. He turned his back on the severed heads, trudging his way through the sand, following his own footprints as he returned the way he had come. It was a struggle to suppress the urge to run, his imagination conjuring monsters on his heels. The Master would have to find another candidate to make the perilous journey, as he should have done from the beginning. He hadn't known the extent of the danger, he needed to employ a company of sellswords, or maybe petition the King for an entourage of guards. A single traveler would never make it through this place alive. So what if time was running out? If Caden went home, or if he died, the outcome would be the same. He would still fail to retrieve the artifact. Even if it meant that he had come all of this way for nothing, he would at least return home with his life.\n\nHe eventually reached the shore, starting to climb his way back up the incline, digging his staff into the ground for purchase. With every step, his boots seem to grow heavier, a new tension rising up inside of him as he neared the top. It wasn't fear, it was shame...\n\nCaden stopped again, bowing his head as he leaned his weight on his staff, the sweat that dripped from his brow sizzling as it hit the hot sand. He collected himself, catching his breath, glancing over his shoulder at the expanse of eerie towers.\n\nThere was nobody else. That was the only reason he was out here to begin with. Either he completed this task, or the world would die, along with all of its inhabitants. The green hills and forests of his homeland would look just like this place, the dead trees surrounded by sand dunes, the merciless sun beating down on a lifeless hellscape. Going back was just as much a death sentence as going forward.\n\nCursing under his breath, he began to slide back down the slope, resolving to see his quest through to its end.\n\n***\n\nCaden walked until the sun began to set, then took shelter beneath the shade of one of the large table corals, its branches spreading above his head like those of a strange tree. If it had endured this long, he surmised, then there was little chance of it suddenly collapsing on his head.\n\nHe hadn't come across any more of the gruesome warnings since the one that he had encountered at the shore. The monsters probably placed them near its border to dissuade trespassers, there would be no reason for more grisly displays deeper inside.\n\nSo far, he had come across no lizards in the shape of men, merely a few small reptiles that had been basking in the sun, quickly dashing into cover when he had disturbed them. This place was not completely devoid of plant life. There were cacti and succulents that sprouted amongst the petrified corals, creating an odd contrast between ancient and modern, land and sea. They were scarce, however, clinging to what patches of soil they could find. An ecosystem existed here, albeit a desperate one.\n\nThe food that he had bought at the trading post provided no small measure of comfort, Caden enjoying some salted pork as he took in the alien landscape that surrounded him. As he ate, he heard what sounded like loose stones rolling down a rock face, echoing between the spires. He reached out to grip his staff, pausing his chewing so that he could hear more clearly. After a good few moments, he set it back down, glancing around suspiciously as he continued his meal. There were animals out here, it could have been a snake or a rat, but he wasn't about to let his guard down after seeing those decapitated travelers.\n\nWhen he was done eating, he set down his bedroll on the rock beneath the coral, keeping his staff close by as he lay down. He felt so exposed, but without a campfire, he could hopefully avoid drawing attention to himself. If the savage inhabitants of this place randomly stumbled upon him while he slept, then he could only conclude that the Gods wanted him dead, there wasn't anything to be done about it.\n\nCome to think of it...\n\nCaden sat up, pulling the heavy, leather-bound spellbook from his pack. He searched the index, glad that the setting sun was still providing enough light to read by, locating a likely page. Why hadn't he thought of this before? Had his mind been so clouded by fear?\n\nThere, a concealment spell. He read through the incantation, poring over the instructions as his eyes scanned the looping text. This spell could bend light around the sorcerer or an object in his possession, making him functionally invisible to onlookers, and it seemed to block the transmission of sound as well. The only way to discover him would be physical contact.\n\nIt wasn't an especially complex spell, and before long, there was a small pocket of invisibility shrouding his hiding place. Wanting to see how effective it was, he rose to his feet, stepping off the rock and onto the warm sand. After a few paces, he turned to see that his campsite had vanished. He should have been able to see his bedroll lying on the rock beneath the shadow of the towering table corral, his pack and staff sitting beside it, but the rock was bare. There was a slight shimmering in the air if he looked closely, but it would be unnoticeable to someone who wasn't looking for it. He reached out a hand and pushed it through the bubble, watching it vanish up to the wrist, strange reflections glittering like the shards of a broken mirror around the breach.\n\nSatisfied that he could sleep in relative safety, he stepped back inside, his possessions reappearing. Pleased with himself, he lay down on the bed, draping his cloak over his eyes to shield them from the sunset.\n\n***\n\nCaden was roused by the sound of something large shuffling around nearby. He opened his eyes groggily, his vision slowly adapting to the darkness. It was night, the stars twinkling above the splayed branches of the table coral, the crescent Moon providing just enough light to see by. He turned his head, and had to cover his mouth to stifle a gasp of alarm.\n\nLurking at the foot of the rock, not ten feet away from him, were two figures. They were hunched over, appearing to examine the red sand. Their features were hard to make out in the twilight, but he could be certain that they were not human. Their long, winding bodies were coated in a layer of fine scales that reflected the moonlight, like the tiny tiles in a mosaic. They were patterned with blotches of orange, black, and yellow that camouflaged them against the desert backdrop. Long tails trailed behind them, as though giant serpents had joined to their bodies at the rump, as thick around as a human thigh at their base."
    ],
    "authorname": "Snekguy",
    "tags": [
        "deepthroat",
        "large breasts",
        "light bondage",
        "muscle",
        "oral",
        "reptile",
        "size difference",
        "small dom large sub",
        "vaginal"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/conjunction-1"
}