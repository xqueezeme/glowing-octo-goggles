{
    "title": "Scouts Gone Wild",
    "pages": [
        "Author's Note: Thanks to Tom Collins and Lordmikel for helping with editing this story and other suggestions. I hope you enjoy the variety and as always comments are encouraged and enjoyed. ~ Red\n\nBetty stood looking out at the group of Senior Scouts. She sighed. How had they gotten to this point? How had they gone from the leading troop in cookie sales to the last? She had no idea and now she had to tell these girls that for the fourth year in a row they were not going to meet the Council's goal of 5,000 boxes of cookies. Her eyes scanned the young faces that were so eager to please. She'd been with these girls since they started scouts, 13 years ago. Now all of them were Senior Scouts, all were eighteen, and all of them were ending their career in Scouting in just a few short weeks. The ending would be bitter if they didn't make their goal. She took a deep breath and called the meeting to order and then told them the bad news.\n\n\"What?\" Annie whined. \"That's not right. We work hard for the Council. . . and it isn't our fault they raised the prices of the cookies and now no one wants to buy them \"\n\n\"Damn,\" muttered Robin. \"They even took the best ones away. Do you know how many people got pissed at me because they got rid of the mint ones? How bright was that?\"\n\nBetty arched her brow at Robin and the perky blonde apologized for her language. Betty smiled and smoothed back her tight pony-tail. \"I know it is frustrating, but we can't make people buy them.\"\n\n\"No. . .but fuck. Sorry,\" Denise blushed. \"They took away the favorites. It's like the customers like one for a few years and then they just rip them away. Did you even taste the low-fat sappy shit they tried to pass off last year? They brought that garbage back and then raised the prices too. Hell, that elf guy in the tree makes the same damn things and sells them a whole dollar cheaper.\"\n\nWith Denise tirade of words Betty knew she'd lost control of the girls. The conversation became heated and she allowed them to hash out ideas for several minutes before regaining control.\n\n\"Just fuck 'um,\" a voice from the back of the group muttered.\n\nEveryone turned to look at the young girl in the back, the quiet one of the group. Sally sat there her eyes looking void of much emotion, though inside her head she was formulating a plan. \"Just fuck who?\" Robin asked.\n\n\"The customers, the council, our parents. . . just fuck 'um. Tell them for every case they get a blow-job, every ten they get sex and damn. . . if they buy more, they get two of us.\"\n\nBetty's eyes grew wide in their sockets. \"Sally \"\n\n\"What? Come on. . .you know we'd make a lot of sells. Be the best year ever. . .maybe even earn a badge or something,\" Sally laughed.\n\nRobin turned back and grinned. Betty, however sat there in shock as the group of girls huddled together. Denise offered to have a party at her place that weekend. Her parents would be out of town so the girls and Betty could all get together there. Betty quickly disagreed to the entire thing and told the girls they were not going to sell cookies like that. The girls sighed and then chuckled, telling Betty they had only been kidding. As the meeting shifted to the Summer picnic plans Betty found herself thinking of Sally's suggestion. She blushed as she imagined offering herself up to her neighbor for a case of Lemon Lolly Swirls.\n\nThe weekend came and Betty caught herself several times wondering what the girls were up to. She was concerned that they were acting out on Sally's plan; so noon that Saturday, Betty was knocking on Denise's home and walking into a well coordinated meeting. Her eyes took in pie charts and maps of the town all colored coordinated, as were the girls.\n\nRobin had her long blonde hair pulled into a braid and from her blue summer dress it was apparent she was hitting the west side of town. Denise's red locks were piled high in a clip, her curls showering her shoulders, was wearing a green dress that matched the color that highlighted the east side of their small community. Annie wore yellow and her brunette locks hung loose down her back. She was covering the north, leaving Sally all dressed in red embracing the south. Betty sighed and shook her head in surprise. \"Well... where do you want me? It is obvious you're going through with this. I may as well help.\"\n\nThe group grinned and hugged Betty then presented her with a rainbow patterned dress that matched the cut of the others. \"We knew you'd be here,\" Denise said. \"Had these all made up Wednesday. . . told mom it was for a play.\"\n\nBetty chuckled and left the group. When she came back she was given a list of all the important people that worked in the community, but didn't live in town, but rather out in the country.\n\nThe group agreed to meet the following night at Denise's. Each one had their cell phones, condoms, and a Taser that Sally had stolen from her Dad the Police Chief and the weapons closet at the station.\n\nThe girls and Betty then left, each with a goal in mind, a map in hand, and an order form. . . blank.\n\n******\n\nGo West Robin. . . Go West. . .\n\nRobin smoothed down her Unofficial Blue Bunny Scout dress and walked confidently toward Mister Roger's house. Her knuckles wrapped on the door and when she heard footsteps behind it she quickly released the top three buttons of her dress. Mister Roger's opened the door and stared at the full-breasted blonde and sighed.\n\n\"Robin, I told you I didn't want cookies this year. They are just too expensive. You're a great girl to have as a neighbor, but they just aren't worth it,\" Frank sighed. His eyes did take the time to notice the unbuttoned dress and the soft curves of the young tits that were openly on display or so it seemed.\n\n\"I agree Mister Roger, so I wanted to offer you something that was.\" She pressed a small business card in his hand and waited for him to read it. When the door opened wider and her neighbor said \"one case\" Robin stepped in and grinned wide.\n\nRobin had been in her neighbor's house lots of times, but always with her parents or Missus Roger. The older man now lived alone, his wife having passed away a few years ago. The door closed behind her and she looked expectantly at her customer.\n\n\"Where would you like to collect your ummm?\" Frank's question trailed off.\n\n\"Anywhere you're comfortable,\" she whispered. She dropped her purse by the door and slipped closer to the seventy-year old widow. \"I don't want to cause too much work on that pace-maker of yours.\" Robin's hand slipped up the inside of Mister Roger's shirt and teased a nipple. Her smile rose as she felt it harden beneath her fingertip.\n\n\"I'll be fine Robin. Let's go to the living room.\"\n\nFrank watched the young woman walk toward the room indicated and he felt his cock tingle. He'd not gotten a blow-job in years and he could almost feel his neighbor's sweet lips surrounding his dick. He watched her turn toward him and Frank slid into his easy chair. His hands moving to his belt buckle.\n\n\"Oh let me Mister Roger,\" Robin smiled. She slid down to her knees and ran her hands up and down his thighs. \"Mmm... you still have what it takes don't you?\" she mumbled, her mouth pressing soft kisses up the sides of his khaki pants. She got to his crotch and ran her tongue over the cloth-covered bulge; her teeth nipped the top gently once she made her way to it.\n\n\"Impressive,\" she winked as she took in the large outline that rested under her mouth.\n\nHer hand ran firmly over his bulge and up to his belt.\n\n\"Glad you like,\" he groaned as he watched her slim, young fingers work away the belt and the button of his pants, then the zipper.\n\nOnce Robin had the older man's cock out she was more then impressed. \"Fuck. I'll let you ram that baby into me for a case,\" she muttered.\n\nFrank puffed out his chest, full of pride, \"Better not overwork the pace-maker, remember?\"\n\n\"Damn,\" Robin grabbed his stiffened member and eased it as well as his balls from his boxers. Her fingers played over the tip and down the swollen veins, before they came to rest on his testicles, where her nails played over them. \"A titty fuck and you can have a couple more boxes.\"\n\n\"Deal.\"\n\nRobin grinned and swallowed his balls with one great thrust of her mouth. She sucked on the twin spheres, rolling them between her lips and tongue before increasing the motion with her clenching jaw. Her hand wrapped around his dick and she stroked him for several long minutes while she nuzzled his sex and drew the twin spheres deeper into her mouth. Her tongue lapped over the crevices and the hairs tickled her cheeks, but she didn't care. Her eyes were watching the already massive tool in her hand continue to stretch and her pussy was becoming slick with come as she thought of abandoning the twin balls in order to inhale the hard shaft.\n\n\"Ohhh yeah,\" Frank muttered as his balls were swimming in her mouth. He grabbed her long blond hair, the braid loosening in his grip and brought her up from his dick. \"Suck it. Suck it hard for those cookies Robin,\" he groaned.\n\nShe grinned and opened her mouth. His cock was plunged deep as her fingers toyed with his testicles. Robin felt the tip of his sex slam against the back of her throat. She angled her head so that his shaft could go deeper and as she accepted him into her warm haven her fingers went in search of her pussy. Robin bobbed up and down on his sex as she finger-fucked herself. She moaned against his cock and when he gasped for breath and ordered her to bring her tits up she released her sex and his.\n\n\"Mmm...\" Robin smiled. Her slick pussy juices coated her fingers and she licked them clean. She grabbed her large breasts and watched Mister Roger slide his dick between them. \"Ohh yeah. Are you gonna come on me?\" she asked.\n\nFrank knew the deal. He knew that to come on her would cost him another two boxes. He didn't care though. \"Fuck yeah,\" he growled.\n\nRobin grinned and began moving her massive breasts up and down. The head of his sex came out between her white globes and her mouth was there to receive it. She swallowed stream after stream of pre cum. Soon she was swallowing his seed and then wearing them. He shot his load into her mouth and though it was rare for him to come twice the young beauty managed too make him and that shot streamed down her chin and across her breasts. \"Ahhh...\" Frank moaned. He watched his dick slide between the soft flesh and shuddered when she gathered some of the come from her tits and lapped it from her fingers.\n\n\"Mmm...,\" she grinned. \"Nice.\"\n\n\"Uh huh,\" he answered back.\n\n\"Thanks Mister Roger. You enjoy your sixteen boxes of cookies.\"\n\nRobin waved goodbye and headed down the street to visit Mike and Melinda Baker. Once there she managed to sell ten cases to each one of them and another twenty when they all joined in at the same time. It was a couple hours worth of work, but she didn't mind, nor did they. When four-thirty came around Robin realized she was hungry for more then come and waited at the parking lot of the local Ice Cream shop. Her fingers toyed with her cherry slurpie and her other hand played with her clit. She'd sipped her drink and then brought her fingers up to enhance the flavor, after she was finished with her little break she went back to work.\n\nEast Wind Brings Denise\n\nTabitha Allen stared out her upstairs bedroom window. Her mother had gone away for the weekend, left her some money for pizza delivery as well as a signed blank check for emergencies. When she saw Denise's little convertible pull up into her drive she moaned. \"Damn cunt, wanting to sell more of those stupid cookies. Wait till I tell her mom ain't here and she won't get her usual order.\"\n\nThe doorbell chimed and Tab happily waltzed downstairs. \"Hey,\" she said opening the door. She looked over the smiling redhead and smirked. \"Mom's not here. No cookie sales for you,\" she started to shut the door, but growled low when Denise's foot wedged in front of it.\n\n\"I know your mom's out of town. That's why I'm here. You don't like me. . .that's cool. . .but you like pussy and so do I. So I have an offer,\" Denise stated. Her eyes looked over the small boobs that were unsupported by a bra and she could see the dark nipples protruding.\n\nTabitha's stood there and listened to Denise's new sales pitch and invited the girl in. \"I've got a check that's blank. You can fill in the amount when were done. She took Denise's hand and led her upstairs to her mother's room. \"Get undressed Bitch, this is gonna be fun.\"\n\nDenise felt her pussy tighten and she lifted her dress off her full figure and slipped out of her sandals. She watched Tabitha do the same and soon the two women were face to face. Their nipples were barely touching. Denise's hands moved over Tab's full breasts and she lifted them in her palms. Her mouth moved to Tab's and soon their tongues were drinking deep of each other's flavor.\n\nTabitha's hands slid down Denise's chest and she pinched her nipples, twisting them hard before she released them to move to more firm muscles. Her hands gripped the blonde's ass cheeks and pushed her toward her sex. Denise released Tab's breasts and slid her hands to the girl's hips and ground their pussies together.\n\n\"Oh fuck, Denise,\" Tabitha hissed in the other woman's ear. Her mouth captured the soft lobe and her arms wrapped tight around her afternoon playmate. She sucked and tugged on Denise's ear as she walked her back toward the bed. Their nipples caressed each other and both girls were soon falling to the bed. Denise landed firmly on her back, her tits bouncing against Tab's. Tabitha sat up and straddled Denise's juice-covered cunt.\n\n\"Fuck your so God-damn wet,\" Denise hissed. Her fingers slid to Tab's cunt and she flicked the swollen clit with her fingers. \"I've got to taste that pussy Tab.\"\n\nTabitha grinned and walked herself up to Denise's face. Her knees rested on either side of the blonde's head and she watched as Denise shifted, making sure she was right where she wanted to be. Tab grabbed the headboard of the bed and lowered her slick cunt down to the open and eager mouth that rested beneath her.\n\nThe first hot, sweltering caress of Denise's breath brought a moan of pleasure from deep within Tabitha and she shuddered. Several streams of honey escaped from Tab's pussy and dripped onto Denise's face. \"Oh fuck that's hot,\" she muttered as she lowered her cunt further, this time wiping her slick juices from Denise's chin to her nose. When her clit hit the tip of the blonde's nose it hooked and Denise treated it with a long lick, before she coated it with a lazy, relaxed stroke of her tongue.\n\nDenise looked up and squeezed Tabitha's ass cheeks as she thrust her tongue in between the bald pussy's lips. She rolled her tongue over the sweet folds, drinking in the woman's fluids, while Tab gripped the headboard tightly. She bit at the pink cunt and slid her mouth up and down the heated center. The nectar flowed thick and the sounds of the two fucking moved through the room.\n\n\"Ohh yes,\" Tabitha moaned. She closed her eyes and felt Denise's tongue move in and out of her slick pussy. The juices flowed thick from her cunt and were eagerly suckled and lapped up by Denise's mouth. The tightening of her sex told her she'd be coming soon and she ground her sex into the woman's face.\n\nThe aroma that wafted from Tab's arousal overwhelmed the other woman and she wanted more. Denise pushed two fingers into the girl's pussy and screwed them left then right. Her nails scrapped the velvet walls, coaxing out more nectar. \"Fuck \" Tab screamed. She came all over the hot mouth and fucking digits that were invading her sex.\n\nDenise bathed in the woman's juices. She felt the warm fluids cover her fingers and her face. She licked and tugged, suckled and fucked her way through the hot syrup until Tabitha was shuddering a second, then a third wave of lust from her pussy.\n\n\"Delicious,\" Denise muttered against the come-covered sex that she finished cleaning, before sliding from between the woman's legs.\n\nTab turned around and grinned. \"Blank check, remember...\" her voice trailed off as she crawled toward the spread legs of her newest lover.\n\n\"Yep, just waiting for you to make your order known,\" Denise answered.\n\nTabitha buried her face into the redhead's cunt and began ordering many cases of cookies.\n\n*****\n\nAnnie's Northern Exposure\n\nAnnie had managed to convince a number of friends to purchase cookies from her. Her body was throbbing and her pulse racing by the time she showed up at her Uncle's house. She opened up the backdoor and walked in. Her eyes scanned the living room and she headed upstairs. Once there she rounded the landing and walked into his bedroom. There he was sitting on the chair by the window and Thomas his son standing beside him. Both men were naked and both were waiting for her.\n\n\"Annie,\" Thomas said.\n\n\"Hey,\" she smiled. Her eyes ran over both hard cocks. \"I didn't know you were home this weekend.\" She slowly slipped free of her dress and sandals. Annie dropped to her hands and knees and crawled to her cousin and her Uncle.\n\n\"Seems your selling cookies,\" Robby said, having just hung up the phone with a bowling buddy. Once she reached his side, he cupped her chin and raised her face. \"How many do you have sold?\"\n\n\"I don't know. I've lost count.\"\n\nRobby ran his fingers over his niece's lips. \"Well. . . that's not good. Guess I'll have to sample on the flavors so I can make sure I'm your most-valued customer.\"\n\n\"Whatever you wish.\"\n\nThomas walked behind his cousin and gripped her ass. His cock was already glistening with lube and his fingers moved over her hole, caressing lubricant over the entrance as well as pressing some inside her puckered entrance. \"I'm ordering some too. Seems we need something to snack on at the college.\" He pushed his cock into her tight ass and moaned as she pushed back against him taking him fully into her.\n\nRobby watched his son take his time fucking his cousin's ass. His cock stood straight and hard, his fingers wrapped around it. Annie moaned as Thomas continued to pound into her. She could come right now if he told her too. Her body was burning. The juices of her sex coated her pussy and her legs, but she'd managed to keep her orgasm in check and fought hard to wait till her Uncle was ready. The muscles of her sex clenched and released. She felt her climax waiting and she whimpered when Robby placed the head of his cock against her lips.\n\n\"You may come,\" he told her.\n\nAnnie moaned, her mouth opening to let the sound escape. As she did Robby thrust his swollen member into her warm cavern and she closed her lips over his sex. The moan vibrated through his cock and he pushed her head down, forcing her to accept his fullness. She sucked hard on his sex and felt the rush of his blood pumping through the extended veins of his dick.\n\nThomas continued to fuck his cousin's ass with forceful plunges of his dick. He felt her come flow from her pussy and slide toward him. It added to the lubrication he'd used on her as well as slithered around his balls. His nails dug into her skin and he felt her shudder again as she came once more.\n\n\"Oh yeah. You like me fucking your ass, don't you?\" he groaned out. His hand came up and delivered a hard slap to her ass.\n\nAnnie hissed and raised her mouth from Robby's cock. \"Oh fuck yes \" she muttered then enveloped his balls into her mouth. She rolled them left then right as her fingers moved to stroke his stiff rod. Her cheeks were full of his testicles and she tightened her hold on them.\n\nRobby groaned as he felt the grazing of her teeth against his jeweled sack. He felt her tongue lapping at his testicles, while her hand moved up and down on his cock. \"Fuck Annie,\" he muttered as she suckled him.\n\nDrops of pre cum escaped his dick and he watched it slide down his head. Annie saw it too. Her mouth abandoned his balls and her tongue made a hungry lap over his swollen head. She cleansed him of the oily substance and took his cock once more. ",
        "Annie bobbed her head up and down on his member, while Thomas pounded in and out of her ass. Robby could feel his come boiling and knew she'd be full of his seeds. He looked to Thomas and saw his nod. Soon both were shooting ropes of pearls into Annie. Her ass welcomed the hot liquid as did her mouth. She accepted both. Her tongue pressed against the head of her Uncle's cock and her fingers squeezed his balls. She begged for more of her cousin's come and she shivered with lust as he pulled his cock out and sprayed her ass cheeks with the fiery substance.\n\n\"Yes, baby,\" Thomas muttered as he milked his seed from his dick and sent it falling over his cousin's rear. His fingers spread the white seeds over her cheeks and he kneaded her taunt cheeks.\n\nRobby's come was swallowed and his second rope fell over his whore's breasts. \"Go over to the bed,\" he told her.\n\nAnnie rose and did as she was told. Thomas left the room and when he returned his cock had been cleaned and Annie was laying on her side. Robby lay beside her. His cock semi-soft, but as Annie toyed with him he felt his dick starting to rise.\n\n*****\n\nSally and her Southern Charm\n\nThe day had grown hotter the more time that Sally spent on her back selling cookies. Now she was enjoying a nice long dip in the creek that ran just on the edge of town. Her glistening body rose up from the water and she swam up and down the deepest pool of the creek, just under the bridge. She felt herself growing more relaxed and tallied up the number of boxes and cases she'd managed to wiggle her ass for that day.\n\nShe grinned and made her way to shore. She grabbed her clothes and the blanket she'd pulled from the back of her car. Once the blanket was spread out and her clothes balled up to serve as a pillow, she let the late afternoon air caress her skin and closed her eyes. As the sun beat down on her skin she recalled the afternoon's events and let her fingers trail over her moist flesh. The sunlight slowly began its dip down below the horizon, its rays drying the beads of water from the creek. Her nails dragged slowly up her stomach, between her breasts and across her neck. She moaned softly as she let that same path be explored over and over again, until her other hand squeezed her left breast. Then her right hand slipped into her mouth.\n\nSally explored her lips, tongue and teeth. Her finger dipping in slowly so her tongue could swirl around the length, before gliding out. She then ran her wet digit from her mouth and down her chin, then over her collarbone. The kneading of her breast continued as she treated herself to tender caresses and explorations. She moaned softly, the wind picked up and carried it into the trees and bushes. Creatures of the forest picked up the sounds alerting each other to the minx that was in the forest enjoying a moment alone.\n\nThe sounds of the forest disturbed Jake Russell and he found himself listening more intently. No longer was he hunting for meat on the table; he was in search for the erotic sounds that were barely audible in the air. Jake's feet took him to the edge of the creek and he watched Sally work her fingers over her sex. As he enjoyed the view his hand began moving toward the growing bulge in his pants.\n\nJake gripped his cock and rubbed it hard through the denim of his jeans. He laid his gun down and released his shaft from the confines of his pants. His hand returned to his sex, this time nothing barred the skin on skin contact he craved.\n\n\"Ohh...\" Sally muttered, her back arched slightly as her fingers twisted her nipples. Her eyes were closed; a serene look of pleasure crossed her features. Her fingernails trailed slowly down toward her sex. Her legs fell open, her pussy exposed to the Summer air and unbeknownst to her, Jake's eyes.\n\n\"Mmm, ohh.. Fuck,\" she groaned louder as she teased the strip of flesh that was growing hotter with every pull of her fingers.\n\nJake watched her slip a finger down to her slick lips and push one in, then two. He moved his other hand to his balls and cupped them. His fingers glided over his swollen head and he pinched the tip gently, imagining them as Sally's teeth. \"Damn,\" he groaned, his eyes straining to remain open as his hand worked the same rhythm as her fingers.\n\nThe grip on his cock would tighten on the drag down and loosen when he rolled the skin up. He repeated the gesture, his cock swelling with every pull and push he delivered. His other hand groped his balls, squeezing them, then rolling them between his thick digits. He moaned and for a moment thought it had been loud enough for Sally to hear. He gazed at her sex and saw she showed no indication of slowing down.\n\nSally added a third finger to her sex and worked it in and out as if her very life depended on reaching the goal that was just within her grasp. Her middle finger found the spot she was looking for and her entire body spasms as she climaxed hard around her hand. She groaned loud, the sound so deep and hard that it tore at her throat. Her voice box vibrated and Jake could hear the primal growl erupt from the woman on the blanket. His hungry spasm of lust flowed from him as did his grunt of pleasure.\n\nSally heard the noise and chuckled as she brought another wave of heat from deep within her cunt. When she was finished coming she eased her slippery fingers from her sex and raised up on her ass to look across the pond. \"Jake,\" she said with a wink. \"Sal,\" he calmly answered back.\n\nHe pushed his cock and balls back into his boxers and slacks and walked the few feet up to the shallowest part of the creek. Once he made it to Sally's side he slipped out of his clothes and slid between her legs. His mouth went to work on cleaning her sloppy cunt.\n\nSally moaned her way through several more cases of Tasty Tartie Vanilla Wafers.\n\n*****\n\nLeader of the Pack\n\nBetty bit her lower lip as she studied the last house on her list for the weekend. The girls had all checked in last night and told her they'd made it home. Each one had checked in again that Sunday morning and was on her way out to make a few sales before church. That was where Betty was headed after this last stop. She looked up at the brick parsonage and wondered if she wasn't pushing her luck, but she knew that the Pastor and his wife would buy a lot of cookies if she was able to convince them they were needed for the Church pot-lucks.\n\nSo after shutting off the engine of her '57 Bel Air, she slipped out of her car and headed to the door. Her finger pressed on the small doorbell button and she waited. Her stomach was in knots as she thought over all the activities she'd participated in the day before, but deep down she was happy that the girls would make their goal. They all agreed that they didn't have to continue selling cases after cases, but something deep down inside told them they needed to do their best.\n\nThey all wanted to give 120% to the Scout movement and so they placed their goal even higher. This final year they were going out on top. They would be the highest selling troop in the entire Council history, maybe even Nationwide\n\nPastor Jeremy opened the door to the Victorian home and smiled at one of his most pleasant parishioners. \"Hello Betty,\" he said. He stepped back and let her step into the home, before shutting the door behind her.\n\n\"What can I do for you?\" Jeremy was curious as to why the woman had felt the need to talk to him now when service was only an hour and a half away, and even then he wasn't excepted to be at the podium until a half hour after that.\n\n\"Jeremy, who is it?\" a voice called from the hall, footsteps echoing along with it. \"Oh, hello Betty. Nice to see you.\" Jennifer Slippers grinned at the dark-haired beauty and tilted her head. \"I hope everything is okay?\" she added, a look of concern on her face.\n\n\"Yes, everything is great,\" Betty responded. She bit her lower lip and pulled a card from her wallet, passing one to Jennifer and one to Jeremy. She'd heard rumors about the couple, ones that she was willing to bet were true. She remembered they had come from a town not to far from where they were now spreading the Good Word. Cherry Hill, was the name, at least she thought it was.\n\nJennifer's eyes grew wide as did her grin. She slipped her feet from her heels and eyed the delicious morsel in front of her. She and her husband hadn't found a playmate in the new town and were just talking yesterday about visiting the old neighborhood, but now, it looked like they wouldn't have to go very far.\n\n\"Jeremy,\" Jennifer whispered as she slid up next to Betty and smiled softly. Her fingers trailed over the warm flesh that was becoming more aroused as Betty studied the looks being exchanged between man and wife.\n\nJeremy looked at the card and back to Betty. He handed it back to her. \"I guess we could use some cookies,\" he said. Jeremy's hand reached out and cupped Betty's chin. She whimpered as she felt his fingers gently turn her head towards his wife's. The two women kissed.\n\nJennifer's tongue slipped over the tip of Betty's and Jeremy stepped up; released Betty's chin and pressed his tongue in with theirs'. The three adults took turns tasting each other. Betty tasted morning coffee from the two tongues that were taking their time thrusting in and out of her hot mouth. Jeremy and Jennifer tasted Betty's sweetened tea and all three moaned for more.\n\n\"Ladies,\" Jeremy mumbled against the two mouths. He pressed his palms against the smalls of their backs and led them to the rec room. There in the center was a pool table, its velvet dark, rich, and smooth.\n\nBetty's sex became increasingly wet as she stared at the table. She watched Jennifer move in front of her and slip off the skirt and blouse she had been planning on wearing to service. Betty wet her lips while Jennifer wiggled free of a pair of white thongs and under wire bra, her fingers curled in her side when she heard Jeremy removing his clothes behind her.\n\nJeremy's fingers moved to Betty's shoulders and slowly eased the straps of her dress down her shoulders. Betty pulled her arms free and held her dress up to her breasts. She hissed when Jeremy's mouth captured her right ear lobe and tugged gently. His hands glided down her arms as he watched his wife step toward Betty and pull her arms away. He looked over the soft shoulders and groaned against Betty's ear when his eyes took in the rosy nipples that his wife was caressing with the pads of her fingers.\n\n\"Mmm. . .\" Betty moaned. She leaned back against Jeremy and her eyes fluttered closed. Jennifer's fingers skated down Betty's torso as she glided down to her knees, scooting the dress away. Betty had come prepared, no panties or bra covered her assets.\n\nJeremy leaned in and whispered into Betty's ear. \"Feel her breath?\" he asked the dark-haired lovely. \"Feel her tongue?\"\n\n\"Yes,\" Betty hissed.\n\nJennifer was licking slowly over Betty's pussy. She traced the triangle patch with the tip of her tongue and continued to move as Jeremy told Betty in words what she could feel the other woman doing. His cock pressed against her warm ass, while his words gave pictures to the images that her sex was experiencing.\n\n\"Oh fuck Betty. Do you feel her tongue flicking your clit? Feel her teeth? I bet you taste wonderful. Can I taste you? Will you taste yourself and give it to me?\" Jeremy mumbled before licking Betty's neck.\n\nJennifer came up to Betty's lips, her mouth full of syrup. She slid her tongue inside the warm cavern that welcomed her and shared Betty's nectar with herself, before sliding back to the slippery cunt that was throbbing with heat.\n\nBetty turned her head and pressed her lips to Jeremy's. He groaned as he sucked the taste of this new lover's honey from her mouth. He tasted a hint of his wife's tongue on Betty's tongue and it drove him to greater heights. He thrust his thick muscle deeper into Betty's mouth, cleansing her palette.\n\n\"Mmm. . . see you taste wonderful,\" Jeremy told her. His fingers moved to cup her breasts and he kneaded them gently. \"She's using her fingers now, isn't she? Finger-fucking your cunt. You can feel her nails scrapping against the sides of your pussy, can't you? The tips are pressing against your walls. You want another finger don't you. . . a third? Mmm. . . You're so wet, aren't you baby?\"\n\nBetty moaned and caught her breath. She whimpered, \"Yes.\" Her sex clenched around the three fingers that were moving inside her. Jennifer pressed warm kisses over the top edge of Betty's sex, before sliding her tongue over the strip of flesh that was swollen with need.\n\nJennifer's teeth tugged on the heated nub and pulled it gently, before gnawing it into a more aroused state.\n\n\"Ohhh fuck,\" Betty sighed. Her hands tangled in Jennifer's hair and pushed her face deeper against her cunt.\n\n\"She's pushing her tongue in and out of you now, isn't she darlin'? Tongue-fucking that hot pussy,\" Jeremy said. He licked his way down Betty's spine and settled on his knees behind her ass cheeks. He kneaded the soft globes with his hands and pressed kisses over the warm flesh. He licked up and down the right cheek then the left.\n\nBetty shuddered in lust as Jennifer licked her way back up to Betty's breasts. Her fingers curled against Jennifer's shoulders as the woman suckled from first one tit then the other. Her teeth bit down hard on the rosy nipples.\n\nJennifer teased both pearls as Jeremy ran his tongue along the crack of the woman's ass. His fingers opened up the cheeks and he licked the puckered entrance. Betty gasped in surprise, but relaxed her body as much as she could though inside she was boiling.\n\n\"Nice pussy,\" Jennifer whispered against the woman's lips, before slipping her tongue inside Betty's mouth. Again the two women tasted each other and again Betty was drinking in the juices of her sex as well as breathing in its fragrance.\n\nJeremy worked his fingers into Betty's pussy hole and gathered moisture to help ease his fingers into her tight ass. He continued rolling his tongue around the entrance and then brought his fingers up to where his tongue was playing. He then began fucking the sweet hole until Becky was moaning for more. She gripped his fingers tight and pushed back on them while Jennifer's tongue stroked and caressed the sides of Betty's tongue. \"Oh fuck. . .ohhh fuck. . .I'm coming. . .ohhh,\" Betty screamed.\n\nJeremy was there with his mouth, drinking every drop of her liquid silk as it cascaded down her cunt and splashed against her pussy lips and his eager face. Betty shuddered. Her head fell to Jennifer's shoulder and she nuzzled the woman's neck as she came over and over again. Jeremy finally eased his fingers from her ass and his mouth from her cunt. His hands wrapped around her waist and lifted her to the pool table.\n\n\"We need a lot of cookies, baby doll,\" he whispered. He climbed up after her and pressed his swollen dick to the entrance of her sex.\n\nBetty's eyes grew thick with lust and she hissed when Jennifer moved onto the table and straddled her head. The thick smell of pussy filled Betty's nostrils and she breathed in deep, savoring the perfume. \"Mmm. . .\" she muttered and grabbed Jennifer's hips and forced the woman to drop her hips down onto Betty's face. She rolled her tongue over the juice-covered clit, before biting at rosy strip of flesh.\n\nWith one hard thrust of his cock, Jeremy pounded into Betty's pussy. He gripped her tight and dragged her up and down on his hardened member. He pulled her off of him, only leaving the tip, and then he plunged back into her. In and out he fucked her cunt while his wife was treated to Betty's fingers, tongue and teeth.\n\n\"Yes Suck that pussy,\" Jeremy told Betty. He watched her pink tongue dive into the soaked entrance and then he pushed his dick in deeper. \"Fuck, damn. . . ahhh,\" Jeremy grunted and showered Betty's hole with his sperm.\n\nJennifer watched the hot steamy come escape Becky's cunt and she shook. Her come flowed thick down the sides of her pussy and slid over Becky's face. \"Ohhhh yes. . . give me your come, Jenny,\" Betty shouted. She shoved three fingers into the syrupy sex and more fluids erupted. Betty washed her face back and forth between the two velvet lips until she too was climaxing around the softening shaft.\n\nThe group groaned and shouted as they came over and over, until all that was left were throbbing pulses and shuddered gasps for breath.\n\nJeremy barely made to service. . . Jennifer and Betty never did.\n\n*****\n\nThat afternoon after church Blue Bunny Troop #666 met for their cookie count meeting. Once it was determined they would meet the goal of becoming the highest selling troop in the Nation, the girls celebrated with a private party all their own. Betty returned home. . .after all. . . there were some things she wouldn't do with her Scouts."
    ],
    "authorname": "RedHairedandFriendly",
    "tags": [
        "lesbian humor",
        "lesbian anal",
        "older man younger woman",
        "lesbian oral",
        "blowjob",
        "18-year-old",
        "incest humor",
        "priest"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/scouts-gone-wild"
}