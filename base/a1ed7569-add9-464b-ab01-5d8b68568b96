{
    "title": "Endangered Ch. 12",
    "pages": [
        "***\n\nThanks to SifuTron, GCMIVB4, BD88, and Trimtab for editing assistance, as well all the other helpful souls. I couldn't do it without you.\n\nDisclaimer: Place names are real but are mainly used as points of reference, people are made up, and everything sexual occurs between adults over 18. Some aspects of sexuality in this story are unrealistic, this is a fantasy story set in a fantasy society, in a fantasy universe. It also contains aspects of pseudo incest. Fair warning.\n\nI hope you enjoy.\n\n***\n\nPreviously on Endangered\n\nChris and Hailey go to visit the President and his advisors to explain the moon incident and help educate about the possibilities of magic. Their message is not well received, and it appears there will be problems, backstabbing, and delays on both sides of the Revelation. Nyx is on the move. The brood deals with the aftermath of the incident with Radek and settles into their new domestic situation. Susan is assaulted on her way to work and robbed. In an emotional, helpless moment, she turns to a dark family secret and enters a bargain with an ancient magical plant. Meanwhile the culprits escape, and Reyla begs Chris not to go on another rampage of vengeance lest the Synod is forced to act against him. The new house is progressing, and so are the dragoness' pregnancies. With legal avenues unavailable, Michelle is forced to use Chris in a wild night of extortion, imprisonment, and intimidation against bad actors in the ongoing fallout of Being kidnappings.\n\n***\n\nChris was bumped out of a deep slumber with a muffled groan, roused by the restless stirrings of the small, warm figure in his arms. Wonderfully drowsy moments followed as he pulled the naked sprite closer under the covers. Eyes closed, it felt amazing to just lie there, warm and content. Unfortunately, his own tired body soon began to protest. It hadn't moved lately either, and overworked muscles across his shoulders, back, and arms now demanded a proper stretching.\n\nThat's what happened after Lillian wanted an evening sparring session to 'work out some stress'. He paid the price in stiffness the next day. Damn, she was worth it though. Other parts of him that weren't currently stiff, and had nothing to do with combat training, were also tender after their vigorous, passionate 'cooldown'.\n\n\"Unggh, ouch,\" Chris grunted as Immi shuffled again, this time thrusting an obstreperous blue wing-joint right into his lips. He was decidedly awake now, turning his abused face into the comfort of a cooler expanse of pillow, smacking his smarting lips experimentally. His movement set off a chain reaction of sleepy protests from both mates. Chris smiled guiltily, tempted to do it again just to hear them grumble so cutely.\n\nFrom behind, Annabel snaked a hand across his abdomen, burrowing her nose into his shoulder blade. He sighed ruefully, grinning as he blinked his eyes open. Such were the delights and trials of having two lovely companions in bed. It both lived up to his wildest fantasies and robbed him of much-needed sleep.\n\nWith an enormous yawn, he carefully extracted his arm from underneath Immi's head to rub at his mouth. His body couldn't be ignored now, moving just felt too good. Flexing into an enormous stretch, he unleashed an inarticulate growl of lazy pleasure. Delicious tension eased from his muscles, triggering a cascade of shivers all the way down to his toes. Of course, this disruption drew even more murmured protests, even a reprisal slap on his naked tummy.\n\n\"Oof,\" he grunted at the unexpected discipline, but she was already rubbing it better.\n\n\"You're the worst middle spoon in history,\" Annabel murmured groggily, butting her head gently against the base of his neck.\n\n\"Sorry,\" Chris rumbled, focusing sleepy eyes through a gap in the dark bedroom curtains. \"Immi poked me with a wing again.\"\n\nBy the diffuse light from street lamps below their apartment, he could just make out the flurry of hazy flakes flailing past in the predawn night. The wind howled spookily, tugging at the building in a credible attempt to uproot their cozy little bedroom.\n\n\"'S no excuse.\"\n\n\"Is that so?\" he challenged, stretching once again. His throaty noises morphed into an elongated moan of satisfaction as nerves all through his body accepted signals of gratitude from re-awakening muscles. His bladder took the opportunity to make its needs felt, not urgently, but headed firmly in that direction. \"Well, I'm awake now.\"\n\n\"Chris?\" Immi frowned adorably up at him in the dim light, finally woken by all the jostling as he reached over her to drink from his water bottle on the nightstand.\n\n\"It's okay, pet,\" Chris assured as he settled back down between them. \"Go back to sleep.\"\n\n\"Your fault,\" Annabel groaned, reaching across him to vindictively pinch at a perfect blue globe of Immianthe's plush little butt.\n\n\"Aieee!\" the sprite jolted under the blankets, rolling away from the unprovoked attack into the colder portion of their large bed. \"What was that for!\"\n\n\"Geez, Annabel, you're a cranky customer this morning,\" Chris intervened, pinning the marauding arm firmly with one of his own. Consolingly, he reached toward the confused sprite with the other. \"Sorry Immi, I woke her up after you bumped me and now she's being a grouch. Come here, and I'll give you a head-rub for a bit before I have to get up?\"\n\n\"Mhhh...\" Immi scowled warily, curling into a ball against the chill. She watched for any further attacks sallying over the other side of the dragon-wall as she contemplated the offer before finally agreeing. \"Okay, I do love a good head-rub.\"\n\n\"What about mine?\" Annabel complained drowsily.\n\n\"If you get one, that's subject to good behaviour,\" Chris warned, releasing her hand on parole to collect Immi's long, loose braid of midnight-blue hair as she scuttled gratefully back into his warmth.\n\nShe scooted in close, eye to eye this time as his big hand trailed down her back, finding and releasing the silken scrunchie that kept all her beautiful tresses manageable at night. She was growing fast, but he could still cup her head in a single hand. That always made her seem fragile to him, breakable, despite a wealth of evidence to the contrary.\n\n\"Mmm ... Mmmaster,\" Immi shuddered out a quiet breath as he lazily teased out her hair on the pillows, running fingers delightfully across her scalp. Her head nestled perfectly on his warm bicep, his skillful digits followed the river of deep blue down her neck, combing across her back and between her folded wings. His other hand played up and down her side, cupping, caressing. Sometimes, as the fancy took him, he brought it all the way up and forward to ghost across the swell of her breasts. He taunted her awakening nipples maddeningly with feather-light brushes.\n\n\"Such a tease, kiss me,\" the sprite purred.\n\nSo they kissed, languid and drowsy. Under the covers they hid, sharing the warmth of lovers as outside, the heart of winter prowled ever-closer on freezing gusts. Behind them, Annabel only managed a few moments of sleepy sulking before she sank back into the lapping waves of slumber.\n\nPredictably, it didn't take much of that sort of nooky to get two such lusty creatures irrepressibly aroused. Kissing Immi these days was a far more practical, enjoyable affair with her growing dimensions. Her loving coos and nimble little hands soon had him rising to the occasion. Once his erection made itself known by bumping into her calves, the lusty nymphet employed a skillful battle strategy, teasing him into a frenzy with delicate caresses of her dainty feet and the smooth heat of her legs.\n\nChris groaned, his growing need to relieve himself only seemed to amplify his cock's sensitivity to her touch. He found her warm, perfect little slit in retaliation, reaching between her thighs to stroke and tease her dewy labia.\n\n\"Immi, stop,\" he finally hissed, tearing himself away from molesting the sweet-smelling blue skin of her neck with his lips. He didn't, however, remove his finger from the molten little crevice between her legs. The relaxing scalp rub was long forgotten. \"I don't want to make a mess in the covers.\"\n\n\"I'll ... I'll clean up,\" she promised shakily. \"No, please, let me have it. Yeah, don't stop ... ooohhhh!\" Wings shuddering, she cried out sweetly as his fingers found and danced across her stiff, fiery little nubbin. Her nails scratched across his chest as a healthy wave of pleasure rolled up her spine like a cresting swell, then crashed thunderously down to her curling azure toes. \"Master, I swear you're not leaving this bed for a week once I stuff this beautiful cock in me. Give it to me, please? Now!\"\n\n\"Immi!\" He pulled his hips backward as she tried to finish him with a quick rhythm between the softness of her calves. His excited cockhead throbbed, spurting a slippery warning up across blue, silken thighs.\n\n\"Fine! Ung ... I hate this! Hurry up and make me grow faster, it's not fair.\" The little princess pounded her fists against his arm to drive the injustice home. Reluctantly she relinquished her throbbing prize from between her legs. She smiled suddenly, a wicked idea blossoming inside her. \"Annabel, wake up! Time to get to work.\"\n\n\"What?\" Chris wondered, squeezing his cock below the helmet to release some sensitivity. \"It's still early...\"\n\nBut Immi was already pushing, rolling him over toward Annabel, clambering on top of him as he went.\n\n\"Hold her arms up!\" the sprite bossed, muffled by the covers. She pounced on the groggy brunette before Annabel knew what was coming.\n\n\"Immi!\" it was Annabel's turn to protest now as the sprite twined around her, attached like a lusty limpet.\n\nIntrigued, Chris captured his First's hands in his own before she could rally a defence. He was excited by the indignant shrieks, tousled bed-hair, and hinted, wrestling shapes under the covers.\n\n\"Let me go, Chris! Don't you dare -\" she cut off, struggling mightily as Immi did god-knows-what out of sight beneath the rapidly overheating bedding.\n\n\"I think I'll allow it,\" he chuckled evilly from behind, teasing his teeth over the pale, soft skin of her scrumptiously feminine tricep. \"Seems to me like payback is only fair.\"\n\n\"She's pawing at me, Chris! I swear to God I'll - oh,\" Annabel's hissing cut off as Immi's little toes poked up out of the covers by their chins. The indignant young woman stopped struggling, and a contemplative smile crossed her lips. \"Hmm ... mmnn ... I guess that's not so bad.\"\n\n\"What's going on under there?\" Chris smirked, freeing one of her hands to lift the blankets. He couldn't really see the details, but his imagination filled in the blanks. Warm, pungent woman hit his sensitive nose. \"She has an industrious little tongue, doesn't she?\"\n\n\"Uh-huh.\" Annabel's eyelids fluttered, and her body relaxed in his grip. \"She knows just how to use it, too.\"\n\n\"Is that a dig?\" he frowned slightly, concerned that he might have been neglecting his oral duties. That simply wouldn't do, not a dragon. \"You know I like going down -\"\n\n\"Hush,\" she moaned, turning her head to kiss him as her free hand worked its way down to the enormous, almost-erect cock that was draping itself across her backside. She squeezed gently at his spongy knob, rhythmically, just the way he liked. It responded predictably. \"You do just fine, babe, but your true talent is right here. Sometimes a girl wants a good rug munching, and sometimes she just wants a dick, ya know?\"\n\n\"All the time,\" he challenged cockily, sawing his rampant penis between the firm, creamy buns of his fiance's spectacular behind.\n\n\"Why choose?\" Annabel giggled, opening her legs for him as Immi tugged gently on her pubic hair and gently kissed her exposed, sensitive sex. She huffed under the sprite's assault as a drumbeat of achy need began thumping somewhere deep in her tummy. Her inner muscles were squeezing down in anticipation, her vagina was still unbearably empty.\n\n\"Spoken like a dragon,\" Chris nibbled teasingly at the base of her neck.\n\nAnnabel arched her back under the covers, pushing his girthy meat downward to meet her pink, juicy furrow.\n\n\"Fuck me already.\"\n\nImmi did the honours, raising Annabel's upper leg high, holding his daunting hardness in place as he nudged his way inside her. She smiled, hearing her Mistress groan whorishly through the muffling covers as she was spread wide, hips bucking backward for more. Her Master was gentle, slowly feeding more and more of his magnificent cock into her Mistress as Immi played hands and tongue strategically over their tight, pungent coupling. Her Mistress took him so easily. It really wasn't fair, and she punished Annabel with merciless attention to her lust-throbbing clit.\n\nImmi was about to finally stuff her face into the musky heat of his slowly rocking balls when a big hand reached up her leg and insinuated itself boldly between her thighs. The sprite moaned her appreciation against the sawing root of his shaft as a finger probed at her own neglected, wet little box. Her plans for testicular suffocation were momentarily put on hold as she arched and shivered in the moment of thick penetration. Then she shrieked as a second, slimmer digit wormed its way undeniably inside her up against the first. It was much more than she was accustomed to, but she was thrilled that they were both inside her. Her Mistress's thumb found her too, and it was suddenly all too much for Immi as Annabel returned the favour, swirling gently but relentlessly over Immi's wet little love-button.\n\n\"Listen to her come,\" Annabel giggled as the sprite thrashed and squeaked under the comforter. \"It's fucking adorable how sexy-tough she plays, but then she comes apart on a hair-trigger.\"\n\n\"She's not the only one on a hair-trigger right now,\" Chris protested, doing his best not to explode, his dick bathed lavishly in liquid vaginal bliss. Ensconced deep in the snug warmth of Annabel's creamy pussy, he was having a deliciously hard time holding off. They weren't moving all that much, but she was milking him on purpose, slowly clamping and releasing inner muscles with wondrous hidden strength. \"I'm going to ... Dee, slow down, stop!\"\n\n\"That's the whole point!\" came her singsong reply as her hand slid possessively onto his butt, encouraging him to churn his way to bliss in her moist, hot folds. Biting her lip at him over her shoulder, Annabel thrust backward even as she pulled him deeper, inching undeniably toward her thirsty womb.\n\n\"All the way, babe. Don't you dare stop. Yes, ahhh fuck, you're a fucking machine! Do it, do it, that's it! I want every last drop, Chris.\"\n\nHis whole body shook, cock swelling, hot and heavy as molten iron. There was no way to resist, her nubile cunt was humping him in perfect rhythm, and her words were just the sort of shit he knew he shouldn't love so much, but did anyway. In a guttural exhalation, he swelled, pulsing mightily inside her. Abdomen shuddering, his full bladder added its own brand of pleasurable torture as viscous seed began racing up his cock in wonderful spasms. With a gasp, he felt it belch forth, thick, hot, and full of potent magic.\n\n\"Yes! Huunnhhhhh ... Chris, oh, Jesus, yes!\" Annabel moaned, shivering in delight as his warmth bloomed within. Her own unstoppable orgasm flowed lazily over her, sweat dewing across her skin under the suddenly-stifling duvet. Her legs kicked, almost cramping. Bartholomew was going crazy on her tummy, but she had only one thought as he throbbed out more and more chunky, sticky ropes against her magically enhanced cervix.\n\nDragon and mate thought alike, pressing firmly together, all primal grunts and grasping hands. Their spooned position wasn't the best, but they made it happen. He took her hips harshly, she spurred her nails into his behind and shoved backward, flattening her own buttocks against his hips. The sprite was dislodged, momentarily forgotten as his spewing cock slipped effortlessly, wonderfully, deeper. Magically made possible, the dragon claimed the scalding crucible of her fertile womb.\n\nAnnabel screamed wordlessly, seeing stars as he filled and flooded her like one of his dragonesses. She could feel every throb of that fat, peach-like helmet, so deep and hot inside her. He took her, affirming their bond in the most primitive, undeniable, and extraordinarily enjoyable way.\n\nChris growled in turn, hips churning into her like a wild dog on a farmer's prize bitch. His cock seethed with every gout of successfully delivered seed, orgasmic impulses racing up and down his length.\n\nHe couldn't help himself, suddenly rolling on top of her, crushing her slim body into the bed as he grabbed her shoulders and just started lunging at her upturned bottom with everything he had. Blood rushed in his ears, drowning out Annabel's obscene demand that he fill her good little pussy right-the-fuck-up. His eyes squeezed tight as ecstasy and release throbbed through every cell, he really didn't need the encouragement. It was all he could do not to breed her then and there, to the musical, unintelligible notes of her pleasure mingling with the bass grunts of his own.\n\nReproductive instinct gradually faded with his orgasm, but his abused bladder began screaming all the louder. He was still panting, clinging desperately to Annabel as he felt Immi impatiently nudging his legs apart. The hungry little fiend tried to worm her tongue under his balls, eager to claim the sticky, magic-rich treat that was already leaking from their pulsing coupling. He smiled, after setting him up like this, how could he begrudge her ravenous ways. Besides, lovely as it might be to stay ensconced inside Annabel as they recovered together, nature really was calling now.\n\nWith a kiss and a whisper of thanks against her rosy neck, Chris carefully extracted his throbbing, cream-streaked cock and left his two ladies to their sapphic debauchery. He rushed for the bathroom, barely making it before his bladder gave way. The release found there wasn't quite as profound, but it was profoundly appreciated nonetheless.\n\nWhen he'd cleaned himself up, and the tiles surrounding the toilet, he prepared a fresh, warm washcloth and returned to bed. Annabel welcomed him back, taking the cloth appreciatively but holding off on its use. She was on her back, and under the covers, Immi was hard at work, the shape of her ass wiggling back and forth happily as she took her fill.\n\n\"I hope there's some left for Bartholomew,\" Chris joked as he tucked a sweat-damp lock behind Annabel's ear, nibbling teasingly on her pale lobe. \"Immi seemed especially frisky.\"\n\n\"I'd be more worried about Susan if I were you,\" Annabel shifted on her back, adjusting her legs slightly wider to let the sprite work. \"It's been what, a week and a half now?\"\n\nHe didn't reply, stiffening as he sensed trouble.\n\n\"You're avoiding her, Chris. I think I'd go crazy if you refused to, well ... hump me, for that long. I barely managed a few days when you put that enchantment on me.\"\n\n\"It's complicated.\"\n\n\"That's BS. I'm here for you, babe, it's me. Uncomplicate it, and together we figure out how to move on.\"\n\nHe sighed, trying to rally his thoughts on an issue he'd been dodging. He would rather not talk about it because he wasn't entirely comfortable, nor sure of his own reasoning.\n\n\"It's hard to ... Susan's different now, Annabel. Magically, emotionally I think. My dragon is uneasy around her, plus there's the fact that my enchantments are gone completely. I don't even know if we could, you know ... have sex properly. How exactly am I meant to bring that up non-awkwardly.\"\n\n\"Gone, Master?\" Immi wriggled up Annabel's front to join the conversation, her long hair now messy and adorably bedraggled. Annabel captured her chin and wiped it clean with the washcloth before she let Immi collapse on her.\n\n\"Yeah,\" Chris reached over, tracing his hand up and down the curve of the sprite's back as she settled her head contentedly in the crook of Annabell's neck. \"Whatever that thing is, it gobbles up magic like nobody's business. You've got some competition there, little one.\"",
        "\"I will face any challenge,\" Immi purred, a sleepy smile on her little lips. \"In a few hours.\"\n\n\"Talk to her, Chris,\" Annabel implored, locking eyes to drive home her request. \"She's too ashamed to say anything, but I know she's pining for you. It must be eating her up inside, the intimacy you two had is a hard thing to lose all of a sudden.\"\n\n\"I will,\" he promised. \"I will, it's just that I've been so busy.\"\n\n\"About humping specifically, Chris. You've been ploughing Claire like a farmer's best potato field, so you're not that busy. No wheedling out, it's very unbecoming for a dragon.\"\n\n\"I ... shit. I've been supportive, haven't I? I didn't want to rush into things after such a ... Well, you know what I mean, right? That plant is mega-creepy.\"\n\n\"Yes, Babe, it is. And everyone agrees you've been great in every way but one.\"\n\n\"The one that counts,\" Immi sniggered.\n\n\"Quiet you,\" Annabel had to suppress a smile at her lover's antics, this was serious brood-business. \"Chris, we're all here to help any way we can, but you can't avoid this. You need to show her she's still loved, still part of your brood, evil-wooden-tentacle-thingys and all.\"\n\n\"I know, Dee. I just ... okay, today. I'll talk to her today, that's a promise.\"\n\n\"Thank you.\" She leaned into him, kissing his lips softly. It was a gesture full of heartfelt affection. That kiss of hers had something about it that made him feel like he was a hot stack of pancakes, and she the delicious butter melting all over him. It was wholesome, it was great. \"Now, I'll give you five more minutes of cuddle time, then you'd better get going. No point in wasting your valuable time if you're already up.\"\n\n\"Only five minutes?\" he complained. \"It's so early. I suppose you'll be getting up too? More magic practice?\"\n\n\"Hmm, too cold. Besides, we need our beauty sleep.\" Annabel shook her head, smiling teasingly at him across the pillow. Her beautiful brown eyes looked so playful in the dim bedroom that Chris was tempted to try his luck and crawl on top of her again.\n\n\"Yeah,\" Immi agreed, patting her tummy under the covers. \"I'm a growing sprite, and I need my rest. Go build us a house or something.\"\n\n\"Ppbbpbpbbb,\" Chris exhaled through his lips like an exasperated equine. \"What do you think I've been doing all Autumn? You'd think a hard-working dragon would get some appreciation here and there.\"\n\n\"You can't complain if you insist on keeping it some big mystery,\" Annabel rebutted.\n\n\"Fine, fine!\" he admitted good-naturedly, giving them each one last peck before swinging his legs out of bed and sitting up. \"Be ready, though, the big reveal is only days away.\"\n\n\"I wonder,\" his First purred leadingly, rolling lazily to watch as he headed for the bathroom again.\n\n\"What's that?\" he asked.\n\n\"I was thinking that the brood will have to put our heads together and come up with a suitable celebration, a private housewarming?\"\n\nHe paused, looking wistfully back at the two bed-haired beauties grinning enticingly at him. Annabel wriggled her eyebrows jauntily, mischief, love, and sex peeking up at him under the covers from lovely brown eyes. Right then he wanted nothing more than to snuggle back in beside them and let his responsibilities fade away for a day or two. Unfortunately, it just couldn't be.\n\nIn the steamy embrace of an invigorating shower, his imagination churned. What intriguing rewards might Annabel and the girls come up with? Would they love the new house as much as he hoped? These and other thoughts delayed him, so that much of the household was up and about by the time he emerged.\n\nIt seemed everyone was rising earlier these days. Chris suspected that it was a show of solidarity, at least on behalf of Claire, Petra, and Hailey, whose schedules weren't nearly as full or regimented as his own. They certainly didn't need to be up at this early hour, but when he emerged, clothed and ready for the day, there they were, waiting to pounce.\n\nChris held his breath as a pyjama-clad, grabby dragoness snared him on the couch and tried to turn simple good-morning-kisses into much more. Petra wasn't above using small wafts of her pheromones to overcome his resistance, but for now, he had firm control on his desires. There was the unspoken taste of competition hanging in the air. Sure enough, Claire tried her own tricks to keep him on the sofa with her too.\n\nHailey, he used as a brief respite, a safe shelter before he dove headlong into the midst of hurricane Michelle-Lillian. The studious young woman was up early, a mug of fragrant chocolate clutched in both hands as she re-read the figures and equations she'd been working on the previous evening. Chris thought she looked simply adorable sitting there in a pink towelling robe, a stern frown of concentration on her brow. Dogeared papers, scribbled flow diagrams, and a sketch or two clearly declared a section of the large dining room table hers. She held reign there in no uncertain terms whenever she stayed over. Chris couldn't wait to at least get her her own room, it was the very least she deserved.\n\n\"How's it going?\" He whispered near her ear, draping himself over her chair from behind.\n\nSmiling, Hailey eagerly guided his arms around her, leaning up for a soft kiss as they hugged.\n\n\"I think I've cracked it,\" she enthused quietly. \"At least it's good enough to send away for review. Isabella said she knows some folks she can consult without giving away, you know, our magical goose.\"\n\n\"Miss Sibon,\" he protested jokingly, nuzzling aside the robe to get at the tender flesh above her irresistible collar bone. \"I'll have you know that as a dragon, I resent the unfavourable comparison to a honking barnyard bully.\"\n\nShe began giggling and squirming at the ticklishness of his whisper-soft kisses and warm puffs of air.\n\n\"Chris, eeek ... stop! Stop,\" Hailey gasped breathlessly, chest just starting to heave. Her next words were quiet, almost conspiratorial. \"I'm full, you'll make me let down.\"\n\n\"Mhhhh,\" he growled low. \"You smell delicious. Let me greet the others, and then we'll go take care of that. Can you hold on?\"\n\n\"Uh-huh. But Chris, before you go off making plans for the day, can we please go over some of the math for my equations tonight? If you're going to be manipulating the orbs like this, I think you'll have to understand the underlying calculations and parameters on a very detailed level.\"\n\n\"Sure, Mini Moo, how about after dinner? You'll have to be patient with me though, math was never my strong suit.\"\n\n\"It's okay.\" Hailey leaned her head back against his shoulder, hands reaching up to trail through his shower-damp hair. \"I managed to teach you a little particle physics, so there's hope yet. But remember, we need gold, it's going to take a lot.\"\n\n\"Already on it. Okay, I'm going in, how are the waters this morning?\" Chris glanced up to the other end of the table where Michelle sat, diligently typing away on her laptop. His eyes tracked over to Lillian, who sat at the kitchen bar, glancing daggers at Michelle with all her voluptuous glory. When she caught him looking, the vampiress quickly went back to scrolling through something on her phone, guilty as could be.\n\n\"Warmer today, I think,\" whispered Hailey as she glanced from one woman to the other. \"The icebergs are melting.\"\n\n\"Well, shit. Wish me luck.\"\n\nChris felt Lillian watching him with those dark, hungry eyes as he left Hailey and headed toward the kitchen. His path to the coffee-making supplies took him between the vampire and his human Familiar, and he rightly sensed that it would be a mistake to greet either of them and thus invite a perceived favour.\n\nIn a possibly foolhardy show of neutrality, he breezed past the both of them, collected the parts of the espresso maker from a cupboard, and began assembling the little stovetop device. He forced himself to ignore his dragon's instincts, the warning tingle on his neck as he exposed his back to a moody bloodsucker.\n\nIf she did pounce on him, it would probably be to devour him with kisses and 'love bites'. Probably. There would still be an excruciating half-second of limbo, as she lunged through the air, where he wouldn't be able to tell.\n\nLillian was deep in the midst of a vamp-sulk that had already lasted two days. In an unfortunate turn of events, she'd been kept from claiming him on the evening she'd somewhat jokingly purchased from Michelle at great expense. Though the money apparently did change hands.\n\nHe was still struggling with Lillian's wealth. Tithe wasn't in his vocabulary six months ago, let alone a few weeks.\n\nBut it was Lillian's mounting shifts with Reyla that set them down this path, in Chris' opinion anyway. For amongst the recent inflow of migrants to Reyla's territory, a pair of unruly werecat brothers were attempting to set up an ambitious little protection racket. The more vulnerable Being merchants and crafts folk had initially yielded to the sly new bullies, which only served to make them bolder. Other, more recently immigrated Beings were easy targets too, unsure of the local customs and low on social connections to fall back on. But when Lillian came calling to adjust their attitudes on Reyla's behalf, they'd foolishly tried their luck at giving her a thumping. When cornered and without options, perhaps they saw it as an opportunity to raise their standing in the underground hierarchy.\n\nLillian was forced to employ the controlled wrath of a five-hundred-year-old vampiress. Though their teamwork and lightning-fast reflexes had been an invigorating test of her abilities, she'd left two huge leopards yowling and bruised in the basement of some construction site. She was impressed by the fight they'd put up. They were to inquire with Reyla's second, Timothy, for jobs, or get the hell out of town. After all, rival protection crews didn't tolerate trespass or competition well.\n\nIf the two felines could crack heads so ambitiously to line their pockets, perhaps they could be convinced to do so more legitimately for Reyla.\n\nSo, when Lillian returned home after midnight to find Michelle capitalising on her absence, she'd flipped out a little. Okay, she'd lost it.\n\nPerhaps Chris could have used better judgement. But it turned out that Michelle could be remarkably persuasive in a sexy, hard to argue-with way. She almost came at him like a prosecutor, eroding away his defence from every angle with logic and evidence. They'd been mating furiously against a doorframe in Michelle's bedroom when they were caught red-handed.\n\nOf course, in seducing him in Lillian's continued absence at eleven pm that fateful evening, Michelle hadn't done anything that Lillian wouldn't have done in a heartbeat, were they to exchange shoes. Lillian even admitted so afterwards, promising that she wasn't truly upset. However, her aggressive vampirism over the last few days told a slightly different story.\n\nAt least Lillian's newly encouraged vampiric side had targeted him to vent the worst of her feelings and not Michelle, at least not physically. If it weren't for being a dragon, he would be sporting more than a few stiff muscle groups after their savage love making last night. That wasn't even counting the sparring which came beforehand. This new Lillian was frightfully strong. He could handle that, barely, but he worried that the incident was derailing his progress with her vampiric side.\n\nSo now he weathered the storm of Lillian's possessive brand of ire.\n\nBy rote, he reached for a new foil packet of coffee grounds, ripping the top clean off. Rich, earthy coffee hit his senses like a moist, oncoming sea breeze. He inhaled deeply, thoughts of Lillian banished by olfactory overload. With his acute, draconic sense of smell, a fresh pack of coffee was a whole-body experience to be enjoyed.\n\nIt was almost a physical thing, as though someone had poured an entire hessian sack full of fresh-roasted beans into a wood-chipper and aimed the chute at his face. He could taste hints of a hundred flavours, from delicate hidden chocolate all the way through the pallet to deep, satisfying bitterness. It was hard to resist. He brought it to his nose and drew in another breath, enjoying the sensory immersion.\n\nLillian chose her moment correctly.\n\n\"Aaeeekk!\" Chris yelped rather unmanfully as she slid her arms silently around his torso. From behind, her every curve moulded warm against his back. She hugged him with arms seemingly made of steel cable. He tried to salvage his dignity by trailing off in a deep, throaty rumble, but who was he kidding really? She'd struck, and from their time sparring, he knew he was at her mercy in this position. Telekinesis would hold her feet to the floor, and there would be no throwing her at all.\n\n\"You let your guard down, young one,\" she tsked softly, putting her chin on his shoulder, embracing him almost exactly as he'd done with Hailey moments ago. None of his brood but her could match his height like that, his beautifully dangerous warrior woman.\n\n\"I guess that means I must trust you,\" he chuckled, pressing back into her tall, lush figure. Now was no time to be nervous, and moving away would be a mistake. By the way she held her hands carefully but firmly on his tummy, he suspected that her sharp, dark claws were out. That also meant that her fangs were probably poised near his skin, her eyes unnerving pools of darkness. He was definitely dealing with the vampiress.\n\n\"Foolish,\" she chided without sting, pressing herself closer still, smooshing sweater-covered breasts against him, warm and resistant.\n\n\"Well I'm not about to apologise for that, Lillian,\" Chris turned his head, kissing her chin briefly, trying for nonchalance as he got back to preparing Susan's morning brew. \"Besides, I have you to be eternally vigilant for me. And seeing as our existence together could be neigh-eternal, I figure I'll pass off that responsibility early on in the piece, perhaps to someone with more experience? I mean, if I can't relax at home with you, what's the point in any of this?\"\n\n\"You should be ready to defend yourself at any moment. I'm training your body, but your mindset still holds you back,\" the vampire paused, thinking over his words. \"I should not care for such things, but thank you. It is a touching sentiment even if -\"\n\n\"Lillian,\" he spoke firmly, interrupting her. He turned slowly, forcefully inside her arms. She let him, pulling back only slightly, watching warily until they were nose to nose. Those pitch-black eyes stared right back at him, seemingly soulless, though he knew that couldn't be further from the truth. \"No buts. I love you, crazy vampire baggage and all. I'm glad that you and this dark-eyed ancient parasite of yours are coming to terms, even if you are a homicidal, possessive pain in my ass sometimes. We are going to spend happy centuries together if I get my way. Please don't feel insecure about what happened with Michelle the other night.\"\n\n\"Chris, I ... we are...,\" she faltered, eyes swirling to a mottled brown for a moment before the black closed in again, darker than ever. \"I ... I am possessive, untrusting, a wicked creature. I don't know if that will ever change.\"\n\n\"And that's okay,\" he assured, taking one of her hands from his side and gently pulling it to his lips. Carefully, he kissed the backs of each deadly, obsidian talon that had grown from her nail beds. \"I just want to make sure you're okay. I'll be your rough-sex, punching-bag, blood-box dragon forever and ever if that's what it takes because you're a friend.\"\n\nThey were silent for a long, stretching moment filled with questing black eyes. Finally, the beast sighed, relaxing as she laid her head on his shoulder.\n\n\"Can I feel it again? Please?\"\n\n\"Of course,\" he smiled softly.\n\nBy dragon instinct, Chris reached outward with his power, closing his eyes to visualise the traces of himself, of his magic that swirled nearby. His itch was still lurking in her, diluted into almost every cell, mingling with the parasitic things that animated them like skilled puppet masters.\n\nHe inhaled slowly, deeply, and as he let the breath go, Chris poured out all the warmth, love, desire, and acceptance he felt for all of his mates. Concentrating, he poured these emotions and more outward to Lillian, to all his growing children and their beautiful mothers, connected by his dragon's magic.\n\nChannelling the effect like that was quite draining, but worth it to feel her quiver and relax, to hear the quiet hitch of stalled breath. He managed a good few seconds, but as always, his focus began to degrade by the moment. His hold on it slipped through his loosening mental grasp like an oiled eel, single-minded focus replaced ever more rapidly by incongruous fancy, then frustration at his own failure. Chris cut the effect before he passed his weak-willed disappointment down their link. He opened his eyes.\n\n\"I want you,\" the vampiress husked deep, her accent thick and adorable. Her forehead bumped into his, their noses brushing. \"Now.\"\n\n\"Lillian,\" he protested wryly. \"We can't. You know I -\"\n\n\"I know, I know.\" She flicked her head tempestuously, filling the air with the warm, honeyed scent of her hair as she reluctantly let him out of their embrace. \"Go, before I rip these stupid clothes off and gobble you all up.\"\n\n\"Well, actually I was the one in the kitchen so....\"\n\n\"Go,\" she purred dangerously. Her eyes darkened again, and she placed warding hands against his chest.\n\nIt was time to retreat. Chris hastily filled the coffee pot with water, screwed it together and put it on the stove at medium heat. The vampiress didn't move, playing out some internal struggle between human and base instinct as he bustled to get out of her way.\n\nLogically, Lillian knew that she couldn't have him whenever the desire struck her. They both had busy schedules, vital work to do to keep both this strange, growing family and the magical world outside on-track. She needed to share him, not monopolise his time and affection. These notions, however, were foreign to the awakened entity lurking within. Facing a multitude of challenging and human impressions on a daily basis was hard for it. So was trusting, after being wrestled into subservience and magical incarceration for so long. That previously beaten-down creature hadn't had to care for social niceties before, nor decencies and morals. They were both learning, both growing, human and vampire together ... and the tiny bundle of precious life deep inside her.\n\n\"Chris,\" she spoke softly as he turned to leave. \"Thanks.\"\n\n\"Any time, gorgeous,\" he winked back.\n\nIt was unfair, she thought, far more knowing than a boy of nineteen had any right to be.\n\nWith twenty minutes or so until the coffee would be ready, and banned from the near vicinity of Lillian on pain of ravishment, Chris went to pay his dues to Michelle. Only, she was in no mood to be pestered, however lovingly. She was muttering under her breath, shaking her head as she blitzed out a politely scathing email. Apparently, the upcoming UN summit was being stalled again by some faction of the government.\n\nSo, Claire and Petra lured him back to their sofa, and he was soon happily ensconced between two loving dragonesses, watching a documentary of some sort about Madagascar on TV. Petra was radiating lust, cooing in his ear exactly how it felt when he'd launched his loving feelings out through his itch. Apparently he'd overdone that a little. His mating-venom inside the two dragonesses had picked up his signal overflow readily enough.\n\nEventually, the mature dragoness wore away his resistance, and he was pulled down into her embrace. The lemurs and chameleons on-screen were a poor distraction as she confidently pulled his hand into her pyjama pants, all the while kissing and nibbling at his throat, chin, and ear. They probably would have spilled onto the floor in a sweaty tangle of sex if he hadn't heard the coffee boiling.",
        "Lillian was already gone for the day when Chris reluctantly extracted himself to attend to it. Therefore he was free to pour the robust, hot brew into two mugs and doctor it up without fear of vampiric molestation.\n\nShe had been busy for a week of mornings, away attending strategy and logistics meetings. Word was out, there was a demon on the loose. The rumour seemed to drive the Being populace for shelter in a way the threat of the Revelation never had. Or perhaps, Chris considered, it was a case of camels and straw. The Synod's limp response hadn't helped.\n\nThe Being community was finally awakening to their tremulous situation, contracting, turning inward for support.\n\nOn every continent save the coldest, where only a lonely vampire ruled, Beings flooded back to the safety of their territorial overlords and officials. It was quite the turn-around from the disgruntled and surly complaints about the Revelation of weeks before.\n\nCoffee in hand, Chris slipped quietly into Susan's dark bedroom.\n\nShe was asleep, but by the dim light seeping around the curtains, it was clear that she'd had a restless night. The bedding was tangled around her legs, a pillow on the floor, and her hair a complete disaster. None of these signs were the most obvious, nor the most ominous. Dark tendrils branched across the sheets around her, twitching as if alert to his intrusion.\n\nThe things emerged from the sleeves of her flannel nightwear, jutting out at her wrists, throat, and waist. It was an instinctively unsettling sight, those gnarled, twisting roots emerging seamlessly from creamy skin. Chris couldn't help the shudder that rose up in him as something in his magical senses was lightly revolted in its proximity. Looking at the sueth-azoah was like staring into pieces of yawning darkness to his magic, and more unnerving by the second. They seemed to sink hooks into his eyes, enticing him down toward a bed of soft loam despite his impulse to flee.\n\nThis was the woman who had loved and cared for him for years, but he couldn't bring himself to see past the thing that now cohabited her body. Dragon instinct wouldn't allow it. In fact, his reaction was very similar to the instinctive unease of watching a spider scurry nearby, only on an intangible magical level. He wasn't alone in that feeling either. Others raised their energistic hackles around her too, Lillian, his dragonesses, even Reyla. Immi seemed pretty unphased, but sprites were old, with racial memories or tales reaching back to times when sueth-azoah weren't long-forgotten oddities.\n\nChris' heart jumped painfully in his chest to see the set of her sleeping lips, the pained frown locked on her brow. It wasn't a peaceful expression at all, she looked scared.\n\n\"Susan,\" he spoke softly, placing the steaming mugs down on the bedside table. \"Susan.\"\n\nHe stepped closer, careful to avoid one of the tendrils that had spilled onto the carpeted floor during the night. She murmured something inaudible, so he reached for her shoulder. His hand never made it, mere inches before contact, it was intercepted by a coiling, springlike shoot.\n\nThe thing wrapped cooly around his wrist in a moment, imparting a sense of delicate, yet somehow undeniable strength. Dragon instinct kicked in. For an adrenaline-infused second, he felt himself drawing breath and magic, preparing to lash out.\n\nSusan's eyes flew open as the touch registered. With a gasp, the tendril was suddenly falling away.\n\nChris was left struggling to hold still, ghosting sensations of the cool, alien touch of the sueth-azoah replaying up and down his nerves. His hand was clenching slowly open and closed, almost as if recovering from a mild case of pins and needles.\n\n\"I'm sorry, I ... oh, Chris!\" Susan burst into tears as she saw his expression of shocked revulsion, the beginnings of a snarl on his lips. She yanked back all the unintended extensions of herself, feeling them slither quickly across the bedding and back into her as if they'd never existed.\n\nThe slow awareness at the back of her mind seemed puzzled by the stab of anger she shot at it. It had only been searching out their surroundings for places to put down roots after all. It had even found a vibrant, living source of energy from which to sup. What was so repulsive about that?\n\nIt must have been trying to drink from his warmth and magic. Susan could see it written on his face, though he tried to hide it a moment later. She couldn't face him after seeing it. Couldn't face the sympathy, the pity, and sorrow she saw kindling in his eyes. They used to be so wonderfully full of genuine love, even lust. Now, this?\n\nShe rolled away from him, curling into a ball, trying to swallow down wretched sobs that wanted to rip their way up out of her. It was going to be a bad day.\n\n\"Just please, Chris, just leave me be.\"\n\nEveryone looked at her like that now, even old Eddard.\n\nHe didn't, of course. Susan found herself both relieved, and a little annoyed as she felt his weight shift the bed behind her. Soon his arm wrapped around her, pulling himself against her.\n\n\"I love you, Susan,\" Chris breathed against the back of her head. \"I don't understand why you chose to implant that thing, but I love you. We will be okay.\"\n\nThey didn't say anything else, just held each other in tentative closeness as the room filled with the scent of their forgotten coffee. Beyond the bedroom door, the sounds of the household grew louder as Annabel and Immi set about breakfast.\n\n***\n\n\"It is regretful, but after this attack, I must take measures to ensure both my sovereignty and my subject's safety,\" Reyla spoke to the camera rig, projecting her little performance thousands of miles around the world.\n\nMore than a hundred stared back, leaders all, the most influential of the magical underworld. These were Lords and Ladies their own territories, clan chiefs, or top representatives of prominent organisations. The preeminent of the magical world were gathered for their monthly congress. Now for a moment, nearing the end of an already lengthy session sharing important inter-territorial business, the stage was hers.\n\nThe dark elf held her lips pursed tight, lest they betray her with a treacherous smirk.\n\n\"Syndicate members burglarise my citizens in broad daylight under the pretence of trade negotiations? My hand is forced, I hereby bar the free export of magical crystal or such ready currency from my territory. All future interdomain trade of this kind will come directly to my desk.\"\n\nReyla could see the representative of House Lefayd agitating in his seat already as she throttled any ambition of trading through their network of intermediaries. The replacement for the disgraced Lord Eramir was a bit of a hothead, a comically unforgivable trait for any leader of their kind. Their former Lord was currently imprisoned somewhere deep under the Atlantic. She baited a pause, and to her delighted astonishment the fool actually bit.\n\n\"Speak plainly, by all means, Lady Narlakis. You seek to hoard and tax your newfound wealth of crystal. Riches purchased, I might add, by your willingness to protect an unhinged and dangerous beast.\"\n\nHidden under her skirts, Reyla frigged herself a little harder as the fool said almost exactly what she'd known he would. Taut muscles in her thighs and rump balanced on a delicious knife-edge of pleasure as she fantasised on the wickedness of having the young dragon in question devour her needy foo-foo at a time like this.\n\n\"Oh please, tell us again of your noble house's innocence,\" Reyla spat back, portraying a picture of disdain to the camera. Practised venom dripped off every syllable she spoke. She could still play her part even with the great-big, thrumming dragon-crystal pressing against her sex. \"My ears have yet to drop off, but not for lack of effort by your questionably qualified tongue. Tell us, would you please? No doubt your predecessor had only the most selfless interests at heart when he tried to have the dragon's pregnant mate murdered under my own roof, correct?\"\n\n\"He all but destroyed our ancestral keep!\" The elf hissed back, goaded and unmindful of their digital audience. \"Thousands of years of heritage gon -\"\n\n\"Order!\" John Guthrie barked from his cozy office, halfway across the globe in Scotland. \"There is serious business yet to address. Time is precious, I will not allow this meeting to devolve any further toward bickering. House Lefayd has already waived their right for Synod arbitration on the matter in question, quite wisely I might add, so let us move on. Reyla?\"\n\nReyla struggled to withhold laughter as the old dragon slowly chewed the Lefayd upstart, politically speaking, and spat him back out like a troublesome, gristly morsel.\n\nShe might be overindulging a little, almost giddy with the thrill of politicking from a newfound position of economic might. What was happening between her thighs was delicious and scandalous, adding to the thrill. Chris' gift felt hot stuffed against her nethers as she slowly rocked her slender hips around and around on top of it. The large, egg-sized diamond was just absurd, formed so impossibly from a fallen conifer. Reyla almost lost her composure as she remembered his huge hand, so passionately gripping her throat.\n\nHowever, the force that had her so intoxicated that she diddled herself in front of her peers, the real exceptional power, was his magic. It did unspeakable things to her and her elfin libido. To feel his basic essence throb close against her sex, pressing, opening her, but never entirely slipping inside...\n\nReyla shuddered visibly, snapping her awareness back to the screens before some of the noises that wanted to escape her bubbled up past her lips. She'd nearly missed Lord Guthrie's cue for her to continue. This was simply wicked.\n\n\"Ahem, yes. I did express my concerns to you all some months ago about the need for this dragon to be left in peace to start a family. The temptation has clearly proven too much for some of you to resist. Almost daily, I receive reports of the attempted coercion of my citizens by foreign parties. In short, if you want any part of what little crystal is available, you'd best come through official channels. My patience for thievery and espionage has officially expired.\"\n\n\"That is well, Lady Reyla,\" spoke a powerful leader from the coast of Eastern Africa. \"But I am yet to hear a satisfactory explanation for the purported abilities of this young dragon of yours. Surely you do not begrudge our curiosity? The rumours regarding the young man are, how do I put this, sensational? There are precedents for the management of individuals of such extraordinary power, precedents designed to prevent the establishment of tyrants, warmongers, and dangerous monopolies. Your warning has only served to pique my interest and concern, as I'm sure many of our esteemed colleagues will agree.\"\n\n\"I would respect the young dragon's wishes to be left alone if I were you. The last thing I want on my conscience is a repetition of the events my dear cousin was just snivelling about,\" Reyla cautioned sweetly. However, her tone and silken smile left ample opportunity for the implicit threat.\n\nShe couldn't fault the man's logic, he was perilously close to the truth of the matter. Chris was extraordinary, wonderfully so, if the gemstone thrumming against her slippery, midnight-dark labia had any say in the matter. His link to the Old Gods couldn't be uncovered, not before he was firmly and undeniably hers.\n\nThey would undoubtedly try to take him from her then. Disconcerting as that thought was, she smiled. Let them try, she doubted very much the dragon would put up with such political interference in his life ever again. It would be fun to watch him dismantle a few other self-important busybodies. House Lefayd had not fared well at all. That was an overindulgent fantasy though, she really was trying to steer them down a more temperate, long-term path after all.\n\n\"Peace, Lords and Ladies, peace,\" the old Scott rumbled, getting his say before anyone else decided to add their opinion and things devolved any further. \"I would point out that enacting such measures has almost always ended poorly for the Being in question, and regret amongst the disputing parties. For the sake of my species, I urge us all not to repeat the mistakes of the past, especially in light of the larger challenges we face with the Revelation.\"\n\n\"I agree with Lord Guthrie,\" Queen Magdalen finally spoke, soft and high-pitched with her saccharine tone. For such a tiny creature, the powerful fairy had inherited the most significant part of Lord Eramir's support block amongst the Synod. She effectively held the reins of this runaway chariot now, though her grip was not nearly as secure as the disgraced elf house had once enjoyed. \"There will be time to squabble over our prize subjects if we are still around next year. In the meantime, I have no doubt those who support Lady Reyla will be afforded a taste of her newfound prosperity.\"\n\n\"Yes, of course, Queen Magdalen, thank you,\" Reyla allowed herself a simpering chuckle at that, transmitted to her fellows around the globe. She would have to find an appropriate bribe to send the crafty fairy, nothing too impressive though.\n\n\"Excellent,\" continued the fairy. \"If that is the end of the territorial business, let us move quickly on to other concerns. The humans are still dithering about proposals regarding our judicial authorities, and defensive powers. They're saying it's just a matter of finding an acceptable vocabulary, but it boils down to this. They want us to police ourselves, and help them police their own, whilst retaining almost all judicial and executive authority for themselves within the existing institutions of their lands, even expanding their reach into the magical. Let me assure you we will not agree to such terms. This is probably a negotiation tactic designed to...\"\n\n\"What about the demon!\" interrupted a young leader from South America. \"Will no one else speak? My city is bursting at the seams with Beings scared in from the wild. More and more come out of the woodwork every day, Beings we have never seen before, or thought long dead. They stir trouble and demand action, and I have to say that I agree with their sentiment. What good are we if all we do is sit around and talk? I urge you all to take action. You have told us that this demon is largely responsible for the mess with the humans? I say the memory charm is still on the table! Every one of us, every human that falls prey to ... have none of you read the histories? There are billions of them now, all fuel for that twisted sorcery.\"\n\nMagdalen, queen of all fairy-kind glared silently, watching their transmitted faces. She ignored the uncomfortable looks, the sideways glances off-screen to peers or underlings. The youngster spoke out of turn, but she waited until he ran out of wind, then a little more for dramatic poise.\n\n\"It is already done,\" she finally spoke. \"Do you not see that? Truly it was too late from the beginning for such action. I thought much like you when I first heard of Radek, that is on record. Now heed this, I was wrong. Whatever the demon does now, the humans must be with us. Without them on our side, we will tear each other apart just as surely. The monster has tied our fates most cunningly. It is more pressing to secure peace first, to gird ourselves for whatever may come. Then we can devote all our resources to dealing with the loathsome creature.\"\n\n\"A comforting sentiment, when the fiend isn't lurking unchecked in your own backyard.\"\n\nReyla's thoughts, now occupied rather more entertainingly in keeping expressions of pleasure off her face, were roused to full attention by the reedy, unfamiliar voice. It was the old Peruvian blood-mage, lending support to the young dissenter. He rarely spoke at all during such meetings, this was a noteworthy development.\n\n\"Striking hastily will doom us just the same,\" Magdalen snapped back, her composure fracturing slightly out of frustration. \"Don't you see that? The Synod has voted, must we make more examples? You are all duty-bound, by your oaths, by your lives-forfeit! Dissent, among us at a time like this? We do the demon's work for it.\"\n\n\"We aren't asking you to sit idly,\" Lord Guthrie came to her aid, ever the soother of such situations. \"In fact we encourage you to marshall your forces, prepare defences for your people and infrastructure. The demon has been amongst us a long while now, with any luck a little longer won't prove our undoing. However, another incident like what happened in Argentina will almost certainly do the trick.\"\n\n\"I understand your concern, I do,\" Magdalen took up the baton, her composure restored. She looked directly at the camera, speaking to each one of them, not their faces on her own screen. \"It eluded Stemari, one of our most skilled hunters, if nothing else, proving the severity of the situation. That is why we must make the next strike count, committing every resource and magic we have. It will be impossible to do so with our hands tied, magically speaking, so the Revelation must come first. Now, let us please move on. Lord Harcot?\"\n\n\"Yes, your eminence?\" The vampire lord's smile contained perhaps a little too much honest humour at the entire incident. It earned him a furrow of her tiny, regal brow and an annoyed twitch of a shimmering dragonfly wing.\n\n\"Your report on the situation in Indonesia? Perhaps that will keep the hounds off my heels for a few moments.\"\n\nThe youngster looked a bit abashed, but the old blood-mage just nodded solemnly. He understood. This was bigger than he or his people, the Synod would not jeopardise the safety of Beings as a whole for the peace of mind of a few underpopulated territories.\n\nReyla's attention was drifting again. These meetings could get so dreadfully tedious sometimes, and there was plenty else to occupy her thoughts these days.\n\n\"Well ... yes, of course,\" Lord Harcot broke the pause. \"To get to the thick of the matter, I tasked a few useful chaps, humans mind, to get to the islands and infiltrate at the edges of the magical community. Yesterday, I got a message that at least two of them made it out. They think they know what we're dealing with.\"\n\n\"My wayward children again?\" Vlad, asked mockingly, expecting another round of blame and accusation. There had been more and more pointed his way as vampire youngsters around the globe continued to cause friction under the new restrictions.\n\n\"Not this time, my good man. It's gargoyles.\"\n\n\"Gargoyles?\" The ancient vampire started up in his velvet-lined reclining chair. \"That doesn't make any sense.\"\n\n\"I thought so too,\" Harcot nodded. \"But from what my man managed to tease out of the locals, they just waltzed out the high jungle in their thousands. Also, there's some connection to an ancient cannibalism cult, so that's just peachy.\"\n\n\"I thought we got rid of that abhorrence.\"\n\n\"I'm not aware of any gargoyles amongst us,\" Queen Magdalen tsked thoughtfully. \"They don't tend to seek positions of responsibility after the conflicts. Do any of you have someone we might consult on this development?\"\n\nReyla let the meeting drone out, the diamond had worked its way perilously, deliciously close to...\n\n\"Ahhaaa,\" the elf burbled quietly, clawing at the armrests of her ornate throne. It had finally slipped inside, warm and hard and thick. Her vagina tensed, squeezing harshly at the smooth intruder, unsure if it wanted him in or out.\n\n\"Lady Narlakis?\"\n\nShit.\n\n\"I ... ah, I will ask one of my subjects, but I am not hopeful.\"\n\n\"Most unhelpful,\" Queen Magdalen sounded annoyed at the frivolous interruption, and the elf had been wielding her political rapier so skillfully until now.\n\nIn. Reyla decided she definitely wanted it inside her. Tingles of lust ran up her back and to the tips of her breasts and across her scalp . Little beads of sweat broke out instantly on her upper lip, her neck, even her forehead. His magic was inside, and it felt like she was unravelling at the seams. What a delightfully torturous sensation, she mused, flexing her inner muscles experimentally. The rest of her tedious bureaucratic morning was looking up as the flow of the council meeting moved thankfully on around her blunder.",
        "***\n\nA bitter chill had taken residence in the dark depths of his new house. Chris' breath steamed powerfully in the harsh light of his LED work lamp. His exposed fingertips were just starting to feel puffy, but the cold had never bothered him overmuch. Even back on the alpine flat-land Jethy called home, Chris had always been made of stern stuff.\n\nBefore him, hovering in perfect array, tiny black Ether-constructs shed long, neat shadows as he worked. Despite the task, his mind absently pondered the logic of his tolerance to the winter's chill.\n\nShouldn't a reptilian, dragon or otherwise, be extra sensitive to the cold? Shouldn't he feel sluggish and want nothing more than curl up in front of a roaring fire to wait out the bitter season?\n\nPrideful, the dragon within him reared its indignant head, lecturing Chris even as he ran his magical touch briefly over every hovering sphere.\n\nApparently, dragons had the fire of magic, the very stuff of creation itself burning within them. They were not so limited, so primitive as to require hours of sunbathing merely to move about or digest a meal. Comparison with common lizards was unflattering, Chris should have known.\n\nThe young man smiled wryly, pointing out to the preening beast that it had been dozing lazily moments ago. His eye for spotting hypocrisy wasn't appreciated, and he was urged, rather sullenly, to get back to work on their mate's nest. The draconic thought patterns slowed again, lulled by thoughts of curling up beside his mates in this very room.\n\nIt was a tempting notion. For a moment, Chris was drawn into the dragon's contented fugue, imagining Petra's warm scales against his back, hearing soft breath by his ear, the quiet little hitch she sometimes made as her lungs swelled full. He could smell Claire nearby and imagined the flickering light the little firebox would shed through its grate.\n\nIt lasted only a single, sweet moment, before reality exerted itself. He was back fumbling about in the cold and dark, alone.\n\nIn its current state, the grotto wasn't nearly the welcoming sight he hoped to present to Claire and Petra in a few days. It should be warm, softly lit with the small fireplace crackling, not cold and by the harsh tones of his portable lamp. Certainly not until he had a nest of jewels and gold fit for his queens.\n\nEach of the hovering globes before him was tasked to rectify this oversight. There were exactly a thousand of them now, little balls of astounding pressure and temperature held stable by his iron grip on the very fabric of that unseen dimension.\n\nHis power over the Ether continued to astonish. Exploring, tinkering, he'd grown ever bolder and more confident since his little extraterrestrial adventure with Hailey. More than anything else, the scale of his manipulations had grown by leaps. He was finally putting his gifts to practical use. If that first use was a little dragon-minded or becoming a touch overused, who was he to naysay?\n\nEyes closed, Chris reached out, his awareness brushing against orb after tiny orb. He could sense them all abstractly if he concentrated, a neat array of glowing, writhing dots. Sometimes he envisioned them as disruptions, ripple-points in an otherwise placid sea of grey immaterial fabric. Daily his skill at sensing out into the Ether improved under his practice. In his mind's eye, his orbs were as lighthouse beacons compared even to living, breathing things. It was a subtle art, 'dabbling a toe' as Arvil liked to put it.\n\nEvery sphere, every one of his Ether manipulations big or small, was connected to him. He felt them all, lurking unobtrusively in the background of his awareness until he paid them direct attention. It was as if he were a fat spider, fingers on every strand of a nascent, interdimensional web. As crazy as that sounded, the network grew every other day as he or Hailey thought up an ever-expanding list of potentially useful experiments. His confidence grew too, his manipulations spreading in secluded places around the country and further afield.\n\nAt his mental imperative, three of the dimensional pockets before him rose above the others, traversing effortlessly through thin air to hover over a chipped mug set on the floor nearby. Then as one, all thousand of them opened momentarily, releasing the one element they were otherwise ordered to imprison in solar heat and crushing pressure. Out of each sphere, a tiny, scalding-hot blob of carbon fell into the icy Denver air. They pattered pleasingly, rolling down the growing pile of their siblings that occupied the central depression of the grotto. His dragonesses would soon sleep atop a sea of gold, with diamond-sand shores. Or perhaps he could combine the properties of both somehow.\n\nChris tracked one gem as it raced down the twinkling mound, skittering to a smouldering stop on the reddish stone just before the toe of his boot. He squatted down, poking curiously with a fingernail until the nasty scent of burning keratin dissuaded him. This batch was just over three millimetres across, nicely smoothed, and contained perhaps the tiniest hint of a yellow tone.\n\nHe would have to wait to confirm that after they cooled, but for now he dialled back the temperature inside his little diamond factories by a small mental increment, and then set them back to work.\n\nThe three singled-out ones flew back to their positions empty. The mug was a quarter full of reject diamond slivers, glasslike and sharp enough to easily cut his smaller scales. Sometimes they just grew like that, he hadn't figured out why, and he might never. It was sort of comforting, little mysteries like that popping up every now and then to confound him. Whatever the reason, those sharp gems wouldn't do at all for the sort of activity he envisioned.\n\nFor a few more moments, he was still, sensing out to the orbs as they set back to work. He received an intimate sense of something trickling in. He knew it was fresh carbon dioxide, but the spheres didn't tell him so in words. That was his own knowledge, instilled by Hailey's lessons. Every CO2 molecule that struck the dark, semi-permeable membranes of their curved surfaces sank through and was trapped. Others, nitrogen, oxygen, and a thousand traces or particulates bounced off like water on a waxed bumper. There wasn't much going in second by second, but over time he would get another batch. If he waited a while, he might feel the temperature-liberated oxygen start to escape the orbs, but he didn't have the time or patience for that.\n\nContent with his creations, Chris sat back on his ever denim-clad behind and began to gather his focus. Mental clarity was vital to his magic, and discipline was key on this scale.\n\nOne intense moment of visualisation, a flash of power, and Chris was gone from the grotto, racing through the Ether at the subatomic level. It was time to tend the larger cousins of his little diamond garden.\n\nHe hadn't come up with the bed of diamonds on his own; indeed, the notion was a spinoff of one of Hailey's projects. The real project turned out to be one of the easiest and by far the largest, boldest use of his magic that they were getting away with to date.\n\nArctic wind wrapped freezing fingers around him the instant he phased back, tugging at his clothes, putting Denver to shame. Disorientation and fatigue greeted him too, as it tended to on long jumps. Chris squatted, looking heavenward to breathe deeply of the fresh, icy air. The discomfort passed as his sense of awareness and self re-aligned. A few moments of incorporeality would do that to you. Actually, it was a small price to pay, considering a fundamental breakdown and reassembly by magic and willpower alone.\n\nOverhead, sullen grey skies issued tiny wisps of ice that the wind maliciously flung about to sting his eyes. He took another steadying breath and got cautiously to his feet. Short, robust greenery crunched with soggy snow under his boots. It was just a few cautious steps up to the edge of the majestic bluff, but an extended tumble down to the desolate, rocky shoreline and crashing waves below. He had no intention of ever making the second part of that journey, though once or twice a treacherous dragon-thought revelled in soaring the impressive updraft.\n\nNo one with common sense would swim near that jagged, deadly shore. Dark, pounding surf heaved itself endlessly at the stone. The thick, cold smell of it carried to him up the cliff. Out on the choppy swell of the Labrador Sea, a strong current lurked in an uncomfortably close drop-off.\n\nIt was a bleak little tip of land overall, and one of thousands just like it. Jagged coast stretched beyond the sea-spray horizon on either side, umpteen miles of it. All narrow islands or twisting fjord. Greenland was a strange, starkly beautiful place. It was the perfect backdrop for a dragon's magical laboratory, and fitting too, at least this particular experiment. What Hailey told him about lagging sea-level changes scared the shit out of him just thinking about. Behind him on the vast landmass, a frighteningly large ice cube was starting to rapidly adjust to the new atmospheric situation.\n\nArms spread wide, Chris reached out into the Ether, caressing the orbs that hovered near-invisibly over foaming whitecaps. This time at his command, tonnes of beyond-scalding diamonds dropped seaward, seemingly out of thin air. Twenty or more, each the size of small cars, ker-thunked a deep, resounding tone as they hit.\n\nWhite trails of steam sizzled instantly into existence, bursting skyward with fluffy spray. Despite the violence of the performance, it all was over in moments, and the extraordinary disposal went mostly unremarked.\n\nA stray seabird riding the brisk updraft off the bluffs ruffled a feather in annoyance, circling closer to the disturbance in faint hopes of discovering an easy morsel.\n\nMuch later, in the pitch black of the seafloor, a pair of squabbling crustaceans were nearly crushed as one of the wonky carbon lumps rumbled to rest on the muddy bottom. Surrounded by titanic pressure and a slowly settling marine snow, it finally lay still, oblivious to its incarceration. Locked away from the bustle of atmospheric dynamics, with any luck it would stay imprisoned for a few thousand years, perhaps much longer.\n\nDespite the savage beauty of the scene, Chris didn't intend to linger in elements even fouler than what was on offer back home. This was his fourth visit now, the novelty was wearing off. There was just one last orb to check, and it lurked far offshore in the strongest part of the Atlantic-bound current.\n\nThis one was a vast sphere, deep underwater and complicated to boot. Chris had to put a lot of thought into how to plan and phrase his conditions. Submarines and their crew aside, there were a host of sea creatures he didn't want to hurt or disrupt in the satisfaction of his lust for gold. But with Hailey reminding him, not to mention the effect new treasures had upon his dragonesses, the opportunity proved tempting.\n\nHe'd heard somewhere in the past that the world's oceans contain a vast quantity of dissolved gold. A little research turned up that the figures he'd heard were exaggerated, to say the least. Under normal rules, the trace amounts of gold in seawater were far from economic to extract. In this respect, Chris had some advantages, and so the rulebook was thrown away.\n\nSeawater passed through this orb by the hundred thousand gallons, got mugged of every unbound gold ion, and was kicked back into the current all the poorer. As Chris sensed remotely through his connection to the giant Ether orb, he thought he could finally feel something there. It was faint, but the contents of his largest Ether meddling felt slightly warm to his mental touch, almost comforting in a way that frigid seawater alone most certainly should not. It was working, he'd built an impossibly huge gold-gillnet.\n\nBuoyed by the success, Chris was now keen to get back and see what Stephen was up to with the electricity off. The house had been decidedly warmer and lighter when he'd left yesterday. The goblin trio had promised that the bathroom fixtures and carpeting were nearly done and he wanted to check out how they looked.\n\nMoments later, he was back in the grotto, steadying himself against the domed mural-wall with one outstretched hand. Back to back like that, two long jumps really took it out of him for a few hours, magically speaking. Too much of that would give him a cracking headache.\n\nLeaning near the door as his senses cleared, Chris marked down the morning's events in the spreadsheet program Hailey had shared with his phone. According to his patient, wonderfully endowed instructor, though his actions were just a drop in the bucket on a global scale, it was still good scientific form to keep track of such things.\n\n\"And to be clear, Mr. Sibon,\" the dragon murmured stupidly to himself, smiling as he tapped away at the screen. \"I was, of course, referring to your daughter's wonderful gift of intelligence, what else?\"\n\nMagical chores ticked off for the morning, Chris collected the lamp and started back through the narrow corridor into his bedroom and busier parts of his new house. He was excited to reveal his work to the brood. Yet, so much expectation had grown around this project now that anxiety swelled in his chest too.\n\nHe found Stephen, feet poking out from underneath a shelf in the utility room. Near the end of one long hallway, the room was host to much of the house's plumbing and circulation infrastructure, including a series of tanks containing several days worth of reserve water.\n\n\"This HVAC stuff really isn't my forte,\" the werebison explained as he emerged, only a little bedraggled, to greet Chris. \"Yesterday I figured I must have miswired one of the sensors when the damn thing kept turning on and off like that. Couldn't tell which one though, so I'm reconnecting the lot. That's why the power's still out.\"\n\n\"Better you than me,\" Chris acknowledged his obliviousness to the intricate worlds of circuitry, thermal comfort, and indoor air quality. He'd never imagined how much air movement was healthy for a building this size, nor did he really care to, he was just trying to control the mounting emotion curling inside him. Today might finally be the day, but he still wanted to play it cool in front of Stephen. \"Hey, did you hear anything back about the panels for the new fridge?\"\n\n\"They're speeding their way here on the back of a truck. As fast as money can buy,\" Stephen grinned at Chris' palpable enthusiasm, his attempts at appearing nonchalant given away as he rocked on the balls of his feet. Clapping a friendly hand on his shoulder, Stephen decided to set the poor lad free and force the issue. \"If they arrive today, it will be late.\"\n\n\"Damn. So ... tomorrow?\"\n\n\"Not necessarily,\" Stephen added, only a little slyly. \"It's basically finished, Chris. Apart from the last of the magical systems, and this crazy walk-in fridge, we're done. The goblins are putting the finishing touches on the bolt-hole as we speak. You could have sprung your big reveal any day this week as far as I'm concerned. The place isn't furnished, so what does a half-installed fridge-room matter?\"\n\n\"You've met Annabel, haven't you?\"\n\n\"Heck, I know she wouldn't care less. Don't put it off for that, do it this evening. If the panels arrive, I'll stay late to work on it. It'll give me an excuse to be here when they all see.\"\n\n\"Today?! Are you sure?\" Chris frowned, in a way it had been a relief to hear that he could put it off until tomorrow, cowardly as that seemed. \"I don't know if I'm ready.\"\n\nStephen smirked at the dragon's change of tune, some of the youngster's nerves coming to the surface.\n\n\"What's the matter? I'll have this cantankerous thing licked by then.\" He rapped loudly on the ventilation duct that brought a supply of fresh, pre-filtered air down from the surface. \"If I don't, we've got bigger problems anyway.\"\n\n\"I think I'm freaking out a little bit,\" Chris admitted, taking a purposeful breath as he marshalled an explanation. \"I've been looking forward to it for what feels like forever, but if it's done then I have to.... What if they don't like it, Stephen?\"\n\n\"Then you build another one!\" the werebison laughed, turning Chris and starting to lead him back down the hallway. \"But look at it all. Think about all the work and time and effort we've put in. All those loads of rock you carted away.\"\n\n\"Please don't remind me,\" Chris groaned, sticking his head behind the bookshelf in the diamond-shaped-geode-room as he was gently strong-armed by. He could hear goblins up there somewhere in the twisting, narrow stairwell they were carving. It was supposed to be a secret escape hatch, but he was going to have to crab-step the whole way up the damn thing if he ever had to get out that way.\n\nThey walked up the protective drop-cloth road, through the expansive living room, straight by the kitchen, headed for the front door. In the entrance room, the burly pair passed the goblin's latest work of exquisite sculpture. Most of the arresting effect was lost because they were headed in the wrong direction, but Chris thought that it might just be his favourite yet.\n\n\"My point is,\" Stephen continued. \"There's been a lot of thought, effort, and money put in to accomplishing this. It shows, for anyone who cares to think further than the lack of windows, or perhaps a few of the cheaper fittings. This is a wonderful first home for your strange family, Chris, I'm sure they'll all agree.\"\n\n\"Okay,\" Chris bobbed his head, still unsure why Stephan was guiding him out. \"Thanks, I needed that.\"\n\n\"You're welcome. Now go on, off to your fancy office job and get out of my hair,\" the werebison laughed. \"I don't want to see you again before you show up with the ladies.\"\n\n\"Wha ... when?\"\n\n\"How about seven? I'll pick up some champagne and bring a few glasses from home. You don't mind if my Better Half tags along?\"\n\n\"Of course not,\" Chris was left in a bit of a daze, heart thumping with trepidation and mostly, thankfully, anticipation. \"Today? Really?\"\n\n\"Yes! Now go. Have fun, drag my daughter out of a book. Find a snowman someone else made and take credit for it on the internet. Post a hundred pictures of yourself with it, or whatever it is you kids do for fun these days.\"\n\nThe bank-vault-esque outer door clicked softly locked, and so it was that Chris found himself expelled, temporarily at least, from his own home.\n\nHe puttered around upstairs in the warehouse for a while, cleaning and tidying. What the heck were they supposed to do with all that unheated space?\n\nAt the very far corner of his property, the escape hatch exit warranted his final inspection before it was covered over amongst the last mounds of magically carved rock. So disguised, and awaiting magical security mechanisms, it should go unnoticed to all but the most determined invaders.\n\nChris couldn't help looking at the surviving evidence of his toils fondly now. The last few piles of crushed rock created a triangle of neat little mountains in his gravel yard. Without them, who would remember the weeks of back-straining lugging, hours spent damp with sweat and short of breath? Those memories seemed something of the ancient past for him now, other events in his life moving as quickly as they were. Fatherhood especially was never far from his thoughts these days. Susan's dilemma occupied him too, though he distracted himself from confronting it head-on.\n\nClaire had dominated his attention recently, perhaps unfairly, but he just couldn't get over the fact of her remarkable pregnancy. Scientifically, Chris knew that he had nothing to do with making the twins. It was all down to freak chance, a rare and sometimes disastrous occurrence. But a dragon's ego was not an entirely rational thing, and now the propitiously early sundering of those precious cell clusters was being attributed to his draconic advantages. Regardless, all the time spent with his mate let him know her better, and now Chris wanted her even more because of it.",
        "Eventually, after picking a few pieces of windblown trash from his fence, he decided to stop procrastinating around the property and go do something productive. Michelle could be relied on to find something to keep him busy, and if not, there was his stalling rune project to bang his head against.\n\nChris almost went to Susan, but he wanted a bit more time to get his head straight about what happened that morning. It was on his schedule to pick her up from work that evening anyway. Instead, he braved the windy streets and headed for the Compound, mindful of icy sidewalks.\n\nPhasing would probably have been wise, but the idea of a brisk walk in the elements was now appealing. After two larger jumps like that, it was good to have a bit of a break and some honest physical activity.\n\nHe made for the cafe with the little garden that Annabel loved, it had grown on him too now. By the time he arrived, with sodden feet and a reddened nose, he was ready for a warm drink and a snack.\n\nTwo waitresses recognised, then fussed to seat him. The proprietor even came out of the kitchen to present the specials, turning the whole situation a bit cringe-worthy in Chris' opinion. He chose a creamy pumpkin soup with dipping bread, as well as a rich, real-chocolate mocha.\n\nThe notoriety and special treatment he received was awkward. Glancing around at the other patrons, it was clear he'd been noticed. Eyes lingered in his direction, conversations hushed to whispers as he became the topic of speculation. It seemed everyone in Reyla's territory had seen or at least heard of him by now, the dragon who pooped out magic faster than a unicorn with a bad case of diarrhoea.\n\nHe knew now that responding negatively to such attention would almost always go badly for him. Michelle had been trying to explain the psychology of it to him the other day. Chris just couldn't accept the unnervingly subservient looks in some of their eyes. On the other hand, when he thought too long about it, he tended to come to the conclusion that he sounded like a complete dickhead, whining about a few minor drawbacks to his otherwise blessed existence.\n\nSurreptitiously, Chris pulled a tiny, intricately-stoppered vial from his pocket, tapped a few drops of concentrated anti-pheromone potion onto the varnished oak table in front of him. He didn't want to encourage anyone. Celebrity already did strange things to people, and that aspect of his physiology could sometimes blow up into more than a minor drawback.\n\nIt just amazed him how some individuals would come right up and start chatting away as if they were lifetime friends. Others seemed to turn meek in his presence, blushing, dithering, or refusing to meet his eyes even during regular interaction, like holding a door or brushing past each other in a shop. It threw him sometimes, and his dragon was no help at all. Having never been particularly outgoing or socially confident, Chris tended to turn inward, attempting to present a calm, rebuffing exterior.\n\nThe mocha arrived first, complete with fluttered eyelashes from his victorious waitress. As he enjoyed the first creamy, frothy sips, Chris took out his phone to message the brood. Annabel and Claire had set up a group for them all through Maginet, and he nervously sent out the news that the house would be ready for inspection that very evening.\n\nMoments later, his phone began chirping the receipt of excited replies, and he relaxed to see that they were so enthusiastic. His worries were quite silly, but they felt real enough as they were washed away under a downpour of happy emoticons and digital over-exclamations. The girls fired back messages to each other until his soup arrived, by which time it was agreed that everyone's schedules could bend for the occasion and no one would be left out.\n\nAs he ate, he switched to browsing for news of forest fires. He had something special in mind for Claire. With his abilities maturing and experience stacking up, this plan wasn't out of reach if he could catch wind of the right circumstances. While it might be approaching full winter in Denver, in the southern hemisphere, one of the driest, warmest springs on record was simmering quickly into summer. Something was bound to catch ablaze, probably Australia or Argentina, if historical data was anything to go by. The western States were mostly out of danger for now, but next year, after the Revelation, Claire might find her hunger for flame put to the test if California had anything to say about it. For now, though, he just wanted to find her a modest, romantic wildfire getaway.\n\nAs if on cue that his time was up, Chris' phone chimed the moment he turned his attention toward fitting soup-spoon to mouth. The distraction proved disastrous, and it took a while to recover from the embarrassment of dribbling creamy-pumpkin down his chin. His cheeks burned as his fellow Beings caught every moment of his hasty cleanup. When Chris finally read the message and learned that his latest order from Reyla's new blacksmith was ready, he wolfed down the rest of his food, paid, tipped, and beat a hurried retreat.\n\nAt the back of the cafe, Chris was pleasantly surprised to find the rear garden just as warm and vibrant as it had been that summer. Suddenly he was regretful he hadn't thought to ask about sitting out here. Annabel would be delighted by this, and he was impressed by the glasshouse roof that had been skillfully installed to cover the walled-in area. A curious inspection told him that there was indeed concealed magic involved, but who would notice, human or otherwise, if they could enjoy their breaks in such a lush, peaceful surrounding.\n\nAbove, through the heavily slanted planes of glass and subtle spell, he could just glimpse a brightening sky through the windswept snow. The weather was turning in typical Colorado fashion, no doubt the sun would be blindingly bright before long.\n\nThe concealed entrance to Reyla's subterranean domain was disguised as an equipment shed at the end of the cafe's decorative gravel pathway. To the side of a quietly burbling fountain, Chris brushed past a veil of hanging ivy and slipped behind a false stone wall. The path narrowed, small bushes and wall-creepers thick around him now, as well as the tingling sense of magic at work.\n\nChris froze as he pushed aside a low-hanging branch of unseasonably blooming apple that leaned over the concealing fence. There was the dilapidated weatherboard shed and sitting beside it on a wrought iron bench, was the young vampiress, Amanda.\n\nNeither moved for several heartbeats, the vampiress sitting stock-still, not even breathing. The surprise of their meeting was written on her face just as plainly as his own. Chris finally broke the stalemate by relaxing. Memories of their meeting were some of the more haunting from his first days as a dragon, but he was more confident now. A new vampire like her didn't pose a real threat to him any more, not on her own at least. How he would escape this chance meeting socially intact was another matter entirely.\n\n\"Hunh, I guess they've got you security types on all the doors and windows these days,\" Chris finally commented, trying his best to keep things non-awkward and failing wonderfully. He did manage to stop himself from scratching the back of his neck as he looked at her, but only after his hand twitched half-way to complete the treacherous motion. \"I guess that makes sense.\"\n\n\"I enjoy this posting,\" Amanda took a careful breath to reply, the first maddening tickles of his scent invading her nostrils. She could handle this. The darkness inside her stirred, hungry, an involuntary shudder running over her tongue and down her throat. \"It lets me get outside in the daytime. Well, mostly. Under the glass is better than nothing.\"\n\nThick saliva quickened in Amanda's mouth, and a tightness grew in her muscles, all the way down her neck and across her arms. It wasn't so bad, and she was freshly fed on harvested human blood.\n\n\"No invisibility yet? That must be tough,\" Chris nodded understanding. He was the one building an underground house, but that didn't mean he would ever want to be cut off entirely from the daytime like younger vampires were. \"Oh well, I guess I'll be getting along. Things to see, and people to do, ya know? Shit ... I mean things to do and people to....\"\n\nAmanda couldn't help it, she actually chortled, an abortive attempt to swallow her own laughter. It was too much to see the giant of a man, all-powerful dragon of growing legend, reduced to this. He was a daily topic in her security briefings, his movements traced and his home constantly under covert guard. She'd felt the immensity of his magical presence more than once, though it was bottled away tightly at the moment. And yet, in an unguarded moment, he was still barely more than a stumbling teenager.\n\n\"Damn it,\" Chris sighed in defeat.\n\n\"I'm sorry, that was too funny,\" Amanda stood but didn't step forward. All she really wanted to do was make sure she hadn't upset him. It would be horrible to make fun of him for the presumably innocent slip-up, but the innuendo couldn't go ignored. \"Go on in, please, I didn't mean any offence, but that was too much.\"\n\n\"Yeah, okay, sorry, I guess.\" Her smile was pretty, eyes crinkled in genuine mirth. It was consoling that someone at least got a little joy from his tongue-trip.\n\n\"Don't apologise, Chris,\" she called out behind him as he squeezed himself through the narrow doorway. \"And please warn Lillian off, I fear she'd beat me to a bloody pulp if she smelled dragon on me.\"\n\nThat gave him pause, what would Lillian do in such a situation? He nodded thoughtfully, not yet trusting his ability with words, and began descending the dimly lit stairwell down into the magical heart of the city.\n\nIt was funny. Chris was okay with people he knew or had met several times. He was easily intimate with his mates. But in a new or awkward situation, he sometimes just locked up. There were no cues to read, no previous topics to draw on. Sometimes it felt as if he just started spouting nonsense, his tongue on autopilot and barely connected to his brain. Or names slipped by him seconds after introduction. Other times, especially when he was passionate about something, he felt confident, and people usually listened.\n\nDown echoing stairwells, and along spartan well-lit corridors, Chris emerged onto the main concourse. This sprawling underground burrow was Reyla's true domain, and the market section her lifeblood in coin. It was noisy and vibrant with the sounds and smells of people going about their errands.\n\nSomething small zipped out from behind a nearby shopper and latched itself to his leg. Chris looked down, amusement mixing with mild alarm, and found a boy looking up at him. Wonder glimmered in those bright, youthful eyes. For a few stunned moments, Chris' thoughts chased themselves in shortening circles.\n\n\"Thomas?\"\n\nEnthusiastic nodding confirmed it. Chris' recognition met with fervent bouncing from the boy with the barely remembered features.\n\n\"You look ... well, better. Not nearly so thin, that's good. Are you howling at the moon these days?\"\n\n\"Yes, Master Dragon, thank you,\" the boy spoke, giving Chris a slightly gap-toothed smile. \"Thank you, thank you, thank -\"\n\n\"It's alright, Thomas, seriously. Call me, Chris, remember?\" Chris looked around fretfully as shoppers and stall owners alike stopped their commerce to watch. A veritable gaggle was forming, complete with extended necks and bobbing heads. Everyone down here was a Being, or at least an initiated Familiar. They all knew who and what he was, and were eager to gawk, or it certainly seemed that way. \"I'm glad I could help so just don't worry about it. You're welcome.\"\n\n\"I promise I'll repay you one day,\" the boy continued unfazed, eyes worshipful of his towering hero. \"I'll help people just like you helped me.\"\n\nPeople were staring all right, expectant and waiting to see what the dragon would do. The boy's mother hovered nervously just inside the forming ring of onlookers. She looked like she was stuck between the choice of snatching her emboldened child away for discipline, or prostrating herself before the dragon as she'd done when first appealing for his help months ago. Chris prayed she wouldn't do either.\n\n\"Well, Thomas,\" Chris gently pried the child free of his jeans and slowly squatted so they could talk face to face. \"I'm happy you feel that way, and I look forward to hearing all about your good deeds eventually. For now, how about looking after your Mom, alright? You can practice being a little hero for her before you sink your teeth into the rest of the world.\"\n\n\"Okay,\" Thomas glanced back over his shoulder at her, smiling and utterly oblivious of any wrongdoing.\n\n\"That starts with not running away from your mother in a crowd.\" Mom came forward and placed a calming hand on her child's shoulder. \"He's a good boy really, just a little excited to see you again, Master Dragon. It's dragon this and dragon that all the time at home. Sorry.\"\n\n\"Yeah!\" Thomas bounced under her hand. \"And I can change with the rest of the pack now, it's so cool! You'll have to come with us one time.\"\n\n\"We'll see,\" Chris cajoled as he stood back up. The crowd bobbed and twittered, smiling nervously at him. It was like Thomas' worshipful eyes were infectious, and though his dragon seemed unphased, Chris just wanted to channel his inner cockroach and scurry off into the shadows.\n\n\"I meant to say ... I ... thank you, Dragon,\" Thomas' mother reached out and brushed a finger against the back of his hand. Big, glistening tears were brimming in her eyes. \"It means so much to have Thomas whole again.\"\n\n\"Please, it's fine!\" Chris was more forceful now, he really didn't want a repeat performance from her, with added tears. \"Look, I've got to get going, but I'm really glad Thomas is okay. Let me know if you need help with anything in the future.\"\n\nThe words were out of his mouth before he realised what he might be committing himself to do. It was just a reflex, a placation to keep them calm and let him escape. Wasn't it?\n\n\"You mean it? Truly?\" the woman latched on to his public declaration, awestruck by his casual offer of unspecified future aid. The spectators and shopkeepers murmured to each other in agreement, the young dragon's almost legendary generosity given even more credence in their eyes.\n\n\"I ... yes.\" Chris straightened, aborting a sigh as he realised there was nothing reasonable to do but push forward with his hasty promise. His gifts were there to be used after all, not squandered. Burning away Thomas' strange curse was nothing to be ashamed of, helping others was a constructive use of his magic. That was the goal he'd set himself. \"Yes. Now, sorry, I really have to go.\"\n\n\"Oh ... I, okay, sorry to hold you. Thank you, Dragon.\"\n\n\"Thank you!\" Thomas belted, waving madly from his mother's side.\n\n\"It's fine, you're welcome,\" Chris parroted again, backing awkwardly away down the underground lane of stalls and colourfully pageanted shops. He waved back, he couldn't leave the kid hanging. \"See you.\"\n\nChris allowed himself a sigh once his escape was secured. He was deep in magical territory now. Down here, amongst the most blatantly undisguisable, Chris felt like a figurehead on the prow of some great ship. Beings parted before him, but he left a churning wake of whispers and curiosity in the flow of magical folk he passed.\n\nThese days there seemed to be a surge of new faces and extra bustle every time he walked through the compact mercantile quarter.\n\nThe outlandish abounded here, for until recently, no uninitiated humans who ventured into the Compound left with their memories intact. Down here, no one bothered to keep up their disguises unless they felt particularly modest or were just passing through. Whole families of some denizens lived most of their lives in these warm tunnels, rarely venturing out into the human city at all.\n\nTurning left down a side-branch locally referred to as, 'Gnome Alley', Chris passed Reyla's exchange and valuation authority. His understanding was that the people working there filled a similar role to port or customs officials. On the right was the establishment that passed for a bank and post office, complete with a pair of bored security ogres. Their enormous wooden cudgels and magic-nullifying round-shields would make any but the most determined thieves think twice.\n\nThe trade of magical goods was regulated, documented, and of course, taxed. There was a whole tier system involved in classifying magical tidbits for trade or barter. It was designed to help keep track of the most dangerous or human-risky items and regulate just about every other conceivable exchange of goods according to Reyla's policies. Chris hadn't yet had time to delve deeper, his direct access to Reyla circumvented most of her protective bureaucratic padding. That was probably one benefit of this strange, near-feudal society. If you were on good terms with the head honcho, the usual red tape barriers tended to fall away.\n\nChris steamed onward, sliding by goblins, a sleekly furred panther-person, and a hovering trio of fairy folk, to list only the most notable. There was even a comically stereotypical orc, leaning arms crossed against a wall with a fearsome scowl on his blunt, underbitten features. Her features?\n\nA blacksmith was hard to disguise in any city centre these days, let alone a genuine dwarven smith. So was an honest-to-goodness tannery and leatherworks, complete with staggeringly awful smells. But down here, in the heart of the Compound, person or profession need not hide.\n\nThe distinct ping of anvil and hammer could have guided his steps if he didn't already know the way. Chris felt that he might be slightly abusing his status with the newly arrived dwarves. Sure, they'd come all the way there in the hope of obtaining cheap crystals. He didn't think they'd planned on him pouncing and filling their docket with work the instant they opened shop.\n\nThat was precisely what he'd done, too. Their skills were just too handy not to monopolise right now. His first attempt at even basic forging of metals had convinced him not to stick his nose into yet another undiscovered world dominated by specialised knowledge, skill, and years or even centuries of experience. Therefore the newly gilded smith bore the brunt of his latest foray into the realm of practical magic.\n\nEver since Reyla had pointed him toward runes, Chris had been searching for ways to compensate for his abysmal grasp of spells requiring concerted concentration. The specific focus of mind, and measured application of magic required for manifesting most spell-fields by mental intent still far outstripped his discipline. Even basic shields and magical barriers were mostly beyond him. Though for the few moments he could maintain his concentration to raise one, they were potent.\n\nReyla had hinted it might take millennia to achieve the desired effect with his usual casting method, so he was determined to find another way.\n\nHe owed it to himself, to Annabel, Immi, and the rest of the brood to come up with a way to better defend himself. He also felt he owed some security to his colleagues at the fledgeling BIA who were already venturing deeper into magically dangerous situations.\n\nHe'd never forgive himself if little Amy was forced to deal with her mother's loss, even injury, by magic. Not if he hadn't yet tried to help provide some sort of protection. That was his job, after all, to provide magical support and advice. Who would tease him at work if something happened to Kat or Lisa? He owed the attempt to his brood, and to Susan after what she'd been through.\n\nTherefore, with the help of his newfound economic might, two highly trained magical metalworkers were conscripted toward solving the first aspect of his runic problem, material. The second aspect, the occult aspect, was unfortunately still pending a success of some sort.",
        "As promised, Chris' orders were waiting when he arrived at the smithy. Wrapped plainly but neatly in brown waxed paper, most would never suspect the wealth of precious metal within.\n\nThe blacksmith and his cousin were always very careful to account for every milligram of his gold lost in each re-forging process. It wasn't even pure dragon gold, just a blend, but they still professed it a great honour to be entrusted to its work and care.\n\nEach time Chris returned with his melted failures, ready to be liquified and cast again, they brought out a ledger and measuring scales. Meticulous care was taken to weigh every magically slagged scrap of his experiments. Apparently, their two species had some bad blood a while back, and the two dwarves were desperate to prove their trustworthiness.\n\nAlong with his package of blank, golden, scrabble pieces, he received three tiny spools of dainty jewellery chain, gold, mithril, and copper. Those were the painstaking work of Esma the Busty, who fussed happily over the two freshly juiced-up crystals he exchanged in payment for her meticulous craft.\n\n\"Will ya be needing the same again, Master Dragon?\" The journeyman smith, Kyle, asked. His singed beard was being pulled absently through a massive, calloused fist as he pondered his next words carefully. \"It's just, well, you've been at it for a while now. Perhaps runecraft isn't for you, and I feel bad taking your crystal each time. I mean no disrespect, of course.\"\n\n\"You might be right,\" Chris admitted, pausing as he collected his weighty little handful and prepared to depart for a brief stint of research in Reyla's library. \"If I knew why I was failing, it might be easier to give it up and move on. I don't, though. I mean, I'm no expert on runes, but I'm playing things mostly by the book. The symbols and the metal seem to channel magic just fine. It's activating a completed phrase that mostly gives me an expensive, hot puddle.\"\n\n\"Your magic is wild and powerful,\" the dwarf nodded thoughtfully. \"Could be fight'n to stay free, rather than bound to a rune. Keep your runes simple, and I'll wager you'll find success soon enough.\"\n\n\"Free?\" Chris' eyebrow rose.\n\n\"Aye, free. Powerful magics don't always appreciate being locked away in a chunk of gold, dragon or no dragon. Especially when that dragon doesn't truly know his runes.\"\n\n\"Huh. But it's my magic,\" Chris half complained. \"I'm not doing anything groundbreaking, just ... complicated. Anyway, thanks for the advice, I'll see you later, Kyle.\"\n\n\"Well, you know best, I'm sure. I'll be starting on the next batch then.\" The smith smiled and shook his bushy head almost fondly. He hopped off the wooden crate behind his counter and rounded toward the depths of his hot, noisy workspace.\n\nKyle had always been forward amongst his clan, never hesitating to speak his mind. However, it wouldn't do to go pointing out too bluntly that the young lump was butting his great magical skull against a wall. If the dragon couldn't take a hint and wanted to keep strutting into his shop every other day, let him. It was doing wonders for his fledgeling business reputation, not to mention the gemstones. Great forge below, the beautiful, verdant gemstones. Working with such plenty of eager, new magic was a wonder. For the first time in his life, Kyle appreciated the sorrowful tones of the clans' eldest forge masters when they spoke or sang of times long past, when magic abounded.\n\nIt was nearing midday when Chris eventually popped out into the 'real world' again, leaving Reyla's little subterranean kingdom behind. An exit conveniently close to the BIA headquarters was becoming one of his regular haunts, allowing him to emerge in an old bookstore run by an elderly wizard and witch. He planned to run upstairs to his desk, drop off his paper-wrapped cargo, and see if anyone could be persuaded away for lunch.\n\nAs it happened, there was no need for any persuasion. By the second floor stairwell, Chris could hear the team coming down. By the footfalls and rebounding tones of their conversation, it might even be the whole crew. He decided to be a little dorky as he waited, mostly for Michelle's benefit, and struck an exaggerated pose leaning against a wall.\n\nMichelle stopped abruptly as she rounded the third-floor landing, catching sight of Chris below, half-splayed against the back wall in a rediculous photoshoot-pose, a stupid grin on his face. She felt the others bump to a halt behind her, already beginning to laugh at the sight of him.\n\n\"You ladies looking for company?\" Chris tried in his best sleazy-smooth-guy, flicking his head up ridiculously to stare right at the leader of the little group; his beautiful, cunning, intelligent, sexy Michelle. He saw her nostrils flare just slightly, her eyes widening in what he hoped was a combination of desire and mirth. That was his goal anyway.\n\nLisa couldn't contain her cackle at the sight of him. Beside Michelle, Kat gripped the rail as her shoulders shook. Michelle would have laughed at him too, but his eyes skewered her to the spot. Her heart thumped jauntily, and the rest of her body warmed with a flood of endorphins and anticipation.\n\nNo one was prepared for Amy. The youngster bowled through their legs from the back of the group and literally flew down the stairs.\n\n\"Chrrrriiiis?!!\" the young girl squealed in unrestrained excitement, the sound echoing up and down the entire stairwell as a discordant shriek. Launching herself off the fourth to last stair, Amy went truly airborne as Samantha let out a cry of alarm from above.\n\nChris saw the Amy-missile coming and dropped his cargo in time to make the catch. She was so lightweight that it was near-effortless, and so he spun her upside down once for good measure. She was a feather compared to Lillian vaulting off the walls at him in training.\n\n\"What are you doing here, Munchkin?\" Chris asked as her giggles subsided, genuinely confused as to why she was out of school at this particular time, or here at the BIA building.\n\n\"It's Saturday, silly,\" Amy beamed back, settling herself happily against his hip. \"We're going out for lunch!\"\n\n\"Huh, Saturday, really? So it is. Guess I lost track,\" Chris mused. \"It's been a hectic week, ya know?\"\n\n\"Amy don't do that,\" Samantha scolded her way down the steps, followed more subduedly by the others. Lisa and Kat were still snickering, Pamella and Michelle quietly bringing up the rear.\n\n\"It's okay, I don't ... mind?\" Chris started, sensing by Sam's deepening frown that it wasn't the right response.\n\n\"I'm worried about her falling down the stairs and breaking her neck, Chris,\" Amy's mom fussed back, a little more sharply than she'd intended. \"Sorry, I don't mean to bite off your head, Chris, but ... Amy, you scared me when you pulled away like that. You can't go doing that or Mom is going to go grey early!\"\n\n\"But it's Chris,\" Amy protested as she was gently put down, as if his involvement explained everything away.\n\n\"Must be assault the dragon with minors day, or something,\" Chris muttered to himself as the others closed in and Amy got a gentle, yet firm talking to.\n\n\"I know you're excited, sweetie, but don't let it get away on you. If you'd done that in the street you might get hit by a car or something, okay?\"\n\nIt looked like a little stormcloud formed over the youngsters head, her eyebrows scrunched in an adorable scowl.\n\n\"I know, Mom, I'm seven now. Okay?!\"\n\nThe sheer sass of it stunned everyone, Amy was usually so demure and well-behaved.\n\n\"Preach it little-sister,\" Kat smirked as Chris began chuckling nervously.\n\n\"Kat, enough,\" Michelle warned softly.\n\n\"We'll talk about this later, young lady,\" Samantha eyed her daughter warningly for a long moment.\n\nAmy still looked peeved but took her mother's offered hand to hold.\n\n\"And what have we got here?\" Kat moved on, ignoring the awkward parenting episode entirely as she picked up the packaged lump that had made such a thud when Chris dropped it. It resisted unexpectedly, and she tightened her grip for a second try. \"Jesus, it's heavy.\"\n\n\"Don't unwrap ... fine do whatever, I guess,\" Chris shook his head as a small flip-blade materialised in Kat's fingers. Ignored, it's point slit through the layers of paper wrapping with a single rasping flick.\n\n\"More gold? Are you fu...\" Lisa gawped to a halt, glancing guiltily at Sam and Amy before continuing. \"Are you serious, man?\"\n\n\"Mostly the same gold, actually,\" Chris watched as Kat passed the neat stack of thin gold tiles over for inspection. Lisa hadn't wrapped her head around the seemingly casual use of precious gemstones and metals in the broader magical community, let alone Chris' own lavish tendencies.\n\nAt barely more than fifteen millimetres across and four thick, his squares weren't too exorbitant on their own. Piled up in a three by six by six cuboid stack, they represented a lot of wealth, with a satisfying heft. That valuation didn't factor his unique magic either, blended as the gold was with approximately one in ten parts dragon-gold.\n\n\"You just ... just walked over here with that, didn't you? Again?\" Lisa accused with a jabbing finger to his bicep, glancing between him and his magical ingredients, half amazed, half disgusted. \"You really should have one of us as an escort, there are people out there that wouldn't think twice about stabb -\"\n\n\"Keep it PG, Lisa,\" Pamela pointed out at the back of the group, noting that Amy listened, ever intent.\n\n\"Right, I mean ... hugging you up, and booking you into a five-star dumpster. You get the point?\"\n\n\"Yes. It was a bit long-winded, but it sounds as though I'll just have to come to lunch with you, that way you can maintain the appropriate chain of custody for such potent, rare, magical artifacts. Safety first and all that, I accept,\" Chris grinned mischievously at the group, darting his attention to the chastened youngster as she peeked at him from behind Samantha's hip. It was good to see her mood was already recovering.\n\nLisa almost snorted in exasperation at his almost simpering delivery and thrust his blank rune tablets back into his hands. The slitted paper made them unruly to carry now, as well as heavy.\n\n\"We were actually just headed out for a bite. Want to come along?\" Michelle asked, receiving nods of approval from the rest of her team.\n\n\"Of course, you know me.\"\n\n\"Yay!\" Amy chirped, emerging from behind her mother, reaching to claim Chris' freed hand.\n\n\"Bottomless Baryst,\" Lisa harrumphed, though no one was fooled that she was honestly in a bad mood. \"I'm sure glad I don't have to feed him.\"\n\n\"Let's try to keep things at least marginally professional,\" Samantha sighed as if resigned to the antics of her younger colleagues and her suddenly back-talking daughter.\n\n\"Okay, let's move, people,\" Michelle agreed, starting their descent again.\n\nMichelle knew she wasn't really kidding anyone in this little group. She was 'getting boned good and regular' as Kat might have put it. They all knew it, but anyone in the building could walk in on them here in the stairwell. She was reluctant to provoke fate any further with unrestrained chitchat. Kat didn't know any better or just couldn't help herself with the teasing. So far though, she'd been loyally discrete whenever it really counted. Everyone had, and Michelle couldn't ask for more.\n\nBehind her, the rest of the team took up positions and resumed their progress down the stairwell. Amy began pleading for a shoulder ride, then squealed as in counter-offer, Chris instead threatened to hold her over the railing. He never made good on that, thank goodness, but apparently, his attempts were credible and quite exhilarating. Michelle glanced back to Lisa as they rounded the balcony below, noticing her brooding expression.\n\n\"Seriously Lisa, relax. I've tried that one with him before, and he won't have it. He doesn't want to be herded around when he's off the job. But I think we don't have to worry too much, you've seen him in action. He's progressed a lot, he learns quickly.\"\n\n\"Yeah, I guess I know what you mean,\" Lisa admitted, glancing to Pamela to see if she was supported. \"It's hard to know what to do, how to protect someone who is quite capable on their own, and in ways I don't understand ... I just, hmmm.\"\n\n\"It's like being told to guard a lion or a tank, or something,\" Kat agreed, piling down the stairs in a hurry to join the conversation as Chris, Sam and Amy brought up the rear in their own bubble. \"In that vehicle evacuation drill yesterday, he just picked Lisa and me up under each arm and sprinted for the safe zone like a runaway linebacker. It's not really in the spirit of things.\"\n\n\"That's a good way of thinking about it, actually,\" Pamela said, looking down to her amazingly healed leg, a constant reminder that she now moved in a crazy world of magic and fey possibility. In the span of a few weeks, she'd experienced first hand how magic flawlessly mended a life-changing injury. \"His needs and weaknesses are unique, we have to acknowledge and work with them.\"\n\n\"Yeah, but I still say he's a prime target for a mugging,\" Lisa groused as they piled out of the stairs onto the ground floor. \"One of his weaknesses is that he's such an airhead sometimes.\"\n\n\"It might be fun to watch someone try mugging him,\" grinned Pamela wickedly. Though the expression was somewhat sinister, it still brightened her freckled, sun-touched features immeasurably. \"He's been steaming for a fight since Susan got robbed.\"\n\n\"The guys upstairs are dying to see him in action,\" Kat enthused. \"Our body-cam footage from Brazil was the hottest shit for a while there.\"\n\n\"Really?\" Michelle wondered, a little surprised by the sentiment. She caught a dangerous glint in the younger woman's eye and spoke to preemptively snuff out the kindling spark of mischief. \"And you will in no way, shape, or form orchestrate a fake mugging, Kat. In case that actually needed to be said.\"\n\n\"Ha, it was only an idea,\" The younger woman admitted with a half-shrug of powerfully-built shoulders. \"I bet Carlos would be up for it. He says we're hogging all the fun assignments.\"\n\n\"Not many others are actually seeing much magic yet, not the big stuff anyway. None of what they do see is on our side either,\" Lisa added.\n\n\"I'm always getting asked for stories about our dragon,\" Pamela agreed as they continued downstairs, almost to the lobby now. \"He's like the office mascot, the other branches are a little jealous.\"\n\n\"They'll get a chance. With the way things are shaping up, we'll have to loan him out in the future,\" admitted Michelle. In an ideal world, she would have more time to familiarise him with the staff and workings of the new government agency. \"But that's why I hired four full-time dragon-sitters, isn't it? To lubricate his integration and deployment.\"\n\nLisa groaned, remembering her last episode of dragon-sitting.\n\n\"Yes! Bring on the midnight extortion and vamp-strippers!\" Kat laughed low, holding her fists high but keeping her voice from reaching the guards on duty at the front desk.\n\n\"It's my turn next,\" insisted the freckled markswoman, surprising the others with her enthusiasm. \"What? The last time sounded like a blast, even Lisa had a good time.\"\n\n\"I did not!\"\n\nOn the spacious lobby floor, their joking quieted. Final preparations of coats, hats, glasses, and gloves were mandatory to venture out into the cold, yet suddenly dazzling sunshine. Fresh snow crunched, and the old stuff slushed under their feet. Foot traffic was light, so they had full reign of the sidewalk. An impromptu snow fight almost broke out between Amy, Kat, and Chris, but the wiser of the group reined them in.\n\nChris outdid himself at lunch, eating his way to the bottom of a massive bowl of creamy broccoli soup. The bowl itself was made from a hollowed-out loaf of bread, so that disappeared too. Then he finished a garlic-butter-drowned rib eye steak, because when the waiter walked by with one for another table, he couldn't resist the smell.\n\n\"My body is a furnace,\" he protested guiltily under the half commending, half jealous glances of Samantha and Lisa.\n\nOnly later did he partially regret the steak. The garlic came back for a second visit, pungent burps as he sat at his desk in the mostly-deserted BIA office that afternoon.\n\nCopying precise runic symbols onto his gold tiles with an engraving tool was an exacting process, and being ambushed by garlic burps wasn't ideal. But he judged it was worthwhile, that steak had been done just right.\n\nWith some big morning meeting out of the way, a lot of the regulars at the BIA had gone home to enjoy their well deserved time off. That suited Chris, and it meant he could work on his project with less distraction. Kat and Michelle were around somewhere, busy keeping an eye on a developing situation involving a suspected arms deal or some such.\n\nChris etched away tile by tile, his desk protected by a sheet of rough ply-board and illuminated by a construction lamp he'd borrowed from Stephen. Two of Reyla's borrowed books sat propped open against his cubicle wall, depicting the exact characters and proportions he was attempting to inscribe to the miniature golden tablets.\n\nHis tool caught in the soft gold as he tried to complete the curved loop of an elf-derived wind-rune. A muttered string of garlicky curses followed as he attempted to cover his mistake with extra scratches. Eventually, Chris discarded the tile as a failure and began afresh on a new one.\n\nRunes weren't turning out to be the easy solution he'd hoped they might be. They may as well have been a language of their own, complete with semi-pictographic letters, grammar nuances, and experts who loved to put their own slant on everything.\n\nThe air rune he'd just botched, for instance, was supposed to be a derivation of the ancient elven symbol for howling wind. However, his two reference books disagreed on how to draw it, what use it should be best put to, and what material and magics it would best work with.\n\nAll Chris wanted to accomplish today was a magical function that could recognise an approaching force or pressure. For example, the blast force someone might be exposed to in close proximity to an explosion.\n\nThat shouldn't have been so hard, but back in yonder year when great-granddaddy elf and pappy dwarf were arguing about such things and writing their books, they had only the dimmest understanding of anything resembling modern physics or chemistry. They certainly hadn't had any experience with plastic explosives.\n\nThey might have known about other such substances Chris assumed, black powder or perhaps nitroglycerine. Magically triggered or powered bombs weren't exactly new on the scene from his research. However, the author's understanding of the forces and physics involved weren't anything close to modern standards.\n\nFor example, instead of a symbol for blocking kinetic energy, the books contained hundreds of separate runes designed to protect against thrown rocks, arrows, darts, even sword strokes. There were just as many if not more entries documenting how best to launch said missiles at one's enemies, too.\n\nWorse, when runes were combined into phrases, every rule seemed to fly out the window as far as Chris could tell. Rune combinations which accomplished mostly the same thing might look nothing alike in different applications. The rune combination on a ring purported to slow incoming arrows looked nothing like the pictographic phrase on a bracelet that let the wearer fall gently from great heights. It was essentially the same thing, the exact same forces involved, and yet the suggested runes were utterly different.\n\nChris couldn't understand why.\n\nIt was as if Hailey's efforts to enlighten him to the world of science were now a barrier to his comprehension of this semi-artistic branch of spellcraft. He couldn't see a system, and so he rebelled against the seeming lack of regularity, the illogic of the magical."
    ],
    "authorname": "ltpc",
    "tags": [
        "fantasy",
        "non-human",
        "dragon",
        "magic",
        "romance",
        "harem",
        "vampire",
        "elf"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/endangered-ch-12"
}