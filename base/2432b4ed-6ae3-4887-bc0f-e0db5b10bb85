{
    "title": "Orchid Ch. 03",
    "pages": [
        "I back away slowly, jaw working without sound. Calvin gets up and takes a step toward the hallway, but he freezes when I start shouting.\n\n\"You stay the fuck away from me,\" I cry, pointing at him and wishing my finger could hurt him as much as he hurt me. He holds up his hands as I skirt past him, and I'm out the door in under a second.\n\n\"Kit!\" Susan cries, as she runs out after me. \"Kit, Stop!\"\n\n\"No,\" I yell back, stopping partway down the lengthy driveway. \"No! I don't know what... that is, but\u2014\"\n\n\"Please!\"\n\nI step on a rock and scream, hopping up and down on one foot. Susan hurries after me, and stops when I pick up the small stone and fling it at her. It bounces harmlessly off the siding of the house ten feet beside her, and she hesitates to follow when I start hobbling down the driveway again.\n\n\"All your stuff is inside.\"\n\n\"I'll get new ones!\"\n\n\"Kit, please.\"\n\n\"Stop,\" I shriek, as the tears really start to come. \"Just leave me alone!\"\n\n\"Where are you going to go? It's fifteen miles back to the city, and it's nearly midnight.\"\n\n\"I don't care.\"\n\n\"Come back inside. We'll call you a cab. If you still want to leave when it gets here you can go, and we'll never bother you again.\"\n\nI drop to my knees, sobbing at the idea of really wanting to never see either one of them again. There's more reasons too, I know, but it's just... it's too much too quickly. \"I thought I had found it. Again.\" Someplace I could belong.\n\n\"Kit, please.\"\n\nI jump, shocked that Susan had caught up to me, and fall onto my hip. Awkwardly swiping at her, and shouting something that was probably supposed to be \"Stay away,\" or maybe \"Get away.\" Susan recoils, her expression guarded. Maybe it was \"Get the fuck away.\" I don't really know. It feels like one of those moments where the crowd is shouting 'Don't go back in the house!' at the screen. There's no middle of the road for me; every fiber of my being is screaming to run, except for all of the fibers that are dying to go back inside and see him again. The end result is that I just sit there, crying in the driveway at 11:48 pm.\n\nSusan hovers next to me, just out of range of my erratic swiping, with her hands on her hips.\n\n\"What was that?\" I say, after more than a few minutes of frantic, spasmic hyperventilation.\n\n\"I don't know what you mean,\" Susan says, moving around so that she's not behind me.\n\n\"Is he your... are you...\"\n\n\"Calvin is my husband. Yes.\"\n\n\"You knew that was torturing me,\" I cry. \"That he was torturing me.\"\n\n\"You mean the memory was, yes? Not that he was actively antagonizing you.\"\n\nI nod glumly.\n\n\"I'm sorry,\" she said, frowning. \"I wasn't trying to correct you. It was an important distinction and I had to be clear.\" She squats down in front of me, keeping her knees tightly together and wrapping the black silk robe tightly around herself. I hadn't felt the cold either, until right now. \"Kit?\"\n\nI look up, eyes stinging.\n\n\"You deserve some answers. Please come back inside. Do what you want with what we tell you, but please. Hear us out.\" She produces her phone from the pocket of her robe and taps at the screen for a moment. 9-1-1 is entered in, undialed, when she turns the phone to me. \"All you have to do is push call, and someone will come running.\"\n\nI snatch the phone out of her hand and seriously consider pushing it right then. Her expression is tense as she watches me.\n\n\"Is that enough of a safeguard? Will you please come inside now?\"\n\nMy thumb quivers in the air, on the edge of making trouble for them just for the sake of making trouble for them. Making their lives a living hell for a little while. See how they like it.\n\nThat's not me. I nod tightly at her, and Susan sighs in relief. She extends her hand as she stands, but I get up awkwardly under my own power to spite her.\n\n\"I swear to God I'll push this,\" I growl, voice cracking hard in that way none of us can control after crying. Susan nods and turns back toward the house. She keeps her head angled slightly to the side, alternately looking forward toward the door and back at me to make sure I'm still following. It occurs to me that she's probably not used to, or comfortable with, leading people around, and suddenly I'm walking beside her before I know what's happening.\n\n\"Oh thank God,\" Calvin whispers from the kitchen, as soon as we come down the hall. He'd gone back around to where he'd been when I first saw him, seated on one of the stools next to the island.\n\nI glare and point next to him. \"Sit over there.\" Susan was already heading that way, but she nods in compliance and my fear of being physically assaulted quiets down; my path to the door is clear and I've got a loaded phone in my hand. That fear is ever-present, given my situation, but it is as quiet as it ever gets as I square off with them. My left hand keeps the blue silk robe snug around me, though it gives me, at best, a false sense of protection. The thinnest fabric would not protect me, and neither is it hiding anything with me keeping it so tight. \"Talk.\"\n\n\"We're sorry,\" Susan says first, but she shuts up at a furious glance.\n\n\"Not you,\" I snarl. \"Him.\"\n\nCalvin nods and licks his lips. \"I'm sorry.\"\n\n\"So help me God, I'll push this button.\"\n\n\"I am!\"\n\n\"Sorry is as sorry does.\" I'm starting to shake again, and they both nod quickly. \"You hurt me.\"\n\n\"I know.\"\n\n\"You... you toyed with me\u2014\"\n\n\"No,\" he says, face falling.\n\n\"\u2014and you used me.\" Every word delivered with anger, frustration, and pain. \"You used me.\"\n\n\"Kit please.\"\n\n\"We had to be sure,\" Susan says. She flinches when I turn back to her, but doesn't look away.\n\n\"Sure. About. What.\"\n\nThey look at each other for a moment, each fidgeting nervously. Calvin licks his lips, and Susan adjusts her robe.\n\n\"Sure. About. What.\"\n\n\"You,\" Calvin says. \"We had to be sure about you.\"\n\n\"Was this some kind of test?!\"\n\nCalvin rolls his head, almost shaking it and almost nodding. \"That's not... I mean...\"\n\n\"So yes.\"\n\n\"Yes,\" he says, looking down. My hand is practically vibrating from the conflicting desire to push the button and summon a fleet of police. That's not me. Fuck them. That's not me. \"It wasn't fair to you, but yes.\"\n\n\"Why.\"\n\nThey look at each other again. \"It's complicated.\"\n\n\"I have all night.\"\n\nSusan nods and shifts how she's sitting. At first, it reads to me like she's metaphorically distancing herself from him, but after a moment it feels like all she's doing is physically stepping back. Maybe just so she can more easily watch both of us.\n\n\"I'm not really sure where to start,\" Calvin says. \"I practiced this quite a few times\u2014\"\n\n\"Figure it out,\" I snap, \"because this is where we are.\"\n\nHe nods again. \"Susan and I have been married for...\" He looks at her for a moment. \"...a little more than twenty years. We just had our...\" He frowns and shakes his head, and Susan gives his hand a light squeeze. \"We've been married a long time. We love each other very much, but there have been some... indiscretions... in the past.\"\n\n\"So I got hurt because you can't keep your dick in your pants?\"\n\n\"It wasn't just him,\" Susan said softly. \"In fact, it was more me than him.\"\n\nCalvin smiled tightly. \"The thing is, we've always had kind of a... specific... dynamic. Between us. Between Susan and I. It's wonderful, and we love it, but it's... limiting. Over the years, we've both felt urges to branch out a little more.\"\n\n\"So maybe try not just having missionary sex,\" I snap.\n\n\"It's not\u2014\" Susan starts, but Calvin squeezes his wife's hand while leaning in, and she visibly restrains herself.\n\n\"We deserved that,\" he says. \"She has every right to be angry.\" Susan nods. \"The point is, we've tried what you're saying. To... to mix it up a little, and that didn't really work for us. It undermined the... dynamic.\"\n\n\"Why do you keep using that word?\"\n\n\"Susan is my...\" He turns to look at her, and both of them glow. Swelling ever so slightly. \"Susan is my mistress. She is a... um... a Domme. In the bedroom and... elsewhere... she is in complete control. I am her toy.\" Susan beams proudly, but there's an undercurrent of something else there too. \"Those are very fulfilling roles for us, but it's also a very rigid system. It's a lot to commit to. I can't just grab her by the hair if I get excited, and...\"\n\nThey look at each other for a brief moment. Calvin has to swallow before he goes on. \"That's sort of... that's the major dynamic for us, between us, but it's not the entirety of our... of our... um...\"\n\n\"Of our sexual identity,\" Susan adds in.\n\n\"Right. Before, we would... cheat as a way to get around that dynamic, and while that worked for a time it always came with a lot of pain.\" Susan squeezes his hand again, and Calvin nods. Forgiven but not forgotten, it seems, on both sides. \"So about five years ago, Susan and I started exploring the idea of having an open marriage. Keeping what we have, together, intact, but also allowing both of us to satisfy those other urges. Supporting each other in finding something else.\"\n\n\"Okay,\" I say.\n\n\"And that's worked... better. It's not ideal, though, because those other relationships tend to be shorter and less... satisfying?\"\n\n\"More superficial,\" Susan says.\n\n\"Right. Largely just sexual, and I think both of us have felt like, as time goes on, we're not getting as much out of the... um... the things we do outside of the primary relationship.\"\n\n\"And that's you two?\" I ask.\n\nShe nods. \"That seems to be the fatal flaw with secondary relationships,\" Susan says. \"Even the best we've found quickly limit how much they'll let themselves get attached to us, and that undercuts the... the emotional aspect. Sex has a very strong emotional component for both of us.\"\n\nBoth of them nod as Calvin continues. \"This is where it gets tricky, though. We have considered... or... \" He stops to collect his thoughts for a moment, and Susan releases his hand to run her nails lightly up and down his back. \"We have been looking, discreetly, for someone to... to join the... the primary relationship. To be...\" He moves his hands, extending his fingers and then retracting them inward. \"To be part of 'Us'.\"\n\n\"It needed to be someone we both had chemistry with,\" Susan says, stepping in. \"Someone who could keep up with us, and with whom we each had a different dynamic. Something that didn't compete with what we had with each other, and someone whom we both enjoyed at a personal level.\"\n\n\"So why not tell me that,\" I cry, tears backing up quickly. \"Why did you... why did you...\"\n\n\"We were worried\u2014\"\n\n\"I was worried,\" Susan says, correcting, and Calvin nods.\n\n\"Susan was worried that if I introduced you to her, and you met her through me, you might approach it with the idea of 'tolerating her to be with me'. That somehow being with her was the price you had to pay to also be with me.\"\n\n\"We had to be sure that anyone we brought here,\" Susan says, \"to our home, would be someone we could both have something unique with. Someone who wanted to be with us, individually and as a whole, and we didn't know how else to do that.\"\n\n\"We're sorry. We knew that we were putting you in a terrible position, but we had to be sure because it isn't just about us.\" Calvin looks over at her, and when she nods, he reaches into his pocket and pulls out a small square card. My eyebrows rise up as he slides it across the table toward me and the card turns into something else. A picture. Calvin, Susan, and...\n\nA little girl. I put down the phone to pick it up, and it's not until that moment that I realize I have no idea what I would have said to the police if they'd showed up. None. Even still, they both look relieved.\n\n\"This is recent,\" I say, blinking away the tears so I can actually see the damn thing. \"How recent?\"\n\n\"That was two months ago,\" Calvin says. \"At her third birthday.\"\n\nEvery time I blink, she looks just like one of them. Just like Calvin, and then just like Susan. Unruly yellow curls. A bright smile. The tiniest little Maryjanes. She's so little.\n\nSusan clears her throat. \"I know that, somewhere in your head, you're trying to do math right now.\"\n\nI nod, staring at the picture. She's so happy.\n\n\"I didn't think I could get pregnant. We'd tried for years. We even tried IVF a few times, but it never took. And then, at age 47...\"\n\n\"We worry,\" Calvin says, stepping in as Susan's voice starts getting shaky, \"about a lot. Everything. About how old we are. About keeping up with her. About relating to her, and being there for her.\"\n\n\"Neither of us were in a good place to put our careers on hold when she came along, so we thought 'fine, we'll hire a nanny. We can afford it.' \"\n\n\"What's her name?\" I ask, voice nearly gone.\n\n\"Bridget,\" Susan says. \"After my grandmother.\"\n\n\"She's beautiful.\"\n\nSusan leans forward a little, resting her elbow on the table. \"We've struggled to find a nanny we like, and the older she gets, the more we're uncomfortable with the idea that the person she spends the most time with is there for a paycheck. We hate throwing money at a problem as a solution, and that's really what we've been doing. We want her to be surrounded by love. Surrounded by people who have the right motivations.\"\n\n\"We're hitting you with a lot right now,\" Calvin says. \"I'm sorry about that.\"\n\n\"It's okay,\" I say, still staring at the picture. Bridget has such an infectious smile. I can feel it tugging at my cheeks.\n\n\"We've never found anyone else that came close for us. We had the conversation, to be looking for someone, years ago, and neither of us ever found anyone even remotely close. Until you.\"\n\nI nod, smiling and still crying a little.\n\n\"We want you,\" Susan adds. \"To be clear. I know we've been talking about this, and beating around the bush about it, so I want to say it clear. We want you.\"\n\n\"We're sorry.\" Calvin says. \"For everything that's happened up to this moment, we're sorry. Just because we had good reasons and good intentions doesn't mean we weren't conflicted about it.\"\n\n\"Why me?\" I say, finally looking up from the picture.\n\n\"Calvin told me a lot about your dates together,\" Susan says. \"You should have heard him. He was...\" She smiles fondly at him. \"He has feelings for you. And as for me, I'm not too proud to admit that at first I was mostly intrigued because of... how you are, rather than who you are, but the more time we spend together...\"\n\n\"When she and I had talked before,\" Calvin says, \"about bringing someone in, I think we both were nervous to get into the gender conversation. Would I be comfortable with another man? Would Susan feel competitive with another woman? I think we avoided it because we didn't have any answers.\" Susan nods. \"I think ultimately, we needed someone who could... um...\"\n\n\"What he means is someone who could switch like we both want to.\"\n\n\"Yes,\" Calvin says. \"Thank you.\"\n\n\"I have a very specific attitude with Calvin, and that's something he and I both relish and find release in, but the way I am with you, the way I can...\" She drifts off with a smile. \"That's something I need in my life, and I know I speak for Calvin as well.\"\n\n\"Is this because I'm...\" I hate saying it. \"Because I'm transgendered?\"\n\nSusan and Calvin look at each other, quiet for a long pause.\n\n\"If we're being completely honest,\" Susan says, \"it's probably part of it. I don't know how big a part, but\u2014\"\n\n\"It wasn't for me,\" Calvin says. \"It wasn't a part of wanting to meet you, and wanting to get to know you. And now that I've seen a little bit of you, I just want more and that has everything to do with the person you are. The... sum total of the parts.\"\n\n\"Yes,\" Susan says, nodding. \"Well put.\"\n\nI look back down at the picture and nod. And push the phone across the island. Calvin reaches across to take it, but I pull my hand back before mine has a chance to brush against his. My hesitation does not go unnoticed.\n\n\"We're not asking you to do anything you don't want to do,\" Susan says softly, \"and I know we're dropping a lot on your lap tonight.\"\n\n\"Understatement of the year.\"\n\nSusan nods. Calvin looks chastised. \"We don't expect an answer tonight, but please think about it.\"\n\n\"Please,\" Calvin adds.\n\n\"Would you like one of us to give you a ride home, or\u2014\"\n\n\"Call me a cab,\" I say, and they both nod. Looking down. \"I'd like to get dressed now. Please don't follow me upstairs.\"\n\n\"We won't,\" they both say, and they don't.\n\n***\n\nI can't sleep. I can't stop my brain from racing. I can't stop feeling so many things at once. Too many things. I toss and turn, but no matter how long I try to keep my eyes closed and breathe, there's no end to it. There's no bottom, and I just keep falling. At 4 am, I finally decide to do what I usually do when I can't control myself; paint.\n\nI send Lara a text, because I know she'd want me to, just to let her know that I'm in a bad place. Not in crisis, but really conflicted. She'll probably follow up in a few hours. It's not until after I push send that I realize I have no idea how comfortable I'd be sharing the events of the night with her. Hopefully, I'll have that sorted out before she responds. I step out of my bedroom, into my combination kitchen/living room/art corner, and set aside the half-finished self-portrait canvas in favor of a blank one.\n\nBlack paint. No direction to the strokes. Up, and in long curves. Circling back around. I can feel it taking shape even though I have no idea what it is. I work slowly, layering black on top of black to darken the outline. Clean, with no flourishes while it's still taking shape. Whatever it is.\n\nThere's a limit to how far I can take it without knowing what it is, and my eyes are blessedly heavy when I reach that point. The accumulated exhaustion catches up with me quickly, and I barely make it back to the bed before succumbing to a whirlwind of dreams.\n\n***\n\n&lt;div align=\"right\"&gt;Sat. 12:37 pm&lt;br&gt;<br >I want to meet her&lt;br&gt;&lt;/div&gt;\n\nSat. 12:51 pm&lt;br&gt;<br >Bridget? Are you sure?&lt;br&gt;\n\n&lt;div align=\"right\"&gt;Sat. 12:54 pm&lt;br&gt;<br >Tomorrow&lt;br&gt;&lt;/div&gt;\n\nSat. 1:01 pm&lt;br&gt;<br >I'm surprised you're talking to me and not Calvin.&lt;br&gt;\n\n&lt;div align=\"right\"&gt;Sat. 1:05 pm&lt;br&gt;<br >Are you really that surprised?&lt;br&gt;&lt;/div&gt;\n\nSat. 1:08 pm&lt;br&gt;<br >I guess not.&lt;br&gt;\n\n&lt;br&gt;\n\nSat. 1:10 pm&lt;br&gt;<br >Tomorrow is fine. There's a park near her preschool&lt;br&gt;<br >in Edgemont. Are you familiar with that area?&lt;br&gt;\n\n&lt;div align=\"right\"&gt;Sat. 1:14 pm&lt;br&gt;<br >Just text me the address&lt;br&gt;&lt;/div&gt;\n\nSat. 1:18 pm&lt;br&gt;<br >I will. As soon as I get back to the house.&lt;br&gt;\n\n&lt;br&gt;\n\nSat. 1:20 pm&lt;br&gt;<br >How about 11?&lt;br&gt;\n\n&lt;div align=\"right\"&gt;Sat. 1:24 pm&lt;br&gt;<br >Fine&lt;br&gt;&lt;/div&gt;\n\n***\n\nThe train gets me a mile from the park, and I'm glad for the walk. It would have been more convenient to take a cab right to the parking lot but I knew I was going to need the walk beforehand, to compose myself, and afterwards, to decompress. I hug my arms around my chest, more to guard myself from feeling vulnerable than from any chill. My light gray jacket and scarf are more than adequate for the early September cool.\n\nI spot Susan first, sitting on one of the benches reading a book. Two girls of about the right age are playing in front of her, along with another boy. As soon as she sees me, Susan sets her book down beside her and strides toward me with her arms folded.",
        "\"I don't have a problem saying that I'm nervous about this,\" Susan says, as soon as we're close enough for civil volume. She keeps her expression neutral, if a bit tight around the eyes. \"We've never introduced her to anyone like this before.\"\n\n\"Is he here?\"\n\n\"No,\" she says, shaking her head. \"It's just the three of us.\"\n\nI nod and breathe slowly. \"Who are the other two?\"\n\n\"They live across the street,\" Susan says, as she turns to stand beside me. \"We come here a lot on the weekends, and they always come out to play with her.\" We watch together for a moment as Bridget tromps around the corner of a wooden castle, marching with the kind of unrestrained smile that only kids can really pull off. The other two follow quickly in her wake, skipping and giggling toward the slide that will whisk them safely away from the alligators that are chasing them.\n\n\"She's going to run the world someday,\" Susan whispers. I nod, watching the hierarchy play out. It's hard to ignore the tightness already creeping into my throat. This is part of the reason they want me. To help this small human grow up. I can feel myself putting distance between us, thinking of her as a small human and not the adorable little bundle of cuteness she is, to keep from getting my hopes too high too quickly because that's a problem for me.\n\nIt's impossible to keep up. She has so much light within her. I can't look at her and not think 'This is it. This is my chance.'\n\n\"Would you like to just sit for a minute?\"\n\nI nod, and the two of us walk back over to the bench. Susan picks up her book and tucks it under her arm. Each of us sitting with one leg crossed over the other. She periodically looks over at me, just for a moment, before looking back to the action and high drama. The alligators catch the other girl, whose name I think is Lexi, and her brother launches into pitched battle to save her while Bridget delivers a rousing speech that turns into song halfway through. The more she sings, the more Susan's daughter twirls in place, drifting away from the shared imaginary peril.\n\nSoon all three of them are singing. None of the words are the same, but the melodies almost line up.\n\n\"Is that Let It Go?\"\n\n\"Yes,\" Susan says, smiling. \"They're all on a big Frozen kick.\"\n\n\"Did Calvin tell you that I'm... that I'm probably sterile?\"\n\nSusan nods. \"I wouldn't go so far as to say that was a notch in the 'pro' column for you, but it definitely felt like we were in a position to be offering you something... desirable.\" She clears her throat and looks down at her knee. \"May I clarify something? From before?\"\n\nI nod.\n\n\"We aren't looking for a live-in babysitter. We don't want you to step in and be a surrogate mother so that we can focus on our jobs. We don't want you to put your life on hold for a few years to raise our kid.\"\n\n\"What do you want?\"\n\n\"Someone who will love her. Someone who will help us share the load. No more and no less.\"\n\n\"I would want to stay in school.\"\n\n\"If that's what you wanted, then yes. We would make every effort to make our schedules work so that we could all have time with her, and have time together, and have time with each other. As fairly and evenly as we can manage.\"\n\n\"That's...\" I swallow and nod, not sure how to finish that sentence. \"Okay.\"\n\n\"We don't\u2014\" Susan takes a deep breath to compose herself. \"We don't have a road map for any of this. We don't know anyone who's ever attempted this, let alone...\" She takes my extended silence as answer and sits back.\n\nThe boy is the oldest of the three, older than his sister and Bridget who appear to be about the same age, but they follow Bridget. There's something about her, something in her presence, that the other two just fall in behind her. When Bridget pronounces that the alligators have returned, the other two don't waste a second before jumping right in with her and shrieking as they flee in unison.\n\nShe definitely gets that from her mother, and I can't help but smile.\n\n\"Mommy!\"\n\n\"Yes Baby?\"\n\nBridget leans forward at the waist, putting as much emphasis on each word through sheer forward motion as she can manage without moving her feet. \"The alligators are vampires now!\"\n\nSusan blinks, smiling slowly, and she turns to me when I touch her arm.\n\n\"The alligators are vampires,\" I repeat softly.\n\n\"Oh! Oh no!\" she says, turning back to her daughter. \"What are you going to do?\"\n\n\"Ruuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuun!\" All three of them shriek, arms flailing, as they tear around the edge of the playground, and Susan sits back with a smile.\n\n\"Thank you,\" she says softly.\n\n\"Does she know? About your hearing?\"\n\n\"Yes. We talk about it, but she doesn't always realize when she's not facing me, or that moving her head around makes it harder to follow what she's saying.\" She keeps looking back and forth, between me and Bridget.\n\n\"I can keep my eye on her,\" I say, \"if you want to just watch me.\"\n\nSusan shifts on the bench, turning slightly toward me. \"I didn't think you'd be ready to talk very much.\"\n\n\"Actually... I don't know that I am.\"\n\n\"But you still wanted to be helpful.\" Susan nods and sits back, while still facing me. \"That was your first instinct. To give. To watch her so that I can look away, even if only for a minute.\"\n\n\"I don't really think I'm ready to take compliments either,\" I say, swallowing hard.\n\n\"It wasn't a compliment,\" she says, \"just an observation,\" but her smile afterwards says it was an observation she approved of. \"Did you want to meet her?\"\n\n\"Actually, I got really nervous when you said that you were nervous.\" I lick my lips and squirm. \"I hadn't really thought through how... damaging it could be to have people entering and leaving her life when she's so young. People who say they're going to care for her, and then disappear.\"\n\n\"Are you planning on disappearing?\"\n\n\"No!\" I say quickly. She tilts her head and narrowing her eyes slightly. Not suspiciously, but... appraisingly. \"No, but... I don't know. This shouldn't have been the first thing I did. I'm second guessing myself now.\"\n\nSusan nods slowly, and smiles as she turns back toward the action. \"She'll ask about you later. Who was Mommy sitting with? I'm going to tell her it was a really good friend. That's enough for her at this stage.\"\n\n\"Okay,\" I say, shrinking in on myself just a little. \"I should go.\"\n\nSusan takes my hand as I stand, and I turn toward her. \"Before you leave... There are tons of books on parenting and never-ending parade of quote-unquote authorities. They're all rubbish. Every little boy or girl, every one of them, is a different kind of miracle with their own special brand of hell thrown in.\"\n\nI snicker and bite down on my lip.\n\n\"The point is that there are a million things you couldn't know about Bridget, and about kids, until you get there. Not until one of them is ruining all the preconceptions you had in the most adorably frustrating way. The measure of a parent is how you handle those little revelations.\"\n\nI pause, standing still and not really knowing what to do with that.\n\n\"Calvin and I both agreed that it would be alright if you met Bridget. I know you're still mad, and you have every right to be, but we both trusted that you were coming today for the right reasons. You as much as proved that just now. Thank you for that.\"\n\n<br >I nod slowly, and she lets go of my hand. I duck my head as I fast-walk through the grass to the sidewalk.\n\n\"Byyyyyyyyye!\"\n\nI turn, wide-eyed, to see Bridget on top of the down-scaled castle, waving to me with a huge, beaming grin. I weakly wave back, covering my mouth with my other hand, and scurry away.\n\n***\n\nKnock-knock<br >\n\nI look up, as much as I can from the middle of a Downward Facing Dog. Really all I can do is look just past my palms. It's almost 9, so I wait to see if they knock again. I barely have the patience most nights to get through yoga, even though I swear by the results, and an interruption of any kind is likely to derail the effort en\u2014\n\nKnock-knock-knock\n\n\"Coming,\" I say, walking my feet up slowly. I keep an aluminum baseball bat behind my front door just in case, even though I've never had need or cause for it, and my eye is on it as I walk through my apartment. I always feel like my posture is so much better after yoga. Like my legs have relearned the proper way to walk, and my lower back has the right kind of arch to it. Even though it's exhausting, I always feel invi\u2014\n\nEverything comes to a screeching halt when I slide the cover away from the peephole and stare at the fish-eye deformed shape of Calvin Ayers in the hallway of my building.\n\n\"Kit?\"\n\nFuck! I let the cover slide back down into place and lean against the door.\n\n\"Kit? Are you there?\"\n\nFuck! Fuck! \"I'm not ready to talk to you,\" I croak.\n\n\"Kit,\" he says, voice lowering. \"Please.\"\n\nI gasp when I feel my hand on the doorknob. It's frightening how eager I am. \"I don't think I should\u2014\"\n\n\"Kit.\"\n\nI don't know what it is about his voice. What quality it has that I can't resist. It's not commanding. It's not expecting. It's not... dismissive. It's not arrogant.\n\n\"Please.\"\n\nI'm proud of myself for at least grabbing the baseball bat with my other hand as I open the door.\n\n\"May I come in?\"\n\nI can't force the words out of my mouth, and my tongue can't figure out which answer to give first, but my feet make the decision for me by stepping back and away from the door. His eyebrows rise a hair when he notices the bat, but he says nothing. He stands up tall (God, he's tall) and looks around, and suddenly I'm incredibly self-conscious about how small my apartment is.\n\n\"These are beautiful,\" he says, turning to face one of the canvases on the floor. He leans his head to the side and smiles. \"What's this one?\"\n\nI close my eyes and clench my jaw for a moment to try and get it to stop quivering. \"I don't know yet,\" I stammer.\n\nHe takes another step and leans back slightly, looking at it from a different angle.\n\n\"I thought, for a little while, that it might be a... a balloon, but now I'm...\"\n\nCalvin nods, giving it one last look. \"Is someone else here?\"\n\nI follow his confused gaze to the rumpled sheets on my couch, and shake my head. \"My sister. Sh-she's not here now.\"\n\n\"I didn't know you had a sister.\"\n\nI stare at him, hard, and he nods after a moment. I refuse to give him the satisfaction of tilting my head back to look at him and instead glare at him through my eyebrows, and my eyes go wide when he places his hands on my bare upper arms. Now I'm self-conscious about being in just a sweaty tank top, sports bra, and leggings.\n\n\"I know I betrayed your trust. I know that I hurt you.\" It's hard not to shudder at the way his fingers squeeze. I try to focus on gripping the handle of the bat tightly. \"I also know that saying that I'm sorry isn't enough.\"\n\n\"It's not,\" I say, hoarsely. My eyes sting.\n\nCalvin nods. \"I hope that you can at least understand why we did what we did. The truth is...\" He looks down and exhales slowly. \"The truth is that we're struggling. Susan and I. We're growing as people, independent of one another, and we're doing everything we can to save our marriage. We want it to work, both for ourselves and for Bridget. We've been trying different things, counselling and... you know... We think you are our best hope.\"\n\n\"No pressure,\" I growl.\n\nCalvin frowns sadly and nods. \"It's not your responsibility to fix us. That's not what I meant. I'm sorry if it sounded like that.\"\n\n\"You should start thinking to yourself, before you say something, 'Hmmm. Am I going to have to apologize for this later? If yes, then maybe I shouldn't say it.' \"\n\n\"I'm trying to be honest with you.\"\n\n\"It's a little late for that,\" I snap.\n\nCalvin nods. \"That's fair.\"\n\n\"I don't need you to tell me when I'm being fair!\"\n\nHe licks his lips, eyes scanning back and forth as he looks down.\n\n\"Do you know what kind of pressure that puts on me?!\"\n\n\"Kit\u2014\"\n\n\" 'Sorry we fucked up our lives. Good luck fixing this and oh-by-the-way let's hope you can so we don't scar this perfectly innocent little bundle we made.' \"\n\n\"Kit\u2014\"\n\n\"Better work fast. She's gonna start noticing when Mommy isn't there to tuck her in at night!\"\n\nHis hands tighten around my arms, and I yelp. \"I know you're hurting, and I know that you're hurting because you have feelings for me.\"\n\n\"Of course I have feelings for you!\" I shriek. \"I love you, and it's tearing me apart!\"\n\nCalvin nods, face pale, and he's thoughtful while I weep.\n\n\"On your knees.\"\n\nI don't know what's more shocking; that he said it, or that I did it. The bat makes a loud noise as it rolls away from me across the uneven floor. It's humbling to think about how much power he has over me.\n\nBut then Calvin gets down on his knees in front of me. He sits back on his heels, hands still holding my arms, and pulls me forward so my shoulders, hips, and knees are in a straight line up and down. So that he and I are eye-to-eye.\n\n\"I love you too.\"\n\nI'd have collapsed if he hadn't been holding me up. It's hard looking him in the eye and seeing him cry too.\n\n\"I. Love. You.\" The stunted quality of his voice has more to do with shaking than anything else. Like he has to start each sentence from scratch to keep from breaking down. It was easier to hate him when I thought he didn't care. \"I love you.\"\n\n\"I know,\" I whimper.\n\n\"I'm sorry.\"\n\n\"I know.\"\n\nCalvin nods. Both of us trembling.\n\n\"In relationships,\" he says, speaking slowly, \"with a... power dynamic, the dominant has a lot of responsibility. It is extremely easy for them to hurt their partner. To take advantage of them, and abuse them.\"\n\nI nod.\n\n\"You put your trust in me, and I didn't honor that. Partly because I couldn't, and partly because the reality of having power over someone else is new to me. My experience has been different up until now.\"\n\nI nod.\n\n\"If we move forward I may misstep here and there, but never on purpose.\"\n\n\"Okay,\" I croak.\n\n\"I love you.\"\n\n\"I love you too,\" I say. I try to lean forward, to move closer so that I can be touching him again, and holding him again, but he keeps me at arm's length. Fingers like a vice around my upper arms.\n\n\"Not yet,\" he says. \"I know you're still mad at me, and I don't want you to push that aside out of lust, or the pressure of expectations. I don't need you to forgive me sooner than you're ready to forgive me.\"\n\nDear God, I love him.\n\n\"You and me,\" he says, letting go with one hand to bring it up into the air palm facing down, \"we're here. Right now, you and Susan are down here.\" He lets go of me with his other hand, and brings it between us below the first hand. Palm facing down. \"It's important, for everyone involved, for those two to come even.\"\n\nI nod.\n\n\"I know I'm asking a lot with this, but do you think you could love Susan?\"\n\nI nod.\n\n\"I'm not asking you to love her now, or insisting you manufacture feelings for her out of thin air. She's a good woman.\"\n\n\"I know,\" I say.\n\nCalvin sighs heavily, shoulders slumping, and he smiles. \"One step at a time then.\" He reaches over and takes my hands in his, gently cradling them. \"I don't think I ever noticed how small your hands are.\"\n\nI don't really know how to answer that but my cheeks try anyway, blushing profusely.\n\n\"This weekend. Are you free?\"\n\nI blink, looking through the kitchen wall toward my purse. \"Um...\" Trying to conjure the image of the work schedule I have folded and tucked into the front pocket. \"I think so. Maybe. I can clear it if it's important.\"\n\n\"It is,\" he says, taking a big breath and composing himself. \"Susan has something she wants to show you.\"\n\n\"Okay,\" I croak, still much less self-possessed than he is. \"What is it?\"\n\n\"I don't know,\" he confesses. \"I'm not sure what she has planned. She'll get in touch... probably tomorrow.\"\n\n\"Okay.\"\n\nCalvin nods, and grips my hands tighter to help me up to my feet. He climbs up just after me, still holding me but keeping me at a safe distance. When he turns for the door, I grab his arm before he can get it much more than cracked open.\n\n\"Wait.\"\n\nHe turns back to me, jaw tight.\n\n\"The reason it hurt so much,\" I say, raising my chin, \"is because I have loved you since before you knew my name.\"\n\nHe smiles and shakes his head. \"I told you. You stood out.\"\n\n\"Fuck,\" I whisper, knees shaking.\n\n\"Very early.\"\n\nI nod frantically. \"Tha-thank you. For not taking advantage of me tonight.\"\n\nHis eyes glow. Lips curled perfectly. \"It's not because I didn't want to.\"\n\n\"Fuck.\"\n\n\"Good night, Kit.\"\n\nCalvin leaves, closing the door behind him, before I can manage a response. I just stand there, stunned and unsteady on my feet. After a few moments, I stagger into the bedroom, legs weak, and pull out the KY and the purple silicone. My leggings come down to mid thigh, just enough to be out of the way, and I cry out as I feel him inside of me again. It doesn't take very long to find release, and then the haze finally starts to lift.\n\n***\n\nIt's already chilly as I stand on the sidewalk outside my apartment. Seems a little early in the year for that, but at least I feel like I packed appropriately. Susan's black BMW X5 pulls up right on time, and she comes around from the driver's side to meet me.\n\n\"Hello,\" she says, taking my hands.\n\nI nod, remaining mostly stiff while she hugs me lightly.\n\n\"Do you have a driver's license?\"\n\nI blink. \"...Yes?\"\n\n\"Okay good. It's not a given living in the city, and I didn't want to presume. Do you mind driving?\"\n\n\"This?\" I say, looking at the pristine BMW. \"You want me to drive this?\"\n\n\"It's easier for me,\" she says.\n\nI nod slowly. \"Of-of course. Sure. Where am I going?\"\n\n\"I already have the GPS programmed,\" she says. She looks down, takes one of the two bags I have packed, and leads the way to the trunk. She has more luggage than me, but there's still plenty of room behind the back seat for it all.\n\nIt's like stepping into another world when I sit down in the driver's seat. \"This is the nicest car I've ever been in,\" I mumble. \"I don't... I don't want to...\"\n\n\"I can drive if you're nervous,\" she says.\n\n\"No no. I'm okay.\"\n\nIt takes me a minute to figure out adjusting the seat, the mirrors, and the height and set of the steering column. I don't drive often, preferring the subway and cabs, but I've done it enough that I'm not a complete novice. I feel a little better about it once we get moving, and a lot better about it once we get on the Interstate. The GPS gives clear, concise, and repeated instructions, and Susan seems content to watch.\n\nShe's seated almost sideways, with her back against the side door. One knee stretched across the seat.\n\n\"Just to be clear,\" she says, surprising me by breaking almost 10 minutes of silence, \"I'm nervous about this too.\"\n\n\"Thank you,\" I say, hand pressed to my chest. \"That wasn't obvious.\"\n\n\"You work as a receptionist, yes? At a clinic?\"\n\n\"A Veterinary clinic, yes.\"\n\n\"Do you like it?\"\n\n\"I um...\" I lick my lips, and to buy myself a few seconds, I unwind the scarf from around my shoulders. The warmth inside the BMW is quite sufficient. \"I'm learning a lot.\"\n\n\"Because you want to be a Vet tech, right?\"\n\nI nod, suddenly feeling very uncomfortable.\n\n\"Why not an actual Veterinarian?\"\n\n\"I...\" I lick my lips, trying to get moisture back into my mouth.\n\n\"I've looked into you, you know.\"\n\n\"You... you have!?\"\n\nSusan nods. \"As a precaution.\"\n\n\"You know, I'm getting really tired of having very legitimate reasons to be mad at the two of you.\"\n\n\"It's interesting,\" Susan said, shifting in her seat. \"I mean, your grades are easily good enough, and you strike me as a very intelligent, perceptive, and resourceful young woman.\"",
        "Even through the anger, it still feels good to be seen as one. \"Thank you.\"\n\n\"There's no reason you couldn't pursue a career at that level.\"\n\nI try to calm myself, breathing slowly.\n\n\"Is it because of your mother?\"\n\n\"Fuuuuuuuuck you! How do you know about that?\"\n\n\"Court proceedings are matters of public record,\" she says, shrugging lightly. \"Especially if you know where to look.\"\n\n\"Yes. Fine. Because of her. Are you happy?\"\n\n\"Do you have a lawyer?\"\n\n\"Yes,\" I say, gritting my teeth.\n\n\"Who?\"\n\n\"Danielle Fein.\"\n\nSusan pursed her lips. \"Reed &amp; Platz is a good firm.\"\n\n\"The estate lawyer recommended her.\"\n\n\"Would you mind if we switch topics?\"\n\n\"Gladly,\" I grumble.\n\n\"You and Calvin.\"\n\nI narrow my eyes and look at her sideways. \"We're not switching topics at all, are we?\"\n\n\"See? Perceptive. I like that.\"\n\n\"Go ahead.\"\n\n\"You call him Daddy. He likes that, you know. It scratches an itch for him he didn't even know he had.\"\n\n\"I'm so glad,\" I growl.\n\n\"It seems like an odd choice of pet names, given how\u2014\"\n\n\"I don't really want to talk about this.\"\n\n\"\u2014given how your father passed away recently.\"\n\n\"Fuck you.\"\n\n\"He supported you?\" Susan folds her arms across her chest and tilts her head. \"Emotionally, I mean. He supported your transition?\"\n\n\"Yes.\"\n\n\"And your mother opposed it?\"\n\n\"Yes.\" My fingers turn white on the wheel. \"Said it... said I was unnatural, and... against God's plan. Me and my sister both, really, but I'm the one she blames.\"\n\n\"I'm sorry,\" Susan said, looking down.\n\n\"She's contesting his will because she said the canc...\" I put a hand over my mouth when my voice fails, and clear my throat roughly. \"That he wasn't in his right mind when he changed it. Because of the chemo.\"\n\n\"She's failed you in a pretty significant way. As a parent.\"\n\nI nod. I hate sniffling.\n\n\"There's no excuse for that. You support your children. If they do something that comes up against your values, you owe it to them to re-examine those values.\"\n\n\"Thank you,\" I whisper. Miles markers flick by in a blur.\n\n\"The unfortunate truth is that all parents scar their children. In different ways. By not protecting them enough or protecting them too much. Exposing them to the things we like and shielding them from the things we don't like. Some scars are deeper than others, obviously, but the impact we have is... daunting. It really makes you think. It's easy to see that your father was someone that you... felt safe around. Someone that never judged you, and helped you find your way. I'm glad that Calvin is\u2014\"\n\n\"It is really not okay for you to be laying this out for me,\" I snap.\n\n\"It's better to be aware of our motivations, Kit. I'm not here to tell you that what you and Calvin have is inappropriate, and I'm glad that you have him in your life. I'm glad he can fill that role for you.\"\n\n\"I'm not fucking my father!\"\n\n\"Even if you are, even if you close your eyes and picture your father touching you, that's not for me to judge.\"\n\n\"Then what are you telling me?\"\n\n\"That I am not your mother.\"\n\n\"Thanks,\" I laugh bitterly. \"I had no idea.\"\n\n\"Kit, please.\"\n\nI glare sideways at her.\n\n\"Our interactions, so far, have been more... combative. More... adversarial. And that's okay. I have really enjoyed that. I just don't want you to resent me.\" She bites her lip and takes a deep breath. \"The influence parents have is so deep and subconscious that, if we didn't talk about it, you and I, I don't know what would happen.\"\n\n\"Great. Wonderful. So glad we're talking about this.\"\n\n\"I watched my father beat my mother,\" Susan said quietly. \"He'd drink. A lot. He was an old-fashioned kind of asshole. You think I don't worry about how much of my time with Calvin is just revenge-seeking behavior against my father, or... or how much of our time is fetishizing the abuse my mother endured?\"\n\n\"I'm sorry,\" I say, slowing down and taking a breath. \"I didn't know.\"\n\n\"I don't know any other way to handle these kinds of things but to be upfront and open about them.\"\n\nI nod slowly, chin tucked against my chest. The dashboard pings at me frantically, and I gasp as I try to steer back into my lane. \"I'm sorry. I'm sorry. I'm sorry.\"\n\n\"Don't worry,\" Susan says, sounding much more calm about it than I am. \"That's what it's there for.\"\n\n\"I hate her,\" I say, voice weak. \"It wasn't enough for her to disown me the day after he passed. She had to try to... She had to...\" Her hand on my shoulder. \"He was the first person to tell me I was beautiful, and she wants to poison that. Everything he did and said those last few years, she wants to... to...\" My voice fails completely as I sob. The asphalt is a dark, watery blur even in the bright afternoon sun.\n\n\"It would invalidate that.\"\n\nI nod, wiping the back of my hand under my nose.\n\n\"It would make it so that it wasn't him saying those things, it was the drugs.\"\n\nI nod again.\n\n\"No one, no court of law and not even your mother, can take that away from you.\"\n\nI nod. I hate sniffling.\n\n\"She wants to hurt you because she's hurting. She's lashing out. If that means taking away the money he left you, or making you spend it all in legal fees, then that's what she'll do. It's petty, and it's pathetic.\"\n\n\"Thank you,\" I say, crying. I grab her hand, the one on my shoulder, and squeeze it. Tightly.\n\n\"Do you want me to drive for a bit?\"\n\n\"Yes.\"\n\n***\n\n\"Okay,\" Susan says, as she turns onto the dirt road. \"This should be it.\"\n\nI have no idea where we are. After four hours of heading, I think, north, and another hour on back roads, we could be in Canada for all I know. Except that I think we'd have had to cross some water to get to Canada. I sit forward a bit on my seat as we pass down a narrow path, with trees coming right up against the winding twin ruts. After another mile bouncing along through dense forest, we come up on a beautiful old cabin. Susan's lips spread in a wide smile, but her eyes are less expressive.\n\n\"Wooow,\" I gasp. \"This is... just...\"\n\nThe X5 pulls to a stop on the gravel, and we both hop out. I'm glad I wore a pair of boots with a sturdier heel.\n\n\"You can't see it from here,\" Susan says, \"but there's a lake around back.\"\n\n\"Are you serious?\"\n\nShe nods. \"It's not a big lake, but it's close.\"\n\n\"This is incredible!\"\n\n\"Just wait,\" she says. There's something about the way she says it, though, that strikes me as off. \"It's only partially furnished yet, so it isn't totally there.\"\n\n\"Still!\"\n\nShe lags a little behind me as I walk to the front door, though she's right there with the key when I try the handle.\n\n\"Whoa,\" I say, as the door swings inward.\n\nThe interior of the cabin, if it can even really be called that, is all concrete. The few installations, tables and sinks, are stainless steel. There's more space than I thought there would be, and it's so cold. Not frigid, but... ascetic. Austere.\n\n\"What is this place?\" I ask, as I walk slowly into the cavernous first room.\n\n\"This is my safety blanket,\" Susan says, as she shuts the door behind her.\n\n\"What does that mean?\"\n\n\"It means that... sometimes... I...\" Susan looks down and clears her throat. \"Because of my position, I see a lot of dangerous people. Every day. And not all of them end up where they're supposed to.\" She licks her lips and grips one hand tightly within the other. \"The 'system', and I really hate calling it that, is imperfect. Highly imperfect and, at least from my point of view, fragile.\"\n\n\"Fragile?\"\n\nSusan nods and paces. Her eyes darting here and there as she talks quickly. \"Prisons are... overcrowded. Underfunded. 10 guards watching 300 inmates, if you're lucky. And between that and all the constant unrest on the outside, I... I see how fragile society is. We all walk around obeying these laws, because everyone else is, as part of some social contract, but all it takes is enough people deciding\u2014\"\n\n\"Oh my god,\" I gasp. \"Are you one of those... what are they called? Doomsday preppers?\"\n\n\"Almost,\" Susan says, still looking down.\n\n\"Do you have guns here?\"\n\nShe shakes her head for a moment and then looks up at me. \"Not yet.\"\n\n\"Jesus!\"\n\n\"Some days, I get all the paperwork started to sell this place because I know this is not... this isn't good beha... And then some days, I lose hours ordering more supplies. Learning how to purify water, and make a semi-automatic rifle automatic.\"\n\n\"Does Calvin know about this?\"\n\n\"No.\"\n\n\"Susan!\"\n\nSusan nods, chin slid forward and her lips turned down. \"I'm scared. I worry. I'm afraid for myself. I'm afraid for Calvin. I'm afraid for Bridget, and...\" She gestures toward me, but can't get the words out before losing her composure. Just for a moment. \"I lie awake at night and I worry. I worry about people I've sentenced. I worry about\u2014\"\n\n\"Why doesn't Calvin know about this?\"\n\n\"Because he doesn't...\" Susan looks away, her eyes red-rimmed. \"He doesn't know that I worry at all.\"\n\n\"Susan!\"\n\n\"I feel like I can't tell him... Like I can't...\"\n\n\"Like you can't what?\"\n\n\"Like it would ruin his image of me,\" she says, shaking her head. \"And I know that's wrong. And I know that's stupid. And yet...\"\n\n\"What are you so afraid of?\"\n\n\"I like the way he looks at me,\" she says, back stiffening. \"I want him to rely on me. I need that. I need to be in control.\"\n\n\"This is completely different!\"\n\n\"You don't think I know that?\" She bites down on her tongue and quickly composes herself again. \"It didn't happen all at once. This is... this is years of little choices. Hundreds of times when I didn't tell him.\"\n\n\"When you could have told him,\" I corrected, taking a step toward her.\n\n\"Yes! Fine!\"\n\n\"Do you think Calvin's feelings for you are contingent on you being a robot?\"\n\n\"Of course not!\"\n\n\"Then tell him!\" A step closer.\n\n\"I can't!\"\n\n\"Why not?\" A step closer.\n\n\"Because look around!\" she screams. \"This isn't a small thing! This isn't a purse I bought on a whim without permission. This is a house. This is land. This is a lot of money, and time, and taxes, and a lot of decisions I made without him!\" She holds a quivering hand over her mouth. \"He looks at me, and he-he thinks I'm perfect.\"\n\nI look around, gobsmacked. Jaw hanging low as I turn farther and farther until I'm staring at her again. \"But you're not.\"\n\n\"No,\" Susan says, shaking her head sadly. \"No.\"\n\n\"So I'm, what? Here to be your witness?\"\n\n\"I needed...\" She shakes her head and curls in on herself, and her voice is barely above a whisper when she says, \"I needed you to see me like this.\"\n\n\"No,\" I say, turning back toward her fully and stepping in closer. Growling. \"This is not okay.\"\n\n\"I didn't know what else to do with all the...\" She stops to wipe at her eyes and shakes her head.\n\n\"You brought me out here, because... you don't want to lie to me?\"\n\nSusan nods.\n\n\"And you know you need to tell Calvin.\"\n\nSusan nods, and I take the final step between us. Tips of my boots just an inch from hers.\n\n\"And you want me to make you do it.\"\n\nShe looks up at me, shaking her head slowly with her mouth open.\n\n\"You want me to drag you back there,\" I snarl, pointing back over my shoulder, \"by your hair, kicking and screaming, because then you'll have had the choice taken out of your hands.\"\n\n\"No,\" she whispers. \"No, I\u2014\"\n\n\"You want me to punish you.\"\n\nSusan has never looked small. So out-of-countenance. And that's before I slap her.\n\n\"Ow!\" she cries, covering her pinkened cheek with one hand. She backs away from me, but there's only a few steps between her and the wall.\n\n\"Is that about right?\"\n\n\"No!\"\n\n\"Do you really want to feel what it's like when someone takes away your power?\"\n\nShe starts to respond, and her eyes bulge when my hand shoots up for her throat.\n\n\"You treated him like dirt, and you need to feel a little of that yourself?\"\n\n\"Yes,\" she sobs, in between hacking coughs to clear her airway.\n\n\"Too bad.\"\n\nSusan's eyes nearly pop out when I let go of her and turn away. Stalking angrily through the house toward what I think is the back door.\n\n\"You have to,\" Susan insists, staggering after me in shock. \"You have to do this.\"\n\n\"I don't have to do anything,\" I shout back. \"I'm not beholden to you. I'm not your fucking conscience.\"\n\n\"Please!\" she cries, as I throw open a door to the back porch. Susan follows right behind, grabbing at my scarf. \"I can't-I can't\u2014\"\n\nI spin, enraged, and swat her arm away. \"You. Can't. What,\" I shout. \"Be a decent fucking human being?\"\n\n\"Hey,\" she says, backing away as I turn on her again.\n\n\"I can't make you not be a piece of shit.\"\n\n\"Kit,\" she says, dragging out the vowel while her face hardens.\n\n\"What?\" I say, leaning in until my nose is nearly brushing hers. She just stares at me, blinking and thinking furiously. \"What?\"\n\n\"I\u2014\"\n\nI slap her again. \"You're pathetic. I had no idea how pathetic until just this moment.\"\n\n\"That is\u2014\"\n\nI slap her again, and this time she pops right back.\n\n\"That's enough,\" she yells, though she doesn't see my left hand coming in from the other side. It connects even more loudly than the others, cracking against her cheek, and this time she whirls away with it. Cradling her stinging skin. I shake my hands, trying to get rid of the throbbing, and the moment my back turns to her she starts shrieking. I whirl just in time to grab her wrists as she reaches for my hair, and claws at my face.\n\nThe self-defense classes my dad insisted on finally pay off as I let her momentum work against her, twisting her arm around behind her and shoving her into and over the edge of the round picnic table in the middle of the deck. Susan yells as I drive her hand up along her spine toward her shoulders.\n\n\"Stop!\" she screams. \"That's not fair!\"\n\n\"What's not fair?\" I hiss, shifting my grip to be holding her arm with just one hand while the other takes a fistful of her hair and yanks backwards.\n\n\"You're a...\" Her eyes roll wildly as she clamps her mouth shut.\n\n\"I'm a what?\"\n\nShe stares back at me out of the corner of her eye, breath coming hard and fast through her nose.\n\n\"What am I, Susan?\"\n\n\"A mmm-mmm-\"\n\n\"Excuses,\" I whisper, barely holding off my own fury. \"Weak.\" She yelps when I tug harder on her hair, arching her head back. \"Even if I was, this is pathetic.\"\n\n\"Fuck you,\" she grunts, and then mewls when I give her arm another twist. A shuddering, knee-buckled mewl.\n\n\"This is what you want, isn't it?\" I grunt, angrily grinding my hips into her while she's bent over the table. \"This is why I'm here. To bring you to heel.\"\n\n\"Fuck you!\"\n\nI shift hands again, pinning her wrist firmly against her back and letting go of her hair, and lean forward over her. \"I am not your keeper.\"\n\n\"Fuck!\"\n\n\"Say it,\" I snarl.\n\n\"You are not my keeper!\" she groans.\n\n\"I am not,\" I say, really grunting through the last word, \"here to police you!\"\n\nSusan groans louder as I give her arm another twist, and the way her voice comes down when I let off just a little is incredibly distracting. \"You're not here to police me.\"\n\n\"Having me around doesn't excuse you from being fair to Calvin!\"\n\n\"Fuck,\" she groans, back arching when I give her arm another push. \"I'll be fair!\"\n\n\"I am not your conscience!\"\n\n\"You're not!\" she pleads. \"You're not!\"\n\nI can feel heat pouring off of me. Righteous, furious anger. Overwhelming anger. So much that I am literally seeing red. Susan sobs beneath me, and, luckily for her, she doesn't move when I let go of her arms and storm off the back porch into the woods.\n\n***\n\nShe doesn't get up from her seat at the table when I come back inside the house. There are lights on in the next room but none in the kitchen, and full dark settled over the woods just as I was circling back around to a trail I recognized. I pull up a chair across from her, at the far end of the table, and settle into it, trying to hide how tired my legs are. Hiking is a much tougher workout than the treadmills back home.\n\n\"I called him,\" she croaks, still without looking up. \"We talked.\"\n\nI nod, folding my arms a little tighter.\n\n\"I've spent much of my life... personally and professionally... crafting an image. A facade. Trying to be the woman I want to be... or think I need to be. I let that get in the way of some pretty important things.\"\n\nI nod.\n\n\"He was upset.\"\n\nI nod.\n\n\"It wasn't fair to put you in the middle of that. I'm sorry.\"\n\nI nod... and shift how I'm sitting. Leaning forward to rest my arms on the table. She looks up, a small darting of her eyes while keeping her face cast downward. \"I'm sorry too.\"\n\n\"You don't\u2014\" Susan shakes her head. \"You don't need to be sorry.\"\n\n\"No,\" I say, moving my hand slowly to get her attention. \"It's not all on you. Do you understand?\" She blinks at me. \"If you take all of this on your shoulders, you're right back where you started.\"\n\nShe looks down again and nods slowly. Her eyes widen when I get up, and she watches me with something close to fear as I come around to sit next to her.\n\n\"So you talked?\"\n\n\"Yes,\" she says tightly.\n\n\"How did it go?\"\n\n\"Badly.\"\n\n\"Well,\" I say, nodding slowly, \"badly is about the best you could have hoped for.\"\n\nSusan nods. \"We're going to talk more about it.\"\n\n\"Good.\"\n\n\"I\"m sorry that I tried to use this to... manipulate you.\" She sighs and sits back, looking around at the bare walls. \"Because I did. This place is just... I felt so guilty, and I needed to have that off of my chest.\"\n\n\"I can imagine.\"\n\nSusan looks at me, her eyes narrowing slightly in estimation.\n\n\"Trust me. I know what it's like to agonize over the way I present myself.\"\n\nShe nods, and even in the low light I can see her eyes watering. I reach over and lay my hand on her knee, which she immediately grabs and squeezes.\n\n\"I'm sorry,\" she sobs, rapidly losing her composure. \"I'm sorry. I\u2014\"\n\n\"Hey,\" I say, turning my hand to squeeze hers back. She grips my palm so tightly that it's hard not to yelp. \"You talked to Calvin?\"\n\n\"Yeah,\" she says, sniffling.\n\n\"And you're going to talk more?\"\n\nShe nods.\n\n\"Did you imagine having that conversation a hundred times?\"\n\n\"Yeah.\"\n\n\"Did it usually end with him leaving you?\"\n\nShe nods. I wrap my other hand around hers, clenching it tightly with both hands.\n\n\"Telling him was the right thing to do,\" I say, and she nods emphatically. Wiping at her eyes with the sleeve of her free arm. \"He's a good man.\"\n\n\"I know,\" she says, looking down in her lap. She groans as she wipes at her eyes again. \"Not telling him had nothing to do with him, and everything to do with fear.\"\n\nI nod, holding her hand, and lean forward.\n\n\"I know it's late,\" says Susan, \"but if we leave now, I can have you back in the city before\u2014\"\n\n\"Hey,\" I say, squeezing her hand. \"I'm not going anywhere.\"\n\n\"Fuck,\" she whimpers.\n\n\"You know, when he... when Calvin came to my apartment and told me you wanted to show me something, the thing I really wanted you to show me the most was that you were human.\"\n\nSusan chortles miserably, and I can't help by snicker with her. \"I kind of did,\" she says.\n\n\"Which you kind of did,\" I say, repeating for emphasis. Smiling. \"I don't have a problem admitting that I'm envious of your poise, and the way you carry yourself.\"\n\n\"Yeah, but look where it got me.\" She shakes her head.\n\n\"Surely you can appreciate the value of a system of checks and balances.\"\n\nSusan barks loudly, smiling and trying really hard to immediately make it disappear from her cheeks.",
        "\"Let me tell you something else. You aren't the first person to call me a man to my face.\"\n\nShe cringes, and tries to withdraw her hand from my grasp. \"Kit, I'm\u2014\"\n\n\"No no. Listen.\" She stops pulling her hand away, but she can't quite look me in the eyes. \"You won't be the last. It's going to follow me the rest of my life, and I know that. I don't get mad when some nobody tries to make me feel shame for it. People who don't matter to me, who aren't in my life, they can't make me angry. I don't have time for them.\"\n\nNow she can look me in the eye, but the fear is back.\n\n\"The very fact that you could make me that angry says a lot. That's... that's really why I was gone so long. I needed to get that out so I could come back and... and do this right.\"\n\n\"Do what right?\"\n\n\"When you first started telling me about... you know...\" I gesture around. \"This... I was mad on Calvin's behalf. I felt protective of him, but that was very quickly overtaken by feeling like you'd let me down. You know?\"\n\nShe nods slowly.\n\n\"And that's... that's silly. This has nothing to do with me. I shouldn't be mad about you keeping something from me. So when I thought about it more, what I realized is that... I was mad because you kept you from me. Does that make sense?\"\n\n\"Yes,\" Susan says, nodding.\n\n\"And maybe, you know, eighty percent of the time you are the person you present yourself as, and there's no reason to correct that and that's really all I've seen of you, but it definitely felt like there is a part of you I'm not getting yet, and...\" I pause. \"Sorry. Nervous. I ramble. Did you get all of that?\"\n\n\"Yes,\" she says, lacking the certainty that usually pervades her mannerisms. I look around, and hop up when I see a panel of light switches. Susan smiles as I experiment with them, turning on and off different lights around the room before finding just the one above the kitchen table, and she is glowing with a sort of embarrassed glee when I sit back down. \"Thank you.\"\n\n\"Do you want to start over?\"\n\nSusan nods emphatically.\n\n\"Hello,\" I say, taking her hand in mine. \"I'm Kit. I'm a male-to-female transsexual. I grew up feeling very uncomfortable in my own skin. When I first started to feel like I might have been born wrong, like I was just starting to question that, my mother sent me to a Straight Camp. Ever since then, I've always felt like I had to present myself unflinchingly. I had to show the world, every second of every day, that I am the woman I think I'm supposed to be, even though I have doubts and conflicted feelings, on the inside, all the time. Every single day.\" I have to pause and touch my throat, and it takes a few deep breaths to relax the tightness. \"I don't know who I am. I don't regret the path that I'm on or the choices I've made, but I have fears. Lots of them.\"\n\n\"Hello,\" she says, squeezing back. Her voice is weaker, and cracks often. \"I'm Susan. I'm a fifty-year old mother to a toddler. I grew up in a world where I was told, every day, about the things I wasn't allowed to be as a woman, and I did everything I could to prove them wrong. Being told I wouldn't make half as much as a man, no matter what career I chose, just made me work that much harder. I've been running as fast as I could since I was... thirteen, and I don't think I ever slowed down.\"\n\n\"Hello Susan,\" I say. \"It's nice to meet you.\"\n\nSusan nods, still overwhelmed.\n\n\"It hurts to be... vulnerable.\"\n\nShe nods again, almost continuously.\n\n\"Me too.\" I sit forward, resting my elbow on my knee, and lay my hand on her thigh. \"I like you,\" I say. Susan flinches, face turning away while her eyes remain glued on my lips. \"Love is inexplicable. It's... magic. It's... chemistry. It's either there between two people or it's not, but liking someone? That's... appreciation.\" She blinks, remaining still while I smile. \"I think we're more alike than either one of us realized.\"\n\n\"What are you saying?\" she asks, voice shaking.\n\n\"I really want to be able to be vulnerable with you, and I really want you to be vulnerable with me.\"\n\n\"Fuck,\" she whispers. And then, as if fighting a lifetime of conditioning to the contrary, nods. \"You know, a friend...\" She pauses to smile. \"A friend of mine once said something like... What did she say? That 'there is nothing sexier than trust?' \"\n\nI scoot forward, with about half my thighs in front of the edge of my seat, and put both hands on her legs. \"Tell me something then.\"\n\nSusan sniffs and nods, and folds her arms across her chest. \"When I'm... with Calvin,\" she says, glancing at me, \"I talk. A lot. He craves a kind of... verbal interaction... during sex.\"\n\n\"Yeah,\" I say, nodding and trying hard not to smile.\n\n\"With him... with him and I, I mean, it's almost... degrading? I kind of ride him down? You know?\"\n\n\"Yeah.\"\n\n\"And I love doing that because it gets him off. I like how powerful I feel when I make him cum. Like he has no choice in the matter. Like I'm a force of nature.\"\n\n\"Yeah,\" I say, nodding and trying really hard not to imagine the way his face stretches out when he cums. The way he\u2014\n\nFocus.\n\n\"A big part of what we've done,\" she says, pointing back and forth at the two of us, \"has kind of come from that same place. I'm not proud of this, but I've kind of been trying to figure you out using what I've learned with Calvin.\" Her voice lowers a little as she continues. \"I... I picked a fight with you today hoping that... it... yeah. That it would lead to us fucking.\"\n\nI nod calmly.\n\n\"I had this feeling, the whole time... I don't know. I guess you could call it dissonance. I wanted us to have a moment, and I wanted it to be intense, and I wanted it to be... passion-fueled. In my head, I was checking off all the boxes from my list, but not once during that did I feel turned on.\n\n\"And that's not your fault,\" she continued. \"I was dictating the conversation and I was nowhere near the right headspace myself... until the very end.\" She looks down and sighs. \"When you had my... my...\" She touches her shoulder and reaches her right arm between her back and the chair. \"...with one hand... and my hair in the other hand? And you said 'Is this what you want?'... or maybe 'This is what you want?'. Yeah.\" She nods slowly, and looks down. \"I've... I've never been more turned on in my entire life.\"\n\n\"Really?\"\n\n\"Just... just instantly. Instantly turned on.\"\n\nI sit up a little, tilting my head, and try to focus on listening. It takes all of my willpower not to be helping her probe the mystery, but I know that adding my own questions will get in the way of her self-discovery.\n\n\"If it had just been this one time, I might have interpreted that as me enjoying feeling helpless.\" She looks up at me and licks her lips. \"Being physically overwhelmed. You... you handled me... easily. In hindsight, I can tell you I was impressed, but in the moment all I could think was 'Yes. This is what I want. Fuck me now.' \"\n\n\"Okay,\" I say slowly.\n\n\"But it wasn't just this one time. I... I like...\" She swallows hard, and puts all of her focus onto the corner of the table. \"I like pain.\"\n\n\"Oh.\"\n\n\"I've never said that out loud.\" She takes a few slow breaths. \"I... like pain. Pain helps me focus. It-it... it drowns out everything else, and... and-and the rush of endorphins, and... It hurt, and I wanted more. I wanted it to hurt more.\"\n\n\"Okay.\"\n\n\"I wanted you to keep going. I wanted you to... to mix those feelings, those sensations, and...\"\n\nI nod, watching her without really seeing her as my own focus shifted inwards.\n\n\"It's not even just that I've never said it out loud. I've never really even let myself think about it. Not really. It would be more like... that I'd, you know, jam my thumb in a drawer, and that... that throbbing would... I'd have to tell myself 'this hurts.' \"\n\nI bite my lip and lean back in my chair. She looks over at me, briefly noting the shift in my posture, and her cheeks color.\n\n\"That's what you want?\" I ask quietly. \"You want me to hurt you?\"\n\n\"When you put it like that, I\u2014\"\n\n\"Say it.\"\n\nSusan looks down at the table and swallows hard. \"I w-w-want you to hurt me.\"\n\n\"You want to put yourself in my hands.\"\n\n\"Yes,\" she says, closing her eyes.\n\n\"Just like Calvin puts himself in your hands.\"\n\n\"Yes,\" she says, nodding.\n\n\"Just like I put myself in Calvin's hands.\"\n\nShe opens her eyes and looks at me, blinking. \"I... I didn't...\"\n\n\"I didn't either,\" I say. \"Not before now.\"\n\n\"I didn't\u2014\"\n\n\"I know.\"\n\nShe stares at me unblinkingly, her mouth hanging open ever so slightly.\n\n\"I can do that,\" I say, breaking a long silence, and Susan's chest jerks in suppressed hysterics. \"There's different types of pain. There's... dull pain. Widespread and throbbing. There's acute pain. The sharp sting of a slap... or a spank.\"\n\n\"yes,\" she says softly, lips barely moving.\n\n\"There's... I don't even know what the word is. Things? Canes. Stuff like\u2014\"\n\nBut Susan is already shaking her head. \"I'm turned on by the idea of it happening... at your hands. Does that make sense?\"\n\n\"So... intimate.\" I scoot a little closer, and she nods. \"Some pain, but not an abundance of it. Not so much that I need a tool to inflict it.\"\n\n\"Yes!\" she says, almost breathily. Excitedly. \"Yes.\"\n\n\"You know,\" I say slowly, \"when I had you bent over that table...\"\n\n\"Mm-hmm,\" Susan says, nodding slowly.\n\n\"Just physiologically speaking, it takes a little longer for me to... to be ready to go, but I was... I was...\"\n\n\"Really?\"\n\n\"Really.\"\n\nSusan covers her mouth as she relaxes into the seat.\n\n\"I wonder if I have... like... a little sadistic streak in me? And I just never knew it?\"\n\n\"Maybe?\" she says, almost hopefully.\n\n\"Would you like to find out?\"\n\nShe blinks for a few seconds more before nodding. Slowly at first, and then more emphatically. I stand up, and she bounces out of her chair to meet me, but I press my hands against her shoulders.\n\n\"Just to be clear,\" I say, looking her dead in the eye, \"I'm not interested in the pageantry of BDSM here. I don't need you to make a show, and I really don't want to use a safe word. If it's the wrong kind of hurting, just say so.\"\n\n\"I can do that,\" she says whispers, eyes shinning.\n\n\"I can't have you to pretend to not enjoy it as part of enjoying it. Maybe we'll get there, but for right now I need you to be crystal clear with me.\"\n\n\"I will be,\" she says, nodding and smiling. \"Crystal.\"\n\nI bite my lip and look around. \"The table,\" I say, pointing. \"Bend over the table.\"\n\n\"You mean like\u2014\"\n\n\"Wait.\"\n\nShe stops and looks at me, blinking nervously, as I inspect her. Susan is still wearing everything she wore on the drive up. A Carhartt jacket and jeans with a pair of boots. If I'd been less focused on being so angry with her earlier, I might have known we were heading someplace woodsy. I brush her hands apart, away from the center of her chest, and unzip her jacket. She takes over from there, spreading it and sliding it back off of her arms while I set to work on the buttons of her plaid shirt.\n\nLater, I'll spend some time thinking through how she pulls off such varying styles as elegant metropolitan and ready-for-anything outdoor wear. I could learn a lot from her.\n\nAs soon as her jacket is off, she takes over on the buttons and I shift down onto one knee. Opening the fly and unzipping her jeans with zeal. I have them sliding down her thighs while she's wriggling out of her shirt. I don't bother untying her boots; I just grab at the heel and pull, and the whole thing slides off. She gasps softly as I toss the boot across the bare floor, across the room, and plants one socked foot down on the ground. Off comes the last boot. Off comes her jeans. Her bra is just a memory by the time I look back up.\n\nSusan looks good for fifty. She doesn't look young, or that she's hiding her age in any way, but she's in shape and she's comfortable in her skin. I find myself murmuring, \"I would be lucky to look as good as you do when I'm your age,\" without really intending to.\n\nSusan looks timid as I stand up in front of her. Like she's never been truly naked. It's intoxicating to think that she's nervous about having me see inside of her. Having me see behind the mask, or the armor, or whatever her metaphor of choice is. I can't wait to find out what her metaphor of choice is. In my heeled boots, I'm just slightly taller than her, and I love the way her eyes come up. I extend my back, using phrasing I've rolled my eyes at in yoga to stretch and elongate my neck, and the straighter I get the more Susan shrinks.\n\nIt's fucking intoxicating.\n\n\"Over the table,\" I say, and Susan moves to do so. I step behind her, sliding the chairs out of the way, and unwrap my scarf from around my neck. My light jacket comes off next, followed quickly by my blouse and bra. All the while, I'm pacing back and forth behind her. Just entering her field of view, with her head sideways against the table, before turning back around so all she can hear are my boots. I know I said I wasn't interested in the pageantry of BDSM, but I'm finding the buildup to touching her the first time to be absolutely delicious, and if the way she's trembling is any indication so is she.\n\nI run my hands over my tummy, coming up to cradle and gather my breasts in my palms, and stop behind her. Directly behind her. I kind of love the idea of fucking her in my boots. They give me just the right amount of lift. Susan shudders as I press into her, bulging denim burrowing between her pale, dimpled cheeks.\n\nI take her by the hips and turn her slightly, so that her waist is pressed into the end of the table next to the corner, and her upper body is parallel to the tableside. Her eyes close as I lay my palm against the soft curve of her left cheek and massage it in circles, and it's stunning to watch her brace herself when I pull my hand away.\n\nHer whimper at that first spank, barely more than a strained exhalation, is a stunning revelation. About her, and the way she lets it happen. The way she clenches her thighs and buttocks for just a second. About me, and the way my chest swells. The way my blood surges in my veins, and elsewhere. I put my palm right back on her, keeping in constant contact with point of impact.\n\n\"Harder,\" she says softly. Blushing powerfully. \"Please.\"\n\n\"You don't need to beg,\" I say, just before bringing my curved palm down hard on the same spot.\n\n\"Oh,\" she whines, squirming as I massage the same spot again. \"Oh!\" A third spank, and her skin colors. A fourth, each landing progressively harder. Susan grits her teeth together and groans. After the fifth spank, she moans much more loudly. The way her voice echoes in the empty space sends a shiver up my spine.\n\nMy nipples begin to ache in the cool air, feeling it very strongly, and I moan when I realize how hard they are. How turned on I am. Curiosity has my fingertips gliding between her folds, and I think we're both shocked at how wet she is. I come around beside her and lean over her back so that I can hook my left arm around her hip and bring my fingers back to her inner lips. Two fingers delve gently into her channel, and Susan gives off a long, warbling moan when I bring my palm down hard.\n\n\"Yes,\" she groans, wiggling her hips back into my hand. \"Just like\u2014\"\n\nBoth fingers push inside of her at the same time that my palm crashes into her cheek again. Her flesh ripples, deforming momentarily from the magnitude of the impact, and Susan mewls wordlessly.\n\n\"You can go harder,\" she whispers softly.\n\n\"What?\" I ask loudly, craning around.\n\n\"Har... Harder.\"\n\n\"Speak up.\"\n\n\"Harder.\"\n\nI stop and move alongside her, and lower myself into a squat. \"Own it,\" I say. \"I'm not going to judge you.\"\n\nShe closes her eyes and opens her mouth. \"Ha-haa-aarder.\"\n\n\"Feels like letting go, doesn't it?\"\n\n\"Mmm-hmm,\" she says, nodding.\n\n\"It hurts just to say it, but once it's out there... once you put it in my hands, it can feel so good.\"\n\n\"Harder,\" she says, finally managing a volume closer to her normal voice.\n\n\"Good,\" I say, standing back up. I run my hand over the bright red spot on her cheek, but this time when I rear back, I bring my flattened hand up between her thighs and deliver a thunderous spank directly over her pussy. Both of Susan's legs wobble and give, knees coming in together to trap my wrist between them, and the full-throated cry she lets out is so musical, so layered in textures and tones, that I can't help but hum my own little tune.\n\n\"Fuuuuckfuckfuckfuck,\" she moans, writhing back and forth on the table. Her legs separate slowly, and I let my fingertips dance through her fields as I pull them back. \"Fuck me. Fuck me.\"\n\n\"Is that a request?\" I ask, lip curling slightly in detached amusement, \"or are you just-\"\n\n\"Yes fuck me please fuck me,\" she groans. The entirety of her left hand is pure white, gripped tightly on the edge of the table. I unzip my own jeans and push apart the fly. Just far enough that I can reach in and pull out my cock. After a second, I pull out my balls too, small though they may be. Susan peeks back over her shoulder at me and shivers, and the moment stretches out.\n\nI feel strong. I feel beautiful. More than that, though, I feel... something else. Something I felt before, in the hotel room, when Calvin curled over me on that bed and pinned me beneath him. It's the same and yet completely different. It feels like purpose.\n\n\"Please,\" Susan whimpers, and I rejoin the flow of time.\n\nMy hand is back on her cheek as soon as I step up behind her. She twitches, frazzled nerves flinching away from the jagged sensation even as she leans into it, and into me. I press my thumb down on the top of my shaft and guide it between her cheeks. Not toward penetration, not right away, but letting her acclimate to the girth. Lengthwise. She clenches, squeezing around me and swallowing most of the length between her flesh. I give her another sharp spank, a glancing tap with no follow-through, and she releases me with a yelp.\n\nThis time I push the head down, sliding it down past her pucker to the wet folds below. I lean back slightly and grip her cheeks tightly, spreading her so that I might admire the sight of her darker hole. It's tempting, and even though the lube in my bag isn't technically that far away, I can't imagine not being inside of her right this very fucking\u2014\n\n\"Ooooh,\" Susan moans, as my head slips deep inside her walls. Filling her with excruciating slowness. Slick velvet wraps around me, cradling me warmly. I spank her left cheek again, more emphatically, and she clenches me tightly within herself. Her body drawn taut like a bowstring.\n\nI press the pad of my thumb down into her cheek, into the welt, and Susan's knees buckle. If it weren't for the table beneath her, she'd have fallen. Her full-throated bellowing fills the space around us, and she slams one of her own fists down into the table in agonized frustration.\n\nBut she doesn't say stop.\n\n\"It's... fascinating... the way flesh swells and expands as a reaction to stimulation,\" I say, my eyes unfocused, as I knead my thumb into her cheek. There are tears in her eyes as she looks back and me and nods, and just like that I am soaring. Flying higher than I have ever dared. It's incredible to me how little encouragement I need.\n\nI come to rest against her, hip bones pressed into the tops of her thighs, and slide my right hand up the length of her spine. She shivers as I knit my fingers into her white-blonde hair, and roll my wrist to gather more of it around my fingers in a loop. She grits her teeth and whines as I pull her head back until it's nearly perpendicular to her chest, with my clenched fist drawn tight against her scalp. A thousand tiny strands tearing at her.",
        "\"Yes,\" she squeals, as she claws at the table. \"Oh God yes!\"\n\nI twist at the shoulder, pressing my right arm down along her back to keep her neck arched and her torso flat against the table, so she doesn't roll backwards. I make a mental note to revisit as much of my Akido classes as I can remember to see how else I can use her body against her, but it needs to be something I do later because I can't stop myself any longer. I can't hold back. Susan groans, layered between her hissing breath and her high-pitched mewling, as I roll my hips. Fucking her, thrusting in and out of her, but keeping the focus elsewhere.\n\nShe wails as I spank her again, only overlapping the very edge of the spot I'd singled out before, though my hips keep a constant pressure on the center of the bruise A second spank, the hardest yet, and my hand is absolutely throbbing. I can feel my own pulse in my fingertips, and it's electric. It's eye-opening.\n\nIt's incredible.\n\n\"Yes-yes-yes,\" Susan squeals, finally pulling words through the stew of hormones drowning her system. \"Harder!\" She can do little but cling to the table as I pull, thrust, and abuse her flesh. As I flood her nervous system. \"Harder!\"\n\nI spank her three times in rapid succession, bringing a deep, blushing red hue to her left cheek, and Susan groans ferociously. Heaving. Her spine twists and curls as she cums, and I push her through it without respite. Keeping my wrist tightly twisted, and my knuckles pressed against the back of her skull. Keeping my hips going.\n\nFaster through the hips.\n\n\"Yes!\"\n\nFinally pulling back enough that there's a sliver of space between our hips before crashing back into her.\n\n\"Yes!!\"\n\nPure instinct guides me to ease off the accelerator, relaxing my hold and slowing everything down, but as soon as she can breathe enough to see straight, Susan reaches back and behind herself to grab at my arm. She moves with less composure than I'm used to from her, but with no less intensity, as she pushes me backwards onto one of the kitchen chairs. I blink, trying to clear away a haze of euphoria, though I know I didn't cum, and she's on me in seconds. Straddling me in the chair. Feet perched on the little bars that run between the chair legs. Her breasts, larger than mine and beautifully lowered with age, press into my face as she tucks her shoulders inward. She lifts herself, just for a moment, and reaches between us to guide my cock right back inside her, and we both gasp. I squirm back and forth, slouching little by little to try and get further underneath her, and moan as just a tiny bit more of me finds a home inside her.\n\nI'm not getting rid of it. Not now. Not ever.\n\nShe cradles my jaw in her hands, keeping my face up toward hers. Her thighs pop and flex as she bounces in my lap, knees spread wide to either side.\n\n\"Look at me,\" she whispers. \"Look at me.\"\n\n\"I am,\" I croak.\n\n\"Look at me.\"\n\nAnd then I do. At the way her face lengthens when her mouth comes open. At the way her mascara has streaked. At the way her hair, which always frames her face just so, is all out of sorts.\n\n\"This is what you do to me,\" she whispers.\n\nIntuition brings my right hand around behind her hip like a whip, and Susan howls. Fresh tears sparkle in her eyes as she leans forward to kiss me. Neither of us can manage to maneuver our tongues, doing all we can to control our hips and hands, but the wetness on her lips isn't all saliva.\n\n\"Again,\" she hisses. My hand is numb, though I can feel each impact through my wrist. Through the bones, and the way she whimpers. \"Fuck! Again!\"\n\nShe leans past me, tucking her head over my shoulder and wrapping her arms around the back of the chair. Hugging us both. Clinging for dear life as she rides me. Her chest swells and retracts too quickly for breath. My eyes bulge when I feel her sobbing. Crying as she cums again. Internally, I acknowledge the urge to slow down and embrace her, but ultimately I lean on my trust in her as I bring my aching hand in again and again.\n\nSomewhere in the middle of her hysterical moaning, I hear it; a 'stop' almost indistinguishable through the rest of her moaning, and I bring my arms around her ribs. Clinging to her as she spasms. Kissing her shoulder.\n\nI am her anchor. I am her tether.\n\nHer eyes are completely bloodshot when she leans back for the first time. Hesitant to meet mine, but searching for them all the same. Afraid. I don't trust my screaming right hand to be steady, and instead bring the left up to touch just the tip of her chin. She whimpers as I lift and center her, facing me, and kiss her softly.\n\n\"Yes,\" she moans into the kiss, without her lips breaking from mine. \"Oh thank god.\" More kissing. No tongue, though our heads tilt slightly to either side as we come back together. \"Oh god.\"\n\n\"Hello,\" I say, when our foreheads finally touch.\n\nShe squeezes her eyes shut and nods, unable to summon the words.\n\n\"Are you okay?\"\n\n\"yeah!\" she gasps weakly. She nods jerkily, as if worried that her unsteady delivery would undermine her point. \"Yeah. Yeah.\"\n\nI run my hands up and down her back, though I can't really be sure the right hand is touching her. Feeling hasn't returned yet. Susan bites down on her lip and sighs.\n\n\"Are you still cumming?\"\n\n\"Ye-yes. Yes. Yes.\"\n\n\"Holy shit,\" I whisper. I run my hands down past her hips, and curl them around her thighs. She groans, clenching even tighter around me for a moment, and gives a long, drawn out sigh.\n\n\"Did...\" She blinks and licks her lips. \"Did you cum?\"\n\nI shake my head.\n\n\"No?\"\n\n\"No,\" I say, smiling softly. \"But it's okay.\"\n\n\"But\u2014\"\n\nI let go of her leg and lay a single finger over her quivering lip. \"No. Not right now.\"\n\n\"But\u2014\"\n\n\"No.\"\n\nShe blinks at me, utterly perplexed, and I smile broadly.\n\n\"Trust me. With the way I feel right now? I don't need it.\"\n\n\"Really?\"\n\nI nod. \"Besides,\" I say, leaning in until her eyes cross slightly, and the tips of our noses touch. \"We have the rest of our lives for me to fill your every hole with cum over, and over, and over.\"\n\n\"Thank you,\" she sobs, hugging me with every part of her body. \"Thank you.\"\n\n***\n\n\"Are you sure you don't need any of this stuff?\" Eve says. \"Because once it's on my property for 24 hours, it's mine.\"\n\n\"I'm sure,\" I laugh, as I hug her again and try not to cry. \"I'm sure.\"\n\nEve grins as we separate, and gives me a meaningful arch of her eyebrow as she watches Calvin take the last two boxes out the door. \"He is\u2014\"\n\n\"Back off, slut.\"\n\n\"Bitch,\" she fires back, tossing her head like the sassy little thing that she is. Her freshly-dyed pink hair falls in envious waves, and I let out a long breath as I look around. Mentally going through my list again. \"I'm not actually going to steal any of your stuff.\"\n\n\"I know.\"\n\n\"Just text me if there's anything you think of.\"\n\n\"Okay,\" I say, taking a half step toward the door. \"Remember, no wild parties. Mrs. Yanov will complain.\"\n\n\"I know,\" she groans.\n\n\"And\u2014\"\n\n\"Oh-my-god-fucking-go-already!\"\n\n\"Love you too,\" I say, hugging her again.\n\nShe follows me to the door and waves. \"And for the record,\" she shouts down the hall, \"I'm fucking, like, half the number of people you are\u2014\"\n\n\"Oh my god,\" I groan, cheeks blushing, as I scurry away.\n\n\"\u2014so if either one of us is the slut, it's you!\"\n\nCalvin is waiting in the elevator, holding the door for me, and I sigh happily as I slip inside with him. The moment the door closes I pounce him, but in the span of a breath it's my back against the wall. The feel of his weight surrounding me is just...\n\n\"Do you need to see the landlord before we go?\" he asks, several beautiful seconds and one toe-curling kiss later.\n\n\"No,\" I say, trying to hide how eager I am. \"I talked to him when I got here earlier, and he confirmed it was fine for her to take over the lease.\"\n\n\"Has your sister ever lived alone before?\"\n\n\"She'll be fine. As long as she doesn't burn the place down.\"\n\nCalvin laughs for a moment, and then stares at me quizzically when I don't laugh too.\n\n\"It was a phase.\" And then it hits me. \"Oh!\" I cry. \"Oh oh oh!!! I know what it is!\"\n\n\"What what is?\"\n\n\"The painting! The unfinished one! It's not a balloon, it's a flower!\"\n\nCalvin smiles and stands up a little taller. \"Okay,\" he says easily. \"Can't wait to see it.\"\n\n***\n\nEpilogue\n\nCalvin does his best not to stare at me as his lecture hall slowly empties. I lick my lips and grin. There's a humorous observation buried somewhere in the other students' eagerness for the bell to arrive so they can rush off to whatever mindless self-pleasure they have lined up for themselves. When I was actually a student in Calvin's class, I would have been just as happy if the bell had never come.\n\nI mean, it's not actually a bell. It's some kind of buzzer, but the point is the same.\n\nHe smiles as he collects his papers from across the desk and organizes them. Taking his time. A few other students linger, talking in a small group. I can't hide the smile when I realize one of them is staring at Calvin. Believe me, sister, I get it. I stay in my seat though, slightly slouched with my legs crossed, and wait patiently. Eventually my patience is rewarded, and Calvin is cool as the last three students leave through the side door.\n\n\"What did you think?\" Calvin asks, pitching his voice up.\n\n\"Hemingway never sounded sexier.\"\n\nHe laughs, shaking his head, and glances around at the doors again. \"I was surprised to see you sneak in the back there.\"\n\n\"I was hoping you wouldn't spot me right away, so I could really surprise you.\"\n\n\"That would only work if I was doing slides,\" he says, gathering each organized stack and collecting them into his briefcase. \"If you'd like, I can make some notations on your syllabus so you know when those are coming up.\"\n\n\"I'm sorry, Professor,\" I say, shrugging in faux-innocence. \"I think I forgot my syllabus!\"\n\n\"Well...\" He looks down into his bag and runs his fingers through the paper. \"Why don't you come on down here and get another one.\"\n\nI skip down the steps of the theater-style lecture hall, and Calvin stares hard when my short skirt pops up enough to show that I'm not wearing any underwear. It's hard to hide the grin and stay in character.\n\n\"Hmm,\" he says, staring down at the paper with a highlighter in his hands. \"The only ones I have left this semester are on Tuesdays...\" Tuesdays are nights I spend with Susan. \"I may have to restructure this a little...\"\n\n\"You don't have to do that,\" I say, sliding up next to him and dropping my voice. \"Seriously. I don't mind just\u2014\"\n\nHe turns and looks down at me, smiling in amusement, and everything else falls away.\n\n\"Okay.\"\n\nCalvin looks back down at his syllabus, and I can feel my skin glowing. It's a wonderful feeling to be important to someone else. To know that they can and will make changes in their life for you. I would never expect it from him, or Susan, but for them to do it anyway feels amazing. But then, I know I've rescheduled quite a few things myself.\n\nThat felt nice too, making changes for them. It felt good to give and know, in my bones, that I would receive in return. Which is really what relationships are all about. Making space for other people.\n\nHe looks at me again, and the butterflies start fluttering in my middle. Hundreds of thousands of them.\n\n\"Oh whoa,\" I say, glancing down. The lecturer's desk at the front of the class has a leg space in between two sets of drawers, and it's shockingly spacious. \"I could totally fit down there!\"\n\n\"You... could,\" Calvin says, blushing as he smiles, and before he can do much more than that, I scurry underneath his desk.\n\n\"Wooow.\" I spin around and settle on my knees, enjoying the sheltered feel. The wall at my back, toward where all the students would normally sit, is completely covered. \"I could seriously give you a blowjob from down here, and nobody would know I was here!\"\n\nCalvin just bites his lip and blushes, and every third or fourth second looks away to check the doors.\n\n\"I always thought this was one of those things that didn't really exist,\" I say, wiggling my hips. \"Like at weddings, how nobody ever really says 'If any of you has reasons why these two shall not be wed, speak now or forever hold your peace.' \"\n\n\"Why wouldn't there be a space for my legs?\" he chuckles. \"I have a stool.\"\n\n\"I don't know! I just thought they built these things without this back wall here,\" I say, slapping the board behind me gently with my palm, \"to, I don't know, encourage a little transparency?\"\n\n\"Well obviously they built this one with you in mind.\"\n\n\"How thoughtf\u2014\"\n\nSuddenly, Calvin steps forward a half second before the squeak of hinges echoes through the large room. Chills. Powerful chills. The desktop comes against his waist, just above his belt, and for a moment, there's nothing but fear.\n\n\"Um... Professor?\"\n\n\"Yes... ahhh... Angelica?\"\n\n\"I um...\"\n\nI don't recognize her voice. If it's one of the girls from the class that just let out, it isn't one that asked any questions. I've never felt so bold as I do when I reach up for Calvin's zipper. His legs twitch and stiffen as I start pulling down as slowly as I can manage, with one hand cupped around the zipper to try and muffle the sound even more. I have no idea if that's actually helping, but it feels like it might.\n\n\"I've never actually read any Henningway. Are we going to be spending a lot of time on him?\"\n\n\"Well, not a lot, per se, but he's a personal favorite of mine. I think he does a lot of interesting things with structure and narrative. Some of his short stories are really... um...\"\n\nI use both hands, as I pull his cock out, to keep the rapidly-thickening shaft away from the teeth of his zipper, and lay the cockhead on my tongue. The heady taste is like ambrosia, and it fills me with a kind of serendipitous joy. I have to tilt my head to the side to get much more than that in my mouth, but a little contorting is a small price to pay for the experience of hearing Calvin's voice break. The girl's heels thud dully against the carpeted steps, but each one is one step closer as she continues approaching the desk and my enthusiasm skyrockets as the threat of being caught increases.\n\n\"Do you think you could recommend one for me?\" The inflection, the upticks in her voice; she's hitting on him. \"I hear people talk about him, and I don't feel like I know enough about him. I just don't know where to start.\"\n\n\"Tell you what,\" Calvin says. He leans forward onto the desk and crosses his arms at the edge, all of which pushes his hips back ever so slightly. The closer I get, as I take more of him into my mouth, the more I'm exposed from the sides. The threat of exposure is so invigorating as to be nearly overwhelming. It's so distracting that I almost forget to spend any thought on using my tongue the way he likes.\n\nAlmost, but not quite. Calvin likes being deepthroated, and really likes watching his whole shaft being swallowed, but on pure sensation nothing beats running my tongue around his head with gentle suction. Teasing the underside, where the swollen head comes around but doesn't quite meet back up. Using the texture of the roof of my mouth, and my tastebuds, to my advantage.\n\nCalvin clears his throat and laughs. \"Why don't you try 'A Clean, Well Lighted Place.' It's not too long. It can be a little dense, but it's pretty interesting. He does some, uh... some... some neat things with the voices of his main characters.\"\n\nThe hitch in his voice is so thoroughly fulfilling that I have my right hand wrapped around my own cock without realizing it. My body reacts so instinctively to Calvin, and while that can be incredibly scary at times, he's yet to abuse or misuse that trust. It's part of why I feel so safe with him.\n\n\"... well... lighted... Lighted?\"\n\n\"Yes,\" Calvin says. \"Well-hyphen-Lighted. Place.\"\n\n\"A Clean, Well-Lighted Place.  Got it.\"\n\n\"I think you can find it online for free, and I'm sure the library has it in one or two anthologies of his work Let me know how you like it! I'd love to know what you think about the waiters.\"\n\n\"Okay!\" she says, with the sound of her voice shifted in that way that betrays the smile on her lips as she says it. \"I will!\"\n\n\"See you next Tuesday,\" Calvin says, to the retreating beat of feet in heels.\n\n\"Thanks Professor!\"\n\nI take the squeaking hinges as a sign and lean into it, driving my nose into the fly of his pants and his cock into the recesses of my mouth. Taking him as deeply and completely as I can. It's incredible to feel how that puts a quiver in his legs. For a moment, I know that feeling of power Susan talked about. The strength that comes with making Calvin cum and cum hard.\n\nBut then his palm comes down on the back of my head, and that goes away completely. I try to look up at him, through my twitching, fluttering eyelids, and Calvin smiles.\n\n\"Why don't we go back to my office?\"\n\n\"Mmmm-hmm!\"\n\nHe shifts his hips forward, pushing his head into the back of my throat one more time, before gripping my hair and keeping me in place while he draws back. Precum on my tongue. Even when he lets go of my head he leaves his hand out in offer to help me up from my knees, and I blush profusely.\n\n\"Such a gentleman!\"\n\n\"Not for much longer,\" he says, lowering his voice needlessly; the room is still empty. He keeps hold of my hand, and scoops up his briefcase with the other as he leads me toward the door. I follow right behind him, trying hard not to bounce with each step. By the time we get out into the hall, we're more presentable. I move to walk beside him, no longer holding his hand, as he threads through the students lingering here and there. I know from experience how quickly he usually takes stairs, two at a time, and it's a wonderful feeling when he slows down to take them only as quickly as I do. Which isn't particularly fast. Heeled boots are perfect for a multitude of situations, but stairs aren't exactly one of them.\n\nThankfully there are no students waiting outside his office, and Calvin quickly steps in and to the side to shut the door as soon as I follow him in. He points behind his desk as he sets down his briefcase, and my heart skips a beat as I catch him unfastening his belt.\n\n\"Oh Daddy,\" I murmur, as I lean forward to rest my elbows on an empty space amid the clutter.\n\nHe just smiles and offers it to me. \"You might want something to bite down on,\" he says softly. \"The walls aren't too thick in here.\" I swoon as I take his belt and place it between my teeth.\n\nCalvin wastes no time flipping my skirt up over my back, exposing my ass. I cross my legs at the ankle and roll my hips, and giggle at the look in his eyes as he stares down at me; he wants to devour me, and I want so badly to be devoured.\n\nHe tips a pink-and-purple bottle upside down and I gasp as a few drops of cool, thick lube pours down between my cheeks. Sliding quickly between my pale orbs until Calvin's thick index finger presses in to catch and redirect it. I groan softly, biting down hard on the leather belt, as his finger breaks through. Spreading the lube and stretching me. I look back at him, neck craned sharply, and grab at my left cheek to spread myself for him.\n\n\"Oh wow,\" he groans, eyes bulging.\n\nThe sight of his cock, hanging out through his pants, is incredible, but it is nothing compared to the feel of his cock, hanging out through his pants, as it pushes against my well-prepared asshole. It's gentle but unyielding, and his head is significantly thicker than his finger. My eyes roll up and I groan again, louder, at the feel of his cockhead sliding through the inner ring. The swollen, mushroomed tip. Inside of me.",
        "His head inside of me.\n\nHe grabs my wrist, the one holding my own ass, and redirects it around in front of my own waist, and I need no more direction than that to know he wants me to be touching myself. Both of his hands come down to grab my pale cheeks, fingertips near the sides of my hips with his thumbs stretched near to the center to keep me spread. To keep my bubbly-round ass out of the way.\n\nHe stays there, with just his cockhead inside of me, for a few moments, and it dawns on me that this is one of those moments that heeled boots actually are perfect for. Or at least, that's what I was thinking about before he buried himself in a single thrust. His whole cock. All at once. I moan loudly, neck straining as I try to channel as much of that as I can into the belt between my teeth, but there's only so much of myself that I can control when he has his hands on me. And he knows that. And he loves that. And I love that too.\n\n// Author's Note //\n\nIt's taken me quite a while to get this whole story out of my head and onto (metaphorical) paper. I'm incredibly appreciative for all the readers who've stuck with it and especially for all the readers who voted for the previous chapters. Please take a minute to vote for this (especially if you liked it (and vote for the previous chapters if you haven't already!!)), and leave a comment if you are so moved to do so. You'll make my day.\n\nThis story, more so than others I've worked on, really helped me come to terms with some internal things I've been grappling with. I hope that I've done a good job here rendering layered characters with the right tone. Although I personally am not an MTF transsexual, this story has helped me feel more comfortable with myself as a complex human being. If that resonates with even one other person out there, then I'll sleep really well.\n\nCheers!\n\nDoc"
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "trans",
        "transgendered",
        "mtf",
        "trans on girl",
        "mtf trans",
        "trans on guy",
        "pain play",
        "poly",
        "polyamorous"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/orchid-ch-03"
}