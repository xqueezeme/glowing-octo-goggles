{
    "title": "There and Back Again Ch. 162",
    "pages": [
        "Chapter One Hundred Sixty-Two: Birthday Surprise\n\n\"Faren?\" I called. \"I've brought you a visitor.\"\n\nAnd then I stopped, because a mostly-naked Faren was perched on the side of his bed, a basin of steaming water on a nearby table, washing himself with shaking hands. Because of course he is.\n\nI heard Sigrun squeak, and I slapped one hand over her eyes, the other over my own.\n\n\"You could have asked us to wait!\" I scolded him. Well, that's a sight I can't un-see!\n\n\"I did,\" he croaked, voice hoarse. \"You just couldn't hear me.\"\n\n\"What in the world is wrong with your throat?\" I turned around to face the door, pulling Sigrun with me and dropping my hands.\n\n\"Donal said it's just overuse after too long not using my voice. I guess it was noisy last night -- I must have been yelling.\"\n\nI heard a yelp; before I could even think to check, Sigrun had darted over to the side of the bed, catching the weak, over-balanced dwarf before he could fall. She helped him lay back, lifting his legs for him, and he pulled the blankets up self-consciously; both dwarves were scarlet-faced and avoiding eye contact.\n\n\"Thanks,\" Faren muttered, mortified, and Sigrun grunted in response, gruff in her embarrassment.\n\nI couldn't help the laugh that bubbled up from my belly. \"Well, now you two have officially met. Faren, this is Sigrun. She was recruited from the Legion of the Dead. And she's been helping take care of you since we were rescued.\"\n\nSigrun shot me a dirty look while Faren's was more quizzical -- then both forced neutral smiles onto their faces, turning to greet each other for the official first time.\n\n\"Thank you,\" Faren smiled more sincerely now. \"You didn't have to do that, but I appreciate it. Donal tells me that if I hadn't been cared for so well, I'd be having a lot more trouble with my recovery.\"\n\nSigrun blushed again. \"It was nothing. It needed to be done, that's all.\"\n\n\"Well, I owe you one, anyway. So - Legion of the Dead and a Warden, hey? I didn't know you could be both.\"\n\nSigrun responded, explaining her unusual circumstances to the recently-comatose Warden; I watched them talk for a few minutes before slipping out silently once it was clear they'd both relaxed somewhat. That's all I can do for Sigrun -- the rest is up to them.\n\nI'd just sat down to start on my never-ending pile of paperwork when Seranni appeared at my door.\n\n\"Spar?\" she asked. \"Today is my last chance before we leave for the Deep Roads.\"\n\nThe poor girl looked positively grey at the thought of their trip, and I put my quill down with a sigh. \"Yes, please.\" I think we could both use the exercise -- and the distraction.\n\nI ran upstairs to change into armor, then met Seranni outside. To my surprise, the Tranquil recruit, Lana, was also there, wearing leather armour and awkwardly holding a small crossbow. Several bolts stuck out from the archery butts at odd angles.\n\n\"Greetings, your Highness,\" the pretty woman hailed me in her toneless, creepy voice. \"I apologise if I am in your way.\"\n\n\"Not at all.\" I worked to keep my discomfort from showing on my face. \"And please, call me Sierra. Don't let me interrupt you.\" I picked up a set of practice daggers and hefted them, testing their weight.\n\nThe Tranquil paused a moment, and I eyed her curiously. She was pretty -- taller than I, with gorgeous dark hair and alabaster skin, her frame a little curvier than mine. The sunburst tattoo on her forehead was faded, and her bangs covered it; when she smiled, though it seemed mechanical, you could almost mistake her for a normal person.\n\n\"Commander Aedan has directed me to attempt to learn more about hand-to-hand combat. Would I be permitted to join you?\"\n\nI took a breath before replying. I had to admit that, through no fault of her own, the former mage freaked me out. But that was hardly fair -- and she was about to go into the Deep Roads, completely unprepared and reliant on the rest of the group to defend her. \"Yes, of course.\" I handed her the daggers I held and turned to find myself another pair.\n\nI ended up spending more of my time teaching than sparring, watching Seranni and Lana and correcting their stances, shouting suggestions. We were joined by a handful of soldiers, and the two templar recruits -- Fred and George, I called them. Soon I had them all organised into pairs, matching them up with someone of a differing style on purpose, with the two red-headed templars aiding me. Neither Seranni nor Lana were going to be the champion fighters of their Deep Roads group, but I felt better that both had at least some chance of defending themselves if the worst came to pass. They're both better than I was at this stage!\n\nI was favourably impressed by the two former templars -- they were quite helpful, working with the warrior-types that I couldn't assist, demonstrating the techniques they were suggesting. And Lana was treated no differently than any other soldier by either of them -- nor did she hesitate to choose either as a partner when I gave her the choice. Here's hoping that means we got two of the good ones!\n\nMaeve, my elven maid, came to get me a couple of hours later. \"I thought you might want to get cleaned up before supper,\" she whispered to me, still anxious about not using a title when addressing me. It was an unusual suggestion, but she was strangely evasive when I tried to question her further. I complied, following her up to my quarters, shucking my armour and sinking into the bath at her direction, stressing about what it could mean. If someone jumps out of a cake yelling 'surprise', I'm not going to be impressed. I allowed the maid to fuss over me, washing and drying my hair and lacing me into a fancy dress I'd never seen before. It was beautiful, a deep blue that matched the colour from the Warden tabard, with a flowing, swirling skirt and a daring neckline. It fit like a glove, and I admired it briefly -- when I noticed Maeve pulling out an extensive array of cosmetics from a drawer in a side table I'd never looked in.\n\n\"I don't recall ordering these,\" I commented, more and more convinced a surprise party was in my future. \"I don't usually wear them.\"\n\nMaeve looked horrified. \"Of course you need them! You're a princess of Ferelden. You need to be able to look the part!\"\n\nI sighed glumly and submitted, allowing the woman to slather and dab to her heart's content. Being a princess is just as bad as I thought it would be. I tried not to grumble at the elf, who was probably just following orders, and I feigned approval of the image she showed me in a small hand mirror when she was done.\n\nAnd I did look nice, there was no denying it. Other than my engagement and my wedding, I hadn't dressed up much since coming to Thedas, and I couldn't help the genuine smile that nudged its way onto my face. Why am I being so cranky about this, anyway? Honestly. So what if it's a party, Sierra? For the first time in your life, you have people to party with. That's a good thing, stupid.\n\nI put on a pair of spectacularly Leliana-type shoes, some ridiculously frilly high-heeled monstrosities that had been dyed to match the dress. I raised my eyebrows at Maeve, who grinned impishly and pulled an envelope out of her pocket. It was sealed with wax, and I glanced at the imprint momentarily before stopping and looking again. What had appeared to be little more than a strange blob, on first glance, resolved itself into a tiny, surprisingly detailed...Maker preserve us, it's a nug.\n\nLaughing, I tore open the envelope and read the letter I knew could be from no one other than Leliana herself. And it was; she had sent two pages of elegantly swooping calligraphy -- embarrassing me with the contrast to my ugly, clunky scrawl -- detailing her travels for the past months. She'd gone to Haven initially, with a gaggle of Chantry scholars including Brother Genitivi; when they'd discovered that, as I'd predicted, the ruins were empty, the guardian and urn missing, she'd left the confused group under the guidance of some self-important, political figure named Roderick -- a rising star within the Chantry, she'd written, who'd irritated as many people as he'd impressed -- and had then gone to Val Royeaux, where she'd commissioned the dress and shoes for me. I smiled down at the smooth fabric draped around me, both amused and secretly pleased that she'd remembered my birthday. And then immediately felt guilty -- I didn't have the slightest clue when the bard's birthday was. Nor my husband's, if I'm honest.\n\nI put the letter aside for more thorough reading later, resolving to write to the Grand Cleric and wheedle Leliana's birthday from her...and to find out Alistair's -- and Zev's -- from Aedan before he left for the Deep Roads. I'd just stood up when Alistair bustled through the door of our suite. He stopped in his tracks when he saw me, and I smiled as he examined me with surprise -- and no small amount of lust -- on his face. Without saying anything, he finally came up to me, wrapping his arms around me and pulling me in for a passionate kiss. I returned it, giggling against his lips as he squeezed me closer to him, one of his hands cradling my nape and the other clutching my waist possessively.\n\nThe kiss didn't let up until we heard poor Maeve clear her throat loudly; Alistair pulled away just slightly, pressing our foreheads together, his face flaming as he realised we hadn't been alone. I wrapped my arms around his neck, tilting my head just enough to catch the elf's eye. \"I believe that's about as solid an endorsement of your skill as you're going to get.\"\n\nMy maid laughed, giving us that same big-eyed, cutesy look most people reserve for babies, or puppies; I stuck my tongue out at her as Alistair grumbled something unintelligible and pulled away.\n\n\"Yes, well, now that I've totally embarrassed myself, if you would excuse me...\" he whined, shooing the petite woman towards the hallway, shutting the door in her smirking face. \"I need to get dressed.\"\n\nI giggled and sat down to watch him, dog-whistling with appreciation when he shucked his tunic and began hastily wiping himself down with a washcloth and my little shower head. He rolled his eyes good-naturedly at me, before working his way into new, dark grey trousers and doublet with a blue formal shirt that matched my gown underneath. I teased him as he messed with his hair, but finally we were both ready, and he held his arm out for me chivalrously.\n\n\"So, are you going to tell me where we're going now?\" I grumped, though I couldn't entirely hide an indulgent smile.\n\nHe grinned at me, and then pulled me in quickly and kissed me breathless before resuming his stance and leading me out of our suite while I was still dazed. \"Nope,\" he answered belatedly, and I giggled.\n\nI assumed our destination would be the dining room -- there really wasn't anywhere else, unless I'd completely mistaken his intentions and rather than the surprise party I was expecting, we were headed for something else.  To my surprise, however, he led me down to the main doors of the Keep, and Levi was standing there waiting with cloaks for both of us. I raised my eyebrows at Alistair as Levi settled the cloak on my shoulders before donning one of his own; Alistair just smirked at me, and Levi rolled his eyes.\n\n\"If you would?\" My seneschal gestured for me to go ahead, and Alistair slipped his arm around my waist as we stepped out into the freezing courtyard. I was glad he had, as my ridiculous, pointed, delicate Orlesian shoes slipped on the ice and I flailed as my feet tried to go out from under me. Alistair simply held me up, steadying me until my balance returned. I flushed and smiled ruefully at him, and he just winked and resettled his grip as we shuffled across the courtyard.\n\nWhere, in the Maker's name, are we going? I couldn't imagine for the life of me that I desperately needed to see something in the mines -- especially while wearing heels and a dress! But as we worked our way across the snow and ice, it became obvious we weren't heading for the tunnels either. Does Mikhael need something from me?\n\nWhen I was led through the door of the half-finished tavern, I stopped, mouth open in shock. It turned out the half-finished part referred to the outside of the tavern only; the inside, to my absolute surprise, was moderately lit with torches and sconces, and two large hearths kept the interior toasty warm. The walls were wooden and stained dark, the floor made of sturdy planking, and every surface gleamed -- polished wooden tables, a long bar along the back wall, bronze sconces and accents on the furniture. Behind the bar were kegs and caskets of various spirits, with a small collection of glass bottles holding what I assumed to be more expensive drinks sparkling in the light. There was a second level, currently closed off with a rope barricade across the stairs.\n\nSitting at tables and along the bar were my friends and family, and all of them turned and shouted out greetings when I came through the door. All of the Wardens and recruits were there, as well as Avanna, Mhairi, and my maid Maeve. Nathaniel was there, leaning against the bar and smirking at my astonished expression. And sitting beside my brother with a motherly smile on her face, was Wynne, and she'd brought some old friends as well, in the form of two enormous stone shapes that stood against the side wall looking out of place and entirely bemused.\n\nI gaped like a fish, uncertain even where to start; when I turned to Alistair, speechless, he grinned at me and nodded. \"Happy birthday, love.\" He leaned down and kissed the tip of my nose, and I laughed, freed from my momentary paralysis and happier than I'd been in ages.\n\n\"Nate? Wynne! Shale! Caridin!\" I didn't know where to start, finally throwing myself at the elderly healer and claiming a hug before offering my arm to Nate in a standard Fereledan greeting. Alistair settled between Aedan and Nate with a smile while I darted about the room, receiving name day wishes, hugs, and enthusiastic handshakes everywhere.\n\nZevran presented me with a glass of wine which he retrieved from a pretty dwarven brunette behind the bar; he flirted with her almost lazily as he did, and Oghren's answering growl from a few seats further down made the woman's identity obvious -- Felsi. I resolved to speak with her at some point; I was somewhat shocked that they'd managed to hide so many guests from me, never mind the barmaid from the Spoiled Princess.\n\nI finished my rounds of the bar back where I started, flinging my arms around Aedan's neck with a laugh. \"Happy birthday, brother! How did you do this?\"\n\nHe chuckled. \"Don't look at me! I had nothing to do with this. I was just as surprised as you about ten minutes before you walked in.\"\n\nI glanced at Zevran in disbelief, and he shook his head mischievously. \"I may have helped a little, cara mia, but most of the credit goes to someone else.\"\n\nHe gestured behind me, and I turned to see my husband, face slightly red with embarrassment, shrug akwardly. \"What? It's your birthday. And I just got lucky with the timing.\"\n\n\"You? Really?\" I left Aedan and pressed up against him, reaching up to cup my hand around his face. He nodded, and I went up on tiptoes to kiss him, ignoring the cheering and catcalls this earned me, enjoying the heat of him as he held me. \"I love you. When did you even have time-?\"\n\nHe chuckled and released me with a kiss on the forehead. \"What can I say? I told you I'm good at getting out of chores.\"\n\nAt my side, I heard Aedan curse. \"'Be right back,' he said, or 'I just need to talk to Levi,' -- you left me all the paperwork while you planned this!\"\n\nWe all laughed, and then settled in for a wonderful evening.\n\nAnd I wasn't disappointed; I got updated on Wynne's clinic in Denerim -- now fully staffed and functioning well, and several other similar clinics had popped up, with Greagoir's help, in other cities in Ferelden, including Highever and South Reach. I saw Nathaniel's eyes light up when he heard us discussing it, and he quickly cornered Wynne to quiz her on what it would take to set one up in Amaranthine.\n\nI spoke with Shale and Caridin; Aedan had been in contact with the two golems through Sereda, and they had decided to accompany the Wardens on their trip to map the Deep Roads underneath the Keep. They'd had no luck on reproducing whatever it was that gave the two of them sentience, and Wynne hadn't been able to offer much aid either. I was no help; in the book Asunder, they'd never found anything -- but they'd been looking to turn Shale back into a dwarf, not free other golems. I promised to ask Lana, the Tranquil recruit, to keep an eye out for anything that might shed light on it when she began organising the libraries at the Peak. But for now the two golems were happy to assist Aedan -- and Sereda -- with mapping as much of the Deep Roads as they could access, and would hopefully pick up some deactivated golems along the way as well.\n\nI chatted and laughed with Nate, who planned to spend a few days at the Peak before leaving for Highever; I got to know my guards and personal maid better, and drank enough wine that Alistair was going to have to assist me back to our quarters when we were done. I played cards -- badly -- with the Wardens, losing all the coin I happened to have in the small purse I carried. I declined to bet with my clothes, to much good-natured teasing, and retreated into Alistair's arms blushing furiously.\n\nIt got late, and with Aedan leaving early in the morning to head into the Deep Roads, we finally called it a night. I made sure that Wynne, Nate, Caridin, and Shale had appropriate lodgings, that Felsi was happy closing up the bar -- and staying with Oghren, apparently. I collected a last round of hugs, mostly from my close friends but also from those leaving in the morning, and then allowed Alistair to escort me upstairs to our suite. At Alistair's nod, Aedan and Zevran followed us up, and we all collapsed onto couches in the sitting room together.\n\n\"Best birthday ever,\" I declared, smiling warmly at my husband, whose lap I inhabited.\n\n\"What are birthdays like on Earth?\" Aedan asked. \"How did you celebrate?\"\n\n\"I imagine most people had parties -- similar to this.\" I gestured vaguely in the direction of the tavern. \"I...didn't.\"\n\n\"No parties?\" Alistair's smile was sympathetic.\n\n\"No real celebration, honestly. Who would celebrate the birthday of an unwanted foster-child? And I didn't really have any friends, even as an adult.\" Alistair frowned, but I spoke again before he could interrupt me. \"Don't tell me you had a marvellous time in the Chantry on your birthday.\"\n\nHe grinned. \"Pretty sure I still hold the record for pots scrubbed on a birthday, actually.\" I laughed. \"But it was different, my first birthday with the Wardens. There was drinking, and...well, I don't remember much else, but Duncan was there, and I woke up in the dining room of the Warden compound and someone had covered me with a blanket -- who could ask for more?\"\n\nI giggled and leaned in to kiss him, smiling at my mental image of Alistair curled up under a table and Duncan bringing him a blanket.\n\n\"Well, your birthday isn't over yet, if I judge the time correctly. And I'm fairly certain it's traditional for family to bestow gifts on someone's name day, yes?\" The Antivan stood, ignoring Aedan's suddenly terrified expression, to retrieve a couple of packages I hadn't noticed on the mantel. Alistair lifted me out of his lap and left the room, and I could hear him rummaging around in one of the little, as yet unused rooms down the hall.\n\nFinally Alistair returned, lugging a large awkward box -- and something larger still, a chest perhaps, which he left in the hallway just out of my line of sight. He walked over to Aedan and set the box down in front of him with a smile. \"Happy birthday, brother.\"",
        "Aedan looked almost startled, and he glanced over at me with his eyebrows raised. I flushed. \"Don't look at me -- this was all him.\" I motioned to Alistair, who sat down beside me to watch Aedan open his gift. \"What, were you raised in a barn? Open it!\"\n\nHe laughed, and leaned forward to wrestle with the box. He finally pried the lid free, and gasped as he got his first glimpse of the contents. His face was priceless to watch, as the glowing sword made of star metal cast a bluish glow on his skin. Aedan lifted the sword out almost reverantly, letting the box fall -- fortunately Zevran had good reflexes, or Aedan's foot would have regretted his carelessness. The sword was beautiful, however, so I couldn't blame him for his distraction.\n\nStanding up, Aedan gripped the hilt of the sword and hefted it, the blade covered in glowing blue lines -- whether a part of the metal itself or as a result of runes, I couldn't be sure. It wasn't the same glow as Lyrium, and part of me breathed a sigh of relief at that. Aedan appeared enthralled, though, and an enormous smile broke out on his face as he accepted the sheath that Zevran rescued from the discarded box.\n\n\"Thank you!\" Aedan gripped Alistair's forearm tightly, and my husband grinned back, pleased by his response. \"Where did you find such a thing?\"\n\n\"Starfang, here, was crafted by Mikhael from star metal.\" I stood and smiled up at Alistair, grateful for the moment of sheer joy he'd given my brother. \"It was one of the most powerful swords in the game, actually. It never occurred to me that those details would carry over. I assumed they invented the weapons and armour.\"\n\nAedan set the sword down reverently, and then pulled Alistair and I both into a hug. \"Thank you. Both of you.\"\n\nI kissed my brother's cheek. \"Don't thank me -- I'd forgotten what day it was until Alistair reminded me this morning.\" I pulled back and tilted my head curiously. \"I...don't actually know when anyone's birthdays are, actually. I mean, I'm going to write down ours, so I won't forget again, but when's yours, love?\"\n\n\"Don't worry about it.\" I rolled my eyes, and Alistair flushed. \"No, really.\"\n\n\"Tell her, brother, or I will.\" Aedan grinned, and Alistair swore.\n\n\"It's in Wintermarch, alright?\" He rolled his eyes as Aedan flashed fingers at me. \"Yes, the twentieth. Satisfied?\"\n\nThe look on my brother's face -- amusement and mischief, smugness and joy -- told me I was missing something. I contemplated the date; Wintermarch was early in the New Year, only a couple months or so away -- I'd better start thinking of a gift for Alistair -- and right in the middle of the winter. I felt bad -- my birthday had been lost to the Deep Roads the prior year, but we could have celebrated Alistair's if I'd been paying more attention. We'd even have been in Redcliffe, with a real bed and...\n\nSonofabitch.\n\nAnd a wedding."
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "romance",
        "dragon age",
        "modern girl in thedas"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-162"
}