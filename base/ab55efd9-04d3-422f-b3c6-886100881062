{
    "title": "How to Guide to Pussy Slapping",
    "pages": [
        "Do women really like getting their pussies slapped? Of course we do! \n\nWell, some of us anyway. \n\nAnd ladies, do give it a try if you have never done this, you'll be pleasantly and orgasmically surprised. \n\nThe reasons pussy slapping is so popular are many and varied. \n\nSometimes it's because we have pussies that need to be deliciously mauled before we orgasm. \n\nSometimes it's a mind thing and pleasure and just a touch (or a bit more) of pain combine to want us to give our naughty pussies a thorough slapping. \n\nSome women love to be punished. And yet others simply crave the two extremes of hands on love. The slap followed by the caress. Especially that one. Just like a good master knows how to spank a slave, the whip followed by the hand caressing that stinging bottom is a pleasure known to turn both sexes of slaves into greedy jelly. The more they get, the more they want. \n\nThe slap (on the pussy) wakes up every single nerve ending in the erectile tissue that the clitoris is made of, and causes them to sting a little, the caress over those wide awake nerve endings causes the whole vulva, not just the clitoris to shiver and shake with erotic excitement. \n\nRepeated slapping with repeated caressing stimulates the entire area beyond the point of control and leaves our pussies gushing juice as we orgasm. Think spurting, not just gushing. \n\nAs foreplay goes in the modern world, the clit and the pussy are sometimes only given the slightest stimulation (or regrettably overlooked completely) to make way for sex. \n\nThe same goes for the cock (the stimulation of which will be discussed in a future how to) . There are those that think that if the cock is erect, the man attached to it is ready to go. Yes, he is but some foreplay with the cock would go a long way to a better climax. \n\nThe same goes for the woman's clit. Yes, her nipples are hard, her legs are open, her pussy is damp. She's good to go at that point, but spending just five minutes on exceptional foreplay will make her very willing to go three more rounds. \n\nHere's how to slap the bitch out of that pussy and get your woman screaming and clawing for more...\n\n1. Oil her up. Use a water based lubricant if you're going to be using additional toys. If not - go old school - and pull out that bottle of baby oil. Don't be stingy either, hands slipping and sliding around the clit and the vulva and the sharp sound of palm on pussy all add to that intense orgasm. \n\n2. Make sure you cover the whole pussy, from the top of the crack down to her asshole. If you want to do some ass whipping as well, make sure you cover her buttocks as well. The oil increases the sound of the slap, or the instrument you both like. However if your partner prefers that hot stinging sensation on her ass, do not lubricate it. \n\nAnd if she doesn't like being spanked at all, avoid the bottom or she will abandon the whole sex session. However, the good news is that many women who don't like to be spanked on the bottom, will gladly and enthusiastically take a spanking on the pussy. Different nerve endings sending a different message to her brain. \n\n3. Let the fun begin. Gently rub the oil or lube all over her pussy. Caress her clit, make sure it knows it's gonna see some action by flicking it right on the tip. Give her a taste of what's cumming. \n\n4. Now rub her firmly, all the way from top to bottom. Stimulate all the nerve endings. At this point she knows what's coming, so this is a tease. \n\n5. Start slapping. Work your way up the slap scale by beginning at one which is a gentle pat. Once you're patting that pussy she should start to move her hips and lift them to your hand. This is the signal to up the ante. \n\n6. Watch her body as you slap harder, keep up the rhythm. Not too fast but not slow either. About a slap a second is a good pace. The more she thrusts her hips and arches her back, the faster and harder she wants you to slap. \n\n7. You'll know you hit the sweet spot when she freezes back arched and hips thrust forward. She's at the edge now and you can go for it. Bring your pace and power to ten on the slap scale and don't stop until she suddenly drops back with her legs closed. The intensity of the orgasm(s) will ensure that this will be her reaction because the whole genital area is super sensitive after orgasm. \n\n8. If you are charming and you want a taste, now is the time to convince her that a soft caress with your tongue is what she really needs. Enjoy a good pussy eating while she recovers. \n\n9. When you've eaten your fill, she should be back to moaning and twitching for more. Give her some more. Give her the whole thing. \n\n10. End off by inserting your cock and listening to her scream as you pound those super sensitive nerve endings. Try to give her a good pounding inside. This means you may have to recite the alphabet backwards but remember, she has faith in you to pound her like only you can. \n\n11. Accept her gifts to you graciously, whether she brings you a beer, goes for pizza or rims your asshole. All gifts stemming from a great pussy slapping should be accepted with gratitude. \n\n12. Do it right and this could be the first step to phenomenal sex. And it only takes five to seven minutes. And you can then be in a better bargaining position for five to seven minutes of cock foreplay. Just don't ruin it by cumming."
    ],
    "authorname": "ColetteJulie",
    "tags": [
        "pussy",
        "pussy slapping",
        "pussy eating",
        "foreplay",
        "climax",
        "orgasm",
        "satisfaction",
        "pussy spanking",
        "spanking"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-guide-to-pussy-slapping-1"
}