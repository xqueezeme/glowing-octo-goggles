{
    "title": "Dream Drive Ch. 10",
    "pages": [
        "Author's Note:\n\nSorry about the extended wait on this one! Life keeps me busy.\n\nEdited by Expoh, AnnabelleFalls13, Michael Scott, Zald, and I.C.\n\n<center>****</center>\n\nVuntha stood at the top of the hill. Behind him, down the slope, lay the sprawling encampment of the People-Under-The-Mountain. The once-bustling tent city was emptied, devoid of activity but for the wind whipping at the cloth. Behind that lay the mountain, a black wall at their backs, the only defense protecting the women and children should they fall.\n\nThe sky was pale and endless, covered by a uniform cloud that obscured the rising sun. His breath fogged against the cold air. The wind was seeping into his clothes; his joints were stiff. A small piece of his mind panicked briefly, wondering if his hands would still move right once the iron men reached them. He shifted his feet and checked his grip, driving away the nerves.\n\nIn one hand, he held his spear. He concentrated on the feeling of wood under his fingers, experiencing the slight rises and smooth creases of his familiar weapon. He'd be needing it very soon. All the long, difficult days of training with his father now seemed far too short, wasted away talking when he should have gotten up again and sparred more fiercely, raked in one more second of practice.\n\nVuntha tied up the top knot of his jacket with his hand, tugging it close to his neck to keep the cold out. It was his leather war jacket, woven more for summer hunting than for wars in winter, but it would let him move easily. The tribes did not usually make war so late in the year.\n\nVuntha tried to embrace the cold. He told himself it was keeping him awake and alert. He feared the moment in which he'd be warm.\n\nHanta stood next to him. His father's gaze was locked on the flats that stretched in front of their position on the hills. They took in the view together.\n\nThe oncoming tide of the iron men was slow, but inevitable. Their dark green and black uniforms rolled over the browning grass of the plains. Their feet thumped with a mechanical precision, and their iron shields and armor shook in the same ponderous tempo. The sound echoed in the air. \n\nHanta gestured toward the end of the lines. \"Watch for those ones,\" he said to the gathered men. \"Elites, highly trained, extremely tenacious. Their weapons are incredibly sharp \u2013 some may be magicked by their mages. Do not try to block them. Use a long thrust when you strike at them, keep your distance.\"\n\nVuntha followed his father's hand with his eyes. The soldiers at the end of the iron men's formation were cut from a different sort of steel. Their armor was black; needle-spikes jutted out at the joints. They carried tall, hooked weapons, almost like a spear and an axe hammered together.\n\nPast the assembly of spiked-armored elites that edged the line were their heavy cavalry. The horses kept a slow pace, staying in step with the footmen. Hanta had already informed them that this was part of their strategy. The mounted troops were primed to move easily, either to defend a weak point or strike where the tribes showed weakness. The hook-wielders would defend the flanks in their absence, allowing the main line to swing about and crush pockets of resistance.\n\nMaybe it was because Vuntha had so much practice fighting and hunting that he could appreciate the army before him. The training and coordination required to move thousands of men as one was extremely difficult to achieve.\n\nKnowing their strategy was different from defeating it. The wall of iron was very visible, but a spear wouldn't do much good against it alone. The tribes normally fought on the open plains, where they knew the land and could make an easy escape, hitting their target and running before they could be harmed themselves. This was different. They had to stop the enemy, right here, or their lives and their families would be in danger.\n\nVuntha brushed at his jacket, and brushed at it again. The sleeves and surface of it were plain, simple leather. The jackets of the men around him were far more impressive, strung with beads, sewn with feathers both white for counting coup and red for taking a life. His father's was most impressive of all, a full battle tale painted on the back by Vuntha's mother.\n\nVuntha's teeth rattled as the iron men grew closer. He wasn't sure if it was from the cold or the fear. He took up his spear in both hands.\n\nToday, he would stain his war jacket. Or he would die. Maybe both.\n\nA hand settled on his shoulder. Hanta had a serious sort of smile on his face. \"You are my son,\" he said. \"You'll be fine.\"\n\nVuntha just nodded. He was afraid his voice would come out a squeak.\n\nHanta patted him again, then moved forward slightly. They stood next to Jalak, the leader of the Three Hills tribes that had not abandoned their brothers. As opposed to Kunaya. Damn traitor.\n\nA surge of anger swelled in Vuntha. This was all Kunaya's fault \u2013 him and Boonta. Hundreds were dead, and hundreds more were injured or dying. Vuntha grabbed the hatred, nurtured it, stroked it like a pet hound. It drove away the cold and the nerves. \n\nThe iron men were almost in range of their bows. Jalak raised his hand. A shout went up and down the line to nock arrows, and the warriors that had bows did so.\n\nVuntha heard shuffling behind him. He turned. He almost thought it was Chaki by her height, but the sharper features and broad ponytail marked her as Fenay. Vuntha nodded to her in greeting, and got a nod in return.\n\nHanta stepped back over. \"Where is Chaki? She said she'd stand with our group.\"\n\n\"I don't know,\" Fenay said. \"Secha \u2013 the skinny one, shorter.\" She gestured across her waist, indicating the girl's height. Vuntha nodded his head that he knew her. \"She ran to my healing tent and told me Chaki was getting help. I divided the essence she gave us between the apprentices, but it isn't much. We might be able to repel one more of those big spells. Nothing after that.\"\n\n\"Maybe she's gone to see if Jackson has returned,\" Vuntha said. \"The spirit guides don't know about the battle. They might not know how much they are needed.\"\n\n\"We can only hope she returns quickly,\" Hanta said. \"Gather your strength, Fenay. We'll need it.\"\n\nHanta stepped out in front of the lines. Jalak gave him a questioning frown, but Hanta just nodded to him. He looked up and down the lines.\n\n\"I am Hanta, of the Windseekers!\"\n\nHanta's voice was loud, carried along by the wind. He needed the help \u2013 the advantage that the tribes had over the iron men was numbers. By Vuntha's count, perhaps five or six thousand to their three thousand. More, if Kunaya had not taken half the Three Hills and stolen half their horses.\n\n\"We are not like them!\" Hanta pointed to the oncoming march. \"We are not mindless soldiers, shielding ourselves in shame from Mother Earth, hiding behind the very iron we stole from her belly! We are The-People-Under-The-Mountain! This is our home, our land, our most sacred ground! Shakhan is with us, watching over us!\"\n\nThe men shouted. Spears were waved overhead. The bowmen, still holding their arrows ready, stamped their feet and called war cries, a mixed cacophony of shrieks and warbled notes that briefly overwhelmed the sound of marching feet.\n\nHorns sounded from the iron men, as if in answer \u2013 high, exacting notes, blasting over the plains and commanding attention. The line of the iron men thinned slightly, stretched to accommodate the size of that formed by the tribes. The warriors fell quiet as they watched.\n\nHanta turned back to the line. \"We don't have iron, like they do. But today they will find out something else. Our will and our spirits are stronger than any iron they can forge! We are going to show them what happens to those that step under the mountain without the word of the guardian at their backs!\"\n\nVuntha felt the energy of the warriors collect like a tangible thing. He could feel it himself, his spirits rising. They were warriors, huntsmen of the guardian Shakhan, and this was their purpose \u2013 to protect and defend the lands Under-The-Mountain.\n\nAnd he felt pride. That was his father. This was Vuntha's time. Time to prove he was a man, to prove he could take up Hanta's mantle in winters yet to come.\n\n\"Prepare to stain your war jackets with a story greater than any in a thousand winters!\" Hanta shouted. \"They will show no mercy! Show them only the end of your spear! Bowmen, draw your arrows!\"\n\nHanta's last command was barely heard over the screaming and shouting of the warriors in response to his call, but the few bowmen that did drew and sighted up their foes. The others saw the movement, and the order went down the line.\n\nVuntha realized he was gripping his spear in both hands, holding it tighter than he ever had. He gritted his teeth and set his feet, pointing his spear out. This was it. He was ready.\n\nAnother horn blew. The iron men raised their shields above their heads in response to the knocked arrows. A wave of linked steel protected their heads.\n\n\"Their wall isn't perfect!\" Jalak shouted. \"They walk slow, weighted by iron! Aim carefully!\"\n\nThe archers sighted down, adjusted. Some sniffed at the air, trying to feel out the wind.\n\n\"Hold!\" Jalak said.\n\nThe iron men were almost in range. Vuntha wondered how they would respond. More lightning magic? Something else, something worse?\n\nA horn sounded. The army ground to a halt.\n\nSilence hung in the air. No one moved. Vuntha was almost afraid to breathe.\n\nJalak kept his hand held. \"Hold!\"\n\n\"What's going on?\" Fenay muttered.\n\n\"Hanta?\" Jalak said. \"What do you think?\"\n\n\"I don't know,\" Hanta said. \"Something's not right.\"\n\n\"They raised their shields for our arrows, but now they've stopped.\" Jalak frowned. His eyes scanned the battlefield, hunting for some sort of sign.\n\n\"I feel magic!\" Fenay said. \"Some sort of spell.\"\n\n\"What magic?\" Jalak asked.\n\n\"I don't see the lightning or the fire,\" Vuntha said.\n\n\"It's not that kind,\" Fenay said. \"It's getting closer!\"\n\nThe men milled, uncertain. The archers lowered their bows, glancing to the sides for instruction.\n\n\"Where is it?\" Hanta asked. \"What are they doing?\"\n\n\"I'm not sure,\" Fenay said. \"It's almost here!\"\n\n\"Where?!\"\n\n\"Right in front of you, and Jalak! There's more!\"\n\nHanta and Jalak exchanged glances with each other, baffled. Vuntha glanced past some of the warriors. He couldn't see anything except grass.\n\nHanta sucked in his breath, eyes wide. He turned, starting to jog down the line. \"Unseen!\" He shouted. \"They can't be seen! Ready spears! Spears up! Spears \u2013\"\n\nBlood spurted from Hanta's side. He stumbled and fell to the grass, bleeding from his stomach.\n\nWhere none had stood a moment ago, there was now a man. He was naked but for the collar around his neck. His body was pale and scarred all over, rises and bumps and pockmarks from implements Vuntha had no name for. He held an iron axe in his left hand, now stained with Hanta's blood. His eyes were white \u2013 no pupils.\n\nFaster than they could react, the scene repeated itself hundreds of times. Men at their front of the line cried out and fell, some losing limbs, others stabbed in the gut or chest. More men appeared, white-eyed slaves with twisted bodies. They shrieked and hollered as they became visible, then laid into still more men, mindlessly attacking despite being vastly outnumbered.\n\nThe man in front of them raised his weapon to finish Hanta off.\n\nVuntha was running forward. He wasn't going to make it. The axe came down for Hanta's head.\n\nAn arrow whizzed over Vuntha's shoulder. It took the man straight through the wrist. His strike was driven off course, thumping into the dirt next to Hanta's neck.\n\nThe creature roared, and, forgetting its axe, tried to fall on top of Hanta to get at him with its hands \u2013 but this time, Vuntha's spear was there. His weapon slammed home through the man's skin and pierced out his back. Vuntha twisted his weapon back and kicked the man free.\n\nHe glanced back over his shoulder. Fenay nodded to him. It was her arrow that saved Hanta from death.\n\nVuntha checked the lines of warriors. They'd been caught by surprise by the scarred men, but only until spears could find them. Still, it left them in disarray \u2013 and in the meantime, the iron men were marching forward, rapidly closing the gap. The bowmen hurried to ready their shots.\n\n\"Father!\"\n\nHanta groaned. He rolled over onto his back, one hand on his wound. \"Vuntha. I'm alright. Get me a bandage!\"\n\nVuntha checked the wound and breathed a sigh of relief. It was mostly superficial. \"You've got to get back behind the lines.\"\n\n\"I'm not leaving this field unless I die or they're all dead,\" Hanta shouted. \"Bandage! Now!\"\n\nAn angry growl and a hand wrapping around his ankle made Vuntha flinch. His foot was pulled out from underneath him. He hit fell hard, his spear pinned between his stomach and the ground.\n\nThe scarred man pulled himself over Vuntha's ankles. He beat at Vuntha's backside, pounding on his thighs and scratching at him with blackened stubbed nails. Vuntha pulled a foot free from its grasp and kicked out, striking him in the face and shoulders, but the only effect it had was to make the thing angrier.\n\nSpears came down into the thing's back, more warriors coming to Vuntha's aid. It gurgled, twitched. And then it shrieked again. It clawed at all of them like a thing possessed, defiant of the four shafts of wood jutting from its torso. They withdrew their weapons and stabbed down again, and again, desperate to stop it from moving. Fenay stepped up, put a foot on the creature's shoulders, and shot an arrow straight into its head.\n\nThe creature collapsed. Vuntha kicked his legs free of its grasp and stood up. \"Thanks, Fenay. Again.\"\n\nHer ponytail bobbed a nod of acknowledgement. \"Make sure you kill double that to repay me.\"\n\nThey both swiveled when they heard Jalak. He was shouting commands, but they were only partially heeded. The line was in a panic \u2013 their scene had replayed itself over and over, the invisible men going berserk until they were torn apart or their heads were caved in. The iron men were nearly upon them. A few bowmen were firing desperate arrows into their formation, but alone, they bounced harmlessly off their shields.\n\n\"Bowmen, keep firing!\" Hanta shouted. He winced and bent slightly, keeping his bandage pressed over his wound. \"Level your spears! Level your spears, now!\"\n\nVuntha and Fenay scampered back into position. The warriors barely had time to lower their weapons, and the iron men were there.\n\nThe soldiers rushed uphill and into the spears, depending on their iron shields and their momentum to win the skirmish \u2013 and they'd caught the tribes in a barely-organized state. The tribesmen were shoved back, hard, their feet churning to stay balanced.\n\nBodies pressed together. Shields shoved against bare skin. Spears banged into armor and clashed against other spears. Warriors and soldiers alike shouted and swore and cursed one another in a giant wavering free-for-all. Vuntha didn't even have his spear down \u2013 he held it up, out of the way, just pushing against the back of five other warriors to hold the line.\n\nVuntha sighted an armored soldier pushed over by a nasty shove from the tribes. He fell underfoot of his own men. His armor didn't save him. He screamed until his neck was stepped on.\n\nThe smell of sweat and cold air was warmed with the stench of blood. Men were stabbed, cried out, fell. People were shoved into the empty holes they left behind, trampling any hope the injured had of recovery.\n\nThe tribesmen were being pushed back. Vuntha could see it. The metal shields were too useful, and their own leather armor was too weak to withstand a frontal assault \u2013 and the iron men knew it. It took a careful stab from a tribesman to make it through their armor, but they could simply bash forward and thrust their weapons haphazardly. They'd hit something eventually.\n\nThe soldiers were relentless, driving forward, maintaining the close-range shoving match that gave their armor the best advantage. The tribesmen were trying to get distance, line up their strikes \u2013 and so they were being walked back uphill, sacrificing their height advantage. Iron men fell in the mad scramble to keep up the constant push, but just as many warriors died to casual thrusts and arrows.\n\nProjectiles from their crossbows were falling everywhere. Their own bowmen were launching far more arrows, aiming for the back of the enemy lines, but they were being peppered with waves of return fire. Vuntha saw a man next to him take a fat bolt one in the eye and collapse. It was as if the air was spitting blades.\n\nThe pileup in front of Vuntha surged, heaved. He was swept into the center of the pack like a leaf in a storm.\n\nArms flailed around him, mixed with screams and shouts and the cutting tips of spears. His own spear was stuck between himself and the warrior next to him, pinned down by the force of dozens of men pushing against each other. The soldier he faced was equally helpless.\n\nVuntha stared at the man's eyes under his helmet. He was young \u2013 younger than Vuntha expected. From a distance, they all looked like pieces of moving metal. There was a man in there, somewhere.\n\nThe soldier managed to wedge his shield between them. He rammed his shoulder against it, slapping against Vuntha's side. Vuntha grunted under the pressure, the blow knocking him from his reverie. He took another hit, and another. He felt dizzy.\n\nHe saw a flash of skin. A gap between the man's chest plate and his helmet. Vuntha's left hand was almost crushed between people, his fingers still weakly touching his spear shaft, but his left hand was free. He straightened his hand and jammed it into the man's neck.\n\nThe man coughed, spluttered. Vuntha jabbed in again and again, smashing the man's windpipe. The soldier's eyes bulged. Vuntha could hear his desperate wheezing. He raised his hand for another blow, intending it to be the last.\n\nA sharp cut on Vuntha's shoulder drew his attention. Another soldier managed to get his spear across the pile to try to save his comrade, then promptly lost his weapon, having it torn away by a warrior three men to Vuntha's left.\n\nThe pile surged again. The warriors pushed this time, gaining back a bit of ground. Vuntha's left hand was suddenly free. The suffocating soldier was swallowed into the masses. Vuntha tried to push forward with the rest, but he was just as helpless. He churned his feet, just trying to keep his balance as his feet slipped through the blood and around corpses.\n\nAnd then he was in the back again. He put his free hand on the shoulder of another warrior, lending his weight to the push. The motion was automatic, unfocused. It all happened so quickly. He hadn't controlled any of it. It could have been him that died as easily as anyone else.\n\nA horn sounded. The iron men fell back.\n\nThe lines of churning men parted, like two waves that had smashed together and come apart. The distance was short, barely ten paces, but just that much seemed like eternity after the prolonged shoving match. The warriors swore at the iron men and called out in triumph from having repelled the first assault.\n\nEveryone was heaving their breaths. Both sides looked exhausted. The iron men were disjointed and fractured, but so were the tribesmen. They eyed each other warily, staring over the gap of mud and dead bodies like angry hunters staring at each other over a bison, both claiming it as their kill.\n\nAs the pause started to prolong, the iron men began to reorganize. Vuntha looked around for his father, but couldn't find him. He felt like the bottom of his stomach had just dropped away. \"Father!\" Vuntha strode down the line. \"Father!!\"\n\n\"Spears ready!\" Jalak was jogging down the other way. \"Keep your spears ready!\" The men responded to his words. They straightened their backs and fixed their weapons forward as he passed them.",
        "\"Elder, have you seen my father?!\"\n\n\"He took a spear in the shoulder,\" Jalak said. He ran by Vuntha, throwing the rest of the words over his shoulder. \"Fenay is treating him behind the lines. Courage!\"\n\nVuntha's spinning innards settled themselves. He heaved a sigh, then turned to fill a space in the line. Movement caught his eyes \u2013 in the distance, horsemen were fighting, away from the main battle. Their own cavalry had drawn away that of the iron men, fighting their own private duel out on the flats.\n\nPurple light glowed in the midst of the iron men. First one, and then another, lighting up like violet fires in the early dawn. Energy began to crackle.\n\n\"Magic!\" Vuntha screamed over the warriors. \"That's the lightning! Magic!\"\n\nA beam of lightning sparked out from the first point with a crack that echoed across the hill. Just as it was about to strike their lines, a white-lined shield of runes blossomed in front of the men it targeted. The lightning impacted the shield with a solid whumph, like a fist striking canvas. It vanished without harm.\n\nAll along the line, shields sprung up in response to the lightning strikes. The destructive attacks were met with shields each time, the apprentices casting just long enough to catch the power, then dissipating the spell to save their magic. Vuntha couldn't read the runes, but he recognized the pattern \u2013 it was the same as Chaki's spell, the one that had blocked the lightning-coated charge of horsemen. The warriors and the iron men both stared at the spectacle in silence, watching as their sages struggled with magic as they had struggled with force of arms.\n\nThe bolts of lightning ceased. Vuntha saw more than one tense pair of shoulders sag in relief. He understood how they felt quite keenly.\n\nPurple lights. Everyone braced themselves.\n\nThe lightning didn't come immediately. Before, the glow had been flickering, unsteady, discharging into a bolt when it reached the highest point of brightness. This time, the lights were uniform, slowly growing in intensity.\n\nIt was obvious they were going to combine their efforts. That was what they'd done before, with the charge \u2013 but that was just two magicians. This was five. He couldn't imagine what they'd be facing next.\n\nA sixth light glowed behind the lines of the iron men, brighter than all the rest. It was like a white flame, just a haze of purple surrounding its edges. It grew above the magician's outstretched hand. The sleeve of his cloak fell back to reveal a black object sitting on his palm, some sort of fuel for the fire.\n\nPurple lightning cracked again, simultaneously, leaping from each of the first five magicians to the one at the center. They merged into the purple flare, sucked into the magician's hand.\n\nA sound echoed over the field \u2013 a voice. Vuntha felt it vibrate in his head. It was a whisper and a scream, wordless, sad, terrible. A slow death on a rainy day. His heart felt heavy in his chest.\n\nA strange observation floated through Vuntha's brain, a little fact that picked at him inside his brain. All the iron men had lowered their heads. Their eyes were shut tight. Some had even turned away.\n\nWhy would they do that?\n\nThe lightning came.\n\nIt soared out from the central flame and exploded in the center of their lines. Vuntha was at least forty men away, but he was still flung down by the force. He buried his head between his arms, ignoring the feeling of mud squelching into his head. The ground shook underneath him.\n\nWhen the roar ceased, he looked up, still lying prone on the ground. He felt heat on his face. A blackened crater marked where before there had been men almost four or five thick. Bodies were scattered around it, some in pieces, others more whole, but all equally dead.\n\nAsh began to patter down on him. And heavier things. One of them struck his neck and plopped into the mud next to him. It was a finger, the flesh charred from the bone at one end.\n\nVuntha scrambled up, as much to get away from the piece of flesh as get his feet before he was attacked. His innards felt like slush; he fell back onto one knee. His vision swirled. Men around him were in a similar state, disoriented, looking for instruction.\n\nWhy hadn't the apprentices protected them? No. They probably tried. They just didn't have near enough power.\n\nWhite-violet flame around the box was still pulsing. Again, the other five magicians began to charge their own powers. There was a crack, and lightning leapt, charging the man holding the center of the spell.\n\nThis time, Vuntha saw the magic in all its fury. They targeted one end of the line. Weak shields went up from the apprentices. The massive helix of lightning tore through them as if they weren't there. A purple sphere of light and energy detonated at the impact point. Warriors in the center were turned to ash. Those further back were ripped to pieces, still others flung bodily into the air.\n\nMen started running in from around Vuntha, both trying to close the gap and save those that could be saved. Vuntha just stared. This is too much. We can't win without the spirit guides. Magic is too strong.\n\n\"Vuntha! Vuntha!\" Vuntha looked up. His father was limping toward him, coming down from the top of the hill. He sported a heavy bandage over his shoulder. \"What in Shakhan's name is happening?!\"\n\nVuntha opened his mouth to shout back, but the events explained themselves. Lightning flickered to the center point and another bolt fired, opening a third hole in the lines. The sound of it boomed over them first, and then the heat washed over them a few moments later. A hundred men, dead in an instant. A hundred more trying to stop their ears ringing.\n\n\"This is impossible!\" Hanta said. \"No one has this much power!\"\n\n\"They have it!\" Vuntha shouted. \"What do we do?!\"\n\nHaanak ran up to them from a distance. \"Hanta!\"\n\nHanta and Vuntha made for him, meeting him halfway. \"Haanak.\"\n\n\"Jalak is dead. Died in the second blast,\" Haanak said. \"They're ripping us apart with these \u2013\"\n\nHe was interrupted by another lightning strike. They cringed as one at the impact. The rumble lingered in the air, rolling up against the clouds and sticking in their ears and chests.\n\nAnd then the bolts began to fall. The crossbowmen struck in organized waves, targeting the areas that had been struck by lightning. Stragglers were picked off even as they crawled away. Their own bowmen returned fire, but it was a scattered effort, ineffectual. The magicians were shielded by their troops.\n\n\"One-Above,\" Vuntha said. \"They're really here to kill us. Every last one of us.\"\n\n\"We have to retreat,\" Haanak said. \"They're going to keep this up until we're in shreds and tear into us with their footmen!\"\n\n\"We can't retreat,\" Hanta said.\n\n\"We don't have a choice!\"\n\n\"Father, we have to get out of range,\" Vuntha said. \"Magic is strong, but it isn't as accurate as a bow. If we get far away \u2013\"\n\n\"Your mother and our family are in the only place we could retreat to!\" Hanta snapped. \"We have to hold until the elders return!\"\n\n\"Hanta, listen to reason!\" Haanak shouted. \"Even all the elders together might not manage one of those \u2013\"\n\nAnother lightning strike, closer this time. The ripple of force made them stumble. Haanak almost fell, but Vuntha caught him and pulled him straight.\n\nHaanak gave him a nod of thanks, then faced Hanta. \"We're sacrificing warriors for no reason by holding here. This isn't our way of war; we're not used to this kind of fighting. They'll steal our advantage of numbers in a matter of minutes. I don't know where they're getting the magic, but they're getting it.\"\n\nHanta's eyes darted across the line. He glanced over his shoulder at the mountain, at the tents. He looked back. His face was clenched tight.\n\n\"Father, we have to go!\" Vuntha said.\n\n\"If we run now we'll die on the plains, Vuntha!\" Hanta shouted. \"If we retreat behind the mountain with the others, we give up our tents, our food, our entire lives. If we drop back into the valley to protect the tents then we'll be crushed against the mountainside!\"\n\nAnother crashing of lightning and sound pounded the hillside. Vuntha could hear the screams in the distance. Clods of dirt and soot shot up into the sky, falling back down over them in a cursed black rain. The cold winds pushed the smoke and dust, churning it into a drifting cloud that obscured the front lines.\n\n\n\"We're already behind crushed.\" Haanak said. \"Live now, find a way tomorrow.\"\n\nHanta's lips tightened in the fiercest frown Vuntha had ever seen him make. \"A choice between death while fighting and a slow death from exposure is no choice at all,\" Hanta said. \"We are the People-Under-The-Mountain. If we abandon this fight, if we retreat from our sacred ground, then what was the point of all the lives of our ancestors?! They fought and scraped life from the flats so that we could have a chance when the angels return! So that we could live in this half-world and have our day! And you're telling me to abandon that?! I'll die a thousand times before I see a metal boot fall in the shadow of the mountain!\"\n\nHanta had already turned half-towards the line, as if preparing to run back into the fray. Vuntha grabbed his arm, stopping him. \"Father, we only have one life,\" he said. \"But we both know someone that defies death. We need Jackson. We can't win this fight on our own! This is why Shakhan sent him!\"\n\nHanta hesitated. He gazed over the drifting clouds of debris, over the line of warriors that had fallen into disarray. He stared at the impassive faces of the iron men, still and firm under their steel helmets. He looked back over his shoulder, down the other side of the hill, toward the city of tents that held everything they had.\n\nHanta's eyes widened.\n\nVuntha started to follow his gaze when something rushed by them, a stream of gold and white tassels drawn on the wind.\n\nIt struck the lines of the iron men \u2013 a glowing white thing shaped like a person. There was no explosion, no great sound. The iron men were brushed into the air like leaves on the wind. They fell back on their own allies like sacks of metal.\n\nTheir lines were tough, but thin. The blow drove a hole straight to the magician in the center.\n\nThe white figure moved. It flickered like torchlight, almost faster than Vuntha could follow. He saw a sword cutting through the air, slicing through runes that suddenly appeared, hacking off the magician's leg.\n\nThe man's scream cut through the silence. He toppled from his horse and struck the ground. The black thing in his hand tumbled free.\n\nThe lightning that had been gathering for another strike fired again - but without his control, it struck the exposed backs of his own men. Their armor did not save them. A second hole in their lines was opened in a blast of violet energy and smoke.\n\nHanta raised his spear and ran forward. \"CHARGE!! CHARGE!!\"\n\nMen came at his call. Vuntha ran at his side. They ran through the hole, toward the white figure, even as the light surrounding her faded. And then Vuntha could see her \u2013 long gold hair to her waist, a sword like white light in her hand. She circled the magician's horse, snatched up the black thing, and stabbed into the man's neck, finishing him.\n\nAnd then they struck the line of the recovering iron men, fighting to keep the gap open. All along the entire line, the quiet separation between the armies snapped like a twig. Flesh and steel slammed together, and Vuntha was lost in the press of battle, swept out of sight of the woman.\n\n<center>****</center>\n\nRachel pocketed the black cube and sniffed at the corpse of the magician. It wasn't Hale. He was smart enough not to make himself the target. But that was one mage down.\n\nSacagawea's spell had faded fast, but it was enough to do the damage. Pretty amazing shit, though. She needed to learn how to do that.\n\nRachel glanced up.\n\nThe mages had bodyguards, of course, more horsemen. They surrounded her on all sides, still recovering from her sudden appearance. She grinned up at them. The benefits of putting all her stats in agility and having the Indian chick use a haste spell on her were fairly radical, even if it was just for a few seconds.\n\nRachel didn't have any illusions about fighting all of them on her own. Instead, she waved at them with her free hand. \"Tell Hale I have his cube and that I'll be shoving it up his asshole very shortly.\"\n\nAnd then she turned and ran.\n\nHooves pounded the ground behind her seconds later. The battle lines roiled ahead of her, and she was on the wrong side of it. The air smelled like blood and sweat and shit. There was still dirt in her hair. That was probably the worst thing. \n\nA sword swung at the back of her head. Rachel ducked, stumbled. They surrounded her on either side, herding her in. She was fast, but a horse was still faster. She'd have to change that by force.\n\n\"Sorry, horsey!\" Rachel lashed out with her sword, wincing as she cut the animal. It halted abruptly and reared up in pain. The soldier behind had to pull his reins hard to avoid running into his companion, and the next after that had to do the same. Rachel planted her feet and stopped, using the commotion as cover to give herself a break. She was out of breath after sprinting for so long.\n\nShe was fast, but she used up her stamina quickly. She'd lived in a plush and blessedly sterile apartment her entire life. Exercise had never been a priority. Another thing to think about. She probably should have thought about it before deciding to get involved in prolonged and violent magic-based warfare on the side of the humble natives, but Chiki or Chunky or whatever was nice enough. And apparently she knew Jackson, so she couldn't be a complete idiot.\n\nJust as the horsemen reorganized enough to come back and surround her again, she set her feet and blasted off at full speed. She got a good twenty feet away before they were able to change direction and get back up to a gallop again. Now there are some complete idiots.\n\nRachel reached the back of the enemy lines. Her sword glowed white as she called up an ability. A tiny part of her thought it was rather unfair to attack the completely exposed backsides of the enemy, but a much larger part of her cackled in glee as she took the final few steps forward. Free essence, here I come!\n\nRachel only had a handful of abilities, but Flicker Sticker was her favorite.\n\nHer arm moved on its own. Her sword flickered, flashed, multiplied. Her arm moved in six stabs in a heartbeat, though the afterimages and illusions created by the ability made it seem like an even greater flurry of blows.\n\nHer ability-guided sword struck home on three soldiers from behind, puncturing their chests. They slumped to the ground, dead. Rachel's essence bar swelled with another 80 points from the kills. The blue line overfilled, and her skin gained a pale white haze, essence leaking out over her limit of 100 points.\n\nAn evil grin spread across her face. Flicker Sticker only cost 35 essence, and she'd gotten 80 in exchange.\n\nRachel activated her ability again and carved into the line. Two men fell \u2013 53 essence. She used it again. Her sword flashed. Screams, this time \u2013 one of them men lost his spear hand. He didn't die, so she finished him off with a good old fashioned slice across the neck.\n\nAnd then she activated the ability again.\n\nHer sword accelerated as she activated the ability three times in quick succession, stabbing between ribs and into shoulders. Her essence jumped up in skips and hops. The more she collected over her limit, the faster it leaked, like a burst pipe that was put under more and more water pressure. She needed to fix that.\n\nShe activated her ability again, and, letting the force of the power guide her body through the motions, she brought up her personal attributes screen. A few quick mental confirmations later, she dumped 100 essence into Spirit and another 100 into Agility. She threw 50 into Strength for the hell of it.\n\nThe horsemen had caught up to her. Rachel twisted out of the way of a cavalry saber. It swooped by her head, nicking her hair.\n\nPartly to defend herself against the guard, and partly unwilling to let the man get away unscathed, Rachel turned her back to the line and activated Flicker Sticker again. Her sword blazed white and stabbed into the horse and the horseman, ravaging both the animal and the rider's legs. The horse screamed and turned away, bleeding from the neck; the man managed to keep his seat for a few moments before falling, losing his weapon in the process.\n\nRachel felt a very strange sensation. Something had poked her in the small of her back very hard; the feeling moved into her abdomen and sat there. Her health bar dropped by 40 points, almost cut in half. She tried to turn around, but she was stuck in place. She glanced down and saw the pointed steel tip of a spear protruding from her stomach. That's not good.\n\nRachel struggled to free herself from the spear. Her health ticked down at a scary pace. A pommel caught her in the side of her head, another soldier turned to attack her. She lost another ten health.\n\nThe sensation of pain increased as her health bar dropped, turning from a throbbing weight into a sharp burning pinch. She dropped her sword, grabbed the shaft of the spear with both hands, and grunted, wriggling back and forward to try and pull herself up and off the blade. A kick caught her from behind, helping to cut her free, but another blow knocked her to the ground. Before she could get her legs moving, she was surrounded, kicked, pummeled, stomped on.\n\nRachel dropped and covered her head with her hands. Her health bar flashed and began to let out a warning sound. She felt nauseous.\n\n\"Don't kill her! Lord Hale will kill us if she dies!\"\n\nHands and fists drew back. Rachel felt a weight fall on top of her, pinning her to the ground on her stomach. She didn't bother resisting; she felt more like vomiting.\n\nHands grabbed her arms and legs. She was brought up; she could see the clashing lines of soldiers. She rolled her head back; a mage stood next to her, dismounted. His eyes were beady and there was a fat mole on his lower lip.\n\nRachel ignored his examination and craned her neck to stare at the battle lines. She was only yards away from the surging troops. The Indians had driven Hale's troops back down the hill with Rachel's help, but things had ground down into another stalemate. She didn't see the magic girl that woke her up anywhere.\n\n\"Chiki!!\" she shouted. \"Hey Chiki!!\"\n\n\"Get her back to the command post. Don't let her go for any reason until she has a collar again.\"\n\nThe men grunted and started carrying her away from the battle. Rachel felt the panic begin to curl up inside her muscles. She started struggling, twisting in their grip, but the weakness induced by low health was too strong to overcome.\n\nThe battle lines burst open. Warriors flooded through a sudden gap they'd made in Hale's soldiers. A bar of white light struck one of Rachel's handlers in the heart. His eyes rolled up into his head and he slumped over, releasing her leg. When the light vanished an instant later, Rachel realized it was an arrow.\n\nThat wasn't magic. That was an ability.\n\nAnother energized arrow slammed into the helmet of the guard holding one of her arms, puncturing his skull. Rachel pulled free of their grasp, but her legs gave out underneath her. Iron-toed boots, moccasins, and bare feet stormed through the mud around her. She heard an explosion of lightning magic, weaker than before, but the screams were just as loud. \n\nRachel went on her elbows, fighting the weakness induced by low health, dragging herself through the mud one arm after the next. A body thumped next to her. She scrambled faster. It's just mud. It doesn't matter. No germs. I didn't actually get cut. Not in my hair. Just keep moving. Her elbow squished through blood. It soaked through her leathers, dampening her elbow. Fuck. Fuckity-fuck-fuck-fuck.",
        "\"Rach-El! Rach-El!\" Hands reached under Rachel's shoulders and dragged her up. The Indian chick's brown eyes thrust themselves at Rachel's face, darting over her features. \"Are you alright? Can you stand?\"\n\n\"Gonna say yes to alright.\" Rachel tried her feet. Her ankles caved in like wet paper mache. She couldn't get any strength into them. \"No to stand.\"\n\n\"Okay, hang on!\" The girl pulled one of Rachel's arms around her shoulders and started walking her forward.\n\nThe battle around them had devolved into a melee. There were no lines, no organization; just people fighting people. They walked through the center of it, trudging through the mud and the screams.\n\n\"If you heal me, I'll be able to walk,\" Rachel said. \"My health is too low!\"\n\n\"Health? Oh, your health bar!\" The girl turned and put a hand out, drawing runes in the air. White lines followed her fingers, then flashed. Rachel's health was restored 20 points. \"That's all my essence. Let's get back to\u2013\"\n\nRachel shoved her to the ground because a spear was thrust at her neck. They collapsed together. The girl shouted and struggled under her, not understanding the situation. Rachel leapt up just as another spear came in, trying to skewer them both. She escaped without harm, but the spear stabbed through the girl's leg, pinning her to the ground like a stuck moth.\n\nRachel instinctively reached for her sword, but her hand grasped air. She'd forgotten about losing it.\n\nInstead, she threw herself at the soldier holding the spear, driving into him with an elbow just below his chest plate. He grunted under the blow, but held his ground. Rachel's arm throbbed where it ground into his chainmail.\n\nDespite the recent boost to her strength, he probably outweighed her three to one. They struggled for leverage, each trying to topple the other's balance. Rachel wrapped her hands around his waist and dug her feet into the mud. He beat at her back, pulled her hair, smacked at the back of her head.\n\nThere was a thump. The man stopped struggling. Rachel glanced up; an arrow was jutting through his cheek and out through his head. She pushed on his chest; he toppled over like a felled tree. She glanced back to see the girl on one knee, bow in her hands.\n\nA white wisp rose from the soldier's corpse. It drifted slowly toward the girl, then was sucked into her body when it got close. Essence. Rachel's eyes went flicked to the girl's left hand and noted the pentagram scar. Unlike Rachel's which was twisted and curled, hers was a neat imprint, more like a henna tattoo than a marking.\n\n\"Thanks Chiki,\" Rachel said. \"Fucker almost got my hair.\"\n\n\"Chaki,\" she corrected. \"We have to regroup with the others before the lines form up again and trap us.\"\n\n\"I've got some essence left,\" Rachel said, \"but almost all my skills need a sword.\"\n\n\"Then we run faster,\" Chaki said. \"I'll shoot anyone that comes at us. You can pick a blade on the way.\"\n\nRachel turned toward the thick of the killing field. It was true \u2013 dead bodies and ownerless weapons were all over the place. There had to be a sword stuck in the mud somewhere. Always with the fucking mud. I guess beggars can't be choosers.\n\n\"Alright,\" Rachel said. \"Let's do this shit!\"\n\nChaki stared at her. \"This...shit?\"\n\nRachel made a fist and pumped it into the air. \"Yeah. For when you're ready to take them on.\"\n\n\"Them?\"\n\n\"You know \u2013 them. The man. Authority. A challenge. Shit headed your way.\" Chaki still looked baffled. Rachel huffed and rolled her eyes. \"It's an expression, okay?\"\n\n\"Oh.\" Chaki's eyes lit up in understanding. \"Jackson uses a lot of those.\"\n\n\"The dissertation can wait,\" Rachel said. \"Less talking, more walking.\"\n\n\"Fair enough.\"\n\n\"You won't be going anywhere.\"\n\nRachel felt her bones freeze over. The voice was cold, precise, and horribly familiar. She turned her head towards its source.\n\nLord Hale approached them on horseback, surrounded by his elite guard. A second mage rode next to him \u2013 the one that had been taking Rachel back, until Chaki came to the rescue. Dicks. Double-dicks.\n\n\"Chaki,\" Rachel muttered. \"That's collar man. Got any essence from that dude you owned?\"\n\n\"Enough for one attack,\" Chaki whispered. \"You?\"\n\n\"I can do a few skills. No sword, but at least it'll be something. Make a distraction.\" Chaki bobbed a small nod.\n\n\"Rachel,\" Hale said. \"It's good to see you again. I hear you collected one of my matrices for me.\"\n\n\"Yeah,\" Rachel said. \"Did your man tell you I plan on pushing your shit in with it?\"\n\n\"Conversations are always so colorful with you around,\" Hale said. \"An instant of freedom and you're back to your bad habits. We'll be doing some corrective exercises later.\"\n\nA strange phantom of pain passed through Rachel's chest. She swallowed.\n\nHale's gaze fell on Chaki. \"Drop your bow, and I might spare you.\"\n\nChaki's hands moved faster than Rachel would have thought possible. She fired her bow an instant later. The projectile shot through the air.\n\nThe magician next to Hale had raised his hand. Blue runes glowed in front of them. The arrow clinked off its surface and fell into the mud.\n\nHale raised his finger; runes blossomed in front of him. A bolt of purple lightning shot out as Chaki fired a second arrow. The two attacks passed one another mid-flight. Chaki's arrow struck the shield again and fell down, useless. Hale's lightning smashed Chaki in the chest. She was blasted off her feet and back into the air.\n\nRachel flinched, and then she realized she was supposed to be moving. She dug her boots down and burst into a sprint, reaching for her essence. She didn't have her sword, but damn if she wasn't going to punch him in the face.\n\n\"Ren, restrain her.\"\n\nThe mage next to Hale was already casting. Rachel was ducking between the horses when the spell caught her. White ropes of energy wrapped around Rachel's legs. She tripped forward and face-planted into the mud. Her arms were dragged behind her back and tied together by another strand of energy.\n\nRachel lifted her head and spat the crud out between her lips. She strained against the bindings, growling out between clenched teeth. One of the white bindings on her hands snapped; the energy made a popping sound as it released. It stung her hands; the horses near her stepped back, frightened by the sound.\n\nShe used her freed hand to pull on the binds at her legs, but a fresh wrap snagged her wrist. Lying on the ground as she was, she couldn't dodge; her hands got wrapped up again just as quick as before. And then another rope was added, and then a third, holding her arms tight enough to be painful.\n\nShe was not going to be collared again. She was not going to be this freak's possession. And so she started crawling forward, pulling her body across the ground like a worm, defying her tied up arms and legs.\n\nShe didn't get very far. The men around her laughed at her, chuckled. They didn't even have to move their horses.\n\n\"Did we really have to do this the hard way?\" Hale said.\n\nRachel screamed. No words, no swears, just pure frustration, pushing past her lips and through the mud. She'd been doing so well. And then, poof. Fuck magic.\n\n\"That was rather unbecoming.\"\n\nRachel was hefted into the air. She was turned to face the sky. Hale's face stared down at her. She stared up at him, his preened hair, his neat features, everything impeccable and in place as if he'd planned the singular moment down to the style of his shave. He dug his hand into her pocket and drew out the ink-black box. \"Thank you for returning the matrix. I do appreciate it.\"\n\nRachel cleared her throat and hocked a loogie at his face. The ball of spit-snot splattered onto his chin with a satisfying smack. Hale's face twisted back in disgust.\n\n\"Listen up you little shit,\" Rachel said. \"Jackson is coming, and he's way stronger than me. If Jackson doesn't get you, my brother will. My brother will fuck your shit up. He will fuck your asshole raw! Do you fucking hear me!?\" She shook in her bonds. \"I'll watch him make you sweat like a whore in church! I'll fucking \u2013\"\n\nHale backhanded her across the face. She recoiled from the strike. Hale sighed and shook his head. \"Rachel, Rachel. Won't you ever learn?\" He put his lips next to her ear. \"I forgive you,\" he whispered. \"It's my fault, really. I was soft. When we restart your education, I'll take it more seriously. You have my word.\"\n\nRachel started screaming, shifting. She whipped her torso and kicked legs. More guards moved in and clamped down on her renewed efforts. Someone stuffed a cloth in her mouth; her screams turned into muffled groans.\n\nHale looked over his shoulder. \"Give me a collar.\"\n\nSomething snagged Rachel's senses. She blinked. Hale looked up, frowning at the sky.\n\nIt was magic. Even though she couldn't see it, she could feel it - like not being able to see lightning, but still feel the rumble in your chest.\n\n\"My lord, that was a powerful spell,\" Ren said.\n\n\"Can you sense its alignment?\" Hale asked. \"Where was it located?\"\n\n\"Near the mountain,\" Ren said. \"It's coming this way. Quickly.\"\n\n\"What type of magic?\" Ren sat on his horse, his eyes closed, a hand on his forehead. He didn't answer. Hale faced him fully. \"What element, Ren?\"\n\n\"I can't tell,\" Ren said. \"I can't sense an alignment.\"\n\n\"Don't release her binds,\" Hale said. \"I'll handle the defense.\"\n\n\"Look,\" one of the men said. \"In the clouds!\"\n\nHe pointed up into the sky, so Rachel was able to see his finger. She squinted. It was hard to make out, but there were angular white lines high above them, cutting against the grain of the cloud layers.\n\nThe streaks stopped, then seemed to shrink into dots. They held in place for a moment, white specks against a grey sky. The specks started to grow larger. Then larger still. She cocked her head, frowning. Why would that happen?\n\nRachel inhaled sharply as she realized. They're coming straight at us.\n\n\"Release her binds, shields up!\" Hale shouted. \"Now!\"\n\n<center>****</center>\n\nJackson's Statistics:\n\nStrength - 100 +10 (+10%)\nVitality - 185 +19 (+10%)\nAgility - 50 +3 (+5%)\nCompulsion - 0\nPersuasion \u2013 0\nSpirit - 80 +20 (+25%)\n\nHealth \u2013 143/248\nEssence \u2013 56\nCarry Weight \u2013 28.4/59.0\n\n<center>****</center>\n\nJackson reappeared within the chamber that lay in the base of the mountain. The world swum back into view around him \u2013 first the mural at his feet depicting the tree, the pentagram, and the claw; and then the strange cavern, with its sterile dark walls and stone golem guardians. He felt his weight settle onto his heels as the teleportation finished.\n\nHe stood there, and he breathed the air. It was the freshest breath of air he'd ever had.\n\nIt felt like coming up out of water after being pushed under for an uncomfortably long time. He resurfaced just as his chest began to seize up with the need to inhale.\n\nHe rubbed a hand over his face. He felt sweat smear over his nose and forehead. His skin was warm to the touch.\n\nShakhan was not Shakhan. It was Satan itself - Lucifer.\n\nIn a way, Lucifer was supposed to keep the rest of the devils in Hell. But it was a long and crooked road from that grudging and unwelcomed duty to its current status of noble guardian of the underworld, at least in the eyes of the People-Under-The-Mountain. That thing was evil, and it had Jackson's soul in its clutches - or so it claimed. It was a confirmed liar. Still, when he considered the black pentagram carved into his left hand, Jackson was inclined to believe that Lucifer wasn't bluffing.\n\nHe could feel Chaki again. The bond had burst back into his head, gold and fierce and full of her fire. It was the lifeline that pulled him back.\n\nHis relief warbled into worry. How was he going to tell Chaki the truth about Shakhan? How could he tell Shaka, or Hanta, or any of them? Their entire lives were based in a false mythology.\n\n\"Jackson?\"\n\nOn top of that, there were already at least sixteen people that were condemned to having their souls laid at Lucifer's feet \u2013 the finalists of the Top Gamer competition, all who received their copies of Isis early. He'd bet a lot of money that every single one of them had already logged in; you couldn't hold the game in your hands and not play it. But there were another five thousand beta testers that were about to blissfully leap off the cliff of fate and condemn themselves.\n\nJackson couldn't take Lucifer's word that they had some sacred charge to stop the demons before they attacked Earth. That could all be just as big a lie as anything else it said. He had to speak out, put something on the internet, some kind of proof. Anything he could to bring Isis to a halt until he could find Emil Mohammed and ask him why he sold himself and everyone else to straight to Hell.\n\nA hand on his shoulder brought him out of his thoughts. \"Jackson? Are you alright?\"\n\nJackson turned. Shaka stood there. The aged lines of her face were bent in concern. Her hair hung string-like across her face. Her features were colored in bands of red and black from the runes that glowed around them, the remains of the spell that had teleported Jackson down into Dis.\n\nJackson managed to nod.\n\n\"Did you meet with Shakhan?\" Shaka asked. \"What did she say? Did she have words for us?\"\n\nShaka's eyes felt like they were boring into his head. He could suddenly feel the eyes of all the other spirit guides, watching him, waiting for something \u2013 but his mind was a blank.\n\nWhat could Jackson possibly say? Shaka was so damn tough that she even beat him into shape, but if there was anything in the world that could get to her, it was that her worship was a bunch of crap made up by the guy that told the first lie. Jackson didn't know how long Lucifer had planned all this out \u2013 the tribes, the mountain, Isis, Emil Mohammed - but it obviously had plenty of time on its hands over the past several millennia.\n\n\"Jackson? What's wrong?\"\n\nJackson's brain found the escape hatch. \"An army,\" he said. \"There's an army outside, attacking us, the mountain. We have to help!\"\n\nHushed murmurs from the spirit guides filled the air. They collectively released their magic, and the glow on the mural faded, sealing off the teleporter back to Dis. For a moment, it was pitch black. Some of the spirit guides drew new runes and relit the cavern with a multicolored field of spotlights. \n\n\"What army?\" Shakhan said. \"What are you talking about?\"\n\n\"Shakhan told me that we have to defeat the army on the plains,\" Jackson said. \"We can't let them get inside the mountain. Let's go!\"\n\nWithout waiting for confirmation, Jackson started off down the hall, spear in hand, his energy cannon swinging from his hip. He could hear the spirit guides following along behind him; their collective shuffling of feet echoed through the tunnel.\n\nShaka was quick to keep pace. \"Who is attacking us?\"\n\n\"I think it's the iron men,\" Jackson said, \"but I'm not sure. I'm just going by some pictures I have. Shakhan showed me.\"\n\n\"How did they find us without us knowing about it?\" someone behind them called.\n\n\"We have scouts out in every direction!\" said another.\n\n\"They never could have gotten this close to the mountain!\"\n\n\"Shakhan didn't say,\" Jackson called back. \"All I know is what I just told you!\"\n\nThe ground underneath them shook. Some people stumbled. Jackson threw a hand on the wall for balance.\n\nSmall spheres of white light flickered to life along the roof of the tunnel, leading back out the way they'd came in. The space was washed in bright light. He squinted his eyes and kept moving. Maybe it had something to do with whatever he'd activated back in the mountain.\n\nAs they ran through the tunnel, Jackson thought back to the city, back to the conversation. He had the strong impression that there was something in Dis that was really dangerous if it fell into the wrong hands, some kind of powerful magic or device. Jackson couldn't trust Lucifer on which hands were the wrong ones. Lucifer seemed to want Jackson to do something with it, which meant that going back and taking whatever it was for himself was the wrong move. At the same time, it didn't mind waiting for someone else to come along, a more willing puppet.\n\nLucifer was trying to push its agenda forward using Isis. It claimed demons had broken free and were going to eventually destroy Earth. Suppressed by the fear and the cold, Jackson hadn't challenged its statements, but it didn't offer any proof. It didn't show him anything. It just insisted that they had to do something about it.\n\nIf Jackson went in, Lucifer got what it wanted. If someone else went in, Lucifer got what it wanted. If the army went in \u2013 or really, one of the two men that Lucifer told him he needed to kill for his quest - that was bad. Apparently that wasn't allowed. Lucifer needed someone playing the game of Isis to take the power inside Dis.\n\nThe only winning move was not to play. He had to stop anyone and everyone from going to Dis. If no one reached the City of Demons, then it wouldn't ever become a problem. Alright. Protect Dis now, then warn everyone on Earth about Isis. Somehow.\n\nThey reached the door back to the outside. Jackson led the group up the first foothill past the entrance to the cave. The sky was grey, and the air was cold \u2013 uncomfortably cold. His breath steamed in front of him.\n\n\"Snow,\" Shaka said, still running beside him. Jackson saw it was she pointed; a few flakes were falling from the sky. Hopefully it wasn't a big storm.\n\nJackson stopped at the top of the hill to catch his breath. His mouth fell slack. He stared into the distance. The roar of thousands of men washed over him, a rolling tide of shouts and war cries mixed with an exchange of hunting horns and shrill war trumpets.\n\nShaka loped to a halt beside him, sharing his gaze. The rest of the spirit guides trotted up; they all stopped just the same. No one spoke. \n\nBelow them, nestled in the valley between hills, was the sprawling tent city. Past that was another hill on which a tremendous battle was being fought. A giant line of warriors stretched across the high ground like a two-tone snake, one side brown with leather and skin, the other side grey and black with iron armor. They fought over a patch of land that had been moiled into an alien landscape of mud and blood and smoke. Great blackened craters scattered here and there made it seem as if some giant machine had stomped its way across the field, crushing and burning the ground as it went.\n\nA distant purple light flared. Magic shot out of it and exploded on some target Jackson couldn't make out. He recognized the color and the shape of it \u2013 that was lightning magic, like the rattok mage had used. Like the kind he and Rachel had found at the bottom of the dungeon.\n\n\"One-Above,\" Shaka swore. \"We have to get down there. They're helpless against that kind of spell. Jackson, prepare yourself. I'm going to cast upon you so you can get there first.\"\n\nAnother woman stepped forward. She was probably Shaka's match for age, though she was quite a bit fatter than her more wiry counterpart. \"I'll cast with you.\"\n\n\"Better idea,\" Jackson said. He pulled the energy cannon free from his belt. \"Can you all heal me? Do you have enough essence?\" They didn't answer him. He looked back over his shoulder. \"Did you hear me?\"\n\n\"Jackson,\" Shaka said, \"you aren't hurt. What are you planning?\"\n\n\"Abuse of the game mechanics,\" Jackson said. He planted the claw-end of the gun against his shoulder, trying to imagine the metal sinking into his skin like getting his blood drawn. It helped, but it still pricked a little too hard. He went down on one knee, then lifted the pointy end up, as if he was aiming to lob a shot at the enemy lines. \"Get ready to heal me. I'm going to need it in a second.\"\n\nA tan, translucent game panel appeared in front of Jackson. Two lines of cursive blue writing offered a choice. It hovered in front of him, waiting for a selection.",
        "Essence\nLife Force\n\nJackson didn't have a target. He didn't even know if it was going to work at this range. He didn't even appreciate what he was messing with - this thing was ancient technology that could use his soul for fuel. He tried to focus on where the enemy spell originated. Worst case scenario, the shot was a dud and the spirit guides would patch him up fast.\n\nJackson took a long breath and braced himself. \"Life force.\"\n\nThe claw dug in and clicked, as if latching onto his bone. His 143 life dropped down to 5 in an instant; the strength was sucked from his body.\n\nA beam of pale grey light lanced from the end of the gun. Jackson's torso was bent back by the force. The spirit guides around him flinched, shielding themselves with their arms. An echo of magic power shot out over the fields like ten spells cast all at once.\n\nThe white light bent upward, then whistled up into the clouds that covered the sky. It bent again, then rocketed forward, rapidly eating up the distance to the two armies. It split into two beams, then four, each half as wide but traveling even faster than the initial shot.\n\nJackson collapsed to the ground. The gun fell from his hands. He clutched at his stomach. He felt like retching. The vague indicator of some status effect blinked under his health bar, which itself was pulsing red with a warning tone.\n\n\"Shaka,\" he grunted. \"A little help!\"\n\nShe knelt near him and drew runes. She barely used her hands to draw; the runes appeared as her eyes moved across his body, as fast as he'd ever seen her make them. They flashed as one, and his health bar began to refill.\n\nShaka's face was worried. The expression didn't suit her. \"Your spirit is weak. Even Shakhan's blessing couldn't shield you.\"\n\n\"Yeah,\" Jackson said. \"Figured it \u2013\" He held his breath for a moment, fighting the feeling of his stomach turning over. \"I feel like shit.\"\n\n\"Keep your crassness to yourself,\" she snapped.\n\nIf he hadn't been spending so much effort sitting on his nausea, Jackson would have laughed \u2013 even in this situation, she couldn't resist slapping him on the wrist. He grunted an affirmation instead. \"Yeah. Sorry.\"\n\n\"It would have killed any of us to use that weapon,\" Shaka said. \"What did you do?\"\n\nMovement from the other spirit guides drew Shaka's attention. Jackson propped himself up just in time to see the results of his work. The beams of light plummeted into the dark grey lines of the iron men. He couldn't make out the carnage at this distance, but he could see the holes his power made in their lines as it darted and blasted between them, ricocheting every which way. Dozens and dozens of black figures toppled over before the light dissipated. The tribesmen seized the moment, surrounding isolated pockets of soldiers and crushing them. Even though they were too far to be heard, the spirit guides shouted out cheers and encouragement.\n\nA few more people joined in healing Jackson. His health bar rapidly refilled, but the status effect box lingered under his health bar. He poked at it with a finger.\n\nThe box expanded, giving him a clearer view of the picture inside. It was small grey wisp with a red dagger stuck into it. A label below the picture described it in detail.\n\nDebuff: Soul Damage\nUse of magical means or methods beyond your capabilities has torn at your soul, rendering you weakened. You will remain in this state until healed or your soul repairs itself.\nTime Remaining: 9:17\n\n\"Shit,\" Jackson said. His health peaked at its maximum of 248 points, but the debuff wouldn't vanish. \"Shaka, stop. That's not doing any good.\"\n\nShaka let the runes vanish. \"There's more to heal,\" she said. \"You took on too great a burden. I can sense the damage, but I'll need time to construct the runes. That kind of healing must be precise.\"\n\nThe guide that helped Shaka tapped at her arm and pointed to the battle. \"Look!\"\n\nJacked struggled to see as the spirit guides clustered in front of him, exchanging worried looks. Shaka offered her hand. He leaned on her heavily; he could barely shift his feet forward. His stomach protested at the motion.\n\nThe iron men had withdrawn back down the hill. At a glance, it looked like the center of their lines had collapsed; the mages led the retreat from horseback. The warriors were pushing through, chasing them down.\n\nBut then Jackson saw the edge of lines swing inward. It wasn't a rout, it was bait. He only now noticed what was at the tip of their formation \u2013 square formations of troops with long pole weapons, clad in black steel. As the soldiers fell back, the tribesmen took up the center space, which left them in a disorganized mob between the two groups of elites.\n\nIt was a risky strategy. Jackson's sense of tactics only came from strategy games he'd played, but it didn't take a genius to understand that splitting your army could be dangerous. Elites or not, surrounding an enemy army didn't work as well when you had half their numbers.\n\nHe was confident the tribal warriors would be able to hold their ground for a moment. They could regroup, then crush one half of the army before turning back to crush the other half. The mages were probably just using it as a distraction to ensure their escape. The whole army would be moving away soon enough.\n\nA few moments passed; the mages stopped a distance away, then reorganized their foot soldiers as the tribes paused to face their new attackers. Jackson waited for the warriors to pick a side and crush one of the squares of troops.\n\nIt didn't happen. Rather than be pressed back by overwhelming numbers, they kept moving forward, hacking through the tribesmen with almost no resistance. Where their blades passed, dead bodies accumulated.\n\nLights flashed along the new battlefronts. Jackson recognized the white sparks of abilities. One of them might have been an arrow from Chaki. Maybe the other apprentices were casting spells.\n\nIt wasn't enough. The warriors bunched away from the black formation of elites, surrounding their own archers. Any ground they gave was swiftly taken by the halberdiers. The vicious assault had won time for the rest of the iron men to regroup, and now they were moving back in to attack the tribes on a third front, led from behind by the mages on their mounts.\n\n\"Those blade-axes,\" Shaka said. \"They're sharp enough to slice through wood and bone. We have to empower our warriors so they can fight back.\"\n\n\"At this rate, they're going to lose.\"\n\n\"We won't make it in time!\"\n\n\"You will,\" Jackson said. He tapped Shaka's shoulder, getting her to let him free, then hobbled back to the energy cannon. He lifted it up and knelt, planting himself firmly. \"This'll slow them down. You guys start running.\"\n\n\"Jackson,\" Shaka said, \"you can't use the weapon again. You'll worsen the damage. Let me use it \u2013\"\n\n\"I don't think so,\" Jackson said. \"You just said I'm the only one that could survive the backlash.\"\n\n\"Then you have to wait until I can heal you. I'll start drawing the spell.\"\n\nJackson glanced at the timer. It was down to 7 minutes and change. That was 7 minutes too long. \"How long will it take you to draw the spell?\"\n\nShaka furrowed her brow. \"Some time, at least.\"\n\n\"That's too long. You lead them down and help the tribes. This shot won't kill enough of them to decide the battle.\"\n\n\"Jackson \u2013\"\n\n\"Goddammit, Shaka,\" Jackson said, \"Chaki is down there!\"\n\nThe spirit guides stared at him. Shaka's expression was briefly shocked, and then it firmed into her usual stubborn scowl. She opened her mouth with a look that told him he was about to get a lecture.\n\n\"Shaka, I always listen to you,\" Jackson said, cutting her off. \"I think I respect you more than anyone I've ever respected. Please hear me out. I'm not trying to kill myself.\"\n\nShaka hesitated. After a moment, she closed her mouth and folded her arms with an expectant look.\n\n\"Our guys are going to break under that attack,\" Jackson said. \"Even if we start running now, they'll be slaughtered before we get there. If I fire now, that will give the tribes a chance to fall back and get a better position. You can meet them halfway, then support them with magic to even things out. I'll catch up after.\"\n\n\"I'm going to stay and heal you.\" Jackson started to speak again, but Shaka stopped him with a finger, jabbing it into his face. \"This is not negotiable, Jackson Vedalt.\" She turned to the others. \"The rest of you, get going. Now!\"\n\nOne spirit guide turned and started running. The rest followed. Jackson nodded to himself, then set the gun against his chest. \n\nShaka moved a short distance away. \"You had better know what you're doing, Jackson.\"\n\nNo clue, actually. \"It's under control,\" he said. Jackson mentally opened up the cannon's information screen, scanning it for anything he might have missed.\n\nEnergy Conversion Cannon\nAn ancient device discovered by Jackson in long-abandoned ruins. It can convert life force or essence into a powerful blast of energy that ricochets between foes; weaker enemies may be destroyed outright. The more energy it can access, the more powerful the effect, but the backlash leaves the user severely weakened. Repeated use is not recommended.\n- Rune Slots - None\n- Durability - Extreme\n\nHe wanted to wait until his debuff was gone, but he didn't have the time. Another five minutes of warfare was five minutes his tribe didn't have. He pushed the butt of the gun into his shoulder; the claw sunk into his skin. He barely felt it above the nausea.\n\nAs Jackson eyed the panel that flashed up, a realization struck him. That was the first time he'd really thought of it as his tribe. \n\nHe probably should be more worried about the consequences of what he was about to do. Pushing his soul harder when it was still recovering was extremely dangerous. He didn't have any idea what would happen. Even the item's description warned him not to do it, and Isis didn't hand out information like that often.\n\nJackson was concerned, but he didn't feel any hesitation. He had stared the abyss in the eye and come back in more or less one piece. This was peanuts by comparison.\n\nThis was the action that would guarantee the most damage to the army that was killing the People-Under-The-Mountain. It was most likely to save Chaki's life. It was the best possible move.\n\nWith that confidence underwriting his voice, he spoke the words aloud. \"Life force.\"\n\nJackson's health bar plummeted from 248 to 5. A massive beam of grey light erupted from the gun. The shockwave ripped the weapon out of his hands; it smacked his neck and spun away through the air. Jackson was blown backward and sent into a tumble down the hill.\n\nHis brain felt muddled. He could barely feel his limbs. It felt like he was rolling down in slow motion. His head snapped back against the ground. He flipped over. His face was dragged across the grass. Flipped over. Not much pain.\n\nHis vision went grey. It took him a few moments to recognize he was looking at the sky. His health bar was completely empty. The fall must have knocked the last bit of health from him.\n\nShaka was there. She was saying something. At least, Jackson thought she was. He saw her lips moving, but he couldn't hear her. Bright runes appeared around him as she began to sculpt a spell.\n\nThe status symbol under his health bar changed. He couldn't lift a finger to get a description. He tried to focus on it, mentally order it to expand \u2013 and at his command, it did.\n\nThe picture came into sight. It showed the grey wispy soul again. It was ripped into two pieces, the red dagger having been driven between them.\n\nDebuff: Soul Tear\nRepeated damage has torn open your soul. You are extremely weakened. Unless healed by powerful magic, you will lose health rapidly until you die.\n\nThere was no timer.\n\nShaka's magic went to work on him, but Jackson could tell it wasn't enough. His health bar started filling \u2013 and then it skipped down by ten or twenty points. Shaka kept pouring herself into the runes, and his health kept rushing back, but it always ticked back down.\n\nSweat was dripping from Shaka's forehead. She was breathing hard. Jackson tried to move again, but there was nothing there. It was as if whatever was linking his brain to his body had been cut.\n\nWhatever was linking it? Heh. He knew that. He studied it. It was his life, before Isis, before Charles. Decisions made in the cerebral cortex and prefrontal lobe were passed to the motor cortex regions, then to efferent spinal neurons, ganglia, more neurons, neuromuscular junction, muscle movement. It was what they copied to make prosthetic limbs. The whole science was based in mimicry of what was already there in the body.\n\nShaka collapsed next to him, sweating and shaking from her exertion. His health bar had actually been refilled quite a bit, back above two hundred. She'd fought very hard for him. He watched it tick back down.\n\n213.\n\n193.\n\n173.\n\nJackson wished he could see Chaki again. He could feel her still, her bond, burning bright. He couldn't reach for it like he did before. That part of him was gone, too.\n\nIt occurred to Jackson, then, that he'd been cheated at the end. He'd never gotten the essence for making all those kills with his energy cannon. Maybe he was too far away. He'd never tested if distance mattered with essence after making a kill. All his other kills were close combat.\n\n113.\n\n93.\n\nMotion next to him. Shaka was up on an elbow. Her face was clenched in effort. She raised her hand, and more runes appeared.\n\nHis health popped up back up to 166, and then she collapsed. He hoped she hadn't hurt herself. He was a lost cause.\n\nBut he'd made his own decision. There was some solace in that.\n\n146.\n\n126.\n\nLucifer was right, in a way. For all the criticism he leveled at everyone around him, at the world, at the injustice in the system, what had he done to change things? Nothing much. He just whined about it and called everyone else stupid.\n\n106.\n\n86.\n\nMaybe that's why he felt calm. He'd finally stood up and done something.\n\nFucking Isis. Fucking Emil Mohammed. I believed you. I thought you got it, got me. I guess I was the stupid one.\n\n66.\n\n46.\n\n26.\n\n6.\n\nJackson's bar hit zero. Pain shot through him, a claw that reached into his stomach and started digging around as his insides.\n\nHis essence bar started draining. The measly 56 points blew away in the wind. In a few seconds, he was in the single digits.\n\nI guess that's the end, then. Good luck, Chaki. Rachel.\n\nWhite light crept up on the edges of Jackson's vision. It danced around like snow, drowning out Shaka and the grey clouds above. Looks like the storm is going to be pretty bad after all.\n\n<center>****</center>\n\nRachel could hear a whistle in the air. It turned into a shriek as the beams of white light shot down toward them. The horses started tramping their hooves in the ground, nervous.\n\n\"If you want to live, Rachel,\" Hale said, \"I'd suggest staying within our shield!\"\n\nRachel's magic bindings fell loose. She immediately started struggling to free herself. She was getting sick and tired of being passed between captors like a piece of meat. Whatever this was, it was her only chance to get away. Between holding her and keeping their horses in check, her guards were barely managing to keep their hands on her, but she couldn't quite get away.\n\n\"Orders, my lord?\" one shouted.\n\n\"My lord! What's coming?!\n\n\"Hold her steady!\" Hale said. \"Ren, joint cast with me! Write for a narrow deflection angle!\"\n\nRen glanced at Hale, nodded. They both began to scribble in the air. Runes blossomed in front of them. Ren's glowed blue; Hale's were an ugly maroon. They wrote in the air furiously as the white streaks grew closer.\n\nAn arrow zipped up and buried itself through Ren's hood and out the back of his head. He slumped over, dead. Half the spell collapsed. Rachel twisted her head enough to see Chaki back on her feet, her clothes scorched and her hair frizzed from Hale's lightning attack.\n\n\"Kill her!\" Hale shouted. He was still looking upward, entirely focused on repairing the faltering spell. Chaki fired another arrow, but one of Hale's guards took the shot for him.\n\nThe beams of light slammed into the shield of runes Hale had drawn into the air. The power hammered on it repeatedly, cracking and banging like fireworks on a tin roof. Sparks and flashes of energy flared from the impacts. Hale bent backward in his saddle, fighting against the force with his body as he shoved his magic into the shield.\n\nThe white lasers stopped their assault, reversed direction, and rushed straight toward Chaki. Rachel barely had time to blink before they reached her.\n\nAnd then they bent around her. It was almost creepy \u2013 laser beams, twisting around something at 90 degree angles. And then they were off, rushing toward the battle lines.\n\nRachel started running. She grabbed Chaki \u2013 who was still standing there, dazed \u2013 and started pulling her by the arm. Chaki eventually let herself get tugged into a run. Rachel risked a glance back over her shoulder. Hale was slumped in his saddle, his face pale as a ghost, breathing hard. His guardsmen had surrounded him and were drawing him back.\n\nScreams drew Rachel's attention back to where they were moving. She stumbled a half step, caught herself, then kept going.\n\nAs if they had a mind of their own, the lasers had gone straight for the armies that were still smashing into one another. The lines of light blew through the iron men, punching holes straight through their armor and leaving bloody messes behind. Just as they reached the warriors, they bent again, traveling left and right down the lines.\n\nDozens died in a heartbeat. Maybe a hundred. Maybe more. The end result was a huge hole in the lines of the iron men. Rachel didn't sprint quite as fast as she could \u2013 she was a lot faster than Chaki, and she didn't want to abandon the chick that just saved her ass several times over. As they ran over the corpses, Rachel lifted a big iron sword from a dead man's hands. Thanks buddy.\n\nEssence drifted up out of the corpses. It spread into the air somewhere \u2013 Rachel lost track of it in the clouds. And then she wasn't so sure it had even gone up at all. It had started snowing - little flurries drifting down from the sky.\n\nThe warriors had crushed through the gap in the enemy lines. Rachel and Chaki were suddenly surrounded by friendly faces. A few gave Rachel odd looks, but Chaki stayed close, keeping an arm on her to let them know she was vouched for.\n\nTrumpets sounded from Hale's troops. Their main line was retreating. A huge roar went up from the warriors. Spears were lifted into the air in victory.\n\nBooming war horns blasted at the end of the line. The shouting war cries were replaced by a buzzing murmur of confusion. A voice sounded above the heads in the crowd. \"They're attacking our flanks! Stay organized! They're attacking the sides of our line!!\"\n\nThere was a sudden mad press to leave the center and get to where the fighting was good. Rachel and Chaki were carried along in the current. \"What's the plan?!\" Rachel shouted over the din.\n\n\"Keep fighting!\" Chaki shouted back. \"Wait for Jackson!\"\n\n\"Sounds good to me! Thanks for helping me out!\"\n\n\"A friend of Jackson is a friend of mine,\" Chaki said.\n\nThat was a bit mushy for Rachel's taste, but she wasn't in a position to complain about it. She nodded at her and tried to focus on scooping as much of the grime out of her hair as possible while they were carried along toward the front.\n\nAs the immediacy of the battle faded somewhat, it occurred to Rachel that she was totally surrounded by a crazed mob of mud-and-blood smeared Indians. God these people smell bad. That one is barely wearing any clothes. Is he smeared with mud? Rachel was abruptly pushed to the side by a surge in the crowd; someone's ankle stomped straight on her toes. \"You fucking asshole!\"",
        "\"What?!\" Chaki shouted.\n\nRachel plastered a bland smile on her face and raised her weapon. \"Those fucking soldiers! We're gonna kill them!\"\n\nThe warriors around her rattled their spears and echoed her cry.\n\"Kill the iron men!\"\n\"Protect the mountain!\"\n\"For Shakhan!\"\n\nChaki pumped her fist. \"Those fucking soldiers!\" She glanced at Rachel. \"Did I say it right? That sounded like Jackson's tongue.\"\n\n\"We'll work on it,\" Rachel said. She glanced at Chaki's hand, noting the inverted pentagram marked on her skin. If it wasn't for that, Hale's spell would have vaporized her. \"I thought you were a beta tester.\"\n\n\"Beta...?\"\n\n\"The game! Isis!\" Rachel pointed at the mark. \"You've got a star thingy? Hello?\"\n\n\"Shakhan's symbol? Jackson gave it to me.\"\n\nRachel nodded to herself for a moment, as if that was the expected answer, and then it hit her. Her eyes bulged. \"Wait, what?! How the fuck did he do that?!\"\n\n\"Watch yourself!\" Chaki shouted. Rachel faced front to see that they were about to come into contact with the enemy.\n\nHer surprise of a moment ago twisted into a half-panic and amplified.\n\nHale's halberdiers were sweeping forward in a wave of black steel. Where their hooked blades passed, men died.\n\nWarriors lost hands, arms, heads. Those that tried to block with their weapons were gutted. There was so much blood that the ground looked more red than brown. The elites stepped over the corpses without slowing, a spiked wall of death.\n\nThere were small victories. A few warriors would gang up on one man, managing to get their spears through the articulated plate armor, but then they'd all be cut down together in one attack. It was as if the halberds met no resistance at all when they contacted a person. They moved as easily through bone as they did through air.\n\nA moment later, Rachel was at the front, a chaotic, screaming, gnashing, bloody front. A halberd stabbed toward her.\n\nRachel ducked left, stepping around the thrust. It might be sharp, but it was a giant knife on a big stick. It took time to swing. She dashed in and activated her Power Thrust.\n\nHer sword flashed white. The tip struck the man's plate armor right on the heart.\n\nThere was a heavy thud, and Rachel's sword rebounded. She stumbled backward to keep her balance. The man winced back, clutching his chest. Rachel could see where her blow had pushed his armor in, crushing it against his skin, but he was far from dead.\n\nAnother halberd came in low from the side. Rachel jumped it. The man brought his weapon up high, then sliced down in a straight line. Rachel stepped to the side and went in for the kill.\n\nShe couldn't risk half-measures. She activated Flicker Sticker. Her sword arm blurred. She felt the tip of her blade strike the armor once, twice, then plunge through the man's gut. She kicked him off the blade and stepped back, away from the oncoming soldiers. They stormed over their fallen comrade without care.\n\nRachel's eyes flicked to her essence bar as the white wisp drifted into her body. It ticked up by 27 points, leaving her with 64. Flicker Sticker cost her 35 apiece. If she had to use it for every soldier, she'd run out of essence really fast. Their armor was too thick.\n\nA white arrow flew by Rachel's head. It slammed into an oncoming soldier, plunging into the gap in his faceguard. Rachel shouted over her shoulder. \"That was fucking brutal, Chaki!\"\n\n\"You can't get through their armor!\" Chaki said. \"Go for the weak points!\"\n\nRachel settled herself next to some friendly warriors. Now that they had really turned to face their enemy, the crush had slowed down somewhat. She tried to think. She didn't really have any abilities that could target weak points. Maybe she could make one?\n\nThe lines closed together. Rachel peered at them as they moved, looking at the places where the pieces of their armor hooked together. She'd never get her sword through the guy's helmet. Their shoulders were covered over with thick round plates, protecting their armpits. She looked at their legs.\n\nThere!\n\nThe kneecap itself had a round plate, but the back and sides of only had a leather strap, probably so they could move easily. They were soldiers designed as shock troops for smashing through an enemy, not for protracted battle. If she struck their knees hard enough from the side, she could hobble them, and then they'd be easy pickings.\n\nMaybe she could even crush in the front \u2013 that piece of armor didn't have any supporting bits nearby. There was nowhere else for the force to go. If she hit hard enough, she should do damage.\n\nAll she had to do was get inside their giant razor-sharp weapons of doom.\n\nOne of the soldiers thrust with his halberd. The warriors to Rachel's left moved to get clear. Rachel ducked the other way.\n\nOne of the other soldiers swung his weapon over, trying to strike Rachel as she closed the distance. She knocked the shaft away with her sword, then swung the tip toward the other man's knee, activating her Power Thrust. Her weapon flared and was pulled forward on rails, straight for the soldier's knee.\n\nAn ugly crack snapped over them. The man screamed and buckled to the ground. Rachel kicked him away. The other soldier was bringing his weapon around, lifting it high \u2013 and revealing the exposed skin under his heavy shoulder plate.\n\nRachel exploded off her feet at top speed and activated another Power Thrust. Her move caught the soldier off-guard. Her blade sank into his chest from the side; his weapon fell from his hands, and she pushed him away.\n\nA panel popped up in front of her.\n\nIncisive\nPassive: Increased chance of armor penetration with all active abilities. Chance increases per level.\nActive: A carefully aimed thrust. Power multiplies if used at an enemy's weak point.\n- Essence Cost: 15\n- Level: 1\n- Progress: 25.6%\n\nRachel barely had time to look it over before she ducked back behind another thrust. Another weapon came at her, then another. They were focusing on her, keeping her on the defensive. She whipped her torso around to dodge the strikes.\n\nRachel almost tripped backwards. She waved her arms and tried to keep her feet. A halberd nicked her in the side, slicing off a few points of health.\n\nAs she regained her balance, she saw that she'd almost fallen over a torso. It was the armless remains of the warrior she'd been fighting alongside.\n\nHer temporary success had isolated her from her allies. Everyone else was falling back. Another flash of light \u2013 an arrow from Chaki, buying her time. She skipped backward to get clear before she was surrounded. \n\nRachel realized why she'd been left behind. They'd been struck from the front again by the normal soldiers, reorganized and pushed into another attack. They were able to fight back against those shock troops well enough, but they couldn't do that and pivot to hold off the elites at the same time.\n\nRachel planted her feet. They were pushed on the front and getting ground up on the sides. She had to protect this flank or they were completely screwed.\n\nArrows flicked past her head. A few elites went down, but their heavy armor insulated them from that kind of attack. She wouldn't be able to rely on archers to bail her out.\n\nWarriors stepped up to either side of Rachel. They looked grim. Air misted out of their mouths and into the cold. The snow was getting thicker.\n\nThe one next to her was young, stocky, short \u2013 still taller than her, though. He looked like he'd been through hell. Blood was smeared on his wrists, ankles; more matted down his hair. His rawhide vest was splattered with things Rachel didn't want to look at too closely.\n\nHe looked back at her. \"You fight well.\"\n\n\"I hope you do, too,\" Rachel said. \"The last guys that stood next to me got cut into little pieces.\" The young man stared at her. The other warriors set their jaws a bit firmer. \"Just saying, if you want to back out. You guys don't have one of these.\" She waved the hand with the pentagram.\n\nThe boy thumped his chest, over his heart. \"This will have to do.\" His eyes firmed up. \"We show them our hearts. Our spirit! We won't be broken!\"\n\nThe warriors growled in affirmation. A few sent up war cries \u2013 some howling, others shouting. More started up a chant. It all formed a boiling chorus of noise that filled the air around Rachel. She felt caught up in it.\n\nThe elites were closing in. There was no more ground to give. They had to hold the flank.\n\nRachel and her allies started running toward the enemy line. Her shout was lost inside the rolling thunder of war cries, but she shouted anyway. \"Let's do this shit!\"\n\nJust as they were about to clash, white beams poured from the sky.\n\nThe lines halted. Everyone scrambled for cover. The snow had turned the mud into an icy sludge; warriors fell to the ground, sliding, tripping. Elites jostled, their armor clanking as the front came to a halt.\n\nRachel ran forward.\n\nEarlier, the beams of light had only killed Hale's troops. She'd watched it \u2013 it tried to kill Hale, and failing that, went after the soldiers. It never touched the tribesmen. It bent around Chaki to avoid her.\n\nAnd after the kills, essence had left their bodies. That meant a player was responsible \u2013 and that meant Jackson.\n\nIt had felt like twenty years had passed since his first salvo. Being in the battle was like being in a little bubble of time. In the back of her mind, some part of her knew it had only been a minute or two, but time just didn't work the same way when you were clinging to life and trying to bash the other guy's head in.\n\nAs she prepared to use her abilities, she had the idle thought that she should be far more disturbed by how easily she was killing people than she was.\n\nThe beams of light blasted into the elites just before Rachel arrived. They punched through the black steel as easily as the soldiers' halberds cut through bone, leaving behind shredded metal and gaping blood holes. Rachel used Flicker Sticker, finishing off three soldiers at once. She used it again, and again.\n\nEven as she was plowing through enemies, the lasers moved faster than she could. Essence drifted up into the oncoming snow and vanished. Damn waste.\n\nThe seventh time she used Flicker Sticker, a new panel opened up in front of her.\n\nChained Offensive Multithrust:\nAs long as one enemy was slain during the last use of Flicker Sticker, another Flicker Sticker can be reactivated immediately for half the essence cost. Additionally, any damage taken by the user will be doubled by each successive use.\n- Essence Cost: 100\n- Level: 1\n- Progress: 35.6%\n\nRachel didn't like the name of it \u2013 she'd renamed Multithrust in the first place \u2013 but she activated it without hesitation.\n\nHer sword arm whipped forward. Her essence jumped down by 100 points. A haze of iron and light shot in front of her; she felt her arm vibrate under the control of the ability. Two men fell dead, and she got 52 essence back.\n\nOne of the best things about Isis was how the abilities just knew when to activate without you saying anything. Rachel played tons of games where you had to click a button, state a command, make a gesture, something, anything \u2013 but Isis knew. Then again, Isis was real life.\n\nShe chained into a second Flicker Sticker. Her essence only jumped down by 50 points. She only killed one man this time, but the other two were bashed and banged onto the ground. The following Flicker Sticker \u2013 that only cost her 25 essence \u2013 killed them both.\n\nRachel's sword was a white-hot stick of death. She churned through soldiers, killing them one after another while they were still recovering from Jackson's long-distance laser attack. They were still bunched up from when they'd come to a halt, making it even easier to keep up her chain.\n\nBy the fifth chained Flicker Sticker, she only paid 3 essence \u2013 of course it was rounded down, Emil Mohammed would never fail her \u2013 and she'd killed enough enemies to send her essence into overflow. She had to capitalize on her strengths, so she mentally opened the menu as the ability did the work for her and dumped another two hundred into Agility, then threw another 100 into Spirit to help hold the extra essence.\n\nWhile she was distracted by her game menu, a soldier busy dying in the mud managed to slice her ankle with his halberd.\n\nRachel's leg was torn out from underneath her; she collapsed to the ground. The blinking icon telling her she was in the midst of a combination attack vanished. All the health she was healed by Chaki and everything she'd been slowly regenerating was chewed up by that little scratch.\n\nThe soldier crawled toward her. He raised his armored elbow, then jammed it into her stomach, using the leverage to pull himself over her. Rachel clenched against the blow, trying to stop the air from leaving her lungs.\n\nThe man pulled a dagger from his belt. His eyes were wild, driven. Below the armor that covered his neck, Rachel could see a familiar wooden collar.\n\nHe swung his shoulder down, bringing the dagger with it. Rachel gripped her sword and screamed out her effort as she lifted the blade, propping the hilt under her shoulder. He impaled himself on the blade. Rachel twisted her neck away, avoiding the dagger that was still coming at her. It hilted into the mud.\n\nShe watched the light in his eyes die. Essence flowed into her.\n\nHorns sounded in the distance; high, squealing trumpets used by Hale and his forces.\n\nThe soldier's body laid on top of her, dead. She struggled to breathe with the weight on her chest. She didn't have the strength to roll him off. \n\nSomething moved the corpse away. Rachel sucked in oxygen.\n\nA hand was offered to her. She took it and was hauled to her feet. It was the young man from before. He was grinning.\n\n\"What was that horn?\" Rachel asked.\n\n\"They're running,\" the young man said.\n\nRachel surveyed the landscape on unsteady feet. Corpses were everywhere. Dead warriors, dead soldiers, black armor and brown leather. The snow was still floating down, already beginning to cover up some of the colder ones. One good thing about the cold \u2013 it really killed her sense of smell.\n\n\"This is fucked up,\" Rachel said.\n\nThey both looked up at the sound of footsteps. Chaki and some other guy were coming their way. He looked like an older version of the one that just helped her up. Then again, I do kinda have trouble telling them apart.\n\n\"Rachel!\" Chaki said. \"They're retreating! We won! We won!\"\n\nThe man marched up beside them and plopped the butt of his spear in the ground. \"Rachel. I saw you fight. Thank you for helping us.\" He extended his hand. \"Is this how you greet each other, where you're from? Jackson taught me.\"\n\n\"Yeah, basically,\" Rachel said. She took his hand. His grip crushed her fingers together; she grimaced and scrunched her eyes. He pumped her hand in a single, hard shake. She flexed her fingers as soon as they were free, trying to work the pain out. \"Generally you try not to rip the other person's hand off,\" she said.\n\nA sheepish smile grew on Hanta's face. \"Jackson said something similar. My apologies.\"\n\nRachel sighed. \"Whatever.\"\n\n\"I am Hanta,\" he said. \"You've met my son, Vuntha.\" The younger man nodded to her.\n\n\"Rachel Ransfeld,\" she replied.\n\nRachel smiled to herself. She didn't get out much back on Earth, but when she did, her introductions were always met with the same response.  Ohmygosh, did you just say Ransfeld?! The Ransfeld?! Wait, are you related to Charles? It got annoying after a while.\n\n\"That's right,\" Chaki said. \"Jackson was wondering about your name. Do you know someone named Charles?\"\n\nRachel stared up at the sky. Somewhere, a higher power was laughing at her. Laughing and pointing and telling its friends all about the great decades-in-the-making joke it just played. \"Yeah. Charles is my brother.\"\n\n\"By the way,\" Hanta said, \"why do you have two names?\"\n\n\"I told you,\" Chaki said. \"It's because they have more people. When you have that many, you need two names.\"\n\n\"That's ridiculous,\" Hanta said. \"How many people can they possibly have to need two names?\"\n\nRachel was still glaring at the clouds. \"I hate you,\" she muttered.\n\n\"What is it?\" Chaki asked.\n\nRachel sighed. Chaki was giving her the eyeball \u2013 maybe it was her last name, or maybe it was her muttering to herself. That tended to get weird looks. \"Hale's not done. He won't give up that easily.\"\n\nHanta glanced into the distance; they all followed his gaze. The snow cut their visibility. The wind wasn't blowing much, but it was coming down in big, wet snowflakes. They weren't the kind that piled up high, but they covered everything in ice really fast.\n\nHanta watched the snow a bit longer, then nodded. \"The iron men didn't cross a hundred miles to withdraw like cowards. They've already caught us unprepared. We need to regroup and expect the worst.\"\n\n\"I think those white lasers were Jackson,\" Rachel said. \"He should show up soon.\"\n\n\"I hope you're right,\" Hanta said.\n\n\"I can feel him,\" Chaki said. \"But it's off. Faded, somehow.\" She lowered her head. \"I think whatever he did took something out of him.\"\n\n\"How can you tell?\" Rachel asked.\n\nChaki glanced at her. \"Well, it has to do with this,\" she said, raising her mark. \"We formed a sort of pact. A Bond. That's what the magic calls itself.\"\n\nRachel really liked Chaki. She was tough, and seemed pretty smart. She even got the collar off Rachel's neck. That couldn't have been easy.\n\nThose positive feelings were almost totally erased by the bubbling green head of envy that stirred in Rachel's gut at the news she was that close to Jackson. \"What kind of bond, exactly?\" Rachel asked.\n\n\"Well, we're...it would take some explaining,\" Chaki said. \"I'll tell you about it later.\"\n\nThe creature inside Rachel growled and shifted, unsatisfied. Rachel pushed a fake Charles-style smile on her face and nodded. \"Sure, yeah. There's a war on and all.\"\n\nThe echo of a scream cut through the air.\n\nTheir heads snapped toward the sound. They stared out into the snowfall. The scream came from the direction the iron men had retreated. Rachel could just make out movement at the edge of her line of sight, past the snowflakes \u2013 their lines, reorganizing. The source of the noise was unclear.\n\nThe scream turned into a low groan, then an almost feral growl, vibrating under the snowflakes. The deep sound got stuck in Rachel's chest and rattled around there like the throb from a massive subwoofer.\n\n\"We need to regroup, now,\" Hanta said. He started off. \"Make another line! Regroup! Regroup!\" Warriors flocked to his call, rapidly forming into another line along the footprints Hanta's moccasins left in the snow.\n\n<center>****</center>\n\nLord Hale slammed his fist on his saddle hard enough to hurt his hand. Three mages dead. Three. The Vuldstadt himself would be dancing in his tower when he heard that Hale's magical power base had been halved during the course of the single battle.\n\nHis soldiers weren't much better off. He'd expected the barbarians to break under the power of the lightning matrix, but Rachel's sudden arrival \u2013 without her collar \u2013 had dismantled that plan. And then he wore her down, had her in his hands, and she slipped away a second time. Hale didn't understand the source of the magical bombardment that had forced him into such a corner, but it had done far more damage than the men they'd been fighting had. He mentally swore to kill whoever was responsible \u2013 slowly.\n\nHe glanced out into the storm. The black mountain loomed in the sky, easily visible even with the snow coming down thick. The spell came from there. It underlined the possibilities, the great force that stirred underneath the rock. If he could harness that kind of power, then it would more than make up for the loss of his mages.\n\nThey could still cast lightning magic, but it wouldn't have the power and coordination. Their individual bolts of lightning were powerful, but it wasn't close to the same scale. Two mages couldn't take down an entire army.",
        "He'd already played the card of the ghostmen to start the battle. It had been an effective move, but he didn't have time to make more. Another cavalry charge was out of the question \u2013 his own horsemen were still fighting their counterparts out on the plains. They were miles away.\n\nTo the credit of their training, his troops had reorganized quickly, stopping their latest withdrawal from turning into a rout. The snowstorm was an annoyance at first, but its arrival couldn't have been better timed to help cover their retreat.\n\n\"My lord, I can sense mages!\"\n\nHale turned to Hildan, one of his two remaining magicians. \"How many? Are they at the line?\"\n\nHildan nodded. \"I count a little over thirty. They'll be with us in moments.\"\n\nHale's forehead creased in thought. They didn't have the ability to form Words, but years of skirmishes with the tribes had shown their unparalleled ability to enchant their warriors. Even the Tower at Renstadt would have trouble creating similar effects with multiple magicians. The entire reason for the timing of their attack was to avoid this problem.\n\nHale turned to his newly-appointed battle captain, a man clad from head-to-foot in black armor. A forest green cape enchanted for physical protection draped down his back and off his horse. \"My lord?\" he asked.\n\nHale would have preferred to have Tell'ad on-hand for strategy like this, but after his latest betrayal \u2013 letting Rachel get away - he couldn't be trusted. \"How many slaves do we have left?\" Hale asked.\n\n\"Last headcount put us at 43, my lord,\" the captain said.\n\n\"Excellent,\" Hale said. \"Bring them all up.\"\n\n\"All, my lord?\"\n\n\"Every last one,\" Hale said, \"unless you'd prefer I use you.\"\n\n\"Right away, my lord,\" the captain said. He turned and snapped orders to his subordinates.\n\n\"My lord.\" Hildan leaned toward him, speaking quietly. \"We won't be able to replenish ourselves easily if we use every slave.\"\n\n\"We've lost the luxury of choice.\"\n\n\"I know what you're thinking,\" Hildan said. \"I don't think the creatures can beat them. We'll just be trading our magic for theirs, and then they outnumber us and we've played our last card.\"\n\n\"It's not about winning this battle,\" Hale said. He stared up at the mountain, his eyes following the peak up until it was swallowed by the snow. He realized they were going about this in the wrong way. His original thinking had been to destroy the tribes and then claim the land, but there was nothing stopping him from making a claim and then destroying the tribes. \n\"We need to hit them as hard as we can. Now.\"\n\nHildan followed his gaze. \"What do you think it is, exactly?\"\n\n\"I don't know,\" Hale said. \"But we're going to find out. The barbarians have accrued some power, but we have the finest magical education in the continent and years of experience. If they've intuited this much just on feeling, imagine what we can extract from the place.\"\n\nHildan nodded. \"I understand. But we still have to get through them to go there.\"\n\n\"Remove the detachment of halberds from the left flank,\" Hale said, raising his voice so his commanders could hear. \"Concentrate half on the right with the others. Place the rest throughout the army. Tell the cavalry to charge back and attack into the enemy lines.\"\n\n\"Wouldn't that be a waste?\" Hildan asked.\n\n\"Not for our purposes,\" Hale said. \"They want a fight - a final stand, a grand battle. The slaves will draw out their magic, and the army will challenge them. In the meantime, we bypass them altogether.\"\n\n\"My lord,\" came the captain's voice. \"As you requested.\"\n\nHale turned his horse about. The first slave was readied for him, and the rest were lined up. They all had the same look on their faces \u2013 those that knew they were condemned to a place from which no one else had returned.\n\nThey were, of course, absolutely right in their assumptions.\n\nHale withdrew his other matrix, the one he stumbled upon so long ago when the land he ruled was not under his rule, when it was a fourth kingdom and not part of an empire. He placed a hand on the slave's head, and he began to channel.\n\nThe slave's skin rippled. His bones creaked and snapped. He began to scream.\n\nHale watched as the slave transformed, his face still. The soldier dragged another slave forward \u2013 his newest acquisition, the inept tribal warrior given to him by Kunaya. What was his name? Boonga?\n\nThe tribesman's black eyes flicked from the writhing slave to Hale, and back again. His features were drawn up in disgust. His bravado was nowhere to be found.\n\nHale smiled down at him. There were few things more satisfying than that look of realization on a student's face when they finally learned something useful. Fear was a good start.\n\nAnother man stood apart from the other slaves. Tell'ad. The grizzled commander watched Boonta for a moment, then shut his eyes.\n\n\"Get the barbarian a horse,\" Hale said.\n\n\"Sir?\"\n\n\"In fact, captain,\" Hale said, \"dismount.\" The captain only paused for a moment before following the order. Hale snapped his fingers at the slave and spoke in his tongue. \"Mount up. It's time we had a talk.\"\n\nThe young man lifted his head. He stepped toward the horse, then stopped, as if expecting a trick. He took another step. When his collar didn't offer him pain, he used the stirrup to lift himself into the saddle. He sat awkwardly on the platform, frowning.\n\n\"What is it?\" Hale asked.\n\n\"Why use these hard...things?\" He tapped on the saddle. \"A horse's plain skin is good enough.\"\n\nHale sighed. \"We can compare cultures at a later date. I need some information. Information for which I'd be very grateful.\"\n\nHale watched the thoughts connect together behind the young warrior's eyes. Pride came first, simmering in his gut, anger at being dragged around like an animal. And then something else surfaced \u2013 a memory of pain he couldn't resist. His eyes flicked back to the man that was screaming on the ground. The slave's muscles bulged as his body twisted itself into a new form.\n\n\"I'm not planning that for you,\" Hale said, drawing his attention back. \"You were full of pride, so I taught you a lesson. Speak true, and you'll be given your due once we return to my homeland.\"\n\nThe man shifted on his saddle, considering the offer. He swallowed when a new set of screams rose behind them. Hildan was working on another slave. \"I understand. What do you want to know?\"\n\n\"I heard an interesting name earlier,\" Hale said. \"What can you tell me about the person named Jackson?\"\n\nThe warrior's eyes sharpened into daggers. Shadows filled the creases on his face. \"I can tell you all about him.\"\n\n<center>****</center>\n\nRachel, Vuntha, and Chaki followed close behind Hanta as he ran along the warriors, urging them into another line. There was another scream, a series of shouts and then another rumbling growl joined the first. \"What is that?\" Hanta asked. He glanced back at Rachel.\n\nShe shrugged. \"Don't look at me. This didn't happen when I was with them.\"\n\nThe warriors began to make another line. Hanta scanned their ranks, looking for something. He raised his hand to another man that passed in the opposite direction, a heavyset fighter with a big necklace of feathers and beads.\n\nThe screams and the growls kept growing. Everyone peered into the curtain of snow separating them from the iron men, trying to discern the origin of the cries from the shadows of men shifting into position. Rachel tried to ignore it, but it was like trying to ignore a VTOL engine at takeoff.\n\nOne last dying scream faded. The growls cut off. And then, there was just the wind, and the hush of snowflakes patting onto the ground.\n\nThe snow formed a fine layer of white on top of the mud. It almost rubbed away the corpses and black craters from the battle, like whiteout striking away the more gruesome passage of an old war story. But under the coating of frost were still irregular patches of scorched black and drying maroon residue. Rachel shivered.\n\n\"I think the silence is worse than the screams,\" Vuntha murmured.\n\n\"That's real encouraging, thanks,\" Rachel said, raising her head. \"Why don't you talk about how many people died? That'd really pep everyone up.\"\n\nHanta shushed them. Rachel and Vuntha exchanged a glance, then shuffled their feet awkwardly. Chaki had an arrow nocked. They all looked into the distance. Still nothing. No horns, no sound.\n\n\"Chaki!\" A breathy voice called out to them. \"Shaka's apprentice, Chaki!\"\n\nWhatever Rachel had been expecting, it wasn't a fat, wrinkly old woman with brown strings and green-orange-blue-yellow beads flying from various parts of her dress. She looked like a moving, living turd, the sort that followed a particularly disagreeable Mexican dish.\n\n\"Drospa!\" Chaki said. \"Drospa, is that you? Is Jackson back?!\"\n\nThe woman puffed her way to a halt beside them. \"Yes, yes.\" She raised her palm when Chaki started in for details, begging for a little rest.\n\n\"Come on, fatty,\" Rachel said. \"At least tell us if he's okay.\"\n\nThe woman brought herself to her full height, face red and frowning. Annoyingly, she was taller than Rachel. Everyone was always taller. \"Excuse me?!\"\n\nShe had enough breath to waste time being insulted. \"Skip to the good part,\" Rachel said.\n\n\"You're the other one,\" Drospa said. \"Shaka mentioned you.\" She eyed Rachel up and down. \"Less mannered, clearly.\"\n\n\"I don't dick around in the bushes like that two-celled subhuman,\" Rachel said. \"So is he okay or not?\"\n\nThe apparent contradiction between Rachel's words and her concern baffled the fat woman. The fat is probably suffocating her brain.\n\n\"Rachel, this is a spirit guide, honored in our tribes,\" Chaki said. \"I apologize, Drospa. You have to understand, they don't know our customs, our ways. I had to teach Jackson many things.\" She cleared her throat. \"The teaching still continues. Frequently.\"\n\nRachel's mind buzzed with dozens of barbed comments, but considering everything that was going on, she decided to keep her mouth shut. Drospa threw Rachel one more disparaging look before speaking. \"The rest of the spirit guides came with me; we're spreading out across the line. Shaka remains with Jackson near the mountain to heal him. He used some sort of power that exchanged his own life force for magic.\"\n\n\"Explains the lasers,\" Rachel said. \"What a swell guy. Too bad all that essence fucked off somewhere. That was thousands, at least.\"\n\n\"I saw,\" Chaki said. She sighed. \"Jackson feels very weak, but that explains it. I can rest easier knowing that Shaka is with him.\"\n\n\"Honored guide, ready yourself,\" Hanta said. \"They're preparing some new kind of devilry. We'll need your aid.\"\n\n\"I am ready to give it,\" Drospa said. \"Jackson brought great harm to his spirit to hold them off so we could reach you. It is time they learned what happens when a spirit guide blesses her warriors.\"\n\n\"I'm still worried about that screaming,\" Vuntha said. \"It wasn't right.\"\n\nA trumpet sounded somewhere in the snow. The thump of marching soldiers rumbled in the ground. Glowing runes appeared in front of Drospa. The arrow on Chaki's bow glowed white with the potential of an active ability waiting to be unleashed. Rachel raised her sword alongside Hanta's spears and set her feet.\n\n\"They're coming,\" Vuntha said.\n\n\"Man,\" Rachel said, \"forget captain obvious. You've been promoted straight to admiral evident.\"\n\nVuntha cocked his head. \"I don't understand.\"\n\n\"Don't worry,\" Rachel said. \"The teaching continues. Frequently.\"\n\nA new pattern of thumps rolled over them, almost like a gallop. It was faster than the marching. Growling followed, pouring over the oncoming troops like a pack of wolves. Shadows shifted in the snow.\n\nRachel gripped the hilt of her sword in both hands. Chaki pulled the arrow over her bow and held it, ready to fire. The warriors all leveled their spears down and out, making a bristling line of metal and wood. Rachel could feel Drospa start to draw runes.\n\nHulking masses of furred muscle emerged from the snow, barreling uphill out of the lines of the iron men. They pounded across the ground on all four legs. For an instant, Rachel thought they were gorillas \u2013 and then she saw the claws, the long snouts, the whiskers.\n\nRattok.\n\nThey dwarfed what Rachel had seen back in the caves, wild, more animalistic, if that was possible \u2013 freshly warped from human stock. They plowed through the snow, driving uphill toward the tribesmen like oncoming trucks.\n\nChaki's bow pulsed. Her arrow flashed out and struck at the one closest to their position. It took the beast in the arm. Its torso shifted from the force, but it didn't stop. Instead, it turned straight toward them.\n\n\"Hey, lady,\" Rachel said to Drospa. \"Now would be a great time for some magic.\"\n\n\"Patience,\" Drospa muttered. Her fingers worked over a weave of symbols hovering over Hanta's back.\n\n\"We don't have any time!\" Rachel said. \"Chaki, cover me!\"\n\nRachel rushed forward. Chaki duly started firing at the Rattok. She missed her first shot, but her second struck home, catching it in the chest. It didn't even seem to notice.\n\nRachel reached the monster just as another arrow buried itself next to the first. Rachel bent her legs and leapt as hard as she could, using her height to her advantage. She flew through the air at high speed, her sword held in front of her. The iron blazed white. The tip was aimed squarely at the wound on the creature's arm.\n\nIts other arm came up and swatted her like a fly. She slammed into the frozen mud. Her sword fell a few feet away. Her throat worked as it tried to get air back into her lungs. An icon under her suddenly shrunken health bar told her she was stunned for the next five seconds.\n\nThe monster loomed over her. It raised a claw high.\n\nA blazing blue figure slammed into the rattok. It stumbled backward, reeling. Smoke wafted from where its skin and fur was singed in a shoulder-shaped patch on its chest. \"Get up!\"\n\nRachel's status effect faded; she clambered to her feet. Hanta stood next to her. On his back was tattooed the enchantment Drospa had been creating. It shined blue, then faded into purple, then back to blue again. Rachel could feel the magical power going into it, extending back toward Drospa like the line from a kite.\n\n\"How many times do you have to charge in recklessly before you learn?\" Hanta asked. \"That's no way to fight.\" The rattok shook its body, then unleashed a huge roar at them. It began to pace in a circle around Hanta. \"Get your sword,\" he said. \"Wait for the right moment.\"\n\nRachel dashed for her weapon as the rattok closed the distance to Hanta. She snatched her blade up.\n\nRoars and lights were exchanged all over the battlefield. She saw other men, glowing with other colors and symbols, reds, yellows, oranges, greens. They matched themselves up against the oncoming monsters, driving them into duels before they could smash into the line of the tribesmen. Archers stood ready to fire, but they couldn't target the rattok without the risk of hitting the fighters.\n\nRachel gaped when she saw Hanta. He flickered around the rattok like an indigo-scaled viper. His spear stung it in the legs, the arms. It turned about, slashing with its claws, but Hanta was always a step ahead. He seemed to start moving before the attacks began.\n\nHanta's feet slipped on the snow. The rattok's claws flashed toward him. Hanta raised his spear to defend, but it seemed like a twig held up to stop a sledgehammer. The rattok's claw struck the shaft of the weapon.\n\nA rune flashed in front of Hanta, blossoming around the rattok's claw. Its hand sizzled; smoke and snapping sounds rose from the point of contact. The rattok shrieked and recoiled. Hanta pounced, stabbing it once, twice, three times.\n\nThe rattok regained its balance and swiped wildly, driving Hanta away. He didn't try to outpace the attack, but took his distance, letting it rage. Rachel noticed that part of his enchantment was gone \u2013 burned off by using it in defense.\n\nHanta began his dance again. He slipped under a claw and, choking up on his spear, dragged the steel tip along its waist, slicing deep. It roared again and pivoted, trying to catch him before he could escape.\n\nHanta closed his eyes. For a moment, Rachel thought he was going to take another claw in the face. Instead, a part of his enchantment flashed, then vanished. His feet blurred, and then he was several feet back, well out of range of the claw.\n\nThe rattok had its back to her. Rachel activated her new ability, Incisive, aiming again for the arm Chaki had hit before. Her blade sank into her target, and she sliced upward, cutting out through the top of its shoulder.\n\nThe arm she'd targeted fell slack. The rattok shrieked again, but this time, it was decidedly in pain, not in anger. It twisted around, swiping at Rachel, but she had the sense to make a quick escape. Hanta wasted no time in turning the creature's exposed flank into a pincushion for his spear. It's strong, but it's dumb.\n\nThe rattok ignored Hanta's attacks for a moment, concentrating on Rachel. She skipped backwards. Its attack speed was very fast \u2013 that claw swipe always came out of nowhere - but they moved about the same speed. It was easy to keep her distance.\n\nEventually, the rattok was fed up with chasing her. It turned back to strike at Hanta. Immediately, Rachel activated Flicker Sticker. Her blade flashed a half-dozen times, and the rattok's bleeding puncture marks multiplied.\n\nThe rattok shrieked again. It swiped at Hanta with its good arm, but its attack was sluggish. Hanta slipped around it, then jammed his spear up into its neck. The blade punctured through.\n\nBlood spurted from the injury, but the huge beast refused to die. It grabbed the shaft of the weapon, pulling Hanta close \u2013 and then it tried to fall forward, catching him underneath it. Indigo light flashed again, and Hanta slipped out from the arm trying to bring him down with it.\n\nWhen the creature hit the ground, they were both on it in a heartbeat. Rachel plunged her sword into its back; Hanta focused on his neck, his thrusts attempting to hack its head clear off. A few moments after their attack, it died.\n\nRachel gained 80 essence. She grinned through the mud and sweat that spotted her face. Not bad at all.\n\n\"Better,\" Hanta said.\n\n\"Oh shit!\" Rachel said.\n\nHanta turned to where she was pointing. One of the warriors had been caught by two of the monsters. One of them held him in its grip. Red lights flashed and burned, but the creature growled and ignored the pain. Its partner leaned in and opened its jaws.\n\nThere was a sickening crunch as the man's head was bitten off. The enchantments flickered and failed. The corpse slumped over. The two rattok turned to face them. The one finished chewing on the skull and swallowed it down. Their snouts curled up around their jagged teeth as they started forward toward Rachel and Hanta.\n\nThe lines of the two armies rested while their champions fought to decide advantage for the next round. Both Rattok and enchanted warriors both were dead, their bodies scattered through the light snow.\n\nRachel glanced at Hanta. His enchantment was less than half the size it was when they started. \"Can you get that thing recharged?\" Rachel asked.\n\n\"Drospa used everything she had for this,\" Hanta said. \"It's all I have.\"\n\n\"I don't know if we can take two,\" Rachel said.\n\n\"We have no choice,\" Hanta said. \"Ready yourself.\"\n\nRachel and Hanta stood side to side. Friendly arrows flew at the two rattok as they came on. The tough hide of the monsters repelled most of them; those that struck home were superficial wounds. One of the rattok reached up to its arm, snapping away an arrow that was stuck there and tossing it aside.\n\n\"I'll take the one on the left,\" Hanta said. \"You're light on your feet. Lead the other far away, see if you can tire it out. Try to circle back and attack mine from its blind spot.\""
    ],
    "authorname": "Over_Red",
    "tags": [
        "virtual reality",
        "sci-fi",
        "fantasy",
        "action adventure",
        "magic",
        "magic",
        "video game",
        "cyberpunk",
        "romance",
        "thriller"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/dream-drive-ch-10"
}