{
    "title": "The Twelve Vitali Ch. 19",
    "pages": [
        "Authors note: Hello everyone. Thank you everyone for the positive feedback and comments they mean the world to me, make me smile and have brightened my days. I appreciate all of you who regularly comment and vote for me. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\nThe Twelve Vitali Chapter 19\n\nCat woke with a fright. They'd returned home in the early hours of the morning and, exhausted, she had fallen into bed. She had drunk too much champagne feeling relaxed and at ease in the small crowd who all welcomed her to their family. She'd come into the bedroom and stripped down to her underwear and fallen asleep as Matteo and Ricco had talked quietly in the living room. When she had woken, she had found herself sandwiched between the two men.\n\nCat lay breathing softly, trying to make her brain work. Matteo had told her that Ricco had moved into his apartment and the bedroom while she had been gone, but she wasn't sure she was ready for this. She knew from what Ricco had said that he would not be happy to be a third wheel and live like a monk, but she needed time, time to make sure of her feelings. It would be so easy to fall back into old patterns with him, he was familiar to her, and she breathed in his scent as she lay staring at his back.\n\n'And what are your feelings? How long would it take to sort them out? Wasn't it better to just start living the way it would be?' It wasn't like she hadn't been intimate with him. He'd seen her naked more times than she cared to admit. She didn't have to sex with him, immediately. Did she want to? She'd certainly thought about it recently, and what it would be like to be in bed with both these men. Could she have sex in front of him, as she had in her daydream? They were just sleeping, but it wouldn't always be this way, there would come a time when decisions would have to be made. She could sleep like this, she decided, it's not like they had given her any choice in the matter, after all.\n\n\"I can hear you thinking,\" Ricco whispered.\n\n\"Sorry, go back to sleep,\" she whispered back.\n\n\"This won't always seem so weird,\" he murmured and turned to kiss her cheek before rolling over with his back to her again.\n\n\"Go back to sleep,\" Matteo stirred and pulled her close, kissing her forehead. It bothered her that he seemed so okay with this. For a man who had not liked the thought of her innocent friendship with Pete, the acceptance of another man, albeit his brother, in bed with them surprised her. She snuggled close to him, thinking that if they were alone together she would instigate sex, but felt she couldn't with Ricco beside them. She nuzzled his neck and purred softly, making him tilt his head toward her.\n\n\"Mm, you're going to regret that,\" he murmured and took her hand, placing it on his semi-erect cock.\n\n\"We can't,\" she whispered, \"Not here,\" she looked over her shoulder at Ricco's back.\n\n\"He won't care, he sleeps like a rock. Trust me, even if he was awake he wouldn't care,\" Matteo groaned as her fingers wrapped around his cock and pressed his lips to hers.\n\n\"Can't we go to the white room?\" she purred softly into his ear.\n\n\"That room requires clear heads and intentions which neither of us is capable of tonight.\" In one swift movement, Matteo rolled to his side and pulled Cat under him before rolling back over the top of her, cocooning her between his arms and kissing her deeply again. \"I won't ever put you at risk.\" He wedged his knees between hers, widening her legs and pressing up against her.\n\n\"We can't do this here,\" she protested half-heartedly as he rose up above her, and she became lost in the feeling of being with him.\n\n\"Relax, close your eyes,\" he kissed her and slid forward, easing himself into her, swallowing her whimpering purrs. \"So good, Kitten,\" he murmured between kisses as he pushed all of his cock deep inside her. Cat lost herself in the feel of him. She stared up into his dark eyes, lifting her legs over her hips and wrapping her arms around his neck, she met him thrust for gentle thrust, but she wanted more. She wanted and needed harder, deeper, faster, fucking, and, as if reading her mind, he began to drive into her with greater force and speed.\n\nMatteo bent his head to her breast, his teeth scraping over the sensitive flesh before sinking into her swollen nipple. She cried out, arching up toward him, her mind building higher toward release. She felt the bed lurch to her side, and her eyes popped open remembering that Ricco was right there beside them in the dark. Guilt and embarrassment mixed with her pleasure and need to make her soar higher and her whimpering purrs grew as her body responded to Matteo's, as well as the fact that she knew Ricco was awake and watching him.\n\n\"Oh God!\" her brain melted and she came hard with the mix of scattered emotions caused by knowing Ricco was there melding with the pleasure of Matteo's expertise in making her body sing.\n\nMatteo felt the bed move and the change in Cat as he bit into her sensitive flesh. He revelled in her cries and the responses she made sharing the odd sensation of being watched by his brother. Her pussy gripped his cock, milking it with tight muscles, he growled as he came with her, holding her trembling body tightly. It may not have been on par with the high they had experienced in the white room before being parted for so long, but it was a satisfying release, and it served to start the process of easing his brother into their relationship.\n\nHis brother's voyeurism hadn't bothered him as much as he had thought it might, and Cat's physical reaction when she realised he had turned to watch them had been amazing. He looked down into her eyes and wondered at the mix of emotions he could see play across her face in the dim light of the bedroom.\n\n\"Too soon?\" he asked, sweeping her hair from her face and staring into her eyes. He watched as she turned her head toward Ricco and looked back up at him.\n\n\"I don't know,\" she whispered, and he rolled to his back and pulled her to his side.\n\n\"It was perfect,\" Ricco murmured into the silence, not hiding the fact that he had been watching them. \"Sleep,\" he added.\n\nCat's brain continued to whirl with questions as she lay silently wrapped around Matteo. He continued to hold her protectively until she finally fell asleep with her head on his chest. When she woke up next, she was alone in the bed wondering if she had dreamed the night before.\n\nCat sat up and swung her legs from the bed, stretching as she did each morning, feeling her spine lengthening as she twisted her neck and straightened her posture. She was still naked and feeling odd about the fact that Ricco or the housekeeper could walk in at any moment. She got up to find some clothes and have a shower.\n\n\"Oh, good, you're awake,\" Ricco said from behind her. \"We were starting to get worried.\"\n\n\"Ricco!\" Cat gasped, lifting her hands to cover her nudity and feeling vulnerable.\n\n\"What? It's not like I haven't seen you naked before,\" he chuckled. \"I'll turn my back if it makes you feel better, but you have to know I'd never force you to do anything you didn't want to do.\"\n\n\"It's just going to take me some time to get used to,\" she said, reaching for the robe she found at the entrance to the walk-in closet. \"I meant what I said about starting over and dating again.\"\n\n\"I understand,\" he said, turning back around. \"But Matt and I are Siamese twins at the moment, and like it or not we're stuck together, so there's going to have to be some compromises, and it's better, I think, to just acknowledge the fact that this is the way it's going to be. You are essentially marrying both of us, after all.\"\n\n\"It surprises me that you two seem so fine with this. Especially Matt,\" she said, doing up her robe and coming back to where he stood. \"I always thought he had a jealous streak, but he's not bothered by this at all. Or at least he doesn't seem to be.\"\n\n\"He trusts us,\" Ricco explained as if it was obvious. \"He knows I would never come between the two of you and what you have. I am not trying to steal you away from him, and he knows you love him and can't be stolen away. He also knows I never stopped loving you or wanting you, and he knows this relationship will be between the three of us, not two separate couples. There's nothing to be jealous of, I know you two love each other, and I hope in time you'll feel that sort of love for me too. I love you both. He already loves me, we've always been close as brothers, and now it's better than it ever was.\"\n\n\"It will take time,\" she admitted. \"I know you've grown up with the idea of polyamory being normal, but it's going to take me some time. You understand that, don't you?\"\n\n\"Yes, which is why we are starting our life together here as normally as possible, I'm here, not just for now, but always,\" he said seriously. \"I will never come between you and Matt, but I won't be ignored like the invisible man either and banished to another room while you two live your lives together and decide when you can spare some time to include me.\"\n\n\"I see,\" Cat tilted her head hearing an undercurrent in his voice and wondered if that was how Maryanne had treated him. He had said it with such conviction that he'd obviously felt ignored and isolated before. She thought back to their relationship, it had never lacked passion, even though she hadn't reached the big highs she had come to expect from sex. She admitted that she hadn't exactly been honest with him either about what she wanted and needed during their relationship.\n\n\"Do you?\" he asked gently.\n\n\"Yeah, I think I do. Does that mean you'll be coming on the honeymoon too?\" Cat asked half joking.\n\n\"Probably, if things stay the way they are,\" he lifted his wrist showing the watch. \"Rest assured I will not lay a finger on you until you ask me to, and Matteo agrees,\" he reassured her. \"I don't mind watching though,\" he waggled his eyebrows making her blush about the night before. \"You never have to worry about me being around, I won't interfere unless invited, and, believe me, you looked so beautiful with Matteo last night, it is no hardship for me to watch you.\"\n\n\"But surely you must have... umm... needs, as well,\" she stammered over the words, finding this straightforward conversation both hard and oddly stimulating.\n\n\"I do, and we will get to those eventually when we're all ready. Matt might seem fine, but he will probably need more time than you before he is comfortable with me touching you intimately. It'll be a learning curve for all of us, but for better or worse we're all in this together now,\" he said, giving her a crooked smile.\n\n\"So, for the moment you're happy if you can watch?\" she asked, trying to work out what he was saying.\n\n\"I wouldn't mind tying you up like a pretty gift for Matt to play with,\" he smirked. \"You seemed curious about my status as a Kinbakushi on the plane,\" he saw her brows knit and added, \"Rope Master.\"\n\n\"Yes, Hella used some rope in my training. I liked it, but I don't think she was a master of it. You're right, I am curious about it,\" Cat admitted, becoming more comfortable as the conversation progressed. She had thought she loved this man once, and she still cared about him deeply. She thought about him and the situation a lot while she had been at the Battaglia facility, and she knew that having him in this bizarre relationship was far preferable to someone she didn't know or like. Still, wrapping her head around the reality of it all now that she was home and he was here in her life, and her bed, was difficult.\n\n\"I'm sorry I never told you what I needed when we dated. Neither of us was particularly honest with each other back then,\" Cat said sadly.\n\n\"That's about to change,\" he chuckled. \"Matt has shown me that honesty can get things accomplished pretty quickly if you want them badly enough, and I want this, Cat. Not just you, although that is high on my list of wants, but all of this, you and Matt and the family we will have together. I want it all, and I won't risk jeopardising what we've begun now by holding back anything I'm feeling or need to say from either of you,\" he said seriously. \"I'm patient though, and we all need time to adjust, but that doesn't mean we should ignore it either. So, baby steps, okay?\"\n\n\"Baby steps,\" she agreed. \"Now, I need to shower.\" She began walking toward the bathroom again.\n\n\"I don't mind watching that either,\" he grinned, but when she threw him a long-suffering look, he backed out of the bedroom holding his hands up. \"Baby steps,\" he chuckled.\n\n*****\n\nMatteo and Ricco worked mostly from home over the few days after arriving home, with only small amounts of time at the office or on the building sites troubleshooting issues that needed their individual attention. Ricco had begun to shut down his files for clients outside of the family and had begun taking on more of Roberto's workload for him which didn't require him being in his office. The work Matteo had done over the preceding weeks putting managers he trusted in place was paying off, and he had more time to spend making plans with Cat, Ricco and his fathers for the gathering and the big events planned for this year's family celebrations.\n\nLucca had stepped up in a big way in Matteo's business and was keeping him informed of everything happening on the various projects in progress. He had been a little concerned about putting someone so young in as his second in charge, but Lucca had been nothing short of amazing in his attention to detail and doing things the way Matteo would want.\n\nRicco, too, had been a constant surprise by not pushing his own agenda beyond anyone's limits but still being a constant presence as they adjusted to life together. It was easy and effortless to include him, and he seemed content for the moment to play voyeur to the love-making without intruding upon it. Matteo knew that wouldn't last forever, but for now it was working, although Cat still seemed to hold back at times.\n\nWith the return of the paintings he had lent to the Donatis' for Cat's show, his Vitali building was virtually complete and ready for the influx of family who lived outside of Melbourne that would stay on the residential floors. All except one floor were receiving their final touches, and he considered the changes he had requested over the last few weeks for his penthouse apartment. He had brought in his most trusted team to renovate the space he had originally designed with the idea that he would have a contracted loveless marriage agreement. He realised that in not giving Ricco or Cat any input into the design and layout made the space his rather than theirs, so he needed their approval in time to make any changes they wanted so it could act as their family home here in the city.\n\nHe would step back from the renovation of the house on the hill he had promised Cat, and the apartment they currently lived in he would give to Lucca for stepping up the way he had. Matteo knew from experience the long hours his younger brother would have been putting in to keep abreast of everything on all the different project sites. His overseas projects were winding up, and he had thought that their honeymoon could incorporate the final inspections needed on those and lessen the load on Lucca while he was out of the country.\n\n\"You look lost in thought,\" Hilary said from his office door.\n\n\"You and Lucca have made a pretty good team lately,\" he said, giving the woman the praise she deserved for her part in running this company. \"I'm afraid it will be a while before I come back full time. It's not just getting married, it's a few different things,\" he tried to explain.\n\n\"Your fathers are putting a lot of pressure on you, I know,\" she said. \"Lucca is a good man and is almost as driven as you were at that age, which is a nice change for such a young man. I'd like to continue working for both of you, should you decide to come back full-time in the future.\"\n\n\"That might be doable, given that my life is changing significantly, and I don't think once we start a family I am going to be as obsessive about the company as I once was,\" he smiled softly. The truth was that he would have the added responsibility of leading his family as chair, and that had weighed heavily on him until he realised how well Lucca handled everything with Hilary's help. He knew that eventually Lucca would have responsibilities of his own where the family was concerned, but he hoped that if they scaled back slightly and didn't take on any more overseas projects that he would be able to handle both and they could work together to keep the company and the family on track.\n\n\"By the way, Cat is in with your brothers. You were going up to inspect the penthouse?\" Hilary asked, raising an eyebrow questioningly.\n\n\"Excellent,\" he grinned at her and stood to gather his phone and wallet. \"Thanks, Hilary, I don't know what I'd do without you.\"\n\n\"I keep thinking this happy you who smiles all the time is a mirage that will disappear at any moment,\" she teased as he kissed her cheek when he walked past her. \"Not that I'm complaining, it's just taking some time to get used to.\"\n\n\"Hey, I smiled before!\" he said defensively.\n\n\"Not often, and not the way you smile now,\" she continued to tease him. \"You're late, by the way.\" Matteo shook his head and walked into the next office, greeting both of his brothers and kissing Cat.\n\n\"Ready to go?\" he asked.\n\n\"Me too?\" Lucca asked, not sure if he was included in the statement.\n\n\"Come if you want,\" Matteo shrugged. \"The outcome will affect you too, eventually.\"\n\n\"The outcome of what?\" he asked curiously.\n\n\"Come, and you'll see,\" Matteo replied enigmatically. He then led them up to the new penthouse apartment. It spanned the entire floor and was sparsely decorated with neutral colours. The area was vast, and rooms had been tentatively created for two offices and an art studio. There were many guest rooms and several that had been clustered together around a second large living area that would serve as a future nursery or welcome guests with children and nannies. They were returning to the main living areas of the apartment after a quick tour when Vanessa walked in with several others who worked with her.\n\n\"Good, you're here already,\" she greeted Matteo and Ricco with kisses on the cheeks before turning to Cat. \"We have a lot of work to do this afternoon,\" she gathered her by linking their arms and walking toward the main bedroom. \"Men have no idea how long this kind of thing takes. I took the liberty of meeting your brother and his friend and having a look at the townhouse you bought, not that you lived there very long, but they gave me some ideas, in addition to what I know of Matt and Ric, and I've drawn up a few different layouts for you.\"\n\n\"You have? For me?\" Cat asked in confusion.\n\n\"Well, of course, this is going to be your home, and let's face it, you have far more taste than he does,\" she rolled her eyes at Matteo. \"You should see the monstrosity he had custom-made for the bedroom.\" They stepped into the room, and she swung her arm as if presenting the biggest bed Cat had ever seen.\n\n\"Gosh, that is huge!\" she agreed. \"I guess we do like a bit of space when we sleep. Matt's quite a restless sleeper,\" Cat confided, unsure of what to say and thinking of their current sleeping arrangements that, while cosy, could become unbearable if one of them got a cold or the flu.\n\n\"It's an interesting choice,\" Ricco chuckled. \"Custom-made, you said?\"\n\n\"It had to be, it's well above even a super king bed in size, we've had to order custom-made linen and everything for it. So we need to make some decisions about colours,\" Vanessa spoke with a professional tone laced with her disapproval. She gave Cat a quick tour of the bedroom before steering her back out of the room.\n\nCat let herself be led into the dining room where sketches, colour samples and fabrics were all placed before her to choose from. She barely noticed that one of the men had disengaged from the group that had arrived with Vanessa and walked away with Matteo until she tried to find him to get his opinion on one of the colour samples.",
        "\"Matt has purposely left the apartment as a neutral canvas so that you can decide how to decorate; he made some suggestions, as did your brother, which is what inspired these. The rest is up to you entirely, there are only three rooms he's chosen to do himself, aside of the bathrooms, of course, those decisions had to be made much earlier, but they are neutral, so you can accessorise in any colour palette!\" Vanessa continued to talk enthusiastically. Considering the last time they had met, where Vanessa had been quite cool toward her, Cat was quite taken aback by her effusive affection. Perhaps the engagement had changed Vanessa's mind about her in some way, she mused.\n\nMatteo had seen Cat get swept up by Vanessa and took the opportunity to walk away with his cousin, Sebastian, who was a genius with technology and mechanical engineering. Sebastian had made sure every room in the house was equipped with the latest state of the art technology and space-saving gadgets. He indicated that Ricco should follow him and he led the way to the bedroom with Lucca trailing along behind them.\n\nRicco took in the bedroom with its custom-made oversized bed but said little, aware of Lucca and Sebastian's lack of knowledge about the change in leadership for their family and what it meant for himself. There was a lot he wanted to say, most of it in gratitude for his brother's acceptance of what he wanted and needed from their relationship moving forward into the future.\n\n\"So, are you giving your current apartment to Ricco?\" Lucca casually asked about the stunning penthouse that Matteo currently lived in with Cat.\n\n\"I was going to offer it to you, but if you'd rather not move out of home yet,\" Matteo smirked. His brother was twenty-five and desperate to move out since leaving university, but with his father's declining health and Matteo's travelling he had stayed closer to home than he would have otherwise.\n\n\"Seriously?\" Lucca gaped at him.\n\n\"You've earned it over the last six months,\" Matteo nodded. \"If you don't want it though...\"\n\n\"It's mine, don't even think about offering it to Zion or the twins!\" Lucca grabbed the offer with both hands. \"Fuck yes! This is so awesome!\"\n\n\"When Vanessa is finished with this place she will give you a hand making that place your own, but I'll be leaving most of the furniture in place, you can get rid of or keep what you want,\" Matteo explained. \"Most of that stuff won't suit this place, the dimensions are all wrong, according to Vanessa,\" he chuckled.\n\n\"When can I move in?\" Lucca asked enthusiastically, thrilled that it was going to remain fully furnished, or as good as.\n\n\"You might want to wait until we've moved into this place. I'm hoping by the end of next week for the Gathering. Speaking of which... Are you handling the hunt this year?\" Matteo asked.\n\n\"No, I offered to, but Papa still wants to do it, so expect it to be diabolical,\" Lucca grimaced. He knew Stefano and Roberto had been working on the hunt clues while he had been convalescing. He imagined it would reflect his father's dark mood at the moment. \"Cat's pretty good at puzzles. Is she going to be joining a team this year?\"\n\n\"We haven't talked about it, but I don't see why not,\" Matteo said thoughtfully. \"She'd be at a disadvantage because she doesn't know the family very well, so she mightn't want to do it, and there's the whole wedding thing, in case you'd forgotten.\"\n\n\"Nothing to the wedding thing, she just has to choose a dress and show up, Mama will take care of the rest,\" Lucca waved away his concern.\n\n\"Cat likes to do a lot of that sort of stuff herself, she didn't grow up in a family like ours, don't forget. She's been meeting with Mama every day to work out the details,\" Matteo said seriously. \"She's under enough pressure at the moment, so don't push her to join the hunt if she doesn't want to, okay?\"\n\n\"Yeah, alright, but if she wants to do it, I'm not going to stop her,\" he grinned. \"I'd like her on my team.\" He knew the teams were chosen randomly after nominations were given from each family, but he could manipulate the outcome a little if he needed to.\n\n\"Why don't you go and ask her, and while you're there maybe hint that the sooner she makes a decision about the interiors the sooner we can move in,\" Matteo encouraged.\n\n\"Great idea, or else they'll be talking about different shades of pink until midnight,\" he chuckled. \"You're a brave man letting her choose everything.\"\n\n\"Not at all, she has perfect taste. She chose me,\" Matteo laughed and watched Lucca leave the room shaking his head.\n\n\"Lead on,\" he said to Sebastian. \"Ricco won't be shocked, trust me, and I'd like his advice on a few things.\"\n\n\"Fair enough,\" Sebastian walked over to a mirrored wall beside the large walk-in closet. \"I still can't believe your wardrobe is bigger than Cat's,\" Sebastian chuckled, not realising Matteo would have to share it with his brother. \"There's a manual override in the third panel down.\" He touched the tiled border of the mirror and a panel popped open. \"It's voice-activated though, so you shouldn't need the override except in an emergency.\" He closed the panel and stepped back. \"Go ahead.\"\n\n\"You remember when I told you Cat first brought up submission?\" he asked Ricco, who nodded curiously. \"I said that if that was what she wanted I would build her a red room of pain, just like the one in 'Fifty Shades'!\" He said the last two words clearly and loudly, and the mirror slid across into the wall and opened onto a large room decorated in red and black.\n\n\"I've never read the books or seen the movie, so I'm just going to trust you on this,\" Ricco chuckled.\n\n\"One of my Dad's Kepts is obsessed with the books and movies, she came on board and made sure everything was perfect. Everything is new, but I expect you will want to bring your own equipment in as well, so we left plenty of space for you to fill,\" Sebastian spoke as he walked into the room. \"There's a ton of tech in here, not all digital, but most of it hidden in discreet panels, but there is a master switchboard here,\" he popped open a pressure catch panel.\n\n\"Seriously? A bright green fucking chair? It just looks weird in this red and black room,\" Ricco frowned.\n\n\"It was there in the movie, apparently, you could have it reupholstered, I expect, but if this is what she asked for she's going to know it should be green,\" Sebastian said reasonably. \"Honestly, I left the colours and styling up to those who know better. I just made sure all the working parts were here, and then some.\" He began to show them through some of the features he had installed in the room.\n\n\"Can you give us a minute?\" Ricco interrupted Sebastian's spiel and hefted a coil of soft rope in his hand.\n\n\"Sure, I'll go see if Cat wants to know about the tech in the main living area. Are Lisa and Knox coming over this afternoon too?\" He asked.\n\n\"I hadn't thought about it, but if you call Knox he can pick up Lisa and bring her over to talk to Cat about their needs for the living areas,\" Matteo said easily, aware that Ricco didn't sound happy about being in here and wondering why. He waited until the door had closed behind Sebastian before turning back to Ricco with a questioning look.\n\n\"You don't think it's hard enough for me already?\" Ricco asked, a slight amount of anger and disappointment making his voice hard. \"Do you even get how hard it is not to intrude, to always hold back? Fuck, Matt, why show me all this?\"\n\n\"When we move in here, this place is ours, not mine, or mine and Cat's, ours, you included,\" Matteo tried to explain. \"I want you to have what you want and need in this place, not just this room, but the whole place. Your office will be yours to do what you want with. We aren't always going to be joined together by force, and we won't always be with Cat together. She's fascinated by the fact that you're a rope Master. She's told me about your offer to tie her up as a gift for me. She wants that experience, and I believe she wants it with you in the near future, but we've only had her back for a few days. This apartment, including this room, will be ours, and now is the time to tell me what you need and want.\"\n\n\"And you? What do you want?\" Ricco asked carefully.\n\n\"I've been watching the two of you together, and, surprisingly, I'm happy about it. Happy to the point where I have been thinking about what you said about voyeurism, I think I'd like to see the two of you together,\" Matteo admitted. \"We aren't going to know what it will be like or how we will react until it happens, and I think Cat is always going to shy away from becoming intimate with both of us for fear of hurting someone until we push it ourselves. Or at least until I push it.\"\n\n\"So, what are you saying?\" Ricco had uncoiled the rope and was tying random decorative knots as they spoke.\n\n\"I think it's time we had one of those talks, open and honest and cards on the table instead of these conversations between you and me and me and her. I think we are all so busy being considerate of each other we are forgetting that this is what we have all agreed that we want and the way it's going to be whether we are ready for it or not. You didn't take a step back from sleeping in our bed or being everywhere we are. The only thing you're baulking at is the intimacy. I appreciate that you were giving us time to adjust, but now it's like this giant thing between us all, and we either face it or it gets bigger and becomes a negative thing and breaks apart everything we've managed to build so far.\"\n\n\"Once you open this box I won't close it again,\" Ricco said.\n\n\"In just over a week they are going to announce the table, and people won't care about intimacy between you and Cat, they'll expect it,\" Matteo shrugged. \"If they don't already, I'm sure a few people are guessing. So, we may as well stop trying not to step on each other's toes and make this work. It's not like you haven't slept with her before,\" he said grudgingly. He knew he had to be the one to begin this conversation. He'd been watching how careful they were with each other, especially around him. He wasn't entirely happy about sharing the woman he loved, even with Ricco, but he couldn't shy away from it either if he wanted it all, his family, the chair and Cat.\n\n\"Thanks,\" Ricco said, genuinely grateful to his brother, who, on the surface, seemed to mean what he said, but he also knew it must have been killing Matteo to say these things on some level.\n\n\"So, what do you need in here?\" Matteo asked.\n\n\"Nothing I can't pick up myself, I have stuff in storage that's better quality and will make sure the woman we love is safe at all times,\" Ricco assured him.\n\n\"I never had the patience for rope work, maybe you can change my mind,\" Matteo said with a smile, watching as Ricco's hands continued to fiddle with the rope creating a chain of looped knots.\n\n\"We can go back if you want,\" Ricco said, and Matteo watched as he held up his hands, stretching the rope between two fists, and, like magic, all of the knots disappeared and the rope fell.\n\n\"That's a cool bed you had made, by the way, but I like that we all snuggle together in the current one,\" he said honestly.\n\n\"Well, make the most of that cosiness, because it's not coming with us,\" Matteo chuckled and led the way from the room, finding Lucca looking for them in the main bedroom.\n\n\"Cat wanted to ask you a few questions,\" he said rapidly as he peered past them through the doorway into the playroom.\n\n\"Great, I'll go see her,\" he said, easily moving away from Ricco as the door closed.\n\n\"Why would Matt need a Kept when he's just about to get married?\" Lucca murmured to Ricco.\n\n\"He doesn't. Why would you think that?\" Ricco frowned, not understanding where that came from.\n\n\"That playroom tells me otherwise,\" Lucca seemed worried at the prospect. \"Cat's great. Why would he need that?\"\n\n\"He built it for her, it's what she wanted,\" Ricco reassured his younger brother. \"Not every woman prefers a missionary sex life,\" he chuckled.\n\n\"Seriously?\" Lucca seemed astounded by the idea. \"She's a submissive?\"\n\n\"Not exactly, but she enjoys some kinky stuff. Probably better not to let on to Matt that I told you though. You know how he can be,\" Ricco warned.\n\n\"No one would believe me if I said anything, and I'm hardly going to insinuate that the woman Matt loves is a slut directly to him,\" Lucca chuckled. \"Wholly shit though, that's awesome! Lucky bastard.\"\n\n\"Yeah, I know, right?\" Ricco agreed. \"But it was always going to take someone pretty special to make him fall in love again.\"\n\n\"Shit, sorry, man, I forgot that you and she had a thing,\" Lucca apologised.\n\n\"Don't sweat it, I fucked up, I admit it. I won't make that mistake again,\" Ricco gave Lucca a crooked smile.\n\nLucca gave Ricco a speculative look as if the whole situation had just dawned on him. He had just thought that Ricco and Matteo were supporting each other when both Jacobi and Cat had left town, but as more pieces fell into place, he considered if there was more happening here than anyone realised. He needed to see his fathers' and get some answers to questions he knew he couldn't ask his brothers.\n\n*****\n\nVanessa was good at what she did and had done her research. Cat had been able to see her clear vision for the living areas of the apartment and liked the colour scheme she had suggested to run throughout the penthouse. She chose quickly from the designs and samples she had been given, and even when she stopped to double check with Matteo, who had returned with Ricco, he had held up his hands in surrender and walked away again without another word.\n\nThe interior design she had gone with left her room to create artworks or mural walls herself once they were settled in and she had time to paint again. She realised she missed being able to be creative and wanted to ask Matt about going out to purchase supplies for her studio. He'd been so protective of her over the last few days she had very little freedom to do what she wanted or think about her own career. They'd finished relatively early, considering the number of decisions she'd had to make, and she had gone into the kitchen with Lisa to see the technical upgrades Sebastian had installed there.\n\nOnce they had finished the inspection and meeting with the decorators, Matteo had given Lisa and Knox the night off, saying that they would be going out for dinner and that either he or Ricco would drive, which was unusual, and she wondered what they had planned. She knew they both enjoyed not having to worry about having a glass of wine over dinner.\n\nShe said nothing as she followed them down to the car and sat in the back as Ricco drove them to a quaint little Italian restaurant where the staff all seemed to know him, and they were served quickly without even seeing menus.\n\n\"You come here often?\" Cat asked.\n\n\"Not as often as I used to, but that might change again. I'm a part owner, with an old school friend,\" he grinned. \"Matt likes it here. We've been here a couple of times while you were away.\"\n\n\"Mainly when I needed to fight with him and wanted a public place so he couldn't hit me,\" Matteo chuckled.\n\n\"You two were fighting? About what?\" she couldn't imagine them fighting about anything, they were so close.\n\n\"Cobi, Maryanne, you,\" Ricco admitted.\n\n\"Me?\" she asked, not really surprised, they had both been far too accepting of the situation, as far as she was concerned. The fact that they had fought about it at least once gave her a strange sense of relief. \"So, you weren't always as accepting as you seem to be of what's happening between the three of us?\"\n\n\"Neither was he,\" Matteo said petulantly. \"He thought I was forcing you to become a submissive!\"\n\n\"Didn't like that idea?\" she asked, raising an eyebrow at Ricco.\n\n\"Not if he was forcing you, the way Ned did,\" he admitted.\n\n\"But that's all cleared up now, and you brought me into your fight club. Why?\" she asked, eyeing the two men. The waitress came with food and Chianti before either man spoke again.\n\n\"We're moving into our house. Not his house, or your house or my house, but our home,\" Matteo began. \"We're not a couple plus one, we're a trio, and we've been talking about it and pretending we're all fine, but if we're going to move on then maybe we need some ground rules. I don't want Ric to feel like a third wheel in his own home. Do you?\"\n\n\"What my big brother is trying to say, without admitting it, is that he'd like to learn the ropes from the master, but to do that we all have to stop tip-toeing around the issue and each other feelings and just say what we want,\" Ricco grinned at his brother. \"We agreed to this and have talked about it a lot. You agreed to this, not only to us, but to Papa, yet here we are still avoiding touching each other,\" he looked into her eyes.\n\n\"I needed time,\" she argued, her mind running through all of the questions she had been asking herself for the last few days.\n\n\"Sure, I get that, but we don't even hug anymore. You hug Lucca, and if I brush against your arm, you jump. I'm not going to hurt you, Cat. I never would,\" Ricco tried to explain how he was feeling.\n\n\"I touch you all the time,\" she argued, reaching across the table to touch his arm.\n\n\"Yep, you do, but I can't touch you without you cringing,\" he accused. \"I'm patient, it can be on your terms and in your time, but Matt's right, we can't keep going the way we are now. You have to loosen up at least a little.\"\n\n\"Cringing is a bit harsh,\" Matteo chided his brother. He'd noticed her freeze up, and he could see how his brother might have taken it as cringing, but he knew that wasn't how she felt. \"It's more like you freeze and look at me to see if I noticed it. You fall asleep practically on top of me to avoid any misunderstandings.\" He said gently. \"The fact is, we have to ask... are you really not wanting any contact at all with him, or are you trying to be sensitive to what I want because I want this? I can't have made it any clearer.\"\n\n\"It's not sex we're talking about here, we can take that off the table for a while longer until you're ready, but any form of affection or acknowledgement that you do want this relationship would be good at this point. Otherwise, why are we bothering? We can just admit to Papa that it's not going to work and move on from there,\" Ricco said.\n\nCat sat in silence. She was horrified by what they were saying; she'd never meant to make Ricco feel as if she didn't like him at all. She still cared, cared deeply, possibly too deeply. She knew she still loved him on some level, and that scared her. They hadn't had a love like she had for Matteo, but she had loved him once, and she still felt that connection with him. He was a good and kind man. The man that had come and helped her when she needed it the most, the man who had introduced her to Roberto and supported her through her recovery and the court case before starting an affair with her.\n\n\"We have to be honest, Cat, it's what we've always promised each other. It's the only way this is going to work,\" Matteo said into the silence as Cat's brain worked furiously through her mixed emotions and genuine fear of her own feelings for Ricco. Honesty was what had got her this far and made her fall in love with Matteo, and she owed him at least that much, even if it hurt him a little.\n\n\"I love you,\" she said quietly to Matteo. \"I love that you wouldn't let me run away. I love that you listen to me about what I want and need. I love that you are so honest with me. I love everything about you,\" she reached up and touched his cheek. \"But I love him too. I didn't realise how much I still cared until I went to the facility and saw you both together when you came to get me. It reminded me of how he was when we first met and why I had fallen for him so quickly,\" she admitted and found it was their turn to be speechless, each for different reasons.",
        "\"It's not the same love. You're two different men. But it scares me that I know I still love him. If I acknowledge those feelings and how much it hurt to leave him, I'm not sure what happens next. How can this work? I don't know that I can be enough for either of you, let alone both of you.\" She paused and finally looked at Ricco. \"I understand now why you kept me away from your family and friends. You're loyal and trustworthy, and you're a man who keeps his word, which only makes you more attractive and me regretful for the way we broke up and the accusations I made.\"\n\n\"First, you were right to break up with me; it was me who was being the selfish bastard. I was stringing you along with no hope of a real future together at the time. Matteo once said that if we had been honest with each other back then we may have stayed together, and then he would have never have met you. I don't know about you, but I'm pretty happy the three of us have wound up here together. Second, you love me?\" Ricco asked incredulously in an equally quiet voice.\n\nCat looked at Matteo, hating that she might be hurting him, but he only gave her a small smile of encouragement. She looked back at Ricco and nodded, unsure of herself now that she had said it.\n\n\"It's okay, Kitten,\" Matteo murmured close to her ear. \"This is a good thing. Marrying me is a two for one deal, and you will always be enough for both of us, I promise.\" He took her hand in his, noticing that Ricco still held her other hand on the table. \"We can work it all out if we are honest about what we want and need from each other.\"\n\n\"You do not want to know what I want right now,\" Ricco said in a husky voice, waggling his eyebrows at her in a teasing way.\n\n\"Dessert?\" Cat asked with a crooked smile, withdrawing her hands and trying to regain her equilibrium after her confession.\n\n\"In a manner of speaking,\" he admitted.\n\n\"I don't know if I could manage dessert tonight after all this pasta,\" she said seriously, unsure if she was ready to take that step into intimacy immediately after admitting she still loved him. She needed to know Matteo was secure and still loved her the same way he always did.\n\nMatteo could see the pleasure his brother felt at Cat's admission radiate from him. Strangely, he wasn't jealous, he knew from everything she had said about their past relationships and the small but intimate talks they had managed recently that, although she cared and obviously cared deeply for Ricco, it was a different relationship to the one they had. Matteo had worked hard to convince her that he loved her and could be trusted to never let her down; his brother still had that work to do, especially as he had let her down once already. He knew Ricco could and would win her trust and respect again, but it wouldn't eclipse what he had built with Cat, it never could.\n\n\"I'll get this if we're done for tonight?\" Matteo offered.\n\n\"No need, it's taken care of,\" Ricco said easily. \"Are you ready to go?\" he asked Cat.\n\n\"I am,\" she said. \"I have a few things I'd like to do when we get home, and we spent so much time at the penthouse, it's getting late.\"\n\n\"Like what?\" Matteo asked frowning.\n\n\"Well, getting my car from my townhouse, for starters, so I don't have to rely on Knox being available when I go out just to pick up a few things here and there,\" she laughed lightly.\n\n\"He doesn't mind, especially while we are at work. Where are you planning to go that you need to drive?\" Matteo pressed her.\n\n\"Maybe we can talk about this at home,\" she said, looking around at the other customers as they left the restaurant.\n\n\"No maybe about it,\" he grumbled and slid into the passenger seat of the car. He had let Ricco drive knowing that his style of driving and the speed at which he liked to drive scared Cat on more than one occasion.\n\nCat sat in the back of the car saying nothing as they drove home. Each time one of the men addressed her she pretended she couldn't hear them properly and waved away the question until they returned home. She needed to word what she had to say carefully or risk getting into an argument with Matteo in front of Ricco. She had thought that his reticence to leave her at home alone was more because he had missed her, but as the days had gone by she realised there was something more to his need to know where she was at all times. She couldn't live like that, she needed some freedoms, even if only to go and buy some art supplies for the studio he had built for her in the penthouse. She didn't want someone who didn't understand what she needed doing that for her like they had in Brisbane. She wanted to start painting again and thinking about her career, as well as the life she would have with him. He and Ricco had become her entire world, and she had realised tonight when talking to Vanessa that she needed to indulge her own interests, as well as theirs.\n\nIn the elevator, they had stood side by side, and Ricco had taken her hand, squeezing it as if he knew an argument was brewing and wanted to give her encouragement. She smiled slightly as she looked up at him and then immediately turned the same smile on Matteo. Even now, only a short time after the confession of her feelings, she was feeling pressure to not favour one over the other.\n\nDespite being given the night off, Lisa met them at the door and took their jackets and asked if they needed anything.\n\n\"We can manage for ourselves, thank you, Lisa,\" Matteo said stiffly, and Cat knew there was going to be little she could say that would get her the freedom she wanted. Before giving in to him, however, she would need to know why he was so worried about her doing what she needed to alone. She walked ahead of the men into the apartment and went out onto the deck to clear her head before she faced him and pleaded her case.\n\n\"Now tell me why you need your car, instead of using Knox?\" Matteo asked in a much calmer voice than she had expected when he walked out onto the deck.\n\n\"It might surprise you, but I lived quite well driving myself around for years before flying to Brisbane and meeting you,\" she said. \"I've never even been in an accident.\"\n\n\"I'm aware, but from what David and Ricco said your car wasn't particularly reliable or roadworthy. What do you need to do that you have to do alone?\" He asked again.\n\n\"I want to be able to go shopping on the spur of the moment without having to check if you or Ricco are busy or need Knox. I'd like to go and start looking for wedding dresses, or just buy some magazines. I just want to be able to go wherever I want when I want without having to make an appointment to go and pick up a paintbrush. I have an appointment to see the doctor, and I wouldn't mind getting a trim,\" she was clutching at straws as she listed off things she needed to do. \"I want a new laptop or tablet so I can talk to Peri about the new commission without having to ask to borrow yours. I need some independence, Matt, I feel almost like I need to ask permission to breathe because I'm suffocating lately.\" She hadn't meant to say as much as she had, and the look of shock on Matteo's face made her wish she could suck the words back into her mouth and forget she had ever uttered them.\n\n\"I'm suffocating you?\" he asked in a soft, slow voice.\n\n\"I had more freedom and independence at the Battaglia facility,\" she admitted. Or at least she had more until Hella had moved her into the room adjoining hers. \"I'm sure Knox has far more important things to do than drive me around all day.\"\n\n\"What if we bought her a newer, safer car and she agreed to have a tracker installed on it and her phone so we could find her if we needed to at any given time?\" Ricco suggested, seeing that his brother had taken her accusation that he had been suffocating her badly. \"Or I bought it as an engagement present to you both?\" he amended.\n\n\"Why would I need a tracker? You trust me, don't you?\" she asked. \"With two future husbands to please, I'm hardly going to go out looking to have an affair,\" she laughed at the idea.\n\n\"Why don't we sit down and talk about it,\" Ricco said, watching as the pair faced each other, both feeling unsure of what the other was asking or why.\n\n\"Talk about what? I've done everything that's been asked of me, and now I'm being treated like a virtual prisoner. I just want to go shopping or visit a friend now and then. What's so wrong with that? I did have friends before going to Brisbane, you realise!\" she said with a small trace of anger in her voice.\n\n\"I'm sure they were also friends with Ned Kelso,\" Matteo growled in frustration at her.\n\n\"I don't think Frankie and Anna would have approved of him somehow. Do you?\" Cat said flippantly.\n\n\"Okay,\" Ricco stepped in. \"I'm not letting this get out of hand. It's a stupid thing to fight over. Just sit down and tell her why we would want to track her movements or I will. It's better she knows so she can be more vigilant and appreciate why you're a totally overbearing asshat.\"\n\n\"I'll listen, it doesn't mean I'll agree,\" Cat said and took a seat. She hadn't argued with anyone for over a month, and now that she had gotten mad she found it hard to back down. Ricco was right, it was a silly thing to argue over, and she was sure he had a good reason now, but he also had to know she was never going to come back from the training facility and her trial a complete submissive who would just follow arbitrary rules without explanation.\n\n\"Come on, Matt, even I know she needs explanations for everything she is asked to do,\" Ricco sighed at his brother. \"You owe her the same honesty you expect from us.\"\n\n\"Then you tell her your version of why I wouldn't want her driving an old rust bucket on her own,\" Matteo shrugged, feeling even more frustrated by his brother's calm attitude. He was right, it was a silly fight, but now that Cat was his he didn't want to take any chances with her safety, whether she liked it or not.\n\n\"The short version is that it can be dangerous to be part of one of the twelve families, and, in his own control freak way, Matt is just protective. The longer version will take some time to explain. So would you like a drink? Need a bathroom break?\" he asked with a chuckle.\n\n\"No I'm good,\" Cat said, interested in finding out what this explanation was.\n\n\"When our families came to this country and began setting up our business interests and taking over certain sectors of the markets in their hometowns they were met by opposition. This wasn't the first time; it had happened in other countries as well that our families had immigrated to. This opposition comes from another set of families that we call the Seubi. They tend to deal in the shadowy world of the criminal underbelly, whereas our interests tend to be legitimate. Sometimes our interests clash, and there has been a feud or small war at play between the two sides since medieval times. Perhaps even before that,\" Ricco began his longer explanation.\n\n\"In the last decade, there have been several attacks on different families in different ways. Perhaps the worst case was their infiltration of the Pellegrini family where they preyed on weak leaders and almost carried out the massacre of the complete Donati table just after Josh took the chair. The Gambaro family and the Sartori's also had dreadful losses of their own. If the wrong people found out that the Vitali table was changing before everything was put in place, then members of the new Vitali table would be at risk,\" he gave her a serious look. \"The fact that it is public knowledge that Stefano has been so unwell puts all of us at risk, including you, if the people who would do us harm work out that Matteo and I are preparing to take over for Papa.\"\n\n\"I see, this is why no one knows of Roberto's illness as yet,\" Cat nodded at the gravity of the situation. She had known about the attempted massacre of the Donati family from within their own ranks. Ben still wore a haunted look from time to time if Emily's name was mentioned.\n\n\"Okay, so I have a tracker, in my car and my phone. That's fine; I don't have anything to hide. I just want to be able to pop down the road for some chocolate if I have a craving,\" she said. \"It's no big deal, honestly, Matt. I just want to feel like I don't have to ask permission to do even the simple things in my life. Ricco's right, now that I know I will be more careful.\"\n\n\"If you have a craving for chocolate?\" Matteo asked carefully.\n\n\"No, not that sort of craving, but who knows. You know I am going to the doctor to discuss it tomorrow,\" she said reasonably.\n\n\"You got an appointment with Paolo?\" Ricco asked, wondering how he didn't know about this. \"Why are you in such a hurry to have children? You're not even married yet.\"\n\n\"Roberto seemed to really need the opportunity to know he had grandchildren to ensure the next generation of his family, and we always planned to have babies, it will just be a little sooner than we thought, if we're lucky,\" Cat said, genuinely happy with the idea of having a family of her own. The idea had appealed more and more after spending time with the close-knit Donati family.\n\n\"Makes sense, I guess,\" he said grudgingly. He had hoped they would be intimate before Cat tried to fall pregnant so that the children would be theirs rather than definitively Matteo's. \"A doctor's appointment is important, maybe we should go with you,\" Ricco said carefully.\n\n\"I don't want you driving that old unreliable car,\" Matteo said in a calmer voice. \"I'd rather you had a driver, so someone was with you, just in case, but if you insist on having a car of your own then let Ric buy you one,\" he smirked at his brother. \"He offered, after all. Get a Mercedes, they have some of the best safety standards.\"\n\n\"I don't need a Mercedes, I'm sure we can find a little second-hand car that won't cost too much, and I have the money from the Donati commission,\" she said. \"There is no need for Ricco or you to buy me a car.\"\n\n\"No, I'll buy the car, I never got you an engagement present, this can be it. It's not as good as the house or ring that Matt got you, but I'm sure we can find something suitable,\" Ricco chuckled, realising that Cat's independent streak was going to be an ongoing problem for Matt and himself. \"And I'll call Sebastian about the trackers once we've decided on a model and run it past Chase. He might have one you can borrow until whatever we decide on tomorrow is ready.\"\n\n\"I'm going to call Papa. We can't keep operating like Siamese twins and live our lives. Cat's right, we need to be able to go shopping, even for cars without making it a family trip. We're good, we're together and happy to be together, there's no need for this anymore,\" he held up his wrist and shook the watch.\n\n\"We could always just rebel and throw them off the roof,\" Ricco suggested.\n\n\"Let's call first and see if that works. If they don't agree, we'll do it your way,\" Matteo said with a grin. He stood up and kissed Cat lightly before walking back inside to grab his phone.\n\n\"You don't have to buy me a car,\" Cat repeated softly as Matteo walked away.\n\n\"You know I do or he will dig his heels in about a driver. He's a good guy, but he's dealing with a lot at the moment, and it will be one less thing for him to worry about if he knows you're safe. We can and will do this for him, because what the family is asking of him during the gathering is a big deal and he needs our support,\" Ricco took the opportunity to explain while Matteo was inside. He'd had no time alone with Cat up until this point, and he wasn't sure he would get more than a minute.\n\n\"Okay, but we talk about it properly before we decide on the car, okay?\" she said, trying to retain some choice in her life.\n\n\"I'll clear my calendar, and we can shop for whatever you like tomorrow morning and Matteo can get some work done. Even if you find a car you like tomorrow it will take a week or so to get the registration and insurance sorted out,\" Ricco explained further. \"We can go see Chase after that; he probably has a car you can borrow until yours is ready, but even that might take a day or two to sort out the insurance.\"\n\n\"They've been turned off since the ball,\" Matteo grumbled, coming back out onto the deck. \"When you called and said something had gone wrong they turned them off and left them that way. They just forgot to tell us that was the case.\"\n\n\"It wouldn't have mattered anyway. We've needed to be together the last few days,\" Ricco said easily. \"I've got used to being attached to you over the last month, I doubt it will change how we operate now, it'll just give us options for days like tomorrow. You go to work in the morning, and I'll take Cat car shopping, and we'll meet for lunch before going to Papa's.\"\n\n\"That could work. When's your doctor's appointment?\" Matteo asked Cat.\n\n\"Eleven, we could meet you at the office after that, if you don't mind. I wanted to have another quick look at the penthouse art studio as well, if that's okay,\" Cat answered. \"It will be nice to have a space of my own again.\" She tried to make her point as clear as she could. She loved these men, but lately she had to go to the bathroom to even get a few minutes of time alone with her scattered thoughts. They must be feeling the same way, she couldn't imagine how they weren't both climbing the walls after being tied together for a month.\n\n\"I'm sorry,\" Matteo said finally. \"I guess we're just used to always having someone around. Even when we strike out on our own, chances are we're being watched by someone. I guess it comes with being part of a family like ours. It doesn't even occur to me that someone may feel suffocated by the constant attention of people who love them.\"\n\n\"That makes me sound awful for wanting some thinking time,\" she sighed. \"I'm just used to being able to find time to work out what's going on in my head. You have to admit your family is a lot to take on, and I haven't had any time to just be alone with my thoughts, which is how I deal with stressful situations. I guess I need to withdraw and put my messed up thoughts in order. I just keep taking on more and more of your family's demands, and then you put me on the spot, like tonight at dinner. I haven't had the time to sort through how I feel properly, which is why Ricco probably feels like I cringe when it's more like I just have no idea what I'm doing anymore,\" she sighed heavily. \"I need some time to be on my own and do some things for myself. I want to lose myself in a painting and do the things that make me, me!\"\n\n\"Sounds reasonable,\" Ricco said, carefully watching Matteo. \"As long as you had a tracker in your phone or car.\"\n\n\"What about spending a day here at home alone to think?\" Matteo said, still not happy about her driving all over Melbourne on her own, and he would have Lisa and Knox nearby in case she needed anything.\n\n\"We left so suddenly that I left all my art supplies in Brisbane, which is fine, because they weren't brands or tools I would normally use, and I want some new supplies more than anything so I can paint and think and daydream. I would be bored at home alone without them. I need it like you need work, and I haven't been able to do anything for over a month, so let me go and get the stuff I like without trying to negotiate how I do it. I promise I'll be careful, but you have to loosen the reins a little,\" she tried to make him see how much she was giving up for him, things he had once promised he would never make her compromise. \"I'm living a life where the only thing I love is you. I don't have my art or my brother or any of my own belongings. I'm losing me, and you fell in love with the girl who had paint on her face and under her fingernails. Not this polished carefully created version of me,\" she sighed again.\n\n\"You never said anything,\" he frowned at her.\n\n\"You never tried to make me a prisoner here before now. Up until now I always thought I had the option to collect my car and do my own thing. When I asked for my car, however, you pretty much said no unless I go with a guard who can alert the warden if I put a foot out of place. You have to trust me as much as I trust you, or we may as well call off the wedding now!\" she said in a stronger voice than how she felt. This was their first real argument, and, as Ricco has said, it was over something silly, but there was more to her words than just a car. She needed her freedom and independence to be herself. Matteo looked at her in painful shock, and she instantly regretted her words about the wedding.",
        "\"No, we won't be calling off anything!\" he growled angrily.\n\n\"Fine, forget I said anything, I'll just stay home and be the perfect cookie cutter Vitali wife and Knox can take me to my appointment,\" she said sadly. \"I'm going to bed,\" she announced. She hated that she had hurt Matteo by threatening that, but she felt she couldn't take it back. She needed him to understand she wasn't happy being forced into a role and life she wasn't born to if it meant giving up everything and everyone she cared about except him.\n\n\"Don't go,\" he said. \"I just hadn't realised how unhappy you were since returning home. Why haven't you told me any of this before now?\"\n\n\"Because I always thought it was an option for me once we got settled in again. The first time I bring up wanting to do something for me, though, you shut me down. At least Ricco was coming up with solutions rather than just saying no to what I need,\" she said.\n\n\"I agreed to the car already!\" he said defensively.\n\n\"You're not happy about it though, and were still trying to manoeuvre a way around letting me go out on my own,\" she accused. \"Even Peri Donati drives herself around most days.\"\n\n\"The difference is that I am not in love with Peri Donati. If anything ever happened to you I'd never forgive myself,\" he gathered her into his arms and held her tightly. \"I'm sorry, I've had so much going on I hadn't even thought about the fact you didn't have a studio here because I was building you one in the penthouse.\"\n\n\"I know, and I appreciate that, but I just want to do more than follow you and Ricco around every day. I need to have my own life, or I will lose me and become some manufactured Vitali Princess,\" she said into his chest. \"I'm trying so hard to be what you and your family want, but you fell in love with the girl from Acacia Estates, and she has almost completely disappeared. I just need some space and time to find me again. I need to paint and be creative. You won't be disappointed, I promise. Trust me, please.\"\n\n\"Okay, but we will discuss our work commitments and link our calendars,\" he agreed grudgingly, hating what she was saying and that she felt like he was forcing her to be something she wasn't. \"Can you talk to us before accepting another commission from Peri?\"\n\n\"Yes, I can do that, but I won't be asking permission, even though I will negotiate terms. Now, I'm still going to bed,\" Cat said softly, and reached up a hand to the side of Matteo's face and kissed him before stepping out of his embrace. \"You and Ricco can work out the details for tomorrow.\" She stood and turned to where Ricco sat and took the two steps toward him. \"Thank you for being the voice of reason tonight,\" she bent and kissed him, not on the cheek but on the lips, and with some pressure as a first step toward building intimacy with him. She felt his surprise and drew back with a grin. \"I'm sorry if you ever thought I cringed away from you,\" she said softly.\n\n\"She kissed me!\" Ricco grinned at Matteo.\n\n\"I noticed,\" Matteo chuckled. \"I also heard that she loves you, just in case you felt the need to remind me of that again.\"\n\n\"I love you too,\" Cat laughed, blowing Matteo a kiss. \"Good night, gentlemen.\" She walked toward the bedroom.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "menage-a-trois",
        "penthouse",
        "brothers",
        "threesome",
        "threeway",
        "group",
        "group sex"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-19"
}