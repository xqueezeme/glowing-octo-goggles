{
    "title": "The Choosing Ch. 06",
    "pages": [
        "The Askel that Lady Vere spoke of was the same wicked blond man-boy who had accompanied her to my chambers. He grinned at the sight of me, all teeth and gums . His eyes skipped up and down my body, settling to ogle at my breasts, in that moment of naughty joy seemed far more boy than man. I could hardly blame him for looking. Hatha seemed determined to keep me in a state of virtual undress. For once I gave no objection. I had, since accepting my role as The Vessel, lost all interest in my outward appearance. Not because of a spiritual transcendence\u2014nothing as saintly as that\u2014but because I sensed the futility of the battle. Better instead to devote my attention to the little I could control, and that was the strange power growing inside me, not my flimsy coverings.\n\nThe latest flimsy coverings consisted of a sheer robe and not much else. My naked form and the ochre symbols Hatha had painted upon my body clearly showed through the light fabric\u2014much to the delight of young Askel. I waved my hand to break the spell that had fixed Askel's eyes to my breasts.\n\n\"You did not come with Lady Vere?\" I questioned, pointing back inside the bathing chambers.\n\n\"Oh I came,\" he said with a wicked smile, \"But just not inside.\"\n\nI laughed at his overt double entendre. He winked and swept his hand forward motioning for me to follow him down the hall. I held out my arm and he took it with a light touch.\n\nWe walked together with Hatha following.\n\n\"What do they want of me?\"\n\nAskel came to a stop and looked from Hatha then back to me. He opened his mouth to speak, then shook his head as if deciding against it. \"Tell me,\" I urged, trying to compel him with my voice\n\nHe nodded, and spoke quickly, \"There are two camps. Two schools of thought if you will.\"\n\n\"And they are? What?\"\n\nHe sighed. \"You have to realize Mistress; we have been hiding for a long time. Running in fear, it changes people... makes them desperate.\"\n\n\"And what do desperate people do?\" I asked softly, not sure I wanted to know the answer.\n\n\"Your presence here risks us. We know the Dark Prince searches for you. There are some who want you gone.\"\n\nThat came as no surprise. \"And others? What do they want?\"\n\nHe turned away, not meeting my eyes as he spoke, \"Others are tired of hiding. Tired of waiting in fear, they wish to use your power to reclaim the Sarran place in Vandarra.\"\n\n\"Use me.\"A chuckle escaped. Looking back over my shoulder at Hatha I said, \"What a shock.\"\n\nHatha, forever frustrated by my outbursts, frowned and shook her head.\n\n\"And which desperate school currently holds power?\" I asked, \"Those who want me gone or those who wish to use me?\"\n\nAskel looked back and forth between Hatha and me, opening and closing his mouth before spluttering, \"I do not know Mistress. I have said too much...\"\n\nI held up my hand, cutting him off. \"Fear not Askel I will not share your confidence. You have my word.\"\n\nHe sighed in relief and motioned down the hall. \"We should go Mistress Vessel, they will be waiting for us.\"\n\nWe did not have much farther to go; Askel led us down a hallway to a set of heavy wooden double doors. They'd been carved to exactly fit the jagged jut of the rock walls. Time and care had put these in place. This was no makeshift arrangement. This was built to last. They'd been made by craftsmen who expected to stay underground indefinitely. Generations of people living in dark fear, no wonder they were desperate. I pondered what it must be like to eternally cower in the darkness. To be so ruled by fear that you carve a refuge deep in the earth, far from the light.\n\nWas the darkness sanctuary or prison? I wondered. Did they even know the difference?\n\nI looked at Hatha, marveling at how brave she must have been to leave the security of the Sarran refuge and search for her Anja. The bond they shared must have been stronger than fear, stronger than the need for safety.\n\nLove. A true love.\n\nIt hurt to think of it. Their love. Jealousy stitched into my side. A stab of physical pain. I wanted it for myself, so desperately. Not specifically from Hatha. I would be happy just for something other than obligation from her. From someone, a love free of obligation, fear or strategy\u2014a love of mine alone.\n\nAnja had both Roth and Hatha, and then also Nadar.\n\nWhat did I have? Nothing.\n\nHatha gave me a tight little smile urging me to move faster. If not love then, why did Hatha stay?\n\nShe risked again being with me. She had safety at the Night Palace. The trust of Roth, a good life\u2014all risked for me. I wondered yet again at her motives. Was it friendship? Love? She did not love me as she had Anja. Of that I was sure. Was I a tool then? A part of an agenda that I could not even guess? Perhaps a little of them all. Hatha remained a mystery, one right beside me.\n\nAs Askel opened one of the great door s Hatha grabbed my arm and pulled me back. \"We must remain calm,\" she whispered in my ear.\n\n\"Must we?\" I questioned with a slight smile.\n\n\"Do not joke Mistress. These are powerful people with powerful fears. We need them. You need them. There is more at stake here than your pride.\"\n\n\"My pride is all I have Hatha.\" My answer was heavy with regret not anger, the sort of bone deep sorrow borne at the realization of the few petty truths that remained mine alone. I tugged free of her arm, pulled back my shoulders and entered the Council Chambers.\n\nBefore me at a long table on a raised platform were the eight members of the Sarran Council. Sleeves bare they sat facing me their arms covered in the magic of their Sarran tattoos. As I looked at each Council member somehow I knew what they represented, I could read the power of each tattoo. Not in words, in a basic more primal way. The same way I knew the table was flat, the rocks were sharp. If I had been asked to explain how I would have lacked the words. I knew because I knew, it was as simple, as instinctive as that.\n\nThe easy knowledge of their markings scared and thrilled me.\n\nFour men, Four women sat before me. Off center to the left was Lady Vere, who despite her placement was quite obviously the head of the Council. She looked to Hatha who stood just behind and to my left, not to me and said, \"Bring her forward.\"\n\nI spread my legs slightly and planted my feet. I was no pawn to be shifted at her command. I would not go. Hatha placed a gentle hand at the small of my back and pushed, but I did not shift. I heard her long suffering sigh; she knew I was not going to make this easy.\n\nI felt a stab of affection at the sound. She knew me so well, better than my own blood.\n\nI fixed on Lady Vere, waiting for her to meet my gaze. Hatha murmured indistinct words of urging at my side that I ignored. I did not shift or fidget. I did not even tilt my head; I focused on Lady Vere setting a stare waiting for her to break.\n\nShe, I suspected was as stubborn as I. Lady Vere fixed her determined patient gaze upon Hatha and waited.\n\nTime ticked on. I heard Hatha's breath at my ear. The sound of shuffling and murmured chatter from the Council table. Behind me footsteps. Through it all we remained\u2014three points of a stubborn triangle\u2014Hatha, Lady Vere and me.\n\nThe Lady broke first, but not because of me.\n\nA laugh. A husky brittle laugh broke her gaze and made her eyes flicker to mine and then towards the sound. From the darkness at the side of the Chamber came an old woman.\n\n\"This one,\" she said, pointing a gnarled cane at me, \"this one is interesting.\"\n\n\"Mother,\" Lady Vere sighed the word, dipping her head in a low bow. The other members of the Council followed, murmuring and bowing almost as one.\n\n\"We have not seen you for some time Mother,\" Lady Vere said in a low and deliberate tone.\n\n\"There has been nothing of interest to see,\" the old woman snapped waving her cane at the raised table of The Council. She turned to me, in a surprisingly spry spin and said, \"You. You though, I find interesting.\"\n\n\"She is dangerous Mother, unstable...\" a male member of The Council stood to speak so short statured his chest barely cleared the table as he did.\n\n\"You seek too much stability Haakon. The world cannot be contained. It will never be as safe as you hope.\"\n\nThe short man shook his head, the plait of his long red gold beard hitting the tabletop as he did. \"With respect Mother it is the stability you mock that has kept the Vere safe all these years.\"\n\n\"There is safe and there is stagnant,\" a young man to the left of Haakon retorted, \"we are festering in the cocoon of your safety Haakon. Suffocating.\"\n\n\"And what would you have us do Ragnar? Risk all for this?\" He pointed at me, spittle flying from his red face as he yelled. \"The weakness of The Vessel is what brought us down in the first place and you wish us to trust this one?\"\n\n\"This one is all we have,\" said the slight blond woman seated beside Ragnar, her voice was soft but not without power. It danced across my skin in a fluid caress.\n\n\"This one,\" spat Haakon, \"Is nothing but the whore of the Masters.\"\n\n\"I have a name,\" I interrupted, proud that my voice did not shake with the anger that coursed in my veins. They turned as one, shocked momentarily into silence by my voice.\n\n\"Yes. We know,\" said the one called Ragnor, \"You are Talia of Hawthorne Shire, Chosen of the Dark Prince of Pleasure, but what are you to us?\" There was no malice in the tone, but genuine interest. Curiosity. He was not in the school who wished me gone. I felt his desire to use me. He tilted his head and looked intently at me honey blond hair falling in a curtain across half his face as he did. The soft spoken woman at his side reached over and tucked the hair behind his ear with the oft practiced ease of a lover.\n\n\"What do you wish me to be Ragnor?\"\n\nHe met my eyes, smiled and shook his head.\n\nAn elderly woman at the far end of the table sneered and raised a palm shaking with barely held fury. \"I know what he wishes from you...\"\n\n\"Audhild,\" Lady Vere interrupted.\n\nBut Audhild was not so easily silence. \"No! I will not be silenced my Lady. Ragnor speaks his mind, why should I not?\"\n\nI turned my shoulders to Audhild preparing myself for the inevitable onslaught. She was not the first to rage at me, she would not be the last. I braced my shoulders and jutted my chin in defiance as she pointed at me with a long spell casted finger, ringed with an intricate tattoo. \"Ragnor wants your power. He wants nothing but the power of The Vessel and he does not care who he risks for it.\"\n\nAnother Council member rose from his chair in Ragnor's defense. \"Rubbish! Audhild you old fool! Ragnor wants naught for himself. He wants The Vessel to take her place as it has been. To bring back the balance. Nothing more.\"\n\nAudhild turned on him, giving no ground. \"Better an old fool than a na\u00efve whelp Sjurd. You follow Ragnor to your doom. I will not let you take us all with you.\"\n\n\"SILENCE!\" Lady Vere's voice boomed impossibly loud, echoing off the chamber walls. Her hands clasped in a steeple at her chest. Magic bounced from her in wave of heat. She unclasped her hands and continued calmly, \"The Council will be seated. The Council will be silent.\" When order was restored she pointed at me, \"You, Mistress Vessel, come forward.\"\n\nI raised an eyebrow but kept my feet planted.\n\nShe sighed, sounding not unlike Hatha, \"Please. Please Talia, come forward to address The Council.\"\n\nI hesitated, out of little more than petty spite before I stepped forward to stand directly in front of Lady Vere. Behind me I heard the throaty chuckle of the old woman they called Mother.\n\n\"Do you wish to question me or should I speak, my Lady?\"\n\n\"Speak freely your peace Mistress Vessel and then we shall question you.\"\n\nI nodded and swallowed my throat tight. I spoke slowly the words Hatha had taught me, \"I am Talia of Hawthorne Shire. I am The Vessel of Sarran Vere. I ask of you shelter and knowledge.\"\n\nRagnor was the first to speak, \"My lady she is Coven born, shelter and knowledge cannot be denied.\"\n\n\"Coven born?\" the one called Audhild hissed from the end of the table, \"Who is her Sire? She has no heritage here. She has no rights.\"\n\n\"No heritage?\" Sjurd, the fiery young man who had spoken in support of Ragnor gave a short laugh along with his question. \"How can you speak such rubbish? She is The Vessel, therefore she is Coven born. There is no question.\"\n\n\"There are always questions,\" Haakon said, \"Questions of loyalty come to mind foremost.\"\n\nI faced Haakon. \"Loyalty?\"\n\n\"Yes, to whom are you loyal? It is a simple question Mistress Vessel. You ask us reveal our knowledge, to give you the secrets of spells of great power, how do we not know you will not share it with our enemies?\"\n\nAnger spiked in my veins. \"I am here am I not? I came freely, at great peril and ....\"\n\n\"You also fed the Dark Master's freely,\" Haakon fired back. \"You gave of your blood and body to Roth like a bitch in heat. You could not even wait to be alone. You spread your legs for him before all who could see.\"\n\nThe truth of his retort stung. How did he know? My face flushed red with shame and anger; I looked back at Hatha who sent me a hurt shake of her head. Of course it was not her, I regretted that I questioned for even a moment.\n\n\"Yes I fed Roth. I could still be feeding him now, in the luxury of the Night Palace but I am here. Here with you. Does that mean nothing?\"\n\n\"It means nothing until you are proven loyal.\"\n\n\"How can I do that?\" I asked.\n\nAudhildn's answer was quick. \"Tether her,\" she said, and gasps sounded down the table.\n\n\"Tether?\" That is your answer?\" Ragnor asked with obvious disbelief.\n\n\"No!\" an old but strong voice sounded behind me, so loud my ears rang with its heavy bass. \"She will not be tethered she will be taught.\"\n\n\"Mother, surely you do not mean to overrule The Council?\" Haakon asked in a tone syrup sweet with respectful fury.\n\nShe did not rise to Haakon's bait. \"Never would I do such a thing Haakon. \" She addressed the entire council, \"Vote now. Talia of Hawthorne Shire. I say Talia of Hawthorne Shire, Vessel of Sarran Vere will be taught in the ways of the Sarran. Who says Aye? Who says Nay?\"\n\nA chorus of ayes and nays sounded, equally strong. Four in favor, four against. The Council split equally between Haakon and Ragnor. I noted with interest that the Lady Vere voted in favor of the Mother's motion. She wanted me taught, that was a surprise.\n\n\"What is the vote Lady Vere?\" the old crone asked.\n\n\"It is tied Mother. A hung vote.\"\n\n\"Which means a Nay in the laws of The Coven,\" Haakon crowed triumphantly.\n\n\"Unless I should vote to break the tie.\"\n\n\"What?\" Haakon swung his head to stare at the Mother, his plaited beard flicking like a whip as he did.\n\n\"You heard me Haakon. I am Mother of the Coven. I vote on Council matters as I so choose. I choose now to vote in favor of teaching The Vessel.\"\n\nHaakon jerked to his feet, the high back of his chair falling with a sharp bang on the stone platform.\n\n\"Do you challenge me?\" Mother asked, raising a tattooed palm to face him as she did. Her power buzzed through the room. I felt it like the swarm of an angry hive. A ready hive. My skin hummed with the authority of her anger.\n\nIt was respect or fear that made Haakon back down. Or perhaps a combination of the two. \"Never Mother. Never would I challenge your rule.\" he said, his face pale as he looked upon her outstretched palm.\n\n\"I thought not. The Council is dismissed.\" She turned to face me, waving her cane at my face. \"You I will see tomorrow. At Mother's hour you will come for your first lesson.\"\n\nI nodded, turned and followed Hatha from the chambers. I had gotten what I wanted, all that I asked. Why then, was I so worried?\n\n* * * *\n\nI tried to apologize to Hatha for my silent accusation when we returned to our chambers. She dismissed me, more in weariness than harbored animosity I realized as she raised a hand and murmured, \"All is good Mistress. Now is the time for rest not talk. You will need all your wits for the Mother tomorrow. Sleep.\"\n\nI pulled on a night rail over my still painted skin, too drained to even wipe myself down before sleep. The cot was small and the thin mattress hard, but it felt like a cloud to my weary bones.\n\nI turned on my side and raised my head on my elbow to look over at Hatha. As my eyes adjusted to the darkness I could see her laying flat with her hands tucked under her head looking up at the ceiling. \"Was it what you expected Hatha?\" I asked.\n\nShe laughed. A soft sound of resignation rather than joy. \"It was what it was Mistress. I have come to expect nothing else.\"\n\n\"Thank you Hatha. For all you have done. For all you have risked. Thank you.\"\n\n\"It is my duty Mistress. I am forever your servant.\"\n\nThe words cut. I knew she did not mean them too. Which was somehow worse. If she were lashing out at me I could at least have know that she had some passionate feeling to me. Something more than duty.\n\nDid anyone care for just me? I hated the pathetic thought even as I sank into the indulgent lonely misery.\n\nDuty. Obligation. Tool. These were my connections. Nothing more. Wanted or hated for what I could do. Never for just me. Vessel...the perfect description for me. A receptacle for the needs of others.\n\nRoth wanted my power. Hatha wanted to serve the power. The Council wanted to destroy or harness the power. With an entourage of the power hungry why then did I feel so damn powerless?\n\nOne remained apart; Nadar.\n\nWhat did he want? That was still not clear. I suspected it was to assuage the grief for his mother that still beat beneath his skin. The power of loss. Was that what drew me to him? Him to me?\n\nAs I succumbed to sleep, eyes no longer able to watch the play of darkness and light on the ceiling I thought of him.\n\nNadar.\n\nIt should have been no surprise that he entered my dreams. He had been my last thought. He seemed however, surprised to see me. I did not want his surprise. I wanted his desire. His love. In dream I slipped into the truth I ferociously shielded in daylight. He was in the room where I first saw him, framed by the moonlight from the window he was gazing out. Silver hair, soft glowing in halo, but he was no angel. He was a dark angel. My dark angel? How I wanted it to be so.\n\n\"Talia,\" he whispered, my name a sigh that fluttered my heart.\n\nI pressed a finger to my lips to silence him. I did not wish to hear his explanations, his excuses. This was my dream, my fantasy.\n\nHe stood. I sighed at the sight of his strong broad frame. I wanted that weight on me. Over me, pushing me down, holding me still as he thrust inside.\n\n\"This is a dream,\" he said, as he came forward to stand before me. I nodded.\n\n\"You dream of me?\" He inclined his head and curled his full lips in a bemused half smile.\n\nI nodded again. Not trusting my voice. Not wanting to break the magic of the moment.\n\nHe brought forward a hand and brushed back my hair. Our skin connected with a crackle of heat, an ember sparked.\n\n\"You dream of me, I search for you. Where are you?\"\n\nI shook my head, and stepped back.\n\nHe reached out for me fingers outstretched but not making contact. \"No\u2014! No Talia, please don't go. I won't ask. I won't ask again.\"\n\nI took his hand between my palms, clasping his fingers tight between my hands. I wanted a solid connection but I could not get the depth of feeling. I hungered for more. . The touch\u2014no matter how hard I squeezed\u2014felt thin somehow. Slight and insubstantial.\n\n\"I've missed you,\" his murmured words floating through my hair.\n\nI wanted to answer. Tell him that I had missed him too but the words tangled in my chest and I could not draw them forth, just as I could not feel the solid warmth of his touch.\n\n\"Talia, I hardly know you.\" He stepped back, looked down at our clasped hands and then back up at my face. His silver rimmed eyes locked on mine. \"No. I don't know you, but I want to. I need to. I need to know you. Will you let me, please?\"",
        "He spoke the truth. I felt it with each syllable. I opened my mouth to tell him I understood and the room began to fade. The edges first, dissolving into a spray of colored pin lights.\n\nI stepped into him, pushing up on my toes. Our mouths met. Lips on lips, tongues entangled a spark of heat. Melting like wax I succumbed to the teasing pleasure. Not enough. Not enough. I hungered for more. Greedy I grabbed at him, taking more and more.\n\nHe murmured against my lips, \"Come back to me. Find me again. It's too much for you now. Later. When you're stronger. Rest now, rest now my beautiful and return again.\"\n\nI could no longer feel him. I pressed harder, pushed to find the feeling. The more I tried the more the feeling dissolved. The sparkle of lights erased the room, closing in quickly until Nadar was gone. Blackness curtained down until I was left with just the image of his moonlight halo. My dark angel.\n\nI thought of the dream as I awoke to Hatha shaking my shoulders. I sat up and rubbing the last vestiges of sleep from my eyes I opened my mouth to tell her about Nadar's nighttime visit but after one stuttered syllable I stopped.\n\n\"Mistress?\" she questioned softly her hands pulling me up to sit and stripping me of my night rail.\n\nI lifted my buttocks and raised my arms to help her slip the material off my body. \"It is nothing,\" I lied. \"Nothing at all.\"\n\n\"You're tired,\" she said, she stood between my legs. I looked up at her. \"Yes, I am,\" I said, this time speaking honestly. I was so weary I felt numb. Old. Fragile.\n\nI scraped a hand across my face. I was not looking forward to seeing the Mother in this state. I wanted to sink back down on the bed, pull up the covers and hide from the world.\n\n\"Let me help,\" Hatha said. She'd come down on her knees, her hands rested on my thighs.\n\nI shook my head, \"Only sleep will help, Hatha.\"\n\nShe smiled up at me. With her hair loose about her shoulders and her tattooed arms bare she seemed so young. Almost like the daughter of the angry woman in black who had first met me in the Night Palace. I laughed.\n\n\"What makes you laugh Mistress?\"\n\n\"You Hatha.\"\n\nShe frowned and I laughed again. \"Do not take offence Hatha. I laugh because I'm thinking back to when I first saw you all starched in black and scowling. Never then did I think I would see you so pretty nestled between my thighs.\"\n\nShe blushed and flicked her gaze away staring at the bed covers. \"You think me pretty Mistress?\"\n\nI curled a finger under her chin tilting her face up until her eyes met mine. \"I think you beautiful Hatha. I think you magnificent.\"\n\n\"Mi-mistress,\" she stammered and moved to place a warm kiss on my palm. That simple act filled me with joy. My heart glowed with the connection I saw in her eyes. I thought back to last night, to how sorrowful I had been at her 'service' comment. As I looked down at my friend I shook my head. How could I have doubted her? Of what joined us? We were friends. She was more than my handmaiden. Much more.\n\n\"Shall we go now Hatha. What state of undress am I required in today?\" I joked though a stifled yawn.\n\n\"You are still weary my Mistress.\"\n\n\"I am, but there is little we can do about that.\"\n\nI arched my spine and raised my arms up, closing my eyes for moment as I sank into the pleasure of the stretch. While my eyes had been closed she had stood. I felt her hands on my shoulders. I smiled, and turned my head to rub my cheek on her hand. She pushed when I expected her to pull. I fell back on the cot my legs hanging over the edge.\n\n\"Hatha,\" I laughed.\n\n\"Lay still,\" she ordered, and because it was comfortable I did. A warm wash cloth worked across my body in wet slippery strokes. A moan of pleasure slid from my mouth as she added pressure to the heat of the cloth massaging me with each stroke. \"Oh, Hatha, that's so good.\"\n\nShe hummed as she worked down my torso to my legs.\n\n\"Stand,\" she ordered and I did so with a feigned groan of protest. The cloth worked across my shoulders and back with ruthless efficiency. I resigned myself to the fact that we would leave soon, scrubbed clean to face the Mother.\n\n\"You are clean,\" she said finally, sounding very satisfied.\n\n\"A fresh slate,\" I joked. I moved as if to turn to face her but the hands she had shifted to grip my hips would not let me.\n\n\"Hatha...\"\n\n\"Let me help you Mistress. Let me...\" her whispered words trailed off as she breathed against my skin and rested her cheek on the pillow of my arse.\n\nShe spread my cheeks, and licked me from behind. A strangled gasp slipped from my throat as the damp point of her tongue hit my arsehole. I spread my legs and leaned forward until my hands hit the wall beside my cot.\n\n\"Yes.\" I heard her murmur from behind.\n\nHer tongue flickered across my most private place. A flutter of constant shooting pleasure. I fell into the pleasure of this darkest kiss. Her fingers snaked between my thighs to slide between my sticky lips and push inside. I gasped again as her fingers curled inside me circling pressure into the walls. I clenched around her fingers in a sharp almost painful orgasm. Once and then again as she gave me no respite.\n\nDizzy, my hands slipped on the wall and I fell forward onto the cot, my knees banging on the edge. Twice I had just come, but I wanted more. The sharp stinging orgasms had just fueled the need. I got my stumbled to get my footing and turned to face Hatha. She smiled up at me from her knees on the floor. Her lips swollen and wet. Her tongue poked out to flicker at the seam.\n\nI came up on my feet, with rough fingers fisted in her loose hair I brought her mouth to my aching centre. Two hands I held fast in her fair, holding her as if reining a mount. I saddled my swollen sex on her mouth and ground my mound down on her face riding her with ruthless intensity.\n\n\"Yes. Hatha\u2014yes.\" I grunted as I ground down on her tongue riding to my next orgasm. Power surged through me, up my body from my sex, pulsing at my breasts. My nipples points of aching intensity. Up, up she took me to the peak of my orgasm. Racing, higher and higher on her skilled mouth.\n\nI looked down at her, as she ate at my sex, her hands gripping my hips digging into my flesh to keep me from moving away, her eyes drilling into mine. It was too intense, her need to please me too much to bear, I looked away and saw him.\n\nAskel.\n\nThe young man watched from the door. He'd let himself in but had shifted no further than the door behind him. He leaned against the wood, one hand moving fast, rubbing the erection bulging beneath the soft suede of his breeches. His eyes were fixed on Hatha's face at my sex and he stroked in time with each movement of her head. It were as if an invisible line existed between his cock and the tongue lapping at my slit.\n\nI laughed. His eyes flicked up to meet mine. The power of his lust made me reel, I locked my knees to keep from falling back. Hatha paused in her licking, I twisted her hair to keep her from moving away. I did not want her to stop. I did not want her to stop. Or him.\n\nA new heat uncurled deep within flicking out to crackle across my skin. \"More,\" I whispered and heat my own voice ring deep with an unbeknownst power.\n\nHe understood my command. The Vessel's compulsion. He pushed his breeches down until they sat below his hips. His cock jerked free, plum tipped and glistening with cum.\n\n\"Touch,\" I commanded and his hand began to stroke. Root to tip he pulled on his shaft.\n\nI watched.\n\nHe watched.\n\nAnd Hatha worshiped at the altar of my sex.\n\nIt took but a moment for me to come again. Pulsing surges of release that shot from my body drenching Hatha with my cum. My power peaked with my orgasm energy surging up and down my spine trying to burst free. I had to release. Release the power.   Askel. He was my release.\n\n\"Cum,\" I hissed through gritted teeth.\n\nHis mouth gaped open as his body obeyed my call without question. His hips jerked and thick ropes of his seed pulsed forth onto the cold stone floor. Like a puppeteer I controlled him. With the certainty of the power that coursed through my veins I knew it.\n\n\"Cum,\" I said again.\n\nI felt it the surge from me, a pulsing link of power from my sex to Askel who shuddered once more in orgasm. He fell forward to his knees, on all fours he arched his back like a pained animal and his cock spewed forth stream after stream of cum.\n\nI laughed.\n\nI was potent. I was ringing with power. With magical might. From my toes to the ends of each strand of hair I was abuzz of my arcane energy.\n\nI released my fingers from Hatha's hair and brought my hand down to stroke across her cheek. \"Thank you,\" I murmured looking down at my fingers starkly pale on her flushed skin.\n\n\"I am in your service,\" she parroted the platitude of a handmaiden.\n\nHer words stung. Like a careless slap. I still felt the buzz of power but it no longer resonated with joy\u2014the fire dampened by Hatha's service.\n\nI was a brittle shell. A Vessel of still, but of loneliness, or empty sorrow.\n\n\"You are in my service,\" I said, voice hollow as empty as I felt.\n\n\"I am your Handmaiden. You are my Mistress. I service you as you need. You are the Vessel.\"\n\n\"The Vessel,\" Askel repeated, now seated with his back to the door.\n\nFrom where she still knelt between my thighs Hatha turned her head to his voice, noticing Askel for the first time. As only Hatha could she rose to her feet and with a mouth still glistening with my released asked, \"What are you doing here?\" as if he'd just interrupted us breaking our fast.\n\n\"I am here to take The Vessel to the Mother.\"\n\n\"I am ready,\" I said.\n\nHatha looked to me with her brow furrowed.\n\n\"I am ready,\" I repeated more firmly. I wanted to leave the room. I did not care where to, just away from the stifling presence of loveless Hatha's service."
    ],
    "authorname": "darcysweet",
    "tags": [
        "horror novella",
        "hatha",
        "voyeur",
        "talia"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-choosing-ch-06"
}