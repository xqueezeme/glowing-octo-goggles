{
    "title": "A Certain Tension Ch. 05-09",
    "pages": [
        "Author's note: Thank you for your patience. I hope this installment makes up for the wait. I appreciate all the positive comments I've received so far. Next installment is coming soon! -FFF\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~</p>\n\nChapter Five\n\nI down the rest of my coffee as I read the latest text from my sister-- an easy feat now that I've been sitting here for so long that it's gone cold.\n\nI've been waiting in our favorite Upper West Side coffee shop for more than an hour, but in all my life, I've never known Kat to be on time for anything except her job. And apparently that's why she's late now. Her latest text just said something frantically incoherent about a \"cat emergency.\"\n\nNot only did I expect my sister to be late this morning, I also don't mind. Once she gets here, I'll be in wedding mode for the next two weeks and my Aunt Sandra has already warned me that she's putting me to work. Though I suppose being busy with whatever \"maid of honor\" duties are, is better than sitting in my hotel room alone, stewing in memories that continue to press in on me.\n\nWith the exception of the time I spent with Annie last night, this city is just one big reminder of my parents and being back doesn't feel healing, it just reminds me of how much I miss them. I'm not sure New York will ever feel truly comfortable for me again and it certainly won't feel like home. Something is just missing. Or, two things to be exact.\n\nIt seems different for Kat and Ian. By the time they were born-- five years after me-- my parents' company had taken off, the hotel line was expanding, and the twins spent a lot more time with nannies than I ever did. I'd accept that as the reason Ian turned out how he did, but Kat still managed to inherit everything that was good about our parents. They might have been traditional and maybe even a little conservative, but nothing compared to Ian.\n\nDespite my issues with him, of which I have many, I'll forever be grateful the twins were born. With their birth, I got a best friend in Kat and freedom from my parents' business with Ian.\n\nMy parents never hid their desire for me to be involved in the Dawson Hotel Group. They both came from struggling families but worked their entire lives to build the company into what it's become and apart from their children, those hotels were their life. While I always respected their work ethic and seamless ability to run a company together, I just never shared their passion for hospitality.\n\nBut Gail and Charles Dawson were special and so unlike the parents of other affluent kids I met growing up. I always knew they wanted me to follow in their footsteps, but they never pushed it. When I started to show an aptitude for art, they bought me all the supplies I could ever need. And when they saw me flirting with my first crush at my sixteenth birthday party, they asked me if I kissed her the next day.\n\nWhen it became clear that Kat shared my lack of interest in the hotel business, Ian became the beacon of the future-- even if he and my dad never really saw eye to eye. About anything.\n\n\"Can I get you another?\"\n\nI look up to see a barista staring down at me. I was so caught up in thoughts about my family that I didn't even see her approach the table.\n\n\"Oh yeah, thanks. Just black, please.\"\n\nWhen I reach out to hand her my cup, we make eye contact, and her light eyes remind me so much of Annie that I have to force myself to look away so I don't end up staring like some creep. Because while the barista is very pretty, she's still not Annie.\n\nAnnie. It hasn't even been 24 hours since I met the woman and yet everything seems to remind me of her. I've had plenty of one-night stands in my past-- more than I'd even like to admit-- but for some reason, images of Annie are stuck on repeat in my mind. But not the images I would normally fixate on after a night like that. Yes, the sex was mind-blowingly amazing, but it's so much more than that. Annie just felt special. Being with her felt special. An experience that I could never replicate, even if I searched my whole life.\n\nBut since Annie made it crystal clear that she didn't want anything more than last night, I once again do my best not to think about the \"what ifs\" of the entire situation. Even as we fell asleep last night, and she nestled her body so perfectly into mine, I held out a sliver of hope that maybe she'd change her mind and stay. But when I woke to an empty hotel room, reality settled in. One night is all I'd ever get with Annie.\n\nYet I know she felt the same connection I did. Because while I may have woken up alone this morning, she didn't leave my bed completely empty.\n\nThe barista comes back over and sets a new cup of coffee down on my table. I wait until she's gone before reaching into my pocket and pulling out the piece of hotel stationary I've been carrying around with me all morning.\n\nI've already memorized everything on the note, but ever since I saw it lying on Annie's pillow this morning, I can't help but look at it again and again.\n\nI will never forget this night.\n\nxx\n\nA\n\nI glance at the message Annie left for me, but only for a second. It's not really her words that keep me going back to the note. It's not her words that prove to me just what last night meant to her. It's the small image that she sketched right under that message of me asleep in the hotel bed.\n\nI've always been a heavy sleeper and I have no idea when she managed to sketch it, but it's the most romantic gesture I've ever received. I haven't always been the best at deciphering my own feelings, let alone someone else's, but the drawing feels intimate. As if I'm getting to see a rare side to Annie that nobody else gets to experience.\n\nAnnie's denial that she's an artist is obviously futile considering the talent I can see on the page-- even with a simple drawing from a hotel pen.\n\nKat has always claimed that art is my \"love language.\" And right now, as I stare at the drawing of my sleeping form, I have to agree. But as much as the note and sketch mean to me, I also can't escape the emptiness I feel. There's a hole in my heart that feels unique to Annie-- as if nobody else can fill it.\n\n\"I'm sorry, I'm sorry, I'm sorry.\"\n\nI quickly stuff the note back into my pocket when I hear my sister's voice boom over from across the coffee shop. When I look up, Kat is racing across the room to my table, her unruly brown hair flying around her face as if it's windy in here. And before I can even say anything, she's pulling me up from my chair and into a tight hug.\n\n\"I'm so happy you're here!\" she shouts, not letting go of me.\n\nI can only laugh as I hug her back. Kat has always reminded me of a tornado. She's a ball of energy, opinions and noise and her personality is infectious. She's so different to me-- I'm far less excitable and generally pretty relaxed. But somehow our differing personalities have always worked well together and being away from Kat has been the hardest part about living in LA.\n\n\"It's good to see you,\" I finally manage to get out when she releases me.\n\nAs we sit down, she attempts to put her hair to one side of her head, but it just ends up falling into her face like it always does. That may be the only thing we share-- wild hair that refuses to be tamed.\n\n\"Things at the clinic have been crazy. It took me forever to get out of there. Remind me why I decided to go out on my own?\"\n\n\"Because you're a Dawson. And Dawson's Deliver,\" I reply, repeating the family mantra I heard so many times throughout my childhood.\n\n\"We have fifteen minutes before we need to leave or we'll be late so drink up,\" Kat says as she points to my cup.\n\nI roll my eyes at my sister. I'm not the reason we'll be late to anything-- that's Kat's specialty-- but I keep my mouth shut because Kat doesn't look like she's done talking. Typically, Kat is never done talking.\n\n\"We'll go next door for the final dress fitting,\" she continues. \"Then we need to go to Soho for your fitting. A designer down there is handling the bridesmaids' dresses. And then Jake will meet us at the venue for the final walk-through.\"\n\nI wait a moment to make sure she's done talking. \"I can't wait to see you in your dress. Are you nervous?\"\n\n\"A little. But the alterations were minor so it should be fairly the same as the last time I tried it. Aunt Sandra was an angel for the strings she pulled. You won't believe how gorgeous the design is.\" Kat pauses her rambling to steal a sip of my coffee but as soon as she does, she puckers her lips like she tasted something terrible. \"That needs milk. And sugar. And heat. Anyway,\" she says. \"This entire day is going to be about me, as it should be I might add, so let's talk about you.\"\n\nI smile as Kat finally takes a breath and drinks the rest of my coffee, cringing the whole time she does. \"I talk to you every day. What do you want to know?\"\n\n\"What did you do last night without me? I'm sorry I had to work.\"\n\n\"It's fine. I checked into the hotel and then went to The Runaway.\"\n\n\"The Runaway?\" she asks with a sudden smirk on her face. \"Well, that's a throwback to old times. And did you meet anyone, missy? Isn't that what you do there?\"\n\n\"I meet women every time I go out, Kat. Nothing new. I was just stopping in to say hi to Darcy.\" She continues to stare at me in a very annoying, sisterly kind of way. \"Get that smirk off your face. And don't call me missy. It's weird.\" I force myself to maintain eye contact with her as I speak, knowing Kat can sniff out a lie from me in a second.\n\n\"You seem a bit shifty,\" she responds with an eyebrow raised. \"One might even say defensive.\"\n\nKat has a huge smile on her face at this point and I'm not surprised at all. Teasing me about my dating life has always been one of her favorite pastimes, which is partly why I never brought girls home from school when I was younger. Kat always had a way of embarrassing me and making everything into a bigger deal than it was. But I love the woman. Despite her inability to chill the fuck out.\n\n\"Okay, fine. We'll come back to your love life later. How's the hotel?\" she asks.\n\n\"It's a Dawson hotel room. Ian hasn't changed that much. Same old.\"\n\n\"I'm surprised he isn't charging you for the room.\"\n\n\"He doesn't even know I'm staying there. Uncle Neil set it up for me.\"\n\nKat lets out an exaggerated gasp. \"He never gives me free rooms.\"\n\n\"You live in the city. On the Upper West Side, I might add.\"\n\n\"How would you know? You haven't been here.\"\n\n\"Oh. Burn,\" I reply sarcastically.\n\n\"Uncle Neil's probably only doing it so he can butter you up and convince you to stay in New York.\"\n\n\"He knows my answer won't change.\"\n\n\"Maybe. But you never know with Dawson Determination.\"\n\nI smile at the throwback to our dad. He loved to use our last name with any other \"d\" word that made sense in the moment. As a kid I found it beyond embarrassing, especially when he did it around my friends. But now I'd give anything to hear one of those stupid alliterations again.\n\n\"It would be a Dawson Debacle to try,\" I reply.\n\n\"You know you could have just stayed with me instead of being all weird and alone in a hotel room.\"\n\nLuckily, I'm not as loose lipped as my sister who can't keep a secret to save her soul. I'm not about to tell her that I wasn't alone in that hotel room last night. Not at all.\n\n\"The last thing you need before your wedding is your big sister all up in your business,\" I say instead.\n\n\"I don't mind as long as you don't mind me screaming Jake's name at all odd hours. Vets fuck when they can.\"\n\n\"Makes sense. Have you guys ever done it in the clinic?\"\n\nKat raises her eyebrows and smirks. \"That's for me, Jake and a room of rescued hamsters to know and you to never find out.\"\n\n\"You can rescue a hamster?\"\n\n\"You can rescue almost anything.\"\n\n\"You've always had mom's compassion,\" I say, surprising even myself. It's rare I let myself even utter the word \"mom\" anymore.\n\nKat gives me a thoughtful look before smiling. \"I guess I was never cut out for the corporate world.\"\n\n\"I think mom and dad figured that out the day we found you in the security tent at the zoo.\"\n\n\"The so-called 'natural environment' those meerkats were in was horrifying. I was just expressing my feelings about it. As any normal person would do.\"\n\n\"You picked a fight with a zookeeper and crawled into that 'so called natural environment.' That's normal?\"\n\n\"It's not like it was the tiger exhibit.\"\n\nKat's specialty is making me laugh and as we reminisce, I do just that. \"You were born to be a vet,\" I finally say. \"Mom and dad knew that. And we all love you for it.\"\n\nKat's unusually quiet for a moment as she looks at me. \"This is the most I've heard you talk about them since the accident,\" she finally says, causing the smile on my face to drop.\n\nI take a moment to look out the window at the traffic and pedestrians crowding the streets. Kat is right. I rarely let myself even think about my parents anymore let alone talk about them. It just doesn't come up with my friends in LA and I'd never volunteer to talk about it with them. But sitting here, knowing I'm about to face so many people from my past-- people that are a constant reminder of what I lost-- it's hard to do anything but talk about them.\n\nI look up at Kat who seems to be in her own thoughts. She looks so much like our mom. Bright and beautiful and full of life. But right now, she also just looks young. I need to remind myself that Kat lost parents that night too. And I'm her big sister. It's my job to be here for her like she's always been there for me.\n\n\"They'd be so proud of you,\" I say to her quietly. \"I wish they could be here to walk you down the aisle.\"\n\n\"Me too,\" she whispers before a soft smile grows on her face again. \"But I'll take Uncle Neil and Aunt Sandra as back-ups. Pretty good ones.\"\n\n\"Very good ones,\" I reply.\n\nKat swats my arm playfully. \"I've missed you. And I know you miss me too, Choo Choo.\"\n\n\"Only because you haven't used that nickname since we were ten.\"\n\n\"We like that nickname.\"\n\n\"No, we don't,\" I say with a laugh. Ultimately, I don't care what my sister calls me as long as it isn't Charlotte, my birth name.\n\nKat looks thoughtful again before she finally speaks. \"Dinner is at eight tonight.\"\n\nThe statement sounded simple enough, but we both know that a Dawson dinner is never simple.\n\n\"And I assume our dear brother will be there?\" I ask.\n\n\"Uncle Neil is making him.\"\n\n\"Uncle Neil has authority over Ian? Since when?\"\n\n\"Ian gets how influential Uncle Neil is with the company. He's not going to rock the boat now that he's gotten what he wants.\"\n\nI'm silent as I try to shake the anger that flows through my body. Ian has never been a warm or kind person, but he showed exactly who he is after our parents died and I won't ever forget it. Maybe it's a twin thing, but Kat has always been more forgiving of Ian's antics than I have. Though, everything happened so quickly after our parents' death that I don't even know how much Kat is aware of the way Ian executed the will. I left town right after and we've never discussed it.\n\n\"We all know the company should have gone to Uncle Neil,\" I finally say, not able to hold back the sentiment I've felt since I found out Ian took over the hotel group. \"Even if I haven't seen the proof.\"\n\nKat looks slightly surprised and I don't know if that's because I'm finally talking about it or if it's because of what I said.\n\nKat puts her hand on mine, instantly releasing the tension there. \"I guess we'll never know why mom and dad made certain decisions.\"\n\nThere's so much Kat has the right to know that I haven't said, but I stop myself from going into it further. The past is the past and what Ian did doesn't really matter to me now. I'm as far away from New York and the Dawson Hotel Group as I can get. And ultimately, I care more about the two people I lost that night than the way Ian executed the will. The next two weeks should be about Kat, and I'll do my best to behave around Ian because I know that's what she'll want and what my parents would have wanted.\n\nI scrunch my nose and look at my sister, trying to lighten the mood a bit. \"Can't you, me and Jake just get pizza tonight?\"\n\n\"We have to go to dinner. For Aunt Sandra and Uncle Neil. And besides the rehearsal dinner and wedding, this is the only time you'll even have to see Ian.\"\n\n\"Do you see him often?\"\n\n\"Only when Uncle Neil makes him come to family dinners, which is rare.\"\n\n\"Is he still trying to sleep with all of New York?\"\n\n\"From what I hear, yes.\"\n\n\"Gross.\"\n\n\"Says the lesbian catnip machine,\" Kat replies, making herself laugh.\n\n\"I don't even know what that means. You spend too much time around animals. Anyway, enough about him. When is the bachelorette party?\"\n\n\"You're truly a terrible Maid of Honor. You don't even know when the bachelorette party is?\"\n\n\"This is why I'm a co-Maid of Honor with Holly. She organizes the party and I bring my charm and good looks. Everyone has a good time,\" I say, spreading my hands out in front of me.\n\n\"Whatever. It's Saturday. And you do need to bring your charm. Because there's someone I want you to meet.\"\n\nI cringe the moment the words come out of her mouth. \"Please don't set me up,\" I beg.\n\n\"Are you still hung up on Jen?\"\n\nFor some reason, her question doesn't spark images of Jen. The only thing I can think about when she asks that is Annie and her light eyes staring into me. But I can't say any of that to Kat.\n\n\"We were engaged. You don't just get over that,\" I say instead.\n\n\"She left you when you were at your lowest. Seems like the kind of girl you get over quickly.\"\n\n\"I don't want to talk about Jen. And I don't want to be set-up.\"\n\n\"You'll like her. I promise. She's a new tech at the clinic and she's gorgeous. Newly single. Not into astrology and the vegan lifestyle.\"\n\nI roll my eyes. \"Not all lesbians are vegan.\"\n\n\"But they're all into astrology?\"\n\n\"Only when Mercury is in retrograde.\"\n\n\"Aw, I forgot you could be funny,\" Kat says with a laugh. \"Are you done? Because we need to go.\"\n\n\"You literally just drank the rest of my coffee. We can go,\" I say and just as I'm about to stand up to take my cup to the trash, the same barista from before is back at the table and smiling down at me.\n\n\"Can I clear that for you?\" the woman asks.\n\nI nod and allow her to clear the table before looking back to my sister who's watching me with an arched eyebrow and a smirk on her face.\n\n\"What?\" I ask.\n\n\"I've been coming here for over a decade and have never gotten table service.\"\n\n\"Maybe she's just into blondes.\"\n\nKat scoffs at that. \"You're hardly even a blonde.\"\n\n\"Maybe she can sniff out your heterosexuality.\"\n\n\"I don't think it has a smell, Charlie.\"\n\n\"Hamsters do, though.\"\n\n\"I wasn't with the hamsters today. It was a cat.\"\n\nI smirk. \"There's a pussy joke in there somewhere.\"\n\n\"And yet we don't have time to hear it. Let's go, Casanova.\"\n\nChapter Six\n\n\"Sandra said I'd find you hiding in here. Now I know why.\"\n\nI look up from the bourbon I've been nursing to see my uncle standing in the doorway of his study. I've been holed up here since arriving at my aunt and uncle's Upper West Side townhouse, knowing I'd need a moment alone-- and a drink--before facing my brother tonight at dinner.\n\n\"Hey, Uncle Neil,\" I say, standing up from the study's expansive mahogany desk. \"Of course I'm in here. Holly and I have been breaking into your bar since we were teenagers. Did you expect anything less tonight?\"\n\nMy uncle laughs from the doorway before shaking his head, causing some of the messy blonde hair that's so much like mine and my dad's to fall into his face. \"I did not. Though I prefer you two doing it at this age.\"",
        "\"It was more fun using a paperclip to get in,\" I joke, but this time my uncle doesn't laugh. He simply moves further into the study until he's on my side of the desk.\n\nOnce he's in front of me, he grabs both of my hands and squeezes them. \"I wasn't aware of the paperclip. Now I know why my lock was all scratched up. Welcome home.\"\n\nThe soft smile he directs my way causes a wave of unexpected warmth to flow through my body that has nothing to do with the bourbon I've been drinking and everything to do with the man in front of me. Besides Kat, my uncle is the person I've missed the most in New York and now that I'm seeing him in person, I'm realizing just how much. As hard as it is to be in New York without my parents, being back in this townhouse-- a house that's only blocks away from the one I grew up in-- doesn't hurt as much as I thought it would this morning.\n\n\"Thanks,\" I barely manage to get out before he's pulling me into a hug.\n\nMy body tenses as his arms wrap around me but when he just tightens his hold, I begin to relax into the embrace. Besides my sister, I haven't hugged anyone in my family since my parents were alive-- not even at their funeral. But hugging my uncle feels familiar and safe and like I have a tiny bit of my dad left.\n\nHe finally releases me but doesn't pull too far away. \"It's good to see you, Picasso. We've missed you.\"\n\nI smile at the silly nickname. Ever since I was a kid and showed an interest in art, he's done that. He usually tries to pick a new artist each time, but my uncle doesn't know that many so it's usually Picasso or Monet or some other obscenely famous artist. I was Van Gogh for an entire year when I was fourteen.\n\n\"I've missed you too,\" I reply. \"Can I get you a drink?\"\n\nMy uncle finally takes a step back and walks over to the bar on the other side of the small room. \"I can get my own drink. You just relax. You're our guest tonight.\"\n\n\"I spent as much time in this house as I did my parents' house growing up. I'm hardly a guest,\" I reply, picking my drink back up and leaning against the desk.\n\n\"I haven't seen you in it in four years. It certainly feels like you're a guest.\"\n\nAs I watch him pour a glass of the same bourbon I'm drinking, my stomach tightens. I know my uncle and his words aren't meant to be malicious and I'm not surprised by his comment. He's the most direct and honest man I've ever met, and he's never been shy about his feelings on my move out west. Partly because he sincerely misses me and partly because my uncle is a New Yorker through and through and has a biased disdain for LA.\n\n\"When will I see Holly and Logan?\" I ask, trying to move the conversation onto safer ground. It seems to work as he gives me a fatherly smile. My aunt and uncle are so similar to how my parents were-- if you give them the chance to talk about their kids, they'll take it.\n\n\"Holly gets in tomorrow,\" he says, moving back over to the desk. \"She finishes up for winter break today. And Logan gets in whenever Logan decides to get in.\"\n\nMy uncle rolls his eyes as he talks about his son, but I know he's not serious. If there's one thing he's proud of, it's his kids. And it doesn't matter if it's Holly's teaching or Logan's acting career, he'll brag about them to anyone who will listen.\n\n\"Good. Because I need Holly. I have a feeling she'll be much better at this whole Maid of Honor thing than I will.\"\n\n\"She manages 25 fifth graders every year. I think she can handle a little wedding planning.\"\n\nI let out an exaggerated scoff. \"A little wedding planning? You aren't being sent email after email about it. Literally all day long.\"\n\n\"Sandra said you haven't answered one of those emails,\" my uncle replies, lifting his eyebrow in a stern way that reminds me of my childhood.\n\n\"Exactly. I need Holly. Kat should have just made her the sole Maid of Honor in the first place so I can drink at the wedding in peace.\"\n\n\"Kat loves Holly. But you know you're the most important person in your sister's life. She needs you now.\"\n\nHis words feel heavy and I look down at my drink so I can avoid his soft, thoughtful expression. If there's one thing being home has done, it's made me realize that leaving the way I did was more selfish than I was ever willing to admit. And if there's anyone who's going to make me remember that, it's my Uncle Neil.\n\n\"I know that,\" I finally reply in a quiet voice.\n\nThere's a moment of silence as we both take a drink before my uncle speaks again, this time in a much lighter tone.\n\n\"And how's the room? Are they treating you like a Dawson over there?\"\n\n\"They didn't roll out the red carpet for me, but beyond that, the room is perfect. Thanks for setting that up.\"\n\nMy uncle makes a small humming noise. \"I'll have to speak to management about the red-carpet miss. But you don't have to thank me. That hotel is as much yours as it is mine. Or Ian's for that matter.\"\n\n\"Tell that to Ian.\"\n\n\"Or you could.\"\n\nI instantly regret my comment and let out a long sigh. \"You know I don't want to get into this again. It is what it is.\"\n\n\"Only because you left. You don't even know what the will says.\"\n\nI close my eyes for a moment before I respond. \"Mom and dad made him the executor. If they cared about me seeing it, things would be different.\"\n\nI hate how defensive my voice sounds but this is the exact topic I wanted to avoid tonight and I feel like a broken record. My uncle gives me another serious look before setting his glass down on the desk and putting both of his hands on my shoulders.\n\n\"Your mom and dad knew their children very well. And I'm sure they assumed Ian would deal with that part of things the easiest. But Charlie, they would have never wanted things to happen as they have.\"\n\nI set my own drink down and put all my effort into keeping my eyes dry, despite the tears I can feel pressing in. My uncle and I have already talked about this. But not in person, and feeling his loving, familiar touch again is making me lose my resolve to avoid the topic altogether.\n\n\"They loved you more than anything,\" he continues in a gentle voice. \"And so do your aunt and I. I know why you left. I loved them too. He was my brother and my best friend. But Charlie, maybe it's finally time to face things here.\"\n\n\"I'm not so sure Ian would agree.\"\n\n\"Ian isn't the only person in this family.\" My uncle puts his fingers under my chin and tilts my head up until I'm looking into brown eyes that look so much like mine. So much like my dad's. \"Have lunch with me while you're here and we'll talk more. But for tonight, no more serious talk. This is a Dawson dinner. Let's drink and eat until Sandra has to roll us away from the table. It's what we do best.\"\n\nI give him a small smile. \"Lunch sounds great. That is if you can convince your wife to let me out of wedding duties for a bit.\"\n\n\"I've never been able to convince my wife of anything. But I'm sure Holly can hold down the fort for at least one afternoon.\"\n\n\"It's your grave,\" I reply, causing him to laugh again.\n\n\"Speaking of graves, I told your aunt I'd come help set the table and you know how demanding she is. I better head in.\"\n\n\"Oh yes,\" I reply sarcastically. \"You really should look into getting a new wife.\"\n\nMy uncle sighs dramatically. \"Perhaps. But at this age, I don't think I can be bothered.\"\n\n\"Let me come help--\" I start to say before he puts his hand up to stop me.\n\n\"Just relax in here for a bit. I know tonight won't be easy.\" My uncle picks his drink back up before leaning in and placing a quick kiss on my forehead. \"Someone will come get you soon,\" he says before moving towards the entrance to the study. He's halfway through the door when he pauses and looks back at me. \"We've really missed having you home. This is home, Charlie.\"\n\nMy uncle has always been free with his emotions and as he looks at me, I can see so many feelings broadcast across his features. And apparently that's all my body needs to lose its resolve. The tears that I've held at bay since arriving in New York have no chance of staying put at this point and I let them fall freely down my face as I stare at the man I've always considered to be a second father.\n\nHe's always been one of the most constant and reliable people in my life but after my parents died it became too hard to be around him. Maybe more than anyone, he was a constant reminder of what I lost. But now as I look at the face that bears so many similarities to my dad, all I want to do is run back into his arms for another hug-- an emotion I didn't expect to feel tonight or in New York at all.\n\nBut before I can reply, my uncle gives me a more playful smile and points over to the bar. \"Help yourself. Not that I need to tell you that. I'll see you soon.\"\n\nAs soon as he's out of the study, I lean back into the desk and wipe the tears from my face. I have no idea when I'm going to see Ian, but I assume it's soon and I'm not about to let him see me cry.\n\nAs soon as my face is dry, I take a deep breath and let it out slowly. My uncle put me at ease in an unexpected way. I'm still dreading dinner with Ian, but I'm also trying to remember that this house is full of love. Kat, her fianc\u00e9 Jake and my aunt and uncle are all happy to have me home. Even if my brother isn't.\n\nI take the last sip of my drink as I think about my uncle's request for lunch. Maybe he's right and it's time to face everything I've compartmentalized for four years-- including the aftermath of my parents' death and what happened with their will. But ultimately, I don't know what it will change. It won't bring them back and I don't care about their money or their company.\n\nMy uncle's stake in the situation is so different. Not only does he work for the Dawson Hotel Group, but he's also their Chief Operating Officer and was an integral part of helping my parents get it to where it is. He's always been convinced Ian didn't honor my parents' wishes and while I tend to agree with him, there's not much I can do outside of taking my own brother to court and I won't do that to Kat.\n\nI'm lost in my own thoughts when the big clock in the corner of the study suddenly chimes out, indicating it's seven o'clock. I look down at my empty glass and make the quick decision to visit my uncle's bar cart one more time. Even if he did put me at ease, I figure another drink before I get called to dinner can't hurt. Being sober around Ian is what hurts.\n\nOnce I have my drink, I lean back against the desk and look around the room I spent so much of my childhood in. Everything about this house is nostalgic but this room was always the one my cousin Holly and I spent the most time sneaking into. Mainly because this is where my uncle kept his liquor, but also because it just had an air of mystery to it with its dark walls and lush green couches. We used to like to pretend we were in some fancy Victorian house as we lounged around gossiping about nothing of importance.\n\nLogan was closer to Kat and Ian's age, so I didn't hang out with him as much as Holly. But the five of us still spent plenty of time together through the years. In fact, every Friday was a Dawson dinner and we switched off which family hosted. It's not an exaggeration to say I grew up in this house.\n\nI take a sip of my bourbon and close my eyes as I let the alcohol burn its way down my throat. If I'm honest with myself, this trip isn't turning out how I thought it would at all. I didn't want to believe that it could feel good to be home-- it's easier to justify leaving if I don't. But it does feel good to be back in this house. And there are happy memories here that I can't keep pushing away. It's only now that I'm back in New York, that I realize how much my grief has become a clutch. A clutch I've stubbornly held on to.\n\nHiding away in this study suddenly feels ridiculous. After all, it's just a family dinner, not a war zone. Just like so many family dinners I've done before. I take one more deep breath as I make the decision to be a mature adult and see if my aunt needs any help in the kitchen.\n\nBut as I open my eyes, everything changes. Because standing there in the doorway, staring at me with her mouth hanging open, is the last person I expected to see in my aunt and uncle's house. Or ever again.\n\nAnnie.\n\n<p align=\"center\">~ ~ ~ ~ ~ ~ ~ ~ ~</p>\n\n\"Charlie?\"\n\nI can hear the shock in Annie's voice, which I obviously feel too, but I can't answer her or even move. I'm paralyzed by the face that has been haunting my every thought for the last day as my mind tries to unscramble what I'm seeing.\n\nThe look on her face matches her voice, but she seems to have more control over her body than I do. Because while I just continue to stand there not saying anything, she moves slowly into the room.\n\n\"What are you doing here?\" she asks, stopping a few feet from where I'm standing.\n\nAll I can seem to do is hold my drink limply in my hand and take in her face, which only seems to have gotten more beautiful since the last time I saw her. Maybe it's because they're so wide right now, but her eyes are shining, and my own gaze is fastened to them.\n\n\"Charlie?\" she repeats, this time in an almost whisper. \"What are you doing here?\"\n\nMy mouth opens and closes a few times before I'm finally able to get words out and even as I do, I feel like I'm watching the scene from above-- not actually in it. \"This is my aunt and uncle's home. What are you doing here?\"\n\nI barely recognize the raspy whisper that comes out of my mouth but with the shock I'm feeling, it was the best I could do.\n\nAnnie's brow furrows for a moment before an entirely new expression settles onto her features and her eyes get as wide as I've ever seen them.\n\n\"Charlotte?\" she asks.\n\nI've never actively felt the blood drain from my face until this moment. But as I hear my birth name come out of her mouth, my confusion mixes with dread and I know my face is as white as a ghost. Because there's only one person on earth who calls me that name.\n\n\"What did you just call me?\" I ask, now fully whispering.\n\nAnnie shakes her head slightly and before she has a chance to respond, I hear another voice come from the doorway of the study-- the voice I've been avoiding since arriving in this house.\n\n\"There you are, Annie,\" Ian says from the doorway.\n\nAnnie whips her head around to the door and she looks like she's watching some horror movie. Her face is so white that the freckles sprinkled across her nose are standing out in stark contrast. But that must not be anything compared to the complete bewilderment that I can feel on my own face. How does Ian know Annie?\n\n\"Oh, and you,\" Ian adds when he notices me standing in the room. \"Welcome home.\"\n\nIan walks into the room and now I feel like I'm the one watching a horror movie as he leans in and places a kiss on Annie's cheek.\n\n\"Did you get my drink like I asked, darling?\" he asks her.\n\nI repeat the word darling over and over in my head as the cold realization of why Annie is here starts to sink in. Annie doesn't look at him and just slowly shakes her head.\n\n\"I told Uncle Neil that I'd grab him another one as well,\" Ian says, moving over to the drink cart and pouring two bourbons.\n\nOne thing that has never changed about Ian is that he's completely self-absorbed. The fact that he hasn't noticed the intense stare down Annie and I are engaged in is evidence of that. Ian is acting as if nothing is amiss and he's barely even acknowledged me-- despite the fact that we haven't seen each other in years. Not that I expected a real warm welcome from him. I know he'd prefer it if I never came home.\n\nOnce he's poured the drinks, he turns back to us and points to me. \"Annie, this is my older sister Charlotte. Charlotte, this is Annie.\"\n\nI look from my brother to Annie and back again, almost not believing what is unfolding right in front of me.\n\n\"Annie\" I finally manage to get out in a shaky voice, but that's about the only thing I can muster. Her name. I've had some pretty big surprises in my life-- most of them bad-- but seeing Annie here with Ian may top the list and I don't know how to act normal right now. \"Annie,\" I repeat before I can stop myself.\n\nThe room is quiet as the two of us continue to look at each other.\n\n\"My girlfriend,\" Ian adds when the silence just carries on.\n\n\"Girlfriend,\" I repeat in the same shaky voice.\n\n\"Are you just learning English? What's the matter with you?\" Ian asks in an annoyed voice.\n\nHis tone causes me to snap out of my paralysis for a moment and I send him the best big sister glare I can before turning my attention back to Annie.\n\n\"No, I'm not,\" I say more confidently than before. Despite the situation, I'm not going to let Ian get the upper hand. Especially in front of Annie. \"Hi, Annie. Ian's girlfriend. Call me Charlie. All my friends do.\"\n\nAnnie continues to just stare in horror and for a second, I think she might even pass out.\n\n\"What friends?\" Ian says sarcastically, still not noticing the weird tension.\n\nI decide to ignore his immature jab. \"Where did you two meet?\" I ask her.\n\n\"I'm doing some work with Annie's father,\" Ian interjects before walking over to Annie and putting his arm around her. \"He's in property management. Not that you care about any of that.\" Ian then points his drink towards me and looks down at Annie. \"Charlotte is an artist.\"\n\nApparently being gone for four years wasn't enough time to soften my brother or his opinion of me. Ian's comment has nothing to do with my question regarding how they met and everything to do with the disdain he feels for anything that's culturally fulfilling. Ian takes any chance he can to make a jab at me.\n\nBut that isn't really what bothers me about the moment. I'm used to his rude comments about my work. It's his arm around Annie that bothers me, and I feel a wave of jealousy and anger I've never felt before.\n\n\"You're an artist?\" Annie asks me before looking up at Ian. \"You never told me that.\"\n\n\"Why would I?\" he asks in response. \"She must not have been that good. She's just a gallery owner now.\"\n\nAnnie looks at me quickly and I try to ignore the sudden spark I see flash across her eyes. \"You own a gallery?\" she asks.\n\n\"Yes. And Ian's right. I couldn't cut it as an artist. But I have an eye for talent. A very discerning eye.\"\n\nI look right into Annie's eyes when I say it and by the intense look she's returning, I have a feeling she knows I'm talking about the sketch she left me.\n\n\"Careful, darling,\" Ian interjects. \"Or Charlotte will have you throwing your career away to socialize with out of work painters in Brooklyn.\"\n\nAnnie remains quiet as Ian laughs at his own joke. I might have only gotten a handful of hours with her last night, but so far, this isn't the Annie I experienced. This Annie seems shy and reserved and I can't imagine the woman I shared a bed with last night allowing someone like Ian to talk to her the way he is.\n\n\"Dinner is almost ready,\" I suddenly hear from the doorway to the study. When I turn, my Aunt Sandra is standing there, wisps of auburn hair flying about her face as they always do when she spends prolonged time in her kitchen-- one of her favorite activities. \"Oh, hello, Annie. I didn't know you had arrived. You look lovely tonight.\"\n\n\"Thank you, Sandra,\" Annie replies in a voice that sounds as shaky as mine. \"It's nice to see you.\"\n\nMy stomach tightens again at the familiarity between my aunt and Annie. This is starting to feel like some nightmare I can't wake from.\n\n\"Ian, I could use some help with the platters in the top cupboard. Would you mind?\" my aunt asks.\n\nIan looks at me and then Annie and seems hesitant to go, but quickly gives my aunt his fake, charming smile. \"Of course, auntie. See you at the table.\" He leans down and kisses Annie's cheek before moving toward the doorway, and it takes everything in me not to flinch at the display of affection.",
        "Despite the questions rolling through my head, my desire to run out of this room and avoid the entire situation is even stronger. But I can't exactly run out of the study, so I give my aunt a hopeful look.\n\n\"What can I do to help with dinner?\" I ask.\n\n\"Just relax. Come to the table in five minutes. You're the guest tonight,\" she responds with a warm smile, repeating my uncle's words from before. Ian stops in the doorway and gives me a dirty look, but he doesn't say anything to my aunt and leaves, heading in the direction of the kitchen.\n\nThe moment they leave the room, there's a heavy silence and I avoid making eye contact with Annie. I have so many questions for her. So many things I need to know. But I can't bring myself to even look at her. And not because I'm angry-- which I am-- but because Annie's entire presence overwhelms me. And if there's one thing I'm best at, it's running when I'm overwhelmed.\n\n\"We should head to the table. Aunt Sandra has a thing about food getting cold,\" I say, heading to the door without looking at her.\n\n\"Charlie, wait,\" I hear her say before I feel her hand on my arm. The contact stops my movements and I turn to look down at her hand on me. As soon as I do, she drops it as if I burned her. \"You have to let me explain,\" she says next.\n\nI take a small step back. \"So now you want to give me personal details?\" I need to create some space between us. My arm feels on fire from where she touched it and I hate how the rest of my body craves more contact. \"You were pretty tight-lipped last night.\"\n\nAnnie takes a deep breath and glances at the doorway to the study before looking back to me. \"It's complicated.\"\n\nI let out a harsh laugh. \"I can see that, Annie.\"\n\n\"I didn't know I'd see you again.\"\n\n\"I'm terribly sorry for the inconvenience,\" I snap back.\n\n\"That's not what I meant,\" she replies and closes the distance between us so we're inches from each other. As her perfume hits me, I feel an inconvenient wave of longing. \"The moment I left that hotel room I wanted to go back in. I wanted to see you again.\"\n\n\"But you have a boyfriend.\"\n\n\"And you're a Dawson.\"\n\n\"What does that mean?\"\n\n\"It means we both lied last night. Why didn't you tell me that you own the hotel we were in?\"\n\n\"Because I don't. My family does.\"\n\n\"I'm just saying that we both weren't completely honest.\"\n\n\"Maybe that's true. So tell me, what else weren't you honest about? Are you straight, Annie?\"\n\nAnnie doesn't respond. Instead, she takes one tiny step forward so the front of our bodies are touching and looks down at my lips.\n\n\"Did I seem straight to you last night?\" she finally whispers, not moving her eyes off my lips.\n\nMy brain and my body are suddenly at war with each other. Part of me just wants to forget the mess we're in and kiss the lips I've been thinking about nonstop. But the other part of me is screaming at myself to stop and think-- think about what I've just found out about this woman.\n\n\"No,\" I finally say, not able to mask how thick my voice is. \"But you also seemed single.\"\n\n\"Let me see you. Somewhere else. Let me explain.\"\n\n\"Ian is an asshole, Annie. He's never been faithful to any woman in his life.\"\n\n\"Let me see you,\" she repeats, not even acknowledging the last thing I said. \"I need to see you.\"\n\n\"If you're worried I'll tell him, I won't. We don't have that kind of relationship.\"\n\n\"I'm not worried. But I need to explain it.\"\n\n\"Why?\"\n\n\"Because I care about what you think.\"\n\n\"Last night you made it clear you didn't want to see me again.\"\n\n\"I made it clear I couldn't see you again. But now you're here and I feel like I can breathe again.\"\n\nHer words all at once scare me and confuse me. This is my brother's girlfriend. And yet our bodies are pressed against each other in my aunt and uncle's study, and I can do nothing to bring myself to move away from her.\n\n\"You don't owe me an explanation,\" I say.\n\n\"Yes, I do.\"\n\nDespite how close our bodies are, I've managed to avoid looking at her lips. But now that a new silence falls over us, I lose the battle against my own brain and my eyes fixate on her mouth. And just like last night, Annie's lips are the most kissable ones I've ever seen.\n\nAs I continue to stare, her lips part slightly and I see her take in a quick breath.\n\n\"Charlie...,\" she whispers, and I finally look up to her eyes again. Eyes that look heavier than before-- as if she's slightly drunk.\n\nMy entire body feels like it's vibrating. No woman has ever affected me like this. It's visceral. I can feel it all over like a light caress. Maybe in the height of passion I've felt this kind of physical connection to someone, but Annie and I are barely touching.\n\nThe tips of Annie's fingertips graze mine but almost as soon as they do, there's a shout from down the hallway.\n\n\"Charlie! Annie!\" I hear my aunt's voice ring out. \"Dinner is ready!\"\n\nI'm pretty sure Annie isn't a vampire but the speed at which she runs to the other side of the room is impressive. Her obvious fear of being caught provides a fast and quick reminder of the situation we're in-- almost like a cold bucket of water was poured over my head. And I can't believe I was just about to kiss my brother's girlfriend. Again.\n\nNow that we have more space between our bodies, I feel like I can think clearly and all I want is to be back alone in my hotel room. Or even better, in my apartment in LA.\n\nI never thought I'd see Annie again despite how much I wanted to. And now that she's here, so fully entrenched in my world, and yet untouchable, it's as if I can feel my heart physically ache.\n\nIt's obvious I can't function properly when looking at her perfect face, so I start walking to the door to the study without a glance to her.\n\n\"I'll see you at the table,\" I mumble out quickly.\n\n\"Charlie, wait--\" she calls out, but I don't hear anything else she says because I'm out of the room and moving down the hallway as fast as I can.\n\nMaybe it's childish and maybe I should stay and tell her that we can meet up so she can explain. But right now, I can only focus on getting through this dinner without my entire family knowing that in one night, I fell for my brother's girlfriend.\n\nBecause if there's one thing seeing Annie again has made clear, it's that I have absolutely fallen for her.\n\nChapter Seven\n\nEveryone is already at the table when I come into the room, and as they all look up at me, I do my best to school my features. It doesn't matter if it's been four years, my family-- especially Kat-- can read me annoyingly well.\n\n\"Sufficiently drunk?\" Kat asks from the end of the table.\n\n\"Not even close,\" I reply.\n\n\"Leave your sister alone,\" Jake says, standing up from his spot beside Kat. \"She's on vacation. She can drink all she wants.\"\n\nKat lets out a noise that sounds like some kind of a snort. \"Then what's her excuse for the other 344 days of the year?\" she asks.\n\n\"Wow. Fast math,\" I reply quickly. \"You must be a scientist!\"\n\n\"Damn right,\" she says with an exaggerated hair flip.\n\n\"Ignore her and come hug me,\" Jake says to me.\n\nI stick my tongue out at my sister, which she smiles at. Though we like to tease each other, it's vastly different to the way Ian teases me. Kat's humor is wrapped in affection while Ian's is wrapped in disdain and her comments about my drinking didn't really bother me.\n\nI walk over to the table and give Jake a quick hug before taking the empty seat next to him. Despite the roller coaster of emotions I'm feeling about Annie, my sister's fianc\u00e9 is one of the warmest and kindest humans I've ever met and the sight of his face is always a welcome one.\n\n\"It's good to see you, Jake,\" I say. \"I hope my sister hasn't been driving you crazy with wedding stuff.\"\n\n\"No, that would be me,\" my aunt says proudly from across the table.\n\nAs Jake blows my aunt a kiss, Annie walks quietly into the room, pulling my attention to her and sending my body into another frenzy. She stops walking when she gets close to the table and I look to see what she's staring at, effectively making my own stomach drop. There's only one free chair at the table and it's the one next to Ian-- directly across from me.\n\nShe looks at the empty seat and then to me before quickly walking over to sit. She keeps her eyes downcast, and in this moment, she looks so sad and defeated that even though I'm mad and confused still, my heart aches all over again.\n\nBut without her eyes on me, devastating my entire body with their gorgeous aqua color, I'm finally able to look at her and appreciate just how pretty she is. Given the circumstances, that's the last thing I should be doing, but there seems to be something that causes me to lose all control with this woman. Even knowing what I know now, I can't help but be affected by her.\n\nWhen I first saw her at The Runaway, I was convinced there was no woman on earth more beautiful than Annie. And tonight, despite everything, that belief is only solidified.\n\nShe's wearing a similar outfit as she did last night, but tonight, her blouse is a cream color that compliments her skin perfectly. Her long, flowing brown hair is down and it takes everything in me not to picture it sprawled across the pillows of my hotel room.\n\nIan has always dated beautiful women, so I'm not surprised his girlfriend mirrors that trend. But even with his striking angles and dark, full hair, he pales in comparison to Annie, and I just can't see them together as a couple. They just don't fit.\n\nMy attention is pulled away from staring at Annie's face when my uncle clears his throat and raises his glass in a toast. Growing up, my uncle was always the one who opened our family dinners, and it seems things haven't changed much in four years.\n\nWhile my dad and uncle shared many physical traits, in personality, they couldn't have been more different. My dad was a confident, intelligent man, but he was also rather quiet and reserved and never minded letting his brash, younger brother take the reins in social settings.\n\n\"Let's raise our glasses in a toast,\" he starts. \"I honestly can't believe the day has come that we're celebrating one of you three getting married.\" He pauses to give a pointed look to Kat, Ian and me. \"Kat and Jake, many congratulations. I know the next two weeks will be busy, but I hope you can take a step back and remember why you're doing it. Even if your aunt does drive you nuts.\"\n\n\"I'm sitting right here, dear,\" my aunt chimes in.\n\n\"Yes, dear. I know,\" he says with a laugh before looking at his wife with clear adoration in his eyes. My aunt and uncle are never too serious, and they love to tease each other, much in the same way my parents did, but there's no question that their affection runs deep. \"And Charlie,\" he continues, \"What a blessing it is to have you home. Families may not always see eye to eye, but I know your parents would want this-- to see all three of you sharing a meal to celebrate our Kat. So, here's to the Dawson family.\"\n\nUncle Neil is looking at Ian as he finishes his toast, and I can't help but think it's targeted. After all, the rest of the family has never had any trouble \"seeing eye to eye\" as he put it just now.\n\nDuring the entire toast I felt like I was playing a game of chicken with myself to try and not look at Annie. But once he's done talking, I lose the battle and my eyes drift back to her. Only to see that she's staring right at me.\n\nThe look she's giving me is so intense it's as if she's not even trying to hide her feelings. I may be a mess inside, but so far, I think I've done an admirable job at keeping my shit together. It's Annie who's being obvious and if people weren't so busy piling food onto their plates, I'm pretty sure they'd notice something.\n\n\"Potatoes, darling?\" Ian asks Annie, causing her to jump slightly in her seat before she looks over at him quickly.\n\n\"No, thank you,\" she responds in a quiet voice.\n\n\"Women and carbs,\" Ian jokes as he passes the plate of potatoes to my uncle.\n\nMy uncle gives him a long, serious look before taking the bowl of potatoes, successfully wiping away the smug look on Ian's face. Apparently, my uncle doesn't think archaic, sexist humor is as funny as my out-of-touch brother does.\n\nOnce he's put the bowl down, my uncle directs his gaze at Kat and completely ignores Ian.\n\n\"How was the fitting today?\" he asks.\n\n\"It was fabulous,\" Kat replies. \"My dress is a dream. The bridesmaids' dresses are a dream. It's all a dream. Thanks to your wife.\"\n\n\"I only coordinated with the designer,\" my aunt says. \"You came up with the inspiration and you wear it. It's gorgeous, honey. I'm so glad you're happy.\"\n\n\"Maybe now that Charlie has seen it, she'll give me a hint as to how much I'll cry when Kat's walking down the aisle towards me. Sandra won't tell me a thing,\" Jake says, leaning his head towards me.\n\n\"Baby, you are so cute,\" Kat says before I can even reply, pulling him in for a quick kiss.\n\nI make the mistake of looking across the table again and catch Annie's eye. The woman turns red at once and I can only imagine she's thinking about our own kissing, just like I am.\n\n\"You two are disgustingly cute,\" I say, tearing my eyes away from Annie. \"And you will be crying your eyes out when you see her, Jake. But that's all I'm going to say. I may be older, but Kat can still kick my ass.\"\n\n\"You know it,\" Kat says, playfully narrowing her eyes at me. She then turns back to Jake. \"Wait until you see Charlie in her bridesmaids dress. She looks like a model.\"\n\nI can feel myself grow red, which is not normal for me, but I'm painfully aware that Annie's eyes are on me right now.\n\n\"I'm pretty sure Jake's eyes will be glued to you, Kat. He won't notice your sister or any other bridesmaid for that matter,\" I reply.\n\n\"Of course he won't,\" Kat says. \"But there will be plenty of women there whose eyes will be on you and that fabulous dress. You can thank me later for all the numbers you get.\"\n\nI smile at my sister even though my stomach is actively tightening. I don't want some random wedding guest to look at me. I just want one specific woman to look at me. A woman I can't have. When I glance at Annie again, her brow is furrowed, and she looks as happy about Kat's comment as I feel.\n\n\"A dress?\" Ian suddenly asks, giving me a pointed look. \"I figured you'd wear a suit.\"\n\n\"When have you ever seen me in a suit, Ian?\"\n\n\"I just thought that's what your people wore. Apologies for the confusion.\"\n\n\"Ian,\" Aunt Sandra says in the warning tone she's used since we were kids.\n\nThe smarmy smile he's giving me sends a wave of anger through my body. But despite how upset I am about the entire situation, plus his homophobic comment, I choose to take a deep breath and not engage. I know Ian well enough to know that he's doing his best to bait me into a fight.\n\nHe turns his head to our aunt and gives her a much more genuine smile. \"Honest mistake, Aunt Sandra.\"\n\nI turn to Jake, trying to move things back to an amicable place. \"And what will you be doing Saturday night when we all go out for Kat's bachelorette party?\" I ask.\n\nAt this point the wedding seems to be the safest subject for us and will hopefully keep Ian and me from getting into one of our usual dinner time fights. I can tell by the look on my sister's face that she's already starting to feel awkward, and I had promised myself before I got here tonight that I wouldn't let that happen.\n\n\"The Syracuse boys are taking me out on a pub crawl,\" Jake says. \"Kat tells me you're in charge of the plan. Should I be worried?\"\n\n\"That depends. How many private strippers are too many?\" I ask.\n\n\"Zero is too many, I think,\" Jake responds with a laugh.\n\n\"Then yes, you should be worried,\" I tease back.\n\n\"As long as the same goes for you,\" Kat interjects, leaning into Jake and poking him in the ribs. \"Zero seems like the perfect number.\"\n\n\"It's not the same for men and women though,\" Ian interjects. He looks around the table and when everyone just stares at him in silence, he continues. \"I wouldn't allow my fianc\u00e9 to have male strippers--\"\n\n\"What about female ones?\" Kat interrupts and I'm glad I didn't have anything in my mouth because I would have spit it out. Kat is just being Kat, but she has no idea how ironic her joke actually is.\n\nI'm too scared to look at Annie and see her reaction, but I assume my sister's comment wasn't lost on her.\n\n\"Men and women's bachelorette parties should be different,\" Ian continues, ignoring Kat's joke.\n\n\"Maybe in 1954, when you were apparently born,\" I snap back, losing my resolve not to engage with him.\n\n\"Annie, how are you doing?\" my aunt suddenly asks in an obvious way to shut us up.\n\n\"She's better than good,\" Ian says, not even letting Annie speak.\n\n\"And why's that?\" my aunt asks next.\n\n\"She's just been promoted at work. To a Senior Project Manager.\"\n\nIan doesn't even look at Annie as he brags about her and the whole thing reminds me of an owner bragging about his finest racehorse. Not a man talking about his girlfriend.\n\n\"Does Annie get to answer anything herself?\" I ask him.\n\n\"Don't be rude, Charlotte,\" he snarls.\n\n\"Don't be a hypocrite, Ian.\"\n\nIan rolls his eyes at me and then turns his attention back to my aunt. \"She'll be running that department in no time. And probably taking over for her dad at Astor Properties shortly after that.\"\n\n\"Astor? Is that your last name?\" I ask Annie, too curious to stop myself.\n\nShe nods at me but doesn't say anything else.\n\n\"And you work for your father?\" I ask next.\n\n\"Do you want her social security number too?\" Ian asks.\n\n\"That won't be necessary,\" I reply to my brother in as monotone a voice as I can muster.\n\n\"Well, that's very impressive, Annie,\" my aunt says in another attempt to keep the peace. \"Congratulations on the promotion.\"\n\n\"It's not a big deal, my dad owns the company after all,\" Annie says quietly, looking down at her plate.\n\nI don't understand the Annie sitting in front of me compared to the Annie I met last night. The confident, sassy woman I spent the night with seems to be replaced by a subservient shell who sits quietly by her man as he drives the conversation forward.\n\n\"The world is built on nepotism, Annie,\" Ian says, giving her a condescending smile. \"Take advantage of it.\"\n\n\"You would know,\" I say, again not able to hold my tongue.\n\n\"As much fun as this is, will you two please stop?\" my sister suddenly asks from the end of the table. \"Annie will think we weren't raised right.\"\n\nI give Ian one last glare, but Kat is right. This entire trip is about her wedding and I know how much it upsets her when we fight like this.\n\nI take a deep breath and then shoot my sister an apologetic smile down the table. \"Sorry, Kat. We're done.\"\n\n\"Yes. Sorry, Kit Kat,\" Ian says right before he sends another glare my way. He then turns his body to my uncle. \"Anyway, speaking of Astor. The first franchise contract is ready. We just need to meet with the lawyers. I'll need your help with the final presentation to the board.\"\n\n\"I didn't realize we made a final decision on franchising,\" my uncle responds, putting his fork and knife down.\n\nI know my uncle about as well as I know anyone and besides the day of my parents' funeral, I don't remember a time I saw him this tense. But when my aunt puts her hand gently on his arm, my uncle smiles and picks his silverware back up.\n\n\"Right. No work talk at the dinner table. We can talk about it on Monday, Ian,\" he says.\n\nIan looks like he wants to say more but he just gives a tight, fake smile and turns back to his plate.\n\n\"Charlie, anything exciting happening in the art world?\" my uncle asks me.\n\nAnnie, who until this moment was still staring down at her untouched plate, looks up quickly as the question is asked and it's the first time since we sat at the table that I can see the familiar spark back in her eyes.",
        "\"Quite a bit actually,\" I respond. \"The last exhibition we did got us some nice exposure.\"\n\n\"What's your gallery called?\" Annie suddenly asks, surprising me.\n\n\"It's called the Scott Collection. I used to own a gallery here in Manhattan, but I've moved.\"\n\n\"Right. You're only in town for a couple weeks,\" she responds and it's not a question. She's repeating my words from last night.\n\nI set my fork down, not able to think about food when her attention is so focused on me and only me. I have no idea if anyone at the table has noticed the intensity of our short conversation, but I can't bring myself to care when she's finally showing me glimpses of the woman I met last night.\n\n\"Where do you live?\" she asks.\n\nHer voice is steadier than I've heard it all night and I can see some more of her confidence emerge as she keeps her eyes on me. It's as if we're having the first date conversation we should have had last night, just in front of my whole family.\n\n\"LA.\"\n\n\"What kind of artists do you feature in the gallery?\"\n\n\"All kinds. Typically contemporary. I feature a lot of local artists but also some international up-and-comers. My last exhibition featured Luis Ortega.\"\n\n\"Nobody here knows or cares who that is. What about the no work talk at the table rule?\" Ian says.\n\n\"The Mexican sculptor?\" Annie asks, pointedly ignoring him.\n\nI chance a glance at Ian before looking back to Annie and I have to stop myself from smirking at the look of shock on his face. Apparently, the Annie he knows is very different from the Annie I know and I'm guessing she doesn't often ignore her boyfriend.\n\n\"Yes,\" I reply with a smile. \"It was his first west coast showing.\"\n\n\"Wow. He's amazing.\"\n\n\"Have you seen his work?\" I ask, now fully engrossed in Annie and only Annie.\n\n\"No, I wish. But I've seen photos.\"\n\nThere's a tense silence at the table as I look at her. I'm so confused about everything. Part of me just wants to keep this going-- to talk to her about art like two people discovering they have something in common on a first date. But then I glance over and see Ian's bored and annoyed expression and the cold truth sets in again. A truth that only brings about more questions. How is this interesting woman with Ian of all people?\n\n\"The gallery is amazing. It's this beautiful open space. Kat and I got to see it a few months ago,\" Jake says when the awkward silence goes on.\n\nI'm grateful for his ability to move things along since Annie seems to be swimming in as many thoughts as I am. When I look at her again, she gives me an almost pleading look.\n\n\"Thanks, Jake,\" I say, turning my attention to him. \"When does your family get in from Ohio?\"\n\nAs Jake starts to talk about his family, my aunt and Kat begin chiming in on wedding details and I'm relieved that the topic isn't focused on me anymore and back onto the wedding. While I half listen to my sister talk about the seating arrangement, I allow my eyes to drift subtly back to Annie.\n\nI've never believed in anything beyond the physical world. But right now, as I sit across from the person who has consumed my every thought since last night, I have to believe that the universe is against me. For putting her back in front of me like she belongs there. Like we were always supposed to meet again. And yet making her completely forbidden to me.\n\nSince the moment I laid my eyes on Annie, there's been an uncontrollable force pulling me to her. In one short night she became everything. I don't even think I realized how numb I'd become before meeting her. But Annie ignited something in me and for the first time since my parents' death, I feel. And despite what I've found out tonight, I'm desperate to keep feeling it. I'm desperate for more of Annie.\n\nMy daydreams are once again interrupted when I hear Ian tap his empty glass against the table and look at Annie.\n\n\"My drink is low, darling.\"\n\nI can't help the scoffing noise that comes out of my mouth at what he's implying. And when Annie reaches over, takes his glass, and begins to rise out of her seat, the last of my control flies out of the room.\n\n\"Is that how you let him treat you?\" I ask, causing both Annie and Ian to snap their eyes at me. But while Annie stands there looking shocked, Ian looks defensive.\n\n\"Asks the relationship expert,\" he says. \"Didn't your girlfriend leave you?\"\n\n\"Ian. Stop,\" Annie responds, not looking at him.\n\nIan looks up at her in surprise and it again seems as if he's not used to push back from his girlfriend. \"It's just banter, Annie,\" he says, giving me a challenging look.\n\nI know I can't stay at this table and not give myself away at this point. Ian has always had a special talent for getting me to my breaking point, and with Annie's presence by his side, that ability is exaggerated. The only thing I can think to do now is what I should have done from the moment I saw Annie standing in the doorway of my uncle's study.\n\n\"Aunt Sandra,\" I say, pushing my plate in front of me and standing up. \"The food was amazing as always. But I'm still jet lagged. I haven't slept much since getting to New York. So, I'm going to head out.\"\n\n\"But we haven't even had the pie yet,\" she says, standing up from her seat.\n\n\"Save me a piece?\" I ask. \"I'll be at Kat's tomorrow for the--.\" My mind goes blank as I try to remember what random wedding task my sister told me we're tackling tomorrow.\n\n\"Gift bags,\" my sister chimes in.\n\n\"Right. The gift bags,\" I repeat, actually having no clue what she means by gift bags.\n\nIn attempting to avoid Annie's gaze, my eyes fall to my uncle, and I immediately regret it when I see the disappointment on his face. I know he thinks I run any time things get hard-- but he also doesn't know exactly how hard tonight really is.\n\nMy sister gets up from her seat and comes over to where I'm standing. \"You don't have to go,\" she whispers in my ear as she pulls me into a hug.\n\n\"I'll see you tomorrow,\" I reply, giving her a quick kiss on the cheek.\n\nAnnie hasn't left the room yet and is just standing there holding Ian's drink like she doesn't know what to do. When my eyes reach her, she looks like she wants to say something, which would be bad with my entire family staring at us.\n\n\"It was nice to meet you, Annie,\" I say to her. \"Maybe I'll see you again sometime.\"\n\nShe gives me a small nod and I wish I could read her better. Because there are so many emotions flitting across her features, but I don't know if it's because of what I said to her or if she's upset I'm leaving, or both.\n\nWith one more look I turn around and leave the room. Once I'm out of the house, I take a deep breath of the cool night air and head down the street, deciding that I'll walk to my hotel instead of catching a cab like I had planned. I could use the air to think.\n\nBut with every step that takes me further from my aunt and uncle's house, I feel worse. For leaving Kat there like that. For fighting with Ian when I promised myself I wouldn't. But mainly-- for going to The Runaway last night. If I hadn't gone, I would have just met Annie as my brother's girlfriend. I would have never known what it felt like to kiss her and hold her and fuck her.\n\nBut now I do and as childish as it may have been to leave like that, I also couldn't be in that room any longer. Not without giving myself completely away. So I did what my uncle would say I do best-- I ran.\n\nNow I just need to figure out how to get through the next two weeks so I can get back to my safe haven in LA where I might feel numb most of the time, but at least I don't feel this. And the only way to do that is to avoid Annie Astor.\n\nChapter Eight\n\n\"And why don't you have a wedding planner?\"\n\nI throw down the infuriating ribbon I'm supposed to be tying around a gift bag. I've been working on the same one for ten minutes now and I've lost my patience with the whole project.\n\n\"I do,\" my sister responds from next to me on the floor where she's putting her own stack of gift bags together. \"But I'm handling the gift bags myself. They need a personal touch.\"\n\nI roll my eyes at her predictable answer. Everything in Kat's life needs \"a personal touch.\" When she was a kid, she would make the most elaborate cards for kids in her class. And not just on Valentine's Day. All year long. She gets her big heart from our mom and it's one of the things I love most about her. But after two hours of sitting in her living room, putting bags together, I'm not finding it so endearing.\n\n\"I thought the bride and groom were the ones who got gifts,\" I say next. \"Why are you giving gifts to people?\"\n\n\"It's perfectly normal and considerate to give gifts to the guests, but especially the wedding party,\" my aunt chimes in from the couch she's sitting on.\n\n\"Fine, but how is it personal if I'm the one putting them together? Shouldn't you be putting your touch on all of them?\" I direct to Kat.\n\n\"Stop complaining, Charlie. This isn't exactly hard labor,\" my aunt chides.\n\n\"Besides, one Dawson is the same as the next. Your touch is as good as mine,\" Kat says cheerily, humming under her breath like this is the most fun activity in the world.\n\n\"Does that mean I can marry Jake?\" I ask, throwing a ribbon at her.\n\n\"Do you want to marry Jake?\" she asks, throwing it back.\n\n\"I love your fianc\u00e9, but no.\"\n\n\"Good. He's taken.\"\n\n\"Anyway, one Dawson is not the same as the next,\" I say. \"If I'm anything like Ian, I quit life.\"\n\nI watch as my sister gives my aunt a significant look, but she doesn't say anything about my comment. I'm sure she's doing her best not to relive last night and the disaster that was our family dinner.\n\n\"Well, why can't I have Holly's job?\" I ask. \"She's just looking at her laptop.\"\n\n\"I'm not just looking at my laptop,\" Holly scoffs from next to my aunt on the couch. \"I'm working on the very delicate challenge of keeping Jake's conservative family away from our crazy, liberal family.\"\n\nI almost tell her to just seat them at Ian's table, but I know my sister has had enough of the Ian drama, so I bite my tongue as I look at my cousin.\n\n\"We gave you the easy task,\" Holly says. \"You're literally putting things into a bag and tying them.\"\n\n\"You try to work with these ribbons!\" I say exasperatedly as I wave one around in front of me. \"I don't think lesbians were made to work with ribbons.\"\n\n\"I sleep with women too and I seem just fine with ribbons,\" Holly argues, not even looking up from her laptop.\n\n\"You also sleep with men, so I don't think you have a say in this,\" I argue back.\n\n\"Ignoring your casual biphobia, I have full faith that you can manage those bags. I really do.\"\n\n\"And that means the world to me,\" I deadpan back.\n\nHolly looks up from her laptop and gives me an exaggerated wink. Right now, she looks so much like her mom that if any stranger came into the room, they'd be able to spot the resemblance immediately. They both share the same vibrant red hair that seems to have curls for days and deep green eyes. Holly is much taller than my aunt, which she gets from my uncle, but they've always looked more like sisters than mom and daughter.\n\n\"Or you could switch jobs with me,\" my aunt says as she stands up from the couch. \"I'll handle the gift bags and you go pick up Jake's mom and dad from the airport.\"\n\nI scrunch up my nose at her comment. From what Jake has told me, his parents are nice enough, but nothing like him and probably wouldn't be the most accepting of someone like me. He once told me that before he sees them, he jots down topics into his phone he can bring up so when the conversation eventually stalls, he'd have something to talk about. Thinking about being in a car with that all the way from JFK airport to the city doesn't sound appealing at all.\n\n\"But I'm having so much fun with the bags, Aunt Sandra. Please don't take them away from me. They're all I have\" I joke from my seat on the floor, eliciting a sigh and a tired smile from her.\n\n\"Hmm. That's what I thought,\" my aunt says before leaning down to place a kiss on Holly's head. \"I'll see you three later. I'm going to take them to the hotel and then Neil and I will have dinner with them.\"\n\nMy aunt moves around the room and gives both Kat and me a kiss on the head as well. When I'm in LA, my aunt texts me almost daily-- she's always been more like a mom to me than an aunt. But it feels different being back in her presence again. I forgot how wonderful she is to us all. And since being home, I can see how much she's supported Kat and I'm so grateful for it. She treats us just like we're her own kids.\n\n\"And don't forget we're all having brunch tomorrow at the hotel,\" my aunt says as she walks to the entrance of the living room. \"Eleven o'clock. Charlie, you only need to walk downstairs from your room, so I expect you won't be late.\"\n\n\"Or drunk,\" Kat jokes, earning a glare from me.\n\n\"At eleven o'clock?\" my aunt asks. \"Yes, I suppose you should come sober as well. But that's up to you. Just be on time.\"\n\n\"You know I'm the oldest of all of the offspring, right?\" I ask, trying to sound offended.\n\n\"I do know that, honey,\" my aunt replies sweetly.\n\n\"And you know that it's Kat and not me who's always late?\"\n\n\"Not with Jake's mom,\" Kat chimes in. \"She scares me.\"\n\n\"She shouldn't,\" my aunt responds quickly. \"Her son is lucky to have found a woman as amazing as you.\"\n\n\"Thanks, Aunt Sandra,\" my sister says, smiling up from the floor. \"You're the best.\"\n\n\"I just love you all. And I'll see you tomorrow. Charlie, you're not leaving this apartment until those bags are done,\" my aunt says sternly, pointing down to the mess of bags in front of me.\n\n\"Oh, so Kat gets the sweet comment and I just get lectured?\" I tease.\n\n\"She's the bride. Get married and I'll be nicer.\"\n\nMy aunt sends me one last smile before walking out of the room. I know her comment was a joke, but my entire stomach is now in knots. Mentioning my non-existent wedding only makes me think about the thing I've been trying to avoid in my mind all morning-- Annie. And now all I can think about is what she would look like in a white dress.\n\nI give myself an internal shake and pick up the last bag I was working on. Thinking about marrying Annie is pointless and will only make my heart hurt even more than it already does.\n\n\"Now that she's gone, can we pull out the mimosas and you guys can tell me about last night's drama?\" Holly asks, getting up and leaving the room before we can even answer.\n\nKat gives me the same significant look she gave my aunt earlier but doesn't say anything as she picks up one of the gift bags I'm working on and begins tying a ribbon. A few minutes later Holly is carrying a tray back into the room with three drinks on it. She brings two of them over and hands them to us.\n\nHolly sits back down on the couch, takes a long sip of her mimosa and gives me the look she's been giving me since we were kids. The look that tells me I'm about to be grilled.\n\n\"Now spill. What happened last night?\" she asks.\n\nWith my aunt's throwaway comment about getting married, plus the fact that talking about last night only makes me ache for Annie, I can't even think about putting something in my stomach, so I set the glass down on the coffee table in front of me and let out a sigh.\n\n\"Just a normal Dawson dinner, Holls. Nothing to report. Just Ian being Ian.\"\n\nThe fact that I'm intently working on one of the gift bags should have told her everything. But I also know Holly well enough to know she isn't going to let things go that easily.\n\n\"Mom said it was worse than normal,\" she says next.\n\nI just shrug and continue working on the bag.\n\n\"I know it's been years since you've seen him, but you did seem even more agitated than you usually do,\" Kat adds tentatively. \"Before dinner even started you did. Did he say something to you?\"\n\nI can tell I'm not going to get out of this so I decide to answer vaguely before moving the conversation along. \"You heard him. He was just being an asshole. A particularly annoying asshole. I don't want to talk about him anymore. Let's talk about the bachelorette party.\"\n\n\"You must really not want to talk about him if you'd rather talk about wedding planning, but fine,\" Holly says.\n\nShe's always been like my uncle--direct and to the point and I'm honestly surprised she's letting the whole thing go so easily.\n\n\"The bachelorette party is hardly 'wedding planning',\" I argue. \"It's a party. I'm good at parties.\"\n\n\"Which is why you've helped plan so much of it?\" Holly rolls her eyes before taking another sip and I can already tell we're heading to an early afternoon of tipsy Holly Dawson.\n\n\"Why would I stop you from doing what you do best? You're a planner. I'm a socializer. My job comes later,\" I argue.\n\n\"And it sounds like Kat has someone for you to socialize with,\" Holly says, raising her eyebrows suggestively.\n\n\"Kat, I've already told you not to set me up.\"\n\nKat shrugs innocently and continues working on the gift bags. \"She's already invited. What are you going to do, ignore her the whole night?\"\n\nIt was one thing when Kat mentioned this woman when we went to coffee yesterday. That was a simpler time. When all I was dealing with was being back in a city that haunts me. Now I also have to deal with the emotional disarray Annie has caused in my life. I can't wrap my head around hitting on some technician that works with my sister.\n\n\"Who else is coming?\" I ask, desperate for this not to turn into some gossip session about my love life-- as things are prone to do with Holly and Kat around.\n\n\"Well, the gorgeous Lilly from work who you're apparently going to ignore all night,\" Kat says. \"And the three of us, obviously. Then Lena and Juliet who you know. And a few women from my book club who I've gotten close to. Am I forgetting anyone?\" she asks Holly.\n\n\"Just Annie.\"\n\nI should probably get used to that name casually coming out of the mouth of one of my family members, but hearing it still causes my heart to accelerate to what I imagine is an unhealthy rate. Just like the first time I saw Annie, I went from relatively calm to feeling like I can feel my pulse in every part of my body.\n\nIt's as if there is no topic or even thought that doesn't eventually go back to Annie now. My entire life will forever be pre-Annie and post-Annie.\n\n\"What do you mean Annie is coming?\" I ask a little too loudly.\n\n\"I invited her,\" Kat says simply, apparently not noticing the wild emotions coursing through me.\n\nI take a subtle breath and try to control the intensity in my voice. \"Why would you invite her?\"\n\n\"Don't judge her just because she's with Ian,\" Kat replies. \"Poor girl. I feel bad for her. She seems to have no idea what Ian gets up to.\"\n\nMy hand tightens on the gift bag I'm holding. \"You think he's up to something?\"\n\n\"It's Ian,\" Holly chimes in. \"If he's being faithful to that girl, I'll name my first daughter Ian.\"\n\n\"You'd have to go out with someone for more than two dates if you want kids,\" Kat jokes.\n\n\"Plenty of people have children without having a partner,\" Holly responds.\n\n\"True,\" Kat replies. \"And then you wouldn't have to negotiate with them on naming your daughter Ian.\"\n\n\"He doesn't deserve that honor anyway,\" Holly says, getting up from the couch and leaving the room.\n\nShe's back soon after with an opened bottle of champagne and refills her glass. Apparently, the pretense of orange juice isn't needed anymore for my cousin.\n\n\"I think Ian likes the idea of Annie's family.\" Kat's so blas\u00e9 in how she says Annie. She has no idea how just the name affects me-- as if it flows through my body like an electric current. \"To him, it's the perfect match. You know-- a big real estate family merges with a big hotel family. Plus, you can't deny that they look good together. Like the east coast Barbie and Ken.\"",
        "\"But with an actual penis and vagina,\" Holly offers next. \"Those dolls are anatomically confusing.\"\n\nKat makes a fake sick noise. \"Gross, I don't want to think about my twin's penis.\"\n\n\"I wouldn't mind thinking about Annie though,\" Holly says playfully before finishing off her mimosa.\n\nMy hands pause on the bag I was tying and I have to put all my energy into looking ahead and not reacting to her words-- something that is becoming increasingly difficult by the minute. Holly's comment was flippant and I'm not even with Annie. Why should I care if Holly thinks she's hot? She is hot.\n\n\"Why are you being so serious?\" Kat asks me when I don't contribute anything to their banter. \"Who cares who Ian's dating?\"\n\n\"I don't care,\" I say way too defensively. \"I just thought it was weird you invited her.\"\n\n\"Look, this is probably the girl he's going to marry. We may as well get to know her,\" Kat responds.\n\nI'm glad Kat's attention is on the bag in front of her because her words feel like they flew out of her mouth and straight into my gut. Annie marrying Ian? I can't think of anything I'd rather do less than attend a wedding between those two.\n\nBefore coming back to New York, I knew it would be hard. I had hoped there would be moments like I had last night in my uncle's study-- before Annie came in and changed everything-- when I would feel a sense of calm about being back. And for a moment, I actually did.\n\nIt was inevitable that being back would pull things out of me that only this city can. What I could never have predicted was experiencing an entirely different kind of heartache. The kind only a woman can induce. Actually, the kind only Annie could induce.\n\nEven after Jen left, I never felt this discombobulated. And I knew her for six years. I've known Annie for three days. But as I sit here with these damn ribbons surrounding me, I'm having to hold back tears.\n\nAfter minutes of silence goes on with me sitting and staring and Kat continuing to work, Holly clears her throat loudly. \"Well, I think it's very sweet you invited her,\" she says. She puts her laptop down and claps her hands together. \"But that's not really the important thing we need to discuss. What are you guys wearing tomorrow?\"\n\nI feel an instant sense of relief as the topic moves along. \"Are we supposed to be dressing up?\" I ask. \"I had planned on skinny jeans.\"\n\n\"You're not wearing skinny jeans to your sister's bachelorette party,\" Holly says.\n\n\"Why? It's not like it's the actual wedding.\"\n\n\"I'm just happy you'll be there,\" Kat says to me. \"Wear whatever you want.\"\n\nShe sends a warm smile my way and she again reminds me of our mom. She's just so uninhibited with her love for people and in New York and even LA, that's a rare quality.\n\n\"If you want me here so much, can we do something more fun than these stupid gift bags?\" I ask hopefully.\n\n\"Oh god, move aside,\" Holly says, coming over to sit next me on the floor. \"You pour the drinks and I'll bag. That way my mom won't yell at us and we can get drunk faster.\"\n\n\"How about Holly finishes the bags, Charlie pours the drinks, and I show you my outfit options for tonight?\"\n\nKat doesn't wait for a response and skips out of the room towards her bedroom.\n\n\"I think you Dawson sisters just manipulated me into doing all the work,\" Holly says as we both watch Kat leave.\n\n\"But you're so good at it, Holls. I've never seen anyone master ribbons like you. Your students must be in awe.\"\n\n\"Yes, Charlie, my fifth graders just can't believe their teacher can tie things,\" she responds sarcastically.\n\n\"I see rhythmic gymnastics in your future.\"\n\n\"Just pour the champagne, asshole.\"\n\nChapter Nine\n\nThe first thing I feel this morning is the pounding in my head. As if some tiny little person is in my brain just hitting against it with a hammer over and over again.\n\nI keep my eyes closed as I let the events of the previous night come to the forefront of my memory. I should have known that mimosas with Holly wouldn't end with just mimosas. The last thing I remember is my cousin doing a solo karaoke show after we both took shots of alcohol that should never be mixed.\n\nI vaguely remember her leaving my hotel room at three o'clock in the morning and I'm pretty sure I could hear her singing in the hallway as she left. I should text her to make sure she got home okay but I can't seem to open my eyes, let alone grab my phone.\n\nKat was the smart one and left before midnight, claiming that she hates karaoke and wanted to save her energy for the bachelorette party tonight. Now that I'm on the other side of that decision, I can see her points. On both karaoke and getting drunk the night before her party. But mainly the karaoke, which was atrocious.\n\nWhen the pounding against my skull gets unrealistically loud, I lift my body slightly and realize that while my head does hurt, the pounding I hear isn't a pounding at all. It's a light knock on my hotel room door.\n\nI force my eyes open so I can look at the clock on my bedside table and that's all I need to get my body moving. I have a feeling I know exactly who's on the other side of that door. Aunt Sandra was very clear on her stance on being late this morning and it's already ten minutes past eleven.\n\nLuckily, I passed out in all my clothes last night and I'm not naked like I usually am in the morning. I run to the door and don't even bother to check who it is, assuming it's someone from my family, ready to lecture me on punctuality.\n\nBut it's not my aunt standing on the other side of the door. And maybe one day I won't feel complete shock every time I see this face in front of me, but today is not that day.\n\n\"I woke you,\" Annie says, looking fresh faced and beautiful in a simple pair of blue jeans and a black v-neck t-shirt. \"Charlie?\" she asks when I continue to look up and down her body.\n\nI quickly bring my eyes up to hers, which doesn't help matters. In fact, looking at her face makes it even harder to process the fact that Annie is standing here-- especially when my hangover is starting to settle in.\n\n\"I meant to set my alarm,\" I respond.\n\n\"No, it's my fault. I thought coming in the morning was the best way to catch you. I didn't have your number. But now I can see how that was a bad idea. It's Saturday. You probably went out last night.\"\n\n\"My cousin and I...we...had a late night.\"\n\nShe gives me a small smile. \"Cute morning voice. Can I come in?\"\n\n\"That would be good. Considering my whole family is downstairs.\"\n\n\"What?\" she asks, the smile dropping from her face.\n\nI pull open the door so she can step in, which she doesn't hesitate to do-- in fact she moves about as fast as she did at my uncle's house when we were called for dinner.\n\nI close the door and move further into the room. When I turn around, she's standing just inside the door, looking around the space. We both stand there silently for what feels like a full minute and as her eyes continue to look around, I can't help but wonder if she's thinking about the last time she was here.\n\nI never thought I'd see Annie again after she walked out of this room and having her back here suddenly feels surreal.\n\n\"Why is your family here?\" she asks when the silence just goes on.\n\n\"Jake's family flew in yesterday so we're doing a family brunch.\"\n\n\"Shit. I'm sorry. I didn't know.\"\n\n\"That's because Ian doesn't come to most family things.\"\n\n\"And you do?\"\n\n\"Why are you here, Annie?\"\n\n\"I told you that I wanted to talk to you. I thought it would be better to do it before your sister's bachelorette party tonight.\"\n\n\"As you can see, now is not a good time.\"\n\n\"Because you're late to family brunch or because your hair is sticking up like Alfalfa?\"\n\nAnnie's smirking at me and her confident, casual behavior reminds me of the Annie I met on our first night. The one who stood in that exact spot and took control of me.\n\n\"Nice to see the docile version of you that I met at dinner was only temporary,\" I reply, attempting to smooth out my hair as I do.\n\nAnnie takes a few steps closer to me. \"The real me hasn't gone anywhere. You know exactly who I am.\"\n\n\"No, Annie. I don't know you at all actually. I need a minute.\"\n\nI force myself to move out of her space and into the bathroom, trying to ignore the hurt look on her face. If I don't get downstairs soon, my aunt will be up here or she'll send someone else to do her bidding. But more than that, I feel like I've been on an emotional roller coaster with Annie, and I don't know what to make of her Jekyll and Hyde act.\n\nI do my best to tame my wild hair since I don't have time for an actual shower and quickly brush my teeth before walking back into the hotel room. Annie is sitting on the edge of the bed but when she sees me, she stands up quickly.\n\n\"Better?\" I ask, pointing to my hair when I'm back near the bed.\n\n\"Even with bed hair you look beautiful. You always look beautiful.\"\n\nI've never been affected by a woman calling me pretty like I am when Annie does, but I can feel my whole body warm so I turn around to the closet so she can't see my red face.\n\n\"You can't say things like that to me, Annie.\"\n\n\"Why not?\"\n\n\"Because you're with my brother.\"\n\n\"And you won't let me explain that.\"\n\nI blindly grab a pair of pants and a t-shirt that I'm sure Jake's mom won't think is dressy enough, but I'm too distracted to care. I consider it a win that I'm not going down in yesterday's clothes.\n\n\"Are you going to explain at what point you're going to be breaking up with him?\" I ask when I turn back around.\n\nAnnie takes a step forward, but the bed is now between us, and she can't go far. \"No. I mean, not yet. I want to. Soon. But it's complicated with my family.\"\n\n\"Will you turn around?\" I ask.\n\nAnnie looks confused so I point down to the fresh clothes I had set down on the bed. When she seems to realize my meaning, she lifts one eyebrow and gives me the same smirk from before.\n\n\"You weren't this shy on Wednesday,\" she says.\n\n\"I wasn't that aware on Wednesday,\" I snap back.\n\nThe playful smirk quickly falls from her face, and she turns around. Part of me wishes I could forget everything and engage in the flirty banter Annie seems to fall into so easily. But I can't just flirt with her. Not now that I know she's with Ian. And not because I owe him anything. But because I can feel myself falling for Annie every time I see her and that can't happen.\n\nAnnie stays quiet as I put on my shirt. \"What family things?\" I ask to her back.\n\nI can hear her inhale audibly before answering. \"My dad owns a property investment company that's now in deep with Ian to franchise out the Dawson Hotels. My family's company needs this deal.\"\n\nI think about what she just said as I button my pants. I vaguely remember something about that deal coming up at dinner and the way my uncle reacted to it. But I didn't think much of it and coming back to New York was one thing-- I can't get back involved with the company. What Ian does with it is Ian's business.\n\n\"So you're using my brother to help your family business?\" I ask.\n\nAnnie whips around, not caring if I'm dressed or not, which at this point, I am.\n\n\"No more than Ian's using me.\"\n\n\"But that's who Ian is. Is that who you are, Annie? Does your dad even know you like women?\"\n\nOf all the things I've said or asked, or of all the ways I've snapped at her in the past two days, nothing has made Annie's face fall quite like my last question and instantly, I can see her eyes fill with tears.\n\n\"There's more to it,\" she whispers.\n\nBefore I can ask what she means, the hotel phone on my bedside table is ringing out, making me jump.\n\nIf I don't answer, whoever is calling is just going to come up to my room, so I walk over to the table and pick up the phone.\n\nAs soon as I do, I hear Kat's voice speaking loudly on the other end. \"I was late but you're even later. Get your butt down here before Aunt Sandra comes up and drags you down.\"\n\nMy eyes don't leave Annie as my sister talks. She's looking up at the ceiling and it seems as if she's trying to keep her tears from falling.\n\n\"I'm coming now,\" I say into the receiver. \"Cool your jets.\"\n\n\"They're cool. Freezing in fact. It's our darling auntie whose panties are in a bunch.\" Kat suddenly drops her voice and is whispering. \"I think Jake's parents stress her out. Not to mention me. Get down here. Please.\"\n\n\"Okay, okay. I'm coming. Is Holly there?\"\n\nI hear Kat laugh. \"The shell of Holly is here. But that's about it. How much did you guys drink last night?\"\n\n\"I don't want to talk about it.\"\n\n\"Fine. Just get downstairs. I'll order you a water with a side of water.\"\n\n\"You're a gem. See you soon.\"\n\nI hang up the phone and there's a heavy silence in the room before Annie begins to move towards the door.\n\n\"You have to go. I shouldn't have come. I'm sorry. That was stupid,\" she says.\n\n\"Annie.\" She stops her movements to the door but doesn't turn around. \"Let's just talk later tonight.\"\n\n\"At your sister's bachelorette party?\" she asks, turning around with her eyebrow raised.\n\n\"Right. Maybe not the best place. Tomorrow then. We can find somewhere...safer than here.\"\n\n\"I know where we can go,\" she says, and I hate how the hopeful look on her face makes my body feel all kinds of things it shouldn't be feeling.\n\n\"I guess I'll see you tonight then.\"\n\nThe hopeful look is gone as Annie begins to chew her lip-- an act that doesn't help the things I'm feeling. Because now I'm staring at her lips and wishing they were on mine.\n\n\"I don't have to go tonight,\" she says.\n\nI pause, not knowing what to do with the sudden out she's given me. Partly why I got so drunk last night was that it was easier than focusing on the prospect of spending Kat's entire bachelorette party with Annie. Now Annie is offering a way out of that situation and yet I don't want to take it. Because this woman is like a drug, and I want more even when I know it will hurt me.\n\n\"Kat wants you there,\" I say. \"Don't cancel on her.\"\n\n\"And you? Do you want me there, Charlie?\"\n\n\"Yes, but I shouldn't.\"\n\n\"Why?\"\n\n\"You know why.\"\n\n\"And if I wasn't with Ian?\"\n\n\"Is this something you do often?\" I ask, ignoring her own question.\n\nI know I need to leave but there are questions I can't wait to ask-- questions I didn't get to ask at my aunt and uncle's house.\n\n\"What do you mean?\" she responds.\n\n\"I have a feeling you weren't lost when you found yourself in The Runaway. And you certainly knew what to do with a woman once we got back here.\"\n\nAnnie looks hurt for a moment before her features harden. \"No. It's not something I do often. I haven't even been with a woman since college. But I could say the same thing about you. You seemed fairly comfortable in the bar.\"\n\n\"Yes, but I'm single. You're not.\"\n\n\"I know, Charlie,\" she suddenly says in a loud voice. She puts her hands through her hair as if she's exasperated by the entire conversation. When she speaks again, her voice is quiet and she sounds broken. \"I know I'm not. I just wanted to pretend for a night, okay? I just wanted to be in a lesbian bar and think about what I could have but am too scared to have. I didn't plan any of this. I didn't plan to meet anyone that night.\"\n\n\"Then why did you? You started talking to me. Not the other way around.\"\n\nMaybe I'm not good at reading her expressions, but Annie seems to be looking at me like I'm the most irritating thing she's ever seen. Before she can say whatever it is she clearly wants to say, the hotel phone rings again.\n\n\"Nothing good will come of answering that. But I do have to go.\" My legs don't want to move, but I force them forward so I'm walking towards the door. When I get next to Annie, I stop. \"I'll see you tonight?\"\n\nAnnie gives me a long look and the intensity of her light eyes has the effect they always have on me. I know I should be running downstairs considering how late I am, but she has me rooted to the spot. I'm not sure I'll ever be able to leave Annie when she's looking into my eyes.\n\n\"I talked to you because I've never seen someone I've been so instantly attracted to,\" she says quietly, keeping her steady gaze on me. \"Not dating women hasn't always been easy for me. But I've managed because it made things easier at home. That was until I saw you and all that carefully constructed control came crashing down.\" I feel her hand touch my own and I allow our fingers to lace together. \"I came back here with you because I've never wanted anyone more and I had to have you. I had to taste you. But I left in the morning because I'm also scared of losing my family.\"\n\nI was so engrossed in what she was saying that I didn't even notice her body moving slowly into my own until my back hits the door behind me. This is the Annie I met on our first night together. Confident, sultry, and intoxicating.\n\n\"And now?\" I whisper.\n\n\"And now I feel right back at the start. Staring at something I desperately want but I know I shouldn't have.\"\n\n\"And what will you do about it this time?\" I ask. I know exactly what my question will incite, but I've lost the power to stop the inevitable.\n\nAnnie unlaces our fingers and grazes that same hand up my arm until it's resting behind my neck. Our faces are so close together that I can feel her breath and my eyes are fixated on her parted lips.\n\n\"I'm powerless against you,\" she says, leaning in and placing a small, torturous kiss against my lips.\n\nEven that small touch sends my brain into overdrive and the only thing I can process is the need to feel her lips again.\n\nAnnie must feel the same, because before I can make a decision on whether to kiss her again, her lips are back on mine and this time the kiss is not small.\n\nI don't even have to try to push rational thoughts aside as we begin to kiss. Every single one of them flies out of my head as my body is pushed up against the door and I feel Annie's hands in my hair.\n\nI know we don't have long, but all I've been able to think about since Wednesday is kissing her and I have a desperate need to feel my tongue slide against hers again. Annie seems to have the same need because she pushes my mouth open with her own and doesn't even hesitate to push her tongue inside.\n\nWe both moan at the sensation of our tongues moving together and right now I might give up anything to be allowed to keep kissing Annie. Family brunch seems futile now.\n\nShe explores my mouth just like she did on our first night and now I know why she seemed so thorough-- so desperate to feel and taste me. For a woman who really seems to enjoy being with a woman, not being with one since college must have been torture.\n\nShe brings her tongue out, slides it across my lips and then flicks it against the end of mine. The act feels so sexy and erotic and I love how much control she takes. I bring my hands up from her hips and lace them through the silky hair I dream about grabbing, eliciting a deep moan from Annie.\n\nI'm at the point of being ready to rip her clothes off and disconnect the hotel phone from the wall for the rest of the morning. But before I can make all kinds of bad decisions, Annie gently pushes off me and takes a small step back.\n\nShe wipes her thumb against my lips and does her best to straighten my wild hair that probably looks about as good as it did when I woke. \"Have a good brunch,\" she says with a small smile. \"I'll see you tonight. Maybe go downstairs before me. Just in case.\"\n\nShe walks confidently over to the door, opens it, and tilts her head to the entrance. I have no idea how she seems so cool and collected when I feel like I'm on fire, but the last thing I need is my aunt or sister seeing Annie standing there holding the door, so I give her a small nod and walk through it on incredibly wobbly legs.\n\nI'm shaking as I walk into the elevator and I'm thankful nobody else is in there so I can lean against the wall and breathe deeply. Hopefully my family will think I'm just flustered from being late and rushing and not because I was recently pushed up against a door by Ian's girlfriend.",
        "I close my eyes and sink down to the floor of the elevator. My legs have finally given out and I don't know what else to do with myself in this state.\n\n\"Fuck,\" I say out loud. \"I am so fucked.\""
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "lesbian",
        "romance",
        "lesbian drama",
        "lesbian sex",
        "lgbt",
        "girl on girl",
        "queer"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/a-certain-tension-ch-05-09"
}