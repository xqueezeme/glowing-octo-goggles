{
    "title": "Exposure Compensation Factor Ch. 02",
    "pages": [
        "Part two of this one. \n\nPlease let me know your thoughts, and cast your votes when you're done. \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\"Why didn't you tell me? Didi asked. She wasn't mad, just curious, or so her smile told me. \n\n\"Well, to be honest, I didn't know, at first anyway. Until we got to your room, and you told me what you were in town for, I had no idea,\" I answered. \"Then, I was distracted by your portfolio, and later your lips, your body, your...well, you were there.\" \n\n\"Yes. I sure was. I'm still buzzing,\" she grinned. \"I hope I can keep my hands off you while we're working, here. You know...professional detachment and all that crap.\"\n\n\"So you're not mad?\" I asked, seeking confirmation of my initial impression. \n\n\"No,\" she giggled. \"If you had told me, I probably wouldn't have...I mean, you know, I might have been reluctant to...shit,\" she lowered her voice, \"...I had a great time in bed. Thank you. I assume you read my note?\" \n\n\"Yes, I did. I'd love to have that conversation later. For now, we need to get to work. Shall we, Miss Hendricks?\" \n\n\"Of course, Mister Winslow,\" she whispered. \n\nThere were two sets already in place around the pool. Not 'sets', as in 'look at the set on her', although there were plenty of those in evidence. The client had hired a cornucopia of talent. Blondes, brunettes and redheads, tall, short, and in between, they were all milling about on the deck, looking fabulous. \n\nDidi was looking exceptionally fabulous. She had chosen an electric blue bikini, that barely contained her big boobs, showing off the deep cleavage between her globes. The bottom was a thong, which showed off her other globes as well. She was radiant. \n\nThis isn't your usual job, unless you work around a dozen or so nearly naked women on a regular basis. We didn't punch in on a time clock, and start exactly at nine. For us, the light dictated things. We tried to stay away from the harsh, glaring sun of midday, preferring the softer, angled light of morning and late afternoon. Since this was the first day of four, we got a late start, but from here on, we'd be at it earlier, moving inside during the noon glare, then coming back out in the later afternoon.  \n\nHoping to get something done before the light became too intense, I stepped over to my set. Didi was talking to another model nearby. \n\n\"Miss Hendricks?\" I called. \"If you would, please?\" I gestured to the set ; a lounge, next to a palm tree. My assistants grabbed their soft reflectors, and readied for action. \n\n\"Please, call me Didi,\" she smiled, hustling over as requested. Toody was for private use only. \n\n\"Very good, Didi. Let's start standing, by the lounge, please. And don't forget...it's a glorious day in the sun, and you're having fun, so show me that smile.\" I picked up my camera. Later, when the girls were doing the lingerie work inside, smiles would be verboten, replaced by the best sultry, sexy expressions they could muster. Of course, I already knew Didi's bedroom looks. \n\nI just let her run with it, and she showed what a pro she really was. She knew her body, and what it looked like from every angle, so she avoided uncomplimentary poses. Best yet, she knew that the real reason for this job was the clothes, or in this case, the three small pieces of shiny blue fabric that separated her from nudity. Women would be shopping from this catalogue, hoping their bodies looked as delicious in the bikini as Didi's did, and ordering it based on that. \n\nI noticed a tall, lithe redhead standing to one side, watching Didi do her thing. She was wearing a gold suit, very similar in style to Didi's blue one. \n\n\"Excuse me? Red?\" I called to her. \"I'm sorry, I don't know your name...could you come here, please?\" She stepped closer, and offered her hand. \n\n\"Olivia Shelton,\" she smiled. I took her hand. \n\n\"Nice to meet you, Olivia. Why don't you get in there with Didi, please?\" I asked. She had an incredible ass, I noticed as she walked in and said 'Hi' to Didi. Again, I let them do their thing, at first anyway. The girls had no problem touching each other, and I got a great shot of Didi with her hand on Olivia's firm ass, with a look of 'oh my' on her face. \n\n\"Ladies?\" I asked. \"Can I get you facing each other?\" They did exactly that. \"Great. Now press your hips together, and wrap your back arm around each other's shoulders.. Didi...a little taller please.\" She raised up on her toes. \"Good, now open up your front shoulder, each of you...there you go. Everybody smile, and Olivia, a bit more playful tilt to your head. Let those red locks hang for me.\"\n\nIn the viewfinder, I saw one tall, slightly waifish redhead, pressing her body against a slightly shorter, more buxom brunette. Their hips were pressed close, but the way they had their shoulders turned showed their chests to the camera. Olivia's right breast mashed snug against Didi's bigger, fuller left one, the gold and blue of their bikini tops clearly defining where one girl ended, and the other began. \n\n\"Hands on hips...that's great!\" I took several frames as the two beauties stayed in this basic position, but varied their expressions and head angles. \n\nThe morning passed quickly, a cavalcade of beautiful women parading before my lens in various bikinis. This was the fun part of this job, but the hard part, too. It wouldn't do to be caught leering at the models, so I tried to be a bit more subtle in my observations of their bodies. Of course, on this shoot, I had to be doubly careful, as Didi was watching me, and I really liked her. The girls were not making it any easier. \n\nFirst, it was a petit blonde named Corrine, who was a perfectly formed little pixie with pretty features and huge blue eyes. She was also an incorrigible flirt, and knew she looked incredible in the tiny red bikini she had chosen. Halfway through our session, I had to stop. She was doing fine, posing like a pro, but her nipples seemed to know only one pose, standing tall, and I do mean tall. What had started out as slight bumps in the fabric of her top, titillating but tolerable, had become porn star prongs that would be too distracting for the catalogue, unless it was being used by a teenager for self amusement. \n\nI called the wardrobe girl in for a consultation, and she agreed. She went over to talk to Corrine, who just shrugged. She looked at me. \n\n\"Sorry. I can't help it, my nipples have a mind of their own,\" she laughed. That made heads turn. A brief discussion ensued, then Corrine said, \"here, just take it with you.\" She reached behind her back, and a second later was pulling the top off over her head. \n\nI had found that models seemed to fall into two categories, at least when it came to nudity. While they all were nervous about their first time nude before the camera, some adjusted quickly, and others didn't. Some would get naked on a whim, and others would retreat to the wardrobe tent to adjust a bra strap. Corrine was obviously in the first group. \n\nSo, there she stood, topless in the sunshine, and completely at ease. I couldn't resist capturing her. She saw the camera come up to my eye, and posed for the shot, covering her points with her hands, and giving me a 'what are you doing here?' look. I took a few frames, then she spread her fingers, letting her hat pegs peek out. She was really getting into it, tugging them even longer and cupping her small but round breasts suggestively, when her top returned. The usual course of action for renegade nipples was tape ; either on the little buggers themselves, or inside the bra. It was the model's choice, and I guess Corrine didn't want her sensitive tips duct taped down. The wardrobe assistant helped her back into the top, successfully hiding the offending buds of feminine arousal, and we were ready to continue. \n\n\"Can I see?\" a voice asked from beside me. Didi was smiling. \"I'm surprised it took her this long to show everyone her tits. Corrine is quite the little tart, but she's harmless, and friendly enough.\"\n\nI scrolled back to the images of her sans bra, and tilted the camera in Didi's direction. \n\n\"Yikes!\" she giggled, \"she'll put someone's eye out with those!\" She winked, and walked away. \n\n***\n\nDuring our lunch break, I walked out of the house with a sandwich in hand, and stopped dead in my tracks. The girls were multitasking. Eating lunch, trading gossip, and working on their tan. \n\nLaying in a neat row, on their yoga mats, were fourteen beautiful women, glistening in the sun. All oiled to absorb the rays and perfect their tans, they chatted back and forth among themselves. \n\nOh, yeah...one more detail I left out. Naked. Not a stitch between them. Like I said before, the girls were not making it easier to curb my lecherous thoughts. Didi was in the middle of the pack, and saw me stop and look in their direction. She waved. One by one, the rest of them followed suit. Having them comfortable in my presence was a very good thing, and putting them in a flirtatious mood would be beneficial later during the lingerie sessions. I wandered over to them. \n\nA few minutes of mindless smalltalk followed, and I met the girls I hadn't met before. \n\nWe had Corrine, Sarah (blonde, willowy), Stephanie (very pretty brunette with nice tits), Olivia, Erin (redhead, curvy), Cecilia (blonde, athletic), Didi, Chrissie (blonde, voluptuous), Charlotte (skinny brunette), Denise (oh my god, huge tits), Danielle (pretty blonde), Frida (tall German brunette), Sheila (sexy redhead) and Lorraine (leggy blonde). I grabbed the camera. \n\n\"Class photo!\" I laughed. They didn't even hesitate, forming up in two rows like children at school. It was more of a group hug, really, and they were all giggling and smiling as they pressed against each other, oily boobs here, there and everywhere. \"Thank you, ladies.\" It wouldn't make the catalogue, of course, but everyone would get a copy. \n\n***\n\nThe end of day one arrived, and all the girls were gone. I was sitting by the pool, scanning through the hundreds of images l had captured today. \n\nThere are times when a curious client is the last thing you want to deal with, especially on a day when things, for whatever reason, didn't go as planned. That wasn't the case today. Despite our late start, I felt we had really made some progress today. I wasn't alone in that opinion. The client and his wife, who were also the designers of some of the swimsuits, were quite impressed, and they were most impressed with one model in particular. I would comment, but my opinion was slightly biased by the fact that she was waiting for me to meet her for dinner, among other activities, tonight. \n\n\"I think this one's the early contender for the cover shot,\" the client's wife said, tapping the screen where Didi's smiling face shone out. \"She's radiant. What's her name?\" \n\n\"Deirdre Hendricks,\" I answered, trying to maintain my illusion of objectivity. \n\n\"Well, she's gorgeous, and she really makes that bikini pop off the page,\" her husband said. \"She'll sell that suit, for sure.\" \n\nDidi would be ecstatic. All the models were paid a base rate for their time, but there were bonuses for each photo that made the final print piece, and of course, the cover was the plum, with the biggest kudos and paycheck. That applied to me, as well, so I was about as motivated as I ever expected to be. Bigger check, happy model, and happy lover...a win-win-win situation. \n\n***\n\nI messaged Didi as I left the set. It only took seconds for her to reply. I can only assume she was eagerly awaiting my text. A flurry of messages flew back and forth, but they were mostly simple pleasantries. The only one that mattered was her last. \n\nOur spot. ASAP. Bring white horse. \n\nSomewhat cryptic, I thought. Our spot was one of two possibilities, but I had a feeling it was the bar where we first met, last night. ASAP was self explanatory, but the last bit was a puzzle. What white horse? \n\nI spent the entire time driving back to the hotel pondering her text, and was no closer to figuring it out. I parked, and walked into the bar. \n\nAh. Now I get it, I thought. Bring white horse... Rescue her. \n\nApparently, the Saturday night crowd here was more adventurous and aggressive than the Friday nighters. While I had found Didi sitting alone last evening, that wasn't the case tonight. She was surrounded, by at least ten guys, who were not taking no for an answer. She wasn't making it easier, though, as her wardrobe choice had much more cleavage on view tonight. \n\nI approached the outskirts of the group, picking my way through the first few. The outliers were more looky-lou than participant, so they parted easily. However, the inner core was not going to be so polite. \n\n\"Excuse me,\" I said calmly, but loud enough to be heard. The ringleader turned to look at me with disdain. \n\n\"Piss off buddy. We saw her first,\" he grunted. \"Go find your own girl.\"\n\n\"Actually,\" I threatened, \"I did find her...last night...so get the fuck out of my way.\" \n\nHe was bigger than me, but I think the bravado caught him off guard, and he left enough room for me to squeeze through. \n\n\"There's my girl,\" I said, sitting beside her on a vacant stool. \"Sorry I'm late.\"\n\nDidi smiled, and leaned over, opening her mouth to accept my tongue as I kissed her, and staring down the big lummox that had been giving her the most trouble. Then her eyes closed, her arms came up around my neck, and the kiss heated up. She was rubbing his face in it, letting him see what he wasn't going to get to sample himself. It worked, and the huddle dispersed. \n\n\"Thank you, my hero,\" she said quietly. \"All I said was 'hello', and suddenly I was surrounded. Shall we go to dinner? My treat, tonight.\"\n\n\"I make it a rule never to refuse a beautiful woman, or a free meal,\" I laughed. She took my arm, and we headed for the restaurant, passing the group of guys on the way. \n\n\"Hey sweet cheeks?\" the leader chirped as we passed, \"What's he got that I don't have?\"\n\n\"Well,\" she laughed, \"how about class, charm, money, talent...and me!\" \n\nI nearly stuck my tongue out at him, but decided not to rub salt in the wound. \n\n***\n\nDinner was much more relaxed that night. We were comfortable around each other now, and had a few things to discuss, before we jumped each other. \n\nI filled her in on the client's opinion of her images, and she smiled brightly. \n\n\"Really? Well, I guess I've been exceptionally motivated, since I met a certain photographer,\" she whispered, reaching across the table to caress my hand. \"You bring out the best in me.\" \n\n\"I could say the same of you,\" I replied, taking her hand in mine. \"You make it easy.\" \n\nI watched her lips as she plucked a piece of steak from her fork. My god, she could make even the most mundane things look sexual. She caught me watching, and smiled as she chewed. \n\n\"That look, right there...that's the one I like,\" she whispered. \"It makes me feel warm inside, and I guess that feeling shows through. I can honestly say I've never felt this was about any photographer I've worked with. I don't know where this is going, but I like it.\" \n\nAh, yes. She did say we needed to talk about our future didn't she. Fair enough. I wanted to know where we were going, too. \n\n\"Why don't you stay here, with me, while we're working together?\" she asked, putting her fork down and giving me her undivided attention. \"I mean...if you want to. I don't want to assume anything...it's just that I'd really like to spend as much time with you as possible, to get to know you. Last night, we pretty much just seduced each other, and that was...oh my god, just so incredibly hot...but I want to know the 'you' that isn't just interested in getting into my pants. Does that make sense?\"\n\nSo she wasn't just a pretty face, and apparently I had triggered some pretty deep thoughts within her. And...she was right. Practical considerations aside...I was paying for a hotel room that I had checked into, but not been in since...we were being presented with a unique opportunity. Most people are different at work than they are at home, and we had the chance to see both, in a very short, intense start to our relationship, if that's the way things went. By the end of our four days together, we'd probably know if we wanted to see any more of each other. Or, maybe we'd just have four days of mind blowing sex, and go on our way. Either way, I was in. \n\n\"Yes, Didi, it makes perfect sense,\" I nodded. \"I'll go get my stuff from the other hotel when we're done here. It won't take me long. I never actually unpacked.\"\n\nDidi smiled. There it was, the thousand watt smile, that lit up the room, and told me she was more than just happy with the decision. She crooked her finger at me, beckoning me closer. I leaned in. \n\n\"I am so fucking horny right now, it's all I can do not to jump you here in the restaurant,\" she growled. \"I propose you go and check out of your hotel now, and we order our desert from room service, after we, um...satisfy...our other hunger.\" She fished her key card out of her purse, and handed it to me. \"I'll get another key from the front desk.\" \n\nLike I said before...never refuse a beautiful woman. I scarfed down the last of my meal, dabbed my mouth with my napkin, and kissed her on the cheek. Outside, I drove quickly to 'my' hotel, where I packed up the few things I had unpacked, and went to check out. Too bad. It really was a nice hotel, but it didn't have the one amenity that made me want to leave. It was short on Didi. \n\n***\n\nSomeone up there likes me. I found a very convenient parking space, shouldered my bags, grabbed my camera bag, and headed for the elevator. Within minutes, I was outside the door to 'our' room. I swiped the card, and pushed in with my load. \n\n\"I'm back,\" I called out, as there was no one to be seen. \n\n\"Great honey,\" Didi replied, her angelic voice wafting out of the bathroom. \"I'll be out in a minute.\" \n\n\"Did you miss...\" I stopped in my tracks, and mid sentence, as she appeared at the bathroom door. Holy shit! I guess you did. \n\nI don't know if this was her own personal lingerie, or if she had borrowed something off the rack at the shoot, but it was showing her rack to great effect. She was also perfectly coiffed, and made up with a look that scorched my eyes. \n\n\"See anything you like?\" she purred, strutting slowly toward me on her fuck-me heels. She did a little twirl, giving me the full view, and it was quite a view. The gown was red, long, diaphanous, and clipped in front just under her breasts, cradling those full globes and forming some devastating cleavage. She stopped in front of me. \"What do you think?\" she asked. \n\n\"I don't know,\" I joked, looking her up and down. She smiled and stepped closer, putting one hand on the back of my neck and pulling my lips to hers. \n\nOkay. I thought she was hot last night, but this took it to another level. The relaxed, intimate Didi was off the charts. She probed my mouth with her tongue in a sensual fashion, swivelling her mouth against mine expressively. She finally broke away. \n\n\"You were saying?\" she giggled softly, very pleased with herself when I couldn't answer. She had taken my breath away. Again. \n\nI was still standing there, dumbstruck, while she walked seductively away, pausing beside the bed, with her back to me. She looked over her shoulder at me, and smiled as she undid the front of her gown, letting it slide off her shoulders. She held it there, barely covered from the waist down, until she let it fall, stepped out of her high-heels, and slipped silently into the bed, pulling the sheets up to cover her magnificent form. \n\n\"Are you coming to bed, darling?\" she breathed, settling deeper into the bed. Her eyes burned with desire. \n\nOh yeah. I'm coming. Bed. Now. \n\nI left a trail of shoes, socks, and other items of clothing on the way to my side of the bed, finally tossing my underwear across the room and joining her under the covers. ",
        "\"We may have to talk about the way you leave clothes strewn all over, roomie,\" she laughed, welcoming me into her arms, \"but I'll give you a pass tonight. Extenuating circumstances...too horny to be neat.\" \n\nI knew she was kidding. After all, her gown was laying on the floor too. \n\nThere was something else different in her kisses tonight, besides the level of heat. It was subtle, a gentleness and personal connection that I liked a lot. Last night had been incredibly sexy, enjoyable and would never be forgotten, but it was, in the final analysis, purely physical. She had wanted to get fucked, to have as many orgasms as she could get, and I wasn't going to turn down the chance to be the one that gave them to her. We both got what we wanted, and I had the pictures to prove it. \n\nSomewhere along the way, though, something else had sprouted, and was now growing wild in the new light of a burgeoning relationship. Her kisses told me of its presence, and honestly, I was feeling it too. \n\nI suppose every man has a personal checklist of attributes he'd like in a partner. Some are subjective, others negotiable, and still others are a bonus. Physical, mental, and emotional...the basic architecture of 'the list' probably hadn't changed since the dawn of time. Hell, it might be ingrained in the DNA. \n\nI really liked Deirdre, the person, and the personality. She was funny, loving, confident, happy...all prerequisites, as far as I was concerned. Add the obvious physical attractions...her beauty, eyes, lips, hair...and that incredible body, the one that checked off every item on my 'goddess' list...and I couldn't come up with a single reason not to just go along with her. I wasn't looking for a relationship actively, but that's usually when you find the best ones. Or the relationship finds you.  \n\nDidi was pressed firmly against me, from her succulent lips to her perfectly trimmed and painted toenails. I held her close, as we pecked and nibbled at each other's lips. Hers were delicious, and while the most obvious thing about her body to love would be her magnificent breasts, I found that kissing those plump, perfect lips was running a very close second. \n\nDidi, rolled back, pulling me on top of her, and spreading her legs to welcome me. \n\n\"May I ask a favour?\" she whispered. \n\n\"Of course, Didi,\" I said quietly. \"What can I do for you?\" She was tickling my ear playfully, and looked away for a second, as if making her request would show too much of her soul to me. \"Anything you want, baby,\" I added. \n\nHer eyes sparkled, and she looked deep into my eyes for a few seconds before she finally relented, and spoke. \n\n\"Have you ever been in love?\" she asked. \n\n\"Yes,\" I replied. \"It's been a few years, but yes, I have been hopelessly, totally in love. Why?\" \n\n\"I don't think I ever really have,\" she said softly, batting her eyelashes and looking away again. \"It just never happened. I've had my chances, I suppose, but...it seems like the guys that interest me end up being in it for sex, and nothing more.\" \n\n\"I'm sorry to hear that. That's not nice. Are you asking if that's all I want?\" \n\n\"No,\" she replied quickly, patting my cheek softly. \"No, I can tell you're not like them. You treat me with respect. What I was wondering was...\" she paused, biting her lip nervously. \n\n\"Didi, look at me,\" I said gently. \"Please, don't worry about it. Just say what you need to say, and ask what you want.\" She took a deep breath, and let it out slowly. \n\n\"Could you pretend...I'm not asking you to love me...but could you pretend that we're head over heels in love, just for tonight, so that I can feel it?\" \n\nI didn't see that coming. She seems so mature, and confident, but I guess even she could have doubts. Did she fear that no one would ever really love her? Was that a side effect of having men fall over each other trying to get her into bed, because of her physical beauty? I suddenly felt a tug at my heart, one I didn't need to pretend about. She was vulnerable, and had let me know it. That was on my list, too. I let my guard down completely, and kissed her. \n\n\"Do you want me to make love to you?\" I asked between kisses. \n\n\"Oh, yes,\" she breathed, her body relaxing under mine. \"I'd like that very much. Make love to me, soft and gentle, like we've been together for years.\" \n\n\"Maybe I won't have to pretend,\" I whispered, smiling down at her. \n\nYeah, I know... 'you just met her last night', right? True, but sometimes you just know, even if there's no logical reason. Besides, I didn't just propose to her; I just said maybe I wouldn't have to pretend to love her. I really did like being with her, so it wasn't difficult to let her feel that emotion. \n\nShe smiled, and closed her eyes, pulling me down for another soulful kiss. \n\nI felt her hand searching out my penis, which was nearly fully erect, and she stroked it softly, guiding it to her vestibule. She was wet...very wet, and then head slipped in easily. Her hand retreated, and I pushed, sliding smoothly into her warm pussy. \n\n\"Oh god, yes,\" she hissed, her hands now caressing my back softly. \"So big, and hard. I love your cock...the way it fills me so perfectly.\"\n\n\"And I love your pussy, Didi,\" I breathed. \"So tight, and hot, and wet.\"\n\nWe made love, just the way she asked for it...soft, gentle, and loving, letting emotions set the pace. I wasn't kidding when I said I didn't have to pretend. I appreciated her company, and her willingness to share her body, thoughts and soul with me. \n\nI fucked her, probing her depths with smooth, firm strokes, grinding against her clit. She let out quivering gasps of breath, soft moans, and growls of lust, while our lips remained pressed together. \n\nI rolled us gently onto our side, and she draped her top leg over my hip, giving me room to continue my easy strokes into her. My lips trailed down her neck, nibbling the perfect, smooth skin along the way, while she tossed her head back, submitting to my attention. Her hand tousled my hair softly, directing my kisses down, across her collarbone, toward the area I was going to anyway. I can't help sounding like a broken record, because I love breasts. Big, firm ones in general, and hers in particular. Those full globes, stacked atop each other in this position, attracted my lips like a black hole does...well, everything. \n\n\"Mmmm, yes, darling...I like that,\" she moaned as I corralled one of her stiff nipples, first kissing it softly, then suckling it. She arched her back, curving her upper body away, so I could pleasure her breasts while still skewering her hot vagina with a series of stabbing thrusts. \"When you suck my nipples, it's like they're connected directly to my clit. It sets me on fire.\" \n\nSetting her on fire seemed like a pretty good idea right now, so I kept it up, sucking harder while crushing her sensitive clit against the base of my cock with every stroke. It was working, and she started to vibrate like a tuning fork in my arms, breathing in deep, shuddering puffs. \n\n\"Oh god don't stop...I'm so close, and it feels so fucking good...\"she hissed. I bit her nipple gently. \"Ow! Oh fuck...I'm cumming...\"she groaned, bucking in my arms. She dug her heel into my butt, pulling me deeper into her cunt. \"Don't stop! Keep fucking me! Gonna cum again nnnnnn...\" True to her word, she did, a bit louder this time. \n\nHer hands scrabbled desperately, searching out my head, which she wrenched up away from her chest. Her lips found mine, and she kissed me hard, her breath coming in quivering little snorts through her nose. She wrapped her body around mine, holding me so tight, like she'd never let me go, until she wilted, destroyed by her orgasm. \n\nI watched her breasts heave with her ragged breathing, and smiled. Jackpot. I think she got what she was looking for. She ran her hands through her hair and moaned. \n\n\"Oh my god...what did you do to me?\" she breathed, \"and how do I get more?\" \n\nMore? You want more? I got a lotta more. \n\nI rolled on top of her, and started to fuck her hard, thrashing her furiously. Her eyes opened wide, hair flying as she bounced between my pummelling hips and the mattress, and she screamed. \n\n\"Oh! Oh yes, baby, fuck me now! Fuck me fast, and make me cum again!\" she gasped, wrapping her legs around my waist. She'd had the taste of gentle loving she desired, now she wanted...no, needed...to be pounded into oblivion. It would be my pleasure. \n\nHer eyes bored holes into mine, locked in on my face while I drilled her. She was grunting every time I slammed my cock into her dripping pussy, and whispering little obscenities of encouragement when she could squeeze them out between strokes. She wasn't the only one having fun, as I was getting pretty close, myself. \n\n\"Oh baby,\" I gasped, \"I've got some cum for you. In you, or on you?\" \n\n\"Uhn...fuck...on...uhn...fucking...uhn...face...please!\" she grunted through clenched teeth. \"Paint...me!\" \n\nLast night, any cum that landed on her face was purely an accident, but the memory of those few drops on her lips was seared into my mind. The pictures were incredible. Now, the thought of unloading a full wad on her beautiful visage nearly made me explode inside her before I could pull it out. Nearly. \n\nI yanked it out, crawled up the bed and gave it two strokes before erupting, sending this first salvo the full length of her face, to land in her hair, trailing down her forehead, between her eyes, and across her nose. More followed, and more, and still more, leaving her pretty features streaked with parallel lines of pearly goo. The last few drops flew about, landing all over her face, like sexy freckles. Small bits adorned her long eyelashes, but I had miraculously avoided getting it in her eyes. She wasted no time in scooping up all she could swallow, while I dropped, exhausted, beside her. \n\n\"Mmmmm, thank you, honey,\" she whispered, \"for both ends of the spectrum.\" \n\n\"You...are...so...wel...come,\" I panted. \n\n***\n\nDay two dawned bright and sunny. I know, because Didi was riding me, in a rambunctious and furious morning fuck, when the sun peeked in the windows. It was an image photographers dream of, with the earliest streaks of light, illuminating her right side, a look of ecstasy on her face, while the rest remained locked in shadow. \n\nMy camera was, of course, across the room, and this was not the time to say 'hold that pose' while I retrieved it, so I just clicked my mental shutter and saved it in my own memory. Seconds later, she was quaking through an enormous orgasm, and a minute or so after her climax, her mouth was busy sucking me toward my own release. I was beginning to like this arrangement. \n\nDidi gulped and swallowed, slurping up everything I could produce, then licked me clean, patting my spent member as she slithered up my body to apply a kiss. \n\n\"Good morning, Sweetheart,\" she whispered, the first words of the day, as we had just given each other pleasure that went beyond words. \"I'll hit the shower first, while you rest. I assume we're eating breakfast together?\" \n\nI nodded, the extent of my ability to communicate at this point. She was far too bushy-tailed for this time of day. I'd have to get used to that. The shower started, and I listened to her humming happily while she cleaned up. Most of the models I knew were night owls, and viewed morning with all the passion of a vampire, but Didi seemed to be quite happy to begin the day. Yet another difference to love about her. \n\nShe was out of the shower minutes later, wandering around the room naked, trying to decide what to wear. I watched, enthralled. \n\n\"You know...you really are gorgeous,\" I said quietly. She giggled, and came back to sit on the edge of the bed, looking down at me. \n\n\"Thank you, sir,\" she smiled. Her hair was pulled back in a simple ponytail, and her face was makeup free, since both hair and makeup would be done by others at the shoot. Her eyes were remarkable, and I gazed into them, while she did the same to me. \"I'm starving. Should I go myself, or are you getting up?\" \n\nShe was right. I could lounge for a bit, as my part of the shoot didn't need as much prep time, but she had a schedule to keep. \n\n\"I'm up!\" I laughed, and raced into the bathroom, having the world's fastest shower...cold, so I wouldn't linger, and to wake me up. When I walked back into the bedroom, she was dressed, a tank top stretched across her bra-cradled breasts, and snug jeans down below. \n\n\"Just give me a minute,\" I said, rummaging through my suitcase for underwear. I'd find the ones I wore last night...somewhere...later. Or the maid would. \n\nMinutes later, we walked together into the restaurant, took a seat, and began to peruse the menu. \n\n\"You're that hungry?\" I asked, looking at her eyes racing around the listing of breakfast items. \"I would have thought that smoothie was enough to take the edge off.\" She smiled. \n\n\"Oh no, that was just an appy, and it was delicious.\" The waitress had arrived just before she said it, and she grinned at the young blonde. \"Oops. More than you needed to know... I'll have the Eggs Benedict, orange juice, and a coffee.\"\n\n\"Make that two,\" I laughed, holding up two fingers redundantly. \"Throw in some bacon and toast for mine, will you?\" Off she went with a smile. \n\n\"I think we're doing a little more lingerie today,\" I told her. \n\n\"Oh good,\" she laughed, rolling her eyes, \"like I'm not going to have a hard enough time keeping my hands off you. I hope they don't mind getting gooey panties back when we're done.\"\n\n\"Mmmmm, yes, but think of how hot you'll look for the camera. Speaking of which...was that red number last night yours, or...\" \n\n\"Shit! Thanks for reminding me!\" she giggled. \"No, I don't travel with 'fuck me' clothes just in case I get lucky. I borrowed it, and I suppose they'll want it back. It's nice, isn't it?\" \n\n\"Oh yeah,\" I gasped, \"and on you, it's incredible.\"\n\nThe waitress had a knack for arriving just in time to hear things that weren't meant for her ears, and put our food down with a wink, and a smile. \n\nWe ate in relative silence, discussing a bit of today's schedule, but mostly just answering nature's call for food after the earlier exertions. I had more to eat, and more time to do it in, but she was ravenous. I've seen her naked, and I don't know where she puts it. \n\nShe dabbed her lips, gave me a quick peck, and stood up. \n\n\"I've got to go grab that red negligee and my bag. My taxi should be here by the time I get back down, so I'll say 'bye' now. See you in, what...an hour or so?\" \n\n\"Maybe a bit longer,\" I mumbled, munching toast. \"See you there.\" I watched her ass as she wiggled away, and she glanced back at me, blowing another kiss. \n\nI arrived at the house about ninety minutes later. The sun was still good, angled nicely with a nice warm tone. I walked into the living room, which had been transformed into a giant dressing room, and found all fourteen women in various stages of dress, hair and makeup. Nobody even flinched, not even the four or five who were stark naked. They all just said 'hello', and went about their business. \n\nThe plan was to get in a few more swimsuit shots around and in the pool, until the light was lost, then move inside, redo everyone's hair and makeup, and do the boudoir sets. That would probably be it for the day. \n\nDidi was sitting in her chair, getting the full treatment from a hairdresser and cosmetician, when I walked up behind her, making eye contact in the mirror. Since she couldn't move, she just smiled, and let the girl with the lipstick pencil perfect her lips. As though they needed any help. Once her lips were done, she could talk. \n\n\"Good morning, mister Winslow. Lovely day isn't it?\" Nice cover. The other girls would have a hissy-fit if they thought she was getting special treatment. \n\n\"I'll be outside, when you're ready,\" I said to the room, while looking into her eyes in the reflection. \"The pool is open!\" \n\nI think most women can back me up on this ; not all swimsuits are for swimming in. Most bikinis that are good for sunbathing, are good only for sunbathing, unless your goal is to be wet and naked. Bikinis good for swimming cover too much for those interested in minimal tan lines. That leaves the one piece, maillot style suits, which can be even sexier than a bikini. Less is more, but more is sometimes better. \n\nDidi was the first one to join me outside, and padded out silently, wearing a robe and a smile. \n\n\"Where do you want me?\" she asked again, like our first night together. Oh, to be able to answer that question the way I wanted to...but not here, and not now. \n\n\"That depends on what's under the robe,\" I replied, going as close to a blatant flirt as I dared. She grinned, and undid the sash. \n\nHamanahamanahamana! Wow! That's some suit she's almost wearing. \n\nClassic black, her maillot had a neckline that nearly reached her navel, and was cut well above her hips on the sides, which were a course knit mesh. Out back, a single string connected the sides mid back, and it scooped down lower than the side cuts, but actually had a seat, instead of a thong.. It was essentially, a black V, that covered the good bits in front, and wrapped up over her ass. Everything else that was suit was mesh. Like I said, sexier than a bikini. \n\n\"You're drooling, mister Winslow. Does that mean you like it?\" I nodded, dumbly. She stepped closer, and whispered, so only I could hear. \"Me too. I think I'll take this one home.\" \n\nYeah, well, when the public gets a look at these pictures, they're gonna sell like hotcakes. \n\n\"Let's start with a few dry shots, first,\" I croaked. She smiled, knowing that I knew she was anything but dry. \n\nI took a few images of her on the deck, then nodded at her, and let her walk at her own pace, headed to the steps of the pool. These shots were more along the candid line, but she still never lost her smile. The best were when she dipped her toes in the water, testing it before stepping in. Once in the water, I let her play, flicking water at me, but always with that smile. \n\nA cavalcade of bathing beauties came forth, and they all did about the same. Corinne's nipples made another appearance, but I decided to just deal with it digitally, if the pictures made the cut. \n\nThe shallow end of the pool was filling up with half naked women, all careful to keep their hair dry and makeup unmussed, in case they were called upon again. \n\nWe were losing the light, so I huddled with the clients, who selected three girls for more 'action shots'. Didi was among them, so everyone else took off for lunch. \n\n\"Okay ladies, don't worry about your hair,\" I told them. \"Swim, splash, frolic!\" \n\nDidi, Chrissie and Sheila, looked at each other, evil grins on their faces. Rarely did one model get to mess with another's appearance, so they circled each other, looking for an opening. The clients had chosen one blonde, one redhead, and one brunette, just to keep things fair. Before long, they were all fully soaked, giggling while they dunked each other. The shots were great, and I especially liked the one of the three of them, together, smiling at the camera, their lashes speckled with water. \n\n***\n\nAfter lunch, and another group session in the makeup chairs, it was off to the bedroom set. You think bikinis are distracting? You should try a lingerie shoot. Swimsuits are sexy, but public. They say 'don't I look like someone you'd like to fuck'. Lingerie is straight to the point. It says 'I'm wearing this because we're going to fuck, as soon as I take it off'. \n\nI tried. God, you have no idea how much I tried...not to get excited. I've been around naked women for many years, and rarely get an inappropriate erection, but this time, maybe because of Didi, I was hard as a rock. Every outfit was sexy, but the catalogue was hardly an issue of Hustler, so everything was covered. It didn't matter. Nor did it matter who was in the sexy, lacy, revealing little garments...in my mind, they were all my darling Deirdre. ",
        "She made it even more difficult, by appearing beside me, wearing the same red gown she wore last night. The panties too, this time. She didn't say anything, just gave me a knowing smile, glanced down at my bulging crotch, and raised her eyebrows. The smile got bigger. So did my dick. \n\nThose images were smokin'! Didi was doing her best to make me cum in my pants, trying everything but blatant masturbation. When she was done, we wrapped for the day, and everyone dispersed quickly. She walked up behind me quietly, and whispered in my ear. \n\n\"Is that for me?\" she asked, reaching around and gently caressing my woodie. \n\n\"It's all for you,\" I breathed. \n\n\"Mmmmm. Should I borrow something to wear tonight?\" \n\n\"Take your pick,\" I replied. \"I've already seen you in all of them, and you look fantastic.\" \n\n***\n\nWe were resting in bed, listening to the rain pound the outside windows for the second straight day. Yesterday, day three of four, we had just moved inside, and shot the rest of the lingerie portion of the catalogue, getting everything we needed in one long session. I'll never forget the sight of Denise, the brunette with the ginormous breasts, spilling literally out of her babydoll nightgown. She just laughed, and squashed the huge, soft pillows back into the confines of the tiny garment. Even Didi smiled at that one. Rain again today had cancelled the session, postponing it until tomorrow, when sunshine was forecast. \n\nSo, since we weren't working, we found something else to pass the time. Again, and again, and again. I was pooped. Time to talk. \n\n\"Didi, I have a question for you, honey,\" I said. \"I don't want this to sound wrong, but have you given any thought to your life after your days in front of the camera are over?\" \n\n\"How could I take that wrong?\" she laughed. She was snuggled softly under my arm, tracing her fingers across my chest. She pinched my nipple in retaliation. \"Are you calling me old? I'm only twenty-eight!\" \n\n\"Of course I'm not calling you old,\" I replied, tickling her ribs. She giggled, and struggled to escape...but not really. \"I'm just wondering what you plan to do when the clients stop calling. Yours is a cruel business, and right or wrong, a young woman's game.\" \n\n\"Yes, I suppose we can't all be Cindy Crawford, can we?\" she laughed. \"That bitch! Making us all look bad. What is she now? Seventy? It's just not fair.\"\n\n\"I believe she's just shy of fifty, but the point is well taken,\" I smiled. \"I'm not sure she's human, but that's not really important, now. I wasn't thinking Cindy Crawford...I was thinking Suze Randall.\" \n\nFor those who are unfamiliar, Suze Randall is a former model, turned photographer...turned glamour photographer, Playboy/Penthouse/Hustler photographer, and finally, adult film director. Her fame behind the camera is the only reason anyone even knows she once was a model before it. Didi knew the name. \n\n\"You mean stop posing for the camera, and start operating it?\" she asked, twisting to look at me. \n\n\"Yes. You said it yourself...you can't be Cindy Crawford. Hell, even she can't be what she once was, she's just found a way to stay in the public eye. You've been doing this for ten years, so would it be unrealistic to say that you're in the middle of your career, at best?\" I said, as gently as possible. I was taking a big chance, essential telling the woman I might be in love with that she was nearing her expiration date, career wise. \"Didi, you know I think you are the most beautiful woman I've ever met, and I hope that we really do have a long future together. But, my opinion isn't going to be enough to keep you working forever.\" \n\nDidi was silent, obviously unhappy at the turn of this conversation. No woman wants to think she will lose her attractiveness, and for a model, whose whole identity is wrapped up in their appearance, that thought had to be terrifying. \n\n\"Baby? Are you mad at me?\" I whispered. Her response took a few seconds. A quick one would have made me feel better. \n\n\"No, I'm not mad at you...I just don't like thinking about it,\" she sighed. \"You're right, though. I suppose it's better to face it, and be prepared for the inevitable. What are you suggesting?\" \n\nWhew. That was close. \n\n\"Well, you already know what you're doing on that side of the lens, and that will really help you later on. Now you just need to learn this side, and that's all experience. If you start now, by the time you need to use Plan B, you'll be ready.\" \n\n\"Are you offering your services as photography tutor?\" she asked, looking at me with a twinkle in her eye. \"You know, it might take me years to learn...decades even. Are you ready for that?\" \n\nHmmmm, I'll have to think about that for a few...milliseconds. \n\n\"I'll risk it,\" I smiled. \"Are you saying 'yes'?\" \n\nShe smiled, and crawled onto my chest, reaching under to point my dick in the right direction, that being straight up her cunt. I felt the warm, wet sheath of muscular heaven wrap its velvety embrace around my shaft, and sighed into the kiss she was also giving me. Her tongue did a few quick laps of my mouth, and she pulled back an inch, looking deep into my eyes. \n\n\"Yes,\" she breathed. \n\n***\n\nIt was about two weeks later, when Didi came bounding into the studio, which now was home to both of us. The decision of who would move in with whom was quickly resolved with one practical fact ; the studio, which was part of my apartment, and doubled as a very comfortable living room when not in use. \n\n\"It's here!\" she squealed excitedly, jumping up and down, a large brown envelope in her hands. I let her jump, happy to watch the effects, namely her big, delicious boobs bouncing wildly under her top. She thrust her hand out. \"Here! You open it!\" \n\nI took the envelope. I knew what it was, and what the results were...I had since the last day of the shoot. The clients had been piecing together a mock-up of the catalogue as we went along, and had asked for my input, so barring a huge change in opinion, the final version in the envelope would be very good news. \n\nI tore the flap open, and peeked inside, seeing the catalogue, and three sheets of paper. Didi was trying to see in, so I turned, blocking her view playfully. \n\n\"Come on! You're killing me!\" she giggled, and jiggled. \n\nI pulled the glossy booklet slowly out, keeping it hidden from her prying eyes, and... \n\n\"Damn! I'm sorry, honey... \" I said, shaking my head. Her smile faded quickly, giving way to a girlish pout. \"...but you got the cover!\" I turned it toward her, showing her the picture of her bountiful figure, filling the blue bikini, with her brilliant smile glowing off the page. \n\nDidi nearly knocked me off my feet, leaping into my chest with her arms around my neck. She giggled and squealed in joy. \n\n\"Thank you! Thank you! Thank you!\" she screamed. \"My first cover!\" \n\nI eased her down, letting her stand again, and handed her the catalogue. \n\n\"We'll get it framed,\" I smiled, and fished the three remaining pages out of the envelope. \"Two for you,\" I said, handing her two bonus cheques, one for the cover, and one for her content numbers. \"One for me. I think dinner's on you tonight...yours are bigger.\" \n\n\"Yes, they are, aren't they?\" she laughed, glancing down at her full breasts. She pulled her shirt off over her head, putting those magnificent tits on display. \"Okay, dinner is my treat. Do you have a treat for your Toody?\"\n\nOh, yeah! \n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI hope you enjoyed it. Thanks for reading."
    ],
    "authorname": "ilikeithot6308",
    "tags": [
        "brunette",
        "big tits",
        "models",
        "photographer",
        "swimsuits",
        "lingerie",
        "romance",
        "intimacy"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/exposure-compensation-factor-ch-02"
}