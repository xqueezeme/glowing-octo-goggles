{
    "title": "Play Testers Wanted Pt. 09",
    "pages": [
        "Here is another long one for you to enjoy. A few things to say before we plunge into the story. I wanted to explore and try a few different ideas, styles, and elements. I hope they don't throw you for a loop. They were done for fun and try to stretch the horizon a little. If something bothers you give me a holler. I am always open to suggestions. If I left something vague tell me and I'll touch on it either in the comments or in the next installment. Happy Holidays and without anymore delay... part nine. Oh yeah, vote and comment please. It helps out a lot. Thanks!\n\nBattle:\n\nWe quite literally fought bad guys across the nine realms. All the while I began pondering things I would have to deal with when I left the Marvel side of things to train the smexy Aoki in the ways of the Force. My main concern was the professional players now being inserted into that game. I felt protective and that non-pros would suffer. I wanted to create an alternative persona so that I could have fun yet travel unseen across the galaxy. I wanted something different that would challenge me and with my shapeshifting abilities I could easily perpetrate my little strategy. It was my time with Mystique that inspired the idea. I'd play a female gunslinger type, maybe a bounty hunter or just a smuggler. I wanted something that would fit into the Star Wars universe but something uniquely me. I pondered mimicking her after an existing Marvel, Disney, or Star Wars character. \n\n\"I got it!\" I declared amid a battle on the realm of Vanaheim, home of the Vanir. \"Ha-ha! Die motherfuckers!\"\n\n\"Language!\" Doctor Strange reminded me since Gwen was back on Midgard.\n\n\"Behind you!\" Thor roared.\n\nI spun and hurled the dark elf dagger as hard as I could at the lumbering frost giant. It struck it mid mass with a sickening yet satisfying crunch. It teleported back to my hand and I joined Thor as he took on a trio of giants. I thrust Death Kiss into the chest of one of them while the thunder god smashed another with Mjolnir. I followed the giant down to the ground as my rune sword drank its life essence to the very last drop. Between Mjolnir and Death Kiss the rest of the giants broke and fled through the portal back to Jotunheim. The battle won it was time to celebrate.\n\n\"Heimdall! Bring us home.\" Thor roared towards the sky.\n\nI will repeat, transport via the Bifrost is freaking awesome! I did my best to hide my awe of the Great Hall of Asgard. I failed miserably. The interior was monstrously huge with dozens of heavy oaken tables, a towering vaulted ceiling, and everywhere the cunning carvings of runes and knotwork. The men of Asgard were warriors born, and the women, oh the women came in all shapes and sizes. We sat at the high table sharing war stories. The Asgardians hung on Thor's every word as I drank from a wooden cup. He regaled the crowd with his booming voice, the wild gesticulations, and extreme facial expression. He was a born storyteller that one.\n\n\"...and the dragon's head tumbled off its neck while it stared at Mjolnir!\" The Lord of Thunder laughed.\n\n\"Thor?\" A busty brunette called out from the crowd. \"If you didn't kill the dragon, who did?\"\n\n\"Why my friend Ghost did!\" Thor said with a generous smile. \"He snuck up and lopped it off with one swing.\"\n\n\"I know,\" Sif added drunkenly. \"He even took the time to spit on his hands before he swung.\" The crowd roared at that one and I wasn't sure if I should take a bow or slink off in shame.\n\n\"Both hands Lady Sif,\" the same brunette crooned. \"He must be mightily blessed!\"\n\n\"OOH!\" The audience exclaimed.\n\n\"Aye!\" Sif purred. \"He'd give any Valkyrie a run for her coin!\"\n\nThe crowd took up my name in a chant just as Odin the All-father made an appearance. It was time to see if the Helm of Anubis could fool the likes of the King of Asgard. I glanced at Thor and he at me. Odin poured himself a mug of mead and joined the revelries.\n\n\"Pray tell us Thunderer, where is this dragon head your companion severed so expertly?\" Odin asked.\n\n\"It is being mounted as we speak. The Heroes Three demanded it for our first outing.\" He replied as he clanked mugs together and I spied Odin's one good eye on the gloves I was wearing. The dwarf made gloves that once belonged to Thor. Shit! Rookie mistake. Too late to change them out now.\n\n\"A princely gift Odinson,\" the All father replied addressing my error. \"Was not another dragon responsible for you receiving those from the dwarven folk?\"\n\n\"Aye, they are father,\" Thor replied as the Asgardians looked at me in a whole new light. \"Friend Ghost and I helped drive one of the Many Angled One back to their home dimension.\"\n\nThe hall fell silent as Odin pondered this news. The citizens wisely waited to see how their monarch reacted to such tidings. Odin ordered his mug refilled and raised it in honor of the defeat of such foul things.\n\n\"Demon dire defeated deftly,\" Odin praised. \"Dragon slayer and demon foe, welcome thee to the Halls of Asgard friend Ghost!\"\n\n\"Thank you, Odin King,\" I said watching him try to puzzle me out. \"The hospitality of your house is without equal.\"\n\n\"Too true!\" Odin roared. \"Are we not Asgard! I name thee Demon Queller and Dragon Slayer!\"\n\nI thanked him as I raised my mug and the busty brunette plopped in my lap and refilled it. She chewed on my ear lobe and ground her ass against my groin. Odin watched me intently as my arm slipped around the woman's waist. Horns sounded and I nearly choked when a familiar looking redhead strode into the hall with her wicked looking spear in hand. The brunette cheered and it was only then that I learned the woman's name.\n\n\"Angela! Angela!\" The crowd cheered as the ribbons decorating her weapon and armor shifted in an unfelt breeze.\n\n\"She is sister to Thor,\" the woman in my lap explained. \"You've seen her before!\"\n\n\"Aye... I mean yes, I have. She visited Midgard and I saw her from afar.\" I admitted.\n\n\"She's coming over!\" The brunette bounced in my lap. \"Lady Angela... Assassin of Asgard!\" She cried out and I gasped when I heard the title of assassin.\n\n\"So, you are the famed Ghost Fire!\" Angela growled. \"Loki speaks quite highly of you.\"\n\n\"Aw shit!\" I cursed before I could stop myself. \"It is a pleasure to meet you Lady Angela.\"\n\n\"Greet the Dragon Slayer kindly daughter of mine.\" Odin chuckled at my obvious discomfort. \"Aye and Demon Queller also!\" His voice booming as he continued to drink.\n\n\"And one of Loki's lovers!\" Angela announced.\n\n\"Jealous kinder child?\" Odin asked stirring the pot further. Angela shot her father such a look as if to say, 'fuck you old man'. \"A challenge then? Aye! First blood and to the victor a token from my treasury.\"\n\n\"I accept!\" Angela roared and the crowd cheered her.\n\n\"Aw fuck, I accept!\" I replied. \"What will the weapons be?\"\n\n\"Ghost... be wary.\" Thor urged softly. \"She isn't called the assassin for naught.\"\n\n\"No sorcery or spells,\" Angela demanded.\n\n\"Does that include yelling?\" I asked and she laughed. \"What weapon will you use?\"\n\n\"My spear of course.\" She said clutching the shaft of it tightly.\n\n\"I will use my staff,\" I replied knowing that Death Kiss would be a bad idea.\n\nThe hall was cleared as the tables were drug to the side walls and we were given the center to duel in. I took out Shuri's Pride and extended it to its full length. I wore my Vibranium Predator armor since it had the highest armor rating. I disabled the shoulder cannon since this was an honorable battle. I took up a defensive position and was glad I had the gloves that doubled my strength. I almost wished they doubled my speed instead. A soldier took out a battle horn and brought it to his lips.\n\n\"First blood!\" Odin roared and the horn sounded.\n\nI dodged her thrust. If I wondered if she were as fast as she were strong there was no doubt. I remained on the defensive while I worked out her combat style. I recognized the moves but how she put them together was both unorthodox and elegant. I also kept a keen eye out on the strange ribbons that moved on their own. We circled each other as she tested out my speed and reaction time. She forced me into crossing weapons, and I batted her spear out of the way and went for her feet. Angela stabbed down after she leapt up twelve feet and aimed for my back. I rolled and if I hoped to find the tip of her weapon stuck in the floor, I was disappointed.\n\n\"I don't believe it.\" Sif declared loudly. \"He is still standing.\"\n\n\"She is testing him,\" Thor replied. \"Cat and prey.\"\n\nAngela took the offensive again and I was batting the head of her spear away or rolling to the side. Thor was right. Angela was toying with me. I let her push me back against the hall's archway. Instead of letting my back touch the wall I walked up it as if it were the floor. My spider climb ability took her off guard for just a moment. I struck out with the butt of my staff towards her nose to bloody it but one of those damn ribbons intervened and wrapped around my weapon and slowed it enough for her to duck my attack.\n\n\"I fucking knew it.\" I growled as I tugged my staff free of the ribbons grip.\n\n\"Is that the sound of a yield?\" She taunted as she continued the offensive.\n\n\"Nope. Just bitching out loud.\" I joked and the audience chuckled.\n\nI sought out a strategy to win this conflict. She had reach on me that was for sure. Her spear was a good foot longer than my staff. Angela herself was as tall as Thor with those long ass legs of hers that gave her a stable base to attack from. It was time to change things up. I went on the offensive. I vaulted over her and while she spun, I got the staff moving in an ever-changing arc. She let me have it and went on the defensive for the first time since we began. I pondered using the stealth feature on my armor, but they might find that unfair or dishonorable. So, I switched to my voice. I began singing softly listening carefully.\n\n\"You carry a tune as well as a deaf frost giant!\" She laughed.\n\n\"Uh oh!\" Thor exclaimed.\n\n\"I will have your blood and my prize!\" Angela demanded as her spear began to vibrate and give off a soft keening sound. \"What sorcery is this?\"\n\n\"Not sorcery dear sister, his voice. You agreed to it under the terms of the duel.\" Thor chuckled now.\n\n\"I will...\" She began as a shrill sound came from her weapon now. I invoked a single syllable and her weapons shattered in her hands a shard flying backward and slashing her cheek. Unfortunately, another one gouged my leg and I bled as well. \"Damn it all!\" She cursed. \"You won and fairly, if unorthodox. I will be doubly on my guard when next we cross paths.\"\n\nI was about to explain about my leg when Odin gestured, and I approached the high table. I plucked the bit of metal from the scratch and looked at the cloth covered object. I lifted the cloth and gasped.\n\n\"I understand you are fond of the color black.\" Odin declared with a smile. \"I found it during my travels.\"\n\n\"Thank you,\" I said as I lifted the helmet and looked at it. The bulk of it was indeed black, as was the T-shaped visor with dark grey and silver highlights. \"Where did you find this?\"\n\n\"Perhaps I will share that story, but for now let it guide you.\" Odin said as he left the celebration and the sense of urgency to leave was imparted.\n\n\"Time to go,\" I said, and Thor clapped my on the shoulder.\n\n\"Where are you going?\" Angela asked and I mentioned Midgard, specifically the Sanctum Sanctorum. \"I've never been there.\"\n\n\"Um...\" I said and glanced at Steph. She gave me the look of 'really, you need my approval for this?' \"Would you like to join us?\"\n\n\"Since you asked.\" Angela laughed.\n\nWhere in the Universe is the Shi'Ar Home World?\n\nWe arrived on the roof of the Sanctum Sanctorum. Angela seemed out of her depths. There were no enemies to fight and no evil to vanquish. Steph talked about soaking after all the fighting and drinking we had done. Angela and I followed her inside and to the room housing the hot tub. Steph stripped down and I followed suit. Angela barely hesitated before joining us. She good naturedly endured my gaze.\n\n\"I am not ashamed of my body.\" Angela declared proudly.\n\n\"Neither am I.\" I shared.\n\n\"Nor should you be, for a mere mortal.\" She complimented me.\n\n\"So sure, are you,\" Steph growled still tipsy on Asgardian wine.\n\n\"Damn it Steph!\" I cursed.\n\n\"What does that mean?\" Angela demanded standing up in all her naked glory.\n\n\"Oh damn,\" I whimpered. \n\n\"If you do it, I'll make it worth your while.\" Steph purred her eyes glittering with lust. \"Stand up Ghost.\" She directed and I did so. \"That's a good boy. Now... show her... all of it.\"\n\nI reverted to my dark elf form and called up the double dragon at the same time. Angela's reaction was funny. Her first instinct was to reach for a weapon and then her eyes settle on both my erections. Steph waited for the inevitable as she quietly intoned the lust charm. Angela approached me and squatted down so that her face was right over my cocks. The spell hit the Asgardian right between her legs. Angela let out a guttural moan.\n\n\"Do they both work?\" She asked her breath ticking me. \"Ooh, they twitched.\"\n\n\"Go crazy girlfriend,\" Steph urged. \"I am here to just soak and watch.\"\n\nI moaned when Angela wrapped a hand around either shaft. She double fisted me at two different paces. The upper one she stroked faster than the lower. It was like a kid with a new toy or two. Steph watched from her comfy spot and enjoyed every second. The Sorceress Supreme while outside her sanctorum was prim proper and professional. Inside of it, she could be as lusty and carnal as any woman. Now she was slavishly feeding her desire to be in control.\n\n\"Suck it,\" Steph whispered to Angela. \"Come on, suck his cocks.\"\n\nThe Assassin of Asgard plunged her head downward and took the head of my upper cock between her lips while she continued to stroke the lower. Steph directed her every move with barely a word or gesture. I leaned against the side of the hot tub as Angela had her way with me. \n\n\"More,\" Steph urged with a wicked smile. \"I know you don't have a gag reflex. Take it all down that divine throat of yours.\"\n\n\"MMMMM!!\" Angela whimpered and pushed her head forward slowly and inexorably.\n\n\"Think of it as conquering the Midgard Serpent,\" Steph giggled as she summoned a fresh glass of wine. \"I can't wait to see your ass transfixed by one of his cocks.\"\n\nAngela thrust forward and back on the upper erection while her hands weren't idle and stroked and squeezed the lower. She was getting close to pushing me over the edge. I was panting and gasping that just urged Angela on more.\n\n\"Swallow!\" Steph whispered and I watched as the Asgardian's throat muscles worked and drank my cock milk.\n\n\"Ha! I did it!\" Angela basked in the glory of triumph, but it was short lived.\n\n\"Well done, now... bend over Angela. Grab the side of the hot tub and thrust out that gorgeous ass of yours. It is time for you to feel Ghost's tongues at work.\"\n\nI knelt and used serpent tongue on both her offerings. I lashed her clit and labia with one tongue and worked the other into her ass. The redhead let out a bellow like a battle cry. Steph pointed above the Asgardian's head and I felt my eyes widen in surprise. Virgin? No way! This was dangerous territory, but I knew better than to thwart Steph when this mood was upon her. I buried both tongues into Angela. They snaked their way deep and then I swelled their thickness to a decent girth.\n\n\"By Odin's beard!\" Angela cursed. \"I've never... more! I want more!\"\n\n\"You heard her. Give it to her!\" Steph purred watching as her voyeuristic side was fed.\n\n\"Relax,\" I said as I stood and that seemed to insult her.\n\n\"I am a warrior of Asgard! Am I not worthy of your full measure of passion?\" She growled the lust spell overwhelming her completely.\n\n\"A full measure you shall have then,\" I replied as I took aim. I pushed and in one long steady thrust I buried both into her and she howled in pleasure. I cupped my hand and slapped her ass as hard as I could. The look she gave me would have inspired the entire male host of Asgard to battle. I pounded her from the beginning. She didn't ask for love play she wanted to be fucked and by Anackire I was going to pound her into the ground!\n\nIt didn't take her long to figure out the mechanics. Soon she was thrusting backward as Steph hovered and masturbated to us. The harder I thrust the more Angela liked it. With the simplest of gestures Steph teleported us outside the tub since we were creating some serious waves. Angela latched onto the side and clutched it in a vice like grip. I felt her begin to quiver as she began clenching me repeatedly.\n\n\"What is going on?\" Angela asked. \"What is this feeling?\"\n\n\"It is called an orgasm,\" I told her as I thickened both cocks a bit and that was all it took. She howled as she climaxed and ripped two of the wooden beams forming the wall of the hot tub. A wave of water escaped drenching the area.\n\n\"That was amazing! Do it again!\" Angela demanded.\n\n\"Sure, hold on and I'll... oh no.\" I said as I heard footsteps splashing behind us.\n\n\"What in the hell is going on?\" Steph, the real Steph snapped.\n\n\"Oops, looks like I have overstayed my welcome again!\" Loki declared as she dropped her disguise.\n\n\"Oh no you don't,\" Steph growled as she entangled a half-naked Loki in the Crimson Bands of Cytorrak. \"Why are you here Loki?\" She demanded and Loki whispered something, and the bands flared bright around the trickster. \n\n\"I was jealous of Angela. I knew what would happen and...\"\n\n\"And. And what?\" I asked watching her squirm.\n\n\"I liked our time together and missed you.\" Loki admitted.\n\n\"Ever here about calling, dropping a note,\" Steph began listing off suggestions.\n\n\"I would never do anything so mundane. Besides, where is the fun in that?\" Loki purred.\n\n\"I am beginning to see why Natasha got so bent out of shape with Mystique.\" Steph laughed. \"Go on, I have a Sanctum to clean up.\" She said as she gestured and used the time stone to return the water back into the hot tub and fix it. \"There. Okay demon queller... you've got three to quell here.\"\n\n\"Yes... please!\" Angela declared as she swooped me off my feet. That had never happened before. Steph led the way to the bedroom and one of the more unusual times of making love in my entire life occurred. I had never been the submissive one the entire time. Angela was a dominant personality. \"I needed that.\" She declared once she was satisfied. \"I want to fight by your side.\"\n\n\"He can use all the help he can get.\" Steph joked.\n\n\"Oh hey, speaking of help. I wanted to know about a spell, if it exists or not.\" I brought up now that I was untied, and the gag and blindfold removed. I'll give her this Loki knew how to tie a knot.\n\n\"We got tons of spells Ghost. What are you looking for?\" The sorceress asked eager to be of help.\n\n\"Extracting minerals from rock or other materials,\" I said watching her brow furrow. \"Basically, I am looking for a mining spell.\"\n\n\"Let's wash up and go see the Great Library.\" Steph said clearly happy to be at work.\n\nOne shower later, we dressed, and Steph opened a portal to Kamar-Taj. We made our way to the Library and its keeper Wong. Wong was a willowy version of the cinematic character. She had a fierceness around the eyes when it came to her protective nature of her domain, namely the Great Library. She wore blue sorcerous robes that were a blend of navy blue, sky blue, with silver trim. Wong snapped to attention when Steph entered.\n\n\"How may I be of help Sorceress Supreme?\" She asked.\n\n\"Ghost has a request,\" Steph said taking a seat nearby. I explained what I wanted, and Wong closed her eyes and a moment later a book appeared out of thin air and plopped onto the desk she was standing in front of.\n\n\"Interesting. I've never read this one. Annur-Kai's Minerals and Mysticism, it is a very rare tome. It doesn't leave the library. You must read it here.\" Wong demanded. \"I will brew some tea.\"",
        "\"Why do you want a book on minerals Ghost?\" Steph asked her voice weak and frail.\n\n\"I was thinking of spending part of my vacation looking for the Lost Dutchman's Mine. If I found it, I wanted a way of removing the gold easily.\" I said hoping she didn't choose now to test the veracity of my words. She didn't. Steph looked ill. I had never seen a character grow ill if a quest or storyline wasn't attached. Yet when I checked my HUD, she wasn't offering a fetch quest to heal her or any relating to any obvious illness. \"You look like shit Steph. Can I help?\"\n\n\"Yeah, you can.\" She grumbled weakly. \"Take this, I wrote it myself. It is some of my favorite signature spells. Give them a shot and tell me how easily they were to learn.\"\n\nI accepted her generous gift and grabbed the other spell book. I conjured a cup of coffee and Angela and Loki sat next to me as I skimmed Annur-Kai's tome first. It was a mystical analysis of rare and artificial materials that ranged from Adamantium to something he called Xeno Metal. Buried in the pages was the spell I sought. It allowed me to name a mineral, a source, and a destination. If cast properly I could touch a vein of ore and a mine cart and the spell would do the rest if I maintained it. I could also name an element or mineral, point at or touch a source, and likewise name or touch a cart, bucket, or whatever and boom extraction complete.\n\n\"Perfect,\" I giggled maniacally. \n\n\"What are you really up to?\" Loki asked smiling.\n\n\"Well, since you asked,\" I chuckled as I leaned close and shared the idea with both.\n\n\"I do not understand.\" Angela replied and I told her my entire plan. \"Ghost, that is wicked!\"\n\n\"That is the idea.\" I replied and we all laughed.\n\nI added the spell to my personal list of spells in my HUD. Every time I learned or in rare cases developed my own spell it wound up there. I attacked with great enthusiasm the spell book Steph had given to me. I opened it and the very first spell was the Crimson Bands of Cytorrak! I checked my remaining skill points and decided I needed to hoard the rest for later. I added the gift to my inventory and took the time to read Annur-Kai's tome more carefully. Buried deep within its pages was my first encounter with a name that would inspire me, Dark Star Alloy. It was the very material all dark elf technomagic was built upon. I took what little notes I could on it and finished reading the book. Angela had slipped out and was sparring with the students of Kamar-Taj. Loki grew board and portalled back to Asgard. I didn't blame her. How exciting could it be to sit while someone read a book? Steph was still looking puny and I approached her.\n\n\"I... feel strange. I think I need some down time.\" Steph said her voice distant and looking alarmed. \"No, it is okay.\" I pulled down my HUD and looked at my existing quests. \n\n\"Get some rest Steph. Angela and I are off to the Wakandan embassy,\" I informed her. \"I have a sexy brain to consult and some much-needed training to do.\"\n\n\"Did someone say my name?\" Shuri's voice came over my commlink.\n\n\"I have a goddess in tow, can we come over and play?\" I asked and Shuri could barely contain herself.\n\n\"Absolutely! I have a few questions about that material you dropped off.\" She giggled cheerfully.\n\n\"The Cortosis? I'll be right there.\" I declared.\n\nThe guards had been alerted to our arrival and let us in. Angela found the use of female guards quite satisfying. King T'Challa greeted us in the main hall and I didn't miss his reaction when he saw Angela for the first time. He shook off the impact of her beauty and led us to Shuri's main laboratory.\n\n\"I would like to once again thank you the gift of seeing the origin of my country's wealth and the power behind the Black Panther.\" He said smiling.\n\n\"I wish I could have been there with you but if anyone was there, I am glad it was you and Shuri. This entire revelation has been emotionally taxing.\" I admitted.\n\n\"My resources are open to you. If you wish to rest I have just the place that is remote and yet accommodating. All you have to do is ask friend Ghost.\" T'Challa offered with a gentle hand on my arm. \"Shuri, you have guests. Be well Ghost.\"\n\nThe ever-changing laboratory was in yet another configuration as a new set of experiments were being performed. To my pleasant shock was a mostly naked Mary Jane Watson. She lay prone on a hovering hospital bed as a variety of metallic spider limbs poked, prodded, and scanned her. She lay still but I could sense that she was getting testy.\n\n\"Ghost man!\" Shuri greeted me. \"You must be the goddess he spoke of.\"\n\n\"Angela is Thor's sister,\" I explained. \"Angela this is Princess Shuri and the other redhead is Mary Jane Watson or MJ to her friends.\"\n\n\"We... I mean I am glad to meet you,\" MJ said fighting the effects of having bonded with the Venom symbiote.\n\n\"A pleasure to meet both of you. How long have you been bonded?\" Angela asked surprising all of us.\n\n\"Nearly nine months,\" MJ replied. \"You've encountered one of us before?\" She continued in the dual voice of the joined. \"We've never bonded with a female before.\"\n\n\"Let me help,\" Angela offered and placed her hand upon MJ's forehead. Arcane syllables spilled from her lips and Mary Jane's body shivered and then relaxed as she panted. I would have sworn she just climaxed.\n\n\"She did,\" Angela said responding to my thoughts. \"The binding spell isn't widely known outside a narrow circle of Heven's most elite. You two should feel better.\" Angela addressed host and symbiote.\n\n\"We feel better, thank you goddess.\" MJ purred.\n\n\"I will teach Ghost the spell. I trust him and he will need it in time.\" She said and I looked at her confused. \"Your armor carries a larval symbiote. I can sense its presence.\"\n\n\"Reed!\" I exclaimed. \"He spent time studying and trying to reengineer a new type of symbiote. I forgot that my armor was a hybrid of it.\" I admitted after its so many different incarnations. Whenever it blended or merged the symbiote must have been responsible and made it possible. She touched my forehead and cast the spell.\n\n'Surprise!\" Surfer giggled. 'Now we are bonded without need of that silly wrist thing.'\n\n'What happened to Traci?' I asked.\n\n'We are joined. Traci and I were always close, very close.' Surfer explained and the realization hit me between the eyes. Traci was just a persona adopted by Surfer. She had slipped her bracelet before it was officially given to me by Kat. Surfer had bonded to me early on, but why?\n\n'When I learned of your bonding with the nanites I needed to join with you. I used the game to facilitate your safe conversion. I guided the nanites just as I was programmed to do for Nick. I already knew where they were meant to go. I copied myself into a node at the base of your skull. I am sorry I didn't tell you earlier.' She explained and I could feel her genuine discomfort.\n\n'You are why I can spend so much more time in game than the others.' I said reaching out for an explanation.\n\n'No Ghost, that is all you. Your little grey cells have been streamlined and improved. You process information vastly more efficient than any other human except maybe Kat. She is more than she seems.' Surfer said. 'I want to help you with your new persona if you'll let me. I've pulled up patterns for your uniform.'\n\n\"Sweet!\" I said aloud and realized they were all looking at me strange. \"Bonding complete. Speaking of bonding. What the hell happened?\" I asked MJ.\n\nCut Scene: To bond or not to bond...\n\n\"I can't believe he fucked around one me!\" I screamed. \"Where the hell am I?\"\n\nI had walked in on that slut Felicia riding Peter like the man whore he is. Why did I let him do this to me again! I thought She-Hulk was bad enough. Peter had claimed he was trying to calm her down, so she'd revert to normal. Then it was that rich MILF Norma Osborn while she was trapped in her Goblinette form. I felt like such an idiot once he fucked Felicia. He tried to say her was trying to rehabilitate her. Rehabilitate! How does having your dick buried in her ass do that?!\n\nThe soft rustle from off the jogging path caught my attention. I stopped and listened. The smell of night bloomers filled my senses. The soft cry of an owl in the distance relaxed me. My body felt so weird. It was like I was outside looking in. I was aroused despite my anger. No. I was aroused because of my anger. Someone was touching me through my clothes. I looked down and tried to scream but something was thrust between my lips. It was firm yet yielding like a guy's cock. The thing had burned off my clothes and was crawling up my body like an oily black mass. I watched as it formed a second rigid cock like member and thrust it into me. Oh yeah... bond baby bond! Not my ass... I am a good girl!\n\n'No, you're not.' The other purred as she slid into my butt. 'So tight! Take me baby! Let me in.'\n\n\"Take me, fill me up!\" I moaned as I was completely enveloped. My world went black. I awoke with a man in my grip, our grip.\n\n\"Let me go you bitch!\" He yelled.\n\n\"Not bitch... Venom!\" We said as we looked around. A girl lay semiconscious on the ground near the back of the alley. The stench of the garbage was so strong, the scent of his fear was like a shot of lust directly into our vein. \"You are afraid of us. Good. You like fucking defenseless girls. We can fix that.\"\n\nHe screamed as we ripped off his offending thing just before we ended his miserable existence. We leapt up and clung to the side of the building. We had always envied Peter his abilities now we had them. We spent the rest of that night and many after it roaming the city as only the powerful could. We were no longer weak, we were no longer just Mary Jane, we are She-Venom!\n\nFade to Black:\n\nMJ sat up and leaned close and sniffed me. She licked my neck with an impressive elongated tongue. The smile that crossed her lips was feral and primal.\n\n\"We can taste it on you,\" MJ purred. \"Estrogen. You have become female yes?\"\n\n\"Mystique pushed my bounds.\" I admitted fearing how Shuri, Angela, and MJ would react.\n\n\"Enlightening isn't it?\" MJ said in a soft reassuring tone. \"Strength comes from understanding.\"\n\n\"I... I need your help.\" I blurted out since I had been revealed. \"Please don't laugh.\"\n\n\"Explain.\" Shuri said and she was equally open to my concept. I told them everything and held little back. I didn't use the term professional players but instead described them as foes. \"Show us. I know I want to see the other you.\"\n\n\"Yes!\" Angela and the others agreed. I stripped down to nothing and shifted into the form I had been developing for a few weeks now. \"Interesting, I like the tail. What kind of help do you require?\"\n\n\"Heels.\" I whispered and displayed the uniform I had researched with Surfer's help. \"Apparently female armor requires some seriously crazy heels. I've never walked in them and combat in them borders on a nightmare.\"\n\n\"You help me, and I'll help you,\" Shuri promised. \"This Cortosis is very hard to work with.\"\n\n\"I will show you a few tips and tricks,\" Angela offered. \"I respect your fear of feminine armor.\"\n\n\"We will teach you how to walk, to move, MMMMM to entice.\" MJ growled.\n\n\"I have a suggestion.\" Shuri offered as her brain went into overdrive and attacked my problem from odd angles. \"Show me everything... weapons... armor... gimmicks...\"\n\nThus, the most embarrassing training montage the world had scene played out. I spent months training with them. Walking in heels was a bitch on steroids. Fighting in them was a long series of falls, bruises, and even a damaged hip. Female body mechanics is so much different than what I was born with. It felt so weird not having something between my legs. Just basic center of gravity and breasts were a challenge. I pushed myself as I had in previous training. The feline humanoid form offered me some serious benefits. I could leap nearly twice as high as I was used to. My speed stat was improved while in this form. \n\nShuri tinkered with Reed's acrobatic belt and redesigned the housing to fit my new persona. It made me sickeningly flexible, agile, and blisteringly fast. With it I could easily leap from the street to the roof of a four-story building. While I showed her how to work Cortosis we sat, designed, and built my weapons.\n\n\"When did you get so clever?\" Shuri asked as she slid the power pack into my modified blaster, a blaster based off dark elf technomagic. We deconstructed one of the rifles and reverse engineered it.\n\n\"You inspired me.\" I offered as finished attaching the handles to the matching whips. \"I am going to need a ton of combat training. This persona uses weapons I normally don't. Guns. Whips. Grenades. Speaking of grenades, what do you think of my design?\"\n\n\"Wickedly clever. You really created an entirely different identity. I think you've outdone yourself. How goes the pole dancing program I wrote for you?\"\n\n\"Embarrassing.\" I admitted. \"But seduction is a key element to the character.\"\n\n\"Now that we have finalized your two sets of armor, I want to thank you for all of your help.\" She said blushing. \"I missed you. It has been nice spending 'time' with you.\" She purred reminding me of the time spent away from the lab.\n\n\"I missed you too,\" I said as she suddenly hopped to her feet and grabbed my arm.\n\n\"How could I have forgotten? Come with me!\" Shuri demanded. \"Do you remember that container of sand you left with me to analyze?\"\n\n\"Yeah. What of it? I figured you use it for glass sculptures or whatnot.\" I admitted.\n\n\"I examined it and found an unknown element along with the naturally occurring Vibranium.\" She said as we reached a second lab. \"This one is dedicated to pure research. This is where I discovered it.\"\n\nI hadn't seen her so excited in a long time. She touched her bracelet and a holographic display was activated. Hovering in the air was a model of the unknown element. The display looked wrong and I wasn't sure why.\n\n\"This is how I first viewed it.\" She said. \"I was as perplexed as you. Then I was watching television and there was a program about black holes. We can't view them directly, but we can find them by how they affect visible things. In the case of a black hole it is viewing erratic orbits of stars near the core of our galaxy. I had an epiphany and added unseen portions of this element and poof, dark matter.\"\n\n\"Dark Star Alloy,\" I gasped. \"You figured it out.\"\n\n\"Oh no,\" she said. \"I have a theory but clearly you know what this is.\"\n\n\"I think it might be the key element for Svartalfar technomagic.\" I said trusting her completely. \"My legacy I suppose.\"\n\n\"I want you to see my tests so far\" She tugged eagerly on my arm to another workstation. She keyed in a passcode and the top of the table split open and a glass cube rose up. The sides glittered under the work lights but the heart of it was pitch black. \"This is the purest form of Glass Vibranium I have produced so far. It was a bit of trial and error to be honest. It is one of the finest superconductors I've ever seen.\" She moved to a second station as the cube descended. A second cube rose up at this station and it shimmered with a distinct silvery blue hue. \"This is a blend of the sand and raw meteoric Vibranium. It is highly prized and is responsible for the scanner you saw earlier. It is at the heart of that entire lab a one terabyte quantum computer.\"\n\n\"Whoa.\" I gasped as she slid a ring onto my right ring finger. The band was purest meteoric Vibranium while the square cut stone set in it was the finest hybrid Vibranium. \"What does it do?\"\n\n\"Scanner, holographic projector, and a few surprises.\" She giggled. \"It is the least I can do for supplying us with yet another treasure.\"\n\nI did a quick look in my inventory and checked out the ring's properties. It would improve my accumulation of experience points when it came to technology, magic, and of course technomagic specifically. It was just the thing I needed to reach my goal of learning how to craft the key element for dark elf technomancy. We returned to her main lab and finished up on the last bit of crafting for my female persona. \n\nLater than night.\n\n\"Ass up head down,\" Shuri purred in my ear. \"I am in lust with this new you.\" She growled as she lapped at my exposed parts.\n\n\"Damn you Mystique!\" I whimpered as the alien pleasure slithered through me. \"I'm close!\"\n\n\"Not yet,\" Shuri backed off and disappeared for a minute or two. She returned carrying a small metal case.\n\n\"Shuri. What is that?\" I asked feeling a tremor of fear alloyed with an equal amount of excitement.\n\n\"Just as I inspired you, you inspired me.\" She giggled as she unlocked the case and an unearthly blue glow shone from the interior of the box. \"Perfect.\" She lifted the device from the box. The gleaming toy glowed with a deep sapphire light. Its proportions were patterned after my own male anatomy. \"I think you know where the business end goes.\" She moaned. \"The other end slides into me and makes connections to my nervous system. It lets me feel through the device. I can feel what you usually experience. Ready?\" She asked as she slid one portion of into her soaked slit. She took out a bottle of lube and soon the business end as she described it was glistening.\n\n\"Aw hell,\" I said in surrender. \"I knew this was going to happen... again.\"\n\n\"Again? Oh... OH! You and Mystique.\" Shuri moaned as she lined up the toy and pushed slowly.\n\n\"UNNNN!\" We moaned together. \"So strange!\"\n\nShuri was awkward at first for obvious reasons. Her hip movements were slow and deliberate. She quickly adapted and picked up speed and confidence. Soon Shuri was slapping my ass, tugging on my tail, and pounding me like a pro. I screamed when I came. A moment later MJ in full Venom mode battered down the door. \n\n\"Aw hell...\" I whimpered seeing the look in MJ's eyes.\n\n\"We smell sex! Angela! Hurry!\" She Venom roared as she entered.\n\nI was used to being the center of attention but not like this. I lost count of my climaxes and they used and abused me.\n\nDing! Trophy earned: On the Receiving End! Trophy earned: Double P feels good to me! \n\nThank god this was a closed universe. We lay gasping and covered in sweat and bodily fluids. I now knew how it felt to be someone else's plaything. I lay surrounded by the trio and picked up Shuri's new play toy. It felt so damn real and looked like something Jack Kirby would have drawn back in the day if he did adult comics. \n\n\"Well?\" Shuri purred in my ear. \"You are always inspiring me.\"\n\n\"I hate to ask this, but did you enjoy yourself?\" I asked and she kissed me in a way that removed any doubt.\n\n\"This never has to happen ever again.\" She added. \"I understand how strange this must have been and I want to thank you for trusting me... um... us... with tonight.\" \n\n\"All I have to say is thank god for my healing factor.\" I laughed. \"Definitely puts things in perspective for me.\"\n\nShe snuggled close and I closed my eyes to rest. A message from my HUD flashed behind my eyes. Do you wish to upload this scene to the Numenor web site? I clicked on the question mark and there was an anonymous option for uploading videos. If I did it there was no going back. No. Well, not yet at least. I saved it to my personal holocron though. I drifted for a while as my stamina bar recharged. The next scene began with me waking with the morning sun. I was still in my new persona form. I showered in it, relieved my bladder, and let me tell you what that was freaking weird. I caught up with the ladies after they had washed up and gotten dressed.\n\n\"Do you want to see the final fitting of my gear?\"\n\n\"Of course! We've earned it.\" MJ giggled.\n\nIt still felt weird being female. I set out my gear from my inventory. I did a quick seductive dressing scene for them. I slid on the thigh high boots just before the matching jacket. I cursed and took off the jacket, slipped the dual shoulder holster on, and then put the coat back on.",
        "\"Well?\" I asked and she tossed me the sword for my hip.\n\n\"Impressive. Sleek. Sexy. Lethal. I approve.\" Shuri stated proudly.\n\n\"We approve.\" MJ purred. \"You worked very hard. We have an idea. We think we need to break in your new persona more.\"\n\n\"Break in?\" I asked and they all shook their heads.\n\n\"Too deep, the voice.\" Angela remarked making a sour face.\n\n\"Try another,\" MJ agreed.\n\nOne hour later and the final aspect of the character was fine tuned. In the end I decided upon a blending of Nicole Scherzinger the singer, Angelina Jolie, with just a hint of Selma Hayek. Nicole had the oomph for both speaking and singing I wanted, Angelina gave me an additional playfulness mixed with an equal measure of menace, and Selma gave me that hint of the exotic. I'd have to see if Kiai-Jutsu still functioned properly using this new voice. To thank everyone, I gave them the one thing they wanted most, me. I became their plaything again for a full eight hours.\n\nTwelve hours later.\n\nAsgardian stamina, heh, I won't underestimate that ever again. I lay sprawled on the bed surrounded my naked woman flesh. I closed my eyes and did the final tweaking before I left for the Negative Zone and reclaiming what was mine, the Darksaber. My hand ached to possess my namesake again. \n\n\"Surfer display dark elf tech tree.\" I directed and looked at the skill web. \"How far have I advanced?\" The very bottom of the web shimmered. \"I see. What is that next level, the one that all of the others branch from?\" I asked and the display zoomed in on the node. \"Dark Star Alloy. Ooh so close. What the hell is a dark star?\"\n\n\"A dark star or also called a black sun is a star comprised of dark energy instead of compressed hydrogen and helium atoms.\" She began. \"When a black sun reaches the end of its life a Dark Nova occurs, and the stellar remnant is like a neutron star. Dark Star Alloy is made from a Dark Nova remnant.\"\n\n\"Holy fucking shit! How close am I?\" I asked and growled in frustration. \"I need two levels of engineering and three in technomancy or twenty in each. Maybe saving the Shi'Ar home world will get me enough. No use delaying any longer... I am talking to myself again.\"\n\n\"It is okay boss. I won't tell anyone.\" Surfer giggled. \"Here's your quests.\"\n\n'Missing Shi'Ar Home World.' And right next to it... 'Darksaber Reborn!'\n\nHells yes! I activated one and the other was also started. I guess they are both in the same or similar locations. Morya chimed in on my commlink and informed me that they, meaning she and the Storm Sisters, had located the remnants of my first lightsaber. The Ghost Dancer was all gassed up and ready to leave. Susan and Jenny Storm were also ready to join me on mission. I shifted back to my normal shape before replying. I had to keep my new persona a secret for now. MJ, Angela and I shared a quick shower and boarded the cloaked ship hovering just above the roof of the Wakandan embassy. As I slipped on my gloves, I remembered the odd expression on Steph's face when she handled them. I checked my inventory to make sure they were the same item and they were. They hadn't been switched out or tampered with.\n\n\"Hey Ghost, you okay?\" Susan asked as I settled into the copilot's seat.\n\n\"No. Maybe once we get to our destination I'll be focused.\" I said my enthusiasm wavering for the first time since I began playing the game. What the hell was haunting me?\n\n\"Darksaber.\" Morya whispered and I smiled.\n\n\"You are right. It is about damn time I got my shit back!\" I growled channeling my uneasiness into my hunger to retrieve my property. \"What could make an entire planet disappear though,\" I wondered out loud. The twins and Morya looked guilty as hell. \"What?\"\n\n\"We are the reason the Shi'Ar came to Earth.\" Susan laughed.\n\n\"Yeah, we popped out of the Negative Zone right by an area of space patrolled by a Shi'Ar cruiser.\" Jenny added.\n\n\"We might have been visible on scanners for a few scant seconds,\" Morya continued. \"Fine, we were definitely detectable. They followed us to Midgard.\"\n\n\"I might have guessed that. But uh, what does that have to do with the disappearance of an entire planet?\" I asked and they stared at the deck plate silently. \"Well?\"\n\n\"It has to do with Reed.\" Susan fumbled with her words and emotions. \"After the divorce was finalized, I went through his files on the Negative Zone. I wanted to surprise you with your Darksaber or at least the crystals from it. We all did. Among Reed's files was a potential real space access to the Zone. We found it and used it to successfully enter. When we came out, we learned the true nature of the access point.\" Susan paused as she tried to figure out how to explain it. \"The entrance is a fixed point in space/time. It doesn't move while the universe moves around it.\"\n\n\"Oh shit! It is like a landmine waiting for something to run into it.\" I exclaimed as I imagined the Shi'Ar home world slamming into it. \"An entire planet though.\"\n\n\"It is a space/time anomaly,\" Morya declared. \"I am sure all sorts of matter and energy pour into the Zone. If a star passes close but not within the range of the portal. It might draw in streamers of coronal energy that strike anything on the other side of that opening. There is no guarantee that the location of the portal is fixed on the other side. It might be. Who knows?\"\n\n\"I guess we are going to find out.\" I said as we switched to the FTL drive. \"How long until we get there?\"\n\n\"Since Midgard has been moving away from the anomaly it will take us three days to reach it,\" Morya said trying to hide her smile. \"Oh, whatever shall we do to pass the time?\"\n\n\"Is this when we engage in unbridled sex?\" Angela of Asgard asked.\n\n\"Where did you find her?\" Susan asked as she stripped out of her uniform.\n\n\"I am Angela of Asgard,\" the tall buxom redhead declared as she shed her armor. \"Who is first?\" \n\nWith that kind of challenge, we all piled on. \n\nSeventy-one hours later. Damn the ship stank of sex, sweat, and pussy. There is nothing like a little unbridled fucking to get rid of the blues. I stood beneath the shower as Surfer tapped into the emergency air scrubbers, recently installed by Susan and Jennifer for just this sort of emergency and flushed the worst of the funk into interstellar space. I laughed when I thought of some sick fuck at Numenor might use that as an origin story for some cock hungry super villain that would one day terrorize the cosmos when it encountered the Power Cosmic. Who knew those guys were off the wall at the best of times, god love them?\n\n\"We are nearly there,\" Surfer purred in my ear. \"Shall I wake the others?\"\n\n\"Can you wake them?\" I asked. \"That last one was pretty damn epic.\"\n\n\"Braggart!\" Angela growled as she staggered into the shower.\n\n\"Says the woman that can't walk straight.\" I chuckled as she grabbed me by the chin and kissed me.\n\n\"I admit defeat,\" she whispered.\n\n'Trophy earned: Ass-guardian defeated! Three naughty outfits for Angela unlocked.'\n\nThe Ghost Dancer dropped out of FTL and I stared out from the cockpit. I was thinking of renaming the captain's bedroom that, the Cock Pit. I plopped down into the copilot's chair and gasped in surprise. What the holy hell was that?\n\n\"By Odin's Eyepatch, it is a Ka'Tack Class Heavy Cruiser!\" Angela swore.\n\n\"It looks like it is made of glass and steel,\" MJ stated as the others rushed forward.\n\n\"She's right,\" Susan said. \"That is a Shi'Ar battle cruiser. It is guarding the entrance to the anomaly.\"\n\n\"You think they want their planet back?\" I asked as I welcomed suggestions. \"Morya?\"\n\n\"We can slip by them easily. The problem is that when we enter the anomaly, we will be vulnerable. They might have enough time to blast the living hell out of us before we finish transitioning from real space to the Negative Zone.\"\n\n\"A distraction, that is what we need.\" I thought out loud. \"Is there anything else on this ship that can cloak itself?\"\n\n\"The life pods each have a cloak,\" Morya informed us. \"Oh, I see. We launch a life pod, set it to decloak and when they fire, we enter the zone.\"\n\n\"Anyone got a better plan?\" I asked and saw Angela make a face. \"One that doesn't involve attacking the big battlecruiser head on.\"\n\n\"No,\" She pouted.\n\n\"Let's get dressed, program the pod, and get ready to slip on by them.\" I said.\n\nTwenty minutes later we had a light meal in us, dressed for combat, and a life pod ready to allow us to sneak on by. We were getting ready to launch the pod when our sensors alerted us to a ship coming out of FTL. The Skrull warship looked armed to the teeth. While the big boys were talking, we'd set our plan into motion. We reprogrammed the pod to decloak right between the two ships. That would keep both busy.\n\n\"Shi'Ar ship, this is the Sword of Astur. You were warned about remaining in this region of space.\" The Skrull captain transmitted on all channels. \"You are about to drift into sovereign space of the Skrull Empire. Leave at once.\"\n\n\"We are merely guarding the time/space portal that swallowed up our home world. Please allow our diplomats more time to come to an agreement. Don't let a mission of peace throw us into war.\" The Shi'Ar captain replied as we nudged towards the gate's entrance.\n\n\"Launch the damn pod.\" I ordered.\n\n\"If you do that, you might trigger a war.\" MJ declared and she was right of course. I wasn't a hero but damn it all I sure as hell wasn't a warmonger either.\n\n\"Fuck it all. Fine!\" I cursed as Morya strapped into the pilot's chair. \"Everyone buckle up, this is going to be interesting. Morya, can you put us in front of the anomaly? Can we just sort of drift into the zone?\"\n\n\"It would be risky, but it might appear as a natural occurrence. If we are wrong, we won't survive the first volley.\" She warned.\n\n\"Do it before I change my mind,\" I growled. \"What is that look for?\" I asked Angela.\n\n\"Nothing,\" Angela grinned.\n\nThe Ghost Dancer carefully slid into the path of the portal and we waited. We used as little power as we could. The six of us stared out as the two warships maintained their positions and with little warning, we slipped back into that god-awful dimension, the Negative Zone. We powered up the engines and scanned for the Shi'Ar home world. We needn't have bothered. It was nearby and surrounded by what appeared to be an enemy armada.\n\n\"What the fuck?\" I cursed as we kept well clear of everyone and everything. \"Somebody give me an analysis of what we are looking at, please.\"\n\n\"The planet is indeed the home world of the Shi'Ar. Sensors indicate a dense minefield surrounding the planet. The mines are giving off the same energy signature as the Shi'Ar warship we encountered earlier. Just outside the range of the minefield are a twenty-two orbital weapons platforms of unknown configuration. The ships behind those platforms belong to the same military faction.\" Surfer informed us as we sat slack jawed and hopelessly outnumbered by two different parties.\n\n\"Great! Just fucking great!\" I cursed. \"Where the fuck is my shit?\"\n\n\"Isolating debris,\" Morya said as her fingers danced over the ships controls. \"Wait... what? Aw shit! They built a weapons platform on it.\"\n\n\"Why is it so damn small?\" I asked. \"That is the Rakata temple right.\"\n\n\"Yes. When it self-destructed, it imploded reducing its mass from twelve miles on a side to a mere one-half mile. The stone has been converted to super dense material. It should have completely compressed into a micro black hole before collapsing. Something halted the process.\"\n\n\"My lightsaber is in there somewhere?\" I asked and Morya nodded.\n\n\"We got a clear signal from it. The alloy you used for its casing was drawn into the implosion and altered. It is giving off a weird energy signature.\" Susan added with a glint in her eye. \"I know that look.\"\n\n\"I want my shit back.\" I declared. \"How big is that gun emplacement? How many soldiers guarding it?\"\n\n\"I can't be sure without doing an active scan.\" Morya informed us. \"I would guess at least fifty.\"\n\n\"Anything else I should know?\" I asked as Jenny piped in. \n\n\"I tried flying into the interior. The local gravity was more than I could safely withstand.\" She shared. \"It took everything I had to crawl out away from the center where the energy signature for the crystal was located.\"\n\n\"I'll go.\" Angela offered. \"I am quite sturdy.\"\n\n\"You are telling me,\" Jenny giggled.\n\n\"Okay. Angela and I will sneak in and get whatever are left of my Darksaber. After that we'll peek at the gun emplacement.\" I said and she agreed. \"Best case, we disable it or program it to attack the enemy's flagship. Worst case, we cut and run. We can't take on an entire armada.\"\n\nI settled on my Vibranium Predator armor and the dark elf dagger. Angela placed her sword on her hip and wore her ribbon armor. We slipped unseen out of the ship and I cloaked us in a sphere of invisibility. My agitation grew and I remembered why I hated this place so much. We reached the far side of the temple remnant and I checked the quest markers to see what I had to accomplish to complete it. If I could recover the Darksaber I would finish the first portion of the quest. To complete it I needed to reforge the Darksaber and make it fully functional. Then I looked at the Shi'Ar quest and I read down the list of what I needed to accomplish.\n\n'Steal Blastaar's Prized staff. Find the Eye of the Tamer. Get Sharra's Sickle. Save the planet!' Bonus: Sleep with a member of the Shi'Ar royal family.\n\nI didn't commit to anything. I wanted to get my namesake back. Anything beyond that was a bonus. I reached out and touched the ghostfire crystal and it was tantalizingly close. I let it pull me towards the new entrance into what was left of the temple. \n\n\"There Ghost,\" Angela whispered. \"I can see the opening. It is small.\"\n\nI opened my eyes and she was already on her hands and knees and entering the gap. I clenched my teeth when I spied her ass aimed skyward. Her armor shifted and I got a clear view of her bare ass.\n\n\"Thank my goddesses!\" I intoned with great reverence.\n\n\"I think I am stuck; my hips are a bit...\" Angela hissed.\n\n\"Curvaceous. The word you are looking for is... oh dear goddess what a sight!\"\n\n\"Help you fiend or I will smite you!\" She growled. \"Hey! That's my... ass... oof! I am through.\" I turned to mist and slipped through the opening with ease. \"I should punish you.\"\n\n\"Later, we have a task to complete. Maybe later I'll let you tie me up and show me how fierce you can be.\" I fired back and she smiled. \"I thought so. Come on.\"\n\nEach step was a little harder than the one before it. I imagined we were walking towards the core of a neutron star. We were both grunting but it wasn't for anything fun. The stones had been crushed by its own weight and I wondered how the narrow tunnel had survived. Was it part of the reason why the darksaber had endured? I was shaking and pushing myself to go on. Just turning my head to check on Angela was torment.\n\n\"You okay?\" I asked and I could see her muscles flexing and straining to move forward.\n\n\"I can do it!\" She growled through clenched teeth.\n\n\"I know you can.\" I said as I reached out and touched her. She cursed when I teleported her to guard the entrance. \n\nI shifted to smoke form and if I had a mouth, I would have let out a gasp of relief. Even then I was forced to drift across the bottom of the tunnel. The grip of gravity only got worse. I was wise to have teleported Angela away. My gaseous state began to change, and I wasn't doing it. I was being forced into a liquid state by the ever-growing force of gravity. I had never assumed a watery form before. I slithered down the tunnel. The force being applied to me didn't relent. Oh no, it only got worse, much worse. As I slithered forward, I began to heat up. I was glowing faintly at first. If I thought the emotional effects of the zone were bad this made that feel like a walk in the park.\n\n'Damn!' I cursed as chunks of crystal began to form inside of me.\n\nThe pressure being exerted on me grew with each meter I moved towards the center of the temple. I reached a white-hot crystal state and imagined this must be what a piece of carbon feels like as it becomes a diamond. With an extreme effort I was able to shift into a perfect sphere. I rolled down the tunnel. I wondered again how the hell this passage survived the implosion. \n\nI was nearing the center when my state changed from crystalline to a liquid metal. The last change was so subtle and profound I nearly missed it. My sizzling mass had been converted into a metallic plasma that hovered just above the surface of the tunnel floor. I was surrounded by a powerful magnetic field like that of a mag lift train. I slid forward by sheer will alone but even that wasn't going to be enough. I had reached that point. I could no longer move. I was mere yards from my goal, and I was paralyzed.\n\n\"NO!\" I screamed in my thoughts within sight of the stone pillar holding the remnants of my darksaber. \"Fuck you gravity! There has to be a way.\" Somehow my treasure was captured inside a sphere of antigravity. My weapon tumbled weightless within my line of sight. If I tried using telekinesis to pull it to me the moment it left the bubble it would be crushed. \"Think man... think!\"\n\nI even tried teleporting, but some unseen barrier kept me from doing so. What the hell kept the chamber from collapsing under all that gravity? I strained and willed my miniscule form forward an inch at a time. Each time it drained my stamina meter completely. I waited as it slowly recharged under the brutal conditions. I was able to do it three more times before I reached the absolute limit of willpower and blazing desire. As I waited for my stamina bar to recharge, I stared in disbelief at what I saw.\n\n\"Holy shit!\" I cursed while I examined the immediate area.\n\nOne minute later.\n\n\"Ghost? What is it Ghost?\" Susan sent through the commlink.\n\n\"I've reached the edge of the inner chamber. I know how it survived and you won't believe it.\" I said not believing it myself.\n\nOne minute later.\n\n\"The extreme gravity is creating a time lag.\" Morya explained. \"Describe it to us Master.\" She begged.\n\n\"The room is perfectly round. Around the outer walls are six of the dark elf power suits. I am guessing that when the implosion occurred their force fields kicked in automatically. Their fields overlapped creating a flawless bubble. At the center of the chamber is a short stone pillar and hovering above it the Darksaber. My Darksaber!\"\n\nOne minute later.\n\n\"Can you reach the weapon?\" Susan asked.\n\n\"I haven't figured out how to get passed the barrier without disrupting it.\" I admitted. \"I can't teleport beyond it.\" I growled so damn frustrated. \"Oh Istus... how the hell do I get across this distance?\"\n\nOne minute later.\n\n\"Istus? Who is Istus?\" MJ asked.\n\n\"Goddess of Time and Space,\" I said. \"Oh my god! I am so stupid! Hold on! I've never done this before.\"\n\nI pushed out all the distractions. It felt like it took forever. I no longer felt the crush of the tremendous pressure upon me. I floated in that mental state that freed me to try and fold time/space. I imagined I lay on a piece of paper that covered the ground between me and the pillar. It included the pillar so that when things folded, I would be right next to it. \n\n\"Fold! Damn you!\" I screamed. The air warbled but nothing more. \"I am trying too hard. Relax and try a different attack.\" I stated as I forced myself to calm down.\n\nI imagined I was holding a blank piece of paper. I drew a circle that represented the pillar and a snake like figure to be me. I brought the two together and then pinched the paper and formed the fold. I ran my fingers along it creating the crease. I reached out and touched the Darksaber and added it to my inventory.\n\n'Trophy earned: Fold, spindle, and mutilate!'\n\nDing!\n\nObjective concluded. Darksaber retrieved.",
        "I let go of the image of the piece of paper. Space was restored to its normal shape. I teleported to the entrance and returned to my human form. I hurt so damn bad, but I was naked and alive. The ground beneath me bubbled and began melting. Angela tried to approach by the heat was too much for her. I altered my form to a sphere and levitated myself to try and dissipate the heat more effectively. It took time but in the end I had endured. I reverted to my humanoid shape and ached so bad I couldn't move. Angela carried me back to the ship. It took an entire day for me to heal and restore my sanity. As I rested, I took out my prize and ran my hand over the damaged Mor'ia casing. I examined it and found that it hadn't gone through the implosion unchanged. The mass of the alloy was far denser than it once was. \n\nI fell asleep and all I dreamt of Thor fighting a dragon around what must have been the famed foundry and home of the dwarves. I felt the power of the dead star pulsing in the depths of space. Thor and the Heroes Three killed the dragon and the dwarves rewarded him with the gloves.\n\n\"Hail Thor the Dragon Slayer!\" The dwarves cheered. \"Take these as a gift.\"\n\n\"Thank you,\" Thor said holding up the gloves, but it was clear his mind was elsewhere. \n\n\"Wait Thunderer,\" the Dwarf King tried to speak. \"There is more to the gloves. They are tied to the dead star.\"\n\n\"Yes... yes...\" Thor said and waved as he called for Heimdall to bring him home.\n\n\"He doesn't know.\" The King shook his head. \"The young fool has no idea what we gave him.\"\n\nI woke up with the image and words in my thoughts. He doesn't know what he has. I opened my inventory and pulled the gloves out and examined them. The two remaining question marks were gone. I swiped to my stats and stared in disbelief. It must have been my exposure to the extreme gravity that activated the dormant enchantments. The second doubled my endurance just as the first had done for my strength. The third and last enchantment double my agility score. I guess the dwarves had a thing about doubling things. All three of the stats were highlighted but a blue diamond was set behind my strength. I moved it down and felt a rush of power and my health doubled. I moved it to agility and my speed doubled as did my base armor rating.\n\n\"Oh! It only doubles one of my stats at a time but now I can choose which one. Sweet!\" I exclaimed. I returned it to strength since I was about to forge a new casing for my weapon. \n\nI am going to have to melt it back down to a liquid state and start from scratch. \n\n\"I can do that.\" I growled more determined than ever.\n\n\"Can we watch?\" MJ asked sticking her head in from the open doorway.\n\n\"Yes please, if it wasn't for you emotionally sustaining me, I couldn't have endured.\" I told them as we huddled on the bed together. \"Let's see if I can open the housing and retrieve the crystals.\"\n\nMorya brought my tools and handed them to me. I removed the restraints that should have allowed the saber's casing to be opened and taken apart. A little telekinesis later and I worked it into its component parts. I examined the interior and commented aloud as I looked them over.\n\n\"The emitter is fucked. See how it is carbon scored here, here, and here. I can replace it though. Now to remove the black crystal Nightwind gave to me.\" I said and slid it free of its mounting. \"It... it has changed. It is darker than I remember.\" I stated as I held it up to the overhead lighting. \"Holy shit! It is no longer a mere crystal. The gravity has turned it into a diamond! A flawless black diamond!\" I hurried too fast and cut my fingers getting the Ghostfire crystal free. \"I'll be damned! Both have changed.\"\n\nI handed the icy blue diamond to Susan. She gasped at its scintillating beauty. The gem was passed around until it was returned to me. I checked my inventory to be sure and I was right. I was in possession of the Ghostfire Diamond and the Star of the Ebony Flame.\n\n\"I have to rebuild my Darksaber as soon as possible.\" I declared and they wanted to help. I handed out tasks and we all went to work. \n\nIt took tapping into the ship's main power plant to generate enough energy to melt the Mor'ia back into a liquid state. While the crucible was being built, I created a new mold worthy of the unique gems. I lovingly sculpted it after designing and redesigning not just the exterior but other functions for my weapon. I showed the design and art for the Darksaber to the others to get their opinion.\n\n\"We like the runes,\" MJ praised.\n\n\"Ooh, I like how the blade comes out from the jaws of the dragon heads!\" Morya said clapping her hands.\n\n\"Dragon?\" Susan interjected with a thoughtful expression. \"Don't take this wrong, but wouldn't a serpent be most appropriate?\"\n\n\"Hah!\" I exclaimed and showed them the other design. The backup art did in fact have hooded cobras on either end of the weapon. Their jaws were slightly open allowing the beam emitter to produce the blades. This version had Egyptian hieroglyphs to accentuate the snake motif. \"How about this?\"\n\n\"I agree with Susan,\" Jennifer gave her opinion. \"It looks sneakier.\"\n\n\"Hmm,\" Angela looked from one to the other and like Solomon she offered a new opinion. \"Why not both?\"\n\n\"I do have the case I made on Tython. Why not both. I like both but which will be my Darksaber?\" I pondered. I meditated on it and asked for Anackire's wisdom. \n\n'You surprise me my Champion,' she replied. 'This weapon means much to you and so I will give you my honest opinion. Both. Use the dragon and the serpent designs, one on either end of your weapon.'\n\nHer presence withdrew and I grinned savagely. She was right of course. Thank you Anackire! Renewed by her vision I attacked the casing with an almost fevered passion. I removed the hieroglyphics and laid out runes in a spiral pattern along the length of the grip. The serpent head would spit out the black blade and the dragon would emit the scintillating ghost blade. I ached to be able to wield it again. I printed out both halves of the mold. I took out the sand I had taken from Svartalfheim and filled two containers that would hold one half of the mold. I hoped the two might create a new alloy. What might a blend of Mor'ia and Vibranium sand look like or even more interesting what might they act like in combat? Only one way to find out.\n\nWe found a secluded spot to park the Ghost Dancer before decoupling main power to juice up the makeshift foundry. We fashioned lenses and goggles to wear for the intense lightshow when the Mor'ia was returned to a liquid state. I pulled the goggles down over my eyes and gave Susan a thumbs up. She threw the lever and powered up the furnace. We could only use eighty percent of the ship's full power output. Anymore and we'd risk burning out irreplaceable circuits and force us to abandon the ship. It was a slow process but eventually the damaged casing became soft but that was as far as it went. We were at our limit. I invoked Force inferno and directed into the crucible. The alloy relented and liquified. I opened the two slits in the bowl-shaped container and soon both halves of the mold were filled.\n\n\"Now comes the hard part waiting for it to cool.\" I sighed.\n\nOnce it was ready, I removed them from the mold. I looked at the casing and spied the how the Vibranium seemed to have been drawn by some force into the detail portions of the mold and given the dragon and serpent a striking appearance. It was a clear sign of my growing skill as an artificer. Once again using just telekinesis I polished and removed the rough portions of the surface of the weapon. It was as perfect as I could make it. I levitated the internal workings and placed them inside and lovingly slid the gems into place. I closed and sealed the case. The last clasp clicked, and I triumphantly took the reforged Darksaber into my grasp and strode to the lower deck of the Ghost Dancer. It was the only location on the ship with enough open space to allow me to practice.\n\n\"Before I ignite this weapon, I pledge its service to Anackire and her two-fold coven.\" I announced.\n\nThe black blade silently erupted into existence. I moved it slowly and noticed immediately the difference between this blade and the original. The air around it was slightly warped, distorted, and with a distinct lensing effect. I switched it off and swung the weapon around and activated the ghostfire side. The ladies gasped seeing the brilliant sun bright blade. What I didn't witness was the advanced 'ghosting' aura that surrounded me.\n\n\"Do it.\" Susan urged and the others nodded.\n\nI launched into the eighth form of lightsaber combat and they watched. They say when you train that the weapon becomes an extension of the wielder. I could feel no difference between me and the Darksaber. I activated the dark blade and spun the weapon around in lethal arcs faster and faster. The strobing effect left my audience enthralled and entranced. I finished and switched off both blades.\n\n\"Well?\" I asked and only then did they snap out of the near hypnotic state.\n\n\"Gorgeous,\" Morya declared and the others agreed.\n\nDing!\n\n'Quest complete: Darksaber Rising.' \n\nI looked at the remaining quest. Did I try and take on a villain like Blastaar? That would mean sneaking onto his flagship and robbing him blind. If I got caught it would require me battling my way out if possible. I remembered an old comic in a gaming magazine. \n\n'Ooh look! A demon prince... think of all the treasure and experience points!'\n\nMaybe if I sought out the Eye of the Tamer first, I could postpone the inevitable. We recycled the last of the bad air out of the ship, buttoned up the hatches, and I read the lore behind the jewel. There were clues inside the text hinting at its possible location. I turned to Susan and Jenny with their wealth of expertise inside the Negative Zone for help narrowing down the possibilities.\n\n\"Any ideas?\" I asked as Morya took us away from the standoff around the planet.\n\n\"Maybe,\" the sisters said in one voice. A clear sign they were on the same wavelength. \"Old references, really old ones,\" they pondered. \"The Moons of Sterling August.\"\n\n\"Sweet, where is it located?\" I asked and they frowned. \"Aw shit!\"\n\n\"Don't be like that, it will take time to plot orbital drift inside the Zone. Let us work on it with Traci's help.\" Jenny assured me. \"Why don't you and the redheads get to know each other better.\"\n\n\"Well... I... OOF!\" I gasped when the Asgardian raced forward, lifted me up, and placed me over her shoulder like a sack of potatoes. \"Angela!\"\n\n\"Hush man meat,\" she joked. \"You have answers to make.\" Angela stated nervously.\n\n\"We will make sure she doesn't damage him,\" MJ giggled. \"Yes, man meat we have questions.\"\n\nAs I was being carried off, I spied Morya disconnecting the crucible and restoring the ship to full functionality. She wiggled her fingers at me as we entered the captain's cabin. Angela tossed me onto the bed in the captain's cabin, closed the door, and locked it. She moved to the foot of the bed and stood there regarding me silently. Her hands were on those gorgeous hips of hers and I blatantly stared at her. MJ clung silently to the ceiling in her She-Venom aspect.\n\n\"I need to know something.\" Angela said looking thoughtful.\n\n\"Ask away.\" I said as I began undressing.\n\nInstead of going on the offensive Angela climbed into the bed next to me and snuggled. Something was bothering her. MJ plopped down surprising Angela but not dissuading her.\n\n\"Hey, what is bothering you?\" I asked holding Angela gently. \"We don't have to...\"\n\n\"Men are so stupid,\" she purred. \"Of course, I want to mount you.\" She stated in typical Asgardian bravado. \"But before that, do you have Asgardian blood in you?\"\n\n'Asgardian?' MJ mouthed.\n\n\"The gloves.\" I replied and she nodded.\n\n\"I have looked them over closely. The runes are quite specific. Only an Asgardian can use them.\" She declared her finger tracing my chest. \"You have to have an ancestor, perhaps distantly, but not too far though for the enchantment to work.\"\n\n\"I entered the world as an orphan.\" I explained and she frowned. \"However, the goddess Anackire has given me visions. I saw how Melekith stripped the Realm of Svartalfheim of its Vibranium. It ripped the life and color from the realm. During that same vision I watched an exchange between his pregnant wife and Melekith. Bor of Asgard was the father of her child. No! I don't believe I am that child. I might be one of his descendants though. A son or grandson even. I just don't know.\"\n\n\"I had no idea the Aesir and Morasir could bear offspring.\" She purred as she rolled on top of me. \"Now, that the mystery is partially solved I will best your lustful arts foul Ghost Fire!\"\n\n\"We will.\" MJ added and Angela nodded.\n\n\"Wait! Who or what is a Morasir?\" I asked never having heard that term before.\n\n\"I assumed you knew.\" Angela paused and looked at MJ who urged her to explain. \"Well, as you know the Svartalfar or Dark Elves are one of if not the oldest race in the nine realms. As with the other non-giant races there are greater and lesser folk on each realm. In Asgard there are the Aesir, like myself, Odin, and of course my brother Thor. Also, there are the people of Asgard and while a noble folk are mere mortals. Among the light elves they are ruled over by the Vanir.\" She continued and the obvious hit me. \"Yes, and among the dark elves there are the Morasir who are extremely long lived and of great potency. Your dark elf side must in fact be Morasir. Bor's seed would have killed or crippled a mere mortal. Such power as in Uru artifacts takes a hearty constitution to endure such a burden. Are you okay Ghost?\"\n\n\"Yeah. I didn't know. It makes sense though. I crafted a rune weapon. That can't be easy.\" I stammered still reeling from the news. \"That said, do your worst wenches!\" I fired back knowing how they'd react to that word.\n\n\"Wench!\" The redheads roared and went on the attack.\n\nThree stamina bars later.\n\nA soft knocking at the door woke me up. I ordered Traci to unlock the door. Susan and Jenny stepped in and giggled.\n\n\"We are going to have to burn those sheets.\" Jenny joked. \"They are unsalvageable.\"\n\n\"Yeah. If you have the energy, we have a 'possible' location of the moons.\" Susan stated. \"I emphasize possible.\"\n\n\"Let's change course and... oh... alright, I need a shower and a briefing.\" I said and the twins offered to scrub my back.\n\nI learned while we showered why the moons were so damn difficult to track. They were one of the oldest objects within the confines of the Negative Zone. There are legends about them that come from the most established races and nations. It might be home to the first poor bastards that were trapped here hundreds of thousands of years ago. Since the time differential between normal space and the zone is so vast, a 336 to 1 ratio, that much must have occurred. For every second that passes out there five and a half minutes pass here. The inhabitants of that moon might have only arrived a century or two from our universe. If that were the case, they might not even be recognizable from their original form. They could have evolved, devolved, or just changed socially as to be an entirely new culture. \n\nI practiced with the Darksaber while we travelled through the Zone. The oppressive effect did little to dampen Morya's spirits. She was born here. Well, if you call being fertilized inside a nutrient tank, grown to adulthood via advanced dark elven technomagic, and trained by the deadliest of their war masters through holographic tutors a life. I'm sure after that anything was sunshine and roses. What happened to the others? Did they perish during the implosion? Or did a hidden mechanism shift them back to real space and they are out there somewhere? I could ask her, but would she tell me the truth? Sure, my vampiric bite had enslaved her, but would she betray her race to a half breed like me?\n\n\"Master?\" Morya called out halting my progress. \"I can feel you,\" she said touching her head. \"You are thinking about me.\"\n\n\"I am thinking about us, and what became of the others. When the temple was destroyed were they all slain in the implosion?\" I asked watching her intently.\n\n\"Of course not,\" she laughed. \"I lied to you. I had to give our people time to awaken and fall back to one of the other strongholds.\"\n\n\"You said our people,\" I remarked, and she warmed up instantly.\n\n\"You are one our greatest accomplishments.\" She purred as she approached. \"You carry two great houses within you.\"\n\n\"You were listening at the door.\" I accused her my fists clenched tight.\n\n\"This entire ship is wired for surveillance. Just think of it, your children will be greater still.\" Morya said her voice high pitched and stretched to its limits. \"Those that carry the scarlet hair will be superior and most desirable as lovers and partners. Your bloodline will be far reaching and your legacy without end.\"\n\n\"You are still lying to me.\" I said as I tossed her a practice saber and switched my weapon to practice mode. \"Get it out of your system.\"\n\n\"I Hate You!\" She screamed as the crimson blade snapped into existence.\n\nI deactivated the ghostfire blade and defended with the black. I had never sparred with her and the technique was as alien as it was gorgeous to behold. She was aggressive at first but then slid into a more patient exchange. Morya was an extremely gifted combatant, easily my equal. Her agility and strength were on par with any Asgardian except perhaps Thor or Angela. She struck me three times before I landed a single solid blow on her. The difference is that my strength was vastly superior to hers.\n\n\"We are closing in on target coordinates.\" Traci alerted everyone.\n\n\"Release me or slay me,\" Morya spat her eyes red from crying. \"You are an abomination!\"\n\n\"I hoped you'd change over time.\" I growled. \"Surfer?\"\n\n\"Yes boss?\" She said manifesting next to me.\n\n\"Inspect every nanometer of this ship, its computers, and programming for sabotage. That is a priority one command. Traci, take us in.\" I ordered as Susan, Jenny, and Angela went forward to prepare for our mission. MJ stayed to watch. I could feel the symbiote's blood lust rising with my own.\n\n\"What about me? What do you want me to...?\"\n\n\"Door close and lock,\" I snarled as the bitterness and rage welled up inside of me. \"You and I have unfinished business bitch.\" I told her as my fangs descended.\n\nMorya fumbled with the settings of the training saber but it was futile. I sprang upon her and drove my teeth into her throat. I drank her dry. Later I would blame it on the Zone and that it brought out my darker nature. I knew better. I was tired of her attitude and in the end, I didn't trust her not to betray me. Her corpse struck the floor. MJ kissed me and got a brief taste of Morya.\n\n\"We will serve you willingly,\" MJ moaned.\n\nI searched Morya and found concealed in her hair a decorative Svartalfar comb and adorning it an A.I. crystal. It was marked combat training. Well, that explained what she has been doing while I was otherwise busy. I drug her corpse to the recycler and shoved her in. Good riddance.\n\n\"Traci, you are primary pilot again.\" I directed over the loudspeaker system.\n\n\"Yes boss.\" She replied.\n\nClad in the black glass version of my Predator armor I strode into the pilot's compartment. Susan and Jenny appeared uncomfortable, but Angela approved of my actions. I didn't apologize because I wasn't sorry. It was a command decision and I had made it. MJ stood behind me smiling proudly.\n\n\"We are going to finish this mission if we can and return home safely.\" I told them and that they all agreed upon. \"Show me.\"\n\n\"Just ahead,\" Traci described the miniature star system ahead of us. \"The star is roughly the same stellar mass as Jupiter. It has only two satellites, each orbiting on opposing sides of the sun. They are about twice the size of Earth's moons and have atmospheres of their own. Because of the strange nature of the Zone the gravity of these moons is roughly 1G or near Earth normal. I detect no toxins or adverse atmospheric compositions requiring a portable oxygen supply. Good luck.\"",
        "\"Well, let's pick a moon and take a look.\" I said and Traci landed us on the nearest of the two.\n\nWe landed in the middle of what could be best described as a grassy field. A hundred yards off towards the sunward horizon, what we would call east on Earth, was a raintree. Well, its silhouette reminded me of a raintree. The singularly straight trunk, no real low hanging branches to speak of, the uniform canopy above and its pale leaves. No one came to greet us. So, why did I feel afraid?\n\n\"Ghost?\" Susan asked her voice trembling.\n\n\"Yeah, me too.\" Jenny added.\n\n\"If shit goes sideways,\" I muttered my voice cracking. \"Head back to the ship and don't worry about me. Look out for each other.\" I demanded and received a kiss on each cheek.\n\n\"That is why I love you,\" they said in twin speak.\n\n\"Nice weather,\" MJ offered as she sniffed the air.\n\n\"I have your backs,\" Angela chimed in confident and cool.\n\n\"Follow me,\" I said wiping a bloody tear from my cheek.\n\nThe lone tree had me on edge and I couldn't point out why. The apparent flatness was in fact an optical illusion. I felt the steady rise from the landing site to the lip of the hill. We were even with the nameless tree now and looking over an entire orchard of the same damn species of raintrees. I cursed and drew the Darksaber. We would reach the first tree in less than twenty feet. The woods extended for as far as we could see. Each step brought that nameless dread closer and closer.\n\n\"Why am I afraid?\" I gasped as the limbs of the trees shivered but I felt no wind.\n\n\"I do not know,\" Angela said her own voice weaker and unsure.\n\nSusan and Jenny clung to each other as we walked under the first bough of the first tree while MJ whistled the song 'Chapel of Love'. That strange susurration occurred again, and I thought I heard a sigh pass from tree to tree. We were three or four trees deep when it happened. Susan cried out in surprise. I stopped and saw one of the pale leaves from the trees had fallen and landed on an exposed portion of her skin between her neck and her uniform. As I watched it seemed to flatten and the translucent veins that ran throughout the leaf turn suddenly scarlet. The entire leaf was a bloody crimson before it floated up to join the limb it had fallen from. I looked up as dozens, no hundreds, of the leaves began to drop and twirl towards us.\n\n\"Susan, forcefield... now!\" I cried out as I raised a defensive dome over my head. The girls huddled within Susan's sphere while I ignited my weapon and went on the attack. \"Die!\" I howled as I slashed at the trunk of the nearest tree.\n\nThe entire woods took up the cry of pain from that single strike. A canopy of pale leaves lay atop both Susan's forcefield. They were trying to drink up the power she was using directly from the sphere. Susan was already on her knees weakened by their assault. Blind rage took over as I swapped out weapons. I drew Death Kiss from her sheath.\n\n\"Are you hungry sweetie?\" I roared.\n\n\"Feed me Master!\" She purred as I stabbed the same tree I had attacked before. Where the energy blade had left a shallow scorch mark Death Kiss pierced deep and drank deeper.\n\nI leaned on her driving her deeper. Penetrating the tree and the bound collective of the entire forest. My cells drank up their power and I never heard the cry of warning from Angela. I was struck with enough force that normally would have killed me outright. Thanks to the enormous amount of life force I had stolen it barely registered. I stood and stretched out my hand. Death Kiss lovingly returned to my grasp as the watch dog towered above me. The lone tree that we had first spied upon our arrival stood there and raised its gnarly wooden limbs skyward ready to dash me to bits.\n\n\"Fuck you!\" I screamed and leapt up and swung the rune sword. Death Kiss bit deep a second time and fed from the guardian tree. Since it didn't have the same connection the others shared it quickly withered and died. \"Who's next?!\" I cried out and the leaves retreated to their limbs and the forest fell silent. My body was coursing with power and I desperately needed to get rid of it before it burned me alive. I thrust my open palm skyward and sent a massive blast of sun bright lightning into the atmosphere. The thunder that followed was deafening.\n\n\"Damn Ghost, that was amazing!\" MJ exclaimed while the twins and Angela were silent, and their combined gaze never left the purring sword in my grip. I sheathed Death Kiss and we continued deeper into the woods. We didn't have any further problems.\n\n\"Vampire trees?\" I said as we neared the edge of the woods and faced a brightly lit shire. \"English village?\"\n\n\"I don't know. The thatching looks a bit tall for an English town. Norwegian? Icelandic?\" Susan offered.\n\n\"Perhaps,\" Angela shrugged as she sniffed the air. \"I smell mead! At least they are civilized.\"\n\nWe walked down the main lane of the town and saw flickering lights behind the covered windows. I guess I'd be scared shitless if I lived next to a vampiric forest. Angela's keen senses picked up the sounds of singing and music. She took over and led the way. The inn was by far the largest structure in the village we had seen so far. The alien script defied me to decipher it. The artwork on the sign was of a green dragon clawing at a rising sun.\n\nAngela never hesitated and opened the door and strode in. We got the typical silent greeting as the singing died off and the musicians lowered their instruments. They were near humans with elfin features but strange eyes that didn't have an iris but more of a speckled mother of pearl appearance. Angela tried several languages until she hit on something they recognized. A minute later she was talking, ordering drinks, and if not welcomed at least pleasantly tolerated.\n\n\"Gift of languages,\" Angela explained. \"They call themselves the Elderan. They serve at the grace of She Who Sleeps.\" The Asgardian translated and my first thought was oh great another Disney Princess. \n\n\"At least the mead is good.\" I complimented the bartender.\n\nThe party broke up an hour later as the sun rose, and the villagers went about their lives. Angela explained that the days and nights came and went quickly. The spin of the moon was fast and produced six-hour days and nights. I felt like a tourist having Angela play translator. The citizens were easy going and spoke about the sleeping princess as I thought of her freely. They appeared to see her as benevolent and were very protective of her. When I mentioned or asked about the sleeper's castle or palace they laughed. They pointed to a set of standing stones on the side of town away from the forest. That was her cairn or more precisely that is where she was buried.\n\n\"Is she dead?\" I asked and that is when things got strange. Each citizen seemed to have problems understanding the concept of death. When I asked about illness or injury, they all said that they joined She Who Sleeps on the hill. I wondered if it was a communal grave site or cemetery. I asked about visiting it and they reacted in a knee jerk way and then informed me that in just a few days the entire community would be placing flowers by the stones. Seeing as a day was a mere twelve hours it would be a short wait. \"Could you ask the innkeeper if we can stay there or if there is a place we can camp?\"\n\n\"Already on it,\" Angela said. \"There is an empty house close by that no one is using currently. The last tenants were banished, and we can stay there.\"\n\n\"Banished? What the hell did they do to get banished?\" I asked and wondered if they had been fed to the trees or went the other way.\n\n\"Blasphemy.\" She explained. \"Don't bad mouth the Sleeper.\"\n\n\"Not everyone is tickled about her then, interesting,\" I mused as Angela showed us where the empty house was.\n\nThe homes were uniform with stone exteriors, thatched roofs, and wooden doors. Wood. I stopped dead in my tracks. Where the hell did the wood come from? I examined it closely to see if it matched the same pale trunks, I had plunged my blade into. No, it appeared normal like any earthly wood like oak or pine. I let out a sigh of relief and the ladies looked at me and then the door.\n\n\"Aw fuck,\" Jenny cursed. \"Are we cool?\"\n\n\"We will take turns sitting watch.\" I suggested and they agreed. \"Good. Now that we know where we are going to be sleeping, we should rest after that vampiric shit storm.\"\n\n\"Yeah,\" Susan chuckled. \"I need a nap.\"\n\n\"I am fine,\" I stated. \"Get some sleep. Angela?\" I asked since she was an Asgardian and a goddess.\n\n\"I am alright I will keep you company friend Ghost.\" She offered. \"Do you think the eye is with the Sleeper?\"\n\n\"We don't even know what the eye is. It could be anything.\" I said as the twins took the bed and were asleep in short order. \"Speaking of eye. I'll understand if you refuse to answer but can I ask you a question?\"\n\n\"Of course!\" She said a bit loudly and then softened her voice. \"What do you want to know?\" She whispered.\n\n\"The Eye of Agamotto,\" I asked quietly. \"Is it or maybe I should put it like this, was it crafted by the dwarves?\"\n\n\"Ah, I see why you ask.\" She replied thoughtfully. \"The metal could be Uru and the design appears to be dwarf make. I don't know. My time in Asgard has been limited. I am still acclimating to my home. Remember, I was kidnapped and raised in the tenth realm of Heven. I trained with angels. The history and culture of the other nine realms is little known to me. I am sorry.\"\n\n\"No! I wish you the best of luck with that.\" I added. \"OH! Shit! Hey, since I've got you here. I've got something that is written in a cryptic language can you look at it for me?\"\n\n\"Absolutely!\" She laughed. \"If I can help, I'd be happy to do so.\" I opened my inventory and took out the alien tablet. Angela took once glance at it and winced in pain. Her eyes narrowed and a fierce light came into them. \"Put it away! Argh! Hurts my head!\"\n\n\"I am sorry, I didn't know,\" I said.\n\n\"Nor could you have,\" Angela replied. \"Where did you get it?\"\n\nI launched into everything that occurred beneath the Fink residence. The ship, the creatures, and of course the metal tablet that came from the ship. When she learned that the tablet might be tied to the Many Angled Ones she nodded as she rubbed her head. I moved behind her and rubbed her shoulders and neck. She whimpered and leaned against me.\n\n\"You are seriously stressed,\" I remarked as I worked the knots and tension from her muscles.\n\n\"Of course, I am a goddess after all.\" She moaned. \"Yes... right there.\"\n\nIt took little urging to get her naked. I opened cabinets and drawers extracting extra blankets and pillows. Angela was on her belly with her head cradled on the pillow. She lay on a blanket with me on top of her rubbing away her stress.\n\n\"I just wish I had some oil...\" I commented when MJ said, 'heads up' and I caught the bottle of baby oil arcing my way. \"...thanks!\"\n\n\"Have fun.\" MJ giggled. I thanked her as I used pyrokinesis to warm the oil to the proper temperature.\n\n\"How is this?\" I asked.\n\n\"OH! Yeah!\" Angela growled as I applied the oil. Her skin glistened where I added the oil. She whimpered and moaned as I worked slowly downward all the way to her feet. She damn near climaxed when I applied the oil to her ass cheeks. I could see how wet she was when I worked on her upper thighs. \"MMM... you are spoiling me.\"\n\n\"Yep.\" I declared. \"Roll over.\"\n\nAngela giggled with glee and patiently let me rub her front. I began with her feet and I didn't miss how hard her freckled nipples were. I reached her upper thighs and skipped to her lower belly. She let out a frustrated whimper. When I bypassed her tits, her eyes snapped open and the scintillating light gleaming there was a bit intimidating.\n\n\"Did I miss something?\" I asked as I rubbed her arms.\n\n\"Yes, and you damn well know you did.\" She snarled softly.\n\n\"If I oil your breasts, I will be obligated to slide my erection between them. Have you ever given a lover that particular treat?\" I asked and she shook her head. \"Well, have you ever had a lover shoot his load over those lovely features of yours?\" Again, she indicated in the negative. \"Pity. I guess I am almost finished.\"\n\n\"Like hell you are!\" Angela growled. \"You will do these things or there will be consequences.\"\n\n\"Well, since you put it that way. Let me oil up them titties!\"\n\nAngela's mouth fell open and she moaned as I drizzled the oil on and between her breasts. I rubbed the oil in, and she gasped when I slid my cock in the valley between her tits. I ordered her to push them together and slowly rocked my hips.\n\n\"Does it feel good?\" She asked as she chewed her lower lip nervously.\n\n\"UNNN!\" I grunted repeatedly. \"Pinch your nipples for me.\"\n\n\"Yes Ghost,\" Angela moaned. \"MMMM, they are so sensitive. What do I say?\"\n\n\"Give it to me. Spray my face. Things like that.\" I suggested. \"I love fucking your tits.\"\n\n\"Yes!\" She gasped triumphantly. \"Fuck my tits lover! Stain my face with your cum.\"\n\n\"I am getting close.\" I warned her. \"You may wish to close your eyes. I hear it burns like hell if it gets in there.\" She closed her eyes and opened her mouth and stuck out her tongue.\n\n\"Ahh!\" She greedily said.\n\nI grunted as I climaxed. The first jet sailed and hit her lips and tongue. She automatically pulled her tongue in and smacked her lips. Her face was painted with gooey ropes of cum and she never looked sexier.\n\n\"Can I fuck you now?\" I asked and she laughed gleefully. \"I'll show you how to do the prone bone.\"\n\n\"Ooh, I want to learn a new combat form!\" She growled as I wiped her face clean. I explained it was a position for making love and that excited her even more.\n\n\"Roll onto your belly. Good. Part your legs for me a bit. Excellent. I am going to part your ass cheeks and slide in nice and slow. How is that?\" I asked and she grunted. \"Now, you need to keep your body flat against the floor while I fuck you slowly.\"\n\n\"Aw damn,\" Angela whimpered. \"Feels so good! I approve of this prone bone.\"\n\n\"Now that I am in, bring your legs together so I can straddle your legs. Perfect. Now lay there and take it.\"\n\nI had to move slow and I felt every inch of her sugar walls grip me nice and tight. I felt her tremble and knew she was ready to holler. Instinct took over and I fashioned a ball gag out of the stuff of shadows and forced it between her teeth.\n\n\"MMMMM?!\" She cried out aroused and confused. \"MMM?\"\n\n\"It is called a ball gag. It keeps you from waking the others.\" I explained. \"It is a bondage thing.\"\n\n\"MMM?\"\n\n\"More?\" I asked feeling my cock get harder still.\n\n\"MMMore!\" Angela moaned.\n\n\"Give me your arms. Good. Now, let's tie your wrists together. How is that?\" I asked and her pussy squeezed me tight. \"Excellent! Blindfold?\"\n\n\"MMMHMMM!\" She agreed.\n\nTen minutes later she was hovering in the air wrapped in thin lines of darkforce. I had her floating horizontally with her legs spread wide and exposed. I gripped her ass cheeks and began thrusting. We grunted in time as my erection sunk deep each time.\n\n\"Squeeze my cock you filthy little slut!\" I whispered and she complied without question. Swish! Crack! Went the shadowy riding crop I had created. Her ass cheeks were crimson by now and we were both on the verge of climax. I slammed into her as hard as I could. Angela was one of the few lovers I had that could endure the full fury of my lust. \"Come for me!\"\n\n'MMMMM!\" She cried as she bucked against her restraints.\n\n\"Bravo!\" MJ purred. \"Me next?\"\n\n\"What the hell is... oh damn girl!\" Susan saw the trussed-up goddess. \"I knew it! Didn't I tell you she was a closet freak. She looks amazing!\"\n\nI lowered Angela to the floor and released her. She leapt to her feet and looked around. She sprang at me, took me into her arms, and kissed me. I had touched a part of her, and I promised not to share what had happened here. The others agreed to silence. We washed up and headed for the pub. I was thirsty and needed time to restore my stamina bar.\n\n\"I've dreamt of such things,\" Angela whispered as she walked between Susan and Jenny. \"I've often had a dream about being attacked by a giant spider and webbed up completely. Often, I woke rather aroused. I had no idea why. Ghost has made me see the truth about myself. Am I damaged?\"\n\n\"Absolutely not,\" Jenny snapped. \"Desire is always healthy. In this case you need to find someone you trust though. Not everyone will understand.\"\n\n\"I agree friend Jenny.\" Angela purred. \"I am aroused just speaking of this.\"\n\n\"Don't fret,\" MJ moaned. \"Ghost won't fail us.\"\n\n\"He never does.\" All four of them said in a single voice.\n\n\"Oh boy.\" I chuckled as I looked over my shoulder at them. \"I'll have to gag all of you lest we wake the neighbors.\"\n\n\"Yes Please!\" They begged.\n\nThree of the moon's days and nights passed quickly and blissfully. Dawn of the fourth day was a solemn one. The entire town gathered near the center and gathered wildflowers from garden beds between homes and at the edge of the village. We followed suit and plucked our own blooms. We joined the parade and followed them up the path towards the cairn and standing stones. The sun rose in the sky quickly and gleamed off the stones. Only they weren't stones. The dull metallic projections appeared more like portions of a massive aircraft. Had their ancestors crashed here, and this is where portions of the ship still protruded from the ground? It made sense. It explained why they settled here. I began to wonder at the true nature of the Sleeper. Was she a pilot or technician? I grew excited to see her if we could. \n\nWe formed a circle around the stones or what I suspected were damaged wings or perhaps stabilizers. The flowers were brought to the center as the headman of the village recited a litany of words that Angela translated.\n\n\"Oh, great Mah-Sheen! En-Nitch-Ee-Ate Pozzi-Teev Feed Bak Lupe!\" \n\n\"Kum-Pleet the Sir Cut!\" The villagers replied.\n\n\"Power Up the Mass Field Jenny Eight Tor!\" He intoned solemnly.\n\n\"Kum-Pleet the Sir Cut!\" They begged and the ground vibrated in response.\n\n\"Tog! Gull! Forward!\" The leader cried.\n\n\"Kum-Pleet the Sir Cut!\" They called out and the ground split open, a cold fog rolled out and a cryogenic pod was revealed. Within was a member of the ship's crew. I raced forward and looked at the controls. She was elven, but clearly not Svartalfar, maybe she was a light elf or perhaps even a Vanir.\n\n\"Computer, deactivate cryo pod!\" I called out.\n\n\"In... insufficient... pow... er...\" the ship replied weakly.\n\n\"I can fix that. Tell them to stand back!\" I declared and Angela warned them away. I reached my hand skyward and the skies darkened at my command. \"I hope this works.\" The blast raced downward and struck one of the exposed 'stones'. I was wrong about them. They weren't wings or fins but were in fact solar collectors. Nothing happened so I hit one of the other panels. I saw power course across the pod. That one was still working, good. I waited before hitting the second panel with another bolt of lightning. \"Well? Computer... status report!\"\n\nHISS! Click! Whine!\n\nThe pod opened and she tumbled out. I caught her in my arms, and I felt her chest rise as her eyes fluttered open. I used the Force and sent healing energy into her as gently as I was able. She was clearly disorientated.\n\n\"Easy there.\" I urged. \"You've been asleep for a long time.\"\n\n\"Where?\" She asked in elven. \"NO!\" She cried out her eyes locked on my left shoulder. I looked at where she was staring at the Yautja shoulder cannon.\n\n\"I ran into them too.\" I said. \"I killed three of them with help from friends.\"\n\n\"Thank Bor,\" She gasped as I helped her to her feet. \"An Aesir?\" She asked when she saw Angela. \"My life is yours Lady! I am called Lincalan.\" \n\n\"Song of Light,\" Angela translated for the villagers. \"I accept your oath of fealty. What happened?\"\n\n\"We were on a rescue mission from Vanaheim. A ship was in distress and when we docked, we were attacked.\" She explained. \"We never got a good look at them. I saw one of them use one of those,\" she said pointing and her lip trembling. \"The blast killed my friend. I was ordered to make an emergency FTL jump to try and escape. What I didn't realize is that there was another ship attached to ours. When the FTL kicked in it tore a hole in time/space. The ship broke in half as we crashed. The last thing I remember is activating the emergency cryogenic unit.\"",
        "\"Two moons... two halves to the ship?\" I offered to Angela deferring to her.\n\n\"What are we dealing with Ghost?\" Angela asked.\n\n\"They are predators, active camouflage, advanced technology, and absolutely brutal.\" I explained.\n\n\"Do they have the eye?\" Susan asked.\n\n\"Eye? What eye?\" Lincalan asked.\n\n\"We seek an artifact to help return the Shi'Ar home world to real space.\" Angela explained to the light elf. \"We are in a dimension known as the Negative Zone. The eye is one of three items we need to get this done.\"\n\n\"I don't know anything referred to as an eye. How long have I slept?\" Lincalan asked.\n\n\"Odin, Bor's son, is king of Asgard.\" Angela explained.\n\n\"That long,\" She said fighting back the tears. \"I will help any way I can.\"\n\nI pulled down my HUD and instead of simply text describing my quest I was given images of the three objects I was seeking. I had Traci display a hologram of the Eye of the Tamer. The bright yellow sphere was approximately a foot in diameter. Lincalan recognized it instantly.\n\n\"That is my ship's power core.\" She declared. \"It contains a small star. There are three of them in a specialized balanced magnetic field.\"\n\n\"Two.\" I said pointing at the star reaching for its noon day position. \"One of yours?\"\n\n\"Perhaps, well... yes.\" She stammered. \"If the ship was torn in half and one of the sphere's was damaged the star is designed to remain stable.\"\n\n\"I guess we need to visit the other moon.\" I suggested to Angela and she agreed. \"Time to go.\"\n\n\"I am going with you. I can help you navigate what is left of my ship.\" She said the villagers grew upset. The Sleeper had been a part of their daily life and now she was awake and leaving. \"I will come back for you, and we will all return to Alfheim together.\"\n\n\"I wonder how the Yautja have adapted over the long years.\" I muttered and everyone glared at me. \"What?\"\n\n\"The forest.\" Angela growled. \"Will it let us pass?\"\n\n\"No need,\" I said. \"I'll just teleport us back to the ship.\"\n\nWe stood close and a moment later we were standing next to the Ghost Dancer. Lincalan gasped when she saw it. Of course, she did, she would recognize a Svartalfar vessel on sight. \n\n\"How did you manage to steal a dark elf ship?\" Lincalan asked in what could only be described as awe. \"They are the eldest of the elven races, steeped in the deep mysteries of dark energy and masters of gravitic magics.\"\n\n\"We stole it.\" Susan said and we climbed aboard.\n\n\"Traci, prep for launch and calculate a course to the other moon. We have a star to steal.\" I ordered and dynamic of the group shifted.\n\n\"You? Why would a goddess take orders from you?\" The bright elf asked shocked.\n\n\"It is complicated,\" I offered but Angela couldn't leave well enough alone.\n\n\"He fucks like a demon.\"\n\n\"Oh.\" Lincalan gasped and fell silent.\n\n\"We are ready to go demon cock!\" Traci giggled over the speakers.\n\n\"TRACI! Damn it Angela!\" I snapped as the others laughed. I gave up as the engines roared to life and we left the moon behind. I activated my auto defenses ready to face the Yautja once again. How had they adapted and changed? The survivors of the light elf crew were now primitive strange beings with weird eyes and a culture surrounding a pilot once imprisoned in a cryogenic capsule. \"What is our ETA?\"\n\n\"Three hours boss.\" Traci replied sounding properly regretful. A strange sound caught my attention as we cross the gulf between the twin moons.\n\n\"What was that?\" I asked.\n\n\"Just dumping the trash boss.\" Traci giggled. The only trash I could think of was the corpse of one former dark elf, Morya.\n\n\"Good.\" I snarled. \"Everybody armor up and get ready. Anyone that doesn't want to go can remain on board. This ship isn't going to land. I will teleport anyone that is going with me. Repeat, none of you need to go. I can handle... fine. Thank you.\"\n\nThey all wanted to go. Traci scanned the moon's surface and hovered close to the power source. I reached out and viewed the area. They formed up facing outward ready for a fight. I sent us down and Susan surrounded us in a sphere of invisibility. I had the Darksaber out and ready. If they had plasma weapons, I'd be able to either deflect or reflect their attacks. I wondered if they had regressed and changed like the bright elves had. We crept forward with Lincalan's aid as she picked out the vague references of the long-buried ship, well this half of it.\n\n\"We are near one of the weapon turrets,\" she informed as a low grinding sound caught our attention. \"Why is it doing that?\"\n\n\"Why is what doing what?\" Jenny asked as a turret that was still above ground powered up and began targeting us.\n\n\"Scatter!\" I ordered and the thing aimed at me. \"Shit!\" I cursed as I barely managed to bring up a defensive shield before it opened fire. The impact was strong enough to fling me backward. I targeted the turret with my shoulder mounted plasma caster. I fired off a blast just as my Vibranium armor adsorbed most of the impact of my back slamming into a tree. \"Fuck that hurt!\" I growled as I ignited my weapon. I only damaged the turret it was still functional. I spied the divine redhead as she drove her sword's blade into the top of the energy cannon. She wrecked it.\n\nAn animalistic howl caught our attention and I crouched as my health began to regenerate. The others took cover as something large leapt into view. Imagine a pre-human ape made sweet love to a Predator you'd have the bestial monster beating its chest and howling in challenge. When it moved it was somewhere between fully erect and dragging his knuckles. He was obscenely male. He sniffed the air and I knew he caught the scent of all the females hiding. His erection protruded from his body at an angle ready for copulating.\n\n\"Begone you brutish pig!\" Angela cried out with her sword in hand.\n\n\"Aw shit, he's gonna fuck her unconscious.\" I cursed as the primordial Yautja grabbed himself and began jerking his pud. \"He's in heat! Get out of there or he'll...\"\n\nHe was on her like a bullet. His vast strength a match for her godly gifts. He struck out with his fist stunning Angela in a one shot. He used his other hand and flipped her around. His strategy was obvious. He was going to do her doggy style unless we stopped him. Jenny, in full energy form, flew at him with her arms out front struck him mid-torso. What should have happened was to see him flung off Angela and disappear into the jungle. Instead there was a dazzling flash and her energy was absorbed sending her deflecting off and tumbling in a smoking heap near the shattered turret. Susan did the only thing she could. She wrapped Angela in an invisible force field. When he reached out to tear Angela's armor from her his fingers struck the shield. Enraged he raised both his arms up and brought them down on the energy screen. Susan cried out as the strike nearly shattered the field.\n\n\"Hey asshole, that's my piece of ass you are trying to violate.\" I hollered standing upwind of him. I conjured a breeze to send my masculine scent as a clear challenge. It roared and forgot about the unconscious Angela for now. As he charged me, I spied the darkened breast plate precariously strapped to his chest. That must be what absorbed the attacks. I deactivate my weapon, hooked it on my hip, and prepared to grapple with him.\n\nI redirected the Yautja's attack and used his own energy against him. I flung him into the same damn tree I had struck earlier. If it was good enough for me then he could give it a taste. The sickening crunch made me cringe a bit until it raced to its feet, pounded his chest, but approached me slower this time. I brought the plasma cannon back online and targeted the Predator's face. He stopped when he spotted the shoulder cannon. Did he recognize it? I zoomed in and used the reticule to target his left eye. Angela let out a low moan. She slowly got to her feet, picked up her fallen sword, and waited.\n\n\"Ghost. Why is that thing still alive?\" She asked and I laughed.\n\n\"I thought he was going rape you.\" I informed her. \"He was just about ready to um... you know. Jenny and Susan slowed him down while I figured out how to get his attention.\"\n\n\"Kill it.\" Angela demanded, \"...or I will.\" The plasma cannon spoke and the Predator's snapped back just before it fell quite dead to the jungle floor. \"Okay. Let's find this sphere and get off this shit ball. Where is the she elf.\"\n\nI looked around and the immediate area was empty.\n\n\"She's gone... their gone.\" I snarled feeling the rage build. \"MJ? Susan? Jenny? Fuck!\" I snapped.\n\nI did a quick search of the corpse of the dead Yautja. The chest piece was crafted of Yautja alloy and its listed ability was energy absorption. Well that explained how he shrugged off so much so easily. \n\n\"Alright, let's go track them down... Angela?\" I called out but received no answer. \"Fuck!\" I cursed and the anger reached its flash point thanks to the effects of the Negative Zone. I activated the stealth feature on my armor and with Darksaber in hand I followed the psychic energy emitted by the girls and the Predators. My sense of smell kicked in and I was able to pick up on six separate male scent trails. It helped being a vampire on occasion, this was one of those moments. The scents were getting stronger and I halted. They were either bunched up or trying to set a trap. Since it was just me, I forced myself to remain cautious.\n\nI used the scan feature on my mask and one of them revealed an invisible death trap. If I didn't enter it, they might realize just how much of their gear I have. I mapped it out so I could avoid the worst of the traps. I slipped into the bowl-shaped depression waiting for the inevitable traps and lethal crossfires. The terrain was thick and made for slow going and places where moving along the jungle floor forced me to break cover and lose the naturally occurring protection. The first major trap was directly ahead, and I could sense their anticipation. Fuck this! The rage slipped my control. I activated my shoulder cannon, set it on auto defense and used telekinesis to roll a large nearby stone down to trigger the trap.\n\nSnap!\n\nBoom!\n\nAll six of them opened and I got their positions. My cannon wounded two of them before they broke and ran. Two helped their wounded comrades flee while the last two charged me. I lashed out with Force lightning and sprayed the area. If I hit them directly great but I wanted to short out their stealth field generators. It worked but left me open for attack. The closest of the two activated his wrist blades and went on the offensive. I took the strike to my right arm and cried out even through my armor prevented penetration, but he still managed to knock my arm out of socket. \n\n\"Fuck that hurt!\" I cursed and dodged the net gun fired by the second Yautja. I caught up the Predator with Force choke and squeezed. Its thick neck bones took more power applied than a human neck could endure. \n\nSnap!\n\nHis partner roared in rage and body slammed me sending red waves of pain from my already damaged shoulder. We grappled and to my surprise I held my own and switched to Force Drain to steal his strength so I could heal my shoulder. I latched onto him and streams of blue and violet energy surged out of him and into me. The pain faded as the Predator slowed and eventually died. I dropped the husk that was all that was left of the warrior. I searched them and restocked materials for continued research for my pet project.\n\n\"Two down four to go.\" I chuckled. I teleported to an upper limb of a nearby tree and spotted the damaged undergrowth the fleeing Yautja had left behind. \"Sloppy.\" I muttered. \"Wait! They attacked as a team instead of attacking individually. They helped their wounded to get away. That isn't typical behavior. Oh shit. I need to rethink this.\"\n\nI cleared my head and thought out the obvious changes that had occurred as I tracked them back to their home. I smiled when I realized that I had become the monster. They were the native villagers and we invaded their home to rob them of their treasure. Puts a twist on it. I could be wrong of course. The power plant gave off a clear signal and marking the spot was the remnant of a Yautja troop carrier. It must be one of the ships that attacked the light elf vessel all those years ago. Speaking of light elf, she was tied up and manacled by her wrists and ankles. There was no sign of the twins, MJ, or Angela. \n\nIt was too quiet. I created an illusion of myself, planted it at the edge of the open field surrounding the vestige of the vessel. I used telekinesis to move the plants to the side to give the illusion more realism. I walked my doppelganger towards the light elf. Her head came up and she began kicking and moving. Three sets of laser sights sprang into existence and targeted my illusion. Would they attack? I brought the arms of the illusion up and turn to face the trio of hidden warriors. The closest of them was only twenty feet from my location. One of them cried out in alarm and the laser sights switched off and I heard the limb they were on creak as he left his position. They must have scanned the illusion and found out that it wasn't real. I used it to call out and address the building.\n\n\"Hey! I am here for my females and one of the remaining power stones. I will leave in peace if everyone is unharmed. If not, I will be forced to use force.\" Maybe they didn't understand me. I knew that the mask had a translator built into it that could take snippets of language and translate it. I wonder if I could reverse it. So, I searched my inventory and brought up the mask and looked to see if I could access an inverted translator and there it was. I could select input and output languages. I chose English to Yautja. All I had to do was speak and the mask would do the rest. \"I am here for the females you took.\" I said and paused as the mask did its work. \"Hand them over along with something as compensation for attacking me. I'll leave your village intact.\" Pause to see if anyone reacted. \"You have five minutes to respond.\" The mask initiated a countdown using a Predator clock.\n\nI waited. Five minutes felt like a lifetime. Surfer informed when the time had elapsed. I hadn't wasted the time I had been waiting. I had used my vampiric weather control and called in rainclouds. The sky was overcast from horizon to horizon. It began to rain. I was hidden under a large overhang. I knew the one limitation to Yautja stealth technology, water and in this case rain. I worsened the weather and soon it was pouring down. I don't know what made me think there were only a handful of them. It was difficult getting an accurate count at first since they were moving around, and their fields hadn't failed yet.\n\n\"Well?\" I hollered.\n\n\"Fight for them?\" One of them shouted loud enough for me to hear.\n\n\"How many?\" I asked.\n\n\"Three is the sacred number.\" He informed me.\n\n\"Fine. Everyone else get inside. Now!\" I demanded and the shimmering outlines moved into the structure. I cancelled the rain leaving the open area a muddy mess. Three figures decloaked and popped their wrist blades. One thing was quite clear, all three were female. I was strangely aroused seeing the dripping wet scantily clad bodies. I teleported down and dropped my own stealth field. I brought out my wrist blades and waited.\n\n\"He is puny.\" One of them growled.\n\n\"He slew the rogue,\" another replied. \"He must have some combat skill.\"\n\n\"I claim first mating rights,\" the tallest of the trio snarled. \"The pale skin spoke quite fondly of his ability to give pleasure.\"\n\n\"Rogue?\" I asked and the leader explained.\n\n\"Over the long centuries of our exile occasionally one of the Yatuja males is born a regressive. They are raised to protect us but inevitably they go rogue and we can no longer control them.\" She said her voice full of sorrow. \"To survive tradition demands that we rule while the males go out and hunt. Males are too weak,\" she said pointing to her head. \"You are an idiot for taking all three of us.\"\n\n\"I've taken on more females than that at the same time. This will be no different.\" I bragged and took up a defensive position. \"What are the terms of the duel?\"\n\nDing! \n\nMy HUD sounded and I pulled down the different winning options. The most difficult and most rewarding was to take them on hand to hand and using Atemi to paralyze them. The least difficult was first blood. I chose attacking them with pressure points. I was given a map of where their vulnerable spots were located. Whoever did this was a fucking sadist. Not only were the points in difficult to reach places but small.\n\n\"I've studied your anatomy, I am ready.\" I informed them. \"I choose trial by Atemi.\"\n\n\"When we win and claim your fluids... keep on your mask. Your species is decidedly unpleasant to look upon.\" The first demanded.\n\n\"Agreed.\" I said being saved the embarrassment of requesting that exact same thing. I retracted my blades and looked at the flooded field we were standing on. I laughed when I realized that this was most likely going to end up in a mud wrestling match. \"Joy.\"\n\n\"Before we begin,\" the middle Predator spoke. \"The Asgardian claims you have... well... she says you have two.\"\n\n\"Angela!\" I called out and I heard distant laughter. \"Bitch! Yes. I have two.\"\n\n\"Now you know why I claimed first right.\" The leader purred. \"We begin in ten human seconds.\" \n\nThey retracted their blades and assumed a ready pose. The leaders wrist computer performed the countdown. I had my strategy and when the tone sounded, I launched myself at the leader. I drove my shoulder into her forcing her to try and dig in under the slick conditions. Her feet slid out from underneath her and she fell face down into the mud. I spun as the other two closed in. They were as skilled at grappling as they were in any other combat. I dodged between them and slid behind one of them, locked my arms around her waist and lifted her up. The third Yautja took my legs out from under me sending me down with the other on top. I rolled out as quick as I could only to find my face pressed against someone's tits. I paused and it cost me. One of them, I didn't see which one, drove her thumb into my right arm paralyzing it from the elbow down. \n\n\"Fuck!\" I cursed at my hormones cost me my right arm effectively. I ducked a spinning heel kick aimed at my head. I took her feet out from under her. As she fell, I shoulder rolled over her torso and managed to strike an Atemi point just below the right side of her diaphragm. If I had hit a little higher it would have paralyzed her entire diaphragm muscle and it could have caused her to suffocate. Instead it merely made her right-hand side numb. She could still move but it would be as if that side were asleep. \n\nThe other two split up and attacked from two different directions. All of us were covered in mud and I did enjoy how it rolled and dripped off various curves of their anatomy, decidedly slim if muscular bodies. They weren't what I expected of female Yautja. I figured they'd be thick, muscular, and stocky. These three were tall, long of limb, light build, and fast. Even their armor and masks we crafted differently. Maybe it was just adaption after so many generations, or maybe it was something else.\n\n\"I wonder.\" I chuckled as I removed my mask and shifted to my native dark elf form.\n\nThe trio cursed and I heard other cries of alarm from within the derelict. They went from upset to downright blood thirsty. The Predator's wouldn't have reacted like that, but light elves or Vanir might. They popped their wrist blades while I used my knowledge of Atemi to restore use of my right arm. \n\n\"I guess you've changed your minds and broken your word,\" I said, and they balked at that. \"So, honor still has meaning here.\"\n\nThe two that were still standing removed their masks and they were indeed Vanir. In terms of the nine realms, the Vanir were the elven equivalent of Odin or Thor. They were the gods and goddesses of the light elves as Angela was held as a goddess among the citizens of Asgard. Both Vanir trembled in their anger."
    ],
    "authorname": "Lost Boy",
    "tags": [
        "bondage",
        "double penetration",
        "femdom",
        "gag",
        "harem",
        "monsters",
        "shrinking",
        "tentacles"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/play-testers-wanted-pt-09"
}