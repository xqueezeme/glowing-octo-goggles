{
    "title": "The M Chronicles Ch. 02",
    "pages": [
        "(Recap: Hannah and five friends have created a contest to see who can write the best masturbation story. They will read their stories at a get-together at Alexis' apartment. Those whose stories are voted \"Worst\" must then masturbate in front of the others. So far, Bart, Emily and Will have read a story. Now, Liam, Alexis and Hannah will have their turns. )\n\nAfter Emily's story about her attachment to Darth, her vibrator, we decided to take a break. We munched on some of the remaining Chinese food, refreshed our drinks, and tried to talk about anything other than the stories we just heard. Liam was the next up to tell a story.\n\nI was sitting next to Will, and asked him if it was awkward sharing his story since he and Liam worked together. \"I thought about that,\" Will said. \"But, we all admitted to masturbating, and he's going next. I guess we'll each be in the position to have heard private stories. I'm sure we can still manage our work without embarrassment.\"\n\nI nodded. \"What was it like reading your story to the rest of us?\"\n\n\"At first I was uncomfortable, but as I got into it, I sorta' lost myself in the story.\"\n\n\"Looked like you were aroused,\" I said.\n\nHe grinned. \"You noticed?\"\n\n\"I'm sure we all did. It was, well, noticeable.\" We both laughed. I said softly, \"Too bad it was such a good story. I think I'd like to see you doing it.\"\n\n\"You know,\" he replied. \"There's no rule that says we can't do something on our own.\"\n\nMy mouth dropped open. \"You mean you'd like to...\"\n\n\"If it doesn't make you think I'm a super-creep, yes I'd like to have a mutual session with you.\"\n\nI felt my eyes drop to his crotch. The bulge was obvious, just as it was a few minutes ago. I recalled seeing that shape under his white underwear the night we prepared my story. It looked like it could be a nice dick. My already damp panties got much damper at the thought of the two of us in a bed, naked and playing with ourselves.\n\nMy thoughts were rudely interrupted by Alexis' voice calling us back together. She said, \"We certainly had a couple really good stories. Sorry, Bart, that doesn't include yours. Now, we'll hear the final three, and we can vote. If the rest were as sexy as Will's and Emily's, this is going to be a tough assignment.\" We all nodded in agreement. \n\n\"I believe Liam is next,\" Alexis said. He shifted in his chair, picked up the papers sitting on the table in front of him, took a deep breath and began to read.\n\nLiam's Story:\n\nThis is mostly a true story. I have changed some names, but the events pretty much track along what happened. I debated if I should tell it, because it could open me up to some weird looks. In the end, I decided to go ahead since this is my sure-fired way to get me turned on so I can have a really good cum.\n\nIn senior year, my roommate was a guy called, Dylan. He was a basketball player. I was a wrestler and we lived in a \"sports\" dorm. Of course he's six feet six and I'm five-seven. Yeah, a lot of people made fun of us. We didn't give a shit since we both were comfortable with who we were. We did have one other roommate, since we had a triple suite. He was Sammy, a golfer. \n\nIn the middle of the fall, Sammy got mono and had to drop out for the rest of the semester. The funny thing was his girlfriend, Carrie, still liked to hang out in our suite. Dylan and I didn't mind because she was cool and fun to be with. She already had the code for our door, so it wasn't strange to come home to find her studying in our common living room. She even slept in Sammy's room some weekend nights, especially if we all were drinking.\n\nOne Saturday Dylan came home from practice. The team had lost the night before, and his coach made them work their asses off. I was still in bed, even though it was close to noon, when Dylan stuck his head in my room to tell me he was going to shower. He asked if I wanted to go downtown to catch lunch. I told him sure.\n\nI was sitting in the living room playing a game on my laptop when Dylan came back in from the showers. He had a towel wrapped around him and flip-flops on his feet. His long hair was dripping, running down onto his shoulders and back. He pulled the towel off and dried his hair. We had seen each other naked enough times that I didn't make anything of his nudity. His head was still covered by the towel, and my face was glued to my laptop screen when we both heard a voice.\n\n\"Holy fuckin' shit.\" We looked up to see Carrie standing in Sammy's doorway. Neither Dylan nor I knew she had slept over. I looked up to see the shocked expression on her face. I followed her gaze that was focused on Dylan's dick. I have to say that it's proportional to his size. In other words, it was a big dick. I had seen it enough times not to be freaked out. I admit the first time I saw him nude, I felt the unfairness of the Cock Gods when they passed out dicks. \n\n\"Uh, hi, Carrie,\" I said. \"We didn't know you were here.\" She said nothing.\n\n\"Yeah, sorry,\" said Dylan. He pulled his towel from his head and started to wrap it back around his waist.\n\n\"Stop,\" said Carrie. Dylan froze. She continued to stare at his exposed dick. \"That is awesome, dude. Sammy never told me you were hung like that.\"\n\nI could see Dylan's dick twitch. We both thought Carrie was not only a nice person, but she was also cute. I'd say most things about her were average, like height, weight, even looks. But the whole package was really attractive. Right now she was wearing a cropped tee shirt and red boy shorts undies. She had left cute far behind at this moment, and traded it for hot. Her nipples pressed against the cotton of her shirt. In her belly button, she had a simple gold ring that caught the light. Her tight tummy looked quite yummy.\n\n\"Thanks, I guess,\" said Dylan. \"Liam and I are going downtown for lunch. Wanna' join us?\"\n\nStill staring at his member, Carrie nodded. \"Then, I'll get dressed,\" Dylan said.\n\n\"If you have to,\" said Carrie. I couldn't help but laugh. Dylan cracked up next, followed by Carrie, releasing the tension in the room. Finally, Dylan walked to his room. Carrie's eyes tracked him every step of the way. Her lips made a little \"O\" as she admired his tight buns.\n\n\"Maybe you should get dressed, too,\" I said. Carrie took a second to clear her mind. She looked down at what she was wearing, and said I was right. She went back into Sammy's room. Ten minutes later we were waiting for the shuttle bus to take us to town.\n\n\"Hope I didn't embarrass you,\" said Dylan. \"I totally didn't know you were there.\"\n\n\"Don't sweat it,\" said Carrie. \"As you might have noticed, I kinda' enjoyed it.\" We got to town, and hit our favorite deli. Over lunch Carrie filled us in on Sammy's status. We also just talked about school and the usual college bullshit. After walking around, and getting chilled in the late fall afternoon, we caught the shuttle back to campus.\n\nWalking back to our dorm, I asked her, \"Are you staying over tonight?\"\n\n\"If you don't mind, I think I will.\"\n\nDylan and I assured her it wasn't a problem. She offered to buy pizza, and we stopped for a twelve pack of Stella, Carrie's favorite. When the pizza arrived later, we sat in our living room eating and drinking.\n\nAfter we finished the pizza and each had three beers, we were feeling quite laid back. Carrie pulled her sweatshirt over her head, revealing the cropped tee shirt. Her nipples still looked hard and tempting. She caught us staring.\n\n\"Sometimes they have a mind of their own,\" she said. \n\n\"Yeah, I know what you mean,\" said Dylan as he adjusted his crotch. \n\n\"I did that?\" she asked.\n\n\"Well, it's kinda a holdover from this morning,\" he said. \"That was unexpected, but, I gotta say, sexy.\"\n\n\"You liked me looking at you naked?\" she asked.\n\nHe colored a bit, and nodded. \"But you didn't get hard,\" Carrie said.\n\n\"Not there, but in my room I was like freakin' iron. I had all I could do not to stroke off.\"\n\n\"Now, that's something I'd like to see.\"\n\n\"You'd wanna see a guy jerk off?\" I asked.\n\n\"Definitely.\" She looked at me, \"In fact, I wouldn't mind seeing two guys jerk off.\"\n\nDylan and I shared a look. \"Really?\" he said.\n\n\"Yep.\" She replied.\n\n\"Uh, what about Sammy?\" I asked.\n\n\"Sammy's not here. I'm here. And, it's not like we're fucking or anything.\"\n\n\"It still sounds kinda' strange,\" I said.\n\n\"Let me put it this way,\" said Carrie. \"Would you like to watch me masturbate?\"\n\nIf both of us weren't hard already, I knew we were after that statement. Dylan chuckled and said, \"What guy wouldn't want to watch a pretty girl get off?\"\n\n\"Exactly,\" she replied. \"So what makes you think a girl wouldn't want to watch a guy\u2014or guys\u2014get off?\"\n\nWe all remained silent, looking at each other. Carrie stood. \"I'm going to pee. When I'm gone why don't the two of you talk about letting me watch you jerk off?\" She walked toward the half-bath we had in our suite.\n\n\"Is she serious?\" asked Dylan.\n\n\"She sounds like it,\" I answered. \"What do you think?\"\n\n\"I think it's insane. I mean what would we do? Just strip and jerk off?\"\n\n\"Pretty much,\" I said.\n\n\"Would you really do it?\" Dylan pushed.\n\n\"Maybe...If.\"\n\n\"If what?\" he said.\n\n\"If Carrie does it, too.\" \n\nWe shared a fist bump. When Carrie returned, she looked at both of us. \"Well?\"\n\n\"Here's the deal,\" I said. \"We'll do it on one condition.\"\n\n\"That I never tell Sammy?\" she said.\n\n\"Uh, then make that two conditions.\" I replied. She waited for me to continue. \"Dylan and I will strip and jerk off, only if you do the same.\"\n\nCarrie sat back on the couch. We could see her mind turning. Finally, she grinned and said, \"Deal.\"\n\nThe three of us sat there for a bit. Finally, Dylan stood up. \"Fuck it, y'all seen it already.\" He stripped in seconds. His long dick was half-hard. After staring at him for a minute, Carrie shifted her gaze to me. I stood to pull off my clothes. By this time I was fully erect.\n\nCarrie smiled and said, \"That's also very nice. I guess it's my turn.\" She pulled off her top revealing her small, round boobs and those hard nips we'd been eyeing. She ran her hands over them. She quickly unzipped her shorts and pulled them and her underwear down to the floor, before stepping out of them. Dylan and I admired her smooth mound.\n\nThe sexual tension was thick in the room. We just looked at each other. Then, Carrie turned to pull a chair over until it was directly in front of the couch. I admired her cute butt. She turned to say the guys would sit on the couch and her on the chair. In that way, we could see each other.\n\n\"Do you guys need anything?\" she asked. Dylan ran his hand along his growing shaft. \"Yeah, I need some lube. I'll be right back.\" He went to his room. When he was gone, Carrie said, \"Jesus, he's both a 'shower' and a 'grower'. That must be at least eight inches.\"\n\nWhen he returned, he was fully erect, and his dick bounced with every step. He and I sat on the couch, while Carrie settled on the chair. With a wide grin, she opened her legs, and draped them on the arms of the chair. Her exposed pussy glistened in the light. She ran a finger along her swollen lips. \"Obviously, I don't need any lube.\" She inserted a finger, moved it around, then withdrew it. She looked at it before taking in her mouth. Both Dylan and I groaned. He started pouring the lube into his palm. I took the tube and did the same. As we were rubbing our shafts, Carrie played with her nipples.\n\n\"God, it's so sexy watching you guys rub your dicks. I can't wait any longer.\" She started rubbing her slit, covering her lips with liquid. I could now smell her scent. My hand automatically began its familiar pattern. As my pleasure increased, I used my other hand to cradle my balls. \n\nI felt Dylan's movement. I shifted my eyes to see him making long slow strokes on his cock. I couldn't be sure, but I thought it looked even longer than before. \n\nCarrie now had two fingers inside, while she pushed hard on her clit. Next, she began to move in a circular motion around her clit. Her chest was heaving as sweat broke out, covering her boobs with a light sheen.\n\n\"How you guys doin''?\" she asked. \n\n\"Fuckin' great,\" said Dylan. I nodded in agreement.\n\nSuddenly Carrie stopped and dropped her legs to the floor. As her knees closed, she bent forward. \n\n\"I'm real close, but there's something else I want.\" Dylan and I had slowed our stroking. The ache in my loins was almost unbearable. I wanted to cum, but I wanted to see her cum, too. She moved to kneel in front of us. He hands rested on a knee of both Dylan and me. \"I want to see you guys stroke each other.\"\n\nMy hand froze in place. Dylan also stopped his hand. \"What?\" he said.\n\n\"I want you to rub Liam's cock, and I want Liam to rub yours. It's simple.\"\n\n\"Carrie, I've never done that,\" I said.\n\n\"I'm not asking you guys to fuck each other, or give a blow job. Just rub it until each of you cums. I'm going to do myself, and hope we reach the end together.\"\n\n\"That wasn't the plan,\" said Dylan.\n\n\"You guys are both athletes. Sometimes you have to change plans. This would be one of those times.\"\n\n\"If we say 'no',\" I asked.\n\n\"Then, we get dressed.\"\n\n\"But I'm really wanting to cum,\" said Dylan.\n\n\"Me, too,\" replied Carrie. \"Do this and I guarantee you it will be the best ever.\"\n\nDylan and I looked at each other. I never had a desire to do anything sexual with a guy. I did have to admit that Dylan looked erotic with his big erection and muscular body.\n\n\"What do ya say?\" I asked.\n\n\"Man, I wanna get off so bad. If we do it, it's gotta remain with just the three of us. Agreed?\"\n\nBoth Carrie and I promised.\n\n\"What the fuck,\" he said. Carrie moved back to her chair, respread her legs, and began plunging her fingers in and out. \n\nSlowly I moved my hand until my fingers grazed Dylan's base. He reached over and grabbed me. I wrapped my fingers around the thick shaft.\n\n\"Fuck, man, this is huge,\" I said. I ran my hand up and down. I was more than familiar with what my cock felt like. This was so strange. It obviously felt like a cock, but at the same time it was so different. It was not just the size of it, but the texture was foreign to me. I began moving my hand faster. \n\nThen, Dylan started pumping me. I figured a hand job is a hand job, whether it's a girl or a guy. But knowing it was my roommate made it ten times more erotic and forbidden. I couldn't stop my hips from moving up with every stroke.\n\n\"Jesus, that is so fuckin' hot,\" said Carrie. She was now using three fingers in her cunt, while rubbing hard, big circles on her clit. \"I am at the edge. Are you guys ready?\"\n\nThe pressure in my balls told me I was seconds away. Dylan's cock was throbbing in my fist. \n\nCarrie stood and raced to us. She reached out and took our two cocks, one in each hand. She pushed our crowns together so as we stroked each other, our cocks rubbed against the other's. She pressed the tips to her right breast. \"Cum on my tits. Cum on my tits,\" she yelled. I pushed Dylan's cock to one of her boobs, rubbing the tip on her nipple. He did the same.\n\nCarrie straddled my leg and began humping it. \"Oh, here it comes,\" she cried out. \n\nDylan gave me a hard stroke and I started erupting. A second later I felt him pulsing. We kept stroking as our orgasm splattered Carrie's boobs, chest, chin and cheeks. She kept slowly rubbing her pussy on my leg, but seemed to have passed the climax.\n\nShe took a long breath. Sneaking a peek up at both of us, she licked the tips of our dicks. Our hands were still holding each other's cock, though they were rapidly deflating. \n\n\"That was the hottest fuckin' thing I've ever done,\" said Carrie, as she crawled back to her chair. \"I can't wait until the next time.\"\n\nMy hand tightened around Dylan's soft shaft. \"Next time,\" I thought.\n\nThe end.\n\nThere wasn't a sound in the room. I had my eyes closed for the last part of Liam's story, trying to envision what he was describing. I noticed my friends. Will had his hand inside his shorts, and Bart had undone his zipper. His erection was clearly visible behind his briefs. Alexis was rubbing the crotch of her shorts, while Emily had one hand under her blouse and the other inside her jeans.\n\n\"So, where there other times?\" asked Emily.\n\n\"Yeah,\" replied Liam. \"She got her roommate to join in. That got really wild.\"\n\n\"Do tell,\" said Alexis.\n\n\"Nope. This is a story about masturbation. We went way beyond that.\" The rest of us used our imaginations to fill in the blanks.\n\n\"I don't know about you guys,\" said Alexis, \"but I need a break before I can tell my story.\" We all agreed. \n\nWill and I found ourselves once again on the deck, beers in hand.\n\n\"I think Liam's story will win,\" he said.\n\n\"It's not who wins, but who loses,\" I said. \"I'm pretty sure Bart will take the booby prize.\"\n\nWe drank in silence. Resting my head on Will's shoulder I said, \"Did you ever do that?\"\n\n\"What?\"\n\n\"You know, jerk off another guy.\"\n\n\"I'm straight, Hannah.\"\n\n\"I know you are. But I think so is Liam. I don't think it's gay to think about sexy people of your own gender.\"\n\n\"Like you and Emily getting off together?\"\n\nI sipped my beer. \"We did more than watch each other,\" I said.\n\n\"Sorta' like Liam and Dylan?\"\n\n\"Yeah, with a little of Emily and Marsha thrown in.\"\n\n\"Would it bother you if I said I find that insanely hot?\"\n\n\"You just said it, numbnuts. And, no, I'm not upset. Bothered is another thing.\"\n\n\"Like in turned on?\" he asked.\n\n\"Like I keep thinking about what you said before. You know, about us maybe having a private session. I think I'd like to hear some more of your stories.\"\n\n\"And, I want to hear about you and Emily. Are you saying we could really do this?\"\n\n\"Well, I'd like to know if you ever did anything with a guy. What do you say?\"\n\nBefore he could answer, Alexis called us back to the living room.\n\n\"Just two more to go. My turn is next, and we'll finish with Hannah. Then comes the voting.\"\n\n\"It's what comes after the voting that I'm looking forward to,\" said Emily.\n\nAlexis smiled. She pulled her phone out and began reading what was there.\n\nAlexis' Story\n\nThis is a true story. It happened when I was temping, before I found my full-time job. I was doing administrative work at an insurance company. Mostly I staffed the front desk, answered phones, did filing, that sort of stuff. It was boring, but I was getting paid.\n\nI was there about a week, when this really good looking guy came in. I asked if I could help him. He smiled and said he worked here. He was returning from vacation. He looked tan. Well, he looked awesome. He's about thirty. I figure he's over six feet tall, has a trim bod that looks good in his tailored clothes, and has sandy, curly hair. Oh, he has a killer smile. I hoped I wasn't licking my lips as he talked to me.\n\nAs the days went on I looked forward to him coming in every day. He always stopped at my desk to say hello and chat. He had a relaxed manner, and could make me laugh. About two weeks later, he asked me if I could come to his office. I got one of the other girls to cover the desk.\n\nHe was standing by the window. He told me to take a seat. For the first time since we met, he seemed uneasy. \n\n\"Alexis, I've enjoyed getting to know you. I can tell you have a lot of smarts and probably won't be temping for long.\"\n\nI thanked him, wondering where this was going. He paced back and forth. Finally, he stopped and moved to the front of his desk, and sat on the edge, a few feet in front of me.\n\n\"I want to ask a favor. Before I do, please understand you can totally turn it down. There will be no hard feelings, and it will not reflect on your job. This is a personal favor. I sense you are sensible and self-confident.\"\n\nI looked at him and smiled. \"Well, here goes,\" he said. \"I've been dating this woman for a number of months. We've become quite close, and, well I think she may be the one.\"",
        "\"Congrats,\" I said.\n\n\"The thing is she seems to have a figure much like yours. Please understand, I don't gawk at you, but it's hard not to notice you are full-figured.\"\n\nI laughed and said, \"Yeah, I have big tits. Not surprised you noticed.\"\n\nHe laughed in response. \"That doesn't offend you?\"\n\n\"That you think I have a nice body? No, I'll take it as a compliment.\"\n\n\"Great. The thing is I like to buy Sarah, that's her name, nice things. I enjoy giving her presents, especially clothes. She says she likes them, but never wears anything I buy her.\"\n\n\"Did you ask her why?\"\n\n\"She said they just don't fit well, I told her to return them and get something that does fit. She said she didn't want to insult me, but I told her it was no problem. But, I want to give her something really nice, and have it so she can wear it.\"\n\n\"Ok, but where do I come in?\"\n\n\"God, this is embarrassing. Since you seem like you might be the same shape, maybe you could help me pick out some things.\"\n\n\"Can't you just get her sizes?\"\n\n\"I did, but she says you can't trust going by labels. Things are cut differently, even if they are the same size.\" I nodded, knowing this was so true.\n\n\"What kind of things are you looking for?\"\n\n\"All kinds. A dress, some casual clothes, and, um, some more intimate stuff.\"\n\nMy mind zeroed in on the word, \"intimate\". Geoff must have seen the shock on my face.\n\n\"This is a dumb idea. Forget it, Alexis. I apologize.\"\n\n\"Wait,\" I said. \"Why don't you let me think about it for a minute? Can I ask a few questions?\"\n\nGeoff told to take my time, and ask any question I wanted.\n\n\"Would you want me to go with you on a shopping trip?\"\n\n\"I think so\u2014I mean yes. I would want you to come along.\"\n\n\"Ok, I could do that.\" \n\n\"You would!\"\n\n\"Sure. But I still think it may not work. We might appear to have similar body types, but there could be differences. Our breasts may appear the same size, but what about our hips? Does your girlfriend have long legs like mine? Is she short-waisted? It's just there could be a lot of variables. Do you have any pictures of her?\"\n\nGeoff pulled his phone out and scrolled through the photos. He passed me the phone so I could see a picture of a young woman who looked a bit like me. She was wearing a jacket and the picture was from about mid-thigh up.\n\n\"She's very pretty,\" I said. \n\n\"Thanks, I think she's beautiful. That's why I want to get her something that will look good on her.\"\n\n\"Why not just take her shopping?\"\n\n\"I want it to be a surprise. I also want her to think I know how to buy something that will fit.\"\n\n\"Geoff, if I do all the sizing, you still won't be the one figuring out what will fit her.\"\n\n\"Yeah, but maybe I'll learn.\"\n\nI looked at his phone again. \"You wouldn't happen to have any pictures that show more of her body?\"\n\n\"More of her body?\" he asked with a concerned look.\n\n\"You know, like in a swim suit or something.\"\n\nI could see he was thinking about something. \"Uh, no, I don't have any swim suit pictures.\"\n\n\"I sense a 'but' coming,\" I said.\n\n\"I do have a couple that show her, well, naked.\"\n\nGeoff and I stared at each other. \"I don't think she'd want you showing those to me.\"\n\n\"Maybe. She likes them. I know she's shown them to some of our friends, even a couple guys. She's not the shy type.\"\n\n\"Still...\" Geoff cut me off.\n\n\"I'm not trying to embarrass you or shame her. She really likes being naked. We go to nude beaches, and even spent a week at a nude resort. If this works out, I'll tell her what I did.\"\n\n\"If you think she won't be pissed, then show me.\"\n\nGeoff took his phone back. After doing something that looked like he was digging down a couple levels of security, he handed the phone back to me. I let my eyes fall on the screen.\n\nA full-length nude woman looked back at me. She was standing on a sandy beach with the ocean behind her. She had a body that was quite close to mine. We both have a narrow waist, moderate hips, long legs and, big boobs. Her nipples were different, but the size and shape looked like twins of mine.\n\n\"Wow, she's amazing,\" I said.\n\n\"I agree,\" Geoff replied. \"What do you think? Can you help me?\"\n\n\"I think I can. When do you want to do it?\"\n\n\"How about this Saturday? She's going to visit her sister out of town. I'll pick you up, we can shop, and I'll treat you to a very expensive lunch.\"\n\n\"Sounds like a good deal,\" I said. \"There's one thing though. Didn't you say you both went to a nude beach? How is it that I only see her?\"\n\nGeoff blushed. \"Uh, well, you don't need to see me to help with clothes for my girlfriend.\"\n\n\"You're right. But, it could be fun to see you.\" I winked. We finalized the arrangements for the weekend, and I went back to my desk.\n\nGeoff arrived on time on Saturday. We headed to an upscale mall. At first our conversation was stilted. Finally, I said, \"Are you nervous?\"\n\nHe nodded, while keeping his eyes on the road. \"Last night I hardly slept. I'm thinking this is not such a good idea. I mean when I first thought about it, I thought it could work. Now, I think I may be putting you in an awkward situation. Plus, I don't want you or anyone to think that this is some sort of harassment, you know since we work together.\"\n\n\"I'm fine with this,\" I said. \"Relax and let's have a fun day. I'm looking forward to that expensive lunch, plus I get to pick out expensive clothes. The only down side is that even though the clothes will fit me, I won't end up with any.\"\n\n\"How about if I buy you something as a thank you gift?\"\n\n\"Really? That sounds great.\"\n\n\"You let me know during the day if anything you're helping me pick appeals to you. It'll be my pleasure to get it for you.\"\n\nWe arrived, parked and went into the mall. The first stop was a women's casual store where Geoff wanted to get his girlfriend an outfit. He said she liked slacks and sweaters. Having seen her picture, I knew what colors would work for her\u2014the same that'd work for me. I chose several pants, blouses and sweaters. \n\n\"I guess I should try these on,\" I said. We headed to the changing area. I changed into the clothes and modeled them for Geoff. He liked one set of tan slacks, a deep purple sweater worn over a cream-colored blouse. After changing I gave him the items so he could pay. There was nothing here that interested me enough to ask for him to buy it.\n\nThe next stop was another store that had more formal clothing. They were going away for an insurance conference he was attending. \"There's a dinner and people tend to dress up a bit. Nothing like gowns, but the women wear cocktail dresses.\"\n\n\"Geoff, do you think your girlfriend would probably rather pick out her own dress?\"\n\n\"I want to surprise her. If she doesn't like it, we'll exchange it.\" He paused and said, \"I'm trying to impress her a little bit. I mean would you like it if a guy bought you a dress that fit and looked good on you?\"\n\nI agreed it would. Again using what looked good with my build and coloring, I picked out several dresses. Once more, I modeled them. Geoff took a long time looking at me in each.\n\n\"Alexis, you look spectacular in these dresses. I'm confident Sarah will look great in one of them.\"\n\n\"What's your favorite?\"\n\n\"Could you try on the black one again?\"\n\nI smiled. The black was form fitting and made from a soft material. It had a high collar, but was cut quite low in the back. Since the back was open, I couldn't wear my bra. Sarah would have to get a special bra, if she wanted to wear one. The dress also made my ass pop.\"\n\nIn the changing room, I stripped down to my panties. I pulled the black dress on, examining myself in the mirror. As I turned, I could see panty lines. I reached under and pulled off my underwear. The cool air moving over my pussy gave me a rush. When I checked the mirror again, I could see my nipples clearly pushing against the soft fabric. I thought Geoff was probably going to enjoy this modeling session.\n\nI walked back out to find him standing across from me. I turned, walked down the small hallway, then returned. I know my breasts were bouncing.\n\n\"You like?\" I asked.\n\nGeoff stared. \"Geoff, do you like this one?\"\n\n\"All I can say is 'Wow',\" he said. His eyes kept moving over me, but always returning to my boobs. \n\nI cupped my boobs, saying, \"Yeah, I didn't have the right bra, so the girls were let out.\" I juggled them a little. \"Plus I had terrible panty lines, so I had to ditch them, too. Sarah will have to get a really tiny thong, or go commando like I am.\"\n\nGeoff's face was red. I noticed a big bulge in his pants. He dropped his hands to cover it.\n\nI couldn't resist teasing him. \"By the looks of that,\" I said nodding toward his crotch, \"I take it you think this looks good.\"\n\n\"Shit. I'm sorry, Alexis. I didn't mean to...you know. It's just you look so damn sexy.\"\n\n\"Sarah will look equally sexy. You may never make it to the dinner.\" I spun, wiggled my butt, and went in to change. Geoff paid for the dress. We headed for an expensive lingerie shop.\n\n\"I want to get her some night clothes,\" he said.\n\n\"You mean some naughty night clothes?\"\n\nHe grinned. \"Listen, you don't have to model these. If you help me pick them out, that will be perfect.\"\n\n\"We'll see,\" I said. \"I might like to model them.\" I had noticed that his erection did not completely disappear.\n\nThis store was set up for couples to have privacy. In addition to a bank of changing rooms, they provided two areas that were like a suite. There was an ante-room, separated from the main area of the store, along with a changing room. \n\nGeoff was totally lost, so I took the lead. I picked out a few baby doll sets, some thongs and V-strings, and a couple backless bras. When we were in the changing suite, I asked for the dress. I went in, stripped, and pulled on a V-string along with a backless bra. As I emerged Geoff pulled his hand away from the front of his pants. Again, the lump was back.\n\nI modeled the dress. \"See, with this string panty and the backless bra, Sarah can still wear some underwear and not have lines showing. Of course, she could do like I did, and wear nothing underneath.\" Geoff just grinned and nodded.\n\nBack in the room, I stripped. The baby doll outfits were both similar. The top had a lace bodice, and the rest was extremely sheer. The hem fell along the bottom of the crotch in my thong. The lace top was such that my nipples shown through. I debated going out like this, but I was getting a rush knowing how much I was turning on Geoff.\n\nI exited the room. Geoff looked me over from head to toe. I heard him say softly, \"Fuck.\"\n\nI turned, showing him my practically bare butt. As I spun back, he was rubbing his crotch.\n\n\"Geoff, if Sarah wears this, I suspect it will only be for a minute.\"\n\n\"If that long,\" he said. I let my fingers glide over my nipples that were now peeking out of the lace. \"See, a girl gets excited, too.\"\n\nHe kept his hand on his crotch.\n\n\"Do you need relief?\" I asked.\n\n\"What?\"\n\n\"Geoff, you've had a hard on for over an hour. You should do something about it.\"\n\n\"I can't.\"\n\n\"I'm sure you can. I'm also sure you have done so many times in the past. It's ok. We're in a private area. Go ahead.\"\n\n\"You're not serious,\" he said with a raspy voice.\n\n\"I'll show you how serious I am.\" I slipped my hands under the sheer bottom of the baby doll, and eased down my thong. Geoff kept his eyes fixed on my pussy. I was happy I had shaved this morning.\n\n\"Take it out, Geoff. I want to watch.\"\n\nShaking his head as if to make sure he wasn't dreaming, Geoff slid down his zipper. He undid his belt, unbuckled his slacks, and pulled out his erection. It was a nice size. He didn't hesitate any longer. He spit into his hand, coated his shaft, and began long, fast strokes. \n\nI raised the hem of my baby doll, ran my finger along my damp slit, and licked my damp finger. Geoff increased his tempo. I noticed a box of tissues on a table. I grabbed a handful. Standing close to him, I stood with my legs apart, spreading my pussy with my fingers. \"Close?\" I asked.\n\nHe nodded, but kept stroking. Smiling, I slid a finger inside me. Geoff groaned, and started to spasm. I covered the tip of his dick with the tissues. I could feel the spurts as they filled the soft paper. He came a lot. When he seemed finished, I pulled the tissues away. His dick had softened, and lay against his thigh.\n\n\"Now this is what I call a fun shopping trip,\" I said.\n\nWe bought the baby doll and several sets of panties and bras. I picked out a wicked baby doll for myself. About a month later I met Sarah. She never mentioned that I had helped her boyfriend pick out clothes for her. I, of course, never told her of my involvement. I also never disclosed how much fun I had watching her boyfriend jerk off.\n\nThe end.\n\nAll of us sat in silence, probably replaying the last scene in our minds. \n\n\"But you didn't masturbate,\" said Bart.\n\n\"The rules didn't say it had to be the teller who masturbated; it just had to be a masturbation story,\" responded Alexis.\n\n\"I liked it,\" said Will.\n\nAlexis shot him a smile. We all took a break, refilled our drinks, had some snacks, and then reassembled. Alexis announced that the last story\u2014mine\u2014was up. I wiped my sweaty palms on my jeans, pulled my papers from my bag, and, in a somewhat trembling voice, began.\n\nIt was as Will described. Once I got going, I became less nervous, and more into the story. I knew I was exposing a fantasy, but it was a powerful one. Even as I was reading it, I felt my underwear getting damp. When I finished, I took a deep breath. For the first time since I started, I looked around at my friends. I was shocked.\n\nBart had undone his pants so he could rub his erection through his boxers. Will had his hand inside his pants, Emily was in the same condition, while Liam and Alexis appeared to be trying to be discreet in their touching.\n\n\"Fuck, Hannah, that was hot,\" said Liam. Everyone nodded in agreement. \n\nBart started to zip up, but Alexis said. \"Don't bother, Bart, I think you're going to be doing more in a minute.\" He left his zipper open.\n\nAlexis passed out a slip of paper to everyone. \"Write the name of the person who had the worst story. If there is a tie, we'll have a run-off with those who are tied. Remember you vote for the worst for both a guy and a girl.\" In a few seconds she collected them. She read them out. It was clear that Bart was the unanimous loser. What surprised me was that Alexis was voted the worst of the women.\n\n\"Ain't that justice,\" Alexis said. \"I lost at my own damn game.\" She looked at Bart. \"Shall we?\"\n\n\"You mean right here?\" he said. \n\n\"What's the point of going into another room to strip?\" With that she pulled off her top, then quickly undid her bra, dropping it to the floor. To say there was a hush in the room as her magnificent boobs came out would be a vast understatement. After a few seconds, Liam started to applaud, soon we all joined in. Alexis took a bow, shook her boobs, and stripped off her jeans and thong. She looked like the poster child for a wild woman. \n\nWe looked at Bart. He stripped quickly. His erection stood up, bobbing with every movement. It was not large, but it looked ready to go. \"What do we do?\" he asked.\n\n\"If I have to tell you how to jerk off, you'll need more help than I can give,\" Alexis said as we all laughed.\n\n\"I mean where do we sit?\" Alexis asked us to toss some her some pillows. She arranged them on the floor between the couch and the side chairs. Will and Liam moved the coffee table out of the way. Alexis sat on a couple of the pillows while Bart took his place opposite her.\n\n\"Do we just start?\" he asked.\n\n\"Do you want a written invitation?\" Alexis shot back.\n\nAlexis started making small circles around her clit. Bart stared for a few seconds before he ran his hand up and down his erection. He then stopped.\n\n\"What now?\" asked Alexis.\n\n\"Uh, I need some lube or moisture. I can't do it if it's too dry.\"\n\n\"Oh, for fuck's sake,\" said Alexis. She told him to stand. She crawled over, took hold of his erection, and guided inside her mouth.\n\n\"Oh boy,\" said Bart. Alexis moved her head back and forth to make sure he was receiving the required moisture. Suddenly he stopped moving, his body going stiff.\n\nAlexis pulled her face away as Bart kept spurting all over her.\n\n\"Bart. Goddamn it, you came in my mouth.\"\n\nBart plopped down on a pillow. \"Sorry. I couldn't help it.\" Alexis grabbed some napkins to wipe the cum off her face and boobs. \"Talk about a hair trigger,\" she said. \"Is there any in my hair? I hate when that happens.\"\n\nI told her I didn't see any. Alexis turned back to Bart. His limp dick hung between his legs, looking small and wasted.\n\n\"I don't suppose you'll be getting that up and working again right away?\" she said.\n\n\"Probably not,\" he answered.\n\n\"Well, boys and girls, it looks like it's gonna' be a solo act.\"\n\n\"Alexis, you don't have to...\" Will started to say.\n\n\"Shut up, you idiot,\" Liam said. \"A deal's a deal. I want to see her do it.\"\n\nAlexis leaned back on the pillows, once again spreading her legs. Her opening was already wet. Her finger played along her slit, then slowly disappeared between the folds, while her hand massaged a breast. The room became totally silent. \n\nAlexis pumped a finger, wiggled it back and forth, then pulled it out to spread moisture on her clit, just emerging from its hood. I had never seen her naked from this angle. Her clit looked large as her fingertip moved around it. She plunged two fingers back inside and moved her hand from her breast to her clit. I could hear the squishing sounds indicating a lubricated pussy being given the attention it deserved. Alexis was now moving her hips in coordination with her fingers moving quickly in and out. She made small grunting noises every time her fingers plunged in to their full extension.\n\nI looked around the room. Everyone's gaze was riveted on the naked woman, while all were touching themselves. My own pussy ached. I gave in, and slipped a hand inside my pants and underwear. I let out a sigh as my finger provided some relief.\n\nAlexis was becoming vocal as her finger increased its tempo on her clit, and her other hand was a blur fingering herself. Her hips began to lift from the cushions. She found a rhythm of thrusting and plunging that increased with every thrust. Her grunts were now louder and more frequent. \n\nHer breasts were flushed with excitement; her nipples pointing upwards. Her fingers started pushing hard down on her clit. With one last big push inside, she held her breath as her body tenses. She let out a long moan, followed by a full body spasm. As she pulled her fingers from her pussy, I saw a couple small spurts.\n\n\"Holy fuck,\" Liam said. \"She squirted.\"\n\n\"That looks so fucking sexy,\" said Emily. Alexis remained motionless on the pillows, her juices running onto her thighs.\n\n\"We should get her a towel or something,\" said Will.\n\nLiam pointed to Bart. \"The least you can do is clean her up, since you came all over her.\"\n\nBart looked shocked. \"Huh?\"\n\n\"For fuck's sake,\" said Liam. He moved between Alexis' legs to use his tongue to remove the copious moisture. After he cleaned her thighs, he licked slowly from bottom to top, ending with a swirl of his tongue on Alexis' still hard and exposed clit. She cried out as another orgasm took her.\n\n\"Taste good?\" asked Emily. Liam moved to her, pressing his lips to hers. Emily snaked her tongue out to clean his chin and upper lips. Emily grasped his erection through his pants as their tongues twirled together.\n\nI looked at Will. His pants were undone, and his boxers tented with his erection. There was a damp spot where the tip of his cock pushed against the fabric. As his eyes locked onto mine, an unspoken message flashed between us. I knew it wouldn't be long before he and I were doing what I thought was impossible. We would be naked and masturbating.",
        "Alexis slowly regained her composure. \"That was a rush,\" she said. She looked at Liam. \"You know that wasn't included in the rules. \n\n\"Just tryin' to help,\" he said with a wide grin.\n\n\"Yeah, I bet,\" Alexis said, but there was no anger in her voice. She sat up on the floor, her boobs swaying with the effort.\n\n\"Those are awesome,\" said Bart. Alexis cupped them, lifted one boob, and licked her nipple. \"I kinda like them myself,\" she said.\n\n\"I always thought that was a myth,\" said Emily. \"You know, licking your own boobs.\"\n\nAlexis lifted and licked her other boob. \"As you can see, it's no myth. It feels great, too.\" Stood and stretched. \"You guys have more beers or whatever, I need a shower.\" We watched her full bottom as she exited the room.\n\nBart got dressed, and we all had another beer. When Alexis returned, her hair was still damp and hung around her face. She grabbed Bart's beer to take a sip.\n\n\"When I was in the shower, I had an idea about our next dare.\"\n\nI said, \"Next dare?\"\n\n\"Yep. This was so much fun, I can't imagine not doing something like it again.\"\n\n\"What's your idea?\" asked Liam.\n\n\"Oral sex stories,\" she said smiling.\n\n\"And the loser...?\" asked Emily.\n\n\"I think you can figure that out.\"\n\nAs that thought settled in our minds, I realized that this group of friends was going to have another chapter to add to our chronicles. I think we need to rename them the \"Sex Chronicles\".\n\n(Thank you for all the comments and support for Chapter 1. Once again, I did not have an outside editor for this chapter. All the errors and mistakes are my own, and I ask your forgiveness. I'm not sure I will continue with this series, but let me know how you feel about that. As always, I love to hear from you, either via a vote, a comment in the section after this story, or directly to me at my email which is also listed in my profile on Literotica.com. I will answer every email.)"
    ],
    "authorname": "AltheaRose",
    "tags": [
        "lingerie modeling",
        "male masturbation",
        "mutual masturbation",
        "naked in front of friends",
        "oral sex",
        "oral"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-m-chronicles-ch-02"
}