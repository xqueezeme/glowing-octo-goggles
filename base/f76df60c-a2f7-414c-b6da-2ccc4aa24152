{
    "title": "Hard Landing Ch. 05",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the 2019 Reader's Choice Awards. Thank you to all who voted. ***\n\nWelcome, friend, to Chapter Five. If you haven't read Chapters One through Four, you'll be lost, and I worry you don't understand how Chapters work. Are you okay friend?\n\nAs usual, I've updated the Spotify playlist found in the contact tab of my author page with the songs from this chapter. Shout out to those who've given me a \"like\" on that.\n\nMany thanks to my editor, ThisNameIsntTakenYet, who writes in his second language better than I write in my first.\n\n~~ Kill Devil Hills, Outer Banks, North Carolina ~~\n\nJILL\n\n\"Any requests tonight?\" I heard Jo ask backstage. It was ten minutes before the band was scheduled to go on.\n\n\"Some R.E.M. would work for me,\" said Jack.\n\n\"Smithereens,\" said Steve.\n\n\"Hey Larry, how come I set up your mic every show but you almost never use it?\" I asked as I climbed down the steps behind the stage. I thought I'd gotten pretty good at helping the band set up for shows. I felt almost like a real roadie now.\n\nJo looked at Larry, who was sitting on a stool tapping out a cadence on the felt-covered top of an old amp with his drumsticks. \"Yeah Larry, why is that? Are you leading a semi-charmed life?\"\n\nLarry stopped drumming, then pointed a drumstick at me. \"You. You're a troublemaker. You're always making the troubles.\"\n\n\"What? What did I say?\" I asked, confused. He started drumming again.\n\n\"Fine! I'll do it, but Suzanne has to massage my hand after the show. And I want you to do Hazy Shade of Winter again tonight sweetums. That combo of bass line and vocals always makes you shimmy your butt in the nicest way, which I greatly enjoy from my seat behind you.\"\n\n\"You got it, baby,\" said Suzanne, grinning and giving her hips a shake in her red leather skirt and matching ankle boots.\n\n\"What's going on, what just happened?\" I asked.\n\n\"Larry's going to start us off singing Semi-Charmed Life tonight,\" Jo said.\n\n\"And it's going to make my hand hurt,\" Larry said.\n\n\"I'm so confused,\" I said.\n\n\"Jo and Steve like to make me sing Semi-Charmed Life, because the lyrics are almost like a rap. It's racist how you always make the black guy sing it, by the way.\"\n\n\"Dude, you wouldn't get half-way through End of The World without dropping half the words,\" Steve laughed.\n\n\"Not the same. R.E.M. be SO white.\"\n\n\"Babe, you're the one who first wanted to sing it in high school,\" said Suzanne.\n\n\"But what does that have to do with your hand?\" I was lost.\n\n\"Larry has this weird tic,\" Steve said.\n\n\"It's not a tic, it's a physiological phenomenon,\" Larry said. He turned to me, \"I can only sing and play drums at the same time using traditional grip.\"\n\n\"What? What's that?\" Sara said. She was confused too.\n\n\"Like this,\" and he flipped the stick in his left hand and caught it so his hand was underneath it instead of on top, with the tip pointing out of the bottom of his hand. He started drumming on the amp again. \"Normally I play matched grip,\" he twirled the stick in a blur and was suddenly holding both sticks in the normal overhand position, and patted out a drum roll, \"like this. But I can't play like this while I sing; I mess up the beat almost instantly. If I play like this,\" the stick in his left hand blurred again and he was holding it underhanded, \"I can sing and play no problem. But it makes my hand hurt, thus hand rubs.\"\n\n\"But why does how you hold a stick help you sing?\" Sara asked.\n\n\"It's a weird tic,\" Steve laughed.\n\n\"No, I'm just complicated Sara. I contain multitudes.\" He rapped out an especially sharp drum roll then slapped one stick on top of the amp and it bounced five feet in the air. He caught it neatly as he stood up and then gave us jazz hands and said in his best Jim Carrey in The Mask voice, \"Showtime!\"\n\nLarry did indeed start off the show with the Third Eye Blind standard. Steve wandered over to share Suzanne's mic for the \"doot-doot-doots\" so the crowd would have an unobstructed view of Larry singing. I really liked his voice; I wished he'd sing more often.\n\nSteve got to play his favorite Smithereens song Only A Memory, and Jo had them play R.E.M.'s It's The End Of The World As We Know It, bothto make Jack happy and to tease Larry. It was a good night.\n\nI'd left Sara at the merch table and wandered around taking a lot of pictures. I'd had an idea stuck in my head for something I wanted to do for the band after Jo and I had our big fight over her looking in my sketchbook.\n\nWhen I'd found Jo looking through my art book as I came out of the bathroom, it might have been the angriest I'd been in years. It had taken me some time to realize my anger was rooted in embarrassment on my part. It wasn't entirely her fault. It's not like I had ever mentioned to her that it was a private thing. I just felt so humiliated, having her see my fantasy ideas of her, laid out by my own hand, when I wasn't in a place yet where I was ready to show it to her. I mean, drawing her as Captain Marvel, what a dorky high school thing to do.\n\nAnd she had been so apologetic. She'd been cool about me depicting her singing. She'd even ended up okay with my stupid comic drawing of her. I didn't have the courage to admit to her that the reason I had drawn that one was that I had been fantasizing about making matching cosplay outfits and going with her as my date to a con. Which made it doubly embarrassing and I was doubly grateful that she admiringly said it was \"hot shit\" instead of making a snarky comment.\n\nWhen I'd finally absorbed that I was angry at Jo because I was embarrassed, not because she'd looked at my work without asking, and that she'd immediately fallen on her sword apologizing, that she hadn't run, that her first move hadn't been to put distance between us...\n\nI would have never thought I'd have been comfortable making love to someone with a group of my friends on the other side of a thin bus door, but I simply couldn't wait to get Jo's clothes off and show my gratitude to her in every way for her having tried to make it right with me. I hadn't even slowed down when the gang had rather obviously turned up the music in the main salon of the bus.\n\nI had, however, probably turned the darkest shade of red I'd ever managed when we finally came out of the bedroom. Suzanne and Larry had simply started snapping their fingers above their heads like they were applauding at a poetry slam.\n\nAfterwards, I'd sat on the couch with Jo and had shown her every drawing in my sketchbook, talking about what the sketches meant to me and what I'd been thinking when I started each one. She asked if she could show the first one of her singing on stage in Cape May to the rest of the group. I was surprised at how much everyone liked it.\n\nLarry was especially into it. \"Damn, Jill this is amazing! So when are you going to immortalize me? I mean, clearly I'm a more impressive subject for something like this.\" His dramatic flex earned him a laugh.\n\nBut it had gotten me thinking...\n\nWhen we got to the Air-BnB in Kill Devil Hills after the show that night, everyone wanted to go swimming again. I said I'd be out later, retrieved my backpack from the room Jo and I were sharing and settled at the kitchen table, displaying all the photos I took that night on my MacBook while opening Procreate on my iPad Pro.\n\nI had no idea how long I'd been at it when everyone came in from the pool but I didn't look up. I was in the zone.\n\n\"Blue, you didn't want to swim tonight?\" Jo said, toweling off her hair.\n\n\"Hmmmm.\"\n\n\"Oh geez, I've seen this look before. C'mon guys, she may not come up for air for hours,\" Sara said and herded the gang through the kitchen to the living room.\n\nSometime later I remember Jo coming into the kitchen, pouring a glass of water and setting it down next to me, carefully not looking at what I was working on. \"Hey Blue, I'll be in bed. Come curl up with me whenever you're done, ok?\"\n\nI looked up long enough to kiss her and say, \"Sure babe, just a while longer,\" before I dove back into my work.\n\n\"What time did you come to bed last night Blue?\" Jo asked me the next morning. She'd just gotten back from her run and was standing with Steve, Suzanne and Jack in the kitchen when I stumbled down the stairs.\n\n\"Not sure. Maybe four?\" I said, trying to rub the sleep out of my eyes.\n\n\"Oh honey, what were you doing?\" Suzanne asked.\n\nI reached for my MacBook lying on the kitchen table. I opened it, logged in and turned it around. \"This.\"\n\nI was pretty proud of the 'this'. The screen was filled with the picture I'd 'drawn.' It was a stylized black and white drawing, not super sharp like the pencil drawing I'd made of Jo, but more like a cross between a photo in a newspaper and an impressionistic painting.\n\nIt was the band, on stage, seen from my favorite point of view, looking from the audience on the left side of the stage. Suzanne was prominent, the largest figure from the viewer's reference. She was belting out some song into the mic lifting the neck of her bass, while her left knee was raised up, foot in tight to her other knee in her leather ankle boots. She had that smile that she always broke into while singing.\n\nSteve was stage center, at his mic. He was wearing one of his favorite outfits for indoor shows, a white button-down shirt with the sleeves rolled up above his elbows and a skinny black tie, hanging loose around his neck. I'd made his pick hand slightly blurry, so it looked like he was thrashing his Les Paul for all he was worth. His eyes were closed and his head was thrown back more than Suzanne's, suggesting he was reaching for a high note.\n\nBetween them in the background, Larry sat at his drum kit, also singing into his mic. His left hand was up in view, hitting one of his splash symbols. I'd made sure he was holding his left stick 'traditional grip'. It had taken me a long time and a lot of searching Google for reference photos to get that right. Hands are hard.\n\nLow, in the background next to Steve's knees you could see Jack at a soundboard off in the wings of the stage. A little bit of artistic license there, Jack was almost never backstage or in the wings, he was usually behind the crowd. He had on his headphones, with one hand pressing the earpiece to his head and was dancing and throwing up the horns with his free hand as he often did when he was grooving to the music.\n\nFinally, on the right side was my Jo, in her ripped jeans, high-tops and Captain Marvel shirt (of course.) She was caught mid-jump, lifting the neck of her guitar towards the sky, her feet tucked up under her butt as she sprang into the air, classic Pete Townshend style.\n\nThe picture was mostly black and white, but I'd gone back in and added accents of red here and there. Suzanne's boots and the red outline of the sunburst on her Fender, Larry's drumsticks, the rotors logo on his kick drum, Jo's high tops and cap, the mic in front of Steve, Jack's headphones.\n\nIn the background, the stage had an abstract cloud looming behind them with a gigantic red three-bladed rotor rising out of it, like the icon of a towering music god looking down on his loyal priests.\n\nThere was dead silence for a couple of seconds and I got a sinking feeling in my stomach. They don't like it?\n\n\"Is it okay?\"\n\n\"Okay? My god Jill, this is so beautiful!\" Suzanne gushed and wrapped me up with both arms.\n\n\"Holy shit, Jill, you did all this last night? I can't believe it, this is amazing!\" Steve leaned down to get his face closer, looking at all the details.\n\n\"Well, it was a little easier than you'd think. I imported photos that I took last night, cut snippets out and layered them in, then touched them up to look like original art. So, I kind of cheated.\"\n\n\"'Easier than you'd think?' Jill if I commissioned something like this for us I'd probably pay a couple thousand dollars and it wouldn't end up nearly this good. This is... I mean, wow Jill!\" Steve stood up and Jack leaned over to take his place.\n\n\"I'm glad you like it.\"\n\nJack stood up and looked at me. \"You put me in there.\"\n\n\"Well yeah. They couldn't do this without you, you're a part of the band, right?\" I looked at his face and saw he was tearing up. \"Oh, Jack, it's okay!\" I hugged him.\n\n\"Seriously Jill this is great. Can I buy a copy to use for the website?\" Steve asked me.\n\n\"Well, I hadn't pushed the button yet because I wanted to make sure you liked it, but I already staged the code on the server last night. This morning. Whenever.\" I pulled my laptop to me and switched to my browser, logged in and clicked around on the touchpad a bit, then switched tabs and hit refresh. I turned the laptop back around. It was displaying the Rotor's website, now with the picture as the home page.\n\nSteve bent over to look. \"Incredible...\" he whispered. He clicked through some pages. I'd put the hi-res version on the home page, but there was a lower-res version set at the top of each page now.\n\nSuzanne went over to the foot of the stairs, yelling, \"Larry! Get your ass out of bed and come see this!\"\n\n\"I'll email you the images,\" I said. \"If we upload them to your merch supplier you can probably have it on a shirt or sell posters of it by the time you get home next week if you want. It's just greyscale with one layer of color accent, so it should be easy for them. The main file's big, a couple hundred megs, so I might have to give it to you on a thumb drive.\n\n\"Okay, but I want to pay you for them. This is professional work Jill.\"\n\n\"Steve, you've taken me on a two-week vacation and didn't ask me to pay for anything. We're totally good.\"\n\n\"But Jill, this is... I mean, it's so good.\" He looked over at his sister. \"Jo, tell her, she has to let me pay for this.\" He stopped. Jo hadn't moved from where she was leaning on the counter. \"Jo, you haven't said anything.\" Everyone looked at her.\n\nShe took her eyes off the screen and slowly turned her head to look at me.\n\n\"If you guys will excuse us, I have to take this Blue Girl back to bed. Right now.\"\n\nShe walked past Steve, grabbed my hand and pulled me up the stairs.\n\nI heard Suzanne say, \"Hell yeah she does!\"\n\nSometime later I grabbed Jo's hair and gasped, \"Okay, you have to stop now!\"\n\nShe raised her head and looked up at me from between my legs and grinned. \"Should I come up there and bite your shoulder some?\"\n\n\"Heck no, I think if I come anymore I'll just die. Are you sure I can't take care of you?\"\n\nJo moved up the bed to embrace me. \"Nope, this morning is all about you, my little artist.\"\n\n\"Who are you calling little, short-stuff?\" I asked sleepily.\n\n\"Besides, I ran this morning, I'm kinda gross. In fact, I'm probably getting you all sticky.\" She started to pull away, but I grabbed her arm and kept it wrapped it around me.\n\n\"I don't care. You stay right here. At least until I fall asleep again.\"\n\nIt only took moments.\n\nJO\n\n\"So, things seem to be going pretty good with Jill,\" Suzanne said.\n\n\"Not you too,\" Jo grumped, reaching up to grab the football Larry had thrown to her.\n\nAfter Blue had dozed off, Jo had gone with the rest of the gang to the beach that morning, thinking that it would be at least a few hours before she woke up again. She and Suzanne were standing next to each other, waist deep in the almost calm ocean. She threw the ball in a tight spiral to Jack, who was standing on the shore.\n\n\"I'm just saying. You guys seem to be getting along great. When you're with her you're like sixty-four percent less surly,\" Suzanne said. \"Must be true love.\"\n\n\"Ha ha.\"\n\nJo fielded the return pass from Jack, turned and passed it back to Larry who was ten yards down the beach, standing waist deep in the water.\n\n\"Listen, I get enough of this from Steve,\" Jo said, nodding her head at Steve and Sara, who were laying out on beach towels. \"Yes, it's out in the open now, Blue and I are... well I don't know what we are. But we're having a fun time. Let's leave it there.\"\n\n\"This is the first time I've seen you in something resembling a real relationship since I was in college.\"\n\n\"It's not a relationship Alvarez. We're just having fun.\"\n\n\"Yeah?\" asked Suzanne. \"Who was the last girl you were 'having fun with' where you went around holding hands? I've never seen you do that.\"\n\n\"I'm just trying to enjoy it while it lasts,\" Jo said.\n\n\"Three nights left Collins. Then we're out,\" chimed in Little Voice.\n\nI fucking know that, Little, Jo thought.\n\nJo caught another pass from Jack. She handed the ball to Suzanne who threw it twenty feet past Larry.\n\nJo laughed. \"Nice throw.\"\n\n\"He needs the exercise. But really, have you stopped to consider that you might try and see where it goes? I've never seen you be the way you are with her before.\"\n\nJo turned towards Suzanne. \"Everyone here knows my situation. Blue knows it. She's fine with it.\"\n\n\"Mm-hmm.\" Suzanne looked dubious.\n\n\"What?\"\n\n\"Your 'situation' is just a decision you've made for yourself. And I guess it's worked for you as far as your career goes. You've come home safe from overseas, what, five times now?\"\n\n\"Yeah? What's your point?\"\n\n\"Well you come back, but you never seem that happy. I mean, I didn't notice it so much until this week. Watching you with Jill has made me see what was missing from you. You're just... more alive around her. Just something to think about.\"\n\n\"This is stupid. You need to be focused. You can't be spending the next year chomping at the bit to get back to some girl who could end up fucking you over worse than Amy.\"\n\nShe's not like Amy was. She's not like any woman I've been with. Maybe... she thought, then the football smacked down in the water, startling her. It had missed her head by a foot; she hadn't noticed Jack had thrown it at her.\n\n\"See, Collins?\" Little Voice chided her, \"Not paying attention. You really think it's a good idea to spend a year at war with your head in the clouds instead inside the cockpit?\"\n\n\"God dammit,\" Jo muttered under her breath.\n\nJILL\n\nWhen I woke up mid-afternoon, I was surprised to find Jo wasn't around.\n\n\"She went to the Cross-Fit gym down the street a couple hours ago. Said she hadn't had a good workout other than running since we left,\" Steve said.\n\nI started looking for something to eat. \"How was the beach?\"\n\n\"Hot. Water was nice though,\" said Sara.\n\n\"I talked to my guy at the merch company, Jill,\" Steve said. \"I ordered three hundred two-by-three posters of that picture. We just need to get him the master file and he said he would get them to us in a couple of weeks. I want you to sign the first one out of the box so I can frame it for my office.\"\n\n\"I will Steve. That means a lot to me, thanks.\"\n\n\"Also, I'm cutting you a monthly check for half the profits on all the ones we sell, and any other merch that we put that picture on in the future. Don't bother arguing with me.\"\n\n\"I think you need to sign one for each of us,\" Jack chimed in as Jo walked in the door.\n\n\"One of what?\" she asked. Steve filled her in. \"That's a good idea. I'd like to hang one in the ready room when I go over this time. That fucker Chief Davis thinks he's a better guitarist than me. Having that hanging up would totally stick in his craw.\"\n\n\"Jo what have you been doing?\" I asked her. Her compression shorts and muscle shirt were drenched in sweat.\n\n\"A bunch of different stuff. I spent the last hour doing box jumps and flipping a tractor tire up and down the gym.\"\n\n\"Your shoulders look... bigger.\" I flushed. She flexed her arms in an exaggerated pose and grinned.\n\n\"Clean living, Blue.\"\n\nSteve snorted. \"Tell that to all the Coronas you drank last night after the show. Speaking of which, we need to head over soon.\"",
        "When we got to the venue, Sara and I did our usual helping the band get set up on stage, and then set up the merch table.\n\nWhen I came backstage, Larry held up a pair of drumsticks like a cross at me.\n\n\"Fie, foul trouble maker! Maketh me not sing once again!\" he intoned.\n\n\"Fear not, faithful Lawrence. I'm just here to see-eth if you guys need anything,\" I snarked back.\n\n\"Request time,\" Jo said, coming out of the bathroom.\n\nSteve picked up his Ovation acoustic and put the strap over his shoulder.\n\n\"No Les Paul?\" I asked him.\n\n\"It's up on stage. Jo and I looked around and think the crowd's a little less classic rock tonight. We're going to start with a few numbers with me on this.\"\n\nSuzanne lifted her Fender strap over her shoulder. \"Jo, tonight I am a total bitch.\"\n\nJo grinned. \"You got it Alvarez.\"\n\nThe band started making their way up to the stage and I stopped Jo and kissed her. \"Rock their socks off tonight babe.\"\n\nShe grinned at me but I thought I saw a shadow in her eyes. \"Thanks Blue,\" she said, then mounted the stage.\n\nThe band opened with Meredith Brooks' Bitch, Suzanne belting out the lyrics.\n\nI'm a bitch, I'm a lover, I'm a child, I'm a mother,\n\nI'm a sinner, I'm a saint, I do not feel ashamed!\n\nI'm your hell, I'm your dream, I'm nothing in between!\n\nYou know you wouldn't want it any other w-a-a-a-y!\n\nThey followed that with Deep Blue Sea's Breakfast At Tiffany's. Then Steve started picking out the opening notes on his acoustic to the Stabilizers' One Simple Thing.\n\nOne simple thing kept between you and me,\n\nWill build a wall no one else can see.\n\nOne simple thing is all we really need,\n\nTo make it all complete.\n\nI noticed Jo was looking out over the audience a lot. Usually she focused on her guitar or the band members. But tonight, as she was mouthing the lyrics, as she usually did while playing, she kept looking out towards me at the merch table. I wanted to take it as a positive sign, except every time I caught her eye she immediately looked away.\n\nNear the end of the second set, I saw Jo call out a song. She kicked two of her pedals and started the intro to Matthew Sweet's Sick Of Myself.\n\nWhen they got to the chorus, it looked like she was almost shouting the lyrics to herself as she played.\n\nBut I'm sick of myself when I look at you, something as beautiful and true.\n\nIn a world that's ugly and a lie, it's hard to even want to try.\n\nI'm beginning to think, maybe you don't know.\n\nJo was playing the solos almost... savagely. Like she was in a fight.\n\nI'll take a leave, the room to breathe, the choice to leave it.\n\nI'll throw away a chance at greatness just to make this,\n\nDream come into play, I don't know if I'll find a way.\n\n'Cause I'm sick of myself when I look at you!\n\nSomething as beautiful and true...\n\n\"Oh boy,\" I thought. \"What's going on in her head tonight?\"\n\n\"Great set tonight!\" Sara yelled in my ear and kept shaking her butt.\n\n\"Yeah... great set.\"\n\n\"So, what was up with you on stage tonight?\" I asked later. We were walking on the beach under the moon. It would be full in a few more nights. I'd suggested the walk since we were heading inland tomorrow morning and this would be our last chance for an evening stroll on the sand.\n\n\"What do you mean? Didn't I rock your socks off?\"\n\n\"It was a good show. You just looked like you were in your head with some of the lyrics up there.\"\n\nShe looked uncomfortable. Her hand shifted in my grip. \"I don't know what to tell you Blue. Some lyrics just make you seem all angst-y when you play them, but they're just songs.\"\n\n\"Jo?\" I stopped walking and she stopped with me.\n\n\"Yeah?\"\n\n\"Are you full of it right now?\"\n\nShe sighed. \"Look Blue, this is just me. Sometimes I get moody. Not for any reason. Let's just enjoy our walk without trying to psychoanalyze my song choices, okay? I want to try and enjoy our last three nights together.\"\n\n\"Right. Our last three nights.\" I pulled on her hand to bring her closer to me. She reached up and ran her fingers through my hair, then stood on her toes to brush my cheek with the tip of her nose.\n\n\"I'm glad you made the first move on me Blue. This has been an amazing trip. When you said you wanted us to have memories to take away, I wasn't thinking they'd be this great. I hope you don't regret them.\"\n\n\"I take what I can get, Chief Collins.\"\n\nWhatever I could get.\n\nBack in our room, we peeled out of our clothes and fell into bed together. Jo reached out for me, but I pushed her back and just spent a few moments looking up and down her body, tracing lines on her with my finger. I leaned down and kissed her, making small strokes at her lips with the tip of my tongue.\n\nI moved down to kiss her neck, her collarbone, her breasts. I slid my body on top of hers and in between her legs as she opened them. I discovered that Jo loved having her belly button licked. As I worked my way down and started kissing and nipping at the soft skin on her thighs, she gathered my hair into a topknot with her hands and then held it there with one fist, while stroking my cheek with her other hand.\n\n\"This hair,\" she breathed, \"I don't know if I'll ever get enough of this hair.\"\n\n\"Are you saying if I hadn't dyed my hair blue, I wouldn't have stood a chance?\" I teased.\n\n\"No, but it's definitely the cherry on top of a yummy sundae.\"\n\n\"You say the sweetest things,\" I said and then stroked her clit with my tongue as she sucked in a breath. After a few minutes, I returned to what I knew worked best for her and slid two fingers inside to stroke her g-spot with my fingertips.\n\n\"Jo, you're so wet,\" I whispered. She just made happy sounds back at me. As she neared her climax, I lowered my head again and added my tongue back into the equation. A few moments later, she almost crushed my fingers clamping down on them as she held my head in place by her fist curled in my hair.\n\nAs she came down from her climax, I moved up next to her. She pushed me over onto my back then turned around and swung a leg over my head and lowered her head between my thighs.\n\n\"Oh my god,\" I breathed as she showered my pussy with attention. I tried to reciprocate but our height difference made it impossible for me to reach her with my mouth, so I contented myself with stroking her clit with my thumb while sliding a finger in and out of her.\n\nWithin minutes, Jo had me close. I squeezed her head with my thighs as I cried out and ran my fingernails over her back.\n\nShe turned around and crawled into my arms and we kissed. I wondered if she could taste herself as strongly on my lips as I tasted myself on hers.\n\n\"I didn't make you come that time,\" I complained.\n\n\"Believe me, that first one was plenty good.\" She reached down and idly stroked me. \"I think I really like having you shaved like this. You're so smooth and soft. Are you sure you don't want me to do that?\"\n\n\"I told you, only if it's something you want to do for yourself, not for me.\"\n\nShe slid a finger between my lips. \"Well, you've got me considering it. But you'll have to do it for me.\"\n\n\"Not right this second though,\" I gasped. I turned slightly so I could reach her as well. I leaned my forehead against hers as we stroked each other.\n\n\"Does inside or outside work best for you?\" she asked.\n\n\"I like outside,\" I panted.\n\n\"I like... inside...\" As I slipped my fingers inside her again she moaned.\n\n\"I know,\" I said and increased my pace. It was as if we were racing to see who could get the other to cross the finish line first.\n\nI won, as Jo came again, squeezing my hand with her legs. I leaned in to kiss her and as her tongue touched mine, I started shaking and moaning into her mouth.\n\n\"I don't know if I could ever get too much of that either,\" she said as we wound down. I pulled her into my arms and snuggled my cheek down onto the top of her hair.\n\n\"I hear you.\"\n\nWhatever I can get Chief Collins.\n\nJO\n\nThe band had packed up, checked out of the Air-BnB and were on the ferry from the Outer Banks to the mainland. When Jo had confirmed she was available for the tour, Steve had added one final show, at a bar near Fort Bragg so some of Jo's unit could come see their squadmate's band play. It would only be a detour a few hours out of the way and the one extra night.\n\nOn the ferry Jo and Blue had once again gone to the front rail of the upper deck, joined by Suzanne this time.\n\n\"It's almost like we've come full circle, eh Blue?\"\n\n\"Yeah...\" Blue didn't sound that enthused. Jo pretended not to notice, leaning on the rail with her face up to the sun, sunglasses perched on top of her head.\n\n\"So how many guys from your unit will be there tonight?\" Suzanne asked Jo.\n\n\"I dunno. I posted flyers in the briefing room and hangers. I'm guessing a couple dozen or so. It's not really an Army bar; it just happens to be close to the base, so there will be civys there. I hope my copilot comes, I'd like you guys to meet him.\"\n\n\"I wonder if we should have Steve book us some rooms instead of driving straight to Front Royal after the show. Don't you want to hang out and party with your friends afterward?\" Suzanne asked.\n\nJo shook her head. \"No, I'm going to be with those guys for the next year. I want to get home and spend time with dad before I have to come back down here next week.\"\n\nBlue looked away. \"I'm going to find the ladies' room. I'll meet you on the bus, looks like we'll pull into port soon,\" she said, pointing at the nearing shoreline. She left Jo and Suzanne alone at the railing.\n\n\"Jo\u2014\" Suzanne started.\n\n\"Don't,\" interrupted Jo. \"Just don't, Alvarez. The next two days are going to be tough enough.\"\n\n\"Okay. You know I'm here for whatever you need.\"\n\n\"I need one more night of rocking out. That's all I need, okay?\"\n\n\"You got it.\" Suzanne held out her fist and Jo bumped it.\n\nJo's second big fuck up happened that night.\n\nThe bar in Fayetteville was crowded that night. Several dozen members of Jo's unit had made it and Jo had spent time at the bar before the show with all of them, introducing them to the rest of the band as well as Sara and Blue.\n\nJo's copilot, Chief Eric Nguyen showed up too, earning himself a high five from his PIC. He was a compact man, not much taller that Jo, with a wicked sense of humor. Blue liked him immediately, and Jo found them deep in conversation at the bar together, smiling and laughing.\n\nThe band started off playfully, Steve and Suzanne trading the vocals back and forth on a cover of the B-52's Love Shack.\n\nJILL\n\nI was sad this was the last show of the tour, but it was a rocking one. The crowd was bouncing along with the band. When The Rotors ended with a cover of GnR's Sweet Child Of Mine, the whole crowd was whooping by the end. We did pretty good business at the merch table too.\n\nSara and I were starting to close up the cash box and pack the leftover shirts away when I heard, \"Holy crap, Jill is that you?\"\n\nI turned around. Oh no. \"Corey? What are you doing here?\"\n\n\"I'm down visiting my brother. I can't believe I ran into you! I almost didn't recognize you with the blue hair.\"\n\nCorey Watkins and I had dated for a couple of months two years ago, until I'd tried on a cosplay of The Scarlet Witch I'd been working on. The old school comic version, not the Age of Ultron movie version. He'd said I looked ridiculous. We'd broken up a week later.\n\n\"Yeah well, I change it all the time, you know that.\"\n\nJust then Jo walked up from behind me and said, \"Hey Blue, want to grab a beer with me and Nguyen before we start packing the bus?\"\n\n\"Hi, I'm Corey,\" he said sticking his hand out to Jo. \"Jill and I used to be a thing! I can't believe we ran into each other here. You guys put on a hell of a show tonight!\" Corey was a little drunk, it sounded like.\n\n\"A thing, huh?\" Jo gave him the side eye, and didn't shake his hand.\n\n\"Hey Corey, nice to run into you. I want to grab a drink with Jo and her friend, so maybe we'll run into each other again sometime, okay?\" I tried to maneuver us towards the bar, but Corey stepped in my way.\n\n\"Can I buy you guys a round? I wouldn't mind catching up.\"\n\n\"That's really nice of you, but...\" I started.\n\n\"But we can get our own drinks. Thanks Corey,\" Jo said she took my hand and started to walk away. If he'd been sober, I think he might have sensed the danger.\n\n\"Oh ho! I get it, still doing the whole 'bi' thing, huh?\"\n\n\"Hey! Corey, I...\" I started again.\n\nJo spun around on him. \"Hey pencil dick, I didn't want to have to say get lost, but why don't you fucking get lost?\" She turned back to continue towards the bar, pulling me with her.\n\n\"What's your problem, dyke?!\" Corey reached out and grabbed Jo's arm and spun her around.\n\n\"Corey!\" I gasped, but Jo was already moving.\n\nShe grabbed the front of Corey's shirt and pulled his head down towards her as she slammed her forehead into his nose. There was a sick, crunching sound and he went down hard, blood pouring from his face.\n\n\"Jo!\" I yelled. She stood over him with a smear of his blood on her face waiting to see if he would get up.\n\n\"Don't ever fucking call me that, pencil dick,\" she said, in an ice-cold voice.\n\n\"That was goddamn stupid, Sis,\" Steve said as Suzanne was applying a butterfly bandage to the small cut above Jo's eyebrow.\n\n\"Why? It's not like I punched him. I wasn't going to chance breaking a playing hand.\"\n\n\"That's not what I\u2014\"\n\n\"You Jo Collins?\" interrupted a Fayetteville police sergeant walking up to our group as we sat at the now empty bar.\n\n\"Yes, sergeant.\"\n\n\"Okay. So, we've got four or five witnesses who vouch that he grabbed you and that you, ah, defended yourself. Do you want to press charges against him?\"\n\n\"No, sergeant.\"\n\n\"Good, because he's a bit of a pansy-ass and if you push this someone might realize that a warrant officer in the U.S. Army maybe should have better judgment than to head-butt a drunk civilian. You got me Chief?\"\n\n\"I got you, sergeant. Thank you.\"\n\n\"Just know if any of my officers had thought you were intoxicated tonight we'd be having a different conversation.\" He nodded at the group and walked off.\n\n\"Okay,\" sighed Steve. \"We'll get the bus packed up. Jill, make sure she keeps this ice pack on that bump and stays out of trouble.\"\n\n\"I will.\" Steve and Suzanne left us sitting at the bar together.\n\n\"Jo\u2014\"\n\n\"What? He grabbed me.\"\n\nI sighed too. \"Jo, he is a pencil dick, but it wasn't worth that. What if he'd hurt you?\" She snorted. \"Or you could have given yourself a concussion or he could have had friends who swore you started it and you could be in the back of a police car right now.\"\n\n\"If he's a pencil dick, why did you date him in the first place? And how come you never told me you were into dudes when we started this dance, Doran?\"\n\n\"What?!\"\n\n\"You told me you were a lesbian.\"\n\nI could feel my voice rising against my will. \"I told you I was gay, but I'm bisexual and I didn't think it was relevant!\"\n\n\"Didn't think it was relevant?\" Jo's voice was tight. \"After I told you about Amy fucking around on me with a dude you didn't think I might have concerns?\"\n\nI started seeing red. \"First of all, Amy fucked around on you because she was she was a crazy bitch and a cheater, not because she was 'bisexual'!\"\n\n\"I\u2014\" she started but I wasn't having it.\n\n\"So if you're worried about me being like Amy, you can rest your little mind Jo, because I'm neither of those things. Number two, you've been all up in my face about how this thing between us is ending after tomorrow night so why the fuck do you care!?\" I think it was the first time I'd sworn in front of her and she looked shocked.\n\n\"Look, I...\"\n\n\"I'm sorry if I'm not lesbian enough for you, but I've never cheated on anyone in my life, man or woman. And whether I choose to be with either a man or a woman, it isn't any of your fucking business! Fuck you, Jo!\"\n\nI stormed out of the bar to the parking lot and parked myself on the sidewalk, simultaneously fuming and crying, watching cars go by.\n\nSara came up behind me and put an arm around me.\n\n\"You heard that?\"\n\n\"I'm pretty sure everyone in Fayetteville heard that. I'm sorry. She was way out of line.\"\n\n\"No kidding.\"\n\n\"So, what now?\"\n\n\"I'm not sure. I don't know if I can get on the bus with her right now. I'm thinking about taking a Lyft to the airport.\"\n\n\"Please don't do that,\" I heard behind me.\n\nI turned to see Jo standing there with her hands in the pockets of her jeans. I looked at Sara and nodded. She squeezed my shoulder and left, staring Jo in the face as she walked by her.\n\n\"Please don't go to the airport. That's not right, I don't want you to have to go through that hassle.\"\n\n\"Oh, that's so nice that you don't want me to be inconvenienced Jo.\"\n\n\"I mean... Blue, I'm\u2014\"\n\n\"Why don't we stick with Doran for now?\"\n\nShe turned away from me and yelled at the sky \"Jesus fucking Christ I am so bad at this!\" She turned back and walked towards me. \"Doran, I'm sorry. I was so far out of line I can't even see the line anymore right now. I heard that little douche like... laying a claim on you and it just turned me sideways. And then he said that shit about you being bi and I was so shocked to hear that and also so pissed that he was talking to you like that. And then he grabbed me and I lost my shit.\"\n\n\"Right now, I really don't give a damn about what your problem with was Corey, Jo.\"\n\n\"I know! That's just all what came before and then I was amped up and then my stupid fucking mouth did what it does. I've got no goddamn right to take you to task for anything! I'm the one who's been so single-minded about this having to be temporary. And I don't know where the fuck I get off coming at you about you not being a lesbian or being bi or whatever.\"\n\nShe sighed and looked down at her feet. \"You're a hundred percent righteous here. I understand you're done with me. You're right to be. But you shouldn't have to...\" She looked over at the bus. \"Look I'll take the couch on the bus tonight and then, I'll stay out of your way until you can go back to DC with Steve and Sara. Or, if you're uncomfortable with that, I can catch a ride with Nguyen to the barracks and stay here. I'll borrow a car from someone in my unit and go up and see dad after you guys are gone from the farm. Just let me know what you want.\"\n\nA silence fell over us. I stared at her, my jaw clenched.\n\n\"Doran., just tell me what you want and I'll do it.\"\n\n\"I'm not going to kick you off your own bus, Jo. And I'm not going to make you put off visiting your dad. But I'm not taking the couch, it's lumpy.\"\n\nShe looked relieved. \"Okay Doran. I'm... I'm just really sorry. I never wanted to insult or humiliate you like that.\"\n\nShe waited, but I gave her nothing.\n\n\"Okay. Okay, I'm going to go say goodbye to Nguyen and then help them finish packing up. If you want to go ahead and get on the bus now and take a bunk, you won't even have to see me again tonight. In fact, make them give you the bedroom if you want.\"\n\nI watched her walk off towards where the guys were loading the trailer. Part of me was still two seconds from pulling out my phone and calling a ride. But I didn't want this to just... end, not like this.\n\nIt was part selfish. Sure, I was furious, but I knew by tomorrow I'd be over it. Probably. Maybe. And I could have one more day with my Jo.\n\nBut also... I knew this must be how every one of her relationships had ended for the last eight years. She'd fuck up or her 'girlfriend' would fuck up and one of them would just walk away. I knew we didn't have a prayer of lasting past the next two days. She was too damaged to let it happen. But maybe... maybe if I could get her to see it didn't have to be like that every time. Maybe in the smallest way I could help her heal herself and she might find happiness somewhere down the path she was on.",
        "JO\n\nJo was sitting in the passenger seat next to Jack as he drove the bus up I-95 well after midnight. They'd made awkward small talk at first but had settled into an awkward silence and now Jo just sat, staring out the windscreen. Jack had taken a long nap in the afternoon, knowing he'd be driving tonight. And Jo, well... She wasn't sure when she'd sleep again.\n\n\"Look at it this way Collins; you've ripped the Band-Aid off. Now you don't have to worry about doing it at Dad's.\"\n\nJo didn't bother telling Little Voice to leave her alone. It never worked when she did.\n\nShe counted mile-markers for a while. She was at forty-two when she felt a hand on her shoulder. She looked back to find Blue standing there. She didn't say anything, but gestured with her head for Jo to follow her.\n\nJo looked over at Jack, who looked back and said, \"Night, Jill,\" and then picked up his ear buds and started putting them in.\n\nJack's a good egg, Jo thought. She got up and saw Blue sitting in the far corner of the sofa, hugging a pillow to her chest. Her eyes were puffy. Jo carefully sat down a few feet away from her. Blue impatiently rolled her eyes, then reached out and pulled Jo by her shirt until they were sitting hip to hip.\n\n\"Doran, I want to say again, I'm really\u2014\"\n\n\"Blue,\" she said.\n\n\"What?\"\n\n\"I'm your Blue Girl, Jo. Don't call me Doran. Call me Blue.\"\n\n\"But... Okay, Blue. I'm sorry. I'm an asshole and tonight I turned my fire on you. And you didn't deserve it. You deserve better than that. You deserve better than me.\"\n\nBlue took Jo's hand. \"It's okay. Well, no it's not okay, I'm really pissed at you. But if you weren't deploying and we were dating, I wouldn't let tonight be the end.\"\n\n\"What do you mean?\"\n\n\"I mean, dummy, that just because two people have a fight doesn't mean it's automatically over. If everyone just walked away the minute they had a fight, the human race would have died out millennia ago. We have one more day together and I'm not going to toss it out the window because you were, admittedly, an asshole tonight.\"\n\nJo took a long shuddering breath. \"How are you so good at this? I mean... why aren't you happily married with two kids and a dog by now?\"\n\nShe smiled. \"I'm not great at this. I just look great compared to you.\"\n\nJo sighed. \"From your mouth to God's ears.\"\n\n\"But one of the reasons we're sitting here now is I want you to be better at it. Not for me, but for yourself. You're going to come back from this deployment and I want you to be able to at least try to find some happiness, and you never will the way you're going. It won't be with me, I know that. It'll be more than a year before you get back. We'll move on. But you need to shut down this bullshit cycle you have yourself in and try to BE with someone. Not just... go at them until you bounce off in another direction.\"\n\nJo sat in silence. Finally, Blue said, \"C'mon. Let's go to bed.\"\n\nThey rose together and went to Jill's bunk. Jo cupped her hands, Blue stepped in them and let Jo boost her into the upper bunk, then Jo jumped up after her. Blue reached across her, pulled the curtain closed and then embraced Jo from behind.\n\n\"Blue?\"\n\n\"Yeah?\"\n\n\"You're too good for me.\"\n\n\"No, I'm not. You deserve more than you're willing to let yourself have and that's what you need to learn.\" They laid in silence for a long time, Blue gently stroking her hair. Jo sighed. \"You okay?\" Blue asked her.\n\n\"Yeah. I just...\"\n\n\"Yes?\"\n\n\"You make me wish I could cry. I don't know if that sounds weird, but I think I'd like it more than anything if I could do that in your arms sometime.\"\n\n\"Baby steps, Jo. Baby steps.\"\n\n~~ Front Royal, Virginia ~~\n\nJILL\n\nSteve's voice woke me. \"Jo, we're home!\"\n\nI lifted my head. The dim light coming in around the bunk curtain outlined Jo's head, resting on my outstretched arm. I reached up with my free hand and brushed it through her hair. I really was in love with her hair. She stirred and looked over her shoulder at me.\n\n\"Morning, Blue,\" she whispered.\n\n\"Morning.\" I grasped her shoulder to roll her towards me so I could kiss her. She was clearly surprised and it took a second for her to kiss me back.\n\n\"Blue, are we okay?\"\n\n\"We're as okay as we can be Jo. I told you, I'm not throwing away my last day with you because you were an asshole.\"\n\nShe cleared her throat. \"I absolutely was an asshole... I'm sorry. Thank you.\"\n\nThe bus rocked, throwing me into the wall.\n\n\"What the heck?\" I said, startled.\n\n\"We must be going down the driveway. Let's get up, but be careful.\" She pulled back the curtain and rolled out of the bunk to land gracefully on her feet, then helped me down.\n\nThe bus was slowly crunching down a rough gravel road toward a small cluster of buildings backed up to some woods.\n\n\"Home sweet home,\" Steve grinned from the front seat.\n\n\"Yeah.\" Jo turned to me and said, \"Listen, fair warning, dad has a weird sense of humor, so it's ok to laugh at anything even if you don't think he's kidding. You won't ever offend him. But keep that in mind if he says anything that sounds weird, it's probably a joke.\"\n\n\"Okay?\" I looked out and saw an older man standing on the porch of what looked like the main house, a ranch style with a huge stone chimney on one side. There was an old red barn with a metal roof off to the left, a smaller Cape Cod style log cabin and a square metal building that had a big concrete pad out in front of it with a pole at one corner holding up a six-foot-long orange windsock.\n\nThe man raised his hand in greeting to us. He was in jeans and a plaid short-sleeved button-down shirt. He had a full head of cropped grey hair and a neatly trimmed white beard. He looked like an older, more distinguished and worn version of Steve. There was a giant St. Bernard sitting patiently next to his left leg.\n\nThe gravel drive ended in a circle and Jack parked the bus next to the barn. As we all came off the bus he came down the steps to meet us, the dog staying close to him.\n\n\"Hey Dad!\" Steve hugged him.\n\nSara was next. \"Henry, it's good to see you again!\"\n\n\"Sara, anytime you want to visit, you come on out. I don't care if you bring Steve or not,\" he said, wrapping her tight in his arms.\n\n\"Hey Dad.\" Jo stepped in and bear hugged him.\n\n\"Jocelyn, it's been too long girl,\" he said.\n\nJocelyn? Wow.\n\nSteve cleared his throat and said, \"Dad, this is Jill Doran, Sara's best friend. Jill, this is our dad, Henry.\"\n\nThat sounded awkward. I wondered if he was hiding the fact that I was... involved with Jo, or if he'd said it because he wasn't sure if Jo would be able to introduce me as \"Jill.\" I suspected the latter.\n\nThe former thought was put to rest immediately as Jo put her arm around me and said, \"Blue Girl here's been my partner in crime this trip,\" and then she kissed me on the cheek. Henry barely raised one eyebrow as he shook my hand, then greeted Suzanne, Larry and Jack.\n\nFinally, he turned back to me and said, \"Jill, this fine fellow is Hank. Say hello Hank.\" The St Bernard made a low \"woof\" in his throat and held out a giant paw. It filled my entire hand.\n\nI looked up at Henry, then at the dog and to my horror I started giggling. I couldn't stop myself.\n\n\"Yes?\" Henry said with another eyebrow raise and a smile.\n\n\"Your name... your name is Henry and you... you named your dog Hank?\" I dissolved into helpless laughter.\n\nHe grinned the lopsided Collins grin, chucked Jo on the shoulder with his fist and said, \"She gets the good whiskey tonight Jocelyn.\"\n\n\"This is how those of us with non-boring naming proclivities get treated Henry,\" said Larry. \"It's a curse.\"\n\nJo joined me in my laughter then took my hand and said, \"C'mon, let's do the tour.\"\n\nThe inside of the main house was far more elegant than the rough exterior. There was a large open room, with a kitchen on one side. The farmhouse table sat eight. In the living room there was a huge stone fireplace with the biggest dog bed I'd ever seen lying in front of it. In the back of the room was an alcove with a gleaming baby grand piano and several dozen musical instruments hanging on hooks or sitting in guitar stands around the space.\n\nOn the piano there was a picture that at first look I mistook for Jo. But the woman was older, with longer hair.\n\n\"Is that your mom?\" I asked.\n\n\"Yeah.\"\n\n\"She was beautiful.\" I looked at Jo. \"She looks just like you.\" Jo flushed and cleared her throat\n\nShe took me around and showed me all the things and told me all the little stories one tells about the place you grew up when you take someone home for the first time.\n\nAfter a bit, Jo excused us and we walked outside. She led me over towards the little cabin between the barn and the main house.\n\n\"This is my house. We'll stay here tonight.\"\n\n\"Your house?\"\n\n\"Yeah. I came home on two week's leave one year and dad had already poured the foundation. He told me I was an adult and it was time I had my own home. Since I always just lived on base to save money, he said we were going to build me a place I could come home to. We put up the walls and roof that week and weatherproofed the outside and then we finished it together over the next couple of years whenever I was home.\"\n\nWe walked up the three steps to the tiny porch, then she opened the door and let me go in first. It was a cozy little cabin. A tiny kitchen, with a breakfast bar with cast concrete countertops stained a light green and seating for two was to my right, and a small living room filled the rest of the space, containing a comfortable looking couch and coffee table facing a small stone fireplace.\n\nTwo built-in bookcases flanked each side of the fireplace, with three of the shelves holding military awards, photos, a rack full of coins with different military themed seals on them, and a folded American flag in a wooden case. The rest of the shelves were taken up by comic books, with half the shelves holding rows and rows of single issues with tabbed dividers separating different titles and the other half, rows of trade paperbacks.\n\nIn the corner, next to the bookcase, sat a white enameled Yamaha acoustic guitar with gold tuning hardware. It had a black fret board with a mother-of-pearl design of vines inlaid all the way up the neck.\n\n\"That's pretty,\" I said. \"How come you don't take that one on the road?\"\n\nJo chuckled uncomfortably. \"That's Belle. She, uh, she has some baggage.\"\n\n\"What do you mean?\"\n\n\"I got her for a specific performance. And it didn't work out so well, so she just watches over my place for me now.\"\n\n\"I don't... wait. You bought that guitar to sing to Amy, didn't you?\"\n\n\"Yeah. Twenty-four-year-old me thought I needed to look the part of a white knight or something.\"\n\n\"I can't believe you didn't get pissed when I asked you about it.\" I said, looking at her thoughtfully.\n\n\"Well, like you said, baby steps.\"\n\nThere was a door in the back of the room that led to a small bedroom with a simple queen-sized bed covered in a big fluffy quilt, with a small in-suite bathroom. There was also a ladder in the living room, leading up to what looked like a loft with a futon over the bedroom.\n\n\"Jo this is... this place seems so you.\"\n\n\"Thanks. I love it here. Last year I had a week's leave, Dad was traveling and I came up here and spent the entire week sitting around reading and playing. I feel more at home here than anywhere else, except maybe the cockpit. C'mon, I'll show you the barn.\"\n\nNext door to Jo's little house was the old wooden barn. Jo had to lean her weight into the big wooden door to get it to slide open. The inside was not what I'd expected. The walls looked to be weatherproofed. There was a tractor the far end of the barn facing a set of double doors, with a workbench and a weight rack next to it. But most of the barn was open space with an old wooden floor.\n\nAn old black Pearl drum kit sat in the middle of the space. On one wall there was a cabinet with glass doors and I could see six or seven guitars hanging inside. There were five amps around the space with guitar cables coiled up on each one, and three microphone stands in a semi-circle around the drums. Against the far wall was an upright piano, the finish beaten and rough, but the keys were gleaming.\n\n\"Is this where you played with your mom?\"\n\n\"Mm-hmm. We'd do homework, have dinner then come out here and play until it was bedtime. When Steve and Larry became friends, dad found that used drum kit for the barn and we had a full band.\"\n\nI walked over to the piano.\n\n\"After she passed we stopped playing for a couple of years. But then Steve and Larry met Suzanne when they decided to do a song for the high school talent show. This was their practice space. Within a month we were all back playing together again most nights. Dad, even, after a while.\"\n\nI looked at her. \"Can I...?\" I gestured to the piano.\n\n\"Sure, that's what it's here for.\"\n\nI sat down and breathed in. The scent of old dust of the barn. The oiled wood of the piano. I closed my eyes and could picture Jo standing next to the piano on her guitar while her mom played with her. I felt myself wanting to cry.\n\n\"Go ahead, Blue. I want to see what you got.\"\n\nI opened my eyes and cracked my knuckles. I did a few scales to get the feel. It'd been a few weeks since I'd played around on my keyboard at home.\n\nI started just playing a random melody. The piano still had great action for as worn as it looked.\n\nFinally, I looked up at Jo and said, \"Ok, here I go.\"\n\nI had decided on a piece that both seemed like it fit into the Rotor's taste in music and also one I had played a lot just because I really liked the tune.\n\nThe chords of Bruce Hornsby's The Way It Is echoed through the barn. I was surprised by how good the sound was in the space.\n\nI started just humming when I got to the words. I was focused on not messing up the notes. After I hummed past the first two stanzas I started singing the chorus the second time around.\n\nThat's just the way it is,\n\nSome things will never change,\n\nThat's just the way it is,\n\nA-a-a-h, but don't you believe them.\n\nWhen I finished the song, I was startled to hear applause behind me and turned to see everyone standing in the doorway.\n\n\"Dang Jill!\" said Suzanne.\n\n\"Seriously, you should play with us sometime,\" Steve said.\n\nI looked back at Jo and she was nodding at me with approval. \"That was great, Blue.\"\n\nHenry came and over and leaned on the top of the piano. \"Jill, I'm not sure how long it's been since someone played these keys that well out here. I enjoyed hearing that.\"\n\nI blushed. \"I didn't know you guys were listening.\"\n\n\"Is Bruce Hornsby your favorite artist to play?\" asked Jo.\n\n\"No, Billy Joel is. I like his piano better. I just thought I could get through that song easier without a warm up.\"\n\n\"Oh shit!\" Steve laughed. Henry was grinning and opened the door to the instrument cabinet.\n\n\"What?\" I asked, confused.\n\n\"You've just made a friend for life of my dad.\"\n\nHenry had pulled out an acoustic guitar and put it over his shoulders. \"Okay Miss Jill. Show me what you got on my man Billy.\" He strummed it once and turned one tuning key a half turn.\n\n\"Oh no, no I\u2014\"\n\n\"Jill, relax,\" said Suzanne. \"The barn's the place for messing around. Don't stress.\"\n\n\"You don't have to if you don't want to Jill. But if you're feeling it, pick any song of his you want for me,\" said Henry, patting his guitar.\n\n\"Come on, Blue. Be fierce,\" Jo said.\n\nFine, I thought, Be fierce. Okay, Mr. Collins. Henry. I'll throw a deep cut at you. I caught Larry moving over to the drum kit out of the corner of my eye. Shit. This was turning into a real thing. Okay.\n\nI took a moment to concentrate and remember how the song I wanted went. I looked up at Henry. Then I looked at the keys and started playing.\n\nSummer, Highland Falls was one of my favorite songs to play. It was almost all piano and vocals, and the melody was such a joy to play. I started the notes, working the damper pedal with my foot.\n\nHenry laughed and waited for me to finish the intro. When we got to the lyrics I wasn't sure I could do them without messing up the piano, but as I drew in a breath Henry beat me to it. His voice was like Steve's but raspier, richer. I was relieved that I could just focus on the notes.\n\nThey say that these are not the best of times. But they're the only times I've ever known.\n\nAnd I believe there is a time for meditation, in cathedrals of our own.\n\nI looked up once to see Suzanne and Sara smiling and nodding along. I didn't dare look over at Jo, I'd flub the notes for sure. I looked back down at the keys and focused.\n\nNow I have seen that sad surrender in my lover's eyes,\n\nAnd I can only stand apart and sympathize.\n\nFor we are always what our situations hand us,\n\nIt's either sadness or euphoria.\n\nHenry started playing his guitar as Larry joined in, filling on the drums.\n\nI only messed up once, when we reached the saxophone solo. Henry startled me by starting to whistle the part and I missed a few notes. It was so oddly beautiful it threw me.\n\nAs we reached the end of the song, Henry took us all the way out.\n\nPerhaps we'll help fulfill each other's fantasies.\n\nAnd as we stand upon the ledges of our lives, with our respective similarities,\n\nIt's either sadness or euphoria.\n\nI let the notes die away and everyone clapped and whooped.\n\nHenry smiled and patted me on the shoulder. \"That was really nice Jill. Okay, everyone else is on dinner and dish duty. Jill gets a pass from chores tonight!\"\n\n\"What?!\" exclaimed Larry. \"Don't I get a chance to pull an old deep cut to get out of doing the dishes?\"\n\n\"No dice, Lawrence. Jill, you really played that beautifully. Thank you. Come on gang, let's get dinner started!\" Henry led everyone out of the barn, Hank padding along at his heels. I finally looked up at Jo.\n\nShe had a broad smile on her face. It was a mirror of her dad's. \"That was pretty fuckin' fierce Blue.\"\n\nI heard Henry yell from the yard, \"Come on Jocelyn, you're on the hook for dinner too!\"\n\n\"Better get going Jo.\" I grinned at her and started playing the Linus &amp; Lucy theme from the Peanuts cartoons to accompany her walking out of the barn.\n\nJO\n\nJo stood next to the sink, leaning against the counter waiting for Steve to pass her the next item to dry.\n\n\"This is making me nervous,\" she said.\n\nShe was watching across the room as her dad and Blue stood together looking at a photo album Henry had laid on the top of the piano.\n\n\"Why?\" Steve asked, as he passed her a frying pan.\n\n\"I don't know.\"\n\n\"Most people like it when they bring someone home and the someone gets along with their dad.\"\n\n\"When was the last time I brought someone home?\"\n\n\"Never?\"\n\n\"Exactly Bro. At least not when dad was around.\" She put the pan in the drying rack and took the next pot out of Steve's hands.\n\n\"So, what are you going to say to her tomorrow?\"\n\nShe sighed. \"I don't know. These last two weeks...\" she trailed off and look at the floor.\n\n\"These last two weeks have been what, Sis?\"\n\n\"Unexpected.\"\n\n\"That's not a bad thing,\" Steve said, and carefully handed her the big chef knife. She dried it and dropped it into the knife block by the stove.\n\n\"No, but I still don't think I can... Holy shit.\"\n\n\"What?\" Steve looked over and saw Blue sitting on the piano bench in front of the baby grand with Henry sliding in beside her.\n\n\"Blue\u2014\" Jo started to walk over, but Steve put his hand on her arm.\n\n\"Wait, Jo. I think it's ok. Dad's smiling. Let's tread lightly.\" Jo handed her towel to Steve, who dried his hands and they walked over together.\n\nHenry had opened the leather folio on the music rest above the keys to display a piece of sheet music, which Blue was running her fingers over, murmuring to herself as she read the notes.",
        "\"What's going on you guys?\" Steve asked.\n\n\"Oh, I was just telling Jill here about your mom's hobby,\" said Henry.\n\n\"This is really a delicate tune. It's going to be a hard sight read,\" Blue said. She cracked her fingers and rested them on the keys, looking over the notes.\n\n\"Blue, I\u2014\" Jo started but stopped when Henry looked at her, winked and mouthed, \"It's okay.\"\n\nShe read through the tricky section a couple more times then started playing.\n\nIt was a sprightly melody, with lots of complex depth, the tune swirling around a cheerful theme. Blue was furrowing her brow, the tip of her tongue poking out of the corner of her mouth like it did when she was sketching. Jo saw her working the pedal as her fingers wound their way through the piece. Henry reached up and grasped the corner of the sheet and then turned it for her as she came to the end of the page. As she finished up the coda, she held the last notes until they died away on their own.\n\n\"That's a really neat piece!\" she said as she looked up from the page.\n\nHenry laughed. \"Yeah, it sure is neat Jill! So, kids, why don't I break out the good bottle of whiskey and let's sit on the porch.\" He got up and headed to the kitchen. Blue started to get up but froze as she looked as Steve and Jo. Steve had tears in his eyes and Jo's face was white.\n\n\"What's wrong? Did I do something?\"\n\nSteve smiled and pulled her up, gave her a hug then said with a rasp, \"I'm gonna go find Sara.\"\n\n\"Jo, what's wrong? What did I do?\" Jo reached out and rubbed her hand up and down Blue's arm.\n\n\"You didn't do anything wrong Blue. Mom wrote that a few weeks before she died. That's the first time anyone's ever played it besides her. It might be the first time anyone's used this piano since then too, but I'm not sure.\"\n\nBlue looked stricken. She looked over towards Henry. \"Oh my god Jo!\" she whispered. \"I had no idea! I'm so sorry! Should I apologize to your dad?\"\n\n\"No, I think you're good. He would have never shown that to you if he weren't cool with it. It was just a little startling to me and Steve, that's all.\"\n\n\"I feel weird now.\"\n\n\"Blue, you've got nothing to apologize for. Let's go sit outside and drink booze like the sophisticated country folk we are.\" She kissed her then led her out to join everyone on the porch.\n\nHours later, Jo helped Blue up the stairs into her cabin. She was more than a little tipsy.\n\n\"So why did I drink three glasses of that... stuff and you didn't drink any?\" Blue complained. \"That stuff is lethal! Your dad is a tubblemaker. A troublemaker. That second one.\"\n\n\"Twelve hours, bottle to throttle,\" said Jo.\n\n\"What?\"\n\n\"Nothing.\"\n\n\"Okay,\" Blue said and put both hands on Jo's shoulders and pushed her stumbling back until her knees hit the couch and she flopped down on it. Blue hiked up her dress and straddled Jo's legs with her knees on either side of her hips.\n\n\"Whoa there, Blue. You sure you're okay?\"\n\n\"'M fine Jo. And I know you're going to say that tomorrow we say goodbye and I'm drunk and we had a fight last night and am I sure I want to do anything or something like that, right?\"\n\nJo smiled up at her. \"Yeah, something like that.\"\n\nBlue pulled her dress up over her head and threw in onto the hearth of the fireplace, then puffed a strand of blue hair out of her face. She didn't have anything on underneath the dress and was now wearing nothing but her sneakers.\n\n\"Um. When did this happen?\" Jo asked.\n\n\"When I went to the bathroom an hour ago,\" Blue said, and reached back to pull off one shoe, then the other. She deliberately left her socks on.\n\n\"You went to the bathroom in my dad's house. Where did you leave your underwear?\"\n\n\"I hid them under the sink. Don't worry, I set a reminder on my phone to get them tomorrow so I won't forget. I don't want to scandalize your dad.\" She started kissing Jo's neck.\n\n\"Jesus Blue, you're like a walking wet dream tonight, aren't you?\"\n\nBlue leaned back and started tugging at Jo's t-shirt. \"That's my plan. It's our last night.\" She pulled the shirt off and threw it after her dress. \"No messing around, Jo. Tonight I want you to fuck me like you mean it.\"\n\nJo stared at her. Then she smiled and said, \"Yes ma'am!\"\n\n\"Atta girl.\" Blue grabbed her face with both hands and kissed her hard, her tongue reaching out into her mouth. Jo started running her hands all over Blue's body, then reached down and slid a finger between her legs. She was soaking wet.\n\n\"Blue,\" Jo moaned, \"you're so fucking sexy.\" She grabbed Blue's ass and stood up, lifting her off the couch as she squealed \"Eep!\"\n\n\"There it is,\" Jo breathed and kissed her as she carried her into the bedroom. She threw Blue bodily onto the bed then stood looking at her as she started taking off the rest of her clothes.\n\nBlue leaned up on her elbows, watching Jo strip. \"I'm going to miss your body. I've never been with anyone built like you.\"\n\n\"Not even one of your dudes?\" Jo asked. She immediately regretted saying it, but Blue's inhibitions were apparently out the window tonight.\n\n\"None of the dudes. To tell you the truth Jo I never really develop feelings for guys, I only fall for women. Sometimes though I just want some dick.\"\n\n\"Really?\" Jo asked, amused. \"Well, I'm sorry I can't provide that service.\"\n\n\"If we were at my apartment you could.\"\n\n\"Is that so?\"\n\nBlue reached out and pulled Jo down on top of her. \"Yeah, if we were at my place right now you could fuck me with the biggest one I've ever had. Why? Haven't you done that before?\"\n\nShe forced Blue down into her back and trailed her tongue down her belly. \"Believe it or not, no. I'm not into having that done to me, and I haven't been around anyone long enough to get into the toy buying phase. So, no, no strap-ons for me. Fingers always seemed like enough,\" she said, as she slid two of them into Blue.\n\nShe moaned and grabbed two fistfuls of the quilt. \"Some day when you're back in town we'll have to test that theory. With your muscles you could fuck me like no one else.\"\n\nJo grabbed Blue's legs under each knee, bent them up towards her chest, lowered her head and began to lick Blue's clit, knowing that was her fastest way to an orgasm.\n\n\"Oh my God!\" Blue yelled.\n\n\"Shhh! Jesus, Blue, you want everyone in the house to hear?\"\n\n\"Maybe. This is the most privacy we've ever... oh God... had and I like... oh my God... I like being loud! Oh my God Jo! Keep doing that!\" She started thrashing around on the bed grabbing Jo's hair. \"EEP!\"\n\nShe finally collapsed back onto her back. Jo crawled up and cradled her. Blue was panting like she'd been running a race.\n\nJo nuzzled Blue's ear as she started to calm down. She reached over and switched off the light.\n\n\"Why'd you do that?\" asked Blue.\n\n\"I thought you might be ready for some sleep after that and all the whiskey.\"\n\nBlue switched the light back on. \"We're just getting started.\"\n\nAnd Blue was right.\n\nJO\n\nJo heard the side door of the hanger open then slam shut on the automatic springs in the hinges. She was standing on a short stepladder, the upper half of her body inside the engine compartment of her dad's Bell-47. She lifted her head out as Blue walked around the front of the cockpit, carrying two steaming mugs, one of which had a sticky note with \"HANGER\" written on it in Jo's handwriting. The morning sun streaming through the open main hangar doors lit up the edges of her blue hair like a halo.\n\n\"Morning Blue, you sleep ok?\n\n\"Up until I woke up and you weren't there.\" Blue lifted the mug with the note on it and held it out to her. \"Thanks for the locator note. We need to work on your communication skills,\" she said smiling.\n\nYou think you're joking, but you don't know how right you are. Jo thought to herself. She climbed down the ladder and stuck the wrench she had been using in the leg pocket of the grey coveralls she was wearing over her clothes, and pulled a rag out of a different pocket to wipe at the grease on her fingers then took the coffee cup from Blue and took a sip.\n\nJill looked up at the Bell-47. \"So, is this the old one you restored with your dad? I've never seen a helicopter like this.\"\n\n\"Yep. Dad keeps her tuned up, but whenever I'm home I like to give her some love.\"\n\nThe Bell-47 was about as primitive as helicopters got. The tail was just welded tubing forming a boom, holding up a two bladed tail rotor at the back. The main propeller was also just two blades, and the cockpit was a giant Plexiglas bubble surrounding three seats across side-by-side. There were no doors.\n\nThe whole thing was painted olive drab, Army colors from a bygone time. \"M*A*S*H* N4077Z\" was stenciled on the fuel tanks on each side in white paint.\n\n\"Blue, meet Margaret. Margaret, this is Blue Girl.\" Jo said, as if she was making a formal introduction.\n\n\"Margaret?\"\n\n\"She's named after Margaret Houlihan, the character from the TV show M*A*S*H*? This is the same type of chopper they used on that show for bringing wounded to the hospital.\"\n\n\"I'm not sure I've ever watched an episode of that. Maybe on TV Land back when I was a kid,\" Jill said. She was peering into the cockpit.\n\n\"Whoo-boy, don't tell my dad that or he'll probably never speak to you again.\"\n\n\"Really?\" Blue looked actually worried.\n\n\"No, I'm kidding Blue. But he will give you a double ration of shit for not having seen any episodes of his favorite show.\"\n\n\"Oh. Wait! That number N4077Z painted on the side, isn't that tattooed on your back? Next to the helicopter I said looked like a dragonfly?\"\n\n\"Yeah, dad taught me to fly on his MD-500, but after we finished restoring this one I flew it a lot. I flew left seat in dad's bird first though.\" She patted the side of the aircraft.\n\n\"I guess from the side this one looks just like your tattoo. It's pretty cool.\"\n\nJo folded up the stepladder and hung it on a hook next to a workbench along the wall, put the wrench from her pocket in a drawer then stripped off her coveralls and put them into a bank of lockers next to the workbench, leaving her in jeans and the 'Chips and Salsa' t-shirt Blue had bought her on the way to Virginia Beach. She picked up what looked like a garage door opener.\n\n\"Well, it's a good morning for this. Step over here Blue.\" When she was clear Jo pressed a button. There was a quiet mechanical sound and the helicopter started sliding out the main hangar door.\n\n\"Eep!\" Blue said and skipped back another step. She apparently hadn't noticed the low trolley the helicopter was sitting on. Four small, fat tires on each side of the yellow sled whined as the machine rolled out into the sunlight.\n\n\"Do you have a pair of sunglasses handy?\" Jo asked her.\n\n\"They're in the house. Wait, are we going to go flying in this thing?\" Her eyes went wide.\n\n\"Sure. Here, don't bother going inside to get them.\" Jo reached into the lockers again and pulled out two pairs of aviator sunglasses and two navy blue baseball hats that had embroidered patches that said \"Collins Aviation\" on the front. \"Jump up in the right side there.\n\n\"Uh, are you sure about this? I mean do we have tell someone or fill out paperwork or something?\"\n\n\"No, we can fly VFR. No worries.\"\n\n\"What's VFR?\" Jill said as Jo reached in and started buckling the shoulder and lap belts around her.\n\n\"Visual Flight Rules. Means we can't rely on instruments, we have to be able to see where we're going. But it's a beautiful day, so we're fine.\" Jo walked around to the left side and jumped in, strapping her harness on with the ease of long practice. \"You might want to put your hair back and put on that hat. It's going to get windy in here.\n\nThe inside of the helicopter looked very rudimentary. There were just eight gauges on a panel set in the middle of the cockpit, so they could be seen from each set of controls, one set in front of Jo and an identical set for Blue's side. Jo flipped two switches, watched the needles on the gauges run up and down then settle into the normal ranges. She turned a key and the engine behind them roared to life. The main propeller over their heads started to spin, slowly increasing in speed. Jo pointed to a headset hanging from a hook in front of Blue and yelled \"Put that on!\" over the engine noise as she donned her own.\n\nBlue struggled to get the earpieces in place over her unfamiliar baseball hat and sunglasses, then looked over and yelled into her microphone \"Did I do this right?\" Jo had already turned down her volume, expecting that. Newbies always yelled.\n\n\"Okay, first things first, these are noise cancelling headsets, you don't have to yell. Normal voice.\" Her voice was close and comfortable in Blue's ear. As soon as she'd put on the headset, the deafening roar of the engine had dropped to a very tolerable level.\n\n\"Oh, sorry!\" Blue said quieter, looking embarrassed.\n\n\"No worries, everyone does it. Ok, engine temp is green, RPMs look good, you ready?\"\n\n\"Wait! There's no doors?!\" Blue was looking over at the empty space next to her where a door might go. Jo smiled at her but inside a little part of her sighed with regret.\n\nShe'd done this with a few women she'd hooked up with who had been bordering on getting too close to her. She took them up and they got scared shitless. Either she landed and the girl got royally pissed at Jo for scaring her and fucked off, or when she landed they were panicked and crying which was a turn off and made it easier for Jo to fuck off.\n\nShe wasn't sure which way Blue was going to jump, but she needed the help. With Blue leaving with Steve and the gang for DC tonight, and her leaving for Fort Bragg in a few days, she needed the push, one way or the other. She wished she didn't feel like she had to do this with Blue. But if she didn't do something she was afraid she'd say something really dumb that she couldn't back up when it came time to part ways. Like promising \"she'd be back\" for Blue. Or \"wait for me.\" Or some stupid shit. She looked so goddamn cute sitting there.\n\n\"No worries, you've got a four-point harness, you couldn't fall out if you tried. Makes for a better view anyway. Okay, here we go.\"\n\nJo twisted the throttle on the collective. The engine roar increased dramatically, then she smoothly pulled up on the lever and the Bell-47 lifted straight up into the air.\n\n\"EEP!\" Jo couldn't help but smile. She was going to miss that sound so damn much.\n\n\"You know you gotta do it Collins,\" said Little Voice. \"You're out of here to train up for three months, then over in the shit for a year. This is how it's gotta be.\"\n\nCan you leave me alone for this one flight, Little? she thought.\n\nAfter they'd risen a few hundred feet, Jo pushed forward on the stick and they started accelerating away from her Dad's farm, still climbing.\n\n\"Oh my god, this is\u2014\" Blue was whipping her head around, looking out the door, over at Jo, out the front windscreen.\n\n\"Little scary?\" Jo asked, \"It's okay, it takes a while to get used to. It's not like an airplane.\"\n\n\"No, this is so cool!\" Blue gushed. Jo frowned. \"How does it work? Can you tell me how you steer it?\"\n\n\"Uh, sure.\" This isn't how it was supposed to go. \"Okay, so you've got basically three controls. The pedals, the cyclic, or stick, and the collective.\"\n\n\"Pedals and stick, I see those. Is this the collective?\" she pointed down to the lever sticking out by her left hip.\n\n\"Exactly right. So, we'll take them one at a time. Put your feet on the pedals, but don't push on them.\" Blue set her sneakers on the pedals. Her dress was blowing around a bit under the seat belt. That's really distracting, Jo thought.\n\n\"Right, so the pedals control the pitch of the blades on the tail rotor. The tail rotor stops us from spinning around like a top because of the centrifugal force of the main rotor. By changing the pitch of the tail blades, you steer the aircraft left or right.\" They were about three thousand feet above the ground now, headed out towards the Shenandoah Mountains in the distance, flying at a leisurely sixty knots.\n\n\"Look out ahead of us. See the tallest mountain off to our left? Push down slowly on the right pedal until the nose turns and points towards it. Slow and smooth.\"\n\nBlue pressed her right foot down and the helicopter slowly turned to the left. She overshot the heading for the mountain a little, but before Jo could say anything, Blue had pushed down on the left pedal and brought it back to the correct heading.\n\nDamn, Jo thought.\n\n\"This is great!\" Blue was smiling ear to ear. Fuck, this was not going as she'd thought it would.\n\n\"Okay, now the cyclic, but I usually just call it the stick. The stick controls how the big rotor over our head tilts. Tilt it forward and we speed up. Pull back and we slow down or even go backwards. Side to side will slip us in each direction without turning the nose. Want to try?\"\n\n\"Yes!\" She reached out for the stick but Jo stopped her.\n\n\"Wait, this is important. You don't ever want two pilots fighting each other for control of the aircraft, right?\" Blue nodded. \"So, put your hand on the stick.\" Blue grasped it in her right hand and looked at Jo. \"Okay, whenever you take over control, you shake the stick like this,\" Jo gave her stick a little jiggle. \"Did you feel that?\"\n\n\"It shook mine when you did that.\"\n\n\"Right, so when you're taking control, you shake the stick and you say 'my aircraft' so the other pilot knows you have it, then I'll acknowledge it's your aircraft. Don't steer yet, just take control and let me know.\"\n\nBlue licked her lips, then she jiggled her control stick and said, \"My aircraft.\"\n\n\"You have the aircraft,\" Jo said and took her hand and feet off the controls.\n\n\"Uh, Jo? Am I flying us now?\"\n\n\"Mostly. I still have the collective, but that's more complicated, so let's worry about this first. We're slowing down because you have the cyclic in a neutral position. So, slowly push it forward.\" Blue did so and the helicopter tilted down at the nose and sped up. \"Now slowly pull it back to you.\" The nose rose up and they slowed down. \"Good job.\"\n\n\"This is really cool, Jo!\"\n\n\"Alright, so let's combine what you know so far. Push the stick forward to accelerate us and make a slow turn to the right with the pedals, while also slightly tilting the stick the direction we're turning. She could see Blue concentrate as she started a banking turn. \"Good, tilt it a little more to the right. Easy. Easy, I'm going to help just a little.\" Jo grasped the stick and pulled up the nose a bit as they banked to the right. \"Good, you're a natural.\"\n\n\"So, what does the collective do?\"\n\n\"This one's a little more complicated, but I'll walk you through the basics. Let me take over. I've got the aircraft,\" she said and shook the stick. Blue took her hand off her stick.\n\n\"Forgetting something?\" Jo asked with a raised eyebrow.\n\n\"Oh! Sorry, you have the aircraft, sir!\" Blue was grinning ear to ear.\n\n\"Right. Okay, the collective is actually two controls. The first is the throttle, how fast the engine is running. See how you can twist it like a motorcycle handle? Go ahead and grab it and turn it towards you, clockwise.\" Blue did as instructed, the engine sped up and the helicopter started to gain altitude. \"See? You make the engine go faster, we go higher. Got it?\"\n\n\"Throttle, check.\"\n\nJo smiled. She was like an eager recruit. \"Alright, now the other thing you can do is you can change how the blades are feathered.\"\n\n\"What does that mean?\"\n\n\"If you looked at a cross section of the blades above us, they look like an airplane wing. By pulling up on the collective you increase the pitch, or change to angle, which basically blows more wind down through the rotor, which gives us lift, okay? If you want less lift, you push down on the collective, which 'feathers' the blades. Go ahead and push down slowly.\"",
        "Blue did and they started drifting down. \"And pull back up,\" Blue lifted up on the collective and their descent halted and then reversed.\n\n\"Okay, so now you know all the controls. Run them down for me.\"\n\n\"Uh, ok, so pedals turn the nose left and right. Stick tilts the propeller above us? Right, okay. Then throttle speeds up the engine, and... what's the other thing called again?\"\n\n\"The collective. Pushing it up and down...?\"\n\n\"Ah, right, 'feathers' the blades for lift. Is that all right?\"\n\n\"You nailed it Blue, you're ready for flight school.\" Jo had banked them back towards her dad's farmhouse.\n\n\"Really?\"\n\n\"Well, there's a lot more to it, but you have the basic idea.\"\n\n\"Each piece seems so easy, but I have a hard time imagining doing them all at once! You have to use both your hands and feet at the same time and coordinate everything!\"\n\nJo smiled. \"I don't know if any helicopter pilot in the world has gone through flight school without being told that learning to hover a helicopter is like balancing a barn door on top of a flag pole.\"\n\n\"This is so neat!\" She was still gawking out the open door next to her. \"I guess the only bad thing is that if you're in an airplane and the engine dies you can glide but we'd be out of luck.\"\n\nThere's my opening, Jo thought sadly. She looked out to her left where the Front Royal municipal airport was a few miles away and increased her throttle to take them up a couple thousand more feet, banking toward the runway.\n\n\"Not true, Blue. We've got ways. I'll show you.\" She scanned the skies around them for any aircraft, adjusted a dial on the radio panel in front of her then pushed a button on the stick. There was a short burst of static in their headphones, then Jo said into the mic, \"N4077Z, in the clear over Front Royal County airfield. We are commencing an auto-rotation exercise, runway one-zero.\"\n\n\"What does that mean? What are we doing?\"\n\n\"Well, say we're up here and, I dunno, we run out of gas. Problem, right?\n\n\"Uh, yeah, that would be a problem!\"\n\n\"So, this happens,\" Jo twisted the throttle all the way over and the engine stopped roaring and dropped to an idle. The helicopter began to descend. Quickly.\n\n\"EEP! Jo, what are you doing?\"\n\n\"This is called an auto-rotation. Normally the engine spins the blades and blows wind down through them to lift us up, right?\" Out of the corner of her eye she saw Blue grabbing her seat. \"So now the engine is 'dead'. It's not actually dead, I could spin it back up pretty quick if we had to, but say it's dead. We're falling. So instead of the engine forcing air down through the rotors, I'm using the air flowing back up through the blade as we fall to keep them spinning. See that gauge, second from the top on the left? That says \"ROTOR\"? I just need to keep that RPM level in a certain range.\n\nLittle Voice chimed in as he always did, \"Three-thousand AGL, rate of descent twelve-hundred FPM. Airspeed forty knots. Runway lined up and you're on the path. Two minutes, thirty seconds.\"\n\n\"But we're falling!\"\n\n\"Relax Blue, this is just a math problem. So, the inside part of the rotor disc moves slower than the outside, right? That's just geometry.\"\n\n\"But Jo, we're fallllliiing!!\n\n\"Twelve-hundred AGL, thirteen-hundred FPM, twenty-five knots. One minute. You're in the groove.\"\n\n\"We're okay, Blue. Trust me. The outside tips of the blade are providing drag, slowing us down, but the inside parts are taking the air coming up at us, and forcing the rotor to spin. Now, if I let them spin too fast, they'll actually fly apart. So, math problem. Keep the blades spinning fast enough to slow us, but not fast enough to break. That requires maintaining the correct feathering, the correct forward airspeed and the correct rate of descent. With me?\"\n\n\"No, but you go ahead and do what you need to do to stop us Jo!\"\n\n\"Four hundred AGL. Start slowing your descent, eight hundred FPM.\"\n\nShe smiled. \"I'm doing it. Maintaining all these factors is called staying in the envelope. As long as I keep the numbers in a narrow range, then we're fine.\" The ground was coming up to meet them quickly as they crossed the end of the runway, a big \"10\" painted on the cement.\n\n\"How is this fine?!\" They were less than two hundred feet above the runway.\n\n\"I've used the drag from the outside parts of the blades to slow our descent, and now I do this.\" She lifted up on the collective and pulled back on the stick and they slowed dramatically as they came down towards the surface of the runway. As Jo brought up the nose and pitched the rotors, the helicopter started trading downward movement for a forward glide, smoothly decelerating until the metal skids of the undercarriage gently scraped along the concrete of the runway and they came to a stop.\n\nBlue was breathing heavily and had a death grip on her seat. Jo waited for the inevitable explosion. \"What the fuck were you doing!\" or \"Are you crazy?\"\n\nBlue let go of the seat and turned to Jo. She braced herself.\n\n\"That. Was. So cool!\" Jo blinked. \"That was like the best roller coaster! Could you teach me that? How long does it take to learn to do that?\"\n\n\"Uh, I mean they teach everyone that in flight school, but it takes a long time to master it.\"\n\n\"I bet! You were so smooth and we just glided in!\" Blue gushed. \"'I had no idea a helicopter could do that, that was so neat!\"\n\n\"Yeah... neat. Um okay, I need to clear the runway in case there's any planes who want to come in.\" She throttled up, lifted them back up into the air and headed back towards Dad's farm.\n\n\"Well, that plan of yours worked for shit Collins. Now what?\"\n\nI have no idea, Jo thought.\n\nJo's final big fuck up happened just after lunch.\n\nJILL\n\nI'd had an idea the day before, so I asked Steve to keep Jo distracted for a bit right after lunch so I could go to the barn by myself to work out something. I'd been messing around for about forty-five minutes when Jo walked in.\n\n\"Hey Blue, I was looking for you. What are you doing out here?\"\n\n\"Just working on a thing.\"\n\n\"Okay. Uh, Steve's planning on leaving right after dinner.\" She sounded as sad as I felt.\n\n\"C'mere.\" I was sitting at the piano. \"We should talk, but I want to do something first.\"\n\nJo came over and I had her sit next to me on the bench.\n\n\"Blue, what...\"\n\n\"You sit and be quiet. I need to concentrate.\"\n\nI took a breath and started playing the song I'd been working out. It was a totally basic version of the song, just the simple chords, no flourishes. I just wanted the melody to be recognizable enough while I sang.\n\nSometimes, I imagine a world without you.\n\nBut most times, I'm just so happy that I ever found you.\n\nIt's a complicated web that you weave inside my head.\n\nSo much pleasure with such pain, I hope we always, always stay the same.\n\nMy voice was shaking a bit, I was so nervous.\n\nI'm feeling the way you cross my mind,\n\nAnd you save me in the knick of time.\n\nI'm riding the highs, I'm digging the lows,\n\n'Cause at least I feel alive.\n\nI've never faced so many emotional days.\n\nBut my, life is good!\n\nI'm feeling y-o-o-o-u-u-u!\n\nI'm feeling y-o-o-o-u-u-u!\n\nI was ready to go into the second verse when I glanced up. Jo was smiling, but none of the smile was touching her eyes. I trailed off and stopped playing.\n\n\"What?\" I whispered.\n\n\"Blue, we can't do this.\"\n\n\"Jo, listen to me for a second. Can you listen?\"\n\n\"Blue\u2014\"\n\n\"No, you have to listen. I know! I know today is it. I'm leaving. You're leaving. I know, okay?\" Tears had started rolling down my cheeks. \"All I want is for you to tell me how you feel about me before we go. That's all.\"\n\n\"That's not part of the deal Blue. We both knew this had to end.\"\n\n\"I know that! But these two weeks. Jo, I've fallen for you so hard. And I know you have too. I just want you to say it before we say goodbye. I want you to tell me, to tell yourself, how you feel about me. Right here. Just us. Just tell me.\"\n\nJo was hoarse, but her eyes were still dry.\n\n\"Can't do it Blue. No attachments. That was the deal.\"\n\nShe got up, kissed me on the top of my head and started to walk out of the barn.\n\n\"I'm not asking for an attachment Jo.\" She kept walking. I stood up and yelled at her, \"Jo Collins, you can't do this to yourself!\"\n\nShe stopped and turned back to me. \"I'm not, I'm doing it to you Blue and I'm sorry but I told you this was how it had to be.\"\n\n\"Jo, you're lying to yourself! I understand you have to leave me! But if you walk out without telling me what you feel, then you're lying to me and yourself and if you don't stop lying to yourself you're never going to get over this... this... bag of shit you're carrying around with you!\"\n\nShe just looked at me. I took a deep breath.\n\n\"Jo, being honest with yourself takes courage. And you're one of the most courageous women I've ever met. But if you can't look me in the eye, and tell me how you feel, then...\"\n\n\"Then what, Doran?\"\n\n\"Then you're a coward. You're a fucking coward, Jo. And you'll never, ever find any peace within yourself.\"\n\nShe stared at me for what felt like minutes. Then she squared her shoulders and huffed out a breath.\n\n\"Goodbye, Blue.\" And she walked out.\n\nShe walked out...\n\nI sat down on the piano bench. Time passed and I just sat there, waiting. Surely, she'd be back. There's no way she could just...\n\nI heard a noise outside. It took me a few minutes to realize what it was. I got up and ran out of the barn in time to see her dad's helicopter take off and glide away from the farm. I couldn't see who was flying it, but I knew.\n\nI knew...\n\nI walked up to the house. Steve and Sara were on the porch.\n\nSara looked as distraught as I felt. Steve looked grim.\n\n\"She did it, didn't she?\" he asked.\n\n\"Yeah. She did. I mean, I knew she would, I just wanted her to tell me how she felt about me first and she couldn't do it.\"\n\n\"Well, she'll be back before we leave tonight. You'll have another chance,\" said Steve.\n\n\"No.\"\n\n\"What do you mean?\" Sara asked.\n\n\"I mean, no. I'm done.\"\n\nJO\n\nAfter she landed the Bell on the trolley and rolled her back into the garage, Jo walked up to the house. She paused on the front steps.\n\nMaybe I should just\u2014\n\n\"Just what, Collins?\"\n\nTell her how I feel. She's right. I'm being\u2014\n\n\"You stupid fuck. If you go in there and tell her you've fallen for her or you love her, you'll just have to repeat this afternoon all over again.\"\n\nLittle, for once in my adult life. Shut. The. Fuck. Up.\n\nShe walked in the house. Larry and Steve were in the kitchen.\n\n\"Hey guys. Uh, where's Blue?\"\n\n\"Jill's gone,\" said Steve.\n\n\"What? What do you mean?\"\n\nSteve rolled his eyes. \"Goddamn you're stupid sometimes, Sis. She left.\"\n\nJo looked at him stupidly. \"How?\"\n\n\"She somehow managed to find a Lyft driver out here who was willing to drive her to DC for probably three hundred bucks, and she left.\"\n\nJo stood there looking lost.\n\n\"She left you that,\" Larry said, pointing at something on the counter.\n\nShe walked over. Maybe it was a note?\n\nIt was the drawing from Blue's sketchbook. Jo singing for the crowd. Like she hadn't been able to for eight years. She stared at it without picking it up. Blue had signed it. Not with her name. It just said \"Blue.\"\n\nFinally, she bit her lip and nodded. \"Okay. Okay. Sorry for all the drama Bro.\" She sighed. \"I'll be in the barn.\" She walked out of the house.\n\nSteve slapped the counter. He looked at Larry. \"My big sister is a dumbass.\"\n\n\"Yep. You mind if I...?\" He tilted his head toward the barn.\n\n\"Have at it, I'm not going out there.\"\n\nJo stood in front of the piano in the barn.\n\n\"It's better this way Collins. Clean break. Had to be done.\"\n\n\"Had to be done,\" she whispered. She turned her head and saw her dad's Gibson SG hanging in the cabinet. She took it out, plugged it into an amp, and clicked it on.\n\nThe first time she'd ever tried to play Stevie Ray Vaughan's version of Little Wing had been the afternoon they'd laid Mom to rest. She been absolutely atrocious at it that first time, really awful. Every time she was home, though, and felt sad, was missing Mom, or had fucked up another \"relationship\", she gave it another go.\n\nShe'd gotten really, really good at it.\n\nNo one would ever match Stevie Ray, the amount of soul he could put into that tune. But she'd gotten close.\n\nShe stood there, drawing out the opening bars on the SG. Usually when she did this, she closed her eyes, and saw Mom sitting at the piano. Now, when she closed them, she could only see Blue sitting there, pleading with her.\n\nShe heard a drum fill behind her and turned to see Larry sitting at the drum set, playing a quiet, soulful rhythm, rim-clicking his stick and tapping the high-hat. She walked over to stand right in front of his bass drum. Maybe Blue wouldn't haunt her over here.\n\nLarry said nothing, just steadily accompanying Jo, slowing nodding his head to the jam, as they watched each other while she coaxed the notes out of her guitar.\n\nWhen she got to the big blues ending, she turned up the volume knob and put all the pain and heartache she'd saved in her life into it. She had to close her eyes, wailing on the notes, hitting the harmonics. She still saw Blue in her head. Begging her.\n\nShe wondered if maybe she'd poured all her tears into this song over the years and that's why she had none left for herself.\n\nAs she walked out the ending she opened her eyes and Larry was nodding in approval.\n\n\"Damn Jo, you're almost a match for Stevie Ray now.\"\n\n\"Thanks for the backup.\"\n\n\"You should do that on stage sometime,\" Larry's said, standing up and putting the sticks on the snare.\n\n\"No, this one's just for me.\"\n\n\"Okay. Dinner'll be on in a bit.\"\n\n\"Hey Larry?\"\n\n\"Hmm?\"\n\n\"All those years you and Suzanne chased around it. How did you figure out it was right?\"\n\n\"That's easy, Jo. It was the day I finally realized I don't live in tomorrow. I live in today.\"\n\nHe walked out of the barn.\n\n~~ Adams Morgan, Washington D.C., November ~~\n\nJILL\n\n\"I'm sick of pumpkin spice,\" I said, picking my venti latte off the counter.\n\n\"Then stop ordering it, J.\"\n\nSara was doing her usual check-in visit, making sure I left the house at least once a week. Annoying, but appreciated.\n\n\"Can't do it Sara. They have it, I have to order it. I don't make the rules.\"\n\n\"You one hundred percent make that rule.\"\n\n\"Vicious slander. You'll be hearing from my lawyer.\"\n\n\"So, Steve said Jo's been emailing you.\"'\n\nI looked at my watch. \"Jesus, that took no time at all.\"\n\n\"I'm sorry! He just told me this weekend. It seemed like a big deal.\"\n\n\"She's been emailing me since September, before she left.\"\n\n\"What? Why didn't you tell me? What did you say to her?\"\n\n\"I haven't written her back,\" I said as I held the door open for us to go out to the street.\n\n\"Jill! Why not?\"\n\nI sighed. \"Because, Sara, they're just inane little emails. 'How've you been?', 'Training's going good', 'We're shipping out tomorrow\", 'It's getting cold here', 'I'm not flying as often as I have on other deployments.' I don't give a damn. She still won't talk about anything real or tell me about her feelings. I'm not here for the other bullshit.\"\n\n\"But... You haven't answered her at all?\"\n\n\"I sent her one email after her fourth or fifth one, saying if she wanted to have a real conversation then I'm up for it, otherwise I wasn't going to answer her again. The next email was the same, so I filtered her address into a folder and I haven't looked at any she's sent me for the last month.\"\n\n\"Wow.\"\n\n\"Yeah. So, anyway what's new with you?\"\n\n\"Maybe she doesn't want to do it over email, maybe she's angling to set up a video chat or something?\"\n\n\"Sara. You knew she fell for me, right?\"\n\n\"It was pretty obvious.\"\n\n\"Right, so did she. And so did Larry, and Suzanne, and Jack, and Steve, and Henry and probably Hank. I didn't ask her to commit to me, or promise to come back to me, or anything like that. I just asked her to tell me how she felt about me. And she couldn't do it. She literally ran away in a freaking helicopter! I don't care anymore.\"\n\n\"Jill.\"\n\nI sighed. \"What?\"\n\n\"If you don't care, why do I have to Metro into D.C. once a week to make sure you leave the house, and have groceries and haven't gotten like six cats.\"\n\n\"My building doesn't allow cats.\"\n\n\"I'm saying, as obvious as it was that she fell for you, it's equally obvious that you do still care. You're worse off than after Laura. By a lot.\"\n\n\"I just need time. I'll... move on... eventually.\"\n\n\"But maybe you don't have to?\"\n\nI started getting angry. \"Look, can we just drop it? She made her choice. If she couldn't tell me how she felt then, to my face, even if she did it now over Skype or something, she's doing it from the 'safety',\" I made air quotes, \"of a war zone. That wouldn't be an improvement.\"\n\n\"Okay, okay...\"\n\n\"Thank you.\"\n\nWe walked in silence. As we passed the entrance to the National Zoo, she said, \"You were a really great couple.\"\n\n\"...I know.\"\n\n~~ Bagram Airfield, Afghanistan, January ~~\n\nJO\n\n\"Chief Collins, the big boss wants to see you in his office!\"\n\n\"Thanks, sergeant,\" Jo said. She looked over at Nguyen. \"What do you think this is about?\"\n\n\"Three guesses.\"\n\n\"Fuck.\"\n\nJo pulled on her flight jacket as she left the ready room. It was below freezing, as it was most days this month. As she trudged across the base to her commander's office, she wasn't thinking about what she was about to get chewed out for. She was thinking about what had happened before what had happened that she was about to get chewed out for. Blue hadn't answered a single one of her emails since September. She didn't blame her. She'd tried to get more personal, open up a little in the hopes that she'd...\n\nThen Steve had told her over Skype yesterday that Sara had found out Blue had been sending her emails to her spam folder since October. Sara had also said that Blue was a wreck.\n\n\"Collins, if you'd just...\"\n\n\"Shut the fuck up Little!\"\n\n\"Sorry, what's that Chief?\" the staff sergeant outside the commander's office said as Jo came in the door.\n\n\"Uh, nothing. Here to see the boss.\"\n\n\"Go on in.\"\n\nShe went into Major Seely's office and stood at attention before his desk.\n\n\"As you were Chief, sit down.\"\n\nMajor Seely was a good boss. Almost as good as Major Wright had been to her on her first two deployments. She sat ramrod straight in front of him, her back not touching the chair.\n\nHe sighed. \"Fucking at ease Chief.\"\n\nShe nervously sat back into the chair.\n\n\"Collins, I need to know what's going on with you.\"\n\n\"Sir, if you're talking about yesterday, I apologize and I assure you, it won't happen again.\"\n\n\"I'm not talking about yesterday, Jo. I'm talking about how before this tour, you were my best pilot. Someone I held up as an example. One of the most dependable leaders in the division. And you're a fucking wreck now. Your maintenance reports are always late. Your after-action reports are a mess. And, yes, let's talk about yesterday. Getting in a fist fight with Chief Davis in the mess hall? The Flight Officer said last week you came in and almost landed on the wrong pad, before you dusted off and flew over to the right one!\"\n\nShe flushed. \"Sir, I... I'm sorry. I'll get my shit together.\"\n\n\"I need to know what's going on. You're too valuable to me to circle the drain like this. Talk to me.\"\n\nShe sat there staring at the wall above his head for a long while. Major Seely didn't appear to be in any hurry to move on. He just quietly sipped his coffee, watching her.",
        "\"I'm... I just have some personal stuff going on, sir.\"\n\n\"Okay. Is there anything we can do to fix it?\"\n\n\"I don't think so, sir.\"\n\n\"Really? Nothing?\"\n\n\"No sir, there's nothing I can do about it.\"\n\nHe looked up at the ceiling. \"Jo, this is the slow time of year here. Everyone's holed up for the winter instead of fighting. We're doing a lot of catch up. I believe that maintenance would enjoy taking your bird out of service for, oh say, seven to ten days and rebuilding both turbines. During that time, I do not believe that your services will be required on this base.\"\n\nJo looked at him in disbelief.\n\n\"Are you shit-canning me sir?\"\n\nHe laughed, \"No! I'm cutting you travel orders. I'm offering you the rare, hardly seen anymore, seven-day pass. And I believe we have at least six transport aircraft leaving this base daily that accept deadheads if there's room. Do you get me?\"\n\n\"Sir?\" she whispered. \"I don't... I can't...\"\n\n\"You can and you will, Chief. Get off my base. Go to Italy, find a beach and lay on it. Go to Germany and get shitfaced. Go all the way home if you can manage. Whatever you need to do to get your 'personal stuff' fixed. Because after those seven days, I need your ass back here, in top working order. Are we clear?\"\n\n\"Yes sir.\"\n\n\"Very well. Dismissed Chief.\"\n\nShe drew in a deep breath and stood and snapped to attention. \"Yes sir.\"\n\nMajor Seely stood and offered his hand. \"Jo, go get your shit straight. One way or the other. You're too good to be going on like this. Now git.\"\n\n\"Yes sir.\"\n\n\"I mean what the fuck am I supposed to do now? Go sit on a fucking beach?\" Jo snarled. She was pacing back and forth in the empty ready room. Her co-pilot was sitting at the table she was using as a focal point for her laps, drumming his fingers on the tabletop.\n\n\"Reel it in, Jo. You're pressing the envelope.\"\n\nShe stopped and stared at him. \"Nguyen, you heard what he told me. I'm supposed to just\u2014\"\n\n\"You're supposed to take care of your personal shit, Jo. Is your personal shit on a beach? Or do you think maybe it's in DC?\n\n\"No, but... wait, what did you say?\"\n\n\"Jesus Christ, Jo, your problem isn't that you're 'stressed out' and a beach vacation will fix it and you and I both know it. If you aren't on that plane this afternoon headed towards that blue-haired girl of yours, you're a dumbass of the first degree. With respect. Ma'am.\"\n\nJo gawked at him \"How the fuck... where do you get off Nguyen?\"\n\n\"I talked to her in Fayetteville, Jo, and I saw the two of you together. And where do I get off? I'm riding in the right seat. When you fuck up because you're thinking about her instead of your job, I'm gonna die too. So are Ehrens and Jackson and Charles.\"\n\n\"I... Fuck, we're not talking about this. I don't talk about this.\"\n\n\"Yeah, you are. At least I'm gonna talk and you're gonna listen Jo.\" He stood and got in her face. \"I know you 'don't talk' about your personal shit. But you're distracted. Absent-minded. Sloppy. And you could get us killed. Anyone could see when you came back this summer you left a piece of yourself behind. And I think you left it with Jill.\"\n\n\"I leave this shit behind so I won't be distracted, Nguyen! That's why I\u2014\"\n\n\"Jo!\" he interrupted her. He waited until she finally looked him in the eyes.\n\n\"How much more distracted do you think you'd be,\" he said slowly, \"if you had her to go back to, to look forward to, than you are right now, when you're beating the fuck out of yourself over whatever happened between the two of you. More? Or less distracted than you are now?\"\n\nShe sucked in her breath like she'd been gut punched.\n\n\"Go fix this. Or go apologize to her face so you can get some closure and move the fuck on. Whatever you need to do, do it.\" She looked away. \"Jo, you're the best pilot I've ever flown with. You're my friend. And I'd walk into any fight with you at my back. But you don't have my back right now. Get yourself right. Because I don't know how much longer I can go along on this ride with you.\"\n\n~~ Arlington, Virginia, January ~~\n\nJILL\n\n\"Sara, I really don't want to go to this,\" I said. I couldn't believe she'd gotten me out on a Wednesday night. I had agreed to dinner and said maybe, maybe, I'd go to the other thing. But after sushi, I was souring quickly on the idea of going to a Rotors show.\n\nI wasn't really dressed for it either, just wearing jeans, a giant, baggy cable-knit sweater and my old, worn pea coat. Since I'd become a hermit again, I'd had my sister re-dye my hair back to something close to my natural color, a dirty blonde. My one concession to my crazy hair habit was a small braid down from my right temple, with two strands dyed white and one dyed purple.\n\n\"Jill, you have to, please. They'll probably never do an acoustic set again. This is for the tenth anniversary, and it's invite only. Steve only gave out a hundred passes to this, just to the hardcore regulars and friends. And he and Suzanne and Larry specifically begged me to get you there.\"\n\nSara had told me that this month was the tenth anniversary of the Rotors' first paid gig. Steve had rented out the Four Courts bar in the Courthouse area of Arlington and the band was going to do an acoustic set for some of the favorite fans who were more friends at this point and who had supported the band all these years. I wasn't one of that demographic, having only been a fan for the last year and a half or so, but I guess having such a giant emotional catastrophe with Steve's sister gives one an in.\n\n\"Fine,\" I said, \"But I'm not promising to stay the entire show, okay? Just coming out tonight is a big step for me. And if some douchebag asks me about Jo, I'm out. Got it?\"\n\n\"Okay, I get it. But I'm super glad you're here, J.\" She hugged me and I wrapped my arms around her and leaned into it as the Metro pulled into Courthouse Station.\n\nWe walked the three blocks from the Metro to the bar. Steve met us at the door, wearing a suit with his trademark skinny tie hanging loosely around his neck. He gave me another hug. \"Jill, I'm so glad you could come tonight. It wouldn't be the same without you.\"\n\n\"Thanks Steve, but I'll warn you I'm feeling squishy on the idea.\"\n\n\"I get it. Can I get you a drink? Open bar?\"\n\n\"Now you're speaking my language.\"\n\nSuzanne, Larry and Jack were at the bar. Suzanne in a black dress, Larry wearing a crisp, white shirt with the sleeves rolled up and a black bow tie. Jack was dressed in a black turtleneck befitting a Broadway stagehand.\n\nMore hugs. More me feeling like this was wrong, that I shouldn't be here. I felt like everyone in the bar was looking at me. Steve handed me a white wine that I gulped way too fast then asked for a refill. We all chit-chatted about the inane things you talk about when you don't want to talk about what everyone knows is hanging over everything.\n\nWhen it was show time, we walked together into the space set up for the performance. There were tables throughout the room. No dancing this time I guessed. Each table had a white tablecloth, a vase with a single rose and a small oil lamp burning, providing soft yellow light. The stage wasn't really a stage, just an oriental rug against a brick wall. Larry's drum kit was there, scaled down to about half as many drums as usual, as well as Suzanne's acoustic bass and Steve's Ovation guitar, sitting in their stands, waiting behind three microphones.\n\nI froze when I saw the huge, blown-up poster on the wall behind the drum set. It was the picture I'd drawn of the band when we were in the Outer Banks. I gulped, looking at the image of Jo, jumping straight up in the air, her guitar held up like a trophy after a hunt. I turned to Sara.\n\n\"I want to go home,\" I whispered. I heard my voice crack.\n\n\"Jill. I need you to stay for ten minutes. Then I'll walk you out and get you to the Metro. Okay? Please?\" She put her arm around me and made me walk.\n\nSteve escorted Sara and me to a table right up front. Larry and Suzanne sat down with us.\n\n\"Uh, are you guys going to play from here?\" I asked.\n\nLarry grinned at me. \"No, we've got an opening act tonight.\"\n\n\"What? Who?\" I asked.\n\n\"I think you might like it Jill. Just hang on.\" Suzanne smiled at me and squeezed my hand.\n\nSteve stood at a mic in front of the crowd who quieted down.\n\n\"I want to thank everyone for coming tonight,\" Steve began. \"The Rotors wouldn't have lasted as long as we have without support from people like everyone in this room. Everyone here is more a friend than a fan. You really make it possible for us to do what we love. So, thank you.\"\n\nThere was applause. After it died, he continued.\n\n\"We don't usually have opening acts, but tonight is a special night. This act is also someone that, without whom, the Rotors would not exist. Ladies and gentlemen, my sister, Jo Collins.\" Steve came and sat back down at our table.\n\nMy heart started pounding in my chest as Jo walked out from the side to applause from the crowd. My mind was racing. How was she here? She couldn't be here. She left. She was in Afghanistan. This wasn't possible. Was it possible? I couldn't breathe and I was crushing Suzanne's hand with mine.\n\nMy second thoughts were to get up and run out. The last time she'd been in front of me, what I'd said to her, what I'd called her... Nothing good could come from this, right? What was happening?\n\nShe didn't look like the Jo I was used to. She was wearing a white linen button down shirt with a black tank top underneath, black silk slacks and black velvet slippers with shiny silver buckles on the toes. And she was wearing the choker I'd given her. And make-up. And dark lipstick. And her hair was styled, spiked up over her head. And she had Belle hanging from a strap over her shoulder, the white acoustic Yamaha polished to gleaming, the gold tuning knobs shining under the spotlights.\n\n\"What is... what is this?\" I was gasping. My body made a motion to flee, but Sara put her arm around me and held me in my seat.\n\n\"It's okay Jill, breathe, it's okay.\"\n\nJo took her place at the center microphone and the crowd grew silent. She was looking down at the floor. She remained motionless for a long time. An uncomfortably long time. I heard Steve murmur, \"C'mon, Sis.\"\n\nShe started strumming Belle, and... I knew these chords. I knew this song. I had heard it on Spotify and in Starbucks and in Whole Foods countless times. Oh my god. Oh my god, she's not... she can't be...\n\nShe closed her eyes and lifted her head up to the mic.\n\nAnd she started singing.\n\nI don't know but, I think I may be, fallin' for you, dropping so quickly.\n\nMaybe I should, keep this to myself, waiting 'til I, know you better.\n\nI am trying not to tell you, but I want to. I'm scared of what you'll say.\n\nAnd so I'm hiding what I'm feeling,\n\nBut I'm tired of holding this inside my head.\n\nTears were streaming down my face and I held my hands over my mouth as I watched her. Her singing voice was throaty and deeper than I'd imagined it would be. As she went into the chorus, she opened her eyes and stared into mine. Into me.\n\nI've been spending all my time, just thinking about you,\n\nI don't know what to do, I think I'm fallin' for you.\n\nI've been waiting all my life, and now I found you,\n\nI don't know what to do,\n\nI think I'm fallin' for y-o-o-o-o-u-u-u-u.\n\nI'm fallin' for y-o-o-o-o-u-u-u-u!\n\nShe'd been motionless through the first chorus, but then she started swaying Belle gently back and forth as she sang to me. She was singing just to me. Everything else in the room faded away and it was just me and her and I could hear the yearning and fear behind her voice. She was terrified and she was doing this anyway. After the second chorus, she came to the bridge and stopped strumming, her arm resting on Belle, her eyes closing again, her voice filling the room, making me ache as she called out.\n\nOh, I just can't take i-i-i-i-t!\n\nMy heart is raci-i-i-i-i-n-g!\n\nEmotions keep spilling O-O-O-O-O-O-U-T!\n\nAs she sang, I noticed that tears were streaming down both her cheeks. I had no idea how she was keeping her voice steady, but she was crying and singing at the same time.\n\nShe was crying!\n\nShe opened her eyes again and they bore into me. She started playing Belle again and went into the chorus for the final time.\n\nI can't stop thinking about it.\n\nI want you all around me.\n\nAnd now I just can't hide it.\n\nI think I'm fallin' for you.\n\nI'm fallin' for you, oh whoa-o-o-o-h\n\nOh no no, no\n\nWhoa-o-o-no no no no,\n\nOh, I'm falling for you.\n\nAs she strummed the final note and her voice died away I leapt out of my chair, flew across the space between us and thumped into her hard, knocking her back away from the mic, my arms wrapped tight around her. The discordant jangle of strings as I sandwiched Belle between us was only partially drowned out by the applause and cheering of the crowd as I held on to her like I was drowning.\n\n\"I'm sorry Blue, I'm sorry! I'm such a mess, I'm so sorry!\" she kept saying over and over as she cried into my hair, hiding her face from the crowd.\n\nI couldn't answer for a minute, trying to calm my own crying. Finally, \"How are you here? How is this possible?\" I whispered in her ear.\n\nShe sniffed. \"I'm on a week's pass. I've spent the last seventy-two hours straight in air bases and airports and airplanes. I have about twenty hours here before I have to turn around and go back, minus the two hours Suzanne and Sara spent making me look like... Bizzaro Jo. And if I miss any connecting flights on the way back I'll be AWOL.\"\n\nI leaned back and smiled at her through my tears, then held her face with both hands and kissed her as hard as I could. More cheering. \"You look so beautiful. I can't believe you did this. I could tell it cost you.\"\n\n\"You told me having your girl sing to you in front of a crowd would be the most romantic gesture for you, and for the last six months, I've wanted to make us right. Because you were right, about me being a coward. And I don't want to lie to myself. Not about you. So here I am.\" She looked around and wiped her eye on her sleeve. \"And here we are, in front of everyone.\"\n\n\"Oh my gosh!\" I suddenly remembered the crowd, who were settling down. I leaned closer, \"Ok, so can you and I get out of here?\" I whispered, \"I need to get you naked very soon.\"\n\nShe laughed. \"Blue, I'm just getting started.\" She nodded to Steve, who was coming up to us to fist bump Jo. Suzanne and Larry hugged us both, and then Larry headed behind his drum set while Suzanne picked up her bass.\n\n\"Ok, but we need to go soon.\" I said, squeezing her again. I started to go back to my seat, but she caught my arm.\n\n\"You're staying right here.\" She positioned me to the side of her mic, as Steve pulled out Layla from behind an amp and strapped her on.\n\nShe turned so the mic was between me and her and started picking out the notes to Michelle Branch's All You Wanted, while staring into my eyes. Larry, Suzanne and Steve joined in, Steve doing the electric part on Layla while Jo strummed Belle. My crazy warrior woman was going to serenade me while I had to stand right here on the stage in front of everyone. And I loved it.\n\nI wanted to be like you, I wanted everything\n\nSo I tried to be like you, and I got swept away\n\nI didn't know that it was so cold, and you needed someone to show you the way.\n\nSo I took your hand and we figured out that, when the time comes, I'd take you away.\n\nSuzanne and Steve stepped up to their mics and even Larry joined Jo on the chorus while I stood there grinning like an idiot, swaying back and forth, my fingers knitted together in front of me. The way they harmonized with Jo made it sound like there were twice as many people singing. The kind of harmony you get when families sing together.\n\nIf you want to, I can save you, I can take you away from here.\n\nSo lonely inside, so busy out there,\n\nAnd all you wanted was somebody who cares.\n\nThe crowd broke into applause again at the end of the song as I hugged Jo once more.\n\n\"Okay Blue, I've taken the leap. Will you leap with me?\"\n\n\"What do you mean?\" I asked, as she took my arm and pulled me over towards the mic.\n\n\"Oh, no. No, no, no, no, I can't.\"\n\n\"You can do this Blue. I want you to sing Feeling You. You sang it to me in the barn. I want you to sing it to me now. You're good Blue. I didn't tell you that enough after the beach jam. And I'm gonna do it with you. Look at me! We got you.\" She took off Belle and swapped with Steve, putting Layla over her shoulder while Steve put on Belle.\n\n\"But\u2014\"\n\n\"Be fierce Blue! There is no try, only do. I'm appealing to your nerd instincts here. I'm right here with you. Please?\"\n\n\"But... Okay. Okay, I can do this. You did this, I can do this. Let's do this.\"\n\nShe gave a delighted little laugh and looked back at Larry who sat at the ready. He clicked his sticks together and counted everyone in and Jo started with the guitar solo, looking right at me. I started a little tentatively, but stayed focused on her and was soon belting out the lyrics, singing to my Jo.\n\nS-o-o-o-o-m-e times, I imagine a world without you.\n\nBut m-o-o-o-o-s-t times I'm just so happy that I ever found you.\n\nIt's a complicated web that you weave inside my head!\n\nSo much pleasure with such pain, hope we always, always stay the same!\n\nWhen I started the chorus, she came up to the other side of my mic and sang with me while she played. I could smell her breath, as sweet as I remembered. She let me focus on the melody and came in over the top of me on harmony and our voices melded together.\n\nAs we sang, her smile reached every part of her eyes.\n\nI'm feeling the way, you cross my mind, and you save me in the knick of time.\n\nI'm riding the highs, I'm digging the lows, 'Cause at least I feel alive.\n\nI've never f-a-a-a-a-c-e-d so many emotional d-a-a-a-a-y-s, but my life is good,\n\nI'm feeling y-o-o-o-o-u-u-u-u!\n\nI'm feeling y-o-o-o-o-u-u-u-u!\n\nAfter the huge round of applause, the night devolved into a giant beach jam. As much as I wanted to get Jo back to my apartment, we stayed and sang and danced our butts off.\n\nAfter the first couple of songs, the band started bringing friends out of the audience to sing or play with them. Tables were pushed to the sides of the room and dancing broke out all over.\n\nDuring a break, I was at the bar, wrapped around Jo like a baby holding on to her mother. I barely let her go long enough for her to sip at her whiskey.\n\n\"So, wait... is this actually the ten-year anniversary?\" I asked her, \"'Cause that would be suspiciously convenient.\"\n\nJo laughed. \"No, it was like five months ago. Steve set this up just for me.\"\n\nSteve walked up to us and I jumped up and hugged him. \"That's for doing this Steve. It meant the world to me.\"\n\n\"Uh, yeah, sure, no problem.\" He was looking really nervous for some reason.\n\n\"Hey, you got this bro,\" said Jo.\n\n\"Yeah, I know. I know. Are you sure about the... thing?\" he asked Jo.\n\n\"Yes, it's fine Steve. It's how it should be.\" So weird to hear her use a first name.\n\n\"Okay, wish me luck.\" With that, he disappeared into a back room.\n\n\"What's the thing?\" I asked.\n\n\"I'll tell you in a minute,\" she grinned at me.",
        "\"What's this all about?\" I asked Jo.\n\n\"Well, you're not the only target of a special op. If mine went sideways, or you walked out, he wasn't going to do this tonight.\" She kissed me. \"Luckily, you seem to have been captured by my wiles. So, this is happening. But only Jack and I know about it.\"\n\n\"Know about what, Jo? What's happening? You're being weird!\"\n\n\"That,\" she said, and pointed. Steve had come out of the back room, and had changed out his black suit coat for a tuxedo coat covered in gold sequins.\n\nI laughed. \"What the hell?\"\n\n\"Just watch, you don't want to miss this.\"\n\n\"Ladies and gentlemen!\" Steve called for attention from the mic. He repeated himself a few times until everyone grew silent. \"My big sister got to serenade her girl tonight and I'm feeling left out. Sara Johns, please attend me at the microphone!\"\n\nSara was down at the other end of the bar with Larry and Suzanne. They all looked equally as confused as I was. Sara walked up giggling and stood next to Steve.\n\n\"Thank you my dear. Jack? Hit it!\" He pulled the mic out of the stand and held it as music started playing over the P.A., a simple bass drum beat. Then Steve started singing with more schwing than he'd ever shown on stage before.\n\nIt's a beautiful night, we're looking for something dumb to do.\n\nHey baby, I think I wanna marry you!\n\nIs it the look in your eyes, or is it this dancing juice,\n\nWho cares baby? I think I wanna marry you!\n\nBy the end of the first line, Sara had started screaming and jumping up and down, clapping her hands. Larry yelled at the top of his lungs \"D-u-u-u-d-e!\" and Suzanne started crying. I was crying. Jo was crying!\n\nHe put on some Bruno Mars dance moves, and as he spun around he pulled a ring box out of his coat with his free hand. He knelt down in front of Sara and nodded at her to open it as he sang,\n\nDon't say no no no no no!\n\nJust say yeah yeah yeah yeah yeah!\n\nAnd we'll go go go go go!\n\nIf you're ready, like I'm ready!\n\nSara was grinning her head off and nodding at Steve frantically. At the end of the song the whole bar exploded into shouts and applause louder than anything else that night.\n\n\"That was unbelievable!\" I yelled in Jo's ear over the noise of the crowd. \"What was the 'thing'?\"\n\nShe turned and put her lips next to my ear. \"That's our mom's wedding ring he just put on her finger. He wanted to make sure I was cool with him giving it to Johns.\"\n\nJo was barely able to push the door to my apartment closed behind us as I was busy tearing at her clothes. We'd finally gotten to my place around midnight, taking a Lyft, whose driver I'd promised a one-hundred-percent tip if he could \"get us home in twenty minutes and keep your eyes out of the back seat.\"\n\nI was frantically kissing her as I tugged at her shirt, simultaneously trying to take it off and use it to pull her into my bedroom. She lifted me up onto her shoulder to carry me forward and I squealed \"EEP!\" as she fell on top of me on my bed.\n\n\"God I've missed that sound, Blue. I need to make that sound my ringtone.\" She lay on top of me, the tip of her nose rubbing mine. She just looked into my eyes, the streetlight outside my window reflecting in hers.\n\n\"You came back for me,\" I sighed.\n\n\"I did. I'm glad you let me in when I got here. You had no reason to.\"\n\n\"Jo, I had every reason to. I fell for you, remember? And you fell for me. You just couldn't say it then, but now you're ready.\"\n\n\"I am. So, do we start saying I love you now or do we make plans to move in when I get back, or what? What do we do? You're going to have to help me here, I'm out of my element.\"\n\n\"Whoa!\" I sat up. \"Listen, Jo, you and I are definitely going to be a thing. But I'm not rushing you into something you're not ready for. You have to go tomorrow. When you get back, when, October?\" she nodded, \"October, we'll get together and work it out. I can come down to North Carolina and work from there for a few weeks. Months. However long you'll have me. I'll be here waiting for you when you get back. And then we'll see. But there's no rules for what we have to do now, okay?\"\n\n\"So, we don't start saying 'I love you' now?\"\n\n\"Jo, I know tonight was a huge step for you. I don't want to do anything until you're ready, okay?\"\n\n\"Okay.\" She leaned in and kissed me, slow and long. Then she leaned back. \"Hey Blue?\"\n\n\"Yes?\"\n\n\"I love you.\"\n\nI think I may have gasped. \"Jo...\"\n\n\"What? You're probably thinking I don't know what I'm talking about. I've never been in love. You might be right. I am shit at this whole thing. But my whole life, whenever I've been sad or lonely and I close my eyes, I've always seen Mom. Until the last six months. Now it's you, Blue. It's always you. Every time.\"\n\n\"Jo... I don't know what to say.\"\n\nShe grinned at me. \"It's okay, you don't have to say it. I don't want to rush you into anything you aren't ready for.\"\n\n\"Oh, you brat!\" I caught her by surprise with a pillow to the face, then started trying to tickle her. She pinned me down laughing as I struggled. Soon, her laughing quieted as it was drowned out by my panting, while she was kissing my neck, my throat. She never let go of my wrists, continuing to hold me down as I kept struggling to escape her grasp. It was working extremely well for me and she sensed it.\n\n\"You can try to get away from me, Blue. But I won't let you. You're mine now.\"\n\nI made a serious effort to throw her off. Her muscles were like iron, and she held me down as I moaned my appreciation.\n\n\"Mine!\" she whispered and leaned down and bit the spot on my neck. Hard. Harder than she ever had before. And I came.\n\nOh god, I came so hard. I could feel my body pulsing with fire, as I started quaking under her, calling out her name through ragged breaths.\n\nI woke the next morning to look over and see sunlight streaming in and lighting up my Jo's peaceful, sleeping face. She was still wearing the velvet choker. It was all she was wearing. I lay there watching her. After a while, I had to move to scratch my nose, and she stirred, opening her eyes.\n\n\"Hi,\" I whispered.\n\n\"Hey Blue,\" she smiled and stretched. \"I'm really glad you're not a dream.\"\n\n\"Maybe I am.\"\n\n\"Nope. You can't fool me, you're the realest real thing that ever was real.\"\n\nWe kissed for a long time.\n\n\"I never asked last night, what time is your flight?\"\n\n\"I need to be at BWI at three this afternoon.\" She looked at the clock on my side table. \"We can probably make love, oh... three more times. And go have breakfast.\"\n\nI leaned up on my elbow. \"Should we order in breakfast? I know all the Door Dash people.\"\n\nHer eyes widened \"Oh geez, I really did a number on you there last night, sorry about that!\" Her fingertips gently traced something on the spot on my neck and I shivered. I looked around, found my phone and turned on the selfie camera so I could look. Oh my.\n\nThere was a clear, distinctive bite mark, right where my neck met my shoulder. She'd broken the skin. She'd marked me as hers.\n\nI shivered again and said, \"Oh god, Jo don't apologize. That's exactly what I wanted!\" I rolled over and tucked into her so our faces were next to each other and lined up my camera.\n\n\"Careful how you frame that, we're both naked.\"\n\n\"I want it to be obvious we're both naked.\" I made sure there was nothing not-safe-for-work showing, then started snapping pictures. But I made extra sure the bite mark was in every frame. Soon she was giggling as I took photo after photo of us.\n\nLater, we walked through my neighborhood. I'd tried again to get her to let me order in food.\n\n\"No, I want you to show me where you live, so when we email or talk I can imagine you here.\"\n\nWe walked through Adams Morgan, to my favorite coffee shop, then walked through the National Zoo, sharing a scone and holding hands. She hadn't had any other clothes other than her fancy outfit and her cammo uniform she'd travelled in, so she was wearing a pair of my pants with the waist rolled down and the cuffs turned up, one of my big cable-knit sweaters and my pea coat. It was cold and sunny, and the frosty clouds of our breath mingled with each other's every time we stopped to kiss.\n\nI felt like I should be sad knowing we had to leave in a few hours to go to the plane that was to take her away from me. But I was elated. She'd broken through her wall. We were together. And she'd be back for me. I thought back to the Billy Joel song I'd played for her and her dad.\n\nFor we are always what our situations hand us,\n\nIt's either sadness or euphoria.\n\nAnd I was euphoric.\n\n\"I'll be back for you, Blue,\" Jo said as we stood at the entrance to security at BWI Thurgood Marshall Airport. She rolled her eyes at herself. \"I never thought I'd say something like that. Or want to. But I want to. I'll be back. Then we'll figure out what we're going to do.\" She was dressed in her camo uniform, complete with the cap that covered up the mop of hair I so loved.\n\n\"You'd better Jo. I'll look into apartments in Fayetteville.\"\n\n\"Uh, ok. But maybe you want me to move here?\"\n\n\"I don't want you to have to give up your calling for me. You're not leaving the Army, not yet. And I can do my job from anywhere. Anywhere we are.\" I paused. \"You know that song you sang for me last night?\"\n\n\"How could I ever forget? I fell for you Blue.\"\n\n\"No, I mean the second song. The line that says 'if you want to, I can save you?'\"\n\n\"Yeah?\"\n\n\"I want you to know that I don't need for you to save me. I know that's your job, to save people. But I'm not your job, and I don't need saving. I'm your Blue Girl. And I just want you to be my Jo. Okay?\"\n\n\"Okay.\"\n\nShe had tears in her eyes, and one rolled down her face. I stroked her cheek and wiped it away.\n\n\"I'm glad we finally broke that dam,\" I whispered.\n\nShe laughed, as she sniffed and wiped her sleeve across her nose.\n\nI wrapped my arms around her and kissed her until she reluctantly pulled away and looked at her watch. \"I have to go, Blue.\"\n\n\"It's okay Jo. We've made it past the hardest part. The next nine months will be a piece of cake.\"\n\nI watched her go until I couldn't see her anymore. And I was smiling.\n\n~~ Afghanistan, Kandahar Province, April ~~\n\nJO\n\n\"I'm riding the highs, I'm digging the lows, 'Cause at least I feel al-i-i-i-ve.\n\nI've never f-a-a-a-c-e-d, so many emotional d-a-a-a-y-s.\n\nBut my life is good. I'm feelin' y-o-o-o-u-u-u-u.\"\n\n\"I don't think I'm ever going to get used to that,\" said Eric.\n\n\"Is it because you don't like Michelle Branch or you don't like Carlos Santana? 'Cause one of those is sexist and the other is racist,\" Jo joked with her copilot over the intercom as she piloted their Blackhawk. She alternated between scanning the instruments and looking out her window, checking the hillsides ahead and off to their left as they made their way through a valley between several towering mountain peaks.\n\n\"The song's not the issue, Jo,\" Eric replied, looking out his own side of the aircraft. \"Three years flying with you and never a peep. You come back from a week's leave and now I have a freaking canary sitting next to me every day. AGL fifteen hundred over the next peak.\"\n\n\"Copy, fifteen hundred. Them's the breaks Nguyen. My life is good. I'm feeling you, man.\" Eric looked over to see Jo grinning below the black visor of her helmet, her smile partially hidden behind her microphone.\n\nHe grinned himself. \"At least you can land on the right pad now.\"\n\n\"Fuck you, dude!\" She laughed.\n\n\"So, this guy has appendicitis, huh? That's an unlucky bounce out here.\"\n\n\"Right?\" said Jo. \"Better than a bullet, I suppose.\"\n\n\"There's the outpost,\" Eric said. \"Ground's reporting wind is one-seven-zero at ten, circle around north, approach three-five-zero.\"\n\n\"Copy, three-five-zero\" Jo said and started orbiting the mountain top observation outpost to the right. She clicked the thumb-stick button to connect her intercom to her crew chief. \"Ehrens, three minutes out. I don't want to be on the ground more than five.\"\n\n\"You got it Chief,\" Sgt. Billy Ehrens said in her ear. \"We're ready.\"\n\n\"You buy that intel brief about crew served weapons in the area?\" Eric asked her.\n\n\"Nobody's seen the Taliban with a BFG in these parts for twelve months, they're all further south,\" she was craning her neck to look at every mountain top in the area as they approached. \"But that doesn't mean I'm not treating it as gospel. I don't really want to be anywhere near one of 'em if I can avoid it.\"\n\n\"Roger that Jo. Three-five-zero, three hundred AGL. Two hundred. One hundred. Fifty. Twenty-five. Contact.\"\n\nJo slowly eased her bird down onto the rough landing pad of the observation outpost and settled its weight onto the landing gears in a swirling cloud of dust. Since they weren't hustling to dodge enemy fire, there was no need for a dramatic flare to slow down before she brought her bird in. The Afghan Army personnel at the outpost sprang into action, helping a young soldier who was holding his midsection walk to the helicopter. Sgt. Ben Jackson slid open the side door as Ehrens started throwing four large supply boxes out to the ground. Their flight medic, Specialist Liz Charles, pulled the appendicitis patient aboard and helped him strap into a jump seat. They didn't bother securing him to a stretcher for a non-injury ride.\n\nThree minutes and twenty seconds after they had landed, Sgt. Ehrens slammed the door and called up to Jo, \"Buttoned up and good to go, Chief.\"\n\n\"Copy that, nice work guys,\" Jo said into her mic. She checked her side as Eric looked out the right to make sure they were clear. She tossed a salute out the window at the Afghan soldiers watching on her side, shielding their eyes from the rotor wash. As Jo twisted the throttle and pulled up on the collective, her bird smoothly lifted off and headed back towards the pass they'd come from.\n\n\"Smooth like butter,\" Jo said. \"Forty-five minutes RTB, fuel's seventy-five. I'm feelin' y-o-o-o-o-u-u-u-u.\"\n\n\"Every day should be this easy,\" Nguyen said a few minutes later as they flew back through the valley.\n\n\"If they were all this easy they wouldn't\u2014\" she trailed off, craning her neck to the left.\n\nJo saw sunlight reflecting off metal on the mountainside off to her left and flashes reaching out to her at the exact moment the heavy rounds started slamming into their aircraft. She banked hard to the right and maxed the throttle, just as the Plexiglas chin bubble under her feet shattered, along with her left ankle. She screamed, the helicopter lurched, and sparks burst out all over the cockpit as rounds impacted electronics. She heard Eric grunt loudly into the intercom. Blood started pouring out of the hole in her boot, covering the spidered glass shards beneath her feet. \"Nguyen, your aircraft!\" she yelled. She could hear a troubling note already spiraling up from the two turbine engines.\n\n\"My aircraft!\" he shouted. They hadn't been hit again after the initial impacts, and Nguyen had them racing down the valley away from the location of the incoming. Jo was frantically pulled off her belt while looking at the gauges.\n\n\"RPMs down on Number Two, hydraulics dropping fast, temp is up, we're gonna lose it,\" she groaned, while tying her belt around her left thigh. \"Speed coming down, one forty indicated.\" She knew her ankle was monumentally fucked as it dangled uselessly from her leg, but she wasn't feeling as much pain as she would later because of shock. \"If there was a later,\" she thought. It still hurt like a motherfucker. She took one of the ubiquitous tourniquets every one carried out of her sleeve pocket and tied it around her thigh, then twisted it tight until she couldn't stand any more pressure. The bleeding slowed noticeably from her boot, and she tucked the handle of the tourniquet under her thigh to hold it in place.\n\n\"Mayday, Mayday, Mayday.\" Jo called out over the communications circuit. She was quickly talking to the regional air controller giving their coordinates, her voice eerily calm. \"We have taken enemy fire, we are heavily damaged and will be putting down. Number Two Turbine is going, correction, we have lost Number Two. Engine temp is rising on Number One. Request immediate S-A-R, my location, currently heading three-three-zero, speed one-twenty.\"\n\nShe looked over the gauges again. \"Nguyen, we gotta put down now. Nguyen. Nguyen!\" she looked over just as her copilot's slumped forward, blood running out of his mouth. \"Eric!\" she shouted as the helicopter slewed to the left. She grabbed the controls. Force of habit made her yell \"My aircraft!\"\n\nThe information the gauges were feeding her and the sounds coming from overhead told her Number One turbine was going sideways fast. She looked around as she was descending. They were flying down the rough valley, with no obvious place to land. That really doesn't matter a good goddamn right now, because we're gonna be on the ground one way or the other in the next two minutes, she thought to herself. Then the Number One turbine failed and started winding down as the body of the Blackhawk rattled. \"Fuck,\" she breathed.\n\nLittle Voice joined Jo in the cockpit.\n\n\"Auto-rotation time Collins. Feather the blades, pull up your nose a bit. Keep your up your rotor speed. Thirty-five hundred AGL, rate of descent fourteen hundred FPM. Two minutes. Dump your fuel.\"\n\nShe reached out and found the fuel dump switch by feel, starting the aviation gas venting from the helicopter. If she could get them down... at least there'd be less chance of a fire.\n\nJo started scanning the area ahead she knew she would be impacting. If she could carry just a little further she could \"land\" on the far side of the hill ahead. That would be better than the alternative, smacking into the upslope. Hitting the downslope would help her lessen some of the energy from the impact. She clicked her thumb-stick for the intercom.\n\n\"Billy, everyone alive back there?\"\n\nSgt. Ehrens answered, \"No one was hit, Chief. We're all strapped in. There's a fuck ton of hydraulic fluid pouring into the compartment.\" Jo could hear the fear in his voice and she realized it was probably the first time since he'd been flying with her that she'd used his first name.\n\n\"Copy Billy. Prep for a hard landing, we're going in.\"\n\n\"Copy that Chief.\" He hesitated, then said, \"You're the best at this, Jo. You got us.\" He clicked off to let her concentrate.\n\n\"Fifteen hundred feet AGL, seventeen hundred FPM, less than a minute. Your rotor speed's too low. You're outside the envelope, Collins. You aren't going to have enough energy for the flare,\" Little Voice said.\n\nNo shit, she thought. It's a math problem, and her numbers weren't adding up. She pushed the collective further down, feathering the blades as much as possible and increasing their rate of descent, trying to get more energy back into the rotors. Thank god there were only four people in the back instead of a full platoon. Less weight meant maybe she could... She had to get more rotor speed before she flared or they were going to splatter all over the mountainside.\n\nThis is going to destroy dad, she thought. It took him years to get over mom. \"Blue Girl... Blue, I...\"\n\n\"Focus, Collins, we're not out of the game yet. Four hundred feet. Five seconds. Pull up... Now.\"\n\nJo started pulling up on the collective and back on the stick as hard as she could. If she made it over the crest to the downslope side of the hill, it was going to be by mere feet. Fuck, the controls were heavy! The Blackhawk groaned and shuddered as she strained to pull the nose up, grunting with the effort.",
        "Fast, she thought. Too fast. \"Blue Girl...\"\n\n\"Blue Girl... Jill...\" said Little Voice.\n\n\"Jill. God, I'm so sorry Jill.\"\n\nTo be continued..."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "gay romance",
        "heartbreak",
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "romance",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-05"
}