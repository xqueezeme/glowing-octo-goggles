{
    "title": "Weird Sisters Ch. 01",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism, and you won't be disappointed when you don't find it! Enjoy!\n\n*****\n\nWhen I heard the door slam shut, I stopped typing. In the six months since my girlfriend Debra and I moved in together, I had learned that you could tell what kind of day she had just by listening to the sounds she made in the first thirty seconds after she got home. So I saved the piece I was writing, sat still at my desk and listened. \n\nThe slammed door didn't mean much in itself. In fact, it might even bode well for me. On many previous occasions, after that slamming sound, I had heard the clicking of Deb's heels across the apartment as she strutted her way to my chair to hug me from behind, biting my ear and murmuring in a sexy voice that she had a lot of stress to relieve and could I think of a way to help her out? That would be a good bad day. \n\nBut today was different, as I realized when I heard the clinking sound of her keys hitting the kitchen table, hard, followed by the heavy thump of her bag falling to the floor. Finally, there was the tumbling echo of her shoes being kicked off to scatter in the hall. That, I had come to learn, was the ultimate bad sign. Okay then, I thought with a sigh, so it's Dana again.\n\nWhen I got to the living room, Deb was sitting on the couch with her legs tucked under her. Her dark pencil skirt had ridden halfway up her shapely thighs and she was nervously curling and uncurling her toes like she unconsciously does whenever she's really upset. Under her white blouse, her heavy boobs were rising up and down in time with her angry, labored breaths. Her brow was furrowed and she was staring at the dark TV screen, her delicate oval face set in a gloomy grimace. She was fidgeting with her ponytail, restlessly twirling her hair around her slim fingers. \n\n\"Hey Debs,\" I said, cautiously approaching the couch. \n\n\"I HATE her!\" Deb spat, still staring straight ahead \"I fucking hate her!\" \n\nI sat quietly beside her, careful not to unleash her wrath further. Then, ever so slowly, I wrapped my arm around her shoulders and just sat still, waiting. \n\nDeb is the sweetest girl in the world, I swear. She's kind, quick with a smile and very caring. As a rule, getting angry is just not her style. Sure, she does often shift into tigress mode during sex, letting out all her pent up craziness and channeling it into passionate fucking session. But that's a good kind of angry, the kind that I get to enjoy. Outside of the bedroom though, the only thing that can make my girlfriend go berserk is a serious argument with Dana, her twin sister. \n\nAt a first glance, Debra and Dana hardly look like sisters at all, let alone like twins. Deb has a curvy, voluptuous figure to go with her gentle and warm personality. A former cheerleader, Dana has a slim body with perky tits and a taut little butt. At twenty three, Dana still acts like a bubbly, ditzy, flirty teenager without a care in the world. Deb and Dana have the same hazel eyes and light brown hair, but Dana's are often dyed blonde or at least highlighted. Despite their very different characters, their frequent bickering and a constant undercurrent of sibling rivalry, I know for a fact that my girlfriend and her twin are very close. Ever since I met Deb, I can't remember one single day when she and Dana have not spent time together or at least talked extensively on the phone.\n\nDeb and Dana's father was a fairly notorious painter whose work got quite a bit of recognition after his early death. Thanks to their Mom's business acumen, their family ended up owning a small but well known art gallery. Both Deb and Dana work there. Deb manages the business end of things with their Mom, while Dana puts her charming flirtatiousness to good use in public relations. Reeling in potential buyers and sniffing out cool new artists is Dana's specialty, while Deb's is making sure that an actual deal gets closed at the end of the day. They make a good team, all things considered. But then, sometimes they do get in a real fight. \n\nStrangely enough, their most bitter fights seem to revolve around small things between the two of them, stuff that anyone else would consider irrelevant. Honestly, their conflicts puzzle me. I don't recall my siblings and I ever getting as mad at each other as Deb and Dana do. Then again, we are not as close as Deb and Dana are. Maybe it's a twin thing: they love hard, they fight hard. As for me, I've learned that when Deb and Dana fight, the wisest move is to just wait it out.\n\nAnd that's exactly what I did that day. I sat beside Deb on the couch, patiently waiting for her fury to subside while I feasted my eyes on her generous cleavage exposed thanks to the undone top buttons of her blouse. After a long silence, she finally spoke. \n\n\"I hate her, Jeff,\" she growled through gritted teeth. \"God, how could she... This is so much like her, fucking Dana. I hate her!\" \n\n\"Yeah, I know, babe,\" I said, hugging her tighter to me. Feeling her unwind a little, I added: \"But you don't really hate her, Debs. We both know you don't. You guys get in these fights all the time and you always work it out. How is this any different?\"\n\nAt that, Deb finally turned to face me. There was anger in her gaze, but she looked dead serious and a bit hurt as she said: \"She had a buttplug up her ass all day, Jeff!\"\n\n\"Oh,\" I said, dubious but suddenly very intrigued. \"And what does that have to do with anything?\"\n\n\"Jeff, she broke our pact!\" Deb practically screamed. Her eyes were all bugged out. \"That bitch!\" \n\nI nodded knowingly, having no idea what my girlfriend was talking about. Still, the thought of Dana with a buttplug up her ass had taken root in my brain and I felt my cock stir. After a bit I cleared my voice and tactfully asked: \"What pact is that again, Debs?\"\n\nShe sighed and shook her head. Looking at me like a was an idiot, Deb explained. \"Years ago me and Dana made a pact, about sex and stuff. The idea was that we would always do things when we were both ready to do them. Basically, we promised to wait for the other before we'd try stuff out on our own. Like, in high school, she wanted to have sex with a cheerleader friend of hers. But she couldn't, because I didn't feel like doing lesbian stuff yet and we had the pact, so she had to wait for me. When we decided to lose our virginity, we talked it through between us a lot and we finally did it only when we both felt ready. And that applied to anything new we wanted to try ever since.\" \n\nShe exhaled and hung her head, looking sad. I pulled her tighter into my arms as she continued. \"We always respected the pact, Jeff. It's something we've stuck to since forever. It was our thing, you know? And then today at work she was all giggly and she kept squirming whenever she sat down and she walked around kind of funny. So I asked her about it and she told me that she had a buttplug up her ass because Rodrigo flies in tonight from Venezuela for the exhibit next week.\"\n\n\"Yeah?...\" I said, vaguely recalling Dana's most recent boyfriend. Cocky, vain, supposedly cool artist on the rise pretending to be poor but actually from a rich family, he was Dana's type alright.\n\n\"Yeah, and she's decided that she's gonna let him fuck her in the ass! Just like that, out of the blue! I bet she wouldn't have told me about the buttplug at all if I hadn't asked. And when I reminded her of the pact, she was all cool and dismissive about it, like it didn't even matter! Stupid Dana! I had to wait till I was nineteen to give my first blowjob because she was grossed out by the idea of putting a guy's cock in her mouth. I really wanted to try, I was sure I'd like it and I did, you know how I love giving blowjobs! But I waited for her. And this is how she repays me!? Fucking Dana!\"\n\nI just nodded, trying to sit more comfortably to accommodate my growing erection in the confines of my pants. This sounded exactly like the kind of weird stuff that Deb and Dana usually had going on between them, but so much hotter. \n\nWith her head resting in the hollow of my shoulder, Deb grumbled dejectedly: \"And if breaking our pact isn't enough, she will have another first on me now. Except for giving blowjobs, Dana did everything before me. First to kiss a boy, first to have a boyfriend, first to pop her cherry, first to have sex with another girl. She even got first facial, though she hated it. And now first anal too...\"\n\nSuddenly, a vision of my cock buried deep inside my babe's plump ass flashed before my eyes. My hard-on twitched in my pants and the words were out of my mouth before I even realized it. \n\n\"You know, Debs, nothing's lost just yet. It's not like Dana's gonna get Rodrigo to fuck her ass in the restrooms at the airport... They'll probably go to dinner first and she'll tease him to death as she always does with innuendo and stuff. When does he even get here exactly?\" \n\n\"At 20:00 I think,\" Deb said, looking at me quizzically \"I can't remember, Jeff... What difference does it make anyway?\"\n\nA big one, I thought to myself. I pondered for a moment. Even though I adored Deb's round juicy bubble-butt, I never pressed her into trying anal. I guess I never felt the need for it. Her blowjobs were nothing short of masterful and she eagerly swallowed my cum like a good girl. Her big boobs were always available for a soft titfuck. Her hot wet pussy was incredibly tight and she could squeeze her silky folds around me so deliciously that, so far, anal was just a remote possibility that I never really felt compelled to pursue. But now... \n\n\"Jeff? Why do you want to know when Rodrigo gets here?\"\n\nI tried to contain my grin into a thin smile as I said: \"Because you still can beat Dana, silly girl!\"\n\nMy girlfriend just stared at me, blinking once. Twice. Three times. This was going to be tricky, but I felt I could pull it off. Deb always liked it when I played with her pink little asshole, licking it and fingering it as I ate her sweet pussy out. Plus, she was mad at Dana. I just had to stir her fury in the right direction. I needed to properly bait her inner tigress.\n\n\"Look, Debs, I'm just saying,\" I went on, as calmly as I could while envisioning my aching boner sawing in and out of her virgin ass, \"Dana broke your pact, right? So technically you're not bound by it anymore. And if you really want to teach her a lesson and get a first, a major one at that I might add, well, here's your chance, babe.\" \n\nShe just kept staring at me, her lovely hazel eyes absolutely unreadable. I knew I was walking on thin ice. Still, she wasn't saying no. Giving my best attempt at a charming, winning smile, I breezily added: \"But then, who cares about first anal. After all, Debs, you met the love of your life first, eh!\" \n\nMy girlfriend's luscious lips quivered. Her pretty but so far sullen face finally brightened in a big smile. She sighed dramatically and rolled her eyes in mock exasperation, then she grabbed my head in her tiny hands and smashed her soft mouth into mine, kissing me deeply.\n\n\"You're such a dork, Jeff,\" she said, playfully slapping my chest. \"But I guess you're right... I love you, baby.\"\n\n\"Love you too, Debs,\" I said, sucking on her full lower lip and slipping my tongue into her hot mouth. We made out for a bit and I was content enough with that. At least she wasn't mad at me for suggesting that I fuck her ass. When her hand went to my bulging crotch I perked up even more. \n\nI had opened her blouse and I was cupping her big heavy boobs through her lacy bra when Deb broke our lip-lock. She looked at me with a devilish grin. \"Okay, baby, drop your pants and let me suck you for a bit.\" Her voice was sultry as she murmured into my mouth, saying something I didn't expect: \"I guess I'd better lube you up good if you're gonna stick your big cock up my ass.\"\n\nMy eyes widened. \"What!? Debs, really?\"\n\nShe nodded her head, looking me in the eye. \"You're right, Jeff. Fuck the pact and fuck Dana. I want to be first at anal,\" she said, taking off her bra and offering me her splendid tits. \n\nI immediately fell on those pillowy jugs, massaging them in my hungry palms, loving their soft fullness as they overflowed my fingers. Unable to resist my girlfriend's huge boobs, I dipped my head down and started properly worshiping them with my mouth. As I sucked hard on her puffy areolas and tormented her sensitive thick nipples with my tongue, Deb kept speaking huskily. \n\n\"I want to do it, baby, I want to try it in my ass... Mmh, yeah lick my big titties like that! Oooh! I know how much you love my ass, baby, and I always like it when you finger me there. Oooh yeah bite my nipples, suck my tits! Mmhh... I want it, Jeff... I want you to take my anal cherry.\"\n\nI groaned when I was deprived of Deb's juicy tits. Pushing me back on the couch, she knelt beside me. She stuck her ass in the air and hiked her skirt up her thighs and past the sumptuous curve of her rump, until she had revealed her magnificent meaty bottom completely. She took off her thong panties very slowly, sliding them teasingly down her juicy round buttcheeks. \n\nGiggling, Deb wiggled her ass, murmuring in a sexy purr: \"Like this ass, baby? Wanna fuck it?\"\n\nTalk about tigress mode, I thought. I couldn't believe this was really happening. The vision of her naked upturned bubble-butt made my mouth go slack. My dick felt like it was trying to poke a hole through my pants. \"Yes,\" I managed to croak. \"Fuck yes! I wanna fuck your ass so bad!\"\n\nDeb snickered and leaned her head down on my lap, pushing her plump ass further up. I had barely the time to reach my hungry hands toward her fleshy rump before Deb unbuckled and unbuttoned me, yanking my pants and boxers down my legs. My cock sprung out, rock-hard, pulsing with need and leaking pre-cum. \n\nDeb opened her lips wide and took me swiftly in her talented mouth. With practiced ease, she gobbled down my entire length in one single smooth plunge. The hot wetness of her oral cavity enveloped me as her soft lips slid all the way down to my root. Her squishy, contracting throat massaged my glans. I groaned and threw my head back as my girlfriend began bobbing her head fluidly on my shaft, treating me to one of her best deep-throating cock-milking blowjobs. \n\nNo matter how many times she blew me, I always marveled at her ability to swallow my cock down her throat just like that, effortlessly cramming her face full of my pulsing meat. I lost myself in the mix of sensations that Deb's expert cocksucking routine was giving me, unable to say what felt better; whether the massaging friction of her tender hollowed out cheeks, or the wet whirling suction of her mouth, or the smooth up and down of her cock-stretched lips gliding on my shaft, or the warm clenching grip of her swallowing gullet. In the end, I could only shiver and groan uncontrollably, feeling blessed to be in thrall to my own personal blowjob queen. \n\nAs always, Deb immediately reached a hand to her pussy and started frigging her clit while she applied her consummated fellating skills on my boner. It turned me on like crazy to see it, to know that she liked sucking me off so much that she had to masturbate while doing it. I lay one hand on her bobbing head, caressing her soft hair, while I moved the other down from her sumptuous round ass and into her smooth buttcrack. \n\nMy fingers made contact with Deb's clit-strumming digits as I dipped my fingertips in her soaked pussy, coating them in her juices before pressing them at the entrance of her forbidden hole. With slow circling motions, I began rubbing my girlfriend's little rosebud, massaging it into relaxation until I could slide one finger into her anus to the second knuckle. Deb moaned around my cock as I began slowly fingering her virgin asshole. \n\nCooing as she sucked me, my sweet babe slurped and slobbered messily on my tool. She was letting all my pre-cum and her spittle trickle sloppily from her lips to coat my cock rather than gulp down the slick mixture as she usually did. She's lubing me up for her ass, I thought. The mere idea sent pulses of pre-cum spurting into Deb's fellating mouth as she kept throat-fucking herself with gusto.\n\nThe purring vibration in her throat amplified my pleasure when she gobbled me deeply and the lather of saliva coating my pole made the seal of her cocksucking lips slide deliciously along my hardness as she increased her bobbing tempo, making me see stars. I was so lost in blowjob heaven that I barely remembered to saw my finger in and out of Deb's tight virgin asshole. I just left it there, twirling it every once in a while, slowly pulling it out and then sinking it in again, too caught up in the feel and sound and visual of Deb's face bouncing on my lap. \n\n\"Ooooh fuck!... Debs, you're gonna make me cum soon. You suck me so good!\"\n\nDeb slid her dick-jammed mouth up my dick giving me one last, long, deep suction. She stopped to nibble gently at my fat cockhead, nursing on it for a few seconds, then she let me out of her wet lips with a lewd popping sound. A shiny strand of spittle dangled a moment from her chin, connecting her face to my cock, then it broke and splattered down on my glistening rod. \n\nDeb raised her head up and turned to look at me, wiggling her ass. She was moaning as my finger sank deeper inside her anus. \"I love drinking your big loads, baby, but that will have to wait,\" she said in a lust-addled voice, grinning sexily. \"Tonight I want you to fill my ass. I want to know how it feels to have my ass full of your creamy cum, baby. Come on, get the lube and grease me up.\"\n\nI shot out of the couch and took off all my clothes before I ran to the bathroom and grabbed a bottle of baby oil, my spittle-coated hard-on waving in front of me. I felt my pulse drumming in my ears along with the echo of Deb's naughty words as I held the bottle of lube in my shaking hands. This was actually happening. I was about to sodomize my girlfriend's glorious ass.\n\nWhen I came back, Deb was on all fours on the couch, completely naked. Her head was pressed down on the seat cushion, her huge tits squashed underneath her. Her arched back accentuated the mouth-watering curve of her plump ass. The position she was in, so willingly offered, emphasized the perfection of her majestic bubble-butt to the extreme. Deb's beautiful ass was a masterpiece. And I was about to fuck it.\n\nI was practically drooling as I approached Deb's upturned booty. I reverently parted her meaty asscheeks and took a second to admire the treasures hidden in her crevice. The movement of her hand on her clit made my eyes dart down to her puffy nectar-glossy labia, but I immediately turned my gaze to her other hole. The pink little starfish of her asshole was winking at me in time with the shivers of pleasure coursing through my babe's bent-over frame. It begged me to lean my face down, to come closer, and I did so. Smooching and caressing the smooth globes of that sweet butt, I murmured: \"Your ass is so amazing, Debs... So round and juicy and beautiful...\"\n\nLooking over her shoulder, cooing as she diddled her needy pussy, Deb giggled: \"Aww, that's so sweet. Now lube me up, though, I'm going crazy with just my fingers to keep me happy. I need your cock, baby, I want you to oooooh!... Oooh my god, yeeees!\"\n\nDeb's breath caught in her throat as my mouth made contact with her tender rosebud. I started licking away at it immediately, like a man possessed. I didn't hope to rim Deb's ass as masterfully as she sucked my dick, but I sure gave my best as I slurped and lapped and gently munched on her little pink pucker. \n\nWith my lips locked onto her tiny butthole, I pried my girlfriend's fabulous asscheeks apart and pulled the edges of her anus open with my thumbs, gaping it slightly. As if it were her soft hot mouth, I french kissed Deb's asshole with abandon, slobbering away, poking and tickling and forcing my tongue inside her sphincter. Her high-pitched squeals and the increased speed of her clit-strumming digits told me all I needed to know about her appreciation of my lewd ass-worship.",
        "I lathered Deb's backdoor with all the saliva I had, moistening and softening her butt-ring in preparation of the stretching it was soon going to get from my thick cock. I interrupted my analingual ministrations only to travel lower along Deb's silky perineum to lap up some pussy honey and bring the precious fluid back to her puckered pink starfish. A choked gasp emerged from my babe's throat every time my tongue sneaked its way into her fleshy flower looking for more sweet nectar. I tried to use her pussy juices only to lube her asshole, but yes, I confess, I drank quite a bit of them down, they were just too delicious.\n\nWithin minutes, Deb was frigging her clit furiously, clearly on the verge of climax. Her voice was thick with pleasure as she egged me on: \"Oooh yes!... Ahhh fuck yes, Jeff, lick my ass! I love your tongue... Aaahh! In my ass... Stick your tongue deeper, baby, I'm gonna... CUUUMMM!\"\n\nI kept my lips clamped to my girlfriend's tender asshole as she shuddered and whimpered through her orgasm. She was barely descending from her peak when I slid two fingers inside her still twitching vaginal folds. Deb's moans increased, encouraging me to go on. I pumped my digits into her gushing pussy for a while as I tongued-fucked her pliant sphincter with renewed passion. \n\nWhen I slipped my digits out of her honey pot and switched holes, easing first one then the other nectar-coated finger into her anus, I barely met any resistance. Deb quivered and gasped at the sudden empty feel in her pussy followed immediately by the stretching, filling sensation of having her asshole finger-fucked. I took my time as I sawed my digits fluidly in and out of her ass. All the while, I licked and slobbered all around her butthole, trying to let my spit trickle inside her dilated rosebud to keep her well lubed.\n\nWhen Deb's moans and the frenzy of her clit-rubbing circles announced another incoming climax, I finally unclasped my mouth from her ass and pressed my lips to her engorged nub, taking in her busy fingertips too. I attacked her pulsing bud with a whirlwind of tongue strokes that made her squeal out between ragged breaths. She squirmed in surprise at first, then she removed her hand to give me more room for my oral assault. I felt her melt in pleasure as I pumped her ass with my fingers and devoured her clit with my mouth. She was cumming within seconds, bathing my avid suctioning lips in a flood of her delicious pussy juice. And still I licked and fingered her holes.\n\n\"Oooh my god, Jeff! That was great oooh!... Oooh nooo, please... Enough, baby, please, I need you to... Aaahh!... Jeff, wait! I'm ready, I'm so ready baby. I need you to fuck me now ooooh!... Please, Jeff, pleeeease, I can't take any more teasing... Just fuck me, baby, fuck my ass!\" \n\nThose words, heavy with wanton desire and carnal need, made me rabidly horny. Licking my lips, I removed my face from Deb's pussy and slid my fingers out of her ass. My eyes never left the slick knot of Deb's winking little anus while I positioned myself right behind her on the couch, kneeling between her parted thighs. \n\nShe cooed as I nestled my cock between her luscious asscheeks and I stared pouring baby oil on her tiny pink pucker. Though I was dying to just ram my boner deep inside that round bubble-butt, I didn't want to hurt my babe. I eased two fingers back inside her virgin asshole and used them to gape her sphincter while I dribbled a steady stream of lube straight into her rectum. Deb squirmed a bit as the cold slick fluid coated her bowels. Her fingers once again went to her pussy, already circling her clit in preparation of the incoming discomfort of getting her anal cherry popped. \n\nWhen I removed my fingers from her ass, Deb's whole buttcrack was shiny with trickling lube. Her asshole was completely coated in baby oil as I pressed my cockhead against it. My throbbing dick was still glinting with the frothy mix of Deb's saliva and my pre-cum, but I greased myself up a little more anyways. I took a steadying breath and looked at Deb's face. \n\n\"Ready, Debs?\" I asked, my hands caressing her beautiful plump ass. Deb's cheek was pressed into the seat cushion, her head turned so she could look back at me over her shoulder. She was biting her lips in anticipation, her eyes were glazed over with excitement. We locked gazes as I poked my glans harder into her oily anus. She just purred and nodded, murmuring: \"Do it, baby. Take my ass.\"\n\nSpreading her sumptuous buttcheeks wide open, I pushed my aching hardness into my girlfriend's virgin asshole. Greasy and well-rimmed as it was, her butt-ring yielded almost immediately at my push. I watched in awe as that tight little orifice dilated, stretching open to accept my invading girth until my fat tip disappeared inside her anus. Deb gasped as her elastic sphincter surrendered to my thick cock, but she didn't protest. Seeing that her asshole kept swallowing me as I kept pressing in, I slowly slid a bit more of my hard pole into that beautiful, willing ass. I expected Deb's choked moans to turn into yelps of protest or a plea to stop, but they didn't. She just kept frigging her clit and whimpering, vocalizing a mix of unexpected pleasure and slight discomfort. \n\nI had eased my whole spongy glans and the first couple of inches of my shaft inside her slippery ass when Deb's virgin anus clamped around me, choking my cock in the grip of her contracting sphincter muscles. I groaned at that hard squeeze and stopped to let my babe's tight asshole get used to my stuffing presence. \"You okay, Debs? Just tell me and I'll stop, I don't want to hurt you.\"\n\n\"Uuuh!... No, I'm fine just... Aaaahh fuck! Gimme a second... You feel so big, baby, you open me up so good! Don't stop, it feels weird, but nice... So stretched... So full... Uuuuhhh god! Give me more, baby, I want to feel all of you... Deep in my ass... Just... Uuuuh! Just go slowly, please.\"\n\nHer whimpering voice and her gasping, broken breaths were so hot. I was thrilled to hear that she was liking her first assfuck and she actually wanted me to give her more cock. I wondered what did I ever do to deserve this sweet, hot, gorgeous girl who had just gifted me with her anal virginity. \n\nI waited until I felt her sphincter muscles relax, then I resumed pushing into Deb's fabulous ass, sliding gently into her warm slippery rectum. A chorus of mewls and gasps escaped Deb's mouth as I carefully but firmly fed her eager anus more and more of my cock with gentle in-out strokes, sinking deeper at every shallow thrust. She was so insanely tight, and still I managed to get more and more of my cock crammed up her oily anal chute at each push. \n\nI grunted out loud and she groaned deep in her throat when I finally jammed my throbbing cock all the way up her ass, my hips pressed into her pillowy butt and my balls bumping wetly against her soaking pussy. The feel of her buttery bowels clinging tightly all around my pole, squeezing me from tip to base in a warm massaging grip was unlike anything I ever felt. Not even Deb's velvety pussy was so insanely good. As my cock flexed deep inside my girlfriend's ass, throbbing in unprecedented pleasure, I knew I was hooked. I'd have to have this ass again and again and again.\n\nHigh on anal lust, I grabbed onto Deb's magnificent bubble-butt and stirred her rubbery anal depths with my boner. Grinding into her virgin rectum, I blurted out: \"Your tight little asshole feels so good, babe! You're so amazing, so fucking hot! I love you, Debs, and I love your beautiful ass!\"\n\nDeb's voice was trembling with pleasure as she spoke between gasps. \"I... Uuuuh... Love you... Oooohh... Baby... Uuuhh yeaah! I can't believe... I have all of you... Aaaah! In my ass... So much cock inside me... So deep... So fucking good... Uuuuhhh! Now fuck me, baby, fuck my ass!\" \n\nSlowly at first, gradually picking up speed as her anal tunnel relaxed and molded around my rock-hard shaft, I started fucking my girlfriend's asshole. All the lube coating her untouched bowels had created a delicious slippery friction, so that moving my cock inside her most secret depths felt at the same time slick and snug. Even though she was relaxed and her oily butthole had adjusted to me, the tightness of her anal canal was still beyond incredible. The feel of immersing my dick in the buttery heat of Deb's rectum sent jolts of pleasure up my pistoning cock that electrified my whole body. I was in ecstasy as I got into a fluid buttfucking rhythm.\n\nDeb seemed to have lost her ability to form actual words, but I loved the sexy sound of her choked animalistic moans at my gliding in-strokes, when I filled her asshole full of cock. Even more erotic though were her aching whimpers of disappointment on my out-strokes, when her rectum was left briefly empty of my thick meat. \n\nWhen I withdrew from her anal sheath, leaving only my glans trapped inside the tight confines of her anus, Deb's butt-ring dragged out along with my pole, clinging to me as if trying to hold me inside that warm welcoming tunnel, begging me to push back in. And of course I complied, missing the snugness of her rectum as soon as I slid out. That greedy stretched-out sphincter was penetrated again and again by my fat pole as I swiftly glided back inside the heavenly heat of my girlfriend's tight ass with the urgency of a newly initiated but already devoted buttfucker. \n\nAs I picked up my ass-pounding pace, I felt Deb's body shiver beneath me from time to time while her asshole went into brief bouts of clamping spasms. When this happened, my scrotum bumped into an ever more soaked pussy as I pressed myself balls-deep into her jiggly ass. It was an incredible turn-on to feel the frenzied whirls of her clit-strumming digits mere inches from my ballsack and to realize that Deb was having a string of mini-climaxes as I sodomized her virgin asshole. The mere idea almost made me blow my load. I gritted my teeth and just kept slowly fucking her ass through those brief, delicious anal contractions until her rectum relaxed, then I was once again burying myself deep inside her bowels with a hard pounding rhythm. \n\nFor long blissfully lascivious minutes, me and my sweet Deb were lost in assfucking paradise. I slammed my hard tool into her surrendered asshole while she moaned and yelped and squealed, taking me knob to root into the hugging warmth of her glorious ass while she frigged herself to a rippling mini-orgasm after the other. It was simply amazing. It made me wondered how I could have gone twenty-three years of my life without ever fucking a girl's ass. I grinned at the thought that, based on Deb's enthusiastic reaction to her first taste of sodomy, I was likely to get more of her lovely ass in the future. Still, I wanted our first buttfuck to last as long as possible. \n\nEvery time I felt I was getting close, I buried myself deep in her ass and just stayed there, embedded in her greasy anus, slowly grinding into her fleshy rump. If this wasn't enough to calm down my surging sperm, I slipped out of her ass completely. We both groaned when my cockhead vacated her sphincter with a squishy popping sound as I withdrew my length from her hungry butt-ring. I adoringly kneaded the smooth roundness of Deb's plump ass while I basked in the spectacular sight of her gaping asshole, steadying myself before plunging into her rectum again. \n\nThe first times I pulled all the way out, her anus remained stretched open just for a few seconds then it started shrinking back to its usual tiny starfish shape. When I eased my pulsing cock back into her bowels again, I had to push a bit to get through her oily orifice, making Deb gasp at the renewed intrusion. But as the minutes passed and our assfucking got faster and wilder, whenever I broke my tempo and slid out, Deb's sphincter stayed dilated for longer and longer. Eventually, I was treated to the depraved spectacle of my girlfriend's slick well-fucked asshole remaining as stretched as it was when my fat dick was stuffed in it. Staring in awe at Deb's gaping butt-ring, I could peek into the dark red cavern of her rectum that I had managed to open up and reshape to fit my cock to perfection. It was an obscenely rewarding sight to see.\n\nBut no matter how hard I tried to delay the inevitable, my climax eventually closed in on me. Grabbing onto her fleshy buttocks, relentlessly filling her ass with my thick meat, I leaned over Deb's surrendered body. Pressing my chest to her arched back and resting my head on her shoulder, I grunted into my girlfriend's ear: \"Aaahh Debs... I love fucking your ass! I'm gonna fuck your beautiful ass all the time now, babe, it's just too good! Aaah fuck! This ass... I love your tight ass!\"\n\n\"Uuuuhh yeees! You can fuck my ass any time, baby... Uuuuh fuck! I had no idea... Uuuhh yes, like that... Harder, deeper! It's soooo good... Ooooooh fuck yeeees! Fuck me, fuck me haaaard!\"\n\n\"Tell me,\" I grunted, slamming harder and faster and deeper into her warm bowels. \"Tell me how much you love getting assfucked, babe. Aaah fuck!... Say it, Debs!\"\n\nHer breath caught in her throat at each of my savage, drilling thrusts. She shivered all over and I felt her slippery rectum start to quiver around me, announcing her impending climax. \"Oooh god yesss!...\" she mumbled, her voice broken and throaty. \"Yeeees... I love it! Uuuh, baby... I want you in my ass, deep in me! I love your cock up my ass! I love how you stretch me... You fill me so much... Aaaaahhh fuck, yes! So dirty and slutty and so fucking good... Uuuuh!\" \n\nBerserk with anal lust, fueled by our dirty talk, I humped into Deb's asshole as fast and hard as my bucking hips allowed. She was practically howling as she pushed back against me, slamming her conquered ass into my impaling cock with jiggling, fleshy claps. I felt my balls draw up and my raging hardness flex as I pounded into her butthole with reckless fury. Panting and grunting into Deb's ear, delirious with arousal, I growled: \"I own your ass now, babe! Ahhh... It's mine now!\" \n\n\"Yeees! You own this ass now! Use me, use my ass! My ass is yours, baby! All yours, only yours!\"\n\n\"You're my little anal fuck-toy now, aren't you?\" I said, plowing her ass without restraint.\n\n\"Yeeeess! Uuuuh fuuuck!... I'm your dirty little buttslut, yeeees! Uuuuh!... I'm so fucking close, baby, fuuuuuck! Fuck meeee! Aaaaah!.. Fuck your nasty asswhore hard! Ooooh yeaah!... Fuck my ass fuck my ass fuck my aaaaaass!\"\n\nFeeling on the verge, I plundered Deb's anus with all I had, high on her words and on the feel of her oily anal sheath massaging my pulsing shaft. I was barely aware that I was still talking into her ear between raspy breaths. \"Your tight little asshole... This beautiful ass... Aaaah yeah! Gonna cum in your ass, Debs... I'm gonna cum so hard in your ass... Aaargh fuck!\"\n\n\"Uuuhh yes, fuck yeeess! I want your cum, baby! OOOHHH! Fill my... AAAAHHH! Ass... Full of... UUUUHHH! C-C-CUUUUUM!\"\n\nAs Deb yelled out her orgasm, I slammed my cock balls-deep in her ass one last time and exploded. My first torrential spurt had barely hit her anal walls when her rubbery rectum contracted around my fully buried length. As snug as her ass had been while I fucked it, her orgasm made it clench even tighter. I was in buttfuck heaven. My erupting cock throbbed madly as I sprayed pulse after pulse of sperm in time with the contracting and releasing of Deb's asshole. My head was spinning and I held my breath as my girlfriend's buttery bowels milked me through the intense clenching throes of her anal climax. All I could do was cum and bellow out my pleasure as I ejaculated deep inside that amazing ass, filling Deb's squeezing rectum with semen. \n\nWhen I stopped shooting my huge load and her asshole finally relaxed, I collapsed on top of Deb. Rolling to my side and dragging her limp but still twitching frame with me, I lay down on the couch, spooning with my babe. I wrapped my arms around her and held Deb's soft curvy body to me, nuzzling her neck. We spooned tightly through the afterglow, breathless and sated. Since Deb didn't ask me to pull out, I left my thoroughly milked cock buried in her cozy warmth of her cum-filled ass. Though I was satisfied and deflating, my brain was so overcharged with arousal that I stayed sort of plump. The fact that I could feel my gooey cum sloshing all around my snugly sheathed cock only made me hornier. \n\nGrabbing her pillowy tits as I held her to me, I looked at Deb's pretty face. She was breathtaking, glowingly blissful. Her ponytail was messy and sex-tousled, her whole body was shiny with perspiration. Her eyes were closed and her luscious lips were parted as she breathed slowly in and out. I started kissing my sweet Debs, peppering her silky cheeks and her thin neck and her smooth shoulders with soft smooches, telling her how beautiful she was and how much I loved her. \n\nAfter a while, my fond attentions seemed to call her back from her ecstatic absence. Sounding adorably sleepy, she murmured: \"Mmmh... Love you too, baby. Mmmh, Jeff, you fucked my ass so good... I've never had an orgasm so intense, ever! I came so much, for so long. At some point I felt like I was passing out!\"\n\n\"Happy to make you happy, babe,\" I said, stirring my semi-hard cock in her creamy rectum, making us both groan. \"I can pull out if you're sore. I guess I got a bit carried away at the end... I didn't hurt you, did I?\"\n\n\"No baby, I liked it. It wasn't painful, just unusual... I felt so bloated, completely stuffed and stretched. But I liked it, Jeff. Don't pull out yet, stay in me. I like having you in my ass, feeling so full of you. It's weird and hot but also... Kind of intimate in a way, you know? Special, somehow,\" she said, turning her head to kiss me. She tittered and pressed her plump ass back against me, adding: \"Plus, all the cum you pumped in me is pretty soothing... There's no risk I'll feel sore with that huge load squishing inside me!\"\n\nI smiled and hugged her tight, massaging her huge boobs, making her purr. \"I love you so much Debs, you're the best girl in the world. I mean it. So sweet and beautiful and sexy. And you even like it in the ass!\" \n\nShe blushed adorably at that, as always when I paid her a heartfelt compliment. And to think that mere minutes before she was in full tigress mode, yelling for me to pound her ass harder and fill her with cum. What an amazing girl she is, I thought, and what a lucky bastard I am.\n\n\"Like it?\" she chuckled, \"are you kidding me? I love it! Seriously, Jeff, it was amazing. I never thought much about anal, but now... It was incredible, baby, you licked my butthole so good and I was so ready for you, so relaxed. I knew I could trust you and you wouldn't hurt me. And when you stuffed your hard cock in my ass, oh my god!... I was cumming all the time, I had no idea. \"But the best part was when I felt you cumming so deep inside me... That was so fucking hot, baby!\" Then, as an afterthought, she added: \"I guess I shouldn't be mad at Dana any more now. After all, if it wasn't for her...\" she trailed off, a weird glint in her eyes. \n\n\"Hey, come on,\" I quipped, mock-offended. \"It was me who got the idea of stealing the 'first anal' to begin with, and still me who fucked your ass!\" \n\nI couldn't help but laugh at my own words. Deb laughed too, shaking her head and then biting my nose. \"Just shut up and kiss me,\" she said, offering me her soft luscious lips. \n\nI tightened my embrace around her and did as my babe said, kissing her deeply. Debs reached her arm behind my head, running her fingers through my hair, pulling me in as she thrust her tongue into my mouth. We just lay together and made out for long languid minutes, spooning cozily, our bodies still connected by my cock lodged in her snug asshole. Kneading her buxom tits with reverence, I teased her puffy areolas and pinched her thick sensitive nipples between my fingertips from time to time, making her moan into my mouth as we kept lazily sucking face. ",
        "I was surprised when Deb pulled back. I could have kissed my girlfriend's hot tender lips for hours, but she had other ideas. Groaning in disappointment, I opened my eyes to see an impish grin on her face. Before I could collect myself, Deb arched an eyebrow and wiggled her cock-stuffed rump against my hips. \"Baby,\" she purred, \"I want more.\"\n\nMy semi-hard dick stirred inside her warm rectum at those words. \"Really, Debs?\" I asked, unable to contain a goofy grin. Deb nodded, grinding her butt into me. \"I want you to fuck my ass again, but there's something I want to try first,\" she murmured sexily. \"I want to suck you, baby.\"\n\nAnother jolt of life rushed to my groin. \"Whoa! Ass to mouth!? Oh my god, Debs! Sure!\" I said, already sliding out of her ass. Deb chuckled and slapped my arm playfully, swiftly pushing her bubble-butt back to clap against my hips, gobbling my shaft inside her hungry asshole again. \n\n\"Eewww, Jeff! I just gave you my anal virginity! A girl needs time to adjust to the idea of being a buttslut, you know,\" she chuckled, rolling her eyes. Grinning mischievously and biting her lips, she added: \"Maybe some other time, though. But for now, what I meant was something like this...\" \n\nA warm, slippery pressure surrounded my semi-hard cock as Deb tightened her creamy rectum in a squeezing grip around me. My mouth went slack and I moaned uncontrollably as my amazing girlfriend held my shaft snugly trapped in the tugging caress of her bowels for a few second. I breathed again only when she released me for a moment, then I was grunting even more as she did it again, slowly clenching her anal muscles along my deeply buried length, enveloping me in the suctioning grip of her forbidden hole.\n\n\"How is it baby?\" Deb cooed, grinding her rump into me and kissing my awestruck face, smirking, squeezing me gently inside her slick butthole. \"Am I sucking you good with my ass?\"\n\n\"Aaah, yeaah! Holy shit, babe! You're so good at this! You're a natural anal queen, Debs! Aaah...\"\n\nDeb giggled and released her grip. \"I wasn't sure about it, but it seems you're liking it. Right, baby?\"\n\nI could only moan in response as Deb resumed her contracting/relaxing anal routine. My dick pulsed in pleasure with every milking squeeze of those sperm-coated depths, getting harder by the second. Unlike the powerful spasms that had drained me dry as her rectum cramped in orgasm earlier, this deliciously lewd anal suctions were a vacuuming caress that hugged me gently from tip to root. It felt surprisingly similar to one of Deb's sloppy, deep-throating blowjobs. Closing my eyes, I had no difficulty imagining that the warm squishy grip massaging my cock was that of Deb's welcoming gullet. \n\nThose slow, buttery anal massages were so agonizingly good that I was soon rock-hard again. Feeling my stiff shaft twitch inside her cozy asshole, fully revitalized by her milking squeezes, Deb murmured: \"Fuck me now, baby. Fuck my ass again.\"\n\nI stirred my boner inside her cum-sloppy bowels as I spooned closer to her curvy body. Letting go of a huge tit, I reached my hand down to her dripping pussy, saying: \"Did I mention that I love you like crazy, Debs?\" \n\n\"Yeah, I seem to recall you sayin-aaaahh!... Aawwhh!\" Deb's words faded in a long moaning gasp when I began circling my fingertips on her engorged clit as I sawed my hardness in and out of her gooey rectum with slow, deliberate strokes. \"Yeees, baby, like that! Uuuuhh... Long and deep, yeaaah! Ooooh so good! Uuuuhhh, yes, fuck my ass... Rub my clit... Fuck yeeeees!\"\n\nTaking it easy, free of the mind-addling anal frenzy of our first assfuck, I drove my cock in and out of my girlfriend's insatiable asshole with a fluid, mild tempo. Mewling in constant delight, Deb drew her legs up to her chest to give me better access to her wanton anus and laid a tiny hand on her sumptuous rump, spreading her buttocks for me. \n\nWe soon got into delicious rhythm that got us both groaning and panting in anal ecstasy. On the in-strokes, Deb relaxed completely as I plowed into her ass, immersing my cock in the snug heat of her semen-plastered bowels. On the out-strokes, she tightened her anal walls around me, milking my meat as I slowly glided out until only my glans was enveloped in the hugging grip of her sphincter. \n\nI made love to my babe's ass like this for quite some time, enjoying the unusual yet deep intimacy of our anal coupling. Grunting with pleasure and nibbling her neck as I gently stuffed her rectum, I diddled Deb's clit with my thumb while I fingered her needy pussy with two nectar-glossy digits. Twirling my fingers around her sopping folds and pressing against her inner vaginal wall, I could feel my own pistoning cock sliding into her anal tunnel, right past the thin membrane separating her tight holes. All through our lazy spooning buttfuck, Deb was whimpering and quivering, her moans spiking up and her rectum clenching and squeezing me deliciously when she had a quick climax.\n\nDespite our moderate pace, I eventually couldn't take it anymore. Deb's ass was just too good, so slippery and warm and tight, and her milking suctions were simply heavenly. I felt my balls tingle at each clapping impact into Deb's drenched labia and I knew I wouldn't be able to delay my ejaculation much longer. Determined to cum with Deb again, I stopped pumping her slit and curled my fingers upward instead, rubbing the silky folds underneath her clit, searching for her g-spot. \n\nI was throbbing with impending release when Deb's breath caught in her throat. My probing fingertips were hitting the right spot apparently, because she went rigid and started yelping. \"Oooh god! Ooooh my god yeeees! Right there baby... That's it... Rub me, touch meeee... Ooooh shit fuck shit fuck fuck fuuuuuck!\"\n\nUnable to focus on her milking massages as a big orgasmic wave rushed at her, Deb relaxed her rectum completely. I immediately picked up my pace, riding her rump harder with my last thrusts before I shot my load. Feeling my balls draw up, rubbing her clit harder with my thumb and twirling my fingers on her g-spot faster, I pressed my face against Deb's cheek. Her hot breath was getting raspier by the second. Slamming my dick urgently into her hot ass, I grunted into her face: \"I'm close, babe, this ass... Your beautiful ass... It's gonna make me cum so hard, Debs. I'm gonna fill your tight little asshole again. Ready for another big load up your ass, babe?\"\n\n\"Yesss! YEAAAH! Ooohh fuck, baby... Keep doing it! Right... There... Uuhhh! Your fingers... Your cock... UUUHH! Cum deep in me... OOOHH! Cum with me, baby... Fuck me harder! AAHHH! Cuu-uuuh-uumh!... AAAHHH! Cum in... My... UUUUHHH!... AAAASSmmphf!...\"\n\nI smashed my lips into Deb's luscious mouth, kissing her wildly. I felt my sperm surge up my raging boner as her whole frame twitched in my arms in a full body spasm. The next thing I knew, her buttery rectum was clamping around my deeply buried cock with savage intensity and I was spewing thick ropes of spunk into her already cum-sloppy bowels. \n\nOur animalistic groans of release were muffled by our devouring kiss as we rode out our massive orgasms. My shaft pulsed in mind-numbing pleasure as I unloaded spurt upon spurt of cum into those warm anal depths. All the while, as I flooded Deb's tightening bowels with my seed, her squeezing asshole milked me relentlessly, draining my balls of every last dribble of sperm until I had emptied myself completely into her insatiable ass. \n\nAs our climaxes burned out, me and Deb broke our ferocious lip lock. Utterly satisfied, wiped out and breathless, we just lay there on the couch for a long while, spooning tightly and gulping down big lungfuls of air as we basked in the afterglow. Unable to do anything else, still buried in her rectum, I just wrapped one arm around her buxom breasts to keep her close to me. With my other hand I paid silent homage to her beautiful plump ass, delicately fondling and caressing her round buttcheeks, treating that sumptuous rump like the invaluable masterpiece that it was.\n\nDeb's head rested in the hollow of my shoulder while I nuzzled her neck, inhaling her unique scent, my nose immersed in the locks of her messy ponytail. With her eyes closed and her puffy lips slightly parted, she looked like she was sleeping. So calm and blissful, she radiated a sense of fulfillment that enhanced her simple, natural beauty. I groggily murmured sweet nothings into her ear. She just cooed and purred in response, the ghost of a smile playing on her face.\n\nDeb finally seemed to stir only when my softening cock started slipping out of her squishy anal tunnel. Opening her eyes, an edge of panic in her voice, she yelped: \"Wait, Jeff! Wait, wait, wait! Don't pull out yet!\" \n\nReaching out her arm toward the coffee table, she grabbed her phone and handed it to me, saying: \"Here, baby. Make sure they're nasty.\"\n\nI grinned and shook my head in wonder as I realized what Deb had in mind. Unperturbed, she just rolled on her tummy and spread her asscheeks apart with her hands while I slid out of her ass, taking the first picture. \n\nThe moment my cockhead plopped out of her well-fucked asshole, unplugging her bowels, a flood of frothy cum started leaking out of her rectum. My eyes widened in lascivious awe as I snapped pic after pic of the deluge of gooey sperm bubbling out of my babe's stretched open sphincter and trickling down her slick buttcrack. Drunk on the obscene sight before me, I even brushed my shrinking dick through the milky globs of cum plastered along those meaty asscheeks, pushing my seed into Deb's gaping anus all over again, forcing some spunk back inside her bowels. Deb squealed and giggled all the while, dutifully keeping her fleshy globes parted with her tiny hands, encouraging me to take more pictures, the filthier the better. \n\nI handed her back her phone only when her tender anus had shrunk back to his usual size, regaining its crinkled appearance. It was glossy with cum and a bit reddened from the reiterated sodomy it had endured, a thin dribble of semen still leaking from it. Still, I marveled at the elasticity of that once again tiny butt-ring that I had just thoroughly reamed, twice. \n\n\"So,\" I said while Deb scrolled through the pics and commented on which ones to choose, \"What's the caption gonna be then, 'Thank you for the idea, sis' I guess?\"\n\nDeb laughed. \"Not bad, baby, but I was thinking more like 'Beat you to it, bitch!' or something\"\n\n\"Sounds good, Debs,\" I chuckled. \"Dana is gonna freak out so bad...\"\n\n\"Yup, that's the idea!\" she giggled, sending the pics of her freshly deflowered, cum-dripping asshole to her twin.\n\nWe cuddled on the couch a bit more, then we went to take a much needed shower. We carefully soaped and scrubbed and rinsed one another, enjoying the feel of the other's slick body. We took our time under the rejuvenating spray of the shower-head, kissing and caressing in perfect relaxation. As I ran my hands all over Deb's soft curves, luxuriating in the sight of the droplets of water shining on her splendid tits and running down her plump ass, I couldn't stop telling her how gorgeous she looked, how awesome she was in every possible way and how crazy about her I was. \n\nShe shrugged and made fun of my sappy adoration, turning her head down and tittering. Her cheeks were flushed as she tried to play down my compliments, as usual. Of course that only egged me on. At times like this I could clearly see the shy, chubby teenager she had been in high school, that smart yet withdrawn girl I had heard about in her memories of a time when she had lived in the shadow of her cheerleader twin, feeling fat and ugly and uncomfortable about her body. It made my heart ache to know that my sweet Deb had felt like that when she was younger. Ever since she had mentioned her past insecurities to me, I had made it my mission to do whatever I could to let my amazing girlfriend know how beautiful she was, in case she should forget. \n\nAs I kissed her and held her and murmured into her soft mouth, I reached my hands to her pussy and ass. Gently, ever so slowly, I slid a soapy digit inside her tender anus while I eased two fingers into her wet vaginal folds, pressing my thumb to her clit. Deb leaned into my body, squashing her heavy boobs against my chest, offering her luscious lips for me to kiss, moaning softly. I lazily circled her engorged clit and masturbated her holes for a long time, until she shivered in orgasm, moaning, pressing herself tighter against me as she whimpered: \"Mmmh, baby... I love you so much. Mmhh... You make me feel so good.\" \n\nI wasn't really surprised when, minutes later, as we toweled off, Deb smiled and fell to her knees, taking me in her mouth. Not a day passed without her blowing me and swallowing down a big load of my cum. Clearly, she had no intention of letting her ass be the only receptacle of my seed tonight either. Looking up at me as she sucked me lovingly, she worked her cocksucking magic on my dick, using her soft expert lips and her deep-throating gullet at the best of her ability, until I was once again hard and throbbing in her slurping mouth. \n\nI was surprised when, instead of sucking me off to completion, she slid her lips off my aching boner and sat up on the cabinet by the sink. Spreading her legs apart and pulling her pussy lips open with her fingertips, Deb looked at me and pouted. In a sultry voice, she said: \"Don't you want some of this too, baby? My pussy is feeling neglected tonight. And seeing how much you liked my ass, she's afraid you may have found a new favorite hole to stick your cock in...\"\n\nAs I wedged my spongy glans between her moist pussy lips, Deb wrapped her legs around my back and her arms around my neck, pulling me closer. \n\n\"We can't have that, I guess,\" I chuckled, lingering at the entrance of her soaked, needy cunt. \"But honestly Debs, I'm not sure what my favorite hole was, or is, for that matter. Your tiny little asshole is just amazing, so tight and warm. And I've always been a big fan of that talented mouth of yours, as you well know. Still, this sweet wet pussy...\" \n\nHer giggles faded into a throaty moan as I finally pushed forward, sinking my whole length into her snug silky tunnel. I fucked her with long deep strokes, enjoying the softness of her vaginal walls caressing my cock, grinding firmly into her thick clit when I buried myself balls-deep into her. At Deb's urgent request, I picked up my pace until I was pounding her savagely, my slamming thrusts punctuated by her groans of incoming release. I was ready to blow when Deb's soaked pussy started contracting and she shrieked out in climax. I held back, knowing where she wanted me to shoot.\n\nAs soon as her orgasm started abating, Deb fell once again on her knees in front of me and blurted out: \"Fuck my face now, baby. Use my mouth to get off and give me all your cum! I need to taste you, I need to drink you!\"\n\nAlways amazed by her fellating expertise, I moaned deeply as I watched my boner, oozing pre-cum and glossy with her sweet pussy juices, disappear between Deb's soft lips. She gobbled my pulsing cock to the root effortlessly, inhaling my whole length in one swift, well-practiced deep-throating motion. Sealing her incredible cocksucking lips at the base of my pole, she reached her hands around me and sank her fingers into my buttcheeks. She grabbed hard, pulling me to her, forcing my cock as deep into her throat as it could go, silently reaffirming what she had just said. Grinning at her, I mouthed 'Love you babe' as she looked up at me. A spark of unbridled lust was glinting in Deb's eyes as I grabbed the back of her head in both hands and started slamming my shaft into her surrendered mouth. \n\nI fucked her face like it was her pussy, fast and hard and deep, sliding easily down her saliva-drenched oral cavity and burying myself in her constricting gullet at every brutal throat-fucking thrust. My legs were shaking with impending climax as I held her head in my hands, more to steady myself than to force Deb to take my oral assault. She was totally willing, absolutely horny and as well-trained in the lewd art of face-fucking as the sluttiest of porn stars. Moaning through my grunts of pleasure and the chorus of sloppy, slobbering, choking sounds of our throat-fuck, my sweet babe held perfectly still, except for the rapid movements of her hand furiously frigging her clit. \n\nIt wasn't long before I felt my balls tingle. I gave Deb's mouth a final series of furious humping strokes, then I lodged my throbbing cock deep in her gullet and let go. As I unloaded my third batch of cum straight into her esophagus, Deb was purring and shivering, most likely cumming on her own fingers, most definitely making me cum harder thanks to the added stimulation of her humming oral cavity. As I fed her my seed, she made delicious swallowing motions, making her throat tighten even more around my ejaculating dick. She milked me like this while I pulsed inside her gullet, swirling her tongue on my sensitive underside and sucking hard with her mouth, submerging my cock in swirling wet spittle, making me spew more sperm into her stomach.\n\nWhen I retreated from her throat, Deb held my spent dick in her mouth and devotedly cleaned off the foamy layer of juices coating me, gulping everything down hungrily without spilling a drop. By the time she finally let me plop out of her incredible mouth with a smack of her wet lips, I was weak in the knees. \n\nI had to sit down on the edge of the tub while Deb giggled at my awestruck face. \"Mmmh... Yummy as always, baby,\" she cooed, standing up. \"It wasn't as big as usual, though. I'm still kinda hungry. You up for pizza?\" \n\nI could barely nod my head as I watched her walking out of the bathroom, her plump ass swaying, her big tits jiggling, her delicate fingers clearing her pretty face of the spittle dribbling down her chin and shining on her cheeks.\n\nAs expected, Deb had a bunch of texts from Dana waiting on her phone. She read through them with a satisfied smile on her face as we ate, smirking and looking very pleased with herself.\n\n\"She's totally losing her shit, isn't she?\" I asked, knowing all about Dana's competitive streak.\n\n\"Oh yeah, big time,\" Deb chortled. \"She is calling me all kind of nasty things. And of course NOW she mentions the pact, what a surprise. I'm not even gonna reply, she'll go even crazier!\"\n\n\"Well,\" I said, raising my hand, \"mission accomplished I guess.\" Deb gave me a high five and a big wet smooch on the lips. Then, offering a nice rendition of an evil mastermind's cackle, she set her phone down and returned to her slice of pizza. Looking at her, I couldn't help but grin as I replayed the events of the evening in my mind. Jeez, I thought, talk about weird sisters.\n\nWe spent the rest of the night cuddling in bed, watching TV until we were pretty much sleeping with our eyes just barely open. I was dozing off with Deb's head resting on my chest and my arms wrapped around her, when her phone started buzzing with a series of incoming texts. Looking at the hour, I assumed it was Dana telling Debs that she had evened the score, getting her own anal cherry popped and who knew what else. Maybe she also upped the ante by going ass to mouth on her boyfriend, I thought. \n\nApparently Deb wasn't asleep just yet because she reached for her phone and started reading through her twin's texts. I watched her reactions closely. She was grinning in triumph at first, then her eyes went wide in surprise, then she furrowed her brow in thought. Her final expression was an unusual mix of contented pride, intrigued curiosity and mindful concentration. After she finished tapping out her response to Dana, she turned her phone off and snuggled once again into my side, smirking. \n\nI just couldn't resist. \"So?\" I asked, trying to hide my eagerness and failing.",
        "Deb turned her face to look at me. \"Well,\" she said with a smile, \"I win. Dana is still an anal virgin.\"\n\nThat was unexpected. \"Oh? Mad as she was, I thought she was gonna have Rodrigo fuck her ass the second he landed or something. Actually I imagined she would go further, you know, to get another first on you in retaliation, like maybe...\"\n\n\"Rodrigo didn't come,\" Deb interjected. \"She went to the airport to pick him up and he wasn't even there, so she called him and he said he'd decided he wasn't flying in tonight after all. Long story short, they had a huge fight and kinda broke up. So Dana didn't get her ass fucked in the end.\" \n\nThere was still more than a hint of gloating in Deb's voice, but I detected a note of concern for her sister too. After all, they weren't has hostile as they sometimes seemed to be, I knew them enough to know that. But there was more to it, I could almost see the wheels in Deb's head turning as she elaborated on something she wasn't saying.\n\n\"Well, there goes another one,\" I said, not really surprised about Dana breaking up with yet another guy. Still, I asked: \"Is she okay?\"\n\nDeb shrugged as she hugged me tighter. \"Yeah, I guess. She was still freaking out, but not about Rodrigo. She never loved him or anything. You know how she is, she just wants to look awesome beside a supposedly cool guy. But she's still super upset about the 'first anal' thing.\" \n\n\"I bet she is,\" I said, feeling Deb's shapely thigh straddling mine, brushing softly along my leg.\n\n\"She said she's been watching our pics all evening. She liked them a lot, apparently\" Deb said, nuzzling my cheek. There was a strange edge to her tone as she pressed her body against mine, murmuring into my mouth. \"She said she's jealous, you know. Very jealous, actually.\" \n\n\"Uh-hu...\" I mumbled, feeling suddenly alert. Deb's mood had definitely shifted toward a sort of sexy vibe, but not one of her usual sexy vibes. This was subtler, new. As she rubbed her warm, curvy body against mine, I could feel her erect nipples poking into my chest through the thin cotton of an old Sublime T-shirt of mine that she wore to bed. \n\nHer voice was tinged with mischief as she giggled: \"Dana said she did nothing but play with the buttplug and finger her pussy since she got back from the airport. Looking at our pictures all the while, of course...\"\n\n\"Of course,\" I croaked, imaging my girlfriend's twin masturbating both her holes to the lewd pics of Deb's gaping anus oozing my cum, not to mention the close-ups of my dick pushing gobs of gooey sperm back into Deb's ravaged asshole. I felt my pulse quicken and my cock stir as Deb's tiny hand caressed my chest in slow circles, patiently moving lower toward my abdomen.\n\nShe brushed her mouth against the corner of mine as I lay there, motionless. She was biting her lips as she said: \"In her last text she also asked me something, baby. Something kinda weird...\"\n\nI had to swallow the lump in my throat before asking: \"Yeah? What is it?\"\n\n\"She asked me if she could borrow you to pop her anal cherry.\"\n\n\"What!?\" \n\nDeb just looked at me as she snaked her hand into my boxers, her lips upturned in a thin, unreadable smile."
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "anal first time",
        "oral",
        "girlfriend"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/weird-sisters-ch-01"
}