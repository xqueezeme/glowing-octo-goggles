{
    "title": "Up the Chimney",
    "pages": [
        "Gina let out a quiet groan when she was awakened by the clock radio alarm. Blue Christmas by Elvis was playing, and the music merged with her feelings as she'd drifted off to sleep. The bed shifted, and she knew Brian was sitting up to shut off the alarm.\n\nIn a fit of pique, she rolled over, facing the wall. A quiet sigh let her know that the gesture hadn't gone unnoticed. When he slipped out of the bed without a word or a touch, she knew that he'd likewise received the message she was sending.\n\nOnce he was out of the room, she brushed away a strand of light blonde hair that had been tickling her nose from the moment she rolled over. Even as irritated as she was, she felt a twinge of guilt at having so blatantly snubbed him. It wasn't enough to overcome how upset she was at him going in to work on Christmas Eve &mdash; and waiting until the last minute to tell her.\n\n\"I thought we were going to make it,\" he'd pleaded when he saw her expression turn dark. \"I swear, I would have said something if I knew we were going to have to finish tomorrow. It's only going to be a few hours at the most.\"\n\nVoice warbling somewhere between barely controlled anger and tears, she could only manage, \"On Christmas Eve,\" as a response.\n\nHe opened his mouth as if to say something, but before he could find any words, she'd gone to the bathroom for a shower, and then to bed.\n\nTry as she might, she couldn't stop the conversation from running through her mind over and over again. She wasn't going back to sleep this morning. Unwilling to deal with the wedge between them, Gina fought the urge to get up until Brian left for work, and only climbed out of bed when she heard his car pull away.\n\nShe'd planned what she was going to wear today shortly after Thanksgiving, but the outfit remained in the closet when she rolled out of bed. With Brian gone at work, she just wasn't in the mood. Wearing faded sweats, she made her way to the kitchen, the smell of the coffee her husband had made pulling her along.\n\nOnce across the threshold to the front room, she realized that she was moving on autopilot toward the power strip that would light the tree and the other lights, as she had for so many mornings. She stopped, and nearly turned away toward the kitchen, but thought better of it. He wasn't here to see her little displays of anger anyway, and it just felt wrong not to light the room up on Christmas Eve.\n\nBrightly colored lights blazed to life, bringing a cheery glow to the room. The wreath over the front door blinked in time to Jingle Bells, the notes sounding through the room from its music box. Gina couldn't help but smile. She'd never really gotten over the wonder of Christmas that so many outgrew. It was a big reason why she was so angry at her husband, but also the reason she was having trouble holding onto that anger.\n\nShe stood, hugging her arms around herself, and took in the scene until the wreath ended its first song, moving on to Silent Night. The lure of the coffee pulled her again, and she soon had a cup in hand when she returned to the room.\n\nThe pettiness of how she'd reacted steadily burned through her anger as she sipped, listening to the wreath play its brief, slightly tinny-sounding carols. Only married for a little over a year, this was their first real fight since exchanging vows. They had battled a time or two while dating, but this was different &mdash; more dangerous.\n\nShe had already broken her own rule about never going to bed angry. Brian had tried to talk to her when he came to bed, but she'd completely ignored him, and could almost feel him wincing at the lack of response. The air had felt heavy with tension right up until she drifted off into a fitful sleep. He might have made the mistake, but he was also the only one who had tried to air out the problem the way they'd promised.\n\n\"I'm such a bitch,\" she whispered to the empty room, and then put down her coffee. Fortunately, her cell was still sitting on the end table, forgotten in her rush to go to bed the night before.\n\nAfter a few deep breaths, her thumbs tapped out a message. \"Sorry for how I acted. I'm still mad, but I understand.\"\n\nPerhaps a minute later, his reply came back. \"No, it's my fault. I was stupid. Forgive me?\"\n\n\"Only if you forgive me,\" she tapped back, beginning to feel a little better.\n\n\"Nothing to forgive, but yes. Shouldn't be here much after lunch, if that helps.\"\n\n\"It does.\" She'd assumed he would be much later, and the news brought a smile to her lips. \"I love you.\"\n\n\"Love you too. Got to get back to it.\"\n\nNot wanting to distract and delay him any further, Gina put down her phone and plucked at her frumpy sweats. Now that her mood was turning, she couldn't stand the thought of him coming home to her, looking as she did.\n\nFirst order of business was to fix her hair and put on that new red dress &mdash; and everything else &mdash; she'd kept so carefully hidden.\n\n****\n\nGina was busy putting together the Christmas Eve snack buffet &mdash; downsized for two &mdash; that was the tradition in both of their families when the doorbell rang. Assuming that it was a neighbor come to call &mdash; perhaps with cookies or some other goodies to add to the meal &mdash; she put down the jar of miniature pickles and went to answer it.\n\nLittle could have surprised her more than the sight of Santa Claus standing on the porch.\n\n\"Ho, ho, ho! Merry Christmas, Gina. I hear you've been a very good girl this year.\"\n\nShe could almost place the voice, and the eyes, but not quite. Whoever he was, he played a good Santa. \"Does that mean I get a present?\"\n\nHe lifted his bag and gave it a shake. \"Why, I do believe I might just have something in here for you.\" Santa opened his bag and reached inside, pulling out an envelope and a gift-wrapped box. He handed them over and said, \"Open the card first,\" before giving a wink, a wave, and turning to walk back off the porch into the snow.\n\nBubbling over with excitement, Gina hurried to the couch and sat down. She couldn't resist one shake of the box, which didn't give any clues, but took Santa's suggestion to open the card first. She knew in a single glance that her husband was the one who had written her name on the outside. Her nails made short work of the seal, and she pulled it out.\n\nA soft coo escaped her as she looked at the outside of the card. Brian had obviously paid attention to which cards she liked over the years. The scene was of a snow covered porch with a wreath on the door, a tree in the window, and kids running down the stairs in the background, in a style that reminded her of Rockwell.\n\nThe card was one with the inner message printed on leaves of paper bound within, and she immediately noticed that the one on the right was stuck to the body of the card with something. She ignored that curious feature, reading the handwritten message inside.\n\n\"I know it's early, but this isn't really a Christmas present, so I thought I'd break tradition a little. There's another card coming tomorrow with a better message, too. Look under the right side. I love you.\"\n\nHe'd perfectly anticipated her reaction to the less than stunning message by promising another card, which made her grin. When she lifted the corner of the paper leaf on the right side, she saw that it was held down with little bits of sticky tack, so she could lift it without tearing up the card. Inside was a folded sheet of paper, and she could tell that it was something printed off a computer.\n\nCuriosity piqued, she put the card down and unfolded the paper. A moment later, she sucked in a great gasp of stunned surprise when she saw the printed confirmation page for a Hawaiian cruise.\n\nHer phone was in hand and the number dialed almost before she knew what she was doing, and she didn't even give him a chance to say hello before letting out a squeal of delight. \"Oh my god! Hawaii!\"\n\nHe laughed. \"Did you even see the dates?\"\n\nShe homed in on the page and gasped again. \"Two weeks? Next month? Oh my god, I love you so much!\"\n\nStill chuckling, he said, \"Glad you like it. Did you open the box yet?\"\n\n\"No.\" Gina put down the paper and picked up the box. \"Hang on.\"\n\n\"No, let me wrap things up here, and you unwrap things there. You can tell me what you think when I get home in just a little bit. Deal?\"\n\n\"Why did you have me open the card first? Whatever's in the box can't possibly compare to that.\"\n\n\"You sure? Just hang up and open it.\"\n\nShe wanted to argue, wondering why he was so insistent upon her hanging up first, but decided to let it slide. \"Okay. I love you.\"\n\n\"Love you too. Bye, baby.\"\n\nVisions of sunning herself on a Hawaiian beach still running through her head, she hung up the phone and went to work on the wrapping paper. Within the festive wrap was another layer of plain brown paper, and a spot where a mailing label had obviously been removed. The paper surrendered, finally letting her see what was inside.\n\nTo anyone else, the vibrating butt plug would have been incredibly tacky. To Gina, it was perhaps the sweetest, most thoughtful thing her husband could have possibly given her. Her first boyfriend had introduced her to backdoor play, and she'd quickly discovered that it gave her intense orgasms. Brian, unfortunately, wasn't turned on by the thought. She'd stopped suggesting it when they were still dating, due to the awkward moments it had caused when she did.\n\nFor him to think enough of her to do the research and spend the money for one of the most expensive models spoke volumes. Her heart fluttering and her pussy tingling, she slid it out of the box. The power pack took C batteries, promising lots of power, and rings of beads in the shaft of the toy offered more than just vibration. Now she understood why he'd put a pack of C batteries in the junk drawer a couple of weeks ago, when nothing in the house took them.\n\nThough soaking wet at the thought of sliding the toy into her ass, she slid it back into the box instead. Unsure that she could stop once she started, she didn't want him to come home to find her with it buried in her ass and the Christmas feast half ready. She did put batteries in the power pack before tucking it away in her panty drawer, though.\n\nWith every little wisp of anger at him gone, Gina hummed Christmas carols as she put the finishing touches on the buffet.\n\n****\n\nKnowing the sound of his car, as soon as she heard it pull into the drive, Gina hurried to a mirror and made sure her blonde hair and makeup were perfect. The cheeses, Chex mix, and other snacks were spread out on the coffee table, ready for them to eat their fill as they watched Christmas specials, building up toward opening the first gift before going to bed.\n\nIf she had her way, sleep wasn't even remotely the plan once they got there.\n\nShe'd staged everything perfectly and carefully chosen the spot where she would stand to greet him when he came in the door. Her rehearsed flourish and greeting went straight out the window when Santa Claus stepped in the door.\n\n\"Ho, ho, ho! Merry Christmas,\" he boomed in a fair Santa imitation.\n\nUnlike her first visit from the jolly old elf, she instantly recognized Brian's voice. This Santa didn't carry a sack, but instead a small, wrapped box of a size that made her heart skip a beat. She knew a jewelry box when she saw one, and that helped her forget the effort she'd wasted in planning her greeting.\n\nShe asked, \"Since when does Santa come in the front door?\"\n\n\"Ho, ho, ho! Only on special occasions,\" he answered. Twisting the box in his fingers as he approached, he asked, \"Have you been a good girl this year?\"\n\nShe answered in a high-pitched, almost sing-song voice, \"I've been a very good girl.\" Nipples hardening, she was a little shocked that this was turning her on for some reason.\n\n\"Good girls deserve presents, don't they?\"\n\n\"Uh huh, Santa. Do you have a present for me?\"\n\n\"Indeed I do.\" He finally handed over the box.\n\nPartially playing the little girl role that was making her pussy tingle, and partially excited by the prospect of what was in the box, she shredded the wrapping paper in short order. She opened the box inside, and nearly swooned.\n\nThe necklace was one that she'd spent several moon-eyed minutes looking at while they were Christmas shopping, even though she knew it was outside their budget. Diamonds adorned the entwined gold hearts, sparkling in the multicolored lights strung about the room.\n\nFlabbergasted, she stammered, \"H-how?\"\n\n\"Why, Santa can do anything. I did hear that someone has good news about a promotion, though. It seems all those long hours have finally paid off.\"\n\n\"Oh my god,\" Gina cried out, throwing her arms around his neck.\n\nHe hugged her close, and she could feel the padding beneath his furry Santa suit. She kissed him, giggling when the fake beard tickled her face.\n\n\"I think Santa likes this better than milk and cookies,\" he said when their lips parted, his gloved hands sliding down to her bottom.\n\nArousal surged within her. Chex mix and It's a Wonderful Life could wait. She slipped back into her little girl voice, pressing her body tight against him. \"Help me put on my present, Santa.\"\n\nHe took the box and slipped in behind her. His Santa gloves soon proved a hindrance, so he tossed them aside on the couch. The chain slipped around her neck and the entwined hearts settled just above her cleavage, revealed by her new red dress. He kissed her neck, setting off a shiver that had nothing to do with his beard tickling her.\n\nGina spun around, seeking out his lips. At the same time, her hand went on a quest of its own. When her fingers slipped over his erection tenting the red fabric, she pulled back from the kiss. \"Why Santa, did you bring me a big, thick, yummy candy cane too?\"\n\n\"Mmm... Gina.\" He slipped out of character as she caressed his swollen manhood.\n\n\"I have some milk and cookies for you, Santa. Come get them,\" she teased, and then sauntered off to the bedroom, her hips swaying. She could hear the bells attached to his coat jingling and his heavy black boots thumping on the hardwood floor as he followed.\n\nWhen she turned around at the edge of the bed, she saw him reaching toward his beard. For just a moment, she too slipped out of character. There was something extremely naughty and exhilarating about the thought of him in a Santa suit. \"Leave it on.\"\n\n\"Really?\"\n\nShe nodded. Before he could say anything, she unveiled a surprise that was actually planned for much later in the evening. Reaching behind her back, she pulled down the zipper of her tight red dress. Brian's eyes widened beneath the curly white bangs hanging out from under his hat.\n\nGina slipped out of her dress slowly &mdash; sensually &mdash; revealing only a little bit of her body at a time. First one shoulder, then the other. The dress slipped lower, unveiling the surprise of her fur-trimmed red bra, adorned with suggestive sprigs of mistletoe.\n\nThat inspired Santa to shift the velvet tent that had risen in his pants.\n\nLower still, the dress slid past her hips. Her panties matched the bra, right down to the strategically placed mistletoe. With the material now past her curves, Gina let the dress slide down her legs and stepped out of it, showing off her red stockings with glittering green sequins hidden amongst the lacy band around her thighs.\n\nShe cupped her breasts in her hands. \"Come get your milk, Santa.\"\n\nHe didn't need even that much encouragement. Bells jingling, he crossed the two steps remaining between them and replaced her hand with his own.\n\n\"Mmm, Santa,\" she moaned as he kissed the upper swell of her breasts, each in turn. The beard's tickle sent a chill shooting up her spine and she moaned again.\n\nA hungry growl escaped him as he tugged down her bra, freeing her breasts. His kisses on her erect nipples caused her to gasp, arching her back and thrusting the firm globes against his lips.\n\n\"You'll need to suck them if you want your milk, Santa.\"\n\nHe slipped back into his Santa voice. \"Aren't you a nicely naughty little elf.\" He'd barely finished when he sucked her right nipple between his lips, rolling it with his tongue as he sucked.\n\n\"Santa's little ho, ho, ho,\" she responded in girlish tones. Reaching behind her back to unclasp the bra thrust her breasts against his mouth again. The garment fell to the floor between them a few seconds later.\n\nHer husband's ministrations were making her as wet as she'd ever been, lips and beard both tantalizing her breasts. She caressed the soft hat atop his head, reaching down with the other hand to run her fingertips over his hard cock.\n\nAching to be touched after less than a minute, she whispered near his ear. \"Would Santa like to taste his cookie now?\"\n\nHe answered not with words, but action. After a final, hard suck that pulled her nipple out and let it snap back, setting her breast to jiggling, he turned her back toward the bed. She put her hands behind her as he leaned forward, pushing her toward the mattress.\n\nThe fur on his cuffs tickling her thighs, he slipped his fingers beneath the elastic of her panties. Apparently eager, he jerked them down, revealing her smooth-shaven sex.\n\n\"Mmm. You must be hungry, Santa.\"\n\n\"Very,\" he responded as he pulled her panties down her legs, taking the top of her stockings with them for an inch or two.\n\nEven though it worried her to push so far, so fast, she couldn't resist the urge that came over her. \"Santa, can I play with my new toy while you're eating your cookie?\"\n\nIn the process of working her panties past her red pumps, he nodded, making the puffball on the end of his hat swing back and forth. Once he had her panties in hand, he rubbed his finger over the crotch. \"My, this is a moist cookie.\"\n\nTrying not to wince at the word moist, which made her skin crawl for some reason, she scooted toward the headboard. Once there, she pulled out her new toy, and a bottle of lube. She could feel a fresh surge of wetness as soon as she had the toy in hand, and wasted no time in squeezing a generous dollop of lube over it.\n\nBrian sat down to pull off his boots. To her delight, he watched her the whole time she was smearing the lube on the plug. She'd expected him to ignore it as best he could, as he'd never shown any interest before. Having him watch only excited her all the more, and she couldn't wait to have it buried in her ass.\n\nWhen she reclined on the bed, lifting her legs and pulling her knees back toward her chest, he actually scooted in closer, stroking his fingers over her buttocks. He didn't shy away when she squeezed out a drizzle over the iris of her ass, or when she pushed a lubricated finger into her forbidden entrance.\n\nHis fingers had moved to tickle her clit by the time she had the toy in hand, and he gave his cock a squeeze through the Santa pants. Almost in disbelief at his unexpected interest, she pressed the tip of the toy against the tight, puckered hole, and then inside.\n\nA long, deep groan rumbled in her throat as the thick toy stretched her ass, popping inside. The even thicker base stretched her further, until she clamped down over the T-shaped handle. It had been a while since she'd played with her bottom even while alone, so the urge to push and the sense of fullness was intense. The toy felt incredible, and she hadn't even turned it on yet.\n\nAs she reached for the power pack, Brian leaned over her and pushed her knees apart. His dangling Santa beard reached her folds before his lips, but not by much.\n\nGina squealed as the toy hummed to life in her ass and his tongue went to work on her pussy. She looked down over her rapidly rising and falling breasts, letting out a moaning laugh at the sight of Santa Claus devouring her. The little puffball on the end of his hat swung back and forth like a pendulum. His false white curls bounced as his lips and tongue roved over every inch of her. She pushed the control slider a little higher and gasped, snapping her eyes shut as the vibrations rumbled through her wonderfully full ass.",
        "The sensation of the white hairs on her thighs, labia, and buttocks was unique, somewhere between an itch and a tickle. Brian's tongue flicked over her, darting to her clit to cause sharp spikes of pleasure. In less than a minute, she felt the hot swelling of an approaching climax building behind her mound.\n\nWith her last fully conscious thought, she pushed the slider to max at the same moment as Brian slipped two fingers into her canal and curled them into her G-spot.\n\nGina's back arched up off the bed and she yelped as her entire body came alive with sexual energy. Brian locked his lips over her clit, sucking and rolling the swollen bud with his tongue. His fingers teased her G-spot with practiced pressure. The vibrations from the toy were so powerful that they made her buttocks quiver. Inarticulate cries of ecstasy tumbled from her lips between gasps for breath.\n\nThen, she came.\n\nLater, he would tell her that her scream was so loud and high-pitched that he had half expected the windows to shatter &mdash; and that was despite her thighs clamping down around his ears with vise-like pressure. Her vision went dark at the edges, and otherwise danced with multi-colored spots. She thrashed on the bed, hair whipping to cover her face and sticking due to a sheen of sweat covering her entire body. Clawed fingers dug into the back of his head and the bedclothes. The orgasm went on and on and on, until what dim awareness she retained made her wonder if she was going to fly apart.\n\nAt some point, either she or Brian turned off the toy, which finally let her catch her breath. She slowly settled down from the heights of beautiful agony, gripped by violent aftershocks that contorted her muscles and made her cry out despite the dry, hoarse feeling in her throat.\n\n\"Damn, baby,\" Brian said as the last few flutters of lingering climax made her twitch and whimper.\n\nShe forced her eyes open to see him sitting on the edge of the bed with a glass of water. His fake beard was hanging at an awkward angle and soaked in her juices. The hat was missing from his head, having somehow ended up under her back. He was stroking his cock through the pants, his expression a mixture of amusement and arousal.\n\nStill unable to muster up the breath or brain power for words, she lifted a trembling hand for the glass.\n\nHe sat the glass down on the nightstand, scooting in next to her and sliding an arm beneath her back. Enough of her senses had returned for her to realize that the plug was still buried in her ass.\n\n\"H-hang on,\" she whimpered, and reached for the handle. Pulling it out set off a shockwave that caused her to lurch and cry out again.\n\nEventually, he was able to help her sit up. After a few false starts and a lot of coughing, she managed to drink, soothing her sore throat. He sat next to her, one arm behind her back and the other slowly stroking his cock.\n\n\"My god, Brian. That was...\" She couldn't find the words, and instead let out a long, satisfied moan.\n\n\"You really came unglued.\"\n\n\"Thank you.\" She closed her eyes and moaned again. \"Best. Christmas. Ever.\"\n\nHe chuckled, the fingers of the hand behind her back creeping around to caress the side of her breast. \"Not even Christmas yet,\" he hinted.\n\nGina shivered as her body reacted to his words and his touch. She glanced down to where his hardness tented the red velvet pants, and her hand replaced his.\n\nHe was as hard as she'd ever felt him &mdash; like a throbbing steel bar begging to be buried deep inside her. Her sweat dampened skin broke out in goose bumps, and she tugged at the elastic waistband.\n\nHis arm moved out from behind her, and he braced it beneath him to lift his hips. Between the two of them, they pulled down the pants, revealing an even more pronounced tent in the boxers beneath.\n\nWhile he wriggled and kicked at the pants entangling his legs, Gina jerked down the boxers and hooked the elastic beneath his balls. He looked just as hard as he felt, the head swollen and purple, bouncing as the organ throbbed. A quick twist and a scoot of her bottom let her lean down to bathe it with a broad stroke of her tongue from root to tip.\n\nHe grunted, squeezing her breast as she swirled her tongue around the head, looking up into his eyes. A glistening drop welled up from the tip, and she engulfed his cockhead between her lips, moaning as the burst of flavor excited her taste buds.\n\nEyes locked with his, she suckled and teased the swollen helmet. He pinched her nipple, his legs still kicking at the pants until he was free. She let the head slip from her lips with a wet pop, and then turned her head, dipping it down to his balls.\n\n\"Ah, fuck,\" he growled as she lapped the orbs, supported by the elastic of his boxers. He kept them as smoothly shaven as her sex, and she loved to trace every wrinkle, crevice, and contour, knowing how it drove him crazy.\n\nHe grasped her arm, pulling upward, and she smiled as she gave the ropy cord between his balls a final swipe before letting him pull her up. Unexpectedly, he didn't draw her mouth toward his cock, but instead pushed. As she turned to lie down on the bed, he wormed out of his boxers, rising up onto his knees.\n\nShe parted her legs wide, happy to skip sucking him and have her aching pussy filled.\n\nSanta on top and her gorgeous, rock-hard husband below, he moved between her legs. She stroked her fingers along her nether lips &mdash; an open invitation &mdash; but he leaned to the side instead, grabbing the bottle of lube from her nightstand.\n\nShe was soaking wet, and knew he could see that. As he squeezed lube into his palm, she begged, \"I need it. Give it to me,\" and parted her nether lips wide.\n\nHe tossed the bottle down and wrapped his hand around his cock, smearing it with lube. Then, a mischievous grin spread across his face.\n\n\"Since when does Santa come in the front door?\"\n\nShe gasped in stunned, excited disbelief as he wiped the remaining lube off on his Santa coat. He then scooted closer, and pushed her knees up and out. Her heart raced as she felt the slippery tip press against her ass.\n\nHe gripped his cock, and she curled her toes. Then with a push, up the chimney he rose.\n\nGina growled as his big, hard cock violated her ass. Already stretched and well-lubed by the toy, he sank to fully half his length inside her before an involuntary clench of her muscles trapped him in place and she let out a sharp, \"Oh!\"\n\n\"Fuck!\" He exclaimed as he swatted a white curl out of his eyes. \"So fucking tight.\"\n\n\"S-so big. So good. Easy,\" she pleaded as she tried to relax.\n\nThe pressure and fullness made her head spin. It had been a long time since she'd had a real, throbbing cock in her ass. She flicked her clit, panting for breath, and focused her will on relaxing the tight muscles holding him back. She looked up to see his gaze locked on her fingers teasing her pussy.\n\n\"You like watching?\" she asked between rapid breaths.\n\nHe nodded, white curls bouncing.\n\nShe rubbed faster &mdash; wet, squishy sounds reaching her ears as her labia slipped over each other, well lubricated with her juices. He smiled, and she could feel him throbbing even harder in her ass. Her willpower finally won out as he watched her masturbate.\n\n\"More,\" she said in an explosion of breath, and then thrust two fingers deep into her needy canal.\n\nHe let out a growling grunt as he pushed again, his mustache fluttering in the puff of air. Inch after inch, his cock sank deeper, until finally, his balls settled against her.\n\n\"Fuck yeah,\" Gina cried out. \"Yes, baby. Fuck my ass.\"\n\nHe grunted again as he pulled back, and then rocked his hips forward. He fit her pussy like a matching puzzle piece, but his cock was even more wonderful in her ass. Heat joined the pressure and urge to push as his hips worked in slow motion, stretching her, and pushing balls deep with every thrust.\n\nAnimal sounds that she could barely believe were passing her lips emerged with every pump. His groans and the sound of her fingers flashing over her pussy added to the symphony. She was tumbling fast and headlong toward an explosion, blissfully full for the first time in so long. The wicked itch in her clit and behind her mound spiked with every deep penetration until she teetered on the brink.\n\nHer fingers a blur, Gina's pants suddenly transformed into a broken gasp. The moment her lungs were full, shockwaves of released energy shot through her and she screamed in release. The orgasm rippled through her body, to the top of her head and down to her tightly curled toes. It crashed back into her quivering pussy and her cock-filled ass, only to shoot back to her extremities once more. \n\nHer climax claimed her without mercy, refusing to let her go. She could feel her juices dripping down her pussy lips, and every contour of his cock, trapped tight in her ass. When one electric pulse caused her muscles to relax for a moment, he pulled free. The shock of the head popping free and the rush of cool air caused her to scream again, her back arching high off the bed.\n\nAs her breath ran out and the scream trailed off into a squeak, she went limp, collapsing to the bed with a thump. Gasping for breath, she quivered and twitched through the aftershocks, dimly hearing him ask if she was okay over the sound of her heartbeat pounding in her ears.\n\n\"Oh... B-baby,\" she whispered in a moment when she could fill her lungs with enough air to speak.\n\n\"You okay?\" he asked again.\n\nShe gave a slow, uncoordinated nod. \"Came so hard.\"\n\n\"Felt like you were about to pinch it off,\" he said, and then chuckled.\n\nShe opened her eyes, and saw that he was still hard. \"You... You didn't?\"\n\n\"Close,\" he answered, wiping at his brow, which was beaded with sweat.\n\nShe swallowed hard, and then rolled over. Though she puckered at the thought and a whimper escaped her, she pulled her knees under her, lifting her butt high into the air.\n\n\"I want you to. More lube, though.\"\n\nThe eagerness with which he snatched up the lube made her eyes go wide. I think I created a monster.\n\nShe yelped as the cool liquid drizzled into the hot flesh of her gaped ass. After the initial shock, it was soothing, and she let out a moan. The bottle thumped back to the covers, and his fingers dug into her hips. Within the space of a breath, the hard invader was inside her once more.\n\n\"Do it. Fuck me. Come in my ass.\"\n\nHe took her words to heart. His cock pushed hard and fast into her ass, balls slapping against her when it reached bottom. The next thrust was even faster. Her breasts began to swing and she dropped down onto one elbow so she could reach her clit with the other hand.\n\nSlap, slap, slap. Their bodies collided, his cock sinking balls deep with every thrust, then pulling back almost to the tip before plunging in again. Despite the increasing burn of her abused ass, she felt her clit tingling beneath her fingers.\n\n\"Fuck yeah. Close,\" he growled as he slammed his cock into her.\n\n\"Come in my ass baby!\" Gina squealed, orgasm swelling within her.\n\nHe roared as his cock jammed into her ass one final time, the power of the thrust knocking her arm out from under her and landing her face down in the covers. She felt the hard spurt of his cock erupting, spraying into her depths. Having far more nerve endings than her pussy, she could actually feel the hot cream filling her ass, and it set her off.\n\nGina screamed into the mattress as she came, ass clenching around his throbbing, spurting manhood. He leaned over her, breathing hard, his furry velvet coat hot against her back.\n\n\"I f-feel it baby. So hot. So hot in my ass.\"\n\nHer words elicited a groan, and he twitched, causing her to cry out from the sudden stimulation. She knew she was going to regret it later, but for now, she reveled in the afterglow of two wonderful orgasms and the hot pool of cum surrounding his softening organ.\n\n\"I'm... I'm burning up in this. And gotta move.\"\n\nTorn between never wanting him to leave and needing relief, she muttered, \"It's okay.\"\n\nShe yelped as he pulled free, followed immediately by a river of cum running down to drip from her pussy lips. Her knees slipped from under her, and she sank to the bed, butt burning, but her pussy still tingling and her heart soaring.\n\n****\n\nQuite some time later, Gina sat on the couch, still naked, next to her equally nude husband, munching on warm cheese topping a cracker.\n\nShe finally asked the question that had been nagging her since she'd regained enough of her wits to think of it. \"So, where did that come from? You never seemed interested before.\"\n\nHe shrugged. \"I don't know. I was thinking about getting you the toy, and the more I looked at them, trying to figure out what you would like, the more I thought about it. Next thing I know, I'm getting hard every time I think about your butt.\"\n\n\"Mmm,\" she moaned as she snuggled up next to him. \"Well, I'm glad.\" A sharp sting caused her to wince. \"My poor butt hurts.\"\n\n\"Sorry.\"\n\n\"Don't be. It was worth it. I just haven't had it for a while. Once I'm used to it again... Mmm!\"\n\n\"How long do you think?\"\n\nMouth dropping open in surprise, she gave him a playful swat. \"Perve.\"\n\n\"Can't help it.\"\n\nEven though her butt was burning, thinking about it was still making her pussy tingle. In her peripheral vision, she saw his manhood twitch. She wasn't the only one.\n\nLeaning in close, she whispered into his ear, \"They say Santa only comes once a year. Want to prove them wrong?\"\n\n\"Ho. Ho. Ho,\" he answered, dragging out each word, and then leaned in for a hungry kiss.\n\nA touch of her breast, on that night of soft snow, gave rise to wetness, and hardness below. The neighbors heard them exclaim, deep into the night. 'Twas a merry Christmas for all, and an incredible night.\n\n****\n\nReader votes are what determine the winners of the contests, so I'd appreciate yours. Only vote once, though. If you like it that much, leave me a comment, favorite the story, or favorite me as an author LOL That's worth a lot more to me than an extra vote that will just get removed by Literotica anyway. Reader feedback is the fuel that keeps me writing, and all of the above do the trick."
    ],
    "authorname": "RejectReality",
    "tags": [
        "santa",
        "butt plug",
        "blonde",
        "christmas",
        "eat pussy",
        "roleplay",
        "hung",
        "husband",
        "big cock",
        "ass cum"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/up-the-chimney"
}