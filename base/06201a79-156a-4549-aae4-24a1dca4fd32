{
    "title": "The Ensigns of Detection Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n*****\n\nPart 8 - Scene of the Crime \n\nFriday morning, November 20th. Getting to the home of Dr. Laramie Wilkins, I was stopped at the outer cordon by Patrolman Culver.\n\n\"Troy, Commander, TCPD badge 1-6-4-0.\" I said.\n\n\"Yes sir.\" he said, then said \"Sir?\" I stopped and looked back at him.\n\n\"Sir, the new Chief doesn't have a badge yet.\" said Culver. \"I... I let him through, since Detective Cummings and Detective Nash vouched for him.\"\n\n\"That's okay.\" I said. \"As long as you did your job and didn't just let him walk past.\"\n\n\"Oh, no sir.\" said Culver. \"I just wondered what to do in situations like that.\"\n\n\"Fortunately, they happen rarely. Good job, carry on.\" I said.\n\nAs I got to the front door, I heard behind me \"Ross, Captain, TCPD badge 1-0-6-9\". Turning around, I saw my platinum-haired partner, wearing her light blue uniform shirt today, long sleeves, leather sash belt, metallic Captain bars instead of soft shoulderboards, which was correct. No jacket, though. Quelle suprise.\n\nI waited for her and she came up to me. \"Good morning, Captain.\" I said. \"No workout at the gym?\"\n\n\"I worked out at my gym this morning.\" Cindy said. \"Since you're not around for me to beat up on, I worked out with Melina.\"\n\n\"How is she with crowbars?\" I asked.\n\n\"Better than you want to know.\" Cindy replied. \"Good thing you didn't have any fights when you were married.\"\n\n\"I daresay. I didn't even have a crowbar then.\" I said. Of course, the red crowbar was in my hands now as we went inside.\n\n\"Back room, sir, ma'am.\" said Patrolman Johnson as I looked around the living room. A Crime Lab team was working on two walls. Cindy and I went back into what looked like a den study, with windows to the backyard.\n\n\"Ah, Commander, Captain,\" said the Chief, who was near the doorway. \"Glad you could join us.\" He swept his hand towards the scene.\n\nIt was not clear if Dr. Laramie Wilkins was a very light-skinned black man, or a dark-skinned white man. But what was clear was that he was a dead man. He was lying near the chair on his desk, as if he'd shot himself and had fallen out of it. The bullet had entered the right side of his head, exited the left, and traveled towards the front of the house. Indeed, only the brick of the living room wall, that was the outside front wall of the house, had stopped the .40 S&W bullet.\n\nA Beretta Model 96, which was .40 S&W in caliber, was lying on the floor near his right side. The Model 96 Brigadier version just happened to be my service weapon, so I was very familiar with it.\n\nJoanne Cummings and Martin Nash were examining the body. I did not approach it, but asked the Chief \"Was he married?\"\n\n\"Er, yes, he was.\" said the Chief, perhaps surprised at my first question. \"His wife is in the den, or whatever that room is, near the kitchen. Her pastor is with him. Commander, I did not fully realize that Councilman Westboro was a man of the Cloth.\" \n\n\"Yes, he is.\" I said. \"Head Pastor of First Baptist Church. Excuse me a moment.\" I went into the other room, where a sobbing middle-aged woman was sitting next to Pastor Westboro.\n\n\"Ma'am?\" I said, kneeling down in front of her. \"Are you Mrs. Wilkins?\" she just nodded. \"Hello, Pastor.\" I said to Westboro.\n\n\"Hello, Commander.\" Westboro said. \"Abby, this is Commander Donald Troy of the Police Department, their very best officer.\"\n\n\"I'm sorry for your loss, ma'am.\" I said. \"May I ask you a couple of questions.\"\n\n\"Yes, of course.\" Abby Wilkins said. She was a white woman, medium height, brown hair, beginning to put on weight but not obese yet.\n\n\"Did your husband seem upset or agitated in the last few days, weeks, or even months?\"\n\n\"No sir.\" she said. \"He was always what he was.\"\n\n\"And how would you describe that?\" I asked, taking my time with her and letting the questions lead to the answers.\n\n\"He... he was a caring man, but he was very much into his work.\" she said. \"He'd spend long hours, sometimes all night, in his labs, working on things. When he was here, he was usually still working on research paperwork. We would sit and watch TV, but he'd have those papers in his lap...\"\n\n\"I see.\" I said. \"So he didn't show any signs of distress, of agitation recently?\"\n\n\"No, not that I could tell. Everything was fine.\" she said.\n\n\"Did he receive any strange phone calls recently, or have visitors you didn't know?\" I asked.\n\n\"No sir.\" she said. \"That was the one thing he demanded... he did not permit his staff to call him at home, unless it was a dire emergency. The only time I remember him getting a call recently was when Mr. Donolan was killed in that explosion at the plant.\"\n\n\"Ah yes.\" I said. \"Thank you for talking with me. Other officers will have to talk with you as well, and I'd appreciate you giving them any information you can. Pastor, can I speak with you for a moment?\"\n\n\"Of course.\" he said. \"Abby, I'll be back in one moment.\" We went to the front room.\n\n\"Pastor,\" I asked quietly, my voice barely above a whisper, \"were the Wilkinses regular attendees of your church?\"\n\n\"Yes.\" he said, also quietly, as he looked at me through his spectacles over his beak nose, nearly as tall as myself. \"She was in church every Sunday. He would come about half the time. Sometimes two or three Sundays in a row, then not be there for two or there.\"\n\n\"I see.\" I said. \"Are you aware of any issues he might have had, any problems?\"\n\n\"No, can't say that I was.\" Westboro replied.\n\n\"How about their marriage?\" I asked. \"I don't expect you to violate the sanctity of pastor-flock relations, but were there any issues that you can tell me about?\"\n\n\"No, there were no problems of which I was aware, and neither ever came to me for counseling.\" he said. \"I'm sure you've gleaned from her comments that she might've been a bit lonely, as he was absorbed in his work. But they seemed to be a loving couple and happy enough together.\"\n\n\"I see.\" I said. \"I appreciate your time, Pastor. If she tells you anything that you can tell us, and that can help us, I'd appreciate you letting us know.\"\n\n\"Of course, Commander.\" said the Pastor. \"I will pray for your success, though I believe this appears to be a simple suicide. Please let me know when your work is done, so that I may make the proper arrangements for him.\"\n\n\"Certainly, Pastor.\" I said. \"Oh! Sorry, I forgot to ask: did Mrs. Wilkins call you, or did one of the first responders?\"\n\n\"She called me.\" said Pastor Westboro. \"I told her that I would come immediately, but that she should call the Police right away.\"\n\n\"Ah.\" I said. \"Thank you, Pastor.\" I took my leave of Westboro and went back into the back room, where I heard Chief Moynahan teaching his Detectives.\n\n\"So what you want to do, Ms. Cummings,\" said Moynahan, \"is treat this first as a homicide, and work back to suicide. That is why the Crime Lab is treating this as a homicide and collecting evidence that is legally defensible in Court, and it's why we will collect personal records and other data, and look for anomalies as if it werrrre a homicide.\"\n\nGood advice, I thought to myself. This man knows a lot of stuff.\n\n\"Ms. Cummings, why don't you give the Commander, Captain and MCD Lieutenant your report?\" said the Chief.\n\n\"Sure, sir.\" Joanne said. \"The firearm only had Dr. Wilkins's prints on them. His prints are on file with the FBI as he holds a Top Secret clearance. He is right-handed, and it appears he put the gun to the right side of his head and fired it. He would've been facing left, as we look at the desk here, so the bullet traveled from the back of the house to the front. He fell forward, the gun dropping out of his hand and landing at his side. Everything appears consistent, sir.\"\n\n\"So what happened, chronologically speaking?\" I asked. \"How did the Police find out about this?\n\n\"The Third Precinct Duty Desk got the 9-1-1 call just after 5:00am, sir.\" said Joanne. \"It was his wife who called it in, from her cellphone. Lt. Perlman called me and said I would be leading the investigation of it, so I came right over. He was already dead, so I did not call for an ambulance.\"\n\n\"Have you talked with the wife yet?\" I asked.\n\n\"Not extensively, sir.\" Joanne said. \"Sergeant Irwin talked to her right after he got here. He was first to arrive, and I was right behind him. He managed to get the story of what happened out of her, but she was pretty upset.\"\n\n\"I just spoke with her, and will be giving you a full writeup of my conversation.\" I said. \"But you should talk with her first, and we'll see how our notes compare. Oh... is that his cellphone I see on the desk?\"\n\n\"Yes sir.\" said Joanne. \"We bagged it and left it in place. Only his fingerprints were on it.\"\n\n\"Where's the cellphone charger?\" I asked.\n\n\"Uh...\" Joanne said, then stopped. \"Uh, I don't know, sir. I haven't seen one.\"\n\n\"Look around the house for one.\" I said. \"Ask his wife if he charged his phone at the desk or upstairs in the bedroom, or perhaps at work.\"\n\n\"No charger on or around the desk.\" said Martin Nash, who was looking for one. \"Only the lamp plugged into the wall socket.\" He then pressed the phone through the plastic. \"Says 50% charged, sir.\" Nash had the photographer snap a photo of that. He was learning that when I asked a question, however strange, it could be... important.\n\n\"Anything else, Commander?\" asked the Chief.\n\n\"Go around the horn first.\" I said, halfway in a reverie, knowing I was missing something. \"I'm still observing.\"\n\n\"Lieutenant Perlman, do you have any observations?\" asked the Chief.\n\n\"Yes, sir.\" said Tanya, her voice far more cheerful than appropriate for this grim scene. \"Statistically, suicides most often occur around 5:00am. We'll have to go through his papers, his emails and such, and see if he left a suicide note anywhere; we haven't found one yet.\" We all nodded.\n\nTanya continued: \"We're also going to have to touch the political sphere, Chief... we're going to have to get into what he was doing at BigPharmaCorp, ask his employees what his state of mind was, if he was acting unusually, all that good stuff.\"\n\n\"I'll be glad to run interference for you on that, as will the Sheriff, I'm sure.\" said Moynahan. \"And if that doesn't work, God help them when I unleash the Iron Crowbar on them.\" I smiled briefly at that comment, knowing that the Chief loved having a new pitbull to sic on people...\n\n\"Yes sir.\" said Tanya. \"Everything else that I can see would appear to line up: the brain spatter is aligned with the direction of the shot from the desk to the bullet in the front wall. That means that it was him, or someone had to stand behind him, put the gun to the right side of his head, then fire. That would be awkward for the shooter's wrist, pointing the gun sideways.\"\n\nTanya stood in front of us, her hand in an \"L\" like a gun in front of her abdomen, her right arm straight out but the hand pointing left. \"The recoil of a 40-cal on the wrist at that angle would hurt, maybe even the gun flings out towards the desk.\"\n\nTanya continued: \"And that leads to something else I was about to bring up: if he were gripping the gun, he'd have a death grip on it, pun not intended. He'd squeeze the trigger to fire, further tightening his grip. So I was going to suggest that the gun should be in his hand or near it, not down by his hip.\"\n\n\"You're right.\" I said, having observed the same thing. \"The scene here suggests his grip was light, and that the gun was able to come out of his hand as he fell. It's not impossible that what we are seeing couldn't happen, but it's a... 'strangeness', I would say.\" \n\n\"There's that word again!\" Tanya and Cindy said in unison. They broke out in giggles as Your Iron Crowbar gave them a 'look'. And after a second to realize what they were referring to, a red crowbar was waved in their general direction, making Joanne and the Chief chuckle.\n\n\"Look for marks on the desk, and maybe on the gun, too.\" said Tanya to the Crime Lab team.\n\n\"Ma'am,\" said J.R. Barnes after an examination of the desk, \"you're right. There's a big scratch on the desk here, fresh. And the hammer of the pistol has something in the grooves. I'll take samples and analyze, but I'll bet you're right.\"\n\n\"Yep.\" I said. \"Fired the gun, the barrel flung upwards, spinning out of the hand, the hammer hits the desk, gouges it. Perp puts the gun by the body, maybe putting it in Dr. Wilkins's hand first. Excellent work, Lieutenant Perlman!\" I gave her a fist bump.\n\n\"She should be a C.S.I. in our Crime Lab.\" said Moynahan, with an evil grin on his face. Tanya turned and just glared at him, then said \"Don't even joke... uh, sir.\" Everyone laughed, including the Chief.\n\n\"Heh, heh, heh, heh. Anything else? Commander?\" asked the Chief.\n\n\"I have one question.\" said Nash. \"Once the shot was fired, Mrs. Wilkins would've had to have heard it and would come down... as it appears she actually did. Does this guy have that much time?\"\n\n\"Good question.\" Cindy said. \"Something to check out.\"\n\n\"Detective Cummings,\" I ordered, \"like we said earlier, find out if Dr. Wilkins has any other cellphones. If that one is a BigPharmaCorp-issued phone, see if he has another personal one, or if his wife's is their only personal phone. Of course, get the cellphone records for both their phones as well as any others you find. If BigPharmaCorp gives you grief, we'll get a warrant faster than you can say 'Cubbard'.\" I was referring to the current CEO of BigPharmaCorp.\n\nI summed up: \"Like the Chief said, we'll be treating this as a homicide first, and work back towards suicide.\"\n\nA moment later, I went up to Joanne and said, very quietly, \"One more thing: I want to know the order of phone calls from Mrs. Wilkins's cell phone, including the one to Pastor Westboro.\"\n\n\"I'll check,\" said Joanne, \"but I think Sgt. Irwin said she called him right before calling 9-1-1.\"\n\n\"Fine.\" I said. \"If that is not the case, I want to know about it.\"\n\nAs I gave the scene one final look-over, I shook my head. Cindy noticed.\n\n\"You okay, Don? Is something wrong?\" she asked quietly.\n\n\"I don't know.\" I said. \"I don't know. But something is just not right about this...\"\n\nPart 9 - Parallel Investigations \n\nAt 9:30am, I was at the County Jail. I had been called by A.D.A. Franklin Washington. If he and his brother, TCPD Detective Theo Washington, were standing together, one could see they were not identical twins. But if they were apart, one would swear they were twins. Franklin did not quite have his brother's smile, but they were both 'movie star handsome' black men.\n\n\"What's up, Franklin?\" I asked as we sat in the 3d Precinct Conference Room. It was about the size of the Chief's conference room at Headquarters.\n\n\"Just wanted to give you a heads-up.\" said Franklin. \"James and Susan Douglas's attorneys have been fighting us hard. They did not waive the preliminary hearing, and challenged everything during that hearing. The judge gave us three extra days to prepare for it, seeing that it was so unusual.\"\n\n\"Okay, so what's the deal?\"\n\n\"We go back to Court at 1:00pm.\" said Franklin. \"I don't mean for this to sound like an excuse, but A.D.A. Stiles was handling this and then was abducted, and I didn't pick up the ball fast enough. We're going to ask for more time due to the Stiles incident, but I don't think we'll get it.\"\n\n\"Why not?\" I asked.\n\n\"Because the case was assigned to Judge Harry 'Spud' Nance.\" said Franklin.\n\nI groaned. Judge J.B. Stone had been a bad judge, and likely dirty. Nance was barely better. He delighted in shooting down our cases, especially drug cases, and he was the one that would give low bails that allowed payment and skipping Town after we'd worked our asses off to put the perps in jail.\n\n\"Well, it's just an arraignment, right?\" I said.\n\n\"Not even that far.\" said Franklin. \"The defense is going to demand we 'show cause' for the warrant. The raid came up with drugs, and especially that refined heroin, but the defense is saying the warrant shouldn't have been issued in the first place, and therefore all the evidence should be excluded. And that pretty much would kill the case before it starts.\"\n\nI nodded. \"Okay, that's your fight, not mine.\"\n\n\"It may become your fight.\" said Franklin. \"Nance wants the name of the C.I. that gave the information.\"\n\n\"Like hell!\" I thundered. \"Even Nance knows we don't give that up!\"\n\n\"The defense is saying the defendants have a right to face their accusers.\" said Franklin. \"At some point, we might have to give him or her up.\"\n\n\"But that's not until the actual trial!\" I said.\n\n\"Normally.\" said Franklin. \"But Nance is going to be very accommodative to the defense on this one.\"\n\n\"By the way,\" I said, \"how do you know what Nance is going to say and do?\"\n\n\"Because,\" Franklin said, flashing his family-inherited grin, \"he has actually come out and told us. Well, let me put it this way: there are staffers in the Courthouse, and staffers in the D.A.'s office. People go to lunch around Courthouse Square, who knows who is meeting who and telling what.\"\n\nHe continued: \"And then... there's someone, I'm not sure who it is, that finds out and correlates this stuff. This person got a message to one of the Court reporters, who just happens to be having an affair with Krasney. And the way it went down... was as if Nance was telling us himself. He wanted it that way; he was using that grapevine on purpose and with intent.\"\n\nI chuckled, mostly at the thought of Krasney having a sexual affair. But I knew who was behind this: the Intendent, Mrs. Peabody. And I realized why.\n\n\"Okay.\" I said. \"Fight the good fight, but tell them the Police will not reveal and burn the C.I., and that comes straight from the Police Commander. If Nance drops it and lets them go free, so be it.\"\n\n\"Okay, that's what we'll do, then.\" said Franklin. \"The other reason I had you come here, is so that if you want to take one final shot at interrogating them, do it now.\"\n\n\"They haven't said a word, so far.\" I said. I had watched interviews of them, and listened to the tapes that had been recorded. \"They've taken the Fifth, their lawyer is from Gresham & Mason, a powerful group of attorneys, and he's told us to pound sand.\"\n\n\"Make the attorney come in, cause them to be charged more billable hours.\" said Franklin. \"That is one of my favorite tactics.\"\n\n\"Won't work here.\" I said. \"Gresham & Mason attorneys are being paid by well-financed people and groups, people who are backing the Douglases. Stated another way: if a Gresham & Mason attorney is representing a suspect, then money is no object in defending that suspect...\"\n\n* * * * * * * * * * * * * * * *\n\nThe Douglases were brought into the Interrogation Room at County Jail & Third Precinct Headquarters. Their attorney had been called and was present as I walked in with ADA Franklin Washington.\n\n\"Well, well, well.\" said the Gresham & Mason legal eagle. He was the same one that had represented Alicia Foster in the Credit Card Caper case, one of my favorite successes. \"So the Iron Crowbar himself finally shows up to try to save the day.\"\n\n\"I appreciate your faith in me.\" I said, with the same degree of sarcasm that had been in his voice.\n\n\"You're wasting your time, Commander.\" said the lawyer. \"We're going 'scorched earth' on this one. As I told this A.D.A., you will never get a conviction on this case.\"",
        "\"We shall see.\" I said. \"I only came here to have them tell me who they got that refined crystalline drug from.\" The lawyer showed a slight bit of surprise; the Douglases did not. They were well trained, very well trained, to not show emotion and give themselves away.\n\n\"You have got to be kidding.\" said the legal eagle, who was their mouthpiece as they'd taken the Fifth. \"For all we know, your Officers planted that evidence.\"\n\n\"Make that accusation again,\" I said, \"and we'll take it outside, you and I. And I won't spare the crowbar to spoil the unruly child lawyer.\"\n\nTurning to the Douglases, I said a bit loudly: \"So, guys, I guess you haven't heard... Dr. Laramie Wilkins is dead. Apparent suicide.\"\n\n\"So what?\" asked the lawyer. But it was too late; I saw the flicker in James Douglas's eyes. Susan's had shown nothing. I suspected he was the brains of this outfit; his wife was rather dumb and just his helper. She was cute, though, I thought, and I'll bet she's good in bed.\n\n\"I would imagine...\" I said, my eyes boring into James Douglas's, \"that if Dr. Wilkins has been taken out, either by his own hand or someone else's... then what is the value of your lives to the people that had you take possession of that crystalline product?\" Oh, no doubt about it now, I thought, seeing James Douglas process the information.\n\n\"Another of your tricks, Commander?\" snarled the lawyer. \"Trying to intimidate my clients?\"\n\n\"Not at all.\" I said. \"Just keeping them abreast of the tactical situation.\" I got up. \"You guys have a nice day. And you can always find me through the Town & County Police Department, once you realize that I'm the only one that's going to help you when the balloon goes up and the chips are down.\"\n\nWith that, I left the room, followed by ADA Washington.\n\n* * * * * * * * * * * * * * * *\n\nAt 1:00pm, Classroom 'E' was the scene of a meeting. At the head of the table was Lt. Tanya Perlman. To her right was Data Branch Supervisor Myron Milton, and sitting next to him was Detective Joanne Cummings. To Tanya's left was Detective Martin Nash, and to his left was Detective Teddy Parker.\n\nSitting against the wall to Tanya's left were Police Chief Sean 'Cav' Moynahan and me, Your Iron Crowbar. We were 'unobtrusively' listening in, and the Chief had asked me to let Tanya lead the meeting. I had nooooo problems with that.\n\n\"Okay, Myron, what do you have?\" Tanya asked.\n\n\"Dr. Laramie Wilkins was a Senior Vice President and had the title of Chief Research Officer of BigPharmaCorp. Dr. Robin Grayson is a Vice President and ran the research unit at the plant here in our County, and Dr. Wilkins oversaw that as well as at BigPharmaCorp's other plants around the nation. However, he based here, and rarely traveled to those other plants, as most of the cutting edge research was being done at the plant here.\"\n\nMyron continued: \"More to the man himself: he and his wife Abby were married for 35 years, first marriage for both. In those 35 years, the only debt of consequence was their house. From the day he was hired by BigPharmaCorp, Dr. Wilkins had a company car made available for his use, and he always bought cars for his wife with cash on the barrelhead. He had quite a bit of money, as he owned three chemical process patents over the years that he licensed to BigPharmaCorp, which paid him tremendous royalties. That money was invested very well over time, in addition to the stock options he received on BigPharmaCorp stock.\"\n\n\"Money problems are not a motive here, then.\" said Martin Nash.\n\n\"Unless his wife killed him for his money.\" replied Tanya, who then quickly added. \"I only say that as a possibility; I'm not seeing anything to actually suggest it, and see many reasons against it. So, Myron, is there anything else you've been able to find? Cellphone records?\"\n\n\"Yes ma'am.\" said Myron. \"He had a cellphone provided by BigPharmaCorp, and almost every call on it was to or from other company cellphones. Most of them were from his research staff, including Dr. Robin Grayson, and a few to the executive leadership, such as Dr. Cubbard.\"\n\n\"What were the exceptions?\" Tanya asked.\n\n\"His wife's cellphone.\" said Myron. \"None to any other number. Now her cellphone was a bit more varied. She had a few friends in the wives of other BigPharmaCorp executives, and she was part of a group within First Baptist Church of ladies of her general age. They'd have movie nights or do a park cleanup project every once in a while, but that did not take up a lot of her time.\"\n\nMyron continued: \"There were other calls, such as to pizza places, the golf course pro shop, and every once in a while to the Men's Wearhouse at the Mall. In other words, he might've been using his wife's cellphone for those types of calls, if she wasn't making those herself.\"\n\n\"I'll ask about that when I interview her.\" said Joanne Cummings, making a note.\n\n\"Anything unusual on the cellphone records, Myron? Especially in the last few days?\" asked Tanya. It is possible that her Police Commander had 'suggested' she ask a lot of questions about the cellphone records.\n\n\"I don't know about 'unusual', ma'am,\" said Myron, \"but there was a spike in phone calls from Dr. Grayson a couple of weeks ago. And around the same time, Dr. Wilkins got several calls from a number that is assigned to BigPharmaCorp, but the phone appears to not be assigned to anyone.\"\n\n\"How did you get the information of phone assignments?\" I asked Myron.\n\n\"We served a subpoena, sir, for the phones as well as an employee list.\" said Myron. \"BigPharmaCorp is not being nearly as cooperative as they were during the Harmon Biller case (the Case of the Paper Trail). They refused to give us anything until Judge Watts called their legal office himself. I understand that it was a one-way conversation. Someone must've given the judge a crowbar or something.\" Everyone laughed at that.\n\n\"BigPharmaCorp is also trying to stop us from talking with their employees.\" said Joanne Cummings. \"They won't permit us on their grounds unless we have a warrant, and their lawyers are demanding probable cause for any warrants.\"\n\n\"So why don't we have those warrants by now?\" asked Chief Moynahan. \"Don't tell me you haven't asked the D.A.'s office to get them for you.\"\n\n\"We've asked, sir,\" said Joanne, \"but D.A. Krasney said he wants to work with the BigPharmaCorp people first, and see if he can get them to work with us in what he called a 'spirit of harmonious cooperation'.\"\n\n\"An elected official not wanting to offend a huge corporation with lots of money... a corporation with money to burn supporting candidates to oppose said elected official.\" I said. \"Great.\"\n\nEveryone was looking at me. \"Lt. Perlman, continue with the meeting, please.\" I said.\n\n\"Yes sir.\" Tanya said. \"Anything else, Myron?\"\n\n\"Yes ma'am.\" said Myron. \"On the night before Dr. Wilkins's death, his wife's cellphone received a call from that unassigned phone. The conversation lasted four minutes. The next morning there was a call from the wife's phone to Pastor Westboro, then to 9-1-1.\"\n\n\"That's strange.\" Martin Nash said. \"Why wouldn't she call 9-1-1 first?\"\n\n\"That's understandable.\" Joanne said. \"The woman hears a gunshot. She runs to the back room and finds her husband of 35 years dead on the floor. In her panic, she calls the person she trusts the most, who tells her to call 9-1-1. That would be her pastor.\"\n\n\"Myron,\" I asked, my voice cutting through the room, \"are there other calls to or from Pastor Westboro on that phone?\"\n\n\"Yes sir.\" said Myron. \"Mostly to the Pastor's number, and some from him. Sometimes in little clusters on Fridays and Saturdays, then spaces of times with no calls.\"\n\n\"Maybe that's when her ladies group has a project, and she's getting advice from Pastor Westboro?\" Joanne surmised. I nodded vigorously.\n\n\"Could be.\" Tanya said. \"Anything else, Myron?\"\n\n\"The Commander asked that we take the step of downloading the GPS logs of both of the Wilkins's cars.\" said Myron. \"Her car went to the mall, to the grocery store, to First Baptist Church, to the Community Center. His car went to BigPharmaCorp and back home, almost exclusively, but with one trip to the mall.\"\n\n\"Men's Wearhouse.\" said Tanya. \"He ordered something, maybe some shirts, went to pick them up. Some of the big companies' executives do that a lot.\" I was impressed with Tanya for that one, I had to admit.\n\n\"Okay,\" said Tanya, \"So I guess you did not get to interview anyone from BigPharmaCorp, since they're obstructing our investigation?\"\n\n\"That is correct, ma'am.\" said Joanne Cummings. \"They refused to allow us inside the gates to the plant without a warrant. We have the employee list, so we could go to their houses.\"\n\n\"They might refuse to talk to us.\" said Nash. \"Their top brass probably came down hard on them to not cooperate with us, at least without company lawyers present, probably threatened their jobs if they talk to us.\" I nodded vigorously in agreement.\n\n\"So, Lieutenant Perlman,\" said the Chief, \"how do you pro-pose to get around that little obstacle?\"\n\n\"Door to door, sir.\" said Tanya. \"We'll just have to visit the employees at their homes. If they don't talk, we might have to get a few warrants to bring them in as material witnesses, especially the people that worked most closely with Dr. Wilkins. I'm hoping that when the BigPharmaCorp legal team hears about it and goes nuts, I can offer them the alternative of us talking more quietly and less publicly with those employees at BigPharmaCorp, with their legal beagles present, of course.\"\n\nI smiled brightly at that suggestion, and the Chief said \"We-ell, Loo-tenant, that is what we would've had to do in Midtown, as well. But up here, we're very fortunate... we have the Pow-er of the Crow-barrrr.\" Everyone looked at me as I looked over at the Chief, who was sitting right next to me. Undaunted, the Chief said \"And we should uuuse that Power for a more 'harmonious' result. Would you not agree, Commanderrr...\"\n\n\"I totally agree, Chief.\" I said. I got up and went to the table, pulling the speaker-phone in the center of the table towards me. As I sat down I said \"Okay, everyone, I'll ask you to not speak, so that the person I call has no idea I'm in a room full of the TCPD's finest police officers.\" With that, I speed-dialed one of the numbers on the phone.\n\nA moment later, the speaker said \"D.A. Krasney.\"\n\n\"Ah, Mr. Krasney.\" I said, channeling my 'Sergeant Rudistan' joviality. \"This is Commander Troy.\"\n\n\"Commander,\" said Krasney, \"I'm very busy at the moment. Can I call you back?\"\n\n\"Oh, don't make me come down there, Mr. Krasney.\" I said, still pretending joviality, then let my voice drop: \"It would not be pleasant.\"\n\n\"Okay, Troy, what do you need?\" asked Krasney, his voice a bit short.\n\n\"I understand that my officers have asked for warrants to talk to the BigPharmaCorp employees, but there apparently has been some... delay... in getting them.\" I said. \"What I need, Mr. Krasney, is those warrants... forthwith.\"\n\n\"Look, Don,\" said Krasney, \"we can't just go blasting into BigPharmaCorp like that. They're a big company, influential. We've got to push the bullet through the molasses instead of firing it.\"\n\nI need not say that a number of police officers were rolling their eyes, including their Commander. So I grinned to them as I played my trump card into the phone.\n\n\"I can certainly understand that, Mr. Krasney.\" I said sweetly. \"By the way, Bettina Wurtzburg of KXTC has been calling me about the death of Dr. Wilkins as well as the attack on Dr. Grayson and his wife. I was about to give her an interview and discuss why BigPharmaCorp is not cooperating with us... and not cooperating with the District Attorney's Office in allowing us to talk to their employees.\"\n\nThere was silence on the line. I bore home. \"I was going to tell Bettina, on camera, of course, that your people are doing all they can to get those warrants, so the problem must be on BigPharmaCorp's end. So if I tell Bettina that Dr. Tom Cubbard is not working with District Attorney Krasney in 'a spirit of harmonious cooperation', I won't be telling her wrong, now will I?\"\n\n\"You fucking son of a bitch.\" I heard Krasney say, barely audibly, but audibly nonetheless.\n\n\"Oooooh, eeeeeasy on that language, Mr. Krasney!\" I said jovially, working hard not to laugh out loud at my grinning officers. \"So!... do you want to be the windshield or the bug today?\"\n\n\"All right, you'll get your warrants. And I'll work it out with BigPharmaCorp for you to talk to their people, but it'll be tomorrow morning.\" said Krasney.\n\n\"Tomorrow is Saturday, Mr. Krasney.\" I said. \"My people need to do these interviews today.\"\n\n\"Jesus Christ...\" I heard Krasney mutter. \"Okay, in an hour.\"\n\n\"Good enough, Mr. Krasney--\" I started, but the click on the line arrested further necessity for conversation. A round of applause broke out in Classroom 'E'. Tanya got up and came over and gave me a fist bump.\n\n\"Chief,\" said Martin Nash, \"we're good police officers, but I don't think any of us can do that and get away with it.\"\n\n\"Neither could I.\" said 'Cav' Moynahan, though I knew he could. He stood up. \"And most of you shouldn't try, until you have the power to back it up, and the experience to do it right. Okay, guys, you're doing very well, keep it going.\" With that, he left the room. I also left, saying I would not be going to the interviews, and that I would read the excellent reports that would be filed by tomorrow morning. The MCD Squad got my drift.\n\n* * * * * * * * * * * * * * * *\n\nAt 3:00pm, ADA Washington came to Police Headquarters, and to my office. Paulina Patterson came in with him.\n\n\"It was bad, Commander.\" said Franklin. \"Nance was way beyond the pale today. He demanded the name of the confidential informant, which I refused to give. Nance then said he might order you, Commander Troy, to provide that name, or you'd be jailed for Contempt. I told him that he knew as well as I did that the law explicitly disallowed that, so he backed down. But he was angry from the get-go, and he dismissed all charges against the Douglases... with prejudice.\"\n\n\"That means we can't re-file the charges, even if we find more on them.\" I said.\n\n\"We can appeal the ruling.\" said Paulina. \"And if you had new evidence, we might even win. Nance made what we call a 'highly irregular' ruling on this one. But one thing is clear: he meant to get the Douglases set free.\"\n\n\"Yep.\" I said. \"I figured it was a lost cause. And now we have the death of Dr. Wilkins of the BigPharmaCorp Research Department to handle.\"\n\n\"Do you think this is related to the Grayson case?\" Paulina asked.\n\n\"Early days yet, to know about that.\" I said. \"The Wilkins death might have been a suicide, though we're examining it as a homicide first, as the Chief has taught my Officers. That's a normal tactic, so don't read too much into it.\"\n\nBoth ADAs nodded.\n\n\"Okay guys,\" I said, \"thanks for all your hard work on this. We can't win 'em all, I guess.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 6:00pm, Lieutenant Tanya Perlman came to my office. Her Detectives were putting their reports of their interviews into the computers; some had taped the interviews, and those were being digitized and placed into the servers as well.\n\n\"Have a seat.\" I said. \"What did you find out?\"\n\nTanya sat down and crossed her shapely legs as she said \"That was one exasperating experience. I almost called you. Almost, but not quite.\"\n\n\"Legal beagles give you trouble?\" I asked.\n\n\"No sir.\" said Tanya. \"It was their CEO, Dr. Tom Cubbard. He is a total asshole; he makes me want to work with Sharples and Ikea again, he's so bad. He was insisting on being in every interview with every member of the Research Department staff. They were clearly intimidated by his presence, and he was meaning to intimidate them. But I kicked him out. I just told him that I could call the Commander himself down, and Dr. Cubbard wisely decided getting out was the better option.\"\n\n\"Nice.\" I said. \"So what is the upshot of it all?\"\n\n\"They're all absolutely shocked about Dr. Wilkins's death.\" Tanya said. \"Once Cubbard was out of there, we did as you'd told me to tell my guys: we asked about both Dr. Wilkins and Dr. Grayson, and some of them finally started to confide in us a little bit.\"\n\nTanya continued: \"They said that in August and September, Dr. Wilkins and Dr. Grayson both seemed pretty agitated about something. Most of the staff thought it was research-work-related, that someone was putting pressure on them to get a process completed. That is not irregular, so I'm told. But Martin noticed something coming out, and started asking and re-asking about it.\"\n\n\"From all accounts,\" Tanya went on, \"Dr. Wilkins and Dr. Grayson had always gotten along very well, and they worked together very closely. But a few weeks ago, beginning in the August timeframe, people noticed some friction between them. It peaked in September, but then seemed to subside as time went on. However, Nash got people to admit that Dr. Wilkins and Dr. Grayson were still distant with each other.\"\n\n\"But there was a spike of phone calls between them in the last couple of weeks.\" I said. \"What of that?\"\n\n\"Not sure yet, sir.\" Tanya said. \"Dr. Grayson has not been back to work since the attack on himself and his wife. I told Joanne to ask Mrs. Wilkins, when she interviews Mrs. Wilkins, if the Wilkinses went to visit the Graysons at the hospital or at home since the attacks, and to also ask if the two families were good friends.\"\n\n\"Good!\" I said. \"Excellent! You are doing a great job, and so is your team. Be sure to tell them I said that.\" Tanya nodded, blushing a little as she grinned that cherubic grin of hers.\n\n\"What about research materials?\" I asked. \"Especially that refined stuff we found on the Douglases?\"\n\n\"After the Grayson attacks,\" Tanya said, \"the Security people did an inventory of all research materials. I asked their lead lawyer for the results of that inventory, but he said he'd have to check with the CEO and the Board before releasing it.\"\n\n\"Yeah. Right.\" I said acerbically. \"I don't know which judge has night duty tonight, but he's going to be doing some work this evening. Call the Courthouse, get a warrant for that report from Security, as well as detailed reports for anything that was found missing. Have that warrant served as soon as you get it, call people in to the facility if you have to. If they don't cooperate, call me at home. I will not only show up, but I will have the FBI with me, and you can tell Cubbard that if you need to. I have a feeling about this one...\"\n\n\"Yes sir.\" said Tanya. \"By the way, we were working with the Security people behind the scenes, and they were going to let us know on the side about any problems with research materials... but I was quietly told today that someone brought a hammer down on them when they started looking into the situation. They're cooperating to the extent they must. but we have to do this the all legal and proper way if we're going to get anything.\"\n\n\"It's just as well.\" I said. \"If and when this gets solved, it will have to be wrapped in a nice legal bow. By the way, Tanya,\" I said, using her first name to bring informality into the conversation, \"there was a 'strangeness' about the crime scene. Have you realized what it is?\"\n\n\"Uh, that Dr. Wilkins might've been murdered, and it wasn't suicide?\" Tanya asked.\n\n\"Sort of.\" I said. \"Let me put it this way... if you were going to murder Dr. Laramie Wilkins in his own home... with his wife upstairs... would you not leave the Police two bodies to find, and the stage play of a murder-suicide?\"\n\n\"Now that's Iron Crowbar thinking, there.\" Tanya teased me with her cherubic grin. \"But you're right, that's a bit strange, also... unless it's one for the side that Dr. Wilkins actually did commit suicide...\"",
        "Part 10 - Weekend Worries \n\nA strange and rare thing occurred over the weekend of November 21st-22d: I got to stay home with my family. There was no football game, with the Bulldogs having an open date before the big game against State Tech the next week. The next week was Thanksgiving week, and many people were taking a full week of vacation and were getting out of Town while the getting was good. Traffic was wonderfully light, and the criminal elements were seemingly taking a weekend off, as well.\n\nLetting Lieutenant Perlman handle MCD and the ongoing cases of Dr. Laramie Wilkins and Dr. Robin Grayson, I spent time playing with Carole and Bowser, playing separately with little Jim and getting in some good father-son time.\n\nOn Saturday, Molly brought Ross over. Jim and I played with Ross while my mom Phyllis kept Carole and Bowser, and Laura gave Molly a checkup. To no one's surprise, Laura said that Molly's next baby could make its appearance in the world any day now.\n\nThe next day was Sunday. November 22d. For me, this date had a special meaning: it was the one-year anniversary of the fire at the old Cabin. I took a moment to reflect on all that had happened since that horrifying night: of how Cindy's premonition that had saved us was now explained, and she knew that Dr. Eckhart was her biological father; of her promotion and knowledge of her blood relationship with me; of bringing my favorite dog Bowser into the family; of Molly now being much closer to us, of her pregnancy, of Paulina's...\n\nAnd I thought with gratitude of the new Cabin, and my benefactor in building it from the ashes of the old house. I did this as I drove up to The Cabin and do my research work on the Consultant of Crime, especially about the new material I had from the 'Intendent Files', the things she'd hidden in Jack Burke's apartment. There were strings tying Victory Christian Ministries to the Oldeeds Organization, which I knew. There were strings going to a 'Castor & Pollux Enterprises', appropriately based in the Twin Cities of Westphalia and Eastphalia, which were south of the City.\n\nAnd then there was Vauxhall. 'Vauxhall Holdings, LLC' was its formal name, and it was nothing more than a shell, a 'pass-through' company. I accessed the IRS computers, the FBI's computers, the State's computers, and I could not get wrapped around this entity. Money came to them obvious laundering, as well as pure cash. And then that money got paid out in a way befitting laundering. It was set up as a non-profit, with the sole name listed on the corporation records as 'Mr. Hector Priam'.\n\nInterestingly, I had a full workup on Mr. Hector Priam. A birth certificate from New Jersey. An undergraduate college degree in Business from Vanderbilt University. And a drivers license from the State west of ours... with a picture on it of one Harold Malone, formerly of this Police Department.\n\nSo Malone was deeply immersed in this mud pit, I realized to myself. Yet after he left Town, and indeed after his death in Alabama, Vauxhall was still going strong in this digital age, digitally moving money in and out of its coffers and its bank accounts.\n\nJust then the little device outside that warned me of approaching vehicles coming up the Cabin's driveway went off, emitting a soft chirp and a flashing light. I quickly secured my work and turned off the 'cage' around my office room, then went to answer the door. To my astonishment, my visitors were my mother Phyllis... and Mrs. Adele Peabody, the Town & County Intendent.\n\n\"Son,\" said my mother, \"my friend Mrs. Peabody needs to talk with you. We couldn't reach you on your cellphone when she came by the Mountain Nest, so I took the liberty of bringing her up here.\"\n\n\"I'm glad you did, Mom.\" I said. \"So what can I help you with, Mrs. Peabody?\"\n\n\"I'll go make you some lunch in the kitchen.\" said my mom. \"Adele, I could never make this boy eat properly.\"\n\n\"He looks pretty well fed and energetic to me.\" said Mrs. Peabody, her eyes twinkling.\n\n\"Why don't we go upstairs.\" I said, knowing that Mrs. Peabody might not want to talk in front of my mother. We went up to the master bedroom, where I opened drapes over the windows to let in some light. I noticed Mrs. Peabody staying well away from the windows, and I told her that they were bulletproof.\n\n\"Don,\" said Mrs. Peabody, \"I'm very concerned.\"\n\n\"Why's that?\" I asked innocently.\n\n\"I told you some of it the other day... after we'd made love in this bed.\" Mrs. Peabody said, sitting on one of the two chairs in the room that were against the wall near the closet door, facing the foot of the bed. \"I told you that I'd taken measures to protect myself against certain criminal entities. Unfortunately... that protection has recently been destroyed.\"\n\nMy sweep of the room with my anti-bugging device revealed nothing. I sat down in the other chair, next to Mrs. Peabody, admiring her crossed legs in her patent leather high heel pumps. My loins began stirring.\n\n\"Does this criminal entity know that the protection has been destroyed?\" I asked.\n\n\"I have a suspicion,\" said Mrs. Peabody, \"that he knows very well.\"\n\n\"If you know that,\" I said, my eyes boring into Mrs. Peabody's, \"then you must have other suspicions, as well.\" I saw the first look of cunning in Mrs. Peabody's eyes, and that she well understood. Still, she played the Game.\n\n\"What suspicions would those be, my handsome friend?\" she asked.\n\nI smiled briefly. \"I am sure our police reports have not escaped your attention.\"\n\n\"No, they haven't.\" Mrs. Peabody replied. \"The Council has me collect that data and give them synopses of what is going on amongst their constituents. I did not include in those reports my correlations of a drug raid by your Police Department yielding a strange drug product, followed by attacks upon Dr. Grayson and the unfortunate suicide of Dr. Wilkins, both of BigPharmaCorp.\"\n\n\"And what do those correlations tell you?\" I asked.\n\nMrs. Peabody smiled. \"I've heard that you like to quote the writer Dame Agatha Christie. Her books were somewhat boring to me; it was too easy to figure out who the criminal was in her writings. But your referral to her comment on coincidences... is very true.\"\n\n\"And, of course,\" I said, \"you knew Jack Burke.\"\n\n\"Almost as well as I know you, Commander Troy.\" said Mrs. Peabody, her eyes heavy-lidded with lust and flirtation. \"Intimately. Very intimately. And that brings us full circle back to my original problem.\"\n\n\"Oh, it does?\" I asked, making my voice sound innocent. For the first time, Mrs. Peabody was silenced as she began to realize the inference of my seemingly cryptic words.\n\n\"Of course.\" she said quietly, more to herself than to me. \"So either... no, he's just that close behind you.\"\n\n\"Yes. He's watching me. Like a hawk.\" I said. \"I'm sure he saw the police raid and put two and two together. It was by sheer coincidence we interdicted a highly refined research drug being transferred between criminal entities. James and Susan Douglas were the couriers. But he saw through that.\"\n\n\"And now those apartments are ashes, with a fireman in the hospital.\" said Mrs. Peabody. \"Thank God he's recovering well. And a certain application to the Council came to my desk. They're beginning a formal Board of Inquiry to determine if the Medal of Valor is appropriate.\"\n\n\"Just let me know to whose ass I should apply a red crowbar, if they try to downgrade it the least bit.\" I replied. Mrs. Peabody smiled.\n\nThere was a knock on the door, and my mother poked her head inside. \"Lunch is ready, you two.\"\n\nAs we got up to go downstairs, Mrs. Peabody said \"Your mother is a very interesting woman. I do believe she knows far more than she lets on.\"\n\n\"A problem I have had to deal with my entire life.\" I replied...\n\n* * * * * * * * * * * * * * * *\n\n\"Darling,\" Laura said to me that evening, \"on Tuesday night, President Wellman is hosting a Faculty event. Ostensibly it is for the Thanksgiving holiday, but it's going to be a reception for Dr. Stephanie Steele's return from her sabbatical to Hawaii and New Zealand.\"\n\n\"Steele?\"\n\n\"Yes, she's Edward's wife and Selena's mother. She's also going to be receiving her full Professorship in Physics and Astronomy. She's been at the Mauna Kea Observatory in Hawaii, as well as observatories in the Southern Hemisphere, especially New Zealand and Australia. Anyway, the Council is not meeting Tuesday, so keep your calendar clear so that you can escort me there.\"\n\n\"I'll ask the criminal elements of the County to cooperate, so that I'll be free to attend.\" I said jokingly.\n\n\"Speaking of that, how is this suicide case and the Grayson attack case shaping up?\" Laura asked, just a shade too innocently and nonchalantly.\n\n\"Well, I should find out tomorrow.\" I said. \"We'll be following up on the data, the autopsy report should be in. I am surprised about one thing, though.\"\n\n\"What's that?\" Laura asked, after I paused.\n\n\"I'm just wondering why the FBI hasn't come in on this yet, and when they'll get around to coming in on it.\" I replied, then added: \"Which is what you're wondering, as well.\"\n\n\"Not much gets by you.\" my wife said. She looked at me questioningly as I stood up... then she saw Bowser sitting patiently by the back door, and said \"... including knowing when the dog needs to be taken out...\"\n\nPart 11 - Monday Morning Blues \n\nI was in my office at 6:30am, Monday, November 23d, having done my work with Sgt. Tate and my run with the ROTC cadets. I was looking at the data that had been compiled for me over the weekend.\n\nThere were phone records for the Wilkinses, the Graysons, and almost all of the BigPharmaCorp Research staff, as well as other company officers whose records I'd requested. And there was the other information I'd requested, as well...\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, November 23d. \"Channel Two News has learned that the County Coroner, John Quincy Kelly, has called for a Coroner's Inquest in the death of Dr. Laramie Wilkins, Senior Vice President and Head of Research Operations at BigPharmaCorp. This could open a deeper investigation by the Town & County Police.\"\n\n\"Asked if BigPharmaCorp is cooperating with Police, a spokesperson for the TCPD said that BigPharmaCorp has responded positively to all subpoenas and warrants issued.\" Bettina continued. \"However, other sources tell Channel Two News that BigPharmaCorp has been less than cooperative with the Police in the investigation, making the subpoenas and warrants necessary in the first place.\"\n\n\"In other news,\" Bettina said, \"Deputy Police Chief Robert Brownlee remains in critical condition following a massive heart attack last week. Neither the Police Department, Sheriff's Department, nor the Town & County Council would comment on contingencies in the event Deputy Chief Brownlee does not return to duty. And now the Sports report with Chuck Pringle! Chuck!\"\n\n\"Thank you, Bettina!\" said the deliberately-gray haired Sports reporter. \"This week is the big rivalry game, as the Bulldogs travel to State Tech. While Coach Groves said he expects his team to be disciplined, after last year's events, which involved our KXTC colleague Nick Eastwood, it is not clear what can be expected. The Conference is also monitoring the game, and have cautioned both Schools and their fans and boosters to be restrained and show good sportsmanship...\"\n\n\"Who in the hell is this 'spokesperson' for this Police Department?\" growled Captain Cindy Ross, barreling in as the newscast continued.\n\n\"Guess I don't need to ask how your weekend was.\" I said. \"Grab some coffee and take a breath.\" Cindy turned to the coffeemakers, only to find Detective Cummings pouring her (Cindy) a cup.\n\n\"Thank you.\" Cindy said as she took the proffered cup of coffee, sucking in her breath, then exhaling. \"And yes, my weekend sucked. So, Commander, the 'spokesperson'...\"\n\n\"Was not me, and that's all I can tell you.\" I said. \"I think I'm going to tear Scott Peterson a new one, though. If it wasn't him, then we have a mysterious 'spokesperson' and also 'sources' giving competing views.\"\n\n\"Think they're making these sources and spokespersons up, Commander?\" asked Theo Washington, who was just coming in.\n\n\"If it were KSTD, that'd be a real possibility.\" I said. \"But Bettina is usually better than this. I think I'll go rattle Scott Peterson's cage a little bit over it. Care to join me, Captain?\"\n\n\"I wouldn't miss it.\" said Cindy. Together we left MCD and went to the front lobby area, the only way to get to Lt. Peterson's office in the Media Relations area. \n\nLt. Peterson was in his office. When he saw us, he immediately said \"I'm not that spokesperson, nor their 'sources' on the other side. I've already called them and demanded Wurtzburg get back to me on that.\"\n\n\"If she doesn't respond by lunchtime today,\" I said, \"let me know.\"\n\nBack in my office, I poured Cindy some more coffee. \"Okay, partner,\" I said as we sat down, \"what's going on with you?\"\n\n\"Jenna is going back to work today.\" said Cindy.\n\nWhen she said no more, I was compelled to ask \"And that is bad... how?\"\n\nCindy replied \"Look, I've never been raped, though I broke the arm and shoulder of a guy in college who didn't want to take 'no' for an answer. So I can't say what Jenna is going through. But it's... almost unnatural the way she's acting... almost like nothing happened.\"\n\n\"Are you sure that's all that's happened?\" I asked. That got me a 'look' from my cousin's ice-blue eyes.\n\n\"She wants to know where Gor-don is.\" Cindy said. \"I told her he's gone missing and that we're searching for him.\" After a pause, Cindy said \"I did not give her the details of us going to his apartment, nor did I discuss our... suspicions... of his possible role in the abduction.\"\n\n\"Think she'll come to the conclusion herself?\" I asked.\n\n\"That's the rub.\" Cindy said. \"I think she's refusing to believe it. After asking about him, Jenna didn't say any more about it... but she was morose and moody the rest of the weekend. She did access her computers, through which she can access police servers. I don't want to pry, but I'll bet if I ask Myron what she was looking for, it'll be about Gor-don.\"\n\n\"Except that I've pre-empted that, and had Myron put security protocols on the Gor-don disappearance. She has to contact you or me to get through that... and it doesn't take my mother to observe and deduce she hasn't asked you.\" Cindy nodded vigorously, then sipped her coffee.\n\nI said \"Okay, let's get this week's party started.\" I looked at my emails. \"Oh, good, autopsy and Crime Lab reports on the Wilkins case.\" I opened the Crime Lab report. \"Wood splinters and varnish in the grooves of the hammer of the gun. Supports the thesis that the gun hit the desk and caused that gouge when it was dropped.\"\n\n\"Playing Devil's Advocate,\" Cindy said, \"that's not enough to show it wasn't just him dropping the gun after shooting himself.\"\n\n\"True.\" I said. \"Ah, this is interesting...Dr. Wilkins's fingerprints were on the gun, but no fingerprints were on the magazine... or any of the cartridges, either.\" Cindy's eyes widened.\n\n\"Oh, that's weird!\" she exclaimed. \"His prints should be all over the magazine and the bullets of his own gun.\"\n\n\"Yes, they should.\" I said. \"Ballistics show that it was indeed the gun used; they found the expended shell among the paperwork on the desk. No prints on it, either, by the way. Oh, wait... the bullets in the magazine, and the one that chambered into the breach, were the expanding self-defense variety, copper-jacketed lead. The bullet found in the brick wall, that went through Dr. Wilkins's brain... was a copper solid round.\"\n\n\"Wow.\" said Cindy. \"Were there one or two empty spaces in the magazine?\"\n\n\"Two.\" I said. \"They're good about checking that. Dr. Woodrow was all over them a few months ago when they failed to see that during a shooting in the Tenderloin District last summer.\"\n\n\"I don't remember any case about that.\" Cindy replied.\n\n\"You and I were a bit busy at the time.\" I replied. \"In that little incident, nobody was injured. Basically a bar fight at a strip club. They were ascertaining how many shots each person had fired, and were a round short. Okay, on to the autopsy.\"\n\nI read the Wilkins autopsy report. \"Right through the head, death instantaneous. The copper bullet expands to sharp edges, and sliced a fairly wide swath... what's curious to me is that the bullet went through skull, brains, skull, drywall, space, drywall, large space that was the living room, drywall, and flattened against the brick.\"\n\n\"Powerful round.\" Cindy said. \"Did ballistics check if the powder was the same in the expended round as the others?\"\n\n\"Nope.\" I said, checking back with the other report. \"Good catch. Why don't you call them and ask them to follow up on that?\" Cindy got out her cellphone and made the call as I perused the rest of the autopsy report, which was consistent with a man falling dead out of his chair and to the floor.\n\nJust then, there was a knock on my door, followed by a fireball of a young blonde Detective blasting into my office. \"Sir!\" Joanne Cummings all but shouted, \"this ballistics report--\" I stopped her by holding up my hand.\n\n\"Captain Ross is on the phone.\" I said quietly. \"And I just saw it. You're right...\"\n\nThe party was just getting started as Detective Martin Nash appeared in the doorway. He did not burst in as Joanne had, befitting his unnervingly calm demeanor.\n\n\"Sir,\" Nash said, \"the Duty Desk just got a call. A body has been found behind BigPharmaCorp's property...\"\n\nTo be continued."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama",
        "legs",
        "milf"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-ensigns-of-detection-ch-02"
}