{
    "title": "Beth and Rich Ch. 01",
    "pages": [
        "This is the first in a series of stories about a young couple raised with a strict religious upbringing and their discovery that there is much more to sex than they were taught as children and teenagers. \n\nRich and Beth had been married for about three years when they moved to Silicon Valley from Cleveland where they had grown up. They made an attractive couple. Rich was a bit over six feet, lean, and movie star handsome with dark, conservatively cut hair and sparkling blue eyes. Beth was average height, but she had a bit heavier frame than Rich. She had been athletic in high school and college, which gave her a nicely rounded tightly muscled ass and a muscular finish to her long legs. Her waist was lean and small but she had large breasts. She also had startling green eyes and a mass of heavy dark red hair. They were the kind of couple that caused conversation to quit when they walked into a room. They dressed well, but due to their deeply religious upbringing, their clothing was always very conservative.\n\nTheir sex life was terribly plain vanilla, although it hadn't occurred to either of them that such was the case. They had both been virgins when they married in their early twenties. Prior to their marriage, there had been some heavy petting but that was about it. Neither of them had any serious romantic relationships before they met during Beth's senior year in college and Rich's last year in law school. On their wedding night each had climaxed without difficulties and then rolled over and gone to sleep. Since then sex largely consisted of a quick missionary position fuck every Friday night followed by a good night's sleep. Foreplay was minimal to non-existent and they never discussed that aspect of their life.\n\nIn Cleveland both had worked, Beth as a bookkeeper at their church and Rich as an attorney with a local law firm. Much of their spare time was spent with their two sets of deeply religious parents and in church activities. Sex simply didn't make their top ten list of important activities, and since neither had any significant experience with sex, they literally didn't know what they were missing.\n\nThey moved to the West Coast because Rich received an over the top job offer from a major Palo Alto law firm. When they decided to take the offer they knew it would be a big change, moving away from the town they had grown up in and their close ties with church and family, but the Palo Alto job was one of those offers that no ambitious person turns down, both because of the professional opportunity and because of the money. Part of their decision was based on the fact that the money would allow Beth to quit working and become a full-time housewife, a role she had been trained for from birth. None of their parents wanted to see them leave Cleveland, but they all acknowledged that the extra money that would enable Beth to become a full-time homemaker was something they shouldn't turn down. Palo Alto was destined to change things, although looking back, Beth realized that the changes had started before they left Cleveland.\n\nActually there was more to Beth's sex life than just their routine Friday night missionary position sex, but it wasn't something Beth let Rich know anything about. Beth loved to masturbate. A friend in high school had introduced her to masturbation, and she had secretly continued ever since. Even when she was working she would find private time two or three days a week to get herself off by massaging her mound through her plain cotton panties until she was good and wet, and then, using her secretions as lube, she rubbed her clit until she had an orgasm. Normally this was at home at some time when she had the house to herself, but occasionally she would sneak off to the rest room when Rich had fallen asleep watching a ball game on TV, and a couple of times she had done it in the stall in the ladies room at work. She was always very careful to be as quiet as possible, and a pretty good dose of guilt always followed each such session, but truth be told it was the guilt that made it really worthwhile. Sure the climax felt spectacular (at least by the standards of sex she had experienced to that point in her life), but what really made it something she couldn't resist were the head games she played before and after. She would tell herself, sometimes for hours, that it was wrong to masturbate, and the more she told herself that, the greater her need for sexual release became, until she finally capitulated and found some private place where she could rub her clit until she climaxed. Then she would promise herself it would never happen again. Actually, if she delayed her inevitable concession to the need to masturbate long enough, she was always so aroused that she could get herself off in a minute or two.\n\nOn one occasion, shortly before they left Cleveland, she had even felt a need to masturbate after one of her Friday night missionary sex sessions with Rich. They had both come home from work late, and in accordance with their usual Friday night ritual, they had dinner including a single glass of wine each. Alcohol was frowned upon by their church and their parents, but they rationalized it as helping each of them unwind after a long week at work, and it was always strictly limited to one glass. Shortly after dinner they had moved to the bedroom, undressed in the dark, crawled into bed, and quickly made love in their usual fashion. Five minutes and they were done. Without a word to Beth, Rich quietly put on the flannel pajamas that he had neatly laid out along side the bed, and by ten minutes after they had entered the bedroom, he was asleep and snoring.\n\nBeth had climaxed as she always did when they made love, quickly, quietly, and right on time with Rich's climax. Then she, following Rich's lead, had silently crawled into the full length flannel night gown she had set out next to the bed and crawled under the covers.\n\n\"Thank goodness it's Friday and I don't have to go to work tomorrow. It will give me time to start getting ready for our move to California,\" she thought as she lay on her back next to her sleeping husband.\n\nFor some reason, sleep wouldn't come. As people do when they can't sleep, her mind wandered from topic to topic. But the topic it kept returning to was the handsome young preacher who had recently joined the staff at the church she worked at. For reasons she couldn't explain to herself, god forbid to others, she thought he had just about cutest butt she had ever seen. Every time he walked by her desk, she smiled and said hello, which he always politely returned, and then as he walked away she stared at his tightly muscled butt. She knew it was wrong to do, but she couldn't seem to avoid doing it. He had a really cute butt.\n\nNow as she lay there, next to her snoring husband, thinking about the new preacher's butt, she was shocked to realize that she was getting horny, far hornier than she had been in anticipation of her Friday night missionary fuck with Rich. She began to rub her mound through her night gown as she did in preparation for one of her regular masturbation sessions, but she realized that as good as that felt, it would be much better to be rubbing her clit, and she knew she would have plenty of her and Rich's cum to lube herself with. Beth reached under the blankets and began to pull her flannel nightgown up to her waist to give her hands access to her sex.\n\nThen she had a terrible thought: \"What if Rich wakes up and finds me masturbating next to him in bed? Oh, that would be just too awful to live through.\" As she lay there trying to decide what to do, she continued to rub her mound through her nightgown and her mind kept returning to the young preacher's sexy butt.\n\nEventually she decided to go somewhere else in the house and finish herself off. She couldn't bring herself to do it where she was, but she was sure she couldn't go to sleep without another climax. Her pussy was on fire, and every few moments her thoughts returned to the young preacher and his sexy butt.\n\nBeth carefully pulled the covers back and swung her legs to the floor. She rose to her feet as quietly and carefully as she could, her mind focused on how bad what she was about to do was . . . and how good it was going to feel. She tiptoed out of the bedroom and down the stairs without a plan as to where she was going. Reaching the bottom of the stairs, she wandered into the kitchen and turned a low light on. Beth poured herself a glass of the wine they had been drinking with dinner and sat down at the kitchen table. As she sipped the wine she began to play her usual head games about whether she should masturbate, and as usual, the longer she waffled back and forth between thoughts of how wrong it would be and how good it would feel, the hornier she got. She sat in indecision sipping the wine until the glass was empty. Then she walked over to the refrigerator and refilled the glass.\n\nAfter another half a glass of wine she said to herself, as she always did eventually when she was in this condition, \"Oh damn it, I'm just to horny,\" and pulled her flannel nightgown up so she was naked from the waist down, intending to get herself off quickly and quietly by playing with her clit.\n\nShe took another sip of the wine and asked herself, \"What will I do if Rich wakes up and comes down stairs looking for me?\"\n\nShe quickly answered herself, \"That's not going to happen. Once we make love he is dead to the world for hours.\"\n\nShe let out a long breath and took another sip of wine. Then she set the glass down and began to use both hands to massage her breasts through the flannel nightgown. It felt really nice.\n\n\"I wish Rich would do this,\" she thought.\n\nThen her thoughts turned to the young preacher's cute ass again, only this time her mind began to wander beyond just his ass. She let her imagination construct a fantasy in which she was alone in the rectory and the young preacher walked in naked with his erect cock sticking straight out in front of him. His cock was hard and stiff, just like the muscles in his butt. It was also large. She didn't know how large, but she was sure it was a lot bigger than Rich's cock, not that she got to see his very often, given his penchant for a quick Friday night fuck in the dark.\n\nBeth was seriously enjoying her fantasy about the young preacher. So much so that she dismissed any thoughts of Rich waking up and walking in on her. She grabbed the folds of her nightgown bunched around her waist and pulled it over her head tossing it on the floor a few feet away. Now she was completely naked, with a hand massaging each of her large breasts.\n\nMoving from the massage to something else her high school friend taught her, she began to slowly circle each breast with a single finger. It was a soft touch with her fingers barely making contact with the flesh of her breasts, so much softer than her previous massage had been. She slowly tightened the circle she was drawing around each breast until she reached the areola, gasping quietly as she touched each one. \"Oh God, this feels good,\" she thought as she softly massaged her areolas. Next she lightly flicked each of her nipples, which were swollen and hard now. Another gasp.\n\nShe pulled the thumb and forefinger of each hand to her mouth to moisten them, taking each of her fingers much farther into her mouth than they needed to go and sucking on them as she pulled them out, kind of like she imagined a whore would do sucking a guy's cock. She returned the moistened digits to her nipples and rubbed them, harder than she had before. Her nipples were sending flashes of sensuous feeling deep into her body. \"God that feels good,\" she thought. As her fingers dried she began to grip her nipples tighter and tighter until she was twisting each one between her thumb and forefinger and pulling them away from her breast. There was pain, but there was even more pleasure.\n\n\"I wonder if I can make my self cum this way?\" she asked herself. \"I've never tried this before.\"\n\nHer mind kept returning to the young preacher with the cute butt and her fantasy about his engorged cock. The cock in her fantasy was circumcised and stood proudly erect. She could see the veins on it and the head was darker than the rest of the prick.\n\n\"Oh that would be so good if he was here right now. Then he could stuff that big cock into me and we would fuck and fuck and fuck,\" she thought.\n\nShe began to slide her hand down toward her sex to finish herself off. Then she had another thought, just as nasty as her fantasy about the young preacher's cock, but more practical. Across the kitchen there was a bowl of vegetables she had just brought home to make into a salad tomorrow night when the parents were coming to dinner. In it were tomatoes, bell peppers, onions, parsley, cilantro, radishes, and right on top of the stack, a big fat cucumber.\n\n\"Oh that would be too wicked,\" Beth told herself.\n\n\"But my college roommate told me that lots of women fuck themselves with cucumbers.\"\n\n\"But what if Rich comes downstairs and finds me masturbating with a cucumber?\"\n\n\"Rich is not coming downstairs. We already got past that issue before I pulled the night gown off.\"\n\nBeth got up off the chair and walked naked across the kitchen. When she got to the vegetable bowl she picked up the cucumber. She held it in one hand and ran her other hand up and down its surface, her fingers wrapped around it. It was smooth and hard except for the typical lumps and bumps that all cucumbers have.\n\n\"It's so big. I'll never get it in me.\"\n\n\"You won't know unless you try.\"\n\nShe began to walk back across the kitchen holding the cucumber in her right hand and rubbing it against her tits. It sent a shock through her when she brought it up from below her now fully extended nipples and flipped them up and then down as she ran it back and forth over them.\n\n\"Oh yes, I have to. I'm so horny.\"\n\nBeth walked naked on through the kitchen past her discarded nightgown and into the living room where she stretched out on the couch, continuing to rub her tits with the cucumber. She put one leg and foot on the back of the couch and let the other foot drop to the floor so her legs were spread lewdly.\n\n\"I don't think I have ever spread myself this wide when I'm naked. I wonder what Rich would think if he saw me like this? I wonder what the young preacher would think?\"\n\nWhile one hand kept the cucumber massaging her tits, she let the other hand wander down to her now fully exposed sex. She gave her clit a few quick strokes, as she liked to do when masturbating. That brought a gasp from her and she quickly stopped, knowing that if she kept it up, she would cum almost immediately, without getting to try the cucumber. \"Not so fast Beth,\" she told herself. \"Rich is out to the world. Lets make this last for awhile.\"\n\nBeth pushed the fingers that had been toying with her clit on down her sex, using them to spread her outer lips and softly massage her inner lips. Then she slipped a finger into her pussy. The combination of her arousal and the residual cum from her earlier fucking with Rich made for a very warm wet pussy. She had never finger fucked herself like this before, always limiting her masturbation to her clit. \"Ohhhh, this feels good! I could do this all night,\" she thought.\n\nShe continued to rub her tits with the cucumber while she finger fucked herself with first one, two, and then three fingers. After several minutes she was panting and hanging on the ragged edge of cumming.\n\nNo, I have to stop,\" she said to herself as she pulled her fingers out. \"I want to try the cucumber.\" She reached down to the floor and grabbed a pillow she had pushed aside when she had lain down on the couch, stuffing it under her butt. \"I need a better angle if I am going to get this big boy into me.\"\n\nBeth grabbed the cucumber with both hands and began to rub it across the opening to her pussy. It felt good, but it wasn't going to slip in easily. She centered it on her opening and began to push it in with both hands while pushing back by raising her hips off the pillow. She could feel the end of the cucumber spreading her pussy lips apart. It hurt, but it was not so much pain that she wanted to stop. Slowly the cucumber forced its way into her cunt until it was maybe a third of the way in. Now the pain was gone. She just felt full. \"So fucking full,\" she thought. \"But I want it deeper. I want it to completely fill my pussy.\"\n\nBeth continued to slowly press the cucumber into her cunt until she felt its tip grinding into her cervix. Then she stopped and just let it be there, filling her completely. She had never felt anything like it.\n\n\"Oh yeah, that's good, but now we need to fuck,\" she told herself. She slowly withdrew the cucumber until it was about halfway out. Then she pushed it slowly back in. She began to repeat the withdrawal and slow return thrust, again and again, increasing each time the range and tempo of her fucking.\n\n\"Oh fuck, fuck, fuck, fuck!\" she cried. But she kept her voice soft and low, remembering there was someone else in the house.\n\nBy now she was using just one hand to ream herself with the cucumber. Her pussy had stretched to accommodate the girth and length of the cucumber. She felt a delicious fullness, but the pain was gone. She used the remaining hand to occasionally flick her clit. She gasped each time her fingers brushed her engorged clit. Now she was just hanging on the edge of a climax.\n\n\"Oh, I want to cum so bad,\" she thought, \"but I don't want this to stop. This is so good. Fuck, fuck, fuck, fuck!\"\n\n\"No, I need to back off. I don't want this to end.\" With that she pulled her hand away from her clit and returned it to a slow massage of her tits. She stopped pumping the cucumber also, just leaving it still and most of the way into her cunt. Now she was using both hands to massage her tits. After a minute or so she felt like she was no longer hanging on the ragged edge of an orgasm. Once she felt back in control she began to fuck herself with the cucumber using a slow steady rhythm, making sure it got in good and deep on each stroke, while one hand continued to massage her tits.\n\n\"Oh, that's just right. I'm not hanging on the edge, and it feels so fucking good. I wonder how long I can keep this up without cumming?\"\n\nBeth lay there on the couch, her legs spread obscenely while she pumped the big cucumber in and out of her cunt and sensuously massaged her breasts for some period of time. Later on she couldn't even guess how long it was. Just that it was heavenly and seemed to last forever. The whole time she let her obscene fantasies about the young preacher continue to run through her head in a more or less continuous loop and she quietly murmured obscenities to herself, \"Oh fuck this is good. Fuck, fuck, fuck, fuck . . .Oh, fuck my cunt is so full!\"\n\nIn her fantasy Brother Leonard (the preacher's name) had asked her to take off her clothes as he stood before her pulling on his hard dick, and she willingly complied. She did it slowly, like she imagined a stripper would. First she slowly unbuttoned each button of her blouse until she could peel it off and toss it on the floor. She fondled her D-cup tits through her bra while the masturbating Brother Leonard stood before her silently watching. Then she leaned forward showing him even more of her tits. She was looking up at him watching his reaction as she reached behind herself, released the catch on the bra and let the bra fall away from her tits. After the bra was dispensed with, she leaned back and pulled one tit and then the other up as high as she could while bending her neck and lewdly snaking her long tongue out to tease the nipple on each one. Soon she was sprawled naked on the couch in the rectory office with her legs spread lewdly and two fingers shoved up her slippery cunt. Brother Leonard stood before her stroking his enormous erection using the copious precum it was leaking for lube. He was silent, just standing there jacking his cock and watching her masturbate. Finally she said softly, \"Oh shit, that cock is so big and hard. Please push it in me. Fill up my hot slippery cunt with that big dick of yours. Please fuck me.\"",
        "Later she remembered that she actually spoke those words as she lay on the couch ramming herself with the cucumber as her fantasy pushed into her reality.\n\nShe spun various versions of the fantasy around in her head as she continued to stroke the cucumber in and out of her pussy. In some of them Brother Leonard stood before her stroking his cock until he finally climaxed, shooting streams of hot white cum onto her face and tits. In others, he climbed on top of her and shoved his big cock in her cunt, fucking her until she felt him squirt his hot cum in her pussy, lots of hot cum.\n\nEventually she began to feel her need to climax inexorably building. It got to where she felt like she was standing at the top of a tall cliff with a raging inferno behind her pushing her closer and closer to the cliff.\n\n\"Okay, okay, I gotta cum. I just can't wait any longer,\" she finally told herself.\n\nShe began to pump the cucumber faster in and out of her cunt. \"Oh shit, I'm so close!\" she said softly, not wanting to wake her husband.\n\nShe gave herself three or four more strokes with the cucumber and then rammed it hard and fast as deep into her cunt as she could get it while she let her other hand really have at her clit. It wasn't like her usual masturbating climax where she climbed to a soft peak and then relaxed with her release, nor was it like a climax during her missionary sex with Rich. Those were very soft\u2014just barely there sometimes. She was already as high as she could get. Just wound up tight. It felt like every muscle in her athletic body was tightened to its maximum. When Beth finally came she just exploded in a climax that felt like the raging inferno behind her had engulfed her whole body. It came in waves and went on for what seemed like minutes. It was all she could do to choke back screams. Maybe she passed out. Her memory of the details of the climax was a bit fuzzy. All she really knew was that she had never felt anything like it.\n\nShe lay on the couch totally spent as the last weak spasms in her pussy slowly pushed the cucumber out. She used the hand that had been pushing it to fully remove it and then she brought it up to her chest and rubbed her breasts with the sticky mess on the cucumber, finally letting it fall to the floor as she started to fade into sleep.\n\n\"No, no. I can't fall asleep here,\" she thought. What would Rich think if he came down in the morning all dressed up in his nice little suit and found me sleeping here on the couch with my legs spread like they are, dried cum all over my tits, and the abused cucumber on the floor next to me. The idea was so absurd that she began to giggle.\n\nBeth struggled to her feet, rearranged the pillow and cushions on the couch so they looked like they should (and covered the wet spot her pussy had left), picked up the cucumber, and staggered back towards the kitchen. As she passed the kitchen table she grabbed the unfinished second glass of wine and tossed down the remaining wine in a single gulp. Then she poured another glass of wine and sipped it a bit more slowly as she walked around the kitchen. Eventually she found herself standing before the vegetable bowl holding the slippery cucumber before her asking, \"Well what do I do with this?\" She had another bad thought, which elicited another giggle. Beth finished off the glass of wine and turned to the sink to rinse the wine glass. Then she carefully washed off the cucumber and put it back in the vegetable bowl for use in tomorrow night's salad for her parents and her in-laws.\n\n\"Good as new,\" she told herself.\n\nShe walked naked back across the kitchen, heading for the bedroom. Now she would sleep. Just as she got to the door from the kitchen, she giggled again, \"Oh yeah, my night gown. I'm sure I could sleep fine without it, but I can't leave it here. That would take a lot of explaining.\"\n\nAs Beth settled into to bed her last thought before drifting off to sleep was, \"That was flat fucking fantastic, but there as a lot of issues I am going to have to think about in the morning, including some of the words I was using. Good girls aren't supposed to use those words. Maybe I'm not a good girl. I wonder?\" And then she was drifted off to sleep.\n\n* * * * * *\n\nWhen she awoke in the morning, she realized she had overslept. Rich was gone, likely out for his usual Saturday morning run. \"Now that was a night's sleep,\" Beth thought as she rolled to her back and stretched languorously. Then she remembered, \"Oh my. What I did last night!\" She smiled as she replayed the events in her head.\n\n\"Then another thought that caused her stomach to turn over, \"My God, what if Rich or my parents, or his parents know about what I did? What will they do to me?\"\n\n\"No. I'm sure no one knows. No one saw me.\"\n\nShe continued to lie on her back thinking, \"But I know. Yes, I know what I did, and I know how wrong that was.\" It was the same guilt trip she laid on herself after each of her more subdued masturbation sessions, but just as the sex had been more intense, so was the guilt.\n\n\"But it was good,\" she thought. \"So fucking good! My God, I've never climaxed like that!\" As the thought was running through her head she pulled back the sheet she was sleeping under and swung her feet to the floor. That's when she felt the pain between her legs. \"Ohh. I'm sore. What have I done to myself?\"\n\nBeth staggered to the shower walking carefully because of the soreness in her seriously over worked pussy. She pulled her night gown off, noticing that she had no panties on beneath it and the skin on her chest was stiff from all of the cum she had smeared about the night before. She was concerned about the panties because she had no idea where she had left them. \"What if Rich finds them before I do? Are they in the kitchen or worse yet on the couch in the living room?\"\n\nShe pulled the nightgown back over her head and returned to the bedroom. Fortunately she found the panties next to the bed. With a sigh of relief, she picked them up and tossed them in the laundry basket. As she did so, she remembered that she had never put them back on after she and Rich had made love the night before, only the nightgown.\n\nBeth took a long hot shower trying to let the downpour of hot water wash away the memories of the night before. No such luck. As she stood naked before the mirror towel in hand, she could think of little beyond how guilty she felt this morning and how good it had all felt last night.\n\nJust then she heard Rich returning from his run, \"Beth, are you here?\" he yelled from the base of the stairs. \"It's a great morning out. Time to get up slug-a-bed.\" He could be disgustingly cheery at the most inopportune times.\n\nShe wrapped the towel around herself and poked her head around the corner so she could see him at the bottom of the stairs, \"Good morning. How was your run?\" she was grateful to have something to focus on beyond the twin prongs of guilt and remembered joy from last night's self-pleasuring.\n\nShe could see Rich standing at the bottom of the stairs in his running gear, his t-shirt soaked from his typical early morning run. He was a lanky six-footer with kind of a Jimmy Stewart build but better looking. There was just no excess fat on him. As she looked at him, he kind of took her breath away.\n\n\"Let me get dressed and I will fix your breakfast while you shower,\" she said, pulling the towel tightly around her. She hurried across the top of the stairs into their bedroom, realizing the towel barely covered her bouncing chest and left almost all of her legs and perhaps more exposed to Rich's gaze from below.\n\n\"Forget your robe, Hon'?\" Rich asked as she sprinted by.\n\n\"Yeah, something like that,\" she yelled in response from the bedroom. She quickly dressed in a pair of loose fitting jeans and a baggy t-shirt with the customary undergarments, slipping her feet into a pair of moccasin style slip-ons.\n\nRich was halfway up the stairs as she trotted down and she quickly pecked him on the cheek as they passed saying, \"Now go on and get your shower, and I will fix bacon and eggs for you. Hurry up or they will be cold.\"\n\nAs she stood whipping the eggs for a scramble she told herself, \"Okay Beth, last night was a one off event and it's not going to happen again.\" It was essentially the same speech she made to herself every time she masturbated, \"But this time I really mean it,\" also a part of her customary post climax resolution.\n\nFifteen minutes later, Rich slid into his chair, looking all scrubbed and ready to face the world. \"Now,\" he said, \"Lets talk about this move to California. You know I need to be there in two weeks and we haven't even begun to pack.\"\n\nBeth poured them each a cup of coffee and jumped willingly into the discussion, thankful for a new topic to focus on besides her enjoyment of the night before and her resulting guilt.\n\n* * * * *\n\nThe next four weeks were a whirlwind for Beth, training her replacement at the church, working with the movers to arrange the transfer of their household goods across the country and then, once they had arrived in Palo Alto, setting up a new household in the apartment they had rented there. Each night she fell into bed at midnight (or later) exhausted and was back up and at it again at 5:00 the next morning. As for Rich, well he was working equally as hard on exiting his old job and starting a new one. Beth appreciated the challenges Rich was dealing with and didn't ask him for help with what she was trying to do, but a couple of times she thought it might have been nice if he had at least acknowledged the effort she was making.\n\nAs for sex, well that became non-existent. Not only did their Friday night quickies go by the boards, but Beth really didn't have time to even think about what she had done the night she had slipped down the stairs and frolicked with the cucumber. Well, she did have a an occasion now and then when she reached a point where she found herself simply waiting for someone else to do something (like hook up utilities at their new apartment) and she couldn't get anything else done on her lengthy to do list while she waited. So on a couple of those occasions, she ducked into a bathroom and used her fingers to bring herself to a quick and quiet orgasm. It was better than nothing, but not like her Friday night session with the cucumber. Really not very satisfying. And three times in four weeks. That was a new all time low for her since her high school days.\n\nEventually her work pace began to slow. Their new home was organized. She knew how to find a grocery store, a laundry, and the other shops she needed to run the household. One Tuesday morning her to-do list had shrunk to the point where, after doing the breakfast dishes, she poured herself a second cup of coffee and sat down at her kitchen table to enjoy the coffee. She hadn't done this in weeks. She looked at her list\u2014no, nothing on it that had to be done immediately or even today. She sighed with satisfaction and leaned back in her chair thinking, \"I've made it. We're here and were organized and the household is up and running.\"\n\nThe next thought in her head was, \"Now what?\" She didn't have an answer, but as she sat at their kitchen table sipping her coffee another thought began creeping into her head. She wanted, no she needed, sex. She hadn't even had the quickie missionary fuck with Rich since the night of the cucumber, as she had taken to calling it. She pushed the thought aside and turned her mind to other things, but they were all things that she knew were not urgent, and so the subject of sex kept creeping back.\n\nAt first she thought, \"Well, I'll just go in the back room and get myself off with my fingers. That will take care of this and then I can get on with my chores.\"\n\n\"Oh yeah. I don't really have any chores that need to be done this morning. This afternoon I need to fix dinner for Rich, but not this morning.\"\n\nThe more she thought about it the hornier she got. She rose to pour herself a third cup of coffee, but as she did that she began to think about the masturbation she had indulged in that night back in Ohio. \"Oh, that was so bad,\" she thought. Then she giggled, saying out loud, \"But it was so good.\"\n\nWithout any further thought she pulled the baggy sweat shirt she was wearing over head and threw it on the floor, just as she had that night in Ohio. Her bra quickly followed it, liberating her large soft tits. She looked quickly around realizing that the kitchen blinds were open and realizing just as quickly that unless someone had a very tall stepladder, they weren't going to able to see in the windows of her second story apartment. Looking out the window the nearest thing she could see was the hills behind Stanford, and they were over a mile away. Once she understood the privacy her second floor apartment provided, she finished stripping off her baggy jeans and her white panties so she was standing naked in her kitchen holding a cup of coffee. Then she went for a leisurely, naked stroll through the rest of the apartment as she sipped the coffee.\n\n\"Oh, it feels so good to do this. What would Rich think if he knew I was walking naked through our apartment on a Tuesday morning? What would my parents think?\" She giggled at these thoughts and pressed her warm, now half empty coffee cup against one of her breasts. \"Umm. That feels good too.\" She was getting very horny, hornier than she had been in months. It felt delicious.\n\nFinally, after wandering naked through the entire apartment, she set the now empty coffee cup down on a table in her living room and sat on the adjoining couch, pulling one leg up and to the side with her heel hooked between the cushions so she was lewdly exposed. She was looking straight out the open living room window, still confident that no one could see her. Beth leaned back and began to play with her tits just as she had that night in Ohio. First a massage, one hand on each boob, and then after maybe ten minutes of that she began to use her fingers to lightly stroke each breast in circles coming closer and closer to their centers. When she reached her nipples she moistened her fingers, sucking them lewdly in her mouth and then rubbed the nipples that were by this time like hard little pebbles. Finally as her fingers dried she began to pinch her nipples and pull on them. It hurt a little, but in such a good way and every time she did it, she felt a jolt to her pussy.\n\n\"Oh yes,\" she said aloud. \"This is how to spend a Tuesday morning. Fuck, this is good!\"\n\nNow she took a hand down to her crotch and began to slide it along the lips of her pussy. It was wet and slippery from all her fondling of her tits. Each time she brought her hand up her fingers brushed her clit, which was fully erect and peaking out from its little hood, she gasped, \"Ahh, shit that's good!\"\n\nBy now she had both feet up on the couch with her heels together and her knees spread as wide as she could get them, assuring her maximum access to her sex. As she continued to stroke herself and flick her clit, she realized that she was fast approaching a climax. \"No, no, not yet. This is too fucking delicious. I want this to go on for awhile,\" she thought.\n\nShe used one hand to spread her pussy lips as wide as she could get them and then slid two fingers into her now sopping cunt. \"Oh, fuck that's good!\" she said aloud.\n\n\"Not as good as the cucumber, but a lot better than a quick clit masturbation,\" she thought and then she said to herself, \"Damn, it's a lot better than fucking Rich.\" That thought shocked her and she almost stopped, pausing with her fingers in her slippery cunt.\n\n\"Never mind that,\" she told herself. \"Just enjoy what you've got.\"\n\nWith that she put Rich out of her mind and spent the next fifteen minutes playing with her pussy. She let her mind spin out a fantasy about being seen by a window washer cleaning the window of her living room.\n\nThe window washer did a double take as he saw her playing with her pussy. He was a tall lean Latino. Instead of just looking away, he stopped what he was doing and just stood there staring at her. Beth returned his stare, spread her legs wider and and continued to masturbate. After a minute or two the window washer began rubbing an obvious hard-on through his jeans. Then he pulled the zipper down and let his erect cock out into the sunshine. It was long and curved. She licked her lips as she watched him start to stroke his cock. They both continued to masturbate until he finally reached his limit and shot streams of creamy cum all over the window. Then he smiled, tipped his hat to her, washed the cum off the window, and moved on to the next apartment.\n\nLater, after the fantasy about the window washer, Brother Leonard crept into her mind. She lay back against the back of the couch, fingering her cunt and savoring her thoughts of his tight buns and his gorgeous erect dick, which she had never seen but thoroughly and deliciously imagined.\n\nEventually she could feel her orgasm creeping up on her. \"Nothing I can do to hold on. I've just got to cum. It's going to be so fucking good,\" she said to herself. \"Oh, oh, oh, fuck. Here it comes. Oh, shit, I'm so close.\"\n\nNow she was rapidly stroking her clit with one hand and ramming three fingers in and out of her cunt. Then it was like falling off a cliff, just like the time in Ohio with the cucumber, only this time she was alone in the house and she let herself scream as she climaxed. Her back was arched and her whole body was participating in the tension and then the massive release of the climax. It felt like it went on forever, and then it was over and she was slumped naked on the couch looking bleary eyed out her living room window.\n\n\"Wow!\" she said to herself. \"I needed that.\"\n\n* * * * * *\n\nBeth just lay on her couch naked for quite awhile letting her mind wander. \"I know,\" she told herself, \"The church taught us that masturbation is bad. It's evil. But I just can't believe anything that good is evil. No way. Really, I didn't hurt anyone else when I did that. I wasn't untrue to Rich. It just can't be bad.\"\n\n\"And besides, I read that almost everyone does it sometimes. Ummmm. I can see why,\" she thought as she curled up, still naked on the couch. That was just so good. She began to fondle her tits again as she thought about how good it had been. \"So Beth, which did you like the best\u2014the long slow build-up to your climax or the mind shattering roar you felt as it tore through your body?\" \"Yes,\" she responded aloud in a deliberately ambiguous answer that made her giggle. \"Yes, I liked them both, a lot, and I'm going to do it a lot more,\" she said as she sat up. \"But not now. It's almost noon and I spent half the morning wandering naked around the house and masturbating. I think I need to take myself out to lunch.\"\n\nShe stood and began to walk back to the kitchen where she had left her clothes. \"Yes, I am going to lunch to celebrate a great masturbation.\"\n\nSo that is just what Beth did. She went out to a nice restaurant in the Stanford Mall and she allowed herself not one, but two glasses of white wine. As she sat there sipping the second glass after finishing her lunch she thought seriously and rationally about her marriage to Rich. She really loved Rich, but she knew that she and Rich were going to have to have a discussion about their sex life. She just didn't know how to go about it.\n\nEventually she finished the second glass of wine and had a pleasant buzz on that was making her sleepy. She didn't have a plan for how she was going to talk to Rich about their sex life, but right now she wanted a nap, so she went home, took her clothes off, stretched out naked on the bed, got herself off quickly by fingering her clit, and fell into a deep sleep.\n\nLater she would remember that she dreamed about Brother Leonard and his big dick while she slept. Fortunately she woke well before Rich got home. She got up, dressed in the same clothes she had been wearing in the morning before she detoured her day into sex, and wandered out to the kitchen to plan dinner. Before she started to prepare anything, she stretched and yawned and said to herself aloud, \"Now that was a nice day. I think I may need more of those.\"",
        "For a couple of months that was just what Beth did. She had been working hard for she couldn't remember how long, and she just let herself have one nice day after another. She still got the chores necessary to run the household done, but that was a piece of cake compared to the way things had been in Ohio when she had to do all the household work and hold down a full-time job. So what did she do with all of her spare time? Simple, more of what had made Tuesday such a nice day. More lunches out, some long walks in the beautiful California sunshine, and . . . lots more extended masturbation sessions. She also started educating herself about sexual issues via the Internet. She read articles about human sexuality. She read articles about how to do things, like how to masturbate and enjoy it, how to give oral sex (or cock sucking as she preferred to describe it when talking to herself), how to seduce your husband or lover, and how lesbians had sex. It seemed like there was an endless supply of information and advice on the Internet about sex--surprise, surprise. She also looked at porn and she found sites devoted to erotic stories covering every kind of sexual activity peoples' deviant minds could conjure up.\n\nThis went on for a couple of months, and Beth decided that moving to California was just about the best thing that could have happened to her. She had discovered a whole new world, and she was reveling in it. She even found a porn shop and bought herself several toys including a large dildo and a couple of vibrators.\n\nIt was terribly exciting to walk into the porn shop and look at all the strange toys they had on their shelves and then to actually pick one out and walk up to the clerk and pay for it. \"What kind of pervert must she think I am?\" she asked herself. \"But wait, wait. She works here and sells this stuff. How can she have a bad opinion of me? Hmm. I wonder which of these toys she uses on herself?\"\n\nBeth was always deliciously horny as she drove away from the shop after each visit, and she put all of her new toys to good use as soon as she got them home. She had extended masturbation sessions using the dildo and the vibrators, and then she had quickies using the smaller of the vibrators. Sometimes she had several in a day. Other times she would skip a day or two. Her world did not revolve around sex, but she had finally fully incorporated sex into her world. It was very satisfying.\n\nOne morning, as Beth was taking one of her long walks across the Stanford campus enjoying the sun and a post orgasmic glow, a lingering thought reoccurred to her, \"You know this new lifestyle is great, but I need to get Rich involved. Oh sure we have our Friday night quickies (or at least we used to before we left Cleveland), but they are so shallow compared to the rest of my sex life. His orgasms can't be like mine. He is so missing out and I do love him. How do I get him to really join me?\"\n\nShe puzzled about this for the rest of her walk, deciding that she really did need to have a long serious talk with Rich and convince him to expand his horizons on the subject of their sex life, but she didn't have a plan as to how to go about it. He was so reserved and bashful about the subject that she was sure that she couldn't just it him down and say, \"Rich, we need to fuck more.\" He might have a stroke.\n\nOn the way home she stopped at her favorite restaurant in the Stanford Mall and had a lengthy lunch that included a bit of wine. She didn't do this every day, but her new lifestyle allowed it a couple of times a week.\n\nShe sat at an outdoor table enjoying the sun. When she finished her lunch she ordered a second glass of wine. As she took her first sip of the second glass her mind returned to the question of how she was going to broaden Rich's narrow outlook on sex.\n\n\"Things have got to change,\" she told herself. \"Our sex life is non-existent and that is not the way to run a marriage. Sooner or later one or both of us are going to find someone else who will give us a real sex life and that will be the end of the marriage.\"\n\nAnother sip of the wine. \"Well I know I can certainly enjoy more sex with Rich than I have now, but how do I get him to give me more?\"\n\n\"He can't really be satisfied with what we have . . . Can he?\"\n\nMore wine. \"Well we are just going to have to talk about it. But what if he gets all prissy and moralistic and tells me I shouldn't want more sex?\"\n\nMore wine. \"That's a risk I have to take. I can't go on just masturbating while I think about other men, like Brother Leonard.\"\n\n\"Well I don't necessarily want to stop that, but there has to be more with Rich too. He can't be happy with what he is getting . . . can he?\"\n\nThis back and forth conversation went on in her head as she sat in the sun enjoying the second glass of wine. Eventually she decided she was sleepy and wanted to go home and take a nap before she had to fix dinner for Rich. She knew she really didn't have a plan as she walked back to their apartment, but she was sure she would develop something. \"I just have to,\" she told herself.\n\nWhen she got home she stripped off all her clothes and stretched out naked on their bed to take her nap, as she did most afternoons. She dreamed about Brother Leonard and his tight buns and big dick again, but that was far from the first thing she thought of when she awoke. She was awakened by her very shocked husband who had come home early and was standing at the foot of the bed staring at his naked wife.\n\n\"Beth! You're naked!\" He was in shock.\n\nHer first thought when she awoke was to cover herself up with something, but there was nothing handy, so she just sat up shaking her head to clear it (and incidentally her big tits at the same time).\n\n\"Yeah, I guess I am.\" she said, her head still a little foggy from the deep sleep she had been in.\n\nRich sputtered, \"But, but, but . . .Beth!\" He was so upset he was actually stuttering, \"You ca, ca, can't, you sh, sh, shouldn't do this.\" He was beside himself.\n\n\"Well, Rich,\" she said, \"Actually I can do it, and I am doing it. I've decided I like being naked around the house, and since I like it, I guess I should do it.\"\n\n\"What! Have you taken leave of your senses? What would Preacher McCoy think?\"\n\nPreacher McCoy was the preacher at their old church in Cleveland. Beth had worked for him and while he preached a good line about the evils of fornication and masturbation, some how she always had her suspicions about him, especially because of the way he seemed to look at her tits whenever he thought she wasn't noticing him. She had grown up listening to his sermons, but working around him as a fully-grown woman had given her some real doubts about his character.\n\n\"Well,\" Beth, now fully awake, thought, \"I guess we are going to have our talk sooner than I expected.\" She wanted to say, \"Who gives a fuck what that horny old bastard Preacher McCoy would say?\" but she knew that wasn't the way to start this conversation.\n\nShe pulled herself up into a sitting position, curling her legs demurely beneath her and patted the bed. \"Sit down Rich. And take your coat and tie off. We need to talk.\"\n\n\"Shouldn't you get dressed?\"\n\n\"Why. We're married. Now take that tie off and sit down.\"\n\nRich stood, peeling his tie off and then his coat and then started towards the closet to hang them up.\n\n\"Just toss them on the chair,\" she said. \"It won't hurt them and we need to talk now.\" She patted the bed again. \"He can be so anal sometimes,\" she thought. \"I guess that's what makes him a good lawyer.\"\n\nRich walked back to the bed, carefully hanging his coat and tie on the chair. It obviously made him uncomfortable not to hang them up, but his naked wife was making him more uncomfortable. He sat gingerly on the end of the bed, as far from her as he could get and said nothing, just looking at Beth.\n\nBeth's mind was going a mile a minute trying to decide how to do this. She let Rich just sit there and stare at her while she tried to decide how to start.\n\n\"Do you like this, Rich?\"\n\n\"Do I like what?\"\n\n\"This,\" she said gesturing with her hands toward herself. \"Me sitting naked on the bed.\"\n\n\"Yes of course. You're my wife. I love you.\"\n\n\"That's not what I meant,\" she responded. \"I mean do you like seeing me naked at,\" . . . she paused to look at the clock on the bedside table . . . \"at 3:30 in the afternoon.\"\n\n\"Uhh. Yeah, I guess so.\"\n\n\"Not a very satisfactory answer,\" thought Beth. \"But nobody said this was going to be easy.\"\n\nShe thought for a minute before taking a new tack. \"Rich, do you ever masturbate?\"\n\n\"What!\" he said in a shocked non-answer.\n\n\"I said, do you masturbate?\" she responded with greater firmness.\n\nShe waited a moment, but he was silent, avoiding her eyes which actually pretty much answered her question. \"Well I do Rich. All the time.\"\n\n\"Oh Beth!\" he said, returning his eyes to her. \"Why?\"\n\n\"Rich,\" she said softly, \"There are two reasons why I masturbate.\"\n\n\"First it feels good. Yup, that's true, it feels good. Really good.\"\n\n\"And do you know what the second reason I masturbate is?\" she asked Rich, who was staring at her in shock.\n\n\"No,\" he said softly.\n\n\"Because we don't have enough sex, and when we do, we don't do it very well.\"\n\n\"Oh,\" he said, his eyes downcast. He paused for a moment. \"We could do it more often.\" Another pause. \"And maybe we could try it with the lights on.\" He was looking at her again, probably hoping that he could escape this painful conversation with that offer. \"Then maybe you wouldn't have to masturbate anymore.\"\n\n\"Good sign. He's willing to try,\" she thought. But Beth had the bit in her teeth, and she wasn't going to stop now.\n\n\"But you didn't answer my question Rich. Do you masturbate?\"\n\nHe looked away again. There was a long silence. Finally, he replied with a barely audible, \"Yes.\"\n\n\"Rich, look at me.\" She waited until he looked at her and made eye contact. \"There's nothing wrong with that. Everyone does it. At least everyone that's healthy, as near as I can tell.\"\n\n\"But Preacher McCoy told us it was wrong.\"\n\n\"Rich, Preacher McCoy told us a lot of things were wrong, and you and I both know that most of them are things that most people do all time. I agree, that it's not a good idea to drink so much you become an alcoholic, but an awful lot of people have a drink or two a day. It doesn't do them any harm, and nobody thinks anything of it. Preacher McCoy said that was wrong, just like he said masturbating was wrong, but I think he was just saying those things so that a lot of those blue nosed, old ladies in the congregation would keep making big donations. Anyway, he's not our preacher anymore and I don't intend to let him run my life.\"\n\nRich continued to be silent.\n\n\"You know Rich, I think we need to start with Preacher McCoy's no drinking rule. I have a nice cold bottle of white wine in the fridge and I think we ought to go drink that. Not just a glass, but the whole bottle.\"\n\n\"Okay, sure,\" Rich responded, sounding relieved to have the topic move off the subject of sex.\n\nBeth hopped off the bed and started for the kitchen.\n\n\"Beth,\" Rich called out. \"Aren't you going to get dressed, first? Before you go out into the rest of the apartment.\"\n\nBeth stopped at the door and turned looking at Rich. \"Nope. I told you I like walking around the apartment naked.\"\n\nShe turned and continued out the door saying over her shoulder, \"You ought to get naked too. The wine will taste better.\" She knew that idea was a non-starter. She just said it to tease him.\n\nRich stood staring at her naked frame as she walked away. The only thing he could think was, \"What has come over my wife?\"\n\nBeth fully intended to explain what had come over his wife over a cold bottle of wine. And she planned on being naked while she did it.\n\nBeth stood naked before the refrigerator getting the bottle of wine out as her husband wandered in behind her. She refrained from leaning forward until she heard Rich walk into the kitchen and then she made a point of bending over farther than necessary to retrieve the wine so that Rich could get a good view of her ass. She also had spread her stance enough so that anyone behind her would have a great view of her pussy when she leaned forward. Once she knew Rich was in the room, she bent forward and took plenty of time to retrieve the wine, ensuring Rich had ample time to enjoy the view.\n\nShe turned as she closed the door behind her and wanted to say, \"Like what you're seeing?\" but she decided that she needed to go slow with Rich, so she just smiled at him and then turned and walked to the drawer where the cork screw was stored. She retrieved the corkscrew and then two glasses from the top shelf of the cupboard above, standing on her toes to reach the high shelf with her back turned to Rich. She knew that standing on her toes to reach the glasses would make her butt stick out, so she took her time, just as she had retrieving the wine from the refrigerator. Then she turned towards him and leaned back against the counter, her legs spread just a bit and her hips thrust forward holding the wine in one hand and the two glasses in the other. Rich stood on the other side of the room staring at her in silence. She noticed that he was staring at her naked body rather than her face. \"This is fun,\" she thought.\n\n\"Ready for a drink,\" she asked holding the wine and the glasses aloft.\n\n\"Isn't it a little early?\" Rich asked, backpedaling from what he said he would do when they were in the bedroom.\n\n\"Oh I don't think so,\" Beth said. \"As they say, it's five o'clock in Cleveland. Besides, we have some things to discuss and the wine will help. Have a seat.\"\n\nRich sat at the table as Beth walked naked across the kitchen holding the wine and the glasses. When she reached the table she stood opposite Rich, setting the glasses, the wine, and the corkscrew before her on the table. She leaned forward a bit, letting her large breasts hang down, opened the wine, and filled a glass for each of them. Then she leaned even farther forward to reach across the table to place a glass of wine before Rich, who stared unabashedly at her hanging tits. Beth noticed his focus, but said nothing. Finally she walked around the side of the table and took a seat that insured Rich could see all of her naked body.\n\n\"Drink up,\" she said, holding her glass aloft for a moment before taking a long sip of the wine. Rich mimicked her toast and took a drink, a long drink.\n\n\"Now Rich, we have some things to discuss,\" she said lifting a foot and setting it on the table so that her pussy was fully exposed to Rich. He was taking a second drink and he choked on it as she exposed herself to him.\n\nShe waited silently until he composed himself.\n\n\"You mean about drinking?\" Rich asked.\n\n\"No Rich, we need to talk about your masturbation.\"\n\n\"Oh.\"\n\n\"How often do you masturbate?\" she asked. \"Like, how many times a week.\"\n\nRich was turning white. He gulped down the rest of his glass of wine and Beth dropped her foot to the floor (without pulling her legs together) and quickly refilled it. Her boobs were dragging across the table as she refilled the glass. It felt good.\n\nHe took another long pull at his wine but remained silent.\n\nBeth waited long enough to take another drink of her wine and to refill her glass. This bottle wasn't going to last at this rate, but she had another in the fridge.\n\n\"Really Rich, I want to know. I am curious to find out if you masturbate as much as I do?\"\n\nRich took another drink. Now the glass was nearing empty again. Finally he asked, \"So how often do you . . . do it.\"\n\n\"You mean masturbate,\" she asked finishing her glass and refilling it while she waited for his response.\n\n\"Yes, I mean masturbate. How many times a week do you do it.\"\n\n\"Progress,\" she thought. \"He said the word.\"\n\nWell,\" she responded as she refilled his now nearly empty glass. It varies a little, and I don't really keep a count, but I guess 10 or 15 times a week.\"\n\n\"Really?\" he said.\n\n\"Yes, really,\" she responded. She got up and walked to the refrigerator to get another bottle of wine. She again took her time bending over to retrieve the wine, providing Rich ample time to stare at her ass and her exposed pussy. He was silent as he watched her walk naked across the room and back.\n\nBeth opened the wine and refilled their glasses, again leaning over the table with her tits hanging down. Then she returned to her chair, putting one foot up on the table to expose her sex again. Rich watched her carefully.\n\n\"So how many times a week do you jack-off Rich?\" she asked, using language she had learned on the Internet.\n\nRich winced at her language and took another drink of wine. \"Well, not as often as that,\" he said. \"Only a few times a month.\"\n\n\"Really,\" she said \"I thought men always got themselves off more than women.\"\n\nHe shrugged and took another drink. By now they were getting well into the second bottle of wine. She knew he was lying. Most people won't admit to how frequently they masturbate, but she saw no point in calling him on it.\n\nChanging her tack, she asked, \"So where do you do it. I mean where do you masturbate.\"\n\nRich continued to look uncomfortable, but less so now that the wine was loosening his inhibitions. \"Mostly in the shower,\" he responded.\n\n\"So you jack-off in the shower after your morning run?\" She took another sip of wine.\n\n\"Yes,\" he said as he set his glass down.\n\n\"Every morning?\"\n\n\"Pretty much.\"\n\n\"Any place else?\"\n\nHe took another drink and smiled as he said, \"Well sometimes in stall in the bathroom in our office at work.\"\n\n\"Really? That's pretty daring.\"\n\n\"Well sometimes my work is kind of dull and I get to thinking about your tits, and I get so horny I just have to get some relief so I can get some work done.\" The wine was really beginning to loosen him up. Beth couldn't remember him having ever used the word \"tits\" before.\n\n\"You mean these?\" Beth said as she lifted each of her tits up and pointed the nipples at him.\n\nHe finished another gulp of wine and said, \"Yes, exactly.\"\n\n\"Time for another tactic,\" Beth thought.\n\n\"Rich, why don't you take the rest of your clothes off, so I'm not the only naked person in this conversation.\"\n\n\"Uhh . . . okay,\" He said. \"Let me go to the bedroom and hang things up.\"\n\n\"No, just take your clothes off and toss them over that chair,\" she said gesturing at an empty chair with her wine glass.\n\nRich hesitated for a moment, taking another drink of wine. Then he turned in his chair, leaned forward and unlaced his shoes. He kicked them off, stripped off his socks and then appeared to stall. Finally he stood and Beth saw the cause of his hesitation\u2014a tent in his pants. \"Great!\" she thought. \"He's got a hard on. This is progress.\"\n\nThe wine had taken its toll on Rich's inhibitions. He quickly stripped the remainder of his clothes off, simply tossing them in the general direction of an unoccupied chair, something she had never seen him do in the seven years they had been married. His clothes missed the chair and landed in a heap beyond it. Rich ignored them. Now he was as naked as Beth. His prick stood straight out and Beth thought, \"Oh my, it's bigger than I had hoped.\" Rich sat back down and gulped the remainder of the wine in his glass, which Beth promptly refilled.\n\nBeth stared at his erect cock for a moment or two and then said, \"So you really jack-off more than a few times a month, don't you? Really, it's a lot more, isn't it?\"\n\n\"Yeah, I guess so,\" he responded with little trace of his prior reticence.\n\n\"Do you like it?\" she asked.\n\n\"Duh!\"\n\nBeth laughed, \"Okay. Dumb question.\"\n\n\"Are you getting drunk yet?\" she asked.\n\n\"Yes, I am, and it feels good.\"\n\n\"So what do you think about when you masturbate in the shower?\"\n\n\"Your tits.\"\n\n\"Hmmm, you're pretty obsessed with my tits,\" Beth said as she began to massage them.",
        "\"I guess so,\" he responded. \"You have great tits.\"\n\n\"Thank you,\" she said as she continued to massage her tits.\n\n\"Where do you masturbate?\" he asked.\n\nBeth laughed, \"Oh god, everywhere. I think I have cum in every room in this apartment more times than I can count.\"\n\n\"Any place outside the apartment?\" he asked.\n\n\"Well, occasionally.\"\n\n\"Tell me about it,\"\n\nOkay, but first I want you to show me how you jerk your cock. Just start pulling on it, and I will tell you about it.\"\n\nRich drained his glass and thought for a moment. The second bottle was almost gone. \"Okay,\" he said as he reached down with his right hand and begin to stroke his cock. There was no hesitation. He obviously knew just how his cock liked to be stroked.\n\nBeth sat and watched as Rich stroked his cock. He really was loosening up. After a few moments she began to use her hands to play with her pussy. She was very aroused, but she wanted to take her time getting to a climax, so she focused on her pussy and avoided anything beyond an occasional quick flick of her clit.\n\nThey were silent for a long time as they watched each other masturbate. Finally Rich said, \"You were going to tell me where else you masturbate besides here in the apartment?\"\n\n\"Oh yes. I was, wasn't I.\"\n\n\"Well. . .\" Now it was Beth's turn to be reticent. She gasped as she pushed two fingers deep into her cunt. More silence as she recovered her composure. \"Well, I recently bought this toy at the porn shop. It's called . . . \"\n\n\"Porn shop?\" Rich interrupted.\n\n\"Umm, yes,\" she responded with a wicked smile as she continued to plumb her depths with her fingers. \"There is a shop I found in San Jose that sells all kinds of sex toys, pornographic videos . . .they have just about anything a twisted mind could desire, including lingerie and other clothing that is, . . . a . . . very revealing.\"\n\n\"Anyhow, returning to my story, I bought an egg there.\"\n\n\"An egg?\"\n\n\"Oh yes, you wouldn't know would you,\" Beth giggled. \"It's a vibrator that is shaped like an egg. I slide it completely into my pussy and then adjust its vibration speed with a remote control. Lately I've been taking the egg with me on some of my morning walks.\"\n\nRich was listening, but mostly focused on watching Beth continuing to finger fuck herself. He continued to stroke his rigid cock.\n\n\"I tuck it into my pussy and then put on my usual walking clothes over the top of it and put the remote in my pocket. As I go out the front door I start it buzzing at its lowest level.\"\n\n\"How far can you go before it makes you cum?\"\n\n\"Well, I'm not sure,\" she said. \"Every time I've tried it I go a mile or two and then find a place to sit on a park bench or some other place that isn't too busy. Then I turn it up to its highest level and let it drive me over the edge. I just don't know how long I could go with it on low before that alone drove me over the edge. I guess I'm just not patient enough.\"\n\n\"That's really nasty,\" he said. He was way past his usually reticent style.\n\n\"I know. That's what I like about it. I feel like such a slut when I do that.\"\n\n\"So what other nasty toys did you buy at this porn shop?\" Rich was using the copious pre-cum that had escaped from the tip of his cock to lubricate his entire dick. His fist was wrapped around the shaft and making the most decadent sounds as he slid it up and down with just the right pressure to hold him at a high level of arousal without pushing him over the edge.\n\n\"God that's sexy to watch,\" she said.\n\n\"So are you.\"\n\nThey were silent again for a while, engrossed in watching each other masturbate. They had both forgotten the conversation at this point.\n\nBeth pulled her fingers from her cunt and used the juice on them to lube up the nipple on her left tit. The hand that had been in her cunt was massaging and pulling on the now slippery nipple while the other hand massaged the remainder of the breast. \"Tell me more about how you fantasize about my tits when you masturbate?\" she said, holding her boob with its glistening nipple up and towards him.\n\nRich responded quickly, all his earlier reticence vanished. I fantasize about cumming on them. It's the last thing I do just as I start to shoot my cum.\"\n\n\"Oh really,\" Beth said with a lascivious smile. \"That would be so nasty. Will you do that tonight? I want you to spray your cum all over my tits and then I will make myself cum. Oh fuck, that would be so good.\"\n\n\"Sure. How about now? I'm having to work pretty hard to hold off.\"\n\n\"Oh Yes. Now would be great!\" Beth said with excitement. She held up both her big tits and slumped in her chair sliding her legs forward and spreading them even farther than they had been before. \"Get over here and spray that hot slippery cum all over my tits.\"\n\nRich stood and took two strides, placing himself directly between her lewdly spread legs. He began to rapidly accelerate the pace of his strokes.\n\n\"Oh that's it you horny bastard. Stroke that cock. Spray that hot slippery cum of yours on my tits.\"\n\nRich stiffened and began to groan as the first shot of his cum leapt from the end of his prick. It landed on the top of Beth's right tit in a long, hot, white string that coated the top of her breast and then quickly begin to sag and run down her tit. The next shot hit her left tit and a third one hit her just below her throat, where it ran down into the cleavage between her tits. While the first three shots dripped down her tits, he fired off two more shots, one of which went astray and hit her in the cheek.\n\n\"Oh fuck!\" he gasped as he staggered back to his chair.\n\nBeth waited until he was seated in the chair again and then used both hands to smear the hot slippery cum all over her tits, leaving the glob on her cheek slowly dripping down onto her chest. She stared directly at Rich while she pushed the slippery cum around on her chest, making sure that they maintained eye contact. Then she used one hand to spread her pussy lips and the other to begin to rapidly stroke her clit. She knew it wouldn't take long. Just before she reached her climax, she dropped the hand spreading her lips to her cunt and jammed three fingers into it. She had Rich's undivided attention the entire time.\n\n\"Oh, Oh, Oh, shit! Oh fuck. I'm cumming. Oh Fuuuuuuuck.\" She arched her back as the first wave of the climax ripped through her and then slumped in the chair, whimpering as a series of minor waves rolled through her.\n\nShe was silent for a moment, panting. Then, \"Oh fuck. That was a good one . . . Umm, come with me Baby. Lets curl up on the bed.\"\n\nWith that the two of them staggered off to the bedroom and fell naked on the bed. He pulled her to him and they kissed for a long time. They hadn't kissed like that since before they were married when petting was the closest they got to screwing. Then they both drifted off to sleep.\n\n* * * * *\n\nWhen Beth woke up she noticed two things. First it was dark so she knew they had been asleep for some time, and secondly Rich was curled behind her with his hands fondling her tits and a very hard cock pressed against her bottom.\n\n\"Ummm, that feels delicious,\" she said softly.\n\n\"Good.\"\n\nBeth began to wriggle her butt against Rich's cock.\n\n\"Oh, you're coming to life are you?\" Rich whispered.\n\n\"Yes, . . . and I notice that you are too.\"\n\nBeth rolled toward Rich and they began a long sensuous kiss, their mouths open and their tongues dueling. While she kissed him she squirmed so her tits were rubbing against his chest. Rich ran his hands softly up and down her back and then down to her hips where he used them to pull her tightly against him. She could feel his hard cock trapped between the two of them and his fingers pressed into the muscles in her ass.\n\nBeth had a thought, a very nasty thought. Well it was a nasty thought for her. She wanted to suck his cock. She worried about what his reaction would be, but ultimately decided to go ahead, so she began to slide down his body trailing kisses and licking him as she went.\n\n\"Where are you going Beth?\"\n\n\"You'll see,\" she said and resumed her kissing and licking. \"Lets just say Preacher McCoy wouldn't approve.\"\n\n\"I'm not sure I care what Preacher McCoy thinks anymore,\" Rich said.\n\n\"Good cause you're going to like this and Preacher McCoy definitely wouldn't approve.\"\n\nWhen Beth reached his mid-section, she rose to her knees, straddling Rich's legs and then leaned forward, grabbed his cock with both hands, and began to stroke it. She quickly noticed that pre-cum was dribbling from the tip and she put that to good use lubing his shaft.\n\nRich sucked in his breath. \"Oh, fuck that feels good.\"\n\n\"So you like that?\"\n\n\"Oh fuck yes. Please don't stop.\"\n\n\"Well, how about this?\" she said as she leaned farther forward dragging her hanging tits along his thighs and began to massage the end of his dick with her tongue. She had never sucked a cock before, but she had read about it. \"What the hell,\" she thought, \"There's only one way to learn this skill.\"\n\nBeth continued to jack the shaft of Rich's cock while she massaged the head with her tongue. Eventually she slid her lips around the head so it was in her mouth. She continued to work it with her tongue, and she continued to jack the shaft with her hands, making sure that she let plenty of saliva flow from her mouth to keep the shaft well lubed.\n\n\"Oh Beth, you're sucking my cock!\"\n\n\"Beth sucked a lot more of his cock into her mouth and pretend to gag. Actually she was trying not to laugh at Rich's comment.\n\nRecovered from her laugh, she pulled her mouth off his cock, while continuing to stroke and twist her hands on the shaft.\n\n\"Yes, I'm your horny little slut and I'm sucking your cock. Do you want me to stop? I hope not, because I love to suck cock.\" Before he could respond she engulfed his cock with her mouth and began to move up and down on it, sucking hard each time she raised her head.\n\n\"Oh, fuck, fuck, fuck . . . fuck, don't stop. Just keep being my horny little slut. That's so fucking good.\"\n\nAfter several minutes of intensive cock sucking, during which Beth experimented with various techniques she had read about, she began to worry about whether he would cum in her mouth without warning. She wasn't sure she was quite ready for that.\n\n\"Now, lets fuck,\" she said pulling her mouth and her hands away from his prick.\n\n\"Okay.\" Rich was ready to agree to almost anything. He started to sit up so he could get into their customary missionary position.\n\n\"Oh no, not like that,\" Beth said pushing him back down on his back. She rose to her knees, leaned back, and stretched to reach the switch on a lamp on the bedside table. \"First, no more fucking in the dark,\" she said.\n\nNow she could see Rich lying on his back with his cock sticking straight up. \"God he has a nice cock,\" she thought. Since she was already astride him, she simply walked forward on her knees until her pussy was poised over his cock. She reached back and grabbed his dick and guided it into herself as she lowered her hips into place. Somehow he seemed much bigger and harder than on their Friday night missionary fucks. Now he was filling her cunt and stretching her, not quite like the cucumber, but plenty good enough. \"Oh God yes, it is good enough. It is more than good enough. It is fucking great,\" she thought. She began to raise and lower herself, riding his cock. Rich reciprocated with his hips. It wasn't fast, but the penetration was deep and the feeling was magnificent for both of them.\n\n\"Oh Beth, why didn't we screw like this before?\" Rich said.\n\n\"I have no fucking idea, but . . . but oh shit this is good!\"\n\n\"Rich, put your hands on my tits.\"\n\nRich tentatively put his hands on her tits.\n\n\"Now just massage them.\" He did as instructed as Beth continued to ride his cock.\n\n\"Now pinch the nipples between your fingers,\" Beth began to groan as Rich pinched her nipples. \"Harder, pinch them harder. Pull on them.\"\n\nAs Rich began to pinch and pull her nipples Beth knew she was going to cum and very soon.\n\n\"Oh Rich . . . That's so fucking good . . . I'm going to cum.\"\n\nShe began to ride him wildly so her big tits were swinging everywhere. She reached down with one hand and began to rub her clit, very quickly. Then she let out a string of obscenities as her climax hit her and Rich felt her cunt clamp down on his cock.\n\nThat set him off. He pushed up with his hips driving his shaft as deep into Beth as he could get it, and he held it there as stream after stream of cum squirted into her. She fell forward onto his chest, and he wrapped his arms around her as they both melted into the most relaxed state they had ever experienced.\n\nThey held their position for what seemed a long time, probably longer than their traditional missionary sex took to initiate and complete. Eventually Beth rolled off to one side, her legs and arms still tangled with Rich.\n\n\"Oh that was so nice,\" she said softly.\n\n\"Amen to that sister,\" Rich responded.\n\nBeth giggled. \"You can't talk that way about the kind of sex we've been having this evening. What would Preacher McCoy think?\"\n\nRich broke out in a belly laugh.\n\n\"You know what I think Rich? I think that we ought to have a name for the position we were just fucking in,\" Beth continued.\n\n\"Yes?\"\n\n\"Yup.\" Beth was struggling not to start giggling before she finished. \"We ought to call it the 'Preacher McCoy'. What do you think?\"\n\nNow Rich was howling with laughter. He was to the point where tears were running down his cheeks.\n\nHe sat up with his feet on the floor twisting to look back at Beth as he gasped for air.\n\n\"Well,\" he said, \"that sounds good, but there are a bunch of other positions we will need to try before we finalize any dedications like that, and there are some other people we knew in Cleveland that might qualify for a position name.\"\n\nBy this time Beth had crawled across the bed and was sitting next to Rich, enjoying the warmth of his thigh against hers. Wanting to continue the theme she asked, \"Who could we dedicate the blow job I gave you to?\"\n\n\"Ooh, remember that terrible Sunday School teacher we had in the fourth grade? What was her name?\"\n\nOh, that was sister Bernadette. She was just awful to me.\"\n\n\"Me too,\" said Rich.\n\n\"So,\" Beth said, \"My blow job could be a 'Bernadette Special'.\"\n\nNow they were both holding their sides with laughter.\n\nBeth leaned against him with an arm around him and her head on his shoulder. \"Oh this is fun . . . but by the way, what time is it? My stomach says we missed dinner.\"\n\nRich leaned back and looked at the clock on the bedside table. \"Wow. It's 10:30.\"\n\n\"Ooh, ooh, ooh! We can still get pizza, if we hurry. I'll call Patrino's and get them to send it over with their pizza dude.\"\n\n\"Will you smear it on your tits so I can lick it off?\" Rich asked.\n\n\"Oh yeah! . . . \"But I want to eat some too. Have to keep our strength up. This is going to be a long night.\"\n\n\"You want more woman?\"\n\n\"Ohhh, yeah.\"\n\n* * * * *\n\nA few months later Beth learned from a friend that preacher McCoy and Brother Leonard were fired by the church board of trustees for conduct in conflict with the standards of the church. The talk around the church was that Preacher McCoy and Brother Leonard had been the leaders of a small but active swingers group within the church.\n\nRich and Beth remain happily married and have more great sex than anyone should be permitted to have, at least by the standards of the church they grew up in.\n\nBeth never has told Rich about what she did with the cucumber she included in the salad in the last dinner that she served their parents in Cleveland."
    ],
    "authorname": "Bluepen451",
    "tags": [
        "cucumber",
        "masturbating wife",
        "mutual masturbation",
        "big breasts",
        "female orgasm",
        "blow job",
        "jerking off",
        "masturbating",
        "fucking"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/beth-and-rich"
}