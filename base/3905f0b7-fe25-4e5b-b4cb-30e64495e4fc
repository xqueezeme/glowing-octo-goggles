{
    "title": "Summer Sucks!",
    "pages": [
        "---------\n\nHis Summer Job Clients Suck. Literally.\n\nThis is an entry in the Summer Loving Contest. Thanks to Meathead96 for his editing help in making this a better story.\n\n---------\n\nMemorial Day weekend my brother Aaron drove down from the university to spend the long weekend. We all knew it was one of the last times we'd be together, and wanted to make the most of it. The grill was fired up, the beer was flowing, and most of our neighbors, friends and family were over for the big send-off. Only my sister Debbie was missing. Deb was going to school out east, and hadn't finished finals yet.\n\nAaron, the oldest, was about to make family history and become the first Borman to graduate college. He already had lined up his first 'real' job, and was headed to Atlanta as soon as school got out. It had come as a surprise to all of us how fast everything happened.\n\nMy brother had always been an Ok student, nothing exceptional. He hadn't dated much in high-school, wasn't on any sports teams, and had been a pretty average B+ student. Average height, average weight (maybe a little below average), plain sandy brown hair, Aaron was invisible as far as high-school went. He'd worked part time at the video store, and when he was 17 he was given the old hand-me-down Chevy Blazer to drive, which had seen better days even then.\n\nI guess it was in the family genes. I followed in his footsteps; a complete non-entity, non-joiner, and non-dater. If anything, I was slightly less than average; A little smaller, a little lighter, a little quieter -- think Aaron, only less. My teachers seemed to forget my name, in spite of being the third in the family to pass through the hallowed halls of Heritage High, in almost as many years. I got decent enough grades, which I worked reasonably hard for, but that was about all I had going for me.\n\nDon't get me wrong. I wanted more. I wanted to be different. I wanted to bust loose and leave the family legacy behind. I made an effort to look good. I took care of myself. I worked out. I ate well. I didn't have the size for football, or the height for basketball, but I went out for baseball and track, agonizingly close to making both teams, but missing the final cut each time. I had practiced the entire previous summer, determined that year would be the one. It was my senior year. There would be no next year.\n\nI'd even dated, or at least tried. My initial sky-high aspirations had been exposed, in less than gentle terms, as the impossible, unattainable fantasies they were. Harshly. \n\nLowering my standards a notch, and then another, and yet another, I'd finally found someone who'd go out with me, and for more than one date. I felt pretty good about that. Eric and Darrell, my two closest friends, had been the first to drag me back to reality, after my unfortunate first attempts. I felt like the proverbial lobster in a tank: my fellow invertebrate's eager to drag me back down every time I strove to climb out. When Cathy Gates had finally let me kiss her, and even feel her chest through her shirt, I knew I was teetering on the lip of escape, ready to break free - FREE! So what if she was only a sophomore, and perhaps even less average than me? A guy's gotta start somewhere. Anyway, I could close my eyes when I kissed her.\n\nI had even convinced her to come to the Memorial Day party, to kick off summer, say goodbye to my brother, and to acknowledge the fact that our High-School days were all but over. Less than two weeks to go. I guess I wanted to prove something as well. I had a girl! And I wanted my big brother to know it. Some things never change.\n\nAaron changed after he went away. He'd joined a fraternity, eventually becoming the vice-president. He was about to graduate Cum Laude, and he showed up at our house with a babe in tow that was like to bring me to my knees. She was everything we Borman's dreamed of, and yet so far beyond our grasp, sometimes we didn't even know it. This little stunner was on my brother like white on rice. As far as sibling rivalry went, that round went to Aaron.\n\nSunday evening, after the weekend of visiting and relaxation, Aaron pulled me aside and insisted I join him for a drive to the hardware store. A 'guy' thing. I was ready to get out of there. Cathy had given me grief for trying to push things too fast and had left earlier in a huff. Too fast? So I had my hand in her shirt. We'd dated over two weeks, and with two weeks left in the school year I was going 'too fast'. Shit. I was going to leave high-school a virgin. No two ways about it.\n\nAs soon as we were a couple of blocks away, he pulled into Sonic, where we ordered drinks while he broached what was really on his mind.\n\n\"What're your plans for the summer?\" he asked, while we waited for our carhop to bring us our drinks.\n\n\"I'm not sure yet. Probably work at the video store again. I was thinking about taking a couple of courses online before starting up at Quad-C next semester.\"\n\n\"I've got something better for you. You know that job I had, with the sales route?\" \n\nI rolled my eyes, \"I don't want to do sales, Aaron. Heck, I don't think the Cherry-bomb could take the miles, even if I did.\" Cherry-bomb was the name we'd given to the 12 year old Blazer that had introduced Aaron, my sister Debbie, and now me, to the world of driving. The original cherry-red exterior had faded to a color somewhere between primer and dried blood.\n\n\"Pete, listen to me. It's not what you think it is. Hell, it's not what you could ever even hope to imagine it is. I was planning to work it again this summer, but with my new job, and Jessica, I couldn't do it justice. So I want you to have this.\" He passed me a piece of paper with a phone number, and the name Sandra written in his precise printing. He handed it to me with something akin to reverence.\n\nI looked over and I swear he was practically in tears. He took a deep breath, and wiped his eyes, just as a cute little brunette rolled up with our drinks. \n\nHe rolled down the window and took our drinks, then passed her a $5. When she reached for it, he held her hand for just a second, giving her a squeeze. \"Damn you're pretty. Brought tears to my eyes, just looking at you. You worked here long?\"\n\nShe gave him a nice grin. \"Three weeks.\"\n\n\"What's your name?\"\n\n\"Amber.\"\n\n\"Nice. I'll have to come here more often.\" He closed the window, while she was counting out the change, waving her off, and turning away, no more time for her.\n\nI was in absolute awe of my brother's easy way talking to such a pretty girl. I would have been hard pressed to get an intelligible sentence out. College had certainly changed him.\n\n\"Peter, call that number. She'll probably bring you by for an interview. Whatever she says, whatever she asks, you just make sure that you let her know that you'll be the perfect employee. You'll be on time, polite, and eager to perform any task you're given. Promise me you'll do this,\" he said, any hint of jocularity gone. \"It'll change your life.\"\n\n\"What's the big deal, Aaron? Why so serious?\" \n\n\"Just do this. Please. For me. And for you.\"\n\nI finally agreed, figuring if it was that important, I could at least give it a try.\n\nOur carhop stopped by a few times, eager to see if we needed anything. I watched Aaron roll down the window and chat with her a minute, setting her to giggling, then apologizing for having to run. She gave him his number, which he stuffed in his pocket as we left.\n\nFuck! He got her number! Without even trying. \n\nHe left the next day. After that it was back to normal, average, middle-of-the-road suburban life, at least for me. Aaron, on the other hand, may have finally left 'average' behind.\n\n* * *\n\nI called 'the number' the following weekend. Four days of school left, I knew I needed to line up a job before they were all taken. I had spent many hours wondering what all the fuss was, and contemplating just throwing it away. But Aaron had seemed so sincere. So adamant. I made the call.\n\n\"Sandra speaking,\" I heard an adult woman's voice purr.\n\n\"Hi. My name is Peter Borman. My brother Aaron worked for you for the last few years. He suggested I give you a call and see if I could take his place this year.\" The words shot out of me like rounds from a machine gun. Bang. Bang-bang-bang. Bang-bang-bang-bang-bang. I'd practiced them repeatedly so I wouldn't get tongue tied and sound like a jerk.\n\n\"Aaron! I thought he'd be with me one more summer. Where's the darling boy off to?\" she asked, sounding genuinely interested.\n\n\"He's graduating and is moving to Atlanta for a new job, with his girlfriend Jessica.\" I don't know why I threw in that last comment, but I couldn't resist.\n\n\"Mmmm, How ya gonna keep 'em down on the farm...?\" she seemed to giggle. \"When are you available, Peter?\n\n\"Last day of school is Thursday, and a bunch of us are going down to the beach Saturday,\" I explained.\n\n\"So you're available Friday? I think we can work with that. Let's meet Friday, around 11:00 am. I'll text you directions to my place. Don't be late.\" Her tone sounded as if our call was over.\n\n\"Uhm, Sandra? What should I wear? Aaron hasn't told me much about what we'll be doing.\"\n\n\"He hasn't? Why that sweet boy, he's so considerate of me.\" She had a hint of wistfulness in her voice. \"Wear? It doesn't matter. Just be clean and neat. Got that?\"\n\n\"Absolutely!\" I assured her. \"Friday, 11:00am.\"\n\n* * *\n\nSandra lived on the nice side of town, no doubt about it. Big fancy apartment building, doorman outside, inside all marble and brass, high ceilings and fancy paintings, even a security guard. \n\nThe front desk was expecting me and sent me straight up to 5B. It was a big building and yet only two apartments per floor. I was impressed. Then again, let's face it. I impress pretty easily.\n\nI rang the bell, and Sandra opened the door. She looked to be in her 40's but obviously took care of herself. Then again, what do I know about women's ages? She looked older then my mom. Dark tan, carefully tended hair, nice makeup. She looked to be in good shape, very slender with huge boobs that looked like grapefruits glued to her chest. Soft, round, tan, yummy grapefruits. Her low-cut shiny blouse showed a lot of cleavage, where I may have gotten lost for a while.\n\n\"Darling boy, didn't they ever tell you it isn't polite to stare?\" She chuckled, reaching forward and pulling me into her beautiful living room by the arm. \"Goodness, don't you look sweet? Are you really 18 years old?\"\n\nI'm sure I reddened. I didn't like to be reminded about how young I looked. I was lucky to pass for 16 most of the time. \"As of May 19, yes ma'am.\"\n\nShe held me still, slowly walking around me, her hands brushing across my shoulders. \"Oh, my, yes, I think you have potential, Peter. How much has your brother told you about what we do?\"\n\nI stood, nervous, feeling awkwardly uneasy as her eyes seemed to measure me, her smile predatory. I suddenly felt sorry for those mice you feed to snakes. \"Nothing, really. He just wanted me to make sure that I let you know that I'll be the perfect employee. Always on time. Always clean, neat and eager to perform any task to the best of my ability.\"\n\nShe seemed to like that. \"That sounds like a dream come true. Ok, let's see what we're working with here, young Peter.\" She sat down on a chair that looked like it would be amazingly uncomfortable, designed only to fill space in an artsy way. She perched on the edge and waved me nearer. I stopped about two feet away. \n\n\"Go ahead now, take them off,\" she said with a hint of eagerness.\n\n\"Take them off?\"\n\n\"Yes. Am I not clear? Take them off,\" she said.\n\n\"Take what off?\" I asked, afraid to hear her response.\n\nShe laughed out loud. \"Gracious! He told you nothing?\"\n\nI just shook my head slowly in embarrassment.\n\nShe leaned forward and tugged me closer by the hips. I took a couple of small steps, and watched her with bated breath. She ran her hands up and down my hips, up to my waist, then down my thighs, smiling. I noticed the large rings on her fingers, diamonds and emeralds. The emeralds matched her sparkling eyes.\n\n\"Dear Peter, how can I explain this? We provide a rather unique service to the women of this community. A training and practice service for certain elements of the home life that they might want private.\" \n\nShe was undoing my belt as she spoke, her wrist and forearm brushing against my dick which was getting really uncomfortable, almost bent in two, stuck inside my pants leg, while it struggled to come to life. \n\n\"Our practice is very exclusive and very, very private. Our clients pay well to ensure it stays that way.\" She had my pants open now, unbuttoned and unzipped, and she was pulling them down a bit, lowering them on my hips. I was aching, and wanted desperately to reach down and straighten my erection out before I broke it.\n\nShe suddenly leaned forward, pulling my briefs forward by the waistband and peaking inside. \"Helloooo, I know you're in there somewhere.\" She seemed a little disturbed. \"Are you sure you're Aaron's brother?\"\n\nBefore I could answer, she grabbed my pants at the thighs and jerked them down hard. They stuck for a second on my cock, then slipped past and stopped around my knees. My underwear only made it to mid-thigh, but that seemed far enough. My rod had finally broken free, and stood straight out, bouncing up and down from its sudden release, almost catching Sandra in the eye.\n\nShe sat back and clapped her hands like a little girl, before quickly grabbing my shaft and holding me straight upright, against my belly. I groaned from the idea of a woman, any woman, especially this hot older woman, touching me there. She reached down and cupped my balls, gently testing them, turning my cock from side to side as she examined it. \"Oh, Peter. I believe this is going to work out perfectly. You're everything your brother was, and maybe even just a little bit more. You are absolutely beautiful.\"\n\nShe turned her legs to the side and stood up, heading across the room to an aged roll-top desk. \"Take everything off, everything.\"\n\nMy head was spinning and I could barely catch my breath. My heart was beating out of control. What was my brother into? I tried to breathe deeply, while taking off my shirt and undershirt, but found myself panting instead. I turned my head, watching my potential employer, in her tight form-fitting skirt that barely reached halfway down her thigh. By the time I was fully naked, and folding my clothing while I waited, she was strolling back to me, a smile on her face and a gleam in her eye.\n\n\"Tell me again. You REALLY are eighteen?\"\n\n\"Yes, ma'am.\" I reached for my wallet and pulled out my driver's license, getting just a little irritated with this line of questioning. \n\nJust a little.\n\n\"And how much experience have you had with the ladies? Do you have a girlfriend?\"\n\n\"None really. I have a girl I'm dating, but that hasn't gone past first base yet.\"\n\n\"Really? Surely you're not a virgin?\"\n\n\"Yes, ma'am,\" I told her, feeling the blood rushing to my face. \n\n\"Oh, this is too good. A blank sheet to write upon.\"\n\nShe moved in close and I could see the tiny wrinkles at the sides of her eyes, and above her lips. Little folds of flesh that screamed out 'experience' to me. She was almost my identical height, but I was barefoot, and her feet were encased in perfect heels, giving her a few additional inches of height.\n\n\"How tall are you, Peter?\" she asked, moving forward and sniffing at my neck like I was an appetizer.\n\n\"Five feet, seven inches, since 10th grade,\" I confessed.\n\nShe moved in front of my face, with a decidedly skeptical glance, raising her finely trimmed eyebrows, just a little. \n\n\"Ok,\" I relented, \"Five six and a half.\"\n\nShe brushed against me, my hard-on still waving in the air, begging for attention. As she walked around me, she slid her hand up my length, giving it a little tug and setting it bouncing again. Behind me, her hand continued it's teasing exploration, delving between my cheeks, sliding her hand all the way down to my balls, which were hugging up against my body in concern. Damned balls had better sense than I did.\n\nBy the time she was in front of me, I was trembling all over. She moved in and gave me a little hug, her hand moving down to stroke my cock softly while her lips and tongue tasted my neck. I was ready to scream.\n\n\"You take teasing, well, Peter. Good for you. I know what you want, and how badly you want it, but you're good to show restraint. That's very important in this job. Restraint separates the good from the great. Aaron showed remarkable restraint.\"\n\nThis job? Hell, I'd forgotten all about the job, enthralled by the actions of this amazing cougar, who I lusted after more than I had lusted after anybody in my life. And that includes Marci the cheerleader captain, Heather the majorette, and even my brother's new girlfriend. \n\nShe dropped to her knees before me, and my own almost buckled in anticipation. I barely avoided reaching out and grabbing her head to keep from falling. My hand passed by her ear, and I leaned over and grasped the arm of her chair, slowly stabilizing myself. I was dizzy in anticipation.\n\nI straightened up slowly, spread my legs a bit and braced myself. Please God, let this happen. And please, please, don't let me embarrass myself.\n\n\"Patience, sweet child,\" she said softly. She reached for my cock with one hand stretching me out, until I was pointed directly at her face. She opened her lips, her tongue brushing the bottom one, and breathed hotly on my cock, coaxing moisture out the tip.\n\nShe giggled, \"This is too good.\" Her second hand came in to play, and I saw she had a small tape measure, which she placed against my shaft. She reached back and pulled out a green marker, making a tiny line on my cock. She wrapped the tape around me, at that line, and carefully drew a circle around my shaft, sitting back and admiring her handiwork. She took my stiffness in her hand, at the edge of the line, and abruptly moved her face forward, my cock suddenly disappearing, her tongue brushing against me. She brought her face forward until her lips touched her fingers, and pulled away just as quickly. \"That seems just about right.\"\n\nShe performed the ritual again, this time with a red marker, drawing a second circle maybe an inch closer to my body. I was expecting it this time when she took me in her mouth, and I groaned in appreciation. She pushed forward, and I felt myself pushing firmly against the back of her throat before her lips reached her fingers once more. She pulled back and smacked her lips lewdly.\n\n\"We're almost done, baby. You've been very good, and I promise you, Aunt Sandra's going to make it all worthwhile.\" She took one last measurement, measuring all the way to my body, but didn't make any more marks.\n\nShe sat back for a second, brushing her finger through the sparse curly hair normally hidden from view. She moved my cock back, pressing it against my body, and licked me. She started between my balls, and slowly drew her tongue upward until she hovered above my swollen purple head and licked the top thoroughly before pushing the tip of her tongue into the leaking slit at the top, making me gasp.\n\nShe put her lips against the head and sucked softly. I moaned loudly. \"S...Sandra, I can't hold back much longer,\" I warned through gritted teeth.\n\nShe pulled back quickly and drew me after her, leading me to the dining room table. She had me stand at the place of honor, before leaning over and sucking me into her mouth, pushing down deeply, ensuring her pre-eminent spot in my memory for the rest of my life. She stroked and sucked, rapidly taking me to the point of no-return.\n\n\"SANDRA,\" I cried out, squeezing my ass cheeks together, before making one last thrust into her mouth. \n\nSandra pulled away, almost cat like, and pointed my loaded gun over her glass table. I felt my insides clench like a fist, and painfully settle their tightness around my balls, before ejecting a stream of white goo halfway down the table. She praised me, like one would a small child, or a pet, while her hand drew my seed out, launching a half-dozen more streams across the clear surface. The furthest drops were nearly three quarters the way down the table. I'd come hard before, usually into a paper towel or old sock, but never like that. No way.",
        "She took a linen napkin off the table, and wiped me gently, observing my manhood. \"How long before it's ready to go again?\" she asked.\n\nI looked down at her, disparate to find out how much more she'd allow me to do. \"With a little attention, just a few moments,\" I assured her.\n\nShe stood and turned away from me. I watched her carefully, waiting to see what surprise she had for me next. I wasn't disappointed. She turned around and her shirt was open, her huge breasts spilling out of her lacy pink bra. I watched her hands move forward, and with a sudden movement, her breasts were released, bouncing in complete freedom. She was walking slowly forward, each measured step setting those massive mammaries in motion. Standing just inches away, she held her breasts up to me, cupping them from below.\n\n\"Touch them, Peter.\"\n\nI reached forward and placed my palms against them, her hard nipples burning holes in my palms. They felt hot as coals. I knew I'd see them protruding from the back of my hands any moment. My personal stigmata. \n\nSandra placed her hand against my cheek, stroking me softly. \"You're a treasure.\" She stepped back, and looked down below my waist. My glance followed hers, and I could see that I was as hard as if I'd never come.\n\nShe slid up against me, her body pressed firmly against mine. She pulled my face down and kissed me, softly, her lips caressing mine, her tongue gentle in its effort to claim me. I pulled her tighter, holding her against me, my hands exploring her body, outside of her clothing.\n\nShe whispered, \"Peter, I could just eat you up. I'd love to take you to my room and keep you until your family came searching for you. But I can't be that selfish. You and I will have our own time, but we have an appointment now. Know this: as long as we work together, you'll never go home wanting.\"\n\nShe took my hand and walked me down a hall, knocking on the door at the end. After just a few seconds, a tall Nordic looking woman opened the door, quickly stepping aside so that we could enter. I was deeply embarrassed, standing naked before a stranger, even one as attractive as this lady. My straining member didn't make it any easier.\n\n\"Lenka, please help prepare young Mr. Borman for a study session. We'll be leaving in thirty minutes.\" She turned and walked briskly away, her heals clattering on the hardwood. Leaving me 100% naked, with a very attractive Amazon.\n\nThe woman towering over me tugged me by the hand, almost running to get to the next room, a huge bathroom decked out like a spa. \"We must hurry, yes, or she may be disappointed. We don't want that do we?\" She asked it in impeccable English, tinged with the faintest hints of an East European origin.\n\nLenka was tall. At least 5 or 6 inches taller than me, she was solidly built, not heavy, but not a skinny rail either. She must have had me by a good 30 lbs. She was wearing something similar to a nurse's dress, in blue, and it fit her nicely. Her 3 inch heels made our height differential almost comical.\n\n\"Could I have a robe, or something?\" I asked timidly.\n\nShe giggled. \"A robe? Are you shy, young man? I hope not, there is no time for shyness in your preparations.\" She led me to an exotic looking chair. It looked like something you might see at a manicurist, or maybe at a doctor, or dentist. The armrests had large porcelain bowls at the ends. The seat was split, with just a little padding under each cheek and for each leg, with foot rests also ending in bowls. I felt very exposed when sitting in it, my balls and ass hanging in the air, as she guided my hands and feet to their individual soaking bins.\n\n\"The Lady is very specific in her desires. Each trainer must be immaculately clean. Normally we have plenty of time for this, but today we're in a bit of a hurry, so I hope you don't mind the rush,\" she explained, adjusting my position. With a press of a button, a European style bidet moved up until it was almost touching me. I could see a splash guard on the front, slowly rising until it was almost to the level of my groin.\n\nLenka turned on the device below me, and I could feel warm water splashing up and around my privates and up my butt crack. She pressed another button, and I heard the motors humming before I felt my legs raised and spread, opening me up.\n\nShe leaned forward with a rubber glove, and gave me fair warning. \"We're going to clean you out, back there. Normally it's not an issue, but occasionally our guests like to tease you there, and the Lady insists that it is as clean as can be. I'll be gentle.\"\n\nWhat an odd feeling. She put on clear rubber gloves, and adjusted them. My hands and feet were soaking, as she rubbed her finger over my tight butt-hole, rubbing some lubrication over the entrance and inside of me. Then she was holding a large rubber bulb before me, with a slender neck. \"Just a couple of these and we'll be fine.\"\n\nI had never had an enema or anything like one, and my nervousness skyrocketed, but it turned out to be pretty simple. I felt the liquid flow into me, and at her encouragement, I held it for 10 or 15 seconds, and let it flow out, while she refilled. Another spray from the device below me, and I didn't feel quite so conscious of the action. After three tries, she lubed up the finger on her glove and I felt her penetrate me, deeper than I had expected. \"Perfect,\" she pronounced.\n\nShe pulled over a rinse hose and cleaned all around my cock and balls as well, using a soapy fluid before rinsing me thoroughly. She giggled when I hardened for her. \"That's perfect. You look good enough to eat.\"\n\nI was surprised to see that the markings on my cock were still present. Indelible marker. I was branded for a while it appeared.\n\nShe stopped to clean herself up a bit, and returned with a glass of water. She handed me the glass and a pill. \"Take this. It will help with stamina, although I'm not sure a young man like you will need it.\"\n\nIn for a penny... I popped the pill and drank the entire glass.\n\nShe proceeded to quickly trim my nails and cuticles, first on my hands and then on my feet. \"That will have to do; we're running out of time. A quick shower and you should be ready.\"\n\nI was more than a little surprised when she removed her dress, standing naked in the shower entrance, testing the water. She was gorgeous, and she was stark naked. My first completely naked woman. My eyes took in everything, her firm breasts, her flat stomach, the smattering of hair above the crease in her legs. When she leaned in, balancing on one foot, to adjust the temperature, my eyes were drawn between her legs, giving me my first sight of a woman's most private area. I tried to suppress my groan. She summoned me over and lathered me up, before I could even consider what I should be doing with a nude woman in a shower. She was all business, scrubbing me down thoroughly. Before we rinsed off, she pulled a bench out from the side and had me sit down so she could wash my hair. The feeling of sexiness and pampering was amazing, so far beyond any of my expectations when I walked out of the house that morning.\n\nWith her hands in my hair, I fantasized about her walking around me and straddling my lap, slowly taking me inside her, making a man out of me. My hands automatically reached down to stroke my cock, while my mind ran wild.\n\n\"Easy with that,\" she said softly, the water nozzle rinsing the last of the soap out of my hair. \"Save it for later.\" Regretfully, I let her lead me out of the shower.\n\nShe dried me quickly, towel drying my hair, and led me to the sink. \"Now brush your teeth thoroughly, and gargle.\" She did her best to dry my hair somewhat while I repeated my morning ablutions. At the end she held a dark blue robe out for me. It was satiny on the outside, but more terry-like inside. It was warm and soft, and I felt an odd confidence about being so clean and fresh underneath the robe.\n\n\"Twenty-eight minutes. That must be a new record,\" she boasted, pulling her own dress back on, and quickly tugging me toward the door. We waited about 30 seconds before Sandra appeared. She stepped into the room, opened my robe and looked at my naked body. \"You look perfect, Peter. This will be a wonderful day. I'm sorry we rushed you through your preparations.\"\n\nShe was dressed in very nice casual attire, a new tight skirt, and tighter blouse, her hair cascading over her shoulders. She waved Lenka over, and my caretaker hustled to obey. I watched the women kiss lightly. \"You are a miracle worker, my dear. I'm sorry I pressed you.\"\n\n\"Thank you, Ma'am,\" my foreign doll said softly. \"It was a pleasure.\"\n\n\"Not too much pleasure, I hope,\" Sandra said with a knowing grin.\n\n\"No ma'am. He was a perfect gentleman.\"\n\n\"Ahh, too bad. I'll have to make sure that next time you have plenty of time to really get him ready.\"\n\n\"Thank you, ma'am.\"\n\nI walked with Sandra out to the living room, and she stopped and handed me some sunglasses. I put them on and the world went dark.\n\n\"Part of our process. This trip will be very short. You are Ok?\"\n\n\"More than Ok,\" I answered, even though the sunglasses threw me off a bit.\n\nI heard her giggle. \"Beautiful and adventurous. I'm going to love working with you, young Peter.\"\n\nThe trip was very short. We stepped out into the hall, got on the elevator and travelled a couple of floors. She guided me out of the elevator and had me stand still. \n\n\"Close your eyes, and don't open them. Can you do that for me, Peter?\"\n\n\"Of course,\" I confirmed, holding my eyes tightly shut. \n\nMy new boss removed my sunglasses and replaced them with a mask that covered my eyes softly, but quite thoroughly.\n\nI stood fidgeting, eager and yet at the same time, nervous. \"You'll do fine, Peter. Your job is quite simple. Just be there for these women, and resist finishing as long as you can. Also, it is good etiquette to let them know before you get to the point of no return. That's about it. Ready?\"\n\n\"As ready as I'll ever be. My brother actually did this?\" I asked, still a bit shocked at the turn of events.\n\n\"Better than anyone else. I hope you can fill his shoes.\"\n\nI heard the door open and I was whisked into a room, moving carefully, a little cautious while moving about the room completely in the dark. I let her firm hands guide me.\n\n\"Ladies, I have a surprise for you today,\" I heard Sandra announce. She turned me 180 degrees, and pulled back the robe, slowly stripping it off of me, leaving me naked except for my eye-mask. I resisted an urge to cover up. \"May I present...Peter.\"\n\nThe sounds of several female voices proclaiming their appreciation was a huge ego boost. Just a few hours earlier, I was an unsullied high school virgin, with an underage girlfriend, and little prospects of changing my sexual status. Joe Average. I felt anything but average now. Sandra's hands flowed over my body, and I felt myself responding in the most natural way, which just increased the sounds of appreciation focused my direction.\n\nSandra pushed me gently forward, and I took small tentative steps until I felt hands on my thighs stopping me. A soft hand reached up and traced its fingers along my staff, making me jump a bit. \"Ticklish?\"\n\n\"Just a bit,\" I answered nervously, hoping that I was permitted to speak.\n\nThe owner of the fingers grasped me a little more firmly, and stroked my length slowly. \"You continue to amaze us, Sandra.\"\n\n\"Thank you. This one practically fell into my lap,\" she said.\n\nI anticipated a reply, not the warm feeling of a mouth encircling my cock, eliciting a gasp. I relaxed and focused on the voices around me, encouraging my fellatrix, as she went down on me. \n\nThe second blow-job of my life was even better than I could have dreamed. She used her hands and mouth deliciously, teasing me, tasting me, toying with me. I just rode the flow, delighted to be where I was. I loved the feeling of being in her warm mouth, and would gladly have stayed there all day, letting her have her way with me. Whatever she wanted, I was willing.\n\n\"Ok, Mom. How about sharing a bit,\" I heard, and the thought that I had a mother and daughter in front of me, had me straining to get even harder.\n\nThe mouth was removed from my cock, and with a little guidance, I moved sideways where a new set of hands took over. I heard a voice from where I'd just left. \"It's perfect. Absolutely perfect.\"\n\nI flushed with pride, as another set of lips captured my cock, and quickly set about sucking on me, more aggressively and thoroughly. I groaned when I felt my cock slide down my newest hostess's throat, her nose pressed against my stomach. She seemed to handle it well, her tongue teasing me while I moaned my pleasure.\n\nI was profoundly thankful my new boss had helped me with an initial release already, or I surely would have lost it right there. Instead, I was able to enjoy my latest companion's continued efforts, before being passed along once more. \n\nMy next partner was a little eager. She tugged me over but took her time getting better acquainted with my straining friend. \"The marks?\" I heard her ask.\n\nI could hear Sandra from beside me explain. \"The first mark, 5 1/2 inches, is the low end of the average cock. Only about 20% are smaller than that.\" I felt her hand touch my erection in the vicinity of the first line. \"The second mark, at 6 1/2 inches, is the high-end of average. Only about 20% are longer than that. Young Peter, here, is in the rarefied air of larger than 7 inches. Top 3% easily.\" \n\nI heard her laugh. \"Of course those are all estimates. When I took the initial measurements, he didn't seem quite as 'enthusiastic' as he does now. If I were to guess, I'd say he's added on an extra half-inch or more of length from your attention. He's definitely looking thicker.\"\n\nThat brought forth more appreciative comments. \n\nAbove average? Me? Who'd have thought it?\n\nOne of the ladies who'd already sampled my goods teased my new partner. \"If you can handle up to the green line, you'll be able to deal with Michael easily enough.\" Her comment had the others snickering.\n\nThe woman in front of me tentatively took me in her mouth, and I sighed, happy to have warm lips around me again. I could feel her testing her ability to take me as deeply as she could, causing her to gag and cough a bit. \"It's too much,\" my partner said softly.\n\n\"Don't try to take the whole thing!\" One of her friends giggled. \"Green line is good enough, red if you're really feeling adventurous.\"\n\nThe lady in front of me gave it another shot, and I felt her fingers encircling me as she pressed forward. Then she was moving back and forth over my length, her lips dragging along the surface. I winced when her teeth scraped me a bit.\n\n\"Easy, darling. We don't want you drawing blood. Lips and tongue, that's all it takes.\" This from a woman to the left of me, seated in unacquainted territory. \"We'll work on teeth when you've had a little more practice.\"\n\nThe other ladies seemed to be very encouraging to my novice cocksucker, and she slowly improved, under their endless direction. She finally pulled away gasping. \"It's not as easy as it looks,\" she said.\n\n\"That's why we practice, dear. That's why we practice.\"\n\nOnce more I was encouraged to move sideways, bumping the back of my legs against a table of some kind. I was tugged forward, and a set of legs trapped me on each side. There were no more voices from my left, so I deduced she was the last of my playmates. This woman definitely knew what she was doing, and used her hand and mouth in tandem. I was in heaven, and let her know it. That seemed to only egg her on, and I knew that in her capable mouth and hands I wouldn't last much longer. \n\n\"Ladies, I'm getting close,\" I whispered through gritted teeth.\n\n\"Do it, Aunt Carol,\" one of the voices insisted, and the talented Aunt Carol took it up a notch, her mouth moving over me rapidly, her hand stroking firmly, and her delightful tongue teasing me mercilessly. \n\n\"Oh, God, I'm there,\" I groaned, feeling that powerful tightening that preceded my release. \n\nHer mouth pulled away, but her hands kept at me long enough to ensure my finish. I groaned and thrust against her hand as my cock spit out its reward. I felt softness against my rod, and the head of my cock was nestled against skin, as I continued unleashing my seed.\n\nMy ordeal was anything but over. Sandra took me around the room again, starting back at my first. Before she released me to her friends, a warm cloth cared for me, cleaning me. She tugged at me gently, and I felt the flow of blood start the hardening, just enough to give me some heft.\n\n\"He's definitely not through with you wonderfully wicked ladies,\" Sandra laughed, turning me sideways until a hand cupped my balls for a few moments before I felt the entirety of my length pushing back into an accommodating mouth. Under her continued effort, I was soon more than a mouthful, and she backed off a little, sucking me.\n\nI handled the pressure better this time, each woman getting several minutes with me, and moving around the table twice, before they finally allowed me to sit among them. I was pushed back into the couch, almost supine, while the mouths continued to work their wonders against me, occasionally working in teams, and getting more and more aggressive as I continued to hold out. I knew the effort was hopeless. Not only were there four of them, and only one of me, their experience was a gift to a novice like me, and I knew that anyone of them could probably get me off in a matter of seconds, if she were really to put her mind to it. Thankfully, they were playing.\n\n\"Would it be Ok?\" I heard a tentative voice plead. \n\nSandra's sensuous voice finally agreed. \"Just the birthday girl. And just a taste.\"\n\nI wasn't sure what that was about, but I had my hopes. The mouths pulled away, and I felt the pressure on the couch about me shifting. Soft legs embraced my hips, and a hand held my cock upright. A new sensation started, and instinctively I knew what I was feeling. A pussy was lowering over my cock. Slowly, and with a bit of difficulty, it took my length, while I moaned my own pleasure. That indescribable pleasure of entering a woman for the very first time.\n\n\"God, that's good. That's so good,\" I groaned, until my generous friend was sitting firmly on my hips, my entire length sheathed in her velvet tunnel. The grip on my cock slid upward, only to come back down, making every nerve in my body sing. Up and down, up and down, while mysterious hands touched me and fondled me, lips pressed against my sensitive nipples, another set searching out my lips, a tongue pressing into my mouth, silencing me.\n\nMy partner wasn't quite so silent, her mouth pouring forth a torrent of filth that astounded me, and only further encouraged her friends and family.\n\nMost of the attentive hands and mouths disappeared, and I felt my lover's weight shift and her upper body pressed against mine. Her lips sought out my own, kissing me deeply. I thrust up against her, unable to control myself any longer, pushing deeply into her. She pushed back firmly, sucking me in, her moistness audible. She pressed her lips against my ear, nibbling. \"Can you come for me?\" she asked plaintively.\n\nI thrust into her fast and hard, feeling my impending release, the endless oral foreplay having brought me so close already. I was eager to complete my first sexual encounter in the most natural way possible. I reached down and held her hips while I pounded her, the voices around us lowered to a bare whisper. She was whimpering against me, her face buried in my neck, her fingers digging into my shoulders. \n\nI felt fingers running through my hair from behind, and Sandra's voice was whispering in my other ear, \"It's Ok Peter, give it to her.\"\n\nI pulled her down hard against my hips and erupted, grunting a loud \"YES!\" as I filled her, buried to the hilt, my shaft contracting repeatedly, blasting my juices into her. After several long moments, I gasped and settled back down to the couch, insanely content.",
        "My very first girl raised up enough to kiss me. I could taste the saltiness of her tears on my lips, and hoped I hadn't pushed the envelope too hard. Her first soft kiss was followed by a series of gentle pecks all over my face, ending with another deep soulful mouth exploration from her devilish tongue. \n\nWhen my new friend rolled off of me, the warm cloth cleaned me up once more, before I was helped to my feet. I was wary of being able to perform again after that blowout, but Sandra returned the robe to my shoulders and walked me to the door. \n\nBefore I could leave, each of my ladies bestowed a kiss on me, and thanked me for the afternoon, already discussing with Sandra an opportunity for a repeat. I was tired but feeling immensely pleased with myself as I was guided out and back to the elevator. When I heard the door ding as it opened, Sandra removed my mask, before we stepped out onto her floor. \n\nShe seemed a little embarrassed. \"Sorry about the finish there. That usually doesn't happen, but it was a special occasion, and they are very special clients. I hope you're alright with it.\" She unlocked her door and led me in.\n\n\"More than Ok, Sandra. It was pretty spectacular,\" I told her. \n\n\"Have a seat. Relax. We're done working for the day.\"\n\nI sat back as directed, and she went to the bar, pouring us each a drink. She returned and passed me the high-ball. \"I hope you won't tell on me, contributing to the delinquency of a minor, giving you alcohol and all.\" Her grin was contagious.\n\n\"I think this can be our little secret,\" I told her while sipping the bitter concoction. I thought about asking for something a little sweeter, maybe a rum and coke. Then again, I was a man now; maybe more manly drinks were the order of the day.\n\nShe passed me a folded up stack of bills. \"The tips were excellent tonight. I expected no less. You were very, very good. I must admit, I had my concerns, but I was most pleased with your performance. For each party we have I'll pay you $100 plus all the tips you earn.\"\n\nI looked down and saw the topmost bill was a hundred. Shit. I didn't earn that much money in a week sometimes.\n\nSandra moved closer to me, stroking my hair back. \"What do you think? I know it's a little unorthodox, but shall we give this partnership a go?\"\n\n\"I'd like nothing better in the whole world,\" I told her, realizing the drink wasn't so bitter after all. \n\n\"We'll have two, maybe three parties a week. I'll try to give you at least a days notice before each one. I expect you to show up in plenty of time to prepare, and you'll typically be required to perform for an hour or more at each party. That can be one prolonged one, or several shorter ones, whatever you feel up to. That won't be a problem, will it?\"\n\n\"Somehow, I don't think it will be.\"\n\n\"The days we work, I expect you to avoid masturbating, or participating in sex, before coming over. And don't expect the kind of finish we had tonight. Sometimes it'll be more difficult, some of our parties involve very inexperienced ladies, and occasionally we'll have several more. I'm confident that you'll be up to the challenge.\" Her hand was caressing me, and I was still a bit surprised when she leaned in and kissed me softly.\n\n\"Of course, if you feel that practice is in order, give me a call, and we'll see if we can't work something out occasionally. That is, only if you want to.\"\n\nI pulled her face down to mine, and kissed her deeply, possessively. I released her and looked into those mesmerizing emerald eyes. \"I think that would be wise. I know I could use the practice.\"\n\nShe grinned, hugely, and then crawled over me, pulling her skirt up to her hips, and exposing her bare skin underneath. She straddled me, and opened her shirt, taking it off and removing her bra, so her huge tits were in my face. I took a nipple in my mouth, tonguing it, checking off another first.\n\nAs she settled down onto my newest erection, I reckoned it was going to be one hell of a summer.\n\n* * *\n\nI stopped by to pick up Eric a little before four, and we headed down to get Darrell. I was a little irritated with Cathy, who'd called to tell me she couldn't make it to the beach. I felt like I was getting blown-off, but I realized I didn't really care. I didn't need her. Hell, Sandra was 10 times better looking, and had experience. And my best guess was that any of the women who'd been with me the night before would probably put her to shame.\n\nFuck her. I was a man now. \n\nWe were talking about our summer plans, and I told them I'd taken over my brother's sales route, working about 1/2 time. Sandra hadn't said anything about keeping our business secret, but I felt it was implied. It would have been weird explaining it anyway.\n\nThere were easily 100 kids at the beach party. It was a school tradition, all the seniors heading down to Arrow point for a complete blowout. The police turned a blind eye to it, well aware there'd be a lot of underage drinking and partying going on, but traditions are traditions. In our town, half the cops had probably been in our shoes in the last dozen years or so.\n\nDarrell had managed to get us a case of beer, and I had swiped a big bottle of tequila, a squeeze lemon and a salt shaker. Eric had a bottle 3/4 full of Vodka and a six-pack. At least we were reasonably prepared.\n\nIt was a sunny day, thankfully, and warm enough for the summer bathing suits to be out and in full play. Our classmates were in the water, some beach volleyball was going on, some Frisbee playing, but mostly guys and girls were just sitting around talking. The usual cliques were in play, which left us standing out in the cold. I looked around at the geeks, the jocks, the cool kids, the drama crowd, the rough crowd, and realized that even after graduating high school little had changed.\n\nBut I had.\n\nWe were carrying a cooler, with our partying supplies, and looking for a place to settle in. There'd be a big bonfire later, several, actually, and our best bet was to stake a claim around one of them. We knew the big fire was out of our league, but one of the 'satellite' fires should be Ok. Looking the groups over, we instantly recognized where we'd most like fit in, away from the toughs and Goths, and deeply entrenched with the geeks and general misfits. Darrel and I set down the cooler, breaking out a couple of beers and headed off to collect wood for the bonfire, while Eric protected our space. As if anyone else wanted it.\n\nAfter a few armloads each, we felt like we'd contributed enough and settled in. Undoubtedly the most popular people in our area were the girls from the volleyball team. Why they'd picked our fire was a good question, but I wasn't about to complain, especially since they'd chosen to sit right next to us. \n\nI was hot and sweaty from collecting wood, and all three of us headed for the water to cool off and toss around a Nerf football. I peeled off my shirt, as did Eric. Darrell was, shall we say, extra-large, and never took off his shirt in public if he could help it.\n\nThe water helped a lot and the sun was low on the horizon when we got out and headed back to our place to dry off. I was still looking around the group, wondering what my chances were of getting together with any of the women. I saw one of the volleyball players, Anne Perkins, looking at me and giggling, whispering with one of her friends. I had broken out another beer when I saw them get up and walk over to me.\n\n\"Pete, right? You're in Algebra 2 with me,\" Anne said.\n\nI was a little surprised she even knew my name. \"Yeah. You're Anne Perkins.\"\n\nShe giggled. \"Yes. I know that.\"\n\nI felt myself blushing. \n\n\"Could you spare a couple of beers for Teri and me?\"\n\nIt all made sense now. I was a free liquor store. We had a modicum of value as long as the booze held out. \n\nI passed Anne the beer I'd just opened for myself, and got out two more, opening one and passing it to Teri, before opening my own. I took a deep slug from it. I was surprised the girls were still there, sipping from their cans. I'd expected them to leave as soon as they got their beer, only showing up when they needed more.\n\n\"You were in English Lit with me last year, weren't you?\" Teri asked, smiling. \n\nIf I didn't know better I'd have thought they were up to something. And you know what? I didn't know better.\n\n\"Yeah, and Spanish II.\"\n\n\"That's right!\" she said perking up. \"You sat in the back.\"\n\nAnne leaned forward and touched my chest. \"Nice birthmark.\" Both girls burst out in giggles.\n\nI have a birthmark that looks almost like a thumbprint over my left nipple. Mom used to say it was where God touched me. Right.\n\nI sat on the cooler, waiting to see what other witticisms they had for me. I was willing to take it, just to be talking to them. They were tall, both nearly 6', Teri the taller of the two, and were wearing bikinis that left little to the imagination. They had long firm legs that were the things dreams and fantasies were made of. Anne sat down next to me on the cooler, and Teri dragged over a log to sit on. \n\n\"How come you never come to our games?\" Anne asked.\n\nI didn't have the heart to tell them I'd been to nearly every one. \"I made a couple. You guys are really good. You going to play in college?\" Teri had been one of the stars, a bit hitter, who'd led our team to the county championship. \n\n\"Oklahoma,\" Teri said. \"I got a sports scholarship.\"\n\n\"Wow, that's great!\" I told her. \n\n\"I'm headed there as well, but I think my volleyball days are over.\" Anne confessed.\n\n\"That's too bad. You were fun to watch.\"\n\n\"I bet,\" she said with a smile.\n\nAt least they were nice enough to spend a few minutes chatting before disappearing, I thought. \"Any plans for the summer?\"\n\n\"Just hanging out. How about you? Summer job lined up?\"\n\nI saw the girls look at each other and giggle again. Why did I feel like I was being set up?\n\n\"My brother's old job. It's a sales job. Pretty dull.\" \n\n\"Dull? Really?\" Teri asked, snorting. The girls were almost doubled over, trying to keep from laughing.\n\n\"Ok, what's up? What's so funny?\" I asked.\n\nThey finally calmed down a bit. Anne turned toward me and placed her hand on my chest. She traced my birthmark with her finger. \"Nice. Birthmark.\"\n\nI was so damned confused. Did she really get off on birthmarks?\n\nShe stood and held her hand out. \"C'mon, let's go for a walk.\" \n\nI took her hand in mine, and walked down to the beach with her.\n\n\"So what's the deal with my birthmark,\" I asked, gently, not wanting this sports goddess to let go of my hand.\n\n\"I've only seen one other like it.\"\n\n\"Really?\"\n\n\"Yep. So is your summer job really dull?\" \n\n\"Can't really say. I've only been working at it since yesterday.\"\n\n\"That's funny. That other birthmark I saw? That was yesterday too.\"\n\nOh shit. \n\n\"Was it really dull?\"\n\nShit, shit, shit. My hand suddenly felt cold and clammy in hers. \n\n\"Because my cousin Teri didn't find it dull at all.\"\n\nI stopped walking. She turned and faced me, her hand once more moving up and gently stopping on my chest. \n\n\"It wasn't dull at all. But you know how it is. It's not the kind of thing you talk about.\"\n\n\"Who knows about it? Your weird friends?\"\n\n\"Hell no! Nobody. Just me and Sandy, and my brother. And I guess you two, now.\"\n\n\"God, I was sooo jealous of Teri last night,\" she said moving closer, her other hand moving below my waist. \"But the party was for her, after all.\"\n\n\"Do you have parties like that often?\"\n\n\"It was only my third, and her first. But I'm hoping there'll be lots more.\"\n\nMy eyes were right around the level of her chin, and I couldn't help but see as she ran her tongue over her lips. \"So who was best?\" she asked.\n\n\"Best? Are you kidding? It was all so incredible.\"\n\n\"C'mon. Somebody was best.\" She turned and took my hand in hers, leading us further away from the party behind us, the sun almost fully set. The heat was radiating up from the sand, making it warm under our feet. \n\n\"Well, your aunt, the woman on the end, was pretty damned talented. But to be honest, when you took me in your mouth, all the way, my head almost exploded.\"\n\nI was rewarded with a giggle. \"Now that's what I like to hear.\" We walked hand in hand a bit longer. \"Don't you have a girlfriend?\"\n\n\"No.\" Not after tonight anyway.\n\n\"Would you like to have one?\" She was turning off the beach, and stepping over the rocks.\n\nWe stopped in an area of sand, away from all prying ears and eyes. I turned her around and pulled her close. \"Are you offering?\"\n\n\"Maybe.\"\n\n\"I'm interviewing.\" I told her, more confidently than I would ever have imagined possible.\n\n\"Is there a test involved?\"\n\n\"Yes, but I'm quite certain you can pass with flying colors.\"\n\n\"Ok, Mr. Borman. I'd like to submit my application.\"\n\nI stepped back and slid off my shorts, letting my hard-on escape. Anne dropped to her knees in the sand, pulling her long hair to the side, and took my cock in her mouth. Damn. She was better than I recalled.\n\nI closed my eyes, drifting back to the previous evening, and her attentions. As she got more aggressive, I opened my eyes and looked down at her. She was so pretty in the twilight, her beautiful face looking so perfect with my cock in it. It was wonderful.\n\nI was a little disappointed when she pulled away. Only for a second. Then she was pulling off her bikini bottom, and turning around, leaning over a rock, her delicious ass facing me. That same full round ass I'd seen wrapped in those skin-tight volleyball shorts game after game. \n\nI slid up behind her, rubbing my cock against her wetness. \n\n\"Part two of the interview?\" she asked.\n\n\"You've passed the interview. I suspected you would. This is your welcome to the job training.\" I pushed inside of her, squeezing my cock into her overwhelming tightness. It took several moments to slowly work my way up inside of her, until I finally filled her completely. She moaned loudly.\n\n\"Are you Ok?\" I asked. \n\n\"Just be gentle, alright?\"\n\nI eased in and out of her for a minute or so until she got used to me, and picked up the pace. Holding her hips I thrust harder inside of her, moving her back and forth. I could hear her wetness, as I was finally able to move smoothly inside of her.\n\n\"Jesus, Anne, you feel incredible.\" I told her, stopping to take a breather, while I fondled her firm butt cheeks.\n\n\"Better than Teri?\" \n\n\"Better than anything. I could fuck you forever.\"\n\n\"Then you better get to it.\" She wiggled her hips for me, before moving back and forth on my cock.\n\nI pushed her legs apart a little more, lowering her, and started pounding her hard. \n\n\"God, right there, right there. Don't stop.\"\n\nThere was little chance of that. I held her hips in my hands and fucked my gorgeous new girlfriend for all I was worth. She was groaning almost continuously.\n\n\"I'm almost there,\" I warned her.\n\n\"Not yet, please, just a little more,\" she gasped.\n\nI could almost hear Sandra's words: \"Restraint is the difference.\"\n\nI long stroked her, full deep strokes, listening to her reactions, the depth of her moans, until I felt it. She was coming for me, gasping. The first girl to come for me. It was too much and I slammed into her, coming hard. I came so much I was aching, never wanting it to stop. \n\nMy legs were betraying me, about to collapse, and I moved away leaning back against one of the larger rocks. Anne came to me, dressed only in her bikini top and climbed into my arms. I lifted her chin and we kissed. Finally. For the first time.\n\n\"That was wonderful,\" she said softly.\n\n\"Incredible.\"\n\n\"Better than I'd ever dreamed.\"\n\nI smiled, my ego kicking in. \"So I was the best, huh?\"\n\n\"Best and only,\" she said softly, her lips sealing mine. \n\nOnly? That was something I hadn't expected. Especially from a girl who could suck like that.\n\nA few minutes later I was helping her find her bottoms in the dark, and we carefully made our way back to the beach. Her hand felt natural in mine.\n\nShe quizzed me on my college plans and I confessed I was headed to Quad-C for a year. \n\n\"You should transfer to OU next year,\" she said.\n\n\"I'd like that.\"\n\n\"You know, when we get back, Teri's going to want to go for a walk too.\"\n\n\"Teri? Who's Michael?\" I asked, remembering the comments from the night before.\n\n\"Her fianc\u00e9, but he's not here right now, and you are.\"\n\n\"I thought, you and me...\"\n\n\"We are. You and me. But she is my cousin. And besides, it's not like you haven't already.\"\n\n\"You're really Ok with that?\"\n\n\"For tonight, at least.\" She stopped. \"You don't have to, you know.\"\n\n\"I'm pretty happy with just you,\" I told her.\n\n\"What about your new 'job'?\"\n\nI hadn't really thought of that. \"That's mostly just blow-jobs. Last night was unusual, or so Sandra says.\"\n\n\"So let her give you a blow-job.\"\n\n\"Uh...Ok, I guess.\"\n\n\"Is that so hard a decision,\" she laughed.\n\n\"I just don't want to mess up what we have.\"\n\n\"Peter. We have one evening between us so far. It's Ok. For tonight. Whatever you want to do. The rest is for me and my cousin to work out. Alright?\"\n\nI stopped and took her in my arms, still about 50 feet from the fire. I kissed her hard. \"Whatever you want, for now, is cool by me.\"\n\nWe walked into the bonfire ring, our arms around each other's waists. The fire was blazing and the warmth was welcome against my skin. The smell of the burning wood was intense.\n\nTeri was chatting with Eric and stood up when we arrived. She grabbed Anne by the hand and pulled her away from the fire for some girl talk. I was thirsty and dug into the cooler, while my buddies stared at me.\n\n\"Spill, dude. What's up?\" Eric asked.\n\n\"Anne and I have a lot in common. I guess you can say we're going out.\" I told them, hitting the beer again.\n\n\"What the fuck! How do you rate?\" Darrell asked.\n\n\"I just do.\"\n\n\"Shit!\" Eric groaned. \"God, she's incredible.\"\n\nI smiled. \"Yes she is.\"\n\nThe girls came back hand-in-hand laughing. Then Teri pulled away from her cousin, my new girlfriend, and grabbed my hand. \"Let's go for a walk.\"\n\n\"Just a sec.\" I opened the cooler and pulled out the Tequila, salt and lemon juice. I pulled her over. \"Lay down a second. I always wanted to do a body shot.\"\n\nShe looked at me with surprise in her eyes, and I was afraid I had pushed things too far, too quickly, until she smiled and leaned back.\n\nAnne grabbed the supplies from me. \"I get to set it up.\"\n\nFine by me.\n\nShe leaned over her cousin, sprinkling salt just above her bikini bottoms before filling Teri's naval with the tequila. I leaned down, gave her a long lick where the salt was and moved up to slurp the tequila out of her belly-button. She giggled while I licked her. I stood and took a squirt from the squeeze lemon. You know what? I like body shots.\n\nTeri started to sit up and Anne pushed her back down. \"My turn, cuz.\" She passed me the fixin's and I gave her the same setup. I was already getting hard again by the time she was finishing licking her cousin's belly dry.\n\nShe took the bottle from me, and started the preparations again. \"Thirsty, Eric?\"\n\n\"Hell yeah,\" he laughed, taking his shot from the surprised cutie laid out in front of us. \n\nBy that time we had attracted a bit of a scene, including several of the volleyball teammates. I helped Teri up and was amazed to see the setter, a cute little redhead, lay down on the cooler. Anne was in control of the shots, and as Teri and I walked down the beach I heard her give Darrell the go ahead. \n\nThose guys were going to owe me. Big Time.\n\nWe walked in silence for a bit, hearing the laughter and applause echo down the beach. The party was really taking off. And I had started it. Yep. Me. Mister Joe not-so-average.\n\n\"So how was I?\" Teri asked timidly.\n\n\"Just now?\"\n\n\"No, silly. Last night.\"\n\n\"Incredible. Completely mind-shattering. You were my first you know.\"",
        "\"You too.\" She gave my hand a little squeeze. \"You can keep a secret right?\"\n\n\"Absolutely.\"\n\n\"Good. 'Cause Michael can never know.\"\n\n\"He'll never hear it from me.\"\n\n\"Cool. So you and Anne are a 'thing' now?\"\n\n\"Blows the mind.\"\n\nShe giggled. \"That not all that was blown, I hear.\"\n\nI chuckled. \"Yeah, that too.\"\n\nShe was leading me over the rocks for some privacy. I followed along cheerfully.\n\n\"Pretty cool job,\" she said turning around and leaning over for a kiss.\n\nWe were far enough from the fire that we could barely hear their ruckus. Which was good, if she was half as loud as she'd been the night before. As soon as our lips parted she was on her knees, pulling my swim shorts down.\n\nCool job? The best fucking job in the world. It was only day two, but it was lining up to be a pretty spectacular summer.\n\n=====\n\nI hope you enjoyed this little story about a guys 'special' summer job. If you did, remember, please vote!"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "blow job",
        "first time",
        "cousins",
        "mother-daughter",
        "paid for sex",
        "gigolo"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/summer-sucks"
}