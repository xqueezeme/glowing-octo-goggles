{
    "title": "Pool Boy Ch. 56",
    "pages": [
        "On the day of my wedding, I woke with a start. I had been dreaming a second ago and it was totally different from the total darkness I was experiencing now. My heart was racing. I could feel it in my chest and hear the thundering hooves in my ears. Slowly, I was able to discern the difference between my dream and reality but I already couldn't remember enough of the dream to know why my heart was beating so fast. I was on my back apparently staring at the ceiling. I say apparently because it was so dark that the view was the same regardless of which direction I looked.\n\nI just laid there as reality slowly seeped in. I was in bed with Olivia and Sophia but neither was cuddled up to me like they were when I drifted off to sleep. I reached to my right and left at the same time and found both of them. They had rolled away from me in the night.\n\nAs the thundering in my ears diminished, I could hear the ever present susarration of the surf. Some night bird called out well down the beach and another one, much closer, replied. I sat up and pulled my legs above the bed covers and scooched my way down the middle of the king size bed. I stood at the foot and listened to see if I had disturbed my bedmates. I took two steps toward the living room and a board creaked loudly. I stopped, cringed and listened. There was no change in their breathing. \n\nMy morning woody pointed the way through the living room and I slowly opened the front door. On the front porch, the air was perfectly still but high in the palm trees that sheltered the Bungalows, an occasional rustling sound indicated a light breeze. I looked down the beach toward the clothing optional beach. Only the thin bright line at the surf line was visible. I looked the other way toward the swim up bar and the massage tent. There were bright lights shining on the beach like a construction site. I could see people moving around. \n\nI wondered what was going on down there so I went back inside and quietly retrieved my clothes from last night and put them on. I walked down the beach in bare feet toward the lights. By the time I got there a gray line was appearing on the horizon. At least I assumed it was the horizon; it was pitch black above and below the line. At that moment I thought, 'I don't understand why it was so difficult for ancients to believe the earth was not flat. You could clearly see the curvature in that thin gray line.\"\n\nThe first guy with a construction hat that I came upon, I asked what they were doing. He looked up at me and said, \"Building a raised platform for some fancy-dancy wedding today.\" I had all the information I needed so I thanked the guy and headed up off the beach into the resort compound. There were several ten-wheeled trucks at the edge of the soft sand but not a soul was around. I had figured we would get married with our bare feet in the sand. I should have known better once Emma got involved. I smiled to myself. This was Alexis' day and Emma's too really. I didn't care if they planned for us to wade through an alligator infested swamp to get married. I chuckled at the absurdity of that thought.\n\nI checked my watch and it was too early for anything to be open. It didn't matter; I was in full reverie mode anyway. I went down the concrete walkway leading to the main pool. I passed what I knew to be the sign instructing the removal of all clothing and ignored it. I sat down in a lounge chair and leaned back with my hands behind my head. At that moment I was reliving the series of events that led me to this day with Alexis. My cock pushed up hard on my zipper. My thoughts were more potent than any porno film I'd ever seen. I unzipped my pants and released my granite hard dick to the air. I let it just bounce up and down as I tipped my head back against the seat.\n\nMeeting Alexis that first time was an accident. Olivia had set up a threesome by adding Emma to the Olivia/Sophia duo. They were all best friends and Olivia and Sophia couldn't figure out how to keep me a secret from Emma. Alexis came looking for her mother when she got home from school and found her with my cock in her mouth. Emma didn't even stop and wound up sharing my cock with Alexis. I reflected back to her gorgeous face with my cock between her lips. My cock surged harder and I wrapped my fingers around the shaft and started slowly jerking myself off. After that, the three Amigos became the four Amigos. \n\nI got up the courage to ask Alexis out on a date. She was from the rich side of the tracks and I was from the other side. I was standing on cloud nine when she eagerly said 'yes'. I've been living on cloud nine ever since and I planned to make it my permanent address later on today. \n\nI picked up the pace with my hand as I reflected back to our beach day. My cock surged again as a vision of Alexis' and her micro-bikini flashed through my mind. She's hot every day but that day; fuck, she was smoking hot that day. I was flailing my hand up and down my shaft and my balls tightened along with every other muscle in my body as I leaned forward and blew my load into my left hand as my lungs seemed to surge up into my throat forcing a groaned, \"UUUNNNGGGGAAAAAHHHH.\"\n\nAfter several shots into my hand, cum was oozing between my fingers to the cushion on the lounge chair. I spotted a white towel bunched up in a chair ten feet away. I got up and wiped the gooey jizz from my hand and went back and sat down. I sprawled on the chair with my hands behind my head, my feet on the deck on either side of my chair. My dick was slowly softening and I let it bounce up and down on my left hip until I could get back in my pants. I drifted off to sleep again before I could get that second part done.\n\nWhen I suddenly woke again I was in the middle of a dream about all of my girls giving me blow-job as they passed my cock around. I pulled my right hand from behind my head and flexed my arm muscles before reaching down to my cock. It was hard again. My hand ran into something firm on the way and my eyes flashed open and I looked down my chest to see a naked woman on her knees between my spread thighs. The first thing I noticed was that it was bright sunlight. Then I recognized her as a twenty-something attractive woman who had been sitting around the periphery of our group. She had never seemed to miss a thing and on occasion she and her husband joined the festivities but always between themselves. They had never participated with any of our group.\n\nShe was grinning at me and when I opened my eyes and looked at her she took my cock in her hand and started jerking on it. Her body was surging rhythmically forward and back. Her husband was fucking her doggy style. I leaned my head to the side to see his body. He noticed my move and he said, \"She gives one hell of a blow-job.\" The wife grinned at me and leaned forward and waggled her lips onto my glans. She stopped there and smiled around my shaft. I pushed my hips upward and she let me drive my cock deeper into her mouth. When I thought she had taken all she could, she inch-wormed her lips down the remaining length as I felt my glans push into her throat. She gagged, \"AAAWWKK,\" and heaved up her back. She coughed out a huge wad of spit and blew large sudsy bubbles as she pulled back to the ridge. Tears formed in her eyes. She surged forward, driven by her husband's momentum and my cock disappeared into her mouth again. I groaned in stereo with the husband and she gurgled and \"AWWKKed\" again and pulled herself back up my shaft. She pulled off my cock and sucked in the glob of saliva and groaned as she said, \"Oh fuck honey. Yeah. Give it to me. Give it to me hard.\" \n\nShe groaned again and her body surged back and forth at a faster pace as her face went vacant with her mouth hanging open. She was gasping for air through her open mouth and then her eyes went wide and she screamed out, \"Fuck. Not yet. Noooo,\" as her surging body slowed to match her husband's thrusts as his cock exploded into her pussy. \"Shit Honey. I was almost there too.\"\n\nThe husband didn't say a word as he finished his orgasm and pulled his cock from her pussy.\n\nHe muttered, \"Sorry Sweetie. I couldn't hold back any longer. Maybe the big guy can finish you off.\"\n\nShe looked past my bobbing cock and smiled at me. I wanted to get off too so I motioned with my hands for her to come up in my lap. In an instant her knees dropped into position at my waist and she lifted her ass high and used one hand to guide my cock to her sex. She was very wet from her own lubrication and her husband's cum and she slammed herself down on it. She let out a scream and stopped for a few moments and muttered, \"Jesus Christ.\" Then she went slower and groaned all the way to the bottom.\n\nShe rocked herself forward and back and I did the same. The husband came around to the side of the chair and offered his gooey cock to his wife who sucked it right down to his balls. He groaned and held the back of her head as he fucked her mouth. He obviously wanted another round but she had lost her concentration on my cock and she pulled her head back and off his cock and bent forward toward my chest and really put everything she had into fucking my cock. The husband was obviously disappointed as he started jerking on his newly hardened cock.\n\nA few minutes later, the wife looked up at me and mumbled, \"Fuck. I'm gonna cum.\" She was flailing her pussy on my cock and she mumbled again, \"Oh fuck. YES. YES.\" Her hips, which had been in a perfectly synchronized piston fuck, went spastic. She was moving all over my cock. Her pussy grabbed my cock and I blew my first salvo in a powerful long stream of cum. She felt it and screamed again. She only moaned through the remaining shots. \n\nShe collapsed her body onto my chest and lay there for a couple minutes while our breathing recovered. I watched as her husband moved over close to us and launched his second load onto his wife's back and ass. She never moved. I doubt that she even knew.\n\nShe moved forward to get off my still hard cock and then moved down the chair the same way she had got on. Her husband helped her up to her feet. She was pretty unsteady and her husband led her away after she muttered, \"Thanks for the ride.\" I chuckled and picked up the towel that I had wiped my hands on earlier and wiped my gooey cock.\n\nI checked my watch and discovered that I had slept in the lounge chair for quite awhile. The breakfast buffet was open so I headed that way after forcing my cock back into my pants. I knew I had lost a lot of time when I walked into the restaurant and found everyone, except the bridal party already eating. When I got my breakfast and sat down, Thia threw a piece of toast at me and yelled, \"Where were you last night?\" Olivia and Sophia kept their heads down. I apologized to her and just said that something came up.\n\nShe threw another piece of toast across the table and said, \"Yeah. I bet something came up. That was the something I wanted coming up in my bed last night.\" Everyone giggled but otherwise kept their heads in their breakfast. I asked my mom where the bridal party was. I was missing Alexis. Mom told me they were getting their hair and makeup done professionally and mumbled something about \"Brazilians\". She also reminded me that I wasn't supposed to see the bride before she walked down the aisle. She leaned in close and whispered in my ear, \"If you need some \"attention\", I can take care of it.\" She used her index and middle fingers of both hands to form air-quotes as she said \"attention\". I turned to face her and went to kiss her on the cheek. She turned her head and caught my lips and took way more than a peck on the cheek.\n\nThe conversation turned to all the construction on the beach. They all had to walk right past it to get to the buffet. Rachel mentioned that she saw a big truck with video equipment and a team of guys lugging it onto the beach and the newly built platform. I wondered if Emma had ever discussed the video with Jarrod and Dee since they had their baby girl yesterday. I could tell that Rachel was concerned that she might get filmed in an embarrassing situation. It was what I feared. Rachel had been letting it all hang-out, so to speak, and I could tell that she was really enjoying herself. I was glad that she hadn't brought John. He's a really nice guy but a bit of a tight ass as you would expect from a butler. I hoped that the arrival of the cameras wouldn't ruin her fun. No one else seemed too concerned about the potential fallout.\n\nIt was nearly 9:00 AM when we finished breakfast. Three hours to show-time. I had a little ripple of nerves course through me as I thought about that. I wasn't nervous for myself; I just hoped that everything went off without a hitch. You never knew what you were going to get for services down here in the islands but the Wedding Planner seemed competent and hard-working.\n\nSpeak of the Devil; the Wedding Planner, I couldn't seem to remember her name, walked into the buffet restaurant as everyone was filing past her heading for the pool for last minute tanning and whatever. She held up her hands to stop the guys. She said, \"You guys have to be on the platform no later than eleven thirty. Make sure the best-man has the wedding ring.\" She stared at Noah for several seconds as if to drill that command into his scull. \"You need to come to the small conference room off the lobby to get ready no later than eleven o'clock.\" She looked at each of us looking for assurances that we understood. Each of us nodded that we understood and she turned and quickly disappeared around the corner.\n\nWe chuckled and looked at each other. We were amused by the Wedding Planner drilling us like a third grade teacher to her students. We left the restaurant and headed toward the beach to our Suites to collect our wedding outfits, such as they were. I had left mine at Dad's Bungalow. Mom and Thia were already there when I walked up on the porch. They were both naked in the living room in the process of pulling on their bathing suits. Mom said, \"We are going down to the clothed beach to check it out. You should come with us.\"\n\nI thought about it a moment and then realized that my bathing suit was in the beach bag in our Suite and I was strictly forbidden to go near. I explained to my mother and she instructed Thia to go and retrieve it. She said that Alexis wasn't there anyway. She was getting ready for the wedding.\n\nThia sprinted out the door with only her bikini bottom on and quickly returned with my speedo suit. Dad had already pulled on his and was making an adjustment to the placement of his fatty in his suit. They were all waiting for me as I stripped off my clothes. Mom and Thia both looked at each other and groaned when I was naked and pulling on my suit. Mom stepped forward and handed me a towel and said, \"Here use one of ours.\" Then she bent over and tugged on my speedo as she made some adjustments to the position of my dick. Finally, she stepped back and looked down at her handy-work and then gave me a sultry smile and said, \"I guess we're ready.\" She led the four of us down the beach. Dad and I had to be at the lobby in ninety minutes.\n\nThere were quite a few couples lounging on their towels when we arrived. They all sat up to look when we spread our towels. The clothing beach did accommodate topless sunbathing and nearly all the women there had removed their bikini tops. Thia and Mom removed theirs and Thia pinched her nipples to make them hard. She grinned at me as I watched her do that. All the topless women were having an effect on my dick. I was trying hard to keep it down and the harder I tried the faster it rose. The glans finally pushed out through the left leg-hole of my speedo. I just ignored it. Mom and Thia didn't.\n\nDad was wearing a prude-suit whenever he wasn't nude. He had been working on tanning his white upper thighs just like me. This was the first time he wore this bathing suit in the sun. He had worn it to breakfast most days. He was struggling with the topless women sitting around too but his suit afforded him enough room to make adjustments as his cock grew harder. Mom noticed his predicament and said to Thia, \"It looks like our guys are having some wardrobe malfunctions.\" Thia giggled as she looked back and forth between my crotch and Dad's.\n\nAlexis and I had witnessed, and participated in sex here in spite of the suits. I was hoping that no one else would start something. That would signal to Mom and Thia that sex here at this end of the beach was allowed. I could tell that they were both being appropriately conservative considering their perception of the environment but I knew they were steaming inside.\n\nI set an alarm on my watch to make sure we left the beach at the appropriate time and I let myself drift off to the rhythmic thumps and hissing of the never ending waves slapping the shoreline and then retreating. There was a light breeze and the soft susarration of the palm fronds added to the serenity. No one spoke as if that would disturb Mother Nature's song. The shrill cry of seagulls contributed nothing of value. I could feel my dick softening. I was asleep before my glans pulled back inside my speedo.\n\nI was way far away in a dream when my watch started beeping, which was worse than the seagulls. I promptly pushed a button and it stopped. I groaned as I struggled to pull myself out of the dream into the real world. Dad was already gathering his towel and stuffing it in Mom's beach bag. He offered a hand to help me up. I outweighed him by seventy pounds or more and I had to stand up on my own. I handed my towel to Mom and we all smiled. Thia said, \"Break a leg.\" Mom stood up and pulled her body in close to mine and stretched up for a kiss. Tears formed in her eyes and then broke free and inched their way down her face. I used my index finger to retrieve them and she smiled at me. I didn't know what to say and apparently she didn't either. She kissed me again and pulled back as her breasts peeled off my sweaty stomach. She looked up at me and whispered, almost to herself, \"I'm losing my baby boy to another woman.\"\n\nDad had already headed back up the beach toward the lobby. I ran to catch up with him and we walked together with my bag in hand containing our wedding apparel.\n\nAt the lobby, the Wedding Planner appeared at exactly 11:00 AM. She ushered us into a small conference room and shut the door. She verbally ran through the steps that we had rehearsed last night just as a reminder. I would be at the far end of the platform while Noah, Dean and Dad would usher the guests up the stairs to their seats on the platform. We had already worked out who would sit where. With less than twenty-five people, this was not a difficult task. Then Noah would stand behind me as I moved to a smaller raised platform with the Minister.\n\nTo suggest that Emma and the Wedding Planner had managed this wedding down to the micro-level was insufficient. The next thing that happened was management to the nano-level. The Wedding Planner instructed the four of us to sit in the chairs that had been arranged in a circle in the middle of the room. She stepped into the middle of the circle and faced me. She said, \"Emma wanted to be sure that you guys would survive your wedding costumes so she hired some umm...well ummm...I'll just call them professional ladies to ummm...well, to get you off now so you won't have a problem during the ceremony.\" We were all amused as she stumbled all over her explanation. We got the gist. The she said, \"But...ummm. There was a change in plans. There were volunteers.\"\n\nThe Wedding Planner stepped out of the circle of chairs and went to the door. When she opened it, Mitch, Sylvia, Fiona and Julia stepped inside with huge grins on their faces and pillows in their hands. The door closed behind them. I expected the Wedding Planner to leave the room but she didn't. She stood by the door as Mitch and Julia each muscled the other as they headed for me. Mitch won and Julia's second choice was my Dad. Sylvia moved toward Noah and Fiona moved to Dean.",
        "Julia made the first move as she set the pillow down at Dad's feet and knelt on it as she pulled down his bathing suit. Dad's cock was already at full mast and it sprang up and smacked Julia in the chin as his suit came down his legs to the floor. Julia giggled and grabbed his cock and started jerking him off. \n\nMitch was a second behind as she knelt in front of me and pulled down my speedo. She had leaned backward to avoid getting smacked in the face by my granite hard cock. Sylvia and Fiona suddenly realized that they were watching instead of doing. In unison they both knelt down on their pillows and pulled down Dean and Noah's suits. They looked up at their guys and smiled as they reached forward and grabbed their bouncing cocks. \n\nMitch was looking straight into my eyes. She had that look in her eyes as she pushed her head forward and kissed my glans before pressing my cock to my stomach and kissing her way down the shaft to my balls. She sucked one testicle in and batted it around with her tongue and then did the same on the other one before licking her tongue up the underside of my cock to wrap her lips over the crown. It took a moment to get her lips in place but then she pushed her mouth onto my shaft as far as she could until she gagged and coughed up saliva. I figured she would do what she usually did which was position a hand on my shaft at her gag point and blow my cock to her hand and use the other hand to jerk me off below. She didn't do that this time. She pushed her lips back down to the gag point and then pushed a little further. She gagged and heaved her shoulders up as she let out a low pitched \"AAAWWWKKK\". Her eyes teared up but she didn't pull back. She looked up at me and attempted to smile and she \"AAAWWKKKed\" again. She tipped her head upward and spit down my shaft and then went down and sucked it back into her mouth. She was really giving me one sloppy blow-job. White, foamy saliva was forming on my shaft as she slid on and off.\n\nJulia was thrilled to get her lips on Dad's fatty. She waggled her mouth from side to side to get her lips over the glans. That was the fattest part of Dad's cock. Then she went to work and Dad had to sit down in his chair. Julia followed him down and was blowing his cock at a furious pace.\n\nDean's average sized cock was buried in Fiona's face and his knees buckled forcing him to sit as well. Fiona released his cock and scooched her knees closer and resumed her blow-job. Dean was thrilled as he looked over at me and smiled and then immediately groaned as Fiona pushed her lips into his pubic hair. She giggled around his cock and then pulled off and scratched her nose. She giggled again and said, \"Your pubic hair tickled my nose.\" Dean didn't respond and she pushed her lips back down to the bottom of his shaft and he groaned hard again.\n\nSylvia had obviously seen Noah's equipment but this was her first opportunity to sample it. She couldn't get all the way down on it but Noah was enjoying every second as Sylvia gave him a blow-job hand-job combination and he remained standing in spite of his buckling knees. As he approached his orgasm, he placed his hand on the back of her head and gently began fucking her face. I could see the look of concern on her face when Noah's hand went to her head and she tensed a little until she was sure that Noah wasn't going to force his cock too deep in her mouth. She relaxed and accepted his jizz and swallowed every drop. Then she pulled her head back, licked his cummy shaft and then he sat down. He bent forward and kissed Sylvia as she stroked her hand lightly along his softening shaft. He sprawled back in his chair.\n\nMitch pulled her lips off my cock and jerked off my foamy, saliva covered cock while she flexed her jaw several times. She smiled up at me through her tears as I stood in front of her. Then I sat down in my chair. I could feel my orgasm approaching and I let out a groan. She took note and pushed her lips back on my cock and resumed her sloppy blow-job. It was the sloppiest blow-job I had ever had and I couldn't make up my mind if I liked it or not. Mitch was eager, that's for sure. I humped up and groaned hard, \"YYYYUUNNGGGGAAAHHH.\" She already knew about how huge my cum loads were and she started swallowing immediately. Her eyes went wide at one point as she worried whether she could take it all. She smiled up at me when she knew she was okay.\n\nWhile Mitch licked and cleaned my softening cock, my attention turned to Dean. His hands rested lightly on Fiona's face. He was very close to blowing his load. Dean groaned out, \"FFFFFFUUUUCCCCCKKK.\" Dean collapsed back into his chair. \n\nThe Wedding Planner had stood by the door the whole time but I could see the blotchy red skin on her neck and chest. She was breathing heavily as she came over and said, \"Thank you ladies. Very nice job. Now they need to get dressed.\" Mitch, Sylvia, Fiona and Julia stood and filed out of the room single file. The Wedding Planner grabbed a towel from the attached bathroom and went around the circle wiping each of our cocks dry. She took way more time than required and only stopped when our cocks were rising again in response to her actions.\n\nWe sat in the chairs for a few minutes collecting ourselves. Dad said, \"Well, that took the edge off didn't it?\" I chuckled and nodded my agreement. The Wedding Planner deposited the cummy towel in the bathroom sink and looked at her watch. She announced, \"You have less than thirty minutes to get on station.\" It wouldn't have surprised me to find out that she had been in the military.\n\nWe got out our Chippendale outfits and stripped out of the rest of our clothes. My dick had softened considerably but it was by no means flaccid. Neither was Noah's. Dad's dick was hanging limply between his legs. So was Dean's. We each pulled on our black 'banana hammocks'. It was great. The front pouch built into the garment made for plenty of room for my cock, even in the semi-hard state I was in. True, it bulged way out in front but at least it didn't try to force its way out through a leg hole. I checked myself out in a floor to ceiling mirror.\n\nThe others were in the process of pulling their hammocks up when the door opened and the Wedding Planner walked in with a plastic bottle in her hand. She announced, \"I almost forgot. You're supposed to oil yourselves up with this. Not too much though; just enough to glisten but not look wet. Emma's orders.\" She handed the bottle to me and stepped back. I looked at the bottle. It was baby oil.\n\nI handed the bottle back to her and said, \"Could you apply whatever you think is right. I can't reach everywhere.\" She smiled and put her notebook on one of the chairs. She took the bottle and squirted oil into her left palm and then rubbed her hands together and spread a thin coat from my neck to my waist and then down the back of my legs. Then she moved around to my front and I lifted my chin and presented myself to her. She did the same on my face, neck, chest and waist and then the same to each leg. She stood up and looked at her handy-work, thinned out some areas and then said, \"Damn. You have an amazing body.\"\n\nI looked into her eyes and said, \"So do you.\" She went red with embarrassment for saying what she had been thinking out loud and in response to what I had said back to her. I could see that her nipples had hardened and were pushing out her bra and her blouse.\n\nShe moved on to Dad as he stood perfectly still. He moaned once as she ran her hand up his thigh and glanced over his cock. Dean had a lot of extra skin to apply oil to. Noah's a stick with a big stick so it didn't take long to finish the job. She helped us figure out how to put on the tuxedo collar and bowtie combo. In the mirror, I watched her work behind me fastening the collar and then went on to the others. I hadn't even realized that white cuffs with cuff-links were included in the ensemble. When I was dressed, I smiled at my reflection in the mirror. With the oil providing a light sheen, I was pleased with how I looked. The others were grumbling about how they looked. Dean wasn't happy, nor did I expect he would be. I told him to buck-up. He would have girls all over him in no time. Dad was checking himself out in the mirror and sucking his gut in and puffing his chest out as he flexed his biceps. I chuckled to myself. He didn't have a chest to puff out nor biceps to flex but his stomach was already pretty flat. He was fine with what he saw. Noah knew it was pointless for him to try to puff up. He was spending his time positioning his long dick in his hammock to make it look even bigger. I chuckled again as I thought, 'Guys can never have enough money and can never have enough cock.'\n\nThe Wedding Planner announced that it was time to go and she headed off presumably to tend to Alexis and the others. We walked to the lobby to the stares of everyone around. I yelled out, \"Wedding\" and they broke into smiles and started clapping as we headed barefoot toward the beach. \n\nAs we passed through a bank of bright red Bougainvillea bushes I saw the completed wedding platform for the first time. It was huge. It rose ten feet above the beach with around ten steps to climb. Chairs lined the platform left and right. As we climbed the stairs to the platform, there was a four by eight wall of white roses and pink tea roses mounted on a sheet of white lattice on either side to block the view of the resort buildings. The entire deck was shaded by raised and tilted panels of lattice again covered with white roses and pink tea roses. These panels were tilted to block the sun's tortuous heat but didn't block the view of the sky above. The view toward the six inch raised platform at the opposite end was nothing but ocean. Video cameras were mounted in both of the rear corners facing toward the raised platform. The steps, platform and raised platform were all covered with bright ocean blue indoor/outdoor carpeting. There was another camera in the front corner facing the raised platform. I almost missed the set of steps hanging out like a drawbridge off the water side of the platform. It was high tide and water was nearly five feet deep under the end of the platform. Our guests, seated in their chairs, were oblivious to this feature. I had no clue what it was for and my engineering brain worked to come up with possible explanations.\n\nFive minutes after we arrived, our guests started arriving. They were all women because all the guys were in the wedding party. The front row on the right was reserved for my Mom and Thia. On the left would be just Emma after she handed Alexis off to me. All of Alexis' friends, not in the wedding party, were my friends too so we sprinkled them on both sides to even things up.\n\nOlivia and Sophia appeared at the bottom of the stairs first. They were dressed elegantly in bright spaghetti strap mini-sundresses. Dad escorted them, one on each arm up the stairs to their seats. They looked absolutely delicious. My cock jumped in my hammock. They waved to me as they sat down and I waved back. \n\nMom and Thia came down the aisle on the arm of Noah and he motioned them in to the front row. They were both wearing strapless mid-thigh sundresses. Time was ticking away and our guests were coming down the aisle more quickly than before. I waved to each of them as they pursed their lips and sent me air-kisses. \n\nBy five minutes to noon, everyone was seated and examining the walls of flowers behind them and above them and the wide open views of the ocean to the front. They were aware of the ocean water surging several feet below.\n\nThe minister appeared, unescorted, and took his position dead center in the raised platform to my right. We shook hands and he mumbled something about \"nice outfit\". Music started playing nearby. I looked for the speakers but I didn't see any. The camera operators moved into position. The operator to my far right in the front corner was talking into a headphone boom microphone. I assumed the video controls were in the box truck at the edge of the beach. I wondered if this was being sent live or just being recorded. I stepped over to the guy on the headphones and asked. He smiled and said that it was being fed live and recorded. He had confirmation that Dee and Jarrod were watching from her bed in the hospital. He told me to wave to the camera. I did and said, \"Congratulations guys. Love you.\"\n\nThere was a bit of a delay and then headphone guy beamed a grin at me and gave me a thumbs-up sign as he said, \"She says she loves your tuxedo and wishes she was here.\" I waved to the camera again and went back to my spot by the minister. As I passed behind him I noticed movement on the ocean. It was a huge Catamaran on sail. It was probably a mile away and heading this way from the North. I took a brief moment to admire the sleek double hull below two levels of salons. \n\nAs I got back in position, Noah's face came into view coming up the steps to the platform. He was followed by my Dad and Dean. They walked down the center aisle heading toward their positions to my left. Samantha had turned and tweaked Noah's crotch on his way by. She was grinning as Noah gently batted her hand away. I had to smile; I could see Alexis doing that. Something was about to happen as evidenced by the rising din from the guests as they pivoted their bodies in their chairs to see behind them.\n\nThe music changed in mid-song and an organ was playing the wedding march. Everyone stood and turned to the back of the platform. My heart rate increased as I watched Yu-Gin's face appear at the end of the platform as she came up the stairs. It was very dramatic to appear that way. My mind was fast forwarding to the moment when Alexis would appear in increments as she climbed each step.\n\nA murmur went through the crowd as Yu-Gin came to a stop at the entrance to the platform. She was grinning broadly as she paused there for a few moments before continuing down the aisle. Her long black shimmering hair was piled on her head. I'd never seen her like that. Whoever did her makeup really knew what they were doing.\n\nShe was wearing lingerie. It was lavender colored and consisted of a strapless, lacy, semi-transparent bra that showed a hint of her dark areolas. At her waist was a color coordinated satin and lace frilly garment that started at the smallest dimension of her waist and fell to cover the top half of her exposed butt-cheeks and floss thong. She wore lavender colored thigh high stockings capped with stretchy lace about two inches wide. On her feet were color matched open toed four inch heeled pumps. She was carrying a bouquet of darker lavender tea roses and lilies of the valley. I hadn't noticed at first but she was wearing the same three tiered gold dangly earrings that I had bought for Alexis during our January visit. She also wore an amethyst three level choker tight to her neck. Light purple lip-gloss completed the vision. She was gorgeous.\n\nCell phone cameras and expensive digital cameras flashed non-stop as she made her way to the raised platform and then veered off to the left and took her position and looked back to the entrance. Just as Yu-Gin stopped, a blonde haired beauty came into view. Nina, always high energy, was bee-bopping her way up the stairs. She paused as she made her way to the platform. She was grinning every bit as hard as Yu-Gin had. She was in the same lingerie outfit as Yu-Gin except it was mint-green. The jewelry was the same except she wore a three level light green peridot choker necklace. Most noticeable was that her mammoth boobs were barely contained in her shoulder strapped, lacy bra. I doubted that they made a strapless bra that would have contained her tits. Her bouquet consisted of mint-green colored tea roses and lilies of the valley. Cameras flashed again as she made her way to stand beside Yu-Gin. They held hands and looked toward the entrance.\n\nJanuary's face came into view as she ascended the stairs. She was quite the contrast to little Nina. In her heels, she stood as tall as me at 6'5\". She paused at the top and grinned at the crowd. Cameras flashed again. Her lingerie outfit was pastel yellow which looked fantastic with her dark brown hair cascading in ringlets from the top of her head. Her long, fit body looked amazing in her lingerie. Her accessories were the same as Yu-Gin's and Nina's except she wore a three level yellow citrine choker. The shoes and thigh high stocking were the same but color coordinated; the same for her bouquet. Her hips swung provocatively as she made her way to her position next to Nina.\n\nThe guests head swung back to the entrance and Josie's beautiful face appeared. Her brown hair was fixed the same as Jan's with curled ringlets falling down the sides and back of her head. I glanced over at Dean to see his reaction. His mouth was agape as he adjusted his banana hammock around his burgeoning cock. Josie saw him doing that and she grinned at him. Then she started down the center aisle. Her lingerie outfit was the same except it was pastel pink. She wore a pink lacy strapped demi-bra. The top of her nipples were exposed. Her choker was of pink topaz and she wore a matching lip-gloss. The pink tea roses were darker than her ensemble. The contrast was striking. Cameras flashed again as she exaggerated the swing of her hips down the aisle. She moved into position next to Jan. The guests again turned toward the entrance. My heart rate ramped up again. It was show-time.\n\nNothing more happened for several moments. My guess was it was a dramatic pause to amp up the excitement. The music had stopped as Josie stopped and faced the guests and it was all quiet except for the murmurs of the guests. The ambiance was taken over by the thumping and hissing waves. A breeze made its way over the platform to the delight of everyone. It was hotter than blazes in the sun. Thank God for whoever thought to provide the shade with the rose covered lattice. Guests were starting to wave their hands or handbags at their perspiring faces. The crowd was getting antsy as they waited for Alexis and Emma to appear.\n\nThe music started again from the top and the crowd let out a sigh of relief. A diamond studded tiara appeared first with a lacy veil trailing behind it. Alexis' face appeared. Her sun-streaked blonde hair was fashioned the same as Jan's and Josie's. Her makeup was immaculate. She didn't usually wear this much makeup but when she did, she looked incredible. The next step brought Emma's face, to Alexis' left, and Alexis' upper body into view. Emma wasn't much for makeup either but she was stunning. Alexis was wearing a lacy bright white strapless demi-bra, glittering with diamonds and pearls and the same gemstones that her bridesmaids wore around their necks. It was reminiscent of the multi-million dollar bra worn by Victoria's Secret models. I found myself hoping that it didn't cost that much. Her tan looked spectacular in her all-white ensemble. \n\nAs Emma and Alexis stepped up onto the platform, they stopped like the others had. Camera flashes were constant for many seconds. Alexis was smiling directly at me as she held her left hand on Emma's right arm. Emma was wearing a beautiful glittery hunter-green mini-dress. It had spaghetti straps and showed a lot of cleavage. Her hair was done perfectly. Her makeup was perfect. She looked like Alexis' sister rather than her mother. Emma looked down the platform at me and pursed her lips to throw me an air-kiss. I was too dumbstruck to respond. \n\nNoah moved closer to me and nudged me as he said, \"Reel your tongue in big-guy.\" I glanced at him and noted his grin and returned my gaze to Emma and Alexis as they started their slow and sexy walk down the aisle. Alexis wasn't wearing the same garments as the others. She wore white lace full coverage boy-shorts that plunged in the middle, nearly to the top of her sex. They rode high on her hips. Her white sheer thigh high stockings had three inch stretch lace tops holding them in place. There was an inch wide white satin and lace garter belt with tiny pink bows just above her left stocking. She stood taller than usual in her white satin and diamond and pearl covered stiletto heeled ankle-strap sandals. On her neck was a three layered gold and diamond choker necklace that burst with colors as she walked through the small beams of sunlight gleaming through the gaps in the lattice and roses. She carried a bouquet of White Gardenias and Lilies of the Valley. I could smell the Gardenias from here.",
        "I couldn't take my eyes off her as she came down the aisle. As she got closer, I stepped down off the raised platform to greet her. The music stopped and for several seconds there was no movement; no breeze; no sound. It was like time stood still as she smiled at me and I smiled at her.\n\nFinally, the Minister motioned for the guests to sit and spoke, \"Today there will be no dearly beloved, no betrothed, and no ancient rhyme of the married.\n\nToday there are no dead languages to solemnize vows that are very much alive and will remain so for a lifetime.\n\nToday promises become permanent and friends become family.\n\nHowever, this day is not about the words spoken or the rings exchanged, nor is it about grand pronouncements and recessional marches.\n\nThis day - the day of Alexis' and Hunter's wedding - is about love.\n\nOne of my favorite authors once wrote, \"If love is not all, then it is nothing: this principle, and its opposite, collides down all the years of my breathless tale.\"\n\nAlexis and Hunter, your breathless tale is about to begin.\n\nIf love is not all, then it is nothing.\n\nIts opposite - If love is all, then it is everything - is going to be the basis for every aspect of your relationship.\n\nAll you have to do is simply love one another and that love shows through in everything you do for one another, how you treat each other, in good times and bad.\n\nLove isn't just a word; it's an action.\n\nLove isn't something you say, it's something you do.\n\nLove is genuine, honest, and open, compassionate and kind, passionate and blind, love doesn't know space or time, nor look through jealous eyes. In the modified words of Paul in his letter to the Corinthians, \"Love bears all things, believes all things, hopes all things, and endures all things.\n\nLove never dies.\" The minister paused and scanned the guests for dramatic effect and then continued.\n\n\"There are many different kinds of love, almost if not all of which are represented here today.\n\nThere is romantic love, the love of parents and children, of brothers and sisters and family, and love among friends.\n\nNot only do Alexis and Hunter love one another romantically - and they do, you can see it in every look, every touch, every moment they're together - they also love one another as friends.\n\nIn fact, they're best friends, constantly giggling and taunting and teasing and very plainly and obviously having fun together.\n\nThat love and enjoyment of each other as best friends will sustain them through this marriage.\n\nIn addition, the love collectively in this room, from friends and family, will help sustain and support the promises they make today.\n\nAll of us here will help solidify this bond, as these two individuals are joined as husband and wife.\n\nThis new journey will be at times richly rewarding and extremely difficult, but, most importantly, it will be a journey you take together.\n\nMarriage is much more than your signatures on a legal contract.\n\nYou are promising, in front of all these people you love, that you want to be with each other for the rest of your lives, and that you will do everything in your power to honor the promises you are making here today.\"\n\nThe minister paused for a moment before starting the ceremony and then continued, \"Who giveth this woman to be married to this man?\"\n\nEmma, positioned to Alexis' left said, \"Her mother does.\"\n\nAs we had rehearsed, I stepped forward and clasped Emma's left hand in mine and bent down and kissed her on the left cheek. I said simply, \"Thank you.\" Emma kissed me on my left cheek and took Alexis' left hand from her arm and placed it in my hand. She leaned toward Alexis and kissed her on her left check and Alexis returned a kiss to Emma's left cheek.\n\nEmma whispered, \"I love you two very much.\" That part wasn't in the rehearsal. Alexis' eyes glistened with tears as Emma stepped back and sat down in the aisle seat in the front row. I took my position to Alexi's right as she raised a hand to her face to gently wipe her eyes without destroying her makeup. Together we stepped up on the raised platform with the Minister.\n\nHe led us all in prayer and gave a blessing. The blood pounding in my ears muted everything. He was talking but I was consumed by Alexis' radiant beauty. When I heard Alexis speaking her vows, it brought me back to reality. She said, \"I Alexis, Annabelle, St. Pierre; take you Hunter, Jonathan, West, to be my husband, my partner in life and my one true love. I will cherish our union and love you more each day than I did the day before. I will trust you and respect you, laugh with you and cry with you, loving you faithfully through good times and bad, regardless of the obstacles we may face together. I give you my hand, my heart, and my love, from this day forward for as long as we both shall live. I give you this ring as an eternal symbol of my love and commitment to you.\"\n\nWe had been holding both hands as she gave her vows and now she pulled a gold ring off her left thumb and pushed it onto my left ring finger. A tear formed in my right eye. This was really happening.\n\nWe had decided to use the same vows after failed attempts to create our own personalized vows. I repeated the vow, I Hunter, Jonathan, West; take you Alexis, Annabelle, St. Pierre, to be my wife.\" I completed the vow and Noah stepped forward and pulled a ring off his little finger and handed it to me. We looked into each other's eyes as I pushed the ring onto her left ring finger. A beam of sunlight hit her engagement ring and a burst of colors blinded me momentarily. Damn, I wanted to kiss her so bad.\n\nThe Minister closed his book and he said, \"By the power vested in me, I now pronounce you husband and wife. You may now kiss the bride.\" Her veil fell to her waist in the back but it only covered her eyes and nose in the front. I lifted the veil and pressed my lips to hers. She moaned quietly and whispered, \"These earrings are driving me nuts. We'd better find someplace private in a damn hurry.\" We continued our kiss until everyone started giggling. \n\nSuddenly, the crowd became animated and some stood to look past us out the ocean side of the platform. We broke our embrace and I looked back behind the Minister and spotted a large aluminum mast with guy-wires only twenty feet from the end of the platform. \n\nThe Minister stepped forward and held up his hands and said, \"Don't be alarmed. A Catamaran will take you all on the next phase of this celebration. The platform shuddered, which startled the crowd again. The drawbridge of stairs started to drop down on the after deck of the Catamaran. The Wedding Planner appeared out of nowhere and stood behind us at the top of the bridge of stairs.\n\nThe Minister came up and stood between us holding our hands as he loudly announced, \"I present to you Mr. and Mrs. West.\" He stood back to the side as the guests burst into applause. The Wedding Planner motioned for Alexis and me to make our way down the stair bridge to the deck of the Catamaran. Josie and Noah followed on our heels, followed by Dad and Jan and then Dean and Nina. Yu-Gin paired up with Emma and went down next, followed by my mom and Thia.\n\nOnce we were all on the huge deck, the Wedding Planner motioned our guests to follow and they paired up and went down the stairs two by two. Everyone's beach bag containing our bathing suits and towels and clothes for the reception dinner at the resort later this evening, were already aboard. Everyone grabbed their bag and headed below decks to change. Nina found no reason to go below to change and she stripped naked right there topside and pulled her bikini on. It was comical to watch her struggle her huge tits into the top and she was getting frustrated. Then she threw her top back in her bag and stood with her arms out to her side and yelled, \"AAAHHH. That's better.\"\n\nThose still topside followed her lead and in minutes the deck was covered with naked bodies pulling on their swim suits. They also followed Nina's lead as they tossed their bikini tops back in their bags. Alexis and I made our way below decks. Alexis pulled off the veil and tiara and then removed her diamond, pearl and gem studded bra and carefully folded it and pushed it gently into her beach bag. She kicked off her shoes and peeled down her stockings. She started to pull down her skimpy 'boy-shorts' but I stopped her. I loved the look and she grinned and pulled them back up. She said, \"If I'm wearing these, you have to wear your banana hammock.\" I was fine with that. I liked the feeling of the nylon pushing against my hardening cock which just pushed the material further out in front and not along my hip to push out through a leg hole. I stripped off the cuffs and the collar and we were good to go.\n\nJosie was obviously turned on by Dean's Chippendale costume and she had already pushed him down on a bunk and had pulled his banana hammock to his knees and was sucking his rock hard cock at a furious pace. Dean's hand rested lightly on the top of her head being careful not to disrupt her new hair-do.\n\nAlexis and I moved up on a landing at the bottom of the stairs to the deck and she opened a door to her left which entered into the other hull of the Catamaran, which was already making way leaving the platform behind. This hull was slightly different than the other. She pulled me in behind her and shut the door. She pulled herself into me and passionately mauled my lips and face and neck and anywhere else she could reach. She was gasping for oxygen already as she reached down into my hammock and pulled my cock out. She moaned, \"Oh God. I missed you Baby. I need you now,\" as she held my cock like she was shaking my hand.\n\nI pushed my hand down into her 'boy-shorts' and found a sopping wet, freshly waxed pussy. I pushed my middle finger over her clitoris and I thought she would explode right there. I curled my finger to separate her labia and pushed inside her. She was moaning, \"Oh fuck. Oh fuck. Oh fuck,\" as she ground her sex on my hand. She was reticent to drop to her knees to suck my cock into her mouth because she didn't want to break contact with my finger. She started furiously jerking me off.\n\nI knew she wanted my cock in her mouth and so did I. I wanted my tongue in her pussy. So, I pulled my finger out and lifted her with my hands on her waist and spun her around like she was a baton, being careful of the low overhead. She knew what I was doing and she squealed as she pulled in her legs. I set her thighs on my shoulder and she pushed her feet to the overhead only a couple inches above my head. She grabbed my throbbing cock with both hands and pulled it to her lips just as I leaned my face into her sex. I drilled my tongue into her pussy just as Alexis waggled her lips onto my cock after gasping several full breaths of air into her lungs. \n\nShe ran her tongue all around the ridge and drilled it into the 'spot' as I pulled my tongue back out and flicked the speared tip across her clitoris. Alexis stopped what she was doing and groaned out, \"UUUNNGGGGHHHH,\" and thrust her hips hard into my face.\n\nThe Catamaran lurched under my feet and I staggered to the side and crashed into the outer bulkhead. I held on and Alexis' feet braced herself against the bulkhead before we continued. The door opened and Emma stuck her head in. She was topless with bikini bottoms on. She said, \"Ooops. I was just checking out this amazing boat. It's huge.\" Alexis didn't even slow down from the interruption. Emma watched us for a moment and then said, \"You can't even wait for the Honeymoon? No one expected you would.\" Alexis pulled back off my fatty and ran her tongue around her lips to break all the silver threads of saliva drooping from her lips to my cock.\n\nShe smacked her lips and while hanging upside down aimed it at Emma. \"Want to share. As I recall, that is where this story started just a year ago.\"\n\nEmma laughed and then after a moment of reverie said, \"There is nothing I'd rather do but I'll pass right now. I'll take a rain-check though.\" She backed out of the cabin and closed the door behind her. Alexis eagerly pushed my cock back in her mouth and resumed her blow-job, throat-job and double-twisting hand-job. I hadn't stopped drilling her pussy and she started thrusting her hips violently at my face and groaned around my cock. I pulled my tongue out of her sex and forced her hips to a position so I could access her anus. \n\nShe popped her lips off my cock and let out a scream as she exploded into a massive orgasm. She squeezed my head with her thighs and then released them, thrust her hips forward again as I drilled my tongue back into her bubbling pussy and she screamed and bucked again. She pressed her lips over my glans and held them there as she frantically double-fisted my cock. I groaned around her sex as my own orgasm crushed me. My knees buckled but I didn't go down. I locked them in place and spread my feet for balance against the movements of the Catamaran.\n\nAlexis squealed again as I dumped my load of cum into her eagerly sucking mouth. She took all I had to give and then pulled her head back and coughed a couple of times as she smacked her lips with her tongue. \"Holy shit Baby. That was a load. Yummy.\"\n\nTopside, the party was in full swing. Two bars were setup. One just aft of the huge net strung between hulls at the bow and one on the after deck. Alexis and I went to the helm, one deck above, to see the entire boat from one viewpoint. It was incredible. I could afford to buy it but what would I ever do with a sailing vessel this size. There was no one at the helm at that moment. The auto-pilot had been set. No land was in sight. I held Alexis tight on my hip as we enjoyed the breeze and sun. It was a gorgeous day and from this vantage point we could see our friends and family engaged in sex all over the boat.\n\nWe went to the after deck where hors d'oeuvres were being served in sterling silver trays over burning sterno pods. I was starved and I didn't even realize it until a light breeze blew the odors our way standing at the helm. Dean was walking away with a plate piled high. He was dressed the same as me with his black banana hammock on. I had to chuckle to myself. Josie was right behind him. Standing in the line in front of us was my mom and dad, Erin, Rachel and Julia. I realized that I hadn't seen Aunt Jane for a while. Julia hugged and kissed Alexis and then me. She offered her congratulations and remarked on how beautiful the wedding was and then spread her arms and spun around in a circle and said, \"And now this. Wow.\" Then she reached forward and ran her right palm across Alexis' breasts and then moved her index fingernail lightly around her nipples and said, \"Alexis. You are the most beautiful bride I've ever seen personally, in print or on TV or the movies.\"\n\nAlexis looked down to watch what Julia was doing. Her nipples went instant hard and Julia giggled at the effect she had on Alexis. She moved in close to Alexis like she wanted to whisper something and stretched up and pressed her own naked breasts to Alexis'. Then she did whisper something that I didn't catch.\n\nAlexis grinned at Julia and said, \"I hope we can find the time.\" They kissed and Julia picked up a plate and made her way through the array of silver trays. We did the same and went down a ladder to the swim platform. There were lounges and stairs on each hull that went right down below the waterline. \n\nIt was very hot in the sun. The swim platform was shaded by the balcony above, where the line was still forming for the hors d'oeuvres. Alexis and I sat down on the starboard stairs and dangled our feet in the water to cool off. I heard a loud pop behind us and then several more. I looked over my shoulder to see what it was. A steward was opening Champagne bottles set up on a table covered with white linen and several lines of flute glasses. I watched as the steward poured the Champagne. I couldn't read the label on the bottles from where I was sitting but later on I was close enough. It was Moet Imperial Brut, which meant nothing to me at the time.\n\nA loudspeaker announced that everyone should gather at the fantail to toast the wedding couple. We smiled at each other and Alexis pulled herself in close to me and kissed me. I stood and assisted her to her feet and returned to the swim deck which was apparently called the fantail. \n\nOne by one, everyone showed up and was handed a flute of Champagne. Some were still gasping for air or still red from sexual activities. The guys were still wearing their banana hammocks and the women were all topless and most wore bikini bottoms. Nina, Yu-Gin and Jan were completely naked. By the end of the afternoon, everyone would be following their lead. \n\nNoah had figured that his best-man toast would be delivered tonight at the reception but he stepped to the center of the group crowded onto the fantail and received a round of applause from his toast. I sipped my Champagne and kissed Alexis and thought about how far Noah had come under the guidance of Samantha. Sam had always had her 'shit in one sock' while Noah didn't even have a sock. I lifted my glass to him and said, \"Thanks buddy.\" He smiled back and lifted his glass to me and Alexis.\n\nEmma stepped to the center and announced the PoD or 'Plan of the Day': We would cruise under power for the rest of the afternoon and enjoy a beautiful sunset and then dock back at the Resort and resume the festivities at the Resort Ballroom for dinner followed by dancing and other traditional wedding activities like cutting of the cake, tossing of the bouquet and the garter. I had forgotten about the garter. It was still on Alexis' left thigh below her white glittery boy-shorts. \n\nDean wanted to say a few words and then Dad stepped up and gave a toast that left us all with tears streaming down our cheeks. Mom hugged up to Dad when he was finished and they kissed passionately to the applause of everyone.\n\nSylvia came over and asked, \"How did you two meet anyway?\" Alexis smiled at her and told her she should ask Olivia who was standing nearby. Olivia choked on her Champagne and then giggled. Sylvia and Olivia walked away with Olivia telling her the story.\n\nMore Champagne bottles were opened as the flutes disappeared off the linen clad table. We each had two glasses and resolved to be conscious for the dinner and festivities back at the Resort. \n\nOn board the Catamaran, Emma was in charge. The Wedding Planner had stayed on shore to coordinate preparations in the ballroom. Emma was getting a little deep into the Champagne and stopped drinking it when she realized how inebriated she was. She disappeared into the Master Suite below decks to lie down. \n\nAlexis had removed her dangly earrings along with her other accessories except for her three-tiered diamond choker. The sun was refracting into all the colors of the rainbow as I stood behind her and bent forward and kissed her on the neck just above the choker necklace. She groaned hard as she always did and she rolled her head to the side inviting me to continue, just like she always did. I took up her invitation and in minutes we were all over each other pawing with our hands and kissing and searching with our lips. She was in heat and my cock was pushing out the top of my hammock. \n\nSex was going on everywhere on the deck, the furniture on the fantail and the net at the bow, so we could have just dropped where we stood. We opted to go below deck to the bedrooms. We practically fell down the steps to the landing where the galley, head and sleeping quarters were. We kissed and mauled each other through the galley and burst into the master quarters and collapsed as one onto the king size bed only to discover that we weren't alone.\n\nDad, Mom and Emma were already on the bed and they were just as hot and horny as we were. We had disturbed their three way and they were now looking at us as we heaved air to and from our lungs. Alexis stumbled out, \"Sorry. We got carried away.\" Then she assessed the situation and grinned, \"Is this the traditional conjoined Bride and Groom family fuck? I must have missed that on the 'PoD'.\" Everyone burst out laughing as Emma swatted Alexis lightly on the knee. ",
        "Emma was a little embarrassed as she explained, \"Jack came down to check on me.\" She smiled at my dad. \"Truth be told, Jack came down to take advantage of my state of inebriation and Doris came to help.\" We all burst out laughing again.\n\nJack's cock was hard and it bounced up. Emma wrapped her fingers as far around it as she could like she was holding his hand. She began stroking it as she stretched over to kiss Doris. In moments they were in the same condition we were in when we stumbled in here minutes ago. I was sitting on the bed like we do on the shower floor sometimes with Alexis' back leaning against me. My still hard cock was pressed between her back and my stomach. As Emma started the action again, I reached around and cradled Alexis' breasts in my hands and twiddled with her nipples. They were as hard as nails. I pushed the go button by leaning forward and kissing her on the neck below her right ear. She groaned as her head lolled off to the left. I kissed her on the neck again and nibbled on her earlobe breathing softly in her ear and we were off. Alexis didn't care if the Mormon Tabernacle Choir was sitting there on the bed with us.\n\nShe pulled herself away from me and spun around on her knees and assumed the position we use in the shower to make love. It's hard to just fuck in that position but if we want a nice gentle rocking back and forth, making love fuck. It's perfect. Right now, I knew Alexis wanted to be fucked hard and furious with animal passion. She made that clear as she dropped into my lap and quickly adjusted her position and drove herself onto my cock. She screamed hard as she urgently pushed her way down my shaft. I groaned too at the tight spot. Her knees were on the bed, outside my hips and she used them to push herself up my shaft and let gravity drop her like a stone. She groaned out, \"Oh fuck. Yeah. I definitely needed that.\" She was nowhere near done but she tired quickly in that position and I assisted her by lifting her by her ass and pushing her back down again. Her head flew back away from my face as her mouth formed an \"O\" and then let out a long low pitched groan. \n\nDespite my assistance, Alexis was slowing down as she was tiring. I rolled her off me to the bed and positioned us for a missionary style fuck. Her eyes were glazed over as I lowered my lips to hers. Her arms went around my neck and pulled herself up to me. Her legs went over my thighs and pulled me down to her. I balanced on one hand and guided my gooey cock to her pussy. She didn't wait for me to push down. She pulled herself up my shaft by rocking her hips upward hard using her legs as leverage. We kissed each other tenderly which was counter to the furious fucking that she wanted. Our lips parted as my tongue lightly caressed her upper lip. \n\nAlexis' eyes opened and she looked into mine and she whispered, \"Mr. West. Please fuck the shit out of me.\"\n\nI smiled down at her and whispered back, \"Mrs. West. Your wish is my command.\" She screamed loudly as I drove my cock as deep as I could push it. She screamed again as she humped her hips up to meet my next thrust. I gritted my teeth tight and pounded my cock in and out. Then I shifted the pace to a rapid fire piston fuck and Alexis' head slammed back down to the bed as she let out a long, lung cleansing groan through open mouth and then her teeth clenched tight and she was seething air back in. \n\nWe were the only two people on the planet, in the universe for that matter. Emma continued jerking off Jack's cock as they watched us. Doris went face down into Emma's sex, but to us they didn't exist. \n\nAlexis started whimpering as I aggressively impaled my fatty in her sex. As Alexis continued her groans around desperate gasps for oxygen she pulled her legs up and grabbed behind her knees which effectively rolled her hips forward changing the angle of my attack. She came conscious enough to mumble, \"Fuck my ass.\"\n\nI slowly withdrew my cock and she pulled her hips up, folding at the waist, to present her anus to my cock. She mumbled again, \"Fuck my ass Baby.\" I did as she commanded. I withdrew from her pussy and hooked the crook of my elbows behind her knees and leaned forward again. She was forced to roll her hips forward lifting her sex high enough to access her anus. The heat and pressure were incredible and I wasn't going to last much longer. Alexis was whimpering non-stop, \"Oh fuck. Oh fuck. Yes. Yes. Oh Baby, I'm gonna cum. Give it to me. NNNOOWWWW.\"\n\nI was close and I pummeled my cock into her bowels as she screamed and screamed. After our year together I recognized these screams as pure joy. Every muscle in my body seized as my lungs seemed to jam themselves into my throat. A groan caught in my throat as I lunged my hips forward driving my cock deep as the first explosion of jizz launched up my shaft. Alexis screamed from the power behind it, \"JESUS. JESUS. OH MY GOD, JESUS.\" \n\nAs I finished blowing my load I became aware of Alexis' pulsing pussy. I pulled my cock from her anus and pushed myself up to my knees. She released her knees and let her legs straighten back to the bed. I bent forward and drove my tongue into her pussy. Her hips surged back up again as her hands flew to the back of my head and held me there. In another minute Alexis burst into another orgasm and she squeaked out several groans as she lightly bit her lower lip and her hips fired spastically against my face. As she settled down again she released my head and her arms flopped down on the bed like a puppet whose strings were just released by the marionette. Her only movement now was her chest heaving up and down as she gasped for air.\n\nMy cock was still rock hard and Emma reached over and wrapped her free hand around it as far as she could and was now jerking off father and son. She grinned at me when I looked over at the three of them. Mom pulled her face out of Emma's sex and looked at what Emma was doing. She crawled across the bed to Alexis and looked down into her aqua-blue eyes. Alexis acknowledged her presence but didn't move.\n\nMom said, \"Excuse me. Mrs. West. It seems that your husband still has a boner. Would you mind very much if I tried to do something about that?\"\n\nAlexis smiled at her mother-in-law and said, \"Mrs. West. You're welcome to give it a shot, but I put a Cialis in his Champagne glass an hour ago and your efforts may prove futile. I have no clue what the effects will be but a four-hour woody could be useful on my wedding day.\" Doris giggled, bent forward to suck one of Alexis' nipples to her lips and then she sat back up and looked over at me with a look like she was a tiger who had cornered a gazelle.\n\nI looked down at my granite hard cock with some concern. I stoked it a few times. Jesus it was hard. \n\nMy dad chuckled at my situation. Mom looked at him and said, \"Yuck it up there Buster. I put one in your Champagne too.\" He immediately looked down at his cock, which was still in Emma's fist and then he looked up at Emma with the same look as Doris had moments earlier. Phase two was about to begin.\n\nEmma scrambled up onto my Dad's body forcing him onto his back. She leaned forward and dragged her tits across Jack's face. He sucked in each nipple as they went by. Mom reached down and guided his cock into Emma's pussy and Emma planted herself hard on it. She groaned as she sat down on his balls. Mom maintained contact with Jack's cock as Emma pulled herself back up the shaft again. She pulled her hand away as Emma's pace quickened. Emma and Jack were both groaning in stereo. \n\nAlexis could obviously hear what was going on but she never turned to look. She never moved a muscle even after her breathing had become normal. Mom pushed herself up beside me and whispered in my ear. \"Can you do what you just did to me? It looked incredibly hot.\" I grinned at my mom and leaned in and kissed her passionately. I gently pushed her down on the bed and she willingly dropped to her back and spread her legs as she pushed her fingers to her sex spreading her labia and dragged her fingers over her clitoris and into her pussy. She was groaning before I even got into position between her legs.\n\nAlexis suddenly rolled over and got to her feet. She quickly glanced around the cabin and found a door that she figured was the head. She disappeared behind the door and quickly returned with a washcloth. I knew what she had in mind so I paused as Alexis wrapped the wet washcloth around my hard cock and washed it all over. Mom wanted me to hurry and Alexis finished the job and tossed the washcloth through the open door into the sink. She took her original position on the bed but lay on her side with her head supported by one hand. She grinned down at Mom and said, \"I should have made popcorn.\" The three of us laughed. Emma and Dad hadn't heard Alexis' comment. They were busy.\n\nMom watched as I positioned my cock at her sex and her whole body surged upward when I touched my glans to her. She screamed out, \"OH MY GAAAWWWDD. FUCK ME.\" I smiled down at her and slowly drilled my cock into her. She drove her hips up to get it faster than I was giving it to her. She looked up at my face and muttered, \"Quit teasing me. Give it to me. Please.\" I gave it to her hard and fast and she slammed her head back into the bed and her torso launched upward. I wrapped my hands around her big breasts and pulled them up together to form extra cleavage. I was drilling my cock into her at a fast pace. I had more to give but I wanted her to beg for it. Her head rolled from side to side as she groaned constantly through her open mouth.\n\nEmma screamed out, \"Oh my gaawwd,\" which got my attention. Emma's tits were swinging back and forth as she drove herself on and off Dad's cock. He watched them for a while and then felt compelled to handle them. I turned my attention back to Mom. She was now just mumbling, \"Oh my gggawwdd,\" over and over again as I quickened my pace and drove my cock in harder than before. After a minute, she screamed out, \"Oh fuck. I'm gonna cum.\" She started trying to force her hips up as I pushed down. Then she was cumming as she flailed her legs out to the side and then back over my thighs again. Her hands clamped down on my ass-cheeks and pulled me down hard. It was my turn to groan as my body seized and Mom smiled up at the look on my face. Moments later I was firing rope after rope of cum into Mom's pussy. She screamed again with the first salvo and then groaned hard as her head pushed into the bed with each subsequent shot.\n\nShe milked me dry and I collapsed my torso down to my elbows to hold my weight off her. She put her hands to the back of my neck and lifted herself to kiss me. Just then Dad groaned out, \"I'm cumming. Oh Jesus.\" He was flailing his hips up into her and when his first shot blew up his shaft, Emma screamed and she was cumming too. She rode him hard through his many eruptions and he drove his hips up as hard as he could with each one.\n\nI was lying between Alexis and Mom watching Emma and Dad finish up. Emma had already collapsed to Dad's chest and was kissing him all over his face. He had her tits in his hand. As plentiful as Mom's tits were, Emma's were considerably larger and Dad was enjoying every moment with them that he could.\n\nWhen the five of us got topside my cock still hadn't softened. Dad's was in the process of slowly dropping past horizontal. The furniture on the fantail was covered my naked bodies fucking and sucking. The net at the bow was also covered with writhing bodies. I wanted a drink but I had had enough champagne. Dean must have been reading my mind as he came out of the salon with his cock pointing straight out in front with a beer in each hand. I wondered if Josie had put a little pill in his Champagne too. He handed a beer to me. Alexis went back to the champagne.\n\nThia came running over and looked down at Dean's cock and then mine. She giggled and said, \"The groom is reserved for the bride,\" and grabbed Dean's cock and dragged him back into the salon. Dean looked back at me and shrugged his shoulders. I chuckled and put my arm around Alexis' back with my hand on her waist. She looked up at me and cuddled close and said, \"Having a good time?\" I vigorously nodded as I looked around at all the male-female and female-female sex everywhere on the boat.\n\nI heard a loud blast of a horn behind me and I turned around to see a huge power yacht cruising a hundred feet to our starboard. Every guy on board was standing on their port side with binoculars aimed our way. They made no attempt to cruise on by, which they certainly could have. The yacht blew its horn again and the captain of our Catamaran blew his in response. I looked up to the helm and the captain was pointing down in front of him as he looked across the water to the yacht. On closer inspection, Aunt Jane and Cousin Julia were naked on their knees sharing his cock between them. His pointing hand dropped back down to Jane's head as he fucked first her face and then Julia's. Alexis looked up where I was looking and broke out laughing. \n\nThe loud blowing of horns between vessels brought many of the revelers to the starboard gunwales to see what was going on. Nearly twenty naked beautiful women between ages 19 and 48 were all waving at the guys on the yacht. They waved back but never dropped their binoculars. This went on for nearly a half hour before the yacht picked up speed and left us in its wake. Everyone went back to what they had been doing. My cock was still hard and Alexis absentmindedly stroked it from glans to balls. She wasn't trying to get me off and I was nowhere near an ejaculation. It felt strange to have my cock so hard without an urge to climax.\n\nWe sat on the fantail drinking Champagne and beer and visited with friends and family as they took a break. I noticed that all our female guests were eyeballing my rigid cock as Alexis continued to fondle and caress it.\n\nThe afternoon dwindled away as the sun crept ever closer to the western horizon. Everyone must have been fucked out because one by one they appeared on the fantail and salon to watch the sunset. It only took a couple minutes for the sun to drop into the ocean once it started. The few clouds turned every shade of gold, yellow, orange and red before the purples and finally the grays descended. The PA system came alive with a squelch as the captain announced that we were heading in and that we would be docking in thirty minutes.\n\nEmma walked into the Salon and announced that everyone's clothes for the dinner reception were below deck in garment bags personalized for each individual. The guys all had Hawaiian shirts of different bright colors and tropical flowers and tan shorts and leather soled sandals. My outfit was a white short-sleeved shirt with bright red hibiscus blossoms, white shorts and sandals. The women were wearing strapless sundresses in equally bright colors with cork soled high-heeled sandals. Alexis' sundress was white with bright red hibiscus blossom like my shirt. \n\nAs the Catamaran eased up to the dock, everyone was topside to watch our approach to the Resort. There was an explosion of colors from everyone's dresses and shirts. Nina was apparently amused by her sundress as she spun around in circles flaring the hemline to see if she could expose herself. She couldn't get spinning fast enough so she reached down and lifted her mid-thigh hem up high to reveal that she was going commando. I doubted that she was the only one. Alexis giggled at Nina's antics. I wondered how long it would be before her strapless dress failed to contain her massive tits. She was doing all she could to test the limits of her dress. Emma walked up between Alexis and me and said, \"Maybe I should have got her a dress with straps like I got for Olivia.\"\n\nAlexis grinned at her mother and said, \"You think?\"\n\nThe engines of the Catamaran surged into reverse and moments later docking lines were cast and we were secured to the dock. Everyone burst into applause. The captain came down from the raised helm and personally assisted each of the ladies onto the gangway. Each of the women hugged and kissed him. He was in heaven. Then came Jane and Julia and I could only imagine what they would do. He hugged and kissed each of them as they reached down and squeezed his cock as they stepped onto the gangway. Alexis and I were the last one to disembark. I thanked the captain but he was looking past me at Alexis. He wanted his hug and kiss and she gave them to him. I noticed that he pushed his hard-on against her as they hugged and Alexis giggled at his forwardness. She kissed him one more time and we went down the gangway as he watched every twitch of Alexis' hips and ass.\n\nThe Wedding Planner was on the dock and she was guiding everyone toward the Resort ballroom. She kept checking her watch. She spotted us and came our way. Emma met her halfway and we all walked up the concrete sidewalk to the Resort's main building. Emma had seen the ballroom but we hadn't. It was beautiful and it was decorated like the platform had been with white roses and pink tea roses. Tiny lit Christmas type LED lights were draped everywhere. \n\nOur small group was using only a fraction of the capacity of this room. The head table was setup for the wedding party and four large round tables were set in front of the head table, each with light pink linen table-cloths that draped to the floor. Four or five settings adorned each of them. A bouquet of Gardenia's and Lily of the Valley like Alexis' bouquet sat in the middle of each round table and three such bouquets were spaced evenly down the head table.\n\nWe were standing with Emma taking it all in when the Wedding Planner came over and said, \"We have planned for a half-hour for getting drinks from the open bar and then you'll take your seats and we'll start serving dinner.\" We all nodded and Alexis and I walked over to look at the beautiful wedding cake sitting off to the side on its own table with casters on it. It was a small two-layer cake because there weren't many of us to eat it. It was adorned with icing in the shapes of Gardenias, white roses and tea roses in the colors from the bridesmaid's bouquets creeping up the sides of the bottom layer onto the top layer. A ceramic bride and groom dressed like we were in the ceremony sat on the top. Those must have been custom made. I doubted very much that there was a call for figurines dressed like that. Alexis giggled as we got close enough to make them out.\n\nThe half-hour \"Happy Hour\" turned out to be more than enough. Everyone was well buzzed from the Champagne on board the Catamaran. Everyone was still talking about our cruise to nowhere and back. It was a wonderful and unexpected detail that everyone would always remember.\n\nAt the direction of the Wedding Planner, we moved to our seats followed by the wedding party. Everyone else took the hint and moved to their seat that they had already scoped out from the named place-cards. \n\nThe meal was amazing. I had hogged down on the hors d'oeuvres all afternoon so I wasn't starving. I ate most of mine. After dinner, the wedding cake was wheeled over in front of our table and Alexis and I stood just to the left of it. Alexis picked up the serving knife and moved to cut the cake while I watched. The Wedding Planner stepped forward and asked us both to cut the cake together. I moved closer to Alexis and leaned down and kissed her as I put my fingers on the knife. Cameras flashed all over as we cut the cake together as directed. By direction, I fed a piece to Alexis. I had a strong urge to smear the cake on her face, but she was so beautiful I squelched that urge. Alexis didn't squelch hers. As she pushed the piece of cake toward my face, I could tell by the impish look on hers what was coming next. I went with it and she burst into her Julia Robert's Pretty Woman laugh as she smeared the cake all over my face. The crowd roared their approval and cameras flashed everywhere. The cake was taken away and the staff dissected the bottom layer for distribution to everyone's place setting. Many of our guests were milling around or getting more drinks from the bar. A band was setting up near the spacious dance floor. ",
        "The band was very good and they played music of all genres. Everyone was dancing. We had the traditional first dance before my mom and dad joined us followed by Emma and Noah. Then I danced with Emma and Alexis danced with Jack. Then I danced with my mom and Alexis danced with her mom. Then everyone joined in. Cameras were constantly flashing. Everyone was having a great time.\n\nThe only one still sitting at the head table was Dean. His elbows were on the table with his head in his hands. His eyes were closed and I wondered if he was asleep. Alexis was watching him too and she leaned in and said, \"Look at Dean. He isn't sleeping. His body is rocking slightly.\" I hadn't noticed until Alexis pointed it out. \"Josie is under the table giving him a blow-job.\" I burst out laughing.\n\n\"I'll bet that would go a long way toward making this ever-ready cock go down. It's getting uncomfortable with this belt holding it down.\" Alexis ran her hand down my crotch from the belt to my balls and grinned up at me.\n\n\"I have to dance with Noah right now, but Mitch and Crystal have been bugging me all afternoon for some of your time; if you get my drift?\" I chuckled and nodded. \"Take your pick. They haven't taken their eyes of you since we got here.\" Noah approached and offered his hand with a bow to Alexis. She curtsied in response and took his hand and they headed for the dance floor. Noah adored Alexis. Alexis liked Noah okay but he didn't ring her bell. As always, she was polite and respectful.\n\nI nonchalantly loosened my belt and walked over to Crystal and bent down and whispered to her. Mitch was watching the whole time. Crystal's face broke into a grin as she followed me around the head table to my seat four chairs away from Dean who was groaning now. From behind the head table, I could see Josie's face push down Dean's cock and out from under the linen tablecloth. She noticed me and twisted her head to look directly at me. She pulled off Dean's cock and said, \"Great party.\" She smiled and went back to her blow-job.\n\nCrystal looked around the room to see if anyone was watching and then she ducked down under the table and pulled the tablecloth back down. Of course Mitch was watching and she got up and nonchalantly moved around the room taking the long way to the head table. As I stood behind the table scanning the crowd before I sat down, Crystal's hand reached up above the tablecloth and grabbed my belt and yanked me down in my chair. It must have been quite comical to anyone watching. Mitch wasn't amused as she continued her tour of the huge ballroom. Crystal yanked open my belt and unbutton my shorts. The zipper came down and my cock sprang out and slapped Crystal in the forehead. She giggled and grabbed my cock with her left hand as she tugged on the shorts. I raised my ass momentarily from the chair and my shorts went to the floor. \n\nCrystal didn't waste a second as she jammed my granite hard cock to the right corner of her mouth and waggled her head back and forth to get her lips past my glans. I looked down to my lap and her smiling eyes appeared as she slowly slid down my shaft. We both groaned at the same time and Dean looked over to see that he had company. He grinned at me and then looked back down in his crotch to see Josie appear again from under the tablecloth.\n\nCrystal was sucking my cock at a furious pace and then there was a commotion under the table. I leaned down to see what the problem was. Mitch had decided that she wasn't going to be left out and she had secretly made her way under the table and was wrestling my cock away from Crystal and Crystal was fighting back. I sat back up and looked across the room to the dance floor and Alexis was looking at me and laughing her ass off at me.\n\nAlexis had seen the whole thing and admitted later that she had set the whole thing up. I wasn't angry about it because their shared blow-job was fucking amazing. Dean had blown his load into Josie's mouth and she promptly swallowed it. Dean's head had dropped to the table top as he groaned through his orgasm. My head was in my hands just like Dean's had been as Crystal and Mitch worked together to get me off. I could feel it coming but I thought it would never get there. \n\nFinally, my hips fired forward as my first salvo was received by Crystal. I expected that she would pull off and let Mitch get the next shot but she wanted more and she stayed there while Mitch was trying to get her share. Crystal took the second shot and she was overwhelmed as she pulled back. Mitch wasn't concerned with Crystal's dilemma. She took two shots before she pulled off choking and gagging and aimed my cock at Crystal. Crystal was still dealing with the first two shots and wasn't ready for anything more. The fifth, sixth and seventh shot blasted Crystal in the face. She tried to catch it in her mouth but as much fell out of her mouth as went in. Mitch got laughing at Crystal's new dilemma. Crystal wiped cum from her face and wiped her hand across Mitch's face. Mitch tried to pull away from Crystal's hand and the ensuing m\u00eal\u00e9e toppled the table over away from me.\n\nEveryone looked to see what the commotion was and there I was sitting out in the open in my chair with my cum covered erect cock bobbing out in front of me with my shorts on the floor. Mitch and Crystal were on their knees at my feet. Their cum covered faces were red with embarrassment and sexual excitement. Crystal looked back at the silent crowd and licked cum from her lips and then wiped a finger across her cheeks and forehead and pushed that finger between her lips and sucked it clean. Everyone erupted in applause and Crystal and Mitch broke into ear to ear grins. \n\nNina came forward and lifted the tablecloth hiding Josie and everyone burst out laughing again. Josie backed out from under the table and stood up and gave a bow to the crowd. Everyone applauded. Dean's limp cock was clearly visible under the table after Josie was no longer blocking the view. In all the commotion I had failed to realize that my cock had deflated and was hanging limp over my balls.\n\nI looked over at Dean and we smiled at each other and then stood up together, bowed with our arms out wide and then pulled up our shorts and stuffed our limp dicks in and zipped up. The Wedding Planner came over and said, \"That wasn't on the agenda but from what I've witnessed the past few days, it was inevitable.\" She motioned for Alexis and me to follow her to the dance floor. She announced the tossing of the garter. The single guys, consisting of only Dean and Noah, stepped up to the edge of the dance floor as instructed by the Wedding Planner. Dean was good naturedly elbowing Noah aside. He seemed adamant that he would catch the garter. Noah was quicker though.\n\nAlexis sat in a chair as I knelt before her. She carefully pulled the hem of her sundress up to expose the garter. I reached up a little higher to the encouragement of the crowd and discovered that Alexis was going commando too. She turned beet red as I lifted her hem up higher to expose her freshly waxed pussy. Everyone went nuts as they all applauded. Alexis covered her reddened face with her hands as I pulled the garter down and over her foot. She promptly pulled the hem down to her thighs and returned both hands to cover her face. \n\nI stood back to Dean and Noah and threw the garter over my head. Dean attempted to elbow Noah out of the way before making his move. Noah was expecting Dean's elbow and he avoided it and snatched the garter out of the air before Dean could react. Josie frowned and Samantha was thrilled.\n\nNext came the tossing of the bride's bouquet and now the dance floor was lined two deep with single women. In fact everyone was on the line except my mom who stood off to the side with Dad. Alexis looked back to assess the position of everyone and then threw the bouquet over her shoulder in a high arc. There was a mad scramble of pushing women and Samantha caught it just as she was pushed to the floor. I was surprised at the seriousness that all the women took with this silly ritual. \n\nSamantha took her place in Alexis' chair and as she held the bridal bouquet close to her chest, Noah knelt in front of her like I had when I took the garter from Alexis. He made a big show of inching Samantha's skirt higher and higher up her thigh to her obvious discomfort. Her left hand went to her reddening face to cover her embarrassment. The crowd went nuts again when it became apparent that Sam wasn't wearing any panties either. Noah lifted Sam's left leg and slid the garter all the way up her thigh to her sex and accidentally on purposed dragged his left fingers across her clitoris which elicited a surprised lurch from Sam and everyone erupted again.\n\nThe ceremony, the cruise and the reception were over. Several guests milled around in the ballroom as the band continued to play. Many guests were dancing, girl with girl. We went off to dress for our flight to Nice, France.\n\nWe left the ballroom to the applause of everyone and stepped into a Resort supplied limo. Twenty minutes later we climbed the stairs of a spot-lit Gulfstream G650 private jet. The pilot and co-pilot introduced themselves as we stepped into the luxuriously appointed cabin. The Pilot said, \"Mr. and Mrs. West. Congratulations. We have your luggage for your Honeymoon and we are ready to taxi as soon as you like.\"\n\nWe shook their hands. We didn't introduce ourselves as they obviously already knew who we were. I said, \"We are ready to go. What's our ETA?\" I checked my watch. It was after mid-night. \n\nThe pilot said, \"Flight time should be a little more than seven hours if the jet stream holds. There is a seven time zone difference.\"\n\nWe found our seats and the pilot and co-pilot returned to the cockpit. They left the door open and we could both look out the front windshield as we taxied around the small airport to the end of the runway. The plane stopped only for a moment and then we were launched back in our seats as the jet quickly gathered speed and leaped into the air about halfway down the runway. In minutes we were approaching our cruising speed of 650 miles per hour at an altitude of forty thousand feet. Our ETA was displayed as 2:37 PM local time.\n\nThe co-pilot appeared and said, \"There is a queen size bed in the compartment behind this one. It's late and it's been a big day. Perhaps you would like to sleep your way across the Atlantic. There's nothing to see anyway.\" I looked at Alexis and she had that look on her face. I doubted we would be getting much sleep but the bed sure sounded good. We got out of our plush seats and went aft. The co-pilot said that they would let us know when we were approaching our destination."
    ],
    "authorname": "BigZeke13",
    "tags": [
        "wedding",
        "marriage",
        "group",
        "group sex"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/pool-boy-ch-56"
}