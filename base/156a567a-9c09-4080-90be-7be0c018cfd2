{
    "title": "Just One of Those Things Ch. 04",
    "pages": [
        "Jack\n\nI was lying on my futon/couch, every inch of my body aching after one of the more notable days in my recent history. Today had been an LGBT support group meeting. We had moved across campus a few weeks ago to lose the hecklers, but when we let out today we were greeted by something worse - some wanna-be paparazzo, no doubt thinking he could make a few bucks outing the children of the rich and famous. I had blindly chased him into the street, where, not surprisingly, I had been flattened by the front bumper of a Chevy S10 pickup. I was banged up pretty good, but nothing broken. Still, not exactly my finest hour. Sadly enough, it was a distant second on the list of stupid situations I had gotten myself into in the last few weeks.\n\nIt had only been a couple days since I had started talking to Vince again, thus escalating situation number one to an entirely new level of stupid. Whatever my heart told me, Vince was simply not an option. I should have walked away, but the truth was I couldn't stand seeing his silent suffering. I might have been pissed at Vince for expecting me to be able to just forget how I felt and be friends again, but then again the poor guy was so fucked up in the personal relationships department that I was positive he didn't really understand what he was asking of me. Besides, I was the only person who knew his secret, the only person he could talk to. My brother was right - I was a soft touch. \n\nBut what really worried me, the reason I needed some more time to sort myself out, the reason I wasn't sure any amount of time would be enough, was that I wasn't at all sure I wouldn't be able to keep my hands off him if given half a chance. \n\nBut, unlucky for me, I wasn't going to get the chance to sort it out before things came to a head. \n\nThat's where I was when I was jolted out of a semi-lucid haze by someone pounding on my door. I didn't notice it right away because it had blended in with the sound of sleet now pelting the window as the first winter storm of the year rolled in. Reflexively I tried to get up, and immediately regretted it. \n\n\"It's open,\" I called, easing back with my eyes squeezed closed. \n\nI heard someone enter. I was expecting my landlord. When I was low on cash he would give me leftovers from his restaurant in exchange for doing some maintenance work. Of course the food would have gone in the trash anyway, but I didn't push it because this was the only building I could afford within five miles of campus that wasn't full of drug dealers and hookers.\n\n\"I guess it's true then.\" I was startled by Vince's voice.\n\nI stared blearily at him for a moment, half-thinking this was some perverse trick of my mind. This was not a temptation I was in any state to handle right now. That's when I realized what was wrong with this picture. \n\n\"How'd you get here?\" Duh. I corrected, \"It's a blizzard out there, what are you doing driving?\"\n\n\"Checking on you, obviously. I heard you got hit by a car.\"\n\nFantastic. Apparently the fact that I was dumb enough to step into moving traffic had become common knowledge. \"Yeah. Not to sound ungrateful, but why didn't you just call? It was dangerous coming over here.\" \n\n\"I tried, it went straight to voicemail.\" \n\nI pointed to my coat, which I had left lying in a dirty torn up heap on the floor by the door. Vince retrieved my cell phone from the pocket. Or, rather, the pieces of my cell phone. This day just kept getting better and better.\n\nVince handed it to me. \"Are you okay?\"\n\n\"I think I'll survive.\"\n\n\"That's not what I asked.\" He looked me up and down with a frown.\n\nI slowly hauled myself into a sitting position to survey the damage to my phone. \"I don't need a doctor, if that's what you mean. How'd you find out anyway?\" \n\n\"Jamie called me.\" Jamie was a mutual acquaintance of ours (probably the only mutual acquaintance given our vastly different circles), a Log Cabin Republican active in campus politics and also one of the other mentors in the LGBT group. \n\nTurning my attention to my phone I found that the screen was badly cracked and the back panel was in two pieces, but body damage seemed to be the extent of it. \"It actually isn't as bad as it looks.\" I thought aloud.\n\n\"Well, that's good, because you look like shit.\"\n\n\"Not me, the phone. Thanks though.\" I hadn't looked in the mirror yet, but took his word for it. \n\n\"How did you get hit by a car anyway?\"\n\nI told Vince what had happened while I fixed my phone. \n\n\"So,\" he asked when I had finished, \"did the guy get away?\"\n\n\"Nah. He freaked out and dropped his camera in the road. It got pulverized.\" It had been an expensive one too, I thought with some satisfaction.\n\n\"That's lucky.\"\n\n\"Yeah, well, some of the damage was already done. A few of the kids got scared off, probably for good. It's a real shame too because those were the ones who needed the group.\"\n\nAfter some tinkering I managed to fit the battery back into place. I pressed the power button and the screen flickered to life, distorted but readable. The first thing I noticed was that there were eleven missed calls and five voicemail messages, all from Vince. I looked at him with a raised eyebrow.\n\n\"What?\" he shrugged. \"I told you I tried to call you.\"\n\n\"Yes you did.\" \n\n\"I was worried.\"\n\n\"Obviously.\" \n\nHe indicated my phone. \"You can probably delete those.\"\n\nThis could be interesting. I pretended to delete them.\n\n\"As long as I'm here, you could probably use some help.\" \n\nAs long as he's here. Which, judging by the weather, is going to be a while. I wasn't sure I was up to this, but then again it's not like I had a choice.\n\nI let Vince pull me to the bathroom and then help me wrestle my shirt over my head. He looked me up and down and gave a low whistle. \n\n\"It's just scrapes and bruises,\" I pointed out. \"Weren't you ever a kid?\" \n\n\"Your childhood must have been a little more intense than mine.\"\n\n\"Are you kidding?\" I joked. \"You were the one living on the edge. Polo horses, yachting, skiing in Aspen...\" Driving around in a blizzard because I didn't pick up the phone. \"It's a wonder you made it out in one piece.\"\n\n\"Born to be wild, that's me,\" he snorted. \"Do you have any first aid stuff?\"\n\n\"There's peroxide and some washcloths under the sink.\"\n\nThe worst of it was on my left side, where I had hit the concrete after being thrown from the truck's hood when the driver slammed on the breaks. Vince started at my shoulder, the sting of the peroxide doing very little to distract me from the fact that his other hand was resting unnecessarily on my chest. I shivered in a way that had nothing to do with the pain. I wiggled away, trying to disguise it as a flinch. \"Sorry,\" he murmured, but didn't move his hand. \n\n\"Would you believe this isn't the first time I was hit by a car?\" \n\nHe shook his head. \"No kidding. And I thought you were supposed to be some sort of genius.\"\n\n\"Yeah right.\"\n\n\"Who were you chasing that time?\"\n\n\"Well, when I was about fourteen two of our neighbor's sons, Larry and Darryl...\" \n\nVince spurted out laughing and waved me away. \n\n\"I shit you not. Larry and Darryl. Real good ol' boy types, too. Always had it in for us. So they sneak onto our wood lot at three in the morning, tear down a wall of the henhouse and steal one of the best laying hens and the rooster. Now this isn't fucking around, not to us, we depended on those birds. So me and Alan take off after them, middle of November, fifteen degrees out in nothing but long johns. We catch them just as they get back to their truck. Alan goes for the door and I get in front of the hood to stop them.\" \n\n\"It didn't stop them.\"\n\nI shook my head. \"Didn't get far though. With the chickens flapping around in the cab of the truck, the dumb sonsabitches drive off the road and hit a tree.\" I couldn't help but laugh at the memory. \"When they tried to make a run for it Alan caught them and kicked the holy shit out of them.\" I was rambling and I knew it, but I desperately needed the distraction because Vince was so close to my face that I could feel his breath on my cheek.\n\n\"Were you hurt bad?\"\n\n\"No bones were sticking out. But Alan kept me up all night in case I had a concussion.\"\n\n\"Did you?\" He had moved to a cut on my scalp above my left temple, I think from where I hit the windshield. He couldn't have been more than six inches from my face, clearly too absorbed with what he was doing to realize how he was affecting me.\n\n\"Did I what?\" I asked dumbly.\n\n\"Have a concussion.\"\n\n\"Probably.\"\n\n\"Do you have one now?\" he asked, misinterpreting my mental slowness.\n\nI had to think for a few seconds before I said no. Although it would explain the dulling throb in my head. And also why I told him that dumbass chicken story. That's when I noticed he was smiling. Was he making fun of me?\n\n\"What? Think I'm a redneck now?\"\n\n\"No.\" He pulled back a little with a mischevious grin. \"I already thought that. I like your accent though. I thought you were joking the other day with that overdone Bar Harbor thing. But you do have it a little. When you were arguing with Professor Frank a couple weeks ago about the health care law you kept calling Boston 'Ba-stin'.\"\n\n\"So, Yankee redneck.\"\n\nHe grinned. \"That's good. Much better than the people I'm used to. I swear to God our next door neighbor growing up sounded like Thurston Howell III.\" He then launched into possibly the worst voice impression I had ever heard in my life.\n\n\"Ow,\" I grabbed my side, \"Stop making me laugh.\"\n\nHe put his hand on my arm to steady me, and in the space of one disarmed moment his proximity went from uncomfortable to intolerable. I only prayed he thought the choppy breathing was from the pain. When I felt his warm breath on my exposed skin I squeezed my eyes shut and tightened my grip on the edge of the tub, taking a couple deep breaths. But when I opened my eyes Vince was watching in concern. \n\n\"Jack, are you...\"\n\nBut just then my phone trilled, and I took the opportunity to jump up and put some space between me and Vince. I checked caller ID then hit answer.\n\n\"Hey Julian.\"\n\n\"Hey! Jeez, am I glad to hear you.\"\n\n\"What's up?\"\n\n\"Okay this may sound crazy, but I heard that you got hit by a car.\" I mouthed a curse. Was everyone going to find out about this?\n\n\"Um...yeah, it was technically a truck.\"\n\n\"Oh my God!\" he shrieked.\n\n\"I'll be fine.\" I loved Julian, I really did, but the boy was sheltered and overprotective to say the least. I had to spend the next five minutes convincing him that yes, I was really okay, and no, he should absolutely not come over. \n\nI don't know why I was reluctant to tell him that Vince was already there, but in the end I didn't have a choice.\n\n\"Really?\" Julian sounded skeptical. \n\n\"Yeah, why not? Do you think I'd lie just to keep you from coming over?\"\n\n\"In this weather? Yes.\"\n\n\"So I'm a liar, but a considerate one?\" I handed the phone to Vince, who was interrogated for another five minutes while moving his attention from my shoulder to my skinned elbow. I could tell Julian was asking specific questions which Vince tried to answer as reassuringly as possible. Finally when it became clear Julian was getting more worked up I had to take the phone away, make a quick goodbye, and hang up.\n\n\"Sounds like he was really worried,\" commented Vince as he switched out a dirty cloth.\n\n\"I think that's his natural state,\" I grumbled, \"God help that guy's future kids.\"\n\nVince wasn't buying it. \"Look, I know it's none of my business, but are you two, you know...\"\n\n\"No.\" I replied way too quickly.\n\n\"Oh.\" He didn't make eye contact. \"Why not? Julian's obviously interested.\"\n\nWhy not? Seriously? \"Jealous?\"\n\n\"Honestly? Yeah, I am. I miss being friends. I miss you.\" Well, Vince was nothing if not forthright. \n\nVince had been cleaning the skinned heel of my palm, which still had little bits of gravel in it. The pain had been a good distraction but now he had stopped, still holding my hand, rubbing his thumb nervously in the undamaged center of my palm, making my head light in a way that had nothing to do with the accident. There's no way he could have known how crazy that would make me. I yanked my hand away, not bothering to disguise it this time as pain. This was starting to get out of hand.\n\nVince sat back on his heels with a frown. \n\nThere was no doubt that I was being a jerk to him at this point, which was really crappy considering he had come all this way just to check on me, but right now it was a thousand times better than what I really wanted to do to him.\n\n\"You said you wanted to start talking again,\" Vince continued. \"I thought we were doing good.\" God damned that puppy dog look.\n\n\"So, we fixed a car together.\"\n\n\"You told me about yourself. Your parents, your brother...\"\n\n\"You asked. It's not like the basic biographical information about my life is reserved for close friends.\" I flinched knowing I had gone too far.\n\n\"So, what, now we're not friends? What's your problem?\" He made a frustrated sound and stood up. \"You know what? I recognize this is weird for you, and I tried to respect that, I really did, but I gave you six weeks to get over it. Fucking suck it up already.\"\n\n\"Suck it up?\" It took a couple seconds for his words to really register. \"Jesus Christ Vince, I know you have a severely fucked up personal life, and you don't understand what it's like to have these sorts of feelings for someone, but I've got to tell you it is NOT something that goes away in a few weeks, however convenient that would be for you.\" \n\nThe entire time I was talking Vince just looked at me like I was speaking Greek. \"What the hell are you talking about? What...\" Then he froze in mid-sentence, his eyes growing wide in a way that made my stomach plummet. \"Oh.\"\n\nI squeezed my eyes shut. \"You didn't know, did you?\" \n\nVince started to say something, balked, and then shook his head, eyes still wide as saucers.\n\n\"Great, just fucking great.\" I breathed. \"Looks like we're in for an awkward night, so let's get this over with.\" But before I could reach for the peroxide I stopped and rounded on him. \"How did you not know? Why the fuck did you think I was avoiding you?\" I was as angry with myself as I was with him. I should have noticed that he wasn't getting it, but my brain just wasn't firing on all cylinders right now.\n\n\"I don't know,\" he responded, raising his voice slightly. \"I don't know. What the hell do I know about... about that sort of thing? So that's why you were acting so weird about me touching you...Shit, shit shit...\" he ran his hand through his hair and started pacing.\n\nI was silent as Vince had his minor freak out. I could see in his face that I had just changed the game, and I was sure that, whatever bond of trust we had forged over the last few months, I had just broken it. \n\n\"I should probably go,\" Vince murmured. \n\n\"You can't.\" He followed my gaze out the window. I couldn't see the opposite building through the snow anymore, and it was still an hour before sunset.\n\n\"I got here all right...\"\n\n\"Jesus Vince,\" I snapped. \"It's not like I'm going to rape you. I have some self-control.\" I shut my eyes and evened out my tone. \"It's not safe to leave. Trust me, right now I'm not thrilled about it either.\" Even under the circumstances, it wasn't exactly an ego boost to have someone react to your (unintentional) admission of love by looking like he's thinking of jumping out the window.\n\nVince started at my blunt comment and seemed to snap out of it. \"Um, yeah. It's just kind of hard to process. I never thought anyone would...\"\n\n\"Couldn't help it,\" I shrugged. He looked at me like I was nuts.\n\n\"You must have thought I was a real asshole for not leaving you alone. Which really explains a lot.\"\n\n\"I figured you didn't know what you were asking for.\"\n\nI could usually tell exactly what Vince was thinking, but the look he was giving me now was unreadable. He took the washcloth from my hand and dutifully continued to disinfect my scrapes and cuts, maintaining a healthy distance from me this time.\n\nAfter fifteen minutes of awkward silence he had my upper body and face cleaned up. \"Anywhere else?\" he asked.\n\nThe truck's bumper had hit me about mid thigh, and a deep throbbing pain told me it was something that would have to be dealt with. But taking my pants off in front of Vince was not an appealing prospect. \n\n\"Nothing I can't handle myself.\"\n\n\"I'm already stuck here.\"\n\nStuck here. Fine, I thought. It's not like this could get any more uncomfortable.\n\nI kicked off my pants, cursing the obscene bulge in my underwear. Seriously, still? I tried to shrug, like, what're you going to do. Vince was staring and I had to fight not to cover myself with my hands. But then I noticed the sizable bulge in his own pants. \n\nHe noticed my smirk and followed my gaze. Blushing he started to turn away, but then thought better of it, leaving him awkwardly facing the sink.\n\nI giggled in perverse triumph, reverting as I seemed to do too often in his presence to a twelve year old mentality. \"You know, it's even worse in profile.\" I was being a dick because I was hurt and embarrassed, and because I was angry at him for a dozen childish reasons, none of which were actually his fault. Usually I would expect Vince to see right through me, but he seemed genuinely confused himself. For the first time since I had known him he full out blushed. \n\n\"Yeah, so... I'll get some ice.\" He muttered on his way out the bathroom door.\n\nWhile he was gone I sat down on the edge of the tub and took a few deep breaths. From the next room I could hear him wrestle with the ice cube trays.\n\nFor a distraction I decided to check my voicemail messages from Vince. They started out calmly enough, followed by a reasonable level of alarm, but by the last one... By the time Vince returned with a dish towel full of ice cubes I think my mouth was hanging open.\n\nVince saw me and snatched the phone from my hand. \"You told me you deleted them.\"\n\nNot technically, but that wasn't the point. \"You were worried.\" I pointed out.\n\n\"Yeah, I was.\"\n\n\"Really worried.\" That was an understatement.\n\nHe knelt next to me and pressed the ice pack a little too roughly to my thigh. I gasped at the shock of cold and pain. \"Yeah, well, I guess I thought a lot more of our friendship than you did,\" he replied curtly.\n\nOuch. I sighed, the last bit of fight leaving me. \"That's not true. You're the best friend I've had in a very long time. But I haven't been a very good friend to you. Kissing you. Teasing you. Coming up with that dumbass fuck buddy idea. And now this. I would promise to quit fucking with you, but each time I say that I just end up doing something even worse. And now I'm just being a bastard because you're fucking killing me here and you don't seem to realize it...\"\n\nI drifted off because Vince had stopped listening to me, instead staring at the cell phone in his hand with an unreadable frown. \n\n\"Vince?\" I waved my hand in front of his face. \n\nHe blinked and then looked at me. He had clearly just figured something out because, for the first time since my inadvertent admission, there was absolutely no confusion in his expression. In fact, I'm not sure I had ever seen him look more certain.\n\nI gulped.\n\nTo this day I can't say which one of use started it, but in a moment the space between us vanished and our lips met. It wasn't passionate or frantic like the first two times we kissed. The kiss was soft and brief, but it was what I needed. My heart still pounded but my mind was clear. I had known for weeks that I couldn't get more involved with Vince than necessary. And I had just realized that this was necessary.\n\nWe pulled apart. \n\n\"You too, huh?\" I asked.\n\nVince gave a shaky laugh. \"Apparently. So,\" he added, \"what do we do now?\"",
        "I could only think of one thing. It was about the worst thing I could have done, and maybe under other circumstances it wouldn't have happened. All along it had been my sense of reason keeping me away from Vince. Now, with my bruised head making my logic skip like a broken record all I had to go on was my heart. \n\n\"Well,\" I replied with a teasing smile. \"You could leave, right now. I can get my landlord to give you a bed somewhere for the night. After that we just ignore each other completely.\" I knew if I asked him to he would do it, which somehow made the decision easier. I leaned in, my smile growing wider. \"Or, second option...\"\n\nI leaned forward and kissed him again. Fuck it brain, you had your chance and look where you got us. When I pulled away Vince followed, making this desperate little sound deep in his throat that just about undid me, and suddenly the kiss wasn't so soft anymore.\n\nHe ran his hand through my hair above my ear, sending a couple pieces of safety glass pinging to the bathroom tile. Neither of us noticed. \n\nI stood up, pulling Vince with me. The ice clattered forgotten to the tile floor. I pressed him against the wall with my entire body and kissed him deeply, practically attacking his mouth. I inhaled his taste and smell.  \n\nHe put his arms around me, pulling me to him so that every part of our bodies that could touch was touching. In the process he hit several bruises and I gasped, breaking the kiss. He loosened his hold, but didn't let go. We were both breathing so hard. \n\n\"I don't suppose I need to say that this is a bad idea?\" Vince panted.\n\nI simply laughed in reply, kissing and licking the dip at the base of his throat, making him moan and buck his hips into me. God, the taste of him made me crazy. He slid his hands into my underpants, cupping and rubbing my ass. I gasped and bit his smooth, tanned shoulder. Fumbling, I undid the rest of his buttons in a rush and yanked his shirt off. He was perfect, broad shouldered, with well-defined but not overdone muscles, and sparse patches of light hair on his chest and trailing down from his belly button. People say you can't judge a book by its cover, but Vince was definitely an exception. He was beautiful, inside and out. \n\nI licked one of his perfect nipples, and he nearly went through the roof. I smiled and latched onto it, sucking and flicking it with my tongue while he writhed and ground into me, moaning things that weren't quite words. When I finally stopped he leaned weakly against the wall, gasping in a combination of relief and want. I was about to assault the other one when he stopped me. \"Too close,\" he explained.\n\nI led him to my bed. I sat on the edge and pulled him to me, trailing kisses on his stomach. I licked him on the side just under the ribs, and he jerked and let out a stifled laugh. He was ticklish. I undid the button and zipper of his pants, and let them slide to his ankles. He stepped out of them along with his shoes. I pulled him against me, burying my face next to the hard bulge in his underwear and inhaling deeply. \n\n\"I want to blow you.\" \n\nI was surprised because it was Vince's voice, not mine. Like you have to ask. I nodded. \n\nHe dropped to his knees, pausing to kiss me while he pulled my underwear off in one quick motion. His hand traced up my inner thigh, and, at the same time he was sucking on my tongue, his hand wrapped around my cock. I made a sound that I'm pretty sure could be called a whimper. He rubbed the foreskin up and down a few times. I could feel him grin against my lips as he played with his new toy. \"Awesome,\" he murmured. His thumb moved around the head, smearing around a bead of pre-cum. He brought his thumb to his mouth and licked it, then closed his eyes and shuddered. \"You taste so good.\"\n\n\"Fuck, Vince,\" I whimpered. I took a deep, calming breath as he continued his explorations. \"You ever done this before?\" I asked. I knew his sexual experience was limited, and had no idea if it included giving blow jobs.\n\nThat grin was back. He leaned forward and engulfed my cock in his hot mouth. He bobbed up and down a couple times, lubing me with spit, then took me all the way to the back of his throat. Then past it. He swallowed, frowning in concentration, then in a slightly jerky move slid me in all the way until his nose was buried in my pubic hair. His throat was constricting around my head, massaging it in the most indescribably pleasurable way, while his tongue lapped the underside of my shaft. Oh my God, my boy was a master. How I didn't shoot right then was beyond me. He pulled up with a slight gagging noise, then began to lick and suck the head while jerking me, and I had to pull away or I was going to come. \n\nVince looked up at me, smiling in smug satisfaction. \"Does that answer your question?\"\n\n\"Yeah, I'd say so,\" I gasped. \"I guess you've had more experience than I figured.\"\n\n\"I doubt it.\"\n\n\"Well then, you're a fucking natural.\" \n\nHe flashed that wholesome all American smile at me, starkly at odds with the subject matter. \"Thanks. Will you suck me too?\"\n\n\"God, yes.\"\n\nHe stood up so his groin was level with my face again, peeling off his underwear as he went. I wrapped my lips around his cock as soon as it was in range, lapping around the head to collect his pre-cum. I savored the taste, letting it ride on my tongue as I started to move up and down, letting him slide along my tongue and giving the underside of his head a little flick on each upstroke. I might not have been the master he was, but I had him moaning soon enough. He grabbed my shoulder. \"Lay down on your side.\" \n\n\"I don't think I'll last very long.\"\n\n\"Me either. But I'm not going anywhere.\"\n\nSoon we were laying side by side, all rational thought gone as we brought each other closer and closer to the edge. I tried to hold out, but it was all too much.\n\nI pulled Vince's cock out of my mouth, afraid of biting him when I came.\n\n\"I'm gonna come,\" I gasped out. Vince pulled me out of his throat, but not out of his mouth. He wanted to taste it. The realization had my orgasm crashing over me in waves, electricity jolting through my body as Vince sucked and lapped my cock, making a truly valiant effort to swallow everything I was giving him. I had never felt this overwhelming sense of release before, and it filled my vision with bright lights. When I came down what felt like an hour later I realized that my fingers were dug into Vince's ass, leaving angry red scratch marks. I let go and rubbed them in apology. Vince didn't seem to notice. \n\nHe was shaking, his body begging me to take it over the edge. I wrapped my lips around him, licking his head, then gave him a couple of good, slurping strokes before he cried out, his body jerking as his semen started filling my mouth. And there was a lot of it. I had to swallow three times, and even then it was leaking out the corner of my mouth. Once he finally stopped spurting I took all I had collected in my mouth and held it there, savoring. I had been dreaming about this from the first time I had given him a blow job. I was pretty sure he was addictive. \n\nVince turned around shakily so that we were lying facing each other, still collecting the cum that had dripped out of his mouth with his finger. \"Never had a guy cum in my mouth before.\"\n\n\"Oh yeah?\" I replied lazily. \"How'd you like it?\"\n\nHe licked his finger clean and grinned at me. \"You have to ask?\"\n\n\"Shit, you are something else Vince.\" He leaned in and gave me a brief kiss, mingling our flavors, then plopped down next to me so we were touching shoulder to foot. Surprisingly, what followed wasn't an uncomfortable silence. In fact, I hadn't been this comfortable in Vince's presence in a long time.\n\nWe had reached the 'what's next' stage, and it was Vince who acted first. I saw in his eyes his mind running through all of the enticing possibilities, just like mine was. But he settled on one first. \"Fuck me.\"\n\nGod, those words went straight to my balls. \"Don't believe in taking it slow, do you?\"\n\n\"Never had time for slow before. Besides, we're not going fast, more like catching up. But,\" he teased, \"if you want, we can wait...\"\n\n\"Pfft. Yeah right. You've been fucked before?\"\n\nHe nodded. I cringed at the thought that he had given so much control to total strangers. \"How many times?\"\n\nHe paused, counting silently on his fingers. \"Eleven.\"\n\n\"Eleven guys or eleven times?\n\n\"I never saw the same guy twice.\"\n\nI flinched but didn't say anything. Now didn't seem like the time for safety lectures. So, Vince wasn't a virgin but he was close.\n\n\"So, what do you like? You prefer to bottom?\" I asked.\n\nHe considered, then shook his head. \"Depends on the mood. I think I like it both ways about the same.\" \n\n\"That's what I like to hear.\"\n\nHe looked a little surprised, and I can't say I could blame him. I liked getting fucked, but didn't get to very often. Mainly because I had to absolutely trust the person I was with (unlike Vince apparently), and most of the people I trusted that much were 600 miles away. It had been over a year and I was aching for it like never before. Almost as much as I was aching to be inside of Vince.\n\n\"I've thought about fucking you, too,\" Vince continued, seeming to read my mind, \"how good you would feel. How I hope I could make it so good for you. I've never really had to for anybody until now.\" I smiled to myself. If I had anything to say we would be finding out very shortly. \"But this time I want to feel you in me.\"\n\nThis time. Meaning there would be others. The words rang true. In the heat of the moment I didn't know what to think about that, so I didn't. I nodded, and his face split into a grin that was for all the world just like a kid on Christmas day. He rolled on top of me and I yelped as my bruised ribs were compressed. \n\n\"Sorry, sorry,\" he gently rolled off onto his side so we were facing each other and kissed me, the taste of both our juices mingling on our tongues. He was already hard again, and so was I. I put my leg over him and we ground gently against each other, the edge gone but the need still burning strong. \n\nVince kissed my neck, running his fingers through my thick chest hair, which he seemed to find fascinating. He found a nipple and played with it gently. It felt nice, but didn't send me to the moon like it did him. He looked at me.\n\n\"Not your spot?\"\n\nI shook my head.\n\n\"Where then?\"\n\nI grinned. \"Find it.\"\n\nHe grinned back. \"I like a challenge.\"\n\nHe spent the next fifteen minutes searching over every inch of my body, at least the parts that weren't black and blue. At twenty six years old this was his first time really exploring another man's body and he was taking full advantage. I kind of wished I could have provided a better sample for him, but he didn't complain.\n\nMy neck and the small of my back were erogenous zones, but not the big one. I told him to keep looking. He tried all over my torso, my navel, the crease where my leg joined my body, skimming his hands over my ass for much longer than necessary. He found one at my inner thigh that I wasn't even aware of. When I jumped he thought for sure he had it, but I patted his face and told him not to give up. \n\nHe grunted in mock frustration, taking my palm and kissing it, carefully avoiding the scrapes. I stopped breathing, my body went stock still. He looked at my hand in his, then up at me, grinning victoriously. \n\nHe held my hand in his, tracing his lips lightly over my palm and each finger. I had to clench me teeth to keep from squirming. When he licked across my palm I screamed and arched my back. He watched me in amazement. It was an odd turn on, I know. The second guy I had really been with had been the one to discover it. He had been one of the good ones. My brother's best friend, actually, but that's another story. He had once gotten me to within a dozen strokes of orgasm just by licking, sucking, and playing with my hands. Vince seemed bent on beating that record. He lightly nibbled the inside of my wrist, then sucked each finger with the same eagerness he did my cock. He traced the lines on my palm with the tip of his tongue. I had never been so turned on in my entire life as I was watching the most beautiful man in the world sucking on my fingers. As the heat zapped through my body I realized with amazement that I was precariously close to the edge.\n\n\"I love what you're doing,\" I gasped. \"but you're getting me so close.\" He let my fingers pop out of his mouth.\n\n\"Damn,\" he laughed.\n\n\"What?\"\n\n\"Your hands? That's a little weird. Hot as hell, but weird. But I definitely wouldn't want you to lose it so soon.\" he said, pulling me into a rough kiss that told me he was as worked up as I was. \"Because I am so ready for you to fuck me.\" \n\nI responded by shoving him down onto his stomach on the bed. He was surprised but gave no resistance. I traced my hand down the warm, smooth skin of his back, setting off shudders and goose bumps, but Vince was too amped up for such foreplay to be anything but teasing. \n\nI moved down to his round, muscular ass, pausing for only a moment to admire what a masterpiece he was. I lubed up two fingers and slid them up and down his crack, finding his tight entrance. He hissed with excitement and urgency as I worked first one and then both into him. His body accepted them quickly but he was still so tight. I twisted them inside of him, knowing he wasn't very experienced, all the time kissing the back of his neck and shoulders. He wiggled and grunted, but I didn't let him rush me as I added a third. Finally he grabbed my wrist and forcibly removed my fingers from him. \n\nHe looked at me over his shoulder. \"Ready. Now.\" \n\nI got a condom out of my dresser drawer and got covered and slicked up. After some contemplation I lay down behind Vince in a spooning position on my right side, which had the fewest bruises. He swung a leg over me, and after some adjustment to avoid a scrape on my hip our bodies were fit together. Once I found the spot he didn't wait, but drove himself back onto me in one long, smooth movement until I was completely imbedded. I guess he was through with me taking it slow. The moment I was fully inside him was so perfect it was almost surreal. I closed my eyes and reminded myself to breathe. \n\n\"Oh, shit,\" he groaned.\n\n\"Are you okay? Do you want me to pull out?\" Dear God, please say no.\n\n\"No way,\" Vince grunted. \"It's just weird. It doesn't hurt. It always hurt before.\" I felt a flash of anger at the eleven guys who apparently hadn't bothered to prep him. His back arched and he gave a long, tingly stretch, softly grinding my cock inside of him. \"Oh my God, it feels so good.\" \n\nI reveled in the feeling his body adjusting to me, and soon I was rocking gently into him. As soon as I started moving Vince gave a sigh of relief and twisted his torso around and kissed me, not deep, just a long lingering brush of his soft lips, again, and again. He looked right in my eyes, his hand on the side of my face, as we moved together. I wondered if he could hear my heart pounding out of my chest. \n\nI changed angles, and could tell by the way he cursed that I had his prostate. His hand sped up on his cock, but I held his wrist.\n\n\"No rush.\"\n\nHe gave a shaky smile and nodded. \n\nI sped up a little, until he started breathing harder, but still slow and gentle. I was grateful that we had sucked each other off first or I would have blasted off in the first couple minutes, no matter how slow I took it. \n\nVince started shaking, his kisses became more erratic, groaning and gasping into my mouth with each thrust. I pushed into him a little harder, testing him, and he cried out. I did it again, making our bodies slap together. He was practically babbling, urging me on in a near indecipherable combination of encouragement and blasphemies, all while still managing to find my lips from time to time. I wrapped my arm around his chest and held him close as I gave in and truly started to pound him. His hand abandoned his cock to reach back and tug on my hip, guiding me, silently demanding that I fuck him harder, faster. I gave him everything I had. \n\nHe was unknowingly grasping a bruise on my hip, but I was too far along to care about anything other than the fact that the faintly registering pain would buy me another minute. I grabbed his face with my free hand and pulled him into a deep, searing kiss. His response was frantic as he tried to swallow my tongue. I remembered how sensitive his mouth was, so when he finally pulled away for air I sucked on his lower lip, then bit it, while scratching my fingernails over his nipple with the other. \n\nHis whole body tensed, and he cried out into my mouth as he came spectacularly, with my cock buried deep inside him and my arms wrapped around his violently twisting body. I pulled back to watch him in shock. I had never made anyone come hands free before. His perfect cock jumped against his belly, sending streams of cum everywhere: across his torso, onto my hand grasping his heaving chest, and onto the bed. The muscles all over his body tensed and released rhythmically, standing out in stark relief against smooth skin that was flushed and sheened with sweat. His breathing was erratic, his eyes wild. But they caught and held mine, boring into me, in an expression so intense that I couldn't look away even if I wanted to. \n\nI was immediately on edge. While Vince was still in mid-orgasm I gave one final hard drive into him and exploded. \n\nHo. Ly. Fuck.\n\nI slid out of him and turned his body to face me. I couldn't tell which one of us was shaking the worst. \n\nI was well aware that this should probably be where the regret started to kick in, but strangely enough it wasn't. If anything I felt more and more okay with it as we came down off the sexual high.\n\n\"Well.\" I said at length.\n\n\"Well.\" Vince repeated.\n\n\"That was something.\"\n\nVince snorted, his arm draped over his eyes. \"No shit.\"\n\nI propped myself up on my elbows. \"This is some motherfucker of a mess we're in now Vince.\"\n\n\"Uh-huh,\" He agreed. After a few moments he followed up, \"But, for the record, you're the one who started it.\"\n\n\"Pfftt,\" I waved him off. \"Bullshit. I seduced you? With moves like that nobody would buy your helpless na\u00efve virgin routine for a second. You are one hot piece of ass and you know it.\"\n\nVince couldn't help but laugh. \"Flatterer.\"\n\n\"So,\" I said, patting his chest, \"I'm afraid we're in this together buddy.\" \n\nHe placed his hand over mine and nodded. We were going to have a very serious discussion in the near future, but for now we were both fine putting it off.\n\nI had to pull him to his feet, and then catch him to keep him from falling. I smiled smugly to myself that I was able to bring him to this state. \n\nWe took a quick shower together. The stall was barely big enough for two people, but we managed. As we stood together under the soothing spray Vince took one of my hands in his, running his thumb along my scarred knuckles. He seemed fascinated by all of my scars and imperfections, I guessed because he himself was so physically perfect. Coming from his sheltered background I don't think he actually understood how I got them, which was just as well. \n\nWe returned to my bed. I didn't ask him to sleep with me, and he didn't ask permission. My bed was a single, but he just got in next to me and curled around me so tight that there was room to spare. I closed my eyes, but he nudged me. \n\n\"You're not supposed to sleep with a concussion.\"\n\n\"I don't have a concussion.\"\n\n\"You don't know that for sure.\" \n\nI twisted to face him with an eyebrow raised. \"So, you're saying you just fucked a guy with possible brain trauma?\" \n\n\"All part of my devious plan,\" he kidded. \"I never would have gotten you if you were in your right mind. Now keep your eyes open.\"",
        "\"Fine,\" I grumbled, figuring that I'd have to wait ten minutes tops before he drifted off. But he didn't. Every few minutes his body would go stiff as he gave a big full bodied yawn, then he would poke me in the side to make sure I was still awake. It was just starting to get light out when we both finally drifted off to sleep. \n\n*********************************\n\nAs always, comments/constructive criticisms are greatly appreciated. "
    ],
    "authorname": "cforester44",
    "tags": [
        "gay romance",
        "gay love",
        "gay drama",
        "drama",
        "gay novella",
        "forbidden love",
        "closeted",
        "gay sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/just-one-of-those-things-ch-04"
}