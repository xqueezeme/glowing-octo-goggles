{
    "title": "A Dragon's Tale Ch. 25",
    "pages": [
        "***I self-edit and admit editing isn't my greatest skill. (dyslexia) I apologize in advance for anything I missed. ***\n\nCHAPTER 25: Strange New Worlds\n\n* * *\n\nOne week.\n\nKendra had been sailing non-stop at full sail for a whole week and had finally reached her destination at mid-morning on the seventh day. It was a dreary, gray day with a dreary gray sky to match her mood.\n\nShe lashed her tiny little airship to the bollards in the Gralden docks like the docking posts had done her a great personal wrong. She took a deep breath to calm herself but was only partially successful. She was starting to get really pissed off at that dragon for making her come all the way out to Gralden just to confirm his story.\n\nOkay, maybe that wasn't the real reason.\n\nIf he really was innocent...\n\nShe suppressed a growl of frustration and then headed down the small dock towards the city. However, instead of finding a dock master waiting for her, she found quite another sort of fellow.\n\nHe looked to be in his mid-twenties, although he was sporting a full beard. A longsword was fastened at his side and he wore chainmail from head to toe, partially concealed by a surcoat which carried the emblem of a gold coin. He was also huge; several inches over six feet and -- even taking into account the extra bulk added by the chainmail -- it looked like he could wrestle an ox and win.\n\n\"Kendra the dragon huntress?\" The man asked as she approached.\n\n\"Who wants to know?\"\n\n\"Heinrich, captain of Lord Borden's guard.\" He said standing slightly straighter at that pronouncement.\n\nShe shrugged. \"My name is indeed Kendra, and my blade has tasted dragon's blood before.\"\n\n\"Then Lord Borden formally requests the honor of your presence.\" Heinrich said; coming from a lord, that wasn't a request.\n\n\"How did he know I was coming?\"\n\n\"I do not know.\" The man replied. \"Follow me.\"\n\nShe frowned slightly at his terse manner, but followed a few paces behind him regardless. It wasn't wise to keep a lord waiting.\n\nHe led her through the city towards the wealthier district. The entire town was set at the base of a mountain and the ground sloped upwards slightly. It seemed the higher up you went in the city, the wealthier and nicer the buildings. She didn't see abject poverty anywhere, but the run-down wattle-and-daub buildings lower down certainly contrasted with the glamourous stone buildings higher up. The top of the town wasn't more than a few stories higher in elevation than the bottom though. There was an ornate mansion that looked like a Lord's residence not far from the small docks.\n\nThat's where Heinrich led her.\n\nShe followed him through a series of halls which were tastefully but lavishly decorated, finally stopping before a large wooden door. The door was carved with several ornate designs and inlaid with gold, yet somehow not ostentatious. Heinrich knocked once and then opened the door, stepping aside for her to enter and then closing the door behind her.\n\nShe were standing in what looked like a large office with several large and expensive looking paintings lining the walls. Gold candlesticks also lined the room, although they weren't currently lit. Through the many windows, Kendra had an excellent panoramic view of the town.\n\nLooking out one of the windows with his back to her was a man she could only assume was Lord Borden. He turned after a moment and regarded her. He was tall, over six feet and possessed an imposing presence. Kendra got the impression he was a man of great intelligence and cunning. Making him look even more so was the perfectly tailored suit that was cut in a subtly aggressive way. He had expensive taste, as the suit was made with gold and silver inlays. It looked expensive and clearly showed the man's status, but also managed to avoid looking pretentious or tacky.\n\n\"Kendra the Dragon huntress.\" He said with a thoughtful expression.\n\n\"How did you know I was coming?\" She asked.\n\n\"Someone portalled a letter.\" He said, nodding towards a piece of paper on his ornate desk. It wasn't large and looked like it had been tightly rolled at some point.\n\nMost castles and major cities in the Ten Kingdoms -- including Gralden apparently -- had a small portal through which things could be sent to other city's portals. The portal apertures where very small, rarely more than two or three inches wide so they didn't pose a security risk, but letters could be sent if you had enough coin. This enabled almost instantaneous communication across the Ten Kingdoms, but was obscenely expensive to use. Each portal required a skilled, knowledgeable mage to operate and target, and they were expensive to keep employed. Even Lords used them rarely because of the expense.\n\n\"I imagine that's not something you see every day, even as a Lord.\" She commented.\n\n\"True, which makes it more curious.\" He inclined his head slightly towards the letter. \"Read it.\"\n\nKendra stepped forward and glanced at the letter. It was quite short:\n\n++++++\n\nMy Dear Lord Borden,\n\nI, Elder Goman of Arcanum, would humbly request that you take an audience with one Kendra the dragon huntress who will be visiting your city in about a week. She seeks information about a young, steel grey dragon that I believe you have met, and can bring word of your daughter, Beth.\n\nAlthough Kendra is not in my employ nor does she speak for me, I would ask that you grant her an audience, share with her freely, and tell her nothing but the honest truth without addition or omission. Doing so would place me in your debt.\n\nHumbly yours,\n\nElder Goman\n\n++++++\n\nLord Borden indicated a chair in front of his desk, which she took. The man himself sat down in a large chair behind the his mahogany desk.\n\n\"So, what news do you have of my daughter?\"\n\n\"She's healthy, happily married, and appears to get along extremely well with her fellow wives.\" Kendra said, trying to be vague so as not to give too much away, while still giving enough information to satisfy a father wanting news of his daughter.\n\nLord Borden set his jaw.\n\nHe hadn't exactly looked upset before, but now mouth was a thin line as he pulled his hands up and steepled them together. Kendra couldn't tell what he wasn't irritated by, but it didn't seem to be her.\n\n\"Fellow wives?\" He said after a moment.\n\nShe nodded.\n\n\"He took another wife?\"\n\nShe nodded again.\n\nHe eyed her. \"You said fellow 'wives' plural, not fellow 'wife'. How many does he have?\"\n\n\"Four-- no, sorry three.\" Kendra corrected herself after remembering the redhead wasn't one.\n\nLord Borden took a deep breath and let it out slowly.\n\nIt wasn't a relaxing breath though, nor a calming one. It was the deep breath of someone who'd just made a decision. Whatever that decision was, she doubted that it boded well for Ethan or any of his wives not named Beth.\n\nWhich included Taloni....\n\nKendra leaned forward in her seat slightly and locked eyes with him. \"Lord Borden, one of Ethan's wives is a Fey girl named Taloni. If anything were to happen to her -- anything at all -- I would be...\" she paused for effect. \"...displeased.\"\n\nShe let that hang in the air for a moment before continuing. \"Further, if anything ever happened to separate Taloni from Ethan, or to make her upset or unhappy in any way, I would also be......displeased.\"\n\nLord Borden looked at her for several seconds before replying. \"That is quite a statement to make to a Lord.\"\n\n\"It is.\" She replied matter-of-factly.\n\n\"Hmm.\" Lord Borden leaned back in his chair, the picture of perfect relaxation as he considered her. \"Why would a former Aldmiri be so protective of a Fey girl?\"\n\nKendra resisted reacting, but barely. \"Not many know the name Aldmiri. How do you?\"\n\n\"I own The Bank.\" He replied simply.\n\nShe nodded, supposing that he couldn't have risen to his high status without learning a few things.\n\n\"We have a problem Kendra.\" He stated. \"I will not suffer my daughter to share a husband, yet you would not suffer me to rectify the situation.\"\n\n\"I would not, leastways as it concerns Taloni.\" She confirmed.\n\nIn the back of her mind, she wasn't sure he'd let him harm Alana either. The wood elf seemed very kind and she was sure that the chocolate-haired brunette would be devastated if she were forced to separate from Ethan.\n\n\"Why? What makes this Fey so special?\"\n\n\"Why are you so dead set against your daughter sharing a husband?\" Kendra countered.\n\n\"If you had children, you would understand.\"\n\n\"Pretend for a moment that Taloni is as dear to me as Beth is to you, and then you will understand.\"\n\nLord Borden made a thoughtful sound, but his face still looked hard. \"I would not wish to make an enemy of an Aldmiri, even a former one, but I will not tolerate my daughter sharing a husband.\"\n\n\"I would not wish to make an enemy of a Lord, but I will not tolerate any harm coming to Taloni, nor her being forced to separate from Ethan.\"\n\n\"That does not change my position.\"\n\n\"Then we're at an impasse.\"\n\nHe nodded and they regarded each other for a moment, each sizing the other up.\n\n\"I admire your dedication.\" Lord Borden said, and he seemed sincere. He glanced at the letter on the desk. \"Out of respect for the prestigious Elder Goman, I shall honor his request. However, know this: you shall be safe from me until the first rays of light fall Illuminar's temple in Gralden tomorrow morning. After that...\" He paused. \"...after that I would not be found in this city.\"\n\n\"Fair enough.\" Kendra nodded.\n\nShe was pretty sure he was telling the truth. Lord Borden had a reputation as an impeccably honest man. Not one man in the Ten Kingdoms had ever claimed that he'd broken an oath or not made good on his word. She would be safe in Gralden until dawn tomorrow. But afterward...\n\n\"Now, what do you wish to know?\" Lord Borden said. He was surprisingly calm for someone who'd just made an enemy of a former Aldmiri. Most would be quaking in their boots... if they knew who the Aldmiri were.\n\n\"Everything you know of Ethan Ejder, and what happened concerning him while he was in Gralden.\"\n\n\"Very well.\" Lord Borden replied, then he began to confirm every detail of the dragon's story with his own.\n\n* * *\n\nEthan sat down on the starboard steps leading up to the Argo's quarterdeck where Anthiel asked him to, more than a little curious as to what he would see. His wives and Rachel had insisted on not seeing their dresses for the last week, wanting him to wait for a big reveal when they were done. Now at last they were, and he had no idea what they would look like.\n\n*Not even a hint?* He asked Alana.\n\n*If you tell me to give you one I will, but I think you'll like the surprise.* His wood elven wife replied.\n\n*Okay then, keep your secrets.* He said with a chuckle as he waited.\n\n\"And now, fresh from the Argo's lower decks, we have our lovely ladies.\" Anthiel announced after peeking down through the door to the lower deck on the starboard side of the ship. Ethan himself was sitting on the starboard set of stairs leading up to the quarterdeck, so his beautiful wives plus Rachel were waiting to unveil their new dresses directly below him. The high elf moved so she was to Ethan's right side along the Argo's railing.\n\n\"And now, here they come.\" Anthiel said. \"First up is a lovely elven woman who's heart is a large as the southern sea and warm as its beaches: Alana Ejder.\"\n\nAlana came out and he gave a slow whistle.\n\nShe was wearing the same green dress as always, but something about it looked slightly different. It took him a moment to realize that she'd subtly altered the color in places so the leaf pattern stood out slightly more. It was beautiful, made even more so by the radiant smile the wood elf was wearing. The smile made her dimples even more adorable than usual. Her long, chocolate brown hair was up in a simple bun that was very elegant. A small lock from her temples on either side of her face cascaded down, framing it perfectly. Her pointed ears fit her perfectly and she had a slightly wild look about her that made his heart soar and his cock stir.\n\nAlana did a slow pirouette so he could admire the dress from all sides before moving to stand next to Anthiel. The high elf was leaning against the railing, and was tall enough and standing just right so that she completely blocked his first wife from view.\n\n\"And now,\" Anthiel continued once Alana was out of sight. \"The Lord's daughter who wouldn't let death keep her from her husband, Elizabeth Ejder.\"\n\nBeth came out wearing a royal blue dress that same seemed to make her flawless pale skin shine. It was a perfect color for her, and a perfect cut too. It was a bit longer than Alana's dress, falling to below the knee but not slipping into formal evening wear either.\n\nThe dress was cut so to make it look like her legs ended at her waist, which had the side effect of making her already long legs look even longer and more shapely. The top had a V-neck which didn't show much cleavage, but didn't leave you in doubt that she was a woman. The thin straps also showed off her shoulders, which was a beautiful sight.\n\nHe grinned seductively at her.\n\nShe pirouetted and grinned back at before taking place near Alana, hidden behind Anthiel.\n\n\"And now, the Fey girl with a heart of gold, Taloni Ejder.\"\n\nHis Fey bride burst onto the scene, flying out and spinning round in the air like a dancer for several seconds before landing with a curtsey. Her dress was a gorgeous lilac color that perfectly matched her eyes. The 'skirt' portion was a bit shorter than the others, and she had spun fast enough that it had flown up until it formed a circle of flowing lilac fabric. Her modesty had been protected by a pair of lilac shorts which hugged her legs and came down to just above her knees. That was probably a good idea, otherwise she might be exposed if she flew above someone.\n\nThe dress was a halter top which came up to the bottom of her shoulder blades in the back, leaving room for her wings to spring from between them. There was just enough skin showing on the side to ignite the imagination but kept everything well covered. That plus her bare shoulders and cute smile... He gave her a slightly hungry look.\n\nTaloni blushed as she looked at him, then joined his other wives.\n\n\"And now, you know and love her as a powerful mage and--\" Anthiel winked at Ethan. \"-- a wise redhead: Rachel Delmar.\"\n\nRachel glided out looking absolutely stunning.\n\nSeriously, drop dead gorgeous.\n\nThe dress was no less beautiful than he remembered, and possibly more. The red color matched her hair perfectly and it hugged her figure without crossing the line into slinky. The redhead was rather more amply endowed than the other women, but certainly not 'large'; in the realm of a full C cup. She gave Ethan a nervous but beautiful smile. He would've been tempted to propose on the spot if he thought the redhead would accept.\n\nHe wolf whistled.\n\nShe blushed.\n\nAnthiel walked over to him, leaned down and whispered into his ear. \"I thought it would be most appropriate to introduce them in the order of marriage.\"\n\nHe raised his eyebrow.\n\nShe gave him a knowing smile, then slipped past him to go back up to the quarterdeck. He looked past her to the four beautiful women gathered mere yards away.\n\n\"Damn.\" He said. \"You all are hot.\"\n\nRachel grinned and then snapped her fingers, a bit of fire blazing between them for a moment.\n\nEveryone laughed.\n\n\"Let me look at all of you.\" He said as he gazed at them.\n\nAll of them, including Rachel, twirled slowly to model for him. It was a lovely sight. Not just beautiful, not just sexy, not just arousing; incredibly lovely.\n\nHe sighed. \"Damn, I'm a lucky man.\"\n\n\"We're the lucky ones, right girls?\" Alana replied.\n\nThey all nodded, even Rachel.\n\n\"You are so good to us Master.\" Taloni said skipping forward to kiss him tenderly on the lips.\n\n\"Yes you are Dominus.\" Beth replied, kissing him after the Fey.\n\n\"They are absolutely right sir.\" Alana said, kissing him after Beth had finished.\n\nRachel's foot twitched forward, then stopped right as Ethan and his wives all glanced at her. Somehow, there seemed to be an unspoken assumption that she would be next -- confirmed by her almost starting forward -- even as she didn't move any more.\n\n\"Well, that's not awkward.\" Ethan said.\n\nRachel half-smiled.\n\n\"Captain.\" Serif said to him, thankfully breaking the awkwardness and saving them all the trouble of extricating themselves from it. \"When you are done, we should continue your training on the longsword.\"\n\nHe sighed.\n\nSerif had begun training him in the longsword the day after the girls started on their dresses, saying he needed to learn the weapon to better fight against it. He wasn't wrong, but it wasn't fun starting from scratch again after getting so comfortable with the spear. That said, it was fun learning to use a real longsword; it was a childhood dream come true.\n\nHe nodded to Serif and then turned to his wives. \"Well ladies, I need to thank you all for being wonderful and then get my ass kicked in a sword match.\"\n\n\"We should be thanking you Master.\" The Fey piped up.\n\n\"Agreed.\" Beth smiled, going slightly pink.\n\n\"I concur, and I have an idea how we could thank him for being so wonderful...\" Alana said, then added telepathically. *...sir.*\n\nHe grinned.\n\n* * *\n\nThwang! Kunk!\n\nSelene set the crossbow down, rather pleased at her most recent bullseye.\n\n\"Well done Miss Dawson.\" Mr. Abromowitz said.\n\nThe nervous fellow had calmed slightly in the past week, at least around her. Around the other four men he was still as nervous a long-tailed cat in a room full of rocking chairs. Each of the other men had taken to the crossbow just as well as she had, or better. They all had the look of hardened military vets who'd seen more combat than seemed possible given the lack of an active war going on.\n\nThe room looked like most other firing ranges, and was made of concrete like everything else in this place. There were a dozen firing lanes, though only five were occupied. Downrange there were five archery targets in lieu of paper targets, which the crossbow bolts would simply rip to shreds. All the targets had a crossbow bolt in or near the bullseye.\n\n\"Okay, again on my mark.\" Mr. Abromowitz said.\n\nSelene let her hands drop loosely to her side as the crossbow similarly fell, suspended by a strap that went over her shoulder.\n\n\"Mark!\"\n\nAs fast as she could, Selene swung the crossbow down and inserted her foot into the foot loop at the front. Then she grabbed the string with both hands and using the form she'd been taught, pulled it up until it caught on the release latch. Quick as a flash, she nocked a bolt into the string, raised it, took a moment to aim properly, and fired.\n\nThwang! Kunk!\n\n\"Another bullseye.\" She heard Smithbond say from behind her as he started slowly clapping; she hadn't heard him come in. \"Well done. You'll make a wonderful addition to the team.\"\n\nShe gave him a look.\n\n\"Now, let's get you and everyone else briefed. The portal is finally being airlifted here and should be operational in a day or two. You'll leave as soon as it's ready.\"\n\n* * *\n\nRachel watched Ethan and his wives disappear into the captain's cabin with a sigh. She knew exactly what was coming, and everyone on the Argo would hear it. Well, they'd hear Taloni anyway. That girl had a set of pipes and was very vocal about how much she enjoyed... it. Hoping to distract herself, the redhead wandered up onto the quarterdeck where Anthiel was tuning some type of stringed instrument.\n\n\"You know, most fishermen pull when the fish bites.\" The high elf said casually.\n\n\"Huh?\"\n\nThe high elf glanced down to where the captain's cabin was below them.\n\n\"Oh, I'm not interested.\" The redhead lied.\n\nAnthiel made a thoughtful sound, looking completely unconvinced. \"So, what brings you up here on this fine morning?\"",
        "\"Boredom.\" Rachel shrugged. \"There's not much to do right now.\"\n\n\"There should be soon.\" The high elf replied. \"We should be crossing into the wood elves' land any minute now.\"\n\n\"I've heard they're very protective of their borders. Is that true?\"\n\nAnthiel got a mischievous smile. \"Wait a few minutes and you'll see.\"\n\nShe was right.\n\nNot five minutes later -- just as the noises from the captain's cabin were getting to the point where she wanted to retreat far away to the ship's bow -- an airship started descending towards them. It was small, perhaps a bit larger than Kendra's canoe-sized airship, but it looked sleek and fast. There was an artfulness to how the bow curved and the subtle patterns on the wood. Clearly, this was as much a work of art as it was a scout ship.\n\nAnthiel grabbed the sword that she kept near the ship's wheel and used the butt end of the scabbard to bang loudly on the deck below her. The moaning and groaning suddenly ceased.\n\n\"We have visitors.\" The high elf called loudly.\n\nRachel heard the bed creak and what sounded like a scramble.\n\nAnthiel looked up at her and winked. \"Sometimes, you've got to keep them on their toes.\"\n\nRachel chuckled, sharing an amused grin with the high elf.\n\nMoments later, Ethan came barreling up the stairs to the quarter deck looking slightly annoyed. \"What's going on?\"\n\nAnthiel gesture upwards. \"Wood elven border patrol. They'll drop to our level and ask about our business.\"\n\nEthan gave frustrated but resigned sigh, then activated his disguise gem so he looked like a human.\n\n\"Actually, you might want to keep that off.\" Rachel suggested.\n\n\"Oh?\"\n\n\"They invited a dragon, so I assume the scouts know you're coming. It's better if we don't look like we're hiding something.\"\n\n\"Fair point.\" He nodded, and then clicked the gem off again.\n\nRachel heard the captain's cabin door open again, and moments later three very beautiful and slightly frustrated looking women came up the stairs to the quarterdeck. Alana and Beth's hair was mussed and wild, in a look that the redhead had grown to associate with them having just slept with Ethan. Taloni's hair looked perfect though, probably because of her Fey heritage.\n\nAs the scout ship got lower, Rachel turned to Ethan. \"Remember, it's an honor culture. So be very deferent to avoid giving offense.\"\n\n\"I remember.\" He sighed.\n\nThe crew had spent a significant amount time talking about this over dinner the previous few nights. Alana and Beth had offered some advice, but the teen mage had offered the most because of her greater experience. She'd never done a diplomatic meeting with the wood elves before, but she had seen several so she had an idea how to speak to them properly.\n\n\"Hail, and welcome to the great kingdom of the wood elves!\" One of the two scouts called when they had dropped to the Argo's level, though perhaps a dozen yards off the quarterdeck. He was quite young, while the other look quite old, especially considering he was an elf.\n\n\"Hail, it's an honor to be here.\" Ethan replied somewhat awkwardly.\n\n\"What is your business in our fair lands?\" The scout called, and Rachel could see he had his hand on a bow.\n\n\"We were invited to come see the king of the wood elves.\" Ethan replied.\n\nRachel nudged him.\n\n\"We've heard that he's... um, that he's a most magnificent king and we'd like... uh, we're honored by the invitation.\"\n\n\"We were told of your coming.\" The scout called. \"We are honored to receive a prophet of Illuminar -- blessed be He.\"\n\n\"I'm not a prophet of Illuminar.\" Ethan called back.\n\nShe got the feeling that he was going to repeat that phrase an awful lot.\n\n\"I apologize for the mistake honored dragon.\" The scout called back with a bow. \"The king has given orders that you should be received at the capital palace. I shall grant you a flag-pass. Stand fast for delivery.\"\n\nThe scout stood and lifted what looked like a blunted spear with cloth wrapped around it. He stood, gauged the distance, and then gave it a measured throw. It flew through the air in a high arc to land on the quarterdeck at Ethan's feet.\n\n\"Honored Dragon, affix that to your upper mast and no sentry shall waylay you until you reach the capital. Look for that flag at the docks, and you will discover a berth suited to your ship. A delegation from the King will await your arrival.\"\n\n\"I will, thanks.\" Ethan replied.\n\n\"May Illuminar -- blessed be He -- fill your sails and grant you fine weather.\"\n\n\"And the same to you.\" Ethan called back.\n\nThe wood elf gave him a respectful bow, and then his airship shot upwards like someone had turned all the ballast logs on at once. Ethan reached down to pick up the cloth-wrapped spear. There were two small strings holding the cloth to the shaft and he untied them. The flag had a few different shapes in what appeared to be deliberate patterns.\n\n\"I'll take it.\" Anthiel offered. \"It must be attached on the upper mast so it lays flat and can be seen from above.\"\n\n\"Clever.\" He nodded. \"How long until we reach the capital?\"\n\n\"Probably around noon tomorrow if the wind holds.\" The high elf replied.\n\n\"What would've happened if they didn't want to let us through?\" Beth asked.\n\n\"The scout would've tailed us, reporting our position to their fleet and directing them to our location. Inside of an hour, we would've had a dozen larger airships converge on the Argo.\" Anthiel replied.\n\n\"But how?\" Beth asked. \"How would they able to communicate?\"\n\n\"Did you notice that one of the scouts was young, and the other looked old, even for a wood elf?\"\n\nThe blonde nodded.\n\n\"The oldest, and longest married military veterans are assigned to scouting duty so that they can use telepathy to communicate with their wife, who will be on the flagship of the main fleet.\"\n\n\"Wow, they use the...\" Ethan trailed off. \"I can't decide if that's brilliant or heartless.\"\n\n\"I'll go with brilliant.\" Rachel offered. \"The position of senior scout is a high honor in the wood elven navy. Plus the scout can spend his off-duty time with his wife while he's deployed.\"\n\n\"I hadn't considered that.\" He conceded.\n\n\"Speaking of spending time with wives...\" Alana said with a sensual smile.\n\nBeth nodded. \"We were in the middle of something...\"\n\nTaloni nearly dragged Ethan back down the stairs into the captain's cabin.\n\nRachel turned back towards the railing, trying to ignore what was probably going on right beneath her feet.\n\n\"You know, I could have you married in two minutes if you wanted to join them; I know he wouldn't object.\" Anthiel said casually.\n\nRachel pointedly stared in the opposite direction.\n\n\"I'm sure his other wives wouldn't mind either; especially Alana.\" The pilot added.\n\nAt that, Rachel turned and gave her a confused look. \"Huh?\"\n\nThe high elf just smiled and went back to tuning her instrument, which left Rachel a bit confused as to what she meant.\n\n* * *\n\nKendra kept an eye out for this \"Garthildur\" and his traveling caravan of merchants as her tiny canoe-sized airship sailed over the rolling plains to the west of Gralden.\n\nLord Borden had answered her every question concerning Ethan before she'd left town. If his reputation was anything to go by, every word he spoke was true. She was pleased to learn that Alana had an uncle that traveled nearby, because if anyone was going to give her dirt on Ethan, it would be Alana's family. She assumed he would have no way of knowing that Ethan had eventually married her, and so he might still be quite cross with him.\n\nAt least, that's what she hoped.\n\nIt took half a day of westward travel, but she finally spotted what looked like a traveling caravan on the horizon and she adjusted course to pursue it. Not long afterwards, she adjusted her sails to bring the ship to a dead stop about a quarter mile in front of the caravan; no sense spooking anyone. She landed her airship, hopped out, and waited.\n\n\"Hail traveler!\" The man leading the caravan called from his horse when he was closer.\n\nIn contrast to Alana's sun-kissed fair skin, this man's dark grey skin marked his clearly as a dark elf. His hair was almost white like all dark elves. He looked barely middle-aged and seemed quite fit. He was wearing simple pants and shirt made from a rough fabric, and had a short sword belted around his waist.\n\nHis hand was on the pommel.\n\nLooking at the man's face, Kendra got the distinct impression that she shouldn't take this man lightly. His eyes were bright and spoke of cunning and intellect. He looked relaxed, but judging from his seat he was also a fighter and looked ready to move at a moment's notice.\n\n\"Hail.\" Kendra called back. \"I seek a word with Garthildur Trade-Captain, if he be among you.\"\n\n\"I am he.\" The dark elf replied, then turned on his horse and waved for the caravan to stop, which it did. \"Of what would you like to speak?\"\n\n\"Of your niece, Alana, and the dragon that she bonded to.\"\n\n\"Do you have news?\"\n\n\"I might have news, but I certainly have questions.\"\n\nGarthildur tapped a finger on his sword's pommel. He regarded her silently for several seconds, then dismounted, handed his horse's reins to someone nearby, and he walked out to meet Kendra. He walked slowly, deliberately, and seemed to carefully avoid making any sudden movements. He stopped several yards from her. Too far for polite conversation, but close enough that he wouldn't be heard by the rest of the caravan.\n\nHe tapped his finger on his sword's pommel again, though it was a pensive gesture not a threatening one. \"What do you want with Alana?\"\n\n\"Truthfully, nothing.\" Kendra replied. \"I seek to know the character of the dragon that she traveled with.\"\n\n\"Traveled? Past tense?\" The dark elf asked.\n\n\"I will speak nothing of present events until I hear of events long past.\" Kendra replied. \"I wish to know what you know of this Ethan; of his character and moral fiber. Is he like all other dragons, or perhaps a bit more?\"\n\nGarthildur made a thoughtful sound. He seemed to be weighing his options and deciding whether to speak or not.\n\nShe decided to make that easy for him. \"I'm not tracking them if that's your concern. Let me tell you the story I heard from Alana's own lips about what happened here so you know I mean her no harm. Then I should like to learn about this dragon.\"\n\nThe dark elf looked at her pensively for a long time. Finally, he glanced back at the caravan before addressing her. \"Wagon wheels don't fix themselves.\"\n\nKendra produced a single gold coin and flipped it to him. \"Now, let me tell you my story and then you can tell me yours.\"\n\nGarthildur deftly caught the coin and nodded. \"Agreed.\"\n\n* * *\n\nSelene stared in awe as a massive chinook helicopter lowered a wooden box fifteen feet square through the overhead bay doors that had just lifted up and slid open. Below them was a helicopter landing pad, obviously intended to be fully concealed from prying eyes by the bay doors. She could see the fading light of dusk beyond the spectacle, and what a spectacle it was.\n\nThere were raised ramps opposite each other on the landing pad itself. They had been set so there was a gap just wide enough to accommodate the box that was being lowered. Before the box had been lowered, you could walked up one ramp, across the gap, then down the other ramp. On either side of both ramps were supports clearly intended to keep the box vertical once it had been lowered into place. The helicopter pilot had expertly dropped the box exactly into place on the first try with no help from the ground crew.\n\nIt was impressive.\n\nOnce the box was in place, he dropped the twin cables connecting it to the helicopter and then flew away as the bay doors slid closed and then dropped down a couple feet. Unless Selene was much mistaken, she saw a few tiny trees growing on top of the overhead doors; they must serve as camouflage for the entrance.\n\n\"Impressive isn't it.\" Smithbond said.\n\nShe had to nod in agreement.\n\n\"Our esteemed guest--\" He began, but she snorted derisively. He ignored her and continued. \"--will examine it and the control podium that was delivered earlier today. If it functions, you and the rest of the team will leave soon.\"\n\n\"Are they being coerced too?\"\n\nHe looked at her for a moment. \"Very few join our agency by choice. But once they see the work we're doing, very few want to leave. Give it time, you'll want to stay too.\"\n\n\"I highly doubt it.\" She replied.\n\n\"You'll come around eventually. I did.\"\n\nSelene didn't respond because frankly, she didn't trust a single word out of his mouth. He seemed like the sort of fellow who would use truth to spin lies.\n\n* * *\n\n\"Those are the events.\" Kendra nodded when Garthildur finished his story, which matched Ethan's perfectly. \"But what of the Ethan himself? You must have impressions of him; of his character.\"\n\n\"Why do you ask? What's your interest in him?\"\n\nShe considered for a moment before doing something rather uncharacteristic of her: she told the honest truth. \"I was assigned to kill him. But despite several nearly successful attempts, he saved my life. Twice.\"\n\n\"Ah.\" The dark elf nodded. \"I would believe it. He showed no regard for his own safety when it came to my niece. While I'm sure a part of it was ignorance, he was willing to risk his own life without a second thought to save hers.\"\n\nKendra nodded slowly, realization dawning on her.\n\nDamn.\n\nShit.\n\nFuck!\n\nThat dragon had been telling the truth. They had all been telling the truth. He really was the good guy in his story, and she really had been the villain. She could feel her cheeks starting to get warm and at the same time a cold sweat started under her collar as her stomach clenched.\n\n\"I need to go.\" She said, hopping into her airship.\n\n\"Wait, what news of my niece?\" Garthildur asked with as much concern as she imagined a parent would have for their own child.\n\n\"She married Ethan, and is among the happiest women I've ever seen.\" Kendra said. \"Somehow, she found true love with a dragon.\"\n\nThe dark elf smiled. \"Good. I hoped for as much. May Illuminar -- blessed be He -- speed you on your.\"\n\nKendra gave him a half smile and then turned on nearly all the ballast logs at once. Her airship shot into the air and she didn't stop her ascent until she was out of both sight and earshot. She couldn't help but think back to all the times she'd attacked Ethan; the times she'd nearly killed him.\n\nWhat had she done?\n\nOh dear God in heaven, what had she done?\n\nThe cool breeze of the night air blew through her clothes, but that wasn't what was chilling her to the bone. This Ethan might be the most selfless man she'd ever met -- that she'd ever heard of -- and yet she had...\n\nShe covered her mouth as her eyes began to get watery and her throat started to feel tight.\n\nWhat had she done?\n\nHe had saved her life twice after she'd tried to kill him three or four times. She was in his debt a half dozen times over. But worse, she'd...\n\nShe sniffled, trying to keep the tears at bay.\n\nShe couldn't.\n\nShe felt like her previous actions were a sharp knife in her heart that was being twisted mercilessly. She had never felt like this before. Ever. She leveled the ballast logs and flopped down on the makeshift bed that she'd been using for years.\n\nIt held no comfort for her.\n\nShe pulled the thick, heavy woolen blanket over her head trying to block out the world. That didn't work either. She felt like pond scum. She couldn't believe that she'd almost killed an innocent man. And worse, not only an innocent one but a good one; a great one.\n\nSeveral passages from the Book of Light came to mind about the fate of those who set themselves against the righteous; of those who made war against innocent men. She'd done both. She'd tried for so long to make the world a better place and she'd come so incredibly close to murdering an innocent man.\n\nIlluminar must hate her.\n\nHe'd gifted Ethan with lightning and thunder. He must be some special chosen man of God and she'd attacked him...\n\nOh God, what had she done?\n\n* * *\n\n\"Tee, are you okay?\" Alana asked\n\n\"Huh?\" The beautiful young Fey girl shook her head as if coming to herself after being lost deep in thought.\n\nThey were all sitting around the fire on the Argo eating a late dinner. Anthiel had been helping Taloni learn some of the trickier parts of maneuvering an airship and so they had started eating late. Now, they were all sitting around talking and laughing except for the Fey girl. She seemed lost in thought.\n\n\"I asked if you were okay.\" Alana repeated, smiling at the teen's expression of mild confusion.\n\n\"I'm fine.\" The Fey said, accenting the first word... oddly.\n\n\"Does that mean someone else isn't?\" The wood elf asked.\n\n\"I don't know, maybe?\" Taloni looked at her and fluttered her wings nervously. Her pretty lilac eyes and honey-blonde hair made her look all the more vulnerable.\n\nAlana scooched a bit closer. \"I'd like to hear if something is bothering you. You don't have to say it, but I'm always happy to listen.\"\n\n\"You'll think it's silly.\"\n\n\"Try me.\"\n\n\"I feel like Kendra is...\" The Fey frowned. \"I feel like she's... I don't know. Like something's wrong. I'm worried about her.\"\n\n\"Do you know what's wrong? I mean, she hunts dragons so I'm not sure what could pose a danger to her.\"\n\n\"Yeah, that's true...\" The Fey teen replied, but didn't seem convinced.\n\nThere was silence for several seconds then the Fey teen stood up, her new lilac dress looking absolutely stunning in the firelight.\n\n\"I'm going to bed early.\" She said, though she didn't look the least bit tired. Alana had occasionally found her reading the Book of Light or praying when she went to bed early, and wondered if perhaps that's what she was going to do.\n\n\"Good night honey.\" Ethan said and then yawned.\n\nHe'd been practicing combat most of the day with Serif or Raklan and he looked tired. He'd taken to the sword very well by her estimation, but as usual Raklan and Serif had really put him through his paces to teach him the weapon.\n\n\"It's really different using the sword versus a spear.\" He said with another yawn. \"I think I prefer the spear, unless my opponent closes and gets in close.\"\n\n\"That is the spear's weakness.\" Serif nodded. \"Great range and power, but much weaker if they get past the tip.\"\n\n\"Yeah, that's the hard part though.\" Ethan replied, as he hadn't been able to do it to Serif or Raklan all afternoon while they were using spears. \"I'm happy with my spear, I just wish it was easier to carry and usable in tight quarters.\"\n\n\"That's actually a good reason to learn the sword and carry one.\" Alana pointed out. \"It takes time for you to summon your spear and war hammer, whereas you could just draw the sword to defend yourself while they were coming.\"\n\n\"Hmm, good point.\" He mused. \"I might need to start thinking about that.\"\n\n\"And don't forget your enchanting.\" She reminded him.\n\nHe'd been doing it before bed every night and she could see the difference in his reflexes when he fought. He had been getting rather good at holding out against Raklan and Serif until he'd switched to a sword.\n\n\"Right.\" Ethan said, then closed his eyes and took a deep breath.\n\n\"Ethan.\" Rachel called. \"You might consider making that reflexes enchantment something you can deactivate.\"\n\n\"Oh?\" He cocked his head to one side. \"Why?\"\n\n\"Because if you're always used to fighting with an advantage, you'll start to rely on your reflexes instead of good technique if you aren't careful.\" The redhead explained.\n\n\"He already has a bit; that's part of why I moved him to the longsword.\" Serif said, and then took another carefully measured bite of his dinner.\n\n\"Yeah... I know.\" He admitted.\n\nRachel nodded. \"I'm just thinking that when you fight someone who has reflexes as good as yours, you'll be at a disadvantage because you spent less time on the skills.\"",
        "\"Good observation, O' wise redhead.\" Alana said with a wink. Beth giggled and Rachel rolled her eyes, but smiled anyway.\n\n\"I think I can do that.\" Ethan mused. \"I'll make it so the reflexes are always improved except when I intentionally turn them off. Let me try.\"\n\nHe closed his eyes and took a deep breath. He barely moved or spoke for several minutes, but his facial expression shifted occasionally to a look of deep concentration.\n\n\"I think that did it.\" He said, then looked at Serif and Raklan sighing. \"Oh well, back to getting my ass kicked all the time.\"\n\n\"You mean kicked more.\" Raklan grinned wickedly.\n\n\"You are improving at a prodigious rate.\" Serif said. \"If you keep practicing as you have been and keep improving your reflexes, you will be extremely powerful.\"\n\n\"That's the plan.\" He nodded.\n\n* * *\n\nKendra felt a gentle touch on her shoulder and she jumped awake, reaching to draw her sword as she did so. It wasn't there. She sat bolt upright only to discover that she had no idea where she was.\n\nShe was in a large room that was beautifully lit by the late morning sun streaming in through the windows. It had a light, almost airy feel and something about it was very warm and welcoming. She was laying in the largest bed she'd ever seen. It looked easily large enough for seven or eight people and was very comfortable.\n\nAlong an adjacent wall were seven different bassinets, none of which were currently occupied. Several of them of them had recently been adorned with fresh flowers that hadn't yet started to wilt. Each also had a small gemstone embedded in it. She could make out the first five -- emerald, sapphire, lilac kunzite, garnet, and amethyst -- but couldn't make out the other two for some reason.\n\nKendra smiled at seeing the amethyst; they had always been her favorite gemstone. Oddly, the lilac-hued kunzite and the purple amethyst didn't seem to clash, but rather complemented each other perfectly.\n\n\"Hello Kendra.\" A melodious voice said from behind her.\n\nThe dragon huntress whipped around to see a woman clad all in white from head to toe. It was the brightest white she'd ever seen and seemed to shine like the sun, but with the warmth of a flickering candle. The woman herself looked young and beautiful like a woman in her prime, but also had the eyes of someone ancient and full of wisdom. Her heart shaped face was the picture of perfect femininity and she had a smile that would've calmed an angry dragon.\n\n\"I've seen you before.\" Kendra mused. \"In that dream.\"\n\n\"My name is Gabriella.\" The luminous woman nodded. \"I hear you have been feeling awful since just before you fell asleep.\"\n\nThat's when the guilt rushed back.\n\nEthan.\n\nHer attempted murder.\n\nWhat Illuminar must think of her for attacking an innocent man...\n\n\"Actually, that's why I'm here.\" The angel said.\n\nFor the first time in a very long time, Kendra felt real, true dread flood her soul. She was being visited by an angel just after realizing that she'd been hunting -- persecuting -- an innocent man.\n\n\"I... I...\" She tried to say 'I'm sorry', but the words just wouldn't come.\n\n\"Kendra, relax.\" The luminous woman said in a tone that seemed to sooth Kendra's worries away. \"Have you not read what's written in the book of light?\"\n\nKendra was afraid to reply.\n\nThe angel smiled kindly and then quoted. \"But if a wicked man turns from all his sins, and observes my commandments, and practices justice and righteousness, he shall surely live and not die. All his sins which he has committed will no longer be remembered against him.\"\n\nThe dragon huntress sniffled. \"It says that?\"\n\nThe angel nodded. \"Kendra, I've come to tell you that Illuminar -- blessed be He -- is not mad at you.\"\n\n\"He isn't?\" She felt herself start to tear up again, but for a different reason.\n\n\"No, He isn't.\" Gabriella shook her head. \"You have acknowledged your error and repented of the evil you were doing. Therefore -- just as the Book of Light says -- He, the Great and Merciful God of Light, will no longer remember your sins against you.\"\n\nThe luminous woman stepped forward and placed a gentle hand on Kendra's shoulder. \"You sins are forgiven Kendra; God Himself has forgiven you.\"\n\n\"Really?\" The dragon huntress barely whispered.\n\nGabriella nodded and smiled kindly. \"God isn't mad at you; He loves you.\"\n\nKendra broke down crying.\n\nThe tears started and simply wouldn't stop. She cried and sobbed while the angel held her and comforted her. The dragon huntress wasn't crying from sadness, but relief. She felt like a huge weight that had just barely begun to settle into her soul was lifted. She still felt guilty over what she had done in attacking Ethan, but the guilt was no longer soul-crushing. It hurt and badly, but she didn't feel like she was drowning anymore.\n\n\"Only one thing remains.\" Gabriella said when Kendra had pulled herself together a little.\n\n\"What's that?\" She replied, whipping the tears out of her eyes.\n\n\"What does the Book of Light say you should do when you've wronged someone?\"\n\nKendra shrunk back and shook her head. \"I can't. I can't face him again, not after what I've done. He'll never forgive me anyway.\"\n\nGabriella gave her a strange sort of smile. \"You never know until you try.\"\n\n\"Will he forgive me?\" She asked, and then bit her lip.\n\n\"Kendra, whether he will or not, isn't it important to ask?\"\n\nShe nodded.\n\n\"Then do, and you might be surprised at what happens afterward; how your life's path will become clearer.\" Gabriella had a strange sort of knowing smile on her face, and one that simultaneously reassured and intrigued the dragon huntress.\n\nShe was still trying not to shake in nervousness though. Were it not for Taloni, she would've thought there was no way Ethan would ever forgive her. Maybe the Fey girl could convince him? It seemed her only hope.\n\n\"Speaking of Ethan's delightful third wife, my Lord would like you to deliver a message to her; an answer to a question she hasn't asked yet.\"\n\n\"Oh?\"\n\n\"The next time you see her, tell her that my Lord says answer to her question is 'a most emphatic yes'. Doing so will make her very happy.\"\n\n\"Okay, I will.\"\n\n* * *\n\n\"But... but... but I'm not ready.\" Taloni spluttered as she couldn't believe her ears. She had come up to the quarterdeck for more sailing lessons just as the sun crested the horizon, which is when the high elf had broken the news.\n\n\"My dear girl.\" Anthiel replied. \"You're a natural airship pilot and you've been practicing almost non-stop for quite some time. I think it's time you took all that practice and put it to good use.\"\n\n\"But...\" She looked around the quarterdeck hoping for some support.\n\nMaster was standing there looking both sympathetic and amused. \"Honey, if Anthiel says you can do this, you can do this.\"\n\nThe Fey gulped.\n\nShe didn't want to disagree with Master, but she didn't feel like she could dock the Argo in the wood elven capital of Nalatia. The butterflies in her stomach were doing a fast-paced jig. For a moment, she felt like she was in danger of losing her breakfast.\n\n\"Hey.\" Master walked up to her and pulled her into a hug. \"I know you're nervous, but you're so much more competent than you are confident. Anthiel will be with you every step of the way and I'll be cheering you on. You really can do this.\"\n\n\"Really?\" She asked.\n\n\"Absolutely.\" He looked her in the eyes and she was struck by how much emotion and feeling for her were in them. He seemed absolutely confident that she could. She wasn't sure she could, but his confidence in her definitely made her feel better.\n\n\"I'm really nervous Master.\" She admitted.\n\nHe half chuckled and said with a wink. \"I couldn't tell.\"\n\nThe Fey took a deep breath.\n\n\"Being nervous isn't bad when doing something new.\" Anthiel said. \"It'll keep you focused and help prevent you from making too many mistakes.\"\n\n\"She's right.\" Master added. \"I'd like you to try, even though you're nervous. Especially because you're nervous. Courage isn't the absence of fear; it's being scared or nervous and doing it anyway.\"\n\n\"Okay, I will.\" Taloni said, her mind made up the moment Master said that he'd like her to try. She knew he was pushing her to grow as a person by facing her fears and she loved him all the more for it. That didn't mean she was less nervous though.\n\n\"Good.\" Master said. \"I'm proud of you for trying.\"\n\nShe beamed as her heart swelled to roughly twice its usual size.\n\n*Now, if I could get all my ladies to gather in the captain's cabin, there's something we need to discuss.* Master thought to all of them.\n\n\"We'll be getting into position to dock about around noon.\" Anthiel said, looking to the horizon and then turning to the Fey teen. \"Make sure you're up here by then.\"\n\n\"Okay.\" She replied, still feeling nervous but glad that they had urged her to try.\n\nShe followed Master down the stairs and into the captain's cabin, where Alana, Beth, and Rachel were already waiting. It took a moment for the Fey to remember that the redhead wasn't one of master's wives. That really was a shame. Rachel was so beautiful, nice, and clever, not to mention powerful. She really would make an excellent wife for Master.\n\nOddly, Alana looked uncharacteristically nervous and anxious.\n\nKnowing exactly how she felt, though not why, the Fey teen slipped onto the bed next to her and wrapped her in a hug. The wood elf looked very grateful and hugged her back tightly.\n\n\"Whatever's wrong, just let me know if I can help.\" The Fey teen offered when their hug broke.\n\nAlana smiled, her eyes slightly moist. \"Has anyone ever told you that you're the sweetest thing ever?\"\n\n\"She is.\" Beth agreed.\n\n\"Aye.\" Rachel nodded.\n\n\"Couldn't have described her better myself.\" Master said with a pleased and proud expression.\n\nThe Fey teen beamed.\n\n\"Now, Alana had something she wanted to say.\" Master said as all eyes turned to the wood elf.\n\n\"So, I told you all that my mother's last name is Kalon, and that she's the king's niece by marriage.\"\n\nThere was a general murmur of agreement.\n\n\"I don't know the whole story or exactly what happened, but here's what I do know.\" The chocolate-haired elf paused, looking nervous. \"My father is the oldest son of House Nalfigar.\"\n\n\"Oh wow.\" Rachel said.\n\nBeth whistled.\n\n\"Um, isn't Nalfigar the other Great House in the wood elven kingdom?\" Taloni asked. She remembered hearing that, but wasn't sure.\n\nAlana nodded. \"They are rumors that they were going to be betrothed to unite the Great House for the first time, but...\" She took a deep breath. \"But they ruined that possibility.\"\n\n\"How?\" Master asked.\n\n\"So, you need to understand how important bonding is to wood elves. It's the foundation of marriage and one of the most sacred things in the culture. But my parents they...\"\n\nThe wood elf took another deep breath, shaking slightly in nerves. \"They um, uh... 'made me' without being bonded to each other.\"\n\n\"And I take it that's bad?\" Master asked.\n\n\"Yes Master.\" Taloni said while feeling her heart break for the lovely wood elf. \"The Fey view bonding much the same as wood elves, and for two people to sleep together without being bonded is... well it's...\" She thought for a moment, trying to think of a way to describe just how detestable that was in their culture.\n\n\"So your parent's were shamed.\" Rachel said quietly. \"Are they pariahs?\"\n\nAlana shook her head. \"Only my mother. She refused to name my father as the elf who had... had...\"\n\n\"Had what?\" Master asked.\n\n\"Um, the technical term is 'defiled' Master.\" The Fey teen offered, trying to spare Alana the pain of having to say it out loud. \"It means she gave her virtue to a man to whom she wasn't wed, meaning bonded. There's no coming back from that; not in the wood elven or Fey culture.\"\n\n\"A woman can barely come back from that among the human nobility.\" Beth said while looking at Alana sympathetically. \"I can't imagine how it must be among the Fey and elves.\"\n\n\"Okay, I'm confused.\" Master said. \"Just for sleeping with someone she's not bonded to, she became a pariah?\"\n\n\"A woman's virtue is her most precious asset.\" Rachel nodded. \"Good men won't look twice at a woman that another man has taken. If a woman wants a chance at a good husband, she must keep her virtue. Otherwise her prospects sink to common men who have no standards.\"\n\nMaster stared at Rachel as his jaw went slack.\n\n\"What?\" Rachel also looked confused.\n\n\"Nothing.\" Master replied. \"It's just a bit different where I come from.\"\n\n\"Oh.\" Beth said as if something had just occurred to her, then she looked at Alana. \"Because she's a noble, she can't be wed to a commoner in the wood elven culture or she would dishonor her family. But since she's--\" The blonde paused, clearly trying to avoid the word 'defiled'. \"--not a virgin, she can't find a noble husband either.\"\n\n\"There are always a few.\" Rachel said. \"Other nobles who have dishonored themselves in one way or another.\"\n\nBeth got a look on her face like she'd just tasted something sour. \"Those aren't the kind of men you'd want to marry though.\"\n\n\"Agreed.\" Rachel nodded fervently.\n\nTaloni had listened to the entire exchange, but was watching Alana. The normally happy, contented wood elf was looking very conflicted and rather green around the gills. While the other girls weren't wrong, it must be hard to have parents so shamed as an elf.\n\n\"Hey.\" The Fey teen leaned against Alana and put an arm around her shoulders. \"How can we help?\"\n\n\"I don't think we can.\" Alana replied sadly. \"I know it's silly, but I'd like to meet my parents while we're here. If that's okay.\" She looked at Master.\n\n\"Absolutely.\" He said almost instantly. \"We might have come here because the king invited us, but my priority is first and foremost my wives.\"\n\nAlana, Beth, and Taloni sighed as one.\n\nRachel looked like she had started to, then caught herself.\n\n\"There's something else you should know.\" Alana said. \"I might not be allowed into the palace, or to see the king.\"\n\n\"What?\" Master growled, though not at his wife.\n\n\"I'm the daughter of a...\" She closed her eyes. \"...a 'defiled' mother.\" She opened her eyes and the Fey could see a deep pool of pain in them.\n\n\"Yeah, the wood elves are very particular about that kind of thing.\" Rachel set her jaw, leaving no one in doubt as to what she thought of that.\n\n\"So you're telling me that they won't let me bring my wife with me into the palace to meet the king?\" Master looked shocked. He was also clenching his fist.\n\nAlana nodded.\n\n\"I have half a mind to turn this ship around right now.\" Master growled, though again not at her. \"No one insults my wife.\"\n\n\"No, please go.\" Alana said. \"It could be wonderful to have an ally against Lord Delmar and the black dragon. After that fight with Kyrupto, I think it's obvious we need all the help we can get.\"\n\nFor the next several seconds, various growly, brooding sounds came from Master. Finally he spoke. \"I hate that you're right.\"\n\n\"One thing.\" Rachel said. \" It probably wouldn't be wise to bring up her parents with an audience. The wood elves are very sensitive to mentioning anything that they think might dishonor them. If you're going to bring it up, it's best to bring it up in private.\"\n\n\"Okay.\" Master growled, still clearly not pleased about this turn of events.\n\n* * *\n\nKendra adjusted the cant of her sails by a couple degrees to make sure they caught every last bit of wind possible. She'd deployed every single sail on the ship, and even considered holding blankets up to get her incredibly fast airship to travel even faster.\n\nEver since waking up from the dream she'd felt like she had a singular purpose, though it was one she dreaded. The last thing in the Ten Kingdoms that she wanted to do was apologize to Ethan. Literally the last thing. She would've preferred going toe-to-toe with Kyrupto, or perhaps a nice torture session, or perhaps...\n\nShe cocked her head to one side.\n\nOkay, maybe not the last thing she wanted to do. Being forced to carry a dragon's child would be worse; okay, any amount of intimacy or affection with a dragon would be worse. She shuddered as she thought about how Taloni had kissed Ethan so affectionately on the cheek. She'd rather swim through a shark infested lake while bleeding than do that.\n\nBut apologizing to Ethan was a close second.\n\nShe tried to plan out what she would say, but everything she thought of just seemed so lame; so inadequate, so meaningless compared to what she had done.\n\nShe adjusted the sails a fraction more and hoped this would all end quickly. The last thing she wanted to spend any more time in that damn dragon's company than absolutely necessary.\n\n* * *\n\n\"For the record: I hate this and think it's a bad idea.\" Selene said, thinking the last couple days of preparing for this horrible idea could've been better spent coming up with another plan.\n\n\"Noted.\" Smithbond replied dismissively.\n\nShe scowled and turned towards the now-intact portal. It was about ten feet wide on the inside and fourteen on the outside and made of wood. It had a steel ramp leading up to it, so she couldn't see the bottom eighteen inches of empty space in the center of the ring. All around the side of the ring facing her were strange symbols; she counted thirty-nine. Seven Large gemstones were embedded into the ring at equidistance points, but they were arranged as if there was an eighth one that was out of sight below the ramp.\n\nShe looked around the room, which was a converted helicopter landing pad. Everything was made from concrete or steel and there were a lot of very bright lights around the room. There were also a lot of men in white lab coats running around check various equipment, most of which looked like some kind of sensor and were pointed inwards at the ring.\n\nOff to one side was Gonorran standing beside a pen containing several goats. Selene shuddered as she remembered that this portal ran on some kind of 'death magic'. She couldn't imagine that anything good could coming from that.\n\n\"What do you hope to gain from going there anyway, and don't feed me a line of crap about threat assessment.\" She asked the distasteful agent next to her.\n\n\"Magic.\" He said simply.\n\n\"What kind?\"\n\n\"Any kind that will give us an advantage against our enemies.\"\n\nShe sighed. \"Such as?\"\n\n\"You yourself saw the optical stealth ability that made a dragon look like a man.\" Smithbond counted off on his fingers. \"They had contact with a team of paramedics whose house and phone we bugged. It seems like one of them could manipulate fire, they can freeze people for later revival, and even heal wounds using magic.\"\n\nSelene had to admit that those sounded like pretty cool abilities.\n\n\"We're ready.\" Yvonne said from behind her. The purple-haired tech whiz was sitting at a bank of computers and monitors so large and complex that Selene wasn't sure how she made sense of any of it.\n\n\"Sergeant Hollins, front and center.\" Smithbond barked.\n\nOne of the four men with whom she'd been crossbow training marched up to Smithbnond. He was dressed in loose garb that resembled something you might see on a poor-ish person in a movie set in medieval times.\n\nAt least it was better than what she was wearing.\n\nUnder great protest, she'd been pressured into wearing a simple dress with a leather belt around the waist and a leather pouch attached to it. She had no problem with simple, but they had a few 'requirements', like that she couldn't wear a bra. That was too 'Earthlike'. So instead she'd been given a long strip of cloth and a video on how to wind it around her breasts to give them some support.\n\nApparently underwear was also out because it was also too 'earthlike'. Unfortunately, they hadn't seen fit to provide her with a replacement. So right now -- for the first time on her life -- she was going commando in a dress. Luckily the dress came down to mid-calf and wasn't particularly flowy, so it wasn't likely that she would be exposed. It made her uncomfortable anyway.",
        "\"Yes sir.\" Sergeant Hollins replied, snapping to attention when he arrived in front of Smithbond.\n\n\"Your record speaks for itself, but this is your first mission with my agency so let me remind you that we run a tight ship.\"\n\n\"Yes sir.\" He nodded.\n\n\"You'll accomplish the objective and return at the designated portal open times. Don't hesitate to use Miss Dawson as a resource; she's sharper and more observant than she looks.\"\n\nSelene resisted the urge to roll her eyes. One of the downsides to being 'drop dead gorgeous' as several of her girlfriends had called her was that people tended to think that she got to where she was using her looks and body instead of brains and hard work.\n\nShe also couldn't help but notice that this would be Sergeant Hollins' first mission with them too. She had been right; Smithbond was just looking for competent 'cannon fodder' in case they couldn't make it back. She supposed it made a certain kind of twisted sense, but it was utterly amoral. She expected nothing less from him.\n\n\"Good luck sergeant.\" Smithbond said.\n\n\"Thank you sir.\" Sergeant Hollins replied, then barked to his men. \"Fall in!\"\n\nSelene grudgingly took her assigned position in the five-man squad. Somehow, she'd drawn the short straw and was on point. She was probably the least valuable using Smithbond's logic though, so she wasn't surprised.\n\nThe men were all armed with one-handed swords and had a crossbow slung onto their backs. She had also been given a crossbow, but only a small short sword about two feet long. They said it was because she had no training, but she wasn't convinced. She was extremely competent in Eskrima sticks, which were nearly as long as the men's swords.\n\n\"Time to work.\" Smithbond said to Gonorran, who had moved to the control podium while watching everything with a wicked smirk.\n\n\"Kill a few goats and I will.\" He replied coolly.\n\nSmithbond nodded to a soldier near the goat pens, who pulled out a pistol with a suppressor fitted, aim it at a goat's head, and fired. The goat dropped like a ton of bricks as the sound of the gunshot rang out. She'd recently learned the suppressors didn't actually make gun silent, just reduced the noise to hearing-safe levels.\n\nGonorran reached a hand towards the goat and Selene saw something that looked like heatwaves flowing from the goat towards the necromancer. He put his other hand on the control podium and got a look of concentration on his face. Moments later, one of the gemstones around the portal's exterior began to grow brighter. It got quite bright eventually, then flashed and the next one in the sequence began to light up. It reminded her of that old TV show, Stargate SG-1.\n\n\"I'll need two more goats.\" Gonnorran said.\n\nTwo shots rang out.\n\nSelene looked away and tried to focus on the portal. She was about to travel further from Earth than almost any other human and she wasn't sure she'd ever be able to come home again. It wasn't until that moment that she realized she might not come back. She might never see her family or friends again.\n\n\"Holy shit.\" Someone breathed.\n\nSomething that looked like opaque water started flowing from the inside of the portal's ring toward the open center. It moved like honey or cold maple syrup; slowly and like it was very thick. In seconds it had met in the center, forming a membrane and then began to relax and undulate like water in the wind. The membrane was like the surface of water as it reflected the sun. Or perhaps like oil left out on a flat surface. It undulated and moved liked water in a slight breeze, reflecting the colors of the rainbow like soap bubbles. At the same time though, it was a subtle thing; easy to miss with just a glance; again like the rainbow colors in a bubble.\n\n\"Move out!\" Smithbond ordered.\n\nWith Selene leading the way, all five of them walked up the ramp and through the portal to another world.\n\n* * *\n\nEthan couldn't help but smile as he watched his Fey bride. She was at the ship's wheel with Anthiel right next to her and a look of fierce concentration on her face. Below them was the sprawling... City? Village? City-village? He wasn't sure what to call it. Anyway, the wood elven capital of Nalatia was below them.\n\nIt was a strange place because it seemed like everything was made from either wood or trees whose growth had clearly been manipulated to create houses and building of various sizes. It was like looking at an entire city that was made up of extremely sophisticated and elegant treehouses. Some were many stories high and some were ground level, but they all were made from trees.\n\nMany of the buildings and shops were built on wooden platforms that had been constructed around the larger trees, and some of them were very large. He saw one tree which looked like it was fifty feet in diameter. On close inspection though, he realized it was a bunch of smaller trees which had purposely been planted next to each other and then they had grown together. Around practically every tree were several different wooden walkways of various widths which were built at various heights. Most stuck out at least several feet, but many were much larger. They encircled the trees, giving a place to stand and vendors to sell their wares.\n\nEvery tree trunk was straight as an arrow.\n\nA collection of wide wooden rope bridges seemed to form the most of the smaller 'streets' between trees, while larger roads were made from the branches of trees covered with wooden planks. The limbs had clearly been guided into growing into place for that purpose. The largest thoroughfares were supported by tree limbs, but had broad wooden decking on them so they were easy to traverse. Incredibly, despite the multitude of branches needed to support these highways and various levels, they were all as level as a calm lake, and the entire place seemed almost that serene too.\n\nIt almost seemed like a cozy town, but with the activity of a larger city. It was hard to tell how large it was too because the trees did still have a canopy. While they could see what was below them and maybe a hundred yards in all directions, they couldn't see how far the city extended because of the tree canopy.\n\n\"Wow.\" He whistled. \"Suddenly the name 'wood elf' makes a lot more sense.\"\n\nHe felt a flutter of emotion next to him, and turned to see Alana staring with wonder. She looked like she had just seem the most beautiful sight in the whole world. Her eyes were watery as she stared, marveling at the sight.\n\n\"It's...\" She seemed to be struggling for words.\n\n\"Beautiful.\" He suggested.\n\n\"That's not nearly strong enough.\" She shook her head. \"Gorgeous? Sublime? Magnificent? Resplendent?\" She look at him, seemly having a hard time tearing her eyes away from the spectacle. \"What's a word that means even more amazing?\"\n\nHe stared directly at her. \"I can think of one or two.\"\n\nShe blushed.\n\nHe put a hand on her stomach where their child was growing. \"I take it that's the kind of place you'd like to raise our baby.\"\n\nShe sighed and leaned into him. \"Um, it's a bit crowded for my taste. However, could we have a home like this? I mean, grown from trees like these are and my old home was? I'd really love it.\"\n\n\"I don't mind if the other don't.\" He replied.\n\n\"I don't.\" Beth said as she walked up. \"And I'm pretty sure Taloni won't either.\" Beth glanced at their resident redheaded mage, who was had a contented smile as she also observed the sight below them. \"Looks like Rachel won't mind either, so I think it's unanimous.\"\n\nAlana sighed. \"Yeah...\"\n\nSuddenly, Ethan wasn't sure what the beautiful wood elf was smiling at; the city below them or Rachel being happy with the plans for their new home.\n\n\"Wait, did I just include Rachel?\" Beth looking confused, which made her look adorable.\n\n\"Yeah.\" He sighed. \"We all seem to do that; I'm not sure why.\"\n\nAlana got a sly grin on her face.\n\n\"What?\" He asked.\n\n\"Nothing.\" She said with a twinkle in her eyes, and she apparently couldn't keep the ear-to-ear grin off her face.\n\n\"Okay, keep your secrets.\" He chuckled.\n\nThe Argo sailed over the city, heading towards the docking area, of which Anthiel knew the location. As they got closer, he noticed large group of trees on their right that grew much higher than the surrounding area, and also was clearly inhabited. He guessed it was the palace.\n\nEventually, he saw the dock in the distance. The branches of several truly massive trees had been grown directly outwards and the smaller branches trimmed off for much of the branch's length. That length was covered in wooden decking, appropriately sized for airships of various sizes. Each docking birth had a flag next to it similar the one currently flying from the top of their own mast, but in different patterns. They spotted the one which matched theirs and the Fey teen guided the Argo into docking position.\n\nTaloni had a look of fierce concentration on her face as she followed Anthiel's instructions for how to dock the Argo, and she did follow them near perfectly. While the Argo's descent and docking didn't have the easy elegance that Anthiel's would have -- given the high elf's decades of experience flying airships -- it was very well done.\n\n\"Well done honey.\" Ethan said when Anthiel finally pronounced the docking finished while Serif and Raklan tied the ship to the dock's bollards.\n\n\"Thank you Master!\" She beamed and threw her arms around him. \"I'm so glad you made me try. It was hard, but awesome!\"\n\n\"She's getting very good.\" Anthiel replied. \"It won't be long before you won't even need me with all the practice she's been putting in.\"\n\n\"Don't say that.\" The Fey teen replied.\n\n\"My dear, the point of all teachers is to make themselves obsolete.\" Anthiel replied. \"Don't worry about me. I have a husband who'll eventually finish his deployment and then I'll be wanted elsewhere.\"\n\n\"Deployment?\" Ethan asked, realizing he actually knew very little of the high elf.\n\nShe nodded. \"He will rotate out of active duty into training before the year is out.\"\n\n\"You mean, you're leaving us?\" Taloni looked crestfallen.\n\n\"Not for several months dear.\"\n\n\"We have company.\" Rachel called.\n\nHe glanced over to see what looked like an official greeting committee comprised of diplomats waiting near the gangplank, which Serif and Raklan had just deployed.\n\nHe took a deep breath and glanced at his wives clustered around him. \"Well ladies, I guess it's time to see what the wood elf king wants.\"\n\n* * *\n\nPassing through the portal was one of the strangest experiences of Selene's life. It felt like getting a bone deep chill which then completely disappeared, only to be replaced by a slight warming sensation and simultaneously no small amount of chills. She shuddered slightly as she finished passing through, took another few steps forward to make room of the men following her, and then looked around.\n\nShe was inside what looked like the remains of a ruined temple.\n\nThere were stone sculptures all around them that were covered in vines and the floor was covered in moss and animal droppings. The ceiling was vaulted and about twenty feet high and several stalactites had formed up there. It looked like there had been several stained glass windows at one time, but they were all partially or entirely broken.\n\nBehind her, the portal ring looked like it had been abandoned for centuries. Oddly, no vines or moss had grown on it. It had the faded look of aged wood, yet that appearance seemed to only be superficial, as there were none of the signs of splitting or dryness you'd usually see. There was a place for the gemstones like on the portal back on earth, but they were missing. From the looks of the place, they'd probably been looted long ago.\n\n\"Area clear.\" Sergeant Hollins said. \"Let's get moving. Miss Dawson, you have point.\"\n\nSelene sighed. \"I guess chivalry is dead.\"\n\n\"Those are my orders ma'am.\" Hollins replied almost apologetically. \"You can take them up with the agent in charge when you we get back.\"\n\n\"Twelve hours until they reopen the portal, right?\" Selene confirmed.\n\nHe nodded. \"Let's move.\"\n\nThe former FBI agent started carefully picking her way through the moss and animal droppings toward what looked like the exit. Once through the stone doorway, she could see the open sky above. It was a beautiful day, if a bit overcast. The birds were singing, the sun shining through patches in the clouds, and she could hear a strange array of insects making various noises.\n\nThey were in the middle of a forest, surrounded by trees. It looked like the area around the ruined temple had once been carefully kept, but now the wilderness was overrunning it. The trees made it impossible to see the terrain outside of the clearing around the temple, which also meant no one would see in. There didn't appear to be a path leading into the forest though; it had probably been overgrown long ago. The temple itself had been built on a small hill and there were some stone steps leading down, which she took.\n\n\"Excellent.\" Sergeant Hollins said as he surveyed the surrounding area. \"This could make an excellent base of operations.\"\n\n\"If the forest is clear.\" Selene countered. Despite the pleasant day, her current predicament was souring her mood.\n\n\"Smith, Decker.\" Sergeant Hollins said. \"Clear the area immediately around the temple and look for any surprises. Dawson, Eames, and I will go into the forest and see if there's anyone else about.\"\n\nTwo of the men peeled off and started checking the base of the ruined temple, while Hollins nudged Selene forward. Not long afterward, they were carefully picking their way through the forest. It seemed like most any forest that Selene had ever seen. She didn't recognize all the trees, but certainly recognized a few varieties, like pine trees, and most others looked familiar. She couldn't decide if that was strange or not that plants from Earth were also on this world.\n\nAfter about a hundred yards, they come across a small road running through the woods. It appeared to be running straight in one direction, but curved not far down in the other. There were tracks in the road too, and several layers of them from men, horses, and wagons. It appeared that the dirt road wasn't exactly a thoroughfare, but did receive regular traffic.\n\nHollins bent down and frowned. \"We need to trace this road and see if it gets any closer to the temple. We'll follow it for a few hundred yards in either direction.\"\n\nHe drew a short line in the dirt with the side of his boot to mark their entry point form the forest. It was subtle enough that most people wouldn't notice unless they were looking for it. It was a good idea, as the temple was completely hidden from view when you stood on the road, even if you were looking for it. Given the pine trees, she doubted the ruined temple would be visible even in winter.\n\nHe nodded to the east. \"Move out.\"\n\nSelene nodded, glad he wasn't splitting the three-man team up. They were already down two men and she wasn't particularly happy about that, especially being on an unknown world. From what Hailey said, highway robbers weren't uncommon in certain parts of this world.\n\n* * *\n\nEthan stepped down the stairs from the quarterdeck and over to the gangplank where a welcoming committee was assembled. They were all dressed in what looked to be exceedingly fine clothes and adorned with expensive-looking jewelry. They all had slightly haughty looks on their faces, except the lead fellow who looked more curious than arrogant.\n\nHis wives followed him down the stairs, all looking nervous except for Rachel. The redhead had assumed a calm demeanor that possessed a slight note of arrogance; something he assumed she'd learned from being in her father's court.\n\n\"Greetings, honored dragon.\" The lead member of the welcome committee said with a deep bow when Ethan had stepped onto the gangplank. \"My king is most honored to receive you.\"\n\n\"Uh, I'm honored to be received.\" He replied, feeling more than a little foolish at his phrasing. It felt weird to talk that way, and he certainly wasn't used to being addressed that way.\n\n\"No, the honor is ours, to meet a prophet of Illuminar -- blessed be He -- is a great honor.\" The man said.\n\n\"I'm not a prophet of Illuminar.\" Ethan replied with a slight sigh.\n\n*Blessed be He.* Alana, Beth, and Taloni prompted telepathically all at once, while Rachel gave him a gentle nudge.\n\n\"Blessed be He.\" He added.\n\n\"Blessed be He.\" The entire welcoming committee chorused as one.\n\n\"Forgive me for making such a mistake, and I most humbly beg your forgiveness.\" The lead man bowed again.\n\n\"Don't worry about it.\" Ethan shrugged.\n\n\"I am Delabor Elortruen, called king's-herald.\" The lead man said proudly with a formal bow. \"I am the personal herald of the king himself.\"\n\n\"Nice to meet you Delabor, my name is Ethan.\"\n\n\"Yes, word of your fame has spread throughout the land, O' might warrior and wielder of lightning.\"\n\n*Ethan lightning-wielder.* Alana thought to him. *As an elven name, it has a nice ring to it.*\n\n\"And who are your companions?\" Delabor asked.\n\n\"These are my wives.\" He replied.\n\nAt the word 'wives', it seemed like the mood of the greeting committee changed slightly. He got a sense of... not quite suspicion, not quite disgust, but something skin to both of those. It was disdain perhaps, or maybe some aloofness at the idea he had more than one wife.\n\n\"I am Alana Ejder, called dragon-bride.\" She said giving a formal curtsey\n\n\"Elizabeth Ejder, wife of Ethan Ejder and daughter of Lord Borden.\" She said as she also gave a formal curtsey.\n\n\"Taloni Ejder, wife of Ethan Ejder.\" Taloni copied Beth and also curtsied, but inexpertly.\n\nAt this pronouncement, there was an audible gasp from a few of the elves that had assembled to meet them. Several of them looked at each other with shocked looks on their faces. One or two looked incensed, and one even looked disgusted.\n\nEthan could feel Taloni's emotions through their bond, the committee's reaction was making her deflate like a balloon. He took a single step forward, letting his dragon side show a bit as his body language changed to become much more threatening; almost menacing.\n\n\"Taloni is my wife.\" He growled at them. \"If anyone has a problem with that, speak now or forever hold your peace.\"\n\nNo one spoke.\n\n\"Then you'll mind your manners when speaking to her, and treat her as you'd treat me. Is that clear?\" He finished with a low, menacing growl.\n\nThey all nodded.\n\nHe took a step back and reigned in his dragon instincts, taking a deep breath and purposefully relaxing both himself and his body language. He then nodded at Rachel, who stepped forward.\n\n\"I travel with them, but I am not wed to him.\" She curtsied, her red dress looking absolutely spectacular. \"I am Rachel Delmar, daughter of Lord Delmar.\"\n\nAs one, the entire committee except Delabor took a small, almost subconscious step backwards.\n\n\"Oh, what now?\" Ethan asked, not feeling as protective of Rachel as he had of Taloni. Rachel seemed much more capable of handling herself and much less affected by the opinions of others.\n\n\"Please forgive my compatriots, honored dragon.\" Delabor said. \"But the woman who just introduced herself has been disinherited by her father for bringing dishonor to her family. It would not be proper for any in the king's employ to speak to her, nor to mention her name.\"\n\nEthan blinked. \"Come again?\"\n\n\"What do you mean?\" Delabor looked confused. \"Do you wish us to leave so we may return?\"\n\nEthan forced himself to not growl at the man. \"No, I meant what the hell? You can't talk to Rachel or speak her name because her father is a dick?\"\n\nDelabor looked even more confused now.\n\nIt took a moment for Ethan to realize that 'dick' might not mean the same thing here that it did on earth. That was annoying. Then he also remembered that nobody here seemed to have ever heard of hell before either.",
        "Rachel herself rescued him. \"Pardon me honored Herald, but you say you may not speak my name nor address me, simply because my father disowned me?\"\n\nNot a single member of the committee even looked at her while she spoke.\n\n\"Honored dragon, the woman who just spoke is correct.\" The herald replied while looking at him and almost pointedly not at the redhead.\n\n\"Why the fuck would you let that stop you from speaking to her?\" Ethan growled.\n\n\"Tradition.\" Delabor replied, but he seemed slightly scared to speak.\n\nHe gave the man a thousand yard stare while thinking to his wives. *I have half a mind to pull anchor right now.*\n\n*I wouldn't.* Alana replied. *I know there're being awful but, we really could use an ally against Lord Delmar. Perhaps the wood elves could be one?\"\n\n*This honor system is so distasteful.* Beth added. *But Alana is right.*\n\n*I'm not sure what you should do, but thank you for standing up for me master.* Taloni said, sending warm feeling of affection to him. He couldn't stay upset very long with that happening.\n\n\"Delabor, why did the king wish to see me?\"\n\n\"Because word of your fame has spread honored dragon. The king thus wishes to meet you, a revered prophet of Illuminar -- blessed be He.\"\n\n\"I'm not a prophet.\" Ethan replied again, trying not to be too visibly angry about their treatment of his wives.\n\n\"Again, my apologies for the mistake.\" The herald bowed deeply.\n\nThen an awkward silence settled.\n\nVery awkward.\n\n\"So, now what?\" Ethan finally asked.\n\n\"Please, accompany us to your temporary lodgings near the palace.\" Delabor finally said.\n\n\"Come on ladies.\" He said to his wives and Rachel, glaring at the welcoming committee as if daring them to object.\n\nNone did.\n\nHe then nudged Rachel to follow him as crossed the gangplank onto the dock to follow the welcoming committee towards the palace.\n\n* * *\n\n\"Is that horses?\" Selene asked, pausing to listen.\n\n\"Sounds like it.\" Sergeant Hollins replied.\n\nThey had been walking for only a couple minutes. Hollins was planning on only going a bit further before reversing directions to check and make sure the road was clear in the opposite direction. Apparently, they wanted to make sure that any traffic on this road wouldn't be likely to see or hear anything going on the ruined temple.\n\n\"Remember men, we're simple travelers.\" Hollins said. \"Don't engage the locals unless it's necessary.\"\n\n\"With conversation, or crossbow bolts?\" Selene said wryly.\n\n\"Both.\" The Sergeant replied, and she swore she saw the corner of his mouth flit upwards slightly.\n\nSeveral seconds later, four men rounded a corner about a hundred yards away traveling at a brisk trot. They looked to be rough fellows, and their horses were large; draft horses at least. Upon seeing Selene's group, they slowed to a walk and clustered together.\n\n\"I don't like the looks of this.\" Selene whispered.\n\n\"Agreed.\" Sergeant Hollins replied. \"Look lively.\"\n\nAfter about ten seconds, the men spread out as they were before, approaching at a brisk walk on their horses. Selene really didn't like the looks of this. Something about the men just seemed... off. She couldn't put her finger on it, but something about them really bothered her.\n\nWhen they were about twenty yards away, she noticed the men undressing her with their eyes, even though she'd taken some pains to ensure she did nothing to make her look attractive. She wore no makeup, hadn't done her hair other than brushing it, and the dress she was wearing certainly wasn't the most flattering she'd ever see. Sadly, she was getting noticed anyway.\n\nShe'd never figured out how to avoid that.\n\nOne of the men leaned in to the leader to whisper something, after which the leader nodded. They both looked at her wickedly. Suddenly, she was glad she was armed and that her father had spent all those years teaching her how to fight. The men guided their horses so they formed a line across the road, blocking it for Selene's group.\n\n\"Can we help you?\" Sergeant Hollins asked.\n\n\"How much for the girl?\" The leader asked.\n\n\"I'm not for sale.\" Selene replied.\n\n\"How much?\" The man said to Hollins, ignoring her.\n\n\"She's not for sale.\"\n\n\"Suit yourself.\" The man replied.\n\nThere was a tense few seconds, then the men unblocked the road and made to pass by them single file. Hollins and the other soldier subtly stepped between Selene and the men, which she found almost endearing. Selene's party watched warily as the riders slowly made their way to the other side of the road...\n\nThen they attacked.\n\nOne of them pulled a bow out and strung an arrow faster than Selene would've thought possible. Selene's party reacted, pulling their already drawn crossbows up to return fire. Hollins had barely pulled his crossbow up when the other man's arrow hit him in the chest. He staggered back, but didn't seem very injured and the arrow didn't penetrate his shirt.\n\nHe loosed his crossbow bolt at the man, striking him in the chest.\n\nTwo of his compatriots charged them down with their horses. Selene managed to throw herself out of the way, but Hollins and the other soldier weren't as lucky as they were closer and didn't have as much time to react. They were knocked to the ground for barely a moment before their attackers leapt of their horses, drawing their swords.\n\nShe pulled up her crossbow to shoot one of them, but the leader charged at her. She was forced to throw herself out of the way again to dodge his horse. She rolled through the fall, intending to come up and shoot the bastard, but he was nearly as nimble on his horse. The horse's hindquarters smacked into her, knocking her to the ground.\n\nOut of the corner of her eye, she saw the other two attackers turn towards her with their sword blades covered in red. Hollins and the other soldier were lying unmoving on the ground. She turned her eyes back to her attacker, only to feel a rope encircle her waist.\n\nShe'd been lassoed.\n\nMoments later, he jerked the rope, pulling Selene off her balance. She toppled over and saw a large rock rush up to towards her, but couldn't dodge it because of the lasso around her torso and arms, and the man still pulling her. There was a sharp pain in her head, then blackness.\n\n* * *\n\nEthan wasn't used to everyone staring at him. He had used his disguise gem to make himself look like a man everywhere he'd ever gone before, and thus no one gave him a second glance. However, it was off now and almost everyone stopped what they were doing to watch him pass.\n\n*This feels weird.* Taloni thought. *Are they staring at me too?*\n\n*I think they are.* Alana replied. *I guess they don't see a Fey in the company of a dragon much.*\n\n*I doubt they see a dragon walking around very much.* Beth added.\n\n*Fair point.* Ethan nodded.\n\nHis dragon ears could hear various whispers, but he didn't understand them. They were speaking in a flowing, melodious language that was beautiful to listen to, even if he didn't understand the words.\n\n*Is that the elven language.* He asked.\n\n*It is.* Alana replied. *They're mostly confused and wondering what a dragon is doing here and...* She glanced at Taloni. *Sorry, but they don't understand why the courtiers are in the company of a Fey, because they don't think you're a servant.*\n\nEthan growled slightly, low in his throat.\n\nThe courtiers around him seemed to jump slightly.\n\nDelabor stopped and turned with a flourish, bowing low before addressing him. \"Honored dragon, may I ask what doesn't please you?\"\n\nHe glanced around. \"What do your people have against Fey?\"\n\n\"If it might please you revered dragon, could I explain later?\"\n\nHe frowned, but nodded. \"I suppose so.\"\n\nThey continued and he couldn't help but noticed just how beautiful the city really was. It looked like every aspect of it had been designed to not only be functional, but elegant as well. They walked through the city for at least half hour, and every inch of it was as beautiful as the last. In fact, the deeper into the city they went, the more beautiful everything became.\n\nAs they neared an enormous set of wooden steps that lead up to what was obviously the palace, Delabor turned and led them towards a massive tree-trunk. It wasn't until they got closer that he realized that -- like many other large 'buildings' -- it was actually many smaller trees that had been grown in a circle and they'd fused together.\n\n\"Wow.\" Beth said as she stared at the building all around her. \"I've heard stories but never... Hmm. I wonder how they get them to grow like that.\n\n\"No idea.\" He replied, smiling at the boundless curiosity of his youngest wife.\n\nIf he thought the outside was incredible, it was nothing compared to the inside. It looked like every inch of the interior 'walls' had been covered in wood carvings. Literally the entire entry room -- which was larger than his first apartment -- was covered in intricate, detailed, and ornate carvings on the inside surface of the trees which made up the interior wall.\n\nIt looked like the intricate history of some great was covered in the carving. It wasn't long before he noticed that a dragon played a prominent, even leading, role in the narrative.\n\n\"Wow.\" Alana said as awe came from her like tidal waves over their bond. She was staring mouth agape, much as she had when seeing the city from above. The title of 'wood elves' was making more sense the longer he stayed in the city. It seemed everything that they did revolved around wood somehow.\n\n\"That's just...\" Beth breathed.\n\n\"Gorgeous.\" Taloni almost whispered in reverence.\n\n\"It's sublime.\" Rachel was clearly impressed, and she didn't impress easily.\n\n\"Honored Dragon.\" Delabor said with a bow as he entered behind them. \"If you will give me leave, I shall see the king and schedule you for the next available audience.\"\n\n\"Uh, sure.\" He nodded.\n\n*I'm honored.* Beth suggested as his first wife continued to stare in wonder, oblivious to almost everything else around her.\n\n\"I'm honored to be given an audience so quickly.\" Ethan added, feeling a little silly at the 'honor language' they used here.\n\n\"The stewards will see that you get comfortable.\" Delabor said before bowing out of the room, never turning his back.\n\nHis Fey bride's wings suddenly fluttered before turning into a blur as she flew up to look at part of the carving that was nearer to the ceiling. \"I think this is the story of Ithlan.\"\n\n\"Oh, and look at this; I think this is Mount Ianis.\" Beth said as she bent down to look at the carvings closer to the ground.\n\nThe Fey floated down and looked at them with the blonde. Ethan couldn't help but smile. His two youngest wives were becoming fast friends, being near in age and both very curious. It was really good to see them getting along so well. As his mother would say, 'it made his heart happy'.\n\nHe sighed contentedly.\n\n\"Mount Ianis is on here?\" Alana said, finally coming out of her reverie to join the others.\n\n\"Yeah, here's the first wood elven king talking to Illuminar.\" Beth pointed to a scene where an elf was talking with a glowing figure on a mountaintop.\n\n\"And here's the promise.\" Taloni pointed to another scene next to it, this one of the same king bowing and thanking the glowing figure.\n\n\"The promise?\" He asked.\n\nTaloni nodded. \"Illuminar promised that if the king was ever in dire need of counsel, he could send someone to Mount Ianis. If the motive was true, Illuminar Himself would speak to that person.\"\n\n\"Cool.\" Ethan shrugged and then looked at the carvings higher up. \"Is that a dragon with a bunch of women around him?\"\n\nBeth nodded. \"Ithlan. He gathered an incredible number of women to him. Most agree it was dozens, some say a hundred or more.\"\n\n\"Wow. And I thought three was a lot.\" Ethan whistled. He looked further on to see the rest of the story. \"It seems like he went a bit... nuts at the end there.\" He said noting that vast number of women and more than a few children.\n\nAlana nodded. \"Sometimes people claim to be descended from him to boost their reputation, but there's no way to know so of course they are just laughed off.\"\n\n\"Oh, and here's a different kind of nuts.\" He said, noticing that Ithlan seemed to have gone a bit crazy at the end. The carvings made it looked like he was both self-destructive and capricious, destroying things randomly and even breathing fire on his own cities.\n\n\"Yeah, there's all sorts of theories as to what made him so powerful and why he went mad.\" Beth said. \"There are entire volumes written on the topic, mostly going back and forth between the various arguments.\"\n\nHe looked at the blonde. \"I take it you've read them.\"\n\n\"Not all of them.\" She said sheepishly.\n\n\"One theory says that having too many wives drove him mad.\" Rachel offered.\n\n\"Yeah, that's a popular one.\" Alana nodded, still preoccupied with the story of Mount Ianis near the bottom. Then the wood elf glanced at Rachel and then Ethan. \"I'm okay with more wives, but please don't marry too many more.\"\n\n\"Wait, 'too many more'? How many more do you think I'm going to have?\"\n\n\"At least one.\" The wood elf said with a sly smile. \"I'm just saying: please don't go overboard.\"\n\nEveryone looked at her.\n\n\"I won't.\" He finally replied, not sure what she was getting at. With the possible exception of Rachel -- who'd made it clear that she wasn't interested -- he had no intention of taking any more wives. Three was overly generous and four seemed beyond the scope of his luck. More than that just seemed like being greedy.\n\nHe sat down, admiring the carvings and awaiting his audience with the king.\n\n* * *\n\nSelene jerked awake as she was unceremoniously dropped to the ground. Her eyes flew open, the late afternoon light launching an all-out assault on them.\n\n\"Shit.\" She hissed and she clamped them shut again.\n\n\"Huh, bitch has a mouth on her.\" One of the men said approvingly. \"I can't wait to feel what it can do.\"\n\nSelene forced her eyes open, suddenly realizing the danger she was in. She was lying in a small clearing on a hill, and it looked like the road she'd been traveling on was just a few yards away through the trees. The three men had all loosely hooked their horses' reins on a nearby branch and the horses were grazing.\n\nThe men were all clustered around her, looking down at her hungrily. Her initial impression had been right; they were rough fellows. None looked like he had bathed in the last month, if not longer. They were grizzled and weather-beaten but clearly not stupid.\n\nShe herself seemed like she was okay.\n\nHer stomach hurt a bit like she'd been lying on it for a while, and she guessed she'd been throw over one of the horses while unconscious. Her dress looked intact and she didn't feel like they'd violated her while she was unconscious. Not that she'd know what it felt like since she'd never known a man she respected enough to spread her legs, but she was sure it would feel different. However, her hands were tied in front of her at the wrists and her feet were tied with a short length of rope so she could walk, but not run.\n\nThe leader, who had a full, black beard, leaned in with lust in his eyes. \"Now, we can do this the easy way, or the hard way. What's it going to be?\"\n\nSelene hesitated a few moments before deciding that trying to buy time would be easiest. She groaned slightly and touched her head where it had been hit. \"If you give me a couple minutes, it'll...\" She paused for effect and then took a deep breath as if gathering her courage. \"...it'll be the easy way.\"\n\nThe leader smiled wickedly. \"You have two.\"\n\nSelene struggled to her knees, making sure to give the impression that her head still hurt. It still did a bit so that wasn't hard.\n\nThe other two men were pulling a burlap sack off of one of the horses nearby. They unceremoniously dumped it on the ground and Selene grimaced. It was all the gear that Hollins and the other soldier had with them, plus her own. She guessed they had stripped her compatriots' bodies and left as fast as possible, grabbing anything that look valuable.\n\nOne or two of the items had blood on them.\n\nSelene fought back panic as she realized that the two men who'd tried to defend her were indeed dead. She was all alone on an unfamiliar world. She didn't know where she was, or even how long she'd been unconscious. She looked up and could see the sun was definitely getting lower on the horizon, so it must've been several hours at least.\n\nHow far could they have taken her in several hours?\n\nIn what direction had they taken her?\n\nAs she tried to get her bearings, she noticed two of the men leaning down holding something small and black from the sack that they'd dumped out. It took her a moment to realize what it was, and she had to resist grinning what she did.\n\nIt was a Glock 26.\n\nThe baby Glock was small enough to conceal and packed at least 10 rounds, maybe 12 with an extended baseplate. Smithbond had strictly forbidden modern weapons, but it looked like someone had ignored him on that.\n\nThank God.\n\nOne of the men was obviously trying to figure out what it was. He turned it several times in his hand until he found the correct grip.\n\n\"What is Saidow's lair is this?\" He frowned, then looked at Selene.\n\nShe shrugged, then decided to lean into the obviously male-dominated culture. \"I don't know, he wouldn't tell me.\"\n\nThe man nodded like that was obvious. \"What's this do?\" He asked, as he realized his finger fell naturally onto the trigger. He wiggled it a bit, testing the movement. Then, with the muzzle fortunately pointing at his friend, pulled it all the way back.\n\nBANG!\n\nSeveral things happened all at once.\n\nThe horses reared up and jerked their heads, instantly breaking the thin branch that they had been loosely tied to. They took off running like a bat out of hell. The man who'd fired the gun dropped it like it was red hot as his friend clutched his stomach area. The leader jumped and whirled around, leaving Selene unobserved. She dove forward, pushing off with both legs as hard as she could.\n\nShe felt a thrill of triumph as her right hand closed around the pistol's grip, just as she felt something grab the rope around her ankles. The leader had dived after her to grab the rope around her feet. She whirled, taking just a moment to line up the sights on the leader's forehead before squeezing a single round off.\n\nBANG!\n\nHe dropped like a ton of bricks as Selene rolled to put some distance between herself and the other two men. The man who'd initially fired the gun dived at her, but missed.\n\nBANG! BANG!\n\nSelene double-tapped him in the chest. He looked wide-eyed for a moment, then fell unmoving to the ground.\n\nShe lined the pistol up on the last man, but needn't have bothered. He was clutching his side where she could see dark, almost black blood pouring out. He looked at her and raised one of his hands, the other was still clutching his side. He wobbled on his feet, staggered, and then hit the ground.\n\nSelene tried to take a deep breath, but her body wasn't cooperating very well. Her hands started to shake badly, almost violently as she tried to steady them. Her core started to feel incredibly warm even as her limbs started to feel slightly cold.\n\nAdrenaline.\n\nShe took her finger off the trigger, lest she accidentally squeeze off another precious round.\n\nShe felt sick to her stomach.\n\nTwice she nearly hurled.\n\nHer breaths came is short, ragged gasps. She'd never been in a fight for her life before. Ever. All the training she'd received had kicked in and saved her life, but she wasn't prepared for the aftershocks; the raw adrenaline coursing through her. She tried to take deep, calming breaths.\n\nSeveral minutes later, she had finally stopped shaking as her body had calmed down a bit.\n\nShe wasn't sure she had.\n\nIt took a few more minutes before she trusted herself to come up with a plan. First, she needed to untie herself. She found a dagger and cut her ropes, then turned her mind to supplies. She rummaged through the discarded items from the burlap sack and didn't find anything else useful.",
        "Then steeling herself and trying not to think about it too much, she checked the three dead men for anything useful. The leader had a small leather bag of silver and copper coins, which she took. She had a leather pouch around her waist, into which she put both the Glock and the coin pouch.\n\nShe considered taking a crossbow, but didn't think it would be nearly as useful as the Glock, even though she only had a half dozen rounds left. As she'd discovered in the ambush, the crossbow was too heavy, cumbersome, and slow. She also pulled the leader's sword belt off and attached it to her waist. His sword was clearly designed for one-handed use and was only a bit longer than the Eskrima sticks she'd trained on. She thought the techniques would transfer pretty well.\n\nAt least, she hoped they would.\n\nRegardless, it would be a hell of a lot better than nothing if -- or rather 'when' -- the Glock ran out.\n\nUnfortunately, there didn't seem to be any food nearby. She assumed it had been in the horses saddlebags when they'd been spooked by the gunshot. Her stomach growled; she hadn't eaten since breakfast and it seemed like it was after four O' clock.\n\nShe glanced up at the sky.\n\nIt was late afternoon on a strange world. She had literally no clue where she was. She didn't know how far the portal might be, and had no idea if she actually wanted to return if she could. She wanted to get back to Earth of course, but would prefer not to land right back in Smithbond's clutches. Her mind drifted back to the only other person on this world that she knew could open a portal.\n\nEthan.\n\nShe frowned. The odds of her being able to find him were virtually non-existent with the technology on this world. With no internet and no phones, she could probably spend years trying to track him down. She gave up on that as a pipe dream.\n\nShe was lost and completely alone on an alien world, and only had a gun with six bullets, a sword, and her wits to keep her alive. She took a few deep, calming breaths, then started off towards the nearby road.\n\n* * *\n\nCHAPTER 25 EPILOGUE\n\n\"Get it back! Just scry the fucking bird again so you can see what's going on.\"\n\n\"I can't! That that little black thing created such a loud noise that it spooked the bird and I lost my connection. Let's just hope she hasn't gone too far before I can find another one.\"\n\n\"Shit, we had one fucking job; watch that old portal and track them if someone ever came through.\"\n\n\"I'll compose a letter to let him know, but he won't be happy if we can't find her again.\"\n\nTO BE CONTINUED...\n\n***With Selene's arrival in the Ten Kingdoms and the Argo's at Nalatia, we've entered act 3 (of 5). I was hoping to get another full editing pass but simply ran out of time. (This last month has been crazy.) I hope I didn't miss too many typos, and I apologize if I did. As an apology -- and because I think you'll like it -- I'll suggest one of the best stories here on Lit: \"The Marriage\" by the user \"DreamCloud\". Seriously, it's awesome. I highly recommend checking it out.***\n\nSTORY TAGS: dragon, magic, medieval, elf, teen, romance, virgin, harem, cuckquean"
    ],
    "authorname": "Antiproton",
    "tags": [
        "dragon",
        "magic",
        "medieval",
        "elf",
        "teen",
        "romance",
        "virgin",
        "harem",
        "cuckquean"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/a-dragons-tale-ch-25"
}