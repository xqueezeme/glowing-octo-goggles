{
    "title": "My Little Ventrue Pt. 07 Ch. 12",
    "pages": [
        "~~Natasha~~\n\nShe was going on an adventure!\n\nThere was a time, not too long ago, where such a thought would have been absurd. Adventure was not smart. Adventure was how you met an early second death. Survivor bias was a killer, and she would not let the whims of baseless positive thinking get her killed. She made only smart decisions, ones that earned her plenty of money, and status in the Invictus.\n\nAnd then everything turned upside down. She met a cute boy named Damien, shot him in the head, and got involved in so many things. As a dragon, she'd gained a lot of responsibilities, many that pushed her to step outside her comfort zone. And then she had an orgy while her best friend watched. She met a couple of cute werewolves that she now had sex with regularly, at the same time. She'd seen spirits and ghostly after images, living nightmares, and spoken with what might as well have been some ancient god of death. At this point, she was starting to feel comfortable with being uncomfortable. Mostly. Somewhat. A bit.\n\nStill, as she walked through the Gauntlet behind Matthew and in front of Arturo, she reminded herself that this was dangerous. Adventures like this were how people got killed. So, despite the fact she was going on an adventure with her boyfriends, her best friend, and her best friend's boyfriend, she refused to let her excitement get the best of her. Fear was a better emotion, far more useful, and good at keeping her alive.\n\nShe wiped the smile off her face, and tried her best to adopt a frown instead. But after her last trip into the Shadow realm, she didn't feel so scared anymore. Spirits were scary, sure, but not so scary they paralyzed her. They seemed alien, in a real alien way, like from another galaxy sort of way. Their mannerisms weren't human. It was obvious at a glance that spirits did not think like humans or paranormals, and according to the Uratha, they didn't really think at all. They were manifestations of aspects of the physical realm, and everything they did was a reaction to their environment and situations, even if it was an intelligent reaction that considered the past or future.\n\nWhich, she supposed, was an argument someone could make about sentient beings. Deterministic universe, no free will, everything is just a chain of causality and chemical reactions and neural pathways, etc. It was a train of thought she didn't waste energy on anymore.\n\nAs they stepped out of the Gauntlet, she almost squeaked. Right, right, they were high up, and walking on support beams. Except, that's not what they looked like in the Hisil. Here, she was walking on smoothed metal that glowed, metal that curved under her feet, and metal that felt warm through her shoes. She reached down and touched the flat, filled surface, to make sure it wasn't hot enough to melt her feet.\n\nIt was the same building, except no longer were there any hanging lights; the glowing metal served that purpose. As far as she could tell, there weren't any speakers, either. But there was music. It thrummed, fast and frantic, like the heartbeat of a kine on PCP. It almost sounded like drums, but the bass was so thick, she felt it in her skull.\n\nThe walls were different, too, with lots of curves that made her want to touch them, and slide along them. Beneath her, she could see spirits floating around, pink and blue with vague human shapes, rubbing along each other and the walls. She didn't need the boys to explain to her what they were, these spirits were aspects of pleasure, sexuality, and joy. The human-shaped ones were obviously created by the humans who came to the club and had sex without end, but there were other spirits down there, too. Some of the creatures that hovered around looked like giant bees, and she had no idea what those were. Others were more obvious, like some sort of giant dragonfly-looking creature, purple, that buzzed around from table to table, leaving behind a white powder from its wings that disappeared after a few seconds. Drugs? Certainly not the pleasure of drugs, but perhaps, the distribution of it. But that made no sense. The spirits wouldn't care about the white powder, and as she watched them from above, she was correct. They didn't care. So why was it doing what it did?\n\nIt was a complex ecosystem, where spirits did things. She had no chance of understanding its finer points without intense study, study she was eager to pursue. And that thought made her smile. She had a boss that appreciated such dedication to examination. If Tash wanted, she could get completely lost in studying the spirits, putting together what essentially amounted to a dissertation on them, and Antoinette would both appreciate it, but also read it.\n\nMaybe, just maybe, if she could convince her boyfriends to have a chat with her about the ecosystem of spirits, specifically those in Dolareido, it'd make Antoinette happy? It'd also piss off Avery, though. Making Antoinette happy was one of her primary goals, but she didn't want to make the lives of her boyfriends any harder than she had to.\n\n\"They know we're here,\" Art said, \"no need to hide. Just, obey the rules of the city, and Black Blood's dominion over it will keep the spirits from getting in our way.\"\n\n\"W-What are those rules?\" Tash said.\n\nMatthew shrugged, and started back along the catwalk the way they came. Much easier, now that the catwalk didn't have holes to fall through. \"Hard to say, really. Seems to be a strange balance of the official human law, and the laws the Prince has set up.\" He started climbing down the support beam, and Tash sucked in a breath. The support structure didn't have the individual rungs anymore, as if such a detail was meaningless in the spirit world; they kind of were, really. The metal was warped and bendy, and it glowed a strange rainbow of colors all the way down to the base. The group slid down them without issue, though she could see Eric struggled with the height, and how with the new support beams, they literally had to slide down them, gripping their sides as tight as they could.\n\nClimbing back up was going to be a pain, but perhaps the Uratha had a different locus for getting back to the physical world.\n\nOn the dance floor, things were as chaotic and overflowing with life as they were back in normal Dolareido. The spirits swirled around each other, though it was plain to see some were utterly gigantic compared to others. One spirit in particular, another pink creature with decidedly feminine curves, was slithering around the dance floor, while other spirits came up to rub against her\u2014it. Other strange creatures kept out of the way, some more dragonfly-looking things, and a few more of the odd, large bees, that looked too cartoony and simple to be actual bees. And now that she was underneath the pillars, she could see there was something actually flying around underneath the catwalk, a butterfly creature with a long, snake body, and many pairs of wings. It was glowing different colors, each pulsing with the weird, heartbeat music that wasn't music.\n\nThe spirits didn't seem to really care about Natasha or Jessy. Sure, they stopped and looked at them, if 'look' was the right word, considering many of them didn't have eyes, or had many that looked in many directions at once. Maybe they cared a little, but it wasn't enough to stop them from doing whatever it was they were doing.\n\nThe Uratha, on the other hand, were enough to force every nearby spirit to take notice. The strange creatures moved aside, some going so far as to flatten their serpent bodies to the curved walls to stay out of the way. She didn't understand how a spirit of pleasure, or joy, or drugs, or pretty lights, or all the various possibilities Dolareido had to offer, could express fear, but it seemed like they were. Fear and discontent. They didn't enjoy the presence of the Uratha.\n\n\"They really don't like you,\" Jessy said, eyes wide as she looked around. Right, this was her first step into the Hisil, and she looked at each spirit like a child's first visit to a zoo. It made Tash giggle, seeing her badass, sporty friend regress to a young girl.\n\nJessy had owned a cat, before she was turned. It was easy to forget sometimes, that Jessy had a soft side.\n\nArt shrugged, with the exact same mannerism as Matthew. Two peas in a pod, those two. \"We're the police. Yeah, they don't like us.\"\n\n\"Self-appointed police at that,\" Matthew said. \"If we let them do whatever they wanted, it'd lead to some ridiculous chaos.\"\n\n\"But not in Dolareido,\" Eric said.\n\nArt nodded, though Tash could see the hesitance on his face. \"But... not here, no. At least, whatever strange balance Black Blood maintains here, it's lasted. So it doesn't want us here, naturally. But Dolareido has reached a critical mass of essence and spirits, David says. Shit's going to pop if we don't help.\"\n\nThey stepped out of the club, and into the streets of Dolareido, in the center of South Side's entertainment district. Jessy gasped as she looked at the buildings and their lights, how they curved in strange ways, and glowed in places where there weren't actually any lights to glow. In the Hisil, half the buildings in South Side were glowing in strange places. Spirits flowed along, some driving along on their weird tire-asphalt hybrid bodies, others flying along on crow wings. The only ones that looked human were the obvious sex spirits, and even then, they didn't look very human. No legs, with bodies like Casper the friendly ghost, except far too friendly, and their faces lacked much in the way of facial features. While the blue ones had broader shoulders, and the pink ones had hips and breasts, it wasn't static. Some of them changed color, or changed shape, or both, as they came and went from the various glowing, twisted buildings. They were manifestations of sexual pleasure, after all, not of people themselves.\n\nBut there were direct manifestations of animals, she noticed. On the buildings she could see crows, though they were exaggerated in strange ways; particularly, their eyes had a habit of glowing in the dark, mostly white, but sometimes she could see a crow with red eyes peering down at her from the edges of rooftops. And the rats were practically amorphous blobs, moving along the base edge of buildings, and disappearing into the million holes Dolareido had to offer. Some were larger, had more definition, and pushed the other rats around.\n\n\"Holy shit,\" Jessy said. \"It's a whole god damn new dimension.\"\n\n\"You've been in a nightmare dimension before,\" Eric said.\n\n\"Yeah but, this is, like... there's an entire city here! That gargoyle dude's nightmare chamber was just a big, empty castle. I mean, my god!\" She pointed up at the night sky, and the chaos of colors it held.\n\nNatasha nodded. \"True. Here it's... s-so alive. There's a lot g-going on.\"\n\nArt started walking first, in the direction of Devil's Corner, and the rest followed. \"That's just here. In most places in the city, it can be pretty sparse, and that's true of most cities in the world. Humans and paranormals don't have a direct reflection in the spirit world, you've probably noticed by now, so all the spirits are reflections of other things. It can mean some cities look sparse. Dolareido is... not so much, not here in South Side. It's pretty empty elsewhere though, especially North Side.\"\n\n\"Why don't they have reflections?\" Eric and Jessy said in tandem.\n\n\"Hard to say. Something to do with a soul, I suppose.\"\n\nThat alone was a question worth a million questions. What was special about humans and paranormals, that set them apart from other animals? A scientist would say nothing, but she was looking at evidence that suggested otherwise.\n\n\"S-Speaking of,\" Tash said, \"did you hear about Jack's sister?\" Everyone present nodded. \"Horrible, so horrib-ble. Jack and Samantha think it's the real her, and n-n-not a... left b-behind image. So, her... soul...\"\n\nEveryone shivered as they walked down the sidewalk. Talk of souls was always going to be heavy talk, especially with all the rumors of resurrection lately. With Julias dead, Tash could only imagine the sorts of things Triss was up to, especially with an ancient witch as her boss.\n\n\"Spirits don't leave behind ghosts,\" Matthew said, \"ever. They can be killed, and they dissipate, become essence, merge into the environment of the Hisil, but nothing like a ghost is left behind.\"\n\nJessy raised a hand. \"How many spirits have you killed?\"\n\nArt winced and looked around. Spirits were listening, giving them space, but still listening. They didn't like the Uratha being in their city, and admitting to killing them was probably not a good idea. \"Not sure. Dozens?\" he whispered. \"A lot more if you include the hunts for food.\"\n\n\"Food?\" Tash looked around at the spirits. Some of them were talking with each other in a language she didn't know, and she cringed at the thought of her boyfriends eating something like Safe. \"H-How does that work?\"\n\nThe boys looked about, motioned people in, and everyone got in close. They were still walking, but huddled up, shoulder to shoulder and with Matthew and Arturo directly behind them so they could whisper, and people could listen.\n\n\"Uratha are half spirit,\" Matthew said. \"We can eat spirits the same way a predator spirit can eat spirits of prey. Eric here could come hunting with us, bring down a beast of the tunnels, or maybe one of the larger rat spirits, and feast.\"\n\nJessy raised her hand again. \"Eat spirits?\"\n\nMatthew nodded. \"Yeah, just like a steak.\" When Tash, Jessy, and Eric all looked over their shoulders to raise brows at him, the jolly giant laughed. \"You'd have to be Uratha to understand. And Eric might just not realize it, until he's tasted it. But, maybe this hunt will awaken it in him.\"\n\n\"I doubt I'll be eating that drug spirit I saw,\" he said over his shoulder.\n\n\"Maybe,\" Art said. \"Spirits do it to each other all the time, devour or absorb each other. A predator spirit may devour a prey spirit, with teeth and claw. Or, a predator spirit might absorb another, contesting territory or fighting for dominance over each other. Either way, you get a stronger, usually larger spirit. They get smarter, more self aware, and more capable of pursuing whatever it is they are. So, don't feel guilty about eating them, Eric. It's part of the ecosystem.\"\n\nPredators absorbing predators. A wolf with hawk wings? A giant scorpion in a desert, with a dozen tails? The possibilities were endless!\n\nTash absorbed every bit of information she could, and did her best to hide how interesting the conversation was. With Matthew and Arturo behind her, she feigned keeping her eyes on the sidewalk ahead of her, and looking around at the crazy environment of the spirit half of Dolareido, but she really wasn't. Every detail her boyfriends dropped, she wrote down in her mind. Her boys knew by now that anything they said, she was eventually going to tell Antoinette. If they were willing to talk about it, they were willing to have Antoinette hear about it. Hopefully.\n\n\"But,\" Matthew said, \"most of us don't, or don't often. Carter does, Avery, and so does David. Some of us are closer to our spirit side than others, and some aren't so much. I like meat, personally.\"\n\n\"How do you like it cooked,\" Eric said.\n\n\"Either raw or blue seared. The closer you are to your spirit side, the harder you're going to find it to eat normal human food; most Uratha can't touch shit like chips or french fries without getting major digestion issues.\"\n\nNatasha and Jessy laughed, and the boys blinked at them several times, before they chuckled as well. Yeah, vampires couldn't eat anything but blood; Tash had long forgotten what a burger tasted like. For the boys to lose their ability to eat fast food, or rather, not be able to digest it easily, was cute by comparison.\n\n\"In some cities,\" Jessy said, \"vampires have parties where they will use the Blush of Life, and indulge in human food. They puke it up later, but I do admit, sometimes I wonder if it'd be worth it, to taste pizza again.\"\n\nAh, yes, pizza, the ultimate food. Probably half the kine Tash had drank from her in second life had eaten pizza within at least a couple days. She couldn't taste that of course, but statistically speaking, it was likely.\n\nPizza sent her down memory lane, and she smiled to herself as she thought about home. Not her current home, the apartment or the Elysium tower. She thought about her home before she died and became a vampire, before her second life began. She thought about the necklace.\n\n\"Hey... c-can we take a d-d-detour?\"\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSince they didn't have to hide their presence from watching eyes, they got to traverse Dolareido the fun way.\n\nMatthew, Arturo, and Eric all transformed into their wolf forms. Not their regular wolf forms, but the giant wolves, bigger than lions and much thicker. This immediately earned some awwws and ooohs from her, and she hugged Matthew and Arturo as tightly as she could around their giant manes. Terrifying as they would have looked if they were snarling or growling, they were instead sitting like well-trained house dogs, and that was absolutely adorable. She squeezed on them nice and tight, buried her face deep in the fur of their necks, and giggled.\n\n\"Kat is going to wonder what the fuck is that smell,\" Jessy said, but she copied Tash, and gave Eric a giant hug. Eric wasn't sitting though. Maybe he felt self conscious about acting like a dog? It didn't bother Jessy, but Tash couldn't help but turn into a silly, stupid child when her boys were transformed.\n\nShe climbed onto Matthew's back as the wolf beast stood up, and she beamed at her fellow vampire. Jessy looked at her, froze, and practically exploded.\n\n\"Oh my fucking god, that is so cute!\" Jessy made a very un-Jessy squeal, and started digging into her pockets. \"I need a picture! I need a... a... It won't work if I take a picture, will it?\"\n\nTash shook her head. \"P-Probably not. Uratha have that lunacy thing. It w-w-won't let cameras work right, when they're d-doing werewolfy stuff.\" She gestured down to the enormous, fluffy creature underneath her. \"N-No one would confuse this for a regular wolf.\"\n\n\"God fucking damn it. You're so tiny, and he's so big, it's like... arg, fuck it.\" Without ceremony, she hopped onto Eric's back. Mistake. Eric wavered for a moment as someone over twice Natasha's weight was suddenly jumping on him, and he let out a small, deep woof noise. Frowning like a child throwing a tantrum, Jessy slid off and stomped her feet a couple times. \"No fair.\"\n\n\"You could transform t-too, you know.\"\n\n\"I don't have something like this,\" Jessy said. Tash had seen her use various Gangrel forms that warped and twisted her human body, but actual animal transformation was something different.\n\n\"B-But you can transform into a normal wolf.\"\n\n\"True.\" With smile returning, Jessy began to transform into the wolf Tash had seen her use before. A normal wolf, not one of the giant beasts the boys had become.\n\nEric, without any indication that he was going to, transformed as well. He shrank, mass disappearing into himself, and fur thinning. A wolf was still an enormous creature, but paled in comparison to the giant mass of their bigger, Urshul form. Now, he was basically the same size as the Jessy-wolf beside him, maybe just a little bigger.\n\nIt was Natasha's turn to make a squeal, and she struggled to keep the noise from erupting too loudly. It was so romantic, how Eric changed to match her, and now they were two beautiful wolves beside each other. Naturally, Jessy-wolf nudged into Eric-wolf, and started playing, pressing her snout into his neck, and hitting her shoulder against him. And Tash could see Eric wanted to do the same, play, wrestle, but after a couple seconds, he started walking forward.\n\n\"Yes, focus! Let's f-focus on... this little detour.\"",
        "Off they went, to visit the suburbs. It was a couple miles away, and if they had to walk, it would have taken a while. It didn't seem like there were any cars to drive, though she did see several spirits that could only have been car spirits driving by; no passengers, though. Getting to the suburbs as running wolves, on the other hand, was pretty fast. Natasha was Mekhet, and could utilize Celerity to a great degree with ease, but it wasn't really meant for running miles. The run of a wolf, on the other hand, made covering miles take only minutes.\n\nThe suburbs of Dolareido were divided into several sections that ran in an arch across where it met North Side. There was Rich Side, where Viktor and... Julias, used to live. Then there was the normal suburbs, with one half sporting nice houses, and the other sporting still-nice-but-not-ridiculously-overpriced houses. Natasha's mom and dad used to live in the latter, like Jack's mom did. Maybe she'd run into Samantha and Jack's old home while they were out looking for what she hoped to discover.\n\nShe wasn't sure what she expected to find, but as her wolf mount slowed down and started to stroll through the streets of Dolareido's suburbs, she knew she'd find it eventually. Unlike the city center of Dolareido's spirit half, the suburbs were calm and quiet. Few spirits roamed the large streets, and the ones that did didn't carry half the imposing nature of the others. The hills of grass and the small sidewalks along the front yards of houses, the small park with a swing set and sandbox, the few trees, the complete lack of convenience stores and neon signs, it was all definitely a very not-Dolareido place.\n\nBut that wasn't fair. Dolareido had another side to it, a quiet side, a side where she'd grown up when she was human. It wasn't a vampire friendly part of the city, from the lack of population density or gathering hubs, so vampires rarely came to the suburbs. But as she looked around at the buildings, she smiled as the memories surfaced, of growing up in the quiet world of a home instead of an apartment.\n\nThe area reflected that, she could see. Instead of bright, glowing signs that were twisted and pulsing with the Hisil's oddness, the houses in the suburbs were visually dull. In fact, they looked too dull. The houses were there, but they lacked the features she expected to see on a house. The roofs didn't have shingles, but were a solid black surface instead, void of texture. No siding, just a flat surface of color. The lawns were solid flat green surfaces, grass comically simple, and the sidewalks lacked the grooves she expected. So, maybe the Hisil was reflecting how dull the suburbs were? But there was more to it than that. There was an honesty to the display, of the homes showing what they were in such simple terms.\n\nThe park near her old home, on the other hand, was far more vibrant. It was night in Shadow Dolareido, but the park had a glow to it that defied her eyes. There was one electric light in the old park in the physical version, a lamp post in the center, and in the Shadow version of the park, it glowed a gentle yellow, but in a much larger area. Soothing, and warm. The swings, slide, monkey bars, sand box, they all had exaggerated features, with simple but bright colors that the single lamppost illuminated to the point they themselves glowed with its light. The grass and dirt were almost invisible, while the playground equipment drew the eye and invited interest, as if asking her to come play.\n\nWithin the park, small lights drifted around, and the three werewolves and two vampires paused to stare.\n\n\"Oh my g-god,\" she said. \"That's beautiful.\"\n\nFireflies. They couldn't have been actual fireflies, being that they were in the Shadow Realm; maybe they were spirit manifestations of fireflies? But they were huge, and didn't have a body. They moved around slowly through the park, and Natasha could hear what sounded like giggling, high pitched and joyful. The spirits of children? No, there were no spirits that were reflections of humans themselves, in the Hisil, but that didn't change that the glowing orbs moved around the park, giggling like children would. They hovered about a foot above the ground, each a foot in width of pure, glowing yellow light, and while they didn't use the swing set, or sit in the sandbox, or go down the slide, they moved around the objects that children doubtlessly used every day, to have fun.\n\nSpirits of fun, then? Or joy? Or juvenile purity? She didn't know, and the werewolves couldn't talk with dog mouths to tell her. Maybe she could ask them later, but then, there was some magic to the mystery. Whatever these spirits were, they were beautiful, like fairies \u2014 the good kind \u2014 mingling among children and the joy they exuded. The sight of them dug up memories she'd thought she'd lost, memories of her as a small girl, playing with other children. Nothing in the world held the same sense of wonder or amazement, as the memories she had from when she was just a child, learning to ride the swings or go down a slide for the first time.\n\nBut, what would happen if the spirits here grew out of control? There were stories in many cultures, about mythical entities that wanted humans to come play with them for all eternity, fairies and such. The stories were not happy ones. It wouldn't surprise her if those stories had been inspired by real spirits, who grew too large and powerful, invaded the physical world, and started to spread their influence. All of a sudden, the old fairy tales she knew about, the ones with strange and obtuse creatures, seemed like very real possibilities.\n\nShe and the wolves moved on. She guided them along the streets, and she kept her eyes along the houses they moved past. Surely one of the houses had to have it. Maybe\u2014\n\n\"Oh, there! There!\" She pointed to a nearby house, and the bedroom window that overlooked the street. The houses in this area were a bit small, and crammed together, with little in the way of lawns. This district belonged to the Carthians, more or less, as it was right next to the urban areas with the apartments and convenience stores. On a normal shopping day, people in this neighborhood would drive out to the urban area if they wanted clothes, or technology. But the neighborhood was still far away enough that it was quiet, and the only noise she could remember through the day had been from kids playing outside, or a school bus driving by.\n\nThe wolves trotted up the driveway of the house. In the Hisil, the driveway had no cracks or dents, but was a smooth black color and shape, as if it was made of plastic. No car in the driveway; none of the driveways had cars, now that she thought about it. A lack of cars was a consistent thing in Shadow Dolareido, though the occasional wheel thing drove by, a concoction of asphalt and tires, with eyes that looked like headlights. She saw many of those in the center of South Side, but out in the suburbs, they were rare.\n\n\"Hello!\" she called to the window.\n\nThe glowing orb hovered over to the window, and flapped one of its angel wings at her. It opened the window with what Tash guessed were tiny arms hidden in the glow of its spherical body, and it flew down to her.\n\n\"Hello!\" it said, in a high pitched voice. \"Uratha? And Kindred. Are... are you here for me?\"\n\n\"N-No! No. Um, not really. I uh... I'm s-sorry, I... uh... did we meet? M-My boss, she... she summoned a spirit like you before, and\u2014\"\n\n\"Oh! Oh oh. I know you. Friend spoke of you, spoke of visit to Gurihal. Do you want to speak to Safe of Grey Street?\"\n\n\"Grey Street?\" She clapped a couple times, before she forced down her rising giggles. \"That's where my home is.\"\n\n\"Safe of Grey Street has spoken of their visit. And they spoke of you. They've visited you before, hiding in Twilight while you were young. I will take you to them.\"\n\nSafe had visited her before? Spirits could sneak into the physical world, she knew that, and hide in Twilight; Twilight was what she and the Prince spent a lot of time investigating. And if it was her necklace that summoned Safe to the Prince's tower, it didn't surprise her that Safe must have visited her when she was human, her, and other kids who felt safe in their homes.\n\nWithout questioning it, the Uratha and Kindred began to follow the hovering, spherical angel creature. Natasha was still on Matthew's back, so she got to spend her time looking around and taking in as many details as she could. It was true the city looked empty at first glance, as the suburbs usually did at night, but the more she kept her eyes open, the more she spotted movement. A slithering serpent creature went into a drain along the street curb. Several crows flew by, each of varying sizes that were comically different; one might as well have been the size of an albatross. There was a raccoon, but as usual with the animal spirits, it had didn't look quite like a normal raccoon. Its tail was bigger, fluffier, its body leaner and more sly, and unless her eyes were deceiving her, its hands looked more like human hands wearing black gloves than a raccoon's hands.\n\nThere were other things too. Dolareido's Hisil sky was a bizarre display of colors, especially in the center of South Side, but out here it looked a bit less crazy, a bit more natural. But there was no denying that one could tell the direction to the entertainment district of South Side by looking at the sky, and seeing where the warped lighting patterns were bleeding into the clouds. \n\nThere were other firefly-like creatures, glowing tiny orbs, and they drifted around streetlamps, or moved along windowsills of nearby houses. They had different colors, too, especially compared to the darker or stranger colors of center South Side: slime green or pulsing neon. Out here, they were soft blues and gentle greens, warm amber, and inviting yellows. \n\nSoon they were on Grey Street, and she smiled at how the Hisil reflected its existence. Yeah, not much happened on Grey Street, and the Hisil agreed. It was quiet, and it was empty. But there was movement in some of the windows of the oddly smooth, simplified houses. Other spirits, maybe like the one in front of her, who looked very similar to the Safe Natasha met. Were they the same spirit, a spirit of safety, or the feeling of safety children felt in their homes?\n\nA large set of angel wings appeared between two homes, hovering forward toward the street. The other spirit, the one with Natasha was maybe a foot wide, with a six-foot wing span. She thought it had arms, but it was hard to see in the glow of its body. On the other hand, the larger creature that hovered out from between two homes had double the wingspan, and while it still had a spherical body, like a glowing glass ball, Natasha was sure she could see some features, like arms or legs within the sphere. It looked almost angelic, in a way, or like a fairy that was evolving inside a safe container.\n\n\"Hello!\" the larger Safe spirit said. \"I remember you, from the Gurihal!\"\n\n\"Safe!\" Natasha hopped off Matthew's back, and ran over to the large angel creature. And, as if she'd opened the front door to her home after a long day at school, she opened her arms to hug the creature, and felt the weight on her shoulders vanish. She didn't know why, didn't really understand how, but her body just moved on its own, and wanted to hug this old, beautiful feeling.\n\nThe spirit hugged her back, angel wings circling her. \"Hello!\"\n\n\"I... I never told you my name, did I? I'm Natasha.\"\n\n\"Hello Natasha! I'm glad you're ok. You've been safe?\"\n\n\"I have, I have!\" Giggling like she was a child, she stepped back a little as the huge angel wings spread for her. Yes, she could see through the glass body of Safe now, and see that there was indeed a tiny person inside the sphere, without features, and glowing so bright it filled the orb with pure light. \"You've grown.\"\n\n\"I have, I have! I am Safe of Grey Street. The choir has spoken.\"\n\nChoir? She was tempted to ask, but no, not the time.\n\n\"Um, they\"\u2014Natasha gestured toward the other Safe spirit\u2014\"said you'd visited me before, when I was human? M-Must have been a long time ago.\"\n\n\"It was!\" Despite that she was bigger than the other spirit, Safe's voice had the same, high-pitched, joyful squeal. It was contagious, loving, warm, and Natasha couldn't stop smiling at the sound of it. \"I was small then, very small, with no name. Now I am Safe of Grey Street. Are you safe, Natasha?\"\n\n\"I'm, uh, v-very safe. These two Uratha are my protectors. The Kindred is my friend, and the Uratha with her is t-t-too.\" Friend by proxy. Maybe she should have asked Eric if he felt that way before saying it, but he seemed like the sort of guy to be shy about that sort of stuff, and maybe squirm before reluctantly agreeing. So, it'd probably be best to spare him the pain of that conversation, and just tell him he was a friend.\n\n\"Protectors!\" Safe spread its wings and offered a bow; a strange look, considering it was just a floating, glowing glass sphere with huge wings. \"It's good that you are safe.\" And, as if satisfied that they were indeed safe, the smaller spirit flew away.\n\nQueue for everyone to start transforming. It looked strange to her, the sight of them transforming, but the spirits didn't seem to care that four wolves, two of which were monstrously massive and scary, transformed into humans; or humanoids, rather. Uratha and Kindred weren't human, even when in human form.\n\n\"And,\" Art said, mouth emerging as his enormous snout vanished into a human face, \"you've been keeping a balance, right, Safe of Grey Street?\"\n\n\"I have! We have.\" The angel creature motioned to her departing, smaller kin with a wing. \"Though, our choir is small, as Avery knows.\"\n\n\"Small?\" Natasha said. \"D-Do people not feel... safe, in Dolareido?\"\n\nWith a warm smile, without a hint of the condescending smirk she'd expect from any lecturing Kindred, Matt gestured to the buildings. \"Just because a choir is small, doesn't mean they don't have a large effect, or that Dolareido doesn't have a large reservoir for them to feed on. But some spirits have an easier time growing than others, and some spirits have an easier time gorging on essence compared to others. It all depends on the environment, and how thick the Gauntlet is. The thicker the Gauntlet, the less spirits have to eat, and the less they hang around.\"\n\nComplexity on top of complexity. It was a big puzzle, one she was delighted to try and solve; as long as Avery didn't kill her for it. She didn't want to be another Minerva.\n\n\"Safey,\" she said, \"w-we came to the Hisil, because Eric wants to... to...\"\n\n\"If I'm going to be stuck doing this werewolf gig,\" the man said, \"I figure I should give it a shot, doing things in a way I can get behind. So, point me in a direction toward something that deserves killing.\"\n\n\"Deserves?\" Safety said.\n\n\"Yeah, something that's causing a lot of harm to Dolareido's citizens, in Gurihal. I already had a target, but if Tash thinks you know better, then hit me.\"\n\n\"Oh. You mean, ones that damage their safety?\" The safety spirit brought its wings on itself, and pondered. Or at least, it certainly looked like it was pondering.\n\n\"Ones that damage safety,\" Eric said, \"or otherwise inflict harm. Anything that leads to pain, and\u2014\"\n\n\"Ooh, pain. Yes, pain.\" One of its wings unfolded, and pointed back toward the city. \"An agony spirit has been growing underneath what you humans call Devil's Corner. They nest under some place called Mike's Ring.\"\n\n\"An... agony spirit?\" Eric said, scratching the back of his neck. \"I thought maybe there'd be something more specific, like, a spirit of... theft, or drug abuse, or murder, or...\"\n\n\"Oh! One of the named! Those are dangerous, Uratha Eric! Very dangerous. But... but, if you want to harm those, one spirit called Needle Swords has been growing quite menacing. It drifts near the Blood Tower, and hides under the Turning Lights.\"\n\nNeedle Swords. That was probably the spirit Tash had seen last time, the ugly, nasty thing with needles for fingers.\n\n\"Turning Lights?\" Eric said.\n\n\"It means,\" Matthew said, \"Doc Omala's. Needle Swords is definitely a part of the reason Dolareido's drug problem exists, and some other nasty shit that happens in the shadows of the city. But we haven't touched it because\u2014\"\n\nArt threw up his hands. \"Because Avery says don't. Black Blood doesn't want us messing with the balance of its city, especially in the center of South Side, and your Prince doesn't want us to either. We're trying to figure out the mystery with this Azlu, and until we do, we're walking around on eggshells. If we kill Needle Swords, people are going to find out.\"\n\n\"I couldn't give two shits,\" Eric said, \"about Black Blood or Avery or the Prince. Dolareido's my city. Born here, raised here. If I'm gonna do this Uratha thing, well, fuck Avery, I'm doing it my way.\" And with that, the man transformed back into a wolf, and started back toward the city.\n\nNatasha blinked after him, before looking to Jessy. Wow. Tash recognized that look. It was the sort of look a young girl might have, if they saw their favorite musician or actor in person. Awe, or infatuation, or something in between. Whatever it was, seeing Eric turn into a vigilante was doing it for Jessy in a way Tash had never seen.\n\nPoor guy was probably going to be fucked senseless, once they got back.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nWhat fun, what fun! Pushing through a wall of alien flesh, and following in the wake of a berserking werewolf, into a nightmare realm. What Susanna would have given to be a part of something like this, of the chaos and madness, buried in magic and blood that had to have come from the depths of Hell itself. Glorious.\n\nHe stepped out of the flesh and into a massive room, dark and delightfully imposing. Stone walls and stone floors, wooden ceilings, with spiky braziers on the walls holding fire. Right, they'd been here before, S\u00e1ndor's castle nightmare. Begotten had lairs, and their lairs had multiple chambers, but this seemed to be the one Jeremiah and his crew defaulted to. Maybe they couldn't access the other chambers, or maybe they didn't serve as defensible positions. Well, the stone walls wouldn't protect Jeremiah or Angela. He'd tear them down with his bare hands if he had to.\n\nIn front of him, it was pandemonium. The hunters were trying to set up some sort of defensive position, and it was obvious it was a plan they'd practiced in the past. The hallway had wooden doors along its sides, and a large door at the end, like the one the hunters had blown up when Jack had first arrived. Oh wow, he was going to get to do this again! It was going to go better this time.\n\nThe hunters fell back, but always with two stopping and turning around to fire behind them. He'd seen this tactic before, where modern soldiers would retreat back as a chain, with the person closest to the enemy pulling back while the others took up positions and unleashed defensive fire. And then once that person was clear, they'd take up a position, start firing, and the new person closest to the enemy would retreat under the protection of their comrades' covering fire. The hunters were trying to do that, but it wasn't working out too well for them. It was just a big, long hallway, and they were doing their best to get to the big, wooden door. The retreating tactic didn't help much. Screams of panic abound as their bullets tore into the tide of rats, but did little to stop the army of rodents. Music for the soul.\n\nBut the hunters did have a head start, since it took Clara a bit to get the second portal open wide enough for Jack and his army. Soon, most of the kine had gotten past the two enormous doors, and were pushing them closed as a couple hunters poured bullets into the oncoming werewolf.",
        "\"Come on Denver! Get in here! Get\u2014\"\n\nToo late. One final hunter tried to slip past the closing doors, but Clara, snarling and roaring as she charged forward, slammed into her. Her massive weight crashed into the hunter's body hard enough, Jack could hear bones snap as her head hit the wood. But she didn't die; that came after, as Clara sank her claws into the hunter's chest, and ripped her in half, literally. Body parts went flying, blood followed, and Jack laughed as the two parts of the woman's torso splattered against the stone walls.\n\nClara had been shot, but she shrugged it off. Ah yes, the amazing regenerative abilities of the Uratha. Maybe there was value in the Uratha after all? He considered it, and balanced the pros and cons of Dominating one, and turning them into a thrall. Maybe Clara? An intriguing thought, but he set it aside for later.\n\nThe enormous doors closed with a thud, which was soon followed by more thuds, hammering sounds, and hollers muted by the wood. The humans were creating a barrier, probably throwing nearby things against the door to try and block it off. Cute.\n\nJack took a second to look behind him, and at the swarming army of rats and crows. Damien and Othello followed, and soon, so did Beatrice and Athalia. Of course, once Athalia made her appearance, it wasn't the tall, beautiful, angry black woman he'd come to know and love, it was a strange, enormous skeleton creature with no pelvis or legs, that walked around on its hands, and had bone wings. Seeing that push through the fleshy mess on the back end of the hallway, slipping out from what was otherwise a wall of stone, was wicked awesome.\n\n\"I will get Fiona,\" the skeleton creature said, raspy, loud voice cutting scratches on the walls. \"Jack, do not\u2014\"\n\n\"Yeah yeah. Shut up and do your job.\" Fuck, what an annoying woman. Head buried so deep up her ass, she was still convinced she could have it both ways, with the whole being a monster and having a hunter for a daughter thing. Dumbass.\n\nAthalia snorted, opened one of the side doors, and disappeared into the darkness.\n\n\"Jack,\" Damien said, blood dripping down his trench coat. \"I told Aaron to stay behind and try and keep this portal open, so you can... you know.\"\n\n\"Yes, good call.\" It was true that Jack's connection to Dolareido was growing thin, so deep in this realm. The vitae he'd spilled to summon his army was a beacon to him, and to the portal where the blood had fallen nearby, but the creatures had to come to him through two portals now, two magical portals at that. Reinforcements were going to come slower, and at a rate that couldn't be matched by the amount he lost to bullets and fire.\n\nHe didn't need his army to unleash Armageddon on these fools, but it was good to let people think he did.\n\nHe walked up to the giant door, frowned, and looked down at the blood splatter the two halves of the hunter's corpse left behind. The problem with having strength and a small body, was physics. He could tear this door down, but he was too small to get leverage with weight and friction. The stone floor was smooth, too smooth for him to line up a good punch. And he couldn't fit his fingers between the two doors, either. Unless he managed to get his hands around something, he was just too light to punch it without sending himself flying backward, instead of damaging something as heavy and solid as a giant wooden door at least a foot thick.\n\n\"Harcourt,\" Jack said.\n\n\"Y-Yeah?\" The man was just coming through the flesh portal, groaning with every step. His eyes were down, and he was doing his best to keep from stepping on the blood-soaked rats that swarmed past him. Some crows were latched onto his shoulders as well, and took to the air once he was in the hallway.\n\n\"Plan Vandermont, what is it?\"\n\n\"Um, it's us taking up defensive positions in S\u00e1ndor's nightmare chambers. We got a lot of shit stored in there, shit we can use to defend in the off chance we needed to. But, I mean, I figured you'd have figured that.\"\n\n\"I did.\" After the last time the paranormals managed to break in and attack the hunters in the nightmare, it made sense they'd prepare for the potential it happened again. Since the Begotten weren't following in S\u00e1ndor's wake to pierce into his lair this time, the Begotten couldn't just walk into the monster's lair, either. \"Did you know they could break into the nightmare from Elen's flesh room?\"\n\n\"Uh, yeah. We do most of our business in the flesh room, though. I don't think Elen can go in and out of the nightmare easily\"\n\nJack slowly turned and glared at the man. He didn't like this. They were losing momentum, and there was nothing quite as annoying as losing momentum when on a blood high.\n\n\"Clara, tear it down.\"\n\nClara went to work. He may have been a hundred and thirty pounds soaking wet, but Clara had to easily break seven hundred pounds in her enormous werewolf form. She didn't have quite the burly mass of the male werewolves, but that didn't change that she was enormous, and an Uratha. She sank the claws of her feet into the stone, set the claws of her hands into the wood of the door, and began ripping it apart.\n\nGlorious. Absolutely, utterly glorious. He could almost see her muscles bulge underneath the fur of her body, and he groaned as her huge claws ripped through the wood like it was paper. \n\n\"God damn that's hot,\" he said.\n\nShe paused, looked at him with her wolf eyes, confused, before returning to her destruction.\n\nIt only took her twenty seconds. If the door had been made of metal, she'd still have probably been able to get through it. Werewolf claws were something special, something supernatural, and Jack almost moaned at the sight of her ripping through the wood and sending the splinters everywhere. They were bloodied with the crimson life of the dead hunter at their feet.\n\nOnce she had a hole big enough, about a food wide, he sent the swarm. They had to keep the blitzkrieg moving, keep pushing forward, keeping ripping into the hunters before they had time to recover and defend. Clara's short work of the door caught the hunters by surprise, and they took a second before they started unloading lead at the door. The lead was met with furry bodies, and immediately, Clara was splattered with the corpses of hundreds of rats; a living shield, summoned by Jack.\n\nShe kept tearing. If the hunters had explosives on the other side of the door they could use, they'd take longer than a few moments to set them up and use them, he hoped. It'd really suck to have Clara die; watching her go full feral freakout berserk rage, and tear open a goliath of a door in seconds, was really arousing for his undead bones. \n\n\"Um,\" Harcourt said, \"Jeremiah does have a habit of putting plans inside plans, and only sharing those details with a few people. So, I mean, Plant Vandermont was about defending S\u00e1ndor's nightmare chambers from invasion, but I wouldn't be surprised if it included other things.\"\n\n\"Then we'll deal with it when it comes up.\" Jack threw a final glance back at his crew. Othello and Damien were ready, with Beatrice staggering along behind them. Fucked up as she looked, her eyes were nothing but solid anger and determination, ready to walk through fire to make sure that bitch Angela died. Awesome. \"Get ready to rush in, Damien, Othello. I expect a lot of gunfire once Clara's opened the door up, and they still have one flamethrower. Find the fucker with fire, and take them out.\"\n\n\"Sure thing boss,\" Othello said.\n\n\"Alright,\" Damien added.\n\nAt last, with a mighty roar that shook the walls, Clara give a final outward tear of her hands, and ripped a giant chunk of the door open. Within sixty seconds of entering the hallway, Jack and his crew had rushed through it, killed a hunter, forced the hunters to flee into the main chamber beyond, and had already torn a path into the hunter's defenses. Yes, good, fast, brutal. Don't let the hunters breathe, don't let them get their bearings, just run them down like the worthless animals they were, and kill them. To the paranormals, sixty seconds was plenty of time to get things done. To the worthless blood bags, sixty seconds wasn't enough time to get anything done.\n\nAs Clara burst through the door and into the darkness beyond, Jack pointed his hands forward once again, and guided his army of sacrifices and servants. Scully and Mulder flew above, keeping tabs and offering caws of information to him. Yes, he could see what they saw, or at least have a vague idea. \n\nIn the room beyond, the hunters fled. There were a few heavy logs thrown haphazardly against the door, but nothing that could create a realistic barrier. And in the next room, Jack had expected to find the enormous columns from last time, each topped with a statue that mirrored the Horror of S\u00e1ndor. But there were no columns in the large room. Hell, there wasn't a roof. He looked up, and he could see sky, stars, clouds, the full moon, and he could feel a breeze on his face.\n\nIt was a village.\n\nMaybe village was the wrong word. It was definitely a group of houses one would expect to see in the medieval ages, but it was also a nightmare, and no fucking way would something like this function as a real village. First thing he noticed was how the castle, with a fresh hole torn through its front door, didn't have a courtyard. No, the door with the hole was connected to a road, and the road was a mile high in the fucking sky. The road, nothing but dirt and rock, was maybe twenty feet wide, and off either side was a giant fall that would kill anyone, paranormal or otherwise. Terminal velocity, even for someone as light and strong as him, would turn him into a splat on the ground if he landed on rock.\n\nThey were on a winding, thin road that was literally the top of a mountain, high enough it practically pierced the clouds.\n\nClara had stopped not far ahead, probably struck dumb by the sudden change in scenery, same as he was. \n\n\"Harcourt,\" Jack said, \"the fuck is this?\"\n\n\"Oh, right! Yeah that S\u00e1ndor dude has multiple nightmares, right? I thought we were in the castle, but this is a different nightmare.\"\n\n\"But the castle is behind us.\"\n\n\"Yeah, sorta. You can go into the castle from here, but it kinda warps you around. I'm pretty sure when you're inside, it doesn't really match up with that.\" He gestured back behind them, to the castle sitting on the cliff edge.\n\nHe was right. The castle looked more like a very large, Gothic mansion, which certainly fit the decor, especially considering it had a bunch of gargoyles on columns and stone walls. But the mansion, despite its grandeur, wasn't big enough to hold the colossal chamber Jack and the others had fought Angela, and Jeremiah in before. That would have taken a grand stadium to contain, something a fair bit bigger than the Dracula-esque castle he was looking at.\n\nBut the gargoyles upon its walls and stone outcroppings did indeed look like S\u00e1ndor, the giant gargoyle with four arms and four wings. Such a magnificent beast of power, the captured Begotten. Maybe Jack could turn him into a thrall, as well.\n\n\"Are any of the hunters in the nightmare?\" Jack said.\n\n\"Back in the castle? Probably no. The S\u00e1ndor's Horror is fucking stomping around in there. We stay away. There might be some of us out here though, and Elen's probably here. She hangs out here.\" The hunter gestured to the village at the end of the thin, winding road.\n\n\"His Horror is... stomping around?\" Damien said.\n\n\"Yeah. I guess wherever S\u00e1ndor's locked up, he can't get in touch with it. So it's just rampaging around like nightmare things do.\"\n\nSo a Horror and the Begotten connected to it weren't completely merged. A Begotten not in the nightmare was separated from its Horror. That made for some weird implications, and Jack didn't have time to sort them out now. He had some hunters to butcher.\n\nThey started down the winding path, going at a steady jog, while Clara burst forward with Uratha strength driving her to inhuman speed. Each step caused her claws to rip up the earth beneath her with far more brutishness than the stone castle provided, and Jack grinned at each running step she took. Fucking hot.\n\nBut the rest of them were going too slow. Lucky for them, Jack had been wrong about expecting the hunters to set up a defense outside the door. If they had, he would have lost more rats, and potentially some of his crew to the flames. He didn't mind walking over the ashes of his crew to reach his goal, but they were more valuable alive.\n\n\"Othello. Grab Harcourt, carry him.\"\n\n\"Roger that.\"\n\n\"W-Wait, I\u2014shit!\"\n\nOthello had no problems picking the guy up and slinging him onto his back. And then the group of them were free to move at a proper running pace, even Beatrice, who was grimacing with each step. She may not like who he'd become, but the witch had spirit, and he had to respect that. With her guts almost hanging out, she was willing to run after her vengeance, vengeance he was going to make sure happened.\n\nThe hunters had managed to get a little further away, both from the door having blocked Jack's path, but also because Jack and crew were a little shocked by the sight before them. Being this high up was absurd, far higher than any cliff could reasonably be and hold a village. But more than that, it was the geography, the shape of the cliff. At no point did it spread out into a flat land for the houses ahead of them to be placed. Instead, the houses were attached to the sides of the thin, winding cliff, attached by enormous tree roots and sitting upon jutting boulders and rock face edges.\n\nWithered trees sat between the houses, titanic and towering, dark and sharp with a myriad of leafless branches. As Jack ran down the road's length, jumping left and right as the strange road curved to ridiculous degrees, he scanned ahead for where the hunters were. The hunter group had managed to put maybe a thousand feet between them and the paranormals; fast mother fuckers.\n\nWhat was that quote, from Max Payne? 'I don't know about angels, but it's fear that gives men wings.' Too true. The hunters were terrified, completely surprised by Jack's full-frontal blitzkrieg, and they weren't prepared for it. Four of them were dead, two of them had dropped their weapons and surrendered, and one of them was a traitor. The rest were probably convinced they were all going to die, after seeing that. They were on the run, desperate, panicked, adrenaline pumping and fear coursing through their veins. Their world had fallen apart in a matter of minutes, and the only thing they could do was follow Jeremiah and Angela.\n\nThey'd only be able to flee from Jack so far. They were in the nightmare world, and as long as Jack stayed on their heels, they'd falter. If they had another way out of the nightmare, it'd take them time to use it. Athalia was convinced they probably didn't, but she didn't know Jeremiah like he did. She'd never stared the man in the eyes as he tortured her, like he had. The fucker was crafty, devoted, and doubtlessly had backup plans for when shit didn't go his way; that probably included the unlikelihood of Elen's flesh chamber being penetrated.\n\nPlus, as Jack looked out past the village, it became obvious that the strange nightmare town, with its dark windows and empty, winding street, had no exiting road. While the entire village existed on the single road, the road itself looked like it ended by colliding with a forest in the distance. In typical nightmare fantasy fashion, the forest was tall, dark, and obtrusively thick. No one was getting through that forest unless it was on foot, and even then, it'd take ten times as long go through it than open land. Anyone inside would be easy meals for paranormals, especially a werewolf.\n\nIf this was where they were going to make their last stand, it was suicide. The houses were made of wood, long slabs of timber, like shitty cheap cottages, and decrepit at that, judging by how horrible they looked; any paranormal could tear through them. With the dark clouds above, the night sky, the full moon, and the creepy wind drifting around the houses, rustling the dead trees and their branches, the village screamed haunted. Nightmare fuel. Well, it was a nightmare, a chamber created in the dream world by some event or entity, according to Fiona. Naturally it'd be fucking creepy. Naturally, he felt right at home.\n\nThere was one problem, though. As Jack's rats poured out onto the road, and his crows dotted the sky, no new animals joined him. There was a giant forest ahead, undoubtedly filled with small creatures like rats and crows, but none rose from their hiding places. Jack reached out with his mind, and grit his teeth as he found nothing. The vitae he'd spilled to summon his legions sat upon the dirt and earth of the physical realm, and it summoned the creatures of the physical realm. Here, in a world of nightmare fabrications, a dream realm forged and molded by dreamers and strange creatures, his Kindred powers did not reach the rodents, scavengers, and predators. They weren't real. Fiona was real, and so was Athalia, but whatever things with tiny claws and tiny beaks rested within the nightmare, they were only as real as the road Jack walked on: not.\n\nHe was at a disadvantage here, and that pissed him off. Whatever. Once he got his hands on the hunters, or was close enough to force eye contact, he wouldn't need his legions.\n\n\"Damien, get ahead of us. I don't want anyone with a molotov hitting us from a window.\"\n\n\"Done.\" The Mekhet jumped ahead, clearing over Clara, and landing on the rooftops. The hunters were still in view, and a few more of them had joined the others, increasing their numbers to maybe ten. What were hunters doing in the nightmare village? Probably helping Elen do something; she'd yet to make her appearance. Maybe she was doing more of her strange witchcraft, and if she was doing it in the nightmare chamber, instead of her strange flesh chamber, maybe whatever she was doing was meant to affect the nightmare realm.\n\nOr maybe she was just taking a nap and preferred to nap here, instead of on a cancerous pile of flesh and blood.\n\nThey ran through the village, scanning for possible ambushes, but Damien landed beside them and shook his head.\n\n\"The hunters are fleeing into the forest. All of them.\"\n\n\"The forest?\" Othello said. \"That forest? Are they serious? We're going to eat them alive.\"\n\n\"Don't be stupid,\" Clara said. The booming, guttural growls of her voice silenced everyone. Talking must have been difficult, with a big snout and without lips to articulate. \"If Jeremiah retreat into forest, he has ways to defeat us there.\" Her sentences were choppy, and missing a few words. It was kinda adorable, in a 'big bad wolf can't talk' sort of way.\n\n\"Yeah,\" Harcourt said from Othello's back. \"But, fuck me, I don't remember setting up any defenses here, just in the castle. Jeremiah and Elen didn't let any hunter stay here in the village for long. They were protective of this place.\"\n\nProtective of the village, hmm. It wasn't a real village, no more than its fake forest, or the fake castle were. The creatures he could see scurrying along the darkness of the mountain, the building edges, the crows and other scavenger birds perched on the dead trees, and the howls he could hear coming from the forest, none of them had true lives of their own. They were just echoes of someone else's nightmares. It made little sense for Jeremiah to be protective of this place.\n\nUnless, Jeremiah and his two bitches were up to things the hunters were unaware of. And they probably were. What other nasty shit was the human witch up to, and capable of doing. And if she was up to something, why here, and not her flesh chamber? Perhaps this place provided her more privacy, if Harcourt was right, and the hunters weren't allowed to stay for long. That meant she could do the darkest, dirtiest stuff. And if she was in those woods, where the hunters were fleeing to, maybe she had some particularly nasty stuff waiting for them.",
        "He couldn't wait.\n\nThe village provided no response to Jack's assault. As his flowing army continued to pour out of the destroyed castle door behind him, and his rats swarmed over the tiny, winding road thousands of feet high on a thin, jutting cliff point, no one stopped them. There were eyes in the windows, but a glance and moment's reach of his senses told him there were no living creatures within the buildings, or unliving. More shadows and illusions, more fake images caused by the nightmare. No human could stay here long without feeling like they were going to be eaten.\n\nThe hunters reached the forest, turned around, and started stepping backward into the shadows. As they did, they all unloaded their guns toward the oncoming paranormals, who had closed to the distance to only fifty feet; they were much faster than clumsy, slow kine. Othello and Damien could have caught up to them earlier if Jack had ordered it, but he didn't want those two going in first. Clara could front line, and so could Jack and his army; the others would flank.\n\nAnd that's exactly what they did. As bullets rained on them by the hunters retreating into the forest, Jack ran forward with his rats scurrying along with him. They were propelled by his will, his need, and their swarming mass worked together to turn themselves into a tide that rose up. Bullets disappeared into the waves of fur, sending blood splattering. The bullets did not last long, as the hunters vanished into the forest, and the trees blocked line of sight.\n\nHe managed a glance to Clara. Several bullet wounds decorated her fur, and while most of them healed before his eyes, one upon her shoulder was reluctant to do so. Silver. She didn't let the pain bother her. Good, he'd hate to leave a useful piece like her behind, and a hot piece at that.\n\n\"We go slow here,\" he said as they came to a stop at the forest edge, \"one of them still has a flamethrower. Beatrice, you're wounded so you keep an eye on Harcourt for now. If he tries to run, kill him.\"\n\n\"Y-Yeah.\" She stared at him for a second longer than normal, before she motioned for Othello to set the man down. With the hunter at her side, she waited for everyone else to push into the forest first.\n\nIf there ever was a haunted forest, this was it. And, unlike the typical haunted forest with a road to walk down, or a path, this had neither. It was trees pressed to trees, warped trunks giving rise to jagged and sharp bodies and branches, with faces hidden in the bark. Not a leaf in sight. To see movement through the trees was impossible, as ten feet was enough for the thick trees to block off all view with their tight constriction. There was maybe two feet on the ground to move about, two feet of space mixed with roots and dead twigs that provided a choir of noise as the hidden hunters moved through the forest's twisted innards.\n\nIt wasn't only the hunters making noise. There were animals in the forest, animals that weren't his. They were as much a part of the nightmare as the trees, and they'd listen to his commandants with the same level of respect. Maybe they'd listen to S\u00e1ndor, if the beast could be tamed to their cause, instead of the hunter's cause. Maybe not. Either way, they weren't his to command, and many started to disperse deeper into the enormous, endless forest that coated the mountain they stood upon.\n\nHis army poured into the woodland, and what was once an impenetrable, unknowable barrier of wood and darkness, became penetrated, and known. Kine would find this mess of forest to be unassailable, and suicidal to enter. To paranormals, this was prime hunting grounds. To him, it was as open as a book, now that his rats and crows flowed between the trees. They chirped, squeaked, cawed, and crowed about the contents, about the trees upon trees upon rocks upon dirt upon trees. They spoke of the hunters, and how they fled as fast as they could, glancing over their shoulders in manic fear as they moved in the same direction. They spoke of Jeremiah, and Angela, heading forward together. They spoke of the limp Angela carried, and how Jeremiah was forced to help her.\n\nLimp. She really wasn't fully healed from their last encounter. Good. Fleeing would be harder for her.\n\nThis was how things should be! Kindred, hunting through the dark for their prey, with humans fleeing in terror. None of that ludicrous garbage the Prince pushed for, no. This was how Jacob would have done it, and how the new Jack was going to do it, hunting prey as they went screaming into the night. Fucking orgasmic. The hunters didn't deserve a last stand, a grand battle, anything that would lend satisfaction or gratification to their final moments. They were just vermin to be exterminated, vermin that had infested his world. Hunt them down and kill them off. No epic moments, and no stories to tell. They weren't heroes, they were idiots that wandered into the lion's den. No tales, but maybe a parable, a warning to future generations to not mess with dangers you could not appreciate, dangers in the dark.\n\nMaybe they could pile the bodies high, or skewer their corpses on the trees, as decorations and homecoming gifts for when they inevitably freed S\u00e1ndor's mind. Surely a nightmare monster would appreciate the gift.\n\nA shame S\u00e1ndor couldn't join them. He'd bet good money the monster would love to dance in the blood of his captors. Ah well, Jack would have to do it for him. He'd kill the hunters, and if he could catch one, he would Dominate them and make them kill each other, and themselves. Make them drink misery, and look each other in the eye as they ripped each other's guts out.\n\nThe vampires snuck through the trees without issue, for the most part. But they were all city vampires, after all, and couldn't help but step on twig. It didn't matter. As thousands of rats swarmed over the roots and earth, any noise the vampires made became irrelevant. Like a hundred horses galloping and creating thunder, the legion of rats filled the air with a sound not unlike raining glass shards, as if someone had shattered a million windows at once, and all anyone could hear was the sound of the bits hitting streets for miles in all directions. The crows were quiet by comparison, and their caws didn't reach the same level of sheer, imposing grandiose allure; that'd change, as more of his flock arrived, and their wings blocked out the moon.\n\nScully and Mulder cawed from perches above. They knew better than to get into the thick of his army, where their lives were in danger. His two closest pets were not to be wasted.\n\n\"Clara,\" he said to the darkness around him, \"we don't have time to be sneaky. Rip it down.\"\n\nThe beautiful choir of rat chirps and the constant rain of their claws on bark and rock, disappeared under the shattering roar of the titan. Clara pushed forward and began to rip the forest apart, literally. Her claws sank into wood and went through it like a knife through flesh, and the forest began to collapse around her as she doubled the speed she moved forward. She'd have gotten stuck eventually anyway, considering how big she was.\n\nAnd, now that Jack had leverage, he was free to use his own strength. Back in the castle hallway that led to this nightmare, he couldn't really get a grip on anything. But here, surrounded by trees, physics were on his side. He reached forward, put his hands between two trees, pointed outward, and spread his arms. He didn't have the sheer weight and velocity to his movements Clara did, or claws for that matter, but there was one simple, undeniable fact, that he was delighted to show off.\n\nHe was stronger than the huge beast currently ripping the forest down.\n\nOthello, the oldest of his crew, and a Daeva to boot, with natural strength coursing through him by the power of his blood clan, wouldn't stand five seconds against Jack. Clara, who was probably stronger than Othello in her transformed state, wouldn't last ten. If he could get his hands on them, get a good grip, get his fingers wrapped around something vital, it'd be all over. He'd crush them like a grape, like he did that hunter in the hospital. For now, tearing the forest down would have to do.\n\nHe heard a gasp from behind him, Harcourt's, and Jack glanced over his shoulder to laugh at the man, as Jack spread his arms out completely, causing the weaker of the trees to crack, break, and begin to fall. The dark trees were two feet thick, tough as nails, and they fought to stay standing, but that was the fun part. If they just broke like twigs, it wouldn't make any difference. The fact that he and Clara were tearing the whole damn forest down as they chased after the hunters, a strong, sturdy forest, turned the hunt into a theatrical affair of booms and screams.\n\nScreams? Ah, yes, one of the hunters, the closest one, was pinned under one of the trees. Yeap, that was a broken leg, and probably broken hip or something too. The man was trapped under one of Clara's trees, and she pushed past the victim, stepping onto the tree as she continued forward, ignoring a free kill.\n\nThat wouldn't do, not at all.\n\n\"Harcourt! You gotta do something! Please!\" The man held his hand out for his fellow hunter.\n\n\"Jack,\" Harcourt said, desperation in his eyes, \"that's Larry! Let him\u2014\"\n\nJack laughed, pointed a palm at the man, and unleashed Hell. Rats poured over the downed hunter like piranha, and the screams turned into shrieks of agony as hundreds of teeth bit down into his clothes and flesh. Shrieks turned into gargled noise that no human mouth or throat could create, and seconds after, silence.\n\n\"They had their chance, Harcourt.\" It didn't make any sense to spare the ones that surrendered now. What kind of message would that be sending? That Jack was soft. Couldn't have that.\n\nHe stepped over the corpse, still teeming with rats, and continued on. The squeaks of his army were a mix of satisfaction over the meal, and information about the forest they moved through. The hunters had given up trying to shoot behind them, and were doing their best to move toward somewhere in the forest as fast they could. But the forest was so tight, even his crows had trouble navigating it from above.\n\nScully and Mulder did their best to provide him with more detailed information. All they could see of the strange nightmare forest was its size, and how it went on endlessly, consuming the mountain as it descended into fog, miles down. No doubt the nightmare was localized to the village and the forest on its edge, and the hunters wouldn't be able to keep going without running into some sort of impassible barrier.\n\nSo where were they going? He couldn't wait to find out.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n~~Beatrice~~\n\nShe was following a demon.\n\nShe'd seen Viktor get angry before, and do some pretty nasty shit. She'd seen Tony and him get into scuffles before. She'd seen Tony and Garry throw down on occasion, and really tear up a place. When elder vampires decided to get physical, shit got crazy. They wielded insane power, to the point it could be hard to really appreciate.\n\nWhat Jack was doing was at least on that level, if not a level past. This was some Jacob-level shit, and she'd seen Jacob throw a punch when he beat Art and Matt into the ground like children. Hell, this display of Jack's was something Jacob would have struggled to do, probably. The little guy was marching through the woods, and tearing down enormous trees, while commanding an army of literal thousands. When he managed to get between a couple trees so he could get his footing, he pushed them down and broke them even faster than the giant werewolf ripping the forest open did.\n\nVentrue did not have the natural strength of Nosferatu or Daeva. They could develop it, sure, but they never came to it with the same ease like Beatrice or Othello, or Jacob or the Prince would. What Jack was doing was the territory of Jacob's strength, and the Prince's. The summoning he was doing was something only Viktor could have rivaled, and she doubted he could match it. Good fucking god, she pitied whatever fucker had to suffer Jack's Dominate.\n\nFuck her, she should have stayed back with Jennifer, guarding the two hunters who'd given up. She could be keeping the second portal open, like Aaron was.\n\nNo. No, no no no, she had to come. She had to see this through. She had to kill Angela. And, she had to make sure Jack came back from this, and more than just alive. No way in fucking hell, could she let this fucking abomination go walking around in Jack's skin.\n\nGod, Julias, what have I done to your childe?\n\n\"Stay out of his way and shut up,\" she said to Harcourt. The two of them were relegated to following the crew now, and she was kind of happy she was. She didn't want to be upfront with the kid, not anymore. Clara was beside him, ripping down trees and charging forward, but she wasn't making quite the same impact Jack was, as the kid pushed trees down like a child marching his toy dinosaur through a Lego city he'd made expressly for the purpose of smashing. Othello and Damien had stopped trying at some point, and had taken up defensive positions right behind the leading two, ready to leap out and attack any hunters who got caught.\n\nThe first hunter who did get caught, Larry apparently, was nothing more than bone and strips of shredded clothes, as they stepped over him. Harcourt put a hand to his mouth, gagged, vomited, cried, and pushed on, all in six seconds. Well, she had to give it to him, he had resolve to be able to experience all that and keep going.\n\n\"You have no idea where your buddies are going?\" she said.\n\n\"No. Jeremiah and Elen had lots of secrets, you know? We... we never got to see everything. They were always protective of their secrets, and they only let us know about the... sacrifices, after we'd been with the group for some time.\"\n\n\"Pretty fucking stupid, to work for a boss who sacrifices people as part of their magic.\"\n\n\"Fight fire with fire, was their plan.\"\n\nSnarling, she pushed her shirt up a little and ran a claw along her stomach. The cut was still there, but at least it had closed, Kindred blood pulling the threads of her skin together to keep her guts from falling out. But it was only skin deep. Her insides were not happy with her, and if she dared do something stupid like run or jump, she might lose a spleen. She was an undead creature, and a withered, useless spleen falling out of her wasn't exactly a big deal, but fuck, it would have hurt. And even an undead creature like her would die a second death with enough structural damage.\n\n\"So, because some psychopath told you they were fighting fire with fire, you thought it was cool to start sacrificing people you stole off the street, so you could divine information from their guts, and use their blood to open portals into a literal flesh chamber, some sort of pocket dimension thing, crafted by a witch?\"\n\n\"Fuck you, I'm here, aren't I?\" He wiped his mouth off, and hopped from one fallen tree to the next. \"Marge and Dennis are going to live, and that makes this worth it.\" Marge and Dennis were the names of the two hunters with brains, then.\n\n\"Yeah, well, if things\u2014\"\n\nJack and Clara, and the army of rats and birds came to a stop. A clearing sat before them, fully exposed now that Clara and Jack had pushed all the trees in the path down. Most of the trees. Some trees in the path still stood, but as Clara and Jack tried to reach the few remaining, they couldn't. And those trees had corpses nailed to them.\n\nEveryone other than Jack and Clara found trees to hide behind, and there were plenty with the forest still surrounding them. But pushing further ahead seemed to have come to a stop. Clara slammed her hands against the air, and Triss could hear the impact, as if the werewolf were hitting some sort of super hard, perfectly clear plastic.\n\nDamien spun around, eyes on the ground. \"Look for an amber light, or circle!\"\n\nEveryone did, but no amber light made an appearance, for the first few seconds. But an amber glow eventually did start to arise from between the fallen bark and branches, a line that stretched wide, until it circled the hunters and the clearing they were standing in.\n\nNo gunfire came, despite Jack and Clara being out in the open, with only the few trees beyond the protecting line between them and the hunters. A few trees, with bodies nailed to them, were paltry defensive against assault rifles, but the hunters didn't take a shot. The group of kine were huddled together in the center of the clearing, surrounded by trees with, what Triss had to guess, were sacrifices crucified upon them. In the clearing, a dozen hunters had their guns pointed at Jack and the werewolf, but Jeremiah and Angela were rooting through some bags sitting on the dirt.\n\nElen, in her wheelchair, was holding a small knife. Triss couldn't see the handle, but from how the blade gleamed and showed a few decorations along its length, she imagined a host of nasty witchcraft had been done with that blade. A glance at the corpses on the trees proved it; they all had symbols carved into their skin.\n\nIn the center of the clearing, a large stone stood, flat, rectangular, and pointing toward the sky at an angle. Elen and the others were ignoring it; apparently it wasn't the reason they'd come to the clearing. But Beatrice couldn't look away from it.\n\nOn the slab of stone, a giant sheet of skin was plastered, human skin that'd been cut free from a body. And on that, was another one of Elen's fancy emblems, large, complicated, circular and filled with dozens of symbols.\n\n\"I recognize that symbol,\" Jack said over his shoulder to the crew. \"That's the symbol on S\u00e1ndor's back.\""
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "paranormal romance",
        "suspense",
        "slow",
        "violent",
        "romance",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-pt-07-ch-12"
}