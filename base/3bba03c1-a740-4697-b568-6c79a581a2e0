{
    "title": "Life Is Like Shit - Not Chocolate",
    "pages": [
        "<center>Published Title: Life is Like a Bucket of Shit -- Not Chocolate</center>\n\n<center>Copyright by dmallord, 2021, USA, All rights reserved.</center>\n\n<center>Published Exclusively by Literotica.com,</center>\n\n<center>17,500 MS Words - 37 MS Word Pages</center>\n\n<Center> INTRODUCTION</center>\n\nJust to be p-e-f-e-c-t-l-y clear this is just a dry-wit, storyline about a guy whose life gets turned around by a mysterious Asian American woman called 'The Fixer' after his gold-digging ex-wife takes him to the cleaners. It an imbroglio of: bar scenes, a gold-digging ex-wife's cheating, payback, criminal intent, arson, near death, and sensual sex; in short a fine afternoon soap opera event. Amidst it all, like a box of chocolates, it introduces a mystery heroine who cleans up the victim's life going outside the boundaries of the law to accomplish this off-the-books non-sanctioned mission. \n\nIt ain't real. It didn't happen. And I am not here to try and piss you off. So if the divorce theme might be a bit upsetting then this story isn't for your enjoyment. \n\nHowever, if you like dry humor, can tolerate some obscenities, and a bit of a twist in a country type setting you might like this one! There is adult, consensual sex between a mysterious Asian American \"Fixer\" and Danny, the protagonist. It's Literotica after all. It's one of the mandatory ingredients!\n\nYou may have heard that classic question: What do you get when you play a country western song backwards? Well this fictional story answers that question, including what happens to his dog, in this regaling tale!\n\n+++++\n\n<center>Life Is Like a Bucket of Shit - Not a Box of Chocolates</center>\n\n<center>Down at the Country Bar</center>\n\nThe music was thumping out of that old jukebox in the corner, but nobody was dancing to my bucket of quarters. Who does that at 5:30 when the joint is half full or half empty; depending on how you look at it? The music was just some noise to drown out my errant thoughts of suffering grief. Most guys in here are on their way home to a house full of kids and a flagging, loving woman caught up with rug rat chores at the wind-down of a long day. They just needed a mug of courage to make it all the way home. \n\nMe? Just chilling after a hard day's labor; before starting my second job of the day. No one is waiting for me to come home to kiss or to hug. I'm just sitting on my favorite stool covered in house construction sawdust and looking pretty much like a weary old man - 'cept I'm not old; just weary. \n\nMy best bartender friend was just wiping up some spilt beer at MY end of the bar. The corner that still needed a sign saying, 'Commiserating Corners - Open for Business.' At least that was the one I thought about hanging up there today. This is my corner. My stool. My time of the evening to unwind. Tomorrow, well there could be a different sign, but just now this one fits my mood just fine. Everyone here has a spot, even though there's no name tag on it. Like cattle lining up at the evening feed trough for grain -- each of us has our own place to suck down some suds before calling it a day. Don't take a man's place at the trough if you're new here -- that just ain't right.\n\nLarry, my personal bartender, heard me talking to an empty beer mug; in a deep, serious conversation. The mug and I was discussing about thinking how I needed to see a head doctor. Larry insinuated himself into our private conversation.\n\n\"For my two cents worth of advice, kid, people really don't need a head shrink. Much of your life can be self-analyzed just by sitting on an ass-polished barstool for two hours a day. A few bucks and a few rounds for a few like-minded guys sitting there with you, really provides all the diagnosis required. You don't have to pay for some psych doctor to tell you that life is like a bucket of shit.\"\n\n\"All he's going to tell you is, as you get near it, you can start to smell it's pungency. Get right up on it and you nose rebels at the stink of it. But walk by it after the third day and the stench is not so bad. You find yourself getting used to it, kid! Hell, three weeks into - your kind of troubles - and you don't even think about it as you walk by.\"\n\n\"Hell kiddo, you could probably eat your lunch next to it and it probably won't even bother you!\" he snickered as he wiped up the last of the suds.\n\nHe slung the beer soaked rag over his shoulder as he collected the last of my change off the bar counter and said smiling, \"Thanks for the tip! I think you've had enough for today, kid. See you tomorrow!\"\n\n+++++\n\n<center> Beneath The Commiserating Corners Sign</CENTER>\n\n<center> Danny's Story of Woe</center>\n\n\"Well stranger, now that you ask, this other barstool is free. Welcome, and yeah - my life has become just like that bucket of shit. Three years into my marriage with Rita and it had gone to hell.\"\n\n\"Names Jack, Jack Wilson,\" he breathed out his handle as he sat down on the stool next to me.\n\nI looked over intending to study his face a bit, then looked up, then up some more. He was a really tall guy, even sitting down. Had that chiseled jaw, broad shoulders, and muscles that had muscles on those first muscles; kinda' like that character John Henry that song Johnny Cash used to sing about. He legs looked like tree trunks. But, he had a nice smile -- and for an offer of free beer, I told him my story.\n\n\"To be candid, most of our first year was - almost all roses. My cock was like a really happy puppy. Rita stroked it, nuzzled it, and kissed it just like a newborn pup. Rita and I cuddled in the morning, mostly starting with spooning her from behind, then made passionate love before we rushed like crazed newlyweds running out the door, racing the clock to get to work. Then home again -- some times on the table while dinner got crispy on the stove. It never failed that she would have me rolled up in the sheets at bedtime as we did the naked tango for two while moaning and groaning as we got each other off.\n\n\"The second year had some ups and downs. I'd say it was like - almost a mixture of wild flowers, dandelions, and lots of crabgrasses. I just couldn't pull them out fast enough before they grew back in again. She got restless, fussy, and sex -- well that kind of cooled on her part; but not that I didn't want to put the effort into it, you know?\n\n\"By the middle of the third year -- God, that was a real bucket of shit. Especially the day I signed over the house, the car, my bank assets, and my imaginary third nut to her fricken ass!\n\n\"My lawyer all but said, 'Might as well bring some axle grease to the table - the judge is gonna make you drop your britches, bend over, and grab your ankles, kid. You know what the grease is for, right? Kid, you aughta be glad y'all didn't have kids. Now, about that mangy ass-licking dog you love so much ...'\"\n\n+++++\n\nMr. Wilson seemed to be a good listener. Not much of a talker though. Have to admit, then again too, I seemed to be monopolizing the conversation -- pretty much a soliloquy you might say.\n\n\"I had no place to go, found myself crawling home to my momma with my tail between my legs. Momma was the only one I had left that would take me in after the divorce settlement. From the moment I hit her back door, her dialogue would be the same as the one she preached to me before I got married.\n\n\"Her words came out like a jukebox pop tune. 'She ain't nothing but a gold-digging bitch! Looking to get rich! I can see it by the way she leads you around. You pussy whipped dipshit! Mark my words, Danny! She's gonna get your money -- honey - and run off the first chance she gets!' she had said then and, now, and is reminding me of it nearly every -- damn -- single day!\n\n\"Did I listen the first time? Hell no! Rita was fun, a bit wild, and with titties as big as the headlights on a Cadillac. Hell, she could blow all kinds of tunes on my piccolo that ended with, 'Do me honey! Dick me with that big, big cock of yours!'\n\n\"As it turns out, Mamma was right. Rita liked gold - anything with gold - jewelry, even gold colored shit caught her eye. Six months into our marriage she just knew she needed a fancy new gold Cadillac. She saw it in the dealership window across from the diner where she worked. Real nice one, too. \n\n\"'Sugar,' Rita said, 'It matches my long Barbara Streisand locks of hair! You and me are gonna look real classy riding around in that big old gold Cadillac!' \n\n\"I took out a loan for it -- cause Rita was right. The first week I got royally treated each night. She sure could hum a lot tunes that were louder than a bugler! Like I said, that lasted about a week and then tapered off as the excitement of showing it off to her girlfriends waned.\n\n\"I came home one afternoon and Rita greeted me at the door in a really nice new devil-red negligee. She was all smiles! I thought, maybe I'd missed her birthday or something. It was something - the way she pulled me onto that new leather couch I was making payments on and set to riding my cock. The old spark was back!\n\n\"When she had her way with me she announced, 'I'm buying us a house, sugar!' Rita really needed a nice house now that we were married and all. \n\n\"'It'll make us look so respectable!' she said, 'Can't live in this damn cramped apartment anymore, baby. It ain't right; the neighbors can hear every squeak of our bed. I can't really show you - how much I appreciate - what you do for me babe - with these thin walls!'\n\n\"'Honey, It's time to move on up!' she cooed into my ear as she got on her knees for me. I was about to stick it to her, doggie style, in the heat of the moment. Right as she said, 'Your momma is gonna treat us, - you, I mean babe, with more respect when she sees how well we are doing, darling.' I could tell by her grin that she really liked that idea as she wiggled her rump and backed herself up against my stiff hammer handle. \n\n\"I took out a thirty-year loan for that too. Like the car, for a few months my dick got royally treated as a token of appreciation. I had to work damn hard for that, even taking on a second job and all. It was beginning to wear on me a bit. Of course she wanted roses, frequent dining out, and fancy clothes to go along with those things.\n\n\"'I'm proud of you, darling!' she said every time we went out for dinner to show off her new clothes!\n\n\"In the second year, Rita was generally cranky. She whined, 'I am tired of being pinned down! We never go anywhere any more. You didn't even take me back to Vegas like you promised for our first anniversary.'\n\n\"I didn't exactly remember promising to go back there; that would be a bit hard working two jobs plus most weekends as well. Then too, her crankiness might have been due to her having back problems. Too hard on her shoulders - working that is. She announced that one day out of the blue. Had to give up working! It didn't seem to be something a doctor called for - just something Rita self-diagnosed. \n\n\"'My momma had the same thing,' she told me. I guess it ran in the family.\n\n\"Still, her shoulder pains didn't seem to interfere with her jazzercize classes, yoga classes, and late nights out dancing with the girls while I got some rest for my early morning job and the nightshift at the auto parts store. Most of what was left from working two jobs that didn't go for the car and house payments bought those fancy things she claimed she needed to go with our new lifestyle.\n\n\"Rita, early on, announced, 'Danny, babe, you can't be tearin up the new car driving to no damn construction sites to frame up houses. Besides,' she said, 'You couldn't really expect me to sit home all day and wait for you to get home.' She needed the car to go out and put some spark in her life. Rita couldn't be treated like some stay-at-home blow-up doll, stuffed under a mattress, now could she? I took on some side jobs on the weekends to cover my old '67 Chevy pickup repairs.\n\n\"Somewhere, toward the end of year two, my tired ass and under serviced dick were getting less home care. Rita got really pissy. It seemed she thought I wasn't living up to her standards. \n\n\"'Danny, sugar, you're just not inventive enough to keep my cunt entertained. I need more excitement in my life, honey!' she gasped that out one night after we had sex. Got to say that hurt my pride a bit, but then it was just Rita, after all being pissy.\n\n\"That's when she cooed in that giggly voice, 'Honey, let's get adventuresome! How about you tie me up? Hang me upside down from the ceiling, sugar. And do some rough stuff, baby! Please, please Danny?'\n\n\"That, she calculated, would make for some great monumental pictures. I thought that was a bit out there, but, well what Rita wants - Rita gets. It took a bit of work to get hangers into the ceiling joists. Rita seemed to have some fancy ropes from her macram\u00e9 classes. Hell, when did she sign up for those? While I hung the ropes she pulled out a box she'd hidden in the closet and changed into a weird getup. It came with straps and studded belts that wrapped around her titties. She looked like someone from one of those sado-masochistic explicit sex videos. Not like I watch those, Mr. Wilson. Kind of hot though. I took all the photos she wanted with lots of close ups of my dick in her face, her cunt, and her posterior side ... until she was content.\n\n\"The next afternoon I didn't get lunch; a police detective from the sex crimes unit drove out to my job site with a process server. Two for one it turned out. Rita used the photos to get me arrested! Delivered me a restraining order for spousal abuse, and to boot, the process server handed me official filing for divorce papers. I couldn't even get in the house to get the rest of my tools. She sold them on some damn website -- like they was just yard tools! Kept my clothes. Kept my dog Humpy, too!\n\n\"That's about the time I hired the only lawyer that would take my case. He took one look at the pictures of Rita hanging from the ceiling and the statements from Rita's girlfriends and well, you already know what he said, 'Kid, you're fucked!' Is basically the gist of it.\n\n\"Seems, I was pre-destined to work two jobs for the rest of my life to pay for Rita to live in and entertain her new friends at my expense. At least that seemed to be my life's destiny. The divorce papers said I had to take care of her - unless she remarried. That seemed to be my only out. \n\n\" 'God,' I prayed every morning I woke up, 'let Rita find a rich fucker today and take away my burdens!'\n\n\"The divorce papers, I found out later, didn't say anything about Rita having sleepover guests. I saw him, the day after the divorce. I drove by 'my old house' on the way to work. He was standing in the front door squeezing her bare ass with both hands as he gave her a kiss; wearing a shit eating grin and one of my leather jackets to boot!\"\n\n+++++\n\nI watched Jack Wilson taking in my story. Every once in a while he would nod his head as though he understood my drift. All the while keeping an eye on the front door, as though he was waiting for someone to meet him at the bar.\n\n\"My local country-western bartender and I get to see one another most every other night. I practically paid for this stool I'm sittin' on, with the change that Rita doesn't get.\" \n\nI looked around the bar to see if anyone else was paying attention to my conversation. They weren't. Most everybody there had already heard my tale of woe. I found myself a bit choked up to admit it -- to a stranger no less.\n\n\"Mister, it's been a long while since a woman and I have -- spoken, if you know what I mean. I'm kind of like a man who squatted in the woods and got snake bit in the ass - too scared to venture out into the woods and squat again and too scared to touch another woman. I've even had to get reacquainted with Rosey Palm and her five sisters - if you know what I mean.\"\n\nJack Wilson pursed his lips and studied my long face for a minute. Then he drawled, \"Hang in there mister, it's always darkest before dawn, you know? Excuse me, Danny, I see my date is here. Nice talking with you, kid. You'll get through it -- trust your momma!\"\n\nI watched that great big oak tree rise off that stool -- caught a glimpse of a badge pinned to his belt just under his leather jacket. Snickered to myself -- hell, I just told my story to Marshall Wyatt Earp! He strolled over to a table where a petite woman with really long, long hair had just sat down with her back to me and facing the doorway. She was doing one of those 'read the room moves' with her head. I thought, 'Lucky bastard, you got someone to hug tonight.'\n\nLife was a bitch ... just like a bucket of shit!\n\n+++++\n\n<CENTER>Danny And The Fixer Meet</CENTER>\n\nMamma's sister, Ima, came down with something, I forget what, but she had to drive back home for two weeks to take care of her until Aunt Ima could get back up on her feet again. That was like a ray of sunshine from Heaven. The minute she left the house and drove out, the house seemed to creak and sigh with a profound sense of relief. At least I did. Bless her heart, that incessant harangue about Rita day in and day out was getting so damn old! I just wanted to let it go ... but his hands on Rita's bumper pads just kept creeping into my dreams every night.\n\nThe second day, after Momma was off to see her sister, I was alone in a quiet, empty house. The quietness of it all began to seep into soul. I left the television off. The silence felt so damn good. I needed that feeling it gave me. A feeling of relief seemed to flow through my bones. It felt really good to be alone - even if was only going to be for two weeks. Maybe this blessing would give me some self-analysis time. The library books I'd taken out to read about divorce trauma sat on the bedside table. I started to read as my eyes watered. I could see myself on most of the pages. The pages got wet as I slowly turned and read about myself on each one; roof leak I guess; how else would the moisture get there? Funny, I didn't remember it raining outside.\n\nThe third day, that would have been the next day of quiet, I went to work as usual. We'd completed the dry-in stage of a new home in the subdivision. Damn good thing, too. Darkness was crossing the upper valley area and headed our way. I just threw my tools in the bed of Old Rusty Bucket '67 and sped out onto the blacktop to beat the rains. From the far-off lightning it looked like a monster storm was crawling across the land. The lightening was spectacular and I could begin to hear thunder rolling closer now.\n\nI intended to drive straight home from work, skipping the barstool polishing session. However, I did make a pit stop at the icehouse to grab some hamburger meat and a few things for dinner - needed that case of Shiner Bock for sure!\n\nThe further I drove, the darker it became. Not just because of evening approaching, but the weather was rapidly changing as ominous dark clouds raced across the sky. Gusty headwinds were buffeting my truck like a bumper car game. Rain was surely not too far ahead, I surmised. I turned off the main loop around the city, onto the highway juncture leading over to Momma's place. By the time I got to the turn off, buckets of rain were slamming against Old Rusty '67. Every damn tool in the bed was going to have to be hauled out and wiped dry. It felt like I was inside a drive-thru car wash!\n\nThe windows were getting foggy on the inside. I had one hand on the steering wheel, one wiping the window over it, and my right leg on the gas pedal - pushing it a bit harder than I should have given the weather and all. I felt kind of like a spinning plate juggler at a three ring circus trying to keep all the plates on their poles without dropping one. I was busy with wiping the fog - it was just instinct or premonition that kicked; it tickled the hairs on my neck.\n\nJust barely had time to swerve left; just good reflexes and skipping the beer, got me around a lone bike rider pedaling furiously down the road. Damn kid was out in the storm with no lights. Probably had no idea I was right on his ass given how dark it was. Probably had his head down keeping the rain out of his eyes. Once my heart dropped back out of my throat and into my chest, I chuckled to myself. ",
        "\"Serves you goddamn right for getting out in this weather,\" I chortled, admonishing the rider as I looked in the mirror to see if he was still on the road. Or - perhaps if I had scared the shit out of him and he drove into the ditch. \n\nI couldn't see a damn thing! I slammed on the brakes praying I was worrying about nothing. But I backed up anyway. Risky considering the weather, but if the kid was in the ditch he would likely drown - if he was out cold. Hell, probably nothing - I hoped. I was dry inside, but I knew I had to get out if I had to find him. I turned on my four-ways and was about to open the truck door when I heard a hard bang on my window. \n\nScared the fucking shit out of me!\n\n\"Can you give me a ride?\" came a muffled voice on the other side of the window. The winds got most of the question, but that's how I understood it.\n\n\"Come on! Throw your bike in the back and get in!\" I yelled back amidst a peal of thunder from a nearby lightning strike.\n\nThe passenger door swung open and a half-drowned fox quickly darted inside trying to keep out the torrent of rain chasing him. I took one look and felt a bit shameful.\n\nIt was a girl and not some guy out riding in the rain. My heart started pounding again. Shit! I just picked up some young girl in my truck! \n\nThe ink on my divorce papers was barely dry and Rita's accusations were fresh on my mind. Of all the damn luck! What's that song? \"If I Didn't Have Bad Luck, I'd have no Luck at All?\" What a bucket of shit!... Or maybe it was just my ass-bite snake issues going ape shit on me.\n\nI just sat staring in the dim cab light as the wipers beat furiously. She looked beaten down by the weather. A thin tee-shirt was plastered to her tits, almost see-through like even in the cab lighting. Damn ... fourteen. \"Danny, your ass is going to prison if this gets screwed up!\" The words banged around my head and were running through my mind.\n\n\"I'm Jackie, Jackie Wilson,\" she volunteered as though I had asked her name.\n\n\"Danny,\" came out of my mouth before I could stop myself. Reflex. Shit, shit! She had my name.\n\n\"I know it seems crazy, mister, but it wasn't raining when I rode out. Our power went out and I was looking to see if anybody else down the road had power on. I didn't want to be in the dark alone. I stopped at that old grumpy lady's place down the road, but she wasn't home. I was going down to the Miller's place but the rains came up so fast. I turned around and headed back. Thanks for stopping to pick me up.\"\n\nShe was a talker. I took a wild guess that the old grumpy lady was my momma. The Millers lived the next house over. She said that she rode out to see if others had power. This must be a new family in the neighborhood. I thought.\n\n\"How come your Daddy didn't go check on the power?\" I asked out of curiosity.\n\nShe looked at me for a bit before answering. Making up her mind, it seemed about telling me why. Finally she coughed it out as she wiped the rain still streaming down her face. It didn't do much good. More rivulets flowed out of her long, long hair to replace it.\n\n\"My parents are on a second honeymoon. Gone on a cruise in the gulf for two weeks,\" she finally decided to answer. Telling a stranger that you are alone in a house for two weeks in the middle of a storm told me she was na\u00efve. Or else she was some kind of Kung-fu guru and could kick my ass with one arm tied behind her back.\n\n\"No generator back up system at your house?\"\n\n\"Nope.\"\n\n\"Candles then?\" I started to ask.\n\n\"Mister Danny, do you have some?\" she answered with a question of her own.\n\nThen followed it immediately with, \"Please, I don't want to stay there alone in the dark!\" It was the tremor in her voice that got me. Genuine fright.\n\nIt was against my better judgement but I answered, \"I put in a generator for my momma. We have power. Just have to fire up the motor so we'll have lights. You can stay until the utilities come back on. Usually power isn't out for more than hour or so.\"\n\nBy the time I turned into Momma's driveway, some three hundred yards down the road, the heavens had opened up and even with the wipers on full speed it was difficult to make the turn into the driveway.\n\nI sat staring at the garage door, as if I could will it open with my mind - Yoda-like. I swear the kid was a mind reader. One look at me and she bounded out of the truck pulling up on the handle to swing the overhead door up and open. I chuckled as she ducked inside. I drove in, still dry despite the torrential rains. She had taken another drenching, but at least she was thoughtful enough to help out.\n\nI counted myself thankful that I'd stopped to buy some groceries before the rains started. I left the truck running and the lights on. I grabbed the groceries, setting them on the worktable as she watched standing on the passenger side of the truck.\n\n\"Be right back!\" I said as I ducked out the back door and sprinted across to the generator. I was never so fucking glad that it had a battery start up system. One click and it came to life. I wished now that I had installed one of those automatic startup and power transfer systems. I wouldn't be standing outside like the kid soaked to the bones in cold rainwater. I guess she must be feeling the chill as well, as I tried to dodge puddles running back into the garage. I flipped the power transfer switch and reached for the garage lights. We were bathed in light! Halleluiah we were saved!\n\nNo sooner had the lights come on, when I heard her girlish giggle. She was looking my way. I guess the sight of me drenched as equally as she was, was amusing to her.\n\n\"I thought opening the garage door for you was going to keep you dry!\" she chuckled.\n\n\"Appreciated that thought,\" I replied picking up the groceries and turned around to catch sight of her as she walked around the truck from the passenger side. The light in the truck cab didn't do justice to what I just now caught sight of in the full shower of overhead lighting.\n\nI hadn't picked up a fourteen-year-old kid. My Ex looked like road kill, compared to this soaked damsel in distress. Sure she was petite, guess that's why I thought about her being a kid, but damn this was a woman. A young one, but a mighty fine, good-looking one. A real fine drink of water!\n\nI could tell by her attitude she knew I was mesmerized by the sight of her. How could a man not be smitten by her beauty? Her tee-shirt was plastered to her skin and her nipples clearly showed. No damn bra hiding those perky pears! Her cutoff shorts did a good job of carving a deep V-shape right at her camel-toe. Damn! She looked just like an Asian American version of Daisy Duke -- just more Asian, your know? She wasn't a bit bashful and smiled again. \n\nIt was a damn bright one that said, 'I get that look a lot, Danny boy.'\n\n\"Twenty-four,\" she said out of nowhere. I swear she was a damn mind reader! I was thinking it but wasn't going to ask her age.\n\n\"Jackie, you look like a drowned rat!\" \n\nI chuckled observing the water dripping down those soft Asian American features. As I spoke, she turned reaching into the truck and switched the engine off then killed the headlights. She had the longest straight black hair I'd ever seen. It streamed down over her shoulders to her lower back. It must be holding a gallon of water at this point as it is plastered to her thin tee shirt. Jackie is that wonderful blend of Asian and American features with a perpetual suntanned skin color and dark coco eyes. I felt a smile cross my face. The first I'd had in a very long time. My eyes stayed glued to her ass until she turned back around.\n\n\"Mind opening the door? The light switch is on the left-hand side, by the refrigerator.\"\n\n\"Want me to go first?\" \n\nShe asked pointing to the doorway, \"Is that how you get to check out the butts of all the girls you bring home to your momma?\"\n\n\"Busted,\" I answered as she pushed the door open and felt for the light switch.\n\n\"Take it your momma is not home, since its dark inside.\"\n\n\"She's taking care of my aunt for a couple of weeks, some kind of medical thing.\"\n\n\"So you and are connected then? You're babysitting her house and I'm doing the same for my parents while they are cruising the gulf. Two home-a-lone kids, sort of, Danny?\"\n\n\"Oh! Oh. I'm, so... okay, that's not exactly the way it is,\" I mumbled having trouble formulating my response and stumbling over my reply. \"I'm between residences, for the moment. This is just a temporary stayover until I get a new place.\"\n\nOur clothing had left a trail of water across the floor from the door to the spot where we stood. There, a pool was forming beneath her as her clothing rained down upon the floor and around her bare feet. She had kicked off her sneakers at the doorway. Beads of water still clung to the long strands of her straight-as-an-arrow hair. Gravity pulled them together forming larger droplets that slid down her forehead and into those wonderful Asiatic dark eyes. She wiped them away with her hand, and crossed her arms under her generous pear-shaped breasts, pressing the nearly transparent, wet garment against her body.\n\nThe rain and the drop in temperature steeled her nipples. They jutted against her tee. It was then that I saw her tremble. \"You're shivering! Let's get you out of those wet clothes ...\"\n\n\"Nice try, Danny. But I'm not that easy!\" she smirked.\n\n\"I didn't mean it like that! Look I'll just go see if I can find something to get you out of those wet clothes ...\"\n\nShe laughed louder this time, but didn't say anything more to embarrass me. Hell! I just repeated the same dumb-ass line twice!\n\n'Not to swift dipshit' I could just here Momma's words ringing in my ears. I just shook my head and went to search for something she could wear. To be honest, I already knew nothing Mamma had would fit her, unless your wrapped it around her twice at least. I came back with a handful of towels, an old flannel shirt, and a terrycloth bathrobe I found in my closet from when I was about twelve. Mamma kept every damn thing it seemed. Tonight that paid off.\n\nJackie eyed the items from my scavenger hunt with a dubious eye. But another involuntary tremor shook her and she reached out a delicate hand to retrieve them. \n\n\"Bathroom is down the hallway, first door on the right,\" I said as I headed back to my own room to find something dry to wear. There wasn't much, just a couple of work shirts and pants. Fucking Rita had all the rest of my things including my dancing boots and all my work boots, too. The pair I had on were in the garage filled with water. I was lucky to have some extra socks in a drawer or I'd have been barefooted.\n\nI heard a hair dryer kick in. She'd made herself right at home! The lights dimmed a bit. The generator wasn't meant to run a normal house load. But it didn't seem to be choking the system too much.\n\nIt wasn't too long before she reappeared. I just stood there, gawking at the transformation. She was looking a bit like a fluffy penguin with rolled up white terry cloth sleeves and long silky black hair flowing down her backside. Nicest looking penguin I'd ever laid eyes on, though.\n\nBeginning to empty the bag of groceries, I asked, \"Are you hungry? I was going to make my specialty - greasy burgers and frozen French fries. Care to join me?\"\n\n\"I'm probably a better cook than you are,\" she answered with a great measure of conviction.\n\n\"Why don't you show me what you got - and I'll show you - what I can do with it!\" she added tersely.\n\nClearly, she was an astute study of human responses. Instantly, she realized the double entendre in her words. Saw the smirk appear on my lips. Read the thoughts in the rise of my eyebrows that followed.\n\n\"The food better be what you're reaching for mister!\" she said coolly.\n\n\"Eighty percent lean and twenty percent fat, - is what I have in the bag.\" I chirped.\n\n\"The other meat is one-hundred percent lean muscle, - not for cooking,\" I smirked as I set the contents of the bag on the table.\n\nJackie, I could tell, wasn't someone that took shit from anybody. It was evident from the way she stood her ground. She wasn't getting embarrassed like most girls would have at such a faux pas. She was not flustered by the whole dialog -- took it like water rolling off of a duck's back.\n\n+++++\n\n<center> Danny Amuses Jackie With His Divorce Tale</CENTER>\n\nShe was correct. She was a chef compared to my summer jobs during high school working at the grill in the drive thru 'restaurant' in town. She rummaged through momma's spices, dissed the packaged fries, and grabbed a few potatoes from the pantry, an onion, garlic, cumin, some green and red peppers, and voila a country fare fit for a family feast. Not that I felt the two of us were a family. Damn, I just met the woman!\n\nFor a moment, the roar of the wind and rain outside had been forgotten. I watched a beautiful woman, sensual, and seemingly nonplussed at being barefooted and in my old bathrobe. The essence of innocence seemed to be enjoying looking over a simmering pan as the air filled with a wonderful fragrance, as good a one as when Momma cooks.\n\nWatching Jackie whipping Momma's cutlery through the onions, garlic, and assorted vegetables, like a samurai's sword slicing through a field of warriors, gave me the shivers. \n\n'Stay the fuck away from that one when she's got a knife in her hands!'  \n\nI cringed as I felt my nut sack draw up at the thought of what she was capable of doing with a knife in either hand; it seemed.\n\nI made a pee trip; the cold rainwater got to me. That and feeling my nuts cringe looking at that knife flying through those vegetables. Finishing my tinkle, I looked up to see Jackie's clothing hanging over the shower rod. It wasn't the tee shirt or the cutoff jeans that caught my attention. Not even the flannel shirt she eschewed for just the robe it seemed. It was that damn red silk thong looped over the rod that got it. Got my rod's attention, too! Shit, it was hard to stuff my junk back into my old work pants after that! I was slow on the uptake, but it finally dawned on me what that penguin was wearing under my old bathrobe.\n\nI walked back to the kitchen. I could feel my face a bit warm and felt my cheeks glow at the thought of that red thong and where it had been. Jackie took one look at my flushed face and then at the outline pressed into my pant leg.\n\n\"Something in there got your attention, I see ...\" she snickered, pointing a 10\" kitchen knife between my legs. I was fixated on the area between her knees and ... the knotted belt in her robe. The rise in my pants wasn't cooperating to ease my embarrassment any, either.\n\n\"Yeah, I'm not wearing anything under this robe, but you already figured that out all by yourself, right?\"\n\n\"Yeah. I did,\" I replied amid a dry swallow. \n\nThe words slid slowly out of my lips as I imagined seeing straight through that robe and right where that red silk thong would have hidden that camel toe. Except in my daydreaming moment my x-ray vision wasn't seeing any red there, now.\n\n\"And that's all you're going to see, mister!\" she remarked, turning her attention back to the skillet. \n\nI watched her body as she stirred the food and kept a watchful eye on the pan. Her bare feet rose on tiptoe to gather spices adding a dash - a taste - and a bit more as she worked. 'She sure would look better in a red negligee as she wiggled in front of that pot,' I thought.\n\n+++++\n\nThe wind picked up. The rain beating furiously, against the window panes. Jackie watched the relentless rain slam against the windows as she ate. I spent my time glancing out and then back to watch a hint of her breast moving up and down as she raised each bite of home fare to her luscious lips.\n\n'Get a grip on yourself, Danny boy!' I thought, nearly blurting it out loud but just managed to turn it into a sigh hoping Jackie hadn't heard me. \n\n 'You already have enough trouble on your hands with Rita picking your pockets. Stay the fuck away from temptation!'\n\n+++++\n\n\"Penny for your thoughts, Mr. Silent One. Why are you back living with your mother? Girlfriend issues?\"\n\n'Damn. She wasn't subtle about it. Cut me straight to the quick.'\n\n\"My Ex.\" I hissed, pissed, as the stressed tone of my words slipped through tight lips.\n\n\"Ah!\" she mused. It was though that single word summed up everything I felt toward Rita.\n\nHer gut punches. The sweet smile at the judge when she caught him ogling her titties.\n\nShe didn't say anymore. It was as though a dam broke and I spilled out my life story with Rita and how she left me penniless while she was fucking some asshole who's now wearing my clothes.\n\nShe just let me prattle on until I was empty. It felt good to get out the anger. Better than hiring some damn shrink or paying for a round while sitting and ass-polishing that barstool. My breathing was audibly heavier then, than when I launched into my attack against Rita's conniving, bitchy ...\n\n+++++\n\n\"So let me get this straight,\" she said sifting through the bucket of shit I just brought to the table. \"Rita gets alimony because she can't work. You're buying her a house and a car. The house payments are yours until you pay it off and then she gets the house?\"\n\n\"Right. That's about it, I guess.\"\n\n\"I liked your attorney's comment about the axle grease. Got to admit he has a sense of humor.\"\n\nI ignored that last zing she shot me.\n\n\"Alimony, unless she gets remarried. The judgement says the house gets sold if she remarries and she gets any proceeds after the mortgage is paid. I have to pay the car regardless. If she stays single, I still have to pay off the mortgage and she gets the house anyway. Even pay my dog Humpy's veterinarian bills. She also got him in the divorce.\"\n\nI watched Jackie stir a few crumbs of ground beef around with her fork. The gears were turning in her mind, I could sense it. What the hell was she thinking?\n\n\"Humpy? You named your dog Humpy?\" she asked with a grin.\n\n\"What can I say? I was drunk. Found him on the road coming home one night. And ... well you can figure out the rest.\" I muttered, not sure how she was going to handle that one as I took another swig off the second bottle of Shiner Bock.\n\nI was caught up in her sparkling eyes. Her face lit up as well with a smirky smile, sort of leaning toward amusement I guess you could call it. She looked cute with those bright gleaming rows of teeth showing for a moment. Without the smile, before, she looked serious, like a girl fleeing from some turbulent past issues herself. I guessed anyway. But she didn't push the dog conversation any further. She'd had her chuckle over that and moved on.\n\nThe winds had died a bit, however the rains continued beating against the windows. I started thinking about Noah's Ark for a few seconds. I didn't have enough wood to start building one, but the weather looked like we sure were going to need it.\n\n\"Your mortgage payment probably requires insurance, right?\" she announced just out of the blue. \n\n\"The lender would make sure the amount of coverage is at least enough to cover the loan balance, although maybe not replacement cost. You should check on that. If its replacement cost, you can get that knocked down to just the loan balance coverage amount - save yourself some money. Bet her lawyer wasn't smart enough to make sure the settlement statement had that full coverage clause. Lawyer's almost never do.  Not many know about those kinds of outcomes.\"\n\nBefore I could respond, she breezed into, \"Do you have life insurance on yourself?\"\n\n\"Yeah, half a million,\" I slowly sighed, \"Rita made sure of that. Said we needed it for sure.\"\n\n\"And she, of course, is the beneficiary, right?\"\n\nI nodded. Her eyebrows went up.\n\n\"You should be sure, soon, to get that policy modified. She can't make a change on that, just you; since it is in your name and you're paying the premium. Make sure it is changed: 70% to your mother, 10% to Rita and 20% to the Humane Society,\" she grinned. \"Make sure she gets a copy.\"",
        "\"Why?\" I asked in consternation. I wasn't keeping track of the amounts just yet, but it dawned on me a bit later that Rita was getting shit compared to the dogs. I liked that!\n\n\"Half a mil is a hell-of-a-lot money for someone your age. Think about that! Didn't she just get you arrested and tear you a new asshole? What makes you think she didn't have designs on collecting on your insurance?\"\n\nI laughed, \"Fat chance of that happening! I am healthy as a horse and all my family have good genes. No one seems to die before their eighties - except in an accident of course!\"\n\n\"Of course that's how it happens, Danny!\" Jackie intoned mockingly, as she took another bite.\n\n\"That's how all the get rich quick bitches collect - via 'an accident.' She has that new boyfriend, right, the one wearing your clothes?\" she crowed as she took another slug of Shiner.\n\nI nearly spit out the swallow that made it half way down my throat before her damn sharp insight hit me. Fuck. Even motherfu...!\n\n\"Get the policy changed tomorrow! Get a copy to your lawyer and make sure her lawyer gets a copy too. They will be pissed, but when she finds out she gets basically shit if you die ... you will be able to drive safely back and forth to work,\" she goddamn calmly continued as she took another swallow.\n\n\"Why the 70-10-20 split? Why not just give it all to Mamma?\" I asked.\n\n\"Good question. You probably should have asked your insurance agent that one when you let Rita sign you up, Danny! But that answer is easy peasy. One, your mother deserves it. She raised you, even if she did a shitty job!\" she smiled so sweetly as she said that - I knew she was just teasing me. My Mamma was a good person, albeit a bit loud and bitchy.\n\nThen she continued, \"Two, if anything happens to Rita -- say soon -- you have proof that you were still looking after her interests even after the divorce. Your lawyer can point to the insurance amount and say that you still showed some 'love' for her even after the shit she put you through.\"\n\n\"And three, the animals getting more than her share - well that's just to piss her off again for keeping Humpy from making love to your leg!\" The last she uttered as she swilled the last of her bottle of Shiner Bock. Definitely that grin came off as pure brilliance. I liked that one the most!\"\n\n+++++\n\n<center>Life Is Like a Bucket of Shit - Not Chocolate</center>\n\n<center>Copyright by dmallord, 2021, USA, All rights reserved.</center>\n\n<center>Published Exclusively by Literotica.com</center>\n\n+++++\n\n<CENTER> Jackie Wilson Unveiled</CENTER>\n\n\"How come you know all this shit, Miss Jackie Whomever-the-fuck you are?\" It wasn't my proudest moment - just the bottom of my third Shiner chiming in, out of curiosity.\n\nDuring all her animated discussion, I'd watched as the terrycloth robe wiggled down a bit as she kept reaching for another swig. It opened far enough to expose the tops of two wonderful shaped breasts - but damn it wasn't far enough to catch a glimpse of a nipple, close but not quite there yet.\n\n\"My face is up her, Danny!\" she deadpanned the expression as both hands snugged the robe back together. Caught, I couldn't get anything by this one.\n\nI have to admit by the end of the interrogation, I was feeling a bit intimidated by Jackie's calm demeanor. It sounded uncannily like Rita in a way. Uneasy shit. I might just be sitting at a table in a thunderstorm with a diabolical mad-woman - straight out of the movies shit!\n\n\"Who are you and how do you know all this shit?\" I repeated my question, determined to find out how she knew so damn much.\n\nHer face went blank for a bit. Then that sweet smile left her face altogether; it had gone stone-cold serious. Her body language grew tense as she leaned toward me and quietly answered.\n\n\"I work for a small organization. No benefits, but it pays extremely well - in cash. I'm good at what I do, Danny. In my circle, I'm known as 'The Fixer.'\" She breathed a sigh and slipped back in her chair to watch my reaction. I could tell she was studying how seriously I was taking her comments.\n\nI was at least two sheets to the wind as I took in what she said. That is half-way inebriated and dumb enough to say, as I laughed out loud, \"You're trying to tell me you are a 115 pound, 5'3\" hitwoman?\" \n\nI roared with laughter at the absurdity.\n\nIt took a few more seconds to realize she wasn't laughing along with me. She waited me out until my laugh became a chuckle, and then just a soft lump in my throat. Damn she had me going! I almost goddamn believed her. Still she waited me out, cold staring me directly from those beautiful almond sloe-eyes.\n\n\"103 pounds, dipshit! I'm not fat.\" she deadpanned her remark, using my Momma's favorite term for me.\n\n\"And, to be perfectly clear, I never said I was a hitwoman! I just fix screwed up situations - things that need to be 'fixed.' Although, some day it make come to that. I could kill you with one of those toothpicks in the middle of your momma's table and you wouldn't be able to do a damn thing about it!\" she added without a hint of levity in that cool soft voice of hers.\n\nMy heartrate must have been 240 at the last declaration. I was sweating bullets by the time another less smirky smile crossed her lips as she watched my wide-eyed stare.\n\n\"Any last requests, Danny,\" she asked slowly getting up to her feet, \"before I lay you out?\"\n\n\"How about making love with me before you - you lay me out?\" I asked, half in jest, half in wonder if she could really 'off me' with a toothpick. \n\n'How the hell would one do that?' I thought, but quickly shook that vivid thought out of my mind; too damn gruesome to ponder.\n\n\"Shit!\" she swore as if completely surprised at my response. \n\n\"No one ever asked me that before! It's always 'Please, no - Please, don't kill me!' That kind of shit!\" She stood looking down at the knife on the table. Then smiled.\n\n\"You're a nut Danny!\" she added, suddenly slapping the 10\" blade so that it cartwheeled off of the table and up into the air. She didn't even blink, just caught it in mid-air before nonchalantly heading to the sink.\n\n\"Takes one to know one, Miss Jackie Wilson,\" I breathed in a sigh of relief.\n\n\"So, can you really fix this for me - with Rita? Or, were you just shitting me - like your favorite turd?\"\n\n+++++\n\n\"I'll wash, you dry. It's your mamma's place so you know where to put the stuff away,\" she said as we cleared the table. Jackie Wilson, 'The Fixer,' set the last plate in the dish drainer and turned to study me with those dark almond eyes once again. Those eyes that could melt a man's heart like a bar of chocolate left on a hot dashboard.\n\n\"I have a plan in mind, but you may not like it.\" With a wink she continued, \"If you don't say yes to it, then you'll force me to use that toothpick!\" Her lips had that pouty almost playful look.\n\nWe missed the ebb in the rains, we were so engrossed in conversation that we hadn't notice the gradual dissipation. I turned around to dry my hands. Then turning back toward Jackie, I nearly toppled over her and came up short. Her head bumped against my chest. She had walked up behind me, waiting for me to turn around. Without a word, she reached out, wrapping her arms around my waist and hugged me. With the briefest of pauses, I wrapped my arms around her shoulders as though they always belonged there. I wondered what brought this on.\n\n\"Even a Fixer needs some fix'n sometimes, Danny,\" she whispered. \"You seem so - easy -- so right, and in need just like me right now. Give me one night; no more questions; just you and me in silence until we're both exhausted. In the morning, I'll give you the details on a 'Fixer Solution.' Just not right now. Okay? Can you do that for me, Danny?\" Her voice was so soft as she leaned her head against my chest. Her arms wrapped around my waist.\n\nShe squeezed me tighter. I could feel her heart beating against me as her breathing deepened. I could feel her turgid nibbles pressing against me even through the terry cloth robe. We clung to one another without another word spoken. My hardening cock pressed firmly against her midsection. I know Jackie could feel its rigidity pressing against her belly button. Small movements in her hips signaled what she wanted.\n\nShe didn't need to cajole me into joining her. I'd been ready to jump her bones from the moment she leaned into the truck to turn off the engine. The thought of taking her from behind pushed over that wet truck seat had been difficult to put aside.\n\nHer hands slid between us. I felt them untying the belt from the robe and drawing it open. Patiently, slowly my hands wandered down her spine, finding the small of her back. Gently, I scrolled my fingers around the hollow of its basin, feeling her press into me as my fingers slipped into the crevice of her butt for a few soft massaging strokes down the seam formed by her cheeks. I felt her glutes contracting as my fingertips slipped further down her curvature. Her hands tightened around my waist as my finger probed the small tight opening clenched between her cheeks. Each new place I explored was met with a rapid exhale of hot breath against my chest. It was building, slowly, steadily.\n\nBefore the rainwater had drenched her to the core, yet now as we stood here, her body was wet again. A light sheen of slick perspiration began collecting in the small of her back. My hand found another slippery moisture pooling in front, from another source, between her sparce curly-haired mons.\n\n\"I'm going to remove this, Jackie,\" I whispered into her hair as I lightly cupped her petite, firm ass in my hands. I knew by the way she held me tightly and the quickening of her breathing, that there was really no need to ask for permission to disrobe her.\n\nI could feel her head nod against my chest in reply as her arms squeezed me in affirmation. I shifted the robe off her shoulders, letting gravity pull it down. I knelt down. A soft kiss there, between the coarse curly hairs, sent a shiver of excitement through her body. Her hands reclaimed their place around my waist as I stood. For a few moments we held one another. Her breathing was becoming labored. Jackie had not spoken nor did she need to do so. Her mute acquiescence was all I needed as an answer to my earlier question about making love before she 'off-ed' me. \n\nI scooped up her naked, sinewy form in my arms. Her head nestled against my shoulder. That long, soft hair hung down over my arm, brushing against my thigh as I carried her to my room.\n\nJackie Wilson had said she wanted it in silence, gently. I did my best to give it to her that way as I turned off the light and slide next to her as the storm raged outside. In the dark, my lips found her eyes, kissed them, and her cheeks, her ears, and traveled down her neck to find her nipples as firm as raisins. Her breathing was growing more rapid and quicker as I explored both breasts, tugging at her nipples to draw upon her excitement. I could feel her legs clinch as the nerve endings sparked a reaction between her thighs. Her hands found my head and guided me, downward. I could tell she was a woman who knew what she wanted. Knew, too, how to direct a man toward fulfilling that increasingly growing need between her legs.\n\nMy lips traced the contours of her sex until she couldn't bear the exquisite torture any longer. Her breathing grew quicker and the sounds it made huffing out of her open mouth urged me onward. My breath flowed across her mons as I exhaled into her folds. Her legs jerked in response. I replaced my lips with my tongue reaching as deeply as it could into her pussy. It elicited a sharp moan. Unable to hold back any longer, Jackie drew me upward until my cock slid into her swollen slit. There was no gentleness left -- just urgent need -- as I slowly slide all the way into her sex without pausing. There was no need to wait for her to adjust to my penetration. She was already slick and her mons was offering easy access.\n\nWith commingled groans, we fucked one another until we collapsed, neither of us concerned by the raucous pitching of the bedsprings. Jackie found her voice in the darkness. \n\n\"Fuck!\" \n\nThe singular word clawed its way from deep within her throat to reverberate like thunder rolling across the room. Finally, her release came. Her thrown back head and marathon breathing stopped as her body shuttered against me. I felt the auto-reflex movements of her Kegal muscles squeezing my pulsing cock as I held it bone-to-bone and came into her vagina. When her spasms stopped, she gasped in fresh air to replace that which she expelled as she came. Jackie's rigid body unwound next to mine. She was drained -- just a small child-like woman basking in a hard sexual release.\n\nNeither of us could move as we drifted off to sleep. Other than an occasional moan or grunt for one of us, not a true word was uttered. Silence, for the most part, just as she requested.\n\nAroused from a deep sleep, around two hours later, I found her lips coaxing my dick back to life. Then she mounted, like a cowgirl, and rode it until it was lifeless once more. When she was unable to revive my limp cock the third time, she settled for sitting on my face and riding my tongue until my face was covered in her nectar. Near dawn, I needed her again and rose over her. My loins meshed with her own as her body's rhythm began to match my slow gentle movements. I rocked into her until I couldn't keep that pace and the rains within my taunt nut sack unloaded. She was finally placated - exhausted to the point of collapse.\n\nTurning, until her breasts were pressed into my ribs, her ragged voice whispered to me, \"I so needed this, Danny. Thank you.\"\n\n\"You? God, I needed this as much as you did, Jackie. It's better than ...\" I started to say but Jackie finished my thought.\n\n\"... paying to see a shrink or ass-polishing a bar stool with some beer buddies!\" she murmured as her breathing slowed.\n\nShe nestled her head against my chest, growing silent again. Her breathing eased into a steady rhythm as she grew quiet. Holding her in my arms, we dropped off into a dreamless, satiated sleep. It was ten-ish when I heard doves cooing outside in the pecan trees. Jackie was still cuddled in my arms, asleep. I touched her delicate nose. Her face seemed so childlike resting next to me. She stirred, opening her eyes. They peered up into mine, studying my face in the morning light.\n\n\"God! You're real. I thought you were just a dream,\" she said, with the first sign of sincerity that I had heard from Jackie Wilson. It came in the form of a gentle whisper, \"A good dream though, Danny.\"\n\n<center>Jackie And Danny's World Collide</CENTER>\n\nI really needed that night's stress reduction -- the night Danny's and my life collided on that stormy bleak road. Cooking for Danny provided some solace for what happened earlier. Afterward, feeling Danny between my thighs was so cathartic as well. \n\nThe nearly botched job I had just completed moments before he sped past me rattled my bones to the core. Jesus, I nearly got killed -- both times! The first when I had to confront the target inside the Fed's safehouse and the second when Danny nearly ran over me as I peddled away on a bike in a torrential rain storm. I had to escape from that near deadly situation. That Fed bitch nearly shot me -- twice!\n\nAdmittedly, at first I needed that sexual release and just took advantage of Danny like some boy toy that evening. But as the night moved toward dawn, I found Danny genuinely enjoyed drawing me into a roiling cauldron of sexual passion. I found the desperation and fright from near death events slowly draining out of my body with each climax that I took from Danny -- or the ones he lovingly gave me in the early morning hours. I toyed with the idea of hanging around for a couple of more days of rest and relaxation -- a bit of R&R, as my old job used to call it. \n\nShamelessly, I forced his body down onto the bed and slipped down over his cock. I was on a mission, seeking to drive away the fear of death that had rattled me earlier that evening. I felt the throb of my heart beating against my chest cavity like a sledge hammer as my breathing deepened. Leaning forward, I let his lips and teeth latch onto my turgid nibbles. It felt so exhilarating as he alternated sucking my firm buds and rolled each one around with his tongue. I could sense the surge of electricity jolting back through my nerve endings, coursing its way back down through my cunt. I fought like hell not to clutch his hair by the roots and slam his head against my breasts. \n\nI wanted him to suck all of my tit down his throat, hell both tits at once if he could do it! Just two minutes into it and my blood pressure must have been off the scales. I could feel my wetness flowing between my thighs as I rose up and plunged down again and again onto his cock. The thrusts grew noisier as the lubricity of my excitement flowed over his thighs and I slammed down upon him. Danny really got into sucking in each bud and enjoyed grating them between his front teeth. Then, as if it couldn't get any better, he added his fingers seeking out my clit, pressing alongside it, forcing more friction against his cock as I rode him. It sent waves of intense pleasure and an unabashed squeal from deep within my throat.\n\n\"Fuck!\" escaped from between my clinched jaws as his robust finger stirring found more nerve endings. His tongue burrowed into the tips of my nipples, forcing them down into my orbs. \n\nThen at some point in the maelstrom, amidst an intense shutter of pleasure, we paused, clinging to one another without another word spoken. The firm tugs with of his teeth on my nipples gave way to gentle kisses. The hurried escape of air from both our lungs slowed down a bit. My body spasmed under its release and seemed to wilt as Danny's strong hands wrapped around my waist for support. Lust begged for a moment of calm within the storm raging outside and the storm still building within my loins. I rested upon him; my breasts plastered against his perspiration-soaked chest; my legs splayed on either side of his. His pulsing cock still buried deeply inside of me, still unsatisfied. I rode the first wave of lust that had enveloped us for my own pleasure -- it's release drove out some of the fear as the dopamine high surged through my senses.\n\nThe second, comforting ride belonged to Danny. I almost turned to jello at that point. He rolled me over onto my back. My breathing was still just under a marathon runner's gasp for air. He wasn't in a hurry. His gentle hands slid beneath my shoulder blades and his fingertips curled up over my clavicles; gripping me. I felt his breath over my eyelids in the darkness -- then he kissed each one lightly. Those lips turned hungry when they found mine and our tongues entwined for a few moments before I surrendered and let him suck my tongue into his mouth. I felt my body melting beneath him. All 103 pounds pressed into the mattress until he lifted himself up onto his elbows. \n\nThousands of years of instinct flowed through my body. My legs drew upward taking on the butterfly pose. Opening them like welcoming wings, I welcomed his penetration. I know he felt the tension drain. That's when he moved, tenderly, slowly as the rains outside poured down against the windows. He build the lust back up into a flame again; until my hips matched him thrust for thrust. Finally, I heard his groans as he spued forth his own version of rain into me, as sweat dripped from our bodies. We came in subdued silence. Just the huffs of our breathing sounded along with the rampaging storm outside. \n\nWe had perfected the ancient euphemism 'Clouds and Rain'- the blending of male and female, sky and earth, and created rain -- the product of a climax between a couple engaged in sensual intercourse. \n\nI held Danny in my arms. He felt so good nestled against me. The dreamless sleep of sexual exhaustion relaxed his body and I felt the tension in his muscles go limp for a few hours. ",
        "Mine, however, was a mixture of uneasy sleep and dwelled upon the thoughts of what was going on down the road. It must now be a melee of FBI and local cops down at the safehouse trying to figure out what happened. No way in hell was the agent in charge going to admit a single, sword wielding girl overpowered three trained Feds and got away with just a whispered mixture of Spanish and English to the cowering cartel witness. Added to that embarrassment, she was missing her service weapon and her credentials. Try and explain that to your supervisor! You may think that cruel of me, but, hey, the bitch tried to put two bullets into me!\n\nThe best I could hope for, at this point, was I had struck fear into 'the rat' and he would remember my threats if he didn't tell the truth at his deposition. Definitely, the rat knew I had his number -- I saw the fear in his eyes as he gazed into my own cold-as-hell sloe-eyes. He was smart enough to know that if I could get to him in an undisclosed Federal safehouse, I could find him in the witness protection program and complete what I threated. I wanted him to wake up in the middle of a cold-sweat nightmare, grabbing for his balls and feeling a cold steel blade pressing against them; night after night for a good long while.\n\n+++++\n\nI used Danny twice more before sunrise. Slower, now than the times before. Each time helped salve some of the angst of near death experiences. He didn't say no -- I guess he needed it as much as I did. At dawn, he couldn't get it up -- men -- so I rode his face for one more cream-lipped orgasm. That one was especially prolonged and felt like riding a stallion at full gallop until I came. My gasping, satisfied body rolled off Danny and snuggled against his warm, soft skin. He held me tight. Kissed my lips, my eyes, and whispered, \"Good night.\" I dropped off into that dreamless sleep of sexual exhaustion until mid-morning.\n\nIt was cute the way he looked into my eyes as I woke up in his bed after the torrential storm. His finger tip just glided across my nose to awaken me. The cooing of doves outside sounded so peaceful -- as though all the cares in the world had been suspended in time.\n\nThen, with his hand in the hollow of my spine, and my naked body pressed against his, he whispered ...\n\n+++++\n\n\"Jackie, I think I love you!\" spilled softly out of my lips before I had a chance to pull the thought back into my ramshackle mind.\n\nHer face lit up with a wicked smile at my declaration, \"Then for sure I have to get a toothpick and leave your body in bed for your mother to find!\"\n\nLast night's wry humor re-ignited in that smile, this morning. It still seemed to tickle her fancy again.\n\n\"I could make coffee for us then before you 'off' me?\"\n\n\"I like mine straight out of the pot - no sugar - no cream,\" she growled playfully as she rolled on top of me. She spread her legs, letting her knees come to rest on either side of my hips. I felt the softness of her mons glide up and down over my shaft, slowly, just barely moving. It was enough -- my cock got the idea, stiffened, then eased inside of her, matching her rhythmic movements. She had that Cheshire cat smile going on as she watched my face lit up as her take charge attitude emerged.\n\n\"But coffee can wait fifteen minutes, sugar, while I 'off' you again,\" she declared with enthusiasm.\n\n+++++\n\n 'Larry, my personal bartender, might be right. I might just get used to living with the smell of Rita's shit that I was in - if I could keep 'The Fixer' in my life. Then, perhaps, life might not be so bad! \n\n+++++\n\n<center>Jackie Wilson's Recollection of Brushes with Death</center>\n\n<center> Disintegration of 'The Rat's' Fixer Solution </CENTER>\n\nI needed that fifteen minutes of sex before breakfast coffee -- being wide awake and in control. I needed more of riding Danny to wash away the latent fears of yesterday's brushes with death! I thought about what Danny professed, 'about being in love with me.' I knew it was just a rebound sensation from enjoying sex without an attachment after being screwed over by Rita. It was merely a cathartic release for both of us. Mine for psychological healing; his to vanquish the trauma from divorce.\n\nHis momma was right though -- Danny was easily pussy whipped! Had I stayed for very long and then disappeared, I could tell he would be back in that bucket of shit feeling he morosely spent his time with for the past few months. My job didn't allow for personal feelings to mix with business. A one-night stand was the best thing for both of us at this moment. I couldn't give Danny anymore that that. To do so would have been so selfish.\n\nJesus! What a nightmare that safehouse breech had been! The Fixer Solution was supposed to be a simple design. Target Sabatino Marquez 'The Rat' Sanchez and give him a vile warning that he could be had anytime, anywhere. Just spark a fear that pierced his soul like a red-hot glowing nail going into his eyeball; one he would remember when he got on the witness stand to testify. All he had to remember was to tell the truth, the real true, and not the 'truth' he conned the Feds into believing. \n\nHe garnered a witness protection plan out of them as his reward. The Feds thought they have flipped him, but they were dead wrong. The rat spun them a tale of Gloria Moreno as a shadowy operator of a drug gang out of Juarez. He gave her up. She denied it. Yet he had a lot dirt on her -- all fingers pointed to Gloria. The mountain of fake evidence indicated she was the boss. It was made up crap 'The Rat' fed the Bureau. Gloria was the innocent -- held by the rat for five years. He used her, abused her body, and made Gloria Moreno into a patsy to cover his tracks. He held her family's life over her head as leverage; typical syndicate manipulative crap. He even taped photos of her family over his bed as he stripped her and took her as a reminder that she was his to do with as he wanted. Gloria served as a courier crossing the border between the cartel and Sabatino Marquez Sanchez. That cunning coyote used her to his advantage.\n\n+++++\n\n<center>The Fixer Plan was Simple, Except for the Damn Weather!</center>\n\nMy plan was to hide my Maserati in a nearby garage for a fast escape. Jack and I had previously scouted the place, the lay of the land, the neighbor's backgrounds, and their coming and goings. I chose to stash my car in the garage of a couple going away on a cruise to the Caribbean so that was no problem. \n\nThe problems started with the damn weather! \n\nTraversing the ravine was difficult. As I made my way across the slippery caliche on the steep walls of the ravine, the furious winds drove rain straight up the jean-shorts I had on and right up the crack of my butt. I swear if there were fish in that stream the gale force winds would have driven them straight up my crack too! The rain created a torrent of water and was nearly impossible to cross. As it was I lost my footing and my go-bag with the tie straps and flashbang grenades were carried downstream. I was lucky to hang onto my sword strapped over my shoulder and down around my back as I clawed my way up the embankment in the torrential downpour.\n\nAll I had to do was traverse the ravine behind the safehouse and gain entrance. Disable the three Fed agents. Menacingly tickle Sabatino Marquez 'The Rat' Sanchez's testicles. The ones he is so proud of, with my short blade sword. Deliver the message that I could get his balls anytime and anyplace I wanted. More precisely, 'Tell them the truth or I will cut your nuts off!'\n\nThat was all I had to do! Simple plan. He loved his nuts! No way in hell was he going to risk being tracked down and lose his precious manhood!\n\nThe Feds had been playing rummy with 'the rat' when I tossed a wrought iron chair through the patio window. At first no one reached for a weapon. Surprise was written all over their faces as I bolted in right as the chair crashed into the kitchen table. One, two-and-a-half, three-and-a-half, and they were down, stunned. The first Fed went down easily with a fist to the throat. The second one I spun up and over my head slamming him onto the table, back first, knocking the wind out of him. The third I swept off her feet with a kick spinning motion at the knees. The rat was the last, stunned by a sharp left jab to his nuts as I slide across the floor and nailed him. \n\n'Improvise!' Jack had drummed into my head in situations such as these. Ripping cords from the blinds, I tied up the Feds as quickly as a rodeo calf roper could manage. Then turned my sword's attention to the groaning and moaning, balls holding rat curled up on the floor. It put the fear of God into him as I spun the sword around and snapped it still, barely an inch from his nut sack. I had confidence, lots of practice, so I wasn't worried about leaving a mark.\n\n\"\u00a1Diles la verdad o te cortar\u00e9 los cajones! Or I'll find you, I swear to God, no matter where you hide and I'll cut them off! ...\" was as far as I got when, suddenly, the lights went out as the storm railed against the safehouse walls. \n\nA split second later a muzzle flash lit up the room. The lady Fed had managed to get loose and was firing blindly toward the sound of my voice. The same instant 'the rat' jerked in a reflex action. I moved instinctively spinning around as well. It was unfortunate for 'the rat' as I heard him squeal in some pain. Guess he got a little too close to the blade under the circumstances; not sorry about it, though. I rolled toward the Fed's voice, as she shouted out for her team to stay down. They were still well hog-tied unlike the wily female escape artist. I knew she was intent on unloading the mag into anything that moved.\n\n'Close the distance, always!' came my trainer's voice as my fist furiously landed a blow mating with the Fed's cunt. She folded, dropping her weapon. I owned her gun now, took her credentials as well, and sheathed my sword slipping out amidst streaks of lightening flashing around the safehouse. The Fed lay doubled over in pain. Served her right, I'd had only tied her up - not tried to kill her, but she didn't return the favor. I grabbed an old bike leaning against the wall and headed down the driveway at a furious pace, silently into the blinding rainstorm. A trail of gun parts lay behind me as I peddled away, while disassembling the Glock 47 and discarding parts like gum wrappers on a New York City street. I kept the credentials; they were worth their weight in gold; if I needed a new cover.\n\n+++++\n\n<center> Danny's Fixer Solution -- Revealed</center>\n\n\"Danny, 'Fixer Solutions' are designed to be simple,\" I explained. \"The less complicated the plan, the fewer snags are likely to be encountered. Yours isn't that easy. It does require your buy-in and your participation. It also requires your silence. \n\nMy boss doesn't make allowances for the last requirement - you remain silent or he calls you out to his place for a last supper before you part ways. Understand?\" \n\n+++++\n\n\"Holy Shit! Holy, Big Bucket of Shit!\" \n\nI was muttering, holding my head with both hands as I stood at an old icehouse on the far side of town. One with no cameras, few customers, and filling a red metal, two-gallon gas can. One just like the plastic one I knew was still sitting next to my lawn mower in my not-yet-paid-for house. Jackie remained behind the wheel of her Maserati, her hair pulled back and wearing dark shaded sunglasses, as I set the container back into her trunk.\n\nI agreed to this, but I still couldn't believe I agreed - so eagerly!\n\nYes, I wanted Rita out of my life, but this was so damn crazy!\n\nJackie had outlined her plan at brunch the day after the storm. With all the rain, there was no construction that day. So it unrolled quickly. I drove her down to her parent's house. That was an eye popping trip. She wore my robe home. As I sat in the truck, she hoisted the garage door with one hand. Staring me in the face was a damn bright red Maserati GranTurismo. Who the fuck drives a $180,000 custom car! \n\nJackie Wilson watched my jaw drop as she stood beside it. That smile, that grin of the Cheshire cat spread across her face again. Then she just shucked my old terrycloth bathrobe and stood stark naked in the middle of the garage as if everybody does that! She popped the trunk and pulled out fresh clothes and dressed quickly, tossing her old garb and my bathrobe into the trunk. \n\nI drove old Rusty Bucket '67 to Mamma's house and Jackie's sports car followed. Really nice ride, far better than Rita's new gold Cadillac! We set out to execute Jackie's plan as she drove quickly past an old house down the road full of cop cars.\n\n \"Drug bust?\" I hazarded a guess.\n\n\"Not likely, probably just a domestic disturbance. Your neighbors don't seem to be the type to run drugs, do they?\"  Jackie casually tossed in her two cents worth on the situation as she shifted to manual mode and hit the accelerator picking up speed virtually flying past the parked police cars -- she was definitely In a hurry!\n\nI contacted my life insurance company and had them make the 70-10-20 survivor changes Jackie dictated. I drove over and signed the papers, dropping a copy off at my lawyer's office with instructions to forward a copy to fucking Rita's lawyer. Next step, mailed a same day delivery copy to her home at the post office. \n\n'Glad to piss on Rita's day that way.'\n\nA call to the vet and they were only too happy to let Rita know that Humpy needed his vaccinations. When she said she didn't have time to take care of that, the receptionist told her I had volunteered to stop by and take Humpy for his shots. I would have liked to have been a fly on the wall when Rita got that call; but I wasn't. However, Rita did leave me a message to come and get my sorry ass-licking dog for his shots and have him back before 6:00. I recorded that call per Jackie's instructions! Humpy was so damn glad to see me that he peed on her brand-new rug when I knocked!\n\nJackie had tailed Rita to a beauty salon. That was going to be a long day for sure. She also tracked her new live-in boyfriend to his job. He was a damn gym trainer, a 'master' of aerial yoga of all things, guess that's where the hanging from the ceiling setup came from!\n\nWith the house empty, Jackie must have sprung into action. I didn't meet up with her after she dropped me off at Mamma's place to take on my assignments and she hers.\n\n<center> Overwatch</CENTER>\n\nBinoculars in hand, Jackie Wilson leaned her shapely butt against her red Maserati GranTurismo. It was backed into an isolated blind spot behind a city refuse pickup point near the interstate cloverleaf. From her vantage point, she was standing overwatch at the forthcoming crime scene. This petite stick of dynamite coolly waited for the first plume of smoke to curl up from cracks in the closed garage door at 2424 Happiness Lane. \n\nAt the first sign of smoke, she bounded into her Maserati and hightailed it off the bridge hitting the highway back to the center of town. The pending explosion would blow out the garage doors and send spectacular flames shooting to the rooflines. There was no further need to stick around -- she wasn't intent on getting caught in some freak, chance social media recording by gawkers stopping to see the show. \n\nDanny's problems with Rita, his Ex, were about to come to an end. The rest of the details, Jackie planned to catch on the evening news. Her anonymous tip on an incendiary type house fire to a go-getter-gal from the local television station would be sure to make the afternoon breaking news hour. \n\n\"Fortunately,\" the on-site reporter would declare to her followers, \"the residents were not at home when fire consumed the entire structure.\"\n\nThe Fixer's adrenaline was pumping. Jackie's internal dialog cautioned her to keep a light foot on the gas pedal while weaving the flame red Maserati through traffic. She wheeled into a one-stop service copy place. Printing copies of the images she'd captured from that same bridge just under an hour ago, she sealed them into an 8x11 envelope. Addressed it to the hot babe down on the road doing her best to sound like an authority on fire control. Anyone listening to the news hour recognized the broadcaster's intense demeanor as she commanded the camera crew like a drill sergeant. \n\n+++++\n\n<CENTER> Jackie's Con </CENTER>\n\n\"Jackie,\" my trainer said, \"always pick the youngest reporter! They're eager to please and will get the job done. They want the credit and always hunger for that next level of promotion.\" \n\n 'Miss Turner fit the type!, I had decided, slipping the envelop across the table to the smiling, cute, and flirty redhead on the other side of the photo copy counter. She had her eye on me from the moment I entered the establishment. It was a girl's interest in another girl type of eye movement.\n\n\"Sugar,\" I gave her a wink and nice grin back as I slid the envelope over, \"get this off in today's mail, please!\" \n\nFrom my first day on the job, I always found Jack Wilson's instructions to be meticulously dead on. He was damn good at what he did. He trained me to be the same -- \"The Fixer\" is what he nicknamed me and to this day, the title has stuck to me like 'stink on shit.' Most folks might say it was like 'white on rice,' but being Asian American, I'm not fond of the latter colloquialism. Out of my mouth and given my skin tone, that sounds just so wrong!\n\nIt had been more than twenty-four hours since I last checked in with my boss. Too long. Out of protocol; I knew he would be looking into that.\n\nBut I needed the time to set up Rita and Terrance in my sting. This was an off-the-books operation to help Danny -- not sanctioned by Jack Wilson. Had it gone wrong, he would have burned my ass with a blow torch for a non-sanctioned operation. It's not like he could fire me though. Technically, I wasn't an employee, just a girl collecting on independent contractor work. \n\nAlthough, I suppose he could have taken me to the desert and had me dig a grave with a shovel. But then too, he knew what I could do and had done with a shovel in the past. Jackie Wilson just needed a short blade sword -- or - a toothpick to work her magic. But if that wasn't available, my hand-to-hand combat training would suffice. \n\n+++++\n\n<CENTER>Jackie Wilson's First Job Interview</CENTER>\n\nJack Wilson had laughed at me when we first met for what I thought was a job interview for a security agency. I told him straight up I had washed out of the Navy Seal training program after eight weeks. He tried his best not to laugh. I knew why. It was a ridiculous requirement that a hundred-and-three-pound woman carry that much crap on a mission. Fuck'n Seal go-bags weigh more than I do!\n\n\"Got any other skill sets?\" he asked falling back into his professional, non-snickering mode.\n\n\"How 'bout four-years at the New York Renzo Gracie Academy under John Danaher and Renzo Gracie? Both trained me in hand-to-hand combat using Brazilian Jiu-Jitsu and Submission Grappling.\" I smiled as I answered.\n\nHis eyebrow raised, a bit. \"Proof?\" he asked.\n\nI reached into my pocket and retrieved my phone, showing him a video. He watched my championship match and handed me the phone. I could see he was impressed, though he tried not to show it.\n\n\"Got any more?\" he inquired.\n\n\"This is me with my Dad at home training,\" I flipped on the next video of a vigorous sword workout around my eighteenth birthday and shared it with him as well. It was an ambidextrous, two-handed workout session against four others using practice swords and padding. I kicked their asses. Then showed him another workout with actual blades against several trees and Halloween pumpkins. I tend to empathize with the trees in that one every time I review it.\n\n\"I also have a degree in forensics accounting, if that helps,\" I added as an afterthought, to point out that I wasn't just all slice and dice; I had smarts, too.",
        "\"Think you could put on forty pounds and stay in shape with that weight?\" he asked with a damn straight face.\n\nI was crestfallen. What the hell? Did he really expect that kind of crap? But, then my Dad's advice came to mind, \"You are who you are -- be that and proud that you do it to the best of your abilities.\"\n\n\"Fuck, no!\" was my emphatic answer. Said as politely as my Navy job-interview skills could muster.\n\n\"I can live with that,\" his sardonic laughter responded, \"and I can train you for the rest. Eat your lunch. You need those four ounces!\"\n\nIt took a second to realize he was joking about the forty pounds of added weight remark. That was the day I first met Jack Wilson, an imposing, Oak tree-sized man, skilled with numerous tools of his trade, and a mind as sharp as a steel trap -- ready to spring into action -- if it was required. That meeting was the same day he changed my name to Jackie Wilson and nicknamed me 'The Fixer.'\n\nIf you are wondering about the names, well -- I don't know his real name even four years later or if he is the top man -- just get my orders via his words. But I know there at least three other Jackie Wilsons in the organization doing what I do. All are pseudonyms to protect our true identities. None of us work together. One mission - one woman. Our mission: Identify and fix problems that fall outside of normal investigative parameters.\n\nI don't ask who foots the bill. That's not my concern. Working within my parameters is the only thing that concerns me. I still try not to harm anyone, critically anyway; just a few bones and teeth sometimes, but they get to live. -- Yeah I hang on to that philosophy from my Dad's point of view -- but someday I know that's bound to break given the bucket of shit that hits the fan in some of my assignments.\n\n+++++\n\n<center> Priming the News Reporter </center>\n\nThere was no doubt in my mind that Alice Turner, fledgling news reporter, would turn this into a major self-promotion. She would work the angles with the police and get exclusives to the investigation -- in return for getting the photos of Rita and her new aerial yoga instructor/boyfriend. The photos show the arson scene at the house for which Danny was paying. It had been Rita's for a short while, by deceptive divorce means of course! It was a wild month in which she used it to entertain her move-in boyfriend, Terrance. Rita fucked him like a feral cat and fucked over Danny figuratively as well. Miss Turner would dig up all that dirt, eventually, I knew. It would be prime time reporting as Rita and Terrance would, eventually, stand stone-faced before the criminal docket judge.\n\nFrom what Danny spilled his guts about her, I knew she was a gold-digging bitch. Knew too, that the insurance policy she had him take out for half a million dollars was a dark and dangerous plot just waiting for the right time to explode. So, I didn't wince a bit about conning her and her fucking weasel lover to bite into a scam to torch the place. Sometimes you have to set fire to a buck of shit to get rid of the stench! I gave them instructions on how to stage a fool proof, delayed ignition. It would look totally accidental, I assured them, and allow them to be elsewhere when it went up. Suckers, both.\n\n+++++ \n\n<center> Danny Gets the News</center>\n\nI was at the vets with Humpy waiting for the doc to call us in for his shots. The news hour was on the lounge television when a breaking news story about a new home fire erupting in massive flames was announced from an on-the-scene reporter. I found myself smiling as Humpy tried to mount my leg. Not because of Humpy - just the address of the fire.\n\n+++++\n\nArson investigators contacted me the next day. My name was on the deed as well as Rita's. They found a probable source of the fire: a lawn mower gas can nearby the hot water heater. Fumes, they figured, had gotten into the pilot light and set off the explosion - or someone made it look that way.\n\nAs instructed by Jackie, I told the investigator I didn't live there. Just my Ex and her new boyfriend. The investigator's eyebrows went up. Jackie had said that would happen. It would take me off the probable suspect list since I added that I was at the vet with Humpy at the time of the fire. I offered to show him Humpy's bill. He just looked at Humpy with a grin and asked Humpy, \"A man who takes care of his dog - can't be an arsonist can he, Humpy?\"\n\nA police investigator came calling next. Wanted to know my whereabouts for the day before. I laid out my day for him: insurance beneficiary changes, a trip to my lawyer, the post office with cameras undoubtedly, a stop by my Ex's place to pick up Humpy, and then I was at the vet's office when the fire started. Consistent with my report to the arson investigator. I let him know my Ex did have a new live-in boyfriend, however. That raised his eyebrows just like the arson investigators.\n\nI put a call into the insurance company and the mortgage company to tell them about the sad and heartbreaking news. As for me, they had both good and bad news. The bad news was that the insurance didn't have replacement value premiums. I wasn't getting enough money to rebuild the house without coming out of pocket for the balance.\n\nThe good news was the amount covered the mortgage balance, just as Jackie stated it would. It also covered damage to household items clause for $10,000. I smiled at that. Rita had over $30,000 of goods I had paid for, but she was only going to be able to collect the $10,000. Pissy, I know but that sort of felt a little bit good to me. At least ass-hole wouldn't be wearing any more of my clothes!\n\n+++++\n\nThe news of the day only got better!\n\nI was in contact with my lawyer again. Jackie's instructions were to confirm that the divorce settlement stated that at the loan payoff, Rita only got the proceeds from the sale. \n\nBingo!\n\nThe loan would be paid off by the insurance company. The sale value of the home would be - nothing! It was gone! Nothing in the settlement said I had to replace the home if it was lost. Her lawyer's hadn't thought of that; neither did mine; but demur Jackie did!\n\nIn fact she told me to make an offer of a 'damn dollar' to take back the property after explaining to Rita that she would have to pay for demolition of site and haul-off of the fire debris plus the fire department services cost of putting out the fire! Rita went ballistic when she found out I didn't have to pay those charges. Since the burnt shell was hers now - free and clear - as the saying goes. That golden nugget felt really good to deliver!\n\nRita took the bait without contacting her lawyer. She was royally pissed. My lawyer delivered the offer and picked up the paperwork from her temporary living quarters - her momma's single wide trailer over by the campgrounds.\n\nMy lawyer said the dollar offer was crazy when I picked up the quick-claim deed. \n\n\"Why do that?\" He asked quizzically.\n\nI said, \"Crazy like a fox - is only half of it! I own the land now free and clear. The foundation is fine. I can clear the site for around $1,600 and put up a new house for less than paying a builder to do it - I'm in the business you know? I have a 'silent partner' to help foot the bill.\" I said with a grin as wide as the Rio Grande!\"\n\n+++++\n\n<CENTER>One Month After The Fire</CENTER>\n\nI was onsite clearing debris when the arson investigator, Humpy's friend, drove up. That was about a month after Jackie disappeared. I was damn surprised when he opened the door and Humpy scrabbled out and into a dead run toward me. Grabbing him up, I got my face washed like I was a bowl full of vanilla ice cream. I looked at the detective with raised eyebrows.\n\nHe just smiled and answered my raised eyebrow question, \"He's yours now. Seems the judge downtown at the criminal division decided your Ex wasn't fit to have him - seeing how she's locked up and all.\"\n\nI could have shitted a brick when he said that. \n\n\"How the fuck did that happen?\" I practically screamed with joy.\n\nHis bemused loquacious voice answered, \"The police department got an envelope with timestamped photos of Rita and her asshole sidekick together in front of the house from a television news reporter. She got it in the mail from an anonymous source.\"\n\nHe pulled open an envelope and showed me copies of the evidence. Asshole was holding a gas can in his hand while kissing Rita and laughing next to the water heater. Another showed the fucker pouring gas on some newspapers and putting both next to the hot water heater while she watched with a big shit-ass grin. The time stamps were forty-five minutes before the explosion.\n\n\"Holy Bucket of Shit!\" I exclaimed genuinely surprised.\n\n+++++\n\n[For the last month I was dead certain Jackie Wilson had set that fire! But she disappeared that same day without a trace before I could ask. I'd even gone down to her parent's place to check with them when they got back from their second honeymoon Gulf cruise. At least that was the house I went back to where she drove her Maserati out of the garage the next day. Damn nice Maserati -- not gold though, thank God.\n\nTurns out they didn't have a daughter named Jackie. No kids at all. \n\nSo ... who the fuck was the beautiful sloe-eyed angel that turned my life around?]\n\n+++++\n\n\"Yeah, go figure.\" The investigator said, \"They claimed some oriental woman conned them. Claimed they could make a lot of money by burning down your house and get double the insurance money if was declared accidental. Your Ex claimed the woman belonged to some mysterious organization and that she was 'The Fixer' who helped people make a lot of money in this kind of stuff. Fucking goofy story. I can't believe your Ex and her yogi-lover thought we would fall for that bucket of shit. Damn glad someone got those pictures of the two of them in the garage!\"\n\n\"I can ... I mean, you gotta know my Ex, detective. She always went for the gold!\"\n\n\"Guess now she is in a deep bucket of shit?\" I asked, not really giving a damn about it. I was feeling a bit of relief, too. I thought it was Jackie, but it turned out she fixed it so Rita was the source of the fire. Rita and her live-in aerial yoga lover! Served them right!\n\n\"I can see you're all kinds of broken up about that, Danny.\" He replied with a wide golden grin perfectly matching his gold shield. Oh! By the way, the criminal judge said to tell you, you don't have to send anymore alimony checks to your Ex. She's not going to be needing them for the next sixty years.\n\nGood luck with the new build. Looks like you're going to make out like a bandit on this Fixer Upper!\"\n\n+++++\n\n<center>Life Is Like a Bucket of Shit - Not Chocolate</center>\n\n<center>Copyright by dmallord, 2021, USA, All rights reserved.</center>\n\n<center>Published Exclusively by Literotica.com,</center>\n\n+++++\n\n<CENTER> CONCLUSION</CENTER>\n\n\"Hello Jack! Yes, it's Jackie Wilson, the realtor out here in El Paso! I spoke with the fellow interested in buying your property. I gave Mr. Sanchez my usual sales pitch and he understands the terms and conditions. He is highly motivated and gets the point about the sharp competition he faces. I expect he will close quickly. Good luck on the sale!\" \n\nThat was the message board drop that I left for JW. All code speak for informing Jack Wilson that 'The Rat' understood what would happen to his 'cajones' if he didn't come clean at the deposition: a sharp sword would be looking for his family jewels. \n\nI had made a jail visit to his cell and served him lunch two days after the safehouse location went belly up. I stood at the cell door -- just staring waiting for any sign of recognition. It's funny how the dawning look of recognition spreads across someone's face as fear instantly follows it. I just watched -- watched and reached over my shoulder to pull the hilt of my sword up from under the collar of my police uniform and then slide it back down. I heard the tray clatter to the floor as I walked away. He got the reminder; loud and clear.\n\nI would track the case for another two months before the Feds turned Gloria Moreno loose on the streets for lack of an indictment. Alone on the streets, she had no job, no skills, and no funds. I watched her from down the street. She couldn't make up her mind to walk left or turn right. Just stood on the corner in a daze outside the Federal lock up. That's how the system works. \n\nI rolled up next to the curb and looked at her through the window. She seemed to recognize me even though we only met twice and I was wearing a police officer's uniform at the time of her arraignment. I motioned for her to get in the Maserati. It didn't take a genius to see she was broken, fragile and susceptible to being picked her up standing on street corners. Time to get her grounded in a new identity and new life before she gets sucked back into the Mexican Cartel world again. She had knowledge of the cartel inner workings, knew the ropes, perhaps as a Fixer I could use that to my advantage somewhere down the road ... \n\nTime to fix Gloria Moreno's situation for good, this time -- she needed to rendezvous with her lost family and put her past life behind her.\n\n+++++\n\nAs for Danny, I check in on him from time to time. Not actual contact -- just electronically, to see that he is doing okay. His social media tells me he started his own construction company. Rebuilt the house he and Rita lived in and sold it for seed money. I had arranged a construction loan for him from a local mortgage firm -- he didn't have any credit -- but the loan officer who arranged for it wasn't exactly unaware that I knew he had a dalliance with Rita for a while. He had met her a few times to arrange for signatures on their burnt to a cinder home -- at a local motel for several days the week of their signing. Amazing how a short blade sword scratching your balls in the middle of the night as you wake up can be so damn persuasive.\n\n++++\n\n<center> Thanks for Reading My Story! </center>\n\nPlease, rate and favor this one if it held your interest. If you have a few moments, kindly make a comment on this work for me. How about your view?\n\nIf you liked the humor please give me a 'high five' -- otherwise I'll take what I can get! If you have a minute, please leave me a comment. Did this come across well for you?"
    ],
    "authorname": "dmallord",
    "tags": [
        "humor",
        "mystery woman",
        "arson",
        "consent",
        "sensual sex",
        "male female",
        "ex payback",
        "criminal investigation"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/life-is-like-shit-not-chocolate"
}