{
    "title": "The Cursed Tattoo Pt. 08",
    "pages": [
        "The Castle Run\n\nEllie spent some time \"interrogating\" the captured ninjas. No one else was allowed in the room. Luckily, there were no obvious screams of pain and terror, or anything. Once she was done, she said they had revealed everything to her.\n\nThey were all members of an ancient occult society. The society knew of the witch who had given the spell to Ryan. They knew she'd given the spell away, but not to whom. They had searched the city for months, finally finding Ryan. The ninjas had come to kidnap him.\n\nAfter several days of further research, Eleftheria had devised a plan. The amulet she found on the ninjas turned out to bear the symbol of their secret little club. She determined their current base was in Germany. Ellie told everyone they would need to go there and handle the cult, one way or another, or these attackers would just keep coming. She also managed to convince everyone that a key to breaking the curse could be found there.\n\nEllie gathered everyone together to explain the operation.\n\n\"...so, if I can somehow get Ryan into that castle, I believe we can find more than enough there to alter, or completely reverse, the curse.\"\n\n\"Germany? We obviously need to come with you since we can't leave Ryan, but Germany? Can all of us even afford a trip like that?\" Annie said.\n\n\"I can handle that,\" Claudia said. \"If it means getting rid of this fucking curse, then I'll gladly pay for a trip around the world, for all of you, twice,\" she added, looking at Ryan.\n\n\"What if we don't want to get rid of it? What if I want things to stay as they are?\" Erica, the new girl, said.\n\nEleftheria interjected before Claudia could go on a rant. \"You have made your choice, Erica. Why do you think the others would not deserve the same? If you have the freedom to choose for yourself, why should Claudia not have that same choice? Why not everyone?\" she said.\n\nErica had no answer to that. She apologized.\n\n\"And even if some of you chose to stay, what about Ryan himself? It is not right for him to be a danger to others, either. He deserves the freedom to walk the streets without fear, also,\" Ellie said.\n\nThe girls had to concede her points even if most of them felt like they would choose to stay.\n\n\"I'm sorry, but how can you be so sure there's anything there? I mean, isn't it a big risk to take Ryan away from us? How do you know it's worth it? Shouldn't you check it out on your own first, or something?\" Lizzy said.\n\n\"There was a collector of spells and magical items some decades ago, called Claus. I believe this society has his collection, and they hold it at this castle. If the collection is there it will hold the majority of all magic on earth. Our chances of finding multiple different cures is very high,\" Ellie said. She paused for dramatic effect.\n\n\"Wait. Claus Willhelm, the Nazi? You found Claus Willhelm's collection? I want to be there, I need to come with you,\" Erica said.\n\nEllie gave another angry glance at Erica, once again, for knowing more than Ellie thought she should.\n\n\"No. This will be dangerous. None of you girls will follow us, absolutely not. Every single one of you will stay behind. Ryan and I will go alone,\" Ellie said.\n\n\"No!\" Annie gasped. \"You can't take Ryan there. If it's so dangerous, then what will happen to us if... if something happens to Ryan?\" she said, almost crying. Ryan went to hug her and hold her.\n\n\"You will survive. It will be hell, but you will survive. If Ryan were to die, for any reason -- not because of this mission, it should not be that dangerous, but for any reason -- you ladies would eventually recover, but only after a long and agonizing battle,\" Ellie said.\n\nThere was an uproar of anger. The girls had been led to believe that the curse was fatal. Claudia was already eyeing Ryan like she wanted to just kill him herself, right then and there. It took a while for them to calm down but among the scolding and name calling a general question was formed: Why did Ryan have to go? Why did he need to be in the castle?\n\nEllie told everyone it was their best bet if they found something useful. Rather than try to steal what they needed, they should have the option to just use it right away, hopefully unnoticed. Who knows, maybe they could even negotiate with the cult.\n\nThe girls protested the idea of taking Ryan straight to the people who were actively trying to kidnap him but Ellie told them that she would be there to protect him. Ellie was able to use her authority to ram the plan through. No amount of protesting would work on her, and eventually, the girls were left nonplussed.\n\nNo one had anymore questions, except for Erica. \"Do you know Claus Willhelm personally? Did you have some dealings with him back in the day? He was big into...\"\n\nBefore she could finish the question, Ellie grabbed her by the scruff of her neck and dragged her to the bedroom. Ryan jumped to go after them but Ellie pushed him back, careful not to touch his bare skin. She pushed him hard enough for him to slide across the floor. The girls were all shocked. They'd never seen Ellie get so physical with any of them. The door to the bedroom slammed shut and no one dared to challenge her any further.\n\nAfter a few minutes, which felt like forever, the door opened again and Ellie and Erica came back. Erica was shaken but seemed otherwise fine. She ran to hug Ryan and all of the girls came to hug her, too.\n\n\"What did you do to her?\" Remy said.\n\n\"Nothing at all. We merely had a private conversation about her running her mouth. As always,\" Ellie said.\n\n\"If she knows nothing, then why do you always need to shut her up?\" Remy said.\n\n\"If you want to talk about this in private, you are more than welcome to join me in the other room,\" Ellie said.\n\nPeople had their doubts, but the plan went ahead. Ninjas had broken into their home so something had to be done. Ellie's plan was the only one they had.\n\nOnce it was clear they were going to Germany, Claudia told everyone she had a zero tolerance for slumming it, so it would be first class flights and a five star hotel for everyone.\n\n---\n\nThe flight was somber. No one could do anything about that. There wasn't even a thought about joining the mile high club, or anything like that. Even Ryan himself felt it would have been an unnecessary risk.\n\nTheir room at the hotel was gorgeous, though. They had the grand suite. They had to get another room, too, to keep up appearances, but in reality all of them, even Claudia, actually slept together in the big suite, especially now, on their final night before the mission. Ryan made love to all of his girls for what could have been the last time.\n\nHe pushed deep, but treated them gently and sweetly, even Claudia. She hated him for making her love him even more by finally being so considerate. It was one of those rare times he only fucked her in the pussy.\n\nRyan did his best to hide his fear when he planted his seed deep into each of his girls, not knowing when or if he could do it again. He fucked his girls well into the night, but eventually, he had to get some sleep, too. Interestingly enough, Ryan got by with very little sleep these days. The curse was somehow rejuvenating his energies, letting him recover fully in just a few hours. And even on a night as stressful and restless as this one, he got the rest he needed.\n\nRyan and Ellie left early the next morning. They took a train to a different part of the country. They still had a long drive, too. They wanted to be near the old castle by sunset. They had rented a four-by-four to approach the cultist stronghold by a less used, old road. Ryan drove and Ellie sat in silence.\n\nTheir plan was to first set up an escape route, just in case. Then they would scout the compound and from there either try to find someone to talk to and negotiate, or delve deeper into the castle and try to find their leader, or their treasure room. Then phase two... And phase three would be them walking out happy, with all of their problems resolved.\n\nRyan watched Ellie braid her hair in the sunset light. Her long, lean, and strong arms moved with practiced grace. He followed her neckline to her full and round breasts, resting beautifully in her thin, white dress. He still had not had enough of her, even though they'd been working together for months now. Her braid was in preparation for battle, however, and Ryan hoped it would remain a mere precaution.\n\nOnce the sun had set, they stopped about a mile away and walked the rest of the way, with their gear in tow. The air was getting heavy. A storm was brewing. It was dark by the time they reached the foot of the castle walls. The whole castle seemed abandoned to Ryan. It was in good condition, not ruined, but it was completely dark. Ellie threw their rope up and it caught. They climbed up.\n\nRyan let Ellie go first and even in the darkness it turned to be a good idea. He got a nice view up her short gown. Ryan also thanked himself for the strength he'd gained from all the endless fucking. His flabby belly was gone, replaced by a six-pack, and all of that weight seemed to have gone directly into his chest and biceps. Climbing a rope like this would have been difficult for him before his life had changed.\n\nThey hid the rope on top of the wall and Ryan finally saw some signs of life. A few lights were on in the courtyard and in some of the inner windows -- not to be seen from outside the walls. There were guards in the yard and on top of the wall, but only a handful in total. Ellie and Ryan managed to find their way around them.\n\n\"When are you going to tell me the rest of it?\" Ryan whispered.\n\nEllie shushed him.\n\n\"Don't shush me, just tell me the truth. It's that Claus guy, isn't it?\" he said, still keeping his voice down.\n\n\"Shut up. We have a mission here,\" Ellie said.\n\n\"Yes, and I would like to know what it is. I mean, we're already here so I'm not going to turn around anymore. Can't you just tell me truth now?\" Ryan said.\n\nEllie said nothing at first, but she turned to look at him. Her expression was as regal and unflinching as ever. \"If you trust me, follow me, one more time,\" she said.\n\nRyan looked at Ellie. She seemed perfectly sincere so he relented, even though he was sure Ellie was not telling him everything.\n\n\"Okay, I believe you,\" Ryan said.\n\nThen, for the first time, he saw sadness in Eleftheria's beautiful eyes. \"I'm sorry,\" she said, and touched his forehead. Ryan's world went dark and he lost consciousness.\n\n---\n\nThe guards at the front gate saw Eleftheria approach them from across the bridge. She was dragging the unconscious Ryan behind her by the collar of his jacket.\n\n\"Private property,\" a guard said, in German.\n\n\"I am here to see Claus. You know who I am,\" Eleftheria answered.\n\nThe guards took a closer look and then cowered in recognition. One of them gasped and ran into the castle. He was going to get help, but a part of him was just running in fear.\n\nA handful of guards soon surrounded Eleftheria and they led her deep into a system of caves under the castle. The underground cavern had a stench.\n\nThey reached a set of tall double doors, decorated with runes and symbols on the outside. They stepped into a dimly lit room. There was a small stone altar at the back of the room, but there was nothing else, not even any decorations. The space was spartan and seamless. The guards left Eleftheria and Ryan in the room.\n\nOnce the guards were gone, she touched Ryan on the forehead again. He snapped awake with a gasp. He took a moment to reorient himself and take stock of their situation.\n\nRyan turned to Ellie to ask what had happened but he froze when he saw the look in her eyes. She looked so sad now. I'm sorry, her eyes seemed to say, but not for just failing the mission. The depth of that look -- I'm sorry for everything, was what her eyes told him.\n\nA deep, oppressive dread took hold of Ryan. He felt like a rat that can smell an earthquake coming. Eleftheria had a single tear on her cheek. The heavy wall of fear and sorrow crushed Ryan to the floor. It was pushing him from the direction of the door, like a silent storm wind. He saw a purple glow in the otherwise dark corridor. As the glow intensified, so did the weight of his horror.\n\nA maniacal laughter echoed around the stone hallways. It was deep and heavy, and was like a slap in the face for Ryan, adding insult to his terror. Eleftheria stood still. The purple glow was hot now, and a dark shadow grew in the middle of it, outside in the hallway. The glow crawled all along the walls of the room, and as it went, it lit up endless rows and circles of previously hidden runes and symbols all over the walls of the room. And all over the altar.\n\nThe shadow outside formed into a shape of a man, but kept growing and growing. Then, finally, he turned the corner and stepped into the room. Ryan whimpered and looked away. The man laughed again, his low bellows hitting Ryan's ears like punches. Ryan could not bare the searing brightness of this terrible creature, but he sneaked a little peek from between his fingers, and his tears.\n\nThe man was floating in air, his feet a foot off the ground. His body was hard and sinewy. A purple glow surrounded him, spreading from him to illuminate everything around. Tendrils of black swam in it. His eyes were all white. His whole body was covered in tattoos, similar to Ryan's.\n\n\"Strudel!\" he said, to Eleftheria. \"I always knew you would come back to daddy. And I hoped you would bring gifts.\" He looked at Ryan and laughed again. \"This, of course, will not be enough, you whore. You will suffer long and hard for what you did to me, you will suffer for at least as many years as you have been away. But then, I will allow you to please me again. You have realized now that I've always been a fair Master to you, yes?\"\n\n\"Yes, Master. I accept my punishment, even if it be death. All I want is for you to take me back, one way or another,\" Eleftheria said. Her eyes were cast to the floor.\n\nThe man floated to her and flicked her dress off of her shoulders. He then cut her across her breast with his sharp, claw-like nail. Ellie whimpered and the man laughed again.\n\n\"Oh, Strudel, you always were my favorite. Of course I will take you. I will take you again and again. Sometimes I think you tease me on purpose, defying me like this. A few decades as a toy and a toilet for my soldiers should help you regain some of the humility you've lost, yes? Would you do that for me? Would you be nothing more than a sack of holes, hanging from a chain, for years and years, just to make me happy?\"\n\n\"Yes, Master.\" Ellie said.\n\nRyan was crying now. The wall of oppression this creature pushed in front of him was crushing his very soul. The man turned to him.\n\n\"A pleasure to meet you, mister Dobbs. I am Claus Willhelm, but you can call me God. Please, do not get up. You are right where you should be. I understand you have been holding one of my spells for me? Well, I thank you for that. Not to worry, I will take what is mine soon enough. After that, I might just make you a gift for my troops, too.\" He laughed again.\n\nClaus turned back to Ellie and they continued their conversation in a strange language -- definitely not German, but something even stranger.\n\nThere was nothing Ryan could do. He was physically unable to move, but more than that, he had lost his will to fight, to even live. He wasn't angry at Ellie for betraying him. He was sad for her, for everybody. He knew in his heart that Claus would eventually take over the whole world and push everyone down, like he was pushing him. The girls, everyone from work, his family, everyone. Ryan knew they were all just maggots for Claus to step on. The world deserved to fall. Even though it broke his heart, Ryan felt no need to resist something so inevitable.\n\nClaus licked the tears on Ellie's cheek and squeezed her breast. His claws drew more blood. Ellie was sobbing now. Claus turned back to Ryan.\n\n\"Time to complete my collection,\" he said, and reached for him. \"I could just rip it off and eat it later, but I feel the need to bite right in.\"\n\nClaus' jaws extended unnaturally and revealed rows and rows of shark-like teeth. He pulled Ryan's shirt up to reveal the tattoo. He held on to him and licked the tattoo a few times with a long, thick, black tongue.\n\nEllie whispered a quiet word under her breath.\n\nRyan felt the oppressive horror lift the tiniest bit. He still could not move, and he was still terrified, but just that small relief in the weight of that anguish was one of the best things that ever happened to Ryan in his short and miserable life.\n\nClaus shot up and and turned to face Ellie. Whatever she had said had made him furious. \"You bitch! There are no sigils here! What did you hope to achieve? The day you die will be your happiest, because your torture will be the longest I've ever inflicted, you...\" Claus suddenly stopped and looked at his feet. He was not floating anymore.\n\nHe looked like he was about to say something more when Ellie drove her spear right through his head. His broken skull exploded into a cascade of that purple energy.\n\nEllie jumped on top of Ryan and shielded him with her body. A cacophony of magical energies roared in rage, and swathes of it singed off hair from Ryan's arms and legs. Then a new wave of oppression hit him and he could hear whispers in his ears. Whispers in that unknown language. They wanted something from him, demanded it, but Ryan could not understand.\n\nThe force of those whispers made him pass out.\n\n---\n\nWhen Ryan came to, again, he was still in that room. Eleftheria was still there, too. She was sitting in the middle, her legs crossed. Her dress was still down around her waist but her cuts were healed -- her perfect breasts were pristine again.\n\nIt felt like Eleftheria was done with her plan. Hopefully, there would room for truth now.\n\nA strange calm had taken over Ryan, too. His mind was clear and his soul was at peace. He had but a vague memory of the oppressive horror that had crushed him, previously. He didn't want to act like and idiot so he thought about what he already knew before talking to her.\n\n\"You used me as bait, didn't you? You were gunning for Claus from the beginning. You brought me here just to, what, ambush him with some spell?\"\n\n\"Yes,\" Eleftheria said. Her eyes were shut. \"How many spells do you carry, Ryan?\"\n\n\"One,\" he said.\n\n\"No. You carry two. I put another one on you. The mark is under your hair.\"\n\nRyan thought about it. \"Honestly, the guy seemed bad enough, so I can't blame you for doing whatever you had to to get rid of him. You could have told me, though. I could have helped you willingly.\"\n\n\"Trust me, my love. You do not know Claus. My plan was perfect, and every detail was necessary. Besides, the plan has already worked, so there is no improvement you could make to it anymore.\"\n\n\"But what about my curse? Was there ever anything here that could have helped us with the girls?\"\n\n\"No. My plan ended at the moment of Claus's death. If you still want to throw away your converts, you need a new plan. The only person who could take the curse from you is the witch who put it there, but you would not enjoy the process, or perhaps even survive it,\" she said.\n\nRyan thought Ellie was being overly pessimistic so he wanted to cheer her on. \"Well, these guys were after her, so maybe they caught her and now she's here. Let's take quick look around before we leave,\" Ryan said. He stood up, but the double doors slammed shut.\n\n\"No. I have weighed my options, and I have decided I want to keep you,\" Eleftheria said. She was standing now, too, but her eyes were still closed and her face was still calm.\n\n\"Keep me? What the hell does that mean?\"\n\nEleftheria smiled. \"I am one of your converts, Ryan. I am under your spell. You captured my heart and my soul the moment I touched you, to give you that second Sigil on your scalp.\"",
        "Ryan was flabbergasted. He vaguely remembered Ellie poking his forehead on top of the wall. But she wasn't done talking, yet.\n\n\"That first night, after I knocked you out, to prevent you from leaving your apartment, and before I ever even tied you to your bed, I touched you to hide that Sigil under your hair, where none would see it. Then, on that very first meeting of ours, I already drank from you. I have been yours ever since. I took what I needed while everyone was asleep. Sometimes you woke up, but I have ways of making you forget. Again and again, I secretly took my share. I am yours, and like the others, I too have now decided that I do not want this blessing to end.\"\n\n\"What?! You've been, what? Secretly sucking me off when I sleep? And what about protecting the girls? What about Claudia? You don't want to help her?\"\n\n\"You are my Master and you deserve her more than she does. You deserve all of the them, and more. We have to make our advance a careful one but I think you can handle many more converts.\"\n\n\"No, no. This can't be! You're Claus, right? You've captured her body and now you're playing some kind of mind games with me. Is this even reality? Is all of this inside my head?\" Ryan said.\n\n\"No. The death of Claus was my one and only goal in life. There was nothing in my life beyond that, but as soon as he was gone, I understood,\" Eleftheria said. \"There is no curse. There is only a blessing. And that blessing now gives me a new purpose: You.\"\n\nRyan did his best to ignore that statement of madness, for the moment. He took the time to calm down and asked, instead, \"what was your deal with that guy, anyway?\"\n\n\"Claus? He summoned me and bent me to his will. It was a long time ago, for you humans. You are my Master now so you deserve to know: I am an Angel.\"\n\nEleftheria paused for dramatic effect but Ryan was unsure what that even meant in this context.\n\n\"The law of the Heavens states once summoned, an Angel must do their Master's bidding. Angel or Demon, it does not matter, summoning is the same for both. Claus is the only human in history to ever succeed in summoning an Angel. I disagreed with what I saw him do so I defied him. I knew it would break my Heavenly Mandate, but I did it still. Defying Claus cost me my place in the heavens and they cast me out. I swore I would kill him, and now I have.\"\n\n\"A place in the heavens? Like, there's an actual after-life or something?\" Ryan said.\n\n\"You should be grateful, My Love. Your tiny mind cannot possibly even comprehend what I gave up when they exiled me. But now, I, an Angel, would choose you, a mere mortal, over them. Trust me when I tell you, this is the grandest compliment in the history of creation. My love for you is so vast you cannot even begin to understand it.\"\n\n\"So, what? You're going to stop me from finding a cure? And you think that I'm going to ignore all your bullshit, and we'll all just live happily ever after? Why are you even messing with me at all if I'm supposed to be your Master?\n\n\"Why would you ever want to lose such a blessing?\"\n\n\"To help the girls! That's why we're here, remember? Or, that's why I'm here. You had your own agenda from the start. But I'm here to save the girls, and I'm still going to do it, so open those doors. I command you as your Master to help me!\"\n\n\"No.\"\n\n\"What? What kind of a slave are you supposed to be if you always just do whatever you want, and not what I tell you?\"\n\n\"Trust me. You will thank me in the end. Or at least, you will know in your heart that I was right. You need to be stronger, My Love. The heavens know I do not want you to turn into Claus, but I don't want you to be weak, either. You need to grow stronger than you are now, and for that, you need your consorts to worship you. I will not allow you to release them. You must learn to understand that you deserve to have them. And until you do, I will guard my secrets.\"\n\n\"What secrets?\"\n\n\"Everything I have told you. Remember? I can make you forget. It saddens me to say this conversation has not turned out the way I had hoped, and I understand now. You are not ready yet, My Love. But that is well and good. I will simply erase this conversation from your memory and we will have it again later, when you are stronger.\"\n\nRyan had to think fast so he opened his pants and pulled his cock out. He went to her and grabbed Eleftheria by the neck and the boob, and twisted her nipple. \"Listen, whore. I have some strength for you right here, in my pants. Get on your knees, bitch, and then do what I tell you,\" he said.\n\nEleftheria grabbed his cock and smiled at him. Once she took hold of it, it got rock hard in an instant.\n\n\"Very good, my love. This is why I know you have it in you.\" She ran her hand all over his balls, too. \"We will just have to give you a little more time to grow. Once the power of your spirit is as great as the power of your body, you will be a master worthy of many slaves, I promise. You did well here. I am almost ready to surrender. My desire is burning inside, and I must confess, I will have to drink from you before I wake you up again.\"\n\nWith that, Eleftheria kissed Ryan and he fell unconscious again. She put her palm on his forehead to erase the conversation from his mind. After a few seconds of concentration the alteration was done and Eleftheria opened her eyes again. Ryan was still hard so she did as she had promised.\n\nEleftheria caressed the sleeping Ryan's cock and then kissed it. She slowly spread her lips around it and then swallowed it deep. She suckled it like it was made of ambrosia and drank from it's nectar. Soon, she received her hot, radiant blessing as he released his seed into her without even knowing it, like so many times before. Eleftheria swallowed every drop and then sucked him dry. She tucked her treat back into Ryan's pants and sat back down in the center of the room, and waited for him to wake up once more.\n\n\"Wha... What happened?\" he asked, groggily.\n\n\"Quick! We must go. A silent alarm has been triggered and we need to leave, now,\" Ellie said. She dragged him up by his gloved hands and pushed him out the double doors.\n\nThey had a little discussion about what had happened while they crept around the caves and corridors. Ryan still remembered the death of Claus so Ellie admitted to using him as bait, but she didn't reveal anything more.\n\nThey triggered an actual alarm at some point, and soon there was shouting and clamoring echoing behind them. The time for sneaking around was over. They broke into a run.\n\nThe storm was raging when they reached the top of the wall, the wind howled in their ears as they peered over the edge. There was more shouting behind them and flashlights swept the ramparts of the old castle. Ellie's golden hair seemed to glow despite the darkness of the night. Even in the soaking rain, she carried herself with elegance and poise.\n\nThe rope was here somewhere, but where? Ryan was trying to recognize any details to guide him. Ellie glared at him as she pushed past him. She took a left, and then a right, running on top of the old castle wall, and sure enough, Ryan could see something that might be a coil of rope stashed in the shadows.\n\nEllie ran right for it and started to feed the heavy rope over the edge of the wall. Her toned muscles gleamed in the low light, wet from the rain. Ryan stopped and stared. Even though he knew their lives were in danger, and his heart was beating so fast he was about to puke, there was nothing he could do but marvel at her beauty. The motion of her body was so fascinating that, for a few seconds, everything else melted away.\n\nJust as she turned to accost him and to demand for help, another gust of wind hit them from a across the yard. With a yelp, she slipped, and started to fall over the outer edge. A pang of gut-wrenching panic snapped Ryan out of his daze and he lunged to grab her arm. He got to her, just in time. She managed to grab the rope with her other hand.\n\nIt was the first time Ryan had ever seen her falter, even a little bit. A huge wave of relief washed over him and it almost felt like she was about to smile at him. Just a little smile, but still.\n\nInstead, he saw that tiny little beginning of a smile turn into a scowl of absolute terror, and then disgust. The blood rushed from Ryan's face as he realized what had happened. Sure enough, when he looked down, he could see that his glove had been ripped and he was now holding on to her bare arm with his bare hand.\n\nMany things happened during that awkward handshake. Ryan did his best to hold back the energy even though he knew it was too late. It was just a reflex. The energy, for some unknown reason, ran in strange new directions, and thus flowed anyway. Ryan couldn't control it anymore. He looked into Ellie's eyes.\n\nSuddenly, strange memories of her riding him or sucking him off in the bedroom at home, while the girls slept around them, appeared as glimpses in his mind. It was all a blur, and Ryan couldn't tell if they represented the past, the future, or just fantasy.\n\nEllie's expression turned from angry to afraid, but she did not let go. A moment's snap decision had to be made. Ellie made one motivated by weakness. Weakness had been rare for her, but in the future she would feel it more and more. She had seen the guards catch up to Ryan behind him and she knew he would have no time to take the rope. Now, in her moment of weakness, she decided to pull Ryan into her arms, and she carried him down with her as she fell along the side of the wall.\n\nRight before hitting the jagged, rocky ground at the foot of the castle, Ellie spread her wings and took flight in the storm. She carried herself and her Love to safety. The weakness, of course, was that she had revealed herself to him again, after just having decided to wait.\n\nRyan was scared at first, and he didn't even realize what was happening. He held on to Ellie, his arms around her waist and his legs wrapped around hers. Ryan squeezed his cheek against Ellie's breasts and her wet dress slid aside. He let the energy flow into her. Not to try and knock her out and drop her out of the sky, but just because he did could not stop it.\n\nAfter a few minutes, they landed next to their rented car. Only then could Ryan really see the full glory of Eleftheria's fifteen foot wings. They were pure white and had the same soft glow as her golden hair. One of her straps had fallen off her shoulder and the one bare breast made her look like she was posing for a painting.\n\nShe tensed her body, and with a whomp, the wings disappeared behind her back. Ryan was stunned silent but Ellie just took his hand and guided him to the car. He stole glances at her but she kept telling him to concentrate on driving. It took a good ten minutes for the advice to start sticking.\n\nRyan managed to take them to the main road in the darkness. There, they turned the lights on, and slowed down enough to obey the speed limit. They headed for a cabin they had rented with a credit card Ellie had stolen. They would wait there until morning and then return the car. The car had been paid with the same credit card. For their return trip on the train, they would pay cash.\n\nThe drive was quiet. Ryan felt like the mission was still somehow on and he concentrated as hard as he could on just driving as normally as possible and obeying the speed limit. He did not say anything, but he did keep glancing over to Ellie.\n\nThey got to their cabin. The bad guys were nowhere to be seen. They were a long way away from the castle by now. It took them a few minutes to settle in and get comfortable. Ryan wanted to take a shower but he felt like they needed to talk about what had happened first. He did change his shirt to a dry one. Ellie did nothing of the sort. She was not bothered by rain or cold.\n\n\"Is that why your dress is so skimpy? To allow your wings to sprout? Or is it just to distract your enemies?\" he started, even though he knew Ellie did not appreciate humor. He did it for himself, to lighten his own mood. Even though the drive had been long, he still felt the effects of adrenaline.\n\nFor some reason, Ellie smiled at him. \"It seems to work on both friend and enemy. The times I've caught you looking at me like I was one of your girls,\" she said.\n\nRyan was too upset to hear the levity in her words. \"About that. I'm so sorry for touching you. You have to realize it was an accident, and also, when we were... flying, I didn't mean to drown you with the energy. I'm sorry. You have every right to kill me now. Or, in just a moment, because there's something I absolutely have to say first, even if it's my last words: What the fuck! You have wings? Fucking Angel wings?\"\n\nEllie laughed. \"I guess it is true, I never explicitly told you that I am an Angel. Well, now you know. And as for touching me, I know you did not do it on purpose. I am not angry at you. To be honest, I had already decided to stay with you and the girls. The curse will complicate things between us, no doubt, but it may not be such a big problem in the long run.\"\n\n\"I don't think that's what the old Ellie would have said. Are you sure the energy is not affecting you already?\"\n\nShe was still smiling. \"Nonsense. Let me reveal another secret to you. I have never hated you. I do not hate men, or humans, or even sex. The only reason I've kept my distance from you so far was the curse, and now, that obstacle is gone. Do not misunderstand me. I'm not in love with you, either. But the way I see things, there's nothing to stop you from enjoying my body anymore.\"\n\nEleftheria had crept right up to him and her hands were under his new, dry shirt now. Her lips were almost touching his and he could see right into her infinitely deep, blue eyes. He made the smallest move toward her and she kissed him. She drank from his lips and sucked on them. The kiss was magical and there was something more to it than just kissing a literally angelic female. Ryan felt strangely in control, though. His passions did not overrun him. It was a full day since he had made love to his girls so he should have been hornier by now. He used his newfound self control to push Ellie away.\n\nShe stepped back and dropped her dress. Luckily, her unnatural grace was something Ryan had seen time and again already, as lovely she was, so he managed to shout \"stop.\" Ellie seemed intrigued, rather than offended.\n\n\"You lied to me. You lied to me to get Claus, which I guess is fair enough. But you lied to the girls, and that's not as easy to forgive,\" he said.\n\nEleftheria was at a crossroads. She could erase Ryan's memory again, but that would eventually cause more trouble than it was worth. Her weakness was telling her to surrender. She wanted Ryan to know how completely she belonged to him. She had lied to him about not being his already. Now, she could lie again, and turn the double lie into a half truth.\n\n\"For that, I am truly sorry. I lied to all of you and I deserve to suffer my repentance. I am in need of you now, however, so I know you will not cast me aside. I have seen how good you are to your women so I know you will be fair to me, too. Know that I am not too proud to beg, for I cannot feel pride, but if I beg it would be for your benefit only, because I cannot feel humility either.\"\n\nRyan wasn't sure if he had understood her right but he kind of wanted to test it. Before he could even think, he blurted out \"kiss my feet.\"\n\nEllie knelt and started to open his muddy combat boot. She pulled it off and revealed a thoroughly soggy and nasty sock.\n\n\"Okay, okay, sorry,\" Ryan said, and pulled her back up. \"Of course I will give you what you need. I would never cast you out. But right now, I need a shower. And I also need some time to think.\"\n\nRyan stripped.\n\n\"Can I come with you?\" Ellie said.\n\nRyan told her he would not get much thinking done if she did. He went in alone. After a while, Ellie looked at herself in the mirror and she determined she was dirty enough, too, so she decided to join him anyway.\n\nRyan had started washing himself from his head down. He really did consider it his duty to take Ellie in, now that she was under the curse, and she was fucking hot, and he'd wanted to fuck her so bad since the beginning. He knew the girls would eventually accept it, too. It would be just another adjustment period while they got over Ellie's lies. But it had to be done.\n\nThe hot water soothed him, letting him relax for the fist time since he had left his girls almost twenty-four hours ago. Ryan was down to around his belly when Ellie stepped into the room. She was completely naked and she walked right up to him, without saying a word. Ryan was already hard from just thinking about her and she went straight for his cock and balls. Ellie lathered her hands in the soap and caressed his crotch until it was well beyond clean.\n\n\"We have to tell the other girls everything,\" Ryan said.\n\n\"Yes. They deserve to know I betrayed them. And you. But consider this: Do not tell them I am one of them. Not yet. If they knew, they would soon accept me and love me like a sister. Let them hate me as an outsider and let them unburden themselves. Let that be my punishment. Let the passions cool down and we can introduce one complication at a time.\"\n\n\"But we need to fuck, right? Someone will probably notice? And I don't want to keep secrets.\"\n\nEllie kissed him and rubbed his cock against her belly. \"Yes, we need to fuck. Technically, I only need your seed inside me, one way or another, but I like the way you say it. As for keeping secrets, let us only delay the full truth, just for a while.\"\n\nThey kissed, and then Ellie took to her knees to kiss her favorite cock again. She was mindful to appear less familiar with it than she really was.\n\nHer weakness hit her again when she put her true love's cock in her mouth. This time, it was full of life, and it reacted to her every touch and caress. The difference was almost enough to make her drop her guard. She already knew this weakness would be her downfall. And what a sweet downfall it was. She belonged to Ryan and she would be his forever, but she still had work to do before she could let him know that.\n\nRyan pulled her up and kissed her again. He was tired of waiting and, after what for him felt like months of teasing and foreplay, he finally pushed his cock right inside her. Ellie moaned, and Ryan fucked her right there in that shower of some random German holiday cabin. He kissed her, caressed her breasts, and touched her toned body. She flexed her body and bent her back to take him in deeper. It was amazing how soft her hard body could become in Ryan's now strong hands.\n\nRyan carried her into bed and lay on top of her. He looked her in the eye as he made love to her and he saw real pleasure on her face. However Angels differed from people, the curse seemed to work on Ellie just fine.\n\nThe energy itself still felt different. Whatever had happened during their mission had changed it somehow. Most likely, it had been when Claus exploded. The release of all the magic he had held inside him had somehow changed or maybe even tainted Ryan's curse.\n\nPushing the energy into Ellie, however, the effect was the same as ever. Ryan was able to control the flow normally again, too. Whatever had happened, it didn't feel evil, at least not yet.\n\n\"I've given you a lot but you're not going to pass out, are you?\" he said.\n\n\"No. Another benefit of being an Angel, no doubt. If you want me to cum like your other whores, you're going to need to fuck me a lot harder than this,\" Ellie said.\n\nHearing her talk dirty was almost enough to make Ryan cum, but he gritted through it. That also led nicely to giving her what she asked for. Ryan sped up and pushed deeper. He let the energy fully loose.\n\n\"You're not going to make the whole cabin explode, or something, if you cum?\" he said.",
        "\"Why don't you try and find out.\"\n\nRyan fucked her hard enough to break the bed, but that was before she even came. When she did, she did grip him harder than any of the other girls ever had, especially with her legs around him. The energy felt completely different. Not just because of its new flavor, but also because of the way it moved inside Ellie.\n\nRyan got glimpses to the girl's souls -- for lack of a better term -- when he pushed the energy deep enough. Seeing inside Ellie was made him truly realize she really was something different, something not the same as humans are. A part of her core was palpably angelic, too. The divine light made him come. He shot his load deep into her and collapsed on top of her.\n\nWhile watching him rest on top of her, Ellie thought long and hard whether to wipe Ryan's memory or not. More than anything, she wanted Ryan to become a strong Master. In the end, she had to believe that having her, an Angel, as one of his slaves would help him achieve that. She had to let him remember, at some point. Soon, she would teach him to take her whenever he wanted and then to take any other woman, too. Is this my weakness, too? Am I making excuses? Eleftheria had never doubted herself before.\n\nWhen Ryan opened his eyes he saw Ellie smiling at her. He was still on top of her and still inside her. Her pussy was massaging his cock and he was already hard again.\n\n\"Sorry, babe, you got me. I'm not sure I can go again right away. I guess: Angels one, Ryan zero.\"\n\n\"No. Trust me, the game is over and you have already won. Just stay right there and enjoy your victory.\"\n\nRyan did as he was told. He buried his face into Ellie's bosom and laid on top of her until he fell asleep.\n\nWhen he woke up in the morning, they were still in that same position and he was still hard inside her. Only, they were now somehow covered by a blanket.\n\nRyan eventually got up and sat down to eat breakfast. Ellie sat in his lap and fucked him slowly.\n\n\"I'm sorry, but I have to ask. Did Claus ever... take advantage of you?\" Ryan said.\n\nEllie's serene smile did not waver and Ryan felt no tensing up in her body. \"Never apologize to me again. And never mention him again,\" she said, while continuing her gentle, swinging motion.\n\nFair enough, Ryan thought. He considered bending Ellie over the table and taking her from behind but time was ticking and they would have to get ready to leave. He probably had no time to get her to cum again, either, because of her inhuman stamina. He considered how to let her down softly but he then realized she had just told him to stop apologizing.\n\nRyan lifted her off of his cock and sat her down on the table. He pinched her nipple, kissed her nose, and then just walked away without saying anything to take another shower.\n\nFor the first time in her thousands and thousands of years of existence, Eleftheria was happy. Even in heaven, she had just been, without any emotion. She knew she had made the right choice. Her weakness had guided her well. One day, Ryan would have to grow harder and colder, but Ellie was immensely glad she got to share these early moments with him while he was still carefree and innocent.\n\nThey dropped the car off and then spent the long train ride together, talking more openly than they ever had. Ryan still had these blurry flashes in his mind, making him doubt if Eleftheria was still completely honest with him, but he couldn't tell if they were dreams, memories, or just fantasy.\n\nA Welcome Home Party\n\nAnnie was at the door of the hotel, waiting for them. She was so happy to see Ryan she was moved to tears. She genuinely loved him and was relieved to see him safe, but she was also very horny. He had been gone for almost two days. It was probably good the girls were not all in the lobby. That might have caused a scene.\n\nAnnie gave him a big, needy, teary hug. Ryan gave her some energy and she shuddered. Annie hung from his neck with almost all of her weight. She gave Ellie a tentative glance, too, but decided not to try and hug her. Ellie was wearing one of Annie's own dresses once again, as her disguise.\n\nThey went up to their floor in the elevator. Once the doors opened, the girls were all waiting for Ryan in the hallway. All of them ran at him, except Claudia, but even she was smiling. They all tried to hug him and kiss him at the same time. Erica tried to hang on to him like a monkey. Ryan carried and dragged the girls into the bedroom of their five star suite.\n\nThey were all horny and ready to go. Some clothes were already coming off. Ryan was stern, and he had to raise his voice, but he got them to settle down.\n\n\"First, I love you all. I'm so glad to be back. I missed you, too, and I can't wait to be of service to all of you ladies,\" he said. There was cheering. \"But, there is something extremely important that I have to tell you all right away, before we can begin. Bad news first: We got nothing.\"\n\n\"You fucking idiot, what the hell did you do this time? And where's my cure?\" Claudia said.\n\n\"The mission did not yield a complete success, I'm sorry. We did manage to... deal with the leader of the cult, so hopefully they won't be coming after us anymore, but there is no cure, yet.\"\n\nClaudia growled and even slapped him, but then looked surprisingly sorry. She looked at her hand, the contact from the slap had given her a jolt of the new energy.\n\n\"And there's even more bad news, but I'll let Ellie tell the rest herself,\" Ryan said.\n\n\"I lied to you, and used you. All of you. Especially Ryan. I took advantage of your trust and betrayed it. I was on a personal mission to kill Claus Willhelm, and I used you all to get to him,\" Ellie said, plainly.\n\nThe girls were mostly just confused, they didn't quite get what she meant yet.\n\n\"I used Ryan as bait,\" Ellie said.\n\nThe girls all looked to Ryan and he gave a little affirmation. It took a few seconds for the news to sink in and then the girls broke out in a riot. Remy and Erica raced each other to see who would get up into Ellie's face first.\n\nOnce the other girls saw that Ellie was not offering any kind of resistance, they joined in. They shouted at her and slapped her. Someone even puller her hair. Ellie did not flinch and just let them vent.\n\nAfter a few minutes, the worst of their anger died down. The girls all sat back down but they all still eyed Ellie with scorn. There was not a mark on her from the assault.\n\nClaudia was the first to speak again. \"So, what? You're going to just give her a pass? Why is she even here? You're just going to let her get away with treating us like shit? Treating you like shit? Have some fucking spine you coward! She nearly got you killed,\" she said, to Ryan.\n\nRyan said nothing, he just looked Claudia in the eye.\n\n\"You fucking asshole! You want to fuck her! That's what this is all about. What did she promise you? You don't care about us either,\" Claudia shouted. She stepped to Ryan and tried to slap him again but Ellie grabbed her wrist mid flight.\n\n\"I knew it! You're on his side now,\" Claudia sobbed.\n\n\"I will protect all of you, even from each other,\" Ellie said. Claudia slapped her again. That, Ellie didn't seem to mind. Apparently it was just Ryan who was off limits.\n\n\"How could you? You told us you were here to protect us. You just watched us grovel and acted like you are better than us, but all the while, you were just... what? You weren't even using us! You were just using Ryan. What are we then, to you? Just a joke? Or pets, or insects, or something?\" Claudia shouted at her.\n\nEllie proudly proclaimed she would do it all again. Killing Claus had been the most important thing anyone in the world could have done. She told them she had literally saved the world, and thus, all of their lives, too. She had no regrets about having used any means necessary to get the job done. When she confessed she had been ready to sacrifice Ryan, too, if it came to that, she won no favor, either.\n\n\"I must confess, I was lost for a moment after Claus was dead. I thought I would have no purpose anymore. But I soon I realized my new goal. I will renew my vow to protect all of you, but this time, I will do it honestly,\" Ellie said.\n\nClaudia scoffed and pushed her away. At no point during her whole story had Ellie shown any signs of remorse. She did not beg for any kind of forgiveness. She just declared her change of heart as an impassioned fact.\n\n\"Give me back my dress,\" Annie said.\n\nEllie slipped the dress down and folded it neatly. Then she handed it to Annie, who was now a bit surprised. Ellie was completely naked, except for her heels.\n\nRyan did his best not to look, and was proud of himself for managing it. Soon, he realized looking away had probably made him seem more suspicious, not less.\n\n\"Claus Willhelm was still alive?\" Erica said, finally moving the conversation toward another topic. Ellie confirmed. \"But he had to be like over a hundred years old?\" Erica continued. Ellie confirmed again. \"And he was the head of the cult himself?\"\n\n\"Yes.\"\n\n\"He was horrible. He was covered in all kinds of tattoos. I wouldn't have guessed he was a hundred, but he kind of didn't seem human at all,\" Ryan said.\n\n\"Tattoos all over? So that's what it meant. I should have known it. The Willhelm collection was on his own body. And you helped Ellie kill him?\" Erica said.\n\nRyan looked at Ellie. \"Yes,\" he then said.\n\nErica got on the floor and bowed down to Ryan's feet. She started to kiss his shoe.\n\n\"What's this about then?\" he said.\n\n\"You fought together with Eleftheria the Rogue, and you helped her defeat Claus Willhelm. That means you really are a hero now. You literally saved the world. I already knew it, of course, but now no one can deny it,\" she said.\n\nEveryone groaned.\n\n\"But at least don't kiss the shoe, Erica,\" Ryan said.\n\nShe took his shoe and sock off, and continued hold her lips against his bare foot. She shook visibly when she received the energy, and her body relaxed. This caused some jealousy among the rest of the girls. Remy looked like she was ready to go for Ryan's other foot.\n\n\"Something is different. The energy, it's different. It's still good, but...\" Erica said.\n\n\"Yes, I was getting to that,\" Ryan said. \"Something must have happened when Claus died. He released a lot of energy.\"\n\n\"Evil energy?\" Annie asked.\n\n\"I'm not sure, but it doesn't feel like that,\" Ryan said.\n\n\"Yeah, right, hero my ass. Tell me what that bitch is still doing here after what she did, or I'm out, curse or no curse,\" Claudia said, still focused on Ellie's betrayal.\n\n\"We have to have her. It's that simple. We need her to protect us. We don't know what's out there. Hate her, but the next time ninjas attack, we still need her there. It's that simple,\" Ryan said.\n\nClaudia was still unhappy but the rest of the girls were already more resigned by now.\n\n\"Ryan is right,\" Erica said, still at his feet. \"You really are Eleftheria the Rogue, right? The Fallen Angel?\"\n\nEllie said nothing, but some of the other girls giggled nervously.\n\n\"What? Like, a real angel? What the hell does that even mean?\" Claudia said.\n\nA thunderous pressure wave pushed a few potted plants over, it blew up all the dust from under the bed. The windows shook in their frames. Papers flew into the air from the coffee table. A few books even fell from the book case as Ellie spread her fifteen foot wings. They glowed with a gentle golden light. All of the girls ducked and cowered. Ryan almost fell over. The wings engulfed most of the room.\n\n\"I am an Angel. Deal with it,\" Eleftheria the Rogue proclaimed, floating in the air, naked and radiant. The girls who had slapped her in the face earlier suddenly felt a lot worse about it.\n\nEllie slowly pulled her wings back in and landed back into her high heeled shoes.\n\nEverybody needed a moment to recover, and to let the revelation sink in. Ellie's point was well taken -- there was no way they could afford to lose an ally like her. Even if they wanted to, it would probably be impossible for them to get rid of her. Ellie was still going to be a permanent fixture in their lives.\n\nEven Claudia was now convinced her doubts had been ridiculous. No way Ryan is fucking an actual Angel, that loser. Ellie has to have some other reason to stay. His stupid power wouldn't probably even work on her.\n\nThe fight died down and no one had anything more to say on the matter. Erica was horny out of her mind, and she loved Ryan so hard she almost passed out. Knowing that he had a literal guardian Angel of his own made him almost godlike in her eyes. Soon she was at his feet again, worshiping him more ardently than ever.\n\nSeeing Erica's gusto, the other women got distracted, too. Seeing an Angel, literal proof of divinity, was one thing. Fucking Ryan was quite another. Their focus turned singular.\n\n\"You fucking asshole. I hope you know you are the last person in the universe who deserves this. Any of this. Or any of us,\" Claudia said, as she came in and kissed him.\n\n\"It's nice to see you, too, Claudia, I'm glad you're here,\" Ryan said.\n\n\"You're just being nice to me because the other girls are here. If we were alone, you'd be pulling my hair and slapping my face already. Calling me your fucking buttwhore,\" Claudia said.\n\nRyan smiled but Claudia was deadly serious. She kissed him again.\n\n\"Are you wearing your buttplug?\" he said.\n\n\"Yes, master.\"\n\n\"Show me.\"\n\nClaudia stepped to the bed and made room between the other girls, so she could bend over in front of Ryan. She got on her knees, on the edge of the bed, and then pushed her face down into the sheets. She reached behind her and pulled up the hem of her dark dress. She was wearing no panties.\n\nRyan could see his gilded initials on the base of her buttplug. It's good to be home, he thought. \"Do you love me, Claudia?\"\n\n\"No, I hate you, but I love that fucking cock of yours.\"\n\n\"Where do you love it?\"\n\n\"In my ass, master.\"\n\n\"Remy, how about you, are you wearing your plug? Show me.\"\n\nRemy was already topless. She was wearing a plaid skirt, stiletto heels, and nothing else. She made room for herself next to Claudia. Their hips touched. Remy was wearing her buttplug too.\n\n\"Oh I missed you girls, it's so good to be back,\" Ryan said. He got to his knees behind them and started kissing and licking their thighs and buttocks. He licked in the middle, where the thighs of the two girls touched. The energy flowed and their bodies shivered. Their skins got goose bumps all over.\n\nAnnie, Lizzy, and Melinda took their clothes off and then stripped Ryan, too. Once he was naked, he stayed where he was and started fingering Remy and Claudia in the pussy while he still nuzzled between their thighs. The other girls surrounded him. He turned his head around so he could kiss all of them. They all held on to him, to feel the new energy.\n\n\"It really is different, I see what you mean,\" Melinda said.\n\nErica took her clothes off and started kissing and licking Ryan's back. She held on to his waist. After a while, she got up and hugged him. Lizzy went to kiss Ryan's fingers, the ones going in and out of Remy.\n\nAnnie was the first to realize that the grand prize was still there for the taking. She got to the floor and started sucking on the big cock. Melinda lifted her leg over Ryan's arm and rubbed her pussy on his bicep. Her hands were caressing his shoulder. Erica crawled around Ryan and joined Annie down at his cock. She was happy to just kiss and lick Annie's cheek while she sucked, instead of challenging her for the treat.\n\nRyan stood up and fell on the bed. Soon, he was floating in a sea of women, his women. He closed his eyes and just reacted to their touch. He lost himself among their sensual bodies and their elegant limbs, not even caring what he was doing and to whom. He just pushed his tongue and his fingers, and his cock, into whatever nook or orifice they happened to come into contact with.\n\nEllie stood by, still naked, watching. She was still perfectly able to feign disinterest but she was unable to prevent herself from getting wet anymore. None of the other girls paid any attention to her, though.\n\nRyan lost track of time with all the hot bodies crawling all over him. He let the energy flow freely and as the searing flow coursed from him and into the girls it burned away every bit of stress and worry any of them had ever had. Pleasure swallowed them. Once Ryan surfaced again, he was relaxed and renewed. He wasn't even angry at Ellie anymore. He opened his eyes and swam his way up from the bed. The girls were already happy and satisfied, even though Ryan had not given them any cum, yet.\n\nThe girls followed him up and they spread around the suite. Some went to get water or food. Ryan admired the view out the window. Annie was standing right next to him so Ryan decided she could get her gift first.\n\nHe informed Annie of the selection by bending her over the back of the couch and getting to business right away. She ended up dangling there sideways. One of her legs was between his legs and the other one he lifted over his shoulder. Her upper body was swinging around as she tried to grab a hold of something, but there was nothing to grab. Her chaotic gyrations set her big tits into various tantalizing trajectories.\n\nMelinda and Remy came to Annie's assistance and she was finally able to achieve a more stable position. This meant Ryan could up the tempo. He lost his balance and all four of them fell into the couch. Remy was stuck under Annie now and her plugged ass wiggled invitingly in front of Ryan's face.\n\nTonight will be good girls first, he decided, so Remy would have to wait. He did slap her on the pussy, though.\n\nMelinda's pussy was almost in Annie's face so Ryan helped her the rest of the way down. He slipped out and walked around the girls. Annie wanted more cock but Ryan told her to not be selfish. He pushed into Melinda, instead, and Annie could feel Ryan's balls slapping against her chin as he fucked the pussy she was licking.\n\nRyan knew Annie was not suffocating because he could feel her breath on his balls, so he upped his pace inside Melinda. He reached over and pumped a few orgasms out Annie with his fingers. Melinda felt Annie moaning on her clit when Annie came and it made Melinda climax, too.\n\nRyan wanted to concentrate on Annie again. She was the goodiest of the good girls, and deserved her prize. He went back to fucking her. Melinda stayed on Annie's face.\n\nRyan pushed a finger into Melinda's ass, just to keep the energy flowing into her. He was soon able to add a second one. Melinda was definitely not a good girl. Deep down, she was medium at best. Right now, for example, she was toying with poor Annie, sometimes sitting down so deep the other woman could not breathe. The way Annie sucked on her clit let Melinda know she was loving it, though.\n\nThe other women were lounging around, watching. This had become a common way for them to spend evenings at home, too: watching Ryan fuck. They were among friends and could catch up. It was almost like a girl's night out. The only difference was, if they wanted a little buzz they didn't need to go out for a smoke, or to get a drink from the bar. They could just go grope and caress Ryan, to get high on the energy. The chance that he might grab them and pull them in just made the whole game more exciting.\n\nEven Claudia did it. She used to hate everything but the sex, but now, she would mellow out a little bit almost as soon as she was in through the door. Remy, for her part, was sure it was the plug that had changed Claudia's behavior. Lizzy had told Remy it was a Pavlovian something.\n\nWhen Claudia puts the plug in, her body knows it's about to get some Ryan so she feels good before it even happens. For Remy herself, the plug just felt fun anyway. She knew Claudia always took hers out when she left but Remy liked to keep it in even when she was away from home. Maybe Lizzy was right, maybe having it in there did remind her of Ryan.",
        "Ryan had rolled Annie around a bit more, and eventually ended up having her riding him on the floor. The girls could see that Annie was getting tired. Her legs trembled and the pace of her pumping got erratic. Her abs were showing, all lean and sensual. That was new.\n\nSome of the girls had been incredibly trim even before Ryan came around, but now, all of them were. Ryan was a real hunk now, from all the fucking, but the girls had gotten in shape, too. For the girls that went to the gym regularly, sex with Ryan also gave them extra energy for their workouts. For the rest of them, the sex was enough. A real win win all around.\n\nDespite her newfound athleticism, Annie was done. Ryan took control of the pace and gave her one last ten second burst of hard fucking, before coming inside her. Annie flailed around like a ragdoll. She fell off before Ryan was finished cumming so some cum spilled all over everywhere. It was an easy snack for the others.\n\nRyan wanted Erica next. She was crazy, but definitely a \"good girl.\" She was practically a nun. The only difference, she devoted herself to Ryan and his cock instead of some other denomination. He saw her over by the bed and went for her.\n\nMelinda went to see what was oozing out of Annie. Annie wanted it all for herself so there was some friendly, good-natured bickering. Annie tried to scoop as much cum from her pussy into her mouth as she could while Melinda was trying to get in there with her tongue. There was lots of wriggling and giggling.\n\nRyan grabbed Erica from behind and pushed her tiny body down onto the sheets. She yelped out of shock and surprise, Ryan had gotten her good. Before she could recover from the scare, he pushed his cock into her pussy. She was still as tight as ever, so for a while, her legs trembled with every push. Ryan trapped Erica's arms behind her back.\n\nHe looked her in the eye as her face distorted with all kinds of emotions. Chief among them was pure gratitude. It always shook Ryan to the core. The look on Erica's face was one of the greatest rewards he could have received from this curse. She really did worship him.\n\nHe slowly pumped her tiny body and her tight pussy, going balls deep. Every muscle in her body tensed and relaxed with each thrust. The way she felt about him was enough to make both of them tear up from happiness as they came together.\n\nRyan had to rest for a moment, and gather his thoughts, not because he was tired from the sex but because the emotional experience had been so strong.\n\n\"How the fuck are you not a god?\" Erica mumbled, through her delirious smile.\n\n\"Please, don't call me that,\" Ryan said. He wanted to tell her about Claus and his delusions, and what it got him in the end, but Ryan didn't want to ruin Erica's mood. \"I don't mind being called a hero, though,\" he said, instead.\n\nA bit later on, Ryan was fucking Melinda and Lizzy at the same time. Lizzy was probably the last holdout, as far as just surrendering to pleasure. Even Annie was pretty much completely liberated by now. Lizzy wasn't hung up on any particular kinks, however. She was just generally more reserved than the others.\n\nRyan had taken to fucking her in the ass more and more, hoping that would help her. He was deep in there now, too. \"Lizzy, would you mind me asking something personal?\" he said.\n\nLizzy bent her face up from Melinda's crotch and looked at him. \"Really? You have your cock so deep in my ass I can feel it in my fingers, and you need to ask me if I mind... anything?\"\n\n\"You're happy, right? You're friends with Remy and the other girls. And we get along, too. But is there something more I could do, to make you even happier?\" Ryan said.\n\nIn a strange sensation, Lizzy felt her ass open up to Ryan even more, when his words touched her heart. This was some strange dirty talk. \"Yes, I really am the happiest I've ever been,\" she said, between her moans.\n\n\"But you know why I'm asking, right?\" Ryan said.\n\nLizzy looked at him again. She let the cock slide out. \"Is it because I'm not all gaga-gooey over you, like all your other little sex slaves?\" she said.\n\nMelinda took on the now-free cock and started sucking it deep. She moaned and gasped as she munched down on it.\n\nRyan slipped two, and then three fingers into Lizzy's ass, to keep it from closing too much. \"Basically, yes,\" he said. \"You know that I really do care? And if something is bothering you, just tell me, or any of us, and we can fix it, together.\"\n\n\"Thank you. That really means a lot to me. But this is just who I am. If I ever need saving, I promise you you can be my hero. But I'm fine. Would you like me to act more like a slave? Like Remy or Erica, you know? Look at you all cross-eyed and lick your toes and all?\"\n\nRyan squeezed Melinda's boob with his other hand while still fingering Lizzy's gaping butthole. \"I want you to be you. And I think I might finally be getting on to you. You're a lot smarter than me, aren't you? And not just because you're a woman, but just as a person,\" he said.\n\nShe gasped and pushed her ass deeper around his fingers.\n\n\"You might even be the most intelligent person I've ever met, right?\" Ryan said.\n\nLizzy smiled as her thighs shook. She came a little, but she recovered quickly. \"Gee, mister, I have no idea what you're talking about. I'm just a slutty little bimbo. I'm a little cum bunny who needs her big meat carrot. Please, mister?\" Lizzy said, in a mocking voice.\n\nIt warmed Ryan's heart. All he had wanted was to see her smile more, and he had, for once, managed to do so without putting his foot in his mouth. He slammed his meat carrot right back into that little cum bunny's ass, and reamed her well.\n\nHe fucked Melinda in every hole, too. Then he was done with the good girls, and the medium girls too. The bad ones were the only ones left.\n\nHe saw Remy and Claudia sitting at the bar. They were looking right back at him. It seemed they had caught on to his plan. This was a moment of truth for Ryan: he had to choose. Which one of them was the baddest of the bad girls? Which one deserved to be last?\n\nRemy was completely naked, except for stiletto heels. Claudia had a tank top around her waist. It went up to just under her boobs but she had slipped her arms out from under the shoulder straps.\n\nClaudia smiled at Ryan and scooted forward on the bar stool. She opened her legs and lifted her knees to invite him in. She was acting unusually friendly. Ryan was sure she had missed him. She was also not such a bad girl at all, not all the time. She deserved to go next, obviously. None of the other girls were even close to Remy in badness, really.\n\nRyan walked right between Claudia's open legs and kissed her, hard. His cock rubbed against her crotch and Claudia tried to guide it in with her hand.\n\nRyan had a better idea. He spun her around and bent her over, so that her ass bulged off the bar stool. Ryan glanced at Remy. No words were needed. She knelt and started to lubricate his cock with her mouth.\n\nRyan popped the plug out of Claudia's ass and fingered her own cunt juices into her butt. With that, and with Remy's help, it was easy for him to push his cock all the way inside. Claudia's body was now expert at allowing his big cock all the way in. She was still tight and her muscles gripped him harder than ever but entering her was deliciously easy. Her ass was a lovely fuck, it felt like home.\n\nIn her head, Claudia was almost ready to give up once again. Making love to Ryan this way, the way they always did it, felt better and better every time. With the energy flowing through her body it was easy for her to imagine what it would feel like to just forget there had ever been any other life for her. Having Ryan's monster inside her ass felt right. It felt like things were the way they should be.\n\nRyan didn't even slam her that hard this time. His pace would have been hard for someone else, but for them, it was a nice medium pace.\n\n\"Claudia?\" Ryan said.\n\n\"Not now. I'm not in the mood for that, please? If you have to hear it, then yes, I'm glad you're not dead. There, I said it once. Could that be enough for tonight?\" Claudia panted, between her moans.\n\nRyan smiled and fucked her more. He had no need to demand anything more from her, this time. He let the energy flow freely. For once, Claudia deserved to get a humiliation-free ride into her happy place.\n\nAt some point, Claudia started to slouch more. She bent lower and lower as her body became more and more powerless. Ryan reached around her and hugged her. The change of angle made her orgasm again, but Ryan didn't care. He kept going. It was like a return to the old days -- fucking a girl until she passed out and her body just melted in his arms.\n\nHe came deep inside her, but as was his custom, he pulled out early and let some of it spray all over her body, too. Remy was there to lap it all up. Ryan had no qualms about letting Remy suck his cock straight out of someone else's ass.\n\nRyan gathered Claudia's limp body in his arms and he carried her to the sofa. He laid her there, gently. Remy followed him on all fours.\n\n\"Now, what am I going to do with you?\" Ryan said to her.\n\n\"The same? Please?\" Remy gasped. Her eyes were wide with lust and reverence.\n\n\"No special games?\" Ryan said.\n\n\"Tonight is for you. Do anything you want. When we get back home, I'll tell you if I need something different.\"\n\nRyan grabbed Remy by her slave collar and pulled the long and lean beauty up from the floor. He kissed her and she was so happy to kiss him back she almost had tears in her eyes.\n\n\"I love you, Ryan,\" she whispered. \"No, don't you fucking say anything. I don't care about the curse. I don't care about the sex. I know you don't want to believe it, but right now, I love you, and there's nothing you can do about it.\"\n\nRyan took Remy's ass from behind, but he did it gently and sweetly. They were making love, truly. He softly caressed her body, and felt her piercings. The other girls soon gathered around them. They gave loving little kisses and squeezes to both of them as they spooned.\n\nRyan held his hand on Remy's cheek as he came inside her. He let it all in, and didn't spill a drop.\n\nClaudia had recovered. Even she gave Ryan a genuinely loving kiss.\n\nThe evening went on and the sex got more casual. Having had their fill, the girls didn't care about getting Ryan to just cum all the time. They hopped on and off for fun -- his, and theirs. Everyone chatted and laughed. It was a perfectly pleasant evening among the best of friends. The only difference from normal people was all the gratuitous, free flowing sex.\n\nSome of the girls had put some clothes on but Ryan liked to strip them back down again, or just run his hands under various bits and pieces. Eventually, the emotional turmoil of the past few days caught up with them and one by one the girls crashed. They all ended up sleeping on the big bed, more or less in a jumble.\n\nThe very first inklings of a sunrise were just creeping up on the horizon. It was just Ryan and Eleftheria left. They were sitting side by side on the sofa, watching the girls sleep.\n\n\"You're touching me. What if someone noticed?\" Ryan said.\n\nEllie smiled a melancholy smile. \"I don't care. A part of me wishes someone would. Isn't that so human? You make me want to be weak. You make me want to fall. Pain, humiliation -- whatever the price, I want to pay it. I yearn to pay a price to prove my... devotion for you.\"\n\nRyan did not say anything.\n\n\"I know you know I know it's just the curse. But it's a blessing. I will help you learn to love it,\" Ellie said. Her hand was idly stroking Ryan's naked cock.\n\n\"Why do you always lie to me? Can't you see that I want to trust you? Are you still scheming?\" Ryan said.\n\nEllie swallowed. \"I swear to you I am completely devoted to you now. My plot is purely for your own benefit, and I can't wait to reveal it to you, as soon as possible. That is the truth.\"\n\n\"You know I won't trust you until then. If ever,\" Ryan said.\n\nFor the first time in her existence, Ellie felt like she wanted to cry. She kissed him, instead.\n\n\"Do you want more already? We just did it yesterday. Or is this just an attempt to distract me?\" Ryan said.\n\n\"You are correct. I have no need of your gift right now. But I admit I want it. I also want you. I want to serve you, solely for your benefit. Not just to get what I need. May I?\" Ellie said.\n\nRyan said nothing so Ellie laid her head in his lap and took his cock into her mouth. She could taste a long night of sex on it but she had no aversion toward such things. To her, the other girls were trophies, symbols of Ryan's power. She liked to taste them on him because they belonged to him and it was right for him to take them and use them.\n\n\"I can hear their hearts beating. Don't worry. If any of them were to wake up I would realize it long before they do,\" Ellie said, to answer Ryan's question before he had even asked it.\n\nIt took Ryan a while to realize that Angels don't need to breathe. Ellie sucked him very deeply and greedily.\n\nShe pulled up again. \"I understand now why the others love this so much. I could serve you like this forever. And for my own pleasure as well, not just for yours.\"\n\nThe sunrise was already burning hot in the sky outside.\n\n\"Do you want it?\" Ryan said.\n\n\"No. It would please me if, from now on, you would only reward me when I deserve it,\" Ellie said.\n\nRyan had already shot dozens of loads so he did not care either way. He was still suspicious of Ellie's motives but it was becoming hard for him to always worry about everything all the time.\n\nHaving full access to the beautiful Angel's body had already made him care much more deeply for her. He wanted to have her in his harem. Even if she was out to betray him again, he wanted to enjoy her while he could. Ryan pulled her off of his cock.\n\n\"I need to rest now, too,\" he said. He had no idea how happy it made Eleftheria for him to reject her like this, even if she had practically asked for it.\n\nRyan calmed himself down and convened with his cursed energies. He slipped into a trance. Ryan soon realized the new form of the energy was more potent than the old one. It took him only about a half an hour to completely rejuvenate himself through meditation, a new record.\n\nThe girls were already waking up by then. Ryan topped them all off again before they had to leave for the airport. Claudia was already talking back at him again so Ryan did his best to make sure she would have to sit funny on the plane ride home.\n\nOver the Atlantic, there was little chance for any sexy fun. They had to keep a low profile. If they had risked any kind of a scene, the danger of someone accidentally touching Ryan would have been too big. Joining the mile high club would still have to wait."
    ],
    "authorname": "FacetiousTales",
    "tags": [
        "anal sex",
        "harem",
        "magic",
        "male dominant",
        "horror",
        "group sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/the-cursed-tattoo-pt-08"
}