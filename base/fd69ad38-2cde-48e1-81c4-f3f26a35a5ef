{
    "title": "Help Me, Sister Ch. 03",
    "pages": [
        "Sorry it took so long to get this chapter. Some of the parts are stressful to think and write about. It's a little short, but the concept was complete and a new one about to start.\n\nHope you like.\n\nLissa\n\n\n\nCHAPTER THREE - Mood Swings\n\n\n\nMaolisa woke to an empty bed and sighed. Resisting the urge to reach for a dressing gown, she walked down the hallway to Aislin's room. As she expected, Ash was there. On the floor just inside the doorway. Mail curled up beside her, spooning, and tried to doze off.\n\nAislin woke up with her sister snuggled up to her bum, snoring softly. Slipping out from under Mail's arm she made her way down to the kitchen and reached for the coffee beans. A box got in her way so she had to pull it out and then get what she needed from it. She smiled suddenly, remembering. There is a routine for making coffee. Laying out everything she would need first and then following the steps, she soon had fresh ground coffee brewing. She resisted the urge to jump up and down and clap, thinking she might be too old for that kind of thing.\n\nThe aroma of fresh brewed coffee guided Mail to the kitchen, where she found a naked Ash sitting cross-legged on the counter sipping a cup and looking out the window. \"Morning, Sis.\" Maolisa rubbed at her eyes and got an empty cup and started making some coffee for herself. \"Um, how come I found you sleeping on the floor in your room in the middle of the night?\"\n\n\"I don't know. Were you looking for something?\" Aislin looked a little confused, \"although if it was the middle of the night it probably could have waited for morning.\"\n\nMaolisa giggled as she figured out how Aislin had interpreted her question. \"I meant to ask why you were sleeping there. When I fell asleep we were on my bed all tired and comfortable. I thought you would like sleeping with me.\"\n\n\"When I was sleeping it was fine but then I woke up and it wasn't my room and you were close so I had to be scared. I couldn't go back to sleep so I went to my room and I could.\" Ash looked down shyly, then shivered as Mail finished making her coffee and came to stand in front of her, resting a hand lightly on her foot.\n\n\"Would it be better for us to sleep in your room, in case you wake up?\" Maolisa caressed Aislin's toes, smiling as her sister started getting excited and squirmed on the counter top, wiggling them.\n\nAislin sipped at her coffee, wiggling her little feet as her sister teased her, \"You're going to make the counter all messy and have to wash it.\" As her body started to tremble slightly, she frowned. \"I don't think that would work too well. When I wake up in the night and close to you and not too horny then I would still get scared. It's two things. A different place is scary and a person is scary.\" She looked thoughtful, or spacey, as she stared into her coffee cup. After a minute she brightened, \"but I think I can stop being scared of you cause you're my sister and I wasn't scared before, and new places can be old places in time and then not scary, but that means sleeping in the new place and being scared for a time until it's not a new place any more.\" She smiled wide, \"that's how come I can sleep in my room now; it's been time.\"\n\nLeaning over to kiss the tiny toes, Maolisa thought about it. \"Okay. How about we work on getting you comfy with me in your room first? I can spend time with you, maybe make you stay near me?\" She reached for her sister's cheek, caressing it, then stepped back as Ash's trembling threatened to spill her coffee. \"And we have to wash the counter anyway, you put your bare bum on it.\"\n\nOnce Maolisa was far enough away to stop being scary, Aislin realized she had asked two questions. \"You should only ask one question at a time.\" She tried to scowl at her sister but ended up looking silly, \"I might get confused and it would be your fault.\" She stuck her little tongue tip out between her lips.\n\nGiggling, Maolisa moved close again and tried to bite Aislin's tongue, then asked again, \"Would it be good to first try to get you comfy with me in your room?\" While she waited, she let her hands wander over her sister's body, enjoying the shudders and shivers it caused both of them.\n\n\"Maybe we can do that. I don't know how to get comfy, though.\" Ash shrugged, \"just happens with some people sometimes but not much.\" She unfolded her legs and slid off the counter into her sister's arms, then shuddered heavily at the skin to skin whole body contact, \"but we can try over and over and over,\" she trailed off, grinning and fidgeting nervously.\n\nLeaning in to press her lips to Aislin's, Maolisa murmured, \"You almost asked for what you want! Next thing you know, you'll be the dom one making demands.\" \n\nAislin ruined the kiss with a fit of giggles.\n\nMaolisa held onto Aislin for as long as she dared, then let her go and stepped away to let her calm down. Trusting Ash to know her limits was not always wise, especially when it came to things like hugs and kisses. \"Now how about clean up the coffee mess, and where you set your cute little bum, while I go get some jogging in?\"\n\nTurning to pick up the coffee cups, Aislin wiggled her bum at Maolisa, grinning back over her shoulder, then started picking up and putting away the coffee making gear seriously. \"Okay. I'm going down to the dock and jump in the lake, then bug you about a computer for me to play with and learn about stuff, then maybe it will be time for lunch.\"\n\n\"Whoa, Sis! Don't plan that much of the day. You know what will happen if something changes.\" Maolisa patted Aislin's bum lightly, \"how about just planning to go to the lake after cleaning this, and then see what should be next?\"\n\n\"Now I have to unplan it? That's almost as bad as changing, you know. I already was thinking about ...\" \n\nMaolisa cut her off with a kiss, holding her tightly as she started winding herself up to being angry. \"Ssh. Calm, baby. Breathe slow. We can work with it. Just think about now.\" As the tension in Ash's body flowed out, being replaced by trembling, Mail let her go, a little bit at a time, until they were just holding hands. \"We can do what you want, but take it in small bits, okay?\" Stepping back a little more, so their arms were outstretched and just touching fingertips, she watched Ash's hand becoming steady, then let it go. \"Can we do it that way, or do we need to use your plan today and do smaller plans tomorrow?\"\n\n\"Maybe some of the plan? Go to the lake then bug you and then think about next?\" Aislin looked like a lost little girl, very insecure.\n\nGiving her little older sister a big smile, Maolisa gave a cheerful, \"that works!\", then stepped close and kissed her before turning to the doorway. \"I'll be back shortly, okay?\"\n\nAsh smiled just as big, happy that she didn't get a lecture about how she should have handled herself. \"Okay! See you in a little bit.\" She got the counter cleaner out from under the cabinet as her sister left the room, scowling at the counter. \"Don't even see where I was. Probly gotta clean it all,\" she muttered at it.\n\nDressing in short-shorts, snug t-shirt, and tennis shoes, Maolisa made her way down the back stairs. She had considered going barefoot, but she knew her feet would kill her if she tried running that way. Aislin seemed to handle any surface without shoes, but Mail was starting to wonder how much was due to her just enjoying the extreme sensations. There was also her ability to endure some forms of discomfort to avoid others, such as enduring cold to avoid heavy clothing. Mail smirked at herself as she thought about how much Ash was changing her instead of her changing Ash. Before Aislin, Maolisa never would have considered wearing tennis shoes without some kind of sock, or going without panties or bra, and now she was doing all of that. Not that she really needed a bra, even when running, but it was what she was told was the right thing to do. As she started jogging toward the dock she wondered if she would ever be as comfortable naked as Aislin was.\n\nOnce Aislin had the kitchen the way she wanted it, which was 'perfectly' clean, she wandered out the back door toward the path to the dock. She heard her mother's voice in the back of her mind saying to wear something when going outside, but it was much fainter than it had been when she first arrived. Not that she had paid much attention; she loved her mother, but rarely listened to her rules. Walking across the grass she shivered, the tickle of the blades on the bottom of her feet sending thrills through her body, then shivered more as she stepped onto the dirt path. Her feet found crushed sticks, powdered leaves, even slivers of pulverized stone. A corner of her mind told her that the path must have been man made or very old. It was too smooth and consistent to be natural. She stepped off the side of the path and smiled, feeling the bushes and vines reaching out and caressing her body, finding places that liked being touched. When the leaves were too soft and soothing she stepped further from the path, when the briers and thorns were taking too many liberties with her skin she stepped closer. Tasting both sides of the line, she slowly made her way toward the dock.\n\nBy the time Maolisa made it to the end of the dock she was completely winded. She fussed at herself for being out of shape, but admitted that the path was a bit rough for running on. She looked down at her bare legs and shook her head, smirking. Aislin was going to love all those little scratches, if she wasn't annoyed that she wasn't the cause. After pausing to catch her breath, Mail started back up the path at a brisk walk, until she saw something white and ghostly moving slowly through the trees toward her, gliding effortlessly through the thick underbrush. A graceful wraith that resolved into Aislin as it glided around a thick clump of raspberry bushes. Stopping, she just watched, admiring how well her city-girl sister moved through the rough forest, ignoring the path. As she got closer Maolisa was able to see that Aislin wasn't really gracefully avoiding the obstacles, just letting them caress her as she walked past. Thin red lines, like highway marks on a map, covered her body. Mail cringed at some of the places they went, but Ash was walking as if in a dream, a faraway look of contentment on her face.\n\nSeeing her sister on the path, Aislin brought her attention back from wherever it was wandering and waved her fingertips, then stepped back on the path, sighing at the contrast between the packed dirt and the sticks, thorns, dead leaves, and rocks of the forest proper. She was tempted to step back off the path, but the way her sister was staring and smiling made her look like she might offer a kiss, and Ash couldn't pass up the chance of getting kissed. Ignoring the bushes, and their attempts to seduce her back into the raw forest, she made her way to her sister's arms as they rose to meet her.\n\n\"Ash, what in the world do you think you're doing?\" Maolisa started. As she saw the smile slipping from Aislin's face she quickly forced a smile to her own and tried to make her voice more lighthearted, \"I thought it was my job to scratch you all up.\"\n\nAislin wasn't sure what to make of the change from critical to happy, but it didn't really matter, as long as it was happy now. She let Mail look at her body for a minute, then pull her into a tight hug. \"I was walking in the forest. It's much nicer than walking on streets. You done running?\"\n\n\"I shouldn't be, it isn't far enough, but running on uneven ground is a lot harder than in a park. My legs are already wore out.\" Maolisa let Aislin pull away from the hug, then take her by the hand and start walking toward the dock. Being a step behind, Mail was able to watch Ash move and decided that the gliding wasn't an optical illusion; the way Ash moved she didn't do the head bobbing or side to side swaying most people do when they walk. Her upper body just seemed to float along as her hips and legs did all the swaying and twisting needed. It was an eerily sexy walk, Mail admitted, and wondered if she could learn it.\n\nAsh led her sister to the dock, then out to the far end. Sitting her on one of the support posts, Aislin knelt down in front of her and lifted her foot to her thigh, then untied the lace of the tennis shoe and removed it, lifting the cute little foot to her mouth for a kiss, then repeated the same for the other foot. Standing she reached for Mail's shirt and started to pull it up. Maolisa only resisted for the briefest second, looking around nervously, then lifted her arms to allow it to come off easily. Ash dropped the shirt on top of the shoes then put her hand out, obviously expecting Mail to take it, then gently tugged to get Mail to stand up. Kneeling in front of her, Aislin unbuttoned her shorts, unzipped them, and pulled them down, touching Mail's feet to get her to lift them out of the way. Aislin kissed Maolisa's soft smooth mound, then stood in front of her and smiled, having done everything without a word.\n\nPutting her arms around her sister, Maolisa hugged her, enjoying the feel of skin on skin and thinking how much more erotic it felt when done in a technically public place. Loosening the hug she kissed Ash lightly, then stepped back to look at her face, and smiled, \"that was pretty brave of you! I'm proud. Was it easier to just do it without asking or talking?\"\n\nBlushing brightly and looking down at Maolisa's chest, Aislin nodded, still not saying anything. She had been scared the whole time she was undressing her sister, but now that it was done and Mail praised her, she felt good. Too nervous to talk, she pointed at the water and beckoned for Mail to follow her, then ran off the edge of the dock, not even trying to dive. She swam out in the icy water far enough so Mail could jump in safely, then turned to watch.\n\nGritting her teeth to subdue annoyance, Maolisa watched Aislin run off the end of the dock before she had a chance to tell her that she didn't swim very well and that the water was too cold. She tried to run in twice before she could get past the edge of the dock, knowing the water was painfully cold. She wished that the immunity to cold that Aislin seemed to have had been one of the traits they shared. Taking a deep breath and closing her eyes she ran off the edge the way Ash had, nearly screaming as she went under, wondering how water could be this cold without being ice. She swam over to Ash and treaded water for a moment, then biting her lip, hoping the effort she made would be enough, blurted out, \"Sis, I can't swim good enough, and the water is too cold for me! I'm sorry. I tried but I can't.\"\n\nAislin felt odd about her sister's admission. She smiled and pointed back to the dock, then climbed the ladder behind Mail, leaning forward and biting her sister's bum. Once out of the water she used Mail's t-shirt to dry her off, rubbing roughly to get her warmed up again, then let Maolisa move away. She'd been close for about as long as she could stand, but hadn't thought to move away on her own. Sitting cross-legged on the old wood of the dock she considered her feelings about Maolisa not being able to swim in the cold water. \"Um, ya know that's the first time I could do something you couldn't.\" She looked at her sister's breasts, \"I don't know what to think.\"\n\nSmiling, Maolisa sat cross-legged across from Aislin's little body at a distance that wouldn't trigger any nervousness or fear, \"there's other things you can do either better than me or that I can't do at all. Like running around barefoot all the time. I can't walk on sticks and stones and such. When we were living up north, one time I tried walking across a gravel road barefoot and thought I was going to die, but Mom says you don't have any trouble with it.\" She looked thoughtful, \"and you know, there's tons of stuff you never even tried to do. Mostly for not having a chance, I know, cause Mom never had much money and Dad refused to send her any. Not that he had much, being a drunken loser. But anyway.\" She forced herself back on topic, \"I think we can get you the stuff to try anything you want and see if you can find something you want to do that you can be good at.\"\n\nAislin smiled widely, \"I already planned to ask and bug and be annoying till you get me a computer. I want to try writing and art and maybe other stuff.\" She wiggled her toes, then put her hands on them, making herself moan, her face flushing. \"Oops,\" she blushed. \"Anyway, I don't know anything about them or what's needed or anything but I really want to try making pictures and stories.\"\n\nMaolisa watched her sister make herself horny, thinking about what Ash wanted, \"That should be easy enough. We can go into town and see what is in the computer store, maybe someone there will know what would be best to start with.\"\n\nStopping herself from touching her feet, Ash looked at her sister, shocked, \"No! No stores! There's people there. Maybe get it online? I can wait for it to be delivered. Don't need to go to a store. Nope. Can wait.\" She continued muttering variants of no as she started caressing her feet again, stopping only when her self-induced orgasm distracted her.\n\nGrinning as she watched her sister masturbate simply by touching her own feet, Mail waited until she was finished, then stood up and reached for her shirt and shorts. Ash kept getting in her way when she tried to dress so after a couple of failed attempts she let Ash have her way and picked up everything to carry it, \"we're going to have to go slow. My feet aren't going to like walking on the path naked.\" She was surprised when Aislin took her hand and started walking beside her.\n\n\"Maybe we can go to the store if there's not a lot of people? Just some? Maybe do like Mom did and call and tell them I'm coming and maybe they can be nice and stay away and then you can ask what we need and then get it?\" Her voice quavered a little, and her hand holding Mail's was shaking, but she really wanted a computer of her own enough that she thought maybe she could handle going to the store if it wasn't too busy. Talking herself into doing things that scared her worked much better than someone else trying to convince her.\n\nSqueezing the little hand gently, Maolisa tried to keep the excitement out of her voice, not wanting to scare Aislin more by making a big deal of it. \"I thought you might want it fast, and I would like to be able to talk to the people to be sure of what we're getting. I can call and talk to the store and see if they can make allowance for you. Did Mom have trouble getting stores to do that?\"\n\nShaking her head side to side, Ash said, \"no, most places were happy to. One store wouldn't and we just stopped shopping there. Mom said stores that don't care about their customers shouldn't get their money.\"\n\nStill holding her sister's hand, Maolisa was nearly ecstatic. Being able to walk side by side with Aislin was a new thing for her and she was enjoying every moment of it, in spite of her feet complaining at her about the rough dirt and pebbles of the path. \"I'll call around, then, and see what we can do.\" She could feel a little trembling in Ash's hand but wasn't sure if it was the fear of going to the store or if being close was getting to her again. She peeked at Ash's body and didn't see much trembling so decided to continue holding her hand. She marveled at how tender Ash's fingers were, every bit of Aislin's skin was, as if even that refused to grow up, staying baby-soft regardless of what she did.\n\nAislin wiggled her fingers around in her sister's hand, trying to figure out where to get them so that it was easy. She could hold hands like a child holds her mother, but she wanted to have fingers intertwined like she saw in movies. When she finally got each of her fingers between each of Mail's she turned and twisted and fidgeted, exploring how it felt. She decided it was uncomfortable, but the contact with so much skin made up for it. Taking a deep breath she tried to keep her mind on sex so she could stay near her sister as they walked up the path. Being horny often helped keep the fear from turning into panic, sometimes it turned into being hornier.",
        "Seeing Ash's nipples stiffen and stand up from her flat chest amused Mail. She wasn't sure but she suspected Ash was using thoughts of sex to let her be close. Not that it was a bad thing; seeing her sister horny and naked outdoors was making Maolisa horny as well. Stopping, she turned to her smaller sister and released her hand, wrapping her arms around the warm little body. \"I love you, Sis. I want you to be happy. Sometimes it might mean I ask you to do hard things, like go to a store or talk to someone. Okay?\"\n\n\"Mom always says that, too.\" Tipping her face up, Aislin kissed Maolisa, \"love you.\" \n\n\"Did you make her walk around outside naked, too?\" Maolisa grinned. Feeling Ash's trembling growing rapidly, Mail let go and stepped back a step, noticing that she didn't have to move as far to see Aislin start settling down.\n\nAsh shook her head side to side, \"uh uh. We didn't have forest to walk around in so she had to wear clothes most of the time. I didn't go out much, either, cause of that.\" She held up her hand to show how white she was in comparison to Mail's light tan, \"See? No sun.\"\n\nMaolisa reached for Aislin's hand, brought it to her lips to kiss, then held on as she resumed walking up the path. \"I don't know if I should let you get a tan. I like you the way you are.\" Turning to look at Ash she grinned, \"I might have to make you wear clothes when you go outside.\"\n\nSeeing the grin, Aislin could tell there was some humor involved, but wasn't sure if she was interpreting it right so just shook her head side to side, \"Nope. Just for going to places like stores and doctor visits.\" Again she started repeating variants of 'no' until Mail stopped her by kissing her so she couldn't speak, getting her attention. \"Maybe sometimes for taking them off, though. Like role play? That can be fun.\"\n\nArriving at the house, Maolisa stopped just before going in the door to the kitchen. \"What do you know about role play? Especially role play that involves taking off your clothes?\"\n\nDucking around her sister, her face red, Aislin muttered, \"Um, not too much I think.\" Hurrying through the kitchen she called back, \"going to wash now. Maybe you can find a computer?\"\n\n\"We're going to have a conversation about that, Sis!\" Maolisa called after her, shaking her head. She made a note to herself to talk to her mother a bit more about exactly what sorts of things Ash has done and with who. Predators love people like Ash, who won't say anything unless asked, so abusers get away just by making sure no one has a reason to ask. Of course it could all be innocent, as well, although Mail wasn't sure how. She made her way to her computer room, dropping her clothes in a pile by the door, and started looking up local shops. Well, local in a relative sense, considering how far the nearest town was.\n\nLying in the tub and turning the shower on, Aislin satisfied a tension that had built up while keeping her mind on sex to be able to be close to Maolisa. She had considered following Mail around until she got the hint but she didn't want to have to talk to her about the past. For Aislin, the time it would take to shower would be sufficient for that conversation to be dead. As she was drying off she was already thinking only about the trip to get a new computer, making herself nervous but working on getting herself prepared to go without causing her sister too much trouble.\n\nMaolisa found several shops that looked promising, advertising a wide selection of computers and accessories. One she eliminated by asking basic questions of the salesperson, knowing the correct answers, and writing him off when he got them wrong. Another was eliminated when the manager was certain there would be no problem with accommodating Aislin but refused to listen to her needs; people who promise things without listening rarely deliver. She was left with one that seemed willing to work with her on prices as well as try to arrange for Aislin to be able to be part of the deal without scaring her half to death. Pleased with herself, she ran upstairs and got a quick bath.\n\nLooking in her closet for clothing, Aislin sighed heavily and sat on the floor. She had too many clothes and no idea how to choose. If she was just staying home and looking to be comfortable it would be easy, but she didn't know what was appropriate to go out. Her mother had usually picked her clothes for her, since she never seemed to grasp the necessary criteria. She started whimpering as she retreated from the stress, finding it more comfortable to get lost in her head.\n\nFinding Aislin staring into space, rocking back and forth, and whimpering, Maolisa sat beside her and laid her gently on her back, then hugged her tightly. Talking didn't seem to get her attention, but touching her chest made her gasp softly and stop the whimper noise briefly. Smirking and sighing, Mail fondled her sister, finding that it got her attention back from wherever she was much faster than just waiting. After less than ten minutes Ash was giggling and trying to touch Mail in return, having no memory of being lost or why.\n\nAislin found herself lying on her closet floor being molested by her sister. Whining a little at the surprise, she tried to remember how she got there but could only recall playing with herself in the bath. Before she could get upset, Mail had succeeded in getting her excited enough to distract her and she forgot about being mad, letting her sister's fingers bring her to orgasm. Resting on the floor after, she giggled at Maolisa. \"I guess I had a problem?\"\n\n\"A little bit. Do you remember what you were doing before I was touching you?\" Maolisa caressed her sister's chest lightly.\n\n\"I was in the bath fixing things, then I was here and you was fixing things.\" She shrugged, \"so nope, don't remember.\"\n\n\"Fixing things?\" Mail grinned, \"oh, you mean, um, yes. Okay. Well, how about we don't worry about it? We can just find you something to wear to the store and see about getting a computer. How does that sound?\"\n\nShe shook her head side to side, \"I can't get clothes. There's too many.\" Looking up at the clothes hanging in the closet, she rolled onto her tummy then stood up and tried to get out of the closet.\n\n\"Ah, I see. Could that be why you had a problem?\" Maolisa found a sun-dress that she thought would look cute on Aislin, \"I like this, Would you wear it for me?\"\n\n\"You're talking like I'm a baby!\" Aislin grabbed the sun-dress and looked at it, then smiled, \"It's cute! Thank you. Maybe it could have been.\"\n\nTousling her hair, Maolisa hugged her, \"you're my baby, is that okay?\"\n\n\"Yup!\" Aislin pulled the dress on over her head and waited for Maolisa to straighten the shoulders and neck. \"Need underpants, though. For armor. No shoes! I don't need shoes. Nope, not just to look at a computer.\" She smiled at Mail, making a pouty face. \n\n\"Ah, I can see you're starting to feel better, trying to get your way with the puppy face.\" Mail smiled back at her, \"but you didn't have to, the store manager said it would be okay if you don't wear shoes. Just don't step on anything pointy.\" Holding her hands between them, Mail looked into Ash's eyes as Ash looked at Mail's chest, \"No one will try to talk to you, they'll talk to me, okay?\"\n\nBiting her lip and nodding, she lowered her head a little, \"okay. But I still don't like it.\"\n\nMaolisa pulled Aislin to her and kissed her forehead, \"you know you turn into a little kid when things you don't like come up?\"\n\nAislin nodded, smiling sheepishly and murmuring, \"can't help it.\"\n\nOnce Aislin was dressed Maolisa went back to her room and dressed in jeans, t-shirt, and tennis shoes, then returned to escort Aislin to the car. She'd already been warned that Ash would not buckle her own seatbelt and needed a harness with a difficult clasp so that she couldn't take it off if her mind was wandering. Expecting a little fight from Aislin, she was pleasantly surprised when her sister cooperated, holding her arms out of the way and letting herself be strapped in, then waiting patiently as Mail moved around to the driver's side. Maolisa leaned over and kissed Ash on the cheek, then started the car.\n\nTwisting and turning a little, Aislin tested the harness. Finding that it held her securely, she smiled contentedly, leaning back and relaxing. Being restrained made her feel a little excited and gave her something to think about instead of worrying about where they were going. She looked out the window and watched the trees moving past, lightly touching herself, until they were entering the city. Turning her face down, she avoided looking out until the car stopped, then sat and waited patiently for Mail to let her out.\n\nMaolisa unbuckled her sister's harness, smirking at her. \"I know you can undo the clasps when you're not having a bad time. You don't have to wait for me to do it, do you?\"\n\nAislin nodded, \"Yes I do. Not supposed to do it myself cause then it can become a habit that I don't have to think about. Then in a bad time I could still do it and that would be dangerous. It's better if I don't practice.\" She let Mail take her hand and guide her out of the car, wincing as her bare feet hit the hot asphalt of the parking lot, then held her hand to walk to the store entrance.\n\nFeeling her sister's hand shaking, Maolisa squeezed it lightly, hoping it felt reassuring, and walked beside her across the small parking lot. The store they were going to was in one of the many strip malls that litter the landscape of the south, and seeing it made Mail nervous for Ash's sake. It was a bit smaller than she had expected, so if there were many people at all inside it would feel crowded; something Ash could not handle. Pulling the door open, she was relieved to see only three people, and two appeared to be employees.\n\nMoving behind Maolisa as one of the men approached them, Aislin pointed out to her that another of the men was setting the sign in the window to say 'closed'. She smiled when Mail nodded, then followed her to meet the approaching man. She looked him over, noting his casual clothing style, as he introduced himself as the owner and manager of the store while he waved away an obvious sales person that was heading toward them. Grinning shyly and looking at the floor as he looked her over in return, she tried harder to hide behind her sister, getting close enough to feel her body heat.\n\nKeeping herself between Aislin and the manager, Maolisa explained what they were looking for, and stressed that it was for a beginner, so top end would be overkill. He pointed out that going too low end would also be a problem as the lack of features would be discouraging. Mail followed him to a stand of keyboards and monitors running demonstration software and let him show how it could be frustrating to not be able to manipulate images due to lack of features or the hardware being too slow. Maolisa had to agree with him when she tried a few things that she thought should be basic but weren't supported. As they talked and looked over models and accessories she kept an eye on Aislin as she started wandering and looking at things.\n\nFinding a demonstration machine with a drawing tablet attached and a graphics program running, Aislin started drawing pictures. She experimented with the buttons on the tablet, then started clicking the various menus and the tools they would make available, then played with the various coloring effects. Being engrossed in her artwork she didn't notice a salesman approach until he started to say something to her, startling her into yelling, \"stay away!\" and backing away quickly. Once she was at a safe distance, which for a complete stranger was about eight feet, she looked around for Maolisa, then ran to her and hid behind her back again, muttering \"stay away\" over and over until Mail hugged her and put a finger on her lips.\n\n\"Sorry, Ash is extremely afraid of people. She can't stand to be closer than about eight feet to strangers, and even friends and family scare her if she is too close for too long.\" Maolisa was a little annoyed since she had made that clear on the telephone earlier, but then saw how the manager was glaring at his employee and saying something about how he was told to stay away, and she realized it was just a mistake by one person. She turned back Aislin and let her pull her over to the art demonstration, noticing that Ash was so excited she wasn't trembling, except the vibration of a kid that can't contain their energy.\n\nAislin showed Maolisa how she could draw things and manipulate them, getting wrapped up in what she was doing and forgetting she was just showing the device. She giggled nervously when Mail managed to get her attention and remind her they hadn't bought it yet, and told Mail, \"hurry up!\"\n\nBeing very careful, Maolisa explained that she would get it, but first they had to find the best combination of price and features. She could see Aislin was having trouble holding her temper, but couldn't think of a way to get her to be patient, and trying to hug her or calm her was having the opposite result. Repeating that she was just finishing buying it, she tried to hurry through the transaction.\n\nAsh needed Mail to get the computer so she could draw more. She pointed at the drawing she was doing and tried to explain what she was doing but she was mad and there were no words. Why couldn't her sister understand she had to have it? She was doing something important! Grunting and pointing, she tried yelling to make the words come out but they remained inside, only a loud 'aaahhh' escaping her mouth. She wasn't aware that she was stamping her feet and jumping, her little hands balled into fists as she cried in frustration. Her head felt fuzzy and clouded, and she blamed Maolisa. If Mail had just got her the computer she needed she wouldn't be so mad and hurting. Her annoyance spiraled down through anger into blind, unthinking rage.\n\nWhen Aislin started trying to hit her head on things Maolisa grabbed her around the body, trapping her arms and holding her away from anything she might break or that might break her. With great effort she pulled her sister to the door as one of the sales people opened it, then to the car as the other opened the car door for her. She wrestled Ash into the car and buckled her into the harness, still screaming, and went back into the store to finish purchasing the computer. Maolisa asked if there was some way they could save the picture Aislin had made and the manager pulled a USB drive out of a drawer, copied the files to it, and gave it to Mail, telling her it would be no charge. The salesmen loaded the components into the trunk for her as she tried to soothe Aislin.\n\nAs the car started moving, Aislin calmed enough to stop yelling. She still couldn't find any words, so leaned her head against the side window and just cried softly, not knowing what had happened. Her memory of the store was fading fast and all that remained was the feeling of having been very angry, with no idea why. There was a feeling of something lost, but she couldn't recall what it was, just that it was very important. She leaned on the door whimpering, gradually falling asleep.\n\nTears running down her cheeks, her heart breaking for her sister, Maolisa drove carefully, taking frequent looks at Aislin to see how she was doing. When Ash's face started relaxing and the whimpering sounds stopped Mail was able to start relaxing herself, her heartache easing a little. She felt bad for hoping that Aislin's fragile memory would lose the events of the store, but she also felt it would be easier for Aislin. The aftermath of Aislin's temper was never good, but was worse when she remembered it; the guilt Ash put on herself could last days, keeping her from enjoying anything. Arriving home, Maolisa unbuckled Aislin but left her sleeping, then started unloading the computer components.\n\nThings bumping and thumping and making the car shake eventually woke Aislin. Looking around groggily she discovered she wasn't restrained. She stood and looked at the pile of boxes Mail had stacked by the door, then, recognizing the logos on the sides started getting excited until she saw the one for the drawing tablet. Remembering her lost drawing, she started to cry.\n\nMaolisa was looking at Aislin and noticed what she was looking at when she went from excited to crying and quickly pulled out the USB drive the store manager had given her. \"We have your picture, Sis! I saved it for you. See? It's right in here. As soon as we get this stuff put together you can have it again, okay?\"\n\nReaching for the drive, Aislin looked at it closely, \"The whole picture is in it?\"\n\n\"Yup. All we have to do is plug that into the computer once it is set up and copy the files over. Then you can work on it more or just save it or print it or whatever you want.\" She watched as Ash's face went from extremely sad through relieved to happy, then continued spiraling through to ecstatic.\n\nJumping up and down, giggling, bouncing on her toes, clapping her hands, and grinning wide enough to make her cheeks hurt, Aislin looked more like a five year old than an adult, but she wasn't aware of it. She let her body express her happiness any way it chose, without regard to how it looked, and didn't pay any attention. She clasped the drive to her chest, her fingers gripping so tightly they turned white, tears of happiness replacing the ones from sadness on her cheeks. She stopped Maolisa from picking up another box so that she could grab her in a hug, still bouncing up and down like a schoolgirl. Her uncontrollable giggling was infectious.\n\nMail hugged her sister tightly, enjoying the rare chance to do so without worrying about her getting scared, the bouncing making it a little more amusing. She had been aware of Aislin's tendency to go to extremes with her moods, but had not seen the full range in years. The tempers were scary and heart wrenching, but the euphoria was delightful. Disengaging herself gently, she suggested Ash let her take things up to the library so she could set up the computer. A little nervous that Ash would take it as rejection, Maolisa was pleased when she was let go, Aislin's eagerness to have her new toy overriding her tendency to take things as personal affronts. Giggling as Ash continued bouncing and laughing and clapping, Mail started carrying the boxes into the house and up to the library.\n\nAislin wanted to help Maolisa carry the boxes upstairs, but she wasn't allowed to carry fragile things very far. She might forget she had them and open her hands, leaving them to fall and break. Not that she forgot all that often, but there was no way to tell when it might happen. Just to be safe she was clutching the USB drive tight enough to make her hands ache. It wasn't fragile but it was small and might get lost and then she'd have to get sad again and she hated that. She fidgeted, scraping her bare feet on the concrete garage floor in a way that Mail told her hurt just to watch but felt exciting to Ash. As Mail came for the last box Ash ran up to the library ahead of her.\n\nThe computer was winning the battle against Maolisa's temper. While she didn't have the super short fuse of her sister, nor the tendency to spiral from minor annoyance to animal rage in minutes, she did have limits to her tolerance for frustration, and they were being reached. It seemed no matter how she inserted parts in, getting them all feeling snug, when she turned on the box it just made varies beeping sounds and shut itself off. Using her own computer to look online for what the beeps meant didn't help any, since it was a different combination every time. She'd already sent Aislin outside for a bit so she wouldn't notice Mail getting upset at the thing. Well, that and because that much exuberance when things weren't going well just made the annoyances feel worse. Plugging the screen into the video card again, Mail pushed the power button, listened to the beeps, and threw the instruction book across the room when the box turned itself off again.",
        "\"No throwing stuff! It's bad bad bad bad bad. You want a spanking?\" Aislin walked into the room just in time to see the book fly. She sighed heavily, \"and people say I have a bad temper! At least I never throw things. Um, mostly.\" She bent over to get the book, letting Mail leer at her bum for a minute, and looked at the illustrations on how to set the parts up. She pushed Maolisa out of the way and pulled the side off the box, then looked back and forth between the box and the book. Reaching inside with tiny fingers she pulled out the memory sticks, fiddled around with the locking levers, then reseated the sticks. She did the same with the processor and then the graphics card. Tracing all the wires, she reseated every connector. Squatting beside the box and giving it one last look she put the side back on, slapped it hard muttering \"better work dammit\", and turned it on. It stayed on.\n\nSitting cross-legged on the floor beside Aislin, Maolisa slapped the carpet with both hands hard enough to make them sting. Rubbing them together ruefully, she growled, \"you don't even know anything about computers! Why did it work this time?\"\n\nAislin held her hand against Mail's, showing the comparative slimness of her fingers. \"One, gots skinnier fingers. Two, even computers are afraid of making me mad.\" She stood up, then reached to pull Mail up. \"I just made all the parts snuggle together, since you had them in the right places. The memory stick latch things fit funny, so then I did all the others just in case they fit funny too.\" She pulled her sister around the desk to watch the boot screen, then looked puzzled, \"how come it says Windows? You said you like linux better.\"\n\n\"I do, for the things I use the computer for. What you want is different. There are a lot of good graphics programs for linux, but not enough. Linux would be cheaper, more secure, and easier to maintain, but that's not a good reason to give up functionality.\" She shrugged, \"a computer and its operating system are tools to me, and probably will be to you, not a religion. We use what works best for what we want to do.\" She grinned, \"and it does have linux as well. You can boot into it if you want, and run Windows in a virtual machine, or run the linux in a virtual machine and leave Windows as the main OS, so you can have the best of both.\"\n\nSmirking, Aislin smacked her sister's shoulder lightly, \"I bet that's all just gibberish so you don't have to explain to your dumb sister.\"\n\n\"You aren't dumb, you just haven't had a chance to learn this stuff yet. The place we went preinstalls Win and linux because they mostly deal with geeks, so you have a choice. But,\" she sat down at the desk and started setting up logins for both of them, \"they can't preinstall software since there's no way to know what people want and they can't put everything. That part takes time but it's easy.\" She pulled out a box that had the logo of the graphics program Aislin had been playing with at the shop, \"First I'll put this on, though, and let you play a little before I add more stuff, okay?\"\n\nAislin nodded eagerly, perching on the side of the chair until Maolisa pulled her in to sit beside her on the seat. \"So I can put this in,\" Ash held up the USB drive, \"and work on the picture more? It's not done yet.\" She squirmed a little, enjoying the feeling of her naked body against Mail, in spite of Mail still being dressed from going out.\n\nHugging Ash before returning to answering the install questions, Maolisa nodded, \"yup. I thought you might want to do some more with it. You were having too much fun to make you wait long.\" Once the questions were finished she sat back to let the install proceed, pulling Ash onto her lap and caressing her chest to get her horny enough to endure being close during the boring wait for the program to be ready.\n\nThe program finished installing about the same time that Aislin was noticing that she was having trouble staying comfortable so close to Mail. She squirmed and touched herself between her thighs while Mail reached around her to answer the post-install questions and let the program start, muttering repeatedly, \"is it ready yet?\" She admitted to having no patience at all, even though sometimes she tried. Not often, but sometimes.\n\nSmiling, Maolisa lifted Aislin from her lap then set her on the seat, taking the USB drive from her and putting it into a slot in the side of the flatscreen, then leaned over and grabbed the trackball as the box asking what to do with contents popped up and clicked open. She set it to copy the files over to the computer's hard drive, then removed the drive and put it in a drawer in the desk before starting the drawing program and getting it to open the drawing for Ash, smiling again as Ash started giggling like a little kid, bouncing on the chair. She barely got her hands out of the way in time for Aislin to pull the drawing tablet on its rack over the keyboard and reach for the stylus. Backing away, she stepped around the chair and caressed Aislin's long hair lightly, her heart melting as her sister forgot the rest of the world existed.\n\nAislin experimented again, finding the tools she had used in the shop, then trying more. Opening the help window, she pushed it to one side where she could get it with a tap of the stylus on the side of the drawing surface, then accidentally found the touch sensitive buttons along the side of the tablet. Playing with them a little she found she could set one to pull up the help screen when she touched it. Giggling almost maniacally she closed the help window and made the drawing window full screen, then touched the help button to pop up the help screen and then again to make it go away. Once she was sure she had it as she wanted she resumed drawing and modifying and experimenting. The help file suggested using a tutorial to learn each thing step by step, but since it used a drawing she didn't want to make she skipped that part, just choosing to use the context help each time she found a new thing. For hours she alternated between fixing the picture and practicing a new tool.\n\nWhen the sun was down and the sky was darkening Maolisa peeked in on Ash, smiling softly to see her concentrating, her little tongue tip poking out of the side of her mouth as she ran the stylus over the tablet, apparently engrossed in her art. Hesitant to disturb her from something she could sink herself into so fully, Mail decided to prepare a simple dinner she could eat at the desk. She was glad that the antique desk was so large. There would be room for books, food and other things without needing to keep moving the computer parts around. She made a note to put a cupholder on the side of the chair so there wouldn't be any need for drinks to be near the desktop, keyboard, or tablet. Ash wasn't always the most coordinated person, especially when in a mood surge. A spill-proof cup would probably be a good idea, as well. She went down to the kitchen and looked for something she could make into a finger food for her budding artist.\n\nLeaning back in the chair, then sliding down so her bum hung off the edge, Aislin looked at the picture and nodded. \"That's about it, I think.\" She looked around and found a plate with a few pieces of torn up grilled cheese sandwich and a nearly empty travel-cup of soda beside her tablet. A vague memory of eating and drinking lingered on the edges of her awareness. Shrugging, she squirmed a little and discovered Maolisa was sharing the chair with her. She giggled, \"I was away again?\"\n\nShaking her head, Maolisa snuggled her sister, naked body to naked body, \"I don't think it counts as going away. You were just focused on what you were doing, not inside your head.\" She pointed at the picture, a moderately realistic rendering of the two of them hugging on the dock. \"That is much better than most of what I see on the art sites on the web, and it was your very first! You're awesome, Sis.\" She licked Ash's lips and caressed her chest, pulling playfully at her nipples, \"if that is 'going away' then you should do it a lot. You're talented.\"\n\nBlushing, Aislin buried her face in the curve between Maolisa's shoulder and neck, murmuring softly, \"is just a picture. Making it not flat is hard, though. I wanted to make it look like real people but I think that I need to start different.\" Sucking in a little gasp as Mail pushed her away a little and leaned over to bite a nipple, she grabbed her sister's head and pulled it to stay tight to her chest, \"but maybe another time cause this time is probly time for something else.\"\n\nUsing the silk sash she had brought with her, Maolisa tied Aislin's wrists together and stood up, then towed her, reminiscent of their first time together, to Ash's room. She untied her sister only long enough to tie her hands behind her back, then laid her on her back on the bed. Climbing on top of Ash, Mail forced kisses (not that much force was required) onto the little soft lips. Biting gently, she slowly moved down Ash's body, her teeth scraping first on her chin, then throat, pausing as Mail had to figure out how to bite the broad flat chest, then moving slowly toward each nipple, biting hard enough to make Aislin whimper but not enough to make her cry. Biting lower, at the fluttering tummy, Mail giggled as she watched the muscles make waves from ribcage to mound and back at each bite. She moved lower, taking a pause to lick her sister's navel until she giggled.\n\nAislin, her attention yanked to her tummy, squirmed and wiggled under her sister, her pussy wet and begging for someone to do something with it. Her mouth refused to say the words her pussy sent to her brain, leaving her whining and twisting, her hips pushing up against Maolisa's body, moaning softly as her sister's skin slid firmly against her soft, smooth mound. Gasping for breath, she pushed her hips up over and over again, hoping Mail would notice.\n\nMaolisa noticed and grinned. Moving slowly down from her sister's navel, she licked and bit at every bit of skin she could, taking her time as Aislin pumped her pussy against Mail's body, first her stomach, then her chest, now her chin. By the time Mail's mouth was at the puffy mound of her sister's pussy Aislin was moaning and whimpering, humping so hard that Maolisa was sure Ash was going to cum whether Mail did anything or not. She continued biting the soft pillowy tissue, licking as her tongue found a fold. As Ash thrust harder and faster Mail used her hands on her sister's thighs to keep her shoulders and head bouncing in rhythm to avoid injury, her mouth working to tease Aislin's body even as she knew Ash was at the end of her resistance.\n\nAs Mail's mouth covered Aislin's lips, her tongue spreading them, Ash thrust hard and fast, bucking her pelvis in orgasm, squeaking as she tried to squeal, her sister's tongue reaching her clit at just the right time to push her higher. Her legs wrapped around Maolisa's back, her heels kicking hard as she thrust her pussy into Mail's face, moaning deep between gasps for air. She twisted side to side, trying to get her hands out from under her. Being unable to just made her orgasm stretch out longer; something about being completely helpless made her hornier. She giggled to herself as the orgasm started to wane, thinking how nearly everything made her horny. She was distracted from her momentary lucidity by the touch of Maolisa's mouth on her toes.\n\nFrom the sound of Aislin's heavy breathing Maolisa was sure she was ready to orgasm again even though it had only been a minute or two. She smiled wryly, wishing it was so easy for her to cum; one touch of Ash's toes and she was halfway there. Mail needed a lot more touching, or a lot more mental stimulation. Such as watching her sister cum. Caressing the cute little foot, she turned and watched her sister throw her head back, arching up in another orgasm. She shook her head, grinning, and crawled around Ash on her hands and knees, moving toward her head.\n\nWhen Maolisa straddled Aislin's chest, her hot, wet pussy almost on her face, Aislin tensed. When she looked down into her eyes, Aislin shuddered and trembled, quickly looking down, straight at the smooth puffy folded mound of her sister. She licked her lips, then bit them, then moaned as she tried to say something, but she didn't have any words to say, just feelings, but Mail couldn't hear her feelings. She tried to lift her head but was afraid she might be doing the wrong thing. Biting her lip, she whimpered.\n\nNot wanting to torture Aislin emotionally, Maolisa scooted up on her knees until her pussy was right above her sister's mouth, then lowered herself, whispering, \"it's okay to lick. I want you to.\" She smiled down, \"just think of what you want me to do to you, and do that to me, except no hurting.\" She grinned as Ash giggled into her pussy, the vibrations running through her excited body. As Aislin thrust her stiff tongue directly into the fold of her pussy, Mail groaned. \"Did you ever lick another girl?\"\n\nShaking her head side to side, Aislin bit at her sister's mound, then murmured into it, \"nobody told me to.\"\n\nThe vibrations of Aislin taking into her pussy made Maolisa moan before murmuring in response, \"then I'm going to tell you lots of new things to do.\""
    ],
    "authorname": "FaeLissa",
    "tags": [
        "incest",
        "lesbian",
        "sister",
        "autism"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/help-me-sister-ch-03"
}