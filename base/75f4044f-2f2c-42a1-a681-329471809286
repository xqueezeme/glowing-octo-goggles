{
    "title": "Three Square Meals Ch. 101",
    "pages": [
        "Professor Friedrich strolled into the cafeteria and nodded to another scientist in a white lab-coat, who was a shorter, considerably wider gentleman. \"How are you this fine morning, Doctor De Vries?\"\n\n\"I wish I was still in bed,\" the squat researcher grumbled, as he cast a dubious eye over the food on offer for breakfast. \"Haskins ordered us up at the butt-crack of dawn to work on Virus Z460. Apparently, we're running behind, but I keep telling him: you can't rush art!\" \n\n\"You have my sympathies,\" Friedrich replied, grabbing a cup as he started to hum happily to himself. \n\nDe Vries turned to look at his colleague suspiciously; Friedrich's happiness invariably meant a great deal of pain for someone else. \"You're in an awfully good mood, Xavier...\" \n\n\"I'm beginning the first round of testing today... I can't remember ever being this excited before!\" Friedrich confided, a broad smile on his face. \"It's always such a thrill to experiment on new Xeno subjects and these are so rare!\"\n\nDe Vries smirked and shook his head. \"You Xeno-biologists are all alike when you get a new toy to play with, but all that testing is so... messy. Now virology, there's an exciting field!\"\n\n\"If we're talking messy, what about the clean-up operation after your human trials of that Rogan's Rot strain?\" Friedrich asked, giving his colleague a knowing smile.\n\n\"Hah! Alright, you got me there,\" De Vries conceded with a chuckle.\n\nFriedrich fumbled for his security pass before managing to get his fingers under control, then swiped it across the front of the coffee machine. \"Look at me, I'm as nervous as a virgin bride on her wedding night!\"\n\n\"Have fun popping your cherry,\" De Vries chuckled, then grabbed a limp-looking wrap from the refrigerated shelf and took a big bite.\n\nFriedrich picked up his steaming cup of coffee and took an experimental sip, then winced at the foul assault on his senses. \"Ugh, the coffee here is rancid...\" Smacking his lips to get rid of the bitter aftertaste, he tapped the comms interface on his wrist, a grim-faced man appearing as a projected hologram a few seconds later. \"Sergeant Green, would you be so kind as to prepare our guests for me.\"\n\nThe special forces soldier nodded. \"We'll get started right away, Professor.\" \n\n\"Excellent. As soon as the Xenos are prepped for exploratory surgery, you can begin your interrogation,\" Friedrich said with satisfaction. \"We need to find out everything she knows about John Blake.\"\n\n\"Yes, Sir,\" Sergeant Green replied grimly, before snapping off a quick salute.\n\nFriedrich ended the call and grinned at De Vries who was dabbing at a bit of ketchup on his shirt. \"It's going to be a momentous day for breakthroughs, I just know it!\" he said jubilantly.\n\n\"Let's hope some of your luck rubs off on Virus Z460,\" De Vries said with a weary sigh.\n\nGiving his colleague a wave goodbye, Friedrich left the cafeteria and strolled out into the corridor beyond. There was a light coating of dust over the floor from all the particles in the air, stirred up with all the expansion to Tartarus base over the past several months. Friedrich frowned at the floor in irritation and silently thanked the inventor of force fields; if not for them, he'd never be able to maintain the sterile environments he needed.\n\n***\n\nJade watched with narrowed eyes as the black shuttle made slow but steady progress towards the broken fragment of Ganymede. It was the second largest remaining piece of what had once been Jupiter's biggest moon. Ganymede had been obliterated centuries earlier during a rogue AI rebellion, the Terran Federation fleet bombarding the moon until it broke apart, causing untold devastation and shutting the AI down permanently.\n\nThat Weber had initially fled towards Jupiter had been an intriguing development, as the huge gas giant was uninhabitable, the planet's surface covered in raging storms. Jade had strongly suspected he would be running for Tartarus base, which couldn't possibly be located on Jupiter itself. That meant that his destination would be one of Jupiter's many other moons, but only Io, Europa, and Callisto were populated with conventional starbases. Jade had come to the conclusion that one of the other tiny moons was their most plausible destination, so it therefore came as quite a surprise when Weber's shuttle abruptly changed course for a remnant of Ganymede.\n\nThe Nymph was almost afraid to blink, as she knew that if she lost sight of the craft, it would be impossible for her to find with her own shuttle's sensors. Both vessels had been specifically designed to avoid detection, devices built into the hull dissipated energy from the ships, dropping their sensor profiles to almost nothing. There was a huge jutting section along the side of the shattered rock and she watched intently as the black shuttle swept around the protrusion, then coasted into a dark fissure in the side of the massive asteroid. \n\nAs much as Jade wanted to wait for John and the girls to join her, she couldn't take the risk that Weber would order her Lenarran sisters put to death to cover his tracks. She tilted the flightstick back slightly, lifting the nose of her shuttle and aiming for a small rocky shelf approximately fifty metres from the concealed hangar...\n\n***\n\nThe Raptor's nose tilted upwards, retro-thrusters firing along the underbelly, and the engines blazed with an incandescent orange light as the gunship rocketed skyward. As they raced away from the Citadel and Terra's surface, John floated up in the blue anti-gravity field with Alyssa and Rachel following close behind. The brunette darted past, dropping her Reaper Cannon and Paragon helmet on the floor as she wrapped Dana up in a fierce hug.\n\n\"Alyssa told me what happened... are you alright, baby?\" Rachel asked, with a look of concern on her beautiful face.\n\nDana gave her girlfriend a wan smile. \"Yeah, I'm okay. Let's give Jade some backup, then we can talk later...\"\n\nJohn could see Dana was trying to be brave and his heart went out to her as she bit her lip and glanced his way. They made eye contact and she shook her head slightly, that look telling him everything he needed to know.\n\nHe leaned in to place a gentle kiss on her cheek. \"We'll make sure Jehanna and the Nymphs are safe, then we'll talk, okay?\" \n\nDana nodded, then leaned into the hug with Rachel, the brunette murmuring loving words in her ear.\n\nJohn turned to look at Alyssa, who was standing beside the Pilot's chair, looking at the zoomed in view of the Tactical Map centred on the asteroid belt that used to be Ganymede. \"What do we know?\"\n\nThe blonde pointed to one of the larger chunks of the blasted moon. \"There's a hidden hangar behind that jutting out bit. Jade's going to park just outside, then infiltrate the base.\"\n\n\"I hate going in blind,\" John said with a worried frown. \"It'd be fine if this was just a sweep and clear, but having no intel on a rescue mission is a nightmare...\"\n\nAlyssa glanced at him, her brow furrowing with concern. *You think they might kill the girls?*\n\nHe hesitated before answering. *I honestly don't know. Weber's been belligerent with me, but he did seem reasonably rational. He might try to bargain for his freedom in exchange for their lives... but I just hope to hell he doesn't decide to get vindictive and tie up loose ends.*\n\n\"When we land, I'll sweep the base with a psychic pulse,\" Alyssa said, studying the map again. \"It won't give me a map of the base, but I'll know where the bad guys are.\"\n\n\"I'll hit the ground running,\" John said with a nod. \"I'll try and link up with Jade while the rest of you girls clean up.\"\n\nAlyssa nodded, her eyes narrowing in fury. \"The place won't be very clean when I'm done with it...\"\n\n***\n\nJehanna Elani lay on a bolted-down cot in the corner of the blank featureless cell and feigned sleep. She'd been imprisoned there for several days but had no way of knowing precisely how long for. Her stomach felt hollow with hunger and she was thirsty too, having been given a bare minimum of water. Her father had warned her about this kind of thing and she recognised the tactic for what it was; her captors were softening her up for an interrogation. While knowing exactly what was happening helped her feel like she wasn't completely powerless, it didn't help fend off the hunger pangs, or ease her parched throat.\n\nAt the start of her captivity, she knew that Avery would report her missing, and she'd been confident that John would storm this base and rescue her. As the days rolled on, she realised that he must have no idea where she was, leaving her increasingly anxious. She'd been lashing out at the soldiers keeping her here, mostly to keep them off-balance, but what Jehanna really wanted was to find out who had captured her and why. Reminding herself what a scoop that would be helped keep the fear under control, as she could pretend that she was just deep undercover on a story. \n\nThe door swished open but she kept her eyes closed and her breathing even. This was the first time they'd risked entering her cell in days, after she'd pretended to be sick, then raked her nails across one of the soldier's faces. Jehanna had also managed to kick another one of the other soldiers in the balls as they tried to pull her off their squadmate; she'd received a backhander afterwards, but hearing the man groan in pain had been worth it.\n\n\"Alright, I know you're pretending. Get up nice and slow, Miss Elani,\" the man at the door said in his gruff voice.\n\nJehanna cursed inwardly, then carefully opened her eyes. The man at the door was pointing a pistol at her, and by the looks of it, it was probably some kind of stun gun. She sat up slowly, then rose to her feet, trying to appear sullen and subdued. Obviously, her captors had decided that it was time for her interrogation, but Jehanna suppressed the icy surge of fear and tried to surreptitiously observe the man standing in the doorway. \n\nHe was wearing body armour which made his tall frame look even more imposing, even without wearing the helmet which was currently attached to his belt. Aside from his pistol, Jehanna spotted the barrel of a nasty-looking assault rifle poking up over his shoulder. She knew she would have had no chance of overpowering him, even if she wasn't in a weakened condition, so her best option was simply to play along... for now.\n\nBacking out, the man kept the pistol trained on her. \"Alright, come on out, Miss Elani.\"\n\nJehanna did as instructed, then followed him into the wide, brightly-lit corridor. There were two other soldiers here, similarly armed, and they watched her warily, equally careful about getting too close. She had to suppress a smirk that these three big men would be taking such precautions around a 120-pound woman.\n\nThey led her past what seemed like dozens of cells, then they walked through a checkpoint and approached a force field, which shimmered with a faint blue light. Jehanna eyed it suspiciously, but the men strolled through without hesitation, so she followed without having to be prompted. They went through a set of reinforced titanium doors into a less well-lit part of the base, where a thick carpet of dust lined the floor. Going from the bright white sterile environment to these murky surroundings filled her with trepidation, but Jehanna just kept reminding herself what great photos these would make.\n\nThe man in charge opened a side door, then stepped back and gestured for her to proceed inside. Jehanna turned to look into the room and for all her bravado, couldn't help feeling a flicker of terror when she saw inside. There was a metal chair bolted to the blood-stained floor, with tables set up on either side, horrific-looking instruments of torture gleaming in the light.\n\n\"It's time we had a little chat, Miss Elani,\" the soldier said, with a sadistic smile.\n\n***\n\nProfessor Friedrich pressed his hand to the DNA reader next to the door, then waited patiently for the light to scan his hand. The wall-mounted device chimed as it recognised his genetic code, the door sliding open to admit him to his pristine lab. The facility was meticulously clean and he relaxed now that he was away from all that horrible dirt. \n\nThere were a pair of soldiers in combat armour waiting inside, standing by the four Lenarrans who were lying on the specially-prepared operating tables. The Nymphs were restrained, held in place by padded leather straps around their limbs and chests. Friedrich smiled with approval when he saw the straps; he'd relied on force fields during the early days of his career, but learned his lesson after a blackout freed a captive Drakkar. Studying his four prisoners, he saw that the Nymphs were very differently proportioned, and he knew they were still in the forms chosen for them by their now deceased masters.\n\nThe closest was a very curvy brunette wearing skimpy lingerie and she glanced his way, giving him a warm smile. \"Are you this one's new master?\"\n\nBefore he could reply, the waiflike blonde, sultry brunette, and the redhead with comically exaggerated sexual characteristics all looked his way too. \"Are you this one's new master?\" they all parroted as soon as they saw him.\n\n\"They'll keep doing that every 15 minutes,\" one of the soldiers muttered with a frown. \"Want me to gag them?\"\n\nFriedrich shook his head. \"No, no, it's quite alright, Halverson. It'll be harder to judge their pain responses to stimuli if you prevent them from speaking.\" He paused and glanced disapprovingly at their clothing. \"But why are they still dressed?\"\n\nThe other soldier glanced at his colleague then said, \"We ah... didn't want you to think we... erm.\"\n\nThe professor rolled his eyes. \"Come now, Collins, I trust you can control your baser urges.\" Shaking his head, he gestured to the closest brunette and continued, \"I'll begin my first tests on her, while you strip the rest...\"\n\n\"Yes, Sir,\" Trooper Collins said, approaching the second brunette in her long evening dress and pulling out a knife from his combat webbing.\n\n\"I trust neither of you have a weak stomach?\" Friedrich asked, as he picked up his favourite laser scalpel. \"If you have, please leave immediately. I have no desire to see my lab spattered in vomitus.\"\n\nBoth soldiers shook their heads, much to the professor's relief. He stepped up to the Nymph and gave her an eager smile as he brought the tip of the surgical device close to her toned midriff. \"Now, I'm just going to make a small exploratory incision. Feel free to cry out if it gets too painful...\"\n\nThe Nymph just looked at him with blank disinterest, as if completely unaware of the danger she was in as the red laser descended towards her skin.\n\nThe comms interface on Friedrich's wrist buzzed and he frowned in irritation, staying his hand. When he glanced at the display to see who was calling, he blinked in surprise. The call was being routed from outside the base, which was a huge breach of the security protocols designed to maintain the secrecy of Tartarus. He pressed a button to accept the call and Admiral Carl Weber's anxious face appeared as a hologram, floating above his arm.\n\n\"This is a surprise, Admiral,\" Friedrich said pleasantly. \"You'll be pleased to hear I'm just about to start my testing and I-\"\n\n\"Shut up you idiot!\" Weber barked. \"Fuck the research, none of that matters any more!\"\n\nFriedrich stared at him in shock. \"B-but... you can't mean that!\"\n\n\"The Kintark invaded, Terra's burning, Buckingham's dead, and Blake's back in the Sol System! Of course I fucking mean it!\" Weber snapped, rubbing a hand over his drawn face. \n\n\"W-what?\" Friedrich faltered, eyes threatening to pop out as he gaped at the admiral.\n\nWeber looked at the professor incredulously, then grimaced with understanding. \"Right, you're on complete lockdown...\" Fixing Friedrich with a stern glare, he continued, \"Get the ship prepped and move all our special guests aboard; they'll be useful as hostages. I'll be there in a few minutes...\"\n\nBefore Friedrich could reply, Weber cut out the signal, leaving the professor staring aghast at the blank holo-screen. \n\n\"You miserable cretin!\" Friedrich cursed in frustration. \"Not now!\"\n\nThe two soldiers glanced at each other, then Collins lowered his knife and asked, \"What are your orders, Professor?\"\n\nFriedrich turned back to the Nymph, laser scalpel poised over her exposed flesh. What wonderful secrets there must be, contained within that nubile form...\n\n\"Professor?\" Collins prompted him.\n\n***\n\nJade set the shuttle down on the small rocky plateau, then sprang out of her seat and rushed over to the airlock. The Nymph's body seemed to shimmer for a second, a verdant haze obscuring her as she hardened herself to make her current form more resilient. Pulling off her dress, she let it drop to her feet and kicked off her shoes. After taking a deep breath, Jade activated the depressurisation control by the airlock, then braced herself as she pressed the button to open the door. The naked Nymph felt the deep chill of space flood the airlock, but she shrugged it off, her body now impervious to the cold.\n\nTaking a short run, Jade launched herself out of the shuttle, using her momentum to sail towards the darkened fissure in the surface of the asteroid. As she floated through the void, she shapeshifted again, her body growing shorter and wider, multiple limbs sprouting as she turned into a dark-green spider. Now that she had eight eyes, it was slightly unsettling to have such a panoramic view, able to see far more than with just the usual two front-facing ones. Fortunately, she had practiced this form many times before, so she was able to quickly adapt and avoid any disorientation. \n\nReaching out with her two forelimbs, the tiny claws at the base of each tip dug into the surface of the rock, letting her grip tight and swing her abdomen down, the other six limbs making contact too. Setting off at a run, Jade scampered around the corner, then felt a surge of relief when she spotted the hidden hangar concealed within the cave. The black shuttle was parked in the centre of the gloomy chamber, with only a very faint row of red lights linking the shuttle to an airlock set deeper in the docking area.\n\nJade crawled along the walls and rushed through the insubstantial crimson glow of the pressurised force field. Taking an experimental breath, she was relieved to find that there was a breathable atmosphere inside and vented out the compartmentalised air in her lungs as she ran inside. Rather than dropping to the floor, she ran upside-down across the ceiling, her eight legs barely making a sound as she scuttled along. \n\nNow that she was in an atmosphere again, the setae on her legs began to pick up scents, sounds, and air currents. The stiff bristles let her feel the subtle heat waves from the shuttle as it cooled in the hangar, the sound of the ship's engines as they went through their shutdown routine, and the vague scent of stale sweat. Whoever had left that faint aroma had departed through the airlock, so Jade scurried across the ceiling towards the sealed portal. \n\nThat was her first real hurdle. She could just turn into something... big... and bust her way inside, but she was trying to be subtle and stealthy. As much as she was in a hurry, she didn't want to spook the people inside and make them kill their captives. She crept down the wall, and kept herself low to the surface, her pedipalps making small flickering motions as she used the sensitive organs to investigate further.\n\nPicking up movement back in the shuttle with her much greater peripheral visions, Jade dropped into the darkness by the base of the wall, then rapidly shifted again, changing into a metre-long snake. Using the strong muscles in her lower body, she slithered back against the wall so that she would be almost invisible in the dim light. Her reptilian eyes watched as the man in a grey pilot's fatigues stepped out of the shuttle, then closed the door behind him. He walked towards her, not paying any attention to the serpent lurking unseen in the shadows and placed his hand on the DNA reader.",
        "Jade tensed her muscles and slithered closer, waiting for that telltale chime. The moment it did and the door slid open, the green snake undulated towards the opening, being careful not to get underfoot and stay just out of sight. There was a long security chamber beyond, with dozens of turrets covering the entrance. Jade froze as she hugged the wall, then thought twice about brazenly following the pilot down the centre of the room. Instead she travelled wide, sticking to the base of the wall and slithering as quickly as she could to try to keep up.\n\n***\n\nSergeant Green led the reporter to the interrogation chair, just waiting for her to try something. She was as feisty as she was beautiful and it was obvious to him that she was nowhere near to breaking yet. He'd seen plenty of men start to crack up even under the relatively mild pressure they'd applied to her so far, but Jehanna was showing no signs of stress. \n\nKeeping his stun pistol trained on her, he glanced to his colleagues. \"Restrain her.\"\n\n\"Is that really necessary?\" she asked with a faint smile.\n\nHe nodded, trying to appear as intimidating as possible as he glanced longingly at the torture implements. \"We don't want you thrashing around when we start using some of these... toys... on you.\"\n\nJehanna studied him for a while, and he could see the intelligence behind those beguiling brown eyes. \"I'm sure there's no need for all that. Why don't you ask your questions and I'll tell you whatever you want to know...\"\n\nGreen lowered his pistol once his men locked the manacles in place around her wrists and ankles. \"You're going to talk... just like that? Excuse me if I find that a little hard to believe, Miss Elani.\"\n\nShe shrugged. \"I've got nothing to hide. I'm fairly sure I know who you're going to ask me about...\"\n\nHe glanced at his men and they chuckled nervously, not sure what game she was playing. This was a far cry from the usual behaviour they expected from people they dragged in here. There was typically plenty of screaming and begging... lots of begging.\n\n\"Alright Miss Elani, I'll play along,\" Green said, leaning against one of the tables. \"What can you tell me about John Blake... the so-called 'Lion of the Federation'?\"\n\nJehanna let out a happy sigh. \"Well, he's really handsome... and absolutely phenomenal in bed!\" She shook her head in wonder. \"Seriously... I thought I'd died and gone to heaven!\"\n\nSergeant Green couldn't help himself, his jaw dropped open in surprise. \"You openly admit you're sleeping with him?!\"\n\n\"Well, we didn't get much sleeping done,\" Jehanna replied with a playful wink. \n\nHis men tried not to laugh and Green managed to keep a straight face.\n\nBefore he could say anything else, she continued, \"So what else do I know about the Lion? Well... I know he's basically an unstoppable killing machine; he's slaughtered his way through thousands of enemies, destroying anyone that got in his way. I'm sure you've all seen the video of him in action against the Kirrix?\"\n\nGreen glanced at his men with a flicker of apprehension. Of course they had... it was replayed almost non-stop on TFNN for weeks.\n\nJehanna leaned forward and said in a conspiratorial whisper, \"You know that was heavily edited, right? The version that went live was incredible, but they actually cut out all the really brutal carnage...\" She shuddered with distaste, then continued, \"There's only so much blood the public can take...\"\n\nThe sergeant tried to picture the video again, it was hard to recall all of it, but he definitely remembered Blake and four of his Lionesses mowing down thousands of Kirrix troops. When they strolled away victorious at the end, they didn't have a scratch on them...\n\n\"And he's got all those Lionesses with him... And they have that Mech, the gunship, and the Invictus, which packs more firepower than a border fleet,\" Jehanna said, shaking her head in awe. \"I almost pity the poor bastards that upset them...\"\n\n\"Alright, that's enough,\" Sergeant Green said, finally realising she was trying to intimidate him.\n\nJehanna gave him an innocent look. \"Are you sure? I know plenty more about him... For example, John's fiercely loyal to the women he surrounds himself with. Can you imagine how he's going to react when he finds out I've been locked up in here?\"\n\nThe sergeant backhanded her, making her head whip around with the slap. \"I said that's enough!\"\n\nJehanna took the blow, then glanced back at him, a victorious glimmer in her eyes. They both knew that she'd got under his skin...\n\n***\n\nWeber marched down the corridor, breaking into a jog for a few steps, before regaining control of himself. His heart was hammering in his chest and he was scared out of his mind. Buckingham was dead and somehow that fucking Fernandez bitch knew that the two of them were responsible for kidnapping Jehanna, abducting the Nymphs, all of it! \n\nHe had no idea how they found out, but he wasn't going to stick around and ask. This was probably his only chance to slip away, taking advantage of the confusion after the Battle of Terra, when all the Federation fleets would be reeling after the bloody battle against the Kintark. If he could just get to the ship, he could run for the border worlds and hide out there, then live a life of relative luxury on the emergency funds he'd stashed away. With a bit of luck, he'd be able to steer well clear of John Blake and escape his vengeance.\n\nHitting the button on his wrist communicator, he called Friedrich as he jogged deeper into the bowels of Tartarus. \n\n\"Admiral,\" the Professor said, a sullen pout on his face.\n\n\"Where are you?\" Weber demanded as he strode along the brightly lit corridor.\n\n\"Still in my lab...\" Friedrich replied, his eyes darting to one side. \"Can't I just-\"\n\n\"Goddamnit, listen to me!\" Weber snapped, his temper frayed to breaking point. \"Blake and his Xeno-loving sluts will be sniffing around for this base! We have to get out of here now! You can do your experiments later...\"\n\nFriedrich was mollified by that and smiled as he pushed his glasses up to the bridge of his nose. \"Alright, we're on our way.\"\n\n***\n\nSergeant Green turned around to the table of vicious torture implements and picked up a barbed knife. \"I know what you're doing, Miss Elani. You're just trying to scare us off... but it won't work.\" \n\nJehanna shook her head and said earnestly, \"No, that's not it at all. I'll answer any questions you ask me as truthfully as I can.\"\n\nHis men looked at him in confusion, but Green was lost as well. She seemed completely sincere, but that didn't make any sense at all. He honestly had no idea what game she was playing, but she was clearly far from broken, much too strong-willed to crack this early. \n\n\"This is some kind of trick...\" he muttered suspiciously. \"You're pretending to cooperate, but this is all a plan to protect Blake; to stop us finding out what we really want to know...\"\n\n\"Do you want to know why I'm so willing to talk?\" she asked him quietly, her expression without guile.\n\nHe narrowed his eyes as he stared at her. \"Alright... I'm listening. Why?\"\n\nJehanna gave him a look of sympathy. \"Because whatever I tell you, will die here with you. When John comes after me, and he will, he's going to slaughter every last person in this base. If I was you, I'd start running while you've still got your legs...\" She glanced at his right hand and gave him a look of sincere remorse. \"You hit me, so I'm afraid that hand's done for... he'll probably want to make an example of you.\"\n\nDespite all his many years spent doing very unpleasant things, Sergeant Green was shaken. \"Y-you're bluffing,\" he stammered, glancing nervously at his hand and taking an involuntary step backwards.\n\n\"Am I?\" Jehanna asked, tilting her head to one side. \"Do you remember that interview I did with John a few weeks ago? Where he demolished that base of assassins?\"\n\nGreen nodded, watching her with suspicion.\n\n\"Before John and the girls obliterated that base, they hunted down every last assassin in there,\" Jehanna said quietly. \"They made them all suffer for daring to kidnap Calara. When the Invictus blasted that tomb, it was a warning... meant for High Command. John was saying: Fuck with me or the women I care about, and we'll hunt you down like rats, then burn your house to the ground.\" \n\nThere was silence in the interrogation room as Green and his men darted anxious glances at one another.\n\nJehanna made a point of looking around the interrogation room, before turning her gaze on him once again. \"New house, different rats, but the lesson will be a lot bloodier this time. John will make sure no one ever wants to mess with any of his girls ever again...\"\n\nThe sergeant knew she was telling the truth, he could see it in her eyes. That look of pity sent a shiver of fear down his spine.\n\n***\n\nJade's serpentine body writhed back and forth as she slithered across the floor, her scales making the softest of rustling noises against the titanium decking. It was a bit brighter in this long security room, so she was far more worried about being spotted. She just hoped that anyone watching via cameras would see the pilot striding calmly along the hall, assume that everything was fine, and pay no attention to the walls.\n\nShe had made it half-way across when a dozen turrets on the opposite wall swung around to face her, the ones on her side of the room unable to tilt down enough to aim in her direction. Half those moving turrets were now inadvertently pointing at the pilot, who glanced at them when he caught the movement, then did a double-take in alarm. When the room was suddenly filled with the shrill whine of Gatling Lasers winding up a split-second later, the man gaped at them in terror then dived to the ground.\n\nJade exploded into action, shimmering and growing huge into her triceratops form. She was up and running before the guns had finished winding up, stampeding full tilt towards the door opposite. The dimly-lit room blazed to life with the staccato blasts of bright-orange laser fire, streams of bolts arcing towards the charging dinosaur. Jade's form was fully armoured, so when she was struck by a dozen shots, the bolts hit her plating but failed to penetrate.\n\nThat's not to say Jade didn't notice them; the armour plating was still formed from her body, and it was irritating being struck by the energy bolts. Jade growled in anger, feeling like she was being peppered by bee stings as she shrugged off a bewildering crossfire of laser streams. Lowering her head, she slammed into the bulky reinforced doors, a massive booming crash echoing around the room as she tore them off their hinges. They cartwheeled away as Jade hurled herself through the sundered doorway, her enormous, armoured body smashing into the doorframe and demolishing half the wall.\n\nThen she found herself flailing through the air as she dropped into the waiting crevasse. The bridge beyond had been retracted, leaving a yawning gap between the two security rooms. Hidden laser turrets along the walls began to open fire as she fell, marking her descent with orange streams of laser bolts.\n\n***\n\nProfessor Friedrich reluctantly released the straps on the last Nymph, who looked at him bright-eyed and without accusation. He marvelled that she didn't seem to bear any grudge or even view him as a threat, despite the fact that he'd been about to cut into her flesh only seconds earlier. He glanced at the two soldiers and saw that they were just untying the last straps holding the waif in place.\n\n\"Come on then,\" he grumbled sourly. \"Follow me.\"\n\n\"Are we going to see this one's new master?\" the four Nymphs chirped simultaneously, looking at him with hope in their trusting eyes.\n\nHe was about to say no, but then figured they would probably be easier to control if they were willingly accompanying him. \"Yes, we're off to meet him right now...\"\n\nThe Nymphs looked elated, bouncing up and down with their excitement. Considering how busty two of them were, that made for a very distracting sight, even for a man like Professor Friedrich. Troopers Collins and Halverson certainly appreciated the spectacular view.\n\nAs Friedrich walked towards his lab door, a shrill siren went off and red warning lights flashed on lamps mounted around the walls.\n\nHalverson held a hand up to his earpiece. \"Sir! Intruders at the Barbican! They picked up something trying to sneak in with the heat sensors... it's a Nymph!\"\n\nFriedrich turned to frown at the man. \"It appears Admiral Weber was correct. It might be prudent to evacuate...\"\n\n***\n\nThere was a tense silence in the interrogation room as Green and his men shared anxious glances with one another. Jehanna's little speech had deeply unsettled all of them, and whether or not what she was saying was actually true, they could all see that she believed it. This certainly wasn't the way it was supposed to go, with her torturers too terrified to even touch their victim, let alone anything else. \n\nSuddenly an alarm went off, making the three soldiers jump. They looked at each other first, eyes widening with fear. When they glanced at their prisoner, Jehanna appeared greatly relieved and relaxed in her chair.\n\nShe gave them a look of sympathy. \"I knew they'd come for me...\"\n\nAt that moment Green was not feeling relieved... quite the opposite in fact. The sergeant backed towards the door, unsure what to do. His men beat a hasty retreat with him, but they made sure they gave Jehanna a wide berth as they did so. A chime on his wrist communicator made the sergeant jump again and he glanced down to see that Professor Friedrich was calling him. Stopping in the doorway, he accepted the call, the professor's holographic head appearing above his forearm.\n\n\"Sergeant, I want you to bring the girl to the ship,\" Friedrich said, and from the way his head was bobbing in the hologram, it was obvious he was walking at a brisk pace.\n\nGreen stepped out into the corridor and said in a hushed voice, \"But Sir... she said Blake was on his way; that he'll butcher anyone who touches her!\" \n\n\"He's not here yet, but he has sent his Nymph...\" Friedrich muttered, his brow creasing with worry.\n\n\"Like those harmless girls we captured?\" Green asked, frowning in confusion.\n\nThe Professor shook his head. \"No... like the one that can turn into a T-Rex. She's storming the upper security tunnels as we speak...\"\n\nJehanna had overheard and she smiled at them. \"Jade's here? I'd start running now, while you still can...\"\n\nFriedrich saw the panicked look on the Sergeant's face and said sternly, \"Bring the reporter with you! We're evacuating Tartarus, but we need as many hostages as we can get! Hurry, I've got more calls to make...\"\n\nGreen nodded and closed the call, then glanced back at their prisoner. He noticed that his men made no move towards Jehanna, obviously scared of losing their hands. The sergeant was in two minds himself, then he reluctantly darted back into the room and started rapidly undoing the metal restraints.\n\n\"It's not too late, Sergeant,\" Jehanna said quietly. \"If you let me go now, I'll forget you slapped me...\"\n\nHe hesitated then unlocked the last one. \"Shut up, we're leaving...\"\n\n***\n\nJade focused her will inward as she fell, drawing deep to tap the vast amounts of psychic energy she contained within herself. She needed a more versatile form, something that would let her handle all the security checkpoints and obstacles in her way. Picturing the shape in her mind, she pictured herself growing much larger, her limbs turning into claws, a tail sprouting out behind her and leathery wings unfolding from her back. Her reptilian body was covered in a glistening coat of diamond-hard scales, and as the misty green haze faded away, her wings snapped out, arresting her fall. \n\nWith a couple of powerful beats of those scaled wings, she propelled herself upwards, back towards the sealed security door on the opposite side of the canyon. Laser bolts pattered off her armoured hide, but this form was strong and they felt like no more than irritating pinpricks. Jade opened her draconic maw, electricity arcing around her huge fangs as she kept her emerald eyes locked on target. \n\nChannelling her willpower she unleashed the lightning blast, thunder booming around the crevasse as the bolt blasted into the door. She strafed the arcing beam of energy across the width of the entrance, melting a huge hole in the wall. When that blistering column guttered out, the edges of the breach glowed bright orange, while sizzling blue sparks of electricity danced over the rift she'd just excavated. \n\nWith a few more beats of her wings, she soared up to land on the smoking ledge, her long claws gouging trenches in the titanium as she hauled herself inside. The security checkpoint beyond was a blackened mess, the overhead lights blown out, leaving the room pitch black. The gloom didn't matter as her highly-sensitive draconic eyes could see in the dark and she launched herself into a loping run, her dragon form taking up most of the width of the corridor. \n\nThe turrets inside had all been electrocuted, thick black fumes pouring off their fried shells. There were several blackened smears on the ground; all that remained of the soldiers who had been killed in an instant, the smell of their cooked flesh thick amongst the acrid smoke. Jade paid them no attention and rushed towards the next reinforced wall. She pounced with forelimbs extended, driving her foot-long claws through the titanium wall then tearing across and down, her viridian talons ripping through the metal like it was made of cardboard. She head-butted the critically ravaged barrier and it toppled backwards, letting her barge through the new hole she'd made for herself.\n\nJade heard a brief scream of terror, which was silenced a second later as the wall squashed the soldier behind it like an overripe melon. A dozen more special forces soldiers were retreating here, their terrified cries echoing around the corridor as they backed away. Jade bared her fangs and roared, then charged after them, vicious claws flashing out to brutally disembowel the closest trooper as she ripped him in half. She caught the next with a quick backhanded slash that tore through his legs, dismembering him with almost casual ease. He fell to the floor screaming in pain and she stomped on him with a rear claw as she pursued the rest, her heavy weight crushing him with a sickening squelch.\n\nThe next pair turned around and began firing frantically on full auto, the bullets striking her armoured head, but bouncing off harmlessly. The deflections sprayed rounds everywhere like a demented and very deadly sprinkler, bullets ricocheting down the corridor and even striking one of the fleeing troopers in the thigh. Jade pounced on the fourth soldier, impaling him with both sets of fully extended claws, and he was dead by the time she brought him to the ground. She lunged forward and bit the fifth, clamping her huge jaws around him and shaking him fiercely, before hurling his mangled body into the wall. \n\nShe set upon one fleeing man after another, remorselessly slaughtering her way through the soldiers who had dared to capture her friend and sisters. Their fearful screams turned into sickening gurgles as the jade dragon brutally eviscerated each in turn. Amidst the carnage, an explosion rocked the corridor, and Jade winced from the blast from an underslung grenade launcher. As the smoke from the detonation cleared, she glared at the hopeful soldiers, seeing the astonishment and horror dawn on their stricken faces as she shrugged off a high-explosive grenade.\n\nHer claws made a grating squeal as she dug into the titanium decking and charged towards the petrified soldiers.\n\n***\n\nAdmiral Weber heard booted footsteps ahead, the sound echoing strangely in the dimly-lit intersection up ahead. He froze in fear, worried that Blake had somehow found him, until he heard a man mutter with dread, \"Oh fuck me... nothing's stopping that thing!\"",
        "Realising it wasn't Blake or his Lionesses approaching, Weber hurried onward and nearly bumped into Professor Friedrich, two soldiers, and the four Nymphs they were escorting. The professor had a holographic image floating above his arm, which showed video feedback from another part of the base. Weber could see something big and green stomping around on the holo-image, gunfire and laser bolts occasionally lighting up the screen, all to the dreadful accompaniment of hideous screams.\n\nFriedrich strode across the intersection, shaking his head in admiration as he watched the images. \"Magnificent, isn't she?\" \n\nThe two soldiers with him just looked on in horror as their colleagues were systematically torn to pieces.\n\n\"Friedrich!\" Weber blurted out, skidding to a halt.\n\nThe professor looked at him in surprise, then pushed his wire-frame glasses up his nose. \"Admiral Weber! Please accept my apologies for my earlier intransigence, I'm sure you can understand my frustration at being unable to indulge my professional curiosity. You were quite correct though, evacuation does seem to be a sound plan...\"\n\n\"You don't say...\" Weber muttered, darting a glance at the video of the angry dragon demolishing the base's supposedly impregnable defences. \n\nThe Nymphs looked at this new arrival in delight. \"Are you this one's new master?\" they all chorused simultaneously.\n\nWeber had had never intended to be their handler, but the present situation demanded drastic measures. He grimaced as he nodded, \"Yes, I'm your new master\"\n\nThey clapped in excitement, faces lighting up with glee. All four Nymphs began to shimmer in a green haze, their bodies altering shape as they scanned his mind, getting an image of Carl Weber's perfect woman. Having found what they were looking for, the change took a few seconds to complete, then four slender blondes gazed at him in adoration. \n\n\"Would you like to use this one now, Master?\" the four girls crooned, their Germanic accents so wonderfully familiar.\n\n\"Erika...\" Weber breathed in astonishment, overwhelmed by the sudden onrush of feelings dredged up by seeing the love of his life made flesh before his eyes.\n\nIt was his beloved step-sister... appearing exactly as she had all those years ago, when the two of them were just eighteen and secretly exploring their sexuality with each other. They'd had two blissful years together before that sweet, lovely girl was killed in a hovercar crash, her life tragically destroyed by a drugged-out Ornalith. Seeing his lost love was like being hurled back in time, with Carl experiencing an outpouring of grief that threatened to tear his heart in two. He wavered unsteadily and leaned against the wall to try and recover from the shock.\n\n\"My, my, she's certainly very attractive,\" Friedrich murmured, glancing at the four scantily-clad young women.\n\n\"This one will do anything you desire, Master,\" the closest Erika whispered, brushing her fingers along his arm. \n\nThat contact snapped Weber out of his trance and he recoiled in revulsion. It was like they were desecrating Erika's memory by copying her perfect face and he felt a wave of hatred for the degenerate alien filth. \"Don't fucking touch me... and change shape to... anything else.\"\n\nThe four Nymphs exchanged surprised glances then looked at him in confusion. \"But this is your ideal mate, Master...\"\n\n***\n\nJade dug her claws into the wall above the entryway to the elevator, then carved two huge furrows around the titanium doorframe. She slammed into it with her massive scaled head and the section toppled into the lift shaft, clanging and crashing as it fell to the bottom with a deafening boom. Peeking down through the gap in the wall where the elevator doors used to be, the Nymph glanced around to make sure there was enough room for her form to navigate the passage.\n\nShe was just about to plunge headfirst down the exposed hole, when Jade felt a ripple of strange echoes in her mind. The Nymph froze, her head tilted to one side as she felt that delicate psychic tremor. The flurry of sensation was faint but so achingly familiar and she froze as she revelled in the fluttering touch of those four presences.\n\n*Sisters...* she murmured in wonder.\n\nJade could feel them now, they were so close... \n\n*I'm coming for you!* she gasped, before hurling herself into the lift shaft, her claws tearing chunks from the walls as she dropped to the lower levels.\n\n***\n\nThe Nymphs stared at each other in astonishment and blurted out, \"Sister?!\"\n\nWeber flushed with embarrassment, turning away from the curious glances from Friedrich and his men. It was bad enough that they got to see these Xeno-sluts masquerading as his darling Erika, but knowing about his secret relationship with her was almost more shameful than he could stand.\n\n\"Change shape!\" he demanded in a choked voice. \"Anything... your normal shape! Just not her!\"\n\nThe four Nymphs looked bewildered, but did as he asked, shifting in a green haze. Sprouting soft, dark-green fur, they shrank and grew more slender, cat-like ears and tails appearing as they altered their form. Each had subtly different patterns to their markings, with lighter green spots, patches, and stripes differentiating them from each other.\n\n\"Follow me,\" Weber said gruffly. \"We've got to get out of here!\"\n\nProfessor Friedrich and the two soldiers fell into step behind the Admiral as they hurried onwards, following the sparsely-lit tunnels deeper into Tartarus. They had long since passed from the newer upper sections into remnants of one of the original bases constructed on Ganymede. The air was musty down here, dust thick in the air in these recently unearthed tunnels. There were tracks on the metal decking, with booted footprints going back and forth that revealed there had been lots more activity in the past few months.\n\nWeber glanced back at the holo-screen floating above Friedrich's arm. The jade dragon opened its jaws and unleashed a terrifying blast of energy, disintegrating all the turrets and soldiers facing her. The camera feed cut out a split-second later, then restarted from the next checkpoint, where he got to see the enraged Nymph batter her way through another reinforced bulkhead.\n\n\"We've got to slow her down,\" Weber said to the professor, the nervous tremor in his voice revealing his fear.\n\nFriedrich nodded thoughtfully, a gleam in his otherwise dispassionate eyes. \"The experiments? Yes, it would be intriguing to see how they performed...\" His hands began to move over the wrist computer, activating programs and unlocking cell doors...\n\n***\n\nJehanna walked along behind the two soldiers, the sergeant following after her with the stun pistol aimed at her back. She could have struggled and forced him to shoot her, making the three men have to carry her wherever they were going. However, there were two reasons why she chose not to. Being knocked unconscious would have slowed them down, but it would have also left her incapacitated and she was hoping for a more decisive opportunity to escape her captors.\n\nThe second reason was that these lower reaches of the base were fascinating. The construction was clearly much, much older, and there were a few things about it that didn't feel quite right. The place had obviously survived some kind of cataclysmic earthquake, because the walls and ceiling were cracked and battered, with new plating patched over in places. They also passed a number of doors that obviously led into other sections of the base, but they seemed to have two sets of door controls. One at normal height which looked like they'd been installed recently, the other was lower down at thigh level and by the dust covering the panel must have been part of the original facility. \n\nJehanna spotted slightly-raised domes set in the floor every twenty paces or so, but could see no purpose behind them. Frowning in confusion she slowed to deliberately scuff her foot over one of the domes, then saw the light filaments inside. Why would someone set lights in the floor?\n\n\"Keep moving,\" Sergeant Green grunted, poking her in the back with the muzzle of his pistol. \n\nJehanna stumbled onwards, then suddenly realised the answer. \"This place is upside down! We're walking on the ceiling!\"\n\nOne of the soldiers turned and smirked. \"Wait until you see what's coming up...\"\n\nShe could see long windows up ahead on either side of the corridor, the newly installed overhead lamps casting their light into the room beyond. Jehanna stared through the glass in wide-eyed astonishment as she saw the enormous industrial factory suspended from the ceiling, automated assembly lines frozen mid-production. Piled up on the floor were hundreds of metallic body parts, partially built robots lying motionless where they'd fallen. There was a feeling of antiquity about this place, and the robots looked sinister and menacing, filling her with an awful sense of foreboding. \n\nShe turned to look at Green speculatively. \"This base is so old and battered; something terrible must have happened here... it must have been so bad that you've had to set the artificial gravity upside down! Then there were all those robots...\" It was like someone flicked a lightbulb on in her head and she stared at him in shock. \"We must be in the remains of the AI base on Ganymede!\"\n\nThe sergeant's expression flickered with surprise but he neither confirmed or denied her suspicions. His brief reaction was enough for Jehanna to realise that she was right and she looked on in awe as they headed deeper into the base. They turned at an intersection then walked for another couple of minutes, stopping in front of an imposing set of double doors, with 249 inscribed in huge numbers on the surface. \n\nOne of the soldiers hit a button and the doors juddered open with a grating noise, revealing a huge enclosed room. Jehanna gaped at the intimidating vessel floating in the centre. It was clamped to a sturdy maintenance gantry that had been constructed recently. The titanium-grey warship was about 200-metres-long, the sleek and sinister hull obviously designed by a malevolent alien mind. Below it were the sealed hangar doors, which she knew must have been the ceiling before Ganymede was blown apart.\n\n\"You found an AI ship...\" she whispered, knowing she had just stumbled into another scoop of a lifetime.\n\n***\n\nJade could feel her Lenarran sisters up ahead and her claws scrabbled on the spotlessly-clean white floor as she ran down the corridors. Further along were scores of prison cells, the windows blacked out and the doors on both sides all wide open. Spotting movement up ahead, she curled her lips back from her fangs in revulsion, when she saw the misshapen horrors that started lurching out of the rooms.\n\nThere were Drakkar, Kirrix drones, Trankarans, and several Ornalith amongst the horde; or at least that's what they used to be... They had all undergone horrific cybernetic surgery, their upper limbs replaced with all sorts of serrated blades and spinning buzzsaws. The glint of metal circuitry could be seen on their heads, where the Tartarus scientists had implanted control chips. The monstrous creatures turned their blank eyes towards the dragon running towards them, then raised their whirring limbs and moved to attack.\n\nJade flinched when she heard a disturbingly familiar hum and the abominations charged towards her, moving with unnatural speed. She had a flashback of the fight with Shinatobe, the cyborg assassin impaling her through the heart as Jade desperately tried to protect her master. Not wanting to risk underestimating these creatures when her sisters were in danger, or waste time hacking her way through the pack of abominations, Jade skidded to a halt and sucked in her breath. Electricity arced over her fangs as she opened her jaws wide and unleashed an incandescent blast of lightning that she strafed across the hall. \n\nThe first few ranks of malformed creatures were instantly obliterated by the power of that blast, the ones behind caught by wild arcs of electricity, their cybernetic limbs exploding in a vicious storm of metal flechettes. The rearmost ranks of cyborg monstrosities were flayed by the storm of electrified shrapnel and were hurled backwards by the impact. They juddered and crashed to the floor, convulsing violently as their control implants were fried. With nothing left to stand in her way, Jade leapt forward again, trampling over twitching corpses as she continued the pursuit of her quarry.\n\n*You're getting low on psychic energy, Jade,* Alyssa warned her. *Those lightning blasts are sucking up tons of power...*\n\n*Can you give me more?* Jade requested as she galloped along the corridor.\n\nThere was a moment's hesitation before her matriarch replied, *We're all getting tapped out, everyone's been running hot on powers. I can give you more but we don't want to leave Rachel without any reserves...*\n\n*Save it, I'll be okay,* the Nymph replied firmly. *I'll stop shifting to save energy.*\n\nJade could hear John's concerned thoughts as he said, *We'll be there in a couple of minutes; I'll join you as fast as I can!* \n\n*I'm quite deep in the base now... I think I'm getting very close to the Nymphs!* she replied, sounding cheerful and optimistic.\n\n*Any sign of Jehanna?* he asked, unable to hide his worry.\n\nShe hesitated as she dashed down the corridor, leaping over sparking cyborgs. *I haven't seen her yet...*\n\n***\n\n\"So much for your work, Professor,\" Weber sneered in disgust, as he watched the dragon obliterate the results of years of top-secret and highly illegal experiments designed to create the perfect shock troops. \"How many billions of credits did that cost us?\"\n\nFriedrich winced and looked chagrined. \"I had hoped they'd give a considerably better account of themselves...\" Glancing back at the four catwomen following obediently after the Admiral, he continued, \"But you've seen how strong that Nymph is! Imagine having four dragons like her at your disposal... not even Blake could stand up to their destructive potential!\"\n\nThey walked quickly along the corridor overlooking the robot manufacturing plant and Weber felt a surge of relief, knowing they were nearly to the ship. \"Are you sure that AI ship is safe?\"\n\n\"Computers aren't my area of expertise, but I believe all the control systems have been gutted and the ship fully stripped. In any case, the Artificial Intelligence that controlled it was destroyed long ago; the ship's simply a relic from the Ganymede Incident,\" Friedrich explained, darting a nervous glance at his holo-screen. \"We might want to hurry by the way...\"\n\nWeber heard the clanging footsteps of something big in the corridor far behind them, and while he knew they had a long lead on the pursuing Nymph, he couldn't help glancing nervously over his shoulder. He broke into a jog, with the rest of his entourage matching his pace. \n\n\"Are the rest of the hostages aboard?\" he asked, darting a glance at the professor. \n\nFriedrich lifted his arm and started tapping on his holo-interface to check. \"Yes, they are,\" he said nodding as he viewed the cameras aboard the ship.\n\nA throaty roar behind them startled the scientist, and not watching where he was going, the professor tripped over one of the lights set into the floor. Friedrich tumbled to the deck, and his glasses flew off his nose, only for them to be crunched under one of the soldier's heavy boots. Collins and Halverson skidded to a halt after running past him, then darted back to lift the professor up under his arms. \n\nWeber kept on running and didn't look back, the catgirls padding along effortlessly behind him. He soon reached the intersection and darted to the left, following the dozens of footsteps marking the path to the excavated hangar. The sound of huge reptilian claws scraping across the metallic floors was getting louder and louder, drowning out his fearful panted breaths and the booted footsteps of the soldiers following him.\n\nThe door to hangar 249 was already open, so he bolted inside, then froze and glanced behind him at the yawning portal. Wanting to buy as much time to escape as possible, he slapped his hand down on the control panel, making the doors groan in protest as they started creaking closed. Backing away, he heard Friedrich and the soldiers running to catch up, but the pounding steps of the furious dragon were worryingly close. Pulling his pistol from the holster on his waist, he hesitated for a second, then emptied the magazine into the control panel. To his relief, the panel shorted out, but the doors kept closing.\n\nTurning around, Weber rushed for the repurposed destroyer, sucking in air to his tortured lungs, with his obedient Nymphs jogging along happily in his wake. \"Turn into... a dragon...\" he gasped between breaths, as he looked at the catgirls watching his every move.\n\n\"This one can turn into your perfect mate?\" the closest suggested, giving him a hopeful smile.\n\nHe shook his head in revulsion as he staggered towards the open airlock ahead, a pair of soldiers waiting just inside. \"No! Turn into a tiger, a dinosaur, anything dangerous!\" he pleaded. \"I need you to fight the fucking monster that's trying to kill me!\" \n\nOne of the Nymphs with striking tiger's stripes looked deeply distressed and blurted out, \"Master should flee! Escape from whatever is chasing you.\" She looked heartbroken as she continued, \"This one cannot change into the forms Master has requested... This one is so sorry!\" \n\n\"She can do it, you must be able to as well!\" he insisted, as he reached the airlock. \"I order you to change!\"\n\nTheir blank looks of incomprehension told Weber all he needed to know and he realised these dumb aliens were too stupid to try and deceive him. He frowned at them, realising they were useless to him now. Unable to bear the thought of them turning into his beloved Erika again, he scowled and looked at them with contempt.\n\n\"Wait here, don't move from this spot,\" he demanded, before stepping inside the airlock. \n\nThe four nymphs nodded obediently, bright smiles of happiness forming on their faces as they were given a command they were able to follow to the letter. They stood there contentedly on the gantry as the airlock closed behind Weber, pleased to be obeying their master's wishes. When the frantic pounding on the hangar doors started up, they ignored it, their cat-like eyes locked onto the grey ship as it started to pull away.\n\n***\n\nJade careened around the corner, bouncing off the far wall with a heavy thump as she tore up the ground clawing after the fleeing soldiers. They stopped to pound on a hangar door, letting her know where her sisters had gone, even if she couldn't sense them on the other side of the portal. \n\n\"Fuck me!\" one of the soldiers cried out in fear, as he and his colleague grabbed for their assault rifles. \n\nThey sprayed the corridor with bullets, rounds bouncing off Jade's armoured skull as she leapt towards them. The dragon lashed out with a powerful swipe, catching both soldiers across the torso and ripping their chests open in a fountain of blood. Friedrich cowered by the door and watched the two men pitch over, before blinking bleary-eyed at Jade as she approached.\n\n\"How?\" he murmured, gazing up at her in awe. \"There's no record of any Nymph being able to do the things you can! How did you get so powerful?!\" \n\n\"John loves me,\" Jade rumbled, slamming her bloodstained claws into the huge hangar doors and heaving backwards. \"And he'll love my sisters too...\"\n\nFriedrich winced at that tortured shriek of metal as the dragon hauled the door wide open, the opening mechanism snapping and buckling under that savage assault. Jade peered through the entrance and spotted her four sisters standing calmly on the gantry. They were unheeding of the danger as a big grey ship drifted backwards, flank guns trained on them. There was something eerily familiar about the shape of that craft and seeing it sent a shiver down Jade's long spine.",
        "\"Where's Jehanna?!\" Jade rumbled at the scientist. \n\nHe pointed at the floating destroyer. \"Weber's got all the prisoners aboard.\"\n\nThe Nymph narrowed her draconic eyes as she glared at the escaping vessel. \n\n\"You must let me study you!\" Friedrich begged her as he reached out with pleading hands. \"I just want to perform some experiments on you and your sisters, we could learn so much!\"\n\n\"I've seen what you do with your experiments,\" Jade snarled with disgust. \"I'll never let you near them!\"\n\nShe ignored him and slammed her shoulder into the other door, ramming it open with a crash. With the gap wide enough for her body, she hauled herself through the partially open door, desperate to be reunited with her sisters. Friedrich reached out in wonder, brushing his fingers against the scaled leg of this mythical creature made flesh. Jade shuddered with revulsion at his touch and whipped her heavy tail around, slapping him in the chest and sent him cartwheeling down the corridor. The ferocious impact broke most of his ribs and when the professor skidded into a crumpled heap on the floor, he could only let out a feeble groan of agony. His every breath felt like torture, then he began to choke up blood, his punctured lungs hemorrhaging badly.\n\n\"Stop right there!\" a projected voice boomed at Jade as she rushed across the gantry towards her sisters. \"If you try to stop us leaving, we'll blast the Nymphs!\"\n\nJade put her meaty draconic forearm around the four catgirls, shielding them with her body. \"Go then... flee while you can,\" she roared at the grey ship.\n\nThe outer hangar doors started to open, gliding backwards smoothly, the mechanism recently repaired and restored. She could just make out the shining light of stars through the shimmering atmospheric shield covering the hangar doors.\n\n*John, Admiral Weber's fleeing!* Jade called out in warning. *There's a hangar at the rear of the base!* \n\n*** \n\nJehanna watched the external camera feed in astonishment as the dark-green dragon bounded across the gantry then curled herself around the four catgirls. She knew Jade could shapeshift but had no idea the Nymph could turn into anything so massive and powerful. The hangar doors had opened fully now and the AI destroyer began to sink downwards.\n\n\"Shall I take Miss Elani down to the Brig, Admiral?\" Sergeant Green asked Weber, gesturing towards the TFNN reporter with his stun pistol.\n\n\"No, I want her close by in case Blake tries anything...\" Weber muttered, giving Jehanna a dark look.\n\n\"Hangar doors open, taking us out,\" the helmsman informed him.\n\nWeber turned back to the holographic footage of the dragon and glared at Jade and the Nymphs in hatred. The thought of them changing form into Erika and fucking Blake wearing his beloved's face made him feel sick to the stomach. Eyes narrowing, he snapped at his Tactical Officer, \"Take them out... Kill them all!\"\n\nJehanna felt her heart lurch and she stifled a cry of anguish at the thought of losing the lovely kind-hearted Nymph. Lunging for the Admiral, she caught her captors completely by surprise, and yanked the pistol from the holster at his waist. She whirled around and pointed it at Green's shocked face then squeezed the trigger... only to hear a harmless click.\n\nWeber turned around and punched her in the face, knocking her to the floor. \"Fucking bitch...\" he muttered, grabbing the pistol from her limp fingers. He glanced up at the shocked sergeant and sneered, \"Lucky for you I hadn't reloaded...\"\n\nJehanna groaned, her cheek throbbing with pain where he'd struck her. She could only look on in horror as the Tactical Officer aimed the destroyer's weapons at Jade and opened fire. Gauss Cannons opened up, pumping heavy slugs at the dragon, the first punching a hole straight through her folded wing, the second and third slamming into her flank. Jade roared as the rounds blasted into her side, penetrating through her dragonscale hide and tearing a vicious crater in her side. \n\n***\n\n\"Jade!\" Alyssa gasped, as Faye raced the Raptor around the broken remnants of Ganymede. \"Weber's ship is shooting at her!\"\n\nThey all saw the gaping hole in the opposite side of the asteroid, flashes of light making it easy to pick out on the shadowed flank that faced away from the sun. As the Raptor loomed overhead, they all saw the grey destroyer firing broadsides at the huge green dragon on the adjacent gantry. Jade wasn't fighting back, she was taking the hits to shield a small group of figures with her body.\n\n\"No! Jade!\" John cried out in alarm, clenching his fists in anger. He bolted from the cockpit, running for the grav-tube.\n\nDana groaned and clutched her head, wobbling unsteadily on her feet. \"That's a Thrall ship! A Tormentor-class destroyer!\" she gasped, hanging onto Rachel. \n\n\"Faye, drop the forward loading ramp and take us closer!\" Alyssa ordered, eyes narrowing as she raised her hand towards the enemy ship.\n\n***\n\nJade roared in pain as she was hit by another barrage of Gauss Cannon shells from the destroyer. She could have tried to dodge, or leap for the ship and start tearing it to pieces, but her sisters were so vulnerable and she knew that shielding them with her body was the only chance of saving them... and of saving her species from extinction. The Nymphs weren't afraid of her, but they seemed reluctant to move, having been ordered to stay there by Weber.\n\nAs the destroyer's guns reloaded for another salvo, Jade pushed the four Nymphs back, trying to usher them towards the open entrance. Unfortunately, the old saying about herding cats also proved true about catgirls, and they kept trying to slip around her forearms. Jade snarled in frustration and simply grasped two of the squirming Nymphs in each of her massive front claws, and lurched for the door.\n\n***\n\n\"Yeah! Fucking die, you monstrosity!\" Weber crowed, watching with glee as the dragon was battered by another salvo of Gauss Cannon shells. Jade's flanks were pockmarked with gaping craters, big chunks blasted out of her body. She collapsed on the gantry, her draconic form no longer able to stand; so she started crawling towards the hangar doors...\n\n\"Leave her alone!\" Jehanna begged him.\n\nWeber turned and sneered at her in disgust. \"You're a traitor to your species, you filthy whore... what makes you think I'll listen to a word out of your mouth? Those mind-raping alien freaks are just the start! When I'm-\" \n\nThe decking suddenly trembled, followed an instant later by the muffled shriek of metal, the dreadful noise repeating again and again. The Tactical Officer turned around and blurted out, \"We've just lost all the Gauss Cannons on our port side!\"\n\n\"How?\" Weber snarled in frustration. \"Power failure?\"\n\nThe crewman shook his head, eyes wide in astonishment. \"They were just ripped off the hull! I saw them go flying across the hangar!\"\n\n\"Turn then!\" Weber snapped at the helmsman, pointing a finger at the crumpled dragon that was trying to pull the Nymphs away from the gantry. \"Finish that thing off with the starboard guns!\"\n\nThe helmsman twisted the flightstick but nothing happened, the destroyer remaining stationary. \"I can't turn, Sir!\" he gasped, looking incredulously at the controls. Yanking back on the flightstick, then pushing forward, achieved the same results. \"We've lost all control! We're not going anywhere!\" Glancing at the damage control status, his eyes widened in alarm. \"All the retro-thrusters... they're gone!\"\n\n\"What do you mean gone?!\" Weber blurted out, feeling a shiver of fear.\n\n\"They're missing... ripped off the ship somehow?!\" the helmsman quailed, shaking his head helplessly.\n\nThey all stared at one another for a second, until one of the soldiers pointed a shaking finger at the external camera feeds. He sounded terrified as he whimpered, \"Oh fuck... here they come!\"\n\nEveryone turned to look and saw the two imposing and instantly recognisable white vessels, the Raptor and the Invictus looming forebodingly above the hangar. Most of the white armoured figures were pouring out of the gunship and sailing towards the destroyer, but two peeled away, the thrusters on their back jetting them towards the battered dragon.\n\n\"Any last words, Weber?\" Jehanna asked with a smile. She glanced back at Green and added with satisfaction, \"I'm sorry, Sergeant. I'd say it's been nice knowing you, but that's really not true...\"\n\nHe opened his mouth to reply, when the main lights flickered and went out, plunging them into darkness. A second later, the red emergency lighting powered up, limning the destroyer's bridge in a sinister crimson glow. There was a terrified silence on the Command Deck, Weber and his men darting frightened glances around the room. \n\nThey heard a woman's humourless laughter echoing around the bridge, heralding the dramatic appearance of Irillith's glowing likeness on the holo-screen. \"You're mine now...\" she gloated, a wicked grin on her face. Irillith's violet eyes darted to Jehanna, then narrowed in fury when she saw the bruises on her face and her cut lip. \"Who hurt you?\"\n\nJehanna glanced at Weber, then Sergeant Green, who met her accusatory look with one of growing horror.\n\n\"I-I was just following orders...\" the soldier stammered as he started backing away. \n\nIrillith's beautiful face twisted into a vicious smile as she pulled her glowing form out of the holo-screen. \"I'm not,\" she whispered as she landed on the decking. \"But first, let's dispatch the pawns, then I can give you my full attention...\"\n\nShe gestured towards the Helmsman, who was struck by an arcing bolt of electricity from his station as he tried to rise from his seat. He screamed as he was fried, thrown across the Bridge by the shock. \n\nIrillith made another impatient gesture towards the other two soldiers, blasting glowing holes through their chests and not giving them time to cry out before they died. Sergeant Green stumbled back a step, firing his pistol wildly at the ethereal spectre, and was terrified to see the shots sailing through to no effect.\n\nWeber scrambled back from Irillith, desperately trying to load his pistol. \"Stay back you bitch!\" he squawked as he lunged for Jehanna. \"Or I'll, shoo-\" \n\nHe never got to finish his threat as Irillith casually flicked her fingers in his direction, blue electricity arcing over his body and make him convulse as his muscles locked up. Weber toppled over to fall flat on his face, jerking uncontrollably as she hit him with a low-powered charge. \"Alyssa wants a word with you,\" she said with a wry smile. \"That means you're safe from me, but you'll soon wish I'd finished you...\"\n\n\"What're you going to do?!\" Green whispered as he backed into the wall, his hand trembling so badly he dropped his pistol.\n\nIrillith raised a finger. \"One second, I'll get to you in a moment. First I need to deal with the scum who dared to shoot my friend...\"\n\nThe Tactical Officer tried to flee, but Irillith gestured in his direction, looping his neck and limbs in rings of sparking electricity. He twisted and writhed as he screamed in agony, the Maliri hacker slowly frying him to a crisp.\n\n\"Now, why don't we have a little chat about why it's not nice to hit women,\" Irillith purred as she stalked towards the sergeant.\n\n***\n\nJohn landed on the hull of the destroyer, his mag boots attaching him to the grey surface with a metallic click. He clomped over to the airlock, which opened by Irillith's command when he arrived, just as Alyssa and Tashana landed beside him. \n\n*Jade?* he called out to the Nymph as he climbed into the airlock. *Answer me, honey... are you alright?*\n\nThere was a long pause and she sounded very weak as she whispered, *I'm so sorry, John... But I had to save them...*\n\nHe froze and looked across at the gantry in alarm. Jade had collapsed, her ravaged draconic body battered by over a dozen Gauss Cannon rounds. Rachel was kneeling beside her, while Dana paced back and forth, clearly very agitated.\n\n*Jade!* he cried out to her in panic, fearing the worst.\n\nAlyssa placed a soothing hand on his shoulder. \"Rachel's tending to her. Jade's critically injured, but we got to her in time...\"\n\n\"We didn't get here fast enough!\" John disagreed, shaking his head.\n\nShe sighed, looking forlorn as she nodded her agreement. \n\n*I'm sorry I disobeyed orders...* Jade whimpered, sounding deeply remorseful.\n\nHe was torn for a moment, then realised he couldn't do anything for the Nymph. *You needed to save your sisters, Jade, I understand. We'll talk later, just focus on healing for now...*\n\n*Yes, Master,* she said softly, her voice very faint.\n\n\"Irillith's captured Weber and Jehanna's safe,\" Alyssa informed him, turning to look back at the ship.\n\n\"Let's deal with him, and rescue her,\" John agreed as he ducked inside the airlock, then stepped aside to let Tashana and Alyssa follow him into the destroyer. \n\nThe outer airlock sealed shut as soon as they were safely inside, then once the small room had re-pressurised, the inner door spiralled open. The two girls flanked John as he walked into the corridor, the ship eerily quiet.\n\nAlyssa pointed along the corridor. \"Up ahead and on the right, there's an elevator.\"\n\nJohn studied her face with concern as they stepped inside the lift and started to ascend. \"You're looking tired.\" \n\n\"It's been a very long morning,\" she said with a weary smile. \"Everyone cut loose with the powers, so we're all just about tapped out...\"\n\nThe lift door opened, giving them access to the Command Deck. John pulled off his Paragon helmet and immediately smelt the telltale aroma of roasted flesh, with several blackened corpses the source of the stink. Irillith's glowing silhouette was crouched beside Admiral Weber, who was sobbing in the corner of the Bridge, trying to stay as far away from her as possible. Finally, Jehanna stood in the centre of the room, hugging herself tightly, a look of anxious anticipation on her face as she stared towards the elevator.\n\n\"John!\" she exclaimed as soon as he stepped out, rushing into his arms.\n\nHe dropped his Quantum rifle and wrapped her up in a warm embrace, or as warm as could be expected while wearing full combat armour. \"I'm so glad you're safe,\" he said, stroking her back. \"You've no idea how terrible I feel for getting you mixed up in all this...\"\n\n\"I knew you'd rescue me,\" she sobbed, finally letting the wall shoring up her emotions crumble.\n\n\"I'm sorry we took so long,\" he said quietly. \"We were in Maliri Space, then the Brimorian Enclave... I only found out you'd been captured late last night. We dropped everything to rush back here as fast as we could...\"\n\nAlyssa leaned in and gave her a peck on the cheek. \"Hey, beautiful. We were all really worried about you...\"\n\nTashana joined him in stroking Jehanna's back. \"I'm so glad we got here in time. Are you alright?\"\n\nThe dark-haired girl let out a shuddering sigh, then looked at them each in turn. \"I was so scared, but I knew I just had to hang on for as long as I could.\"\n\nAlyssa brushed a gauntleted hand over Jehanna's tummy. \"If you'd been a fully-fledged Lioness, we'd have known straight away what had happened. We could've been here days ago...\" She frowned at John as she hugged the dusky beauty. \"No more messing around, you need to give this girl what she wants!\" \n\nJohn gave Jehanna a look filled with remorse and admitted, \"She's right. I'm really sorry I made you wait.\" He frowned and continued, \"Assuming you still want to join us? After everything you've just been through because of me, I can understand if you've changed your mind...\"\n\n\"Are you joking?\" Jehanna asked playfully, with a brave smile. \"After everything I just went through, I finally qualify as a wounded little bird!\"\n\nAlyssa laughed and shook her head. \"You've got far too much spirit; it'll take a lot more than this to bring you down.\" She smiled at Tashana, then they walked away to join Irillith.\n\nJohn gently lifted Jehanna's chin and looked at the bruises and cuts she'd sustained. \"Rachel's taking care of Jade right now, but I'll ask her to heal you as soon as she can.\"\n\nJehanna gazed up at him, her smoky brown eyes drawing him in. \"I'd prefer it if you healed me...\"\n\n\"First chance I get,\" he promised, leaning down to give her a very gentle kiss, being careful not to aggravate her cut lip.\n\nShe let out a happy sigh, then rested her head against his armoured chest. Spotting the deep rents across the embossed lion, she pulled back, her eyes widening when she saw the extent of the damage to his armour. \"What happened to you?!\" she exclaimed in alarm.\n\nJohn gave her a wry smile. \"I had a disagreement with the Kintark Emperor.\"\n\nJehanna traced her fingers along the deep furrows in the plating. \"What about?\" she murmured, shocked at how close the claws had come to taking his life.\n\n\"He wanted to conquer and enslave the Terran Federation. I convinced him that was a bad idea...\" he replied, noticing the look of rapt fascination on the young woman's face. \"Our fight was broadcast across the Kintark Empire and the Terran Federation, as part of his plans to break Terran morale; unfortunately, his plan backfired. We'll show you that footage later, as well as everything we recorded during the Kintark assault on the Citadel and the fleet engagements above Terra.\"\n\nDespite everything she'd been through, Jehanna's instincts for an exclusive story couldn't be suppressed. \"I can't believe I missed everything!\" she exclaimed, pouting with frustration. \"I was in the same system as the final showdown with the Kintark and I was stuck in a prison cell for the entire thing!\" \n\nA sharp gasp of surprise interrupted the conversation and drew their attention to Alyssa. Her cerulean eyes were glowing with an inner radiance and she turned to John as she blurted out, \"Devereux's still alive! She's on this ship!\"\n\n\"Where is she?!\" John asked, stunned at the news.\n\nAlyssa tilted her head to one side as she read Weber's mind. \"Medical Bay... Deck Three.\" Her expression darkened as she added, \"She's in critical condition... crippled...\"\n\nJohn clenched his jaw in anger as he glanced back at the Admiral, who was whimpering in terror, held powerless in Alyssa's telekinetic grip. \"Have you found out everything he knows?\"\n\nThe blonde nodded, the glow fading from her eyes. \"I know everything this bastard has done.\" She glanced over her shoulder at John and her voice was chilling as she added, \"Can I punish him now?\"\n\nAfter stooping down to pick up his rifle, John put his arm around Jehanna. \"We'll head down to Deck Three. Join us when you're done.\"\n\nAlyssa touched Weber's head and there was a brief flash of light, before she rose and walked away. \"You might want to record this,\" she said offhandedly to Irillith, as she glided over to join John and the girls at the lift.\n\nIrillith nodded, glancing down at Weber as he began to moan in fear, his anguished cries gradually getting louder and more desperate. By the time the elevator door slid closed, his terrified shrieks had reached a shrill intensity, those dreadful piercing screams sending a shiver down Jehanna's spine.\n\nShe glanced at Alyssa and whispered, \"It sounds like he's facing the worst torments he could imagine...\"\n\nThe blonde gave her a grim smile of satisfaction. \"He is... Carl Weber's done a lot of bad things, and his worst nightmares are truly horrifying.\"\n\nThe elevator chimed and the doors opened onto Deck Three, with Alyssa taking the lead and turning right. They walked past several doors until she paused at a doorway and pulled out her Quantum pistol. John raised an eyebrow then lifted his rifle to his shoulder and stood by the doorframe.\n\n*There's at least three bad guys in here...* she murmured, sharing a nod with him to confirm she was ready.\n\nJohn tapped the button to open the door, then opened fire on the anxious special-forces soldier standing diagonally opposite the doorway. The hyper-accelerated bullet hit him in the torso then punched through the wall behind, the damage to the titanium plating clearly visible through the gaping tunnel blasted through the man's chest. Alyssa didn't hesitate in snapping off two rounds, taking out the shocked medics who gaped at her in terror.",
        "\"Bad guys?\" John asked sceptically as he saw the white-garbed men pitch over stone dead.\n\n\"Don't ask for details... and yeah they were,\" Alyssa said with a grimace.\n\nThey walked inside and John saw Admiral Lynette Devereux on an anti-grav gurney. Her eyes were closed and she looked unnaturally pale, a rhythmic soft beep echoing around the room from the medical equipment keeping her alive. Barely...\n\n\"Charles seemed so certain she was dead,\" John murmured, shouldering his rifle and looking at the critically injured woman with sympathy and concern.\n\n\"According to Weber, Buckingham was planning on a big show trial after the battle,\" Alyssa said softly, brushing a lock of Devereux's limp brown hair from her face. \"He wanted to make an example of her... show the rest of the Admiralty the price for so publically opposing him.\"\n\nJohn studied the older woman. \"She put her life on the line to warn us about the Kintark.\"\n\nAlyssa nodded. \"It looks like I was wrong about High Command... maybe they aren't all bad.\"\n\n\"I think it's well past time that we pick out all the bad apples,\" John said, ominously. \"I'm not leaving Terra until we resolve the problems with High Command once and for all.\"\n\nShe nodded, then gave him a tired smile. \"Can we have a rest first? Your inquisitor will be a lot more impressive after she's had a nap.\" \n\nJohn put his arm around her waist, then did the same with Jehanna, who was staring wide-eyed at Admiral Devereux. \"We'll evacuate everyone on the Raptor, then head back to the Invictus. I imagine everyone's exhausted...\"\n\nTashana smiled at him. \"I think we definitely need a good sleep before we face the post-battle briefing. That's going to be a hell of a meeting!\"\n\n***\n\nJohn waited for the girls to walk through the airlock, then followed them into the Raptor, pushing Devereux's anti-grav gurney ahead of him. Tashana was waiting at the controls and she sealed the airlock behind him, with Faye detaching from the destroyer's hull a few seconds later. Rachel was waiting inside the gunship's airlock and she immediately went to Devereux's side, her eyes lighting up with a faint grey aura.\n\n\"How bad is it?\" John asked, giving the brunette a worried look.\n\n\"Damage to her spine, paralysis below the waist, severe trauma to her right lung,\" Rachel murmured, before turning to glance at him out of the corner of her eye. \"I used up almost everything I had saving Jade's life, but she's still badly hurt. I can do enough for Devereux to make sure she survives for the next few hours, but I'll need to rest before I can heal her properly.\"\n\nJohn patted her on the shoulder. \"Do what you can to keep her out of danger. We'll heal everyone once we've fully recovered.\" \n\nShe nodded. \"I'll take her up to Medical; I'll let you know if she wakes.\"\n\nRachel turned her attention back to her patient then concentrated harder, her expression strained as she pushed out her healing mists to envelop the admiral's body. John left her to her psychic ministrations, walking into the rear loading area where the rest of the girls were waiting. Jade was back in her usual Nymph form and sat propped up against the wall, her normally dark-green skin a sickly shade of chartreuse.\n\nJohn squatted down beside her and brushed his fingers through her hair. \"Bad kitty, very naughty...\" he said with a loving smile, but Jade could feel how worried he was at seeing her so badly hurt.\n\nThe Nymph leaned into his hand and closed her eyes. \"I know... and I'm really sorry.\" She gave him a wan smile and glanced up at the four catgirls who fidgeted nervously a few metres away. \"But I had to save them...\"\n\n\"You were very brave,\" he said quietly, cupping her head in his hand. \"But please don't scare me like that again, okay?\"\n\nJade nodded, a playful glint in her emerald eyes. \"I'll try not to...\"\n\nHe laughed and said, \"I'll feed you before you rest. Your sisters need you fully recovered as quickly as possible.\"\n\nShe gave him a grateful smile. \"Thank you.\"\n\nJohn studied the four Nymphs, who seemed torn between looking in the direction of the destroyer and hovering over Jade. He turned back to Jade and said softly, \"We need to have a long talk when you feel better, okay?\"\n\nJade nodded and sagged back against the bulkhead, clearly exhausted.\n\nHe rose to his feet, then stepped over to Jehanna. \"I'm afraid you'll have to wait a few hours until I can heal your cuts and bruises. I know I said I'd heal you as quickly as possible, but-\"\n\nShe gave him a quick kiss, silencing his apology. \"I completely understand, don't worry. Of course you need to heal Jade first.\"\n\n\"Thank you,\" he said gratefully, giving her a quick hug.\n\nThey had only just started to separate when the rear loading ramp began to lower, revealing the interior of the Invictus' Secondary Hangar. Sakura and Faye were waiting for them and the purple sprite greeted her friends with a cheerful wave, while the Asian girl wasted no time in bounding towards the ramp, a look of concern on her face.\n\nAlyssa caught John's arm and murmured, *Leave us to get everyone settled in.* She met his curious gaze with an anxious frown. *Calara needs you; she's up on the Combat Bridge at the moment...*\n\nHe could see how worried she was and immediately nodded his agreement. Turning to look at Dana who was watching her girlfriend tending to Devereux, he said, \"Sparks, I'll meet you in my Ready Room in ten minutes, okay?\"\n\nDana hesitated and lowered her eyes, then replied quietly, \"Sure, I'll see you there...\"\n\nLeaving Alyssa to oversee the disembarking of their guests, John strode down the ramp, pausing to give Sakura a quick but heartfelt hug as they passed. He did the same with Faye, who squeaked in delight, then headed over to the express grav-tube concealed at the back of the hangar. The purple sprite had left the door open for him, so he walked inside and whooshed up to Deck Four. \n\nStrolling over to his armour-equipping frame, he stepped inside and activated the machinery with the thumb controls in his gauntlet. The robotic arms began removing his Paragon suit, but the chestplate was jammed closed and wouldn't come apart. In the end, he had to break it along the joint to get the armour to separate, then left the mangled pieces propped up against the wall so they could be fixed later. By the time he'd finished, Irillith was waiting patiently beside him, her arms folded in front of her chest.\n\n\"I just wanted to let you know that Weber's dead,\" she said, a look of satisfaction on her face. \"It was probably a heart attack that finished him off... but it might have been blood loss.\"\n\n\"Blood loss?\" John asked in confusion. \"He wasn't wounded when we left him.\"\n\n\"He clawed his own eyes out,\" the Maliri girl said soberly. \"Remind me never to get on Alyssa's bad side...\"\n\nJohn grimaced, then pulled Irillith into an embrace, catching her off-guard. \"I know how much you did for us today, but thanks in particular for saving Jehanna. She told me you protected her from Weber.\"\n\nIrillith wrapped her arms around him, hugging him back. \"She's one of us... I wouldn't have dreamt of doing anything less.\"\n\n\"You're such a good girl,\" John whispered fondly in her ear. \"I'll look forward to spending time with you later.\"\n\nShe squeezed a bit tighter, then gave him a coy smile as they pulled apart. Irillith glanced down into the Combat Bridge, then said softly, \"Calara's really angry, but I think she blames herself for the way this battle played out...\"\n\n\"Thank you,\" he said, nodding in gratitude, as she left to give them some privacy.\n\nWalking down the ramp into the Combat Bridge, John found Calara standing amidst a sea of holographic ships, the Tactical Map expanded so that it encompassed the entire room. As he walked up beside her, he could see her brown eyes darting back and forth, glaring furiously at the aftermath of the Battle for Terra.\n\n\"Hello, Calara,\" he said quietly, placing a hand on her shoulder.\n\nShe started in surprise, then glanced his way, her expression bitter and angry. \"Why didn't they ask us for help, John? Why?!\"\n\n\"I get the impression it was Buckingham's fault,\" he replied, following her pained look of regret up to the burning graveyard of Terran Federation ships. \"According to Admiral Maybridge, most of High Command weren't even aware that the Kintark were invading until late last night.\"\n\nCalara shook her head, eyes narrowing in anger. \"I don't buy that excuse for one minute! They must've known something was happening! The Dragon March was in complete communications lockdown for several days... either the Admiralty was too stupid to realise what was happening, or too scared to cross Buckingham!\" She snorted with disgust. \"They're a bunch of fools and cowards... to think I actually used to respect High Command!\"\n\nJohn hesitated, realising the Latina was suffering a real crisis of faith. Calara's respect for her superior officers formed the bedrock of her loyalty to the Terran Federation, but that belief had been totally demolished.\n\n\"Hundreds of thousands of lives pointlessly thrown away, entire fleets annihilated... for no good reason!\" Calara exclaimed vehemently, waving her hand at the holographic images. \"You saw what happened at Olympus where I had complete control of the Terran forces. If I'd had days to prepare for the Battle of Terra, I could've mercilessly crushed the first waves of Kintark and made them realise they were making a terrible mistake. We could have forced their surrender and barely lost a ship!\"\n\n\"But you still managed to turn the battle around,\" John said gently. \"Even with us arriving so late and despite the fact that you had no chance to prepare...\"\n\nCalara glowered at the map and shook her head. \"That was more due to Dana obliterating their entire carrier force than anything particularly innovative from me. I just did what I could to mitigate the scale of the disaster...\"\n\n\"Don't downplay what you accomplished here,\" John said, his voice gentle and encouraging. \"You managed to achieve a minor miracle and salvaged a victory out of this debacle.\"\n\nThe Latina faced him, finally revealing how distraught she was. \"I might have won us a narrow tactical victory, but this battle was a huge strategic defeat!\" She gazed into his eyes as though pleading for him to understand. \"Don't you see? The Terran Federation forces have been mauled beyond all recognition! 42% of their ships were completely destroyed, another 24% severely damaged! It'll take years to rebuild those fleets and replace the experienced crews we lost!\"\n\nShe turned and waved a hand at the endless field of devastated Kintark ships, their shattered hulks leaving a forlorn trail all the way across the Sol system. \"What happened with the Kintark was even worse. They could have been allies against the other Progenitor... fought beside us to fight off his thralls. But he set this catastrophe in motion and totally destroyed them as a galactic power! Now the Kintark have barely got enough ships left to patrol their own borders and that's assuming High Command doesn't just annex their entire Empire! It's not like the Kintark could do anything to stop them at this point...\"\n\nJohn turned to look at the map with fresh eyes and suddenly felt bowed down by the crushing weight of responsibility. He slumped in his Command Chair and met Calara's desperately worried gaze. \"You're absolutely right, but this was my fault... I should've handled all of this differently. Perhaps if I'd tried to reach out to the Kintark and encouraged them to become my allies, all this could have been avoided...\"\n\nCalara knelt beside him and held his hand. \"You can't blame yourself for this. You gave each of us specialised skills to help you and this was my area of expertise... but I failed you.\" She looked deeply troubled as she continued, \"The other Progenitor is systematically crippling every empire in this corner of the galaxy; the Drakkar, the Ashanath, the Trankarans, now the Kintark and the Terrans... The only forces still intact are the Maliri and the Brimorians!\"\n\n\"And we're on the brink of war with the Enclave,\" John muttered, rubbing his hand over his face.\n\nShe nodded, her expression showing her fear and doubt. \"We must protect the Maliri forces! They're our best hope now... we can't afford to let anything happen to them.\"\n\n\"But I've been sending their fleets off all over the galaxy!\" John blurted out, eyes widening with alarm.\n\n\"I know, but I'm not sure what else we can do...\" Calara said, sounding equally distressed. \"The Ashanath and Trankarans need our protection, and the Maliri forces will actually benefit from helping them; they'll get ship upgrades and combat experience for the crews. I think it's the right course of action, but I'm worried how vulnerable they are, being out there on their own like that.\"\n\nJohn grimaced with frustration. \"Jade's always telling me to be the cat, not the mouse, but we've been dancing around to the Progenitor's tune for months. I've just been reacting to everything he's thrown at us and not been proactive at all.\"\n\n\"What were you planning to do next?\" Calara asked him curiously.\n\n\"We need to repair the Invictus, which will probably take at least a couple of days. While we're here, it's the perfect opportunity to sort out High Command once and for all,\" he said, looking down into her troubled brown eyes. \"Then I thought we should fly to the Outer Rim and join the Federation fleets in pushing the Kirrix out of Terran Space.\"\n\nThe Latina was quiet for a long moment, obviously perturbed by the advice she was about to give him. With a heavy sigh, she finally replied, \"I think we should focus on upgrading the Maliri fleets with all the new tech we've acquired. We need to return to Genthalas...\" \n\nJohn looked at her in consternation. \"But what about the Kirrix invasion?\" \n\nCalara deflated and wouldn't meet his eye as she slowly shook her head. \"Saving the border worlds from the Kirrix isn't in our best strategic interests. We have to focus on getting the Maliri ready for the big fight against the Progenitor...\"\n\nHe suddenly realised what had really been bothering her. With the devastating losses the Terran Federation fleets had sustained against the Kintark, Calara was starting to realise how ineffective they'd be against the Progenitor's thrall fleets. If the Federation wasn't in a position to help in that battle, then spending time and resources protecting Terran Space was a wasteful distraction.\n\nAs if she was reading his mind, the Latina nodded, her expression grim. \"The Terran Federation needs to guard its borders again, tying up lots of fleets and not giving us much to work with. I'm sure they'll also want retribution against the Kintark... and the number of ships needed to just police the Kintark borders will take out a significant chunk of what's left of the spaceworthy Terran forces.\" She looked anguished as she continued, \"I think we might have to write off the Federation as a useful ally, at least in the short term.\"\n\nJohn knew how fiercely loyal Calara had always been to the Federation, so for her to suggest that course of action must have been killing her. \"Are you sure?\" he asked quietly.\n\nCalara shook her head, eyes filling with tears as she looked up at him. \"No, I'm not sure at all...\" She swallowed around the lump in her throat. \"My heart tells me that we should hand over loads of tech to the Federation and bring their ships up to parity with the Maliri. Then we should rush to the border to fight off the Kirrix and liberate all those Terran worlds. My head tells me that doing either of those things would be a really bad idea...\"\n\nHe pulled her up onto his lap and encircled her with his arms. \"I definitely agree on the tech. I feel a lot of loyalty towards the Terran Federation, but I don't think we can trust them with something as powerful as Nova Lances.\"\n\nThe Latina nodded, then let out a heavy sigh. \"The battle at Olympus proved to me how huge a difference having a tech advantage can make. Our fleet of upgraded Terran ships caused enormous damage to that Praetorian fleet, but a similar sized Maliri force would have wiped the Kintark out before we even arrived; seeing the Maliri in action around Terra just confirmed how lethal they are. We also know you have their absolute loyalty and we can trust them with as much tech as we want without worrying they'll betray us.\"\n\nJohn was quiet for a long moment as he mulled over her points. \"I think we've got to assume the thrall ships are more advanced than the Maliri are at the moment. That means we're trying to close a tech gap there, as well as trying to bring the Invictus up to a point where it can face that black ship.\"\n\n\"Yes, exactly,\" Calara said, her expression grim.\n\n\"What if we were able to find a way to transfer tech schematics over the astral plane?\" John suggested hopefully. \"If we could figure that out, then we'd be able to keep sending blueprints to Edraele wherever we are. She'd be able to upgrade her fleets, while we continue to tackle any trouble the Progenitor stirs up... like this Kirrix invasion.\" \n\n\"That would be a perfect solution, but we don't know if that's even possible,\" Calara replied with a pensive frown. \"Until then, we need to get back to Genthalas as quickly as we can. Sharing the Brimorian shield technology with the Maliri will massively improve their survivability, especially for their strike craft. We can't afford to commit the Maliri to a major engagement without that upgrade.\"\n\n\"I think you're right...\" John said, sounding subdued. Although he could see the logic to what she was saying, he hated the idea of abandoning so many innocent civilians to a horrible death. \n\n\"Don't forget we've also got the Vulkat archives,\" the Latina continued, lost in thought. \"It probably won't take long for Irillith to translate them, which might give us even more useful technology we can incorporate into the Maliri fleets. If we spend a couple of days repairing the Invictus, then head straight for Genthalas, we could be back there in less than a week. I don't think we should risk any delay in rolling out upgraded shields for the Maliri and anything extra we can use from the Vulkat would be an added bonus.\"\n\nJohn considered their options, then said quietly, \"We also need to get the eternity crystal tech into the Ashanath's hands, then their most powerful psychics can start growing crystals to upgrade the Maliri fleets. I should probably ask Dana to focus on trying to resolve this astral schematic transfer issue on the journey to Genthalas.\" He grimaced, then added, \"But what about fighting the Kirrix? We can't just abandon those worlds... hundreds of thousands of Terran citizens are in terrible danger.\"\n\nAfter a moment's pause, Calara replied, \"The second Valaden fleet will arrive in Ashana in a few days' time. I don't know how long the eternity crystals will take to grow, but the Ashanath could probably re-plate most of their fleet in a couple of days. After the refit, we could redirect the Maliri to assist the Terran forces in liberating the worlds attacked by the Kirrix?\"\n\n\"Two days to get to Ashana, two days for the armour refit, four days to reach the Terran Outer Rim...\" John said quietly, gazing into Calara's eyes. \"Eight days and the Kirrix invaded a couple of days ago... that doesn't leave much time to save anyone infested during the initial invasion.\"\n\n\"I know...\" she replied, a haunted look in her eyes. \"High Command has sent the Terran border forces back, so they'll engage the Kirrix in four days... But it'll take them time to hunt down all the Kirrix ships; they've spread out and hit multiple colonies.\" \n\n\"We'd need a couple of days to repair the Invictus, then two more days to reach the Outer Rim...\" he said gazing off into the distance. Focusing on the brunette watching him intently, he continued, \"I know we're trying to avoid rushing around fire-fighting, but can we really put that many lives at risk?\"",
        "\"Hundreds of thousands versus billions if we lose against the Progenitor,\" Calara reminded him, but he could tell she hated having to be that cold and pragmatic. \n\n\"What if we go after the Kirrix, but just transmit the shield tech to Edraele via a secure comms channel?\" John suddenly suggested. \"High Command will get access to Brimorian shields after the battle regardless, so it's not like we need to hide the schematics from them. Then, when we've helped the Terran border forces liberate those worlds from the Kirrix, we can head back to Genthalas with the Vulkat tech and anything else Dana comes up with on the way back.\"\n\nThe Latina blinked in surprise, a smile of relief lighting up her face. \"Actually, that's a great idea! I was so preoccupied with keeping our tech secret I hadn't thought of that.\"\n\n\"We should strip out some Brimorian shield generators from Kintark ships for Lilyana to take with her and also provide her with the schematics,\" John continued, his mood lifting considerably.\n\nCalara nodded eagerly, realising what he was thinking. \"Then the Trankarans can start upgrading their own ships with better shields, as well as build upgrades for the Maliri fleet!\"\n\n\"Until Niskera can get the comms beacons rebuilt, that's probably the quickest way of getting the shield technology to the Trankarans,\" John agreed. \"We can just transmit that data directly to the Ashanath... then they can start building upgrades for the Maliri fleet that's already en route. If we don't need to redirect that fleet to help fight the Kirrix, then they can guard Ashana and upgrade their armour, shields, and focusing crystals all in one go...\"\n\nAlyssa's voice echoed through both their minds as she said, *If Dana can invent some kind of psychic comms device, then we could send the schematics for that to Edraele by secure channel too. It won't matter if the Terran Federation gets their hands on it, because they won't have the personnel to use it.*\n\nCalara let out a happy sigh. \"It feels like you've lifted a huge weight off my shoulders! I was so worried we'd have to sacrifice the worlds on the Outer Rim, but now we can rescue those people and start upgrading the Maliri shields even faster than I thought!\"\n\n\"You're welcome,\" John said, relieved to see her smiling again. \"You did make some really important points though. You're right about the Battle for Terra being a strategic disaster and I completely agree with doing whatever we can to prepare the Maliri fleets for the fights to come.\"\n\nShe crossed her wrists behind his neck then leaned in to give him an appreciative kiss. \"Thanks, John. I really needed to talk to you about that... I feel so much better now.\"\n\n\"Me too,\" he agreed. \"It's a relief to have a solid plan ironed out.\"\n\nThe Latina slid off his lap, letting him stand.\n\n\"I'll start making calls,\" Calara said with a grin. \"I'll update Lilyana, the Ashanath, and the Maliri about everything we discussed. With a bit of luck, Genthalas will be able to start installing Brimorian shield generators in a matter of days!\"\n\n\"Excellent! Thanks, honey,\" John said, sharing a smile with her, before turning and walking up the ramp to leave the Combat Bridge.\n\n*That was wonderful, thank you,* Alyssa said gratefully. *Calara was feeling so down before and blaming herself for the battle. I knew you'd be able to make everything right again.*\n\n*One down, one to go,* John said as he stepped into the grav-tube, but he knew this next conversation was going to be a lot harder...\n\nWalking out of the express grav-tube into the main bedroom, John was surprised to see how crowded it was. Jehanna was standing beside the bed and studying the sleeping teal-skinned girl with fascination, listening avidly to the twins as they told her all about Helene and the Abandoned. On the opposite side of the bed, Sakura was tucking Jade under the covers, the Nymph's eyes drooping with exhaustion. Her four catgirl sisters hovered anxiously nearby, appearing jittery and unsettled.\n\nJade looked up at her fellow Lenarrans and murmured, \"Here's your new master...\" She glanced over at John and smiled. \"Why don't you go say hello to him?\"\n\nJohn was suddenly staring at four sets of sharp emerald eyes, gazing at him in fascination. The four Nymphs bounded around the bed to join him, eager smiles on their feline faces. \"Is it true? Are you this one's new master?\" the first one asked hopefully, the rest repeating her desperate query an instant later.\n\n\"They need this for now, John,\" Jade said softly. \"You can give them their freedom later, like you did with me.\"\n\nHe nodded his understanding. \"Yes, I'm your master,\" John said firmly, watching the startling shift in mood as the four Nymphs immediately relaxed.\n\nThey were at ease for a few seconds... then they frowned and looked perturbed.\n\nThe closest one with the leopard-like markings on her fur reached out to gently stroke his arm. \"Master... you are blocking this one from your thoughts!\"\n\n\"They want to change shape and be your perfect mate,\" Jade told him, watching their interaction with great interest. \"You're keeping them out with your mind-shield.\"\n\nHe glanced at her and frowned. \"Can't they stay just as they are?\"\n\n\"They could, but it's probably not practical,\" she said with a smile. \"Don't you remember my pointy canines in my natural form? I expect you'll be feeding them on a regular basis, which might prove a little... painful.\"\n\nTurning his attention to the closest Lenarran, John reached out to cup her furred face and stroked her gently. \"I'll let you in one at a time... are you ready?\"\n\nShe looked up at him with big trusting eyes, her excitement and anticipation quite clear on her cute face. John pictured Jade in his mind but imagined her with subtly different facial features resembling this Lenarran, and a faint patterning that mimicked those leopard-like spots. When he was satisfied that he'd captured this Lenarran's likeness in a more Terran shape, he opened a window into his mind and let her in.\n\nThe catgirl gasped, her eyes widening as her consciousness reached out to brush against his mighty presence. The Nymph looked awed when their minds met, as if she could barely believe the power behind his thoughts. Her expression of wonder turned into elation when she found the image he'd prepared for her and she rushed to copy it. John pulled his hand back a few inches as the Nymph blurred and shifted, growing taller and bustier, while her fur receded. \n\n\"Oh, thank you, Master!\" she gasped, nuzzling into his hand and planting fluttering kisses on his palm.\n\n\"Do you like this form?\" John asked cautiously, watching as the dark-green girl examined her statuesque new body.\n\nThe Nymph nodded exuberantly, her emerald eyes bright and filled with joy. \"It's beautiful! This one adores it!\" She bit her lip and gave him a coy look. \"Would Master like to use this one for pleasure now?\"\n\nHe encircled her in his arms and gave her a gentle kiss. \"Later, I promise. For now, I'd like you to keep your big sister company. Jade will look after you until we can get some time together.\"\n\nShe nodded and let out a happy sigh, then prowled across the bed to rejoin Jade. John repeated the same steps with the next three catgirls and a few minutes later all four Nymphs were snuggled up with their sister. \n\nDespite her state of exhaustion, Jade gave him a hungry look. \"Are you going to feed me now, Master?\"\n\n\"Let me help,\" Sakura immediately volunteered, brushing her fingers through Jade's dark hair. \"We don't want you exerting yourself when you're this weak.\"\n\nJade gave her a grateful smile, then lay near the edge of bed with her head tilted backwards, watching as John walked around to join them. Sakura straddled the supine Nymph, licked her lips and opened her mouth in obvious invitation. Standing in front of her, John undid his trousers and wasted no time sliding his length home into her welcoming throat. Sakura hummed in satisfaction as she started to bob in his lap and John was suddenly aware he had quite the audience, with Jehanna, the twins, and the four Nymphs all watching avidly.\n\nHe felt a warm tongue lap at his quad as Jade's voice echoed through his mind. *You did a wonderful job on my sisters' new forms; they look really beautiful...*\n\n*I can't take credit for that, you were my inspiration,* he replied, tilting his head to one side so he could share a smile with Jade. \n\nShe sighed with contentment and he could feel her breath tickling his balls. *I can't wait to feel you healing me, Master. I've never needed it like I do today...*\n\n*Not long, sexy,* he replied, enjoying Sakura's loving attention.\n\nFocusing on the Asian girl again, he ran his fingers through her silky jet-black mane. \"You were incredibly brave today and saved a lot of innocent lives... I'm very proud of you, honey.\" \n\nSakura's gaze softened and he could see how much his words meant to her. They looked into each other's eyes as she brought him to release, a wonderful sense of closeness between them. John eased back before his climax, then slid into Jade's eager mouth, hilting himself in one thrust inside her malleable body. He groaned as the Nymph's throat embraced his shaft in a snug grip and began to massage and stroke him, quickly pushing his over the edge. Sakura sat up and kissed him while he filled Jade's stomach, his quad clenching as he pumped her full of cum.\n\nThe four Nymphs looked on in awe, entranced as they watched him feeding Jade. \n\n\"This one, cannot wait to be used, Master...\" the leopard girl murmured, licking her lips in anticipation.\n\nThe tiger striped Nymph placed her hand on Jade's throat and moaned as she felt him throbbing in her sister's throat. \"Master is so amazingly endowed!\" \n\n\"And so potent!\" the girl with tabby-like markings gasped. She exchanged a look of wonder with the final Lenarran as they placed their hands on Jade's growing belly, feeling it swell with that huge load. \n\nJohn could feel the active connection with Jade lighting up in his mind and he was horrified to see how badly she'd been injured. Even after Rachel's healing efforts, the Nymph was terribly wounded, and shifting into her normal form had simply dispersed the damage over her whole body. One of the Gauss Cannon rounds had even cracked her crystalline heart, leaving her teetering on death's door. He suddenly realised just how close he'd come to losing her and he crouched down to give her a fierce hug.\n\n\"You nearly died, Jade!\" John exclaimed, his voice fraught with worry. \"With the astral monsters around, I wouldn't be able to bring you back!\"\n\n\"I'm so sorry, Master,\" she said softly. \"I promise I won't let any more spaceships use me for target practice...\"\n\nJohn couldn't help laughing as he pulled back and gave her a tender kiss. He was relieved to see her returning to her normal colour again, her skin darkening and the lustre returning as she began to respond to his healing. With the extent of her injuries, he knew that fully regenerating the Nymph was going to leave him tapped out as well.\n\n*I'll give you everything we've got left,* his Maliri Matriarch murmured, infusing him with the last of her psychic energy.\n\n*Thank you, Edraele,* he replied gratefully, feeling the eldritch power flowing through him and into Jade. *We'll talk later, okay?* \n\nJohn sensed Edraele's silent empathic acknowledgement, then he watched the Nymph relax back on the bed, with Sakura helping Jade to move back so her head was on the pillows. Bands of light were pouring off Jade's curved belly and her four Lenarran sisters gaped at her body in astonishment. They flanked her two on each side, with the lower pair resting next to her rounded stomach, the second two cuddled in with their heads on Jade's shoulders. All four were entranced by the pulses of light as they spread out over her lithe form, following them over the contours of her body with their slender fingers.\n\nJade gave him a tired but blissful smile and closed her eyes, never looking more contented. *We saved my sisters, John... I'm not alone any more...*\n\n*You never were, honey. Now get some rest and we'll talk when you're feeling better,* John said kindly, stroking her dark mane and listening to her soft purrs. He saw that Jehanna and the twins were watching him too, so he smiled at them and continued, \"The three of you must be exhausted as well. Try to get some sleep, I'll be back in a little while.\"\n\nThey waved goodbye as he left the bedroom and John walked briskly along the corridor to the grav-tube. Stepping out onto the Bridge, Faye rushed down the steps to meet him, a worried frown on her face. \n\n\"We've been receiving calls from lots of admirals!\" she said pensively. \"They all want to speak with you, John!\"\n\nHe darted a glance at his Ready Room door, then said to the purple sprite. \"Just stall them for a bit longer, I really need to speak to Dana first.\"\n\nFaye nodded, her eyes flicking to that same door. \"After we blew up the Kintark with the mines, she got really upset... I'm worried about her, she's never been this sad before.\"\n\nJohn stroked her arm. \"I'll go talk to her. We can deal with the admirals after that.\"\n\n\"Okay, I'll keep them occupied,\" she agreed, before darting in to give him a quick hug. \"I'm so glad you're safe! It was terrifying watching you fight that dragon!\" \n\n\"Fighting him was fairly terrifying too,\" he said with a wry smile.\n\nFaye giggled as she released him. \"I bet!\" She skipped up the illuminated steps to the Command Podium, leaving John to walk over to his Ready Room. \n\nHe took a deep breath, worried what he was going to say to Dana, then hit the button to open the door. The Invictus was currently on the dark side of Ganymede, the sun's distant radiance blocked by the fragments of that moon. With the overhead lights off, his Ready Room was bathed in soft starlight, revealing a solitary figure standing by the long windows. Dana had her arms crossed tightly around her chest as she gazed despondently out at the stars.\n\nJohn walked over to join her, but was surprised that she didn't greet him, the redhead's attention fixed out in space. He gently rubbed her back, and when she finally turned to look at him, it only took a glance into those sky-blue eyes to see how deeply troubled she was.\n\n\"Talk to me, Sparks,\" he said quietly. \"Tell me what's wrong.\"\n\nShe was quiet for a long moment, then she asked in a subdued voice, \"Do you remember how you felt after the Siege of Galon Prime?\" \n\nHer question surprised John, but he nodded, remembering that dreadful battle a decade ago all too well. \"Yes, I do.\" \n\n\"You personally killed 50, maybe even 100 rebels in the boarding actions, right?\" she asked, the pain quite obvious in her eyes as she searched his face.\n\nHe nodded, his expression grim. \"Yeah, I think so. It was brutal combat... hard to tell for sure.\" He sighed with regret and continued, \"I blamed myself for the reprisals afterwards; hundreds-of-thousands were killed in the orbital bombardments...\"\n\n\"But you didn't order the orbital bombardments. You weren't directly involved in any way with the deaths of all those people...\" she persisted, her voice catching. \n\n\"Irillith explained to me what really happened... that it was already planned before we even tried to lift the siege,\" John said, before he paused and studied her carefully. \"Why are you asking me this?\"\n\nDana's eyes filled with tears as she blurted out, \"Because I just murdered a million people! I exterminated those poor bastards like fucking cockroaches! I can't blame anyone else... it was all me!\"\n\nJohn looked at her in alarm and protested, \"You didn't murder anyone! You can't bla-\" \n\nShe shook her head, interrupting him. \"I didn't even give them a chance to surrender, I just fucked them up!\" Dana's shoulders shook as the tears rolled down her cheeks. \"I always thought I was one of the good guys... but I'm not... I can't be...\"\n\n\"Of course you're good!\" John objected, pulling her in for a hug. \"You're sweet and kind, generous, thoughtful, and-\"\n\n\"...the biggest killer in Terran history,\" she finished for him, crying openly now. \n\nJohn ducked down to make eye-contact with her. \"We were at war with the Kintark and we were defending Terra! If the Kintark won, they probably would have slaughtered all the Terran fleet personnel, just like they did in the Dragon March.\" \n\nDana shook her head. \"But, I still-\"\n\n\"You didn't have any choice! I was talking to Calara about it only a few minutes ago. She said that if it wasn't for you, we probably would have lost the battle!\"\n\nThe redhead had a haunted look in her eyes as she whimpered, \"A million lives, John... I just wiped them out. How can I ever justify that much killing?\"\n\nHis heart went out to Dana and he pulled her into a tight embrace. She leaned heavily against him, arms hanging limp at her side, and he could feel her tears soaking his shirt as she wept. John began to realise just how much the weight of all those deaths was pressing down on her.\n\n\"You can't blame yourself for this, honey,\" he said quietly. \"I gave you the go ahead for your plan and I actually gave you those abilities in the first place. I'm responsible for everything, not you.\"\n\nDana's voice was thick with emotion as she murmured, \"Rachel uses her abilities to fix people and make them better again... I've used mine to kill a shitload of people; so what does that say about me?\"\n\nThe door to the bridge slid open and Alyssa breezed through, her voice firm and uncompromising as she said, \"They were the bad guys, Sparks. Fuck them... they're not worth shedding a single tear over.\" \n\nJohn and Dana turned to look at the blonde as she walked over to join them.\n\n\"They can't have all been bad,\" Dana said, guilt etched across her face. \"I should've given them a chance to surrender at least...\"\n\nAlyssa shook her head. \"They didn't deserve it, trust me.\" She placed her hand on her friend's shoulder and gazed into her eyes. \"The Kintark were planning on wiping out humanity... Irillith found out everything. They were going to enslave all the Terrans and work them to death; men, women, even children... You saved billions of lives.\"\n\n\"Really?\" the redhead asked, a flicker of hope in her voice. \"You're not just saying that?\"\n\n\"Talk to Irillith later, she can show you everything she found. Besides, I'd never lie to you,\" Alyssa said, leaning in to touch her forehead to Dana's. \"We're best friends forever, right?\"\n\nDana nodded and sniffed as she tried to brush the tears from her eyes. \"Right...\"\n\nSlipping an arm around Dana's waist, Alyssa smiled as she said, \"You know John's just going to blame himself for you getting upset now...\"\n\nThe redhead darted an anxious glance his way. \"Shit! And we only just started helping him get over all that guilt...\"\n\nHe chuckled and hugged them both. \"Don't worry about me. As long as you're okay, I'll be alright.\" He looked at Alyssa and added, \"I had no idea the Kintark were planning to do that... I never would have imagined they were capable of being that evil.\"\n\nThe blonde let out a sad sigh. \"We've seen the same thing with the Maliri and the Terran Federation. It only takes a few fucked up guys at the top... then the rest just follow orders. I bet no one in the Kintark armada was complaining when they were gunning down escape pods in the Dragon March.\"\n\nJohn nodded his agreement, then cupped Dana's face with his hand and brushed his thumb across her tear-streaked cheek. \"I'll always try and make sure we're on the right side, I promise. I'm very proud of you and I never want you to feel any regret over what you do for me... okay?\"\n\nDana let out a huge sigh of relief and stood up straighter. \"Okay, and I do trust you; I know you always try and do the right thing. I just... well, it looked really bad, that's all.\"\n\nHe leaned and kissed her. \"I know, but you did good, Dana. You just saved about 80 billion lives, so you're doing just fine on the karmic scales... Rachel's actually got quite a bit of catching up to do...\""
    ],
    "authorname": "Tefler",
    "tags": [
        "shapeshifter",
        "psychic",
        "cum inflation",
        "blowjob",
        "nymph",
        "alien"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-101"
}