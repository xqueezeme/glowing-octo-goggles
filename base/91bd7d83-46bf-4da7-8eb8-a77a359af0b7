{
    "title": "Memories of Linda",
    "pages": [
        "I am sitting in my office at work, finishing off an email. I looked across my desk and saw my favourite pictures there. One of them took me straight back a single moment in time.\n\nIt was a moment that was so uncharacteristic for me. I had always been a relatively shy person, happy to go with the flow, never being bold or craving attention.\n\nIt was at that moment though everything became clear. Any shyness or uncertainty I had disappeared. I seemed to gain a confidence I had never before had. I finally had the courage to say what was on my mind, what was in my heart.\n\n\"Linda, I have wanted to tell you this for so long........... I have fallen for you. Fallen for you in such a big way.\"\n\n**********\n\nIt all started in the mid 1980's. My family lived in a medium sized coastal town. I met my best friend Pete during the first year of high school. We shared many interests, played on the same sports teams and lived only 10 minutes push bike ride apart. It's a friendship that continues to this day. I got to know his family very well as we spent a lot of time together. His dad, Trevor, was a surveyor and his brother, Adam, was 5 years younger than us.\n\nHis mother, Linda, worked in the local bank. Linda was 5'6\" tall, with blonde hair that was cut fairly short, blue-green eyes and a warm, inviting smile. Her body was quite fit, with b cup breasts and an inviting derri\u00e8re. Her legs were always to die for, tanned, silky smooth, with beautiful calves. I always thought she was a very attractive woman.\n\nAs I was good friends with Pete, Linda was the first adult who let me call her by her first name.\n\n\"Dan, you are around here all the time. You don't have to call me Mrs Tomkins. Linda is just fine.\"\n\n\"Thanks Mrs T...... Thanks Linda.\"\n\nIt made me feel so grown up to call her by her first name.\n\nDuring our middle years of high school, Pete began to spend more time around at my house than previously. He told me in confidence that his mother and father were fighting, and it was becoming quite bad for him at home. Eventually his parent's separated and finally divorced. His father moved to the next town about half an hour away and set up his home and business. He moved on quickly and was soon in a new relationship.\n\nLinda had received their house as part of the divorce settlement and continued to work in the bank. She didn't appear to have any relationships, wanting to concentrate raising her boys and her work. It was during the summer after the divorce that I first realised just how gorgeous Linda was, and that she was becoming more than just 'Pete's mother' to me. \n\nPete and I had been out playing golf on a very warm day and arrived back at his place after the game. We wandered around the back of the house, where we came upon Linda lying on the sun lounger in the afternoon sun.\n\nLinda was wearing a pale yellow one piece swimsuit, her skin glistening from the tanning oil she was wearing. She was lying on her stomach, and the suit was a classic 'Baywatch' style suit that was popular back then, cut low at the back to show off the most skin. Her legs looked amazingly smooth and sexy, and her bum was so pert, being held by her swimsuit.\n\n\"Hi Mum, we're back.\" Pete said.\n\n\"Hi Linda.\" I mumbled, somewhat awestruck be the beautiful sight before me.\n\n\"Hi Boys. How did you hit them today?\" she asked with a smile, propping herself up on one elbow, allowing us to see her front. The suit had detail stitching at the front between her inviting breasts, scrunching the material together a bit, enhancing her cleavage.\n\n\"Not too bad. It was a close game, but I still kicked Dan's ass.\" Pete exclaimed.\n\n\"You didn't beat me by that much. You got lucky, that's all.\" I replied, trying my best not to stare at Linda.\n\n\"There are some cold drinks in the fridge. You both look like you could use them. It must have been hot out there today.\" Linda said looking at me over the top of her sunglasses, smiling at me.\n\n\"Yes it was.\" I managed to get out.\n\n\"Thanks Mum. C'mon Dan.\" Pete bellowed.\n\n\"Thanks Linda.\" I gushed.\n\n\"You're always welcome Dan.\" She replied with a beautiful smile. She rolled back over onto her stomach to continue tanning in the afternoon sun.\n\nI glanced back over my shoulder as I went inside, taking one more look at Linda. That was it. That was the moment that I first saw Linda not only as a beautiful woman, but as a sexually attractive woman. I fell and fell hard for Linda. \n\nThoughts of her pervaded my masturbatory fantasies. I no longer dreamed of movie stars or Playboy models. I dreamt of Linda. It was better than any of my other fantasies because she was real. I could see her regularly, and she knew me and was friendly to me.\n\nEvery time I saw Linda I made sure I said hello and had a chat. She always listened to me and seemed to me to treat me as an adult. Whenever I was at their house I was always subtly trying to watch Linda, enjoying her beauty without being caught. I tried my best not to get caught, but I'm sure Linda did catch me a few times looking in her direction. My feelings just grew and grew every time I saw her.\n\nI really physically matured during the final year at school. I was now 5'9\" tall, relatively fit thanks to all the sport I played. My hair was dark, and I had the floppy fringe haircut that was popular back then. My braces had come off the year before and my smile was very nice apparently. But in terms of emotional maturity I was still as dorky as I ever was.\n\nOf course there were other girls that I liked at school, and Pete and I, and our friends always talked about girls we liked. But the thoughts of Linda were always in my mind. I did have a couple of dates in high school, but I really think I wasn't mature enough to really handle myself properly with girls, and they didn't lead to any relationships.\n\nDuring the final year at school I worked really hard in my studies to get the marks I needed to go to College. While I wasn't the most gifted student academically my efforts paid off and I got the results I needed and was to move 3 hours south for college. Pete didn't get the results he wanted, but he ended up working full time in his Dad's office, as well as part time at nights in the local video store.\n\nThe first year away was very hard both academically, and socially, as I was living away from home for the first time. I did eventually find my feet so to speak and achieved decent results for the year. \n\nI had a few dates during the year and even lost my virginity to a lovely girl from my course. I was a rebound fling for her. I didn't care at all, it was great for me. \n\nI was still the quietly spoken, reserved person I always was, but I was looking forward to spending the summer back home, catching up with all my old friends.\n\nI had been back home a few weeks and back into old routines. It was a wet and stormy Tuesday morning and I had nothing to do. I didn't have to go to work, it was too wet to play golf or go to the beach and Pete was at work. It was 8:30am and I didn't know what to do. I decided I would get a few videos, kick back and relax. \n\nI called Pete at work and asked if I could go over and borrow a couple of his movies. Pete had a great collection of videos back then from his work at the video store. Of course he said yes, and that I should just go around the back of the house and let myself in. We also organised to catch up that night for a couple of beers.\n\nI tidied myself up, threw some shorts and a t-shirt on and jumped in the car. I was at Pete's house and it was just 9:00. I walked up the drive when I noticed that Linda's car was in the garage. I was surprised at this as she did work full time.\n\nI knocked on the back door and yelled out \"Hello Linda.\"\n\nI heard some movement in the house and Linda came to the door. She saw it was me and a smile appeared on her face. As it was quite warm, she was wearing a navy t-shirt and beige coloured shorts. The shorts weren't too short, but they did show off her legs nicely. \n\nMy heart raced as I saw Linda, as all of the feelings that I had for her came back to me with a vengeance.\n\n\"Hi Dan. How are you? What's going on?\" she said with a big smile as she opened the door and let me in.\n\n\"Hi Linda. I'm great. I'm surprised to see you here on a work day.\"\n\n\"Yes. I have a few days owing to me, so I decided to take one today. It's a bit miserable out there to be going to work.\" Linda said. \"What are you doing around here today? Pete is at work, as usual.\"\n\n\"Well I called him to borrow a couple of movies as I didn't have anything to do today, and he said to come over and borrow what I wanted.\"\n\nLinda smiled and said \"That's great. I haven't seen you in so long. You have really grown since being away at college. How's it going? What have you been up to?\" As she said this she guided me into the living room and we sat down on either ends of their 3 seater lounge.\n\nWe chatted for a few minutes about college life, living away from home for the first time and how academically successful my first year had been. She asked about girlfriends and I replied I had been out with a few girls but did not have a 'girlfriend' as such.\n\nAs we were talking, Linda had moved a little closer to me on the lounge. We were still talking, but I wasn't consciously paying attention. I was too busy drinking in her beauty. Her hair wasn't styled but looked great. She had no makeup on her face, but her skin still looked beautiful. There were a few small wrinkles around her eyes, which creased up when she laughed. Her blue green eyes sparkled as we talked, her lips smiled as she spoke. She had her right leg tucked up underneath her left, so she could be turned to face me on the lounge. Linda was absolutely stunning and my mind was in turmoil.\n\nAll the feelings that I had for her came racing back. I just wanted to tell her how much I liked her, how I had fallen for her, and how I wanted to kiss her, cuddle her and do everything else. But could I do that? Should I do that? How could I tell her how I feel?\n\nLinda could see the expression on my face had changed and she asked \"Is everything all right Dan?\"\n\n\"Yes of course it is. Why do you ask?\"\n\n\"Well, it looks you have something on your mind. You can talk to me about anything, you know that.\"\n\n\"Yes I know that Linda............ I just don't know what to say, how to explain it.\"\n\n\"Dan, you can tell me anything. What's on your mind?\"\n\nAt that moment everything became clear. Any shyness or uncertainty I had disappeared. While I am normally a reserved person, I seemed to gain a confidence I had never before had. I finally had the courage to say what was on my mind, what was in my heart.\n\n\"Linda, I have wanted to tell you this for so long........... I have ...... I have fallen for you. Fallen for you in such a big way.\"\n\nLinda looked stunned as I said this. She obviously wasn't expecting me to say that. My head dropped slightly as I felt embarrassed that I had confessed my feelings to her.\n\nLinda could see that I was embarrassed and she took my hand to reassure me. I looked back towards her and saw the stunned look she had on her face had changed to one of calmness.\n\nI started to speak as I still had more I wanted to say. \"Linda, I have had feelings for you for such a long time. You are so beautiful and kind and sweet. You have always treated me like an adult and listen to what I have to say. I just can't get you out of my head.\" I babbled along, not really making any sense, but trying to convey what I felt for her.\n\nLinda was now smiling at me as she listened to what I was babbling. She squeezed my hand as she spoke, trying to get a word into the conversation \"Dan.... Dan.... Dan\".\n\nI finally stopped talking and she spoke again. \"Dan, that is so sweet of you to say. You are very special to me too.\" She paused as she looked to be thinking what to say next. \"I am very flattered that a handsome young man like your self would be attracted to an ....... older lady like me.\"\n\n\"I have never thought of you as 'older'. I have only ever thought of you as beautiful; beautiful and gorgeous.\" \n\nShe reached out and lightly stroked my face with her hand. \"Dan you are so sweet.\" Linda was looking into my eyes and smiling happily at me. She remained calm, but my heart was racing.\n\n\"Dan, you said you have had feelings for me for a long time. When did you first have these feelings for me?\"\n\n\"I have always liked you Linda. But I knew I first had feelings for you when I saw you lying out on the sun lounger in your swimsuit. You blew my mind when I saw you that day. I had never seen a more beautiful woman. Ever since then my feelings for you have grown stronger every time I have seen you.\"\n\nLinda smiled at me, looking like she was deep in thought. She stood up off the lounge, reaching down and offering me her hand. I took it and stood up facing her. My mind was racing. What was she going to do? Were we going to kiss? Were we going to do more?\n\nShe held her arms out and I approached. Her arms slipped around my shoulders as mine slipped around her waist as we hugged together. We hugged closely, her head next to mine for a little while. It felt amazing to be in her arms. My senses were alive as I could feel her against me and smell her shampoo in her hair as we cuddled. It was better than I could have imagined.\n\nLinda pulled her face back so that she could see mine. She spoke a little more seriously \"Dan, it sounds to me that you just have a big crush on me...\"\n\nAs she spoke, part of me was becoming very enthused with the situation, and began to make its presence felt. My groin was close to Linda's and my rapidly hardening manhood was now protruding and rubbing against Linda.\n\nLinda pulled away from me slightly and looked down to see the bulge in my shorts. I looked down and could see I was erect. I don't know why but I was immediately embarrassed by this. It was what I wanting to do, but to actually have it happen was a shock. \n\nI let go of Linda and began mumbling and stumbling as I backed away from her. \"I'm so sorry Linda. I must go now. Bye.\" I turned and raced down the hall and out the back door.\n\n\"Dan, please wait....\" I heard Linda call, but I was too embarrassed. I jumped straight into my car and headed home.\n\nMy thoughts raced as I made my way home and were continuing to run as I went inside. How could I have done that? She must think I am a fool. What was I thinking telling her I had feelings for her? And then getting hard and 'poking' into her. \n\nI was cursing and kicking myself that I had done all of these things. I was wishing I could turn back the clock and just go back to sitting with her on the lounge, pleasantly talking with Linda about everything and not ruining everything by letting my juvenile feelings come out.\n\nI had been home about ten minutes when the phone rang. \n\n\"Hello\" I answered.\n\n\"Dan, its Linda.\"\n\n\"Oh Linda, I'm so sorry. That was bad of me to say all.....\" I started babbling again.\n\n\"Daniel, please be quiet for a second and listen to me.\"\n\n\"Ok.\"\n\n\"You shouldn't have rushed out of the house like that. We hadn't finished talking.\"\n\n\"I'm so sorry Linda.\" I replied, sounding as sorry as I felt.\n\n\"I think you should come back over here so we can finish our conversation.\" Linda said quite firmly.\n\n\"Oh, ok Linda.\"\n\n\"I will see you in a few minutes Daniel.\" I knew she was serious as she was using my full name.\n\n\"Alright. I will see you in a minute. Bye Linda.\" \"Bye Dan.\"\n\nNow my mind was racing again. Linda wanted to see me again. What more was there to say? I had blurted out my feelings. What was Linda going to say? Was she mad at me? Probably. Was she going to tell my parents? Was she going to tell Pete? Would she never want to see me again?\n\nThese thoughts all raced around my head as I drove. Somehow I found myself outside Linda's house. I composed myself as best as I could and went up the driveway to the back of the house.\n\nReaching the back screen door, I took a deep breath, mentally adjusted myself to accept whatever was going to happen, knocked on the door and called out as I usually did \"Hello Linda.\"\n\nI saw Linda come into view as she came to the back door and she smiled a little as she saw me.\n\n\"Hi Dan, come on in.\" she said as she opened the door.\n\n\"Thanks Linda.\" I replied a little sheepishly, still feeling very embarrassed about what had happened only half an hour ago.\n\n\"Please come and sit with me again Dan. We need to finish off our conversation from before.\" She said as we again went and sat on the lounge.\n\nWe were both sitting where we had been before. Linda again sat with her right leg curled up underneath her, facing me.\n\n\"So Dan, where were we up to?\"\n\nI could tell by the way Linda spoke and the look on her face that she wasn't angry with me. I had been honest with her before, even if it wasn't in the most articulate way, so I decided to be honest again and tell her how I was feeling.\n\n\"Well Linda, I embarrassed myself in a couple of ways, we cuddled, and then I embarrassed myself again and ran out of here in a hurry.\"\n\nLinda laughed at my summation, not at me, but sympathetically, understanding how I was feeling.\n\n\"Oh Dan. You have no reason to be embarrassed. You did catch me by surprise with what you said, but what you said was lovely. I could see that you really meant it and that it was coming from your heart. It means a great deal to me.\" Linda reached across and took my hand, smiling warmly at me. I was relieved to see she wasn't upset with me and started to relax a little.\n\nShe continued \"I still cannot believe that a woman of 45 can be ...... of 'interest' to a handsome 19 year old man. It is so very flattering.\"\n\n\"You have always been beautiful to me. I have never even thought of your age, only the gorgeous person you are.\" I replied.\n\nLinda blushed a little as I said this. She then reached out and brushed my fringe back off my forehead, running her hand down my face again. I pressed my face into her hand enjoying her touch.\n\n\"Dan, before you 'ran' out, I was trying to say that I thought you just had a big crush on me. There is nothing wrong with that at all. As I said I'm so flattered to be the ...... 'object of your affection'.\" The look on Linda's face changed a little, and I couldn't tell what she was thinking.\n\nShe stood up, and moved around to stand in front of me. Looking down straight into my eyes, Linda said \"Can I ask you something Dan?\"\n\n\"Of course. Anything.\" I replied.\n\nLinda had a mischievous look on her face. She then turned around so that her back was facing me. She reached down and started to lift her t-shirt. I blinked hard in surprise as her shirt came off. \n\nIt revealed that Linda was wearing her yellow one piece swimsuit underneath her clothes. The very same swimsuit that started my infatuation with her. Her back looked beautifully tanned and the yellow suit showed off her tan wonderfully.\n\nTurning around to face me, Linda dropped her t-shirt on the floor. I could now see her front and her swimsuit was like a second skin as it clung to her body, showing off her gorgeous curves.\n\nIn a calm, almost innocent voice, Linda asked \"Dan, was this the swimsuit I was wearing when you first 'fell for me'?\"\n\nFeeling mesmerized by the amazing sight before me I replied \"Yes.\" In a quiet, slightly wavering voice.\n\nLinda smiled warmly at me, knowing that I couldn't really believe what was happening. She then leant forward and started to push down her shorts. As she bent over to remove them, she was looking right into my eyes, almost drawing me into her.\n\nShe pushed the shorts right down and stepped out of them. There she was, standing right in front of me, just wearing her swimsuit, looking absolutely stunning. Right there, in front of me, just for me. I couldn't believe it.\n\n\"Dan, do I still look good in this swimsuit? I haven't worn it for a while and I didn't know if it still fitted.\" Linda asked me, again in her sweet, innocent voice.",
        "\"Oh Linda. You look amazing ....... stunning, gorgeous, so, so beautiful. You look even better now than when I first saw you in it.\" I gushed, sitting forward on the edge of the lounge.\n\nLinda smiled so warmly as she reached out for my hand. I took her hand and stood right in front of her. She placed her arms around my shoulders again, and I followed her lead and slipped my arms around her waist, feeling her warm, soft skin under my hands.\n\nLeaning forward, Linda kissed me on the lips for a very first time. It was a short kiss, but I almost melted in her arms.\n\n\"Dan when we cuddled before and you ...... 'got hard' and I felt you against me, just like I can now,\" she said with a giggle, \"Well let's just say that made my mind up as to how we should deal with your feelings for me.\" \n\nWith this Linda pulled me closer to her and we kissed. Softly, gently, arms holding each other close. Soon I felt Linda's tongue squeezing between my lips, wanting to play. Mouths opened and our tongues danced and teased together, exploring each other.\n\nI had my arms wrapped around Linda, running my fingers down her silky smooth back. My hands wandered down to her gorgeous Lycra clad bum, squeezing and caressing her backside, pulling her a little closer to me. \n\nLinda groaned with pleasure as I did this. She then did the same, squeezing my bum and pulling me close to her. I was now very erect and we were rubbing together as our passions increased, groaning and moaning with the pleasure we were feeling.\n\nWe were kissing deeply and passionately, still standing in the living room. Hands were starting to wander further as we kissed. I was feeling Linda's bum, running my hands up and down her back. She was doing the same to me as we pulled apart slightly. \n\nWe stopped kissing as Linda looked into my eyes. She ran her hand down my t-shirt, onto my shorts and my erection, rubbing and gently caressing me through my shorts. I groaned as she did this, still looking into her eyes.\n\n\"Dan ..........I think it's time ......... to move into the bedroom.\" Linda breathed.\n\n\"Ok.\" I moaned, before kissing her again briefly.\n\nLinda let go of my erection and took my hand, leading me to her bedroom. I eagerly followed, my brain not really comprehending what was really happening.\n\nOnce in her bedroom, Linda took hold of my t-shirt and lifted it over my head, tossing it on the floor. I pulled her close again and kissed her, feeling her against my bare chest. Linda was feeling my back with her hands. I was now kissing her neck as she moaned in my ear \"Ohhh Dan you feel so strong, so fit.\"\n\n\"You feel amazing Linda.\" I groaned, as I started to nibble and taste her earlobes.\n\nLinda stopped kissing and moved us across onto the bed. We continued to kiss and caress each other. I slid my hand down Linda's chest and onto her beautiful breasts. Her nipples were hard and poking into the swimsuit material. I kissed down her chest and licked and sucked her nipples through the swimsuit. Linda threw her head back as I did this, groaning in lust.\n\n\"Dan.....Dan. Take my swimsuit down. I want to feel you against me.\"\n\nI followed Linda's instructions, reaching up and pulling one shoulder strap of her swimsuit down, and then the other. She had rolled around onto her back and the front of her swimsuit was now folded down, exposing her breasts to me for the first time. \n\nMy hands immediately found her breasts, gently feeling and caressing them. Her nipples were a dark, dusky pink, all puckered and erect with excitement. I quickly lowered my mouth down and tasted her flesh, licking, flicking and sucking on her very aroused nipples.\n\n\"Oh Dan. That mmmmuuunnnhg feels soooo good. Dan ohhhh\" Linda groaned as I continued to pay attention to her beautiful breasts. Looking up I could see Linda lying back, eyes closed, enjoying what I was doing. \n\nI felt her hand reach down and stroke my throbbing erection through my shorts. I grunted as she did this. \"Linda, that's uuunnngh awesome, ooooohhhh.\"\n\nWe looked into each other's eyes. I moved up and kissed Linda again. She broke off the kiss saying \"I want you now Dan. I want you inside me.\" Her voice dripping with lust.\n\nI sat up and took my shorts and underwear off. Linda sat up as well and slid out of the rest of her swimsuit. I looked and could see Linda naked for the first time. She was more beautiful than I had imagined.\n\nI was reaching into the pocket of my shorts for my wallet, when Linda saw me and said \"What are you doing?\"\n\n\"I'm getting a condom out of my wallet.\" I panted back, rushing to get it out.\n\nLinda giggled. \"You don't need that. I can't have any more kids and I haven't been with anyone since my ex.\"\n\n\"I've only been with one girl.\" I replied.\n\nLinda laughed some more. \"You are so sweet. Come here Dan.\"\n\nI leaned down over her and we kissed again, this time our bare bodies were touching all over. I was on my side, on Linda's right, kissing her deeply. Our tongues continued their dance, my erection throbbing and dripping copious quantities of pre cum onto Linda's thin thatch of pubic hair. \n\nSuddenly Linda grabbed my shoulders and moved herself around so that she was under me. I adjusted myself so that my erection was now bumping into her womanhood, her very slippery, very hot womanhood.\n\nLinda reached down between us and grabbed hold of my erection. She moved me, rubbing the head of my erection through the folds of her womanhood, making us both very lubricated and even more aroused. I was watching as Linda did this, seeing her fingers wrapped around me, rubbing me against her. She positioned me at the entrance to heaven.\n\nI looked up and saw Linda looking straight into my eyes. We both smiled, knowing what was about to happen.\n\n\"Now.\" Was all that Linda said.\n\nI pushed into her, slowly but firmly, holding my gaze into her eyes. We were both groaning with pleasure as her resistance around my member reduced as I slowly entered her. My erection throbbed even more within her slippery confines.\n\nI leant down and kissed Linda deeply as I fully entered into her. She moaned loudly as I filled her completely. Her hands gripped me tightly, holding me even closer to her.\n\nI started slowly moving in and out and Linda began moving her hips underneath me, getting into a rhythm. I was thrusting deeply into Linda as she clung to me, arms wrapped tightly around me. Her groans and moans had increased.\n\n\"Yes, yes, yes. Dan that is it. Ooohhh, munnngh.\" She groaned into my ear.\n\nLust and passion had taken control of me. I couldn't speak at all. I was so totally absorbed by the pleasure I was feeling. I kept thrusting in time with Linda's motions under me.\n\nI kissed Linda again deeply and then looked into her eyes. Her beautiful blue green eyes looked right into mine. It was magic between us.\n\nOur rhythmic motions increased in pace as we both headed towards climax. I was moving in time with Linda and was rapidly feeling the inevitable rumblings down in my groin.\n\n\"Yes Dan, I'm cumming! Yes, yes.\" Linda squealed in my ear, as she bucked her hips wildly, trying to draw more of me into her.\n\nThat set me off as I started to climax. \"Ohhh Linda, yes. I'm cumming! Muuumnnngh\"\n\nRope after rope flowed out of me as I came deep inside Linda. Linda was thrusting her hips with her own orgasmic rhythms. I had not had an orgasm like this ever. I was seeing stars. I felt like I would never stop cumming. \n\nOnce I regained my senses I looked again into Linda's eyes and kissed her gently. She broke out into an amazing smile. Her hair was slightly matted and her face was flushed and sweaty. I had never seen a more beautiful woman.\n\nI involuntarily slipped out from Linda, and climbed off her. Her legs were still shaking from the strength of her orgasm. I lay on my back and regained my breath. Looking across I found Linda was looking back at me smiling. I was smiling too.\n\n\"Wow!\" was all I could say.\n\n\"Wow yourself.\" Linda replied with a grin.\n\nI composed myself a little more, and tried to tell Linda how I was feeling.\n\n\"That was so amazing Linda. Better than any of my fantasies. You are so amazing Linda, so beautiful.\" I babbled, not really making sense, as I had so much I wanted to express, but couldn't work out how to.\n\nLinda leant across and kissed me gently to stop me talking. Leaning back to lie on her pillow she said \"Dan that was truly beautiful.\" She paused, looking deep in thought. \"I hadn't done this in such a long time. It was even better than I remembered.\" \n\nShe smiled at me and I was smiling back, not really knowing what to say, but feeling very happy with myself and being together with Linda.\n\nShe leant down and lifted up the sheet on the bed and we crawled under it, lying next to each other. While lying there, I looked at Linda and she was looking at me. \n\nMy thoughts began to flow, belying my new found confidence that got me into this situation in the first place. There was one question that was bubbling under the surface that I wanted to ask, but wasn't sure I wanted to know the answer to.\n\nLinda, always perceptive, could see I was in thought and asked \"What's troubling you Dan?\"\n\n\"Ummm, well........ Linda ummm I was just wondering ....... Why?\"\n\n\"Why?\"\n\n\"Ummm Yes. Why?......... Why me? Why this?\" as I moved my hands around to indicate us.\n\nLinda just smiled, almost sensing my insecurity in the situation.\n\n\"Dan, I have known for quite a while that you've had a crush on me.\"\n\n\"Really?\" I replied, shocked that she knew.\n\n\"Oh Yes.......... I could tell you had a crush on me as you changed the way you acted around me. You were always super friendly when you saw me, not that you weren't friendly before, but you were extra friendly. Whenever you came over here you ALWAYS talked to me. I even caught you a few times having a bit of a sneaky peak at me too.\"\n\nI was a bit embarrassed by this and I think I was starting to blush. Linda reached across and again, lovingly, touched my face.\n\n\"Don't be embarrassed Dan. It was so sweet. It actually made me feel very good that I could still draw the attentions of a handsome young man. Particularly after everything I went through with my divorce.\" she said. \n\nI smiled and said \"I'm glad you liked my crush on you.\" I paused for a second before asking \"But I still can't work out how we ....... Ended up here?\"\n\nLinda leaned across and kissed me again.\n\n\"Dan, I didn't intend for us to do this. When you told me your feelings today I was very surprised. Not surprised you had feelings for me, but surprised you told me.\" She paused for a second before continuing \n\n\"I kept asking you questions as a way to buy myself some time. I was conflicted. I was very excited that you had fallen for me, and this brought up a lot desires that I hadn't felt so strongly in years. However I didn't think that I could act on those desires as it seemed .......... Not right. I had known you since you were a boy.\"\n\nLinda's face, which was right next to mine on the pillow, showed the conflict she was feeling at the time.\n\n\"But you're not a boy now. You are a gorgeous man. When I went to give you a hug that first time and you 'got hard' from hugging me ........... Well I just knew that I wanted you as much as you wanted me.\"\n\nWe moved a little closer together and kissed, a little longer this time, tongues teasing a little as we kissed.\n\n\"Then you ran away. I called out, but you kept going. I realised that you were embarrassed about what happened, but I didn't want to let you go. I am a single woman, and you are a very attractive young man. There was nothing 'wrong' in what I was feeling. So I called you, hoping you went home. I was so glad when you picked up the phone. I had to get you to come back as I wanted to be with you so much.\n\n\"When you said you were coming over, I had to think how I was going to ........ How I could show you that this was something we both wanted. I then remembered you first fell for me when you saw me in my swimsuit. So I quickly raced in here and put it on under my clothes. I was just finishing putting my clothes on when you knocked on the door. The rest is well...... history.\"\n\nLinda was smiling and looked so happy. I was happy too. However after all the nice things Linda was saying and how gorgeous she looked, part of me was starting to become enthused again by the situation and was getting harder and more prominent. I had started to arch my hips away from Linda, so that I didn't accidently 'poke' into her.\n\nI reached up from under the sheet and pushed some hair from her face. I then let my hand gently slide down her shoulder, just touching her soft skin with my fingertips, along her side and down to her hip, resting there. She shivered slightly, getting goose bumps from my touch.\n\nLinda then did the same, gently sliding her hand down my shoulder and side. As my hips were a little further away from her, she couldn't reach them. Her finger tips slid down my stomach, before inadvertently falling down onto my erection. I flinched a little as she touched me, and Linda's hand moved away slightly, before returning and started to gently run her fingers along my shaft.\n\n\"Well, what do we have here?\" Linda said with a cheeky grin on her face.\n\nEnjoying the sensation of her light touches on me, I replied with a giggle \"I can't help it. You should know by now that's what being with you 'does' to me.\" \n\nLinda leant over and kissed me. \"I'm flattered.\" She replied back flirtily. \n\nWith this she let go of my erection and placed her hand on my hand which was still on her hip. We were looking into each other's eyes as she slid my hand down between her legs. I got the idea and continued to move my hand downwards as she returned to pleasuring me.\n\nI slid my hand lightly over her stomach and down between her legs, lightly over her mound, feeling the neatly trimmed covering of hair she had down there. Her legs opened allowing me to move further and I ran my hand down over her delicate lips where she was very warm. My finger then slipped in between her folds. Linda shook slightly as I did this. I could feel she was sopping wet under my touch, as I gently slipped my finger easily inside her.\n\nShe groaned slightly as she went to speak. \"Ooooh Dan. That's what being with you does to me.\" She said with a throaty whisper.\n\nI leaned across and we started to kiss. Her lips parted and her tongue came to greet mine. I moved my hand from between her legs up and around her pulling her close to me. As I did this Linda let go of my erection and cuddled up close to me, wrapping her arms around me. \n\nPulling apart after a few moments, Linda looked at me. \n\n\"There was something I wanted to do as soon as I felt you against me, but I didn't get to do it before. Can I do it now?\" she asked in her sweet innocent voice.\n\n\"Of course. What is it?\" I asked, having no idea what she wanted to do, but I was so aroused I would have done anything.\n\n\"This.\" Replied Linda, as she lifted the sheet off me and proceeded to kiss all the way down my stomach, while taking hold of my erection. \n\nShe kissed right down, reaching my throbbing penis. She stuck her tongue out and licked all the way up my shaft, flicking the underside of the head when she got there, then licking all the way back down it.\n\n\"Muuunnnngh.\" I groaned as she did this.\n\nWith the tip of her tongue Linda licked a big drip of pre cum from the tip of my erection. A long strand went from her tongue to the head, before breaking and landing on her chin.\n\n\"Mmmmm Dan, you taste very nice.\" She said licking her lips. \"I might have to have some more.\"\n\nWith that Linda lowered her mouth down and took the head of my penis in her mouth, sucking and stroking it. I groaned with extreme pleasure as she moved her mouth up and down the shaft, stopping from time to time to flick her tongue under the head. I had never had a blow job before and this was blowing my mind.\n\nShe continued sucking and stroking for a few minutes before I started to tense up. Linda lifted her mouth off me and said \"I don't want you to cum yet.\"\n\nAs she kissed the head of my penis again Linda looked back up at me and asked \"Would you like to taste me?\"\n\n\"Ohhh yes Linda.\"\n\nShe quickly let go of me and rolled over onto her back, her head up on the pillow next to me. I rolled over and kissed her, tongues flicking together. I started to kiss down her chest, tasting and teasing her increasingly hardened nipples.\n\nI looked up between her breasts and said \"I have never done....\" I moved my eyes downward \"This before.\"\n\nLinda just grinned \"Don't worry Dan. I will tell you what I like.\"\n\nWith that I started to kiss down her body, down her beautiful, slightly soft tummy, pausing to give her navel a good licking. Linda squealed when I did this. Going down further, I kissed across her mound. I then moved across and started to kiss and nibble on the inside of her thigh.\n\n\"Ohhh Dan, that is so good.\"\n\nMoving across I could see her womanhood all splayed open in front of me, her lips darker than I had expected. Her scent grew stronger, a slightly musky fragrance. \n\nI gently kissed across her I crawled between her legs and began by kissing up near her sex. I kissed closer to her opening and she began to guide me, with both her words and her hands on my head.\n\n\"That's it Dan, very nice. Use your tongue to open my lips, taste my juices. Yes that's good, suck on my lips, yes that's great. Come up a bit, yes that's my clit. Lick gently, up and down. Good. Mmmnnn.\" \n\nLinda was dripping copiously from my attentions, her fluids tasting a little tangy and sweet at the same time. Looking up I could see that she had her eyes closed, her face slightly contorted in the pleasures she was experiencing.\n\n\"Ohhhh Dan, yes. Right there. Muuunnnngh.\"\n\nLinda started to move her hips under my face, wriggling with my explorations. Then she lifted my face out from between her legs.\n\n\"I'm so close Dan. I want you inside me again.\"\n\nI slid up the bed and Linda moved out from under me. We kissed and she didn't appear to mind that my face was covered in her juices.\n\nLinda guided me so that I was now on my back. She then slid around to be on top of me. Her right hand held my erection against her. Her hips moved and I slipped inside her. Moving slightly, Linda rose off me and then sank down on me again, fully filling her. Lying down on me she held me close as we established a slow rhythm. \n\nAfter a while, Linda sat up on top of me, leaning back as she changed the angle I was moving inside her. I was mesmerized watching her slowly ride me, up and down, moving her hips to direct me where she wanted me. Her perfect breasts were moving in small circles in time with our motions.\n\nI started to feel the familiar feelings in my loins. I let go of Linda's hands and held her hips as I started to thrust a bit faster, pushing further into her. Linda started to moan loudly, encouraging me to keep thrusting inside.\n\nWe moved quicker together, both moving closer to orgasm. I was thrusting as deep as I could go, Linda had her back arched back as she moved faster and faster on me. She was panting loudly and I was groaning.\n\n\"Ohhhhh Dan.\" Linda cried as she sat up, her hips bucking wildly as she experienced her orgasm.\n\nThis set me off to as I started to erupt inside her. \n\n\"I'm cumming Linda.\" I almost shouted as I sprayed inside her.\n\nLinda fell forwards down on me and kissed me, trying to draw as much of me inside her. We held each other close as our orgasms flowed together.\n\nAs we came down from our orgasmic high, Linda and I were still kissing.We were both hot flushed and sweaty, but kept holding on, wanting to be close.\n\nLinda was looking into my eyes, her beautiful blue green eyes looking deep into mine. We kissed again, gently, tenderly, dare I say it lovingly. Linda was smiling her beautiful smile right to me, and I was smiling back.",
        "I began to shrink and slipped out from Linda and she climbed off me, collapsing beside me. We both lay there for a few minutes, relaxing after our exertions.\n\nTurning on my side to look at Linda, I realised that she was already looking at me. She had a really contented look on her face. I must have looked really happy too as she said \"You look really pleased with yourself Dan.\"\n\n\"I'm so amazed that this happened. You are so amazing Linda.\"\n\nLinda just smiled, looking deep in thought. She was like that for a few second before she spoke.\n\nTurning her head she looked across at the clock and said \"Dan, it half past one. You should go and have a shower. I need to get this place tidied up. School finishes shortly.\"\n\nI hopped out of the bed. Looking back, I could see Linda laying there, with the sheet lying over her stomach, her beautiful breasts splayed slightly sideways, nipples almost back to their normal size. Her short blonde hair was all messed up, and her face was still flushed from our fun together.\n\nShe smiled warmly at me as I was looking at her. I walked across to her side of the bed and gave her another kiss. \n\n\"You look so beautiful.\" I said as I broke off the kiss. Linda smiled broadly and I kissed her again, before heading to the shower.\n\nLinda came into the bathroom and left a towel for me. After drying myself off I headed back towards the bedroom. \n\nLinda passed me going to the bathroom. \"Dan, I'm just having a quick shower too. Please wait for me to come out.\"\n\n\"I will.\"\n\nIn her bedroom, the bed was all neatly made, and my clothes were all folded up waiting for me. This made me smile. I dressed and went out to the living room to wait for Linda finish her shower.\n\nShe came out of the bathroom, dressed in the same clothes as when I arrived earlier. Walking over to me, she took my hand and I stood up from the lounge in front of her. She had a more serious look on her face.\n\n\"Dan you are amazing. You have made me feel so wanted, so alive again.\" She paused for a few seconds, looking deep in thought.\n\n\"You are going to make some lucky girl very happy.\" She said as she reached out and placed her hand on the side of my face.\n\nAs she said this my heart dropped, as my smile faded away. Linda stepped closer and kissed me again, just gently.\n\n\"Dan, you and I both know that we could not keep seeing each other like this. It would be basically impossible for us to have a relationship.\"\n\nMy mind raced as she said this. I had fantasised about Linda constantly, but never envisaged a future for us together. All my fantasies ended straight after we had sex. She was right, and I knew it. Just then I felt such a mix of emotions, sadness, but also great joy and happiness.\n\nEventually my thoughts came together. \n\n\"Linda, you're right.......... But I'm so unbelievably happy at being able to share this day with you.\"\n\n\"Me too.\"\n\nWith that we kissed again, gently and cuddled up once more.\n\n\"I just wanted to thank you again Dan. You have made me feel ....... Like a woman again.\"\n\n\"Thank you Linda. Not only for bringing all my fantasies to life, but for being so wondeful and accepting my 'infatuation' for you.\"\n\n\"It felt so good to be desired again Dan.\"\n\nWe kissed just once more, and Linda squeezed my hand.\n\n\"I think it's time you should go.\" She said\n\n\"See you later.\" I replied just as I would any other time I said goodbye. \n\nI walked towards the back door, before quickly ducking into Pete's room. I grabbed a movie and when I came out I saw Linda looking strangely at me.\n\n\"I nearly forgot what I came over for.\" I said with a laugh. Linda laughed too.\n\nI stepped out of the back door and turned to see Linda standing nearby.\n\n\"Bye Linda.\"\n\n\"Bye Dan.\"\n\n************** I awoke the next day feeling amazing. I was so alive after my adventures with Linda the previous day. But I felt like I hadn't thanked her enough for being so amazing. \n\nI had to work later in the day, so I quickly rushed out to the shops and bought a card for Linda, and wanted to get her some flowers. All the flowers in the shops were too big and too flashy, as I know Linda didn't want to 'show off' what we did.\n\nI came home and saw some daisies in my mother's garden. I picked a few of these and went inside to write in the card. It took me a little time, but I felt it said what I couldn't say yesterday.\n\n'My dearest Linda,\n\nI cannot thank you enough for everything. Not just yesterday, but for everything you have done for me.\n\nBy being 'the object of my infatuation' I can now see how I want a woman to make me feel and how I want to feel for woman.\n\nYesterday was so great, not only because it brought my fantasies to life, but it was so much better than I had imagined. \n\nIt was so much better than my first time because it was with you, someone I not only desired but was emotionally attracted to.\n\nI will never forget yesterday.\n\nLove always,\n\nDan xxx'\n\nOn my way to work I called around to Linda's house. Ostensibly to return the video I had borrowed. I put the video back and then went into Linda's room and placed the card and the flowers under her pillow.\n\nI then headed to the bank where Linda worked. I wanted to get some money out, but to also let her know what I had done.\n\nIt was quiet in the bank when I got there, only a couple of customers. Looking across I could see Linda at the counter serving her customer. She saw me and smiled, but looked a little confused as well. I filled in my withdrawal slip and I went over and saw her when she had finished.\n\n\"Hi Dan, how are you today?\"\n\n\"I'm great Linda. How are you?\"\n\n\"Very good. How can I help you today?\"\n\n\"I just want to withdraw some money thanks.\" I said with a smile, as I slip the withdrawal slip across the counter to her.\n\nLinda picked the slip up and there was a second slip underneath. On this I had written 'Check under your pillow when you get home.'\n\nShe looked up at me with a confused look, but not wanting to ask any questions out loud at her work. I looked into her eyes and just nodded my head slowly and smiled as reassuring a smile as I could manage. Linda smiled and mouthed to me \"OK\" before continuing on with my transaction. She handed me my money and the message slip back, squeezing my hand a little as she did.\n\n\"Thanks Dan. See you later.\"\n\n\"Bye Linda.\"\n\nI didn't get to see her again for a few weeks, not because we avoided each other, but circumstances just didn't match. I did see Linda again a couple of weeks before I headed back to college. I went over to her house to pick up Pete for a night out with our friends.\n\nHer younger son Adam answered the door and let me in. We were talking about his school work when Linda came out and said hello. She came over and gave me a hug, something she didn't normally do, but it was not an unusual gesture.\n\n\"Dan, would you mind if I borrowed you for a minute?\"\n\n\"No problems.\" I replied and I excused myself from talking with Adam.\n\nI followed Linda into her room, and she turned and wrapped her arms around me and gave me a big cuddle. I wrapped my arms around her and held her tight.\n\nReleasing her grip on me she stood back and quietly said \"I haven't had the chance to thank you for the lovely card and flowers you left for me. They were so beautiful.\"\n\n\"It was my pleasure. I couldn't express everything I wanted to say when I was here, so I did that.\"\n\n\"It was so thoughtful.\" Linda said moving around the bed to her bedside table. \n\nShe picked up a photo frame and brought it around to show me. \"It meant so much to me that I have pressed the flowers and kept them in this frame.\"\n\nShe showed me the frame and the pressed daisies were inside.\n\n\"I wanted to keep this as a beautiful reminder of you and our wonderful time together. Thank you Dan.\"\n\n\"Thank you Linda.\" I replied and I hugged her again.\n\nJust then we heard Pete's car arriving home and we broke apart from our hug and went out to see him.\n\n**************\n\nLife went on after that. A month or so later Linda started going out with a great guy Garry, who owned the local car repair shop. They dated for a year or so before getting engaged. They married a year later, and moved into their new house, living happily together.\n\nI continued at college, having a couple of girlfriends along the way. During my third year I met Tessa, who was also in her third year. We dated and fell head over heels in love. We had been going out for 18 months when I proposed to her in Paris on our big end of college overseas trip. She accepted and we married just under a year later. We moved interstate for work and lived a wonderful life together with our 3 children. \n\nTessa and I visited my old home town as often as we could as my parents loved having us and the grandkids there. We often caught up with Linda and Garry as they were still friends with my parents. Linda and I shared an occasional knowing smile, but that was it. Our day together was never mentioned again.\n\n*********\n\nI was overseas for work, not long after my 45th birthday when I received a phone call from Pete. He called to say that Linda had passed away after a short battle with cancer. She hadn't been feeling well for a quite while, and when they investigated they found a large, very advanced tumour. It had been found only two months before Linda died.\n\nI was devastated. Pete was in tears and I was crying over the phone too. It was such a shock as I didn't even know she was sick. I spoke to Tessa and my parents and they were all deeply saddened at the news too. The worst part for me was that I hadn't seen her for 6 months, and that I hadn't got to say good bye.\n\nI returned home and my family all travelled back to my old home town to attend the funeral.\n\nI managed before the ceremony started to have a brief moment alone with Linda's coffin. I placed some flowers on her coffin. Tears filled my eyes as I tried to say what I was feeling.\n\n\"I'm so sorry I didn't get to say goodbye in person Linda. I can't thank you enough for being in my life. I still can't believe what we shared on that day together. Thank you for being the wonderful person you were. I've always loved you.\"\n\nI blew a small kiss and went back out to my family.\n\nIt was a moving ceremony and many a tear was shed. We all headed back to Garry's house for the wake. Thankfully this was a little more joyous as we all shared happier memories of better times.\n\nWe were there for a good while and people started to leave. My family all headed back to my parent's house, while I stayed with Garry, Pete and Adam to help clean up.\n\nGarry took me aside a short while later. He thanked me for helping out and for coming back for the funeral.\n\n\"It was the least I could do.\"\n\n\"Linda was very fond of you.\" Garry said \"She often talked about you and Pete growing up together, and how nice you were to her.\"\n\nI just smiled as he said this.\n\n\"She wanted me to give you something.\" He said, heading into their bedroom.\n\nGarry came out of the bedroom, holding a picture frame.\n\n\"Linda said she wanted you to have this. She said you gave her some flowers, not long after her divorce. It pleased her so much and she thought so fondly of you for it.\"\n\nRecognising the frame, tears started to flow from my eyes. It was the frame with the pressed daisies in it from our day together.\n\n\"I can't believe she kept these.\" I said.\n\n\"Yes. They meant a lot to Linda, and she wanted me to give them to you.\"\n\n\"Thank you Garry.\" Was all I could manage to say. I was overcome with emotion.\n\n*********\n\nSo there I was in my office at work. I finished the email I was sending and I looked across my desk. There next to the pictures of my beautiful wife and our wonderful kids was the old frame with the faded daisies.\n\nThe rain was falling down outside was reminding me of that wonderful day all those years ago. I went to reach for the frame and I bumped it. It fell off the desk and down onto the floor. I jumped up off my chair and went to get it. It landed with the daisies facing up at me. Thankfully it had not broken.\n\nI picked it up and sat back down in my chair. I noticed that the back of the frame was loose, so I placed it on my desk face down to tighten it all up. I picked the back up and it came out easily out of the frame.\n\nUnderneath I couldn't believe my eyes. There tucked in the back was the card I gave to Linda with the flowers. I smiled widely seeing it there.\n\nI picked the card up and opened it, reading those heartfelt words I had written to Linda all those years ago. On the other side however, I noticed new writing that wasn't there when I gave it to her.\n\n'Dearest Daniel,\n\nI hope you find this card one day. \n\nThank you for these beautiful words you wrote to me all those years ago and that wonderful day we spent together. \n\nYour love for me reawakened my soul and made me capable of loving again and wanting to be loved again. \n\nI wouldn't have been able to have the wonderful life I have had since then if it had not been for you. \n\nThank you Dan.\n\nI will take the beautiful memories of our time together with me forever.\n\nI know I will never see you again, but do know that I have always loved you.\n\nAll my love forever,\n\nLinda xxx.'\n\nThe date under the message was 3 weeks before she died.\n\nTears streamed down my face. I couldn't believe what I had found. It was so emotional to know Linda was still thinking about me, even as she was dying.\n\nI then felt a great weight lift off my shoulders as I realised something.\n\nWe did get to say our goodbyes after all. "
    ],
    "authorname": "demon160",
    "tags": [
        "older woman",
        "best friends mother",
        "younger man",
        "romance",
        "seduction"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/memories-of-linda"
}