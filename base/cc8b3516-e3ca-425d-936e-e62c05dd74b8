{
    "title": "Carnal Knowledge Ch. 11-12",
    "pages": [
        "Dear Readers,\n\nThank you so much for your kind words and support for my story. You all have been the encouragement for me to keep moving forward, even when I have gotten frustrated and discouraged. I read every comment (good and bad, haha!) and every email you send.\n\nI do apologize for making you wait so long.\n\nI wish to offer a special thank you to MasterfulJim for answering my pestering questions in the name of research. :)\n\nAll my love,\n\nEmmeline\n\n****************************\n\nChapter 11\n\nGeorge sprawled on the dirt floor of the stable's store room. He shifted against the rough wooden wall he leaned against and grimaced in pain. His body felt as though that ham-fisted son of a bitch had cracked every bone he had.\n\nThe rasp of the door lock turning seemed loud in the silence of the dark, small room. The pale face of his aunt filled the door opening.\n\n\"George,\" she called softly. \"Are you hurt badly?\"\n\nShame and bitterness at the unfairness of his wretched situation roiled in his gut. \"What do you care?\" he said with a sullen edge. \"You sure didn't do a damned thing to help me.\"\n\n\"And what could I do, pray tell?\" she returned, pushing the door open wider with a protesting squawk of hinges. \"I've brought you a blanket and some bread, you ungrateful lout.\" She stepped inside and eased the door closed once more before setting her items down at his feet.\n\nGeorge turned his face to the wall to avoid the beam of lantern light she turned in his direction. \"It's your fault I'm in this mess,\" he accused.\n\n\"It is not!\" Mrs. Biddleton snapped. \"I was watching for you to bring the little trollop inside. You weren't supposed to try to get under her skirts out in the gardens then lose hold of her. You've no one to blame but yourself.\"\n\nGeorge glared back. He couldn't believe the governess had spilled her guts to the earl after he'd warned her not to, the stupid cow. And it galled him to no end that Lord Rockdale had arranged to have him beaten and locked up, merely by her word.\n\n\"The earl's too high and mighty to even come speak to me man to man,\" George muttered. \"He might think he's got me beaten down, but I'm not going to stand for it,\" His hands balled into fists. \"And as for the girl...just wait until I get my hands on her again.\"\n\nMrs. Biddleton cast her eyes upward. \"Don't be any more of an idiot than you already are, boy. And don't mention my name to Lord Rockdale. There's no need for both of us to lose our positions.\"\n\nGeorge's narrowed gaze turned crafty. \"You'd better be getting me out of here in a hurry then, shouldn't you? Who knows what I might tell his lordship.\"\n\nHis aunt shook her head dismissively and dusted her hands off. \"Robbie and Ned are taking turns watching the stable doors. I don't think they're just going to let you just walk out, lad,\" She turned to leave.\n\n\"Wait,\" he said.\n\nShe sighed and turned back reluctantly.\n\n\"Find a way to get me out of this god-forsaken hole, or I will tell his lordship that it was your plan for me to bed his tart where he would see it.\"\n\n\"You wouldn't dare!\"\n\nGeorge slumped back against the wall once more. \"Just get me out,\" he snarled. \"Or you'll be sorry you didn't.\"\n\n***\n\nEliza shook off Rockdale's restraining hand on her shoulder. \"Is there somewhere more private we can go?\" she asked Sir Harold huskily.\n\n\"Eliza...\" Rockdale's soft growl held more than a hint of warning.\n\nSir Harold licked his lips and reached for Eliza's elbow. \"Alcove at the back.\"\n\nDimly aware of Rockdale stalking behind, Eliza allowed the older man to propel her across the ballroom. Her focus had narrowed down to a sole view of the man she had considered most of her life to be a dear friend of her father's. An icy calm settled over her but underneath the thin veneer of ice burned a vengeful fury sparked by the flames of hurt and betrayal.\n\n\"Eliza!\" Rockdale's emphatic voice cracked like a whip. \"I forbid you to\u2014\"\n\nShe cast a quick look back at the earl and raised her brows. \"Forbid me to what, my lord? Act like a strumpet? Isn't that what this evening was all about?\"\n\n\"Damn it, woman,\" he cursed. \"No.\"\n\nReaching a back corner of the ballroom partially concealed by a tied-back curtain, Sir Harold lowered himself into one of a small grouping of chairs.\n\n\"Perhaps we can have her both at once, Rockdale,\" the older man proposed, tugging Eliza down into his lap. \"I saw two men use a whore together once at a bawdyhouse, you know. Never taken a gel up the arse myself, but I wouldn't mind at all which hole I got to stick my cock into.\"\n\nA wave of nausea at the eager, hungry glint in the man's eyes threatened to overwhelm her, but Eliza forced herself to remain still and fight her revulsion. Rockdale stood nearby, glaring at the two of them as though steam might roll from his ears at any moment. His hands clenched and opened repeatedly. She half-expected him to haul her bodily away from Sir Harold\u2014whether for the older man's safety or Eliza's own, she wasn't sure. \n\n\"I used to dandle you upon my knee when you were younger,\" Sir Harold murmured while sliding his hand familiarly over her hip. \"Do you remember?\n\n\"Oh, yes,\" Eliza answered. \"I remember...my sister, also.\"\n\nHis breathing increased to a noisy rasp. \"Sweet, lovely Abigail. A darling bud right on the cusp of blooming into full womanhood.\"\n\nEliza flinched at the twitch of his cock underneath her bottom. Oh, dear God, how she longed for a blade to stab into his black, perverted heart. Never more in her life had she wished for a sharp implement by which to inflict bodily harm.\n\nAh, well, she thought darkly. One must use what means one had at hand.\n\nEliza slithered off Sir Harold's lap and knelt on the floor before him. She fixed him with a wide-eyed gaze and slowly trailed her finger over her bottom lip. \"Shall I show you what a good student I've been?\"\n\n\"Don't,\" Rockdale bit out. He stepped forward but halted when she flicked him a narrow gaze. The earl plowed a hand through his hair and glowered at her.\n\nSir Harold fumbled in his haste to open the buttons of his trousers. \"I can't tell you how long I've desired to see you properly educated in the art of\u2014\"\n\nHe broke off, gasping in alarm when Eliza roughly grabbed hold of his stubby length. \n\n\"Gently, my dear!\" he panted.\n\nTeeth bared, she used her free hand to jerk with all her might at the opening in his smallclothes.\n\nSir Harold squeaked when the thin linen noisily ripped wide. \"Good heavens! What the devil have you taught her?\"\n\nRockdale sighed and rubbed his face with one hand. \"I'm not quite sure, but I have to tell you, it's far more pleasant to watch from over here.\"\n\nAbandoning Sir Harold's quickly deflating cock, Eliza seized his hairy bollocks with both hands. She was rewarded with a high-pitched squeal of dismay from the man to whom they were attached.\n\n\"Release me, you she-wolf!\" Sir Harold gasped. \"Rockdale, control your wench!\"\n\n\"Sorry, Harry, but I rather prefer my cods where they are. I think you're on your own for this.\"\n\n\"Tell me, Sir Harold,\" Eliza asked, tightening her grip, \"have you touched my sister in an unchaste manner?\"\n\n\"No\u2014no!\" he cried, squirming in his chair. \"Not that I wouldn't like to\u2014ieeeee! No! Never! I wouldn't lay a finger on the girl!\"\n\n\"See that you don't.\" Eliza leaned forward and let all the menace she felt bubbling up inside coat her words. \"I will find a way to hurt you if you so much as go near my mother or my sister. Do you understand?\"\n\n\"Quite so!\" he grunted, his face pale and gleaming with perspiration.\n\n\"Excellent,\" she said. \"Now, I wish for you to explain to me how you could possibly send the daughter of your supposed dear friend into a position that you knew was not merely to be a governess.\"\n\n\"Please,\" Sir Harold whimpered. \"You're going to permanently damage my\u2014ieee!\"\n\n\"I am going to squeeze until they COME OFF if you do not tell me to my satisfaction!\" Eliza hissed.\n\n\"Saints preserve me,\" Cavendish wheezed, casting his eyes wildly about. \"It's his fault!\" he glared to the side at Rockdale. \"I owed the earl a favor...I knew he was drunk when he was babbling about acquiring a virgin to educate, but I thought it would be a grand lark\u2014ieee! Damn it, you bitch!\"\n\n\"I considered you like an uncle,\" she said in a low tone. \"Did you ever have a second thought about sending me into the den of the devil?\" Eliza firmed her lips to keep them from trembling. \"I trusted you!\"\n\nShe saw Rockdale twitch out of the corner of her eye, but Eliza kept her gaze centered on Cavendish.\n\nSir Harold flushed, though whether from chagrin or pain, Eliza couldn't have said.\n\n\"I thought it would be good for you!\" he cried. \"Everyone could see what a cold little fish you were. It ain't natural for a gel that looks like you to be hidden away at home!\"\n\n\"Oh,\" Eliza said thoughtfully. \"I see...you thought it would be good to ruin my life and turn me into an earl's whore?\"\n\n\"Eliza, for God's sake!\" Rockdale interjected, reaching out for her arm.\n\nHer head whipped to the side. \"Stay out of this!\"\n\n\"I supplied you with the means to support your mother and sister!\" Sir Harold returned indignantly.\n\nEliza's laugh had an ugly undertone. \"I suppose you think I should be grateful!\" She dug her fingers deeper into his saggy flesh and twisted.\n\nSir Harold's eyes rolled back in his head. \"By all that's holy, she has unmanned me.\"\n\n\"You'll live,\" Rockdale said, shaking his head. Under his breath he murmured, \"Might smart a bit tomorrow though.\"\n\n\"You're a disgusting excuse for a man, Sir Harold,\" Eliza spat, releasing the man's abused bollocks and rising shakily to her feet. Rockdale stepped immediately to her side, but she shook him off.\n\n\"Don't touch me,\" she said unsteadily.\n\n\"Don't do this.\" Rockdale's voice was soft but tense.\n\n\"I am heartily tired of being told what to do,\" Eliza told him, feeling suddenly as though she might cast up her accounts at any moment.\n\nShe turned her back on Rockdale's dark scowl and ignored Sir Harold, who was slumped over cradling his still-exposed genitals and moaning pitifully. Blinking in surprise, she realized a small crowd of guests had gathered near the pair of marble columns flanking the entrance to the alcove and were peering inside with interest.\n\nEyes narrowed, she strode in their direction, noting their wide eyes. \"Anyone wishing to go next?\" she asked, glaring around.\n\nThe partygoers scattered. All except Lord Sinclair's companion, Violet, who slowly drew near.\n\n\"Are you well, Rose?\"\n\nEliza sucked in a shuddering breath, then another. \"No, actually, I am not. Is there a ladies' retiring room nearby?\n\n\"Of course,\" Violet said. \"I'll show you, come with me.\"\n\nRockdale stepped forward. \"El\u2014Rose, wait.\"\n\nViolet drew her arm through Eliza's and smiled prettily at Rockdale. \"Can you not spare your lady a few moments to freshen up? I'll take good care of her.\"\n\n\"Bring her straight back here, Violet,\" he said, displeasure etched on his face.\n\nEliza refused to even look in Rockdale's direction as Violet guided her out of the ballroom. Her thoughts were chaotic and confused. She wanted to both slap Rockdale across his handsome face and fall into his arms weeping.\n\nReaching the quiet of a small parlor designated as a retiring room, Eliza gladly sank into one of a pair of gilt chairs positioned before a large hanging mirror. She took a deep breath, attempting to calm her frazzled nerves, and glanced over at Violet, who stood nearby watching.\n\n\"You needn't stay with me. I only require a few moments to collect myself.\" Unwelcome, angry tears welled into Eliza's eyes, and she sniffed and looked away in embarrassment.\n\n\"Hmm,\" Violet said. \"Let's get you set to rights, shall we?\"\n\nThough puzzled as to why Violet would treat her with compassion, Eliza nonetheless sat quietly as Violet straightened and repinned her listing curls.\n\n\"Would you like to rinse your hands?\" Violet asked with an arch of one delicate brow.\n\nEliza stared down at her hands, disgusted to think where they had so recently been. \"God, yes,\" she answered fervently.\n\nExpression impassive, Violet nodded and retrieved a nearby basin and pitcher.\n\nEliza thankfully poured the tepid water over her hands, wishing she could scrub her face as well.\n\n\"Thank you,\" Eliza murmured.\n\nViolet perched on the next chair, crossing her long legs. Eliza couldn't help but feel relieved that the other woman had donned a white silk robe over her revealing corset.\n\n\"So tell me, Rose, why were you doing your best to rip off Sir Harold's saggy bits?\"\n\nHands trembling slightly, Eliza crossed her arms over her chest. Goodness, she had made quite the scene, hadn't she?\n\n\"He betrayed my trust,\" Eliza said at last and pressed her lips together in a thin line.\n\n\"Rockdale didn't seem at all pleased,\" Violet mused. \"Are you his mistress?\"\n\n\"No!\" Eliza answered quickly. \"Well, not exactly.\" She sighed. \"It's rather complicated.\"\n\nViolet absently rubbed her fingers over her robe's lapel. \"You almost seem as though you don't wish to be with him.\"\n\nIgnoring the curious pinch in her chest, Eliza shook her head. \"I just want to return to my family. But...everything is such a mess.\" Bowing her head under Violet's close scrutiny, she bit her lip and resolved to reveal no more of her strange situation.\n\n\"I hope you will forgive my candor, but I find this rather intriguing. I'd wager most females here would give their eyeteeth to be with the Earl of Rockdale,\" Violet said with a tinkling laugh.\n\n\"Well, I wouldn't.\" Eliza said with some asperity. \"I had thought, despite his faults, that he had grown to truly have some genuine feeling for me, but after tonight, I realize how foolish I am. He desires my body but cares naught for my thoughts or wishes. I am but a toy for him to use and discard.\" A bitter note crept into her voice.\n\n\"Men rarely look beyond a fair face and form.\" Violet shrugged. \"But I think you have it a bit wrong, dear Rose. Lord Rockdale certainly seems infatuated with you to me.\" She dimpled and glanced sideways at Eliza. \"I'd lock you up in the linen closet if I thought he'd ever look with such longing at me.\"\n\n\"Infatuated with my body, perhaps.\" Eliza scowled. \"What of respect, affection...and love?\"\n\nA shadow crossed Violet's face. \"Love will not keep food in your belly or clothes on your back,\" she shot back, her tone vehement.\n\nEliza raised her brows in surprise, taken aback by the other woman's strong reaction. \n\nViolet heaved a small sigh. \"But...perhaps you are right. I've thrown away my opportunity for love because I was afraid of losing all my beautiful possessions.\" Her smile sad, she held up her hands to the light, and the jeweled rings on her fingers sparkled and gleamed.\n\nThe look she directed at Eliza held a hint of challenge. \"Mayhap you will be lucky enough to win both Rockdale's heart and his wealth.\"\n\nEliza frowned. Contrary to what Violet suggested, she had no intention of trying to win Rockdale's affection or riches. Her only goal was to secure her family's future so that she could return home. Nothing else mattered.\n\nViolet cocked her head and eyed Eliza intently. \"Do you love him?\"\n\nFlustered, Eliza stood and smoothed her skirt. \"I'd be a fool to love him.\"\n\nShe may have been forced to sacrifice her virtue and dignity, but she would indeed be addled in the brain to make the mistake of falling in love with a man like Rockdale.\n\n\"A finely figured man can make a fool out of the smartest of women,\" Violet said with a slight smirk.\n\n\"A smart woman looks beyond a handsome face and into the character of a man,\" Eliza countered.\n\nViolet's smile turned decidedly naughty. \"Ahh...but Rose, surely you've been...acquainted with Rockdale long enough to realize that a gentleman's character, no matter how esteemed, isn't what satisfies our most secret yearnings.\" Her voice dropped to a husky, almost seductive whisper.\n\nEliza felt her face erupt into flaming color. Immediately, images from her earlier carnal encounter with Rockdale leapt into her mind. She swallowed hard at the answering twinge of remembrance between her legs.\n\n\"I see you understand...it's written all over your face.\" Violet nodded, wrapping her arms around her middle. \"Desires of the flesh can be powerful. And sometimes... it is the men with darkened hearts whose touch a woman craves the most.\" She shivered slightly, her gaze drifting away before snapping back to Eliza. \"I'm sure Rockdale has reveled in corrupting your innocence.\"\n\nEliza shifted uncomfortably. The other woman's words were unsettling, and she was unsure how to reply. She stiffened as Violet stood and stepped close.\n\nShe trailed a finger down Eliza's cheek. \"The face of an angel and the body of a temptress. No wonder Rockdale has been ensnared.\" She lowered her hand and gestured toward the door. \"But I'm afraid you've forever ruined your angelic appearance, at least for me, after attempting to reshape Sir Harold's codsack with your bare hands.\"\n\n\"He's lucky I didn't shove the hairy lumps down his throat.\"\n\nThe brunette burst into giggles. \"I like you, Rose. You have spirit.\" She sobered, her gaze turning speculative. \"It's almost time for my performance in the ballroom. Why don't you come along and assist me?\"\n\n\"Oh, no, I don't think I could do that.\" Eliza shook her head automatically, though a bit intrigued by the suggestion.\n\n\"It will be fun!\" Violet insisted, walking over to a nearby wooden cabinet holding a decanter and glasses. \"And Rockdale will be livid,\" she added with a sly glance while pouring a goodly amount of blood-red wine into each glass.\n\nEliza accepted the proffered glass of wine from Violet. Suddenly, striking back at Rockdale seemed like a marvelous idea. She downed the wine in one long drink and stared at Violet evenly. \"What would I have to do?\"\n\n***\n\nRockdale paced impatiently. What the devil could be keeping them so long? He glanced to the side and saw Sinclair approaching.\n\n\"Have you seen Violet and Rose recently?\" Rockdale asked tersely.\n\n\"No, I have not. Say, Rockdale, I thought your lady was the shy, timid type, but what I've seen of her tonight has revised my earlier impression.\" Sinclair chuckled.\n\nRockdale scrubbed a hand across his mouth. This evening was not at all turning out how he had envisioned. All he wanted now was to find Eliza and take her back to the townhouse. He had thought to get a lurid thrill from showing Eliza's shapely body off at the masque and shocking her with the debauchery of the wild gathering, but now, everything had been ruined.\n\nSeeing Eliza confront Sir Harold had been unexpectedly gut-wrenching for him. The depths of her anger and betrayal went deeper than he had realized. Rockdale stared blindly across the ballroom. She had shocked him a bit with the furious words she had spoken to Sir Harold. Did Eliza truly believe Verity Hall to be the \"den of the devil?\"\n\nHe felt almost...piqued that she would still harbor such ill feelings toward him. What they had shared earlier tonight had been something unique, something special. He had been so certain she was developing some tender feelings toward him. There was no way she could have given her body to him so freely tonight if she did not, he vowed.\n\nAnd however maddening she could be at times, Rockdale craved more of what he had experienced with Eliza tonight. Their connection had been so much more than any lover he had bedded before. He wanted more of it. Much more.\n\nIt was time to be done with the pretense of her being the governess, he decided. As his mistress he could take her around town freely, show her all the things she would have never experienced in the country. He could give her the luxuries she deserved while having her in his bed every night if he so wished. And if she were under his protection, he could ensure she would be his permanently safe from scoundrels like Sir Harold and George, his footman.",
        "Blankly, he realized Sinclair was still talking to him.\n\n\"What would you say if I arranged a night for the four of us?\" the other man said. \"We could plan for tomorrow evening if you're interested. I know you have a fondness for Violet, and I find myself quite keen to sample your Rose.\"\n\nRockdale forced himself to breath slow and steady. You brought her here, he reminded himself. You should have known other men would desire her.\n\nHe forced his lips to turn up in a facsimile of a smile. \"Not quite ready to share her.\" He clapped Sinclair on the back. \"I'm sure you understand.\"\n\n\"Quite,\" Sinclair murmured, the corners of his mouth turning down. \"You must tell me, what transpired earlier between Rose and Sir Harold Cavendish? The poor fellow was entirely out of sorts afterwards. I had to send a serving boy to help him to a bed chamber. Besides, I thought you didn't want to share Rose,\" he added with a touch of grievance.\n\n\"Ahh,\" Rockdale said, rubbing his jaw. Christ, how was he to explain this one? \"I really can't say. It's a private matter between Rose and Harry.\"\n\n\"I see,\" Sinclair replied in a tone that implied he clearly didn't. \"Well, come along with me, Rockdale. I have something to show you in my study.\"\n\nThe ache in his temples expanded to a vicious throb. \"Can it wait? I'm waiting for Rose to return.\"\n\nSinclair's stare turned mockingly incredulous. \"I don't doubt Rose's little cunt tastes sweet as nectar and grips your cock like a velvet glove, but surely you are not so enamored of that hole that you cannot move from this spot for a few minutes?\"\n\nRockdale gritted his teeth as Sinclair regarded him with raised brows. Swallowing his ire with no small effort, Rockdale jerked his chin. \"Lead on, then.\" You arrogant bastard, he added silently.\n\nThey left the crowded ballroom where the antics were becoming decidedly more risqu\u00e9. He cursed himself for allowing Sinclair to shame him into leaving even for a short time.\n\nSinclair ushered him into his study with a flourish. \"I simply had to show you the new paintings I had commissioned.\"\n\nRockdale glanced up at the walls with irritation then narrowly stopped himself from gaping in surprise. A series of three paintings hung on the wooden paneling behind Sinclair's enormous desk, but it was quickly apparent that these were no ordinary portraits. \n\nForgetting his ire for a moment, Rockdale drew closer to the first of the series. Within the gilded gold frame Violet knelt, completely nude, in a perfect submissive pose amid a tumble of white silk and lush pink flowers. Her image embodied everything sweet and innocent\u2014all things Rockdale knew full well she wasn't. \"The artist is superb,\" he murmured.\n\n\"Yes,\" Sinclair answered, sounding pleased with himself. \"Really marvelous, isn't it, how he captured her expressions and coloring.\"\n\nUnable to stop, Rockdale continued to the second frame. In this painting, Violet reclined, again completely unclothed, on an expanse of bluish-purple satin and plush pillows. Her legs were spread wide showing the smooth, plump folds of her quim. One of her hands delved into her parted nether lips. With her eyes closed and mouth slightly open as though crying out, Violet appeared to have been captured right at the moment of climax.\n\nRockdale quickly glanced back at Sinclair. \"These must have cost you a fortune.\"\n\nThe other man's smile was smug. \"It was going to, yes.\"\n\n\"Was?\" Rockdale queried, moving to the next picture.\n\n\"The idiot painter fell in love with her. Or perhaps it was only lust,\" Sinclair snorted. \"I had Violet begin pleasuring him with her talented mouth in between sittings. The man had a stiff pole in his pants every time I saw him, what was I to do but take pity on him?\"\n\nRockdale frowned, and Sinclair shrugged before continuing. \"When the paintings were finished the poor bastard begged me to let him paint five more! He was bereft upon leaving and refused to take any money, the twit. Can you believe such a thing?\"\n\nRockdale shook his head, wondering if Violet had willingly offered her services to the painter. This business with Eliza had affected his brain, he thought ruefully. Before he wouldn't have wondered or cared.\n\nHis breath caught in his throat when he turned back to gaze fully at the last picture. Violet's slender limbs were outstretched between two tall wooden posts of an ornately carved bedstead. She faced outward with a black silk blindfold covering her eyes.\n\nEvery nuance of her lithe body was visible, as were slight red welts marking her milky skin, concentrated over her high, uptilted breasts and the bare mound of her sex. Rockdale noted with a jarring twinge that Violet's smooth mons bore the most intensely crimson marks.\n\n\"Shit,\" Rockdale muttered. How often must Violet have had to pose this way for the artist to capture such a startling image?\n\n\"She loves being restrained,\" Sinclair said softly. \"I enjoy whipping that little body with my crop quite frequently. Afterward I tie her face down over the footboard and beat her rump with my paddle until it's a most becoming shade of crimson. Then I thoroughly fuck her cunt and tight arse. The sensation of that glowing-hot derri\u00e8re against your groin is...\" He hummed appreciatively. \"Well, let me just say the experience shouldn't be missed.\"\n\nRockdale swallowed hard, his mind conjuring the image of Eliza bound naked over the bed frame while he whipped her. She would like it, a voice whispered in his brain. Once you got past her initial resistance, she would let you...you know she would.\n\nWith an effort, Rockdale tore his eyes away from the elicit painting and found Sinclair watching him with an avid interest.\n\n\"Enticing thought, isn't it,\" Sinclair said. \"Why don't you bring Rose back tomorrow night? I won't touch her if you don't want me to. Violet and I will watch you whip her for the first time.\" He smiled. \"I already have everything you need at hand.\"\n\nRockdale took a step backward, then another. He cleared his throat. \"I should find Rose now. I wouldn't want her to get into any trouble.\"\n\nSinclair stared at him for a moment then finally nodded. \"I believe it's almost time for Violet's entertainment. We wouldn't want to miss that.\"\n\nA trickle of unease slithered down Rockdale's spine, but he followed Sinclair to rejoin the crush of the ballroom. Once back inside, Rockdale quickly scanned the crowd for Eliza's white gown and fair curls.\n\nThey joined a group of guests milling around the center of the large room. The crowd cleared a path for Sinclair to move to the center, and Rockdale followed. His stomach clenched when he finally spied Eliza.\n\nRockdale received a jolt of surprise to see the two women reclining side by side upon golden chaises with a muscular male slave kneeling between them. The attractive young male fed the two women glistening purple grapes from one hand while holding a silver goblet in the other.\n\nSinclair's laugh grated across Rockdale's ears.\n\n\"It appears the lovely Rose has consented to be a part of our show,\" Sinclair remarked.\n\nNot if he had anything to do with it, Rockdale thought grimly, stepping forward. Sinclair's hand shot out and gripped his elbow hard.\n\n\"Now, Rockdale,\" Sinclair said mildly. \"I can't allow you to interrupt.\"\n\n\"Release me,\" the earl growled. \"You have no right\u2014\"\n\n\"What have you done!\" Violet's voice rang out, capturing everyone's attention.\n\nThe male slave ducked his head in apparent shame, lowering the goblet.\n\nViolet pointed to a small dark spot on her flowing white robe. \"You've spilled the wine,\" she said darkly.\n\n\"Mistresses, forgive me,\" the servant begged, shuffling backward on his knees, eyes darting between Violet and Eliza.\n\n\"I told you not to spill a drop!\" Violet rose from the chaise and glared down at the servant.\n\n\"It won't happen again, I promise!\" the slave insisted, grasping at the hem of Violet's long robe.\n\nShe snatched it disdainfully away. \"Rose, we will have to discipline him. I see no other course of action.\"\n\nRockdale's jaw fell open as Eliza swept regally to her feet and picked up a square polished piece of wood with a handle.\n\n\"It's for your own good,\" Eliza said sternly, smacking the wooden paddle against her palm with a loud thwack.\n\nRockdale blinked and blinked again, torn between the urge to snatch Eliza up and out of the scene and sheer shocked curiosity at what she might actually do. He knew the exact moment Eliza realized he was watching. Her eyes narrowed and fixed on him, visible even behind her mask, and she thwacked the paddle against her palm once more.\n\nSinclair gave a choked snort of laughter. \"I'd watch yourself around that female if I were you, Rockdale.\"\n\nThe male slave gingerly arranged himself on one of the chaises on his hands and knees at Violet's direction.\n\nViolet made a show of slowly untying his loin cloth, leaving the servant entirely nude except for the golden bands he wore. She ran her hand over his muscled arse, squeezing and fondling the taut, masculine curves.\n\nRockdale couldn't help but notice the male's impressively sized cock was already partially erect and curving up toward his stomach. The slave moaned low in his throat as Violet's hand slid around to grasp his shaft.\n\nWith a nod from Violet, Eliza stepped forward. Rockdale could see her waver for a brief moment before lifting the paddle.\n\nThat little minx! Rockdale quite simply could not wrap his mind around what he was seeing. Just what in heaven's name had possessed Eliza to take part in such a spectacle was beyond his understanding. He winced in sympathy when the paddle swung through the air and connected with the slave's arse with a loud smack. The man's eyes widened as though he had received rather more force than he'd anticipated.\n\n\"Keep going, Rose!\" Violet urged.\n\nEliza's paddle smacked his bottom once more, and the man groaned through gritted teeth. Violet's hand continued to work his stiffening penis.\n\nRockdale's own cock twitched as he watched, helplessly captivated by the sight of Eliza wielding the paddle like a vengeful, seductive angel.\n\nTwo more smacks of Eliza's paddle and Violet stepped back, releasing the slave's cock. The man's golden skin gleamed with a damp sheen of fine perspiration. She stripped out of the robe, her slim beauty and breasts shown to perfection in the revealing silvery corset.\n\nViolet daintily straddled the chaise in front of the slave's head and reclined against the cushioned back. Her eyes drifted partially closed as her hand wound into the man's short cropped hair.\n\n\"Pleasure me,\" she purred seductively and arched her hips up off the chaise.\n\nWithout delay, the slave eagerly pressed his face into Violet's spread labia, licking and lapping. His cock visibly bobbed with the smacks from Eliza's paddle while she continued to administer punishment to the male's reddening arse.\n\n\"I think that's enough of the paddle, Rose,\" Violet said finally, licking her lips as the male servant continued to use his tongue and fingers between her parted legs. She grabbed a handful of his hair and pulled. \"Get down in the floor, slave.\"\n\nThe man quickly rose up from the chaise. \"Yes, mistress,\" he said, walking a few steps past the chaises to kneel down on a rug that had been spread in the center of the ballroom. He bowed his head. \"I await your desire.\"\n\n\"Lie on your back,\" Violet ordered.\n\nOnce the man had complied, his cock jutting up as though begging for attention, Violet stepped closer and placed one high-heeled slipper on each side of his hips. She tossed her head, flipping her long dark curls over one bare shoulder. The onlookers shifted closer when Violet gracefully lowered herself over his groin.\n\n\"You will not spill your seed until I give you leave to do so. Do you understand?\" Violet's beautiful features were severe gazing down at the male beneath her.\n\nThe man's face looked almost pained as Violet grasped his manhood firmly, positioning it at the entrance to her body. \"Yes, mistress, anything you command, I will obey.\"\n\nViolet sank down on his cock with a purr of satisfaction, and Rockdale's eyes were drawn back to Eliza, who looked up as though feeling his gaze upon her. He hoped rather fervently her part in this silly pretense was over.\n\n\"Rose, join me!\" Violet demanded. \"He will pleasure you with his mouth while I use his cock.\"\n\nEliza stepped forward and something finally snapped inside Rockdale. \"Oh, hell, no,\" he grated out and strode forward, jerking free of Sinclair's restraining arm.\n\nRockdale grabbed Eliza's shoulder, spinning her around. \"I think you forget who you belong to, Rose.\"\n\n\"You're ruining my show!\" Violet hissed.\n\nRockdale ignored Violet, and his temper threatened to spill out of his normal icy control. \"I don't know what you think you're trying to accomplish with this foolish display, but I will not allow another man to touch my woman.\"\n\nEliza tugged at her arm. \"Don't be an arse. I wasn't going to let him touch me!\"\n\nSinclair's deep chuckle snared both their attention.\n\n\"I think your companion is sorely lacking in respect and training, Rockdale,\" he drawled, moving to Violet's side where she was still astride the male servant.\n\nSinclair thrust his hand roughly into Violet's dark curls and released his erect cock from his breeches. Taking his shaft in hand, he slowly drew it over Violet's cheeks. A mulish look crossed her face only briefly before she parted her lips and accepted his penis into her mouth.\n\nHe directed a smug look toward Rockdale. \"Discipline, my dear fellow. Works wonders.\" Violet's eyes were fixed on Sinclair's face as he thrust deeper and more forcefully into her throat.\n\n\"I am not a child to be disciplined,\" Eliza protested.\n\n\"Be quiet,\" Rockdale growled to Eliza. To Sinclair, he said, \"I believe it is time for us to depart.\"\n\n\"Pity,\" Sinclair said pulling his cock from Violet's abused mouth. \"Things are just beginning to get entertaining here.\" He moved behind Violet and knelt down between the male slave's splayed legs, drawing a small bottle from inside his jacket.\n\nWith a hand on Violet's back, Sinclair urged her to bend at the waist. He uncorked the bottle and dribbled what looked to be clear oil over his cock. He spread the cheeks of Violet's bottom and slid his oiled staff up and down her exposed crevice.\n\nSinclair continued speaking as though his actions were not completely shocking\u2014even by his usual standards. \"We're having a lovely cold supper at midnight with champagne. Surely you can stay until then.\" \n\nHe might have been conversing with them in a normal social setting. Rockdale caught a glimpse of Eliza's astonished expression as Sinclair worked his cock into Violet's fundament.\n\nViolet's face contorted into a puzzling combination of pleasure and pain while the two men thrust their cocks into her body.\n\n\"Bring Rose tomorrow,\" Sinclair urged, shoving harder against Violet's bottom, eliciting a moan from her.\n\n\"Ahh,\" Rockdale said, his eyes following the debauchery with reluctant fascination. He cleared his throat. \"Thank you for your...hospitality, Sinclair. We must bid you goodnight.\"\n\nRockdale bowed and keeping a firm hold of Eliza's arm, he towed her toward the exit.\n\n*******************************\n\nChapter 12\n\nJohn Willoughby shot upright in his bed, sweating and wild-eyed. Panting, he shoved the tumbled covers away from his damp skin and rose from the bed. He went to stand by the window, pushing the wooden shutters open with more force than necessary.\n\nLeaning out, he sucked in lungfuls of cool night air until his thundering heart began to slow and the remnants of his disturbing dream started to fade. God, but it had seemed so real! His cock throbbed as though to remind him of the lustful nature of his slumbering thoughts.\n\nNormally, he prided himself on holding tight control over his baser male urges. John Willoughby might not have a title or very much coin to call his own, but he was a gentleman, by God.\n\nWomen were to be admired for their gracious, kind ways and quick, creative minds, not solely to be ogled and degraded by brutish, crude men. A true gentleman would never\u2014even in his dreams!\u2014have such salacious thoughts.\n\nBut what thoughts they had been... His cock jerked enthusiastically in memory.\n\nHe had gone to bed feeling strangely irritable and restless, plagued by images of Miss Lockhart's angelic features, and to his shame, a vivid memory of how she had looked in her evening gown\u2014the one that had so snuggly outlined her lovely bosom. His hands fisted. Even a monk would have been stirred by the sight of those creamy mounds rising up from that tight bodice like an offering to a starving man's eyes.\n\nJohn had finally fallen asleep only to conjure the young woman in his dreams. He had once again been searching for her in the estate gardens. Only when he found her in his dream, she had been dripping wet as though caught out in a pouring rain storm. It had seemed only logical to get her out of that sodden dress. His hands trembled remembering how his dream self had unlaced and peeled away her clothing until it all lay puddled at her feet.\n\nHe had filled his hands with those glorious breasts, and she had smiled at him so sweetly. Inviting him to further intimacies he so desperately wanted to take. He leaned down to lick and suckle at the ruched pink of her nipples.\n\n\"Oh, John,\" she had whispered. \"I want you to touch me everywhere.\"\n\nAnd he wanted, rather madly, that exact thing. \n\nJohn endeavored to be gentle, slowly maneuvering her to lie back upon the grass. Her wide blue eyes held trepidation but also trust when he eased her legs apart and settled between. \"It's alright, darling,\" he assured her in a whisper. \"I won't hurt you. I will never hurt you.\"\n\nHis own clothing had magically disappeared, and he covered her nakedness with his own, his staff impatiently seeking entrance to her body. He could still hear her gasp as he pushed that first tight inch into her soft center.\n\nOnly to rudely awaken. Alone. Spike-hard. He could have wept in frustration.\n\n\"Damn it,\" he muttered.\n\nJohn shoved an agitated hand over his bare stomach, aching with the need to grasp his swollen cock and stroke. Up and down...repeatedly...until he came in a shuddering climax.\n\nBut no. He wouldn't, he told himself stubbornly. Miss Lockhart deserved better than to be the object of his vulgar impulses.\n\nDeliberately he turned his mind away from the lovely governess. The whole house had been abuzz this evening with Lord Rockdale's instructions for poor George the footman. What exactly had been the reason behind the odd actions, John had been unable to discover.\n\nHe couldn't shake the idea that it had something to do with Miss Lockhart.\n\nIt had been very strange indeed the way Lord Rockdale had rushed her out of the house that morning...and personally accompanied her on the journey as well. That did not seem at all right, in his opinion. Something about the entire trip aroused his suspicions.\n\nHe gritted his teeth while pondering what his father had told him. Could it really be true? He knew his father would never fabricate the tale, and Willoughby the senior swore that he had heard the words straight from Miss Lockhart's own lips.\n\nRuined by the earl himself, his father had said gravely.\n\nAs Lord Rockdale's secretary, he was well aware the man was no saint. Far from it. But to take a girl in his employ against her will... This was greatly disturbing.\n\nAnd then the way she had brusquely fled from him in the gardens when he had only been attempting to offer assistance. It perplexed him. She had brushed by him almost like the devil had been on her heels.\n\nWhat a tangled mess. He rubbed his aching temples.\n\nPerhaps Eliza and Rockdale were together even now...in bed. Perhaps she welcomed his attentions. Perhaps... He pushed away from the window with a swallowed curse.",
        "No, he wouldn't believe it of her, he decided firmly. He had seen with his own eyes how genuine and ladylike she appeared. None of it was her fault if Rockdale had truly forced himself upon her like some great rutting beast.\n\nThe very idea of her losing her maidenhead in such a fashion sickened him and roused his protective, chivalrous instincts.\n\nHe needed to devise a way to wrest the young lady from the earl's clutches. John snorted a bit at his own dramatic turn of phrase but resolved himself just the same. It wasn't right for Miss Lockhart to be treated in such a depraved manner, even if that gentleman was a member of the aristocracy.\n\nShe deserved better, he vowed, climbing back into his bed. He closed his eyes and studiously tried to avoid thinking of his still erect cock and what it would feel like to truly thrust it between Miss Lockhart's soft intimate folds.\n\n\"If I have to dream it again, just don't make me wake up this time,\" he mumbled to his pillow.\n\n***\n\nIt seemed Rockdale could not remove her from Sinclair's manor house fast enough.\n\nEliza practically had to trot to keep up with him, and he refused to release her arm even after they climbed into the carriage. Feeling sick to her stomach, she longed to crawl into the corner and try to forget the entire evening.\n\nShe could feel the tense set of his body and half-expected him to erupt in a fury at any moment. Dear Lord. Had she really done all those scandalous acts tonight? First, cavorting with Rockdale in complete abandon in front of who knew how many voyeuristic observers, then her savage interlude with Sir Harold\u2014this she didn't regret\u2014followed by her half-witted participation in Violet's silly farce. \n\nPerhaps another woman really had taken over her body tonight.\n\nRockdale seemed lost in his own thoughts, and the trip back to the townhouse was strangely quiet. Eliza opened her mouth several times, but somehow could not produce any suitable words to say.\n\nShe studied his profile, the haughty curve of cheek, the hard jaw and sensual mouth. The mere memory of those masculine lips tracing her skin sent a fine tremor of sensation up her neck, raising the fine hairs along her nape. \n\nAt times she felt captured like a hapless insect, snared in his deceptively delicate web spun of newfound sensual sensations and physical pleasures. The more she struggled to extract herself, the more intertwined and bound she became. It was all too simple to see herself helplessly addicted to the dark seduction of his smile that seemed to beckon to her with all the countless secrets of men and women that her body clamored to know.\n\nEliza tried in vain to focus instead on the memory of her mother's dear face. Nothing but heartache and regret could come from allowing herself to give into these unseemly desires. She needed\u2014no\u2014she must remember the reasons she had come to be in the earl's employ. Her family was relying on her for support, and their livelihood must be her only motivation.\n\nShe swallowed hard and ignored the troubling twinge of fear that like Pandora, once she had unsealed the container and loosed the myriad of evils it held, nothing could be undone.\n\nBut desires could be ignored. They could be repressed. She shivered, grateful that Rockdale harbored no real feelings for her. It would be easier to harden her resolve to escape him as soon as possible. And escape him she would, anything else was unthinkable.\n\nThe mood between them remained uncertain as Rockdale ushered her upstairs to the bedchamber where she had rested and gotten dressed earlier. It had only been a matter of hours, but yet it felt to Eliza as though days had gone by.\n\nIll at ease, Eliza slipped out of her cloak and hung it on a peg near the door, unsure of how to proceed. The earl had yet to speak a single word to her. She watched him out of the corner of her eye with wariness when he sat heavily on the bed. His head bowed down, she saw his shoulders begin to inexplicably quiver.\n\nGood heavens. Eliza's eyes widened in alarm. Surely, he could not be...\n\nOne hand covered his mouth while his big body continued to shake. A few strangled noises escaped.\n\nEliza took one step closer then another. \"William?\" she asked hesitantly, reaching out to touch him.\n\nHe finally lowered his hand, took one look at her and guffawed out loud.\n\nShock froze her abruptly in place. \"Are you... Are you laughing? \"\n\nHe collapsed into whoops of laughter, clutching at his stomach.\n\n\"I keep picturing the look of horror on Harry's face when you viciously ripped open his smallclothes...and...and then when you paddled the hell out of that poor chap's bum...\" he dissolved again into mirth, snorting helplessly.\n\n\"I believe you have finally taken complete leave of your senses.\" She pursed her lips and spun away.\n\nBloody idiotic man, she fumed.\n\nHe grabbed her skirt and reeled her back. \"Oh, no, you don't,\" he said, still chuckling.\n\nThe earl tumbled her down into his lap and wiped at his eyes. \"I can't remember when I've laughed so hard.\"\n\nShe eyed him with baleful reproach. \"I'm overjoyed I could amuse you.\"\n\n***\n\nWilliam grinned unrepentantly. \"Eliza, my dove, you never cease to surprise me that is for certain.\" He felt her stiffen in surprise when he wrapped an arm tightly around her.\n\nHe cupped her cheek, marveling how one small female could be both so fair and so brave. At times, she stole his breath clear away. He found himself wondering briefly how it would feel to be included with all that fierce loyalty she displayed for her family.\n\n\"Eliza...\" he murmured, stroking the soft, pale skin of her lovely face. It hovered right on his tongue to demand that she become his mistress and stay with him. How could he ever let her go? \n\nBut uncertainty and even a bit of distrust lurked in the depths of her deep blue eyes as she gazed back at him. He felt almost certain she would refuse his offer of carte blanche, and part of him feared he may even beg should she say no.\n\nA small voice in the back of his mind shouted at him to take her however he would, find a way to force her to stay. Yours,  it insisted.  She is yours!\n\n\"Why are you looking at me that way?\" \n\nHer question jerked him from his internal debate. He shifted\u2014one of his legs was tingling and beginning to fall asleep\u2014but he was loath to release her.\n\n\"Truthfully, I am feeling rather odd,\" he admitted.\n\nShe frowned, her expression puzzled. \"Is something wrong? Are you unwell?\" \n\n\"No, not unwell.\" William paused, opened his mouth then closed it again. \"To be honest, I feel strangely...happy,\" he said and snapped his mouth shut again, feeling ridiculous for spouting something so inane.\n\nBut her eyes unexpectedly softened at his blurted words, and something warm and unfamiliar bloomed to life in his chest. Perhaps he was  unwell in the head.\n\n\"You say it like you've never been happy before.\"\n\n\"I'm not sure that I have,\" he replied slowly.\n\nSilence stretched between them for a moment or two, not quite awkward while they continued to stare at one another. The thudding of his heart seemed abnormally loud in the quiet.\n\n\"That seems a little sad,\" she said at last.\n\n\"Yes,\" he agreed somberly. \"I suppose it is.\"\n\nThey regarded one another for another moment, and he saw something shift in her expression. \n\n\"You're an odd man, William Grayson,\" she murmured.\n\n\"And not a good one, either, I'm afraid.\" He stared at her broodingly. \"Do you hate me for what I've done to you?\"\n\nShe pondered that a moment then sighed. \"I should... I want to.\"\n\n\"But you don't.\" One corner of his mouth quirked up. He leaned close. \"It's my irrepressible charm, I suppose.\"\n\n\"It would be easier if I did hate you.\" She raised one hand and gently touched his jaw.\n\nHe fought the urge to turn into her slight caress and tumble her into the bed. A savage need to cover her body with his own had settled into his blood, into his bones, into the very essence of his body. But he held himself still and waited, almost daring not to breathe when her fingertips trailed across his lips.\n\nHer face held an expression he couldn't decipher, and he struggled not to groan while she traced the shapes of his cheeks and eyes. The first touch of her lips to his own felt tentative and light as though rose petals had brushed across his mouth.\n\nHe shivered and fisted his hands in the gossamer folds of her dress. Eliza's kiss deepened, and the first slide of her tongue along his bottom lip sent an almost painful rush of blood to his stiffening cock. Christ.  An urgent desire to claim her warred with his delight in having her touch him of her own free will.\n\nBeads of fine sweat gathered on his forehead when she rested her hands on his shoulders and pushed her tongue into his open mouth. Desperately, he lapped at her sweetness, dueling and twining his tongue with hers, kissing her back with all the unfamiliar, unsaid feelings he held inside.\n\nDon't stop. Don't stop. Don't stop. The litany repeated in his head, barely kept from being spoken aloud.\n\nShe finally lifted her head, and his cock pulsed eagerly when she licked her lips, appearing to savor his taste. His willpower frayed, and he flopped backward onto the bed.\n\n\"Mistress,\" he purred. \"I am at your mercy.\"\n\nHer lips twitched. \"Is that so?\"\n\n\"Yes, and I'm actually rather relieved you had no pocket to smuggle out that wooden paddle,\" he said, grinning impishly.\n\nShe burst into husky laughter, and the strange, warm feeling blossomed to life in his chest once more.\n\nEliza eased off his lap, and he quickly shucked his jacket and shirt and repositioned himself on the bed, with his head lying on the pillow. He gazed up at her and slowly raised his arms to grasp the large wooden headboard, unsure what her response would be but desperate to have her hands on his body once more. \n\nShe rose from the bed, and disappointment surged through him. But it turned to heady elation when she removed her gown and jewelry and turned back to him in all her glorious naked glory.\n\n\"If anyone ever needed punishment, it would be you,\" she informed him dryly.\n\nHe smirked at her and gripped the headboard tighter, watching her eyes follow the play of his muscles.\n\n\"Show me the error of my wicked ways, mistress,\" he coaxed, his gaze hungrily traveling her curves while she climbed back onto the bed and inched closer.\n\n\"Good heavens. That could take weeks, months, possibly years.\"\n\n\"Cheeky baggage.\" William groaned when her hand brushed his groin; the rigid length of his cock strained against the confines of his trousers. His eyes drifted closed for a moment at the tentative stroke of her palm over the sensitive head of his staff. \n\nNear panting with need, he opened his eyes and focused on her face. \"I'd be your willing sexual slave any time you desire,\" he murmured, nearly weeping with relief when she undid the buttons of his trousers to release his cock.\n\nHer expression was half amused and half disbelieving. \"And you'd kneel down for me, I suppose?\"\n\n\"Darling, I'd kneel down for you whenever you wish as long as your sweet cunt was there to shove my face into and lick. Come put your little arse over my face, and I'll demonstrate for you.\"\n\nShe froze for a fraction of a second. \"You're rather commanding for someone who's supposed to be my willing slave.\"\n\n\"Just offering suggestions, mistress.\"\n\nHis hips arched off the bed when she leaned over and blew her warm breath over his bare groin. The sweet torture was almost more than he could stand. She glided her soft lips over his overheated flesh in slight nibbles that built to lazy flicks of her tongue.\n\nHe groaned at the first feel of her open mouth lightly suckling at the head of his cock. It was far too much and not nearly enough at the same time. Almost of its own volition his arm released the headboard to push her head down onto his cock.\n\nEliza immediately lifted her head. \"Keep your hands over your head.\"\n\nHe narrowed his eyes. \"You're a cruel mistress.\"\n\n\"Don't make me get my hairbrush,\" she said silkily. \"It's not a paddle, but I think I can achieve similar results.\"\n\nHis eyes widened in surprise, and he snorted with laughter that shook the whole bed frame. \"I'm a bit frightened actually.\"\n\nThen her lovely pink mouth enveloped his cock once more and none of it mattered. She hummed her pleasure over him, taking him deeper, and his eyes rolled back as he struggled to not erupt too soon. Her hand wrapped around his base, aiding her ministrations, and he gritted his teeth, sure his grip on the wooden frame would cause it splinter any moment.\n\nHis hips thrust ineffectually upward when she backed off and swirled her tongue under the swollen head of his cock.\n\n\"Jesus, Eliza,\" he choked. \n\nShe smiled and pressed small kisses along his shaft before abandoning his aching groin to pull his trousers the rest of the way off.\n\nHe was momentarily arrested by the sight of her crawling over his body, straddling his hips so that his cock nestled between her legs. Her heat and her wetness slid tantalizingly along his stiff length.\n\n\"Let me touch you.\" His breath turned ragged when her breasts pressed against his chest, and she leaned in to lick along his neck.\n\n\"No,\" she whispered in his ear, biting down hard on his lobe unexpectedly.\n\nHe flinched, and his cock jumped. Damn it all! She had him lurching and quaking like a virgin schoolboy. Her tongue discovered the shape of his ear, and he shuddered.\n\n\"I can feel you throbbing between my legs,\" she said, her voice low and breathy.\n\n\"Let me inside you,\" he urged hoarsely, feeling he might go mad with need of her and the sweet clasp of her quim that hovered so tantalizingly close.\n\nShe moved her hips so that he slid against and through her slick, velvety folds, rocking against him. He felt her breath quicken, heard her soft moans as she rubbed herself on his cock.\n\nHis whole body burned with a fevered desire. Her hair, now partially loose from its pins, cascaded down over him, twining and twisting sinuously around his chest and arms like the sweetest of bindings. A high-pitched mew of female arousal slid from her lips into his ear, and quite suddenly his control snapped like a taut string stretched too tightly.\n\nIn an instant, he had her pinned beneath him, their positions reversed in the space of her indrawn breath of surprise. He shoved her thighs wider to accommodate his weight, smiling with grim satisfaction when she gasped and squirmed against the push of his cock breeching her quim.\n\n\"I thought you were at my mercy!\" she protested, arching her back when his hands settled possessively over her breasts.\n\nHe shoved the entire length of his cock inside her with one relentless thrust, and she squealed.\n\n\"Playtime is over,\" he growled, his gravelly voice almost unrecognizable to his own ears. \"Now you're bloody well going to get fucked.\"\n\nThoughts of skill and finesse fled, and his entire world narrowed down to the feel of her naked skin and soft curves, the muscles of her tight cunt gripping his cock, the overwhelming need to shove as much of himself inside her as humanly possible.\n\nSo tight. \n\nSo hot.\n\nLittle moans and sighs bubbled from her lips, enflaming him even more. He hooked his hands behind her knees and pushed them toward her head, penetrating her in long, deep strokes. Her inner passage bathed his cock in a heavenly molten embrace.\n\nFucking her once or twice should have been enough to rid him of this weakening need to have her. It should have been enough! His hands slid upward to fist in her hair, holding her in place for the assault of his open mouth. He devoured her parted lips with all of the confusion and pent-up emotion coursing through him.\n\nShe kissed him back with equal fiery abandon, her arms wrapped tight around him. He could feel the sting of her nails scoring his skin, and dimly, in a corner of his mind still managing to function rationally, he was amazed that she could find any gratification in his frenzied invasion of her body.\n\nLittle wonder he craved her with an incessant urgency. \n\nHe pushed up to kneel back on his haunches between her splayed legs. Sliding his hands under the cheeks of her arse, he lifted her hips, spreading her even wider, riveted to the sight of his cock plunging inside her.\n\n\"You're not so good either, are you, Eliza?\"\n\n***\n\nHis demanded question startled her out of the sexual haze that held her in thrall.\n\n\"You love this,\" he continued, sweat dripping off his brow. He brushed his thumb over her sensitive pearl, causing her to gasp and arch up off the bed. \"You like my cock filling you up so tight, fucking you.\"\n\nShe did. Oh God, how she did love it. Her hips bucked in his grasp when his thumb leisurely circled her most sensitive spot.\n\n\"Say it.\" His voice was rough and dark.\n\nHe had pulled back and was barely penetrating her now. She whimpered, needing more contact.\n\n\"Please...William...please, I need,\" she panted.\n\n\"Say it, Eliza.\"\n\nDamn him! She wanted to sob with frustration. \"Yes! Yes, I love your cock fucking me. God help me, but I love it. Now, give me more, damn you!\"\n\nHe obliged her with alacrity, his body covering hers once more, hips hammering into her softness with a fierce, unrelenting rhythm. Sweat and heat fused their bodies into one. Words of need and desire and praise babbled from his lips and hers.\n\nShe sobbed and writhed beneath him as her body convulsed in explosive orgasm. He shuddered atop her, the rasp of his hot breath loud in her ear when he pumped his own release inside her soon after.\n\nThe limp weight covering her was considerable, and her arms and legs were still wrapped around his body, oddly reluctant to release him. She could feel the galloping of his heart and his breaths ruffling her hair near her ear.\n\nWilliam finally rolled to one side with a grunt, keeping her flush against him, her leg thrown over his hip. His hands continued to roam her body, and she wondered groggily if they would ever be sated of this powerful desire of the flesh.\n\nHe leaned in and slowly, tenderly covered her mouth with his own, kissing her as though she was the most precious thing on the earth. Gently and reverently. There was a slight tremor in his hand when he smoothed a tangled mass of curls away from her face.\n\nHer heart clenched, and her eyes burned with a prickling of tears. She had no defense against this man who no longer seemed so much like a peer of the realm, but more like her lover, William. A big muscular male with rumpled dark hair and soft eyes, whose body was so entwined with hers, she wasn't sure where she started and he began. His cock, though softened somewhat, remained inside her.\n\nHis hand found hers and linked their fingers.\n\nShe drew a shuddering breath. \"William,\" she began, unsure of what she even intended to say. Fatigue weighted her eyelids. She struggled with the tumbled thoughts crossing her mind. She needed to wash. Her hairpins were scattered in the bed\u2014she could feel one jabbing her in the arm. It felt strange to lie on top of the bed coverings, surely they were soiling them. It was chilly in the room, but William's body seemed to hold a furnace of warmth.\n\n\"Stop thinking,\" he whispered. \"Just lie with me.\"\n\nJust lie with me.\n\nJust love me, her mind wanted to plead.\n\nNo, not love, never love.\n\n\"Can't,\" she murmured, burrowing her head into the pillow of his chest.\n\n\"You can.\" His rumbled answer was the last thing she heard before sleep claimed her."
    ],
    "authorname": "Emmeline",
    "tags": [
        "blackmail",
        "noncon",
        "forced",
        "england",
        "romance"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/carnal-knowledge-ch-11-12"
}