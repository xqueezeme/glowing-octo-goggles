{
    "title": "When Jessica and Yazmin Stayed Over",
    "pages": [
        "Based on a true story but with all names and places changed and the story shamelessly exaggerated to the point of fantasy. All characters featured are over 18 for all of the events described.\n\nThe story begins with Jessica.\n\nI first met Jessica when I worked in Manchester in the UK on a scientific research project. I was a postgraduate at the time, just finishing my thesis. I felt the need to escape to the countryside for a week and volunteered to help out on a field work exercise based in a farm house in an isolated village in The North Pennines, a range of mountains and hills to the east of Manchester. Jessica had been drafted in as a member of the support team which meant that she organised the food and kept the base clean and tidy so that the science team could focus on the sampling and analysis. She was nineteen, a natural blond with ice blue eyes and a stunning body. Her looks and personality attracted me straight away but I had no idea at the time what a close friend she would eventually become. And the journey of sexual discovery we would share together.\n\nThe summer of that year was warm and, at least for Manchester, relatively dry. I was struggling through the last phase of my postgraduate studies at the university and I had previously worked on a couple of these summer fieldwork projects over the years of my degree so it was familiar territory for me. I was asked to manage the data by the team leader and help keep the undergraduates in shape. I knew some of the undergrads already from the university labs that I ran for the biology department and I had built up a good rapport with them so pretty much we were all there to get the task done but have a good time as well. \n\nI will always remember the moment Jessica arrived. I was in the kitchen by the back door of the large farm house when she knocked. I opened it to a blond vision of loveliness with a back pack, hair wild and wet from recent rain and breasts shouting out from a damp white T-shirt. \"Hi I'm Jessica Nicholson,\" she said. \"I'm here to do the cooking and cleaning.\" \n\nFor me it was lust at first sight. She was simply delicious but I didn't betray even a hint of the attraction I felt for her other than the typical warm greeting that was appropriate for a new team member. I invited her in and gave her a quick tour of the building and ran through the way the project would work. Half way through I realised my thoughtlessness at not inviting her to change into dry clothes and I apologised profusely. \"I'm so sorry Jessica. You're wet from the rain. Why don't you go and change and I'll make you a cup of coffee before showing you the kitchen and store.\" \n\n\"Don't worry,\" she said. \"I live in Manchester. The rain is my constant companion.\"\n\nBy about 6pm the whole team had arrived and as the food supplies had only just been piled up in the kitchen, we voted to go out to a local pub for food rather than wait for it to be cooked. Jessica seemed relieved by this as she'd not been here long and the pile of food boxes in the kitchen needed some serious sorting. \"I'll stay and get this organised,\" Jessica said. I was never one for treating the support staff differently from the science team so I offered an alternative suggestion. \n\n\"Why don't we put our orders in for food with the others then spend twenty minutes unpacking. With me helping it won't take long. It's only a five-minute walk to the pub so by the time the food arrives, we'll be there.\" \n\nShe smiled and said politely, \"OK Steve. That's very kind of you to invite me.\"\n\nIt was the start of one of the most memorable relationships of my life - but not in the conventional sense. This was to be something quite rare and unexpected.\n\nThat first evening was fun from the first moment. As we unpacked it quickly became obvious that not only was Jessica a stunning and sexy young woman, she was wickedly smart and amusing. I joked about the number of tins of beans that our administrator had felt necessary for us to have for a week in the country and Jessica spent the next ten minutes making me laugh with stories of how she would find multiple ways of making the beans interesting to eat through various outlandish and imagined recipes. It finished with \"Oh yeah, on Friday though I'll be cooking my signature dish - fish surprise.\" \n\n\"What's the surprise?\" I said dutifully. \n\n\"It's just beans.\" \n\nAll the banter we had was alongside fast paced unpacking of goods from the many boxes and we made good time. \"OK,\" I said as our twenty minutes was up. \"Time to go.\" \n\nAs we walked the short distance to the pub I tried to find out a little more about her. I had detected a strong Manchester accent so I guessed she was local. Support teams of the past tended to be made up of students looking to earn a bit of extra cash so they could be from anywhere but I sensed Jessica wasn't a student. \"OK Jessica - I've guessed you are from Manchester. I'm thinking you need the extra cash rather than you are hoping to learn more about the biodiversity of peat bogs,\" I said. \"So what's the story? Tell me everything.\" \n\nJessica smiled, her cheeky grin protesting at my assumptions but her body language betraying that I was more or less correct. \"You guessed I grew up around here from my accent, I suppose? I was born in Wales but you are right, I've always lived in Manchester. Not really been anywhere else much. Bog biodiversity is like going to Florida for me. It's my dream holiday,\" she laughed. \"I've taken a week off my shitty job to do something a bit different and technically it's my holiday allowance so here I am. On holiday.\"\n\n\"You work in Manchester?\" I asked. \n\n\"I'm a waitress in restaurant but I'm not going to recommend it. I've seen the kitchen!\" she replied, \"but I need the money so I put up with it.\" I detected a sadness in Jessica and frustration with her situation but she was young and sometimes you've got to put up with tedious stuff for a while before opportunities open up. \"So what's your shitty job?\" she enquired, lightening the mood a little. \n\n\"I haven't got one at the moment but I've got an interview next week in Oxford,\" I replied, not really wanting to explain the nerdy nature of the job in biotechnology. \n\n\"So is that flipping burgers in Oxford?\" she said, emphasising the \"Oxford\" in an upper class accent. \n\n\"It, it's sort of a lab job, working with fungi and bacteria and utilizing them...\" I stuttered but she soon shot back.\n\n\"Oh, working with fungi in Oxford. How terribly fascinating!\" and laughed. \n\nSo the topic for most of our banter was now defined. She would be the down to earth, working class girl from the unforgiving inner city and I was the \"posh\" boy with the prospects and the education. But of course, every conversation from now on was a joy. We made fun of each other but the warmth and affection grew because in between the banter she was so interested in university life and I guess the way I saw the world and I was equally fascinated by her story of growing up in Moss Side, one of the toughest neighbourhoods in Manchester. \n\nThe field work turned out to be pretty good. The weather was surprisingly sunny for The North West and in the evenings there was a great atmosphere and a real mix of people, most of whom being very outgoing and lively. Jessica enthralled me. She was so different to university girls I tended to meet. She spoke her mind so freely, so openly and honestly with none of the reserve and self-consciousness of people I met at the university who seemed to temper their every word with judgements about how it would be received, whether it was appropriate, how clever and cool it made them look. I always found time to chat to Jessica several times during each day, helping with the washing up and sitting out on the back steps after dark while Jessica indulged her occasional passion for a cigarette.\n\nI found myself drawn to Jessica more and more as the week passed and I started to sense that she really liked me too. I did find that that Jessica was a little guarded about her own personal life. I would ask her about friends and family and whilst she would talk freely and share some amusing anecdote about the eccentricities of people she was close to, she seemed to steer away from anything too personal. If she mentioned boyfriends, they were always \"when she was younger\" rather than recently. It puzzled me but I didn't ask about it. I had the notion that maybe she had a long term boyfriend and that she may have thought admitting it would dampen the way our friendship was developing. Maybe I thought too much about it!\n\nWe were staying in an old three story farm house building that had been converted by the university to a field centre but it was undergoing refurbishment and there were not really any bedrooms; so we had sleeping mats and because different people stayed up later on different nights, then maybe went to bed earlier the next night, the people who slept in each room varied each night. On the last night of the project, I needed an early night so I headed right up to the top floor as I knew this was the least likely place for anyone else to sleep. The constant socialising each evening had worn me out and I needed a little down time. I checked the news on my phone, lined up my air mattress and laid out my sleeping bag, looking forward to a decent rest. I clicked on \"Indy folk 4\" - something mellow to ease me into sleep.\n\nSuddenly, Jessica walked through the door, an armful of sleeping bag, sleeping mat and dressed in a T shirt and yoga pants. \"Shit, you had the same idea as me!\" she stated, feigning annoyance. \n\n\"I can move out if you really need to be 'Manchester Queen of the Top Floor' all by yourself, if you want,\" I said but with a grin to reassure her that this was just our usual banter. \n\n\"No,\" she said. \"We can share as long as you don't go calling your butler to come up and give you your glass of milk at midnight.\" We both laughed and she set her mat and sleeping bag down fairly close to mine. \"What are you listening to?\" she enquired, seeing the playlist on my phone. \n\n\"Have a look,\" I said passing the phone over to her and offering an ear bud. She popped it in but then scanned through all my playlists. \n\n\"What's S1?\" she said after a moment, noting the first of three playlists that shared a similar notation; S1, S2 and S3 to be exact. I guess they stood out because they were the only playlists with coded titles rather than words. \n\n\"They are just playlists I didn't quite get round to naming,\" I lied. In reality they were my \"S for Seduction\" playlists. Carefully selected to be the sexiest tracks to make love to but of course not playlists that I was crass enough to label with their true meaning. \n\nJessica studied S1 for a moment and pressed play, handing me back the phone with a cheery \"I like music to go to sleep,\" and within five minutes Jessica was in her sleeping bag next to me, sharing my S1 music and commenting on each song. After 3 or 4 songs she took out the ear bud and said \"Steve, I'm really sorry but I'm freezing\". She let her words hang in the air and I felt the need to respond. \n\n\"Do you want me to zip both our sleeping bags together so you can cuddle up for some warmth?\" I said tentatively. \n\n\"I don't know whether that's appropriate?\" she said shyly, \"but I am really cold\". I didn't know quite what to say but I reflected on the last few days and tried to reassure her. \n\n\"Jessica, we seem to have got on really well over the last week and I've talked you more openly and honestly than I think I've done with anyone for a long time. Plus, if I was going to make a move on you, I would have done it by now! I'd like to feel that you can trust me to warm you up without doing anything inappropriate.\" \n\n\"Yeah, OK Steve, no need for the frigging speech!\" she said with a smile, \"I guess I do trust you,\" and she slipped her sleeping bag off and handed it to me while she hugged her knees to keep warm. I quickly unzipped the sleeping bags to fashion a sort of double bed, pulling the top \"sheet\" back and gesturing with my hand to invite her to lie down. I tiny frown formed just for a moment on her face but she lay down and as I joined her she put the music bud back in her ear. She lay down facing away from me and I spooned behind her to give her benefit of my body warmth. Despite the strong desire I felt for the lovely person sharing my sleeping bag, at this point I fully intended to be the perfect gentleman and whilst it might be hard to believe, I only had the most innocent intentions as I let my body warm hers. \n\nSharing the ear buds as we were, after another the few songs Usher's \"Love in this club\" began. \"Ha ha,\" Jessica said as it started, \"this is the song that was playing at The School Dance when I had my first kiss with a boy. He had a tongue like an anaconda!\" She made a few sleeping bag dance moves, laughing and then turned towards me and added \"I prefer being kissed really softly and gently.\" Her eyes locked with mine and she leaned across to me. \"Like this,\" she whispered. Her face moved to mine, very close our lips almost touching. I stayed completely still as she placed the lightest butterfly kiss on my lower lip. Her lips were exquisite. So smooth and soft and she kissed me with increasing passion, over my face and neck. \n\nWhat does \"S\" really stand for in this play list?\" she asked as \"Promiscuous\" by Nelly Furtado started playing. I didn't answer but smiled and began kissing her the same way she had first kissed me. Gentle tiny kisses on her lips and face. My hand moved to her face and my fingers drew back her hair so I could kiss her neck and ear. She moaned, \"That's nice\" and her hands went to my face pulling my lips back to hers and for the first time I felt her tongue moving into my mouth. A more urgent and deep kiss. This beautiful girl was really turning me on now - the strange mix of shyness and confidence, the very obvious passion that her lips betrayed and the soft feel of her skin made me desperate to explore every inch of her perfect body.\n\nKissing her neck again, I slid my hand down from her hair and caressed her shoulder before moving my hand to her breast. As I felt the hardness of her nipple, Jessica's whole body tensed and her shoulder jerked to push my hand away. I stopped, looking up at her face. \"Sorry,\" she breathed, \"you can touch me.\" Her hand went to mine and guided it back to her breast but as my fingers touched her nipple again through the thin fabric of her T-shirt her face turned away slightly as if to avoid looking at me and I thought I saw the glint of moisture in her eyes. \n\nI couldn't quite work out what was going on but there was no way I was going to risk making this lovely, intriguing girl upset. I didn't touch her breast again. Instead, I stroked her hair, gently kissing her cheeks and forehead, running my fingers down her arms and feeling the soft skin beneath my fingertips. Her lips soon sought mine out again and she kissed me again with renewed passion, her lips parting just enough for her tongue to dart out and push between my lips. I was very aroused but I pressed my erection into the air mattress and returned Jessica's kiss more urgently, our tongues probing and caressing each other's mouths. \n\nAgain she took my hand and guided it to her breast. I felt the hardness of her nipple but rested my hand lightly on her, waiting for her hand over mine to signal her desire. She was tentative and stilled her movements as if waiting to see what I would do. My body was screaming for me to touch her but I sensed Jessica's conflict and resisted, instead moving my hand away from her breast and stroking her hair while I kissed her face. \"Kissing you is lovely,\" I said rather clumsily. \"And just kissing is fine,\" I added. \n\nThere was a pause then Jessica whispered, \"I'd like to do more but I get panicky. I know it's stupid. I'm stupid.\" \n\n\"Not at all,\" I countered. \"What makes you panic?\" I asked as gently as I could. \n\n\"It's complicated,\" she said. \"I...I can't really talk about it very easily. There's a friend in Manchester I've started talking to about it. She really good at helping me work out some issues but she's also trying to kiss me at the same time so it's...complicated.\" Jessica laughed at her repetition of the word and explained that this person had sexual feelings towards her but she was also a really good friend and they could laugh about the situation and somehow manage a close friendship. \n\nWe talked and kissed a little more and I realised I felt such a gentle affection for this girl I almost wanted to freeze the moment in time. She tried once again to encourage me to explore her body more intimately, this time taking my hand with both of hers and pressing it firmly to her breast. She whispered softly in my ear, \"Go on - touch me. If you want to.\"\n\n\"I do want to, very much,\" I replied. \"Would you like it if I kissed you some more and then held your hand while you went to sleep?\" My body was screaming out, \"Make love to this girl - touch her - taste her,\" but what I said reflected my sense that Jessica was uncomfortable with the sexual intimacy that she was apparently asking me for. It was a strange situation and I didn't want to say something crass like, \"I don't think you really know what you want,\" so I opted for relishing her kisses and I moved my lips towards hers. An inch away. I waited. \n\nShe said nothing but kissed me some more. Deep lustful, sexy kisses, her hands pulling at the back of my head, fingers grasping my hair and pulling me hard against her. We didn't speak again but kissed for a long time and finally I took her hand and said, \"Goodnight\". She didn't reply again but gave me a tiny soft kiss on my lower lip and turned on her side, burying her head in the softness of the pillow. She held onto my hand.\n\nWe parted the next day, making sure to swap contact details and both promised to stay in touch. I've promised that a lot of times and of course it doesn't always mean it happens but I really thought that we would see each other again. I left Manchester within days of getting back and started my new job in Oxford. It was pretty good. New and interesting with, of course, a proper income for a change. I was busy. Getting a flat, getting to know the area, finishing my thesis, trying to impress at work but every time I got on a bus or went to get some lunch or had any time alone, my thoughts turned to Jessica and I got my phone out.\n\nOver the next few weeks we texted regularly. All sorts of stuff but mainly the usual banter about our apparent cross cultural friendship. Then Jessica sent a short text which was atypical. \"Actually - I miss you.\" It had followed a few hours after quite a long text ranting about how the job she was doing was bringing her down, the Manchester rain was unremitting and in her words, \"If my sleazy boss eyes up my ass one more time, I'm going to freak!\"\n\nIt was the, \"Actually - I miss you.\" that changed everything. I had just read that the new science park at Sandford-on-Thames was expanding and new jobs were being advertised. \n\nOn impulse I texted, \"I don't miss you but The Oxford Science Park does. They are looking to employ. Come and stay and go to The Open Day - you'll appear clever in a white lab coat just as long as you don't speak.\" To my surprise, Jessica asked about the Open Day and if I really meant that she could come and stay. I replied, \"Of course\" and added, \"but don't steal the towels,\" and we fixed a date that matched The Open Day for The Science Park, running into a weekend where I pondered on how I might entertain my guest. In Oxford there was lots to do.\n\nAnd so, a couple of weeks later, Jessica arrived at Oxford Train Station and well, stayed. \n\nI showed her the city sights, went along to The Open Day with her and towards the end of the weekend she made the decision to apply for one of the jobs. I thought she had a good chance but nevertheless I took some time to help her write an application form and coached on what to expect from the interview. Each evening, I so wanted to invite Jessica into my bed but I resisted and set up a camping mattress in a box room next door. I slept in there and I gave up my bed for Jessica. Neither of us brought up the night we spent kissing on the field trip although I felt that it was always close to the surface of our thoughts. Jessica was warm and excitable for the whole time she stayed and even affectionate, often touching my arm or hand; once touching my hair to remove a leaf. I found every slight contact electrifying. ",
        "We were both delighted when she got the job. There were a lot of applicants and plenty were interviewed but she got it. \"I can't believe it,\" was all Jessica could say, over and over. \"I've got to text Yazmin and let her know!\" \n\nI had learned a little more about her friend Yazmin over the last few days and knew they were very close. She had spoken of Yazmin on the field trip as someone she talked to about her difficulties with intimacy and it was clear that Yazmin was both a good listener but also lusted after Jessica in quite an open way. I wondered if Jessica was also a lesbian and slowly coming to terms with it, having had quite a traditional family background. \n\nI wondered about a lot of things but it was time to celebrate so we headed out for dinner and drinks; and it was on this evening after quite a few drinks that I said she could stay with me for a few weeks until she found her own place. I also offered to help her move her stuff from Manchester. We had just about walked back to my flat when these plans were made and Jessica had wrapped her arm around mine. We stopped at the door and as I fumbled for keys she said, \"Why are you so kind to me?\". \n\n\"Because you're my friend, of course. Why wouldn't I?\" And then she kissed me. Firm and passionate, her hands on my head, pulling my lips hard onto hers, her mouth devouring my lips and her tongue searching. \n\nThen she broke off and looked at me intently, her hands taking mine. \"I talked to Yaz on the phone tonight, out in that garden place earlier when I said I went to the toilet. She said I should I should be honest with you and share my thoughts and feelings, which is quite hard for me but I'm going to.\" I looked deeply into Jessica's eyes and saw an intensity and earnest need that was so different to the sparkle of our usual banter during conversation. \n\nI said, \"Go ahead, Jessica - I know we have a laugh but I can tell you want to talk to me seriously so I'm here for you now and I'm listening.\" She paused, searching my eyes for any hint of frivolity or insincerity. \n\nThen she spoke. \"I've had bad experiences with boys and it's made me fucked up about getting it on with them but you seem different and like gentle and considerate and I'm not saying I'm in love with you or anything but I want to go to bed with you and just take it slow and sort of find out all about the nice side of it. Do you see what I mean? So I want you, if you want me?\" She paused for a moment, \"Sexually.\" \n\nWhat could I say. I was mesmerised. \"I do want you. But you have to promise me that anything you do or I do is because you want it to happen, and you have to keep talking to me so I know we are respecting this rule. Then you'll know that you're in control. That's what I want more than anything. And yes, I absolutely want you. You are lovely, hot, sexy, clever, cool, funny. I'm running out of adjectives now!\" \n\n\"OK,\" she said simply. \"I guess I'm glad I talked you,\" and she beamed and kissed me once again. \n\nSo began a relationship like no other I had ever known, it's aim to fulfil Jessica's wish to explore her sexuality but tempered with her insecurities and baggage from previous encounters of which she found it difficult to speak. I was completely absorbed by the task of sharing with Jessica all the joys of intimacy and the variety and playfulness of a trusting sexual relationship but at a pace and intensity that she would find comfortable.\n\nIt began that very night as we went back to my flat and sealed the agreement with her inviting me to her bed and a long night of kissing and caressing followed by deep sleep until morning. \n\nOur relationship was like no other I've ever experienced. She was both shy and reticent at one moment then confident and assertive the next. I found every stage difficult to predict or fathom but every stage was joyful. We talked and talked and were open and honest in a way that I had never been with a person before or since. Jessica's desire to explore her own sexuality was central to the journey but she was constantly mindful of the need to please me as part of her development. \n\nEvery emotion I felt from her seemed to be pure and considered. We strived to be real and unencumbered by the shackles of \"expectations\" promoted by the invidious influence of pornography and media hype. We just told each other openly what we felt and what we thought about everything we did. This was the journey we embarked upon.\n\nAnd so, after a slow and gentle transition from kissing, Jessica and I shared increasing levels of intimacy over the next few days. We slept in the same bed every night and every night became a new journey of discovery, often preceded by an open and honest discussion. \n\nOn one night Jessica said to me, \"I want you to teach me how to give a blow job.\" I remember frowning at the turn of phrase she used and tried to explain that couples find their own expressions and ways of communicating their desire and that these intimate communications generated their own vocabulary. \n\n\"Tell me what you what you would like to do and why you'd like to do it,\" I suggested. \n\nJessica thought for perhaps a minute then replied in a considered way. \"I guess that I know your cock is really sensitive and that if I touch it, you like it. I feel that if I kiss your cock and suck your cock it's an even nicer way of showing how much I want you to feel pleasure. And by giving you that pleasure it gives me pleasure. And it seems to be a really intimate and naughty so I'm driven to it because it's a really sexy thing and that's what I want.\"\n\nI was, of course, completely seduced by Jessica's uninhibited expression of her need. We spent the evening exploring fellatio, talking constantly and occasionally slipping into role play as Jessica pressed me on what sort of things she could say to turn on a man. \"So if I say 'I'm going to suck your cock 'til you cream in my mouth', then that is the sort of thing that men like?\" was the sort of thing that Jessica might say. I was in heaven.\n\nWhat was strange though, was that for all our intimacy and the apparent genuineness of our lovemaking, I'm not sure we were ever in love. Jessica wasn't in love with me but she seemed to regard me with a fondness and affection as her \"guide\", being very keen to always ensure that I reached the ultimate goal of carnal pleasure in every experience we shared but at the same time holding back her emotional attachment in favour of some measureable step on a journey of her own volition.\n\nOver the weeks and months that followed, Jessica found her own place, loved her job, made friends and even had boyfriends but we were in touch every week at least twice and she still stayed over with me a couple of times a month. And we made love. She delighted in telling me things she'd done with her boyfriend, sometimes showing me! It was as if our relationship was locked in different time zone or dimension and she didn't consider herself being unfaithful. Her sexual confidence grew and grew and I have to say our sex was amazing. I did begin seeing another girl myself in The Spring but I couldn't give Jessica up. We were very discrete but the journey continued. Sometimes Jessica returned to Manchester to see friends and family and she always seemed to stay with her friend Yazmin. \n\nOne day during the cuddles that followed a particular raunchy evening of bondage, Jessica told me that she had given in to Yazmin's charms and slept with her. \"Wow,\" I said, \"What was it like? I mean, how did it feel being with her?\" \n\n\"It was lovely. I was surprised at how nice it felt, having her hands and mouth on me felt quite similar to a man really. I still fancy men more but actually I did really enjoy it and of course I love her anyway 'cos she's my best friend and I could feel her passion for me and how much she wanted me so that made me feel good as well.\" \n\n\"So,\" I began hesitantly, \"what did you do together?\"\n\nJessica replied, \"Not that much really, because it was all new to me. I didn't really touch her much, I just let her do stuff to me and she was really gentle and didn't try anything too, you know, like you and I do!\" Jessica had a mischievous glint in her eye and she continued. \"When I go and see her next I want to do stuff to her, to surprise her and see the look on her face when I do. So, you can help by giving me some suggestions for how to surprise and delight her in bed!\" Of course, I helped as best I could and interestingly her visits back to Manchester became a little more frequent and she even invited Yazmin down to stay with her in Oxford for the weekend, insisting that I meet her on the Saturday night after she had her all to herself on the Friday.\n\n\"What's she like then, Jess?\" I asked. \"Yazmin, I mean. What's she look like? What's her personality like? How come you like her so much?\" \n\nJessica paused for a moment looking away and I could tell she was picturing her friend and trying to find the right words. \"Well,\" she said, \"she's very pretty, petite with quite long dark brown hair and her skin is really soft and smooth.\" I smiled as I could tell that Jess was remembering intimate moments with her rather than shopping trips! She continued. \"Her breasts are smaller than mine and she's slimmer and her personality is sort of sparkly, like her eyes. Full of fun and joy and mischief. I like her sense of humour but she also very loyal and thoughtful. We can talk for hours and then just sit with each other and say nothing and that's OK.\" \n\n\"Wow,\" I said, \"she sounds lovely. I guess I'm looking forward to meeting her on Saturday.\"\n\nIt was to be a very memorable Saturday night. We went into town for drinks, had food and the usual banter I had with Jessica was doubled, even tripled through the addition of Yazmin. Yazmin was slightly older than Jessica at twenty-one and I found her captivating. Attractive as she was, her recent sexual history with the lovely Jessica set of little explosions of desire within me but I was careful not to be too flirtatious. We finished up in a bar just round the corner from my place and on the wrong side of town from Jessica's place so I offered to let them stay over and they agreed amidst more jokes about my perceived privilege. \"Will your servants let us in through the door?\" quipped Yazmin just as we reached the front entrance to may place.\n\nGiggling and fooling around, as I turned the key, the girls tumbled through the door. \"I'm really tired now,\" announced Yazmin and offers of coffee or more drinks were refused and we had a little more banter about how long each of us would take in the bathroom. The girls did take the longest of course. Both showered but when Yazmin showered, Jessica joined her in the bathroom and they spent a little longer than I expected in there together. My mind raced with imagined possibilities!\n\nWe had already agreed sleeping arrangements. Despite half-hearted protests from Jessica and Yazmin, I had given up my double bed for them and I was due to sleep on an air mattress in the lounge. It didn't take me long to blow it up and get some sheets and a small duvet to sleep under but then emerging from the bathroom in just a long, tight T- shirt Yazmin said, \"Hey Steve, bring the mattress in with us so we can talk before we go to sleep.\"\n\n\"OK sure,\" I said, trying not to look too closely at Yazmin's gorgeous figure and perky little nipples that had become so visible through the tight material of her T shirt. Jessica strolled through to the bathroom looking equally sexy, wearing, I noticed, the silky nightwear she often wore when she stayed over with me. I had taken her shopping and bought it - a black top with several tiny delicate straps across the back with plenty of flesh revealed, tapering down to the pretty, lacy shorts. Both girls were visions of sexiness as they settled down for bed. Unselfconscious and relaxed, chatting about how nice the evening had been they made their way to the bedroom, a tiny squeeze of a hand the only hint of their shared sexual history. \n\nI took my turn in the bathroom, had the quickest of showers, brushing my teeth at the same time. Piles of clothes were strewn around; not such a common sight in my flat but a very welcome one. As I got out and quickly dried myself I noticed graffiti written on the mirror in the condensation. Hearts and smiley faces then an exaggerated stick drawing of a girl with huge breasts with \"Jess - great tits\" scrawled next to it. I smiled, inhaling the subtle scents of femininity in my bathroom, traces of perfume and soap, the steaminess of two more showers than usual that filled the small space. \n\nGlancing at the little piles of clothes, dresses, tights and panties I couldn't help feeling aroused. My body responded and the first pulses of an erection registered before I deliberately tried to clear those thoughts. They persisted and I promised myself that the next time Jessica was round for the evening I would share with her the most indulgent and glorious night of passion. For now - I had guests and I needed to calm down.\n\nMy boxer shorts were in the bedroom drawer so I wrapped a bathrobe around me and exited the bathroom, hoping that my cock wouldn't get any harder if I busied myself around the flat and thought pure thoughts. When I came back to the bedroom for my boxer shorts the girls were already in bed. The bedside lamp was on and I noticed Jessica with my phone, earpieces shared between the girls so they could listen to music. Yazmin giggled conspiratorially when I came in and I noticed Jessica tilt the phone slightly to make it more difficult for me to see what she was looking at. Both flashed me smiles and then Jessica moved as if dancing, rotating her shoulders and nudging Yazmin who soon followed her lead. So it was music, I concluded. Quite sexy music by the look of the sensual movements it elicited in the girls. \n\nI wondered just for a moment whether Jessica was showing Yazmin my \"S\" playlists? My eyes widened at the prospect and I grabbed my boxers and popped out into the hall to put them on. I reasoned that Jessica probably did talk quite candidly to Yazmin about her sex life with me and I supposed that was pretty normal and healthy. I shouldn't be embarrassed. \n\nI tossed the bathrobe and sneaked into the makeshift bed at the foot of my own double bed. The girls had taken out the ear buds and Jessica was shutting down my phone. \"Oh Jessica, can you flick off the alarm on my phone,\" I said, \"no need for an early wake up tomorrow.\"\n\n\"Of course,\" she replied and with a few strokes of her delicate fingers, our lazy morning was assured. Jessica also flicked off the light but the moon was bright tonight and it streamed through the window and bathed the whole room in gentle greyness. Jessica knew I liked to keep the curtains drawn back to see the sky and let the morning light in. Being on the second floor, there was no danger of passers-by peering in.\n\nWe chatted about music and bands and Oxford and went over some of the highpoints of the evening, which for Jessica of course meant the eccentric people we met that she could make fun of and impersonate. The private school educated guy with the elaborate walking cane and three-piece suit who we met in The Rat and Parrot pub who claimed to be related to The Royal Family. Jessica and Yazmin seemed to have photographic memories of some of the rather pompous things he said during the evening and they took it in turns to parody his statements, laughing until tears streamed down their faces. How much fun they had together, I was captivated by the joy that sparkled from them. After a time though, they calmed down and Yazmin said, \"Sleep now,\" and it was our queue to settle down. I turned over and relaxed, enjoying the feeling that it had been such a perfect evening. \n\nMy mind was still active and I sensed it would be a little while before sleep took me. It was only five minutes before something caught my attention. I was sure I could hear noises of kissing coming from my bed. I listened intently, thinking perhaps I was imagining it but the soft sounds of lips meeting seemed unmistakable, followed by whispering and more kissing then, yes, a definite moan. My senses were alive. I couldn't stop myself listening out for every single sound; imagining Jessica's soft lips nibbling Yazmin's fuller lips, kissing her face, her neck. To my amazement, the sounds became louder and more urgent. Though whispered, I heard Jessica say, \"Touch me,\" and a muffled reply that I couldn't discern. The girls were seriously making out in my bed and I was just 5 feet away. How could they think I wouldn't hear?\n\nMy mind was racing, trying to judge what to do. I turned round very slowly and quietly on the mattress and opened my eyes. The low position of the mattress meant that my view of the girls was obscured and I stayed glued in position but fairly quickly decided I needed to give the girls some privacy during their lovemaking. I was pleased that they felt comfortable enough with me in the same room to let their passions overtake them but I wasn't sure I quite had their consent to listen in or even enjoy the experience voyeuristically! Best to bail out.\n\nI coughed a little to sort of signal that I was going to say something and then blurted out rather awkwardly, \"Jess, Yazmin - I'm going to give you a little privacy and move back into the lounge.\"\n\nThere was silence for a moment then some whispering as I started packing up to move out, grabbing armfuls of mattress and duvet, then Yazmin said, \"Steve, why don't you get in bed with us. I want to make this a really lovely night for Jessica and I'm sure she would appreciate you being involved as well.\" Yazmin said these words in a soft and husky voice, laden with sensuality. She said them slowly and deliberately and I think I will remember those words for ever. I paused for a moment, looking at the moon bathed vision in front of me, the girls embracing, Jessica's head tucked into Yazmin's shoulder but both faces on me, waiting for my response. \n\n\"Jess...,\" I began but she interrupted me. \n\n\"I'd love you to join us Steve,\" her voice dry and tentative.\n\nWith a rush of intoxicating excitement, I dropped my armfuls of makeshift bed and moved slowly round to the right, Jessica's side of the bed. Yazmin moved across a little to make space and Jess lay on her back with an arm reaching out for me as I slide beneath the covers and faced Yazmin with Jessica sandwiched between us. My eyes were fully adjusted to the dark now and the exceptionally bright moon allowed me to see the girls' faces clearly. \n\nJessica was smiling and she clasped my hand as I slid my body close to hers. Yazmin's dark eyes watched me for a moment but then slowly and deliberately she placed little kisses on Jessica's shoulder, nuzzling into her neck and causing Jess to move her head towards Yazmin. I moved in towards Jessica's neck and slowly kissed her myself. With lips slightly parted I traced a path up from her shoulder to her ear, knowing how sensitive her ear lobes were to stimulation. \n\nJessica smelled clean and fresh, a hint of coconut fragrance from shampoo. I devoured her skin, nibbling and licking, sucking her flesh, tonguing her ear and gently biting the lobe. I think Yazmin was working on her opposite ear as Jess let out a moan of pleasure and I heard Yazmin breath the words, \"We are going to kiss and lick and suck every inch of your gorgeous body tonight,\" eliciting another moan from Jessica. \n\n\"Anything you desire,\" I added, and I absolutely meant it. My senses were awakened and I vowed to experience every tiny essence of the night ahead.\n\nLetting one arm slip under the pillow, I let go of Jessica's hand and placed my palm across her flat belly, enjoying the feel of the silky fabric of her top, circling then dipping a fingertip into her navel through the material and running my nails across her belly. I felt Yazmin's hand glide across mine and when it briefly made contact, she didn't flinch or pull away but let her hand drift naturally over mine and higher, her fingers exploring between Jessica's breasts. I watched for a moment, stroking Jessica's belly through her flimsy garment while Yazmin's slender fingernail teased the edges of Jessica's breasts, working in delicate circles closer and closer to her erect nipples but just not making contact. ",
        "Yazmin was teasing her, knowing, I imagine as I did the joy Jessica felt in having her nipples thoroughly rubbed and sucked, even bitten. But Yazmin's nails pressed into the prone girl's flesh oh so close to but never touching her nipples. I could hear the yearning in Jessica's breathing but still Yazmin teased, bring her hands down and taking both of Jessica's hands and pulling them over her head, gripping her wrists tightly with one hand while the other traced a path across her lips, down her chin and neck and between her now heaving breasts. Jess had her eyes closed, aching for the moment of contact and Yazmin stopped, looking at me for a moment. \n\nI took this a cue to be a little bolder and my left hand now sought the skin beneath Jessica's top, fingers exploring her soft belly. Simultaneously, Yazmin's mouth went to Jessica's nipple sucking and biting, licking and soaking the fabric in her saliva. Jessica reacted strongly, moaning and panting and my desire to become even more intimate quickly took over and I changed position so I too could get my mouth on her writhing body.\n\nI pulled up her top and feasted on her quivering belly, tonguing her navel, licking and biting her sides and tummy, working upwards toward the frenzy of rubbing and sucking of nipples in which Yazmin was engaged. Jessica's knees went up as the muscles underwent a spasm in her yearning belly and my head was forced close to Yazmin's. I smelled her scent, her desire, felt the warmth of her skin. Yazmin released her grip on Jessica' arms just for a moment and lifted the black silky top free of Jessica's body, but not her arms. She deliberately tangled and twisted the garment around Jessica's wrists and bound her hands again, leaving Yazmin and me free to ravish her body. \n\nI buried my lips in Jess' skin again, sucking and nipping, running my tongue down from her navel to the top of her silky pants, edging then lower and lower on each downward stroke, hands dipping under the elastic that held them up and slowly moving the pants down to expose more of her lower belly. I heard Yazmin above me deeply kissing and sucking on Jessica's lips then she kissed her way down to me and again we touched, this time her cheek on mine and as we swapped positions. Yazmin seemed to nuzzle into my face, letting her hair brush across my lips and cheek before she too plundered Jessica's lower belly with her open mouth. \n\nI moved my face up to Jessica's and could see she was tossing to one side the top that had bound her wrists before she saw me and her eyes guided my lips to hers. We kissed softly, deeply, tongues exploring with abandon as she gasped at Yazmin's increasingly intimate exploration of her skin. I felt Jessica's hand gliding down my belly and her fingertips touched the tip of my cock as it stood proud from my now stretched boxer shorts. \"Wow,\" she whispered, \"You are nearly as wet as I am.\" It was true and it was a familiar phenomenon of my erections that the tip of my cock did typically gush with slippery fluid if I was hard for some time. My cock was almost painful with the desire I felt for these two angels and it twitched again as Jessica rubbed the wetness on my boxer shorts.\n\n\"Time to take these off,\" purred Jess. \n\n\"And these,\" said Yazmin and she tugged down Jessica's pyjama bottoms whilst I shuffled around and removed my boxers. Jess had seen me naked many times there would be no surprises for her but as I glanced down at Yazmin as she gently eased down Jessica's garment and unhooked it from her feet, I saw even in the dim light that all of Jessica's pubic hair was gone. She must have removed the narrow strip very recently as it was only a week or so since she had last stayed over. The night was a rollercoaster of surprises already and another one quickly presented itself.\n\n\"Let me put the light on,\" breathed Yazmin. \"I want to see your pretty pussy now it's all smooth and shaven.\"\n\n\"Ok,\" whispered Jessica, \"I hope you like it... both of you!\"\n\nI wasn't about to object even though for me this was very new territory. Two girls in my bed! I said, \"Tap the base once and it's not too bright,\" holding my breath, but as Yazmin turned round to adjust the light I found it just a touch ironic that Yazmin's clothes were still on and we were both naked!\n\nAs the light went on and instinctively I moved my hand across my groin in a faint show of modesty. I hardly knew Yazmin and there was a little hesitancy on my part. I suppose I didn't quite know how my quite obvious desire worked with Yazmin's lesbian nature. I didn't want to make her feel uncomfortable but yet again Yazmin's confidence soon took charge of the moment. \n\n\"No need for any embarrassment Steve,\" said Yazmin huskily. \"Just love and affection tonight.\" And with that she moved her hand over to mine and steered my hand away from my throbbing organ. Her eyes flashed as she looked at my cock then my eyes as she said, \"Let me borrow some of this,\" dipping two fingers into the juice streaming from my cock. For just a few seconds she caressed the tip of my cock, a gentle finger circling the most sensitive area on the underside of my crown before her thumb stroked upwards from the base to squeeze more fluid from the tip to be collected by her fingers. \n\nYazmin's coated fingers now moved across to Jessica's naked and smooth pubic mound and settled just above the delicious groove of her pussy. Jessica moaned as Yazmin's delicate fingers teased around her outer labia. I watched in fascination as Yazmin's talented fingers worked along the grooves and folds of Jessica's soft pussy, spreading my fluid around her skin and mixing it with the dew now flooding her inner labia. I moved my own hand to Jessica's thigh, dipping in between her legs and slowly stroking upwards. \n\nI sensed that Yazmin was deliberately avoiding Jess' most sensitive areas, building up the desire and need in Jess to be ravaged. Jessica's breathing and movement increased as her need grew, lifting her hips upwards to urge Yazmin on to greater intimacy and spreading her thighs wider to encourage my exploring fingers.\n\nYazmin's eyes locked onto mine once more and said, \"I need a little more.\" Her hand moved slowly but assuredly across to my groin and she wrapped fingers around the base of my cock and squeezed upwards, coaxing a yet more fluid from the tip. Collecting this on her fingers she surprised me again by moving up Jessica's body and delicately coating her lips with the fluid from my cock. Jessica's tongue immediately flicked out to experience the familiar taste and she let Yazmin repeat the process a couple of times until her lips shone with slippery lipstick. My cock ached for more and I noticed in Yazmin's face what seemed to be a real pleasure in this erotic caress. \n\nShe smiled and took her time, navigating the clefts and ridges of my penis with some relish and often smiling as she gathered yet more fluid to spread on Jessica's lips. Yazmin then put both hands behind Jessica's neck and devoured her lips, sucking them and probing them with her tongue, devouring my own pre-come that she herself had spread all over. The girls gasped and moaned with the deep intensity of this wet kiss and I was filled with the desire to have my mouth on Jessica at the same time. \n\nUsing my fingertips to guide the way, I kissed my way up from Jessica's flat belly up to her fulsome breasts cupping then kneading them and then moving my face up close to let my lips close around an erect nipple. Despite being lost in an orgy of kissing, Jessica cried out even more as my tongue and lips suckled her nipple tips and areolae. I nipped the taught buds with my teeth, opened my mouth wide to suck as much of her glorious breast into my mouth as possible and licked and nibbled all over her chest as Yazmin's mouth did the same to Jessica's face.\n\nMy hand strayed south, skimming Jessica's belly and coming to rest on the perfect curve of her pubis. It was undulating as Jessica's legs scissored together. Desperate for the feeling of pressure on her clitoris, I sensed Jessica's burning need for Yazmin and I to give her the ultimate stimulation. This girl needed to come now more than anything in the world and as my fingers got closer and closer to the trigger that would send her into ecstasy, it was Yazmin that called the tune. \n\n\"Now my darling Jess,\" said Yazmin as she nuzzled into her neck, \"I am dying to taste some of that ocean of honey I know you have building in your pussy. Will you kneel up so I can suck some of that out of you?\" Well, what can I say - this amazing girl was choreographing just the most erotic night of my life - I was happy to go along with anything she suggested. \"Steve, why don't you let Jess take you in her mouth at the same time. She's told me how much it turns her on.\" added Yazmin. \n\n\"Oh Yazmin, I'm so turned on, I can't tell you,\" panted Jessica and she turned and rose to her knees, kissing me as she did so and whispering into my ear, \"I so want to suck you.\"\n\nJessica parted her legs and Yazmin quickly lay on her back and angled her body so that her face slid between Jessica's thighs, grabbing me by the hand as she did so and guiding me to straddle her lower body, naked as I was. As Yazmin adjusted her position she slid down the bed slightly, causing her T-shirt to rise up and expose the perfect flatness of her midriff. My cock was just a few inches away from her navel. Jessica leant forward now, pausing for a moment to kiss me before guiding me upright and lowering her head to my cock. Her tongue flicked and licked around the bulbous head, teasing me, drawing out the anticipation of feeling her lips surround me with familiar warmth.\n\nJessica circled the tip of my cock with her tongue and I looked down the contours of her back to see Yazmin's fingers kneading her buttocks, pushing them apart. I could see Jessica's widely parted thighs and Yazmin's mouth slowly working on her pussy. Gentle moans came from Yazmin as her tongue explored and I watched her hands grip Jessica's hips to gain the leverage to push her tongue in more deeply. Jess pursed her lips and gripping the base of my cock to keep it steady she pushed her mouth forward, keeping her lips quite close together. This was a new sensation, incredible tightness and a slow, very slow, envelopment of the head of my cock. Jess withdrew her mouth a little yet kept her lips clamped firmly around the tip, generating yet more sweet friction. I fought the urge to push myself forward into her mouth as she repeated her slow tight assault on my straining bulb.\n\nJessica was full of surprises tonight and I knew how it delighted her to spring new experiences on me in the bedroom. Maintaining the tight grip on my cock Jess pushed onto me so that my cock went deeper, deeper than she had ever taken me before. The feeling was amazing and I moaned out loud with the joy of such delightful pleasure. Withdrawing slowly, she repeated the motion a few times taking me so deep and her tongue and tight lips massaging every inch of my penis.\n\nWith several gasps of air, Yazmin flopped her head back onto the bed, the strain of arching her neck up to suckle on Jessica's cunnie was clearly too much and she started kissing Jessica's inner thighs muttering, \"Sit back on me honey and grind your little pearl on my tongue.\" With a final push Jessica took my cock all the way in, her little nose brushing my pubic hair and her lips still pressed around the base of my cock. She held this position for several seconds and I felt the very tip of my cock squeezed into the tight confines of her narrow throat. It was a sensation so forbidden and erotic, the grip on my cock so furious and extreme, I feared for Jessica's comfort but the pleasure was mind-blowing and I was helpless to resist. \n\nAt last Jessica pulled back and as she rose a little trail of saliva fell onto Yazmin's belly. I took Jessica's shoulders in my hands and encouraged her body upwards, kissed her neck, her cheeks, feeling the dampness of her face where her oral exertions had spilled saliva around her mouth. Her eyes were watery with the effort of pushing me in so deeply and I kissed them tasting the saltiness, licking her and sucking at her lips. \"Oooh,\" she groaned and her eyes widened, \"you naughty girl!\". I could only guess at what Yazmin was doing between Jessica's heavenly thighs but Yazmin again implored Jess to sit back and surrender her soaking flesh to the devoted tongue exploring her.\n\nJessica moved her knees forward slightly and sat back purring with delight and I climbed off Yazmin's body to move to one side. Kissing Jessica's nipples, I traced a line down the front of her chest with my fingertips and followed with my tongue, kissing down her belly. Pulling my face away slightly, I had the perfect view of Yazmin's tongue as it explored the delicate lips of Jessica's pussy. As Jessica called out, \"Oh Yaz, that's perfect, oh, oh,\" I could see how Yazmin's tongue first swirled around the folds of her pussy before sliding upwards and around Jessica's engorged little pearl, flicking it vigorously several times before repeating the motion. \n\nI couldn't tear my face away from this blissful act of union between Jess who I knew so well and this gorgeous creature lapping at her pussy who I'd only just met. Knowing Jess as I did, I could tell she was very close to coming but Yazmin suddenly changed the game. Pushing Jessica's hips upward, Yazmin shuffled from under her body to kneel up.\n\n\"Lie down my sweet,\" she said as she guided Jessica and bid her lie down on the bed. As Jessica lay down, Yazmin pulled off her own T shirt to reveal her slim and elfin upper body. I couldn't help but drink in the sensual tautness of her young body. It was the first time I had seem Yazmin's breasts. They were small and petite but with dark hard nipples which projected from the soft curves of her chest. I'm sure she noticed the lust in my eyes as Yazmin momentarily crossed her arm over her chest as if to cover her nipples but then, looking at me as she did so she reached out and took my hands, guiding them to her breasts and said, \"If you fuck my sweet Jessica really well, I'll let you touch me some more.\"\n\nFor a few seconds I held her soft breasts. Nipples hard against my palms, she pushed her chest forward pulling my hands against her, eyes burning into me. Just for a few seconds. Then she smiled, blew me a wet kiss and slithered down next to Jessica and pressed her lips onto hers, her hands kneading Jessica's breasts before she spoke again, \"Jess, can I watch him fuck you my darling?\"\n\n\"Mmm...yes,\" came the reply. Jess was so turned on now she needed a release. I had never made love to a woman with anyone else in the room, but the affection and tenderness I felt from Yazmin towards Jessica somehow made it all seem warm and intimate, the confusion over Yazmin's apparent lesbian orientation was easily overcome by her increasing assuredness around my naked and, let's face it, quite obvious male arousal. And her last move, suggesting that I might touch her just sent my arousal into the stratosphere.\n\nAs Yazmin nuzzled Jessica's breasts I gently bit on her nipples, I moved to the base of the bed and gripped Jessica's ankles, lifting them high and wide to spread her sweet peach. Starting at her calves, I tongued and kissed my way along her legs, swiftly centring on her soft inner thighs. Jessica moaned with appreciation as my tongue probed ever closer to the junction of her thighs and the aching centre of her lust. One of Yazmin's hands had strayed to Jessica's pubis and Yazmin's finger tips were tracing a line around Jessica's outer labia, pinching and massaging just around her vulva as my lips grew ever closer. When my tongue found Jessica's smooth shaven lips I was acutely aware that Yazmin's face was moving in the same direction, the smacking and slurping sounds of her mouth were just inches away and as the tip of my tongue found the upper junction of Jessica's labia, Yazmin's tongue also slipped downwards and touched mine.\n\nAn electric moment followed as I fought the urge to withdraw, not knowing if I was intruding too much on the intimacy between these two women that had so suddenly and obviously come to light. Driven by desire and the need to taste Jessica's most intimate flesh, I held my position. Yazmin didn't even flinch as her tongue touched mine and we both fought over the prize of Jessica's swollen clitoris. Momentarily, Yazmin pulled away and her tongue was replaced by both hands as fingers glided down either side of Jessica's outer lips and pushed them together making a tight sweet channel that my tongue could slide into. Appreciating the opportunity to feel the extra friction this brought, I dived in and drew my tongue up and down the tight crevice several times as Jessica writhed with delight, calling out, \"Oh, oh, oh.\"\n\nHuskily Yazmin said, \"It's time now, Steve. Put your cock in her.\" \n\nI moved to a position in which my cock hovered over Jessica's splayed legs and quickly Jessica gripped both of her thighs just below the knee and held them apart as Yazmin's teeth bit gently into the soft flesh of Jessica's belly. I looked up and Jess opened her eyes and looked intently at me, and mouthing, \"Fuck me\" before closing her eyes again and surrendering to the pleasuring that her two lovers were about to unleash.\n\nI noticed Yazmin slipped her tongue downwards and around Jessica's soaking opening just one more time before turning her gaze to me expectantly. Her lips pursed together, she lay butterfly kisses just above Jessica's pussy and I knew what was expected of me. Allowing my legs to spread to sit low on the bed I lined my aching cock toward Jessica's glistening pussy. Pushing forward, the first touch on her inner labia elicited a sharp movement from her hips, pushing outwards with abandon towards me and causing the tip of my cock to immediately sink just a little way into her. Slippery, tight and hot, her pussy drew me in. I wanted to move slowly but I couldn't help pushing just a few inches in to feel the warmth enfold me. \"Oooo!\" cooed Yazmin, her face just a breath away from my penetrating cock and Jessica threw her head back and moaned as I slid in a little deeper.\n\nYazmin's fervent kissing added a percussion beat to the sweet sounds of lovemaking as I started to thrust deeper. Grabbing Jessica's thighs one of my hand met one of Yazmin's and instinctively we held hands, my cock driving into Jess as Yazmin's lips and tongue danced a rhythm over her pubis before moving lower to the most intimate rendezvous. I anticipated it before it happened but nothing could prepare me for the intensity of the moment when the shaft of my driving cock was first touched by Yazmin's lips and tongue. My lover's lesbian friend, leading her seduction as she was, had just brushed my cock with her lips; buried as it was in the slippery heat of Jessica's perfect pussy. Another spasm of pre-orgasmic energy fused through my body and I slowed my entry, as I hoped to savour every moment of this unique experience.\n\nI could hear Jessica's arousal now reaching new heights as Yazmin's tongue flicked her button whilst I slowly and deliberately probed her inner depths. My hands gripped Jessica's thighs, pulling them upwards and outwards to give me greater access to her soaking passage. Jessica's moans were becoming more intense and she went limp as she surrendered to the coming ecstasy. I tried to increase the intensity of my slow, deep thrusting to maximise her pleasure but suddenly my cock slipped free from her pussy and before I could move my hands to guide it back in, I felt a hand on the shaft and the unmistakeable attention of a fluttering tongue licking the tip of my glans.\n\nMy perceptions straining at the seams, I tried to comprehend how the hottest lesbian I'd ever met was actually grabbing hold of my cock and licking the tip for all it was worth. Next, Yazmin pushed my cock downwards onto Jessica's clitoris, her tongue intensifying the assault as she both rubbed my cock on Jessica's most sensitive area and licked the tip of my cock alongside Jessica's pulsing clitty. Slurping and moaning, with one big pull and deliberate licking motion, Yazmin again swept my cock into Jessica's sweet hole and I sensed a feverish assault on Jessica's clitoris as Yazmin swept her tongue repeatedly up and down to create an irresistible friction. ",
        "Nothing could stop Jessica's orgasm now and I thrust slowly and deeply into her to intensify the feeling as Jessica completely lost herself. She cried out in a pinnacle of ecstasy as both Yazmin and I gave her everything we could in our quest for her sexual pleasure. Yazmin's tongue again found its way to my cock and as I heard first the screams and then felt the muscle twitches of Jessica's peak, my shaft both squeezed by Jessica's love muscles and tantalised as Yazmin pressed her tongue against the lower part of my shaft. \n\nJess was screaming now, \"Oh Steve, oh Yazmin, I'm coming, I'm coming,\" and I felt my cock gripped by the strongest and most sustained pulsing I'd ever felt from Jessica's young pussy. It was incredible and lasted so long, her velvety passage cramped and squeezed as her hips lost all control and bucked and gyrated as if she was possessed. I was on the brink of orgasm myself but such was the intensity of Jessica coming that all I wanted to do was enjoy that sweet moment and not miss a single second. As Jessica's crying out slowed, she groaned deep in her throat and I felt the pulsing of her pussy muscles weaken and ebb. Yazmin had eased her lips and tongue away from Jessica's super-sensitive clitoris to lick her soaking outer folds, reading her body as it gradually came down from her peak to the warm and glowing decline. Again Jessica's post orgasmic phase was longer than I'd ever experienced. \n\nHer low, deep groans continued and with eyes still closed she seemed barely conscious as her body still twitched and flexed with the pleasure overload. All the time Yazmin patiently and gently worked her lips carefully around Jessica's outer pussy lips, occasionally straying to my girl-glazed cock only half of which was now inside Jess. Yazmin's tongue danced over my shaft, running up and down, feverishly licking around the point that our two bodies met in fleshy embrace.\n\nI slowly withdrew my cock and as the head squeezed out of Jessica's tight canal Yazmin's tongue found the ridge of my glans and her hand gripped me while she licked and probed with her tongue. Stopping for a moment Yazmin said, \"Oh Jess, I can taste you on his cock...lovely,\" before slowly pressing her lips tightly to the very tip and pushing my cock head through the taught \"o\" of her pursed lips. As she completely enveloped the head in her hot mouth, Yazmin used her tongue on the sensitive underside of my bulb firmly circling and flicking as her tight mouth pushed more of me in. It was just for a moment though, a teasing glimpse of the talents that Yazmin clearly had to drive men wild yet I guessed were seldom exercised in her lesbian world. As she lifted her mouth from me and smiled I must have again betrayed my puzzlement at how this lesbian beauty stepped in and out of her sexuality with such apparent ease. \n\nJess relaxed, sinking into the bed and quieting her rapid breathing. Yazmin moved to her side to sneak little kisses to her cheek and neck. My cock, on the other hand, was fit to burst and I doubted I had ever been this hard for so long. Or ever this turned on. Pulsing with desire, I lay on my back and sucked in lung fulls of air, the scent of sex making it heady and sweet. Letting my left hand move across to stroke Jessica's belly, I could feel her tummy muscles twitching still with the afterglow of orgasm. Her eyes were closed as Yazmin was gently pressing kisses to her breasts, moving up to her neck. It had been the most erotic experience of my life and I hadn't even come. So slow and sensual had our lovemaking been. I breathed deeply as I heard the whispered conversation of my two guests. Alert still to every moment, I caught a hint of a phase from the hushed conversation between my two seductresses. \"Are you sure you're OK for him to take me there,\" from Yazmin. \n\nStill unsure of the context, I listened intently and heard Jessica's reply, \"Yes. He'll love it and so will I.\" \n\nPuzzlement soon gave way to a new experience as Yazmin announced \"My turn in the middle.\"\n\nIt took few seconds for me to register what had just been said. Given I had just properly made love to Jessica while Yazmin had watched and tongue-flicked Jess to Nirvana at the same time, what could this mean? Did Yazmin want me to ravage her in a similar fashion. Yazmin still had her yoga pants on though I couldn't help but notice the dampness spreading between her legs. Jess and Yazmin swapped places and Yazmin was now, indeed - in the middle. This gorgeous vixen who was apparently a lesbian with a self-expressed suspicious view of men in general - was she really proposing that I join in on making love to her? I felt another pool of pre-come forming on my skin, just above my navel. It wasn't there for long. Jess noticed and leaned across Yazmin's body, her tongue and mouth going straight to work slurping and sucking at my skin, taking in the slippery juice only to transfer it immediately to Yazmin's dark nipples as she feasted on them.\n\nYazmin cooed and stretched her arms upwards as if in invitation, giving up herself and her lithe body over to pleasure. Tentatively, I let my left hand drift across Yazmin's belly as Jessica took each gorgeous nipple in her mouth in turn, slick as they were now with the mixture of her saliva and the fluid she had scooped up from the tip of my cock. One of Jessica's hands guided mine to one of Yazmin's sweet mounds and I quickly found myself gripping her slippery nipple, working it and pinching gently, eliciting moans of approval from her mouth that were only to be silenced by Jessica's deep kisses. I glanced upwards to see Jessica biting on Yazmin's lips and thrusting her tongue in and out of Yazmin's mouth, the young girl surrendering to every glorious assault on her full sensuous lips.\n\nI was just about ready to explode with desire and I moved my mouth onto Yazmin's belly. Her skin soft and new, familiar yet foreign, I drank in the subtle shades of her scent and taste, my mouth roaming freely over her midriff, tongue dipping into her navel and lips gently nipping at her flesh as I moved downward towards the waistband of her yoga pants, moving slowly to make sure that if Yazmin wanted to stop me, she could. Instead I felt her arms move down to my head and push my further downwards. As Jessica lavished her with deep kisses, I hooked my thumbs under the waistband and pulled down ever so slightly, freeing up more flesh for me to envelope with my mouth. \n\nYazmin lifted her bottom slightly and as the top of her waistband rolled down a few inches my tongue zeroed in on her pubis and the soft, smooth skin of her completely shaven mound. Her legs were pressed close together and the waistband covered the tops of her thighs but my tongue found the top of her pussy and its smooth contours welcomed my exploration. Angling her hips upward and pushing my head still further, Yazmin seemed to urge my attentions southwards. I dipped my tongue into the cleft of her outer labia and tasted the flood of her arousal but her legs were so close together, bound by the waistband of her pants that it was difficult for me to truly ravish her pussy with my mouth. As I moved my hand again to her pants, Yazmin broke her kiss with Jess and stilled my movement. \"Tie me Jess,\" she said. \"The way I like.\" \n\nConfused, I paused for a moment, lifting my head and meeting Jessica's eyes as she looked at me and spoke. \"Steve,\" she whispered, \"pass me one of your ties.\"\n\nEager to respond to every whim of these heavenly angels before me, I quickly retrieved a tie from my wardrobe and watched spellbound as Jessica tied Yazmin's ankles, leaving a loose stand of the fabric coming away from the knot. I was intrigued. Yazmin was laid out with her ankles tied and Jessica moved to kneel over her face, reaching down to her ankles and gathering up the loose stand of her bounds and pulling it upwards. The effect was to raise Yazmin's legs into the air and to lift her bottom up, exposing it to my gaze. Her beautiful slim thin thighs and ass cheeks framed the most exquisite sight. Her swollen pink flower opened slightly as Jess pulled her ankles high and over one shoulder as Jess herself sank down to present her open pussy to Yazmin's waiting mouth. \n\nThen Jess slid one hand down on one of Yasmin's skyward pointing thighs, pressing her fingers into skin and then moving them to one side to splay Yazmin's most intimate flesh. I watched, incredulous as Jess pressed Yazmin's ass cheeks apart to reveal not only the full splendour of her glistening pussy but the tight and perfect rose of her anus. As Jess stroked and coaxed the most explicit vistas from her lover she urged me to go down on her. \"Steve,\" Jess breathed, \"will you worship Yazmin's pussy like you do mine?\" \n\nI paused for a moment, the full enormity of what had just been said slowly penetrating my sensually overloaded brain. \"Of course,\" I said as I noticed the almost imperceptible twitching of Yazmin's dark anal starfish but still I hesitated. Despite my intense desire I needed Yazmin's consent. She seemed to sense this in my tentative touch and she reluctantly withdrew from between Jessica's wiling thighs and wiggled free, Jess assisting her as she moved her bound ankles down and bid me pull her up by her arms. \n\n\"Now Steve,\" she said her arms moving to my shoulders as she moved her face close to mine. \"I know you are a gentle and lovely guy - Jess has told me lots of things about you, but Jess and I might have misled you a little about my sexuality. I'm not a lesbian. I'm bisexual and right now I want nothing more than you and Jess to touch me, to taste me and to fuck me. You can fuck me however you want, wherever you want - and I mean wherever. Give me everything.\" With that, Yazmin wrapped her arms around me and kissed me, her urgent tongue probing my mouth as he lips pressed against mine and her fingers clawed at my hair. I felt her passion and recognised her lust as she surrendered herself to desire. Emboldened by her obvious enthusiasm, I vowed to try to please her in every way hoping that my ultra-sensitive cock would be able to stand the torment of yet more stimulation without release for just a while longer.\n\nAfter enjoying Yazmin's mouth for several minutes, I broke the kiss and looked to Jess again to take Yazmin between her thighs and give her freedom to lick and suck at her beautiful vulva. Jess was quick to part her legs and lower herself down giving Yazmin full access to every tiny contour of her pleasure palace. Jessica took Yazmin's legs again and lifted them high and backwards to expose her to my now ravenous tongue. Resting my palms on her thighs and curling fingers inwards, I sought Yazmin's outer labia and pushed and massaged these delicious fleshy folds before stretching them outwards to reveal her inner labia and the little jewel nestled at the sweet junction of her lips.\n\nEvery pink inch of flesh around her pussy was shining with the slippery quicksilver of arousal but I took my time and slowly lowered my head to her gorgeous pussy, tracing my tongue around the profile of her perfectly smooth inner lips, savouring their sensual form before moving my tongue yet closer the core of her pussy I lapped up the fluid of her desire, swallowing mouthfuls of delicious girl come and pressed my tongue deep into her vaginal canal sucking out more delightful fluid and making sure that my tongue occasionally strayed upwards to flick and lap at her tiny clitty. \n\nI could hear Yazmin's increasingly excited breathing from under Jessica's spread thighs, wet kisses and the lapping sounds of a girl feverishly sucking at the soaking pussy of her lover. Jess let her hand stroke down the back of Yazmin's thigh as her other hand pressed her thighs even further back. She clawed at the back of my head pushing my face more urgently against Yazmin's quivering pussy. \"Oh Steve, taste me, suck me, fuck me with your mouth.\" I could feel the need in her voice as she allowed herself, so prone and exposed to my eager tongue, to be pleasured without restraint. Yazmin's words were now lost as Jessica edged forward and then sat fully down on Yazmin's face. Now Jessica started to moan, moving towards another orgasm, sensations heightened by the increasing arousal of her lover.\n\nRecent though my explorations were, I learned quickly that Yazmin loved having me circle my tongue around the entrance to her pussy before criss-crossing her inner labia upwards to her pearl. She then quivered with delight every time I flicked the very tip of my tongue up and down on her precious jewel. Jessica's increasing arousal made me desperate to take Yazmin to that same place so I moved one hand in close to her puffy lips as they glistened with slippery juices and pushed a finger into their exquisite junction. I ran my fingertip up and down the silky slit, probing deeper and massaging the delicate flesh as my tongue now stayed firmly on her clitty licking first up and down and then swishing from side to side. \n\nI gradually built the speed and pressure of my tongue and I could hear Yazmin respond. She moaned loudly but I could tell her lips and tongue never left Jessica's soaking flesh as she licked and sucked, coaxing Jessica in turn to cry out and as she let go of my hair and instead pulled on Yazmin's bound legs, tilting them even further back and splaying her lovely peach yet further as my frenzied tongue pleasured her nub. Oceans of girl juice bubbled from her pussy as I traced my finger around her entrance, swirling it round and round just inside the strong muscles twitching at the entrance to her canal.\n\nJess again screamed out with ecstasy as she responded to Yazmin's talented tongue. \"Oh my god, oh my god, Yaz, make me come now. Tongue me, bite me, fuck my ass with your tongue.\" Even with the many hours of intimacy with Jessica, the last graphic phrase caught me unaware and sparked forbidden desires that I'd never dreamed might surface. My lovely Jess seemed to have become even more experimental since her weekend in Manchester with this girl Yazmin, whose exposed folds I was so ardently licking. I wondered if I had died and gone to heaven. Things like this just didn't happen to me! \"Oh yes, there, fuck my ass, push your tongue in my ass,\" screamed Jess and I licked and sucked Yazmin for all I was worth as I felt her hand slide round the curve of her buttock and pull herself apart even more. \n\nAs I circled the pulsing entrance to her pussy, I attempted to bring a second finger into play but with everything so wet and slippery my second finger brushed the tight pucker of Yazmin's ass. I couldn't help but allow it to stay a while, feeling the taut juice slicked muscular ring, the tiny dip in the middle. What happened next shocked me even more. I felt Yazmin's tiny ass ring pulse and twitch and then open slightly my fingertip dipping ever so slightly inside its warm embrace. Yazmin's hand grasped my wrist and pulled forcing my fingers simultaneously deep into her body, one finger sweetly lodged in her pussy, the other gripped by her tight little ass. I think I will always remember that exquisite feeling of tightness from Yazmin's little twin muscular rings as my fingers were gripped and squeezed. Her pussy was deliciously wet and warm but I'd never experienced this rush of passion before - the need to be penetrated anally, and it thrilled me beyond words.\n\n\"Ahhhhh,\" moaned Jessica as she began to come. She pulled on Yazmin's ankles raising her bottom even more to my explorations as I tried to keep my tongue centred on her clitoris. \"Ahhhhh - I'm coming,\" squealed Jess in delight and she began panting in that way that was so familiar to me. My fingers were buried deep in Yazmin's twin delights and as my tongue continued an unremitting assault on her clit, I began to gently saw my fingers back and forth, feeling the thin wall of flesh between her pussy and ass and savouring the textures and twinges of contractions as I sensed Yazmin's own orgasm approach like a freight train. \n\nJess was mewing now as her coming subsided and I could now hear Yazmin's wet lips and tongue smacking as they clearly stroked Jessica's intimate lips with long languid strokes to stretch out Jessica's pleasure. Now though, through her breathing Yazmin betrayed her own imminent climax. Above my head, Jess untied Yazmin's bound ankles and as she flipped herself deftly to one side of Yazmin's body she simultaneously pulled Yazmin's legs wide apart whilst diving down next to me with her face licking and suckling at Yazmin's navel and the sensitive swell of skin just above her pubic mound. She was so completely open and exposed to me and all I felt was her unashamed lust craving release as I moved my fingers in and out of her pussy and ass in deep strokes. The intense feeling of the tight ring of her ass moving over each knuckle of my middle finger will stay with me forever. My first real experience of the joy a person can gain from this intimate act of anal penetration was a revelation and I wanted more.\n\nI felt hands on the side of my head now, willing me on and I increased the intensity of my licking, buzzing my tongue from side to side in a frenzy as the base of my tongue started to ache; letting my lips go loose and stroke her labia, the soft hood of her clit. I felt a tremendous spasm in her pussy first, mirrored a few seconds later in her ass just before Yazmin screamed with release. \"Aaooooh,\" Yazmin squealed and her legs began to shake and flex. Her moans grew in volume and she cried out again and again in time with the huge spasms of her twin canals. I slowed my actions and as Yazmin's muscles continued to flex more gently, so my mouth fluttered soft kisses over the whole of her pussy and my fingers withdrew to play at the entrances to her vagina and ass. I couldn't resist lingering a little longer at her anal ring. \n\nThe strength of its exotic grip and extreme tightness enthralled me. I licked long strokes of my tongue down the centre of her groove, coaxing a river of pussy juice out of her and down across her perineum to her ass and my circling finger. The flood of new slipperiness suddenly made it much easier for my finger to penetrate and I couldn't stop myself from pushing it once again deep into her ass. Feeling the ridges of my knuckles stretch her every time they worked their way in and out with slow deep strokes was intoxicating. Another symphony of spasms played in Yazmin's back door and I heard her whimpering, \"oh, oh, ooooh,\" as it seemed her orgasm lingered a little longer just in her ass. Jess lowered Yazmin's legs and I changed position slightly to allow her to rest both on the bed as Jessica slid beside her lover and kissed her cheek and ear. More whispers issued from Jess as she breathed softly into the ear she was nuzzling eliciting a sigh and nod from Yazmin. \n\nReluctantly, I eased my finger from the warm grip of Yazmin's most intimate haven and sat up, my cock pointing skyward as Jess said softly, \"I've never seen you so hard!\"\n\nYazmin's eyes opened and she moved both her hands down to her pussy as if to shield it from my gaze. The sparkle in her eyes betrayed the irony of this feigned modesty but she tilted her head shyly and said, \"Did you like my pussy, Steve. Did you like touching my ass? Do you want more?\" I looked straight into her eyes and then to Jessica who was clearly scanning my face for a reaction. Jess rose and leaned towards me one hand softly stroking my side while the other caressed my inner thigh before cupping my balls and sliding her hand slowly up my shaft as she spoke. \n\n\"Yazmin is our guest, and it is her turn in the middle still... so I think we need to please her.\" Her fingers now at the tip of my cock, thumb pressing on the soaking tip and using the lubrication to rhythmically rub the contoured underside of my cock, she dipped her head down to my groin and continued the motion with her tongue. Her hand still gripping my shaft, Jess slipped to one side allowing me the full vision of loveliness before me. \"Isn't she beautiful? So sexy and all ours.\"",
        "\"I...if it's what you both want,\" I stammered, every nerve in my body tingling in anticipation. \n\n\"Steve please fuck me,\" said Yazmin. \"Put your lovely cock in me,\" and as she said it her hands sensually swept aside and her legs parted, fingers clutching at her thighs. \"Go on, I can't wait any more,\" she breathed as her hips started to rotate and lift towards me, thighs parting even more. Her beautiful pussy unfurled like a precious orchid, sparkling with arousal in the dim light, her perfect petals exposed to the night. Her hips bucked and twisted in the most erotic display I'd ever seen. \"Fuck me...pleeeease!\"\n\nSlowly and deliberately I leaned forward, my cock jutting out like a rocket about to fire. Jessica gasped with apparent delight and she let go of me as I moved my cock between Yazmin's legs and close to her swirling hips. Jessica ran her fingertips along Yazmin's side and across her belly as I lay between Yazmin's thighs, head level with her breasts and cock twitching very close to her pussy. Yazmin's eyes were closed and her hands went to my shoulders, pulling on them, urging me forwards, desperate for the feel of my cock inside her. \n\nI supported my upper body with my hands so I there was a little space between us, catching Jessica's eyes who gave me a knowing look as this was occasionally a position we made love in because Jess liked to watch my cock move in and out of her. I was conscious of Jessica watching my every move so intently, feeling almost like I was performing in an erotic scene in a movie. I moved up just a fraction and the first electric touch of Yazmin's pussy lips on the tip of my cock sent a thrill from the base of my cock upwards and into the muscles of my lower belly. For Yazmin, it was like a someone just pulled the trigger. Her hands gripped my shoulders and back hard and she launched her hips up towards me like a woman possessed, forcing the first few inches of my cock straight into soaking passage. \n\nMy cock was enveloped by molten heat and sublime slipperiness as the flesh squeezed me and once in she mewed and made slower sensual swirling movements of her hips, just working my cock in and out a little. The feeling was just so good I couldn't stop myself pushing in more, using my own hips to drive forward, matching her rhythm as she tilted her hips upwards and urged me deeper. I glanced to one side and saw Jessica's face, rapt in concentration, her eyes on my cock as it slid in and out of her friend's slippery hole. Turning back to Yazmin's face, my lips now close enough to kiss her I watched her as I slowed my pace but made the strokes longer, almost withdrawing one moment then sliding smoothly back and deep into her yielding body. With eyes closed, she sighed and seemed to still a little, the frenetic desire to be penetrated now gave way to a surrender to pleasure. Her body relaxed, her legs parted more widely as she signalled complete trust and connection with me as our bodies moved together as one.\n\nJessica's hand glided over the skin of Yazmin's belly. Lightly, softly, occasionally touching my skin, her deft fingers trailing ghost-like across our warm bodies. I dipped my head to taste Yazmin's lips and they instantly parted to meet mine, her hot breath warm as I placed tiny kisses each of her lips in turn before dipping the tip of my tongue between them. She met my exploration with passion, pulling on my neck for purchase and thrusting her tongue into my mouth, mashing her lips against mine as she moaned her delight at the intimate contact. Beneath me I felt Jessica's hand move higher, grasping one breast then the other, fingers active and alive over Yazmin's tender nipples.\n\nI was sucking on Yazmin's tongue as my cock made slow deliberate thrusts inside her and I was suddenly aware of Jessica's thighs as she knelt over Yazmin's head. Tilting my gaze upwards I was treated to the view of Jessica's beautiful pussy as she wiggled her hips forward, competing with me for Yazmin's tongue. I lifted my head up a little to give her space and Yazmin immediately cooed, \"Oh honey, grind your pussy on my face.\" Jessica inched forward again her hands on her breasts, thumbing her nipples, thighs parted and delicate pussy lips just above Yazmin's mouth. \n\nI was still not used to Jessica's new, completely smooth pussy and I couldn't take my eyes off it as I continued to thrust deeply into Yazmin's warm channel. As I gazed at the perfection of Jessica's neat little flower, her fingers dipped downwards, sexily parting the folds of her outer labia and rubbing along the inner valley, teasing her own tiny lips and fingering her soaking entrance. I watched as her longest finger traced a circle just inside and then moved down to Yazmin's hungry mouth. Yazmin's sucked and licked on the finger, tasting Jessica's juices and as the finger withdrew Jessica use both hands to part her outer lips as she slid down onto Yazmin's face. Yazmin moaned as her probing tongue found its mark and pushed deeply into Jessica's opening. Jess shivered with delight and her arms went to my shoulders to steady herself as she surrendered to Yazmin's mouth, her body twisting to maximise the contact with her lover's lips.\n\nSuddenly, Jessica hopped off, leaving Yazmin gasping and I paused with my cock just at her opening. I could feel little involuntary spasms squeezing me as I moved my cock back and forth just an inch or so, teasing the little ring of muscle at her pulsing entrance. Jessica watched for a moment, encouraging me. \"Oh Steve. That looks so nice. Keep doing that to her, but sit up a little so I can kiss her.\" \n\nSitting back a little, I slipped my knees forward and gripped Yazmin's bottom, lifting her slightly as Jessica's hungry mouth swooped in to make contact with Yazmin's clitoris, lapping and sucking. \"Oh wow\" cried Yazmin as Jess fervently lapped at her fleshy nub. \"Oh Jessy, lick me, honey - make me come again!\" \n\nFeeling the ecstasy of tightness from Yazmin's soaking wet little pussy, I pulled her onto me, driving my cock into her with passion and fervour. All the time, Jessica suckled and nibbled Yazmin's outer folds, her tongue never ceasing its feverish assault on the most sensitive and receptive focus of her sex.\n\nI sat back a little and angled my cock upwards to rub on Yazmin's needy G-spot as Jess responded with a symphony of licking and flicking that coaxed Yazmin to her own delirious peak. As Jessica's oral ministrations reached their height, I was able to slow my thrusts - watching with fascination as Jessica's lips melded with the object of her desires and Yazmin's cries of joy reached a crescendo. Squealing with abandon, her release squeezed my cock with such an exquisite pulsing grip that I found myself looking straight at Jess for reassurance that I could finally come, such was the pull from Yazmin's sexual being, wanting me, milking me, aching for my come to burst forth. Jess looked straight into my eyes and whispered \"Wait a moment\", her voice urgent with its own passionate need. I tried to hold off but every fibre of my being wanted to let go and come so strongly into this delicious nymph whose tight and sucking pussy was contracting around my cock.\n\nI held still while Yazmin mouthed yet more words of ecstasy as her orgasm consumed her. \"Do it to me, do it to me, fuck me deeply, take me, fuck me, I'm yours, pump your hot come in me.\" Her language continued to become more and more base as she lost control, her body responding to an overwhelming need to be taken deeply and firmly whilst her clitoris received the most thorough and ferocious tonguing from Jessica.\n\nCaptivated by the most erotic sounds and visual delights of my guest's climax, it was a wonder that I was able to calm the rising tension in my own loins and instead enjoy the pure and beautiful after-shocks of girl-coming as Jess slowed her oral caresses and I pulled my cock most of the way out of Yazmin's pussy to tease at her entrance and watch in fascination the gentle lapping of her lover whose delicate lips and tongue were maintaining the high sexual arousal even as Yazmin's heart beat slowed with the post-orgasmic thrill of glorious sexual fulfilment.\n\nMy own cock was like a firework about to be lit. Every nerve in my body was on standby, every skin cell aching for contact and consent. My eyes were glued to the wanton scene of Yazmin's beautiful pussy as my cock slowly withdrew. Her protruding nipples stood erect to remind me of her heightened state of arousal and she pushed her arms together to accentuate the perky nipples.\n\n\"She'll come again if your fuck her from behind,\" were the words Jess uttered as she took my cock in her hands and slowly massaged my rod from root to tip. \"Go on Yaz, stick your ass in the air for him,\" uttered Jessica with a sexual confidence that I'd never experienced before but could easily get used to!\n\nYazmin acquiesced and her behind went straight up in the air right on the edge of the bed. I moved off the bed and walked around behind, cock bobbing heavily in front of me with Jessica's eyes following my every sway. Yazmin had moved so that she knelt on the edge of the bed but her head was low, close to the fabric of the duvet. Jess slid her naked body down the bed towards Yazmin and I could tell before it happened that Jess had only one thought, to present her perfect pussy to Yazmin's mouth while I took her from behind.\n\nAs Jessica moved her body down to Yazmin's face she parted her legs, bent her knees and moved her hands down to her pussy lips and used her fingertips to sensually part her folds, exposing herself fully to Yazmin's eager tongue. In a move that seemed to mirror this overt invitation, Yazmin parted her legs a little more, opening up her own flower and ass cheeks in the lewdest and most delicious display. I gazed at her dew-glazed inner labia, the tight opening of her vagina as it's delicate pink portal pulsed in anticipation. Her tiny anal whorl with its darker skin and delicate little ridges like an inverted volcano drew my gaze and I couldn't resist staring at its forbidden glory. Remembering the way that she pulled my finger urgently and deeply into her most private opening filled me with another rush of excitement but I deliberately tried to calm my ardour otherwise I was sure I was going shoot half a dozen ropes of come all over Yazmin's perfect pudendum.\n\nI gripped my own shaft and guided it to Yazmin's splayed pussy lips. They were so wet and slippery that I couldn't resist circling my cock around her inner labia, using the tip to caress and feel every fold and ridge of her hot valley. I dipped the tip into her entrance and circled it slowly using my hand to intensify the pressure and tease her opening. A muffled and wet groan rose from Jessica's parted thighs as I continued to tease Yazmin's furnace hot entrance. I then dragged my cock downwards, whilst maintaining the pressure, so the head pushed her lips apart and dipped under to her waiting pearl. With delight I saw her pussy and anal whorl both pulsing with need as I reached her swollen clitoris and I used the slippery tip of my cock to press directly onto her most sensitive nexus, pushing it back and forth so that she groaned even more into Jessica's own dewy folds.\n\n\"Oh yes,\" cried Yazmin, \"fuck me now,\" and she returned her mouth to Jessica's twitching pussy. Jessica's fingers weaved through her hair and pulled her down, grinding her pussy up to meet Yazmin's lips and tongue. I was so close to coming myself that I knew I had to take things slowly if the prize of Yazmin's second orgasm might be within grasp. I controlled my urge to thrust deeply into her and instead moved my hips in circles, working my cock around to massage every angle of Yazmin's tight muscular grip. \n\nI let my hands play with her firm buttocks stroking and kneading them, pushing them together to generate more delicious friction and then pulling them apart with my fingertips as I pushed slowly and deeply right into her warm channel. Yazmin and Jessica both moaned with pleasure. I could see Yazmin's head thrashing around as her tongue and lips probed every inch of Jessica's pussy and she would periodically gasp for air and encourage my slow and deep assault on her vagina. \"Oh Steve, that's it. Don't stop, keep fucking me deeply. You fuck me so well!\"\n\nI was now really struggling to fight the rising tide of come welling up in my loins and I withdrew most of the way and repeated the circling of the tip of my cock around Yazmin's labia, before rubbing very deliberately the very tip of my slippery bulb back and forth across Yazmin's clitoris. It was so swollen with desire, the tip felt like a hard bean and with my hand to guide the head of my cock I managed to keep it firmly fixed on her centre, rubbing back and forth, then side to side gliding across her upper labia before circling my glans around and around her sensitive nub. \"Oh that's amazing Steve,\" gasped Yazmin and she held very still to allow me to work my cock again and again over her labia and clit, breathing ever more deeply. I sensed her climax was close and I think so did Jess, who moved her position and completely turned round so that her face was next to Yazmin's which, lying on her back, brought the two girls together with Yazmin's face above Jessica's. \n\n\"Come on pretty,\" whispered Jess, \"come hard for me and Steve,\" and then I heard soft wet lips sucking at each other as I felt able again to push my cock deeply back into Yazmin's hot depths. She moaned deeply in her throat and the wet sounds of kissing became more urgent as Yazmin reached back between her own legs to continue the stimulation of her swollen clitoris. Leaning forward a little, I was able to bring one hand around her body, sliding it down her quivering belly and pubis to meet her hand as it played on her clitty. Covering her hand with mine, I shadowed its movements, eager to learn the subtle details of her technique. \n\nI wanted to use both my cock and hand to take her to orgasm and after a few moments of feeling the way her fingers swirled and stroked her own flesh, I squeezed my hand in beneath hers to put myself in complete control of her pleasure. She instinctively knew my mind and her words soon confirmed it. \"Steve, you want to be the one to make me come don't you? Oh yes, keep doing that, fuck my pussy slow and deep and oh yes, touch me like that...!\" Her words didn't come out easily, the twin distractions of her approaching orgasm and the temptation of Jessica's own mouth and tongue so close to hers, she gasped as her release approached. \n\n\"Ooooooh!\" she cried out as I moved two fingers around and around her pliant fleshy folds. As my right hand circled and stroked her clitoris, I let my left hand drift forward over her back to her shoulder and pulled against it as my cock pushed strongly forwards deep into her pussy. The tension built as I used long slow strokes of my cock and the gentle but unremitting stimulation of her vulva to push Yazmin once more to the brink of coming. As her pussy began to squeeze and pulse with inevitable climax, I saw Yazmin's head lift up from her own feverish assault on Jessica's mouth to gasp and squeal with pleasure. A few ragged breaths and Yazmin moved her head down again to kiss Jessica's lips then I heard her whisper between deep breaths to Jess, \"Can I ask him now, Jess?\"\n\n\"Yes,\" came the excited reply and I couldn't believe what Yazmin said next. \n\n\"Steve,\" she gasped. \"I want you to fuck me in the ass. Please. Do it to me now. I need it.\" I was incredulous but so caught up in the feverish lovemaking that I was not about to say no to anything. Plus, it was something I'd never done before and the thrill of being begged to do it now, to this beautiful writhing creature in front of me was just mind-blowing. \n\nJess rose from her prone position and I'll never forget the look she gave me as she knelt next to Yazmin and slid both her hands over Yazmin's upturned buttocks. Her eyes looked straight into mine, wide with anticipation and searching for my reaction. She moved one hand underneath Yazmin's belly and found my slippery balls, cupping them firmly before easing them back to encourage me to withdraw from the tight confines of Yazmin's hot pussy. \"Go on,\" she whispered, her eyes sparkling with excitement and as I slowly eased back my iron hard pole, she circled it with the fingers of her other hand and eased it out of its fleshy sheath. I moved my body back slightly and savoured the delicious sight in front of me. I couldn't help but look straight at Yazmin's tiny dark rose, just above her glistening pussy lips and apparently all mine to enter with my cock. I wondered how it could possibly fit.\n\nFrom where I wasn't sure, Jessica squeezed a healthy squirt of lube onto her fingers and with sensual grace glided them over Yazmin's little puckered hole. I smelled cherries briefly and realised the lube was probably flavoured. \"I'll make her nice and slippery for you Steve,\" said Jess as with her other hand she squeezed my cock and milked another few drops of fluid from the tip before mixing it with lube on her fingers and then delicately pushing the tip of her middle finger right against Yazmin's most intimate orifice. I heard Yazmin gasp and then groan as Jessica's fingertip lightly circled then press into the centre of the circle of rubbery flesh until the tip of her digit just entered. Jess worked the lubrication around and inside as Yazmin groaned appreciatively and then dipped both fingers into her groove and pulled her buttocks apart slightly, returning her gaze to my eyes briefly before again looking intently at my quivering cock as it pulsed just above the vision of Yazmin's tiny anal whorl. \"Go on Steve\", urged Jessica. \"Fuck her tiny tight ass for me.\"\n\nAs I stared at the beautiful vision in front of me, Yazmin's prone and widespread buttocks, her anal flower winking in the pale light, I could have been in heaven. \"Go on,\" Jessica cried, \"Push your cock into her.\"\n\n\"Oh yes Steve,\" echoed Yazmin and she wiggled her hips from side to side before pushing back towards me. At that point Jessica's small hand circled the middle of my phallus and held it steady as Yazmin cooed with delight as her groove sought out the tip of my cock and strove to direct it right at the heart of her most precious prize. I held my position on the bed and pushed forward slightly with my hips as the combined actions of Jessica's encouraging fingers and Yazmin's determined reverse wiggling manoeuvred my cock right to the apex of her anal flower. As she pressed backward towards me, I grasped her hips and pushed forward just a tiny bit, fearful of hurting her but desperate to feel the inner confines of her forbidden opening.\n\nThe moment stretched out in time like a sunset. I felt the taught sponginess of her flesh and tight muscular ring then the pressing of her backwards force against me followed by a tiny explosive release as the first inch of my cock speared her anus and she cried out in joy. \"Oh yes,\" she exhaled and her body froze as we both adjusted to the taboo union that redefined the word erotic for me forever. I held still and savoured the clasping grip of her bottom as Jessica deftly stroked her fingers up and down the middle of my cock, urging me further in. \n\n\"You feel wonderful,\" is all I could mutter as the desire to push further in overcame me and, holding onto her hips, I pressed ever so slightly forward before edging back, repeating the motion several times to Yazmin's appreciative muttering. \n\nThe feeling on my cock was incredible. A gripping tightness that didn't just act in one place but seemed to hold my cock tightly from tip to several inches down the shaft, squeezing and pulsing as Yazmin breathed out her passion in gasps and moans. The slippery lube eased the passage and I found that every tiny motion caused pulses of near orgasmic pleasure to course through my whole groin area, creating a tingling sensation in my belly as the warmth spread outwards. ",
        "Jessica let go of my cock and moved around so she could rest one hand on my back, urging me forward with the other hand in the small of Yazmin's back, her fingers quickly sliding into Yazmin's groove to tease her stretched ring as my cock slowly worked in and out with tiny, slow thrusts. I was mesmerised by the way the pliant skin just around my cock was stretched smooth and pale by my invading stalk and Jessica too seemed captivated by the junction of our bodies; her finger tips sliding into the slippery cleft before seeking out Yazmin's rim and using the lube to massage and circle the edge of her sphincter that gripped my rock hard cock. Jessica's fingers strayed onto my shaft and spread the cherry flavoured lube down onto my skin with a delicate motion before lifting her eyes up to mine and breathing, \"Does that feel good Steve? Actually fucking my friend in her tight little ass?\"\n\nAll I could do was gasp in appreciation and with Jessica's encouraging stroking of my cock with the fingertips of one hand and the pressure from her other hand at the base of my spine urging me deeper, I couldn't stop myself thrusting forwards with a little more vigour. It was a moment I'll never forget. I didn't know what to expect but all I felt was the exquisite grip of Yazmin' s muscular tube surrounding me and squeezing me for over half my length. The feeling was incredible and as I pushed strongly into her, all I heard from Yazmin was an exclamation of joy. \"Oh Steve,\" she whispered, as she arched her back and met my gentle trusts, \"that's it, don't hold back...really fuck me now, I need it.\" \n\nHer words excited me beyond belief and she stilled a moment before pushing forcefully back against me, dipping her hips as she forced another couple of inches of my cock inside her hot passage. Jessica gasped with delight at the naughty act and I held still as Yazmin leaned forward slightly then repeated the thrust back towards me, signalling her uncontrollable desire to be stretched and impaled. The intensity of my first anal experience was amazing and I began to lose the inhibitions associated with this new and forbidden act.\n\nGripping her hips more tightly, I now began to slide rhythmically into her, starting with little thrusts right at her ferociously gripping entrance before edging further in with each delicious push. Increasing the depths of my strokes I squeezed and clawed at Yazmin's thighs and gasped my joy at the feelings wrenching at my whole being. \"Oh Yazmin, you feel so good,\" I cried out. The pressure in my sperm filled balls was building and I could feel the first electric waves of ecstasy fluttering at the base of my cock. \n\nYazmin just seemed to crave more as she wailed, \"Oh yes, deeper, go deeper, fuck me, fuck me,\" and again she thrust back in a paroxysm of desire so basic and animalistic I knew I would soon be lost. I remember the sensation of heat along the whole length of my cock and the super tight rubbery grip right at the base of my cock when she pushed back onto me and my whole length filled her. My balls swung into the dripping moist caress of her labia and there I sensed the feverish strumming of Yazmin's fingers as I realised she was rubbing herself hard as I deeply fucked her arse. \"Yes, yes, more,\" she cried and the volume and pitch of her cry made it obvious that she was about to explode in orgasmic joy.\n\nThis sent me over the edge and I cried out in an erotic echo of the noise of our bodies as the creeping soft slide into bliss took over and I let go. My thrusts became hard and deep and she matched every one, jackhammering her hips back to greet mine as my cock rammed deep into her willing ass before pulling right out to the heavenly grip of her entrance before sliding hard again into her slippery hole. \"Yazmin,\" I cried, not being able to form any more words but with a tone heralding my obvious approaching orgasm. \n\nShe responded with a high pitched wail and the most erotic utterance of the night. \"Yes, yes, pump your come in me, fill me, fill my ass with your come,\" and as outrageously tight as Yazmin ass muscles were, the white light of stimulus overload flashed across all my senses as her ass muscles suddenly started pulsing with orgasmic clenches. Like a heart beating, they came in a never ending wave, pummelling my whole cock length as Yazmin cried out her release and I pulled her back hard onto my spearing thrust as I too exploded. \n\nI experienced the strongest surge of hot come I had ever had, squirting hard and deep into her molten anal depths. Hot blasts of come poured from my twitching cock as I held it firmly pressed inside her. I felt the pressure of my squeezed balls against her squishy vulva and my pubic bone hard against her coccyx. More and more come surged out of my cock and I could barely breath as my cock pulsed with the never ending spasms of muscles from the root to the tip of my organ.\n\nFinally, everything started to slow down. Yazmin's cries softened and were now little mews of spent energy. Her ass still squeezed me every few seconds but the strength and frequency faded and my taught thigh muscles relaxed a little. My cock edged back slightly from her iron grip and I turned to one side to see Jessica's sweet face rapt in awe, almost as if she had witnessed the arrival of a deity. Her eyes feasted over our carnal union; one hand by her side now and the other softly caressing her own sweet peach and as my breathing returned with deep gulps of air she looked intently straight into my eyes and smiled, reaching her hand to my cheek and stroking it softly before caressing Yazmin's upturned buttocks. \n\nHer lips then parted and she moaned in release and I glanced down to see her other hand frantic across her vulva, fingers rubbing her clitoris wildly as she stared right into my eyes and came, hard. I had to steady her body as she knelt beside me, squealing with delight. I reached for her shoulder with one hand and cupped her pussy strumming hand with the other, wanting to share in the three-way ecstasy of this once in a life time lovemaking session. With Yazmin still groaning but having moved her hands to the sheets to grip handfuls of material to bring her back to earth, my cock slowly began to ease further out of Yazmin's delicious grip but my still fat bulb was lodged inside and as I gently pulled back a sudden contraction held me tightly. I was still inside Yazmin's treasure and it was if her body couldn't yet say goodbye so I held still as Jessica shook and gasped, feeling her fluids gush between her fingers with the slippery celebration of her pussy's ecstasy. \n\nWe all held still. Silent. Like some erotic tableaux. \n\nJessica moved first, edging closer to Yazmin's upturned bottom now impaled with just the tip of my still hard, slippery cock. One of her hands reached out around my back and the other slid into the groove of Yazmin's buttocks, her fingertips lightly caressing the smooth stretched skin of Yazmin's distended rosebud before letting them slide to the very junction of Yazmin's opening and my well gripped cock. Finding it slippery from our combined juices and the cherry lube, she seemed fascinated by the view of our joined bodies and her voice was a hoarse whisper. \"That was amazing. I can't believe I came so strongly from just watching. You OK Yaz?\" \n\nYazmin took a moment to reply in words, just uttering soft groans of joy before replying, \"Oh yes, that was so hot,\" and she lifted her body slightly and with another satisfied moan she pushed back one more time against my cock, pushing it back inside her a little before gripping me with her anal muscles and finally moving forward as I slipped gently from the heavenly grasp. I watched in fascination as her anal rose tightly sealed at my withdrawal, a tiny pearl of come dripping from its squeeze to run down the side of her labia to her thigh. \n\nI barely noticed Jessica move but a moment later she was softly wiping Yazmin with a wet wipe to cleanse her lovingly and then she kissed my cheek and said \"Steve, go and get a quick shower, you know, just for hygiene!\" This practical suggestion broke the spell of our torrid union and whist everything seemed clean to me, I was a biologist and so I understood the small risk of some unpleasant bacterial transfer so I promised to return quickly and moved out to the bathroom.\n\nIn the shower I washed quickly but then took a moment in the stream of water to absorb and relish what had just happened. The sensual caress of the warm shower mirrored the incredible warmth and joy I felt at having had the most erotic and mind blowing sex of my life...and my first exquisite experience with two girls at the same time. Let alone the...even my silent thoughts found the concept almost too beautifully sinful to contemplate...anal lovemaking! I was thrilled, astounded, euphoric. I had never felt so alive. \n\nI shook myself from the moment of self-indulgence and remembered that the two super-hot girls who had initiated this magical experience were still in my bedroom. It was time to return and try to find some way to hug and kiss and share with them the joy that I felt at our sexy exploits. I gave my cock one last rinse but thinking about the girls and what we had just done had made me hard again so I kept a towel wrapped round me as I returned to the bedroom, expecting to see the girls almost asleep and not wanting to present them with the boldness of my now raging erection.\n\nThe door was open just a crack and the light was still on. I heard quiet music playing. Sexy music and quite probably from one of my S playlists. When I carefully and quietly put my head through the gap my eyes nearly sprang from their sockets. Yazmin was deeply tonguing my lovely Jessica in her tight anal rose as Jessica writhed and moaned with delight. I couldn't take my eyes away from the uninhibited scene of sexual glory playing out on the edge of my bed. I'm sure quite deliberately, Jessica was posed on all fours facing away from the door, her body angled upwards as she knelt. Yazmin was on her back beneath with her head laid between Jessica's widespread thighs, propped up on a pillow with her mouth under Jessica. With noisy relish, Jessica kept sitting backwards, her tight rosebud fully exposed to Yazmin's spearing tongue.\n\nI watched transfixed as again and again Jessica would lower her bottom to be probed and licked like crazy. Her tiny little rose was shiny with saliva and she seemed to delight in teasing herself with her movements away from her lover's frantic licking for a few moments before sliding back onto Yazmin's frenetic tongue. As I entered the room, cock straining against the towel around my waist, Jessica looked over her shoulder and smiled and thrilled me further with an irresistible invitation. \"Oh Steve,\" she said breathlessly, \"Come closer and watch!\" and with that Jessica lowered herself once more to Yazmin's fervent assault on her ass and this time brought her hands round behind herself to pull apart her buttocks even further, no doubt for my viewing pleasure.\n\nI moved closer, mouth dry with anticipation and knelt at the side of the bed, my face just inches away from Yazmin's and perfectly placed to see every move her mouth and tongue made between Jessica's firm buttocks. I delicately moved a strand of hair from Yazmin's face and kissed her forehead but she barely seemed to notice, all her energy and focus was on the tiny orifice so brazenly offered by her friend. As I pushed my towel to the floor, I sensed Jessica was now keen to raise the temperature with an erotic display to shock and delight me. Muscles in my belly twitched with yearning and the recognition of one of Jessica's favourite games - shocking me with a new sexual thrill to test my reaction. \n\nI instinctively knew she was smiling as she sat back and used her fingertips to press the smooth skin either side of her most private hole and pull herself wide for Yazmin's thrusting tongue muscle. \"Tongue-fuck me Yaz, push into me my darling,\" she cried out and I watched in absolute awe as Jessica's tiny perfectly formed rose opened slightly. My eyes zeroed in on her delicate bud as the muscle twitched and I sense her striving to relax the tight muscular ring to feel the ultimate caress from Yazmin's eager mouth.\n\nYazmin must have sensed this moment as well because she paused for a moment, moaned in reverent anticipation and whispered, \"Now Jess\" before extending her pointed tongue upwards as Jessica say back firmly to be impaled. \n\n\"Oo! Ah! Ahhhh!\" moaned Jess as Yazmin's tongue pushed deeply into her. Now she held the position for a moment and I saw the muscles in Yasmin's neck straining to keep her tongue as deeply embedded as possible before withdrawing and then plunging it back into Jessica's tight grip. \n\nAs Yasmin speared her lover repeatedly with her glistening tongue, Jess cried out with increasing volume and need and she began to rotate her hips as she lost control. \"Oh yeah, oh yeah. Do it to me. I'm yours. My ass all yours,\" her voice rising with each breathless utterance.\n\nI watched, transfixed this squirming, squelching delight that Jessica experienced as Yasmin worked on her, probing and licking, swirling and thrusting to taste every part of Jessica's secret place. Finally, Jess rolled off and lay on her back both hands magnetized to her crotch as she rubbed her labia and drew fluid upwards to coat her proud clitoris. \"I'm so wet Yaz. I'm so turned on. I want more.\" Jess left the words hanging and as Yazmin turned over she slipped off the bed and crouched next to me kissing my neck urgently as her hand found my cock and gripped it forcefully before lightly strumming my now rock hard shaft. \n\n\"Are you going to give her more, Steve?\" Yazmin gasped through heavy breaths. \"Are you going to push your big cock in her tiny little virgin ass?\" \n\nI didn't know what to say. \"I'd love to do that,\" is all I could manage and I stood as Yazmin rose too and Jessica shuffled back on the bed before spreading her legs wide and lifting them upwards and back so her pussy and ass were fully exposed to me. \n\n\"Put your cock in my ass Steve, please,\" Jess sighed. \"I want to watch your face while you fuck me there. Is it OK if Yaz watches? She's helped me learn how to enjoy anal stuff over the last few months but I've never had the real thing inside me. I want it to be you.\" As Jessica breathed these words Yazmin took my hand and guided me onto the bed. I knelt just in front of the vision of loveliness framed by Jessica's pale thighs and marvelled at the smooth pink contours of her pussy lips and upturned anal rose. As I moved closer in silent reverence Yazmin first ran her fingertips across the tip of my cock then delicately traced a circle around Jessica's virginal anus. \n\nShe whispered quietly, \"There's no need for any lube, you are both dripping!\" and with that she moved her face swiftly between Jessica's bent legs and licked her clit furiously for a few seconds before lying beside Jess with her head close enough to watch the unfolding ceremony.\n\n\"Now Steve,\" gasped Jessica and she reached her hands out to me momentarily before grasping her own knees to pull them higher and push her exposed rosebud upwards to greet my cock.\n\nI hunched forward a little, my cock bobbing and pulsing with desire and used a hand to gently guide it down onto Jessica's slit. She was incredibly wet. Wetter than I had ever known and used my hand to steer my cock around her sweet inner labia, pushing into the valley then up onto her sensitive pearl as she moaned with anticipation, \"I'm ready.\" For only the second time in my life I was going to enter the most private, intimate place any woman could offer and as I looked into Jessica's eyes all I could see was happiness and desire. \n\nAs our eyes locked together in mutual lust, I pushed my cock back down through her soaking valley until the tip climbed the tiny ridge of her rose and pressed against it. Clamped tightly shut, I suddenly doubted that I would be able to fit within its narrow confines but as Jessica's breasts heaved with excited breaths I felt her fingers grip me and hold me firmly at her hot centre as I pressed forward. \"Yes,\" she gasped and I felt a tiny pulse from her tight ring as she willed herself to open for me.\n\nFrom the side, Yazmin kissed her way across Jessica's midriff and I watched from above as her tongue slid across the hood of Jessica's clitoris, lapping either side in a light and delicate motion before dipping expertly onto her sensitive apex with increased intensity. With the tip of my cock straining against Jessica's tight portal, her muscles seemed to mirror the actions of her friend and as Yazmin's tongue flicked furiously across Jessica's sweet nub I felt her rosebud twitch uncontrollably and suddenly the very tip of my cock entered her body. Jessica gasped out loud and her whole body stiffened. The tip of my cock was held more firmly than I'd ever experienced. Almost painful with pressure, I froze and time stood still as we both held our breath. \n\nYazmin sensed the moment of entry and she slowed her hungry tongue to a gentle caress to allow Jess to adjust to this new and intimate intrusion. With Yazmin's careful stimulation, I sensed in Jessica's breathing a return of the erotic charge that willed her to take me inside her in this forbidden fashion and between ragged breaths she moaned, \"Push in more, Steve. Slowly though!\"\n\nAll the muscles in my body were taught with desire and all my senses seemed to be focused on the vice-like grip around the tip of my cock. I looked down to see that the bulb of my cock was only just inside Jess and the flesh below the tip my cock was squeezed white with pressure. Responding to Jessica's need though, I edged my hips forward ever so slightly and the slipperiness of our combined juices eased my cock in a little more and as the head pressed into Jessica's hot channel the pressure faded a little and she exhaled and moaned her approval. \"Oh yes, that's nice,\" and with that Jessica's hand gripped my shaft and using tiny movements of her hips just moved my cock back and forth slightly spreading our slippery fluids further but at the same time lavishing on my cock the most intensely tight and pleasurable massage. My mind was again blown away by what I was doing. My lovely Jessica was urging me to take her anal virginity whilst her horny naked friend slowly licked her pussy. It was extreme!\n\nWith her knees tucked up to her breasts and ass and pussy pushed up to greet me, I doubt if I had ever seen anything more lovely and erotic as Jess willed me on to gently fuck her tiny ass. Yazmin now moved her head upwards to give me the full view of Jessica's perfect pussy and Yazmin's mouth was soon biting on Jess' earlobe as one hand remained on her belly pinching and caressing, moving back down slowly to Jessica's clitoris to softly stroke her engorged button in time to my delicate and gentle thrusts into Jessica's narrow channel. \"It feels so good, Steve!\" she cried and with that her guiding hand left my cock and she used both her hands to pull on her knees to make herself even more exposed. I savoured the sight as my cock continued to slowly rock back and forth into her tight opening, senses alive to the beauty and sweet friction that infused deep erotic heat all over my body. \n\nAfter drinking in this lovely vision for several minutes, I had to kiss Jess. Moving one leg at a time, but keeping the tip of my cock firmly lodged in Jessica's willing ass, I lay down on top of Jess in missionary position so that I could kiss her on the lips. It took some really careful manoeuvring and I saw a momentary panic in Jessica's eyes but it was soon replaced with a smile as she guessed my intentions and her hands grasped my back as I moved towards her parted lips. \n\nYazmin continued to kiss and suck at Jessica's neck and shoulders as our lips touched and the electric charge of our mutual desire sparked at this new intimacy. As my tongue probed Jessica's sucking mouth, she lifted her ankles and hooked them over my waist but as she did so my cock dipped deeper into her ass and her eyes widened with the sensation. I stopped and studied her face, smiling to reassure her but remaining still to gauge her feelings. \"Don't stop Steve. I want your cock deep inside me. Just take it slow, my love.\" ",
        "And with this her hands went behind my head and pulled my face back onto hers. Her frenzied tongue thrust into my mouth and in time her heels pressed on my back to force my cock deeper still. The sensations in my cock were glorious. With a third of me now inside her, Jessica's muscular walls gripped and squeezed me with a new and distinct intensity so different from being inside her pussy. The super slick feel caused by the copious juices our sex charged bodies had produced made every movement a smooth delight but the tightness and naughtiness of this forbidden pleasure was ineffable. \n\nEvery utterance from Jess further intensified the feelings as she willed me on to ravage her. Pausing her eager assault on my mouth, Jess titled my head and moved her lips to my ear. \"I'm really turned on and relaxed now, Steve so...\" She stopped for a moment and the world stood still as I felt Yazmin's tongue stroking my other ear, her teeth soon nibbling at my earlobe in an action that sent pulses of erotic charge right through my body. Jess continued \"...you can really start to fuck me hard now.\"\n\nMy cocked pulsed at the erotic words breathed into my ear as Yazmin continued to bite and lick at my neck. Jessica again dug her heels into my back to urge me deeper into her tight ass and I was powerless to resist. With one hand gripping behind her shoulder and the other at her waist, I slowly pushed my hips forward to press my cock more deeply into Jessica's waiting depths. She cried out with the first thrust and as I withdrew and again pushed forward, Jessica moaned and threw her head back to relish the welcome invasion. I lifted my head slightly to watch her face as her nails clawed at my back and Yazmin too stopped biting me to watch, enthralled as Jessica's face contorted in a passionate response to being ass fucked for the first time. Her open mouth moaned her delight but Yazmin and I seemed simultaneously to be drawn like magnets to her full lips and both of our mouths descended on her at the same time licking and sucking at her lips, tonguing her and each other in a frenzy of buccal bacchanalia.\n\nMy hips took on a life of their own now as Jess's pleading words of encouragement echoed in my brain. \"You can really start to fuck me hard now.\" I pushed my cock in and out in a slightly faster rhythm and moved my hand down under the base of Jessica's spine to lift her towards me as my other hand pulled on her shoulder to give me the purchase to thrust more deeply. Her moans through the feeding frenzy of kissing and licking urged me on as I started to push my throbbing hardness deeper and deeper into her tight confines. I marvelled at the feeling of all surrounding tightness that this new sensation brought. It felt like every inch of my cock inside her was being sucked and squeezed continually with no abatement. It was a supreme and unforgettable new experience and the start of the slow build to orgasm flowed through me like the first taste of alcohol after a month of abstention.\n\nAgain and again I pushed my cock forward through the tightest cock squeezing channel imaginable and all the time my lovely Jess moaned her consent. I lifted my upper body to gaze on her pretty face, now prickled with sweat and heat and Jessica looked into my eyes and cried out, \"Go on Steve, fuck me hard in my ass and pump your come into me.\" Yazmin too was moved by Jessica's wanton words and she gasped with naughty pleasure and her hand slithered across Jess' sweat-slick tummy to strum once again on her aching pearl. \n\nI needed to see Jessica's pussy again as my desire began to reach its height and I used the moment when Jess started to gasp under Yazmin's expert ministrations to adjust my position once again to kneel, legs parted in front of Jessica's splayed thighs. It proved more difficult than I expected with Jessica's writhing movements and my cock slipped from her ass with much greater ease than it entered. Jessica moaned with what may have been disappointment but she was soon moaning again as Jessica's fingers worked her folds and lips, circling her soaking pussy and frequently returning to her bullet hard clitoris to work Jess into a frenzy. \n\nWith her other hand Yazmin passed me the cherry flavoured lube and with a wink said, \"Just in case, when you're fucking her hard!\" and I dutifully upturned the bottle and let the fluid drip onto my pulsing cock head. With a smile, Yazmin took my cock and slowly spread the liquid around the head and down the shaft before holding her hand out for more. The liberal amount squeezed onto her hand was soon worked into her fingertips and then slowly and deliberately with one hand on Jessica's pubis, fingers swirling around her throbbing clitty, Yazmin moved her other lube-soaked fingers between her pussy lips and I watched in awe as Yazmin pushed her forefinger into Jessica's pussy and her middle finger into her ass, working those fingers in and out slowly and deeply, rapt in concentration.\n\nWe both studied Jessica's reaction which was one of moaning delight. All of her most intimate places being delicately adored at the same time sent her into an inexorable spiral towards orgasm and as her ragged breathing commenced the countdown to ecstasy, Yazmin whispered sexily to me, \"Give her your come now Steve.\" Yazmin withdrew her searching fingers and trailed fingernails upwards across Jessica's quivering belly as she crawled up the bed and deftly tossed her leg across the other side of Jessica's head to present her own pussy to Jessica's lips. \n\nJess groaned her appreciation, \"Oh my love, let me suck you,\" and her moans were soon muffled as her Yazmin lowered herself down to the pussy-hungry lips beneath her. Yazmin faced me as she enjoyed her lover's feverish tongue and I noticed Yazmin had one knee on the bed and the other leg forward so she rested one foot on the bed. I soon saw why as Yazmin used this position to move her hips more freely. As she watched between her own legs, she flexed her upright knee and rocked her hips back and forth so that Jessica's probing tongue went from her clitoris to her anal rose, pressing all the way across the ridges and folds in a slippery dance.\n\n\"Ohhh,\" Yazmin cried out as she directed her own stimulation but then she paused at the height of her move forwards to centre Jessica's tongue right on her anal whorl. Jess licked around it several times and then stiffened her tongue and pushed firmly towards Yazmin's tight centre. My body mirrored the erotic scene as I brought my own cock back to Jessica's waiting rosebud, pressing it to her centre as Jess prepared to tongue fuck Yazmin's ass.\n\nI pressed forward and this time the resistance was less as the tip of my cock pressed slowly into Jessica's ass. At the same time my eyes were glued to Jessica's spearing tongue as it fought to penetrate Yazmin's tight hole. The moment my bulb pressed through the tight entrance to Jessica's portal, her tongue pushed into Yazmin and Yazmin responded with a delighted squeal. \"Oh yes, my love that's it,\" she cried but then as Jessica's outstretched tongue withdrew pearly white drops of come fell from Yazmin's anus, coating Jessica's lips and tongue. My eyes widened in realisation as I knew that it was my come from earlier that was dribbling down on Jessica's upturned mouth. Such an erotic sight and with come so perfectly white that I knew that the girls must have taken some time over hygienically preparing themselves. All that time in the bathroom, of course! \n\nTaking hold of Jessica's buttocks, I pressed my cock deeper inside and again had that amazing sensation of total grip around my cherry slick cock. I watched in fascination as Jessica licked her lips, tasting the familiar flavour of my come and swallowing before thrusting her tongue back onto Yazmin for more. It was a sight I will never forget but after a few moments Yazmin again took charge and sitting back onto both knees for stability she grasped Jessica's ankles and lifted them up to her own shoulders to give me unfettered access to her ass. I noticed the effect of extra lubrication and relished the slippery passage as this time more assuredly I pressed forward into Jessica's tunnel. I started to push my cock smoothly half way into her body then out again, building a steady rhythm that quickly returned me to that glorious road to coming.\n\nYazmin leaned forward and pushed Jessica's legs wider and further back and this immediately caused my cock to squeezed three quarters of its length into Jessica's tiny hole. It was the deepest I had penetrated her and her moans from between Yazmin's thighs confirmed she was still comfortable as more of my length speared her molten depths. It felt exquisite, of course. The slippery friction and tight grip worked my cock along its full length and I found that if I withdrew until just the head of my cock was inside then pressed deeply inwards the feelings were so intense that I knew I would come hard if I repeated it more than a few times. So instead, I focused on really slowly withdrawing and pressing in, revelling in every contour of Jessica's perfect ass as my cock slithered back deep inside her with every slow prolonged thrust. \n\nYazmin's eyes were fixed on my cock as it pressed wide Jessica's virgin aperture and she leaned in to caress Jess' pussy to intensify her feelings. My breathing gave away how close I was to climax and Yazmin was determined to take her friend with me into ecstasy. Dipping her fingers deeply into Jessica's pussy, she then slid them around and up repeated to stimulate every part of Jessica's soaking peach. Paying particular attention to her entrance and the pink prize of her lovely clitoris, Yazmin's fingers danced all over as I continued to push slowly and deeply into Jessica's asshole. \n\nYazmin now skipped off Jessica's face so that I could see all of her body, yet maintained her sensual manipulation all around Jessica's pulsing pussy. Jess' face was red with exertion and passion, her lips puffy from kissing and sucking on her lover's pussy and ass but now she looked directly at me as I pushed three quarters of my length inside her and she gasped her own lust filled abandon, \"Give me everything now, fuck me as deep and hard as you want and flood me with your come.\" My body responded for me as my brain could barely register the sheer eroticism of the moment. I pushed in and out of her tiny little ass with more vigour as she looked into my eyes with pure lust. As Yazmin continued to strum her to oblivion, I began to feel little spasms of contraction within Jessica's muscular grip and her breathing gave away her approaching orgasm. \n\nI knew it was time to let myself go and reach for the greatest experience of my life. I let my hips drift into a natural lust driven rhythm that caused my rod to saw in and out of Jessica's sucking ass with yet more speed and depth. With every thrust I allowed myself further inside her, the intense tightness now sheathing virtually my full length in a slippery journey of blissful ass fucking. I felt the tell-tale ripples of contraction as they squeezed at my aching cock and Jessica's moans of approaching ecstasy drove me on. \n\nClutching at Jessica's taught buttocks, I lifted her slightly as I thrust deeply into her and for the first time I felt my pubis press against her honey glazed labia. The moment I reached this pinnacle of erotic joy, her eyes widened and she gasped, staring straight at me as her chest flushed with red and her hands tore at her breasts. Yazmin's fingers were now centred solely on Jessica's super sensitive clitoris but her fingers moved in slow circles, gradually edging Jess towards release but allowing the white heat of anal union to be the main catalyst for her inevitable climax.\n\nNow that my cock had speared her as far as it would go, I was confident in giving her everything she craved with deep thrusts into her willing body. As I gripped her bottom in my hands I first pulled all but the last inch of my cock out of her before pulling her body onto me as I thrust deeply forward, giving her everything again until I felt the joyous kiss of her pussy lips on my skin. Again and again, getting faster and faster I plundered her devouring ass as she screamed for more. Her lips wide in the gasping joy of oblivion I felt her buck as the first wave of orgasm hit her. \n\nAs Yazmin continued to gently stroke her clitty, Jess lifted her head and looked straight into my soul as her orgasm ripped through her. Her breathing stopped and she froze as I felt the great unstoppable surge of my own come crashing forth like a tidal wave. As I thrust hard and deep just a few more times I then felt her ass squeeze rapidly and uncontrollably around my straining cock and I was lost. Deep inside her, my come spurted out of my cock with explosive vigour. Surge after surge of come pumped from my cock deep into her most private place and all the time the incessant squeezing of the whole length of my cock by her twitching ass muscles drew out and lengthened my orgasm beyond comparison.\n\nMy cock lodged all the way inside her, I could even feel Jessica's pussy twitching against my skin as both her anal and vaginal muscles contracted in unison. I couldn't move or breath as my cock continued to pump come deep into her depths and the sensations seemed to last for an eternity as Jess herself remained still, her ass still periodically twitching and milking every last drop of emission from my bone hard cock. \n\nWith a gasp, Jess finally breathed again and I followed shortly after but even as I withdrew my thrusting member ever so slightly I felt another burst of come erupt and further orgasmic twitches from Jessica's muscular ring. Staring deep into my eyes still, Jessica was speechless but she lit up the room with her smile and I had to kiss her. Withdrawing very delicately from her still tight grip, her ass squeezed yet more come from the full length of my shaft and as the head of my cock popped out I was, for the second time, treated to the erotic view of a few droplets of my come spilling from the beautifully tight whorl of a girl's rosebud.\n\nShuffling up the bed, I joined Yazmin in kissing Jessica's sweat soaked face. We took it in turns to kiss her soft lips and all over her pretty face. There were no words yet. Only the soft gentle kissing within a moment that we silently acknowledged was something exceptional. Something so perfectly erotic and intense that few experiences in our life would ever compare to it. I was in no doubt about this and when eventually we were able to find words, I found my impression was entirely accurate. This was an extraordinary moment I shared with these two gorgeous women and it has brought me joy ever since that they too experienced our night together with a similar sense of life affirming joy. \n\nAfter soft kissing and caressing for several minutes, my guests had one more delightful surprise left for me as they snuggled into my shoulders to settle down for sleep. \"Get some sleep now Steve,\" said Yazmin dreamily. \"You'll need all your energy tomorrow morning.\"\n\n\"What do you have planned for the morning,\" I queried. Jessica nuzzled me and kissed me on the cheek before whispering in my ear...\n\n\"Your turn in the middle tomorrow, my love!\""
    ],
    "authorname": "Estrellita85",
    "tags": [
        "anal",
        "anal virgin",
        "girlfriend",
        "lesbian",
        "lover",
        "loving",
        "surprise",
        "threesome",
        "uk",
        "unexpected"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/when-jessica-and-yazmin-stayed-over"
}