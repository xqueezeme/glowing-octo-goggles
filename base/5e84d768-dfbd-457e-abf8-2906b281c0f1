{
    "title": "Dream Small",
    "pages": [
        "This started off as an attempt for the Valentine's day comp but went its own direction. The romance vs sex ratio is 99:1 so if you're here for a wank, then I'm terribly sorry and suggest you pull your raincoat tight and trudge along. It is also set partly in the throes of world war two and as much as I'm an enthusiastic plastic model builder, please forgive any small errors in times and dates of encounters. I have lived a long and peaceful life courtesy of the men and women who made it possible for me not to remember the intricate details of a horrible time accurately.\n\nLest we forget.\n\nI am also terribly sorry for any French people who may see their language brutally mistreated for the purpose of this tale.\n\nAll rights reserved, etc.\n\nDream Small.\n\n~~~~~*~~~~~\n\n \n\n\"Grandad, I need your help with an assignment.\"\n\nMy daughter Renee is a wildly independent and successful woman and often remiss at staying in touch. I raised her to be that way. Powerful women are paragons in my world. So, contact from my grandchildren is always bittersweet and very welcome. We do a large Christmas thing each year but it's very busy and I miss the one-on-one time I had with them all when they were younger, before Renee and Ben moved north a couple of suburbs and before Drake started clapping his hands.\n\n\"Sure sweety, which one are you? You all sound so big now.\"\n\n\"Haha. Your favourite, silly. Sasha.\"\n\n\"Of course. What are you, twenty? Twenty-three, now?\"\n\n\"Haha. Sixteen, Grandad. Last month. Nice present by the way...\"\n\n\"I clearly gave you the gift of sarcasm, didn't I? That and premium genetics. You should be thankful enough to forgive my forgetful old bean.\"\n\n\"So anyway, old timer...\"\n\n\"Fire away, Sashy.\"\n\n\"It's not really that easy. I have this thing for English studies. Interview narration. You wouldn't get it. I have to interview a family member, record it and then narrate the interview with relevant social and historical facts to be presented as a tape recording.\"\n\n\"A recording you say?\"\n\n\"Yup. We're allowed to borrow the school equipment or use our own if we have it.\"\n\n\"I'll be a star. Do I need a moustache and a cane?\"\n\n\"No, silly. Just some time to sit still and talk with your favourite granddaughter.\"\n\n\"Sounds great. You want to hear about how I lost a testicle in France?\"\n\n\"Eww! Grandad, gross. I don't want to hear about your balls. I want to make it a love story. I want to ask you about Grandma.\"\n\n\"Oh.\" She died a few years ago now and left a gaping hole in my world.\n\n\"Is it okay? You're not too sad still? Mum said it might be a bit rude to ask. It's okay if you can't.\"\n\n\"Sweety, so long as you don't mind seeing an old man cry a bit now and then, I don't mind. It would be good to tell our story. The real story, anyway.\"\n\n\"So, I'll need to stay the weekend. Is that okay? That way we can chat in bits and pieces and take breaks when we need.\"\n\n\"Do you want me to pick you up?\"\n\n\"No, Grandad. I'll take the train. You're only a few stops away. See you Saturday.\"\n\n\"It's a date.\"\n\n\"Mum says I have to cook and clean for you to say thank you. I'll see you at around nine on Saturday morning. You better kick all those old girls from the nursing home out before I get there.\"\n\n\"Cheeky sod. They don't stay over anymore. I'm sick of them wetting the bed.\"\n\n\"Eww... Now I know where Mum gets her overshare from. See ya.\"\n\n\"Bye Sashy.\"\n\nAs I hang up, I scratch my one remaining testicle and look at the photograph above my desk. She's so young and beautiful. Tall and smiling. Full of hope and kindness. My Jeanie.\n\n~*~\n\nI've mowed the lawn and setup the spare room. I've washed my car. Not that I drive much anymore. It's an old Kingswood. A HQ. Lorna loved the colour, that's why we got it. It's deep Maroon with a cream vinyl roof. It takes me to the RSL on Friday evenings, church on Sunday mornings and to the shops every other Thursday when my pension comes in.\n\nMy arm hurts a little when I'm finished drying it with the chamois. That bastard got me a good one. Right through the joint. They were going to take the whole arm. Jeanie laughed when I refused the surgery. \"Then how will I properly see to myself?\"\n\n\"You'll just have to find a kind lady to assist.\" She smirked and shook her head. For a moment, I'm back in that hospital with the smell of vinegar, decay and despair.\n\n\"Hi Pops!\" Young people always look so busy going nowhere. Far too much energy in every moment.\n\n\"Hi yourself. How bloody long are you staying, kiddo?\" She has a large suitcase and an overnight bag.\n\n\"Oh, that's the recording equipment. Mum's picking me up on Sunday afternoon. Are you ready?\"\n\n\"Hell no. I have no idea what to tell you or how your gizmo's even work.\"\n\n\"You leave that to me. I've got everything organised.\" She stops bouncing on the spot long enough to grab my beard like she did as a tiny child and pull me down so she can kiss my cheek. \"Give me thirty minutes to unpack and setup. I'm on the sleepout right?\"\n\n\"As usual.\" The sleepout is an enclosed veranda that I built in when the boys were too big to share a room with their sister anymore.\n\nSetting up some sprinklers with their 'chak chak chak' chorus on the freshly mown lawn to prevent it burning in the midday sun, I am glad for family. Lorna and I had all sorts of plans for my retirement. Most included travel through Europe so I could show her all the places from my stories.\n\n\"What happened to your t-shirt? Half of it's missing.\" I ask her when I head inside. She's all set up in the lounge with a big tape recorder on the coffee table.\n\n\"Ha Ha, old man. Get with the times. It's a boob-tube.\"\n\n\"A boob-tube? Your mother lets you wear it outside?\"\n\n\"Grandad it's nineteen eighty-eight, not eighteen eighty-eight.\"\n\n\"Where did you get breasts from anyway young lady? Goodness me, I better go and see if my old smelly works still. There'll be boys lined up around the block.\"\n\n\"Eww... I don't want to hear about your old smelly. What the heck?\" She's standing with her hands on her hips looking at me like I've grown a second head.\n\n\"Ess. Em. Ell. Ee. SMLE. Short magazine lee enfield. My old three-oh.\"\n\n\"Oh, a gun. I get it. Got anything to drink Grandad?\"\n\n\"Um... Some ginger ale in the fridge.\" I keep it to mix with my scotch. There's a theory that the ginger in it helps with gout.\n\n\"Make yourself comfy pops. I'll get us a drink and we can get started.\"\n\nWhen she returns, she puts the ginger ale and a half bottle of Teacher's Scotch on the table.\n\n\"Mum said this will get you talking. But only one bottle a day.\"\n\n\"Ok so where do we start. I'm not very good at this talking stuff. I'm better at shooting things and drinking whiskey.\"\n\n\"I'll turn the tapes on and then introduce us and lead you through. Don't worry, just be yourself and try not to swear. I can edit out bits and pieces later, so don't panic if you do. Okay?\"\n\nI nod and sip my whiskey. She's a little shy with the scotch and generous with the dry but it's still morning so that's probably a good thing. My granddaughter reminds me very much of Renee at that age, both in looks and in her business-like manner. I'm a proud grandfather and watch smiling as she presses the play and record buttons at the same time.\n\nShe counts off five seconds for the leader and starts speaking, \"My name is Sasha Jean Doherty. I am a year twelve student at Brisbane Girls Grammar. I am speaking today with my grandfather. Grandad, please tell me your full name and date of birth.\"\n\n\"Now?\" I ask.\n\nShe shakes her head and laughs. \"Yes pops, now.\"\n\n\"Sorry. You can cut that bit out right?\"\n\n\"Yes. So, go ahead, your name and date of birth.\"\n\n\"Well, that's easy. I've been called many things overtime. Scissors, Ace, some you'd definitely have to edit out, but my real name is Clarence Charles Grace. I was born to Edward Charles Grace and Norma Estelle Grace, nee Murphy in the Charleville hospital on the Eighth day of February, nineteen twenty-three. That makes me sixty-five years young, although most days I feel about a hundred and sixty-five. How was that?\"\n\n\"Very good pops. Um. I, wait...\" She picks up her notepad and scans it quickly, ticking off something. \"So, today I want to ask you some questions about what it was like growing up and your love affair with Grandma. Can you tell me a little about growing up first?\"\n\n\"Well okay. I suppose... Your mum has never really said anything to you?\"\n\n\"Nope.\"\n\n\"Well life was a bit tough when I was born. I was a war baby. Dad came home in nineteen-nineteen. He and Mum were together when the war started and when he came home, they got busy making babies like lots of other soldiers did. I had an older sister Narelle. She drowned in the cattle trough before I remember. Then Peter. He died in Papua New Guinea on the Kakoda. He was a chocko.\"\n\n\"What's a chocko, grandad?\"\n\n\"Chocolate soldier, reservist. They shouldn't have even been sent there but all our main forces were over in the western front, D-day and all that, you know. Should have been watching the home front all along, I say.\"\n\n\"Sorry for interrupting. Where did you grow up?\"\n\n\"Charleville, initially. You wouldn't know it now, but back in those days it was a major centre for wool production. Dad came back from war a damaged sort of man. He drank too much and he was violent. I remember hiding in a bedroom with all the furniture pushed up against the door. He broke it with an axe and started throwing bricks at us before he passed out. Dad died in a shearing shed accident. They reckon he was drunk and fell from a truck.\"\n\n\"Wow. Um... Did you ever tell Mum any of this?\"\n\n\"Nope. She never asked and there was no real call to.\"\n\n\"You said, 'Charleville initially'?\"\n\n\"Yes. After Dad died, Mum moved back home to her parents place in Proston. It's a little town out in the sticks, past Kingaroy. She married a man called Edward Turner. He was more a father to us boys than Dad had ever been. He was kind to Mum too. He died from a snake bite when I was eleven. Mum did her best to keep the farm going but by the time I was sixteen she gave it away. Moved back to her parents place in Newfarm and worked in the wool stores.\"\n\n\"What were you doing?\"\n\n\"It was different then. At sixteen I was pretty much my own man. Peter had moved to Hivesville, nearby and was working in a sleeper mill. Ah, that's where they cut the hardwood timber for the railway line sleepers. The things the track sits on. You know?\"\n\n\"Yeah, kind of.\"\n\n\"I left school after Edward died. Mum was struggling, so I tried to find work. It was hard to find work at eleven, but I figured the best place to look was the post-office. Mrs Milton ran the exchange. Not many people had phones back then, but she heard every phone call that anyone with a phone made. Mr Milton was a barber, and he heard every story every man in town told while they got their hair cut and beards trimmed. If there was work to be had they'd know where.\"\n\nMy mind wanders for a moment remembering how I felt. I was a timid sort of kid and it took a long time to gather the gumption to talk to Mrs Milton. Mum had given me sixpence, so I sat on my haunches across from the post office and ate the bag of lollies and drunk the bottle of raspberry soda I'd bought and tried really hard to think of what to say.\n\n\"You okay, pops?\"\n\n\"Just remembering.\" I sip my glass of whiskey before continuing. \"Mrs Milton listened to me. Not much more than a little boy, I was. Then she frowned at me and said, 'Unfortunate business with your father, I'm sorry.' Then she wrote something down and told me to take it to Mr Milton. He looked at the note, looked at me then asked, 'You know I can't read, right?' I didn't, but I could read well enough from the little school I'd done. I took the note and read, 'Give this boy a haircut. He looks like a girl. He is your new apprentice. I'll work out the details.' So, I had my hair cut in a proper barber's chair. It was the first time for me. I started work the following week.\"\n\n\"What, at eleven years old?\"\n\n\"Yep. I earned a pound a week to sweep the floor, polish boots, sharpen razors and run telegrams for Mrs Milton from time to time. It was good money for a kid back then. Hell, Peter was only getting two pound a week at the sawmill and he was thirteen.\"\n\n\"Child slavery. I wouldn't work for a dollar a week.\"\n\n\"Back then I was giving Mum ten shillings out of my pay. Half a pound. It bought all the groceries for a week. It was a lot of money back then. By the time I was sixteen, I'd finished my apprenticeship and had my own chair in the barber shop. I was making a lot of money and had not much to spend it on. I'd saved about just short of five hundred pound in a big old bookies bag that used to belong to Edward. That was around the time Mum moved home.\"\n\n\"That must have been hard, living alone at sixteen.\"\n\n\"Not so much. I missed Mum. But we were a lot more independent back then than kids now. She told me when she left that the farm was mine and Peter's. She'd keep paying the land tax until we were old enough to have our names put on the deeds. Then we could sell it or work it. Peter sold me his share.\"\n\n\"You used your savings?\"\n\n\"Not all of them. He was spending a lot of time on his days off, in Brisbane. There were girls down here. Um... showgirls and dancers...\"\n\n\"Ah. Like prostitutes. It's okay, Grandad. Look, for the purpose of this, no filters okay. You talk honestly and candidly, and I'll beep out or edit. I'm a big girl. You might have been more independent back then, but we're a little more worldly these days.\"\n\n\"Yes well, not hookers as such. Just showgirls and they didn't mind fleecing young men. Peter was convinced if he could get a car and move to Brisbane that one particular girl would be a prospect for marriage. He was in love, the silly fool. He asked me for a hundred pounds. Old Murray Livingston had a v-eight ford; a thirty two model for sale. It had a couple of kangaroo dents in the fenders but was good mechanically. I gave him a hundred and fifty, so he'd have a start in Brisbane, and he promised no claim on the farm.\"\n\n\"How big was the farm?\"\n\n\"Two hundred and forty acres. Not huge. It was two dairy properties. When Edward was alive, he share farmed it with another couple. I figured I'd sell it when I was twenty-one. But then that Jansen fellow dropped his code book.\"\n\n\"Code book? Was he like a spy?\"\n\n\"No, a stock and station agent. He bought and sold cattle. You need to understand that not many people had phones back then. Technology was evolving and geographically Australia was a big place to try and put infrastructure into. The cattle buyers relied on the telegraph system to get urgent messages through and they needed a code system because fortunes were made and lost on the information they sent by telegram. Who's buying, who's selling, what price, etc.\"\n\n\"Telegram?\"\n\n\"Um, kind of like an old-fashioned fax. Can we stop for a moment? I need the toilet and I'll find you an encyclopedia, so you know about telegrams.\"\n\nI did indeed need the toilet. Scotch in the morning after coffee insisted that I was an older man than I felt. Watching her read the Britannica entry on telegraph systems, I realise exactly how far we've come technologically. I still want a flying car though. Cartoons promised us that by the eighties.\n\nShe turns the tapes back on and asks, \"I get it about telegrams now. But why the code? Why didn't they just call and talk directly to each other.\"\n\n\"Well, back then when you placed a phone call, an operator plugged your line into another line and put your call through. That operator spoke to you as part of the process and could, (often did) listen in to your conversation. Trust me on that one. There was not a single phone call went through the exchange that Mrs Milton didn't listen to. The telegrams though, you sent a coded message, and it was private.\"\n\n\"Ok, so we're getting a little off track here, pops. Why is the code book important?\"\n\n\"Well, with that code book and the scraps of paper that Mrs Milton wrote the telegram requests on, I learned a lot about the cattle industry and prices. It was nineteen thirty-nine and some phoney war had been declared. Germany invaded Poland and everyone declared war but wasn't doing very much about it. The Australian government was poking around trying to establish available resources for beef and kidney beans.\"\n\n\"Er? What for?\"\n\n\"Because if war actually broke out, the commonwealth would be spending a fortune on beef imports and on bean imports. An army marches on its stomach, as the old saying goes. The ration packs are mostly bully beef and baked beans.\"\n\n\"Right. So...\"\n\n\"So, I started buying a lot of bean seed. I got the old Howard tractor going and worked cultivation. I fixed fences and bought fifty breeders. I also bought the neighbours blocks, another two hundred acres.\"\n\n\"At sixteen?\"\n\n\"Yes. Life was different. I needed Mum's signatures and she visited now and then, but technically it was all mine.\"\n\n\"Right. A little spotty faced tycoon!\" She giggles.\n\n\"Pretty much. I've always been a short sort of man and yes, I had my fair share of pimples back then.\"\n\n\"So how does this have to do with Grandma?\"\n\n\"It doesn't really. You asked what life was like.\"\n\n\"Oh. Right. So, let's finish this bit off and take a break. I could use a swim.\"\n\n\"Right well I guess the long and the short is that war did get serious. The Germans took France and launched a devastating air battle with Britain. By nineteen forty-one, I'd sold my seed stock that cost me a hundred pound, for almost a thousand and my breeders had produced a hundred head of cattle that I sold at nearly twenty pound each.\"\n\n\"Quite the teenage entrepreneur, Grandad.\" She looks impressed.\n\n\"Yup, but then came conscription. In 1942, I boarded a train for Brisbane and rather than sign up for the CMF, I volunteered. With my smaller build they sent me to the RAAF and off I went to England. The Four-Fifty-Third. Spitfires. I was almost nineteen years old and flying missions over Germany. Escorting bombers mostly, although I did a little recon and home defence as well. That's how I got my shoulder injury and lost a man in action.\"\n\n\"What? A man in action?\"\n\n\"My testicle. Shrapnel through the fuselage. An inch either way and I would have either lost my dick or got my femoral artery. Personally, I'd have preferred the femoral and a swift death to losing the captain.\"\n\n\"Oh my god, pops. I think we'll leave it there. Haha.\"\n\n\"Oh shit. Sorry, I forgot. You can edit that right?\"\n\n\"Maybe I'll leave it. Mrs Svenson will get a giggle.\"\n\n\"Right then.\" I watch as she turns off the tapes. \"Pool time for me. What are you gonna do?\"\n\n\"I might join you Sashy. Hot in here.\"\n\n\"You could turn the air-con on.\"\n\n\"Bloody thing costs a fortune, it's not that bloody hot. Hot was Egypt. That was hot.\"\n\n~*~\n\nWatching the beautiful healthy young grandkid swim laps so strongly and fluidly makes me happy for her peace filled experience of our country. She's tall and healthy due to good nutrition and antibiotics; luxuries my generation didn't have as children. She swims with power and grace courtesy of training and culture. Not at all like when I learned to swim in the freezing waters of the Seine.\n\nRenee was so patient. So, kind and encouraging. It was her coaching at that simplest stroke, breaststroke, that got me out of France alive. Every evening we would black ourselves with soot and sneak down to the shallows where we'd strip naked and she did her best to teach me to swim. I panicked at first. I blame an unremembered response to my sister's drowning.\n\nBut slowly, I learned well enough to cross the river against its slight current and return. I was rewarded each evening with her body. The risk of being out after curfew, the exhilaration of the cold waters and the sneaking through the dark, the fact of her offered body, the fact of her offered life inspired our passion.",
        "To be caught harbouring me would mean her death. To be caught out after curfew with an allied pilot... She cried out my name as I entered her each evening. She sobbed it again when I withdrew spent. We both knew this could come to nothing. We both knew I would leave.\n\nHer namesake's daughter now swims as Renee taught me all those years ago. Steady, strong strokes that won me my life and by extrapolation this young woman's.\n\nRenee often visits my thoughts. She had no reason to assist me. She would have been much smarter to have left me hanging in the chestnut tree beside her house and to notify the occupying Germans. But for some reason, when that ak-ak exploded, destroying my controls and I ejected the canopy to bail out ungracefully, landing unconscious from blood loss, less one testicle in her tree, she cut my parachute down and hid me in her wine cellar.\n\nIt took weeks before I could walk without pain. Two months before she invited me into her bed. A further five months before she declared me fit enough to attempt my return to Britain. And those five months... I didn't want to leave. We made love in the house through the day and she taught me to swim by night and then we made love again. She had long since given up on the Lysol douches and I knew she was having my baby when I kissed her goodbye to begin the hundred-mile trek from her farmhouse outside of Rouen to Calais on the coast.\n\nI often wonder, even more so now as I watch my grandchild, what our baby would have looked like. It ran through my mind all night as I swam through the channel toward the moonlit cliffs so far away. My heart urged me to turn around. My mind told me it was futile and would lead only to her and my unborn child's most certain death. I swam toward the future I had promised her I'd remember her in.\n\nPerhaps I'll spare my little Sasha that story. Perhaps I'll tell Monty one day. My eldest son. He lies somewhere over in Vietnam. I visit his memorial now and then and talk to him about life. He was named after the Montgomery Fitzgerald, a fishing vessel who's watch somehow saw me splashing slowly through the ink black ocean and pulled me aboard. Why trawlers would brave u-boat filled waters spoke of need for food, not so much of bravery, but I was in their eternal debt.\n\n\"Grandad?\"\n\n\"Darling?\"\n\n\"What? Are you ok?\"\n\n\"Just remembering things. You make me very proud Sashy. Remember that. Thank you for this trip down memory lane.\"\n\n\"Are you getting in, wierdo?\"\n\nI do. My eyes are leaking. I rub at them and pretend it's pool water. That was a whole other world away. I wonder if Renee lived and if she ever told her child about me. The man who fell into her tree and madly in love with her. In love with her enough to leave for her own good.\n\nThat afternoon we sit again in front of the tape recorder and Sasha asks, \"So, Grandad. How did you meet Grandma? Was it love at first sight?\"\n\nI'm afraid I laughed rather too hard at that, bringing a frown to Sasha's face. Perhaps she thought I was making fun of her.\n\n\"Oh dear, Sashy. Far, far from it. I remember it clearly though. I was fourteen still, not far from fifteen and almost finished my apprenticeship as a barber. Her family had moved to town a few years earlier. Her father was the local police sergeant. One afternoon I was trimming Col Jansen's beard when she walked into the shop and silenced it instantly. She was probably eighteen at the time and quite a looker.\"\n\n\"She was pretty, Grandad?\"\n\n\"More than pretty. She was tall with a fit but very womanly figure. Her hair was shoulder length ringlets of auburn that glinted red and gold where the light hit it. Even without makeup, her skin was flawless and a healthy creamy complexion with a glow of pink to her cheeks. Her lips I noticed first. I was very shy around girls, having never known a sister. When she spoke, I was frozen in place, scissors like this at old Col's beard, staring at her lips.\"\n\n\"What did she say?\"\n\n\"She spoke directly to Mr Milton, ignored me and everyone else completely. Her voice was steady and clear. 'My father requires your services', she told him. 'Then your father will need to bring his hair to me.' 'I'm afraid that's out of the question. He's far too busy to leave the station today and he has the inspector arriving tomorrow. You do know who my father is?' Well, Mr Milton put down his clippers and folded his arms across his chest as he did when he was about to become very angry.\"\n\n\"Oh no. Did he tell her off?\"\n\n\"He watched her for a very long moment then said, 'It's customary for people to attend my shop. I don't offer house calls. Perhaps you could negotiate a rate with my apprentice.' I was a little surprised. I did attend some older folk's homes by personal arrangement from time to time, but I'd never been told to negotiate a price. Often it was gratis on account of Mrs Milton's generosity.\"\n\n\"So, did you agree? Is that how you got her to like you?\"\n\n\"Hardly. I looked her up and down and said, 'I guess I could do it for three bob'. Now, you need to know that Mr Milton, an experienced barber only charged two shillings for a shave, shine and shearing; the works. For an apprentice to ask three-bob was a little cheeky, but for a person to demand a home visit was also a little cheeky as well. Mr Milton smiled at my reply and I set about Col's beard again like it was nothing out of the ordinary.\"\n\n\"How did she take it?\"\n\n\"She put her hands on her hips and said, 'Well I never!' and straight out left. Mr Milton shrugged and we watched her storm off up the road. 'Pretty thing, if she ever got down off that high horse,' Mr Milton joked. She was back in twenty minutes with an envelope that she stuffed furiously into my hand without saying a word. When I opened it there were three shillings and a careful hand had written, 'Bring some parade gloss, too please.'\"\n\n\"Would you like another Scotch Grandad?\"\n\n\"Sure, let's get some sandwiches too.\"\n\n\"I'll make them. You sit.\"\n\n\"Thanks Sashy.\" I watch her leave and there's a skip to her step similar to her Grandmother's all those years ago. That afternoon as I followed her haughty stride up the road to the police station, I found myself staring at Lorna's hips and the shape of her bottom under the curt knee length skirt. I won't be telling young Sasha too much about my imaginations. She returns in a moment and sets a plate of ham and tomato sandwiches next to a slightly more generously mixed scotch.\n\n\"So, Grandad.\" She presses the tape recorder buttons. \"You accepted the money and cut her father's hair?\"\n\n\"Indeed. She wouldn't speak to me at all, just walked in front of me all the way up the hill to the police station.\"\n\n\"Doesn't sound very much like the beginning of a love story.\"\n\n\"Oh, but it was. Just not with her.\"\n\n\"Who then?\"\n\n\"Look the thing about old men like myself is they like to tell the whole story and they wander off down a lot of side-tracks as they do it. I'm sorry if it's a bit frustrating. I'm just trying to remember things as I go.\"\n\n\"That's okay. You were following her...\"\n\n\"Indeed.\" I smile remembering the swing of her hips. \"Ahem. Her father was a pleasant man. Very businesslike and dignified. He had me shave him clean and trim his hair into a very short back and sides as was common back then. I polished his boots until you could use them as a mirror, and he regaled me with police stories the whole time.\"\n\n\"What about Grandma?\"\n\n\"She took off the moment she introduced us. It wasn't until I was nearly finished that I heard giggling and thought maybe she'd returned. Instead, Sergeant Sullivan called out, 'Jeanie? Make yourself useful girl and bring this young man and I some soda.' Now, I hardly ever had fizzy drinks back then. There was a cordial truck that came to town once every now and then and the shop stocked some too, but it was sixpence a bottle and I was saving money.\"\n\n\"Who was Jeanie?\"\n\n\"Jeanie was the sweetest girl I'd ever met. She looked much like your Grandmother just a few years younger. The same age as me. She blushed furiously when she brought us our drinks and the Sergeant smiled at her and asked, 'What is it, dolly?' That was his pet name for her. 'Mother says that this boy does girl's hair too.'\"\n\n\"Did you? You were a barber. Don't barbers just do men?\"\n\n\"Barbers did a lot more back then. There was a nurse stationed in town but no doctors. Mr Milton had been a medic in the Boer war and the nurse used his experience to help with things like sutures and setting bones. Little things. I got good at that too. And there was a lady, Mrs Stringer who came to town once a week and used the spare chair in the barber shop to do women's hair. She was very kind to a shy country boy like me and because I couldn't take work on those days, Mr Milton had me assist her with tints and styling and so on.\"\n\n\"So, you did do girl's hair?\"\n\n\"Mostly children's and some old ladies. I was still learning. It was very different to clipping and trimming. But I was getting fairly good.\"\n\n\"Did you do her hair?\"\n\n\"Well, yes. Her father asked me if it was true and I nodded, 'Some. Nothing fancy.' He then smiled at me and told her, 'Well Dolly, this young man doesn't do home visits, you will have to negotiate your own rate with him.' 'I have a shilling. Will that do?' She asked me and she could have offered me a cup of tea and I would have said yes. Her blush had my heart all aflutter and I couldn't speak well. I was terribly shy. 'Well, boy?' the Sergeant asked. I nodded and had her sit in his chair. I used the sheet I'd used on him and draped it around her shoulders and asked her what she wanted done. As I brushed at her hair, I noticed headlice. Headlice were very common back then and treatment was simple for men and not so nice for women.\"\n\n\"Nits?\"\n\n\"Yes. It was awkward to say the least. With men, I just told them and shaved their heads clean. 'Miss Sullivan. First, we need to wash your hair. Is there a sink? A tub?' She led me to the bathroom and I put a chair in front of the basin. I asked the Sergeant for some kerosene and a towel. Washing hair was not very common back then. There was only soap.\"\n\n\"No conditioner? No shampoo?\"\n\n\"Well, there was a liquid soap that we used at the barber shop. And oils we used for men's beards. For women, Mrs Stringer used a hydrolysed blend of paraffin and lanolin as a treatment. I had none of those things with me so, used some plain soap and water to wash her hair. It was outrageously familiar for a little country town boy. I was so damn nervous touching her. When I was done, I massaged kero into her scalp and left it wrapped in a towel for a while. She could feel them biting as they died.\"\n\n\"Gross.\"\n\n\"She was so embarrassed. As we sat and waited, she asked me to hold her hand. 'I'm so sorry. The other kids have them all the time and it's terrible.' 'It's very common. If you come to the shop through the week after school, I have some special oils that will help.'\"\n\n\"Did you?\"\n\n\"Tea tree and eucalyptus oil. They were expensive then. I washed her hair again after she said they finished wriggling and then I combed it. It took a long time. Her mother came and checked now and then. She was kind and extremely strict like the Sergeant. The Kerosene made her hair easy to comb and when I had dried it sufficiently, she asked me to cut it to her shoulders. Her mother approved and I sat her back in her father's chair and did my absolute best to emulate Mrs Stringer's techniques. When I was done, I held mirrors for her, and she was so excited.\"\n\n\"You can't even go to the hairdressers if you've got nits, these days.\"\n\n\"Like I said, times were different. Lice didn't care if you were rich or poor. They were common. She held out her shilling to me with a beaming smile and I shook my head.\"\n\n\"Was it more expensive because of all the work?\"\n\n\"No. I smiled right back and told her my price had changed. 'The going rate for any service you require from now on, is a kiss on my cheek.' Her father laughed, 'You are a stiff negotiator, I'll give you that.' She blushed furiously but pocketed her handful of saved coins and leaned up to peck me chastely on the cheek. 'Paid in full.' I told her and said, 'Stay away from lighters and stoves until the smell fades. Come and see me at the shop anytime you want braids or styling. The price is set and will remain in effect.\"\n\n\"You bloody charmer.\" Sasha slaps my arm. \"This is great. Do you want another scotch?\"\n\n\"Yes please.\" I tell her rattling the ice cubes in my glass.\n\n\"So, what about Grandma?\" She asks as she pours another drink.\n\n\"Well, not much really. Jeanie came to the barber shop at least every other day and got her hair braided or styled before school and every time she made me blush by kissing me on the cheek, to the jeers of Mr Milton and any customers. Lorna visited one day and told me in her best haughty tones that I could do her hair for her. 'I need a trim and maybe a style like you did for Jeanie. I'm not kissing you on the cheek though, and I'm paying no more than a shilling.' 'The price is different for you.' I told her. 'You'll kiss me, but it will be on my arse.'\"\n\n\"Oh god, Grandad. How did you two ever get together if you hated each other so much?\"\n\n\"Well, we've got all weekend. Why rush a good yarn?\"\n\n\"I'm glad I bought extra tapes.\"\n\n\"Lorna was married that year. Jeanie told me she met the man at her debutante ball. He was a cattle grower from Darr Creek area. A Hemming or Hemsworth or something. Had a large holding and was a little older. Jeanie was excited as she was 'coming out' later that year. I was sixteen then and so was she. The kisses had moved from my cheeks to my lips and we ignored the whistles and japes of Mr Milton, but she still came every day to the shop. I was her partner for the deb ball. I bought a suit and tie and good shoes. She looked like a bride and I told her one day I would make her mine.\"\n\n\"Why aren't boys like that these days? They just try and touch your boobs and stuff.\"\n\n\"Things were different then. There were plenty of those sorts of characters back then though too, I imagine.\"\n\n\"Can I have a scotch too, pops?\"\n\n\"A single finger, hey?\" I watch as she measures hers with a finger against the tumbler and remember the last drink I shared with Jeanie before I boarded that train to Brisbane in nineteen forty-two. She was eighteen then and we had promised her mother not to take things any further than kissing until we married. That had been an awkward conversation.\n\nMy last memory of her as I set off to war and perhaps my death was of her hand snaking down inside my pants as it had done a few times previously and her lips whispering against my ear, \"Bring my little Clarry home safe.\" Perhaps that might be a thing to keep private from the tapes.\n\n\"So? Where were we, pops? You were madly in love with Grandma's sister. Sheesh. How did you end up ever having kids and grandkids? This is not what I expected at all.\"\n\n\"Life's a bit funny like that kiddo.\"\n\n\"So, where were we?\"\n\n\"War.\"\n\n\"War?\"\n\n\"Yup. I'd made a lot of money from my beans and cattle and was getting ready to ask Sergeant Sullivan for Jeanie's hand. Then conscription came and I didn't want to be seen as the sort to have to be drafted so I volunteered. Jeanie cried. Her mum cried. The Sergeant was proud but urged me not to be a hero. Then away I went. Seven stinking hot hours on a boring train to Brisbane. Off to the air-force. Training. The war.\"\n\n\"Where did you train?\"\n\n\"Initially at EATS in Bankstown. It was a training scheme to feed pilots to the empire. I saw a little bit of flight in Malaya but was then sent off to Edinburgh.\"\n\n\"Did you ever kill anyone?\"\n\nI looked long and hard at my Granddaughter. I had. I had killed men. Until you do it, it's a thing that's deplorable. But in war, it's...\n\n\"Sixteen confirmed air kills. Three of those were bombers, so I don't know how many crew. Unknown ground casualties. Two German's on the way to Calais. It's not something I'm proud of, but it was my job.\"\n\n\"I can't believe I'm asking this, but is that how you lost your... um nut, your testicle?\"\n\n\"Haha. Yes, it is kiddo. I was flying recon over Paris. There were troop movements suspected and tank reinforcements arriving. I was flying a specially built spitfire that had long range, high-altitude and photography capabilities. On my way home I dropped low over the Seine to avoid radar. It was a risky manoeuvre. If you got really low, you avoided coming to the attention of the intercepting Nazi planes, but you opened yourself up to antiaircraft guns. I took a hit and bailed out. Landed in a lovely French woman's back yard.\"\n\n\"So, you were okay?\"\n\n\"Nope. Not at all. I had lost one testicle and a lot of blood. I was stuck up a tree in my parachute harness in occupied France while Nazi's scoured the area looking for the plane they'd shot down. The woman cut me down, hid me and cared for me until I was well enough to try and get home. She risked a hell of a lot by hiding me. They would have executed us both if I'd been found.\"\n\n\"What was she like?\"\n\n\"She was an older woman. Thirty something. Her husband and son had been killed by the Nazi's. She fed me, hid me and taught me to swim.\"\n\n\"To swim? Didn't you learn that at school?\"\n\n\"Not back then.\"\n\n\"Why swim?\"\n\n\"I had to cross the channel somehow. I walked to Calais, paid a fisherman to smuggle me out as far as he would, then slipped overboard and swam toward the cliffs. It was a long shot, but it was my only chance. An English fisherman found me splashing about and took me ashore. Six hours I was swimming for. I was in a bit of a bad way.\"\n\n\"Geez. Six hours? I hate doing the four hundred even.\"\n\n\"Well, I had to try. Every moment I stayed with Renee, she was in danger and so was I.\"\n\n\"Renee? Like Mum?\"\n\n\"Yes. She was an important person in my life and that's how your mother got her name.\"\n\n\"Coolies. Ah... Okay, so you got back to England. Do we get to the part about you and Grandma now?\"\n\n\"Nope.\" I laugh at her rolled eyes. \"Nope, this bit's about Jeanie still.\"\n\n\"She was in England?\"\n\n\"Italy. Not far from Foggia where we had moved to support fighting in Italy. Mostly it was Americans but some of us were sent as well. The allies had taken most of the south and Jeanie was working in a hospital there. I didn't know it until I was shot, though.\"\n\n\"You were shot?\"\n\n\"A little bit.\"\n\n\"How can you get shot a little bit? You either get shot or you don't, pops. How did you get shot?\"\n\n\"I had a little tiff with a FW190. He'd been really bothering our airstrip for over a month. He'd sneak in all alone at fairly high altitude which was uncommon for the German planes then he'd drop down low and strafe our birds on the runway. I don't know how many planes we lost to him. So, a few of us were scrambled in rosters. I intercepted him one night. He was flying just below me and I followed him down. Just as he levelled out and started firing his twenty mil's I sent a burst into his engine.\"\n\n\"So, you shot him down?\"\n\n\"They were pretty well armoured. I hit an oil line at least, I think. There was spray and he was good. It was the toughest dog fight I'd ever had. In the end I was firing my twenty mils at him because I'd exhausted my three-ohs. He was well hit. There was smoke and he was slowing. I'd taken a bunch of bullets to the tail and I was having trouble with my controls. He went vertical, stalled and sprayed me with lead before smashing into the air-field. I was able to land. Jeanie was a wreck but we rolled to a stop just before I passed out.\"\n\n\"Jeanie?\"\n\n\"My plane. The Jeanie-belle. That was her last mission. And mine for some time. I woke later in a hospital in nearby Caserta. My shoulder was unusable. I'd taken a 7.9 ml round right through the joint. The smell was the worst. Not me. The hospital. Vinegar and someone had gangrene.\"",
        "\"You caught up with Jeanie there?\"\n\n\"Yes. She was a nurse. The prettiest thing I'd ever opened my eyes to. She saw my name on the intake logs and had herself assigned to me. We were twenty by then. Twenty years old and thousands of miles from home in a miserable bomb-shelled place. I thought I was dead and gone to the afterlife when I opened my eyes and saw her smiling back. She kissed my cheek and I said, 'paid in full' and promptly went back to sleep.\"\n\n\"How? How did she get overseas?\"\n\n\"We talked a lot in the following weeks as I convalesced. She'd signed up for the RAAFNS with her father's blessing not long after I'd shipped out. Her heart was broken she told me, and if she was to lose me, she was going to give her own life in service to helping the wounded. The odds of turning up injured in the same Italian hospital were something that told us fate had a strong hand in our lives.\"\n\n\"This was after the French woman and the swimming?\"\n\n\"Haha. Yes. Jeanie wasn't very happy about the French woman. I'd grown to love Renee in my time in France and Jeanie was a jealous woman. She would scold me and tell me that she hated her but was forever in her debt and thankful for my life. I kept no secrets from her. Life was such a cheap commodity in those times. People died every moment. I wanted her to know my truth.\"\n\n\"So, you bonked that Renee woman?\"\n\n\"For seven months, she sheltered me. At great personal risk. Life was fragile and we sought some comfort in each other's bodies. Yes.\"\n\n\"And great aunty Jeanie wouldn't have been very happy about that from the sounds of things.\"\n\n\"They were funny times, kiddo. When you think you might just die at any moment, you tend to grasp at life.\"\n\n\"I can imagine. So, you and Jeanie? You were a thing?\"\n\n\"We spent all our spare time together as I healed. We both knew I'd be sent back in the air as soon as I was well enough. Our time was precious. One afternoon as we walked at the Royal Palace gardens, she confided in me. 'I don't want to die a maiden.' We made very sure she didn't.\"\n\n\"Ooh Grandad!\"\n\n\"Too much?\"\n\n\"Hell no. I want details!\"\n\n\"Maybe you should leave the scotch alone, Sashy.\"\n\n\"Will not. Tell me. Tell me.\"\n\n\"Darling, I'm not sure.\"\n\n\"Grandad, I'm not a virgin. I know how it all works. Tell me how it went. This is like the most romantic stuff ever. Oh shit.\"\n\nI laugh as she rewinds the tape to just before her outburst and records over the part about not being a virgin. \"Some things, mother doesn't need to know.\" She winks.\n\n\"So spill, pops. Details.\"\n\n\"It was awkward. It still is to think about and more so to talk about with my Granddaughter. She invited me in. We washed. I was very nervous. We stood beside the basin and took turns with the washcloth dabbing at ourselves until we'd cleaned off the sweat and heat. Italy can be a warm place you know?\"\n\n\"It's getting hotter by the moment, pops.\"\n\n\"She knew I'd been with Renee. 'I'm not sure how to-' She started to say, and I silenced her with my lips and drew her down to the bunk in her dormitory. Her skin was pale and perfect. She was so warm and soft and alive. So far removed from the horror of the times. Like some kind of living statue. I kissed her skin and marvelled at her body. 'There's a thing the nurses talk about sometimes,' she said and pushed me away. Then she took my member in her hands and used her mouth on it. I'm not sure... Maybe you should turn this off.\"\n\n\"Uh uh.\" She glared and shook her head.\n\n\"She moved me in her mouth, and it was something Renee had never shown me. I was done in moments and I remember to this day her smile as she drank me down. I wasn't prepared for how much it would hurt her. She pulled me down on top of her and I thrust so eagerly. Just as Renee had shown me. I speared in and she howled blue bloody murder. I was so afraid, laying there inside her as she sobbed and clutched me closely.\"\n\n\"It can hurt the first time.\" Sasha tells me with a knowing smile. \"Not for me. For some girls though. Oh shit. Rewind again.\" I sip scotch as she rewinds the tape and starts us off again.\n\n\"I was mortified. I thought... She spoke through little kisses on my neck, 'Wait, just wait.' And wait I did. Then with a naughty smile and a wink she rolled me on my back and took me like I'd taken her. I had three days leave at the time. I think we ate twice. She was so thin then. No one ate well at the time and we were all so busy. 'Bloody American cigarettes,' she would cough and say when we were sated lying in bed. Everyone smoked back then. Cigarettes and a cup of tea... Staples, at the time.\"\n\nMy scotch is eagerly refilled as I rub my forehead and miss her. I know it was many years ago but sometimes still, I smell her skin and body in that time and place.\n\n\"It was three months before I was declared fit for duty and sent back to the airfield at Foggia and then back to Edinburgh. We wrote frequently but war time mail was unreliable, and we lost contact early in forty-four. Her cough had worsened she wrote, and she was being sent back to Australia. It was the last I heard of her. The Americans dropped the bombs and we had operation overlord and it was all done eventually. I was a bit lost. I didn't know who I was anymore.\"\n\n\"War changed you?\"\n\n\"Maybe. More that I had a way of being. Times to get up, times to go to sleep, flight plans, missions, then suddenly nothing and it was just celebrations and dancing. Drinking and women and all I wanted to do was go home to find Jeanie. It was forty-seven before I returned. There was much to do in the aftermath. Not much got written about that but we flew aid missions and transported workers into Europe for rebuilding.\"\n\n\"But you came home?\"\n\n\"Yes. I stepped off the train in Proston in late forty-seven. I had a suitcase and a bunch of medals and no idea where I was anymore. The town looked different. The people I knew were mostly gone.\"\n\n\"Was Jeanie there?\"\n\n\"Her father had transferred, I learned. Her sister, when I asked at the pub, was living back in town. Lorna's husband had been killed in the pacific. Everyone knew everyone back then. Everyone was touched personally by the loss of friends and family. I visited.\"\n\n\"Grandma. Lorna? Is that when you fell in love?\"\n\n\"Oh, hell no... Oh goodness no. That day... I knocked on her door. I was wearing my uniform; I owned no other clothes. I wasn't showing off. She stood there looking at me the same way she did that first day we met, looking down on me from my own height. There was a little girl, a toddler sitting on the floor in her living room. She scowled and just said, 'You killed her. Get out.' 'Jeanie? Jeanie is gone?' I asked. 'TB. Last year. Get.' That was it. I left.\"\n\n\"Ouch.\" Sasha is crying quietly. \"That's brutal. What's TB?\"\n\n\"Tuberculosis. Curable now. Endemic back then. Her cough.\"\n\n\"Wow. Can we take a break? I'm sad and... Just... I'm having another scotch. Going to call Mum too. I love you, pops. I'm sorry about this stuff. I didn't mean to...\"\n\n\"Kiss on the cheek. Quick.\"\n\nShe does so, and asks, \"Is that why the cheek kisses. All this time growing up. With Mum too? It reminds you?\"\n\nI nod, and I take myself out onto the back lawn where my chair beckons next to the pipe my doctor tells me I shouldn't smoke. I suck deep breaths of Dr Pat's finest tobacco and watch the empty blue sky. I see my friends flying. Their faces visit me. I see my sorties and remember missions. I remember those days in Italy with Jeanie like it was yesterday.\n\n~*~\n\nThe sun sinks low over the range. Reds and yellows fade to pink- and mango-coloured streaks. My scotch is empty, and my heart is full. Full to overflowing. War was hell but it made the heaven of stolen moments so much more beautiful. There are times I can smell them. Renee had a Turkish unguent of sorts that she used on her skin. It was spicy and woody and combined with her own smells to make a heady thing that I catch drifts of these days on forest walks and days when neighbours mow lawns. Jeanie... Jeanie smelled like coal tar soap, tobacco and hospital cleaners.\n\nUntil we made the bedroom. Then she smelled like every woman ever since. Every one that has reminded me of her. Every one that was slightly different but still a little the same. A little bit of Jeanie.\n\n\"Hey Daddy.\" Startles me near my ear.\n\n\"Renny. What are you doing here, love?\"\n\n\"I brought tea and apparently I have some really steamy love stories to listen to.\"\n\n\"Pff.\" I know I'm blushing.\n\n\"You never told me any of these stories.\" She squints hard at me and I shrug.\n\n\"I don't know. Not really dinner conversation.\"\n\n\"Well here.\" She kisses my cheek and hands me another scotch. \"I'll be inside listening to tapes. I love you, old man.\"\n\n\"Love you too, dolly.\"\n\nWe ate tea together as a family, sitting at the large wooden kitchen table where we'd had so many family dinners over time. I smiled at the empty seat at the other end of the dinner table where no one would ever sit; it having been Lorna's place over the years.\n\n\"Tell me more about this Renee woman.\" My daughter Renee tells me. \"You were lovers?\"\n\nSo, I did. In detail. About my embarrassing first time. About her kindness and encouragement. About our occasional close calls with German guards. Everything, including the part about her being pregnant with my child and how hard it was to leave. Renee and Sasha ate and listened patiently to an old man reliving a youthful romance.\n\n\"So you were, what... twenty?\"\n\n\"Just turned nineteen.\"\n\n\"She was your first?\"\n\n\"She was.\"\n\n\"You were something of a late bloomer then, Dad.\"\n\n\"Well yes, perhaps. Times were different. Let's not compare notes though, hey. I know you have children but your still my little girl.\"\n\n\"Grandad?\"\n\n\"Hmm.\"\n\n\"Did you ever think about trying to find her? I could have an uncle or aunt, you know. Aren't you even curious?\"\n\n\"I think about her often. It seemed a little disrespectful to your Grandma though, to go looking for her.\"\n\n\"Grandma's dead.\" Sasha shrugs.\n\n\"Sasha!\"\n\n\"Well, it's true, Mum. And even if she wasn't...\"\n\n\"I think Mum would want you too, Dad. If she knew the story. Did you ever tell her?\"\n\n\"No. You know what a jealous woman she was.\"\n\n\"Well, she's gone now and your too young to stay lonely, Dad. I worry about you. Write down what you know about her for me and I'll get Ben to make some inquiries.\" Her husband works with the Federal Police. He's based at the airport and has some foreign contacts.\n\nSasha gathers our plates and stacks the dishwasher while Renee and I settle on the couch with a glass of scotch. It will be my third today. I take one after dinner as a rule. It was a custom for Lorna and me. There is a news program on and a reporter is talking about the trade fair on Southbank. Expo eighty-eight or some tomfoolery.\n\n\"Renee Arielle Lavigne.\" I write on a sheet of Sasha's paper. It's highly unlikely that anything will ever come of it, so it doesn't hurt to humour the girls. I do a little mental math. \"Born around 1913. Would be around seventy-five years old. Lived in Val-de-la-hay near Rouen in 1942. Child would now be forty-four if living.\" It made me sad to write 'if living' and more that I really knew so little about her. I hoped she lived. And lived a happy life. Because of her, I did.\n\nI pushed the little slip of paper over to Renee. \"Don't expect happy news, love. I worked in Paris for a little while after the war. There was a lot of building work. One weekend I drove out to her farm near Rouen. It was all but destroyed. One wall and the chimney mostly remained. I found a photograph of her but that was all.\"\n\nI expected more quizzing when Sasha joined us but was pleased when she snuggled up beside me instead. They woke me an hour or so later. The couch does that to me.\n\n\"Ben's on night work. I'll take my old room.\" Renee told me and kissed my cheek goodnight. Sasha did likewise and I took myself off to bed. Bed, where I lay for long moments remembering Renee, Jeanie and Lorna before slipping into dreams of those times.\n\n~*~\n\nI'd been up since five, as usual and had breakfast on the table for my guests. There's a little shop about a kilometre away and of a morning I walk there and back to fetch the paper, a pint of milk and cigarettes. Renee never was a morning person, best left unprovoked until she had food in her belly and a cup of coffee in her hand. This morning I heard them stirring in the house and quietly helping themselves to bacon and eggs. The paper had an entire lift out section on that Expo 88 thing. All I saw was ridiculously long queues and crowds of noisy people. I'm not an anti-social man but it looked like a fantastic place to catch the flu.\n\n\"G'mornin Daddy.\" My big girl tells me. It makes me smile to hear her forty-two-year-old self, call me Daddy like she did when she was a child. She takes my empty teacup and wanders back inside. <br >Soon after, Sasha hustles us into the lounge again and points me at my recliner.\n\nI'm handed another cup of tea and told, \"So, it was late 1947 and you'd just got home from England. Great Aunty Jeanie had died, and Grandma blamed you for some reason. What happened next?\"\n\n\"Well, life went on, I guess. Mr Milton had died. Mrs Milton heard I was back in town. That woman knew everything. She sent a letter to me asking me if I would be good enough to stand at a chair as I used to. The rent for the shop was negotiable but she insisted the town required a barber again. I went back to work. Business was exceptionally good. My farm required a lot of work due to neglect. I was quite distracted.\"\n\n\"Get to the bit about Mum already.\" Renee smiled. \"Sasha only has so many cassettes, old man.\"\n\n\"Yes well. I guess it was early the following year. Time flew by. I had a shop full of customers waiting, it was sale day, and all the cow-cockies were in town. There was a tug at my trouser leg and I looked down to find a little brown haired thing, no bigger than this, looking up at me with big blue eyes. 'Mummy wants to know if you still do girls haircuts, Mister.' Looking to the door I saw a stern looking Lorna watching me. 'I do, young lady.' 'She said she'll give you three bob.' 'You tell Mummy to come back in an hour.'\"\n\n\"This was Mum's daughter?\" Renee asks a bit confused.\n\n\"This was you, dolly.\" I smile at her.\n\n\"No!\" She looks really hurt. \"It can't be. You are my Daddy.\"\n\n\"I am. Now shh.\"\n\n\"Yeah Mum, shut up.\"\n\n\"She came back. She sat watching darkly from the silky oak bench, pretending to read an old newspaper as I sat little Renee up on a board across the arms of the chair. 'What would you like done, dolly?' I asked earning a stern frown from Lorna for the pet name and I thought for the familiarity. 'Mummy says I have split ends and too many knots.'\"\n\n\"Haha, sounds like me alright.\" Laughs Renee. \"Always in trouble for not brushing my hair properly.\"\n\n\"'Ok then, so a little trim and tell me, do you like French braids?' I asked and she shrugged and said, 'I never had any of those.' You were probably three at the time, maybe younger. Do you remember at all?\"\n\n\"No Daddy. Not a thing.\"\n\n\"You sat very still for me. I didn't even have to show you the jar of ears that I kept to show the fidgety kids.\"\n\n\"Jar of ears?\"\n\n\"I had a jam bottle full of dried apricots in metho. They swelled a little and I told the fidgeters that they were all the ears I accidentally cut off wriggly kids.\"\n\n\"Grandad! That's hilarious.\" Sasha laughs.\n\n\"Soon enough we were finished and Lorna came and lifted Renee and her pretty braided hair down from the seat and helped her examine herself in the mirrors. She gave you three shillings and told you to pay me. I shook my head and said, 'the price has changed. Anytime you want your hair done, Miss Hemming, it will cost you the total of one quick little kiss on my cheek.' So, I bent down and you pecked my cheek and for a moment Lorna smiled.\"\n\n\"She was coming around?\" Sasha asked.\n\n\"Not really. What she said next flattened me. She stopped at the door as she was leaving and without even looking back said, 'Her name is Renee Caserta Grace. I expect you for dinner precisely at six pm. Good afternoon, Clarence.'\"\n\n\"Wait... Get fucked.\"\n\n\"Mum!\" Sasha quickly hits the stop buttons. \"What the hell mum?\"\n\nRenee's eyes search mine for understanding. There are tears in her eyes and when I nod, she leaves for the kitchen. We watch as she splashes water on her face and drinks from the tap like she did as a child. She returns with the scotch and pours herself two fingers over ice.\n\n\"What was that all about?\" Sasha asks her.\n\n\"Get back to your story, Daddy.\" She's still teary but puts a hand on my shoulder that tells me we're okay.\n\nWhen Sasha puts the tape back on, she asks, \"So I don't understand what is going on, pops.\"\n\n\"Hmm. I finished work and took my farm truck home. It was an old army blitz. I bathed and put on my suit. The whole time I couldn't believe what I'd heard. Renee... Caserta... Grace... The whole time I thought the little girl was Lorna's to her ex-husband but the fact she had my last name. The fact that she had Renee's first name-\"\n\n\"Get fucked!\" Sasha puts her hand over her mouth and Renee and I both laugh as she puts it together. \"Mum? You're Jeanie's daughter?\"\n\n\"I guess so, pumpkin.\"\n\n\"And Caserta? I always thought that was a dumb name for a girl, but it's where the hospital was when you and Great Aunty... Damn...\"\n\n\"Why wasn't I ever told?\" Renee asks.\n\n\"You were happy. You were mine. We were family. It wasn't important. You were loved. Lorna loved you as a mother. Your brothers loved you as a sister. It was neither important nor uncommon at the time. The war left many families blended and people just got on with it.\"\n\n\"So, what happened then, Dad?\"\n\n\"Well, we ate dinner. It was really awkward. You were tired and a bit bratty after your big day in town. Your Mum tried to take your hair out to brush it before bed and you threw the biggest tantrum. You earned a smack with the wooden spoon and cried yourself to sleep. I helped Lorna wash dishes and then she took a bottle of sherry and two glasses and invited me to sit a while on the veranda.\"\n\n\"The bloody sherry. She loved that sticky muck.\" Renee laughs.\n\n\"She took a while to open up, so I let her. 'I've been terrible to you since the first moment I saw you and I don't even know why.' She told me eventually. 'When you visited some months ago, I was truly evil. I blamed you for taking Jeanie from us. She was heartbroken when you left, and she decided to become a nurse. I blamed you for her leaving us. I blamed you when she came home with that bloody cough. I blamed you when she died. Can you ever forgive me?'\"\n\n\"I shrugged and nodded. She said, 'Renee was born five months after Jeanie got home. Two months before she died. I knew without being told that she was yours. Jeanie told me about Caserta. In FAR too much detail, mind. She made me promise to find you if you came home. She wanted so badly to live and be a family.' She was crying by this stage and I was too. We didn't say too much more for a while.\"\n\nI stand and fetch a glass and ice for myself. I'm almost crying again now as I retell that night.\n\n\"She told me that when she saw I had re-opened the shop, she was afraid. That the war had taken her husband and Jeanie and now she worried that I was going to take all that she had left, little Renee. She told me that she had no idea what to do and asked me to spend some time thinking on what I wanted. I thanked her for dinner and promised I would.\"\n\n\"Damn, if I'd known my school project would start this whole thing... Damn Mum. How are you feeling Mummy? This is big.\"\n\n\"It is big, pumpkin but it's not at the same time. Daddy loved me, Mum loved me and Jeanie would have loved me if she lived too. Nothing else matters.\"\n\n\"You're not going to spring on me that I'm adopted or something, now are you?\" Sasha smirks.",
        "\"Well honey, this is probably as good a-\" Sasha's horrified face cracks us both up before Renee can spring her teasing joke.\n\n\"You bitch. You had me then. So go on, pops. This is like a movie.\"\n\n\"Well, I didn't see your Mum or Lorna for another week. She was living in town in a house she rented from the old Sorenson woman. I heard she was working at the school as an aide. One afternoon there was another little tug at my trouser leg and a little angel looked up and said, 'Can you make my hair pretty again, please?' Lorna was smiling from the doorway and nodded at me. Then a little cutey scrambled up into my empty chair and asked for the board. When we were done, she kissed my cheek and turned around and around in the mirrors. 'Will you do mine, too. Please Clarence.' Lorna asked.\"\n\nI sipped my scotch and watched as Renee refilled both our glasses. She was smiling to herself. I'd been terrified this story would hurt her, but the truth is truth.\n\n\"She sat up in my chair and as I brushed her hair she started crying. 'I'm sorry.' She told me, 'No one has touched me since Grant died.' 'I'm sorry for your loss, Lorna. You'll have to tell me about him sometime. About what sort of man he was. Now what are we doing for you today.' 'Whatever you like. Seriously, I need a change. It's so heavy and dull and just how I feel. Shave it all off for all I care.' I asked little Renee to hand me a magazine from the pile. It was a Women's Weekly, and I asked her to flick through while I brushed out her hair. 'Earmark some pages. I can't do everything as well as Mrs Stringer used to, but I did practice a lot on the nurses in Caserta.' 'I'll bet you did, you pig. Jeanie would have cut off your... yes well. She told me you only had one left to lose.'\"\n\n\"What Grandad? Why are you smiling like that? Is it about your balls?\"\n\nRenee laughs at Sasha's casual reference to my balls. \"Ball. Singular, pumpkin.\"\n\n\"Nope. I'm just remembering that that was the first time I ever heard your Grandma laugh. And her laugh could change a man. Her stern face broke into twinkling eyes and dimples that reminded me of Jeanie in happy times and the sound of it gladdened my heart. After everything we'd all been through over the last decade, laughter was truly precious.\"\n\n\"She found a simple short, bobbed style that looked quite glamourous and more importantly for me, quite simple and when I was finished, I told her, 'Sixpence, if you must pay me.' The shop had filled with a few timber cutters and old Col had found his drunken way over from the pub. She stood and smiled and brushed a little hair from her skirt. 'The price was set long ago, Clarence.' And then she knelt on the floor in front of everybody and kissed me squarely and quickly right on the butt. I was pretty shocked, but not as shocked as my customers. 'Dinner is six, if you remember.' Were the words she told the silent shop.\"\n\n\"I need the loo.\" Renee tells us. \"And it's almost lunch time. I should call Ben and see if he's up and about. Can we pause a little while, please guys?\"\n\n\"Sure Mummy, I need a swim. Grandad won't turn the air con on unless it gets over forty.\" She rolls her eyes at me.\n\n\"Hasn't changed a bit, then.\" Renee demonstrates where Sasha learned the eye-roll gesture.\n\nI take the opportunity to visit the shop up the road. I need toilet paper courtesy of my visitors and a few other things. I like the walk as well. Men think better when they move around, I believe. Renee surprises me by showing up at the shop while I'm there.\n\n\"Hi Daddy. We're staying the night again. Sasha is taking Monday off and I'm chucking a sicky too. I'm getting stuff for spaghetti.\"\n\n\"Ok then.\"\n\n\"Here, give me that lot.\" She takes my trolley and I follow her around. \"Thanks for doing this for Sasha. It must be a little cruel on you. A whole bunch of old feelings and memories. Some truth bombs you couldn't control. I love you, old man.\"\n\nI hand her some shaving cream and a box of disposable razors. \"Not so tough. I miss Mum. I miss them all you know. It's the funny thing about loving women. Loving one and losing her doesn't make loving another one any less. Doesn't make loving the first one less either. I don't know. I loved them each with everything I could. It's a funny world.\"\n\n\"That it is.\"\n\n\"Dad. Is this all okay?\"\n\n\"What do you mean, dolly?\"\n\n\"Well, it feels a lot like we opened an old wound or dug too deeply.\"\n\n\"No. It's things your Mum would have told you had she been here still. In her own time. You know how she was. It's good. Like taking a cast off. Do you remember your arm? The little eighty?\"\n\n\"Very well. Haha. I can't believe I wedged it that far under the tank stand.\" She whiskey throttled that little motorcycle and dropped its clutch and I have no idea how she fit it under the water tank. Thankfully, she only had a greenstick fracture and a big attitude.\n\n\"Do you remember how itchy it got?\"\n\n\"God yes. I think you found me getting ready to take it off with the hammer.\"\n\n\"Haha. Yeah, so carrying these things, waiting for a time when it was okay; all a bit itchy.\"\n\n\"I get it.\" We shop quietly and then she drives me home. My heart is a little worn out. My body not so much. I swim a few laps before dinner and then I join my world in the kitchen. All that's left of it, these days. My daughter. Her daughter. My son, Drake doesn't talk to us anymore. He's joined some hand clapping Christian church and we don't measure up. He'd be thirty-six this year.\n\n\"Daddy?\"\n\n\"Renny?\"\n\n\"No more tonight. Just cuddles. I spoke to Sash. Just cuddles please. Here.\" She hands me a plate of lamb chops and mash and kisses my cheek like she always did.\n\n\"Love you.\"\n\n\"I know, Daddy.\"\n\nI'm asleep in the recliner before I know it. The girls have tidied up and little Sash is on my lap asleep against my chest when her Mum wakes me with a kiss on my cheek and a shake of my shoulder.\n\n\"Shh, Daddy. Bedtime.\" She smiles down.\n\n~*~\n\n\"Where were we Dad?\" Renee asks, passing me the token bribe of scotch and dry.\n\n\"You were going to dinner at Grandma's house.\" Sasha reminds me.\n\n\"Oh. Yes, now that became quite the habit for a while then. A couple of times a week, Missy here would tug on my trouser leg and have her hair done and once a week, Lorna would request a style or some other attention and demand I visit for tea. I'd told her the price had changed and she could stop kissing me on the bum. Now she paid with a chaste peck on the lips and a pretty blush.\"\n\n\"Ooh...\" Sasha smirks.\n\n\"One evening I was bouncing Renee on my knee and we were talking about the recent bull sale and the ball that followed. I was sharing gossip gleaned from Mrs Milton and the shreds I heard from the men I groomed that day. Prices had risen steeply after the war. The wider availability of refrigeration meant that the dairy industry had changed significantly as well and people were- yes well, I can see how interested you both are in the cattle industry, so I'll move along.\"\n\nI sip my scotch and plot a course through this. Clearly, both girls are old enough not to require a sanitised version of events.\n\n\"Lorna put Renee to bed. That was the first night she said it. Lorna was quite disturbed for long moments. Her face etched in a deep frown. 'Goodnight, Dolly,' I told you when you kissed my cheek. 'Goodnight, Daddy.' You said and turned our night on its head. As yet, neither of us had told you that you were my daughter.\"\n\n\"Sheez, pops. That would have thrown a spanner in the works.\"\n\n\"Indeed. Lorna was silent for a time which was uncommon for her. You both know how she just had to fill any quiet moment with chatter.\"\n\nThey both laugh remembering.\n\n\"'We have problems.' She told me as she took the sherry bottle to the veranda. She poured us both a little glass and stretched unladylike in her squatter's chair. 'You have a daughter to raise and no real idea how to do it.' I couldn't argue with that. 'And l have a cattle station still, that I have no idea how to run.' We'd spoken briefly over time about the block near Darr Creek that was left to her when Grant died. His brother was presently agisting cattle on the place in exchange for maintaining the property until she was prepared to take over.\"\n\n\"So that sucks. You guys just did an arrangement thing?\" Sasha asks. \"Hardly Mills and Boons stuff, pops.\"\n\n\"Haha. Well not so fast young lady. She told me, 'Renee needs a family. I need a cattle farmer. You need a mother for Renee.' I hadn't really thought too hard about women since I'd gotten home. Truthfully, my heart had taken a bit of a beating and I wasn't quite back on my feet. We sat and mulled that over for a little while. What she did next absolutely floored me.\"\n\n\"What?\" They both complained.\n\n\"She wandered back inside with our glasses and the sherry bottle and returned a couple of moments later. She stood in the moonlight on the veranda and looked me squarely in the eyes. Naked.\"\n\n\"Naked?\" Sasha squeaks.\n\n\"Mum?\" Renee laughs. \"She was always one for ultimatums. I guess it makes sense.\"\n\n\"She smiled at my total confusion and said, 'The price has changed for dinner.' She took my hand and led me to her bedroom where she undressed me slowly. At least it felt like slow motion. She was still a truly beautiful woman. At times she reminded me of Jeanie but that night as she lay gently back and parted her legs to pull me down between them it was all her. It was all Lorna.\"\n\n\"Sounds like Mum. Straight down to business.\" Renee laughs.\n\n\"Now Renee taught me all she knew about sex and Jeanie and I thought we had perfected it into an art form. Your mother though. She surrendered herself entirely to it. For moments before I entered her, I simply looked down in wonder at her body. She was so similar to Jeanie, but health had granted her the curves that ill health had taken from Jeanie. I was a little nervous. This was my greatest critic and harshest judge, laying back and offering me her body.\"\n\n\"No pressure, pops.\" Laughs Sasha. \"I felt a bit like that wi- shit.\"\n\n\"Ahuh! Sasha Jean Doherty! I knew it, you little stinker. I want to hear all about it later, too. Promise me, honey.\"\n\nSasha's blush is pretty as she rewinds the tapes and starts us off again.\n\n\"'Relax Clarence. I'm just a girl.' She smiled at me and pulled me down. 'A girl who has wanted to kiss you for a very long time. But no... You had to go and fall in love with my sister and I had to marry the first cow-cocky who flirted with me. Relax. Let's see if we can build a life for little Renee and maybe make ourselves happy in the process.' She welcomed me inside her with just the slightest movement of her hips and her hand on my neck drawing me closer. 'Shit.' I mumbled and looked around, 'a sheath' I told her.\"\n\n\"They had condoms back then?\" Sasha asks seriously.\n\n\"Yes. They were a little uncomfortable but available in the cities. The churches didn't like the local store stocking them. When I mentioned it, she suddenly rolled to her side and started sobbing. I tried to comfort her, but she hid in her pillows, so I just lay down naked next to her.\"\n\n\"It's hardly that much of a mood killer.\" Sasha states drawing a raised eyebrow from her mother.\n\n\"Young lady, we are SO having a girl's day out this week.\"\n\n\"When she eventually settled, this beautiful naked woman who smelled so much like soap and perfume in my arms, she told me. She said simply, 'I'm infertile. Grant and I tried and tried. The doctors said I'm ruined. I can offer you my body. I can help raise Jeanie, but I'll never be able to give you children.' We never ended up making love that night. 'Please hold me.' Were the last words she spoke before sliding off to sleep.\"\n\n\"Damn. I wanted rude stuff, pops.\"\n\n\"What about Monty and Drake then?\" Renee asked.\n\n\"The doctors told your Mum she was infertile. There wasn't really any testing much, just quick blame the woman. It was mostly deliberate. If they told the man he was infertile, (they could check that back then), but then if the woman got pregnant, he'd know for sure she'd been messing around. If they told the woman she was infertile, then it was just a miracle if it happened.\"\n\n\"Pigs.\" Sasha screws up her face.\n\n\"The following morning, I woke to gentle tentative kisses, just as the sun was rising. Her lips tasted like mint; I was worried about my breath. My French Renee did a thing with her tongue and my tackle that I quite liked. It was a lot of licking and rubbing with her hand, and Jeanie did that thing that the nurses spoke about but Lorna... My goodness, she took her time and took me in so deeply into her mouth.\"\n\nI'm a little embarrassed as I had been remembering the act so vividly that I forgot who my audience was.\n\n\"Sorry girls. Um...\"\n\n\"Shut-up pops. This is hot. Keep going.\"\n\n\"Your project though.\"\n\n\"Dad... Stuff the project. Keep going.\"\n\n\"Well, that's the thing I couldn't really. In no time at all I fired a volley like a twenty-one-gun salute, if you know what I mean. She licked her lips that beautiful creature and I fell head over heels as she swallowed me down.\"\n\n\"Men are easy.\" Sasha laughs. \"Put their dick in your mouth and- Shit sorry Mum.\"\n\n\"I may have used that technique to get your father's attention, at times.\" Laughs Renee. \"What happened then Daddy?\"\n\n\"Well, she kissed me, wrapped a sheet around herself and said, 'Thanks. I should go make 'you' some breakfast. I've already had mine.' Then moments later a little bundle of happy kid jumped up on the bed asked if I was really her Daddy. Lorna was at the door watching when I nodded. She smiled and went back to the kitchen. And that's about it really.\"\n\n\"So that's it? Just like one blowjob and then they lived happily ever after? Lame.\" Sasha laughs.\n\n\"I mean that was about it for us. We were a unit then. We didn't have words to describe how we worked but we did. The town rumour mill had been working overtime on us already anyway, we just had to accept that we were a couple. I think till then we were the only ones who didn't know it. I sold my farm. It made me enough money to re-stock Lorna's place with store cattle and breeders and to purchase equipment for preparing cultivation. Mrs Milton was sad to see me close the shop, but happy to stand as witness to a small courthouse ceremony. Mum was pregnant with Monty at the time. We moved to the farm just after he was born.\"\n\n\"I remember the farm.\" Renee smiles. \"It was sad when we left.\"\n\n\"Yes, it was, but that bought this place and put you and Drake through university. It was time to retire to the city. We had hopes of travelling, your Mum and me. We had no secrets. She knew all my war stories and love stories and shared her own with me.\"\n\n\"Oh. Now those you have to spill, Dad.\"\n\n\"I'm not so sure. If she was alive, she'd probably tell you herself. Maybe some other time. We were going to go and visit all the places in Europe that Jeanie and I went to.\" There's an insistent tear forming in one eye, so I sip steadily at my scotch.\n\nRenee's hand rests on my arm. \"I know Dad. We all miss her.\"\n\n~*~\n\nThat was all about two months ago now. Sasha got a B+ for her 'thing' with the tapes. She dropped off a copy of the uncut tapes for me and a copy of the edited assessment piece. Renee made copies for herself of the uncut story and still rings me now and then to ask a question or clarify a part of the timeline. I guess it was especially important for our family.\n\nRenee and I even took a trip out to Proston to visit the little cemetery next to the showgrounds where Jeanie was buried and then drove home back past the old cattle block and had lunch at the Darr Creek roadhouse. If anything, we're a little closer. She sent a copy of the tapes to Drake and he scrawled 'return to sender' over the front of the envelope and sent them back. I hope he comes back to us some day. But as a special woman used to tell me, \"Dream small. Celebrate small victories.\"\n\nIt was Renee telling me to be happy about my slow progress. Initially with my healing groin and my inability to walk, then later with my frustration at swimming. Her philosophy was that if you made huge elaborate dreams for yourself, you would always feel like you have fallen short, but if you make small objectives you will achieve many more of them and consequently be a lot happier.\n\nIt's a thing that I've tried to remember through the years.\n\nFirstly, with Lorna's cattle property. I chipped away at overcoming one small obstacle after another until we had grown it into a highly successful operation. One that provided very well for our growing family.\n\nI did it with our family as well. We each dreamed little things we'd like for ourselves and for each other and gently led ourselves into a deep loving happiness. We both had our memories and sadness's, but we both had many small joys and the longer we lived together the deeper and greater our love became.\n\nI'm reading a travel brochure lately. There is a little money left from the sale of 'Currawong Creek', our property, that I'm going to draw against to fund a final trip to Europe and England. I'm going to go and visit those ghosts that Sasha stirred up. I'm busy marking little dots on a map when the doorbell announces a visitor.\n\nA tall, very well-dressed young man with short blond hair and piercing blue eyes hands me a business card when I answer the door.\n\n\"My name is Gabriel Bisset, sir. I'm sorry for arriving unannounced. I have some personal questions for you and won't take much of your time.\"\n\n\"I'm a Lutheran.\" I tell him. \"Your type are wasting your time.\"\n\n\"Ah. Yes. I'm sorry.\" He holds out his hand and in his open palm I see an old identity disk. \"I'm trying to establish the owner of this item and I have instructions to do so as discreetly as possible. Are your family home?\"\n\n\"Nope.\" I grumble and take the offered disk. Part of me knows already that it is mine and part of me knows grief at its return. I left these with Renee all those years ago when I took my false papers and set off for Calais. If she is not holding them as she was that night I left, clutched tightly to her chest as they hung around her neck, then she too is gone. \"Come in. I'll make tea.\"\n\nIt's what Lorna would have done. Renee would have made coffee.\n\n\"Thank you, sir. My client wishes proof that this is yours and upon satisfaction I have some instructions for you.\"\n\nHe speaks with a faintly British, faintly French accent. His English is perfect but clipped and precise.\n\n\"Wait here.\" I point at the table.\n\nUpon returning to England many years ago, I was issued with replacement id tags. I fetch them from my closet where they hang from the bayonet on my .303.\n\n\"Very good sir.\" He says as he studies them and sips on his black and one tea.\n\n\"My client's name is actually Louis Bisset. My father. He is a diplomat presently attending Australia for the trade fair.\"\n\n\"The expo?\"\n\n\"Indeed. He has further property which belongs to you and wishes to return it with the great thanks of his countrymen for your service in the second world war.\"\n\n\"Right. What property?\"\n\n\"Erm...\" He looks at a notepad. \"A uniform. A photograph. A handgun and some correspondence.\"\n\n\"She's dead then. Renee?\" I nod, and tears fill my eyes.\n\n\"Here. These are my only instructions.\" He hands me a folded note. \"I must return to the embassy and report. Father is strict.\"\n\nI see the young man out and take the note and the bottle of scotch out to my seat by the pool.\n\n\"Dear Mr Grace. I would be honoured if you could join us for dinner at the Hilton any night this week. Please leave a message with the desk if you can attend so that I may expect you and any family who may wish to attend. I am grateful for the opportunity to meet you and lay some important things to rest. Regards, Louis Bisset. Ambassador.\"\n\nMuch later I return to the kitchen and put the nearly empty scotch bottle down and go to the phone.",
        "My daughter cries with me and agrees to come with me for support. Sasha begs in the background but is told it is a school night.\n\nI sit and stare for long hours at that note and remember every stolen moment of love that Renee and I shared. Giggled washing together. Sweaty sex. Fervent adventures through the dark night for our swimming lessons. Simple things like cooking. Her smile flashes a million times in my mind and I can almost hear her voice.\n\nMy dog tags, my uniform, my gun, were all to be destroyed or buried. Her possession of them would mean her death. The destroyed farmhouse is now explained. My unborn child gone the way of so many others from that time. I remember the picture I found there and fetch it too from my closet to sit it on the table next to my renewed passport that is probably now a waste. Central to that planned adventure was the remote possibility of Renee.\n\nI toast her long into the night and fall asleep in my favourite chair to dream of bombs and the smell of 100 octane fighter fuel.\n\n~*~\n\n\"This place is fucking massive.\"\n\n\"Sasha. This is the Hilton. Watch your language.\" Renee says nervously as we approach the Maitre D.\n\n\"Mr Grace and family. Welcome. This way please.\"\n\nNervously I follow, and we thread through lavishly appointed tables and believe that the cosy looking corner with the well-dressed man in his fifties is our destination. This is confirmed when I recognise the young man, Gabriel from the other day, seated alongside him.\n\n\"Your Excellency, Master Bisset, may I introduce Mr Grace and family.\"\n\nThe older man rises and smiles warmly extending a firm handshake that I return then offer to the younger Bisset. \"Louis Bisset.\" He announces.\n\n\"My daughter Renee.\" I gesture at her and she bows slightly.\n\n\"Renee?\" Mr Bisset Snr replies and smiles deeply. \"What a beautiful name.\"\n\n\"My granddaughter, Sasha.\"\n\n\"Very pleased.\" Both Bisset's nod in her direction.\n\n\"Please, be seated. Terry, cognac for my son and I please. Whatever our guests would like.\"\n\nI order a scotch and so do Sasha and Renee. Sasha's not old enough to buy alcohol but I don't think anyone is going to object while we sit with the French Ambassador.\n\n\"We're really enjoying Australia. Gabriel has been a bit annoyed at the errands I've had him run. He has much to explore at the fair. Have you visited the grounds?\"\n\n\"Not myself. Seen a bit on the news.\" I answer.\n\n\"Your Excellency, I've visited the site and the French Pavilion too.\" Sasha says, \"School took us there last week.\"\n\n\"Well, it's remarkable we didn't bump into each other then, darling. And let's save excellency as a description of the food here, my name is Louis.\" He smiles back. \"Oh, my wife.\"\n\nHe looks back behind us and stands to introduce her.\n\nI stand and turn as well and my knees buckle. My breath catches and I grasp at the table to steady myself. Tears come from my eyes without warning and then her hand finds my shoulder and she insists I sit.\n\n\"Asseyez-vous s'il vous plait.\" It cannot be. Renee stands before me. She is as beautiful and youthful as she was when I knew her. But it's not her. The smallpox scar that she hated on her temple is gone. And Renee would be in her seventies not this young beautiful woman.\n\n\"Vous ne pouvez \u00eatre que la fille de Renee Lavigne.\" 'You can only be Renee Lavigne's daughter', I tell her.\n\n\"Mais oui, pere. She said your French was shitty.\"\n\n\"Pere?\"\n\n\"Yes Papa. My name is Clarice Elodie Bisset. I am so very pleased to meet you and so very sorry for the subterfuge. I have waited all my life for a single hug. Would you stand?\"\n\nMany long moments later, I lift a tear-stained face from my chest and kiss her forehead. \"I'm very pleased to meet you too, Clarice. I saw the farmhouse. I gave up hope.\"\n\n\"Dream small, Papa. Dream small.\" She releases me and turns to Renee. \"Thank you. I am so very happy. I am not here to take him from you. I just want to share.\"\n\n\"I have a sister. You have no idea how long I've wanted a sister for.\" Renee laughs and hugs Clarice. \"And you have a niece. This is Sasha.\"\n\nSasha stands and hugs her new aunt. \"You're very tall.\"\n\n\"So are you, my charmante. So beautiful too. How are you all so hmm... attitude accueillante? Erm... Okay with everything?\"\n\nOur drinks arrive and Louis involves me and Gabriel in conversation about the expenditure our country has poured into the expo site. I hear Sasha explain her recent school project and the tapes. I hear her also promise to bring some copies to the city for her tomorrow. In no time we are eating and making small talk like family all over the world.\n\n\"So, please Papa, if it does not tres hurt. How did your lovely Lorna die?\"\n\n\"Lung cancer, Clarice. Bloody cigarettes.\" It was a long and nasty battle.\n\n\"Merde... putain de cigarettes... Mother too.\"\n\n\"Is that how she passed?\" I ask. \"I'm very sorry, mon petite reve.\"\n\n\"Passed, Papa?\"\n\n\"Died?\"\n\n\"Oh no...\" The Bisset family all seem to look to each other at once. Conversation ceases and cutlery is placed down. \"Ma M\u00e8re. Ton autre amour. Elle est malade, mais... tr\u00e8s vivante.\" (My mother, your other love. Is very alive.)\n\n\"Renee?\" I ask and time stops. \"Alive?\"\n\n\"Yes. She has had many surgeries.\" Louis speaks for his wife who is sobbing. \"Lost a lung. Still smokes the old cow. Uses oxygen of an evening, could not travel with us. Planes and everything. Pressure. Something to do with her lung.\"\n\nRenee is holding my arm. Sasha is busy smiling at Gabriel and looking like she has a problematic crush on her first? third? Some kind of relation. I'm remembering Jeanie. Jeanie in the hospital, cradling my face after I had spilled my story finally about Renee, wanting her to have the truth of things. Jeanie, holding my face and saying, \"Well, the bitch has known you, but she sent you back to me. I love her for it and will forever be in her debt.\"\n\nThe rest of the evening passes in an eerie sort of formal cadence. Dishes come and go. Small talk and current affairs are discussed. I guess we're all navigating becalmed waters of new relationships. When we finish dinner, I've learned much but...\n\n\"You must have many questions, Papa.\" She smiles at me with her mother's face and my own signature frowned wrinkle. A line that traverses my forehead in a vertical exclamation mark that is reflected on her own face.\n\n\"Fucking hell, I do.\" Sasha blurts and has Louis and Gabriel laughing. \"I'm gonna need the tape machines again.\"\n\n\"We are here for another four months. I would really like to answer some of them for you. If you can stick around.\"\n\n\"If? What?\" I'm confused.\n\nLouis chooses that moment to slide an envelope over the table to me. \"Do you have a passport? I can pull some strings if not.\"\n\nI turn it in my hands.\n\n\"My position comes with a few err... benific... perk... avantage... Do you have a passport?\"\n\n\"Yes. Just renewed it.\"\n\n\"In that envelope is an air ticket. Return. And err... A visa. A diplomatic visa. Special. Open ended. Time is your own. It's good to be an ambassador, no? Renee. Mama. Her address in there also. She is acari\u00e2tre... pardon, cross and-\"\n\n\"Stop it, porc...\" Clarice laughs, \"She wanted to come. As hopeless as it seemed that we might find you.\"\n\n\"Go pops.\" Sasha tells me.\n\n\"Dad? Please go...\" Renee insists.\n\n\"When?\" I ask.\n\n\"Whenever you want, Papa. It is Louis' planes. Please stay a little while though. I have many questions.\"\n\n~*~\n\nIn late September, nineteen eighty-eight I stand nervously at the airport. I've not set foot in a plane since forty-seven when I taxied a C-47 Douglas down the runway and left its cargo of medicine, building supplies and workers in Foggia. The same airport I had been wounded in. I'm remembering the sound of that FW190 screaming down at me with its guns blazing and seeing its wings twisting near to coming off as I hear the engines warm on an Airbus A320 and wonder what in the hell I'm doing. Am I going to hit the tarmac as hard as that suiciding Nazi ace?\n\nI'm too old for all this romantic nonsense.\n\nRenee and Sasha kiss my cheek, each in turn and then a glowing Clarice steps forward.\n\n\"I love you, Papa. I am worried for Mama. She is... You know how she is. Stubborn like anesse. Tell her I love her. Tell her I found you. Tell her... Hmmph. I love you.\"\n\n\"I love you too mon petit reve.\"\n\n\"Not so little dream.\" She tells me. \"Go.\"\n\nThen nearly thirty hours later, I pull my coat close around my shoulders and remember the smells and winds of Europe. It was a harsh place compared to the steady climate of home. A harsh place we went to die in numbers. In my little hometown there was not a single family who was not touched by the wars. Everyone lost someone here.\n\nAnd then I found someone here, waiting in the airport with a sign that says, \"Clarence Grace.\"\n\n\"Bonjour Papa.\"\n\n\"Papa?\"\n\n\"Haha. It is a good joke, no? Twins?\"\n\n\"Twins?\"\n\n\"I am Jean Paul Grace. Your son. You are smaller than mother said. She made you sound so big and manly. All those stories about stealing tobacco from German garde and raiding their food stores. I thought you would be much taller.\"\n\n\"My son?\"\n\n\"Haha. It is a very good joke, then. Come. Mama is very ordinary today. I am very tired of her. Elise is waiting with the children. You have many petits enfants to annoy you now, Papa. Grandchildren.\" He laughed far more than was probably necessary and rolled his eyes. \"You will be their shortest hero. Mama tells the biggest stories. She doesn't know you are here. It is another very good joke. She thinks she has guests, but we don't tell her.\"\n\nDuring the car ride, he fills me in on his family, telling me of Elise his wife and his daughters Natalie six, Sophie ten, and youngest son Lucas. They are visiting Renee in her Duclair home from their farm just outside of the city. She had remarried after the war and her second husband had been quite wealthy according to Jean.\n\n\"Does he know I'm coming?\" That could be awkward.\n\n\"Non Papa. He died many years ago. He was much older than Mama.\"\n\n\"I'm sorry. Was he a good man? Were you close?\"\n\n\"He was a very good man. He loved us like we were his own children.\"\n\n\"I'm glad. I'm glad you were all loved.\"\n\n\"We arrive. Come. This is the best joke.\" He turns off the Route de Rouen into the driveway of a large riverside home. It is two story and looks quite old but well maintained. He parks and walks me to the door with a warm hand on my shoulder.\n\n\"I can't believe Clarice didn't mention you. Not even a hint. Sneaky buggers.\"\n\n\"It was more fun this way. This is more fun still. She spoke of you all through our lives, but she was always sad when she talk of you. She dreams you escaped and got old and fat, but I believe she thinks it is a dream.\"\n\n\"Shh.\" He puts a finger to his lips and silences the two pretty girls that greet us just inside the door. They point through to the back of the house and the younger one, was it Natalie, hugs my leg and beams up at me.\n\n\"Bonjour Papy.\" She whispers. Her and Sophie follow us down the hall. As we walk, I hear voices raised in bantering French. My heart skips and Jean must feel my nerves.\n\nHe rubs my shoulder and smiles. \"Ready?\"\n\nI nod.\n\n\"Bonjour Maman!\" He calls out loudly.\n\nI can hear Renee's voice like it was only yesterday she spoke to me, her musical French reply brings tears to my eyes, \"In the kitchen stupid boy. Is our guest with you? Who is it?\"\n\n\"Yes Mama. One moment.\"\n\n\"Go Mama.\" I hear a woman who must be Elise, \"I'll make coffee.\"\n\n\"Elise, life is too short for lazy lovers and shitty coffee. I'll make the coffee.\"\n\n\"Je pr\u00e9f\u00e8re une tasse de th\u00e9, mon ange de mis\u00e9ricorde.\" My voice falters as I tell her, 'I would rather a cup of tea, my angel of mercy.'\n\nThere is a sound of smashing crockery and running footsteps. \"Mon \u00e9pervier?\"\n\nThen an instantly recognisable Renee runs crying into my arms and sobs against my chest.\n\n\"My sparrowhawk. I had a little dream for you. Just a small one. I dreamed that you grew old. I never dreamed of this.\" Her speech is broken with sobs and my own tears spill down my cheeks into her hair.\n\nI lift her chin to bring her remembered bright blue eyes to mine and smile, \"Our children.\" I choke and have no more words. A flash reminds me there are others here and I see a beautiful blonde woman smiling and taking photographs.\n\n\"Shoo. Shoo.\" She steps back and waves Jean and his family away. Wiping her face dry on the apron she was wearing she steps back to arm's length and scrutinises me. I return the inspection. She is still my height and willowy. Her blonde hair falls almost to her waist and apart from the grey streaks to it, a smattering of crow's feet at the corners of her eyes and some thin lines at her lips she has aged so much more gracefully than I.\n\n\"You haven't changed.\" I tell her.\n\n\"You are older.\" We both speak at once and laugh and she says, \"Isn't it wonderful. To be older. It was not to be expected.\"\n\nShe pulls me to her again and kisses me on the lips. Then she pulls back to look quizzically at me.\n\n\"I'm sorry. Perhaps that was inappropriate. I know nothing about you. Have you family?\"\n\n\"My wife Lorna passed a few years back.\"\n\n\"I'm sorry. It is hard to lose a person. My husband also.\" I nod in understanding. \"But it means I can do this properly, no?\" She smirks and pulls me close to kiss me again. This time it is as it always was with her. A place and time apart from the rest of the world, when all that existed was her lips moving on mine, our tongues dancing and our breath blending.\n\n\"Ahem.\" And a giggle interrupts us. Our flushed faces and heaving breaths turn to find a smiling Jean, his wife, and his children. Elise is holding a traditional coffee pot and the children carry mugs and grins. Lucas must be the small person hiding behind his mother's legs.\n\n\"Introductions seem to be commencing well.\" Elise smirks. \"Please don't expect quite the same welcome from me, Papa.\"\n\n\"Cheeky child.\" Renee laughs and without releasing me leads me to a couch and urges me sit. She sits beside me with her head leaning on my shoulder as Elise serves coffee. Little Natalie claims my lap for a seat, and we all sit awkwardly for a moment.\n\n\"Haha. We all want to ask questions. I think Mama would be happier if we just went away.\" Jean laughs.\n\n\"Yes, many many questions,\" she says beside me. \"So much I wish to know. For now though, where are you staying and how long have I got you?\"\n\n\"I'm booked into a hotel in Rouen and I have an open visa. How long I stay depends on how my finance holds out, I'm afraid. My daughter and her husband have gifted me some of their savings and I have some of my own.\"\n\n\"Well. We'll talk time later.\" She says sadly. \"I think when it comes to time, I'll be the problem.\"\n\n\"Yes.\" I tell the sombre room. \"Clarice briefly... Ah. I'm terribly sorry.\"\n\n\"Six to twelve months is not long enough for anyone, but if you cancel your booking and stay with me then maybe we can both stretch our resources. It wouldn't be the first time we had to be careful with things.\"\n\n\"No. No, it wouldn't.\" I am remembering scratching for food and rationing coffee and how terribly desperate our stolen months together were, when I realise what she has just told me. \"Six to twelve months?\"\n\nMy eyes fill again, and she wipes them dry. \"Dream small, mon \u00e9pervier. We'll celebrate some more small victories together in that time.\"\n\nIt was an odd afternoon. Renee only left my side for brief moments and we summarised our different journeys. I learned about the birth of the twins at her sister's farmhouse where she had moved after retreating German's had taken over hers as a radio post. My sketch of my own life with Jeanie and Lorna was just the barest outline for the sake of information and the ears of the children.\n\nIt was all very pleasant and slightly surreal. The whole time Renee clutched my arm and leaned into me. Later, we walked along the river and reminisced about my swimming lessons. The children had many questions about Australia for me to answer. Do we have pet kangaroos? Are koala's cuddly? That sort of thing.\n\n\"I will visit through the week, Papa. I have little to do at the farm now that it has turned colder so will visit in the afternoons. Clarice sent me a copy of Sasha's tapes and I have many questions. Many for you too, Mama.\"\n\n\"I'd like that. I'd like to know more about you too, Jean.\"\n\nRenee and I wave them off from the front door. I am kissed on the cheek by all five of them. Jean made me promise to find out where 'that bloody woman' hides her cigarettes. And soon enough, their Audi is turning left at the gate and Renee and I are truly alone.\n\n\"I am sick, Clarence.\" She smiles sadly and pointedly at me as she closes the door. My heart drops.\n\n\"But... I am not yet dead.\" There is familiar mischief in her eyes. \"My body is old. My heart is still young though. Would you take an old woman to bed?\"\n\n\"So long as you promise to go easy on me. I'm an old man myself these days and remember very well how you are in the bedroom. Very well...\"\n\n\"Hahaha. Come on then, old man.\" She giggles and there is almost a skip to her step as she strides through the house pulling me along by the hand. \"Life is too short for lazy lovers and shitty coffee.\"\n\n\"My cancer started in my breasts.\" She explained. \"Not the cigarettes. The children always tell me about the cigarettes. But it was my breasts. The breasts where I fed Michel, my first son and then the twins. Then Henry. Where I gave life. Where you spent much time too as I remember.\"\n\nShe is tugging at her buttons and smiling at me. \"Please don't be frightened by my body.\"\n\nI'm shaking my head and tugging at my own buttons.\n\n\"The cancer took them from me. Please don't be frightened.\" She discards her blouse, and I am saddened by the mass of scarring that covers her chest. Where once proud, pert, small breasts sat, now only lines of white pinched scars graffiti her. She sees my sadness.\n\n\"They left my nipples...\" She smirks. \"You do remember how sensitive they were, no?\"\n\nI do, and I have them in my mouth before she can reach to stop me. This desecration of those once perfect tiny breasts does not stop my enjoyment of their memory.\n\n\"Clarence... Oh mon Dieu...\" She forces me back and mounts me. Scrabbling briefly at a bedside drawer, her hand then slips up and down on my erection briefly and wetly, then slides me gently inside her. \"Now you are truly home.\"\n\nShe sobs into my shoulder. \"I thought you dead. Dead in that cold water. Dead in a field along the way to Calais. Gone. I told our children that you flew. That you flew above us always, keeping us safe and fighting for our home back. But I thought you dead. I thought I showed you silly swimming and if even you made it to Calais, you would drown in that cold ocean. I thought I fed you dreams and killed you.\"\n\n\"Shh... Mon ange.\"\n\n\"English... I can't stand what you do to French.\"\n\n\"Haha.\"\n\n\"Move... Oui... Ca comme ca... Like that.\"\n\nIt had been more than five years since I'd been welcomed into a woman. It was five minutes or less until I was saying her name and holding her neck, pulling her mouth to mine as I finished inside her. I was trying to show off. To show her how I'd learned to delay myself since my youthful enthusiasm that delighted her many years ago. But I was spent the moment her body gripped at me and she announced her own, \"La mort, la mort, la petit mort. Mon Dieu! Merde!\"\n\nWe lay as we lay more than forty-five years ago; sweaty and sated, cocooned in the smell of our love making. She lay in my shoulder with her head on my chest and herself still spasming on me as I softened. She lay as she did the night I said goodbye to her forever and slipped into the night with my French clothes and forged travel passes. She lay there crying quietly and I held her trying not to cry myself.",
        "\"I'm old. I don't sleep well.\" She told me. \"Get up. Do you smoke still?\"\n\nI laughed and told her how much my daughter Renee hated my pipe and cigarettes.\n\n\"Renee?\" She smiled and held my cheek. \"Like Clarice and Jean? Clarice for you and Jean Paul for the plane that dropped you in my walnut tree. The Jeanie-Belle. The bitch I hated in my heart and sent you home to in my head? Shh...\" She winked and picked up the bible on the bedside table. \"An old war ladies' trick.\"\n\nThe bible opened and she pulled out first a packet of cigarettes and then a lighter. Then she handed me a crumpled photograph. Lines wove their way through what was left of the picture.\n\n\"Do you remember?\" She asked. It was a picture taken by a travelling photographer who claimed to be documenting things for the German press. We stood beside a wood pile. I was in a singlet. It was summer and she wore a little floral dress. I had a moustache in the French fashion, and she had laughed and said, 'what harm? Come on.' A week later he turned up unannounced and handed us a copy. \"It is too perfect.\" He told us. \"I had to share.\"\n\nShe coughed while smoking. \"This reminds me.\" She smiled. \"We always smoked after you gave me good sex like that. You were so energetic. So...\"\n\n\"Inexperienced? And wondering why a really hot French lady was looking after me and wanting to...\"\n\n\"Hmmph... You were old enough to die in the sky. You were man enough and more for me.\"\n\n\"I am old enough now to know that I can't do that again tonight.\"\n\n\"You have finally learned well enough not to need to. I wish I'd... It's silly. I'd love to have known your lovers. To know all of your story.\"\n\n\"We have time.\"\n\n\"A little.\"\n\n~*~\n\nTime passed quickly as it happens to do when you are aware you have little of it. There is an irony that we are both aware of when comparing our short five months together many years ago and the distinct possibility that we could have only that short time again.\n\nWhen she is well, we travel. We have visited many places from our stories. She has shown me where her first husband and her son rest in a small cemetery and told me the story of how they were executed for breaking curfew. They had been assisting a cow which was calving and a passing German patrol simply open fired on them. They were only a hundred metres from the farmhouse, in the home paddock.\n\nWe returned to the walnut tree that started my French adventure. I learned she buried Henry beneath it. The soldiers that used her farmhouse for a radio post had used her body just as licentiously. She was forced to cook and clean for them and there was the constant unspoken threat that they would harm Jean and Clarice if she was not compliant.\n\nHenry was born as a result and had been a sickly child from the start. He succumbed to Polio as an infant and after burying the child she fled to her sister's farm just outside Duclair. The same farm Jean works now.\n\nAll these stories are documented on Wednesday or Thursday afternoons when Jean and sometimes Elise or one of the girls visit with a tape recorder. Jean particularly enjoyed the tapes that Clarice had sent him recounting my adventures and he thought something similar would be a marvellous legacy that Renee could leave for her young grandchildren.\n\nEvery Sunday his family arrive for 'Le Go\u00fbter', a tradition much like the afternoon tea that Lorna insisted upon, except that it was much heartier. They were happy occasions and I recall one particularly early on.\n\nOn Renee's poorly days, when the pain or lethargy kept us at home, we flipped through photo albums of the children's lives, did jigsaw puzzles, sometimes she simply lay in bed and smiled sadly at me where I sat reading beside her. Some days, she simply slept the day away. I'd check on her often, but it became clear I needed a way to pass the time.\n\nAs I hadn't much touched the money I had for my travel and accommodation, I purchased an old clinker style fishing boat with a small single cylinder diesel motor. It was in poor shape and Renee laughed at me when it was delivered to the garage. \"Mon \u00e9pervier believes himself a sea eagle now?\" Her last husband kept a well-stocked tool cabinet and I set about restoring the boat over time.\n\nOne Sunday afternoon she was in particularly high spirits, her health having been quite good all week. I'd finished the boat and playfully, she suggested a proper champagne launch of the small vessel which we'd named after her mother, Aubrey Abadi. Her mother's marriage to a Jewish man meant she shared his fate. He'd been a keen angler from Renee's recount. Renee's own marriage to a Frenchman, meant her surname kept her safe.\n\nIt was a wonderful afternoon. I took my family for little rides on the river, while Elise and Renee drank champagne and laughed at our fun. Lucas took a turn at the tiller and drove the girls and I in gleeful circles. I was having so much fun I almost didn't notice the commotion on the bank.\n\nJean was waving his arms and gesturing quite savagely at his mother and Elise was trying obviously to placate him. I saw Renee stand and take a look I well remember from any time I'd snuck out in the night on one of my raids. Her finger poked sharply at his chest and then pointed out across the water at us. Eventually, Jean stormed off inside and Elise pulled Renee into a hug.\n\nWhen Lucas eventually did his four-year-old self proud and guided us safely, if not a little abruptly back to the small jetty, Elise hurried the children inside and kissed my cheek goodbye. It was late November and very cold. But not as cold as the look on Renee's face. Her expression told me she knew my intrigue and her nod told me we would speak.\n\nIn the warmth of the house, near the well stoked fireplace, she kissed me and handed me an envelope. Withdrawing three sheets of typed paper, I shook my head at them. If my French is les miserable, my German is sheisse.\n\n\"My doctor has agreed to another round of chemo and radiotherapy. He is impressed with my general health and fitness since I have been getting the good sex.\" She laughs. \"Before, I was too weak, and it was very dangerous. Our lovemaking and long walks have been paying off.\"\n\n\"Why were you arguing?\"\n\n\"There are still risks that are quite frightening for my children. Jean is very protective of me.\"\n\n\"How great are these risks?\"\n\nShe simply smiled and palmed my cheek. \"Let's just say my chances are a lot better than yours were when you left me forty something years ago.\"\n\n\"But still...\" It felt like there was much she wasn't telling me.\n\n\"Yes, but still... If I die, I will die happy with my lover by my bedside.\" Her eyes hold mine, seeking approval, I think. \"And if I live, I will perhaps have a few more years with him in my bed.\"\n\n\"When?\"\n\n\"Early January. I need to put some weight on and to start a course of medicines, then I spend two weeks in Belgium.\"\n\n\"I've always wanted to see Flanders field. I had a mate shot down over there. Two school friends died there as well.\"\n\n\"That's the spirit, lover. It will be a grand drive for you though, I will be in Brussells. It is quite expensive this treatment and I am more nervous than I want Jean to believe.\"\n\n\"I have money, if it helps.\"\n\n\"Mon Cherie, Samuel left me plenty of money. More than an old lady can spend decently. You just hold my hand.\"\n\nJean was back with an apology that evening. He cried as he delivered it. Renee scolded him for fussing and gave him food to take home for dinner. The French eat dinner so late...\n\nBy Christmas, I was missing home. The French countryside is lovely. Especially forty-five years later when the mud has dried up and the corpses are gone. The weather though, is miserable and the wet and cold remind me of summer and my pool at home. I'm missing my family as well.\n\nWe talk when we can, although the cost and the time difference are prohibitive. Once Lorna would have been fussing already. Two days before Christmas she would have been madly baking, cleaning house, fussing about the lawn and telling me off for the hedges and pool. She would have had a plum pudding hanging in the laundry fermenting for months by now and she would have reminded the children eighteen times at least about things to bring and sleeping arrangements.\n\nJust as Renee is now. Clarice and Louis returned home a few weeks earlier, the Expo thing having finished, and their tourist interests having been satisfied. Gabriel stayed on apparently to look for local universities. There was perhaps a local girl who had caught his attention as well, Clarice explained. We did laugh a little about the relationship status and back and forth a bit about whether it was half cousins, third cousins or something completely different but apparently the naming convention was beside the point. Sasha and Gabriel seem quite smitten.\n\nThe phone rang and as much as my French is poor, Renee insists I practice.\n\n\"Bonjour.\" That was simple enough.\n\n\"Hello Papa. We are arriving early. I have an early Christmas present for you.\"\n\n\"Clarice.\"\n\n\"Yes Papa. Put Maman on.\"\n\nI do and they chatter for a moment.\n\n\"Here. Be useful.\" Renee tells me when she hangs up. She hands me some linen. \"Go make the guest rooms. They are staying.\"\n\n\"It will be a full house for Le Go\u00fbter this afternoon.\" I laugh and take the stairs. We have been preparing for our usual Sunday with Jean and his family.\n\n\"Clarence! Come downstairs. They are here.\" Renee yells. Her voice has been growing quite stronger with the walking and other activities.\n\n\"Papa.\" I step off the steps and into Clarice's arms. \"You look... fit... healthy.\" She looks sideways at her mum, \"You both look quite... naughty, actually.\" She grins at us and looks her mother up and down.\n\n\"We've been... exercising a bit.\" Her mother tells her with a lopsided grin.\n\n\"I see.\" She smirks. \"Happy Christmas.\"\n\nShe gestures 'come here' behind her and I am embarrassed by sudden tears as I see Renee and Sasha.\n\nBehind them Jean is laughing with Elise, \"Another very good joke, no Papa?\"\n\nLater that afternoon he draws me aside and asks, \"Can we talk in private, Papa?\"\n\n\"Sure.\"\n\nHe leads me inside to what used to be his father's study and invites me to sit in the reading chairs.\n\n\"I have been speaking with my sisters.\" He smiles.\n\n\"Oh?\"\n\n\"Yes, I have two now. Thank you very much. I feel very lucky. We spent all day yesterday talking. You know we are very worried about the treatment?\"\n\n\"Yes. I understand.\"\n\n\"Perhaps... When she went through this treatment after her breast surgery many years ago it was terrible to watch. She was so sick. She was younger though and very strong. It was still a big battle for her.\"\n\nHe stops to pour us both a cognac from bottle on the mantel.\n\n\"Then when they took her left lung some years later, it was even worse. She fought so hard though. Sophie had just been born and she said it was easier to fight now she had a little dream of watching her granddaughter grow up. It was after Lucas was born that the cancer started again in her other lung. They offered more surgery and treatment, but she said she had filled all of her dreams and hoped only for a graceful parting and as much time with family as she could manage.\"\n\n\"It must be very hard for your family.\"\n\n\"For our family, Papa. It is your family now too. Clarry and I are so thankful Papa. Thankful for this new life in Mama. I think she has some new small dreams. I think they are of you. So, we are afraid, but we are thankful for what you are doing for her.\"\n\nI shrug. \"I simply give her my time and-\"\n\n\"You love her Papa. It is what she needs. A man. You. Family is enough but a lover is important for a woman. We think it would be good if she had another slightly bigger dream this time around. She will need to hold on very tight this time. She is older and it will be worse.\"\n\n\"I've promised her I'll-\"\n\n\"Shh Papa. We know. We love you and we trust you with her heart. We think...\" He swirls his cognac then sips it. \"We think you should ask her to marry.\"\n\n\"Huh? We are both old, Jean.\"\n\n\"So?\" He dismisses me, \"For her health that is important, for her heart it is just numbers.\"\n\n\"How would it work?\"\n\n\"Oh... It would work however you both want it to. Louis says that if you are married, he can acc\u00e9l\u00e9rer your citizenship through. That would let you travel between home and here to have contact with all your family. We are not asking you to leave your home.\"\n\n\"We? You all agree? I'll have to speak with-\"\n\n\"Renny thinks it's terribly romantic. I was worried how she would feel about her mother's memory. If it would feel disrespectful. She told me to, how is it say? Oui. 'Fuck off, drongo'. She is teaching me very many good swearing words for using on the farm.\"\n\nI laugh at that; it sounds exactly like my daughter.\n\n\"Besides, it would be a very good joke for Christmas, no Papa?\"\n\n\"I'd need a ring...\" I'm catching up with his reasoning, \"What if? What if she doesn't want to?\"\n\n\"Pff... Her and Clarice talk very much. She wants to. You just have to want to. She won't bring it up. She is a proud Frenchwoman. Oh...\"\n\nHe stands and opens a drawer on the desk. There is a cigar box in his hands. Clarice and I want you to have this. It is our grandmother's, and it is our blessing for you.\"\n\nHe stands beside me smiling as I stare into the little box. His arm is around my shoulders as I pick up the little ring and examine it. I could not have afforded a diamond this size. It's set in white gold and there is engraving on the inside. It's very worn and hard to read on the thin band.\n\n\"LA AG 1910. Levi Abadi, Aubrey Guillaume. They were married in nineteen ten. Come on. They will think we have snuck away to go fishing again. Lucas is very keen to catch another catfish. Come on.\"\n\nOn Christmas day I watch from the head of the long table as Jean and Clarice's families fuss at a rich but simple fare and include my daughter and her daughter as though they are long lost family. Beside me, Renee leans into my side and smiles up.\n\n\"We did this. Imagine how much more we could have achieved with two testicles and a petit,\" she pinches her thumb and index finger together and smiles deeply into my eyes, \"more time.\"\n\n\"Speaking of time.\" I stand and my extended family quieten, except for Lucas who is playing loudly with his presents away from the table. \"I have one last gift. It is only small but means everything to me.\"\n\nRenee watches me as if I've lost my marbles. I reach into my coat and take the little ring from a pocket. Kneeling, I offer it to a wide-eyed Renee. Those blue eyes quickly fill with tears as I ask, \"Renee, my love. Would you make an old man incredibly happy and spend the rest of your life with him?\"\n\n\"Yes, mon \u00e9pervier. I do not know how much time I have, but it is all for you.\"\n\nOur kiss draws giggles from the youngsters and sighs from the older family. We are worlds away in the place that all our kisses take us when Sasha interrupts with, \"Holy shit! Look at this. Get fucked.\"\n\nShe is standing at the glass bay window watching as snow drifts gently on the winter breeze.\n\n\"That is snow.\" Lucas frowns at Sasha. \"Not holy shit. What is holy shit? What is this get fuck, mama?\"\n\n\"It's Australian for 'merde', Lucas.\" Smiles the older Sophia. \"Don't let Mama catch you saying it.\"\n\nThe light fall of snow lays a thin veil of white over the countryside and makes a perfect Christmas backdrop as we celebrate into the evening.\n\n~*~\n\nTime.\n\nYou don't know what time is worth until you don't have it. Or unless you have it, and things aren't happening as quickly around you as they should. Renny and Sasha left for home after ten lovely days getting to know their new family. They weren't here long enough in their opinions and have vowed to return as soon as finances allow them. And here in Brussels, nothing is happening as quickly as I could want.\n\nRenee assures me that this is normal and that it will all be over soon enough. On the little cabinet beside her bed is a long blonde braid. She asked me days ago to cut her hair short. It will likely all fall out and she wanted to keep her braid, perhaps to have a wig made. Her spirits are high, but it is early days, and the treatment has only just started.\n\nShe sits long hours in a chair, and we read while chemicals fill her body. She complains of itchy skin and nausea, of the cold and of being forgetful. She complains that we can't be intimate due to the chemicals leeching from her skin.\n\nThere are some days when she is simply in pain and tired of fighting the overload of drugs in her body that is killing the cancer cells and her immune system equally effectively. There is a rash of shingles on her back and shoulder that itches and drives her crazy. Initially, they were only going to give her a two-week cycle, but her body is coping better than her doctor expected and they have extended it to a four-week cycle.\n\nHer beautiful hair thinned terribly, and she cried often when I brushed it to remove the loose locks. Mostly she resented that the cancer and the treatment became her whole world again. I think sometimes, she regretted agreeing to the treatment. But a fire burned in her frail body.\n\n\"I have a little dream of walking down between the pews in the Paroisse de Duclair, my fianc\u00e9. I will celebrate that small victory with you and then hope that all this has been worth it.\"\n\nWhen she started the radiotherapy, it was worse. The last of her hair fell out. A kind nurse gave her a crocheted beanie to wear against the cold. She hated it, of course. Her throat was giving her trouble with swallowing, but she would not allow them to intubate. The skin on her chest looked sunburned and was dry and itchy. At least, we were allowed touch again and I could rub lotion on for her.\n\nAnd still we did not know if this treatment was even helping. The hospital had ultrasound machines but there was not expected to be visible results yet. She was focusing mostly on my education.\n\nYou see for her to walk down the aisle in her chosen church, I'd have to become a Catholic. Not at all a simple process by her account. If she could suffer all of this for the promise of some time together then I could pull my weight, she insisted.\n\nI think that was the only time I left her side. I had to attend a nearby Catholic school and do my confirmation with the young teenagers. There were many lessons and I studied hard. Oh, and she insisted I was out of the room while she attended to her will. Doctors advise that all patients undergoing treatment make sure they are prepared for all eventualities. Even the unpleasant.\n\nTwo months later a very frail Renee allowed me to wheel her from the car into our bedroom and dress her in 'proper' clothes. For the first time in nine long weeks, I held her in my arms and pulled her wraithlike body against my skin. She slept ten hours that night. I did not. There were no nurses to call. No doctors to ask questions of. I felt inadequate and listened to every breath she took that night.\n\nHer dream of walking down the aisle started with walking to and from the toilet alone. Her legs shook and she cursed in French in ways I never had imagined you could put French words together. She was impossible. And it was important. That determination and frustration was what drove her to many small victories.\n\n\"Remember that boy you taught to swim?\" I asked her one day, \"Do you remember what you told him?\"\n\n\"Stop patronising me. I will wake up in the middle of the night and tie your penis in a knot.\"\n\nShe was constantly tired because she was constantly doing more than she should. Clarice visited often to help with housework and distraction. Likewise, Jean visited with Elise to get me out of the house and doing 'healthy men things' as he called them. Mostly he took me to his farm and had me work some ground with the tractor or we went fishing in the Aubrey Abadi.",
        "Then one Sunday after our family meal, she announced something that made me very happy. \"Doctor Bernard has the results of the ultrasound. It is the tiniest thing now and much smaller again than last time. He also says that non-penetrative sex would be possible.\"\n\n\"Oh... Well, the ultrasound is good news.\"\n\n\"He is an idiot. How would he know. There is nothing wrong with my vagin. It is my chest. He does not even have a vagin. Come to bed.\"\n\nI complied eagerly and despite her worry for her appearance, her emaciated body and itchy skin, I assured her as thoroughly as I could at sixty-six that I still found her attractive and enjoyed her body very much. Just the once for me, but the time apart had indeed made her eager and I was not counting but she rode me through two of her 'little deaths' as she called them at least, before I filled her body.\n\nIt was a turning point. Our walks became longer. Our love-making more frequent. Her meals more hearty and her body responded quickly. The weather was warming, and Doctor Bernard insisted on sunshine and fresh air so our afternoons included journeys in the little boat, some fishing for me and some reading for her.\n\nIn no time at all it was mid-March and our family gathered in the centuries old Saint-Philibert church. Renny couldn't attend as she and Ben were having some unspecified trouble, but Sasha flew with Gabriel and was my wife's bridesmaid along with Clarice. Jean Paul and Louis stood beside me and we said some pretty words and later drank and ate like returning heroes.\n\nRenee glowed. She was healthier looking than ever I had seen her since finding her again and our honeymoon in Spain was a waste of money. We seldom left our room to explore. I can tell you no tourist information on Ibiza apart from where to buy cigarettes closest to the Pikes Hotel. My honeymoon with Lorna was vigorous but I was not yet thirty then. This holiday left me wondering if perhaps Renee would ride me to the grave before even she succumbed.\n\n\"I have a little dream, mon eperviere.\"\n\n\"Just a little one?\"\n\n\"I dream of Australia. I want to know your places like you know mine so well.\"\n\n\"That is a big dream, my angel of mercy. You can't fly. Your lung.\"\n\n\"My lung is well. I am getting the very good sex and walking a lot. I am very well. I want to know your places.\"\n\n\"Well. I'd best call home and-\"\n\n\"It is already done.\" She giggles like a young bride. \"Clarice and Jean and Renny... They made another joke.\"\n\n~*~\n\nIt was a very good joke indeed. It lasted for two years that joke. We watched Gabriel complete his master's in communication studies and marry young Sasha, before returning home with his bride, my granddaughter to France. She too had graduated university and was a nurse. \"Like Jeanie.\" She beamed at me.\n\nI showed Renee my old barber shop. Her hair had grown back curly and with enough length to it now for me to plait it on the steps as we shared an 'absolutely horrible' coffee. I showed her the cattle farm. I showed her my house and she was so terribly thankful for the pool to escape our heat.\n\nThere were nasty punchlines to that joke. Ben had been having an affair and Renny's marriage fell apart. Drake had also broken with his wife and contacted me for the first time in many years. Renee encouraged the relationship but ultimately it failed as he could not accept my stories and my new wife.\n\nIn late nineteen ninety-two, we lay beside the pool at my home in Brisbane and Renee told me, \"I need to go home.\"\n\n\"France?\"\n\n\"Yes. I am going to die.\" She had been seeing a local doctor about some headaches recently and been for a scan.\n\n\"Your lung?\"\n\n\"My brain.\"\n\n\"The headaches?\"\n\n\"Yes. Not now. Not tomorrow, but it is time. I have had many wonderful small victories, my husband. Take me home.\"\n\nNot long after Sasha and Gabriel's son was born, Renee lay in her hospital bed snuggling the infant and told me, \"I am going to have a really, very big dream soon. In it, my family will live in times of peace and health. It has already started, and you will all be in it.\"\n\nThat night her machines fell silent and I called the nurse. In the moonlight, Renee was smiling, and she looked so peaceful. Like she was indeed having one last really big dream.\n\nRenny, Jean, Clarice and all of our family lay Renee's ashes under the walnut tree where once I'd fallen, where once she'd buried her infant son Henry. The same tree in the same house yard, that her last will and testament said belonged to me. The same tree she wanted me to join her under one day.\n\nAs a final joke, 'a very good one', as Jean would say, I reached for her bible after her cremation to find a much-needed cigarette after a terrible day and found a folded note. It was sealed with a little section of tape and a red lipstick kiss.\n\n~*~\n\nMy dearest Clarence,\n\nMy Samuel was a very wealthy man. He was also very old and very distant. He was wonderful to our children and kind to me as well. He bought me the home I am leaving you; the one built on the site of the old farmhouse, as a wedding present. I would have left you the big house, but it is too large for a grumpy and fussy old man like you to look after. Please do not be embarrassed by my wishes. Our children are both independently wealthy and I want you to use the money I have left you to stay in the lives of the family we made. If I can ask just one thing of you, it is to keep the walnut tree within our family. Spread my ashes there. Join me one day after you have lived long and happily enough. I am already missing you terribly. Fill the little house that is built there now, with happy memories and take your grandchildren fishing often. Tell them our stories until their ears bleed. In English! I beg you!<br ><br >I love you and I let you go once. I am so glad my little sparrowhawk flew home to me. If just for a few short seasons. Now you must let me go. It is my turn to fly. \n\nPlease make sure our great grandchildren know that life is far too short for lazy lovers and shitty coffee. \n\nGoodnight mon epervier. I will see you forever in my dreams. \n\nYours eternally, \n\nRenee Arielle GRACE.\n\n~*~\n\nApril four, two thousand and two.\n\nTo my dear family,\n\nA few short notes. I found this handwritten account of those times in the army boot locker that granddad kept in his garden shed in Rouen. Alongside it were the tapes from back then, his uniform and pistol, photographs that were important to him, paperwork, deeds, Grandma Renee's wedding dress and some photo albums.\n\nMy daughter Elodie is eight now and when I shared this account with her, she had many questions but foremost was, \"He wasn't that short and why didn't he finish it?\"\n\nShe insisted that it was sad left like that, and that her Great Grandad had not been a sad man.\n\nHe died peacefully, after Christmas lunch two thousand and one. Standing from the table he announced to his family, \"I'm probably going home.\"\n\nWe laughed. He had been getting a little forgetful coming up to his eightieth birthday. He picked up his pipe and tobacco and carried his scotch out to the squatter's chair that sat beneath the walnut tree and joined Grandma Renee in dreams. We found him an hour or so later with his pipe unlit and his eyes wide open watching the sky.\n\nHis ashes rest beneath the tree.\n\nAt Elodie's insistence, I've digitised his handwritten account and copied the tapes to cd so that we all have our own copy.\n\nHe has left a lot of untidy ends, so I'll briefly tidy them up.\n\nFirstly Mum, Renee junior, divorced dad and it was not as sad as he made it sound. It was the beginning of a whole new Mum. She moved to France and lived with Grandad for a short while. While she was over here, she travelled and during those travels she met Jonas, a lovely German man a little younger than her. She has been enjoying the adage, 'life is too short for lazy lovers', but prefers a glass of chardonnay over the usual coffee.\n\nSecondly, as Elodie insists, Grandad was not a sad man. He lived another very full ten years after Grandma Renee's death. He had many local friends and many abroad back in Australia. He was constantly busy with family and travel. His little modern house in Rouen, the one with the walnut tree, was always full of laughter and family. His little boat was seldom moored and between you and I, he even kept a few very discreet lovers.\n\nHe loved nothing more than listening to our stories. He seldom told his own which is why this account of it is so very precious to us. He knew every moment in his children's, grandchildren's, and great grandchildren's lives. He never missed a birthday or occasion. He was not a sad man in any way.\n\n\"Sasha,\" He told me once when I brought him a scotch and took my son, Liam who is ten now, off his lap, \"I have lived through so much violence and sickness, but I have always been so very loved. More than I think I deserve sometimes. I have no idea how I deserved it all.\"\n\nHe kissed little Liam on the cheek and gave him to me for changing.\n\nI live in that little house now. Gabriel and I moved into it after Grandad died. He left it to me in his will along with the strict instructions that, \"You started this whole show young lady, you can bloody well keep it running.\"\n\nUncle Jean's family is visiting on Sunday as usual. Aunty Clarice cannot make it as Louis has important diplomatic responsibilities. Mum is coming and it will be a fine time to tell them my latest news. Gabriel and I are having baby number three. Liam is almost ten now and I am thirty, we want to add a couple more to our family yet. It will be a very good joke, as Uncle Jean would say.\n\nI was going to tidy up Grandad's French. It is deplorable. The kids always said he sounded like a robot and laughed at when he got words in the wrong order or used completely the wrong words altogether. But that was who he was and part of why we all loved him for trying.\n\nI can only hope I lead a life filled with the love he knew and in times that were Grandma's final dream.\n\nIn any case. It's time to go and keep writing our own stories, my family. Write them well and remember, \"Life is too short for lazy lovers and shitty coffee.\"\n\nHe was five foot-two. It was the biggest body that God could fit a heart that big in and still fit into a spitfire cockpit.\n\nDream small and may you celebrate many small victories.\n\nSasha Jean Bisset."
    ],
    "authorname": "Rollinbones",
    "tags": [
        "mature",
        "war"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/dream-small"
}