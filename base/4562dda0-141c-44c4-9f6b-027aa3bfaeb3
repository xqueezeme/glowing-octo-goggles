{
    "title": "Dead and Horny Ch. 06",
    "pages": [
        "Hi all!\n\nHere is the next chapter of D&H, and this one is a doozy! Not only will there be some big revelations about Lily's condition (both in our world and in her dreams), but Dana is about to run into a familiar face that some of you were expecting, but will probably still surprise some.\n\nAs always, I hope you're enjoying the story. Thank you so much to people who have been writing me kind feedback, October is usually my favorite month, but this year has been extra hard (on all of us, I imagine). Don't forget to check my bio for release dates, I try to keep that as accurate as possible.\n\nI've kept you away from the girls long enough. Enjoy!\n\nSafe Harbour\n\nLily gazed across the water, her eyes trying to find any sign of land. She was floating in the ocean, the technicolor clouds above her tumbling about like cotton candy in a dryer. She was unable to get enough lift out of the water to fly, and the dark depths below shifted as if alive. She was in the Dreamscape, of that she was certain.\n\n\"Lily...\" It was Dana's voice, but it sounded impossibly far away. She had been hearing Dana for a couple of days now. At first she had tried swimming toward the sound of her voice, hoping to escape the dream she was stuck in, but to no avail. The last thing she remembered was getting into a car with Dana, her mind a jumbled mess.\n\nLooking inside of the dreams of the beast in the pit had been a terrible mistake. It had been like trying to swallow the ocean in one big gulp, an apt metaphor considering her current situation.\n\nBut oh, the things she had seen there! Terrible cities buoyed up by shadows that sat high in the clouds. Oceans of darkness filled with stars, strange ships made of the bones of long dead behemoths; it had been a visual cornucopia of madness itself.\n\nAnd then they had found her. Her mind had crumbled when they came for her, and then she had awoken. Somehow, despite being far away, the thing had kept whispering to her even after they were disconnected, whispers that made it difficult to think.\n\nSitting in the car next to Dana, silence had finally come, and with it the sleep of the Damned. Quite literally, because Lily was fairly certain the Dreamscape she was in was her own.\n\nWhich should have been impossible. She could pop in and out of someone elses Dreamscape with no trouble, but having a Dreamscape meant having a soul capable of generating one, which she certainly did not. And while she was, in fact, in possession of many souls, those had been devoured and were now a part of her, incapable of dreaming.\n\nAnd so she swam. Time had no meaning here, either, and she would occasionally hear Dana above the roar of the waves. Lily knew that they were heading to Oregon, but that was about it. Mike had property in Oregon, and Lily hoped that his land in Oregon was magically protected much like his home was.\n\nMike.\n\nNow there was an enigma. It wasn't just the fact that her new master was kind to her, or that a piece of her now lived inside of him. No, it was the fact that she wanted to hate him, but couldn't come up with a good reason why.\n\nShe touched the necklace on her chest. When she had fought with Cyrus, he must have gotten it off of her. The fact that it was in here with her now meant that she was probably wearing it in the real world. She took a break from paddling to tread water and look at the clouds.\n\nThere was a splash behind her, and when she turned around, she was surprised to see a figure swimming her way. She waited for the figure to approach and was surprised to see that it was, in fact, Mike.\n\n\"Okay, Romeo, this is a surprise,\" she said, but he got close enough to grab her by the wrist and then pulled. As he yanked on her body, she felt the whole world shift and split apart, revealing a small island with an old Victorian home on it. The house was only ten feet tall and looked like it would be better suited for a miniature golf course than habitation.\n\nShe swam with him and the two of them crawled onto the beach. Mike helped her stand, and she could only gaze at him in awe.\n\n\"We're...is this your dream?\" she asked. \"Like, you're standing in front of me, but I don't feel like that's really you.\"\n\n\"No idea. Been stuck here for a bit though. It's kind of peaceful. Watched you swim around the island for a few hours so figured you might be stuck.\" He stuck his hands in his pockets. \"If I'm being honest, I think it's your dream.\"\n\n\"It can't be my dream. Demons don't dream.\"\n\n\"But you weren't always a demon, were you?\" Mike had pulled a child's bucket and a shovel from behind his back and was now busy building something out of sand. \"In fact, you used to have dreams, once upon a time.\"\n\nLily grabbed him by the collar and turned him around. \"How the fuck do you know that?\"\n\n\"You've been dreaming about it.\" He smacked her hand with his shovel and she dropped him. \"I know everything that goes on in here, you know.\"\n\n\"How?\" She tried to grab him again, but he moved just out of reach to scoop up some sand in his bucket.\n\n\"I have a theory about it, actually.\" He flipped the bucket upside down on the sand and then lifted it. The resulting cylinder was almost six feet tall, and the bucket shriveled up like a used balloon. \"Wanna hear?\"\n\n\"Do I have a choice?\"\n\n\"It's your dream. Well...\" he looked around. \"Kind of.\" He pulled a squirt gun out of his pocket and sprayed down the sand with a continuous stream, making it nice and wet. \"Humans dream. Demons don't.\"\n\n\"Ugh. If I'm going to start having dreams, I would rather they don't become lectures.\" She watched as he tossed the squirt gun, and then started manipulating the sand with his hands.\n\n\"Better than the nightmares you have been having.\" He was moving quickly now, and she frowned. The figure he was making looked exactly like Aladdin's princess, and she didn't like where this was going. \"You started as a human. A wish turned you into a demon. So, what would that look like?\"\n\n\"A lot of screaming and being on fire.\" She said it casually, but shivered inside. When she looked at Mike, it felt like it was really him, but not quite. Almost like an echo.\n\n\"Yes, well, I confess I don't know what demons are made of. However, fire it is.\" He pulled a lighter out of his pocket and lit it, then held it to the sand. The flames caught, and the princess was consumed. When the flames vanished, the sand had turned into black glass, and she saw a perfect likeness of herself standing there. \"Your soul became the demon you are today.\"\n\n\"Is this a shitty, low-budget remake of my rebirth?\" She tried to force herself awake, but was stuck. Damn.\n\nHe sighed. \"Maybe if someone hadn't blown the entire budget on trying to mind-meld with Cthulhu's asshole cousin, I could show you something better.\"\n\nLily scowled. \"Oh, that's real clever.\"\n\n\"Yes, it was. Now shut up.\" He stepped aside and pointed to the dark figure. \"You used to be someone else. Maybe she was even a nice person, who knows? If so, it certainly didn't carry over.\"\n\n\"Ass.\"\n\n\"Anyway, I wish I had a clever metaphor for what happens when you eat souls, but I'm afraid I have no idea what that looks like.\" He put his hands on his waist and regarded the figure before him. \"I forgot where I was going with this.\"\n\n\"You've got to be fucking kidding me.\" She dug her fingers into the sand and willed a stone to appear. The size of a softball, she lobbed the stone at the sand sculpture.\n\nInstead of falling apart, it shattered like glass. Beneath was the sandy visage of the princess, looking out at both of them.\n\n\"Oh, I remember now!\" Mike approached the figure and tapped the glassy exterior. \"A foreign element has been introduced. Think of it as an extra line of code that interacts with the original operating system.\"\n\n\"Oh, please, kill me.\" She summoned a noose and pretended to hang herself, her feet dangling a foot above the sand.\n\n\"Hear me out.\" He picked up a piece of glass and held it up to his face. It was her left eye and forehead, and it lined up perfectly on his face. \"Why did you see yourself in Mike's head?\"\n\nShe let go of the noose and fell onto the sand. \"So, you admit you're not Mike?\"\n\n\"I never said I was. At least, not all of him, but I need you to focus.\" He pressed the glass into his face where it merged with his features. Part of his face was now her own. \"You're a succubus that eats souls, but a tiny piece of you is in him. What if something slid in to fill that gap?\"\n\nShe narrowed her eyes, contemplating the entity that stood before her. It was Mike, but it also wasn't. It was like a small copy of him, but incomplete.\n\n\"Holy shit,\" she whispered. \"You're a piece of his soul?\"\n\n\"I think so. A part of you lives in him, but a part of him now lives in you as well. And now that you have this tiny little piece of soul, you've started dreaming again.\" He turned and looked at the house behind him. \"It was weird, at first. I dreamt I was a princess, and that I was marrying Aladdin of all people. How weird and fucked up is that? I kept thinking I would wake up at home and in my bed, but no. You were part of that dream, so I thought you had trapped me here, but you seemed just as confused as I am. It seems that while the soul is technically mine, I get to have your dreams for you.\"\n\n\"That's unheard of. Impossible even.\"\n\n\"Maybe for a true succubus. But you used to be a human, remember? Your soul was destroyed and made into something else, but maybe, deep down, it still remembers.\" He smirked. \"Besides, while you were busy drifting in and out of consciousness, I caught some weird details about going back in time? So don't lecture me about impossible.\"\n\n\"So how does this help me? Or you?\"\n\n\"I don't know,\" he admitted. \"But for someone who has complete control over the dreams of others, why are you so disconnected in here, your own head?\"\n\n\"It's my dream, but you're having it for me.\" She shook her head in disbelief. \"Romeo, what am I going to do with you?\"\n\n\"I can think of one thing.\" He slid his arm around her waist and pulled her in close. His breath was hot against her skin, and her eyes widened in surprise as he looked deep into her eyes.\n\n\"OW!\" He had pinched her ass, and she shoved him away. Rubbing her butt, she glared at him. \"What the fuck?\"\n\n\"Thought maybe if I pinched you, you'd wake up.\" He chuckled and held out his arm. \"Guess it's your turn. I've tried it on myself, but nothing happens.\"\n\nShe grabbed a handful of his flesh and dug her nails in. She half expected his skin to tear, but it held strong beneath the sharp grasp of her fingernails and even stretched like putty.\n\nHe sighed. \"Nope. I thought that might do it. Damn.\" He placed his hands on his waist. \"There's got to be something we're missing here.\"\n\nThey circled the island for a couple of hours. It was much smaller than the one in Mike's head, and when they went in the house, the furniture had been painted on the wall like a dollhouse. They gave up and went out onto the beach where they summoned up a pair of beach chairs and just watched the water for a while.\n\nEvery now and then, Lily got a flash of the real world, but all she saw was a forest trail. These glimpses were brief, but when she returned, sometimes hours had passed for Mike. They kept each other company on the shore and watched as the stars moved across the night sky.\n\nOut in the water, dark shadows moved about, breaking free of the surface and keening to the night sky.\n\n\"What are those?\" Mike had asked her after the first time.\n\n\"I have no fucking idea,\" she replied, but recognized their predatory nature at once. She had seen many mysterious things in the Dreamscape, and it would seem that her fledgling soul-piece was being hunted. \"Promise me you'll stay out of the water.\"\n\nHe agreed, and they waited until dawn. When the sun came up, Lily watched as the dark shapes vanished beneath the waves. She squinted into the sunrise, putting up her hands to provide shade.\n\nThe sounds of the ocean disappeared, and she found herself sitting on a beach chair on the cool, imperial marble tile of the palace. Startled, she fell out of her chair and reached for Mike. Her hand slid into his and she squeezed hard and then pulled him in.\n\nThey helped each other stand without breaking contact, and Lily found herself in Aladdin's throne room. They were surrounded by servants and dignitaries who patiently awaited orders from the newly crowned king. The throne next to his was currently empty, and the scene was completely still.\n\n\"Did someone hit pause?\" Mike asked, then moved toward one of the nearby nobles. He put his hand on the man's face and gave it a push. \"No reaction. Ideas?\"\n\n\"Just one.\" She walked up to the throne and climbed the steps to the other chair. \"It's another memory, but it's missing something.\"\n\n\"Oh.\" Mike shivered. \"Can't be much worse than that one where I burned up, so let's get started.\" He jogged up to the empty throne and got ready to sit, but Lily stopped him.\n\n\"These are my memories, Romeo. You shouldn't have to live with them.\"\n\nOne side of his mouth curled up into a crooked grin, and he took her hand in his own.\n\n\"I'll still be me when it's over, don't you worry.\" He sat down in the throne and his visage immediately changed into Lily's. This version of her was wearing the thick kimono style that was becoming popular in the East and her face had been painted elaborately. The princess had been reported murdered by a neighboring kingdom some decades back, so Aladdin had taken a consort to keep him company.\n\nThe dream flowed into motion, the men and women of the court now milling about, and Lily stood next to Mike and put a hand on his shoulder.\n\n\"You have failed me,\" Aladdin muttered under his breath so that only she could hear it.\n\n\"I have,\" Mike responded in Lily's voice. \"It should have been easy, but the leader of the Han is protected by powerful magic. I couldn't even get close enough to him to see into his dreams.\"\n\n\"I see.\" Aladdin stroked the small beard he had grown. He was much older now, but Lily knew it was a deception. Aladdin himself had stopped aging mere years after he got the lamp. Immortality was an easy thing to wish for, but she often wondered what price he had paid. Truthfully, she wondered if that was when his humanity had fled him. After all, a man who could not die would never see another mortal as his peer. \"But I suppose that makes sense. The Han dynasty has expanded at an unprecedented rate. If the emperor has magical help...well, we both know that hastens the process.\"\n\n\"Yes, my lord.\" They sat through the proceedings as Aladdin gave advice to the farmers who were suffering drought, orders to the army who protected the western borders, and then passed a royal decree regarding taxes from the middle class. He had no need for such money, not with an infinite wealth of riches to pull from, but it was all about controlling the populace. He wanted his kingdom to be run a specific way, and his will was absolute.\n\nOnce the room had emptied, he dismissed his guards and servants. It was now just him, Lily, and Mike, and they sat in silence for a long time.\n\nAladdin pulled the lamp from beneath a silk scarf on his throne and gave it a rub. The djinn inside made a grand entrance from the dark smoke that gathered, and crossed his arms in anticipation.\n\n\"Master,\" said the djinn, his eyes glittering like gemstones.\n\n\"I have need of your counsel,\" said Aladdin, and he slid free of his throne. \"I sent the succubus to kill the emperor and she failed because my target was protected. I wonder what you might know of this?\"\n\nThe djinn grinned, showing all of his teeth. \"This man would rule China. He will conquer many tribes, and his kingdom shall become part of a far greater legacy. He is surrounded by powerful warriors, both magical and divine. This destiny is one that shall reverberate through time.\"\n\n\"Does he have a djinn as well?\"\n\nThe djinn nodded. \"He does. It is a greater djinn like myself, and capable of granting his heart's desire once a day.\"\n\n\"So why can't I wish that he fails?\" Aladdin summoned an image of his kingdom, which floated in the air before him. He had wished to become the most powerful sorcerer in the world, and such a spell was but a mere thought to him. \"In such a manner that cannot be traced to us, that is.\"\n\nThe djinn thought about this for a minute before speaking. \"You could wish that he fails, and I could set events in motion to make it so. A wish of that magnitude would surely be noticed by the djinn who accompanies him. It would be within his power to learn your identity, and I fear they would come here to attack you. Thus, your wish would likely be wasted, and we would be exposed.\"\n\nAladdin scowled. \"And I assume that I can't wish him dead? Or wish the djinn destroyed?\"\n\nThe djinn nodded. \"A djinn can bend the universe to his will, but death cannot be commanded. I would be forced to dispatch him through ordinary means, and in this, I believe I would fail. He is far too well protected. As for destroying the djinn...you could wish his vessel destroyed. This is death for our kind, and it would bring the wrath of all my kind down on you. One wish a day would not be enough to protect you, Master.\"\n\n\"Could you empower her?\" Aladdin gestured at Mike. \"Maybe grant her the ability to get close enough? Teleport her into the man's bedroom?\"\n\n\"Again, I could do so, but I doubt she would survive. It is likely that they already know such an attempt was made.\"\n\n\"I don't care if she survives, I can make another.\"\n\n\"She would not succeed either.\" The djinn's eyes flickered gold and blue. \"This man's destiny is divine. He will succeed no matter what we throw at him, this I assure you. Fighting one of my own kind would be difficult enough, but his warriors are fierce and possess magic of their own. He will come here and your kingdom will fall, and you will be forced to flee, but where others shall die of old age and become dust, you will have the chance to reclaim what is yours, if you are patient.\"\n\n\"I am not.\" Aladdin looked at Mike, then back at the djinn. \"What would you have me do? Wait a hundred years in the shadows like a rat and then start over? And how do you know that this man hasn't wished for immortality like myself.\"\n\nThe djinn grinned. \"You wished for immortality, and this I granted you, but it came at a cost. It's one of the few wishes that requires one. This man was not willing to pay the price.\"\n\n\"Interesting.\" Aladdin grinned. \"Then again, how many would?\"\n\n\"Too many, I wager,\" the djinn responded.\n\n\"I wonder,\" said Mike in Lily's voice. \"Could their djinn be countered if my master could make more than one wish a day?\"\n\nThe djinn ignored the question, but Aladdin took notice.\n\n\"What are you implying?\" he asked.\n\n\"You are allowed to make one wish a day. It occurs to me that the djinn could grant you more than one wish if he chose. He implies that these rules have him bound, but what would he be capable of if he could grant more than one?\"\n\nThe djinn scowled. \"I cannot kill another, nor can I grant more wishes. A wish is a powerful thing, and even one a day threatens the fabric of reality. You know this already, cursed one.\"\n\n\"Where are you going with this?\" asked Aladdin.\n\nMike smirked and looked at Aladdin. \"There will always be someone more powerful than you. Think about it. This emperor is aided by magical beings and a djinn of his own, so maybe you lay low until he passes through the world. But then what? What if destiny strikes again and someone else seeks to strip you of power in two hundred years? Or a thousand? The world is constantly changing, and though you are immensely powerful, can you hope to keep up with only a wish a day?\"\n\nLily jumped out of the way as Aladdin opened the palm of his hand and blasted Mike with lightning, knocking him out of the throne. \"I can do this with but a thought.\"",
        "\"Yes, but...\" Mike stood and laughed. \"Could such power defeat an army? Are you even the most powerful sorcerer in the world anymore? Surely someone has surpassed you.\"\n\n\"Nobody can surpass me,\" he said, then opened his hand to summon lightning once again.\n\n\"Actually,\" the djinn interjected. \"You are no longer the most powerful sorcerer in the world.\"\n\n\"What?\" Aladdin whirled around on the djinn. \"Explain!\"\n\n\"The pursuit of power is never ending. You may wish to be the most powerful sorcerer today, but it may no longer be true tomorrow.\"\n\n\"And what if I wished to be the most powerful sorcerer to ever exist?\"\n\n\"A djinn cannot see through time. We can see what is to come, but never know the specifics. Such a wish would be wasted, for somebody could wish to surpass you and then it would be granted.\"\n\n\"Damn.\" He got ready to throw lightning again, but paused. \"Succubus. You were going somewhere with your inquiries.\"\n\nMike chuckled and stood, unharmed. \"I remember the djinn telling you once upon a time that the many tribes of the djinn could have no children. They have all been created, yes?\"\n\nAladdin looked at the djinn expectedly.\n\n\"This is true,\" said the djinn. \"My race was created in the beginning and we do not breed, nor are we born. As the years turn, all we can do is hope for our freedom or be destroyed.\"\n\n\"Yet you have knowledge. You can read the fabric of reality, yes? So much knowledge and power. Yet if our master could surpass you, surely he could avoid the calamities of the future.\"\n\nThe djinn looked shocked, and he eyed Aladdin with uncertainty. \"I cannot simply give him a djinn's knowledge. He is still human, and his body cannot contain such power. It would be like putting lightning in a bottle, and would destroy him.\"\n\n\"And yet there are other djinn, right? What if somebody wished for him to lose his powers, or what if you were stolen away? What then? Not only could he be surpassed, but he could be reduced to nothing, turned back into an ordinary peasant.\" Mike laughed. \"Do you not see, Master, what I suggest? You should wish to become the most powerful djinn in the world. Such a thing should not be beyond his power, and then you could grant your own wishes, know snippets of the future, and become a being that cannot be stopped. No djinn could undo this wish, and you could rule as a god over all of China, if not the world!\"\n\nAladdin was stunned, and he looked at the djinn. \"Is such a thing possible?\"\n\nThe djinn uncrossed his arms and looked at Aladdin. \"I...can grant such a wish, but I beg you not to make it. This is a big wish, and it will grab the attention of every kind of divine being who will seek to undo it. A djinn cannot be omnipotent in the face of an angry god, and they would come and smite you from existence.\"\n\n\"But I would see them coming.\" Aladdin grinned and picked up his lamp, his eyes on Mike. \"And you would have that, yes? A master who can never be defeated?\"\n\nMike nodded. \"And I could remain by your side forever.\"\n\n\"Slave, hear my wish and grant it.\" Aladdin looked at the djinn, then back at Mike.\n\n\"Here it comes,\" muttered Lily.\n\n\"I wish that the vessel of every djinn powerful enough to undo any of my wishes or defeat me with magic be destroyed immediately.\"\n\n\"What?\" cried Mike.\n\nThe djinn let out a shriek of rage as his body lit from within with magical power. The room filled with pressure as the lamp in Aladdin's hands cracked and turned to dust.\n\nThe djinn exploded, creating a shockwave that blasted all the windows out of their frames. Broken glass crashed onto the floor as molten hot motes of light blazed their way across the marble as if trying to hide. Each one flickered out of existence, leaving behind a series of ominous fractals that had been scorched into the floor.\n\n\"Do you think I'm stupid?\" asked Aladdin. \"If I had become a djinn, I, too, would have been bound by their laws.\" He summoned the lightning again and blasted Mike across the room.\n\nMike laid on the floor and Lily knelt down by his side. Even though he looked like her right now, he was still experiencing the agony that accompanied each magical blast. Aladdin turned his back on the two of them and stared at the palace door.\n\n\"Maybe I will be surpassed, but that's okay. There are other means of achieving power, and I have the rest of time to do it. The djinn has made me soft, and you were right. It would only be a matter of time before someone used his power against me.\" He looked at the door of the palace, then looked down at the ring on his hand that contained a minor djinn inside. \"We leave tonight for a brand new world, you and I. The Han can have their dynasty, for when I return to reclaim my rightful place, they will be naught but dust in the ground. Tonight is the night I leave the good king Aladdin behind and aspire to something greater. As for you? Well, you did just cost me a servant, so you will be punished.\" He laughed and summoned the lightning once again. Mike screamed and the dream crumbled into sand around them, leaving just him and Lily on the cold shores of the Dreamscape.\n\n<center>\ud83d\ude08\ud83d\ude08\ud83d\ude08</center>\n\nDana pushed the wheelchair across the dusty parking lot of the trailhead until she was up onto the pavement underneath the map display. She grabbed one of the maps and tucked it into the back pocket of the wheelchair before heading onto the trail. A couple of hikers who saw her gave her funny looks, but she ignored them and soldiered forward.\n\nLily giggled, her gaze on something she couldn't see. She had stopped randomly shapeshifting sometime this morning, which meant this part of the trip shouldn't draw too much attention. However, the stolen car she had left behind already had, and she was a fair way into the forest when she looked over her shoulders and caught the faint glimpse of red and blue lights flashing in the parking lot.\n\nThe car they had taken from Butte hadn't lasted long. It was running low on gas by the time she made Spokane, so she had pulled into the parking lot of a nicer hotel and scoured it for a car that had a full tank of gas. With Tick Tock's help, she had broken into a nice rental and had loaded the disoriented succubus inside. As the miles ticked by, she was eventually able to get directions from Lily, though those moments were few and far between.\n\n\"Birds!\" Lily shouted, then pointed at a nearby rock.\n\n\"Shhh.\" Dana shoved the wheelchair up a steep hill and was grateful when Tick Tock extended arms to help her push. She probably could have carried the succubus over one shoulder, but she kept squirming about and kicking her legs, and this was the best idea she had.\n\nThe vegetation was thick, but she could smell the thickening presence of people in the parking lot. Her best bet was that the rental car had a GPS tracker inside, but it was too late to worry about things like that now. She closed her eyes and summoned a mental image of the map she had looked at and compared it to what Lily had told her during one of her fever dreams.\n\nThere was a trail on the map that dead-ended with a cute little loop on the end. Apparently there was an unmarked trail from there that could be followed. Lily had mentioned something about a road that they could drive on, but she had been unable to get clear directions from her past that. They were a little northwest of Bend, Oregon and headed for the border between Deschutes and Willamette National Forest. If what Lily had said was right, they could be on the edge of Mike's property in just over half an hour.\n\nThe trail had split off in a couple of places already, and Dana was already pushing the wheelchair as fast as it would go along a trail that had been largely overtaken by vegetation. It was probably an old hunting trail, or maybe even a path to a secret place where the locals smoked dope, she had no way of knowing. However, the wheelchair kept catching and she groaned in frustration.\n\n\"I'll go this way.\" It was a man's voice, and Dana looked over her shoulder and scowled. That's what she got for stealing a rental. She felt the handles of the wheelchair shift in her hands and when she turned around, Tick Tock had transformed into a large dolly with Lily strapped to it. It made her think of Hannibal Lecter from Silence of the Lambs.\n\n\"Try to stay standing,\" she told the succubus and pushed her faster now.\n\n\"Mike?\" Lily tilted her head and followed a small bush as they passed it by. \"Like, you're standing in front of me, but I don't feel like that's really you.\"\n\n\"It's a bush, now shut up.\" She wished she had a roll of duct tape or something to silence Lily. The succubus was now engaging in conversation with someone but was slipping from one language to another. Dana recognized Italian, then Japanese, and then a little French. At one point, Lily was spouting Latin, and Dana heard rustling a ways back and turned around, and spotting a couple of rangers pushing through the brush. They were too far away to be heard, but if Dana could see them, then they could see her. \n\n\"Hey!\" one of them called, and she broke into a run. It was difficult keeping the dolly going straight, but Tick Tock helped as best as he could by using his arms to keep her steady.\n\n\"Oh!\" Lily sprouted horns and her eyes went black.\n\n\"Oh, come the fuck on,\" Dana swore, then swerved off the trail. \"This would be so much easier if you would wake up, even for ten minutes.\"\n\nIt reminded her of a time when one of the girls in her dorm had gotten so drunk that they had to take shifts making sure she was okay throughout the night. However, that girl had gotten better after puking after breakfast, whereas Lily's post Elder-God hangover was going to keep fucking them both. She wondered if she would be able to fight off the people chasing her by herself? What if Lily transformed in front of them?\n\nThe path thinned out and then merged with a bigger trail, which made it easier for Dana to run. It was all uphill, but she wasn't going to tire anytime soon, so she just plowed forward as quick as she could. When they reached the top of the hill, the dodollyllie twisted out of her hands and she hopped on. Tick Tock lowered an extra pair of wheels to the ground and she rode down the trail on the dolly like a make-shift Segway while Lily burst into a raucous rendition of \"She'll be Comin' 'Round the Mountain\".\n\nAt the bottom of the hill, Tick Tock spun back around and Dana pushed again. By the time they made the next hill, she looked back to see a pair of rangers covered in sweat and gasping at the top of the last hill. With incredulous looks on their faces, one of them paused to talk into a walkie-talkie.\n\nSomewhere behind them, she heard the sound of an ATV revving up.\n\nTick Tock spun around and she rode him all the way to the floor of the next valley. No matter how long they did this trick, an ATV would catch them eventually. She caught the split where they needed to get off and ran long it. The dolly left trail lines in the dirt, and she could only hope that whoever was following wouldn't spot it in time.\n\nThe trail wound through the woods and over a small creek. She passed a couple of warped benches and a trash can when the ATV came into view behind them, a pair of rangers riding it together.\n\nThe loop was coming up, and Dana ran into it, her whole body hot with exertion. She was sweating, but that also meant she was getting hungry.\n\n\"There will always be someone more powerful than you,\" Lily told her.\n\n\"Opposite of encouraging,\" Dana replied.\n\nWhen they came to the end of the loop, she pushed Lily through a gap in the bushes. It was narrow enough that, when the ATV caught up, the rangers were forced to dismount.\n\n\"Half a mile, half a mile,\" she muttered, then ran as fast as she could. The dolly caught multiple times on rocks and sticks, and twisted out of her hands dangerously at one point. Barely able to hold on, she found herself in a small clearing of waist high wheat with trees on the other side. The air seemed to shimmer at the halfway point, and when she passed the boundary, a tingle moved through her entire body.\n\nShe was nearly at the trees when she turned around to see where the rangers were. Both of them had stopped at the boundary and they wandered around in confusion.\n\n\"C'mon,\" she muttered, then put her hand over Lily's mouth to silence her.\n\n\"You sure they went this way?\" one of the rangers asked.\n\n\"I thought so, but...they must have doubled back.\" Even though Dana and LIly were still in plain sight, the rangers turned and ran back to their ATV.\n\nDana let out a sigh of relief, and then stared daggers at Lily.\n\n\"You so fucking owe me,\" she said, and then pushed her into the trees.\n\nIt was slow going for a while. The brush was largely impassable, but Tick Tock used a pair of blades to clear a path for them when he could, and they eventually wandered into a clearing surrounded by large rocks. Dana flopped down on a nearby rock and gazed up at the sky.\n\n\"This really sucks, do you know that?\"\n\nThe land itself seemed to be blessed with the same magic that protected Mike's house, but now what? Was she supposed to wander around out here for a week and then steal a car to get home? She had a bag of magic marbles and her magic flask was back in her room in the future, so she would have to get that somehow, too. \"You wanted to stick it to the man, I get that. But now we're royally screwed for the next few days, and I get the feeling I'm going to have to learn how to take down a deer with my bare hands or something to keep from trying to eat your damned face.\"\n\nLily giggled and her eyes changed color.\n\n\"Yeah, wonderful. At least Tick Tock contributes.\" She sighed and turned her thoughts back to the broken motorcycle they had left behind.\n\nAlex. Dana had spent a year fixing up her late girlfriend's bike, only to lose it forever. She had kept the feelings at bay during their tense flight from Montana, but those feelings could only be bottled up for so long.\n\nWhen she cried out, it was the wail of an injured animal. She fell to her knees and clawed at the earth beneath her, the dam finally breaking. Hundreds of hours of pounding out the dents that Alex had put in it during the crash had been an effort to undo tragedy, a means of healing. However, the bandage had been ripped off the wound long before it could heal, and now she was consumed by a never-ending tide of grief.\n\nBetween broken cries, she could hear Lily mumbling, and it took everything in her not to try and strangle her. She knew it wouldn't hurt the demon, and none of it was even Lily's fault, but she needed someone to hate, to blame for everything.\n\nShe thought back to something Lily had once told her and looked up at the succubus and wiped the tears from her eyes.\n\n\"I need you,\" she said. \"I need your advice. I'm feeling particularly murderous, and only you can help me with that.\"\n\n\"Nobody's getting murdered today.\" The voice that came from behind her was a man's voice, followed by the unmistakable cocking of a shotgun. \"If you're lucky, that is.\"\n\nDana put her arms in the air and groaned. Apparently not everybody in the Forest Service was affected by the magic protecting this place.\n\nWhen she turned to see who it was, she was shocked to see an old man aiming his gun at her. His white hair was long and pulled back into a ponytail, and though his face was lined with deep wrinkles, he had the confident stance of someone who had no problem pulling the trigger. He wore an old pair of jeans and a red flannel shirt. He had on combat boots that were covered in dry mud.\n\n\"Thought maybe you girls had gotten lost or somethin', wanderin' onto my land and all. Looks like you're up to no good.\"\n\n\"Easy.\" Dana stood slowly and turned to face him properly and moved toward him. \"Okay, so I can explain. We needed that car to get away from my friend's abusive husband. He was chasing us and so we stole that car, and I'm so very sorry, and...\"\n\nHe aimed the gun at Dana's head. \"I see you walkin' my way and have no problem paintin' the woods with your face.\" He looked past Dana at Lily. \"Who the hell was your friend married to? She's got horns.\"\n\n\"Oh, yeah, she was wearing a costume when I rescued her. They're super-glued on.\"\n\n\"You're so full of shit, you stink.\" He sniffed the air. \"Literally. I can smell you from here. You bathe in garbage or something?\"\n\nLily laughed and leaned forward, causing the dolly to tip and crash to the ground. She let out a grunt of pain and her tail appeared, whipping about in an effort to tip the dolly back over.\n\nThe old man pointed the gun at Lily, then back at Dana, then rolled his eyes. \"How did you two get past the barrier? No bullshit this time. Your friend clearly isn't human.\"\n\nDana stared into the man's eyes. He was taking this very well. \"We're running away from some bad people. You probably haven't heard of them, but we just need a place to stay for a week. My friend owns this land and we hoped it would be safe here.\"\n\n\"What's your friend's name?\"\n\n\"Mike. Mike Radley.\"\n\nHe scrunched up his face. \"Don't think so. This land is owned by someone else.\"\n\n\"Do you mean Emily? She died a couple years ago. It belongs to Mike now.\"\n\nHe chewed this over for a moment and then looked at Lily. \"What is she?\"\n\n\"A succubus.\"\n\n\"Hmm.\" He thought it over for a few seconds and then lowered his gun and looked over his shoulder. \"What do you think?\"\n\n\"I think one smells of brimstone and the other of death.\" The voice was deep and gravelly, but Dana couldn't see anyone there. She sniffed the air, but all she could smell was the forest and the woodfire stink of the man in front of her. \"But Emily would be an old woman, if she lived, so it rings of truth.\"\n\n\"Who's there?\" Dana asked.\n\n\"Don't mind him, my friend is real good at hiding.\" He looked over his other shoulder. \"And how about you?\"\n\nThere was no answer this time, but it was clear that he was looking at someone. He nodded and then cocked his shotgun and extracted the shell from the bottom, which slid easily into the pocket of his flannel shirt. He set the safety and slung the shotgun over his shoulder by its strap.\n\n\"Yeah, okay,\" he said. \"My name's Darren.\"\n\n\"Dana. And this is Lily.\" She pointed to Lily, who was still trying to flip herself over using her tail. \"Look, no offense, but it's probably better if you just let us go do our own thing. We're not exactly safe to be around.\"\n\nDarren snorted. \"I've had daydreams scarier than the pair of you. Though your friend's gonna need to calm down with that tail of hers if I'm gonna help her back up.\"\n\nThe crunch of heavy footsteps startled Dana, and she turned around to see a large figure step away from the tree where it had been leaning. His moss-covered fur was brown like the earth and his feet were as big as the legends made them out to be.\n\n\"I can help with this one,\" Bigfoot said, then casually swatted away Lily's tail and lifted the dolly up with one hand. Lily's face was covered in dirt, and her eyes locked on the sasquatch's face.\n\n\"I thought you'd be taller,\" Lily told him.\n\n\"I'm not wearing shoes today.\" Bigfoot undid the straps and slung her over one shoulder. \"Don't sting me or I'll stick you in the ground and roll a boulder on top of you.\"\n\n\"I love a man who knows how to talk to...\" Her eyes went vacant and she babbled.\n\n\"Is your friend okay?\" Darren asked.\n\nDana shrugged. \"No idea. We've been running since this happened. Oh, and the dolly is alive. If you could all look away, that would be very helpful.\"\n\nDarren looked doubtful at first, but he turned his head and Dana heard a loud pop. Tick Tock was now a desk clock, and she picked him up in both hands.\n\n\"Now that's different. There aren't any more of you, are there?\" Darren scanned the forest. \"No men, right?\"\n\nThat's a weird question, she thought. \"Just the three of us.\"",
        "\"What's your deal? Your friend is a succubus, and you've got a shapeshifter. You a witch or something?\"\n\n\"She's dead,\" Bigfoot said. \"I can smell it.\"\n\n\"Hmph.\" Darren shrugged and started walking away. He had a noticeable limp. \"Guess we should get back to the house. Eulalie will start to worry if we aren't back.\"\n\n\"Who?\" Dana asked.\n\n\"My daughter. Wasn't planning on bringing home company, but you made it past the barrier and you aren't good eatin' so I assume you're safe.\"\n\n\"I'm sorry, what?\" It was easy to keep up with Darren, but he stopped next to a pair of trees and turned around.\n\n\"Waitin' on you, big guy.\"\n\nHe moved aside to let Bigfoot through, and the sasquatch pushed against one of the trees, causing them to bend apart. The forest beyond vanished and Dana was now looking at a large log cabin in the middle of a field. There was a barn nearby and an old jeep out front.\n\n\"You can come through here or go the long way around,\" Darren told her as he stepped through. \"Long way will take you most of the day though.\"\n\nDana ran through the portal that Bigfoot had opened, then looked back to see that it had disappeared once they were all through.\n\n\"Neat, huh?\" Darren asked.\n\n\"Not even the strangest thing I'm gonna see this week,\" Dana replied. \"No offense, but it's going to be a fucked up few days.\"\n\nDarren lifted an eyebrow. \"You bringing trouble down on my house?\"\n\n\"Trouble is a thousand miles away, don't you worry about it.\" She stopped outside the house and looked up. It seemed nice enough, and she could see that the curtains all looked fancy through the glass. \"How long have you been out here?\"\n\n\"A lifetime.\" Darren walked up the steps to the front door and pushed. Bigfoot followed him inside, causing the floor to creak, and Dana followed. The interior of the cabin somehow looked bigger than the outside, and hanging from the ceiling were floral arrangements that had been bundled up in thick, white thread.\n\n\"This isn't at all what I expected,\" a woman said from up in the rafters.\n\n\"Yeah, well, now we know why they made it through the barrier,\" Darren replied. \"They know the man who owns this place.\"\n\n\"I thought Emily owned this place?\" A woman leaned out over the rafters. She had long black hair and pale skin.\n\n\"She did, but sounds like she passed. Get down here, Eulalie, may as well get this over with.\"\n\n\"Are you sure?\" Her face twisted up in concern.\n\n\"This one's got horns and a tail. I don't think it'll be a big deal.\" Darren coughed and then sat down in a comfortable looking recliner. \"Where's your sister at?\"\n\n\"She's out hunting.\" Eulalie disappeared for a second and then tumbled forward, her body expanding just before impact. Eight glossy black legs spread wide to arrest her fall, and she stood in front of Dana, her arms nervously held at her sides. Her upper half was that of a woman, but her lower half was that of a spider.\n\nDana was glad that she was dead. She didn't care about spiders one way or the other, but the sudden shock of Eulalie's appearance would have definitely triggered a scream.\n\n\"Hi, I'm Dana.\" She held her hand out.\n\n\"Eulalie.\" She took Dana's hand and shook it. \"I'm an Arachne, in case you were wondering.\"\n\n\"Cool. I'm a...undead.\" She cast a nervous glance at Darren. He seemed the zombie shooting type, but he also had a spider for a daughter, so who knew what was going through his head.\n\n\"Undead?\" Eulalie blinked, and Dana watched as a series of eyes along her forehead mimicked the action. \"Like a lich? Zombie? Ghoul?\"\n\n\"Don't be rude,\" Darren chastised. \"We've been hiding out here our entire lives, and the girls don't get much exposure to the outside world. Least they hadn't been until about a decade back when we got satellite internet. They both love to read, especially mythology, and Eulalie here even has a degree in computers.\"\n\n\"Oh.\" Dana mulled this over and decided to be honest. \"Well then, I'm kind of a zombie. One of a kind, actually. Incident with a necromancer.\"\n\n\"Fascinating.\" Eulalie's eyes shined with excitement. \"I had no idea such a thing was real! Well, that's not true. I suspected undead were a real thing because, well, you know.\"\n\n\"Because you're half-spider?\"\n\n\"No. Because my uncle is Bigfoot.\" She gestured at the sasquatch. \"He's seen a bunch of things and told us a ton of stories, so I figured that most mythical creatures existed in some form or another.\" Her face darkened and she turned to her father. \"Um, Dad, I don't think we have enough food to feed everybody.\"\n\n\"Don't worry,\" Dana told her. \"I don't eat normal food and neither does Lily. Oh, and this is Tick Tock.\" She held up the clock and a tiny door opened on the front to reveal a hand that waved.\n\n\"Wow!\" Eulalie leaned in close, her eyes wide in excitement, then took a step back. \"I'm so sorry, I'm just excited is all.\"\n\n\"Clearly.\" Dana couldn't help but smile. \"So it's just the three of you who live here?\"\n\n\"Four,\" Darren said. \"If you count Emery, that is. He's a house imp. He helps around here. He's out hunting with my other daughter. She should be back in the next few hours.\"\n\nBigfoot cleared his throat.\n\n\"You don't count, the whole world is your home,\" Darren said. \"Fuzzy ass nomad.\"\n\n\"I prefer the term well-traveled.\" Bigfoot walked into the kitchen and opened the fridge. He pulled out a pair of beers and then held them up. \"Want one?\"\n\n\"No, I'm...good.\" Dana watched in amazement as Bigfoot popped the top off a pair of microbrews with his thumbnail and then handed one to Darren.\n\nBigfoot had just offered her a beer!\n\n\"What's wrong with your friend?\" Eulalie asked. She moved close to the couch where Bigfoot had set her down. Lily's eyes were fluttering now, and waves of color moved across her skin.\n\n\"Good question.\" Dana sat down in a rocking chair. \"I don't know. We were busted breaking into a storage facility to steal some magic items and she mind-melded with an elder god or something like it. Now she's all fucked up.\"\n\n\"You have got to be kidding me!\" Eulalie crossed the room and placed her hands on Dana's chair, causing it to tilt forward. \"You guys saw an elder god?\"\n\n\"Eulalie,\" Darren warned.\n\n\"Oh, can it, Dad. I want to hear about it. What did it look like? Was it all tentacles? Did it talk to you?\"\n\nDana grimaced. \"Well, I didn't get a good look, but she did. It's why she's all messed up.\"\n\n\"Wow. Wait, don't tell me more, I want to ask about it when Velvet gets back so she can hear, too.\" Eulalie grinned, then looked at Darren. \"Let me get lunch ready.\" She scurried into the kitchen and started pulling stuff out of the cupboard.\n\n\"How did you guys end up here?\" Dana asked.\n\n\"Long story.\" Darren smirked, his gaze going distant. \"My wife and I were invited to stay out here for our own safety by Emily herself. Eventually the girls came along, and Emily visited a few times, but it's really just been us. Ana passed away a couple of years back, so now it's just us.\"\n\n\"We're pretty isolated,\" Eulalie said while casually lighting a gas burner. \"Dad goes into town for supplies, but we get most of it by hunting. The internet is the only way we get to see the world, because we aren't allowed to leave on account of being number one on the phobia list. Our kind has a bit of a reputation.\"\n\n\"Yeah, mine too.\" Dana watched as Eulalie threw together a quick stew. \"I'm surprised you didn't get invited to live at the main house with the others.\"\n\n\"Others? Like, other Arachne?\" Eulalie dropped her ladle and caught it at the last second.\n\n\"No, just other creatures,\" Dana said, but Darren cleared his throat, interrupting her.\n\n\"What brings you out here?\" he asked.\n\nDana gave him a brief rundown of her situation. By the time she had finished, Eulalie was done with her stew. A bowl went to Darren and another went to Bigfoot, and she couldn't help but notice that Eulalie kept none for herself. It was early afternoon when the front door opened and a woman crouched down to walk inside.\n\n\"What stinks in here?\" She had brown hair pulled back in a ponytail and was wearing an orange hunting vest. From the waist down, her body wasn't black or sleek\u2014instead, it was brown and hairy, and her markings reminded Dana of a wolf spider. Once the newcomer saw Dana and Lily on the couch, she froze in place and dropped a bundle on the floor.\n\n\"Careful, Velvet, you'll get the floors dirty!\" A little gray figure flew into the room ahead of them and hovered in place. \"Mother of earth...guests!\"\n\n\"Velvet, this is Dana and Lily,\" Darren introduced them. \"Dana, this is my youngest, Velvet.\"\n\n\"Hi.\" Dana stood and offered her hand, but Velvet just stared at her in awe.\n\n\"Are you real?\" she asked. \"Like, you're an actual person?\"\n\n\"I am.\"\n\n\"Are they staying? Please tell me they're staying.\"\n\n\"For just a week,\" Dana said. \"And then we have to be on our way.\"\n\n\"That's fine!\" Velvet clutched Dana's hand in her own. \"Oh my god, I have so many questions about the outside world, oh, wow, your friend has horns, and why do you smell\u2014\"\n\n\"Velvet.\" Darren pointed at the bundle on the floor. \"Get that picked up before Emery has a fit.\" Even as he said the words, the little imp was trying to drag the bundle himself, frantically flapping his wings.\n\n\"Okay, yeah, I'll get it to the cooler. It's a small deer, should be pretty tasty.\" She picked up the bundle with Emery still attached, then paused to lock eyes with Dana. \"But we will talk later. Promise me.\"\n\n\"I promise.\" She watched Velvet scuttle away and a smile crossed her face. This place was definitely her kind of weird. Across the room, Bigfoot let out a loud belch that rattled the windows, and Dana laughed.\n\n<center>\ud83d\udd77\ufe0f\ud83e\uddb6\ud83c\udfff\ud83d\udd77\ufe0f</center>\n\nLily was on her back in the sand, her eyes turned to the night sky. Across the distant waves, she occasionally heard voices as if they were engaged in conversation. Sometimes the words were almost audible, other times they were stretched and distorted until they sounded like a low hum across the dark waters of her imagination.\n\nAfter the throne room incident, she and Mike had talked for hours. It was difficult for her to remember all the details, but she tried to fill him in on the story of Aladdin and how she came to be. He had listened quietly long into the night, and now the two of them were just enjoying the ambience of the Dreamscape, only occasionally looking out at the dark things in the water.\n\nShe had her theories about what they could be, and also wondered if they were related to touching her mind to the ancient one at the bottom of the pit.\n\n\"What do you think those are?\" asked Mike, pointing at the stars above. \"In the real world, they are distant stars that might have planets, moons, or maybe even burned out millions of years ago. But those? This place has day and night cycles, but why the stars at all?\"\n\n\"I guess I don't follow.\"\n\n\"Well, the sun is there because it's day time. Maybe the sun is like a mental reflex, right? Your brain kind of fills it in. But the stars? All you need for night time is darkness, right?\"\n\n\"Maybe the stars are there so you know the difference between the night sky and the void. What a stupid question.\"\n\n\"Don't be bitchy. That's not my real question, though. Like, if you flew up there, what would you find? Could you eventually reach a star, or maybe discover it's just a giant light bulb? Things are weird in here like that. Are there other versions of this Dreamscape? Like, could I dream up a planet and go visit it? Well, if I wasn't stuck here, that is.\"\n\nLily sat up and looked at him. \"I've never really thought about it. Everybody's Dreamscape has its differences, and this one is undeniably yours.\"\n\n\"Kind of. It's my Dreamscape, but it's been stretched to fit what yours may be. So seriously, what do you think they are?\"\n\n\"I dunno.\" She laid back on the sand and watched. The stars in the sky sparkled like glittering diamonds, and she couldn't help but wonder. \"Maybe they're all copies of our sun.\"\n\n\"Why would you think that?\"\n\n\"Well...I'm a succubus, and I can jump from dream to dream. Maybe those stars belong to other people who are sleeping right now. And when they wake up, poof! It blinks out of existence. There are billions of people asleep at any given moment. That would be plenty to fill a night sky.\"\n\n\"I think I like that.\" Mike pointed at the stars above. \"It's not that we're actually alone when we dream. It's just that we're too far apart to see each other.\"\n\n\"That's for the best, I can assure you. The last thing you want is some asshole wandering around in your head and fucking up your Dreamscape. Maybe that's why everybody is so far apart, so that you can all have a piece of the universe to call your very own.\"\n\n\"Well, now you have a place of your own.\"\n\nLily smiled, then rolled on her side. \"Not quite. I've got to share it with you.\"\n\nHe shrugged. \"I mean...I'm a pretty good roommate. I clean up after myself, I'll even sweep the sand. Whatever it takes.\"\n\n\"You...you're not connected. To the real Mike, anyway, right?\"\n\nHe shook his head. \"I have all of my memories up until that time on the porch. You know, when we had that wild threesome with Cecilia.\"\n\n\"Ah, yes. Then you did that thing with that weird sex lightning of yours.\" She looked up at the stars. \"But you aren't connected, right? Right now, you're one of two men that know about my past and...well...I don't think I'm ready for you to know. The real you, that is. I don't want you pitying me.\"\n\n\"It's hard for me to even say how he would feel. I've experienced your memories first hand, your pain has become my own. For me, maybe it's pity, but it's also understanding. You used to be someone else and that all got stripped away in an instant. You've been Lily so long that you don't even think about who you used to be.\"\n\n\"That's because I don't really remember anything,\" she said. \"Memories are stored in the brain, and your soul is made up of the important ones. My soul and body were destroyed, so all that's left over are fragments of my time when I was with Aladdin. It's like he only wanted me to remember who I was when I was with him. I don't even remember my own name, I was ordered to forget it, and it has definitely been lost to history. The legends of Aladdin were greatly exaggerated, and don't even get me started on that damn cartoon they made.\"\n\n\"You didn't have a pet tiger?\" asked Mike.\n\n\"No. But we did fuck on that flying carpet.\" She arched her eyebrow. \"So now that you're here, you're kind of like my conscience now, aren't you? My own personal confidant, someone I can confide in who won't spill any of my secrets?\"\n\nHe laughed. \"You can't hear me when you're awake, though. It's weird, because when you're awake, I feel like I'm sleeping and only catching bits of it. The two of you have gotten into quite a bit of trouble, haven't you?\"\n\n\"I guess you could say that.\" She rolled over and onto Mike, pinning him against the sand. \"But enough about that. You promise the real Mike doesn't know you're here? There's no weird psychic thing going on?\"\n\n\"If there is, I'm totally unaware.\" He held up a three-fingered salute. \"Scout's honor.\"\n\nShe appraised him for a moment and grinned. \"You're like my personal, pocket Romeo, aren't you?\" Then she leaned into him, her lips pressing against his.\n\nHe reacted immediately, and his arms wrapped around her waist, his hands exploring her hips and lower back. When she broke her kiss, he smiled up at her from the sand.\n\n\"I didn't expect that,\" he said.\n\n\"I didn't either.\" Looking down at him, she realized it wasn't lust or hunger that drew her to him. No, it was something more. Mike, as a man, defied everything she had come to expect of men in general. While this wasn't something she had been able to bring up in person, this version of him was self-contained and hers alone. He was safe to talk to, and would keep all her secrets. She leaned into him and ran her fingers down his chest as she kissed him once more.\n\nHis hands pressed into her breasts, and her corset disappeared. She was naked now, except for her boots, and she dismissed his clothing with a thought. Despite the heat between them, they were content to just kiss, touch and explore each other with their hands. Lily ran her hands through Mike's hair and smiled, twisting strands of his hair around her fingers.\n\n\"I don't remember it being this thick,\" she told him.\n\n\"Well, you've got me all excited and it's been awhile.\" Realization dawned on him. \"Oh, my hair. I can't see it, so if you say so. It's not like I need haircuts in here, and it's been nice not having to shave.\"\n\nLily laughed and kissed him again, pressing her body against his. He rolled her onto her back and spread her legs apart, then slid down her belly and grabbed her by the ass and started eating her out. She stretched out, pressing her pussy into his mouth while she played with her nipples. As he licked around her clitoris, she gave her breasts a few playful pinches and moaned.\n\nShe loved the way he touched her. He took his time, doing little things first and waiting for her reaction. Sure, she could just tell him what she liked, but in all honesty, she didn't have a preference. Her body had been built for seduction, and she enjoyed absolutely anything that was thrown her way.\n\nBut what he was doing now was something more. She gasped and ran her hands through his hair, letting out tiny cries as he fingered her. In the moment, all she wanted was to feel him against her, to lose herself in his eyes and drown herself in his lips.\n\n\"Get up here,\" she muttered, and he obliged. When he was eye level with her, she wrapped her legs around his waist and pulled him inside of her. He grunted and then kissed her collar bone, and even bit it a little. Her tail wrapped around his waist to hold him against her, and he fucked her slowly, each thrust causing a tiny moan to escape her.\n\nUp above, the stars twinkled in every color known to man, and she couldn't help but notice that some of them shot across the sky and vanished over the horizon. Were those dreamers who had been woken early? It was a new thought, but it faded away when she felt Mike expand inside of her.\n\n\"What are you doing?\" she asked.\n\n\"It's the Dreamscape. So, whatever I want.\" While his thrusts were still gentle, the head of his cock was expanding inside of her and pressing against her g-spot. She was being stretched to her limit, and if she wanted, she could stretch herself to accommodate.\n\nHowever, she didn't. Instead, she tightened up her vaginal walls and had the soft tissue transform into a series of tongues that licked. The opening of her uterus turned into a mouth that latched onto the head of his cock and sucked, locking him in place inside of her.\n\n\"Shit, just when I thought I could pull one over on you,\" he said with a smile.\n\n\"I don't want you going anywhere.\" She kissed him and held him so tight that he could barely move. Her insides churned around him, and though they were both stationary, she was able to create the sensation of thrusting, licking and sucking inside her body. His engorged cock twitched and vibrated in response, and he moaned in her mouth.\n\nShe explored him with her hands, her hands returning and lingering on the curves of his ass. With his muscles tensed, they felt almost like polished marble, and she traced the curves with her hands, then dragged her nails along his hips. She loved how he felt inside her, how full he made her feel, and how he seemed to complete her.\n\nShe pulled her mouth of his. \"Stop,\" she told him, then placed her hands on the side of his head. \"Look into my eyes.\"\n\nHe obeyed, and she held him close to her, their noses just barely touching. His gasps of delight were often mirrored by her moans, but she wanted more. Their breathing had fallen in sync with each other, and she shifted her insides about even more. The mouth sucking on his cock sprouted a thin tongue of its own, and she teased the opening of his cock with it.",
        "Mike's eyes widened as the thin tongue slid into him, working its way down his shaft.\n\n\"Trust me,\" she whispered, and he shivered, his mouth now open. He was no longer even trying to move, his whole body tensing up. Through her magic, she could sense his orgasm coming, but she should have enough time to get this done.\n\n\"I do,\" he told her, then moaned. She was close enough that she could see his pupils dilate with every tremor of pleasure, and the pseudo-tongue reached the bottom of his shaft. She had never attempted something so intricate, so delicately balanced, but once she was properly inside of him, the tongue split and spread out.\n\nMike was taking shallow breaths now as she commanded the tongue to merge with the nerves of his cock. In a matter of minutes, she could now feel everything that he could, as if his cock was her own. She could feel the tight walls of her own vagina, the spinning tongues, and how full he felt from the inside. Little gasps escaped both of them now, but the process was only halfway done.\n\n\"Can you feel me?\" She asked.\n\n\"Of course I can,\" he mumbled, never once looking away.\n\n\"I mean, can you feel this?\" She gave her own nipple a twist and Mike let out a gasp.\n\n\"Holy shit,\" he whispered, his eyes widening.\n\n\"Good.\" With a shiver of delight, she transformed her interior one more time. The tip of every tongue and the length of pseudo-tongue inside his dick were now wired and connected directly to her clitoris, and she locked her lips to his and yanked him into her as hard as she could.\n\nIt was like her entire body was on fire. Mike let out a moan that became a shriek, but his pleasure was also hers, and she screamed. The kiss broke, and Mike pushed his forehead against hers as both of them called out into the night. She had no idea who came first, because they both felt it at once, and Mike pumped her full with an impossible amount of cum that her body eagerly devoured. Neither of them moved anymore as her insides churned, and the orgasms swirled back and forth between them. The waves in the ocean were now forming massive walls nearly twenty feet high that splashed down around them, splitting apart at the last moment to keep Lily and Mike dry.\n\nHours passed, or maybe even days, Lily didn't know or care. This was the Dreamscape, and neither of them would ever get hungry, thirsty or tired. The sun came and went, and the clouds swirled overhead and formed into giant storms that broke out along the horizon. She lost track of how many times they cried each other's names, or how many times his semen had spilled out of her to form into puddles that were soaked up by the sand. They remained locked together, but sometimes rolled over so she was on top.\n\nWith every orgasm, something inside of her sparked, and over the hours, a tiny fire had formed inside of her, a flame that warmed her from the inside. The house on the island seemed to triple in size, and the shoreline expanded. What they were doing had long ago ceased to be simply fucking, it had become something else, something she hesitated to put words to.\n\nThe sun was rising once again, and Lily let out a long moan, then fell limp against him and squeezed her vagina, sending another gush of his cum onto the sand.\n\n\"I feel like I could do this forever,\" she told him, tracing his face with her fingers.\n\n\"That's because you're the girl of my dreams.\" He grabbed her by the ass and backed out of her a couple of inches. \"I think maybe you're starting to rub off on me.\"\n\n\"Romeo, what am I gonna do with you?\" she asked, and then he pushed forward into her.\n\nLily opened her eyes and arched her back, one final orgasm ripping through her. The Dreamscape was gone, and so was Mike. She was lying on an old sofa in the room of a building she didn't recognize. It was late, perhaps the middle of the night, and the air smelled strongly of burnt wood, forest, and something earthy. However, none of this mattered, because when she sat up on the couch to get her bearings, she froze in place at the sight before her.\n\n\"What...what in the actual fuck am I looking at?\"\n\nDana was sitting on a metal chair in nothing but a white tank top and black panties. The table she sat at was big and round, and across from her were a pair of Arachne, who looked just as startled to see Lily as she was to see them. One of them was sitting in a complex hammock made of webs while the other one just stood there, holding a notebook in one of her hands and a glass of tea in the other. Standing on the table was a small imp who held a plastic die in each hand, and at the other end of the table was Bigfoot himself, sitting behind a large wooden screen that hid his portion of the table. She was conscious of the fact that everybody was staring at her.\n\n\"No, seriously. Where am I?\"\n\nDana stood from her chair and knelt down by Lily's side. \"Are you actually awake now?\" She placed a hand against Lily's forehead. \"It's been three days since Montana, and you've been a raving loon most of the time.\"\n\n\"Just three days?\" It had been at least two weeks in the Dreamscape for her.\n\n\"Yeah. Figured your brain was scrambled or something.\" With Dana so close now, Lily saw that she had blood on her lips.\n\n\"You've got something right there,\" Lily said, then dragged her finger along the stain and licked it. It was blood alright.\n\n\"Yeah, Velvet caught a deer for me. I had to eat a bunch of it right after they killed it, look at this.\" Dana turned sideways to reveal that her stomach bulged noticeably. \"My pants don't fit right now, and nobody else here wears any. Well, except for Darren, but he's not my size. He's asleep right now, but as long as we keep quiet, he shouldn't wake up.\"\n\n\"Are you...playing Monopoly with Bigfoot?\"\n\n\"What? Fuck no, I hate Monopoly.\" Dana gestured at the others. \"This is Bigfoot, Eulalie, Velvet, and Emery. They all know you by now, we've been trying to wake you up for days. We're in Oregon. Turns out these guys are living on Mike's land.\"\n\n\"I see.\" Lily stood up and surveyed the table, and finally got a good look at what everyone was playing. On the table, a small band of adventurers was currently surrounded by a group of intricately carved goblins. \"Oh, you have got to be kidding me.\"\n\n\"Don't knock it until you've tried it. We've got a lot to talk about, but if you'll excuse me, it's my turn and I had to spend all day splitting wood to pay our way for the week and I really wanna fuck up this goblin chief.\" Dana went back to the table and picked up one of the dice and rolled it. \"Does a seventeen hit?\"\n\n\"It does,\" said Bigfoot. He picked up a beer, which looked tiny in his hands and then took a sip. \"Roll for damage.\"\n\n<center>\ud83d\udd77\ufe0f\ud83e\uddb6\ud83c\udfff\ud83c\udfb2</center>\n\nI hope this chapter was a fun read for you, especially those of you who have read The Last of Her Kind here on Lit and have been dying to know more about what happened after the story ended.\n\nAs for my version of Bigfoot, I checked with him and he let me know that he will only steal beer from your campsite if it's any good. He enjoys microbrews with a preference for wheat beers with the occasional sour. Strangely, the joy for him is how it tastes when he burps, it's a Sasquatch thing, apparently.\n\nThanks again for reading, and I hope the month has been kind to you! Don't forget to leave a rating or a comment, and I'll see you next chapter when Dana spends some more time with the Arachne family until she catches up to when they got sent back in time.\n\nUntil next time!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "home for horny monsters spin-off",
        "impossible creampie",
        "bigfoot drinks beer and is the dungeon master",
        "girl of my dreams",
        "dream sex",
        "monstergirls",
        "romantic",
        "succubus"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-06"
}