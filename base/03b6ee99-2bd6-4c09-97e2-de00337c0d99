{
    "title": "Milk Donation",
    "pages": [
        "Mary placed the final plate on the dining table and examined the spread she'd made. There was everything a growing boy might need, and more. Probably too much more. Sighing happily, she called for her son, Adam, to come join her.\n\n\"Coming!\" came his call from his room.\n\nMary sat herself down and started to spoon mashed potatoes, green beans and a pork chop on to her plate. The smells of her own cooking had her belly aching with hunger, so she dove in without waiting for her son. He'd probably be a few minutes anyways.\n\nAfter the predicted few minutes, Adam made his appearance, eagerly sitting down and grabbing from dishes around the table. \"This is too much, Mom,\" he said.\n\n\"I know, but we can put the leftovers in the fridge. You can take it for lunch tomorrow.\"\n\n\"I don't have a microwave at school, you know that,\" he replied, spooning mashed potatoes into his mouth.\n\n\"Well, we can have it for dinner tomorrow then.\" Mary paused her eating to watch with immense satisfaction as Adam devoured his plate of food. She made it her life's pursuit to ensure that he was never hungry, never wanting for food to fill his belly, and yet he never seemed to gain weight. He was thin, but muscular, always on the move. She hoped he never got a desk job, because he was sure to balloon up. His father had done so, to the point where he'd died from a heart attack sitting at work.\n\nOnce dinner was done, they worked together to clean up the dishes.\n\n\"You know, you won't be able to eat like this when you go to college. You better appreciate it now,\" she told him with a smile.\n\n\"I always appreciate your cooking, Mom. I'll make sure to come home regularly to fill up.\"\n\n\"You better.\"\n\n\"Would it really be so bad if I went hungry for a day? I won't die.\"\n\n\"Sssh. You know how I am about that stuff. Even 18-year-old boys need to eat.\"\n\nHer son rolled his eyes at her, making her laugh. \"I know, Mom. Believe me, I know.\"\n\n\"Maybe it's a 'mom' thing, but I can't rest unless I know your belly is full. That's why I always make too much food. Did you know that when I was breastfeeding you, I made so much milk you couldn't drink it all? Your father said I was obsessed with making you fat.\"\n\n\"You are obsessed with making me fat.\" Adam paused and looked thoughtful for a second. \"How could you make too much milk? I thought that was kind of self-regulating...\" he said, his face open with curiosity.\n\n\"Yeah, it is, but I was so afraid that you'd go hungry if I was away or something, so I pumped extra and froze it just in case. But the frozen milk was never used, and it kept piling up. One day I saw there was a request for milk donors, and so I pulled some of my extra out of the freezer and donated it. When they called a week later to ask if I had any more, I emptied the freezer.\"\n\n\"Wow, good job! You must have helped a lot of babies.\"\n\n\"That's what they told me, so I kept pumping more, and donating more. It got to be too much work to chase after you as a toddler, and pump milk, so I stopped pumping. I felt bad about not being able to donate anymore.\"\n\n\"Well, at least you were able to help for a while, right?\" he said, while putting away the last of the dishes.\n\n\"True. I also held out hope that your Dad and I might have another baby and I could start donating again, but that never panned out.\"\n\nA familiar silence filled the room, as mother and son remembered their lost husband and father.\n\nMary shook her head to clear the fog of memory and said, \"In any case, that's all in the past. For now, I just need to make sure my only baby is fed properly.\"\n\nAdam groaned and laughed simultaneously, throwing his drying towel at her. She caught it and put it away while Adam retired to his room.\n\nA quiet evening of light TV and some reading led to bedtime. Mary headed to her room, passing by Adam's door.\n\n\"Good night,\" she said in passing.\n\n\"Hey, Mom, wait,\" came his answer. He was sitting at his PC. He beckoned her over, so she went to see what he was looking at.\n\n\"Look at this. I was sure I'd heard about this before, so I googled it. Did you know that you can induce lactation, even if you're not pregnant? And that it's easier if you've breastfed before? If you wanted, you could start donating again.\"\n\nThe return of the post-dinner topic threw Mary for a loop for a second before she caught up to her son's thinking.\n\n\"You think I could produce milk again? In these old things?\" Mary gestured to her chest vaguely.\n\n\"The website says you're still perfectly capable of it. You don't have to; it was just a thought.\"\n\n\"Thank you for your thoughtfulness,\" she said, kissing the top of his head. \"I'm not sure I want to go back to padded bras and pumps at this stage of my life.\"\n\n\"Okay. Well, good night, then.\"\n\n\"You too, sleep tight.\" Mary left his room and went to hers, amused at the thought of a 38-year-old woman producing milk.\n\nAs she changed for bed, she amended the thought to a '38-year-old woman donating milk to new mothers and babies in need'. That didn't seem so ridiculous. Stopping to check out her breasts in her bedroom mirror, she imagined them heavier, rounder, full of life-giving milk. Aching, leaking, constantly having to be emptied. It was both tempting and daunting. She finished dressing in a nightie and went to bed, the benefits and annoyances of donating milk warring in her head.\n\nOver the next few days, Mary felt like everywhere she went, babies were everywhere. Many of them were quiet, some crying, but each one tugged at her heart strings. She knew that it was just her brain pointing out something she'd been thinking about, but that didn't help. All she could wonder was if they were getting enough milk.\n\nShe found herself examining the mother's chests, trying to judge if there was proof of breastfeeding, and only stopped when one mother at the grocery store caught her looking down her shirt. Mary had left the store right away, her face burning.\n\nThe next day Mary made an appointment with her doctor to discuss the health implications of induced lactation.\n\n***\n\n\"I accept that it's for a good cause, but it seems a bit abrupt. Are you sure there isn't something else going on? I know Adam is leaving for college in less than a year. Is this maybe an attempt to fill an empty nest?\"\n\nEllen Hanford had been Mary's general practitioner for years and was a no-nonsense person. If she said something, it was worth paying attention.\n\nAfter several seconds of contemplation, Mary said, \"I thought about that. It could be a factor. I'm not trying to have another baby, but maybe I'm looking for... I don't know, an outlet for my maternal urges, or something.\" She laughed, but Ellen didn't.\n\n\"Just like midlife crises, an empty nest can be a powerful motivator for people in your situation. I'd suggest giving it a good deal of thought before making any decisions, but otherwise I don't see any reason why you can't do it.\"\n\nMary smiled in relief, and said, \"I won't jump into anything too fast. Maybe I'll wait until Adam is gone for a bit before deciding, so I know it's not related to him leaving.\"\n\n\"That's a great idea,\" Ellen said. \"I can prescribe drugs to help, but it's possible to induce without, so do your research and let me know what you decide. Keep in mind that getting pregnant is the surest way to produce milk again.\"\n\nMary couldn't tell if she was joking or not.\n\n\"Yeah, that's not happening,\" she said with a smile and an eye roll.\n\nHead swirling with a decision unmade, pros and cons weighing on her, Mary thanked Ellen and left. It felt like years since she'd had to make a choice like this. Caught between selfless giving of herself and the discomfort that accompanied it. Add in the wrinkle of this just being a response to her son leaving and the choice just got harder.\n\nMary's preoccupation with the choice must have been evident, as Adam asked her about it that night.\n\n\"Are you okay?\" he asked at dinner.\n\n\"Hm? Yeah, I'm fine. Why do you ask?\" In fact, she'd been a million miles away contemplating her motivations behind donating milk.\n\n\"Normally you've asked me what I learned at school by now,\" he said, wryly.\n\n\"Haha, very funny. Sometimes I save it for dessert.\"\n\nAdam smirked in response, and then raised an eyebrow to ask his first question again. \"So?\"\n\n\"Oh, it's nothing. I've been giving some thought to your idea of donating milk. In fact I went to see Ellen today to see if it would work.\"\n\n\"Oh yeah?\" he asked. \"What did she say?\"\n\n\"She asked if I was doing this because you're leaving soon.\" Mary shrugged a shoulder, and continued. \"I didn't deny it was a possibility. I said I'd wait till after you left to decide.\"\n\nSilence washed over the dinner table as they both kept eating.\n\nAdam eventually cleared his throat and said, \"I actually looked into it more. It turned out to be really interesting. Not many research papers were done on induced lactation, but there was one meta-paper done on what's out there. It showed that motivation and support were two key factors when adoptive mothers were inducing.\"\n\nMary just stared at her son, chewing slowly. \"So, as in, the mother's desire to breastfeed her baby, and the people around her to help, produced better results?\"\n\nAdam nodded.\n\nShe said, \"Motivation is not a factor. If I decide to do it, then I'm all in, but I hadn't considered the support system that would be needed. I guess that puts the question to bed. Once you leave, there's no one who is around enough to help.\" Mary had no siblings, and her parents had passed away a few years ago.\n\nThe sudden removal of the decision she hadn't even made yet was bitter-sweet. In fact, it soured Mary's mood so fast that she lost her appetite. She put her fork down and pushed her plate away.\n\nAdam saw her change in mood and said, \"I'm happy to help however I can, Mom. I won't be going anywhere for months. I can help you now, and by the time I'm going you'll be feeding hundreds of babies.\"\n\nMary smiled at him, fighting off the wave of tears that threatened to burst forth. If she was pregnant she'd swear it was hormones, but as it was she had to blame her son for being so sweet.\n\n\"I'll take your offer into consideration. I'll admit that I'm leaning towards trying it. Thank you, Adam.\"\n\nHe smiled and nodded; his mouth full of food. Food provided by her.\n\n***\n\nWalmart was a zoo. Mary was buying household essentials to stock up: shampoo, toothpaste, toilet paper, etc. She made the trip once a month, and tended to just go up and down each aisle so she didn't miss anything. One aisle that was normally skipped got her full attention: the baby aisle.\n\nHalf way down she stopped and perused a selection of breast pumps. Memories washed over her of when she pumped 17 years ago. The joy of imagining the hungry mouths her milk would fill came a distant second to the bonding she felt when feeding Adam from her breast, but it was better than nothing.\n\nMary's drive home went by quickly, as she drew up plans to make use of the new breast pump in the back of the car. The routine involved daily pumping, which increased in frequency from a few times a day to every few hours. She'd already cleared it with her boss, who allowed her to use the maternal room when at work, so it was just a matter of maintaining the schedule.\n\nAt home, Adam helped her unload the bags of items, pausing when he came across the new pump.\n\n\"So you're going to try it?\" he asked, somewhat excitedly.\n\n\"Yeah. I figure if it works, I'll do some good, and as you said, you're here to help. Right?\"\n\n\"Absolutely!\"\n\nMary smiled at his enthusiasm. \"Great. I don't expect to need any real help, but your positive vibes will make everything easier.\"\n\n\"When are you going to start? Tonight?\"\n\nMary took in her son's bright eyes and flushed cheeks. \"I suppose so, yes. I didn't expect this level of excitement. You're really into this, aren't you?\"\n\nAdam seemed to take a big breath. \"Um, sorry. It's just... new for me, is all. The thought of you, um, helping other kids is, ah...how does the older generation say it? 'Super cool'.\"\n\nMary laughed and faked a punch at his arm. \"How dare you call me an older generation. As for being 'super cool', it takes a while to start, and I'm not even sure if I can produce enough to donate yet, so let's put a brake on the talk of me being a hero.\"\n\n\"I didn't say you were a he-\" Adam broke off when he saw her expression. \"Ah, I mean yes definitely a hero.\"\n\nMother and son laughed together.\n\nHe said, \"Tell you what, as my first act of support, I'll put this stuff away and you go start the regime.\"\n\n\"Thanks,\" she said, and kissed his cheek as she walked by, pump package in hand.\n\nIn her room, Mary opened the pump and assembled it. It was smaller than the one she had had 17 years ago, but the design was very similar. Heart beating a bit faster, unsure how it was all going to go, she washed the parts in the bathroom and set herself up on her bed, sitting against her headboard.\n\nRemoving her shirt and bra, she took a minute to rub her breasts, massaging away the pressure points from her bra. She also hefted each one in her hands, feeling their weight and softness, trying to remember how they felt those years ago full of milk. The feel of her hands on her skin, stroking over her sensitive areas, sent thrills up to her neck. She breathed deeply, her nipples visibly hardening under her touch, her areola drawing tight into a bumpy ring. She traced a finger around one, delighting in the tingling waves that radiated out from her chest.\n\nKnowing that the act of pumping was a lot less erotic than one would hope, she reluctantly broke the spell of her breasts and brought the silicon cones to cover each one. She laid her head back and triggered the on switch. There was pressure and a bit of pain, but also a Pavlovian wash of endorphins as the memories from 17 years ago flooded forth.\n\nFive minutes later she turned the pump off, her breasts now aching. She carefully massaged her nipples and the tissue directly underneath them, stimulating them and soothing them. The discomfort produced by the pump was nothing next to her own desire to help others.\n\n***\n\nThree weeks later, Mary got home from work and unintentionally closed the front door hard. Well, maybe it was fully intentional. As she let the bag with the pump in it drop from her shoulder, the strap brushed against her breast and she winced. They were so tender now, any kind of touch except her lightest was too much.\n\nDragging the pump bag behind her, Mary made her way to the kitchen. Adam was there, eating as normal.\n\n\"Hey, Mom. How was work?\" he said, before looking up. As soon as he did, his expression changed to concern. \"Are you okay?\"\n\nMary nodded. \"Yeah, it's just the frequent pumping is getting to me. I'm so sore, and NOTHING TO FUCKING SHOW FOR IT!\"\n\nAdam stopped chewing, and swallowed what looked like a painfully large bite. \"Nothing? Well... maybe it's time to visit Ellen for the drugs?\"\n\nCrack.\n\n\"You know what?\" she snapped. \"Instead of solutioning, maybe it'd be more helpful if you sympathized for a few seconds, first.\"\n\nHer biting response caused him to widen his eyes.\n\nMary closed her mouth with a snap, realizing how harsh she sounded.\n\n\"I'm sor-\"\n\n\"I'm sor-\"\n\nThey stopped and looked at each other. She started, \"I'm sorry, I shouldn't be taking it out on you. It's not been a fun 3 weeks.\"\n\nThe look of alarm had calmed into confusion on her son's face. \"I'm sorry too.\" He looked down at his cereal for a second and then said, \"I was just trying to help. What's solutioning?\"\n\nMary walked to the kitchen table and slumped into a chair. She leaned back and said, \"It's a tendency for some people to come up with a solution when they hear an issue instead of just listening and empathizing and saying something like: 'That sounds like a real pain, I'm sorry to hear it.'\"\n\nAdam got a look in his eye. \"Are 'some people' also known as men?\"\n\n\"Yes, smarty, but don't worry about it. It's a normal thing. I'll tell you for future relationships, that generally when women complain about stuff, they're looking for empathy, not a fix. Your Dad had to work at it a bit, but he got it. Sometimes he'd slip,\" she finished with a smile.\n\n\"So, if I say: 'That sucks about your lack of results. I can tell you're frustrated.' That's a better response?\"\n\n\"Much better.\" Mary stood up and walked to her son, raising her arms for a hug, which he readily supplied.\n\n\"I think I just need some food in me, and I'll feel better,\" she said, midhug.\n\nAdam didn't reply for a bit before saying, \"I'm trying to think of what to say that isn't a solution to your hunger issue. 'Being hungry is annoying?'\"\n\nMary laughed in his ear, before pushing away from him. \"You'll get it. I'm going to get a quick snack before pumping again.\"\n\n\"Is there anything I can do? After all that empathy, I feel a burning need to fix all your problems.\"\n\n\"Smartass.\" She sighed. \"At this point I'm considering either giving up or buying a baby on the black market to suckle directly. The damn pump doesn't seem to be working.\"\n\nMary watched her son struggle and threw him a lifeline. \"It's okay, at this point a solution is welcome; your empathy quota has been reached.\"\n\n\"I was going to say, I don't have a baby, but, well, I could do it I guess.\"\n\nLightning bolt. Tingling thunder wave throughout her body. \"You could do... what? What are you suggesting?\" She tried to keep her tone even, not show what she thought of the suggestion.\n\n\"Aaahhh, well, does it matter who does the suckling? Like, I dunno, does it have to be a baby?\"\n\nHer excitement made her bold. \"You want to suck on my breasts for several minutes a day, several times a day?\"\n\nAdam got red in the face. \"The way you say it makes it sound dirty. I'm just trying to help.\"\n\n\"No, I didn't mean to make it sound dirty. I was just laying out the size of the commitment you were suggesting. You see me disappear into my room once a day, but I have to pump every four hours for 10 minutes at this point, and it's just going to get more frequent.\"\n\n\"I know that.\"\n\nMary thought for a bit, fighting to compartmentalize her excitement and approach the issue realistically. She said, \"If you were to do that, it'd be once in the morning, then again after work, and then again before bed. I can pump once at work.\" She arched her brow. \"Does that sound like something you could do?\"\n\n\"Of course. It's not a big deal. It's so you can donate milk, right? It's a good cause.\" Somehow Adam had gone even redder.\n\n\"Well. Let me think about it. I'm going to go eat. Thanks for your solutioning,\" she said.\n\n\"No problem,\" he croaked, turning to leave the kitchen. It sounded to Mary like he ran up the stairs to his room.\n\nAs she prepared and ate a quick snack, Mary let her thoughts roam free. One side of her rejoiced in the thought of being able to bond with Adam again like she did when he was a baby. To feel him feeding from her body, nourishing him, helping him grow. Another side of her recognized that it was probably inappropriate, no matter the intentions.\n\nYet another side, largely unrecognized by Mary, remembered what it was like when her husband, Ian, suckled at her engorged breasts when they had sex. His large mouth and active tongue drawing her milk from her while caressing her nipple. She tended to squirt milk when they had sex, and she had some of her best orgasms with his mouth latched onto her breast. Those memories didn't fully surface, but helped compose the mosaic that was her reaction to the thought of her son helping her to lactate.\n\nIf she'd paid attention, Mary would have only been mildly shocked to realize that her nipples were hard, and the ache in her breasts had been replaced by a pleasurable, warm glow. As it was, she attributed the food to the improvement in her mood.",
        "After dinner, Mary mulled Adam's proposal in earnest. Try as she might, she couldn't imagine how they could get over the awkwardness of attempting to do what he had suggested. There didn't seem to be a graceful way to commence it without embarrassment, and really, that was putting aside the question of whether they should be doing it in the first place.\n\nEventually deciding it was a problem without a solution, Mary went to bed, resigned to pumping mechanically again. The one saving grace out of her efforts to date was that her nipples were handling the rough treatment like champions. They were longer and thicker, but they rarely ached themselves, and hadn't gotten chapped. In fact, they were so sensitive post-pump, that she had achieved a mini orgasm a couple times when massaging them.\n\nIn her bedroom, Mary got the pump ready, dropping into a daydream as she did. In it, she imagined Ian suckling at her teats, drawing creamy milk from them. It was a vivid image, prompting her to pull her shirt and bra off, feeling her plump nipples fill her palms. She groaned as twin pulses of pleasure spiked to her pussy. She hadn't even pumped and was already primed to come.\n\nFor the first time in a while, Mary dipped her hand down into her panties, and dug two fingers deep into her soaked vagina, gasping at the invasion of her own digits. Pumping away at her pussy, Mary pulled at a nipple with her other hand, the combined sources of pleasure driving her higher and higher. She could hear the squelching of her juice-covered fingers plunging inside of her. After what felt like a very short time, she clamped down, clenching and squeezing as she came in her panties. She let out a low moan from her open mouth, as she convulsed on her bed. It had been a long while, but she remembered the thin walls.\n\nHer pump forgotten, Mary pulled her blankets over her and fell into a sleep filled with dreams of milk and sex. Her final lucid thought was the realization that perhaps her intentions for lactating again weren't as pure as she believed.\n\n***\n\nAdam woke up from a dream filled with milk and sex, his hardon creating a healthy tent in his sheets and boxers. He'd been having similar dreams pretty regularly nowadays. Ever since his mom had started pumping to get her milk going again, he'd been hard a lot. Any conversation about it with her led to him retreating to his room to blow a wad and relieve himself. It was just too much to think about her already generous tits getting bigger and making milk.\n\nHe'd tried to play it cool ever since the subject had come up, but from day one he'd fallen down the rabbit's hole of lactation on the internet, reading and watching any video on it.\n\nHow he had managed to muster the courage to offer himself as a lactation aid, he'd never know. Probably extreme horny teenager brain. Unfortunately, they'd left off the subject in a bit of a limbo. She had said she was going to think about it, but he was sure that was just a soft 'no', to let him down easy. What mother in their right mind would let their grown son suck on their breasts?\n\nAdam checked the time and saw he'd woken up much earlier than his alarm was set for. His mom might be up now, as she got up earlier than normal to get a pumping session in. He was rarely awake at this time, so he hadn't seen her do it.\n\nHe got up and exited his room, padding down the hall to her room. He put his ear up to the door and listened, but there were no sounds. Certainly not the telltale humming of the pump. The door to his mom's room had creaked for years until he put some oil on the hinges, and so now he felt secure in cracking it open. It was dark inside.\n\n\"Adam?\"\n\nThe whisper almost made him jump out of his skin. It had come from the direction of her bed.\n\n\"Yeah, Mom. Sorry, I didn't mean to wake you. Just seeing if you needed help with pumping this morning.\"\n\n\"Mmmm, sure,\" came her sleepy response. \"Wait.\" The voice got sharper. \"You mean with yourself as the pump?\"\n\nAdam could practically feel his cock break the sound barrier as it filled with blood.\n\n\"Um, whatever. Whatever you need,\" he replied.\n\nAdam waited for what felt like forever. He was about to close the door when he heard her whisper, \"Okay.\"\n\nHe entered the room and could hear rustling coming from her bed. There was very little light as it was still dark out, so he made his way to the bedside by touch.\n\n\"No, come over to this side,\" came her instruction. He reversed and shuffled around to the opposite side, kneeing up onto the mattress.\n\n\"I'm sitting up over here. Just lay down and put your head on my lap.\"\n\nAdam did as instructed, finding she had placed a pillow on her legs. He put his head down on it.\n\nHer whisper was even quieter now, drifting from the dark above him. \"Come here.\"\n\nHer hand caressed across his ear, behind his head, feathering in his hair. She pulled him to her gently, and then she was cradling his cheek and he felt a fleshy bump rub across his lips. He opened his mouth instinctively, and then her nipple was between his lips. A small sigh drifted towards him as he took more of his mother's breast into his mouth.\n\n\"Suck, baby, as if I'm giving you milk.\"\n\nHe did, latching onto her breast fully, feeling her nipple extend onto his tongue. He pushed his face into her breast, his nose barely able to draw in air, but he didn't care.\n\nHis mother hummed above him, feathering her fingers through his hair over and over. Adam nursed away, his saliva running freely. At one point he pinched a bit harder with his mouth, and he heard her cry softly, so he let off.\n\n\"It's okay. You just surprised me. I don't mind,\" she murmured.\n\nAfter the initial overwhelming sensation of having his mother's perfect breast in his mouth, he became aware of the straining, pulsing, aching pressure at his groin. His dick was granite hard, pushing against his underwear. Mindlessly he thrust his hips forward, finding that he was pressed against his mom's headboard. The hard wooden frame pushed back painfully but it was better than nothing. Afraid if he moved too much she would notice, he started to slowly push his dick against the bed frame, trying to ease the pressure. It did nothing, and before long she was pulling his head away from one breast and introducing the other. He latched on again, hearing another sigh come from her direction in the dark.\n\nAdam was in heaven. He could die here, peacefully, mouth full of fleshy, glorious, breast. To his regret, he did not pass away, instead his mother cooed and urged him to unlatch, freeing her nipple with a pop.\n\nHer voice drifted to him again, \"Thank you, you did a great job. Let's get ready for our day, shall we?\" Her gentle hands urged him up, so he got off her bed, out the door, and to his room.\n\nCock still hard, he fell on his bed, wrapping his hand around the shaft and coming in 5 quick strokes. Semen flew everywhere.\n\nHe took a quick shower, the hot water relaxing his muscles. He was still a bit pent up even after jerking off. He craned his neck to ease a sore spot. Had he slept in a bad position? After the shower and dressing, he met his mother in the kitchen drinking her coffee before work.\n\n\"Hi!' she said, her cheery voice filling the room.\n\n\"Er, hey,\" he replied. In the daylight he felt unsure of how to handle the fact he had recently been nursing at his own mom's breasts. Those magnificent, full, healthy breasts. In his mind's eye, he imagined what her nipples might look like based on what his tongue and lips had felt. He thought she must have large areola, and probably larger nipples. Good thick ones for delivering lots of milk.\n\nAdam's mouth watered.\n\n\"I have to admire your solutioning this morning. Doing that in the dark made everything much less awkward. I'll pump at noon today, but can you help after work? I'll get the blackout curtains down, so it's the same as when you woke me.\"\n\nThe thought of doing that all over again completely overwhelmed his disappointment that he wouldn't be able to see her in the light. \"Sure, I'll be here. I'm happy to help.\"\n\n\"Great, have a good day. Love you.\"\n\n\"Love you, too.\"\n\nAnd then she was out the door, leaving him to his long, long day of anticipation.\n\n***\n\nMary's day was uneventful as far as work went. Normal meetings, phone calls, emails, conversations. Everyone who mattered knew about her attempts to induce lactation, and by now it was old news. Good taste meant not asking about it, and discretion meant that she wasn't about to tell anyone about her new method. So her day was very normal.\n\nExcept, of course, it wasn't. Her son had sucked on her tits, and that was anything but normal. Her day was full of random daydreaming sessions about that morning, and trips down memory lane thinking about her late husband. The two had a connection no one would ever know about. They suckled exactly the same way.\n\nWhen Adam had woken her up, she had been groggy at first. It had taken her a second to realize that her son was probably offering himself as a pump again. The combination of being in a safe space, and it being so dark had led her to agree. At least one time. The result was better than she could have ever predicted.\n\nHe was gentle, tentative, responding to her urging. His mouth at first had been as of a lover, but when she urged him to suckle, he had taken more of her in. It was that merging of their flesh, mammary to mouth, that had brought memories of Ian to the fore. Memories of them making love, milk streaming down his face as he drank from her. Memories of her sitting in his lap, riding his cock as he was bathed in streams from her ducts.\n\nIt had woken urges in her, to again feel her husband's hard organ deep inside of her. It was impossible, but she wanted it anyway. Wanted to feel him explode, sucking hard on her flesh. Mary had let her memories get the better of her, as she dove deep into that dreamland while her son nursed at her.\n\nNow all that was left was to figure out how to have her cake and eat it, too. How to have Adam induce lactation with his wonderful mouth, but not go any further than that. He would surely be traumatized if he guessed half of the desires coursing through her body that morning. She could barely allow them to flit across the surface of her own mind, never mind allowing anyone to learn of them. Desires that spoke of intimacy where it shouldn't exist.\n\nAt home that afternoon, Mary closed her blackout curtains, and turned off the light, plunging her into blessed anonymity. No awkward glances or shameful staring. Just her in bed, topless, her naked breasts ready for her son to nurse at her. Nothing out of the ordinary here, she thought ruefully.\n\nShe called out, \"Okay, I'm ready.\" The door opened immediately. Adam was very sweet to be making himself so available to her.\n\nThe door closed, and they were reduced to navigating by feel again. She heard Adam make his way to the bed and lie down on it. As his head hit the pillow, she felt his breath on her breast, causing her nipple to harden in response. Mary gathered her son's head to her chest, one hand offering up her nipple for his mouth. A gasp escaped her gaped lips, like it had that morning, when he fully latched onto her. Full pressure followed, her nipple being drawn into his mouth, his strong tongue pulling as it sought her milk. Milk that wasn't there yet, but hopefully would be soon.\n\nMary was lost in her own mental fog as she sat there, spikes of pleasure radiating from her chest, trying to ignore the urges building within her. The pillow under her son's head helped to mask the subtle writhing of her hips as she fought to enjoy her arousal and douse it. Each new pull at her teat caused her arousal to grow, sending her to a forbidden plateau.\n\nIt was fate that changed everything. Chance? Serendipity? Whatever it was, Mary was forever glad for it. When she could sense time approaching to move him from one breast to another, she sshhhed as she pushed him off one, and then introduced the other. The wave of pleasure that accompanied his attachment to the neglected tit caused her to lean over, putting her hand down on the bed beside her.\n\nOr what she thought was the bed. In reality it was a rock-hard cock, thrusting against the wood of her bed. He... was also aroused? In shock, Mary retrieved her hand, but they both knew what she'd felt. She winced as he pulled his mouth off of her, saying \"Mom-\"\n\nShushing, she pulled his face forward, burying him in her tit-flesh. \"Shhhh, it's okay. It's normal. Your job isn't done. Shhhhh.\"\n\nAs she calmly crooned in his ear, stroking his hair, she felt him relax and then take her nipple into his mouth again. The spikes of lightning picked up, this time accompanied by the memory of his rigidity against her hand. It spoke of enjoyment beyond just that of a son helping his mother.\n\n\"Let me tell you,\" she whispered. \"About your father.\"\n\nShe could feel his interest pique, as he turned his head slightly and slowed down on his suckling.\n\n\"Don't stop,\" she moaned, and after a pause, he suckled again, perhaps harder this time.\n\n\"Your father helped me now and then as well. When I was so full that it hurt and you were asleep, he would fill in, drinking off my excess. It was...thrilling, for both of us. So much so that we would often make love after my pain was relieved. I am not trying to shock you, just telling you that it's normal. It's healthy to be aroused when engaging in something so intimate.\"\n\nMary paused, wondering if she had said enough to put him at ease.\n\n\"I confess,\" she continued. \"It affects me too. Let's just make this our secret, okay? You can keep helping me, and we'll both enjoy it.\"\n\nShe could feel the nod of his head as he agreed, and she smiled, stroking his hair again. Time passed and he was done with her second breast. He left, and she dove her hands between her thighs, feeling the pool of juice in her panties. The gasps and cries as she came this time weren't so quiet.\n\n***\n\nThe induction arrangement went on like this for a week and Adam's mom was careful to keep the arrangement the same. Always in the dark, with her guiding his head. Once he lifted his hand to adjust her breast to an easier angle, but she flinched hard at the contact.\n\n\"No, let me. Just... just your mouth, okay?\" Her soft tones soothed him as she adjusted her breast.\n\nHe settled for placing his hand over his cock, pushing it into his belly, luxuriating in the waves of pleasure from that pressure. He'd been doing it a bit lately during their suckling sessions but did his best to be discreet. He must have been too obvious that time, because he felt his mom shift under his head.\n\n\"Do you... need to go take care of that? I don't mind, we can just do a short session today,\" she said.\n\nAdam shook his head and moved his hand. He'd much prefer to stay close to her.\n\nHe'd gotten a decent idea now of what her nipple must look like, based on tongue feel alone. He figured it had to be a half inch long and impressively thick. Her areola had bumps, and she was always erect when they started. More often than not, his mom would gasp or moan when he first took her into his mouth, something he never got tired of.\n\n\"Have you noticed any changes?\" she asked from the dark.\n\nAdam tried to compare what he felt now to when they started. Maybe they were bigger? Plumper? He couldn't tell for sure, so he shook his head.\n\n\"You will soon, I think. Your help is making all the difference.\"\n\nHe hummed his approval into her flesh, and she giggled.\n\n\"That tickles,\" she sighed.\n\nHe did it again, and she breathed in deeply before stroking his head. \"Stop, please. I'm excited enough as it is.\"\n\nThere it was again. Ever since she'd accidentally touched his dick, he'd been fascinated by the thought that she was turned on by their time as well, but it rarely came up. Just more darkness and happy sighs with the occasional squirming. Was it squirming, or just making herself comfortable?\n\nThis reference to him taking care of his erection, and then how excited she was, was not the norm.\n\nHis mom pulled her nipple from his mouth and swapped him to her other breast. As he latched on, he heard her sigh louder than normal, and she seemed to shiver through her whole body. Was she cold? She was topless, but the room was warm. The thought of her there, bare, sent a tremor of desire through him like her shiver. He wanted nothing more than to wrap his arms around her, feel her skin under his hands, pull her even closer.\n\nHis thoughts were interrupted by a sweet taste spreading through his mouth. He stopped suckling and probed with his tongue, rubbing over the end of her protruding nipple. The sweetness was concentrated there, and he eagerly licked again, trying to find more of that new flavour.\n\nHis mom's reaction to his new technique surprised him, as she suddenly shivered again, harder. He felt her hand grip his hair firmly, pulling him further into her boob flesh. Adam opened his mouth wide, giving him plenty of room to massage with his tongue, flicking over her suddenly hard nipple and areola.\n\nHis mom hissed as he did this, and then breathed deeply for a few seconds before relaxing. There was no more sweet flavour, so Adam went back to his normal suckling, trying to urge more to emerge. His mom's hand left his hair, moving along his neck and to his shoulder, where she rubbed lightly for a bit before moving along his arm.\n\nAdam lost himself in following her hand as it trailed down his body, until it seemingly fell to the bed between his body and the headboard. Her hand left a trail of tingling fire on his skin, and he was lost in the sensations until suddenly he felt a fumbling at his underwear, and then her warm fingers were wrapped around the head of his dick, massaging and stroking.\n\nAdam stopped sucking, shocked to feel her there, her fingers rolling around his tip, caressing the flared glans. His precum spread under her touch, increasing his sensitivity a thousand times. He grunted into her breast, suddenly breathing harder as her hand started to roam over his shaft, stroking and rubbing slowly. Soon she was fully running her hand up and down his cock, gathering precum from his seeping hole with each motion, and he had to let her nipple drop from his mouth as he needed more air.\n\nIt was far too much to ask that he last longer than mere seconds, and so he was suddenly exploding into her palm. She didn't let up as he jerked and grunted, each expulsion of cum adding to the lubrication as she stroked him.\n\nHis pulses got smaller, but she kept at him, rubbing slower, until he was forced to pull away from her hand. His tingling cock was too sensitive to stand her touch any more.\n\nThey stayed there in the dark, only the sound of their breathing filling the space.\n\n\"Time's up,\" she said softly.\n\nAdam sat up, not sure what to do or say. He could feel his wilting cock, wet in his boxers.\n\nAdam could hear his mom fumble to get up and then light flooded the room as she opened the blackout blinds. For a brief wonderful fraction of time he could see her bare chest, her wet nipples pointing at the sky from the glorious mounds gracing her frame. They sagged only a bit, quivering as she grabbed her robe and threw it around her shoulders one-handed. The other hand was held out, palm cupped upwards.\n\nThe hand that had just jerked him off. Adam's head swam as he got up and left the room, cock still tingling, and went to get ready for school.\n\nIn his room, he got changed and yelped when he pulled a shirt on. His damn neck was even worse. What the heck was up?\n\nIn fact, his neck bugged him all day at school. He ended up leaving it at odd angles to try and relieve the pain, which earned him a few funny looks.\n\nAt lunch, his buddy Jake finally asked him about it.\n\n\"Yo, dude, what is wrong with your neck? Did you sleep funny?\"",
        "\"Nah, I don't know. It's been bugging me a lot lately. I'm thinking of getting something for it.\"\n\n\"Oh, you gotta get this stuff, it's like a cream or whatever, but it absolutely drains the pain. My mom got it, she puts it on my legs after hockey and it is the best.\"\n\n\"Yeah? Your Mom puts cream on your legs? Anything else she do for you? Dress you?\" piped up Jimmy. Jimmy was a smartass, and never missed an opportunity to make comments about people's moms.\n\n\"Ha ha, dickhead, your mom dresses me after I spend the night.\"\n\n\"Yeah? Well your Mom UNdresses me when I spend the night.\"\n\n\"That's the same thing I just said, you idiot.\"\n\n\"No, it's not, it's different, you could be having a sleepover.\"\n\nAdam walked away, knowing that they'd be at it for a few more exchanges. It was a bit funny that they argued about their moms so much, as neither one of their moms was that good looking. Maybe Jimmy's mom, on a good day.\n\nIn class, he dove deep into daydreams about his mom and her breasts.\n\n***\n\nMary did her best to bury herself in work, but that just made the day go by faster, leading to her noon pumping session. A totally unsatisfactory 20 minutes of that damned machine drawing at her tit with mechanical precision. No warmth, no moisture, no tongue. When she was done, she wasn't surprised to see not a single drop on the end of her angry, red nipple.\n\nIf there had been a sign of progress in her machine pumping sessions, she could perhaps justify going back to them exclusively. It would remove the conflict raging in her heart. The fight between how much she enjoyed her sessions with Adam and their seemingly inevitable tendency towards intimacy.\n\nHer anticipation for each session had been growing higher every day; her panties soaking wet before she even got to her bed, her nipples contracted into hard points, ready for him to wrap his mouth around them. The connection she felt with him there in the dark was as close as it had ever been, and then overlaid by the memories of her husband. The two had melded into one, and she couldn't separate her arousal from the situation.\n\nThat morning had been a mistake, no doubt about it. It started with her mini-orgasm when he hummed on her breast, and continued with the not-so-mini orgasm when he'd licked her nipple directly. She'd been confused, running on auto-pilot. He had given her such pleasure, and knew she had to repay him in kind.\n\nMary hadn't anticipated how primed he would be. How hard, and how much precum he'd be producing. The intoxicating feel of a rigid prick in her hand again, after Ian being gone so long, gave her an almost forgotten thrill. To find out she turned him on so, how could she not jerk him to completion?\n\nHis prize for her was a hand covered in his semen - another experience she'd not had in years - and so once he'd left, she'd indulged in a pleasure just as old. Slipping her wet hand into her robe she'd spread the handful of liquid DNA onto her chest. The silky mansauce had cooled and soothed her nipples but also sent shivers of pleasure to her puss.\n\nNow here she was, at work, emerging from her memory, turned on all over again. Mary caressed her hard, angry nipple, remembering the morning coating of creamy semen.\n\nA shiver of dark desire chased her back to work.\n\nThat afternoon, when she got home, she found him in the kitchen, eating cereal again. The thought floated across her brain that it should be her milk in the bowl, but she disregarded it as a silly whim. Any milk she produced would go to the hospitals.\n\n\"Hi, Hon,\" she greeted him. \"How was school?\"\n\nMary was determined to ignore the undercurrent of awkwardness that could ensue from their morning session. It was done, and they'd have to get past it to continue inducing milk production.\n\nHe swallowed a bite, and said, \"Um, fine, as usual. How was work?\"\n\n\"Fine,\" she echoed.\n\nThe silence stretched as she tried to find something to say. Anything to fill the void and get them back on their normal track. Several forays floated through her mind, but they all sounded pretty awkward.\n\nShe started to panic when he stood up and dumped his bowl, muttering something about homework.\n\n\"Hey,\" she said. She held out her arms. \"Come here, you dufus.\"\n\nAdam sank into her embrace and then they were back, the normal mother and son affection radiating between them.\n\nAs they stood there, she murmured, \"I'm sorry if I freaked you out this morning. I won't do it again.\"\n\nHe didn't answer, and they just continued to stand there, clasped together.\n\nAfter a bit, he spoke over her shoulder, \"I wasn't freaked out. I just didn't expect it. I didn't know what to do after.\"\n\nThe hug felt like a safe space to open up. \"Neither did I. It's not a very motherly thing to do, is it? You've been so good at helping me that I just felt like I should help you back.\"\n\n\"You didn't have to,\" he said, simply.\n\nMary laughed and buried her face into his shoulder. He was so oblivious at times. \"Believe me, I know I didn't have to. I wanted to.\" She took a big breath and forged on. \"You've not only been helping me; you've been making me feel very good. Do you understand?\"\n\n\"I... I think so. You mean when you're trying to get comfortable, it's actually something else?\"\n\nGet comfortable? What? Mary tried to recall what he might be talking about. \"Do you mean when I'm moving my bottom?\"\n\nHe nodded.\n\n\"Ah, yeah, I didn't think you could feel that. Or I hoped you couldn't. No, that was me, um, hm, how do I put it? The feel of your mouth is enough to make me, er, climax.\"\n\nThe safe hug space was very effective at eliciting bold confessions, but Mary still felt a flush come over her saying the words to her son.\n\n\"Oh,\" he said.\n\n\"So, you see,\" she forged on. \"The help you were providing was making me feel quite good, and I just returned the favour. Does that make you uncomfortable? We can stop the sessions if you -\"\n\n\"No!\" His quick response cut her off, making her giggle.\n\n\"Okay, okay, have it your way.\"\n\nAdam finally pulled his head away in order to look at her. \"MY way!\" he said. \"You just confessed to having multiple orgasms, and suddenly it's my way?\"\n\n\"This is all your idea, and it's your mouth doing the suckling, so it's your way. You get the blame for me climaxing.\"\n\n\"And the credit.\"\n\n\"Sure, but your reward is my milk,\" she said, grinning.\n\n\"Deal!\" Adam held out his hand for her to shake, which she did enthusiastically.\n\n\"Speaking of which, I think it's time for our afternoon session. Give me a few minutes to get set up and join me.\"\n\nIn her room, she quickly pulled her pants, shirt and bra off, baring her breasts once again. Lately she felt like she spent more time topless than with clothes on. With the way the pumping made her breasts feel, it wasn't a bad thing to let the girls swing free.\n\nThe blinds once again pulled, she took her customary position, flopping the pillow on her lap. She could feel her wet panties on her puss as she got comfortable, indicating her usual anticipation. This was the first time she'd not worn pants, and felt naughty even though it was dark in the room. He'd never know.\n\nThe air brushing across her nipples caused them to swell, the areola contracting. Mary spent some time massaging the area behind her nipples, feeling the lumps that were her milk glands. They definitely felt bigger.\n\n\"I'm ready,\" she called.\n\nThe door opened briefly and then closed, and she heard her son make his way confidently to the bed. Her bedroom held no more secrets. His head carefully settled onto the pillow, and she reached for him, tracing her fingers across his warm face and into his hair. Bracing her breast with the other hand, she pulled him in, waiting for his wet, hot mouth. Then she felt him take hold, and her hard nipple was being pulled and massaged. The spike of pleasure that radiated down her body made her gasp loudly.\n\n\"You got some milk this morning, didn't you?\" she whispered into the air.\n\nHe nodded.\n\n\"Let me know if you get any more.\"\n\nHe nodded again, sucking hard, and then she felt it. A warm tingling in her breast accompanied by a pleasant ache. Adam's head nodded once and he 'mmhhmm'ed into her tit-flesh. This was it. He started to suck slower, drawing longer, and she could see him swallowing regularly.\n\nThe warmth spread throughout her as she sat there, a feeling of contentment and love as her son suckled, being nourished by her body. This was the only thing she ever wanted.\n\nFar too soon, her first breast was empty, as she still needed to build up her supply, so she swapped him to her other breast, waiting for the same magical feeling to come over her.\n\nAdam eagerly suckled away, and soon she was in nirvana as she watched him drink. When her second breast was drained, she hesitated to stop him, she was so content.\n\nThere was no more milk for him to drink, but he kept suckling, and managed to run his tongue across the tip of her nipple, causing a burst of warm tingles to spread to her pussy. Another flick of his tongue and then he hummed, which sent waves of pleasure from her tit.\n\nHe knew what he was doing.\n\nAs she sat and basked in the feel of his mouth, there in the dark, she felt a graze on her other breast. Mary froze and waited, and then felt his hand caress and stroke her other bare tit, her sensitive flesh singing at his touch. Would he?\n\nHe did. His fingers found her nipple, still wet from his mouth, and mimicked his tongue, rolling over it. She could feel his care as he ever so gently gripped it, pulling at it, which sent sharper waves of pleasure to her groin.\n\nHer hips writhed involuntarily, trying to get her panties to rub her lower lips, press on her clit, anything. Adam must have felt her moving, because his hand left her breast and started digging down under the pillow, moving across her bare thigh. She knew she should stop him, she really did, but he was there and he was touching her and he'd started rubbing her mons, pushing his finger between her legs. The pressure near her clit sent a warm tingling through her pussy, ramping up her excitement.\n\nIt was a combo of him on her tit and between her legs that sent her over the top. She didn't have to worry about thin walls.\n\n\"Ooooaaahhhhh,\" she moaned, holding his head to her, hands gripped in his hair. She pushed her hips towards his hand, trying to increase the pressure his hand had on her groin, involuntarily spreading her legs as best she could to give him better access. He took it, and now he was rubbing her through her panties, directly on her clit. Clenching her inner muscles on nothing, wishing there was something in her, her climax sent a pool into her panties. Adam started to lap at her breast again, as a small amount of milk had leaked when she climaxed.\n\nThe orgasm and the letdown together summoned more memories of Ian. She especially missed those times when they were intimate. It had been so long...\n\nShe sighed happily at the pleasure and the memories, body still radiating pleasure as she slowly came down from her full-body explosion, and bent down to kiss Adam on the cheek.\n\n\"Thank you, baby,\" she said in his ear.\n\nHe pulled away from her, letting her nipple fall from his mouth. He whispered, \"You're welcome.\" Just as Mary was about to go hunting for his cock to repay the favour, he got up and left quickly. Was he going to jerk off in his room? Was he embarrassed at touching her?\n\nDespite it being a good idea not to fall too far down that rabbit hole, she was a bit disappointed that he didn't want to repeat the morning's handjob.\n\nRummaging through her drawer for a comfy shirt, Mary remembered the days when Adam was a baby and she'd go topless around the house. Ian loved it, and it was a lot easier to feed without fumbling with clothing. She'd kept a handy cloth for any leakage that was more than a drop or two, as the milk actually helped keep her nipples healthy.\n\nCould she just go topless again? The dark room had done its job, shielding them from embarrassment, but they must be past that by now. The thought of being bare-breasted around her son in the house was thrilling but also scary. He'd never seen her like that, and she wasn't 20 years old any more. Baby steps; maybe she'd get there one day.\n\nShe put on a soft t-shirt but left her bra off, the cloth tickling her nips, leaving twin tents, as it cascaded down her torso. She also changed her panties and put on PJ pants. As she walked to the door, her breasts bounced with each step. It wasn't quite time to start dinner, so she went to read for a bit in the den. A delicious feeling of sexiness overcame her, and she may have exaggerated her walk a bit to enhance the motion of her chest.\n\nMary tried to ignore the question in her head regarding why Adam had left so abruptly, putting her head into a book she'd been working on. An hour passed quickly this way. An hour of subconscious delight when she felt her unfettered breasts sway when she shifted, her still warm puss radiating post-climax joy.\n\nSince Adam had started suckling, she had changed her viewpoint on inducing breast production entirely. No more frustration and pain, now she equated the process with pleasure and satisfaction. Her results were encouraging as she should be able to start pumping and freezing milk soon for donation.\n\nMary spent a few minutes being sad that she'd lose her time with her son suckling, but knew it was all for a good cause.\n\nJust then she heard the front door close, and Adam came in, a small bag in his hand.\n\n\"Oh, there you are! I thought you were in your room. Where did you go?\" she asked, now intensely curious why he had to leave.\n\n\"Ah, I needed to grab some muscle relaxant from the pharmacy. My neck has been killing me lately for some reason. After, um, helping you, it was super sore.\"\n\n\"What's wrong with your neck?\" she asked, getting up to check him out, forgetting that she was braless.\n\nThe feel of her breasts bobbing and swaying was overlaid by the sight of her son's mouth gaping open as he stared at her chest. Oh right, no bra. She chose to ignore his reaction, instead tugging at his hand to drag him to the couch.\n\n\"Here, sit down in front of me,\" she said, sitting down. \"Have you been sleeping weird or anything?\"\n\n\"No, it's just been getting more and more sore every day.\" He sat down on the floor, and she pulled at his shirt.\n\n\"Take this off.\" He did so, as she opened the bag to find a tube of cream. She put some on her fingers to warm it up and then started spreading it over his back.\n\n\"Where? Here?\" she said, moving along his neck.\n\n\"Yeah, right there.\"\n\nMary concentrated on massaging the cream in, her hands running along his neck and then down to his smooth, muscular shoulders. When it was done, she kept rubbing, and said, \"When did it start, do you know?\"\n\nHis head was lolling on his shoulders, and he said in a sleepy voice, \"I think around when I started sucking on your tits.\"\n\nSuddenly his head jerked up and he stammered, \"Um, sorry, I meant, when I started helping you. Uh, sorry.\"\n\nMary giggled, and said, \"Don't worry about it. They are tits, and you were sucking.\" Another few seconds of her massaging, and then she said, \"You'll have to stop soon, though. My milk is going to keep increasing, and then I'll have to pump to donate it. No more sucking for you.\"\n\nOr me, she thought. She said, \"If the pain started then, why haven't you said anything?\"\n\nHe shrugged a bit. \"I didn't really think about it. I hoped it would go away.\"\n\nShe snorted. \"Well that clearly worked. Do you think it's from when you lay on the pillow?\"\n\nAnother shrug. He mumbled something.\n\n\"What's that? Speak up, sonny,\" she said in the voice of an old woman.\n\n\"I said, I think that's it.\"\n\n\"Oh.\" Mary sat and massaged, running her hands over more of him. Now her rubbing was covering his upper back, shoulders and upper arms. She admired the way his muscles rippled under his skin, and the definition on his biceps.\n\nEventually she slowed her massage, resting her hands on his shoulders. \"I think it's a good idea to stop that, then.\"\n\n\"I'm fine. My neck feels great, now. As you said, it'll have to stop soon anyways.\"\n\n\"Sure, but it's going to be at least a week before my production is high enough. You'll just get worse; don't be silly. Maybe the pump can get me the rest of the way,\" she said.\n\n\"Isn't there any other position we can try? Without the pillow?\" he asked.\n\nMary knew there was another position, but she'd chosen the bed because it should have been the most comfortable. The other position was one she'd used with Ian, and it was more suited to a couple in a relationship, not a mother and son. She contemplated if they could try it without it leading to more.\n\n\"There is a way we can try...\" she trailed off.\n\n\"But?\" he prompted.\n\n\"But. We'd have to promise to keep it to just milk inducing. No extra-curricular activities. I think what we've done is already over the line by a good margin, and I don't think we should go further.\"\n\n\"Well, what's the position?\"\n\n---\n\nAdam waited intently for her reply. The thought that there was a way for him to suck on her breasts that could lead to other stuff had woken him up. The wonderful massage his mom had given him had not only eased his pain but lulled him into a half-awake state.\n\n\"You can't think of it?\" she teased.\n\nHe shook his head.\n\n\"Well,\" she said, softly. \"If you sit on the couch, I can show you.\"\n\nHe clambered up from the floor and sat down next to her. He could see her again, in her shirt with no bra, and so he did his best not to stare but she smirked at the attempt.\n\n\"It's okay to look, I don't mind. You're going to see more than this very soon.\"\n\nHe raised an eyebrow, as she pulled her legs up onto the couch, kneeling next to him.\n\n\"The other position is like this,\" she said, and lifted one leg over his, holding onto his shoulder for support as she straddled his lap.\n\nHis mom ended up sitting fully on his legs, facing him. He watched as she grabbed the bottom of her shirt and pulled it up and over her head, baring her chest to him. Adam felt like the world slowed down as his mom's tits were exposed to his gaze.\n\nFirst came the globular undersides, and then the shirt exposed more and more of her creamy flesh. The full mammaries lifted with her arms, thrusting them to the sky as her nipples, the ones he had mapped out with his tongue, came into view to his eyes for the first time. They were hard, jutting out at him, causing his mouth to water.\n\nShirt off, she flung it to the couch next to them. As she lowered her arms her breasts sagged as well, but they were just as magnificent as he'd hoped. Full and heavy, they nonetheless looked like they belonged to a woman 10 years younger. He watched, enraptured, as her nipples visibly contracted under his gaze.\n\nHis mom pushed them together, rubbing the sides as if they were sore.\n\n\"Adam,\" she said, and he looked up at her face.\n\nShe was red-cheeked, her lips open.\n\n\"I know they're not as nice as the ones you see on the Internet -\"\n\n\"I'm going to cut you off right there,\" he interrupted. \"It's okay to be humble, but there's no way you don't know how absolutely incredible your breasts are. You don't have to fish for compliments with me.\" He grinned at her. \"I love them, I will never tire of looking at them.\"\n\n\"Your father said something similar, but I never believed him,\" she said. \"I guess I should believe two opinions.\"\n\nAdam nodded and looked down again. His mom shuffled her knees forward and sat up, moving her torso closer to him, and her breasts very near to his face. His half hard dick surged to life with her warmth and nudity so close to him.\n\n\"So this is it. You just latch on and do your thing. We don't have to do it now, our next session is before bed. But now that you know what it is, do you think we can behave ourselves?\"",
        "Adam was a bit confused. He couldn't see how this position was any more tempting than the bedroom, and said so.\n\n\"No? You can't see...\" She sat down, lowering herself until they were synced up, her crotch pressed against the lump in his pants. The pressure of her weight sent a wave of delicious warmth through him.\n\n\"Oh,\" he said.\n\n\"Yes, 'oh'. As you can see, this is more comfortable for your neck, but entirely inappropriate for a mother and son to do. Unless we can promise to behave ourselves. What do you think? Can we do it?\"\n\nHer tone was serious, but the words were playful. Adam quickly nodded his head. He'd walk on lava to have his mom sit in his lap, grinding on his dick while he sucked on her tits, drinking her milk. If the earlier confessions were anything to go by, he didn't think she'd mind either.\n\nTo his regret she dismounted from him right away, and put her shirt back on. He didn't really mind, as she was still braless and he could watch them sway and bob as she moved. It was equally erotic, just in a different way.\n\nThey both went to make dinner, her pan-frying some chicken while he cut up veggies for a salad. They worked in silence, but it was comfortable, and Adam never missed an opportunity to stare at her chest.\n\n---\n\nMary could feel Adam's gaze on her all through dinner prep and then while eating. She didn't mind it one bit, and contemplated going topless after the cooking was done, but didn't want to give him any ideas.\n\nShe was very serious earlier when she asked him if they could behave, and she fully intended to follow through on that. Their individual bodily responses to the suckling sessions were entirely natural and it would be silly to act as if it wasn't happening. They could help each other to relieve the tension, but that was as far as it could go.\n\n\"How's your neck?\" she asked between bites.\n\nHe rolled his head around and nodded, mouth full.\n\n\"Let me know if it starts to get painful again, and I'll rub more of the cream on, okay?\"\n\nAdam had left his shirt off, to not get the cream on it, and so she had been admiring him in turn during dinner. He was nicely built, with light hair dusting his chest, and lean, toned arms. She could see how his body had changed since the last time she'd seen it. He was a man, now, with a man's strength.\n\nShe ignored the tingle of appreciation that trickled through her insides. Any attractive male body did the same thing to her; it meant nothing.\n\nAfter dinner they cleaned up and then split up: she went to go watch some TV, he went to his room to do homework.\n\nAround 8pm, her show over, Mary made her way to Adam's room to check and see if he was ready for their evening session. Her breasts quivered as she walked, and a delicious ache formed in her belly at the thought of their new arrangement.\n\n\"Hi, are you ready?\" she asked from his door.\n\nHe turned from his desk, still shirtless, and nodded. \"I was wondering if you could put some of the cream on my neck first?\" he asked.\n\n\"Of course. Bring it along to the couch.\"\n\nHe did, and they set up in the same position as that afternoon. She warmed the cream up and went at it again, smoothing her hands over his skin. The same tickling tingle came through a bit stronger than the last time. She took her time, admiring and appreciating his body.\n\nWhen she was done, he joined her on the couch. She did her best to ignore the lump in his pants, knowing that it was inevitable and natural. Her heart was beating hard in her chest as she got ready to mount her son again.\n\nAdam slapped his thigh, prompting her to climb on board, and she laughed, feeling more at ease. This was fine. They'd done the suckling many times already, this was just in the light... and on his lap. She could feel his eyes on her breasts as she swung her leg over him, and then she was planted on him. The juncture of her thighs hovered over his legs, trying not to come in full contact with him, like she had earlier.\n\nWhat they hadn't done earlier was any suckling, and Mary was nervous as she lifted herself up closer to him, her nipple hovering by his mouth. She was watching him from above, his eyes looking back up at her as he opened up, and she placed her teat between his lips.\n\nThe same wave of warm pleasure washed over her as he latched on and started to suck. The same gasp escaped her mouth as the pressure grew on her nipple. He closed his eyes, so she did the same, and held his head lightly, her other hand on his shoulder to steady herself.\n\nThis was good. It worked. They weren't touching crotches, no mutual genital massaging. They could get through this. As Mary was thinking this, she felt two touches, as he grabbed hold of her ass cheeks, one to each hand.\n\nOh, damn.\n\nHe pulled at her, bringing her closer to him, and she felt her bare belly against his bare chest. The feel of his strong hands gripping her, his skin on hers, his mouth pulling and squeezing her nipple made Mary feel wanted. Appreciated. Desired.\n\nHer belly wasn't the only thing touching him. The already normal pool in her panties spread wet moisture on her thighs as her mons was pressed up against him. Maybe it was hopeless to think that this could be a purely platonic act of love between them. Maybe her history with Ian had primed her to associate this with sex, too much to ignore.\n\nAs she hovered over her son's lap, she quailed inside as she felt the burst of warmth that signaled her let down. The spread of aching pleasure as her milk started to flow into her son's mouth. It was too much. She cried out her rapture, the mixture of tingling tension in her groin growing from her tits to her pussy to the feel of his skin and his hands on her. How could any woman hold out against this?\n\nThis woman couldn't.\n\nMary came. She came and she came and she came. Pussy clenching, middle writhing, mouth gasping and drooling. Milk streamed from the breast without a mouth on it, dripping down her belly and into her PJ pants. Her son was gulping while playing with her nipple with his tongue.\n\nShe gradually calmed down, pulsing, pressed against him, his hands holding her. Then she was done. Spent. Drained of energy. Feeling her legs shaking, she had to sit down, and Adam gallantly held her up until he felt her full weight, and then let her go. She gratefully sank down onto his lap, her breast popping from his mouth with a sprinkle of milk.\n\nMary slumped forward, putting her head into his neck, pressing her bare, milky tits against his muscled torso. He was warm, and he put his arms around her, hugging her gently. She could still feel milk dripping from her slowly, coating them both. As she calmed down, her heart slowing gradually, Mary became aware of another pressure.\n\nIt was underneath her, and it was a totally natural, hard, rod of flesh. It was captured in underwear and pants, but it was very nice to feel pressed against her pussy after coming like she had. It wasn't quite in the right place, so she shifted a bit until it was firmly planted in the center of her, spreading her lips within her panties. Now the pressure was directly on her clit, and she tilted her hips up and down slightly, to ride the rod and the pleasure it was giving her.\n\nStill with her head buried in his neck, naked tops still embraced, the two sat there. Mary was mostly subconsciously riding her son, and soon she was joined by another motion, as her son started his own hip rolling.\n\nMary moaned as the tension in her middle grew again. She rubbed her hard nipples against Adam's chest, sending tingles to join the march to orgasm number two.\n\nNeither said a word, but it was clearly understood that this was beyond the boundary they'd set earlier. And yet, it wasn't that different from what they'd been doing in her bedroom, was it? With the exception that he was no longer suckling at her breasts.\n\nMary's cheek was against his jawline, and she noticed that he must have shaven very recently, as he was smooth there. She rubbed her cheek against his, enjoying his skin on hers in so many places. In fact, his neck was right there, wasn't it? She could smell the cream she'd put on the back of his neck, but the front was clean.\n\nTempted beyond her ability to resist, she lifted her mouth and nipped lightly at his neck, tasting him. She felt his hands grip her ass cheeks harder in response, so she did it again, opening her lips and sucking at his flesh for once. He groaned beneath her, the rumble vibrating her chest and her mouth. She giggled and swooped under his chin, nibbling along his jawline, one hand cupping the opposite side of his neck to keep him in place. He groaned louder, angling his head away to give her room.\n\nThe motion of their hips had been growing, and now she was running her crotch full-length along the lump in his pants, helped by his hands. The milk had lubricated their skin, and she was able to easily rub her breasts up and down his chest, their nipples grazing occasionally, sending spikes to her puss.\n\nMary wanted... something. She knew what it was, but she wasn't going to go there, not even to name her desire. Not with her son. So she settled for writhing in his lap, the tension building in her with each movement.\n\nWould he? Could he? The thought of her son spilling his seed in his underwear because she was in his lap thrilled the naughty mother, spurring her to new efforts. Her hands started to roam over his torso, his shoulders, his chest, his pecs. He was still holding her ass, pulling her to him over and over. She let one hand trail over his biceps and felt them tense and pull with each contraction, exciting her further. Her other hand drifted down to his stomach, stroking his skin and tense muscles. Up again, and she found his nipple, which she accidently caught under a fingernail.\n\n\"Gah!\" he gasped at her touch.\n\n\"Oh?\" she murmured into his neck, stopping her nibbles. \"Is someone as sensitive as his Mommy?\" She flicked his nipple again, on purpose, and he jerked once.\n\n\"Please,\" he groaned, and she pulled at it, and then she was rewarded by the feel of him pushing up into her, harder than before. The added pressure surprised her, and then he was rhythmically thrusting up into her gaping cloth-covered pussy, his orgasm sending reams of his cum into his underwear. The new, harder, rhythm sent her over the edge, and she came with him.\n\nMary grinned in triumph at having made him come, while her body quivered and clenched on top of him. She nipped one final time, hard, on his neck, while she was riding out her climax on her son's lap. When she was done, she once again slumped down on his chest, drained in one way if not another.\n\nHer breasts still contained milk in them, despite their best efforts at auto-expressing them via orgasm. Knowing that they needed to keep progress going, she lifted up and pulled his head from the back of the couch to her breast. He immediately latched on and started to suckle at her.\n\nThey stayed like that, her on him, his lap considerably less lumpy, as he drank away her milk from each breast. When he was done, she got up and pulled her shirt back on, feeling happy and satiated. Intentions were one thing; blazing orgasms were another.\n\nMary bid her son goodnight, as they both made their way to their rooms. She fell asleep quickly, content in the fact that she'd helped her son get a restful slumber by sending him to bed with a belly full of warm milk.\n\n***\n\nAdam woke feeling as rested as he ever had. He rolled onto his back, memories of the night before flooding his head. The feel of his mother's breasts on his chest, her mouth on his neck, her crotch on his dick. And the milk. That sweet, creamy goodness. He'd never get tired of it, he was sure.\n\nHe experimentally stretched his neck, checking for stiffness or soreness, but it felt fine. In fact, all of him felt fine. He jumped up out of bed, ready to start his day. He had changed into fresh boxers last night, so he wore them to go shower. As he went down the hallway to the bathroom, he stopped to listen at his mom's door. Nothing. When he got to the bathroom, he found out why. The door was closed and he could hear the shower running.\n\nThey rarely interfered with each other's schedule this way, as they got up at different times, but of course lately they'd been synced up due to the inducing sessions. Adam went to the kitchen to put on some coffee.\n\nHe stood there, lost in thought, watching the coffee dribble into the carafe, hard cock at attention in his boxers.\n\nAdam had never been in a situation like he'd been in last night. So turned on that it almost hurt, being stimulated in so many ways, and yet frustrated because he just wanted a release. The feeling of being pent up, wound up, a hair trigger away from climax, but not able to reach it. Thankfully he had come, or he'd have ended up with the worst case of blue balls ever.\n\nJimmy and Jake liked to talk tough about what they'd do to each other's moms but it was just talk. Adam had gotten closer than either of them to actual sex, and it happened to be with his own mom. Granted, it was over-the-clothes grinding, so none of his friends would count it as getting laid.\n\nAdam had never had sex before, so he couldn't imagine it. How it would feel to sink his cock into a real, live vagina. Would it be great? Mind-blowing? As good as a handjob? He had no clue. He didn't expect to achieve it any time soon, as all of the girls in his school were either dating, not interested, or not interesting. Last night felt like what he imagined sex to be like. High arousal, very intimate, and worth repeating.\n\nHis thoughts were disturbed by his mom entering the kitchen.\n\n\"Hey, Hon. How was your sleep?\" she asked, bustling around and pouring herself a coffee.\n\n\"Better than I can remember in a while,\" he said. \"Thanks to you, I think.\"\n\n\"Aw. I slept well too. Sometimes it's good to go to bed early, eh?\"\n\nAdam shook his head. She knew he was referring to the couch session, and still insisted on being a complete dork. Moms. \"You seem to be in a bit of a hurry. Something come up?' he asked.\n\n\"Yeah, there's a bit of an emergency at work; I have to head in right away. We'll have to skip our morning session.\"\n\nHiding his disappointment, he said, \"It seems like you're on your way to being a top milk producer again. I doubt missing one morning will make any difference.\"\n\nHis mom paused her bustling and walked over to give him a hug. \"If I get back to being a 'top milk producer', it'll be because of your help, so thank you.\"\n\nHe hugged back tight, hyper-aware of her body pressed against him.\n\n\"Hon?\" she whispered in his ear.\n\n\"Yeah?\" he replied.\n\n\"You should take care of your... issue, before you go to school.\"\n\nSomehow Adam completely missed what she was talking about. \"Issue?\"\n\n\"The 'issue' poking me in the belly.\"\n\n\"Oh!\" Adam said, pulling away, cheeks and ears burning red hot. \"Sorry.\"\n\n\"S'okay,\" she said with an understanding smile. \"Have a good day at school. Love you.\"\n\n\"Love you too,\" he murmured as she left for work. He absent-mindedly pushed on his hardon, relishing the answering pulse of pleasure that spread out from his core.\n\nGreat, what was he supposed to do now?\n\nThe horny teenager sighed and headed to his room to watch some lactation porn before school.\n\n***\n\nMary went and got a latte, and sat and sipped it slowly. She felt guilty for lying to Adam about her work emergency, but felt like she needed this time to just sit and think. If they'd had their morning session, she felt sure they'd have picked up right where they left off last night. Based on his 'issue', he was on the same page.\n\nThe help he was providing was leaking over to something else, and while she wasn't blind to the progression, that wasn't the same thing as being comfortable with it. The problem was that, try as she might, she was really bad at maintaining her own boundaries. It just felt natural to do things like kiss his neck, or grind on his lap, or stroke his cock in the heat of the moment.\n\nTruly, the times when they were locked mouth to tit drove her to distraction. She wanted to feel more of him, to give more of her love, to be as close as any two people could be. Her impulses were to touch, and taste, and feel all of him, and so went with it. She knew it would keep happening, because it felt too fucking good not to.\n\nSo what now? Just keep on going, ignore what her head advised, and go with what her body needed? Her heart desired? What about Adam? What about his needs and desires? Was he truly okay with what they were doing? Had he put any thought into repercussions?\n\nWhere were they headed? Mary's brain shied away from the thought at first, but she forced it to the fore, exposing it to the light of full examination. If they kept up as they were, she was going to fuck him. The thought slithered away, motherly instincts recoiling, but her inner lizard brain spoke up from the depths:\n\nI want this\n\nShe shuddered, not able to deny it. It was the last thing she'd ever admit to anyone, but it was there.\n\nWhat now? They had to continue the sessions in order to ramp up her production beyond a few mouthfuls. She knew that if they continued, she would be tempted to do more; to touch and stroke and kiss and... and, just, more, hissed the lizard.\n\nIt would be so easy to just go along, ignore reality, and hope it all worked out. The hard path was to take a step back, use the pump, and put distance between her and Adam. Now that she had gotten started along the lactation path, the pump must be able to get her across the finish line. Right?\n\nFeeling a pang of sadness, Mary determined that was the best course. Avoid temptation and steer them both away from certain trouble.\n\nTaking a sip of her now lukewarm latte, she left the shop, doing her best to ignore the damp feeling in her panties.\n\nA quick pump at work reminded Mary of how impersonal and dehumanizing it was, however she was happy to see that there were some rewards, as she got a few millimeters of milk at the bottom of the bottles. Thankfully there was a lot less pain after the pumping was done, probably because there was actually something to pump out now.\n\nAnother session at noon, and by the time Mary was headed home she had wrapped her head around the new reality that her special bonding times with Adam were over. Now it was time to let him know. Gently.\n\nThe pump bag in one hand, her work bag in the other, she entered the house and listened. Adam's shoes weren't there, and no sound in the house. She plopped the bags down and checked his room. Not there. He also wasn't waiting in her room, which she had dreaded might happen. Especially after she had skipped this morning's session.\n\nHappy to have the house to herself, she went about changing into comfy, but chaste, clothes, including a padded bra. If she was lactating, she could leak. Her quiet time was cut short when Adam bounced into the house 20 minutes later, out of breath.\n\n\"Sorry I'm late,\" he huffed. \"I had to finish up at school and rushed home as soon as I could.\"\n\nMary smiled sadly at his efforts. \"Put your stuff down, come talk to me,\" she said, patting the couch - but not near her.\n\nHe did so, looking wary, and for good reason.\n\n\"Listen, I gave our sessions some thought, and I think we've gone a bit over the line. You know? I'm your mother, and we should be doing things with a mother/son level of intimacy. So, I've decided to go back to the pump to finish off the regime.\" She paused, and when he didn't say anything, she finished with, \"Thank you for your help, I am sure I couldn't have gotten where I am without you. I've got it from here.\"\n\nMary sat and watched her son silently go through the stages of grief, written large on his face. If it had been anyone else, she'd have found it funny. As it was, she just felt sympathy. She'd gone through a similar progression after making her decision.",
        "He slumped when he got to acceptance. \"I suppose it was too good to last,\" he said, glumly.\n\n\"It was great while it did last, right?\"\n\nHe nodded. \"I only wish I'd known that yesterday was the last time. I guess that's kind of a cliche.\"\n\n\"I wish I'd known too, in a way, but I'm also not sure what we could have done differently. I still have it all committed to memory,\" she said, trying lamely to cheer him up.\n\nAt that, his face coloured, and she cried, \"Ahhhh, I got you, you've got it memorized too, right?\"\n\nHe nodded again, sheepishly.\n\n\"You know that I only want what's best for us both, yeah?\"\n\nYet another nod. She understood why he wasn't very talkative. \"Do you want to watch some TV with me?\" He wouldn't, but she offered anyway.\n\n\"No, I'll go do some studying. Finals are coming up.\"\n\n\"Sure. Let me know when you're ready for dinner, okay? I'll be here.\"\n\nAnd that was it. She'd cut the cord, stopped the decay of their moral fiber, yadda yadda. The lizard brain was just sad, but her actual brain knew it was a good thing.\n\n***\n\nAdam spent a week pouting. He knew he was pouting, but couldn't snap out of it. His mom was understanding and gave him space, which probably helped the most. The other help was that he did need to focus on his schoolwork to pass his finals, and so he buried himself in that when he wasn't jerking off to memories of his mom on his lap.\n\nJimmy and Jake noticed his mood, and thankfully didn't press him much. Jake tried a lame mom joke on the first day, but Adam's expression must have warned him away.\n\nThere were some fun moments at school, in between studying and missing his sessions with his mom. At one point he started to compare the busts of the girls and teachers against his mom's, trying to judge if they were as good. Everyone came up short, but it was interesting trying to come up with a mental image based on clothing.\n\nLife at home was fine. Adam and his mom went about their normal routines, with the added solo sessions in her room to pump. He did his best not to check out her progress, but he was intensely interested in how her breasts would develop as their milk production increased. To his surprise, they didn't seem to change that much at all. Was a week not enough time to build up more milk?\n\nOne day Adam was finishing up schoolwork in his room when he heard his mom come home. That was unusual, as she didn't make a ton of noise. Today was very similar to that of several weeks ago, as she slammed the front door. Uh oh.\n\nHe sat and listened, trying to judge where she ended up. The noise of her passage went into the kitchen, bags slammed down, footsteps passing his room, drawers slamming in her bedroom, then more thumps as she walked past his room again.\n\nShe was in a mood.\n\nAfter 10 minutes of silence, Adam figured he'd try to test the waters. It never hurts to offer help.\n\nHe found her in the living room, sitting in the dark.\n\n\"Mom?\" he tried, quietly.\n\n\"It's not working.\" Her voice was firm, matter-of-fact.\n\n\"Uh, what's not working? The pumping?\" It was the only current event that she could talk about without a preamble, so he took a stab.\n\n\"I pump 4 times a day, and all I can get is a little dribble. I hate that fucking pump.\"\n\nDespite being a bit shocked at her language, Adam was on solid ground now. \"Sorry to hear that. I know you've been working hard. Not getting results can be frustrating.\"\n\nAdam had spent some time online reading up on empathetic statements, and was pretty proud of that one.\n\nSilence.\n\n\"It is frustrating,\" she whimpered, and then her head was bowed in her hands, and he could hear her sobs. He sat down next to her and pulled her to him, and she sank into his chest. He held her while she cried, wondering what he could do to help.\n\nHe snorted to himself.\n\nOops.\n\nHis mom lifted her head up and looked at him suspiciously. \"What's so funny?\" she asked.\n\n\"Um, nothing. I just thought of something. Sorry, it's not about you. It's me.\"\n\n\"What about you?\" she asked, and sat up, wiping her eyes with her hands.\n\n\"Heh, well, just laughing at how dumb I can be. I was sitting here holding you, doing my best to come up with a solution for your sadness, so I can fix it.\"\n\nShe smiled and thankfully didn't look mad. \"You did it in the right order. Empathy first, then help if it's required. I'm not sure if you can help. I think it's just me. I'm broken.\" This was said sadly.\n\n\"Oh, hell no, you're not broken. Did you not get any more increases at all with the pumping? Maybe a different pump would help?\"\n\n\"Not only did I not get an increase, I've actually regressed. Now I'm not getting anything. I feel stupid day after day with that damn thing on my boobs and nothing to show for it. I'm pretty sure I'm just going to give up.\"\n\nNow Adam was truly lost. Did he support her giving up? Or push her to continue? Maybe it really wasn't in the cards for her to lactate again.\n\n\"Did Ellen not give any other options? Medication? Anything?\"\n\nHis mom waved her hand to dismiss his line of inquiry. \"She said there are drugs, but I don't want that. She also said I can just get pregnant again, and I told her that wasn't happening.\"\n\nAdam blinked his eyes slowly, an image of his mom pregnant with a big belly and full tits swimming in front of him. He shook his head. \"Yeah that seems a bit drastic. 'Hey, I need to get knocked up so I can donate milk.'\"\n\nHis mom laughed and he felt his chest ease to see her happy again. \"That can be my tinder profile: 'Stud needed to breed MILF to get the MILK flowing.'\"\n\nThey both laughed. Adam thought he deserved an Oscar for not betraying the fact that he had a hardon and a rapidly beating heart.\n\n\"Thank you, son. I'll be fine. I just need to put this whole lactating thing behind me and move onto something else to fill the hole you're going to leave behind.\"\n\nShe leaned in and gave him a hug, which he returned with interest, glad the couch kept his waist bent to hide his hard dick.\n\nAfter the hug, Adam had to try at least once, or he'd never forgive himself. \"Do... you want to try the other way again? I'll behave, I promise!\" He attempted to get in front of her objections, and the effort at least made her pause.\n\nA pause where her face filled with skepticism. \"If it was just you, I'm sure that something could be worked out, but it's not. I really can't trust myself, is the issue,\" she said.\n\nWhat could he say to a confession like that? It was incredibly flattering and revealing and turned him on like nothing else. Knowing someone you were attracted to couldn't keep their hands off of you was the ultimate aphrodisiac.\n\nHe gallantly pushed on. \"Maybe we can keep our bodies separated? Put pillows everywhere? Tie our hands?\" At that suggestion his mom's eyebrows rose several inches. He backtracked, \"Maybe not that one. But there's got to be something we can do.\"\n\nHe cursed the desperation evident in his voice.\n\nAfter a minute of just looking at him, his mom said, \"You really want this, don't you?\"\n\n\"Of course! Who wouldn't?\"\n\n\"But, I'm your mother. I'm old! I might never make milk again, and we'd just be wasting our time.\"\n\nThe thought of sucking on his mom's boobs for months didn't seem like wasted time.\n\n\"I'm sure you can do it. You almost got there, right? We just need to motivate you again, get your at-home support going, and get those babies making milk!\"\n\n\"You mean, 'make some milk for babies', right?\"\n\n\"Yeah, that's what I meant. What did I say?\"\n\nShe smiled and said, \"It doesn't matter. Let's say I'm willing to give this another try. Can I rely on you to behave? And more importantly, can I rely on you to ensure I behave?\"\n\nThe thought of stopping his mom from doing anything was ridiculous, but he'd promise anything to get his lips wrapped around her luscious nipples again. He nodded. \"Absolutely!\"\n\nThe look she gave him was full of amused suspicion, but she nodded anyway. \"Okay. Tonight, we'll start back on the Adam regime. But no funny business for either of us, right?\"\n\n\"Right.\" He hoped.\n\n***\n\nThey went at it for a week. A week of chaste oral nipple manipulation for the purposes of inducing lactation. A week of wet panties and hard nipples. A week of fingers on her puss, and a dildo up her twat. Mary did everything she could to keep her lizard brain at bay and keep the arrangement with Adam 'professional'.\n\nIt worked. They kept to their sessions, her on his lap on the couch to not hurt his neck, but also not sitting directly on him. No hands, no extra mouths, just wham, suck, thank you Adam. A few times she let her hand stray and he would gently move it off him. She admired his efforts.\n\nUnfortunately, the renewed sessions didn't work. Her milk didn't increase one iota.\n\nAdam was nearing his finals now and had warned her that he would need more time to focus. Their sessions became more and more 'dry', and business-like. In no way did it even come close to the connection she'd felt the first time around, and after a week she came to the conclusion that that was the issue.\n\nBut how do you bring that up, when business-like was the requirement for them to keep themselves contained? 'I need more passion, but also, not any more passion.' It didn't work.\n\nEventually Mary had to steel herself to the realization that she needed that bond with him in order to produce breast milk, but couldn't bring herself to cross that boundary. It wouldn't ever stop. She wouldn't want it to stop.\n\nHer motivation was gone, one of the two key foundations to inducing lactation. Somewhere along the way it had morphed from helping the children, to connecting with her son. She didn't want the milk if there was no connection. In her examinations of her motives, she had missed that key piece. It only felt good when he was doing it, for real.\n\nMary vainly tried to keep it going for another day after her revelation, but had to come clean when it was plain her heart wasn't in it with such clinical application of her son's mouth. He may as well have been the pump.\n\nThe next session, when she came into the living room and saw him sitting on the couch, waiting for her, she sat down next to him instead.\n\n\"So, there's been no improvement,\" she started. \"And I don't see it changing any time soon. Something in the way I felt the first time you were helping me was different. You're doing a great job, no complaints, but I think it's time to call it.\"\n\nAdam was no dummy, he wasn't surprised. \"Yeah, I kind of thought this was where we were headed.\"\n\n\"Yeah. We did our best, but sometimes you have to just read the writing on the wall.\"\n\n\"Sure, I understand.\"\n\nThey sat in silence for a while, both lost in their thoughts, until he said, \"What will you do to fill the void I leave behind now?\" The cheeky grin on his face lightened the mood.\n\n\"You jerk,\" she said, laughing. \"Maybe I'll get a bathing suit, and when I'm lonely I'll soak it and put it on.\"\n\nHis eyes almost crossed trying to figure out what she meant, which made her giggle.\n\n\"A bathing suit?\" he said, finally, plaintively.\n\n\"Yeah, a soaked bathing suit always gets me wet.\"\n\nImmediately after the words came out, she knew it was a mistake. They had avoided any talk over the last week of being aroused, or showing any sign of non-lactation feelings. Not that it meant there weren't any, but they didn't show it. Mary could see the astonishment on her son's face.\n\n\"I've done a good job of keeping us on point, haven't I?\" he asked.\n\n\"You really have. I have no complaints.\"\n\n\"Then you'll forgive me for saying that I think one more try, the old way, is worth it. I can keep us on track.\"\n\nThe old way. What was the old way? In her bed? \"What's the old way?\"\n\nTo answer her, he reached for her hand, and when she gave it, he pulled at her, urging her to straddle him again. This time he put his hands on her hips and held her, immediately igniting a fire in her middle. He then simply waited. Slowly catching on, Mary took her shirt off, and then her bra. She had been topless many times in the last week. So many times. But this was the first time it felt different.\n\nShe made to sit up, and put her breast near his mouth, but he held her hips down, keeping her on his lap. He pulled, and she followed, and she found herself pressed up against a bulge.\n\n\"Oh, Adam,\" she started, but he interrupted.\n\n\"It's fine, just trust me.\"\n\nShe did trust him, and leaned forward. He looked up at her as he took her nipple in his mouth. She was so invested in what he was doing that she almost missed the subtle thrust of his hips up into her. Almost. The wave of gooey warmth that spread from her pussy took her mind off of what he was doing with this mouth, until she felt his tongue on her nipple.\n\nThis wasn't the normal suckling, the chaste, matter-of-fact suction to induce lactation. This was playful, teasing, caressing with wet flesh. Mary groaned at the assault on her senses, feeling her body respond instantly. She ground her pelvis on his lap, feeling his lump rub across her cloth-clad pussy.\n\n\"Adam,\" she started again, and was interrupted again.\n\n\"Just go with it,\" he said, pulling his mouth from her tit briefly.\n\nJust go with it. As she writhed on his lap, grinding on his cock, she melted into the thought of just going with it. Going with everything. She trusted Adam, and he had it under control. Time to let herself go...\n\nMother and son sat together, genitals rubbing and rolling, while he suckled. Mary's mind fuzzed and she concentrated on the feel of his mouth, and his tongue, his body under hers, his hands urging her to keep moving when she slowed down.\n\nSeveral minutes later, she felt the sensation of her breast letting down, milk flowing from her into his mouth. He was magic. After weeks of regression, she was back on track to making milk. It was all thanks to her connection to him; the joy she got at feeding him, sure, but also the full body buzz of arousal she got.\n\nAdam suckled at her teat longer than was necessary, but she didn't mind. She'd let herself go, and was lost in the feel of their bodies connected. She wished she could feel his bare chest, like the first time they'd been on the couch like this, but she trusted his instincts. Her hands were in his hair and on his shoulder, bracing herself and his head. He continued to hold her hips, helping her grind.\n\nHe swapped to her other tit, and then she was feeding him again, the pulsing rhythm of his suckling sending matching shivers of lust to her pussy as she rode him. They were in sync, and it drove her higher and higher.\n\nAs her milk ran out, all too soon, Mary couldn't help but come on his lap. It was wrong, it couldn't end well, but it was working. She shuddered there on him, her hips vibrating, trying to elicit more pleasure from the mound in his pants. As her contractions slowed down, she looked down at her son, who was just sitting and watching her.\n\n\"Oh, Adam, what are we doing?\" she whispered.\n\n\"Making milk,\" he said.\n\nShe didn't get off of him, and he didn't remove his hands from her hips. They just sat there a bit, staring at each other. In the aftermath of her orgasm, she wanted to return the favour, or hug him, or kiss him. As she leaned in, she watched Adam's eyes flicker over her face, focusing on her mouth. An ache started to rekindle in her middle and her heart thumped hard in her chest as she made contact with his lips.\n\nHis mouth was warm, soft, and tentative. It was almost a chaste kiss, but not quite. When he didn't pull back, she let her lips move, opening them slightly. He responded in kind, and their mouths were moving. The connection they had just shared added an entire blazing hot dimension of lust to the kiss, and she wanted more. Mary let her tongue slip out, tasting him for the first time. His lips were sweet, but the tongue that darted out to meet hers was even sweeter.\n\nShe was tasting her own milk in someone else's mouth again, and the memory of it came rushing back. How Ian would kiss her after he sucked at her. More cried her lizard brain, and she shoved her tongue between his lips, her own flavour washing over her taste buds.\n\nMary moaned into her son's mouth, and he moaned back. She hugged him close with both arms, and felt him do the same. The rekindled blaze of lust in her middle was spreading, tingling sparks bouncing to her favourite spots. Her hips started moving again, trying to get as much of his imprisoned manhood on her cloth-confined pussy as she could. She felt 18 years younger, her body flooded with hormones, wanting to fuck anything that had a cock.\n\nHer brain tried to stop her, to send up signal flares of warning, but she ignored it all. Thankfully, Adam didn't ignore his own warnings, or the promise he'd made to keep them in line. He retreated from her, leaving her mouth open, panting. Her nipples were rigid, pressing against him, droplets of milk seeping from them.\n\n\"I guess we should save it for our next session,\" he said.\n\nMary nodded, but part of her felt cheated. Like he shouldn't be able to show such restraint when obviously worked up. She couldn't do it, why could he?\n\n\"How do you do it? I lose all willpower when I get started, but you're able to stop... how?\"\n\nThe look he gave her almost made her laugh. If any expression could contain all of the world's incredulity, he had done it. \"You said we had to behave, and so I'm behaving.\" He pushed up a little with his hips. \"Not to be too forward, but it's pretty obvious I'm raring to go.\"\n\nMary realized the world had moved on from when she was his age. They had taken their cues from body language and actions, not necessarily words. It could lead to some wonderful stuff, but also a whole lot of bad stuff. This new generation was careful about consent, and she applauded it, but that meant she had to say with words what she wanted to happen, instead of it just happening.\n\n\"So, if I were to say that I wanted to keep kissing you, even after my milk is drained, would you do it?\"\n\nHe nodded quickly. She tingled at the thought.\n\n\"And if I were to say that my clothes are too constricting when I'm on your lap, but that we shouldn't do anything more if I take them off, you'd respect that?\"\n\nShe giggled at the expression that flickered across his face as he nodded. It was a grimace of pain. The poor boy would listen to his momma, but would leave the room with the worst case of blue balls. He nodded slower this time.\n\n\"And if I said that your clothes were chafing me when I sit on you, and you had to go naked for my comfort, but we had to behave ourselves, you'd listen?\"\n\n\"Now I think you're teasing me.\"\n\n\"Maybe a little.\"\n\nHer inner tension eased, her mind woke up, and she became aware of how close she'd come to listening to her inner selfishness. Her loins were molten still, and she could feel her damp panties as she rolled off of Adam's lap. She sat next to him and grabbed his hand, holding it.\n\n\"I'm sorry for being this way. All over the place. You've been such a help, and here I am teasing you and working you up and putting on the brakes and saying 'no' but acting 'yes'.\"\n\n\"Honestly, Mom, I am getting something out of this too, you know.\" He pulled on her hand, getting her to face him. \"I love helping you, I really do. I think I have a fetish or something. But also, I want you to be happy, and I think that helping others will do that. Whatever it takes to get your milk flowing at maximum speed, I'll do it. Even if it means some discomfort.\"\n\n\"I could help you with that,\" she said, looking down briefly.\n\n\"And you won't be tempted to do more?\"\n\nMary didn't even need a millisecond to know what the answer to that was. She looked away from him.\n\n\"What if I was okay with doing more?\" she asked in a mere whisper. She couldn't hear the words over her own booming heartbeat, so was sure he'd miss them. Did teenagers have superhuman hearing?",
        "\"I'll do whatever you want,\" he said, and it was quite clear to her that the scope of 'whatever' was vast and deep and wide.\n\n***\n\nAdam didn't regret telling his mom that he would do what she wanted. He didn't regret urging her to start up the intimate suckling sessions again. He didn't even regret having to walk away with a hardon, as they split to go their separate ways for the night. What he did regret was that he'd have to make it through the night before their next session.\n\nIn his room, he wasted no time in dropping his pants, revealing the wet spot in his underwear, and the tent under it. His cock sprang free when he dropped them next, and he stroked once, intent on coming as fast as he could.\n\nBoom. One stroke, and he was flinging cum at the ceiling, delivering three lines of white spunk on the paint. He fell back on his bed, trying to aim his cock at his stomach, and still managed to get his chest covered. What the fuck.\n\nHe'd never come that far before, or that quick. As his dick calmed down, oozing a puddle onto his belly, he could smell his own scent filling the room. Apparently, you could overcharge these things.\n\nThe massive ball of tension he'd been carrying since his mom first climbed onto his lap that evening eased, leaving him drained in more ways than one, so after wiping himself with his underwear, he climbed under his blanket, naked, and dropped into a deep slumber.\n\nThe next morning was announced by his alarm. Once again, he was fully refreshed after a full night's sleep, and a nightcap of warm milk. He lay in bed, his mind full of the session the night before, and his mom's final query: 'What if I was okay doing more?'\n\nShe hadn't said what that meant, so he was full of ideas about what and how far that could mean. Sessions in the nude, like she'd teased him about? Handjobs? Blowjobs?? That last one felt like it was too far. It was easy to get into some heavy petting, considering how intimate the sessions were, but a blowjob was just plainly one step short of having full on sex.\n\nHis mind slipped neatly aside from thinking that far.\n\nAdam knew one thing: he'd do whatever she wanted, whatever it may be.\n\nThey were both tested over the next few days, as their sessions were full of desire and passion, kissing and touching, riding and pushing. They managed to pass the test each time, not going any further than they already had. It was all in the name of milk, right?\n\nAfter the 4th day of multiple sessions per day, his mom sat him down again.\n\n\"So, we've gotten back to where we were, production-wise, but I think we've stalled again,\" she said, sounding perfectly perplexed.\n\nAdam watched her, sitting near him, his dick hard in his pants through pure proximity. He knew his mom's body fairly well by now, and could imagine her skin under his hands quite easily. It distracted him. He tried to shake himself out of it, and listen to her concerns.\n\n\"Umm...yeah, I guess I noticed it.\" He hadn't. He spent each session just enjoying the moment, not judging how much she was producing. \"What do you think we should do?\"\n\n\"I've given it a bit of thought. I wonder if we're just not pushing me far enough.\"\n\nThat made no sense. Adam turned it over in his head a bit, but drew a blank. \"Pushing you far enough?\"\n\n\"Yeah. You know how my milk seems to only come in when we are close? Connected? I really felt the bond between us that first time, when you had your shirt off. Can we try that again?\"\n\nYes. He flashed back to the feel of her bare tits on his chest. Yes, a thousand times yes.\n\nTrying to keep it cool, he said, \"Sure, we can try that.\"\n\nShe smiled, and said, \"Thanks.\"\n\nThe next session was exactly that. Them both topless, and Adam noticing that she touched his shoulders and chest a lot, and was more vocal. He couldn't say if she had produced any more milk, but she seemed happy, so he was as well.\n\nA few more days, and then he met her in the living room and almost the same talk was had. Milk had increased, but not by enough. Could they try something new? This time she asked if they could wear shorts in the sessions. That way she could feel closer.\n\nHell yeah.\n\nThe first time he felt a little self-conscious, waiting for her on the couch in only shorts, with a sizable bump in his lap, but as soon as he saw her appear in the doorway, he forgot about it.\n\nShe was just wearing white shorts, nothing else, her breasts swaying and bouncing as she padded towards him. His mouth went dry, and he frantically tried to work up some saliva, as she mounted him on the couch.\n\nIt had been going on for a week, but he never got tired of feeling her fully settle herself on him, ready for a session of sucking. This was no different, and now he could feel her soft legs on his, the added feel of yet another connection point between mother and son lifting his excitement further. It was a rare session where he didn't come in his underwear now. His mom seemed to expect it, but it wasn't discussed.\n\nDiscussion was kept to seemingly innocent topics. How much milk was he getting? What could they try next to increase it? Was he free to milk her?\n\nThat last came up when he was busy studying, as finals were next week and he tended to lose track of time. He was in his room and didn't hear his door open.\n\n\"Hey,\" came her voice.\n\nAdam turned and saw her there, in nothing but shorts, and felt his cock rise in his pants. \"Hey,\" he croaked.\n\n\"I know you're busy, but do you think you could take a few minutes to milk me?\" She said it with an impish grin.\n\nHe had to clear his throat, but managed to get out, \"Always.\"\n\nAdam followed his topless mother to the living room, before realizing that he'd forgotten to change into shorts for the session. He turned to go back to his room, but stopped when she spoke.\n\n\"Where are you going?\"\n\n\"I forgot to put on shorts, I'll be right back,\" he said quickly.\n\n\"Oh... It's okay, just wear your underwear. It's the same as shorts, right?\"\n\nIt wasn't the same, and he thought they both knew that, but he wasn't going to argue.\n\n\"Here, if it makes you feel better, I'll just go undies as well.\" Without hesitation, his mom stripped her shorts off and she was wearing just panties. Not granny panties, but thin bikini panties.\n\n\"Ah, mmm, okay,\" he rasped, and undid his pants, letting them drop to his ankles. The tent he'd made was pointing forward, freer than it had ever been around his mom. She stared at it, as he was at her panties.\n\nHe took his shirt off, and then he was there in socks and boxers, feeling a bit silly.\n\n\"The socks seem a bit extra, don't they?\" his mom asked.\n\nHe nodded, following suit, then sat down on the couch. He watched, rapt, as she climbed aboard. Always before, his hardon was safely encased in his shorts or pants, and so she could just sit on it. Now his cock was hardly affected by his loose underwear and he was pointing straight up.\n\n\"Oh, I guess we didn't think that part through,\" said his mom.\n\n\"No,\" he whispered.\n\nThings were penetrating his thick skull. The now normal sight of his mom's bare breasts took on a whole new aspect when she was astride him in just panties. Her bare legs and feet, and even most of her butt, were touching him all over. Adam groaned at how hard he was. He was sure he'd come at the slightest touch.\n\n\"Can I move it a bit, do you think? I need to get closer so you can milk me.\"\n\nShe'd said it again. He nodded.\n\nAdam felt a touch, and winced, thinking he would explode, but magically didn't. His mom had used a thumb to push on his head, pointing him to his stomach, and then shimmied forward.\n\nHer normal position on him, her breasts in his face, but now with her pussy and his dick separated by two very thin pieces of cloth, had his heart cramming into Adam's throat.\n\n\"MMmm, that's better,\" she murmured, before lifting her tit to him. He instinctively latched on, and she moaned deep in her chest.\n\n\"Ohhhh, this will make the most milk yet,\" she said, before starting her riding motion on him.\n\nIt was too much. He could feel the heat coming from her, soaking into his cock. Her motion with her hips was pushing against his rigidity, ensuring that he was pressed hard into her. Adam tried his best to keep his focus on his suckling, but every time she moved he was distracted by the feel of her on him. Her hands on his naked shoulders, roaming over his skin.\n\nHe couldn't hold out, he had to move, to fuck, to thrust. As before, he grabbed her hips to aid in his own pelvis rolling, except this time she only had the little panties on, the rest was bare flesh.\n\n\"Oh, Adam,\" she groaned at his touch, as his fingers dug into her haunches, pulling her into him, her pussy riding up his shaft.\n\nHe grunted into her breast at the feel of wet heat on his tip. What? But then they were moving again, his cock thrusting up, her moving back towards his sack. When they crashed together, he felt it again. The friction from his underwear was gone, and instead he felt silky smoothness running up his shaft, before a moist kiss was placed on his head.\n\nSomething was wrong, no, something was right. Something felt very right, and he wanted more of it. He thrust harder the next time, and shuddered as the slippery heat seemed to stroke his entire cock. It was even getting on his balls when they retreated.\n\nAdam wasn't going to look. He assumed it was because his boxers were getting wet, and were just feeling better than they ever had. He kept up the motion, hands still gripping his mom's hips, each thrust getting longer and more exaggerated as he tried to run the length of his cock along the slippery heat.\n\nHe was so focused on how his cock felt, that he didn't notice his mom. How her hands were locked like talons on his shoulders. How she was moaning at the end of each thrust. His suckling had stopped, and instead he was playing with her nipple with his tongue.\n\nOn one of his thrusts down, with his mom riding high over him, his cock slipped under her, and got caught briefly, before slipping forward moving upwards, his shaft running through the wet heat again. The next downward thrust did it again, and this time he lost his rhythm, as there was no slip, and they stopped dead. It was painful, but not enough to cause damage. They stayed there a split second, and then he felt one hand move off his shoulder and down between them, hunting for the spot where they met.\n\n\"Oh well,\" she said, and then she moved her panties to one side, and suddenly the blockage was gone. All that was left was glorious pressure, as his head split her labia and spread her open, and then she was descending on him in a slow, steady plunge. The tight, wet, entrance to his mother's womb sank down over his shaft with a tight squeeze.\n\n\"Aaaahhhhh,\" he gasped, the feeling overwhelming his senses.\n\n\"Oh, Adam, you feel wonderful,\" his mom said, and then she was riding him again, and he could only sit there and do his best not to come. It was futile, of course. He was so turned on, so stunned by being in her, that he blew his load almost immediately.\n\n\"Uhh, uhh, uhh, uhh,\" he gasped, as each spasm delivered his spunk inside of her. For her part, she didn't stop moving, still rolling her hips on his lap. Her molten interior stroked his spasming cock, milking it for all that he had.\n\n\"Aaahhhhh,\" sighed his mom.\n\nAdam laid his head back on the couch, eyes closed, and basked in the rain.\n\nRain? Blinking his eyes open, he looked upon a wonder. His mom on his lap, wide hips straddling him, her head thrown back and mouth open, quivering through an orgasm. He could feel her vagina pulsing and clenching down on his still hard cock. Through it all, the most wondrous thing was the perfect arcs of milk spraying from both nipples, drenching them both.\n\nHe couldn't hold back, and grabbed her in a hug, pressing his chest against hers, their skin slipping and sliding. Seeing her mouth open as if in invitation, Adam captured it with his, feeling her respond instantly with her tongue meeting his.\n\nArms wrapped around each other, caressing and stroking, lips and tongues moving, fighting to taste and to be tasted.\n\nAt one point his mom pulled her mouth off of his, and pushed him to her breast, hissing, \"Suck!\"\n\nHe did, drawing in a mouthful. Before he could swallow, she had dragged him back to her mouth and then they were sharing her milk, the sweet nectar swirling between their tongues and sliding down their throats. She did it again, and they had another mouthful to fight for.\n\n\"Fuck, Adam! Suck on my tits, I need to feel you drinking from me,\" she urged, moving him to her tit again.\n\nHe was not going to complain, although he did want to kiss her more. His mom's milk filled his mouth over and over, as she cradled his head to her, fingers entwined in his hair. A familiar humming drifted through the room as he drained her. The soporific effect of the warm milk in his belly, and the music in his ear, had Adam in a kind of hazy half-sleep while he nursed. After a bit he was swapped to her other breast, and he had even more milk to drink.\n\nIt was comforting, and intimate, and Adam wanted to do it again. Many times.\n\nEventually her other breast was drained, and she was moving away from him, letting his soft member fall from her vagina onto his wet boxers. He could see her red, engorged labia next to the gusset of her panties as she rolled off of him. She must have seen where he was looking as she pulled her panties over her, hiding from his gaze. He followed suit, tucking his dick back into the hole of his boxers.\n\nIt seemed that maybe there would be some awkwardness after they had surrendered to lust, but his mom surprised Adam by leaning over and hugging him again.\n\nShe said in his ear, \"I'm going to have a shower to clean up, and then head to bed. I'll see you tomorrow morning. I think our new method will have me making enough milk to donate. I love you!\"\n\nAnd then she was gone. Adam sat, stunned by it all, until he started to feel cold and sticky from the milk covering him. He went to shower, mind filled with incredible events and subsequent feelings. He'd said he would do whatever it took, and had no regrets.\n\nNo matter how long it took, no matter how many times they had to try, he would do THAT again.\n\n***\n\nMary slowly woke up, awareness expanding. She felt good. Relaxed. It was Saturday and she had nothing to do. Nothing except her sessions with Adam to continue the lactation regime.\n\nShe stretched in her bed and frowned as something nagged at her. Was she forgetting something? Some appointment or chore? She couldn't think of a single thing.\n\nThere was nothing like a casual fondle of your own body while lying in bed, and as she did each morning, she squeezed her boobs to see if they had gotten bigger. With a wince, she eased up on the squeeze, as they were tender. One might even say sore. They were also very full, the skin stretched and taut. Oh yes, she was producing much more milk now. She'd have to get Adam to take some off the top before attempting to pump. It seemed like now was the time to start measuring for volume. Maybe she could start donating soon!\n\nIt wasn't until her hand roamed south, drifting over her trimmed pubes to her labia, feeling them a bit sensitive, that last night's events came thundering back.\n\nShe'd fucked Adam.\n\nTits and pussy forgotten, Mary closed her eyes, trying to recall what she'd done in as much detail as possible. She hadn't even been drunk! Not that it would have excused anything, but it would be easier to forgive herself.\n\nPiece by piece she rebuilt from start to finish what they had done. Had he seemed uncomfortable or reluctant at all? Ashamed? Guilty? Nothing came to mind.\n\nThe only time he'd seemed uncomfortable was when he'd become stuck at her entrance, her panties the only thing preventing him from entering her. The pressure of his cockhead against her opening had been wonderful, but they couldn't stay like that. She had meant to fix the situation, to move his manhood and get them back on track, but when she'd put her hand where they were joined, it became a decision between moving him or her panties.\n\nKnowing her will power, it was no shock that the lure of shifting her panties to one side, to let him in just a little bit, had won the day. The little bit had turned into a long bit. Each inch she took of his cock led to another inch, and another, until he was fully inside of her. She was hooked. Gone, baby, gone. Naturally, she had to lift up, to feel him move in her, and then he was coming.\n\nA teenager with a hair trigger, go figure. In the end it hadn't mattered, as he had stayed hard enough for her to continue to ride him, his thickness strumming her nerves just right, and she had come soon after.\n\nThey kissed, and then he fed. Mmmmm, he fed. The thought of him nursing from her spawned a warmth in her middle. Instinctively grabbing hold of a breast, she was again reminded they were full, and too tender to womanhandle. She needed Adam, in more ways than one.\n\nUnsure of what she would find, Mary got out of bed and padded naked down the hall to his room. Silence. Well, of course, it was Saturday, and he was a teenager. A light knock on his door produced no response, so she cracked it open and peered inside.\n\nA stir and a rustle. \"Mom?\" came his voice from the dark.\n\n\"Sorry, I didn't mean to disturb you, I just wondered if you could help me - well, if you could milk me.\"\n\nShe knew that her son was fixated on the milk part of their sessions, and so while it had been a tease last night to use the phrase, today felt more natural. He was milking her, with his mouth, for sustenance.\n\nMary did her best, as always, to ignore the other gratifying aspects of their actions.\n\n\"Um, sure, yeah, of course,\" he said, voice quickly becoming firmer and more awake. \"Should I meet you on the couch? Do I... ah, are shorts okay?\"\n\nHe was asking how far they would go this time. If she intended for them to fuck again. They both knew the question, and she was pretty sure they knew the answer.\n\n\"Actually, I'd had another position come to mind after last night. Your father and I used it a few times. Can I come in?\"\n\n\"Yeah!\"\n\nShe entered, closing the door behind her. Feeling her way to his bed in the dark, she kneeled up next to him, and found him sitting up. She pushed on his chest, getting him to lay down again. Now she was leaning over him, and felt down his body to discover that he had no clothes on. Even better.\n\n\"Is this okay?\" she whispered.\n\nHe must have nodded, because after waiting a few seconds she heard him say, \"Ah, yeah, it's fine.\"\n\nMary felt down Adam's stomach until she hit a patch of hair and then his rampant cock was filling her hand. She hadn't had it in her hand for weeks, and never when he was naked. She ran her hand up and down it, feeling its granite-under-silk texture. She shivered at the power contained within it.\n\nPower. Power to fuck. Power to pound her puss. Power to turn her to jelly. Power to knock her up.\n\nOh, crap.\n\nAdam must have sensed something was wrong when she stopped moving.\n\n\"Mom? Is everything okay? We don't have to do your new position. We can do it the normal way.\"\n\nKnock her up. Fuck. He'd fucked her last night, and filled her up. Filled her to the brim, as was evidenced in the shower afterwards, as it dripped and drooled from her vagina. A funny shiver ran through her, as the prophetic words of her doctor drifted back. 'She could always get pregnant to induce lactation'.\n\n\"Mom?\" Adam reached to her in the dark, rubbing her naked back.\n\n\"Hm? Sorry, I got lost in my own head.\"\n\n\"Are you okay?\" His obvious concern prompted her confession.\n\n\"Yes, I mean, I hope so. I just realized that we were intimate last night without any protection. I... just don't know how I missed it. I guess in the heat of the moment?\"",
        "\"Oh...damn. I missed it as well. I wasn't really thinking very clearly last night. I mean, I've never - that is, that was my first - and so I was focused on that, instead of other important things like protection.\"\n\nMary lay down next to him, putting her head on his chest, careful to not put pressure on her breasts. She idly played with his still hard cock, fingers collecting precum and spreading it along his shaft. She'd taken her son's virginity last night. She intended to take him again.\n\n\"Do you have any? In here?\" she asked.\n\n\"I know I should, but it's never really been a concern. I guess we'll have to delay my milking - that is, my help.\"\n\nShe didn't answer, instead caressing his cock more. He was breathing harder, his chest lifting her head up, pressing against her boobs. They ached.\n\n\"I need you to at least reduce the pressure in my breasts, they're too tender to handle right now. Can you do that, at least?\"\n\nHer inner lizard brain chuckled in glee.\n\n\"Yep, I can. Should we move to the living room?\"\n\n\"Nope,\" she said, and sat up, lifting her leg over his middle.\n\nOnce again, his cock was nestled in her flower, petals draped around his shaft, clit perched on his glans. His slippery precum mixed with her own arousal, creating the perfect lubrication for movement. She leaned over, running her pussy along his meat, dangling a breast in his face, hands braced on the bed by his head.\n\n\"Please,\" she said to the darkness, and exhaled loudly when his lips latched on, his one hand cradling her tit, the other on her side.\n\nIt was painful to start, as he drew on her tit, coaxing her to let down. She concentrated on the sensation of her milk releasing, and then gasped when she felt it. The dreamy glow of her milk entering his mouth. The sound of him swallowing repeatedly filled his room. Relief.\n\nA different instinct kicked in then. Her normal routine when he suckled at her was to ride him, and so she did. She'd intended for them to be linked as man and woman when he fed from her, but this was a close second. She felt him join her, his hips thrusting up. This was the same sequence that had led to the dangerous potential breeding last night, but Mary was careful not to think about it.\n\nAs they writhed together on the bed, and he drank from her, their movements extended. They lost themselves in the dance of 'dry'-humping. Mary could feel her hopes rise each time she reached the top of her stroke, only to have them dashed when nothing happened, and they moved the other way. Each time she moved up a little further, and felt him push his butt into the bed a little harder.\n\nIt was inevitable. They weren't fooling anyone.\n\nOn one movement, his dick slipped from her cradling love canoe, flopping free below her, and she cried \"Yes!\" in triumph as she felt his head pop inside of her canal. \"Finally!\"\n\nHis cock was stretching her, pushing its way in as she bore down on it with her weight. When she reached the same penetration as she had the night before, and kept going, she grunted in surprise. He was laying down now, his full length available, and so when their pubes met, she was fully stuffed.\n\n\"Oh fuck,\" she blurted out, as she adjusted to the feel of him in her. A tentative bounce on his lap indicated she was ready to go, and then she felt him grab hold of her hips again. He liked to help, and so as she bounced on him, he used her body to fuck upwards, slamming his cock into her.\n\n\"Adam, I just can't help it. Fuck me, babe, fuck me!\" Then he was, and she was, and the sound of their bodies slapping together filled his room. He'd had to let her breast go, as her motion was too wild for him to feed, but she didn't care. One breast was still tender, as it bobbed up and down, but all she wanted now was to fuck.\n\nAnd fuck, they did. Wild, rough fucking, his cock slamming home over and over, filling her up perfectly. She had to breathe through her mouth to get enough air, and she could feel saliva flood over her tongue. A sweat broke out on her chest and face as they kept going, the feel of him in her driving her closer and closer.\n\n\"Are you close?\" she gasped, hoping he wasn't, but certain he must be.\n\n\"Gaahhh!!\" he yelled, and that was it. He stopped fucking, and she had to as well, as she wanted to feel it. Wanted to feel his cock expanding and pulsing, emptying into her. She carefully lay down on his chest, as he grunted and moaned, content to feel his spasms deliver his essence to her womb.\n\nHer still full breast was leaking on him, a dribble that ran down his chest to the bed. With one final push, he finished coming, and they lay there, still connected.\n\nMary waited a few seconds, and when he didn't soften in her, she propped herself up again, and started riding him. Now it was her doing all of the work, as he was spent, but she didn't mind. It was heavenly feeling his now spermy cock caress her entrance. She was going slower now, happy to just experience the feel of him entering her over and over, her nerves singing.\n\nWhen he'd recovered a bit, she felt him latch onto her other breast and then she was fucking and humming and concentrating on her let down. His gulps filled the room, and it was enough to take her over the top. She came on his cock, milk spraying in his mouth, leaking from her other nipple. Waves of pleasure thundered with each convulsion of her pleased pussy, gripping him tightly.\n\nAftershocks of mini-orgasms shook her body as Adam continued to drink from her, until finally he was done, and so was she. Cock slipping from her vagina, she dropped down next to him on his bed, and they fell asleep.\n\n***\n\nThey woke up together. It might have been minutes or hours; it was hard to tell in the dark.\n\nMary felt her boobs, but they hadn't refilled yet, so it couldn't have been too long. She sat up, and felt him stir next to her, reaching for her. He found her breast in the dark, and fondled it, so she leaned into the touch. His fingers on her skin stirred her insides, and she contemplated what she wanted.\n\nShe wanted to fuck him again. She wanted his cock stirring her insides with each thrust. She wanted to feel his weight on her as he pounded into her over and over.\n\nWas that wise? They had already tempted fate twice. As he sat in his bed, his hand on her nipple, tracing around the areola, Mary counted the days since her last period. She'd not been on birth control for years, since Ian passed. 16 days? Around there. Could be more, could be less. Whichever it was, she was primed. Open for business.\n\nLetting the thought dissipate, she contemplated where she was. What they'd just done. Her burgeoning arousal roared to life. What was done, was done.\n\nShe lay back down, the room still pitch black, and his hand followed her, still fondling, caressing, playing. He could do that as long as he wanted, she realized.\n\nMary spread her legs, pushing her knee against him, and took hold of the fondling hand. She pulled him towards her, urging him over on top. When he was between her legs, she pulled him down on top of her. One hand grabbed his head, pulling him in for a kiss. Her other hand went to his ass, pulling him to her hard, insistently. Fuck me, her hand said.\n\nShe hissed, pleased and gratified to feel his hard member poke her down below. A shift and another try, and he was in her again. She couldn't get enough of his cock, she realized. The girth, the length, the texture as it moved into her tingling vagina.\n\nThen she was full, and she wrapped her legs around his waist, while she wrapped her tongue around his. They fucked slowly, him penetrating her over and over, deliciously tender and deliberate. He could do that as long as he wanted to as well.\n\nAt this point, after so many days of being turned on while having her breasts nursed at, she had a new Pavlovian response built up. The buildup of tingling tension in her middle caused her breasts to ache, needing to be in his mouth. She ignored it, as she wanted his lips and tongue right where they were.\n\nAs they fucked long and slow, Mary felt herself building towards something magical. A come unlike any she'd had in a long, long time. A gradual buildup that wound her insides into knots of pleasure, until she was a hair trigger away from coming. She writhed under him, running her hands along his arms, her legs along his thighs as he pumped away at her. Gradually she reached her peak, perched there for a bit and then toppled over the side. A final, single thrust, and she let the tension go, an explosion that blanked her mind as she quivered and quaked, legs and arms clenched around her son.\n\nAs she came, her mouth gaped open in a silent scream, she could feel her juices flood from her, covering them both and soaking his bed. She hadn't squirted in a long time, either. The warm wetness must have sent him over the edge, as she felt him tense up in turn.\n\nOnce again Adam was, effectively, breeding her. Sending his sperm deep inside of her where it could impregnate her. There wasn't a hint of concern in her mind, instead there was a warm glow coming from the inner lizard brain as it wallowed in its depraved desires. It had wanted this. She had wanted this.\n\nAnd now she had it.\n\nMother and son recovered, disentangling their parts, ending up laying side by side again. Panting in the dark, sweat and milk drying, they each thought their thoughts, wondering where they would go now.\n\n\"Are you hungry?\" she whispered.\n\n\"Famished,\" he replied.\n\nThey went to eat.\n\n***\n\nThat week was a quiet one. Adam had his finals to attend to, and spent every waking moment in his books. Every waking moment apart from when his mom needed him to milk her. The statement that started as a joke was now their accepted way of referring to what they did. Of course, the milking went both ways now. As he sucked on her breasts, she would ride his dick until he emptied himself in her womb.\n\nThey didn't discuss what they were doing, but he was happy to keep doing it. He'd read that women who were breastfeeding didn't get pregnant as easily, and so perhaps there was an element of hope in that.\n\nPart of him could be convinced to work up a worry if he let it, but every time, as soon as he was balls deep in his mom, the worry went away. He was overcome by the feel of her molten silky vagina stroking him, the feel of her mouth on his, and the intoxicating feel of her body under him, begging him to fuck her.\n\nWhen his finals were done, he was basically done with school, and so he stopped going, spending more time with his mom. There was no issue with graduating, he had that locked up.\n\nCome Saturday, after their morning session of milking, they were sitting at the kitchen table having breakfast.\n\nAdam watched her grunt with annoyance, pulling at her shirt.\n\n\"What's wrong?\" he asked.\n\n\"Oh, it's just my bra. It's pinching me.\"\n\nAdam sized up her chest, attempting to look at it objectively. Her breasts were definitely bigger, filling out her shirt nicely. \"Have you gotten bigger sizes yet?\" he asked.\n\n\"Yeah, I actually found my old maternity bras. I have no idea why I saved them all these years. I guess they're too old now.\"\n\n\"I'd say so. Do you want to go shopping for some new ones?\"\n\nHis mom gave him a skeptical look. \"You'd be okay going shopping with me? I don't know many men who would sit through that.\"\n\n\"Let's just say I have a vested interest in quality control, and making sure that you get something practical and flattering. You try them on, I'll give the thumbs up or down.\"\n\n\"How are you going to do that from outside of the change room?\" she queried, an innocent look on her face.\n\n\"Well, I guess I'll have to come into the change room with you.\"\n\n\"Will you, now? And you don't think anyone will think it's strange that my son is coming in to watch me try on bras?\"\n\n\"I'll be discreet. Besides, I think the idea is turning you on as much as me.\" Adam pointed at her chest with his spoon, indicating the bumps under her shirt. \"To make things easier, you should just go braless today. Don't want your lovely skin to get more pinched.\"\n\nHe smiled as the bumps got bigger. If he hadn't just drained her, there'd be wet spots.\n\n\"Fine,\" she said.\n\nTo his delight, she stripped her shirt and bra off at the table, before putting the shirt back on. Now he could see the definition and colour of her dark areola under the white material. Pushing down on his cock, he wondered if he had bitten off more than he could chew.\n\nComing several times a day was getting to be too much, and he knew he'd have to take a break very soon. But maybe not today.\n\nAt the mall, they found a department store with only a few people around. Adam scoped out the change rooms while his mom picked out some maternity bras.\n\n\"They don't usually carry this stuff, it must be a good time of the year for pregnancies,\" she said quietly to him. She had a few styles in her hand.\n\nAdam had a pair of pants, and they approached the change rooms together. The attendant sent them to individual rooms, but as soon as she left, Adam ducked into his mom's room. He grinned to see her topless in a different situation than at home. The mirror showed another set of mother and son, him watching her try on bra after bra.\n\nEach one was eliminated for one reason or another until they got down to the last one. It seemed perfect, hugging her breasts without pinching, and without covering their shape. It was a style of bra for breastfeeding mothers, and the cups were flaps that could be pulled down to expose her tits.\n\nHis mom demonstrated the feature to him, pulling down one flap. Her nipple slowly unfolded, extending out.\n\n\"Does it fit okay?\" he asked absently, mouth-watering at the sight of her full breast. Full in more ways than one.\n\nHis mom nodded, and said, \"It does, actually. I think I'll take a few of these.\"\n\n\"Mmhmm,\" he murmured, and she looked up from the mirror to his face.\n\n\"Oh? Is someone a little thirsty?\"\n\nAdam nodded, and leaned over and put his lips around her nipple, drawing it in for a full suck.\n\n\"OH!\" she gasped her normal gasp, hugging his head to her as he greedily pulled at her teat. Milk quickly flowed from her, as she had gotten quite deft at letting her milk down for him.\n\nDesire took over, and he pushed up against her body, pressing his cock into her middle as he suckled, her breast dangling from his mouth.\n\n\"Adam!\" she whispered. \"Not now!\"\n\nHe didn't want to let her tit go, or milk would spill everywhere, so he just simply said, \"MMM.\"\n\nHis mom sighed, and started to fiddle with his zipper. \"You're going to have to be satisfied with a handjob, there's no way I'm letting you fuck me in the change room.\"\n\nCock now out, in her hand, she started to stroke him. Her haste meant that her motions were more painful than pleasurable. He winced and stopped sucking, letting her nipple drop from his mouth after a final swallow.\n\n\"Ah, your hand is too dry,\" he said, pushing it away.\n\n\"I already said, I'm not letting you, you know, put it in me.\"\n\n\"Well, can't you find something to moisten it?\"\n\nAdam watched as his mom's eyes unfocused and went glassy. \"I... Yes.\" she said, and dropped to her knees.\n\nIt was to his credit that he did not cry out as her mouth descended on his dick. He'd never had a blowjob before, and to have one in public where anyone could hear them, drove him crazy. He could feel her tongue as she fellated him, moving on his dick, caressing the sensitive underside of his glans.\n\n\"Mom,\" he whispered loudly, and she pulled up in time to avoid gagging on the reams of semen spewing from him into her mouth. He watched as she swallowed time and again, throat and mouth working to drag his cum from him. He moaned into his closed mouth, his tingling cock being expertly milked for its load. When he'd finished spasming, she gave one last full suck of his entire shaft before letting his dick pop from her mouth.\n\n\"There!\" she said, brightly and standing up.\n\n\"That was amazing,\" he said, in awe at how incredible her mouth had felt on him.\n\nShe giggled. \"I certainly hope so. You're going to return the favour at home, right?\"\n\nAdam nodded, not really caring what he'd promised, still astounded that his mom had sucked him off. Somehow, despite the fact he'd had his cock in her many times, being out of the house and getting a blowjob for the first time had blown his mind.\n\nThey snuck out of the changing room and purchased several of the excellent bras. Adam drove them straight home, insisting that he had to drain her other breast to keep things even. His mom didn't protest, and looking back at it later, he realized she must have been anticipating what would come once they got home.\n\nThey went to her bed so she could lean over him while straddling his body. After the first time in his bed, they both liked this position the best. She got naked, and insisted he did too, even though he was sure he wouldn't be coming anytime soon. Even the thought of getting hard now was a long shot.\n\nHe lay on the bed, his mom sitting on him, her wet pussy on his belly. She dangled her tits in his face, and he was more than happy to do his part. When he had finished, she moved down his body, rolling over his shamefully limp dick until she was on his legs, and then pulled him down the bed, under her, until she was back at his middle.\n\nHe stared as she started to crawl towards his head. First she was at his stomach, and then his chest, and then she was towering over his face, looking down at him between her lolling empty breasts.\n\n\"Mom?\" he said, still not grasping the situation. He felt pretty dumb a few seconds later.\n\n\"You promised, remember?\" she said, and then climbed over his head and slowly lowered herself.\n\nOhhhh..\n\nAgain, despite being buried in her many times, he'd never had the chance to look at her pussy up close. She had large outer labia that shone from her own juices. They were lined with trimmed brown pubic hair, and spread slightly, letting him see her inner labia and the hint of a nubbin perched at the top.\n\nHe had no idea what to do. He'd seen porn, and read stuff on the internet, but that didn't equal actual experience.\n\n\"Breathe on it,\" he heard her voice say from above.\n\nHe pursed his lip and blew on her lightly, and was rewarded by her sigh.\n\n\"Lick the outsides,\" she urged.\n\nHe stuck his tongue out and traced her shining lips, nuzzling past her pubic hair. She sighed louder, so he did it again and again.\n\n\"Move in,\" she whispered.\n\nHe moved his tongue to the small lips that were now glistening, licking her, tasting her juices. She was tangy in a way that he liked, and so he licked again, gathering her arousal on his tongue. She shuddered above him, and he could see her inner muscles clench.\n\n\"Fuck,\" she said, breathing much louder now.\n\nHe kept it up, moving from in to out, up and down.\n\n\"Stick it in me,\" she groaned.\n\nThis was something he'd only done with his dick. Tentatively, he licked down, moving his tongue until he got to her open hole. He poked the tip of his tongue into her and then more, pressing his face into her pussy to try to get his tongue as deep as he could.\n\n\"Gah!\" she cried. Her pelvis started to writhe as she rolled up and down his face, returning the pressure. She seemed to like it, so he kept up the pressure, his tongue still buried in her hole. He wiggled it experimentally, and she hummed, so he did it more.\n\n\"Flick my clit with your tongue!\" she shouted, running her quim down his face.\n\nHe wasn't sure what to do. Was this her clit? He flicked the nubbin that had been poking out earlier, and was happy to hear his mom scream.\n\n\"Yes, again, oh Adam, right there!\"\n\nThe nubbin was it. He flicked it with the tip of his tongue, feeling her shudder each time. They called clits little cocks, didn't they? He pursed his lips and sucked her flesh into his mouth, licking the end of it, and suddenly he was awash in her juices. She jerked away from him, so he grabbed hold of her thighs, holding her close.",
        "\"Gnnnnnnggg,\" she groaned, as she covered his face with her girl cum.\n\nHe kept up the sucking and she kept up the coming, until finally she fell back, pushing his face from her and rolling off his body.\n\n\"Too sensitive,\" she moaned, curling up into a ball.\n\nAdam grinned and wiped his face, moving behind her to cuddle her. He pulled a blanket over them both and tried not to push his once again hard cock into her ass.\n\nThey both had a nap, and when they woke, they fucked.\n\nIt was a semi-sad day for Adam when his mom decided that she could donate milk, and started pumping it. Only semi-sad, because it gave him a rest. They still fucked and he still drank at least one per day, but the nonstop sex was unsustainable.\n\nThe hospital was very glad for his mom's regular donations, as she was able to produce a liter a week per breast on top of what he drank.\n\nThe summer wore on in this manner. Adam got a retail job but started looking into classes at college that would let him work towards his dream job: a lactation specialist. It was rare for men to do this type of work, but he had a real passion for it, and plenty of hands-on experience.\n\nAt the end of the summer, Mary finally deigned to notice that she hadn't had her period in quite a while. She took a pregnancy test, and of course it was positive. The hope about lactating being birth protection was dashed.\n\nMother and son ended up sitting at the kitchen table again. The positive test was on the table between them and one of them would periodically stare at it.\n\nHe spoke, finally. \"You must be pretty shocked. I'm sorry that you have to deal with this situation.\" He'd spent many minutes trying to find the right words.\n\nHis mom smiled a happy smile, and grabbed his hand. \"There are no solutions for this situation, so don't worry about trying to find one.\"\n\n\"Well, it's our problem, right? We did this together.\"\n\n\"We certainly did. And had a lot of fun doing it, too.\" she grinned.\n\nAdam noted that his mom didn't seem that upset about the pregnancy, and said so.\n\n\"No, I'm not upset. I'd spent so much energy trying to do the right thing and it kept not working. When I imagined the energy needed to ensure that we were safe, it felt futile to expend it and still run into trouble. So I let fate decide. Turns out, fate's a bitch.\"\n\nAdam laughed, and his mom smiled and leaned towards him. As her chest came into contact with the table she winced.\n\n\"Tender again?\" he asked.\n\nShe nodded, and said, \"I don't feel like pumping now. Can you milk me?\"\n\n\"Always,\" he said, cock rising in his pants.\n\n***\n\nMary followed her son to her bed. They spent so much time in it now that they may as well call it their bed, but that hadn't been discussed. In her room, clothes were stripped and he lay down, cock straining towards the ceiling. She climbed up his body, watching the organ that had knocked her up throb with his heartbeat.\n\nThe scene from the change room flickered through her head, and so she dipped her head down, taking him into her mouth. He groaned, and she smiled. His musk filled her nose, his taste on her tongue as she did her best to take all of him in. When he hit the back of her throat, she pulled back, sucking hard as she did.\n\nAnother groan.\n\nMary bobbed her head a few more times, and then got a sweet, tangy flavour on the back of her tongue. Wanting more of it, she flicked his opening, seeking his precum. Another full suck, and she had more of it. She rolled her tongue, coating it with his arousal.\n\nFeeling milk start to drip from her nipples, Mary climbed up her son's body, until his cock was under her, head perched in her opening. She leaned back, letting him fill her once again. When they were fully mated, she dropped her chest, putting her breasts in range of his hungry mouth.\n\nMary would never get tired of this. The bond she shared with him at these moments. Her breast in his mouth, filling his belly while his cock filled her vagina. When he was done, he'd fill her womb. The womb that was already full of new life.\n\nAs she rode her son to completion, her inner lizard brain said, More.\n\nMary shivered on her son's cock as the thought of him giving her more children sent an ache to her tits. She would be donating milk for a very long time."
    ],
    "authorname": "WritingwhatIlike",
    "tags": [
        "lactation",
        "mother/son",
        "18 year old",
        "impregnation",
        "mom son incest",
        "older woman",
        "younger man"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/milk-donation"
}