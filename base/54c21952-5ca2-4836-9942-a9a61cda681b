{
    "title": "Your Silver Nights and Golden Days Pt. 02",
    "pages": [
        "It goes without saying that you should read 'Your Silver Nights and Golden Days Pt. 01' before reading this story.\n\nNote that the following events took place in 1985, long before there was any \"Don't ask, don't tell\" policy in place in the military. Being an active lesbian was risking your career, especially for an officer.\n\n\u00a9 2020 Candy_Kane54\n\n***\n\nBonnie leaned her head onto my shoulder and said, \"I could get used to this.\"\n\n\"I could, too,\" I replied. \"Eating breakfast with a sexy woman at my side feels so good.\"\n\nI brought my left hand up and stroked Bonnie's right cheek as I nuzzled the top of her head.\n\nBonnie sighed and said, \"Did you know, the first time I saw you at Jack's, I could have sworn that I heard a voice say 'She's the one!' as I came up to your table. I saw you sitting there, and my heart did a flip flop as I thought to myself that this was a beautiful woman that I would like to get to know. I mean, I was straight as far as I knew, but the feelings I had at that moment were new to me.\"\n\n\"When you came up to my table,\" I replied, \"I was struck by how you carried yourself; self-confident and beautiful ... a wicked combination. Your ruffled ankle socks were so cute.\"\n\n\"Really?\" asked Bonnie. \"I was hoping I wouldn't embarrass myself. You looked so hot in your uniform. I was worried that I would trip over my tongue, so I tried really hard to handle myself professionally.\"\n\n\"Well, you made quite the impression. I haven't gone a night since then that you didn't at least make a cameo appearance in my fantasies. Some nights I've had to resort to using my vibrator to get relaxed enough to get to sleep.\"\n\nBonnie turned and put her right arm around my waist and tilted her head up so our lips could meet. The kiss continued for a while, slowly building up from chaste to passionate.\n\nBonnie broke the kiss, gasping, and said, \"I started fantasizing about you too. But to me, it was weird because I had always fantasized myself with guys before, and now, it was women ... well, you. I started realizing that when I looked at other women, I was thinking about them in sexual terms ... how their legs and ass moved, and I was checking out their breasts.\" She looked at me shyly and continued, \"I would try to watch you walking down the street when you left the restaurant. I loved watching the way your hips swayed as you walked away.\"\n\nWe sat there for a while in silence, arms around each other, lost in our own thoughts.\n\nAfter a bit, I caught her eye and asked quietly, \"So, where do we go from here?\"\n\nBonnie furrowed her brow in concentration as she pondered my question. After a short time, which seemed to take forever, and I started worrying that I wasn't going to like what she was going to say, she said, \"I don't know. This is all new to me, and I have a lot to think about. Despite our feelings for each other, you need to realize that Matthew and Mark have to come first as far as their well being. I do care about you,\" she went on, concerned that she may have been too harsh, \"and I think I want to pursue a relationship with you. I don't think this is just me curious about lesbian love.\"\n\n\"I can respect that,\" I replied, relieved that she isn't getting cold feet. \"However,\" I went on with a grin, trying to lighten the mood, \"I was more interested in where do we go from here, right now, this morning?\"\n\n\"Well,\" Bonnie said, returning my grin while raising her right hand to stroke my cheek, \"I would like to show you my appreciation for making me feel so loved last night.\"\n\n\"And how would you show that appreciation?\" I queried, moving in to meet her lips with mine.\n\n\"I'll ...\" Bonnie punctuated each word with a kiss, \"start ... by ... getting ... you ... naked ...\" Her hands went to the hem of my tee and started working it up over my head. I raised my arms to assist her. As she got my tee up over my breasts, she left it over my head so I couldn't see what she was doing. She moved in and licked my right nipple, causing me to jerk, and my nipple began to swell and harden immediately.\n\n\"Oh, that is so unfair!\" I exclaimed in surprise as she then licked my left nipple, causing me to flinch again. I squirmed and tried to lower my arms, but she used her left hand to cinch the bottom of my tee over my head, holding my arms up and obscuring my vision as her right hand trailed down to my outer thigh. She then sucked my nipple between her lips and started flicking it with her tongue and lightly nipping it with her teeth. I was immediately aroused, my juices seeping out between my lips as she continued her nipple torture, switching back and forth. God, I was getting so turned on.\n\nThe feeling of being powerless while she was doing this increased my excitement, and I could feel the start of an orgasm coming on. Then she stopped, and I groaned because I so wanted her to continue.\n\nThen I felt Bonnie's hand on my inner thigh, fingers swirling in circles as she moved her hand up, almost reaching my mound. I spread my legs to give her all the access she needed. She withdrew her hand and then started on my other thigh, moving slowly up, fingers tracing circles on my pebbled skin, goose bumps involuntarily popping up. Her hand finally reached my mound. She took a finger and ran it up and down my slit, gathering the seeping juices before parting my lips and plunging her finger into my pussy.\n\nI huffed from the sudden stimulation and started rolling my hips and thrusting my mound against her hand. I started moaning as she withdrew her finger and then plunged it back in as far as she could, her knuckle nestling between my lips. \"Oh, god, Bonnie!\" I exclaimed as the tip of her finger found my g-spot, and the sensation caused me to jerk.\n\nThen I felt a second finger join the first as Bonnie increased the tempo. On each down stroke, her thumb flicked my clit, making a pulse shoot through my body. She sucked my right nipple in her mouth and started flicking it with her tongue and nipping it with her teeth in time with her strokes. The feeling was overwhelming, and I started floating in a cloud of euphoria, wondering if I was going to survive the oncoming orgasm.\n\nBonnie suddenly worked in a third finger, stretching my walls, filling me. It threw me off the cliff, and I was free-falling into an incredible orgasm. I screamed as she pulled my nipple, holding it between her teeth, the pain/pleasure causing me to soar into a second climax. I cried, \"Oh, god, Boonnnnnnniiiiiiieeeeeeeee!\" and thrashed like I had an epileptic fit. She continued attacking my pussy, only slowing down and stopping as I came down from my orgasm.\n\nI was a puddle of ooze as Bonnie finally pulled my tee off, and I could put my arms down. I was gasping, struggling to catch my breath, panting, \"Oh my god!\" over and over as I slowly recovered. I may have momentarily blacked out because when I opened my eyes, Bonnie was leaning in and asking, \"Are you okay?\"\n\n\"Oh, god, Bonnie, that was better than okay!\" I exclaimed.\n\n\"Good!\" said Bonnie, looking pleased.\n\n\"Let's take this to bed,\" I said, getting up and pulling Bonnie toward the bedroom.\n\nWhat seemed like hours later, while lazing in bed in the afterglow of incredible sex, I look over to Bonnie. She laid there, eyes closed; face glowing from the great sex we had just participated in, her breathing slow and steady. \"Wow,\" I thought to myself, \"what did I do to deserve this?\"\n\nI wanted to reach out and touch Bonnie, but I didn't want to wake her up, so I just laid there looking at her. I thought about what I was getting into ... is loving Bonnie worth the risk to my career? As I pondered on this, Bonnie opened her eyes and noted my intense stare.\n\n\"Hey, sweetie,\" Bonnie said, \"a penny for your thoughts?\"\n\nI reached over and placed my hand on her cheek and, putting my thoughts into words, asked, \"What did I ever do to deserve you?\"\n\n\"I don't know. Whatever it was you did if you even did anything; it occurred before meeting me,\" Bonnie replied, getting a thoughtful look on her face. \"I could ask you the same question, but the same answer would again apply.\"\n\n\"Well, in any case, we need to get cleaned up and dressed so I can get you back home,\" I said as I started to get up to get out of bed.\n\n\"Uuuhhhhnnnn,\" groaned Bonnie as she moved to do the same. \"Am I selfish in thinking I don't want this to end?\"\n\n\"I'm in no position to answer that,\" I said, reaching for my tee. \"On the one hand, yes, because you need to get back to taking care of your boys. On the other hand, no, because you do need some 'me' time from time to time. You can't give 100 percent to them all of the time, or you'll burn out.\"\n\n\"Ah, 'me' time,\" mused Bonnie, getting her tee and pulling it on, \"what a strange concept.\"\n\n\"Well, why don't you go ahead and hit the shower, and I'll go gather up our clothes from the living room and bring them back in,\" I said, walking out into the hallway.\n\n\"Wash my back?\" Bonnie queried as she headed into the bathroom.\n\n\"Okay,\" I threw over my shoulder as I entered the living room.\n\nI gathered up our clothes from where they were deposited last night due to our impromptu striptease. I debated whether to keep Bonnie's panties as a souvenir but decided not to. I didn't want her to have to go commando getting home.\n\nI came back into the bedroom and laid Bonnie's clothes out on the bed for her to get to when she was done. I put my clothes in the laundry hamper and laid out a new outfit for myself: a pair of jeans and a simple blouse.\n\nI pulled my tee off and put it in the laundry hamper, and headed into the bathroom. Bonnie was already in the shower, and steam was coming out of the shower. I opened the door and stepped into the shower. I slid my arms around her waist and pressed my chest against her back, my hips pressing against her ass. After a quick nuzzling, I grabbed a washcloth, some body wash, and started working on her back. It took a while because I wanted to make sure I didn't miss anything.\n\nWe finally finished showering and got dressed. Before we left, we exchanged phone numbers. We held hands as I drove Bonnie back to Jack's so she could get her car. We parted after one last kiss, and I watched Bonnie drive off before I left to go home.\n\nI spent the rest of the day cleaning and catching up on my reading. That night, I had to use my vibrator to get relaxed enough to fall asleep.\n\nSunday, I went down to the bike trail and ran 10 miles along the beach. I had a lot to think about, and I found that when I ran, I could just let my mind go and let my subconscious work things out. One thing I had to consider was what the chances that I could get caught having a lesbian affair were? Considering that there were about a thousand military personnel at LAAFB and the immediate area around the base had roughly 500,000 people, the odds of running into another military person would be minimal. If you take into consideration that all of the enlisted personnel were barracked in San Pedro, 10 miles to the SE, that cuts the odds even more. Then when you consider that all of the officers lived off base, mostly to the east, some as far as San Bernardino, the odds grow even smaller. As long as there's no PDA while I'm in uniform, I think I can get away with it. When I got back home, I showered and decided to call Bonnie.\n\nThe phone rang only two times before it was picked up.\n\n\"Hello?\" came breathlessly from the phone.\n\n\"Hi, Bonnie, it's Virginia,\" I replied. \"How are you doing today?\"\n\n\"Oh, Virginia, it's good to hear your voice,\" said Bonnie, the happiness apparent in her voice. \"I miss you already,\" she went on quietly.\n\n\"I miss you too, baby,\" I returned. \"Got a minute to talk?\"\n\n\"Yes,\" Bonnie replied hesitantly. \"What's up?\"\n\n\"I've been thinking ... a lot ... about us and how we can make this work,\" I started. \"I know how important Mark and Matthew are to you, and I'm thinking that I need to get to know them, and them, me. In that vein, I was wondering if we could get together next weekend and take the boys with us to the boardwalk, or have a picnic on the beach?\"\n\n\"That sounds like a wonderful idea,\" a relieved Bonnie answered. \"I'm free next Saturday if you want to get together. We could do the pier in Manhattan Beach and maybe take in a movie.\"\n\n\"Great,\" I returned. \"I'll pop into Jack's a couple of times this week for lunch, and we can firm up times and places.\"\n\n\"Sounds good,\" Bonnie replied. \"I'm looking forward to seeing you.\"\n\n\"Just one thing,\" I cautioned, \"when we see each other in public, and I'm in uniform, we have to be circumspect. It's not that I'd be ashamed of us being a couple, but I can't have anything get back to my commander that can be misconstrued.\"\n\n\"Okay,\" said Bonnie. \"So, kissing is not an option?\"\n\n\"No,\" I said. \"At least, not in public. God, I want to kiss you so much, but I'll just have to wait.\"\n\n\"Me, too,\" Bonnie came back. Just then, I heard a loud wail and a voice in the background saying, \"Mom, he's picking on me again!\"\n\n\"Well, sound like you have some 'mom' things to take care of,\" I injected. \"I'll see you Tuesday at Jack's. Bye for now.\"\n\n\"Bye for now,\" Bonnie said as the phone disconnected.\n\nNeedless to say, I really needed the vibrator that night.\n\nMonday, I was back in the office, refreshed, and ready to get things done. I was productive all day, and several of my co-workers commented on my enthusiasm. I just let it go, knowing why I was feeling so good but not able to share. After all, homosexuality in the military wasn't just frowned upon; it was forbidden. I couldn't just come out and say what I wanted to say about how I met a great woman, and I was madly in love with her.\n\nI got through the day, making plans for the next round of contractor meetings. For now, most of them can be handled by teleconferencing, so no travel would be needed. I made my way home and popped a Stouffer's TV dinner in the oven. I slipped into some sweats and, after eating, spent the evening watching TV and reading some unclassified white papers on IR sensors. Frankly, my thoughts were on Bonnie and our date for Saturday. I was really hoping I would hit it off with her boys.\n\nJust as I was getting ready to turn in, my phone rang. I picked it up after turning off the TV and said, \"Hello?\"\n\n\"Hi, it's me,\" the voice on the phone said.\n\n\"Well, hello me,\" I replied, a big smile coming to my face as I recognized Bonnie's voice.\n\n\"The boys are in bed and asleep, so I'd thought I'd call.\"\n\n\"I'm glad you did. I miss you.\"\n\n\"I miss you too. So, what are you wearing?\"\n\n\"What?!?\"\n\n\"What ... are ... you ... wearing?\"\n\n\"Um, just some sweats. Why?\"\n\n\"I'm not wearing anything.\"\n\nI swallowed, thinking of a naked Bonnie as my pussy started heating up. \"Where are you?\"\n\n\"On my bed. Are you naked yet?\"\n\n\"No, not yet,\" I said as I scrambled to shed my top and pants. After kicking off the pants, I said, \"Okay, I'm naked now.\"\n\n\"I'm standing behind you, and I'm reaching around and cupping your breasts ...\"\n\n***\n\nTuesday came, and it was another sunny day as usual as I went into the office. After checking through Gate 3 and parking my car, I walked across the commons, just enjoying the beautiful morning. Behind me, I heard a muffled \"Oof,\" and a clatter and a big smile spread across my face, knowing I had caused another case of whiplash. I made it to my desk with no further mishaps (to other people). After greeting my co-workers, I operated on autopilot through the morning, looking forward to lunch and seeing Bonnie.\n\nLunchtime came, and I was quickly on my way to Jack's. Traffic wasn't bad, so I got there quickly and found a convenient parking spot. I walked in, and the hostess greeted me and led me to my usual table by the window.\n\nBonnie was already on the way with my iced tea, a big smile on her face matching mine as I sat down, and she put my drink on the table. I caught her eye, hoping she would remember my warning about PDA. She just stood there and said, \"Hi, Virginia, it's good to see you.\"\n\n\"It's good to see you too, Bonnie,\" I replied, relieved that she was going to be circumspect like I had asked. I reached out and touched her arm to let her know I appreciated her restraint.\n\nBonnie bent down and whispered, \"I want to kiss you so badly.\"\n\n\"I want to kiss you too,\" I replied as quietly.\n\nBonnie stood up and asked, \"What would you like to order today?\"\n\n\"I think I'll have a Caesar salad with tuna,\" I returned. I added in a whisper, \"and a side of you!\" causing a blush to come over Bonnie's cheeks.\n\n\"Good choice. I'll get your order in right away.\" Bonnie turned and walked away, knowing my eyes were on her all the way to the kitchen. Just before she ducked into the kitchen, she turned and winked at me, sending a pulse of desire through my body.\n\nBonnie stopped by my table several times to deliver my salad and check on me, and we made plans for Saturday. The last time she popped over, bringing my check, I stood up and said, \"I think I'll hit the Ladies room before I leave.\"\n\nI got up and headed over to the restroom area and entered the Ladies room. Luckily, it was in a secluded corner of the restaurant, so few customers would see if multiple people were going in at the same time. It was unoccupied, so I stood at the sink, pretending to be washing in case the wrong person came in, hoping that Bonnie would get the hint and join me. Sure enough, she popped in about 30 seconds later, locked the door, and with a big smile, walked into my open arms as I turned from the sink. Our lips met, and I was in heaven for what seemed like forever but was only a half minute or so as we both moaned our enjoyment.\n\nWhen we broke, I gasped, \"God, I needed that!\"\n\nBonnie gasped, \"Wow, me too!\"\n\nAs we stood there in each other's arms, I said with a grin, \"With customer service like this, you must get excellent tips!\"\n\n\"I reserve this service for my special customers,\" Bonnie snarked. \"Well, just one customer,\" she finished as she moved in for another kiss.\n\nAfter another endless kiss that lasted about a minute, we broke. Without another word, Bonnie slipped out of the bathroom. I washed up and made sure my face was on straight before opening the door and walking out, heading back to my table.\n\nI put a twenty on the bill and, after making sure Bonnie picked it up, headed out of the restaurant. Knowing that Bonnie was watching, I put a little extra in my walk as I headed back to my car. The rest of the day went without anything out of the ordinary going on.\n\nThursday came and went, pretty much as Tuesday did, and my visit to Jack's went well as we finalized our plans for Saturday.\n\nSaturday seemed like it took forever to come, although it was only two days ... time flows at different rates (it's relative after all), and you just have to go with it.\n\nWe had agreed to meet at 10 AM at the parking lot by the Manhattan Beach pier. When I got there, I parked as close to the walk as I could and got out to feed the meter. Just as I finished, Bonnie pulled up and parked three spots down. I walked over to her car and fed her meter for the same amount of time. Bonnie got out, and I saw that, like me, she was dressed for the beach in white capris and a white tank top, hers trimmed in blue while mine had green trimming. She looked lovely, and I just drank up the sight of her. She went to the trunk and pulled out an overnight bag that she handed to me, and I quickly put in the trunk of my car.\n\nWhile I was doing that, Matthew and Mark got out of the car and started running around as Bonnie and I drew back together to discuss our first move.\n\nBonnie said, \"Boys, settle down. I want you to say hello to Virginia.\"\n\n\"Hi Virginia,\" piped the taller blond-haired boy enthusiastically.\n\n\"Hello Virginia,\" said the shorter brown-haired boy shyly.\n\nI stuck out my hand to the taller boy and said, \"Hi, I'm Virginia. You must be Matthew.\"",
        "He took my hand and briefly shook it and said, \"Yes, and that's my brother Mark.\"\n\nI turned to Mark and put out my hand and said, \"Hello, Mark, I'm Virginia.\"\n\nHe reluctantly took my hand and shook it once and then went over to Bonnie and side hugged her, whispering, \"Mom, she's beautiful.\"\n\nBonnie tousled his hair and whispered back, \"Yes, she is, isn't she.\" She smiled at me, and I smiled back.\n\n\"Well, shall we head over to the pier?\" I asked as I reached out to take Mark's hand.\n\n\"Yes!\" Mark and Matthew simultaneously said, and they both took a hand and started dragging me toward the walkway.\n\n\"Come on, Mom,\" said Matthew as Bonnie moved to catch up with us, laughing at the sight of me being dragged away by her two sons.\n\nWe made it to the pier, and today it appeared that there was a fair going on. There were tables and booths set up along the walk with people selling their wares. The boys let go of my hands and seemed anxious to run ahead, but Bonnie admonished them to stay near us where we could keep an eye on them.\n\nBonnie and I started strolling out on the pier, our ultimate destination, the Roundhouse Marine Studies Lab &amp; Aquarium at the end of the walk. I reached over and took Bonnie's left hand in my right hand, and we checked out the wares as we went along. There were a lot of tee shirts, jewelry, and arts displayed. I was a little anxious about losing contact with the boys, but Bonnie assured me that they didn't need constant eye contact.\n\nWe came to a booth that was selling lemonade, and I bought some for the boys. They started off, and Bonnie called out, \"Boys, make sure to thank Virginia for your drinks.\"\n\n\"Thank you!\" \"Thanks!\" echoed from them as they turned back momentarily to mind their manners before turning and heading down the pier.\n\nI looked over at Bonnie and said, while giving her hand a squeeze, \"They're well behaved. You've done a marvelous job bringing them up.\"\n\n\"Yes, I'm so proud of them,\" Bonnie said with a look of love on her face that just made her look so beautiful my heart throbbed. She looked at me and said, while squeezing my hand back, \"They like you. They're usually a little more subdued when I'm out with other people, but they seem to have taken to you right away.\"\n\n\"I'm glad. I like Matthew and Mark too. I'm sure we'll get along fabulously.\"\n\nEventually, we worked our way down to the end of the pier and entered the aquarium. The boys really enjoyed the displays, running from one to the next, excitedly telling each other to look at this or that. Bonnie and I just stood back and enjoyed each other's company as we kept an eye on them. Nobody seemed to notice or care that we were holding hands.\n\nI leaned in and said, in a low voice, \"God, I just want to take you in my arms and kiss you.\" I backed away while giving her hand a squeeze and smiling as if I had just shared a joke with her.\n\nBonnie smiled at me and leaned in, saying, \"I want to do the same,\" before backing away.\n\nAfter about twenty minutes, we gathered up the boys and headed back to the parking lot. When we got back to the cars, we decided to meet up at the movie theater on Rosecrans Avenue in El Segundo to see Teen Wolf with Michael J. Fox.\n\nWe got to the theater and caught the matinee show. After getting a big tub of popcorn and drinks, we went into the theater and got four seats together near the back of the theater. Bonnie sat between Mark and Matthew, and I sat beside Mark. As soon as the lights went down, I moved my left arm up on the back of Mark's seat so my hand could touch Bonnie's right shoulder. Bonnie and I shared a look over Mark's head and settled in to watch the movie.\n\nAll during the movie, my hand stayed on her shoulder while I idly traced circles on her shoulder blade with my finger. Bonnie held the popcorn in her lap so everyone could reach it, so I had to reach across Mark to get some. He was so into the movie he didn't mind that I was getting so close to him. Bonnie would occasionally reach up with her right hand to touch my hand, and we would share looks with each other. It was delicious torture being so close and not being able to do what I wanted to do with her.\n\nOnce the movie was over, we decided to go to McDonald's for a late lunch. We went in to get a booth and decided what to order. Bonnie went up to order and get the food, and I started talking to Mark and Matthew. I asked them about school and how they liked it. Matthew was enjoying 4th grade, but Mark was more subdued about his being in 2nd grade. I regaled them with tales of when I went to school and the teachers I had to put up with. By the time Bonnie was back with the food, Mark was chatting up a storm, having come out of his shell.\n\nBonnie and I sat on one side of the booth with the two boys across from us. We were seated close to each other that our shoulders were touching. I slipped my right hand into Bonnie's left hand under the table while we ate. I think Matthew noticed because he kept looking over at us, but he didn't say anything or act as if it upset him.\n\nAfter we were done eating, we decided to go visit Pollywog Park before taking Mark and Matthew over to their grandma's place. We got to the park, and we strolled around the pond. Then Bonnie and I sat down on a bench while the boys ran around and used the playground equipment. While they were occupied, I took Bonnie's hands in mine, and she laid her head on my shoulder.\n\n\"This is so nice,\" Bonnie said with a sigh.\n\n\"Yes, it is. I hope we get many chances to do this,\" I continued, adding a sigh to match hers.\n\n\"Oh, I think we will. It's a lot easier with two sets of eyes keeping an eye on them,\" Bonnie said, shifting slightly before resetting her head on my shoulder.\n\nI felt Bonnie's body shake slightly, and I looked over and saw a tear on her cheek. \"Are you okay?\" I asked quietly.\n\n\"Yes ... no ... I don't know,\" she said. \"I'm so happy to be with you and the boys and I am so sad that I can't express how I feel about you being here with me,\" she went on, freeing one hand from mine to wipe away the tear tracking down her cheek.\n\nBefore we could continue our conversation, Matthew and Mark ran up to us. Mark said, \"Mom, I need to go to the bathroom.\"\n\n\"Okay,\" said Bonnie. \"Matthew, what about you?\" she asked.\n\n\"I'm okay,\" replied Matthew. \"I'll just stay here with Virginia if you don't mind.\"\n\nBonnie looked at me, and I nodded, so she said, \"Okay, Matthew, if you change your mind, just bring Virginia with you if we're not back.\"\n\n\"Yes, mom,\" Matthew replied with a long-suffering sigh.\n\nBonnie pointed out the restrooms to me and headed off with Mark. Matthew came over and sat on the bench with me.\n\n\"So, did your mom tell you what I do?\" I asked Matthew to break the silence.\n\n\"Yes, she said you were a captain in the Air Force, but she wasn't sure what you did,\" he answered.\n\n\"Well,\" I continued, \"I mainly work with the people who will be trying to build the weapons we need to protect us from the Soviets. I can't tell you exactly what they are because it's classified. Still, I mostly just talk to people and write up lots of boring technical presentations. So nothing as exciting as being a spy or flying fighter jets.\"\n\n\"Do you ever get a chance to fly fighters or anything like that?\" asked Matthew.\n\n\"No, they don't let women do that, except in extraordinary circumstances,\" I answered. \"I don't have a pilot's license anyway.\"\n\nThen Matthew surprised me by turning to me, looking up, and asking, \"Do you like my mom?\"\n\nI paused, trying to think how to answer that question, not wanting to lie to him, so I said, \"Well, friends like each other, and she's my friend, so, yes, I do like your mom.\"\n\n\"My mom has other girlfriends, and they don't hold mom's hand like I see you are holding mom's hand,\" Matthew said. \"When she talks about you, she smiles a lot when she does. She doesn't smile like that when she talks about her other friends.\"\n\nI looked him in the eye and said, \"I like making your mom smile. Do you mind that I do?\"\n\nHe leaned in and said in a low voice, \"No, I'm glad. Mom doesn't know I know, but sometimes I get up in the middle of the night to go to the bathroom, and sometimes I can hear her crying. She doesn't cry as much as she used to do now because I think you are making her happy.\"\n\nI leaned in and hugged him, saying, \"I'm glad she's not crying either. I really do like your mom. I like you too. I won't tell her what you told me. But,\" I went on, \"I need you to keep a secret for me, too, okay?\"\n\n\"Okay,\" Matthew said.\n\n\"Some people might not like that your mom and I are such good friends, so you need to keep it to yourself and not talk to anybody about it, especially Mark. He may not understand it and accidentally tell somebody. You should talk to your mom about it, though,\" I finished.\n\n\"I will,\" Matthew said and hugged me back. We let go of each other, and I saw Bonnie and Mark heading back to our bench. Her eyes questioned me as she walked up, and I smiled back at her to let her know everything was okay.\n\n\"Hey, Matthew, are you still doing okay?\" Bonnie asked as Matthew got up to let Bonnie sit on the bench where he had been.\n\n\"Yes, mom,\" he said. \"Come on, Mark, let's go get on the swings!\" Mark ran off with Matthew over to the swings while Bonnie scooched up to me and laid her head on my shoulder.\n\n\"What was Matthew talking to you about?\" she asked.\n\n\"I think he's figured out that we're more than just friends, although I don't think he understands all that that implies,\" I said, taking her hand in mine and nuzzling the top of her head. \"He's pretty perceptive. It's going to be hard to hide anything from him.\"\n\n\"Yes, he's my favorite, but don't you ever tell him I said that,\" she warned. \"He'll lord it over Mark if he ever figured it out. So, what did he say?\"\n\n\"He saw us holding hands, and he said you don't hold any other friend's hands. Also, he saw that you smiled whenever you talked about me,\" I said. \"You mention me a lot, do you?\" I asked softly, stroking her cheek lightly with my fingertips.\n\nBonnie sighed and said, \"Yes, I do go on and on about you to the boys. I'm surprised they aren't tired of hearing it.\"\n\n\"Well, I did caution Matthew not to talk about us being very close friends with anybody but you. I hope that was okay?\" I asked.\n\n\"Yes,\" Bonnie replied. \"I do want to talk about it with him, but I want to wait until he comes to me with questions.\"\n\n\"Which leads to a question I have for you,\" I said. \"When I meet your mom today, how do you want me to handle it?\"\n\n\"If you don't mind, I don't want to out myself to her just yet. For one thing, I'd like to be sure we're going to work before burning any bridges. As much as I care about you, I want to make sure this isn't just a passing fancy of mine. Even if it turns out that it is real,\" she sat up and locked eyes with me, \"I have to consider what effect it will have on my boys. They come first, and we come second.\"\n\n\"No problem, Bonnie. I will wait as long as it takes for you to be okay with this.\" I took her hands in mine and brought them up to my lips, kissing her knuckles while maintaining eye contact. I saw the boys running up out of the corner of my eye and said, \"Here come the boys.\"\n\nWe straightened up and turned to greet them as they came up.\n\n\"Hey guys, you ready to see grandma?\" Bonnie asked them as they plopped down on the bench beside us.\n\n\"Yes!\" \"Yeah!\" they chorused.\n\n\"Okay, let's go! Back to the car,\" Bonnie said as we got up and headed to the parking lot.\n\nIn no time, we were on our way. Soon we made it to their grandmother's apartment in Hawthorne.\n\nWe parked on the street and wended our way between the buildings until we came to the right apartment. The boys ran ahead and rang the doorbell while Bonnie and I were still coming up the walk. The door flew open, and the boys yelled, \"Grandma!\" and practically jumped on the older woman standing in the doorway.\n\n\"Oh, my babies!\" cried their grandmother, gathering them in her arms as she looked back up as we came up to the door.\n\n\"Hi mom,\" said Bonnie as she wrapped her arms around all three of them.\n\n\"Hello, sweetie,\" said her mom. \"And who is your friend?\"\n\n\"Mom, this is Virginia. I told you about her the other day,\" Bonnie said, making the introduction. \"Virginia, this is my mom,\" she finished, a smile on her face.\n\nAs I took a good look at Bonnie's mom, I was struck by how much she looked like an older version of Bonnie. Standing next to each other, they look like sisters, being the same height and build.\n\n\"Mrs. Steiner,\" I said. \"It's a pleasure to meet you.\" I stuck out my hand in greeting.\n\n\"Oh, call me Grace,\" she said, ignoring my hand and pulling me in for a hug.\n\nWe went inside, the two boys going into the living room to watch TV while Grace, Bonnie, and I went into the kitchen.\n\nWhile Grace played hostess and got drinks, we exchanged pleasantries and made small talk. I told Grace about being an Air Force officer and what I did. She asked about our day, and I told her how I enjoyed taking Bonnie and the boys out for the day. Bonnie added that it was nice to be able to share watching out for the boys while enjoying the day and went over where we went and what we did.\n\n\"I'm glad Bonnie has a sweet friend like you to share the day with. She doesn't get out enough, what with having only herself to take care of the boys. I help when I can, but it still doesn't give her enough 'me' time. She's nearly talked my ear off about you,\" Grace said as we were finishing up our drinks, \"so I'm glad I finally got to meet you.\"\n\n\"Thanks Grace. Being new to the area, I was glad that I was able to find someone to talk to and do things with. Constantly moving from assignment to assignment makes it hard to establish long term friendships. It's great to meet you too. I can see where she gets her looks,\" I said, smiling at Bonnie as I finished.\n\n\"And,\" chimed in Bonnie, \"now you don't have to worry about me going out alone at night.\"\n\n\"True,\" answered Grace. \"I always worry about you, but that's a mother's job, isn't it?\" she continued, looking knowingly at her daughter.\n\n\"Yes mom. Now I realize why you worried about me during my rebellious years. I just hope the boys don't get as crazy as I did,\" Bonnie said, reaching over and patting her mom's hand.\n\nA silence fell over the table for a moment until a herd of elephants thundered into the kitchen, suddenly transforming into two boys.\n\n\"Grandma!\" \"Grandma!\" they both said. \"Can we have some Kool-Aid\u00ae?\"\n\n\"Yes, yes, go wash up first, and maybe I'll throw in a cookie for each of you,\" Grace said.\n\nThe boys ran out while Grace got up to get drinks and snacks out. The boys came tearing back in and grabbed a glass and a cookie, and headed more slowly back into the living room.\n\n\"Mom,\" said Bonnie, \"we need to get going. Thanks again for watching the boys.\"\n\n\"No problem, dear,\" said Grace. \"Now, go have fun, and don't worry about us!\"\n\nWe said our goodbyes and headed out. Grace walked us to the door, and when we got back to our cars, we decided to take my car and left hers so I could drop her off here, and she could get home from here.\n\nAs soon as we pulled out, Bonnie grabbed my hand and sighed. \"Mom seems to like you.\"\n\n\"Yes, and I like Grace too,\" I replied, squeezing her hand. I grinned at her and asked, \"You were rebellious in your youth?\"\n\n\"Mom exaggerates at times,\" sighed Bonnie. \"I was always running around all hours of the day and night, and she worried about me getting in with the wrong crowd. I didn't, but I could never convince her of it. And then I went and got pregnant with Matthew and just proved her point.\"\n\nI squeezed her hand again and said, \"It may have seemed like the end of the world then, but look at what you have now. You wouldn't take it back for anything in the world, right?\"\n\n\"No, not for anything,\" replied Bonnie, with another sigh as a big smile came over her face.\n\n\"It's a little early for dinner, so how about we go back to my place and freshen up?\" I asked with a lascivious grin on my face.\n\nBonnie squeezed my hand and said, \"Sure, as long as you're not too fresh!\"\n\nWe got back to my place and tumbled through the door. Before it was even closed, we were onto each other. Hands and lips everywhere, clothing flying off of us as the pent up sexual tension of being together all day without being able to express our feelings for each other overcame us.\n\n***\n\nWe decided to go out for Mexican, so we went to El Sombrero in Manhattan Beach. I parked on the street, and we walked hand-in-hand into the restaurant. We asked for a table on the patio, and the hostess took us out to a table with a view down Manhattan Ave. The evening was warm, with a slight breeze off the ocean, so the air was clean and refreshing. We sat, and I took her hand in mine under the table, and we exchanged smiles.\n\nOur server came up, put chips and salsa on the table, poured ice water into our glasses, and passed out menus, all while saying, \"Welcome to El Sombrero. I'm Terry, your server this evening. Can I start you off with margaritas tonight?\"\n\nI glanced over to Bonnie, and she gave me a little nod, so I replied, \"Yes, Terry. Margaritas for both of us, please.\"\n\n\"Very good, ma'am. I'll be back in a minute or so with your drinks,\" Terry said with a smile.\n\nAs Terry walked away, we picked up our menus, and while checking mine out, I turned to Bonnie and said, \"I like Grace. She seems nice.\"\n\n\"Try living with her,\" Bonnie snarked. After a short pause, she went on, \"Oh, she's okay. I gave her a lot of grief, and mom still loves me anyway. Compared to my friends' mothers, she's near the top of the list of good mothers. She can be pretty biased about my friends at times, so I'm glad she likes you.\"\n\n\"That's good,\" I said while squeezing her hand. \"I wouldn't want to cause any grief between you and Grace. If we do end up in a relationship, do you think she'll be okay with it?\"\n\n\"I hope so,\" replied Bonnie. \"I've never heard her make a homophobic comment, and she does know my friend who's gay. She's never made a fuss about me hanging around him.\"\n\nJust then, Terry returned with our drinks. After placing them on the table, he asked, \"Are you ladies ready to order?\"\n\nI raised an eyebrow to Bonnie, and she looked up to Terry and said, \"Yes, Terry, I'll have the Burrito Loco with chicken.\"\n\n\"Excellent, ma'am,\" replied Terry. Turning to me, he said, \"And you, ma'am?\"\n\n\"I'll have the Burrito California, also with chicken,\" I said. \"Could I have the Pico de Gallo on the side, please?\"\n\n\"I'll make sure that happens,\" replied Terry. \"Is there anything else I can get for you now?\"\n\n\"No, I think we're good. Thank you, Terry,\" I said as I handed my menu to him.\n\nBonnie handed her menu to Terry and, as he walked away, took my hand and gave it a squeeze. \"Thank you,\" she said, smiling at me, making my heart melt.\n\n\"For what?\" I asked.\n\n\"For treating me like a lady,\" Bonnie explained. \"You take charge like you're the guy treating her woman to a meal. Just now, with ordering dinner, you asked me what I wanted first and then placed your order. The waiter also deferred to you, letting you take the lead. I just think it's cute.\"\n\n\"Well, I'm not butch or anything like that,\" I replied, feeling a little uncomfortable. \"I'm not into the whole butch/femme subculture. I want you to feel like an equal in this relationship.\"\n\n\"Oh, I wasn't complaining, and I wasn't saying you were butch. You just seemed to take the lead, and that's okay with me. I wouldn't want to be in a relationship if I didn't feel like an equal. I just like the feel of you being confident enough to take the lead and not question it. I guess that's why you are an officer,\" Bonnie concluded, giving my hand another squeeze.\n\n\"Well, anytime you feel like I'm taking too much for granted, tell me to back off,\" I said, smiling back at Bonnie and squeezing her hand. \"While I prefer pitching to catching, I'm not looking for a pillow princess. I'd like you to be comfortable with pitching from time to time.\"",
        "\"I'm sorry,\" said Bonnie, a slight frown on her face, \"I didn't understand what you meant there with pitching, catching, and what's a pillow princess?\"\n\n\"Sorry,\" I hastily answered. \"Pitching means to give someone pleasure while catching means to take pleasure from someone. A pillow princess is someone who only wants to take pleasure. I really enjoy making you cum, even more than when you make me cum. Not that I don't want you to have the pleasure of pleasuring me ... that's just the way I am.\"\n\n\"Oh,\" Bonnie said, a look of relief coming over her face. \"Thanks for clearing that up.\" She leaned and said, \"I enjoy you pleasuring me a lot!\"\n\n\"It's really my pleasure,\" I snarked.\n\nJust then, Terry showed up with our food. The burritos were enormous and delicious. Based on this, I think I've found my favorite Mexican restaurant.\n\nWhen we were done eating, and after Terry had cleaned away our dishes, we sat there finishing our drinks.\n\n\"So, do you feel like dancing tonight?\" I asked.\n\n\"It's been a long day. How about a walk along the beach instead?\" countered Bonnie.\n\n\"Okay ... any place in particular?\" I asked.\n\n\"There's a parking lot near the Hermosa Beach Pier, and we can walk down The Strand to the Cheesecake Factory. Maybe get some dessert?\"\n\n\"That sounds good. Let's go,\" I said.\n\nI paid the check, and we headed out back to my car. We drove down to the parking lot by the Hermosa Beach pier and were lucky to find a spot just vacated as we got there. We got out and started walking hand-in-hand down The Strand, a combination walking, skating, and biking path (basically a continuation of the trail that ran through Manhattan Beach). The sun was just setting, and our long shadows stretched all the way to the row of houses facing the beach.\n\nWe stopped to watch the last of the sun disappear below the waves. The conditions must not have been right because we didn't see the green flash that can sometimes be seen just as the sunset completes. We continued on, the lights of the Cheesecake Factory beckoning us.\n\nIt felt so right, walking along in the twilight, holding Bonnie's hand. The slight breeze coming off the ocean wasn't enough to make it too cool to enjoy the walk. There were no other strollers nearby, so I turned to Bonnie, letting go of her hand, and slipped my arms around her waist. Bonnie slipped her arms around my neck, and I just held her, enjoying the feel of her lithe body against me.\n\nI sighed, giving voice to my thoughts, \"This feels so right.\"\n\n\"Yes,\" answered Bonnie, placing her forehead against mine.\n\nThe world went away for a while, and it was only us.\n\n\"On your left!\" woke us out of our reverie as a cyclist went busting by us, not missing us by much. We separated and resumed our walk to the Cheesecake Factory. We finally got there and entered. Luckily, there wasn't a long line, and we soon got a seat. When the waiter came up to us, we told him that we were only ordering cheesecake. He handed us the cheesecake menu, filled our water glasses, and said he'd be back in a minute to take our order.\n\nWe decided to order the Strawberry Cheesecake and split it between us. Our waiter brought it to us with two forks. We nibbled at it in silence while holding hands, just enjoying each other's company.\n\nWhen we were done, we went back to the car, taking our time strolling back along The Strand. The moon rose over the mountains to the east. It was orange-red due to smog trapped up against the mountain range by the breeze coming off the ocean.\n\n\"So, do we go back to your mom's or my place?\" I asked as we pulled out of the parking lot.\n\nBonnie looked over to me and said, \"I don't want this night to end. Let's go back to your place, and I'll call mom and tell her I'm going to crash on your couch tonight.\"\n\n\"Sure, sweetie,\" I said, agreeing with her sentiment. \"I can put on a movie, and we can cuddle on the couch.\"\n\n\"Sounds great,\" said Bonnie, leaning over to lay her head on my shoulder, holding my right hand in both of hers.\n\nI carefully drove back home, and we went in. Our earlier passion sated; for the first time, we entered my place and closed the door without us slamming up against it, locked in a passionate kiss.\n\nBonnie went to the phone to call her mom while I turned on the TV and put a tape in the tape player. It was \"Unfaithfully Yours,\" a rom-com featuring Dudley Moore, one of my favorite actors.\n\n\"Hi, mom,\" I heard Bonnie say on the phone. \"How're the boys?\"\n\nShe listened to what her mom was saying.\n\n\"Okay, since they're already down if you don't mind, I'm going to crash on Virginia's couch tonight.\"\n\nAnother pause, while her mom talked.\n\n\"Love you too, mom,\" Bonnie finished and hung up the phone.\n\nI went into the kitchen and got a couple of Coronas out of the refrigerator and headed back into the living room. Bonnie was already on the couch, so I handed her a Corona and started the VCR. I sat down next to her and put my right arm around her shoulders.\n\n\"So, how are your mom and the boys?\" I asked, drawing her up to me.\n\n\"They had a great time and didn't give much of a fuss when mom told them to get ready for bed. They must have worn themselves out today,\" Bonnie replied, wriggling into me as she put her left hand on my thigh. \"She said she was fine and for me not to worry about rushing back since they were already in bed.\"\n\n\"Good, more 'me' time for you,\" I said as I leaned in and kissed her.\n\nThe kiss seemed to last forever as we just took it easy and just enjoyed the feeling of our lips merging. Eventually, I opened my lips and licked Bonnie's lower lip, asking permission to enter. Her lips parted, granting permission. My tongue gently explored her mouth, cherishing her teeth, her tongue, and the roof of her mouth. Our tongues slowly danced, just enjoying each other's company as my tongue would take the lead for a while, and then her tongue would take the lead for a while. Eventually, our lips parted, and the look of contentment on Bonnie's face just melted my heart.\n\n\"I could do this forever,\" I whispered.\n\n\"Me, too,\" returned Bonnie. \"Where have you been all my life?\" she asked.\n\n\"Searching for you,\" I replied.\n\n\"I'm glad you found me,\" she said, squeezing my thigh.\n\nWe finished our beers, which somehow got warm and went back to watching the movie. We laughed at the funny parts and groaned where appropriate, as Dudley Moore's character stumbled his way through the film.\n\nWe shared kisses from time to time, and eventually, the movie ended.\n\nI turned to Bonnie and asked, \"Ready for bed? Or would you rather crash on the couch so you won't be lying to your mom?\"\n\nBonnie leaned in and said, \"I think I can live with telling mom a little white lie,\" as her lips met mine.\n\nThis time our kiss built up in passion, making it clear to both of us that while we will shortly be in bed, sleeping will not be the first thing on our minds.\n\nWe separated, and I went out to my car to fetch Bonnie's overnighter. While I was doing that, Bonnie policed the beer bottles and turned the TV off. We met in the bedroom, and I handed her bag to her and said she could hit the bathroom first.\n\nWhile I was waiting for my turn, I straightened out the mess on the bed from our earlier tryst and then pulled my sleeping tee from my dresser. I was thinking that I need to clear out a drawer for Bonnie to use, so I started rearranging some of the drawers. Just as I finished, Bonnie came out, and I gasped as I saw what she was wearing. It was a lovely sheer teddy that just barely came down to the bottom of her ass. She wasn't wearing any bra or panties with it either.\n\n\"Wow,\" I said, temporarily forgetting what I was doing.\n\n\"You like?\" Bonnie asked as she pirouetted in front of me.\n\n\"I like,\" I said, stepping up to wrap my arms around her.\n\n\"Nope, not yet,\" Bonnie put her hands up to repel my advance. \"Your turn,\" she finished, shooing me toward the bathroom.\n\nAs I headed into the bathroom, I said, \"I cleared a drawer out for you in the dresser.\"\n\nAfter performing my toilet, I donned my tee and came out of the bathroom, turning off the light. As I turned to the bed, I saw Bonnie sitting on the edge of the bed, tear tracks down her cheeks. My heart dropped, and I rushed over to her, saying, \"What's wrong, sweetie?\"\n\n\"Nothing,\" Bonnie replied, quickly swiping at her tears with her right hand. \"It just struck me when you offered me the drawer that you really want me to be a permanent part of your life. These are tears of happiness, dear, not sadness.\"\n\n\"I do want you to be a permanent part of my life,\" I husked as I reacted to her calling me dear.\n\nBonnie reached out to me and pulled me into a hug, saying, \"I love you, Virginia.\"\n\n\"I love you too, Bonnie,\" I returned, putting my arms around her.\n\n\"Come to bed, dear,\" Bonnie said, pulling me down on top of her, a smile blossoming over her face.\n\nNeedless to say, sleep did not come for some time.\n\nSunday morning, I woke, finding Bonnie lying next to me, her hair haloed around her head, sleeping peacefully with a slight smile on her lips. She looked so beautiful, my heart hurt. Even though I haven't been a practicing Catholic for years, I offered up a prayer to God, thanking Him for her.\n\nAfter breakfast and a delightful shower, we headed back over to Grace's place so Bonnie could get the boys and get them home. When we pulled up behind her car, Bonnie invited me in, so we both walked up to the apartment door. The door flew open at our knock, and we were almost bowled over by Matthew and Mark as they came out to greet us. I took Mark's hand while Bonnie took Matthew's hand, and we went in, getting a \"Good morning!\" from Grace as we settled down around the kitchen table. After chatting for a bit, I got up to make my way to the door.\n\n\"Come again,\" invited Grace as I opened the door to leave.\n\n\"I sure will,\" I replied, flashing Grace a smile as I left.\n\nI headed back home, missing Bonnie already, but knowing she'd call me tonight. I got home, tidied up the place, and threw a load of laundry in the washer. I noted that Bonnie had made use of the drawer I had freed up, giving me a feeling of happiness as I viewed the few items in the drawer.\n\nOver the next two months, we settled into a routine. I would see Bonnie a couple of days a week at Jack's and seeing her and the boys every Saturday, doing different things, getting to know them, and making friends with them. Bonnie crashing on my couch every Saturday night was a running shtick, although I think Grace was starting to figure out what was going on. By October, the boys were calling me Aunt Ginny. While I had always hated the diminutive Ginny (since my mother was also named Virginia), it was cute hearing it from Matthew and Mark.\n\nDuring that time, my job didn't require any traveling. We were in the phase of the program, where we were waiting for the contractors to submit their proposals. However, the Air Force Weapons lab was sponsoring and hosting a symposium on IR Sensors that I thought would be useful to attend. It would last a week, so I would have to fly out Sunday evening and fly back Friday night.\n\nI sent my request to SATO for the plane tickets and called the VOQ (Visitors Officer Quarters) at Kirtland AFB. As always, when I identified myself as a Captain, the clerk taking my call asked me if I was Navy. When I replied in the negative, he booked me a room in the VOQ building. Navy Captains are equivalent to Air Force Colonels, who get individual suites, unlike company officers who basically get a hotel room.\n\nThe Sunday I was to leave, we broke our routine, and I went over to Bonnie's place to see her before I left. When I got there, the boys came running out to greet me as if they hadn't seen me in forever, even though they last saw me this morning. They dragged me into the apartment. The first time I had been here, I couldn't believe how small it was. It was tidy but very crowded. There was only one bedroom, and the living area, including the kitchenette, was the same size as the kitchen and dining area in my condo. Bonnie slept on the couch while the boys shared the bedroom.\n\nBonnie and I sat on the couch while the boys lay on the floor watching the TV. As I looked around, I determined that when it was appropriate, I was going to ask Bonnie to move in with me. The boys would have their own room, and Bonnie would share mine. Of course, the boys would have to change schools, so that was just one obstacle on top of the biggest one, two women living together in a relationship. I wasn't going to push Bonnie into outing herself with her mom and boys since I wasn't able to due to the military's stand on homosexuality. I was sure that as long as I could separate work from home, I'd be able to get away with it. It was going to be a burden to Bonnie since I couldn't publicly acknowledge that she was my significant other.\n\nI took Bonnie's hand in mine and squeezed it as I put those thoughts out of my head. Live for today; I scolded myself. Let tomorrow take care of itself.\n\n\"It's going to be tough not seeing you for a whole week,\" I said, looking into her beautiful eyes.\n\n\"Call me every night,\" Bonnie said. \"Just the sound of your voice will help me get through this.\"\n\n\"I will, without fail,\" I vowed.\n\nWe sat in silence for a while, each caught up in our own thoughts. Finally, I sighed and said, \"Well, I better get going. I'm going to need to call a cab to get to the airport once I get home.\"\n\n\"Okay,\" said Bonnie as we got up and headed to the door.\n\n\"Bye, Matthew. Bye, Mark,\" I said as I got to the door.\n\nThe boys jumped up and came over to hug me. By now, Mark had gotten over his shyness toward me and was as enthusiastic as Matthew. \"Bye, Aunt Ginny,\" they both said before returning to watch TV.\n\nBonnie and I stepped outside, and I took her in my arms and, making sure there were no witnesses, kissed her goodbye. \"Love you,\" I murmured in her ear.\n\n\"Love you more,\" she murmured back.\n\nI smiled and said, \"That's not possible.\"\n\n\"Wait and see when you get back,\" she replied with a smile.\n\nWith that, I left, buoyed by the love I felt from her.\n\n***\n\nWhile at Kirtland AFB, I decided to take an evening and visit Old Town in downtown Albuquerque. Old Town was the site of the original settlement when the Spaniards explored the region. It was comprised of a lot of old adobe buildings which housed a lot of shops. I was looking specifically to buy some turquoise jewelry for Bonnie. When I had been assigned to the Weapons Lab earlier in my career, I had really enjoyed browsing the shops in Old Town.\n\nThere are many Native Americans who use turquoise in their jewelry, and there were several shops that featured different jewelers. My favorite jeweler was Robert Eustace, who created beautiful jewelry using carved turquoise and native silver.\n\nI was lucky to find what I was looking for in my favorite shop on the corner of San Felipe St NW and Charlevoix St NW. I found a lovely squash blossom necklace and matching earrings, each piece of turquoise carved, made by Robert Eustace. It wasn't cheap, but Bonnie was worth it. After purchasing it and getting it wrapped up in a gift box, I shopped around to pick up some moccasins for Matthew and Mark, and I found a pretty cuff bracelet for Grace. I then headed back to the VOQ, my heart bursting with love for Bonnie.\n\nThat night, like every previous night, I called Bonnie, using my AT&amp;T Calling Card.\n\nShe was waiting for my call because, after only one ring, Bonnie picked up and said, \"Hello?\"\n\n\"Are you naked?\" I asked.\n\n\"That depends.\"\n\n\"On?\"\n\n\"What are your intentions?\"\n\n\"I intend to make you cum, screaming my name.\"\n\n\"In that case, I am naked.\"\n\n\"So am I.\"\n\n\"Touch my breasts ...\"\n\n***\n\nFriday night came, and I was willing the 737-300 to get to LAX as fast as possible. I couldn't wait to get home. I had given Bonnie a key to my condo and the alarm code, so she had dropped the boys off with Grace and was going to be waiting for me at my place.\n\nAfter landing, getting my luggage, and calling a taxi, I called my place to let her know I had landed. Our system was that I would allow the phone to ring two times and then hang up. Having done that, I got my cab, gave the driver the address, and sat back and relaxed. Twenty minutes later, the taxi pulled up to my place, and I paid the fare, throwing in a good tip. I walked up to my door, got out my key, and unlocked the door.\n\nI entered; somewhat surprised that Bonnie wasn't waiting for me. I called out, \"Bonnie?\"\n\n\"In here,\" Bonnie replied from my bedroom.\n\nAs I took off my coat and set down my luggage, I asked, \"Are you naked?\"\n\n\"That depends,\" she came back.\n\n\"On?\" I queried, a big smile spreading across my face as I headed for the bedroom.\n\n\"What are your intentions?\"\n\n\"I intend to make you cum, screaming my name,\" I returned, opening the bedroom door.\n\n\"In that case, I am naked,\" Bonnie said, spread eagle on the bed wearing nothing but a smile.\n\nNeedless to say, she screamed my name several times that night.\n\n***\n\nIn the morning, I woke with Bonnie's back to me, my arm draped over her ribs, hand resting on her breast. I patiently waited for her breathing to speed up, betraying the fact that she was awake. I leaned in and breathed in her ear, \"Hey, you.\"\n\nBonnie sighed, wriggled her ass up against my hips, and said, \"Morning dear.\"\n\nI nuzzled her ear and asked, \"Still miss me?\"\n\n\"No, you made it very clear last night that you're back with me,\" Bonnie sleepily murmured, a smile on her lips.\n\n\"Good,\" I said, \"I didn't want any misunderstanding about that.\"\n\n\"Virginia,\" Bonnie started, sounding serious, \"mom knows about us.\"\n\n\"Oh,\" I said as my heart clenched. \"Is your mom okay with it?\" \"Oh god, I hope so,\" I thought to myself.\n\n\"Yes, we talked for a bit last night when I took the boys over to her place,\" said Bonnie, turning over, so we were lying there face to face.\n\nI took her in my arms, a big grin on my face. \"How did she find out? Were we giving it away?\"\n\nBonnie shook her head, saying, \"Not blatantly. But mom picked up little clues here and there and figured it out a couple of weeks ago. Mom didn't say anything earlier because she wanted to think about it for a while. She saw how careful we were trying to be, and she asked Matthew and Mark some questions. She concluded that we were being discreet enough about it that she didn't have to worry about anything hurting the boys.\"\n\n\"Did you say anything about the military being intolerant of homosexuality?\" I asked.\n\n\"Yes,\" said Bonnie. \"She knows about that, and she was worried that you were risking your career. I assured her that you are being very careful. As long as you're in uniform, I have to be careful not to show any untoward affection toward you. She's delighted that you're making such a good attempt to treat the boys as if they're your own. She wants you to know that she is happy that you are treating us as a package deal.\"\n\n\"Great,\" I said. \"I'll have to thank Grace for that the next time I see her.\"\n\n\"Good, because we're invited over to mom's for dinner tonight,\" Bonnie said.\n\nWith that, I drew Bonnie in for a kiss. Before it got too hot, I broke the kiss, untangled myself from Bonnie's arms, and jumped up out of bed. \"Stay there; I'll be right back,\" I said as I went out to retrieve the gift I got for Bonnie.\n\nI came back into the bedroom and handed her the gift-wrapped box.\n\n\"What's this?\" Bonnie asked with a smile on her lips.\n\n\"I got you a little something to express my love for you,\" I answered.\n\nShe tore the wrapping off, opened the box, and gasped, her eyes growing huge when she saw what it was.\n\n\"Oh my god, it's beautiful!\" she exclaimed, taking the necklace out and holding it up to her chest.\n\n\"Not as beautiful as you are,\" I said, pleased that she liked it. It looked so beautiful against her skin. \"Worth every penny,\" I thought to myself. \"Make sure you wear it for dinner tonight,\" I finished.",
        "\"I hope I can find something to wear that goes good with it,\" Bonnie gushed.\n\n\"It would look great if you wore nothing,\" I helpfully suggested.\n\nBonnie slapped me on the arm and said, \"I can't go naked to my mom's place. What would she say?\"\n\n\"Probably that she's seen you naked many, many times,\" I snarked.\n\n\"Maybe I can borrow something of yours to wear tonight,\" Bonnie mused as she turned to my closet.\n\n\"What's mine is yours, closet-wise anyways,\" I said.\n\nSegueing into the next topic I wanted to discuss with Bonnie, I asked, \"Speaking of what's mine is yours, would you consider moving in with me, now that your mom is on board with this?\"\n\nBonnie turned to me, her mouth agape, her eyes wide, and ran to me, wrapping her arms around me. \"Do you mean that?\" she asked softly, tears springing from her eyes.\n\n\"Yes, nothing would make me happier than to share my home with the love of my life,\" I replied, holding her in my arms, nuzzling her cheek. Tears started leaking from my eyes from relief that Bonnie seemed to be okay with my suggestion. \"If we do this, it's not going to happen today. We have a lot to plan for, especially since Matthew and Mark would need to change schools.\"\n\nBonnie nodded in agreement, maintaining our embrace. I could feel her body trembling, and a sob escaped her. She just gripped me harder as she continued sobbing softly.\n\n\"Hey, baby, you okay?\" I asked when Bonnie showed no sign of stopping.\n\n\"Oh god, I'm so happy,\" Bonnie replied, relaxing her hold on me enough to look into my eyes. \"What did I do to deserve you?\"\n\n\"You made me love you,\" I said as I moved in for a kiss. We kissed a chaste kiss, maintaining eye contact.\n\nWe broke our kiss, and I said, \"Can I take that as a yes?\"\n\n\"Yes!\" cried Bonnie. \"Yes, yes, yes, yes!\"\n\nWe broke our embrace, and Bonnie turned back to head to my closet, her tears forgotten as she went to find something pretty to wear for tonight.\n\n\"I'll have to make some closet space for you,\" I mused, more to myself than to Bonnie.\n\nBonnie pulled out a pale yellow sundress and held it up to her. \"I think this will go well with my necklace.\"\n\n\"Yes, you'll look beautiful in that,\" I said, seconding her choice. \"I can wear a pale blue outfit to compliment yours.\"\n\n\"Oh, good,\" said Bonnie, \"you look nice in blue.\"\n\nShe put the dress back in the closet, walked over to me, pushed me back onto the bed, and said, \"Now it's time for me to show you my appreciation for last night, and this morning.\"\n\nNeedless to say, she made me scream her name several times.\n\n***\n\nAfter breakfast and a pleasant shower, Bonnie dressed and left to pick up the boys. We were going to meet at Grace's place at 6 PM for dinner.\n\nI got there before Bonnie did, so Grace invited me in, and we retired to the kitchen for drinks and talked while she finished cooking dinner.\n\nWhile helping Grace by putting the salad together, I started, \"Bonnie told me you know about us being lesbian lovers?\"\n\n\"Yes, I did figure it out, but I want to reassure you that it wasn't anything you did in particular but a lot of little hints here and there that lead me to my conclusion,\" Grace replied. She reached over and took my right hand in her hands and continued, \"I'm okay with it. You are a lovely person. You are so good to Bonnie and the boys. I couldn't imagine anybody else being more caring and loving than you have been.\"\n\nI swallowed a lump that suddenly appeared in my throat and said, \"Thank you for that, Grace. I love Bonnie more than I could ever express in words. I love Matthew and Mark ... they are the sweetest boys I've ever known.\"\n\nGrace let go of my hand to check the roast in the oven. \"I know, I can see it in your eyes when you look at Bonnie or when you play with the boys. You always talk to them as if they are your equal instead of talking down to them like a lot of people would do.\"\n\nI finished with getting the salad prepared and started to get dishes and utensils out to set the table. While setting the table, I said, \"I know Bonnie places Matthew and Mark ahead of herself, even to her detriment. It makes sense that for me to win over Bonnie, I have to treat them as she would ... they come first. I wouldn't do anything to hurt them. I just hope that us being lesbian lovers in no way reflects back on them. I have to be extremely discreet so that the Air Force doesn't find out. I just hope that Bonnie doesn't think my reluctance to publicly express my feeling for her in any way means I'm ashamed of what we're doing.\"\n\n\"Oh, sweetie,\" said Grace, pulling me in for a hug, \"she totally understands. She's just scared to death that she'll do or say something to cause you trouble.\"\n\nJust then, there was a knock at the door. We separated, and Grace went to open the door. Matthew and Mark burst in yelling, \"Hi grandma!\" and giving her hugs. Then they saw me and started yelling, \"Aunt Ginny's here!\" and ran over and hugged me. I hugged them back.\n\nBonnie walked in, and she was a vision in my yellow sundress and her turquoise jewelry. I stared at her in stunned silence. I couldn't believe that she could look even lovelier than I have had ever seen her before. She glowed from the love she had for me as she walked up and gave me a quick kiss on my cheek. I know she could see the love I have for her in my eyes as I wished I could just take her in my arms and never let her go.\n\nI looked over to Grace as she closed the door, and I could see the moisture gleaming in her eyes as she saw how we were looking at each other. \"You look lovely, sweetie,\" she said as she drew Bonnie in for a hug. \"That's a beautiful necklace. Did Virginia give you that?\"\n\n\"Yes, she did,\" said Bonnie, looking back at me, melting my heart with her gaze.\n\n\"Well, why don't you two go into the kitchen and check on dinner, and I'll get the boys washed up and ready for dinner,\" Grace said, making a shooing motion toward Bonnie and me.\n\nBonnie and I headed into the kitchen, giggling like schoolgirls while Grace gathered up the boys and headed off to the bathroom. Once we got in the kitchen, we embraced, and our lips ravaged each other. After a minute, we broke apart and started getting dinner prepared.\n\nJust as everything was on the table, Grace came in with Matthew and Mark. We all sat down and enjoyed dinner. Afterward, Bonnie, Grace, and I shared cleaning up the kitchen, washing, and drying the dishes.\n\nThe boys were in the living room watching TV. Bonnie turned to Grace and said, \"Mom, Virginia has asked the boys and me to move in with her. I'm inclined to agree, but I'd like to know your thoughts.\"\n\nI stood there, stunned that Bonnie was seriously considering accepting my offer. My heart flip-flopped from the emotions I was feeling at this moment.\n\n\"I think it is a wonderful idea,\" Grace said, her eyes misting up. \"Virginia has shown that she loves you and the boys very much. She's willing to put her career on the line for you. She's offering you her home.\"\n\n\"I know,\" Bonnie replied. \"I want to accept, but I feel like I'm doing all of the taking. I want to be an equal member of this relationship. What am I giving to Virginia?\"\n\nI walked over to Bonnie, took her hands in mine, got down on one knee, and looking up at her said, \"You are giving me your love, the most precious commodity there is. You are entrusting your sons to my care. My love for you pales in comparison. If anyone is doing the taking, it's me.\"\n\n\"No,\" Bonnie said, shaking her head and pulling me to my feet, \"your love is not insignificant. I am so blessed to be loved by you.\"\n\n\"As I am blessed by your love, my love,\" I said, pulling her in for an embrace. \"Please, say yes?\"\n\n\"Yes,\" Bonnie said, leaning in and kissing me.\n\nGrace came over and hugged both of us. \"Thank you, Virginia, for loving my daughter and my grandsons.\"\n\nJust then, Matthew and Mark come dashing into the kitchen, yelling, \"Aunt Ginny, Aunt Ginny, come watch TV with us!\"\n\nWe quickly broke, and I grabbed Mark's hand and said, \"Okay, let's go watch TV.\" We started for the living room while Matthew took my other hand, the two of them practically dragging me in their enthusiasm.\n\n\"So, do you want to watch Airwolf or the Love Boat?\" I asked as we got to the TV.\n\n\"Airwolf!\" exclaimed Matthew as he and Mark plopped down on the floor in front of the TV.\n\n\"Airwolf it is,\" I said as I tuned into CBS. As Bonnie and Grace came into the living room, I went up to Bonnie and said quietly, \"I'm going out to the car to get the gifts I got for Grace and the boys ... be right back.\"\n\nI came back in with the gifts. I gave Matthew and Mark their moccasins, telling them they were handmade by Zuni Indians. They excitedly put them on, and I was glad I managed to get the correct sizes. As I handed Grace a gift-wrapped box, she said, \"Sweetie, you didn't have to get me anything.\"\n\n\"Yes, I did. You've gifted me the most precious thing in the world,\" I said, looking over to Bonnie for a moment. Turning back to Grace, I said, \"Please, accept this as a token of my appreciation.\"\n\nGrace opened the package and pulled out an etched sterling silver cuff bracelet inlaid with carved turquoise. She gasped, \"Oh my, it's beautiful!\" as she put it on. She then got up and pulled me into a hug, whispering, \"Thank you for everything.\"\n\nWe all sat on the couch, Bonnie, in the middle. I took Bonnie's hand as we settled in to watch Jan-Michael Vincent save the day once more. It's amazing how many problems can be solved with a helicopter and a hot-shot pilot.\n\nWhen Airwolf was over, Grace turned to us and said, \"Why don't you and Virginia take off now, and I'll watch the boys tonight?\"\n\nI said, \"Grace, I can't ask you to do this for two nights in a row.\"\n\n\"You're not asking, I'm offering. Go ... go, we'll be fine here,\" Grace said, making shooing motions with her hands.\n\nBonnie and I said goodnight to Matthew and Mark, each of them hugging me and thanking me again for their moccasins. I hugged them back, telling them I loved them and to behave and mind their grandmother.\n\nAs we headed back to my place, Bonnie grabbed my right hand, leaned over and put her head on my shoulder, and sighed. \"God, I can't believe how happy I am.\"\n\n\"Me, too,\" I said, \"If I was any happier, I think my heart would explode.\"\n\nOnce we got to my place, Bonnie grabbed my hand and pulled me toward the bedroom. \"I want to take you to bed and make you scream my name.\"\n\n\"On one condition,\" I said as we entered the bedroom.\n\n\"What's that?\" she said as she turned and started undressing me.\n\n\"You let me make you scream my name, too,\" I said as I started undressing her.\n\n\"Deal!\" Bonnie said.\n\nNeedless to say, we screamed each other's names several times that night.\n\n***\n\nWe made it through the week, calling each other every night and seeing each other a couple of times at lunchtime. We discussed the logistics of moving, deciding to complete the move Christmas Eve day so we could celebrate Christmas together in our new home.\n\nWe decided to broach the idea to the boys this weekend, so I invited everyone over to my place for dinner Friday night. I was going to bake lasagna for the occasion. I assembled it Thursday night, so I could pop it in the oven as soon as I got home Friday so it would be ready by 7 PM.\n\nGrace arrived at 6 PM, insisting that she wanted to help prepare dinner. As she helped me in the kitchen, I discussed our plans for the evening. She suggested a couple of things and said she'd hang in the kitchen while we had our discussion in the living room.\n\nBonnie, Matthew, and Mark got there at 6:30 PM and joined us in the kitchen. Grace shooed the boys and me out of the kitchen, so I decided to give them a quick tour of the facilities. I showed them the pool, the playground, and the clubhouse. Once we got back, I showed them the bedrooms and where the bathroom was. Matthew really liked the shower in the master bath, and I said I did too.\n\nBy the time we finished the tour, Grace and Bonnie had everything ready, so I took the boys to the guest bathroom to get cleaned up for dinner.\n\nWe all sat down at the dinner table and dug in. Everything was delicious, and we enjoyed it a lot. When everyone was done eating, Grace shooed everyone off, insisting that she would clean up.\n\nBonnie, Matthew, Mark, and I went into the living room and sat on the couch. Bonnie and I sat in the middle, and Mark sat next to me, and Matthew sat next to Bonnie.\n\nI turned to Matthew and asked, \"Matthew, do you remember when we talked about how your mom and I liked each other?\"\n\n\"Yes,\" he replied. \"You said you were friends and friends like each other.\"\n\n\"Yes, your mom and I are great friends, and we really like each other a lot. Sometimes, friends that like each other a lot will hug and hold hands,\" I said, taking Bonnie's hand in mine while putting my arm around her. Bonnie put her arm around me in return.\n\nMark said, \"I've seen you and mom holding hands and hugging each other so you must like each other a lot.\"\n\nBonnie said, \"Well, Virginia likes you and Matthew a lot too because she hugs you and holds your hand, right?\"\n\n\"Yes, and I like hugging Aunt Ginny too. I like her a lot,\" he finished almost shyly.\n\n\"Me too,\" added Matthew. \"She's very nice and beautiful, too.\"\n\n\"Thank you, Matthew,\" I replied. \"I think your mom is beautiful, too, don't you?\"\n\n\"Yes and a lot of my friends think so too,\" he said.\n\n\"Sometimes friends who like each other a whole lot will kiss each other. I like your mom a whole lot. Would you be upset if I kissed her?\"\n\n\"No,\" replied Matthew, \"but usually, I only see guys and girls kissing.\"\n\n\"Girls can really like guys, and guys can really like girls, but sometimes girls can really like girls too, and they like to kiss too,\" Bonnie said.\n\nBonnie turned to me and leaned in for a kiss. We kissed for only a few seconds because we didn't want to freak the boys out. Matthew and Mark watched us, their eyes big. Then we pulled apart.\n\nI turned to Mark and kissed his cheek, saying, \"I like you a lot too.\"\n\nMark then kissed my cheek and said, \"I like you a lot, Aunt Ginny.\"\n\nI then leaned across Bonnie and kissed Matthew on his cheek, saying, \"I like you a lot too.\"\n\nMatthew kissed my cheek, saying, \"I like you a lot, too, Aunt Ginny.\"\n\nI then turned to Bonnie and kissed her again, this time with a little more passion but still keeping it short. When I pulled back, I said, \"And I like you a whole lot!\"\n\nI sat back, my right arm around Bonnie and my left hand holding Mark's hand. Bonnie had her left arm around me, and she was holding Matthew's hand in her right hand.\n\nI said, \"Sometimes when two friends like each other a whole lot, they want to move in together and live in the same house, especially when one friend likes the other friend's children a lot.\"\n\nI waited for a beat before continuing, but Matthew beat me to it. He asked, hesitantly, \"You mean, like the way you really like us?\"\n\n\"Yes,\" I replied with a smile. \"So, would you like it if you moved in here and lived with me?\" I asked.\n\nMatthew looked up to Bonnie, and Bonnie smiled and nodded to him. He then turned to me and asked, \"Do you really mean it? You want us to move in here with you?\"\n\n\"Yes, I would,\" I answered, smiling at him.\n\nMatthew jumped up and came over and hugged me and said, \"Yes, I would like to move in with you.\"\n\n\"How about you, Mark?\" I asked, turning to Mark.\n\n\"Yes, Aunt Ginny, I would like moving in here,\" answered Mark, a big smile breaking across his face as he jumped up to hug me.\n\n\"How about you, mom?\" I turned to ask Bonnie. \"Would you like to move in with me?\" I asked as both Mark and Matthew looked to Bonnie, hopeful looks on their faces.\n\n\"I'd love to, Virginia,\" she answered, leaning in to give me a kiss. Matthew and Mark jumped up and yelled in excitement. Just then, Grace came into the living room, asking, \"What's the ruckus going on in here?\"\n\n\"Aunt Ginny wants us to move in with her!\" both boys exclaimed, running to her and hugging her.\n\n\"Oh, wow, that's so nice,\" said Grace, hugging them both back. \"Did you thank Virginia for that wonderful invitation?\"\n\nBoth boys ran back to me and hugged me, saying, \"Thank you, Aunt Ginny.\"\n\n\"No problem,\" I said. \"Just help me take care of your mom.\"\n\n\"We will, we will,\" they said and went to hug Bonnie.\n\n\"Okay, it's not going to be right away. Your mom and I have a lot of planning to do, so it'll probably be the end of the year before you're moved in,\" I finished.\n\nBonnie held on to Matthew and Mark and said solemnly, \"I need you two to do something for me, okay?\"\n\n\"What is it, mom?\" asked Matthew.\n\n\"There are people who don't like the way Virginia and I like each other, and they could be mean to you or even be mean to Virginia or me. So it would be best if you don't tell anybody where you are moving to, just tell them you are moving away. Okay?\"\n\n\"Yes, mom,\" answered Matthew.\n\n\"Mark, do you understand?\" Bonnie asked.\n\nMark had a worried look on his face as he looked up to Bonnie as he said, \"Okay, mom. I don't want anybody to hurt you.\"\n\n\"Oh, sweetie,\" Bonnie said, going down to one knee and wrapping Mark in her arms, \"no one is going to hurt me. They'll just say mean and hateful things.\"\n\n\"Okay mom, I'll be careful.\" Mark said.\n\nGrace moved to lighten the mood back up by asking, \"Who wants ice cream?\"\n\n\"I do\" \"I do,\" Matthew and Mark said, running over to Grace.\n\n\"Okay then, let's go get some ice cream, and your mom and Aunt Ginny can start doing some planning while we're gone,\" Grace said, giving Bonnie and me a wink.\n\n\"I'll give you guys an hour,\" she mouthed as she left, pulling the door closed.\n\nI walked over to Bonnie, took her in my arms, and gave her a quick kiss. \"What do you think? We didn't scare them too bad, did we?\"\n\n\"No, I think it went pretty good. I'll keep talking to the boys and reassure them everything will be okay,\" Bonnie said.\n\n\"So, what can we do with an hour of alone time?\" I asked with a grin on my face.\n\n\"Let's get naked and find out,\" Bonnie said, running for the bedroom, me right behind her.\n\nWe striped as fast as we could, clothes flying everywhere. We jumped on the bed and embraced, passionately kissing each other, our mouths open and tongues lashing each other. I rolled us over until I was on top, and as we broke our kiss, I got on my knees between Bonnie's legs, grabbed her legs behind her knees, and lifted her legs up so that her knees were nearly under her armpits. Bonnie grabbed her ankles as I positioned my clit on top of her clit. Locking eyes with her, I started rocking my hips, rubbing our clits together.\n\nBonnie started rocking her hips in a counter-motion, increasing the friction of our mounds rubbing together, our juices co-mingling in an attempt to reduce the friction. Since my weight was on the back of her knees and her pussy, Bonnie let go of her ankles and grabbed my breasts, crushing them like stress balls, her fingers making red marks on them.\n\nI gasped from the feeling of her fingers digging into my breasts as I increased the tempo of our clits rubbing together. I was panting faster and faster, my chest heaving from the exertion. Bonnie was panting too, gasping \"Harder, harder, faster, faster!\" in her effort to increase the stimulation.\n\nFinally, I could feel my orgasm building up in my pussy. From Bonnie's expression, I could tell she was almost there, too. I gasped, \"Come with me\" and let go, falling off the cliff, Bonnie right beside me. We plunged together into the abyss.\n\nWe both screamed as our coordinated rhythm fell apart as our bodies spasmed from our mutual orgasm. I collapsed on top of Bonnie, desperately trying to catch my breath. I rolled off her as I wrapped my arms around her, holding her like I was afraid she'd disappear if I didn't hold on tight.\n\nWe both faded out for a minute or two, and when I opened my eyes and saw Bonnie lying next to me, I couldn't believe this wonderful woman was in my arms. I felt my eyes welling with tears as her eyes opened, and a languorous smile came to her lips.",
        "\"I love you so much,\" I whispered. \"I don't deserve you.\"\n\n\"I love you more,\" Bonnie whispered back. \"I don't deserve you more, too.\"\n\n\"Not possible,\" I murmured as I leaned in to kiss her.\n\nFifty-five minutes after entering the bedroom, we came out, looking a little flushed but feeling much better.\n\nTrue to her word, Grace was back with the boys in an hour.\n\n***\n\nLeading up to Thanksgiving, due to another update in requirements, I had to visit all four contractor teams. I needed to brief them on the changes and to get their feedback on how the changes would affect their ability to submit their proposals. I didn't get much face time with Bonnie, but we did have a lot of steamy phone sex while I was off visiting Lockheed and Martin Marietta.\n\nI hosted Thanksgiving dinner at my place. By then, I'd gotten the second bedroom set up with twin beds and dressers so the boys could stay for the long weekend. Bonnie had helped them pack overnight bags, so they had clothes to change into while there. We offered Grace the couch for the night, but she declined and went home, leaving the four of us together.\n\nI got to practice putting the boys to bed and reading them a bedtime story. I really enjoyed it, and the boys usually fell asleep right away.\n\nBonnie and I got to practice making love quietly so we wouldn't disturb the boys. It took some getting used to, but it was still awesome even without the screaming.\n\nWe spent the weekend decorating my place for Christmas. Matthew and Mark really enjoyed helping me put up the tree and decorating it while Bonnie supervised. It seemed strange having Christmas decorations up with it being sunny and 72 degrees outside.\n\nTwo weeks before the move, we celebrated Bonnie's 33<sup>rd</sup> birthday. We had a birthday party at Grace's place, and a few of Bonnie's friends dropped in to wish her a happy birthday. We left that evening for a quiet dinner and some dancing before going to my place for the night. Grace was keeping the boys for the night, so Bonnie and I could have the night to ourselves.\n\nFinally, Christmas Eve dawned, and I was on leave through January 2<sup>nd</sup>, so I was over to Bonnie's place to finish the move into my condo. Grace was keeping the boys at her apartment, so we could concentrate on finishing the move. We loaded the last of the boxes into our cars while Bonnie's friends gathered up the furniture that Bonnie didn't need anymore.\n\nFinally, the apartment was empty. We finished vacuuming and cleaning. Bonnie teared up a bit as we closed the door for the last time. I held her in my arms until she stopped weeping. She brushed the tears off her cheeks, smiled at me, and said, \"Now we start our life together. I love you, Virginia.\"\n\n\"I love you too, Bonnie,\" I said, my heart aching with the love I had for her.\n\nWe went and dropped the keys off in the office, Bonnie signing the final piece of paperwork so she could get her deposit back. We left and headed to my place, no, our place ... home. I loved the sound of that ... home.\n\nWhen we got home, we pulled both cars into the garage and closed the door. We got out of our vehicles and went to the door. I opened the door, turned off the alarm, and, as I led Bonnie through the door and shut it behind us, turned to Bonnie, took her in my arms, and said, \"Welcome home, my love.\""
    ],
    "authorname": "Candy_Kane54",
    "tags": [
        "cunnilingus",
        "lesbian",
        "lesbian military officer",
        "military officer",
        "oral",
        "lesbian sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/your-silver-nights-and-golden-days-pt-02"
}