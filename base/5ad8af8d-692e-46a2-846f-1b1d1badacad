{
    "title": "Having Sex the Greek Way",
    "pages": [
        "The following story is based loosely on true events, but some details have been altered for the sake of this retelling.\n\n*****\n\nI only had one boyfriend during my entire time in high school. I loved him very deeply and he was the one I had sex with for the first time. We broke up during our sophomore year. For the rest of my time in high school, I never quite got over him and, although I had plenty of guys who were interested in dating me, I never accepted any of their offers. Then, during the first semester of my freshman year of college, I met a man in my introductory anthropology class. He was the first man who actually made me want to start dating again.\n\nWe met on the first day of class. I got to class about half an hour early, as was my habit. Because I was so early and I was the only one there, I took out the book I was reading at the time and began reading it. As I was sitting there, I heard the lecture hall door swing open and someone walk down the aisle between the rows of seats. The man came over and stood for a moment next to the seat next to mine. He looked around, not looking at me. After standing there for a moment awkwardly, he sat down next to me. He sat there for a moment or so before he turned to me and spoke.\n\n\"Do you... do you mind if I sit here?\" he asked.\n\nI looked up at him. I noticed that, despite his awkward demeanor, he was actually quite an attractive-looking man. He had short, black hair, glasses, and a prominent, masculine jawline. He was about average height for a man and clearly very fit. He was wearing a white, long-sleeved shirt and khaki pants.\n\n\"Well, you've already sat down and I haven't stopped you,\" I replied. \"Might've been better if you'd asked before you sat down, though.\"\n\n\"Of course. I'm sorry,\" he said. He gave a slight cough.\n\nWe sat there for a moment, with him just staring off into empty space and me reading my book.\n\n\"What book are you reading there?\" he asked, suddenly interrupting the silence. \"I can't read the title because it's in... I'm assuming that's Greek, right?\"\n\n\"It's The Odyssey: A Modern Sequel by Nikos Kazantzakis,\" I replied, without looking up from the page I was reading. \"And, yes, it's in Greek.\"\n\n\"What's it about?\" he asked.\n\nI looked up at him. He was staring at me. I noticed he had the cutest blue eyes behind those nerdy glasses of his.\n\n\"The title's pretty self-explanatory. It's about Odysseus, the hero of the Odyssey, and his adventures. It picks up where the Odyssey left off. It's been called Kazantzakis's magnum opus. It's considered a masterpiece of mid-twentieth-century Modernist literature. Strangely, though, despite the acclaim it's received, it's surprisingly obscure.\"\n\n\"So how good is it?\" he asked. \"Does it live up to the hype?\"\n\n\"Oh, the poetry is brilliant. The story is fanciful, but interesting. There are things that annoy me about it, though. For instance, the poem clearly isn't set in the real Bronze Age, the portrayal of Odysseus isn't even close to how he's portrayed in the Odyssey, and the portrayal of women is far from progressive. It's a bit slow in places too and he uses a lot of obscure words. Overall, though, it's pretty good.\"\n\n\"Sounds fascinating,\" he replied. \"I'm quite interested in classic literature myself. My favorite novel is The Brothers Karamazov by Fyodor Dostoevsky.\"\n\nI laughed and closed my book.\n\n\"Believe it or not, I still haven't read anything by Dostoevsky. You'd think I would've, but I guess I just haven't gotten around to it.\"\n\n\"Oh, it's all right,\" he said, smiling. Even though he'd started out seeming kind of strange, I discovered I was starting to like him. I realized I was very attracted to him as well. While he wasn't the stereotypical hunk and he seemed a bit awkward, he was really attractive in his own cute sort of way.\n\n\"My name's Joseph Wi\u015bniewski, by the way,\" he told me. \"I'm a computer science major, but I'm interested in anthropology and I'm thinking about possibly doing a minor in it.\"\n\nHe offered me his hand. I shook it.\n\n\"I'm Fereniki Alexandrou,\" I told him. \"I'm a history major.\"\n\n\"I'm assuming you're Greek?\" he asked.\n\n\"Well, my Dad is from Greece,\" I replied. \"I'm assuming you're Polish?\"\n\n\"Yeah. No one can ever pronounce my name,\" he chuckled.\n\n\"No one can ever pronounce mine either,\" I told him, \"which is funny because it's actually pronounced just like it's spelled. Lots of people try to pronounce it ''fee-REE-nai-kai,' but it's actually 'feh-REH-nee-kee.'\"\n\n\"It is a lovely name. It sounds exotic and sensual,\" he remarked.\n\n\"It's an ancient name. It means 'Bearer of Victory.'\"\n\n\"You know, you don't look Greek, what with your blonde hair and blue eyes,\" Joseph remarked. \"You could pass as Scandinavian.\"\n\n\"I get that a lot,\" I admitted. \"People tend to assume there's a certain way people of each nationality 'should' look. For Greeks, everyone assumes we're all black-haired, brown-eyed, and swarthy. Some Greeks really do look like that, but not all of us.\"\n\n\"So, what's your favorite thing to read, Fereniki?\" he asked, scooting closer to me. \"I assume you don't read massive works of Greek poetry all the time.\"\n\nI laughed.\n\n\"I really enjoy reading erotica,\" I told him.\n\nI watched the surprised grin that formed on his face as he registered what I'd just said.\n\n\"Oh really?\" he asked, bemused. \"I never took you for a dirty girl. You look so adorable and innocent. I would've assumed a cute little blonde like yourself would be the purest thing. I suppose that's very wrong of me to assume.\"\n\n\"Oh, I am a dirty girl, believe me,\" I told him. \"I especially enjoy classic erotica\u2014like the really old stuff from before the twentieth century. It's amazing how stuff written so long ago can still be arousing. It can also be amusing because many of the old erotica writers have this weird hang-up about using dirty words. They had no problem describing sexual acts, but the words\u2014oh no, they could never use words like 'fuck' or 'cock' or 'ass.' John Clyland's Fanny Hill is full of all kinds of wonderful filth: lesbian sex, prostitution, gay male sex, sadomasochism. You name it, it's there. Yet, in spite of this, he never once even uses the word 'penis,' because that was, you know, wrong.\"\n\nWe both laughed. He had the cutest laugh.\n\n\"You are so amazing,\" he sighed. \"Where have you been all my life?\"\n\n\"Probably reading,\" I replied with a grin.\n\n\"Probably reading smut,\" he teased.\n\n\"Hey, that's not all I read!\"\n\n\"Oh, don't feel ashamed,\" he assured me. \"Just about every guy I know spends all his time watching porn. A girl can get away with reading as much\u2014what did you call it?\u2014'classic erotica' as she pleases.\"\n\n\"Do you spend all your time watching porn?\" I asked him, giving him a knowing look.\n\nHe grinned. Then he feigned as though he'd been shot.\n\n\"Oh, you've got me!\" he exclaimed. We both giggled.\n\nSuddenly, we heard the door to the classroom open. We both turned our heads to see a group of a few students walk in and sit down in the back row. Joseph quickly directed his attention back to me.\n\n\"Are you are freshman?\" he asked.\n\n\"Yeah. What are you?\"\n\n\"I'm a sophomore,\" he replied.\n\n\"Ooh! A sophomore. Which lab section are you in?\" I asked.\n\n\"I'm in the one that meets on Fridays at 3:00 in the afternoon.\"\n\n\"Oh my gosh! We're in the same one! We can be lab partners!\" I exclaimed.\n\n***\n\nJoseph and I worked together for all the group activities and sat together for all the lectures. We made an awesome team. We were both extremely dedicated students and we both found the subject of the class fascinating. Joseph soon became my closest male friend.\n\nI often found myself sexually fantasizing about him. One night I was lying there on my bed in my dorm wearing a white pajama shirt and pink pajama pants. I wasn't wearing a bra or panties. My roommate was out and my head filled with all sorts of naughty thoughts. Suddenly, he popped into my head. I found myself imagining him naked, imagining his cock, imagining him putting his cock inside me, imagining him fucking me.\n\nI slid my right hand into my pajama pants to feel my bald pussy. It was already soaked. Just thinking about him inside me was enough to make me horny. I stroked my pussy a few times and purred in delight at the sensation. While my right hand was busy stroking my pussy, my left hand reached up under my shirt to grope my right breast. Then I slid my middle and index fingers of my right hand into my opening, imagining that they were Joseph's cock. I moaned at the sensation of them inside me.\n\nI brought my right hand up from my pussy to my mouth. I slipped my middle and index fingers between my lips. I tasted them, licking them inside my mouth with my tongue, relishing the sweet taste of my own juices. I returned my saliva-coated fingers to my pussy and brought them to my clit, which I began to stroke\u2014slowly at first, but then faster. I brought my left hand to my pussy as well. Still stroking my clit with my right hand, I slid first my middle finger, then my right finger into my pussy, then both. I began thrusting in and out with those two fingers, fucking myself, still pretending my fingers were Joseph's cock.\n\nStill furiously strumming my clit with my right hand, I withdrew my fingers from my vagina and brought them to my ass. I followed the same pattern as I had when I slid my fingers into my pussy. First, I slid my middle finger into my ass, then my index finger, then both. Having two fingers buried in my ass while I played with my clit felt amazing. I soon found myself coming hard. I cried out as I came.\n\nOnce I came down from my orgasmic high, I relaxed and slowly drifted off to sleep. That night, I dreamt of Joseph fucking me in my bed in my dorm room. I dreamt of him fucking my in my pussy, in mouth, and in my ass.\n\nThat was not the last time I masturbated thinking about Joseph. After that, I masturbated thinking about him almost every time I was alone in my dorm room without my roommate. In my all fantasies, he was always unbelievably hot and unbelievably skilled in bed.\n\n***\n\nMy attraction to Joseph went much deeper than a mere superficial attraction to his appearance, though; I'd been asked out by plenty of men who were far more physically attractive than he was and I'd turned them all down. There was something about Joseph's personality that I just couldn't get over. He had a sort of unique charisma that I didn't expect from such a usually quiet man.\n\nEven though he often seemed timid, I discovered he was really brave. For instance, there was this one time in our lab section when we were working on a project about the early Australopithecines and the lab instructor, who was a first-year grad student, incorrectly referred to Australopithecus afarensis as \"the first hominin.\"\n\n\"That line about Australopithecus afarensis being 'the first hominin' isn't right,\" I whispered to Joseph after the instructor finished lecturing and we broke into groups for a lab activity. \"Chimpanzees are hominins too, so the last common ancestor of humans and chimpanzees would be a hominin and that was millions of years before Australopithecus.\"\n\n\"You're right; he's wrong. And he's a grad student, so he should know better than to say things like that,\" Joseph muttered. \"The textbook for this class even talks about earlier hominins at length.\"\n\n\"Well, we can't just go up there and correct the teacher,\" I whispered, shrugging it off. \"He'd probably get mad and give us bad grades for everything.\" Joseph didn't respond.\n\nWe moved on with the lab activity, which involved making cladograms based on replica fossil skulls. I forgot about the instructor's error and I assumed Joseph forgot about it too. Then, after we had all finished the lab, when all the other students had left, Joseph stayed behind in the classroom. I stayed behind with him and watched as he quietly went up to the instructor.\n\n\"I hope you don't mind me pointing this out, but what you said about Australopithecus afarensis being 'the first hominin' is incorrect,\" he said with surprising confidence. \"There are, in fact, numerous hominins that have been discovered that predate Australopithecus afarensis, such as Ardipithecus ramidus, Orrorin tugenensis, and Sahelanthropus tchadensis. These hominins are even mentioned in the textbook.\"\n\nThe instructor looked embarrassed.\n\n\"I'm mainly a cultural anthropologist. Human evolution isn't my specialty,\" the instructor admitted.\n\nJoseph and I left the classroom and headed down the hall together. After we were safely out of earshot of the instructor, I instantly expressed my amazement at his courage.\n\n\"Holy shit!\" I gasped in a half-whisper. \"You just corrected the instructor!\"\n\n\"Well, I figured someone had to.\"\n\n***\n\nTowards the end of the semester, in around late November or early December, Joseph and I began regularly meeting up at his apartment to study. We'd meet maybe once or twice a week for a few hours and go over material. The reason why we'd meet in his apartment rather than in my dorm was because his apartment was so much nicer than my dorm. My dorm was in this crappy, run-down building that was around seventy years old and had never been renovated. His apartment, on the other hand, was newly refurbished. Also, unlike me, he didn't have a roommate, so, when we were there together, we had the whole place to ourselves.\n\nHis apartment was small, but cozy. There was a short entry hallway and then a room that was both the living room and the kitchen. The kitchen was off to the right side and there were two doors on the left side, one of them presumably leading to his bedroom and bathroom and the other to a closet. A white couch stood in the middle of the living room. It had a couple of pillows on it and a low white table in front of it.\n\nThere was a window behind the couch, but, since we were usually there at night, the white curtains were usually closed, covering it up. A lamp stood behind the couch and slightly behind it, illuminating the room. Usually, when we studied together, we'd sit together on the couch and put our books and papers on the table.\n\nOne evening in late December, not long before the end of the semester, as we were sitting there studying together, I asked him, \"So, is there a reason why you haven't asked me out yet?\"\n\nJoseph looked stunned.\n\n\"I... uh...,\" he stammered.\n\n\"It's obvious you're into me and it's obvious I'm into you,\" I explained. \"We've been seeing each other for weeks now. I don't have a boyfriend. You obviously don't have a girlfriend because, if you did, I'd know about her. Why haven't you asked me out?\"\n\nJoseph heaved a sigh.\n\n\"Fereniki, you're my only real friend. I've been afraid this whole time that, if I asked you out, you wouldn't want to be with me and you'd walk out on our friendship. I don't want to lose you. Also, I'm not very experienced at dating and... I don't know. I guess I'm afraid I'd mess up.\"\n\n\"Have you ever had a girlfriend before?\" I asked him.\n\nHe bit his lip nervously.\n\n\"I've only had one. I met her at the beginning of last semester. She ditched me after only a week.\"\n\nI frowned.\n\n\"Oh wow, that's actually kind of sad. I'm sorry. Is there a reason for that?\" I asked.\n\n\"She didn't even give me an explanation. She just told me, 'It's over.' Then she left and I never saw her again,\" he said, scratching his head. \"I've been told I'm kind of awkward around girls. I guess maybe she didn't like my awkwardness.\"\n\n\"You are awkward, but it's your awkwardness that makes you who you are. I find it rather charming, honestly. Besides, there's a lot more to you than just awkwardness. You're also smart and sweet. You know, you're actually one of the best guys I've ever met.\"\n\n\"Well, I guess, since you're clearly on board, we can give this whole 'dating' thing a try,\" he grinned.\n\n\"Great!\" I said with a grin. \"We'll have our first date tomorrow.\"\n\n\"What? Where?\" he asked.\n\n\"Oh, relax,\" I told him. \"There's no pressure. We'll start out small. We'll just meet here like we always do. Just because we're calling it a 'date' doesn't mean it has to be all scary and everything.\"\n\n***\n\nThe next day as I was preparing for my date, I put more effort than usual into my appearance. I was determined to get Joseph to have sex with me, so I wanted to make myself look seductive without making myself look like I was trying to look seductive. I picked out my wardrobe very carefully. I put on a pair of tight, light blue jeans and a white blouse. I spent half an hour doing my makeup to make sure it was just right. (I normally only spend about fifteen minutes.)\n\nAs I prepared to leave my dorm, I put on a pair of black leather boots that came up to my mid-calves and a black, long-sleeved leather jacket, which I left unzipped. I stowed a few things in my black purse and slung it over my shoulder as I walked out the door. I made sure to lock it before I headed down the hall and out to the courtyard. I knew the way to Joseph's apartment by heart because I had been there so many times before. This time, though, walking there felt different. I knew something big was going to happen. I could just feel it in my bones.\n\nI walked for quite a while, but it was such a nice day that I didn't mind. I loved the feeling of the cool breeze as it bristled past every so often, ruffling my blouse and my long, blonde hair. There were lots of people out walking and, as I was walking, I occasionally caught men checking me out. I looked down and noticed that my blouse was a little bit tighter and showed a little bit more cleavage than I'd thought it did. \n\nI could feel myself growing horny with anticipation. By the time I reached his apartment door, I was feeling very aroused and ready for a long night of fucking.\n\nI knocked on the door. Joseph opened it. I immediately threw my arms around him, giggling. He squealed in surprise.\n\n\"At least warn me before you do that!\" he exclaimed. Pretty soon he was giggling too, though. We shut the door and Joseph locked it.\n\n\"So, boyfriend,\" I asked, sitting down on his couch in my usual seat, \"what do you want to do on our first date?\"\n\nJoseph sat down next to me in his usual seat.\n\n\"Well, uh, I don't know. I guess we can do boyfriend/girlfriend stuff together now, can't we?\" he stammered.\n\n\"By 'boyfriend/girlfriend stuff' I assume you mean 'sex'?\" I asked, grinning knowingly.\n\nHe suddenly looked nervous.\n\n\"Uh, yeah... sex and... you know, other stuff,\" he muttered, stumbling over his words.\n\n\"Relax,\" I told him. \"There's nothing scary about sex. You have had sex before, right?\"\n\n\"I've had it twice. Both times with my previous girlfriend,\" he explained.\n\n\"Well, I don't see what you have to worry about, then,\" I declared. \"You and I are comfortable with each other. We've both had it before, so we both know what we're doing. Besides, any sex with you will be great. I just know it.\"\n\nHe grinned like a schoolboy.\n\n\"Really?\" he asked. \"I'm so amazed you think\u2014\"\n\nI giggled, leaned forwards, and kissed him on the lips. It was only a soft peck, but, when I pulled away and looked at his face, I saw he was ecstatic. He lunged forwards, grabbing my face in my hands and kissed me much more forcefully than I had kissed him. Without breaking the kiss, I climbed on top of him, straddling him between my legs. Soon we were making out all over each other.\n\nAs we kissed, I could feel myself growing more and more aroused by the second. My pussy was getting so wet that I could feel my juices soaking through my panties and even through my jeans. My right hand reached down to feel his groin and I felt a massive lump in his pants that indicated he had a very large hard-on.\n\n\"Well, someone's excited,\" I whispered, breaking off the kiss. He reached down and felt the wet spot between my legs.",
        "\"I think someone else is too.\"\n\nI reached down and touched his cock through his pants. He gasped at the sensation of my hand touching it.\n\n\"Oh, you like that, don't you?\" I purred, softly stroking him with the palm of my hand. \"I bet you can't wait to see me naked. I bet you're eager to see what my body looks like underneath all these clothes. Tell me; which part of my body do you want to see first?\"\n\n\"I'd love to see your boobs,\" he replied.\n\nI feigned shock.\n\n\"Joseph, I am a lady! You can't use words like 'boobs' around me! That sounds childish. No, they're not 'boobs'; they're 'tits.' They're delightful, jiggly tits.\"\n\n\"My apologies,\" he said. \"I'd very much like to see your tits.\"\n\nLaughing, I removed my hand from his cock and lifted up my blouse, flashing him my bra-covered tits.\n\n\"Fereniki, you are such a naughty girl,\" he gasped.\n\n\"I know. And I'm going to corrupt you and turn you into a naughty boy,\" I promised, wrapping my arms around him and pressing my breasts against him.\n\n\"I look forward to that,\" he said. I giggled.\n\n\"Now it's time for the real fun to begin,\" I told him, standing up. \"Now be silent and watch.\"\n\nI walked over to the other side of the room. Then I turned around and began to walk towards him, swaying my hips, trying to look as sexy as possible. His mouth hung slightly agape and his eyes stared wide and unblinking as I approached. I relished that look of pure awe on his face.\n\nSoon I was standing right in front of him. I set my purse down on the table, bending over to display my ass as I did so before turning back around to face him. He kept staring at me silently as I stripped off my leather jacket and tossed it on the floor to my right in front of the couch. I took off my blouse as well, leaving my white bra as my only top covering.\n\nIn one swift, movement, I climbed on top of him, straddling him between my thighs as I took his face in my right hand and removed his glasses with my left. As soon as I was on top of him, I could feel his stiff manhood pressing through both our pants against that damp opening between my thighs that ached for it. He seemed even harder than he had been before.\n\nLeaning forwards, I planted a full-on, open-mouthed kiss on his mouth, running my tongue along his lips as I did so. I drew back and, as I did so, slid the fingers of my right hand into his mouth. I watched the look on his face as I withdrew them. I brought my hands to his and dragged them to my hips. He let out a gasp and grasped my butt through my pants.\n\n\"You said you wanted to see my tits,\" I whispered, pulling his hands up my back. \"Now it's time for you to see them.\" I removed my hands from his. He dutifully used his newly-freed hands to unfasten my bra. As his hands fumbled with the hooks, I pulled his head closer to my breasts.\n\nOnce he had unfastened my bra, he drew back and I slid it off, revealing my breasts to his gaze. He gave an audible gasp upon seeing them. His eyes lit up and he reached out to grope them. He placed his hands on my breasts and I placed my hands over his. He grinned like a little boy being presented with a new toy for the first time.\n\n\"Oh yeah. Holy shit,\" he gasped under his breath. I pressed his hands firmly against my tits and rubbed them all over my chest, reveling in the sensation of his hands pressed against me. I couldn't believe how wet and aroused I was getting. I could feel my wetness seeping through my own pants and onto Joseph's khakis. I could tell Joseph was enjoying fondling my breasts even more than I was from the juvenile grin on his face and his lustful heavy breathing.\n\n\"Fereniki, you have the most perfect tits I have ever seen,\" he whispered to me.\n\n\"I know,\" I purred. \"I love them too. I love playing with them myself.\"\n\nI removed my hand from his and wrapped my arms around his neck as I began rubbing my crotch through our pants against his member. I heard another gasp escape his lips, this one softer than the one that had accompanied my removal of my bra.\n\nHe brought his mouth to my right breast and kissed me right on my nipple. As I continued grinding my crotch against his cock, he suckled my nipple in his mouth. I rejoiced at the sensation of his wet lips and tongue against my sensitive teat. I could hear the sweet smacking of his lips as he withdrew them. I took his face in my hands and kissed him again on the lips. This time, the kiss was longer, more passionate.\n\nWhen I withdrew from the kiss, I slid my hands down his shoulders, down his arms, to his hands, which were resting at my hips. I lifted his hands and brought them back to my breasts. That wonderful, boy-like grin returned to his face as I once more used his hands to fondle my breasts. Removing my hands from his and bringing them to his shoulders, I leaned in to kiss him again. This time, he leaned forwards slightly as he kissed me back.\n\nWhen I pulled away, he moved forwards, laughing slightly, still resting his hands on my breasts. I sat there, still grinding on him, and let him enjoy my breasts for a moment before I pushed him back against the couch with a small amount of force. Then I reached down with my right hand to grab his cock through his pants. I began manually stroking him through his pants, feeling how big he was. This caused him to give several gasps of sudden pleasure. Still stroking him with my right hand, I held him by the neck with my left and kissed him again on the lips.\n\nWhen I pulled away from the kiss, I ran my left hand through my long, blonde hair to pull it out of my face and then placed that hand on his shoulder to stabilize myself, all the while still stroking his cock with my right hand. He laughed slightly. Removing my hand from his cock and placing it on his chest, I leaned for one last, quick kiss before I climbed off his lap and stood up in front of the couch.\n\n\"Have you ever kissed a woman the Greek way?\" I asked, grinning mischievously.\n\n\"What do you mean?\" he asked, confused. I laughed. He was so innocent.\n\n\"I mean, have you ever licked a woman's ass?\" I asked him more directly.\n\nHe gaped at me.\n\n\"My God, Fereniki, you are such a naughty girl. I wish I'd known you were like this when we first met; then I would've had sex with you then.\"\n\n\"I take it that's a no?\" I asked him.\n\n\"No. I've never...\"\n\n\"Oh, you absolutely must do it with me, then,\" I told him. I turned around, putting my glorious, still-clothed ass right in front of his face.\n\nI reached around behind me and took both of his hands and guided them to the front of my pants where my fly was. He knew exactly what I meant for him to do. With a loud grunt, he unfastened and unzipped my fly. Together, we both pulled my jeans down to my knees. He pulled down my white panties, letting them fall to my knees as well. This left my bare ass totally exposed, right in front of his face.\n\n\"Oh God, Fereniki, your ass is even better than your tits,\" he gasped, grasping it with both his hands, one cheek in each hand. \"It's so firm and round and... oh God. It's wonderful.\"\n\n\"If you love it, kiss it,\" I commanded. I reached around with my left hand and placed it on top of his head, gently pulling him closer to my perfect ass.\n\nI felt his hot breath against my buttocks as I slowly drew his face closer to them. I felt him bury his face in my ass. I felt his lips press against my tight asshole. I felt his tongue slide out from between his lips and lick my ass. For the first time that night, I let a soft moan escape my lips. I leaned forwards. I felt his hands reach around and grasp my thighs, holding them in place. Then I felt his right hand leave my right thigh as his tongue left my ass.\n\nFor the first time that night, I didn't know what he was going to do. Then I felt the hand he had removed at the entrance to my pussy. Suddenly, I felt him plunge his middle finger into my depths. I let out another moan, this one louder than the one before. As he plunged his finger in and out of my tight wetness, I reached down with my right hand to touch his hand, letting him know I was still in control. Then I relaxed, removing my hand and closing my eyes, enjoying the sweet sensation of his finger buried inside my cunt. I was moaning softly and continuously to let him know how much I was enjoying what he was doing to me.\n\nAfter a few minutes, he removed his hand and returned it to my right thigh. He brought his lips back to my ass to continue eating it out. Slowly, I felt him move lower as he brought his lips to my pussy. I threw my head back and let out a moan of pure ecstasy as I felt his soft, wet tongue exploring my damp folds. I could tell that, despite his earlier timidity and his lack of dating experience over all, he had quite a bit of experience at this. Indeed, he was an expert. His tongue massaged my pussy in the most perfect, heavenly way.\n\n\"Mmmmm,\" I moaned, \"Joseph, where did you learn how to eat pussy like this? You're amazing.\"\n\nHe didn't answer; he just kept eating me out. He kept at it for several minutes. With my eyes still closed, all I knew was that perfect, divine tongue gracing my pussy lips. It was bliss. Then I decided to return the favor. I placed my hand on his head and turned around. As I did so, he removed his hands from my thighs and his face from my pussy. I knelt down before him and watched as he slid his finger on his right hand that had been in my pussy in his mouth.\n\n\"I love the way you taste,\" he told me. \"Every woman's pussy tastes a little bit different. Yours is the most delicious one I've ever tasted.\"\n\n\"You said you've only had sex with your ex-girlfriend, but was that including oral sex? Have you tasted many pussies?\" I asked him. He frowned.\n\n\"No,\" he admitted, \"I must confess that, until tonight, I'd only ever tasted one\u2014my ex-girlfriend's\u2014but I'm sure that, even if I tasted a thousand, yours would still taste the best.\"\n\nI giggled.\n\n\"I'll bet you actually have tasted a thousand pussies and you just say that to all the women you seduce to make them feel special,\" I teased.\n\nIf what I said was the truth, though, then it was still working. Joseph really was making me feel special. I like to pretend that I'm above flattery, but, in all honesty, I'm really just as susceptible to it as anyone else. I suppose flattery truly is an excellent way to a woman's heart\u2014or anyone's heart for that matter.\n\n\"Now it's my turn to taste you,\" I replied, unfastening his belt. I unzipped his fly and pulled down his underwear to reveal his tremendous manhood, which was already very hard. I grasped it in my right hand, stroking it up and down. Then I slowly brought my lips to the tip of his granite shaft and placed a gentle kiss on his urethral opening, which was already oozing a tiny bit of white pre-cum. I licked the tip of his cock with my tongue before immediately sucking the tip into my mouth. I swirled my tongue across the bottom of it while still stroking the lower portion of his shaft with my hand. He groaned with delight as I did this.\n\n\"Ohhhh, Fereniki,\" I heard him gasp.\n\nWithdrawing my lips, I ran my tongue along the entire bottom of his shaft, coating it in my saliva. Then I spat on his cock and stroked him for a moment or two, using my own saliva as lubricant.\n\n\"I love the feeling of your giant cock growing and stiffening in my hand as I stroke you,\" I whispered, \"but I love the way it tastes in my mouth even more, the way it feels against my tongue, that sensation of it filling my mouth. I can't wait to feel it inside my pussy.\"\n\n\"I can't wait to feel it inside your pussy either,\" he whispered back.\n\n\"Do you want me to suck your balls?\" I asked.\n\n\"Oh yeah. Go for it,\" he told me. Still stroking his cock with my hand, I brought my mouth lower and licked his scrotum. I slowly suckled his right testicle into my mouth, swirling my tongue all over it as it was in my mouth. Then I suckled his left testicle, subjecting it to exactly the same treatment.\n\n\"Oh that feels so good... so good,\" he murmured.\n\nThen I returned my attention back to his shaft and finally took him all the way in my mouth. His cock was fairly huge and it couldn't all fit, but I could fit more than half of it. I started bobbing my head up and down along his shaft, still stroking the lower portion that I couldn't fit into my mouth with my hand. He was laying back against the couch, groaning softly as I blew him. I could tell from his groaning that he was in heaven. I loved the feeling of his hard cock in my mouth. I loved the thought of how much pleasure I was giving him.\n\n\"Ohhhhh... yeahhhhh,\" he groaned. I could tell he was about to come, so I pulled my lips away. As I did so, I felt a string of my own spit dribble down my chin and neck. I simultaneously slowed my stroking to a halt.\n\n\"No, you can't come yet,\" I told him. \"The night is still young and there is so much more pleasure yet to be had.\"\n\nWith that, I stood up and started to pull down his pants. He pulled them down the rest of the way himself, letting them fall to the floor. Now his only covering was his shirt, which he had still not taken off. I removed my boots. Then I removed both my jeans and panties as well, leaving myself completely naked.\n\nI climbed on top of him, straddling him with my legs. I put my right hand on his left shoulder and my left hand on the back of the couch behind his right shoulder to stabilize myself as I slowly lowered myself onto his cock. We both let out simultaneous moans of delight as I felt his enormous member slowly sink deeper and deeper into my wet sheath, filling me up. Finally, he was buried all the way in me, all the way up to the hilt. The feeling of him inside of me was a sensation of pleasant fullness, of being physically complete.\n\nHe put his hands on my hips. Then I began to furiously ride his cock, bouncing up and down. He helped me by supporting my ass with his hands. It was both exhilarating and exhausting. I loved being in control. I loved the sensation of his stiff manhood pistoning in and out of my wet cunt at such a rapid, rhythmic pace as I bounced up and down on it.\n\nI could feel the sweat dripping through my hair, down my face, down my tits. I could hear the furious pounding of my ass smacking against his thighs so rhythmically it was almost like a song\u2014a song of fervent, lustful passion. I was panting and moaning uncontrollably, but I kept going for the sake of my own pleasure and for his.\n\n\"Oh God, Fereniki, you are Greek goddess. Oh fuck, no one's ever fucked me like this. Oh, holy shit,\" Joseph panted.\n\nFinally, after several minutes of that intense riding, I came to a pause. I slid myself forwards and backwards with his cock still inside of me. Then I returned to my intense riding. I was able to keep going for several more minutes before I had to take another break. This time I paused for a bit longer so I catch my breath before I went back to fucking him. I was slower this time, since I was tired, but I was able to keep at it for several more minutes.\n\nAt long last, I collapsed on top of him as he was lying back against the couch. His hand groped my breasts as I panted, still wiggling my hips as his cock throbbed inside my sheath. I was utterly exhausted, drenched in sweat, and panting like mad. I rested my head on his shoulder as he began thrusting upwards into my tight wetness. I used my right hand to guide his right hand between my legs to play with my clit as he continued to thrust into me.\n\n\"Oh, holy fuck! Joseph, I'm coming!\" I gasped. I felt my first orgasm of the night wash over me. It was not a very intense orgasm, but it was good nonetheless. As I came, I felt my pelvic muscles contract and my pussy clench around his cock. He apparently couldn't hold back any longer, because I heard him groaning beneath me and his cock twitching as he spurted his seed inside me.\n\n\"Hold on for a moment,\" I gasped. \"I need to rest.\" I lay there for a moment on top of him with his cock still buried in my cunt, resting. Strangely, even though he'd already come, he was still hard as ever.\n\nAfter a minute or two, I had managed to catch my breath. I stood up, his shaft sliding out of me as I did so. Impressively, even though it was no longer in me, I saw that his dick was still standing fully at attention even now, as hard as it would've been had he not just come at all. I had to give Joseph credit; the dude had impressive stamina, especially for someone with so little experience.\n\n\"Turn over onto your left side,\" I instructed. \"We're going to do the spooning position so we can continue fucking while I rest.\"\n\nJoseph turned onto his left sides and I lay down next to him on my left side as well. He slowly inserted his cock back into me as we lay together on the couch. He waited for a moment and then began slowly thrusting into me. We both moaned. Reaching around with his right hand, he groped my right breast. Then, still clutching my breast, he began to fuck me harder and faster. I couldn't help myself from moaning as he took me. He paused for a moment and I turned my head for a moment so he could kiss me. Once that kiss was over, he began to fuck me even harder and faster than before. Then, after a few moments, he stopped and kissed me again.\n\n\"I think I'm ready to do doggy now,\" I told him. He grinned as I turned over onto my front with my arms and legs beneath me, holding me up. His cock slid out of me as I did so. I felt empty without him inside me and I longed for him to re-enter me. He rose to his knees and then kissed my right ass cheek. Then I felt his cock slowly press against my opening. I felt him slide it in. He grasped my hips with both his hands and began to pound me hard with just as much fury and intensity as I had pounded him earlier.\n\nI closed my eyes and concentrated on that perfect, heavenly sensation of him thrusting in and out. I mewled and clung to the cushion beneath me with both hands for dear life as he fucked me. Opening my eyes, I looked back at him for moment to see that glorious sight him pounding against my ass. I could hear the fervent smacking of his flesh against mine.\n\nThat was just the beginning, though; he kept going, pounding me even harder than before, harder than I'd ever been fucked before. Each time he thrust into me, I felt like I was being pummeled with pleasure. I was moaning out of control and dripping with sweat. I reached down to play with my clit as he kept plundering my depths. I rubbed it furiously in circles. I could feel my second climax approaching. I was right on the brink. I clenched my eyes shut as tightly as I could, bit my teeth into the pillow I was resting on top of to keep myself from screaming, and clung to the couch for dear life as the miraculous sensation of orgasm washed over me.\n\nWhile I was still panting as I came down from that orgasm, he grabbed me and pulled me pulled me upright so that I was standing on my knees with my back to him and his cock still buried in my pussy. He reached around with his right hand and grasped my left breast, clutching it lovingly as I began to thrust backwards against him, moaning out my pleasure as I did so. Then he began to thrust forwards into me.\n\nHe grabbed my arms and pulled them behind him, leaving me helpless as he began to fuck me with all the madness and fury he could muster. He reached around with his right hand to play with my clit as he thrust into me. He clutched his left hand around my neck, choking me slightly as he held me close to him. He pressed his mouth close to my right ear and I felt his hot breath against my neck. I let out a loud moan, almost like a scream, as I felt my third orgasm of the night wash over me.\n\nAs I came down from my peak, I turned my head to kiss him again on the lips. His left hand was gone from my throat at this point and his right hand, which had been playing with my clit, slid up my body to my neck as we kissed.\n\n\"Tell me something,\" I asked him. \"Earlier you said you'd never kissed a woman the Greek way before, but have you ever fucked a woman the Greek way?\"",
        "His face beamed as it dawned on him what I was implying.\n\n\"You mean... you're saying... you want it in your ass?\" he asked, seeming to scarcely believe the words he was saying.\n\n\"Why not?\" I asked, grinning. \"It's the only one of my holes I haven't taken you in.\"\n\n\"Well, let's go for it then,\" he said.\n\n\"We'll need lube,\" I told him. \"Thankfully I have some in my purse.\"\n\n\"Do you just carry it around with you everywhere or did you know we'd be doing this tonight?\" he asked.\n\nI grinned.\n\n\"Possibly the latter,\" I told him.\n\nI reached over to grab my purse off the table where I had set it down. I unzipped it and took out a small bottle of water-based lube. I handed it to him.\n\n\"You'll probably want to use most of that,\" I advised. Lying on the couch in the prone position with a pillow under breasts and my head turned, I watched as he poured the lube all over his cock and all over my ass. Once the lube had been poured, I returned to resting on my knees and elbows in the doggystyle position.\n\n\"Use your finger first to loosen me up,\" I instructed. I felt him slip one lube-covered finger into my ass, then another. I moaned as he thrust those two fingers in and out. After playing with my ass for a few moments, I felt him withdraw both his fingers.\n\nThen I felt him slide his cock between my ass cheeks into the tight hole that eagerly awaited it.\n\n\"Oh God,\" I moaned, feeling my sphincter being stretched by his tremendous girth. I pushed with my bowel muscles to accommodate as much of his cock as I could. Even so, my asshole was so tiny and tight that he could only fit about half of his cock into it.\n\n\"Holy shit, Fereniki, your ass is the tightest thing I've ever felt around my cock,\" he gasped as he began slowly sliding his dick in and out of my asshole. We had enough lube that it slid in and out easily. The sensation of him ravishing my ass was utterly amazing. He was going much slower than he had been when he'd been fucking my pussy, but it still felt so much more intense. After a few minutes, he started to go faster. I felt my ass starting to burn slightly from the friction.\n\n\"That's starting to hurt. Use more lube,\" I told him. He dutifully slowed down. Removing his right hand from my hip and grabbing the bottle of lube from where he'd left it, he poured more of the liquid onto his cock and my asshole as he continued fucking me. Then, setting down the bottle and returning his hand to my hip, he began to speed up again. Soon he was going even faster than before. With my right hand, I reached down to play with my clit. \n\n\"Oh my God! Oh my God! Fuck, fuck, fuck, fuck, fuck!! I'm gonna come! I'm gonna come, baby! OH!! OHHHH!!\" I screamed.\n\nAfter less than a minute of me rubbing my clit as he pummeled my ass, I felt myself coming. This time, the orgasm was so much more intense than any of my three previous orgasms that night. I couldn't stop myself from screaming as I came. In that moment, I thought it was the most intense euphoria I'd ever experienced. I felt every muscle in my body contracting, my toes curling, my fingers digging themselves into the pillow I was clinging to. The orgasm lasted at least a full forty seconds.\n\nJust as I was coming down from my orgasm, I heard Joseph groaning. I felt his cock pulsing inside my ass as he spurted his seed into my rectum. I felt him pull out of my ass, still spurting, and he sprayed his jizz all over my ass and back. I giggled.\n\nOnce he was done spurting, I reached around with my right hand and collected some of his cum on my fingers. Turning onto my side, I brought my hand to my mouth and licked all of his seed off. I've been told cum is supposed to taste nasty, but his tasted sweet and delicious. (Honestly, all the cum I've ever tasted has tasted delicious, but that's a story for another time.)\n\nThen I brought my lips to his and kissed him. I was sure he could taste himself on my lips. Breaking off the kiss, we both grinned at each other for a moment, both of us proud of our performance. We both sat upright and I kissed him again, feeling his cum tricking down my back onto the couch as I did so. We made out passionately for several minutes, vying together with our tongues.\n\nThen, when I could kiss him no longer because I was too tired, I fell back against the couch, utterly exhausted. I was soaked in sweat and lube and cum. My ass and my pussy both felt unbelievably sore from the intense fucking I had just taken. The room was filled with the pungent smell of sex.\n\n\"Fuck, that was amazing!\" I gasped.\n\n\"You're telling me?\" he laughed. \"You may look innocent, but you are a tigress.\"\n\n\"I'm astonished you did so well considering how little experience you have,\" I told him. He grinned.\n\n\"Well, you did most of the work. Over half the time I was just doing what you told me to do,\" he said.\n\n\"Don't sell yourself short; you did a lot of things I never even suggested.\" I sat upright and brushed some of my sweat-soaked blonde hair out of my face.\n\n\"Dear God, what time is it?\" I wondered, picking up my purse and pulling out my phone. I saw that it was 1:34 a.m.\n\n\"Were we really fucking for that long?\" I asked, scarcely believing that it could have gotten so late so quickly. I stood up and packed my phone and the now-empty bottle of lube into my purse, which still had my book in it. Joseph began picking up his clothes off the floor. I began doing the same.\n\n\"Do you mind if I use your shower?\" I asked him.\n\n\"No. I don't mind at all,\" he replied. \"Actually, I think I'll join you.\""
    ],
    "authorname": "Fereniki_Alexandrou",
    "tags": [
        "blonde",
        "blowjob",
        "bookworm",
        "college student",
        "cunnilingus",
        "greek",
        "innocent",
        "oral sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/having-sex-the-greek-way"
}