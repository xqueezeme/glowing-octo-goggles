{
    "title": "Lost & Found Ch. 03",
    "pages": [
        "Many, many thanks to Mriceman1964 for his editing and reality-checking of me at every step of the way, and equal thanks to Firefly for reading, correcting and critiquing as and when she saw fit, as well as her exquisite command of the English language.\n\nIf you like this, please rate it, if you didn't please tell me why; if you want to be nice, please do so, if you want to be nasty, be my guest, I'll only delete it, because I can, this is the power I have...\n\nFor those who are interested, this chapter finishes-off Robbie and Casey's story, but there is a companion piece in the pipeline, a coda, if you will, that will draw a line under the various stories alluded to that didn't actually have any place in the main narrative. \n\n_____________________________\n\nPart 3: Mene, Mene, Tekel, Upharsin: Daniel 5:25\n\n++++\n\nCasey stretched luxuriously, revelling in the relaxed feeling as she did so, watching Robbie eye her appreciatively. His expression changed from a tiny smile to a grin as he stood up and pulled her close for a kiss and a tight hug.\n\n\"Casey\" said Sarah, \"Robbie's right, you know, you should visit your parents, if only to say good bye. No-one here will think any the less of you for it; in fact, it's the right thing to do. If you really do mean to end that part of your life, that's the way to do it. I don't mean to tell you what to do, heaven forbid, but I do want you to do what's right.\"\n\nCasey smiled wanly at her. \"You're right, Mrs. Anderson, and you shouldn't have to remind me of that; I'm sorry, of course I'll go and see them, and let them know what's happened, and say my goodbyes; I owe them that, at least.\"\n\nRobbie patted her flank encouragingly. \"That's my girl!\" he smiled, and Casey smiled back her eyes dancing over his. \"That's right; I am your girl, now and always, Robert Anderson!\"\n\nNeither one of them noticed the late-model graphite Buick Regal prowling past and disappearing into the distance, or the figure inside, head turning to stare at them as it purred past the house.\n\n\"Don't forget, our flights are at 11 o'clock tomorrow, so why don't you do it now and get it over with? We don't really have time in the morning, and they won't be there together anyway; isn't Tuesday morning your mother's Book Club or something?\" asked Robbie, and Casey looked curiously at him.\n\n\"How on earth did you remember that, baby?\" she asked, and Robbie grinned. \"I have perfect recall, plus, she always used to kick me out on Tuesdays if I was home in case I embarrassed her in front of her friends!\" \n\nCasey grinned, but she couldn't quite suppress a sudden wash of guilt as she remembered being sent to tell Robbie on those days to clear off, mom had guests and she didn't want him around. The expression on his face right now told her he knew exactly what was going through her mind, but he pulled her close and gently tweaked her nose\n\n\"Hey, all forgotten, remember? It's all new from now on, OK, Case? This is our new beginning; all that old stuff, we've brushed it away, let it stay gone!\"\n\nCasey pulled his head down and kissed him, wondering at the ease with which he'd dismissed all the hurt of the past, and feeling him smile against her lips then kiss her back quickly and tug her back to the lounger. \n\n\"I need to spend an hour with Joey at seven o'clock, then we're going out to dinner,\" he said, \"So you've got a couple of hours to do your thing. Joey and I'll come with you, just in case Steve tries to get funny with you or anything, sound good to you?\"\n\nCasey looked at him in wonder. \n\n\"You'd really come back to that place? After all we did to you there?\"\n\nRobbie grinned. \"Yeah, 'course, anything for you, babe!\" \n\nRobbie, Joey, and Casey had just finished working out what she was going to tell her parents when suddenly there was no need. A screech of tires and the slam of car doors brought their attention to the front of the house, to see Steve and Angie stalking up the sidewalk toward the house, Steve with a furious expression on his face.\n\n\"Casey, get the hell down here right now!\" bawled Steve as he saw her with her arm around Robbie and reddened when she looked calmly back at him, and slowly shook her head.\n\n\"God damn it, Casey, get your ass down here now, that's an order!\" he screamed, walking up to the porch. Robbie stepped forward and pushed Casey behind him.\n\n\"That's far enough, Steve!\" he said, and Steve stopped dead, hearing the resolve and implied threat in his voice. His anger made him reckless, though, and he couldn't keep quiet.\n\n\"So you came back, you spineless little bastard, you finally managed to slink back into town. Where you been, dummy? Or have you been hiding here with these losers all this time?\"\n\nJoey stirred at that but Robbie motioned him back.\n\n\"Talk's cheap, Steve, and that's all you've got. You said your piece, Casey's staying with me, and you're not wanted here. Go home.\"\n\nSteve swelled up. \"She's your sister, you fucking pervert! Are you so starved for some ass you got to tap your sister? It makes me want to puke! I swear to God, I'll kill you for this, you fucking degenerate!\"\n\nRobbie slowly looked him up and down, and said again, so soft it was barely audible; \"I asked you once, Steve, now I'm telling you; go away, you're done here, and we're busy.\"\n\nSteve stared, and then flushed. He'd been dismissed, by his own son, and that rankled. He switched his gaze to Casey.\n\n\"Are you gonna stand there and tell me you'd rather live with that...that degenerate piece of shit than come home and live like real people? He's a fucking loser, is that what you want, a life with a loser?\"\n\nCasey spoke up. \"He's not a loser, and I don't care what you say, or think; I'm staying with Robbie. I love him, and he's what I need, not you, never again. You should go now, Dad, really.\"\n\nSteve stood, silently mouthing, and Angie decided to say something. \"Casey, this is wrong, what you're doing is wrong, and sick; he's your brother, for God's sake!\"\n\nCasey looked back steadily, and once again, slowly shook her head. \n\n\"I don't care. He loves me, and he makes me happy, and I want him. We're going away again, and you can wish us well, or hate me forever, but I'm still going with him. I know you've never cared about Robbie, both of you gave him nothing, not your love, not your time, nothing his entire life, and you made me just like you. But not anymore. I've changed, and now you have a chance to change too, dad. I know why you're here, but I'm with Robbie now, and you'll never be able to do that to me again, I won't let you. I love you, mom, and I guess I even love you too, dad, but I love Robbie more. Look at him, Mom, he's a wonderful man, he's your son, why won't you just accept him? I had to lose him to find him, but he's here now, you won't have to look for him, he came back. Try, Mom, for once in your life, just...try and love your son.\" \n\nCasey looked at Robbie, then walked down to take her mother's hands in hers. \"Try it mom, try to see Robbie, for once in his life; he's your son, not some nobody, try and be his mom, and let him know it's OK. Can you do that? For me?\"\n\nAngie looked at her, then at Robbie, wavering, impressed by her daughter's eloquence, and her obvious feelings for Robbie, but her feeling that this was wrong still swelled strong within her.\n\nAs she wavered, Steve decided things for her by grabbing Casey's arm to yank her away from Angie and shake her like a terrier with a rat. \n\nSuddenly, Robbie was there, to pull Steve's hand off Casey and effortlessly shove him staggering backwards, his arms flailing to keep his balance. Robbie turned to ask Casey if she was OK, and Steve closed in again, his fist cocked and intent to hurt Robbie writ large on his face. \n\n\"Dad, no!\" screamed Casey, and Steve's hand lashed out, backhanding her, and sending her flying. Robbie spun, there was a meaty, butcher-shop sound, and Steve was flying across the sidewalk to collide heavily with the car and slide limply to the ground. Joey came running down to pick up a stunned Casey, and hand her back to Robbie, who gently inspected the reddening mark on her cheekbone where Steve had struck her.\n\nJoey walked over to Steve, who was stirring groggily, blood pouring from his nose and split lip, and nudged him with his foot.\n\n\"Get up, you piece of shit,\" he said almost conversationally, \"you hit my sister. That means I get to tear you a new one, so get on your feet, Daddy!\"\n\nAngie's head snapped round to stare at Joey. \"What did you say?\" she demanded, and Joey grinned mirthlessly, dislike showing on his handsome face and curling his lip. \n\n\"I called him Daddy. He knows why, he knows who I am, he always has, isn't that right, Daddy?\"\n\nSteve looked groggily at Angie. \"He's lying, how can you listen to this...shit from this fucking nobody? They're a pack of liars and fucking losers, all of them. Just get in the car!\"\n\nAngie stayed where she was, trying to process what had just happened. She looked at Joey again. \n\n\"Is it true, really, you're his...son?\"\n\nJoey cocked an eye at her. \"Why do you think mom had me look out for Robbie all his life? Because he was my kid brother, and none of you ow-life's ever did a damn thing for him! And before you ask, I'm not gonna start calling him daddy or asking him for his love and be all vying for his attention; no, when this lying little sack of shit stands up, I'm gonna beat the crap out of him for attacking my family and threatening my brother. Nobody comes to my mom's house and tries to fuck with my family, you hear me... daddy?\" \n\nAngie sat down on the porch stair, her head spinning, and Sarah, who'd been a silent witness while this whole episode unfolded around her, suddenly felt a rush of sympathy for her, but not enough that she felt compelled to go down there and offer her some comfort. Angie Dolan had been a willing participant in this, had been one of the prime causes of it way back; she would have to see it through by herself.\n\n\"Joey, leave him, please!\" begged Casey, and Joey grinned at her. \"Sure thing Sis, for you, anything!\" He ambled back to the porch, slapping Robbie on the arm as he passed.\n\n\"Teach him some manners, bro!\" he grinned, before rejoining Karen and Sarah on the porch.\n\nSteve staggered to his feet and stood to glare at Robbie,\n\n\"This isn't over, you fucking sick little bastard, you and that little whore are fucking doomed, you hear me? Angie, get in the car, we're leaving!\"\n\nAngie stayed where she was.\n\n\"When were you going to tell me, Steve? When were you going to tell me about you and Sarah, about your...son, all of it? It must have happened just before we got married; you were playing even then? I always forgave your...indiscretions, but you had a child, right here in town, and you hid it from me...!\"\n\nSteve's face worked as he tried to say too many things at once, and he came to a decision. Lurching over to Angie, he grabbed her by her upper arm and hauled her upright, ignoring her cry of pain. Suddenly Robbie was there. He clamped his hand on Steve's forearm with crushing force, making Steve cry out in pain himself, and forcing him to let go of Angie.\n\nSteve swung his free hand at Robbie, and Robbie leaned away, caught his arm and twisted it, making Steve cry out again.\n\n\"I promised you once I'd break your arm if you ever tried to hit me again. Back off now, Steve, I'm warning you!\" stated Robbie, his face calm, no a trace of anger, just possibly, a tinge of regret that nothing had changed in his father, nothing at all.\n\nRobbie marched his father back to his car, and gave him a push that sent him sprawling against it again.\n\n\"Go away, Steve, you're done here, please don't make me do this!\" he stated, watching the intent rise again in Steve's eyes. Robbie sighed; did this man never learn? \n\nSteve lurched upright and stared at Robbie.\n\n\"I'm still your father, you little prick, and you'll do as I tell you. Lay off your sister, or I'll kill you!\" he gritted, his face flushing as Robbie shook his head.\n\n\"Get lost, Steve, go away and stay away, we're done here. You're not my father, and you'll get hurt if you keep attacking me. Just go.\" stated Robbie, and the anger flared up large in Steve, overriding any common sense he might have still possessed.\n\nWith an inarticulate bellow, he swung a punch with everything he had, all his anger and frustration packed inside it, and once again, as so long ago, his fist smacked into Robbie's outstretched hand. Robbie closed his hand and twisted sharply, there was a sickening crackling noise and Steve screamed as his wrist snapped and his arm fractured at the elbow.\n\nRobbie turned to Angie.\n\n\"Get him out of here, please; he's going to need help to get to the Emergency Room, and no-one else here feels like taking him.\"\n\nAngie looked at Casey, who was holding Joey's arm throughout this, noting the vivid red mark under her left eye, right on her cheekbone, where Steve had backhanded her, and also saw the look of undisguised loathing on her face when she looked at her father; loathing, and...relief? \n\nIn a sudden flash of insight, unusual for her, Angie saw how Steven Dolan had so comprehensively alienated all his children, including the one he'd never acknowledged or admitted to. She looked over at Steve, slumped back against his car, sweat beading his face as his arm hung uselessly by his side, his hand hanging limply to one side, and marvelled that Robbie had done that with so little effort, with one hand. Angie couldn't help but feel a small bloom of pride that her son had managed and manhandled Steve so effortlessly.\n\n\"Mom,\" said Robbie, and Angie's head snapped round to look at him; something inside her tore when she realised he was talking to Sarah.\n\n\"Could you look at Casey's eye, please, mom, maybe get her an icepack of something?\" Sarah nodded and went back inside.\n\n\"I'm your mom....!\" whispered Angie, tearing a little more inside when Robbie shook his head.\n\n\"No, you're not, my mom's over there. Now please, just take him to the ER, he can't stay like that much longer.\"\n\nRobbie walked away, Angie watching him while her head whirled, wanting to call out to him but not knowing what to say. Sarah came back out with the icepack and handed it to Joey, all the while watching Angie, and again feeling a pang of sympathy for her, understanding how she must be feeling, but more concerned for Robbie after what had just happened.\n\nAngie looked up at Sarah, her mouth twisting as she tried not to cry. \"You took my son away, Sarah!\" she whispered, and Sarah shook her head.\n\n\"No Angie, you broke him and you threw him away; all I did was pick up the pieces and try to glue him back together. You did so much harm to that boy, for so long, for so little reason it beggars belief; one tiny little defect was enough to damn him, in your eyes, and so you left him out, you and Mr. Wonderful over there. Did you really expect him to embrace you with a shout of joy? The first time you sideline your child because you can't be bothered with him, that's the instant you lose all rights to that child's love.\" \n\n\"Robbie stopped being your son over twenty years ago; that's the crop you sowed, now you get to harvest it in full, and I feel sorry for you, but I can't help you reap it; you have to do that yourself. I asked you a question once; I asked you if you could come up with a good reason for doing what you and that man did to that poor boy; have you ever thought about answering that question, even to yourself?\"\n\n\"But what am I to do now?\" moaned Angie, and Sarah leaned forward. \n\n\"I don't know, Angie, really, I wish I did. Casey gave you one last chance, a golden opportunity, I heard her, so did you; you chose not to take it. But then you had a chance every day of Robbie's life, and you never took it once; instead, you took every opportunity to cheap-shot him, to mock him, to play nasty, malicious, cruel little party-tricks on him. He waited and waited for his mom, and she never came; it was only ever you, and you hurt him more with every passing day. He forgot how to smile, and, because he had no-one to love, he forgot how to do that as well. You have no-one to blame but yourself for the fact that your son has absolutely no connection to you. He was born entitled to only one thing, his mother's unconditional love, and you wouldn't even give him that.\"\n\nSarah paused, to glance over at Robbie, gently dabbing Casey's cheekbone with the ice pack, with Angie's eyes following her glance, her eyes widening as she finally understood what was happening between the two of them.\n\nSarah spoke softly to Angie, indicating the two of them.\n\n\"The things you did to that boy, you and Steve, and Casey, the mess you made of him, the place you left him in, by rights he should be institutionalized; but the biggest wonder to me in all this mess is that it took Casey to finish putting him back together. She pulled him back from a place he should never have been in the first place, a place you left him, and that's why they're together.\" \n\nSarah sighed and sat down on the step next to Angie.\n\n\"I wish I could help you find him again, Angie, truly, but I wouldn't know where to start; he doesn't need you anymore, you see; you wouldn't let him have any part of you, and so you stopped meaning anything to him. That part of him that needed you is long gone now; you don't exist anymore, there's no pattern in his brain anywhere that says 'Angie = Mom'. The only thing he needs now is Casey.\"\n\nSarah sighed again, not relishing what she was saying, but knowing Angie needed to hear it. \n\n\"When he was small you never touched him, or picked him up and carried him, or spoke to him, or cuddled him; hell, when he was young, I couldn't even touch him, because he firmly believed that he wasn't supposed to be touched; no-one in his house ever touched him, or hugged him, or played with him, or even said hello to him; you just left him to one side while the three of you got on with your happy, perfect, American-Dream lives.\"\n\nShe stopped to draw breath, watching the horror mount in Angie's eyes as the truth's she was hearing finally began to hit home. \n\n\"Robbie's going home tomorrow, and I don't know if he'll ever come back. He came here for a very specific reason, and now he's done what he had to do, I don't think he'll ever want to come back here again. I told you before, he has no good memories of this place, or of you and Steve; even now, when you saw him, after more than four years, your first impulse was to attack him, and you heard what your husband, his father, called him. So tell me, why should he come back?\"\n\nAngie was almost in tears now.\n\n\"Sarah, how do I get him back, what do I do to tell him I'm sorry? Please, help me!\" \n\nSarah looked at her pityingly, finally moved by her sincerity.\n\n\"Well Angie, I think you could try needing him. You should need him the way a mother needs her child; when you know all the way through, from all the way down inside you, from deep in the blood and the bone, that you can't rest until you've moved heaven and earth for your baby, maybe that's the time you've earned the right to his love. There are people I could mention who would go down fighting for Robbie, who'd stand over him on bloody stumps and defend him to the last, who'd face down the glare of Hell for him; when you can feel like that about him, you can try talking to him again. And now I think you'd better take Father of The Year over there to the ER before he collapses.\"\n\nAngie opened the car door and waited for Steve to climb in as best he could; she was in no mood to help him. When they arrived at the ER, the Triage Intern took one look at his arm and sent him to an examination room. The doctor poked and prodded his arm and his wrist, gave him something for the pain, and then sent Steve down for an X-Ray. When they brought him back up, the doctor examined the plates, and then returned to the examination room.",
        "\"Mr. Dolan, how exactly did this occur?\" he asked, and Steve scowled and began to speak but Angie spoke up first.\n\n\"He fell on the driveway, isn't that right dear?\" said Angie, and Steve mumbled agreement.\n\nThe doctor looked skeptical, but accepted their explanation, even though he could see it couldn't possibly have resulted from a simple fall. The ulna showed a displacement fracture, while the radius showed a rotational fracture. Tellingly, there was no injury or evidence of fall or impact to the Olecranon, the 'point' of the elbow characteristically damaged when falling on the arm with sufficient force to break one or both of the bones. Additionally, the wrist fracture was an almost textbook Colles' Fracture. Taken together, both injuries pointed to a lateral twisting force, as though someone had tried to wring his arm off, a combination he'd previously only ever seen in child abuse cases. The strength needed to do this to an adult male would have been enormous. \n\nHowever, they were adults, and they were both adamant it was caused by a fall, so the Ortho filed it under the 'none of my business' heading and went ahead describing the treatment. Steve was not best pleased. Because of the misalignment and displacement of the fractures, the ulna and radius bones would have to be screwed back in place with a plate and titanium screws. His arm and hand would then be immobilized in a solid cast from shoulder to fingertips for six to eight weeks to prevent further injury to the fractured bones while they knitted again.\n\nSteve was admitted and scheduled for surgery the following morning, so Angie followed the orderly as he was wheeled from ER to Surgical One for pre-op checks, and waited until he was settled in his room.\n\n\"When I get out of here, I'll...!\" he began, but Angie cut him short.\n\n\"No, you won't. You'll leave your children alone, all three of them!\" she snapped. \"You won't touch them, contact them, talk about them, nothing. I'm sick of this, Steve, and I'm sick of you. Today was the last straw. You were never going to tell me about the Anderson boy, were you? How many other bastards are you hiding from me around my home town?\"\n\nSteve scowled at the memory of Robbie throwing him across the yard like he weighed nothing, and glared at Angie.\n\n\"There aren't any! How can you believe that pack of liars over your own husband?\" he snarled, but his eyes told a different story. Angie looked him over, comparing him with Robbie, physically so similar, so many facial features in common and yet Robbie made such better use of his. Steve seemed to possess two expressions; sullen deviousness or cocky arrogance, and nothing in between. Angie was remembering the open smiling face she'd seen earlier that afternoon, the realization that her son was handsome suddenly dawning on her. Robbie hadn't changed that much, she realised, what had changed was her perception of him. And with that realization came another one; she didn't want to be with this man any more.\n\n\"Shut up Steven Dolan, just...shut up! Don't bother lying to me anymore; I know about the girl in Pueblo, and the girl in Santa Fe, and the girl in Topeka, shall I go on? Did you also promise them that you'd leave me for them, or was that just the girl in Pueblo? Melanie or Melody, or whatever her name was? Did you manage to knock up any of the others as well, or was it just her? What was the money for, an abortion? Because it wasn't enough for child support; is that what it was? If you're going to play around, you should know better than to play with your own employees. Prime rule of cheating, Steve; never shit on your own doorstep!\"\n\nAngie stood up, gathering her stuff.\n\n\"I want a divorce, Steve. Today I finally saw what you're capable of; you attacked your own children; I should have let Joey beat you after what you did to my daughter...\"\n\n\"Daughter? She's fucking her brother, she a fucking little incest-slut!\" burst out Steve, and Angie stepped closer to prod him on his broken arm, causing a lance of pain to shoot through his body, making him groan.\n\n\"She's my daughter, and yours, so you keep a civil tongue in your head. I still don't fully understand this thing with Robbie, and I don't like it, but there's one thing I do understand; she's with the one man on this planet I'm absolutely certain would never hurt her or make her cry, and she loves him. We drove that boy, our boy, away; we made him into Sarah Anderson's son, and now we have no right to judge him. Sarah was right, we stood by and watched him slowly disintegrate, and we never once found any time for him; our own son! I saw Robbie smile today; do you know how it makes me feel to realise that I've never seen my son smile, that I never once gave him anything to smile for? Can you even imagine what it feels like for your own son to stare you in the face and call someone else mom? I carried him under my heart for nine months, and he looked at me today like I was nothing to him; I did that to him, and so did you, you bastard! Now I need to find a way to apologise to him for never giving him anything of me. We should burn for what we did to that boy, and one day I'll have to stand before my maker and explain myself, and so will you; what are you going to say?\" \n\nAngie paused in the doorway, and looked back at Steve.\n\n\"I'm going now, I'll move your stuff into the pool-house, when you get out you can stay out there until you can make alternate living arrangements, but I don't want to see you again. I'm sorry Steve, I need to see my children, and I need to try and apologise to Robbie for what I did to him. You should think about what I said, Steve, it's not too late to try and find your kids again.\"\n\nSteve stared at her.\n\n\"Angie, please, at least wait until I get out of here, we can talk about this, please, we've been together for nearly twenty-four years, since we were kids in school, surely another few days won't hurt...?\"\n\nHe broke off as Angie slowly shook her head. \"No, Steve, in a few days or a few weeks or a few months, I'm still going to want the same thing. We're over; we have been for years. All your little 'adventures' in Topeka and Pueblo, and Santa Fe and everywhere else, all of them, they meant so little to you, but they carved me away from you piece by piece. If you'd only ever learned to keep it in your pants maybe we wouldn't be here right now. But you lied to me, constantly, you cheated on me endlessly, and I looked the other way, for what? For a new car every year, and a pool? Or maybe some jewellery when you remembered our anniversary?\"\n\nShe paused to gather her thoughts.\n\n\"But you forgot one thing, Steve, you forgot about our kids; you locked one out of your life, and today you lost the other one forever; I helped you do that, and I don't know how I can ask my children to forgive me, but I'm willing to try; are you? And what about Joey Anderson, did you ever do anything for him? You left your son and his mother to fend for themselves, you never once put your hand in your pocket and said 'can I help, what do you need?' It would have been a shock, and it would have hurt me, but I would have respected you for trying to do the right thing by your oldest son; but you never once tried to be a stand-up guy; instead you just swept it under the mat and hoped it would never surface. Goodbye Steve, you'll be hearing from my lawyer.\"\n\nAngie called her lawyer on the way to the car, gaining a march on Steve; she wanted him served as soon as possible, while he was still in hospital. She had his cell, so he wouldn't be making any furtive calls to his lawyers and accountants just yet; \n\nAngie was determined to make sure that she got what she was due, and that her children, both of them, would benefit. She pondered Sarah's words, the truths that she had been forced her to face, and wondered how she could ever repair a lifetime of neglect with her son. \n\nHer eyes pricked with tears as she finally confronted the memories of the look on his little face every time he'd held his arms out to her to pick him up, or hold him, or just let him be with her, and she'd pushed him away or ignored him in favor of Casey. \n\nHot shame flashed through her as she remembered the countless occasions when they'd abandoned him in his playpen, left alone and isolated in another room day after day while they fawned and fussed over Casey. Then there were the times they'd looked right through him when they knew he needed them, and most shameful of all, the spiteful, nasty little pranks and tricks they'd played on him, just because they could. \n\nAngie climbed into the car and absently started the engine, still thinking about what Sarah had said; they'd fed him, clothed him, and ignored him his entire young life, and she suddenly froze as she realised she couldn't remember his birthday; her own son, and she'd forgotten when his birthday was! They'd put their perfect daughter and their supposedly less than perfect son side by side, and chosen one over the other, and so they'd deleted him from their lives for reasons so trivial that she now had trouble believing they could have done it; but they had, and now she had to pay for it. \n\nWithout knowing she was echoing her daughter all those years ago, Angie slumped against the steering wheel, resting her forehead on the wheel as she cried at last for her son, for the little boy she'd wronged for so little reason, and for the man he'd become, the man she would never know.\n\nAs Angie was driving Steve to the ER, Robbie was tending to Casey, who was still trembling with reaction after being assaulted by her father. Sarah, Joey, and Karen orbited around her as she clung to Robbie, her face stinging where Steve's hand had landed squarely across her cheekbone. A reddened bruise was already appearing despite the ice-pack. Karen sat down next to her and started dabbing some soothing ointment on the bruise, and Casey's self-control finally broke. \n\nKaren held her as her fright and pain manifested itself in shaking and crying and Karen held her like a small child, smoothing her hair as she sobbed against her. Robbie looked on helplessly, sensing that now was one of those times when Casey needed another woman, not him. He and Joey backed away as Sarah took her away from Karen, and held her close. Sarah caught Robbie's eye and looked upwards, indicating his old room, and he nodded in understanding.\n\nRobbie took over from Sarah, and dabbed at Casey's eyes.\n\n\"I think you'd better come lie down for a while, Case,\" he said, helping her to rise, \"You can use my old room, come on.\"\n\nSo saying, Robbie took her upstairs and urged her to lie down, making her as comfortable as possible. He sat in silence with her for a while, stroking her hair while she hugged him, until he noticed she was crying again, but silently, the tears rolling down her cheeks. He sat with her, gently wiping her tears away, being careful of the large bruise appearing on her left cheekbone.\n\n\"Casey, don't please, it's over now, they know about us, so it's all done now. Now it's you and me. Your father paid for doing that to you, now he knows what the score is, and we're free. Casey, I know this seems like a weird time to talk about this, but now that there's no more to say, will you do one thing for me?\"\n\nCasey smiled at him, wincing as she stretched her bruised cheek.\n\n\"Ouch! Of course, baby, anything for you!\" she grinned, \"including taking a punch!\"\n\nRobbie grinned. \"I'm sorry about that, I took my eye off him for just a second, I guess I just never thought he'd do something like that to you, of all people!\"\n\nCasey grinned smiled a little wistfully.\n\n\"I guess, at bottom, I still believed he'd be dad enough to stop and listen to me. Mom almost did, I almost got to her, but him, I never...\" She shook her head, and smiled back up Robbie.\n\n\"What did you want to ask me, baby?\"\n\nRobbie flushed, and knelt down by the bed, to put his head on level with hers, so he could look into her eyes.\n\n\"Casey, you know how I feel about you, and you know more than anybody what we've got, and I wanted to ask you if, when you're ready, you'd consider...maybe...I don't know, umm...marrying me, perhaps?\" \n\nCasey was thrilled, moved, and almost overwhelmed by the rush of love and trust she felt for him, tinged with amusement at how quickly he'd changed from being her confident and competent defender to this tongue-tied blushing teenager.\n\nShe sat up and cupped his face in her hands, to speak directly to him.\n\n\"Baby, thank you for asking me. I would be honored to marry you, to be your wife, and have your children!\"\n\nRobbie smiled slowly, his smile transmuting into a wide happy grin. He leaned in and kissed her once, softly, and took her left hand. \"Mom gave me this ring, it was her grandmother's ring, and she told me I should give it one day to the girl I marry, so now I'm giving to you, for you to wear as my wife to be. I love you Casey Roisian Dolan!\"\n\n\"And I love you too, Robbie Anderson!\" she grinned back.\n\nRobbie slid the antique diamond engagement ring onto Casey's ring finger, watching as she smiled wistfully.\n\n\"I used to daydream about this moment when I was younger,\" she smiled, \"I just never dreamed I'd be saying 'yes' to my hottie big brother!\" \n\nRobbie grinned and leaned in for another, longer kiss.\n\n\"Joey and I were planning on taking you, Karen and Mom out to dinner, I'll tell Joey to go ahead without us, unless...\" said Robbie, and Casey grimaced.\n\n\"I don't think I want to be seen looking like this, if you don't mind; my face hurts, but you go, Sarah wants to have dinner with both her boys, I'll be fine.\"\n\nRobbie shook his head. \"I'll tell them to go ahead, we'll order in, or raid the fridge; besides, we'll have her to ourselves later tonight and tomorrow morning anyway, so no harm, no foul!\"\n\nRobbie went in search of Joey, to tell him of the change of plan, while Casey lay back down and stretched her hand out, admiring her ring.\n\nShortly he was back. \"All arranged, Joey and Karen will bring mom home, and we'll order in, or you can have a dig through the fridge later, see what turns up. You rest now, I need to go and talk with Joey for a few minutes, don't go away!\" \n\nJoey was lounging on the porch, idly watching the street when Robbie caught up with him. Joey looked up at him and grinned.\n\n\"So tell me, butthead, how did it feel, kicking daddy's ass for him? I hope you got as much out of it as I got watching it!\" \n\nRobbie grinned. It had been kind of satisfying, but in a small, mean way, and he didn't want to go there or get to liking the feeling; that was kind of how this all started in the first place. He decided instead to change the subject, he had something important to think about, and he needed advice.\n\n\"Joey, I needed to get a smart opinion, but I couldn't find anyone local, so I thought you'd do!\" he smiled, plumping down onto the porch seat next to Joey\n\nJoey grinned and lazily flipped him a finger.\n\n\"So talk to me, butthead! What's so all-fired important you have to disturb my bout of medically-sanctioned lazing while I reminisce about daddy swan-diving face first into the sidewalk?\"\n\nRobbie looked pensive, his silence catching Joey's attention, causing him to slide upright and sit still, waiting for him to marshal his thoughts. At last, Robbie stirred.\n\n\"Joey, last week I had a conversation with Steve Vargas, about where I was going, what I wanted from GameStx, what I wanted out of life, and he kind of made me an offer I really need to talk to you about. He seemed to think I was getting ready to jump ship, although I don't know where he could have got that from; after you guys, Mom, Aunt Kat, everyone, I love that man more than anyone in the world and I wouldn't hurt him to save my own life. He's the one who gave me everything I have, and more, but he was so concerned I'd leave he offered to make me a partner with him and his brother, Elio. I would never leave Steve in the lurch, but I don't know if I could be a partner in what we look set to become; a software mill, just churning out this year's version of last year's hit, so I told him I'd think about it, and being here, with you, Mom, Karen, and Casey, has helped me to come to a decision.\"\n\nRobbie paused, taking a deep breath.\n\n\"I'm going to accept his offer, not because of the money, you know me, I don't really need money, but I'll only accept on one condition; that you come with me as part of the deal. I think together we could turn GameStx into an innovator, instead of just a market responder, but we'd need someone like you to push us into the spotlight. I know I'm asking a lot, but before you say no, please, just think about it, talk it over with Karen, whatever you need to do. Steve's given me a month to give him an answer, and two weeks are up already.\" \n\n\"However things go, I'm not leaving Steve, but I think GameStx needs to move forward, and I know Elio is behind me on this; he sees the need for us to step up and start taking on EA and Activision and all the other big boys at their own game. If we don't, we disappear, and we do good stuff, too good to just disappear into the background. I think you can help us do that, but only from the inside, so please, a slow yes is better than a quick no, so think it over, please!\"\n\nJoey looked him over slowly, seeing the concern there, and the plea for his older brother to help him out, and to be honest, the idea appealed; the company he and Karen worked for had offices in San Francisco, if she agreed, she could transfer and remain in full employment while he took a chance with Robbie.\n\nJoey stood up and stretched, and grinned down at Robbie's anxious, open face.\n\n\"Looks like I'm taking mom and Karen to dinner solo, so wait up for us, I think Karen will want to talk to you as well, this is a decision that affects us both, so you be up and around when we get back, OK?\"\n\nRobbie grinned.\n\n\"I'll be here, count on it! And...thanks, Joey! Now, I think Casey needs me, so if you'll excuse me...!\"\n\nHe went back upstairs, to find Casey examining her reflection in the mirror, gently touching and mapping out the pain spots in the bruise forming on her left cheekbone. \n\nShe looked up as Robbie came in the room, and tilted her head back to look up at him. \n\n\"He really did a number on me, don't you think?\" she half-smiled, making Robbie smile back. \"I'll have to borrow some Concealer from Karen or Sarah tomorrow, but you know what, it's not that painful now!\" She skittered her fingertips across the bruise and winced, giving lie to the words.\n\nRobbie sat down next to her and pulled her close, examining her features, admiring her hair, her profile, her pale, translucent skin. He thought to himself how lucky he was that someone like her could want to be with someone like him. Casey meanwhile was thinking pretty much the same thing. \n\nOn impulse, she pulled his head down and found his lips, kissing him tenderly, happily while his arm tightened around her as he bore her backwards. He lay on his side, Casey in the crook of his arm, his head turned to her so he could continue to kiss and nuzzle her. Casey kissed him back with equal enthusiasm, her hands coming up to hold his face as he showered her with kisses. \n\nCasey grinned and bit her bottom lip, something wicked dancing in her eyes, and she reached for his jeans, popping the button and tugging the zipper down in one move. Robbie's eyes widened, then he too grinned and returned the favor, his hands grasping the waistband of her jeans as he pushed them down and tugged them off her. \n\nCasey slid her hand inside his open jeans and took hold of his burgeoning erection through the material of his shorts, squeezing him rhythmically as he began to rub and caress her panties where they stretched around her damp pussy lips, now clearly visible through the thin material. Casey moaned and shut her eyes at the pleasurable sensation, humping her crotch back against his fingers as he drew her close to lick and nibble and kiss her neck, her throat, her chin and her lips, his lips feeling like they were coated with fire as they burned and sizzled across her skin.",
        "\"Get up Robbie, now please!\" she gasped, and as he stood, she sat up and pushed his jeans down. Robbie tugged his shirt off and stepped out of his jeans, toeing-off his shoes and pulling his socks off. Now Casey stood and Robbie helped her pull off her blouse, and then slid his hands around her to unhook her bra even as he met her lips in a lingering kiss. \n\nAs Casey shrugged her bra off, Robbie hooked the waistband of her panties, pulling them down to just below the curve of her buttocks, and dropped his hands down to cup and squeeze her butt cheeks together and pull them apart, the sensation making her gasp anew as his fingers rubbed lightly across her rosebud. \n\n\"Robbie, that's...oh that's so naughty, please...do it again...\" she murmured, and Robbie obliged, one finger slowly rubbing her secret place as he continued to play with and squeeze her firm satiny cheeks. Casey sighed and pushed back against his hand, his finger slowly sliding into her tight little pucker, her eyes widening at his gentle, persistent invasion. She pulled herself closer to him, to rub and grind her damp crotch against his bulging cock in his shorts.\n\nJust then Joey's voice came from downstairs.\n\n\"Rob, Casey, we're off! We'll be back at 10, we'll talk then, OK?\"\n\nRobbie called back. \"OK guys, have a nice dinner, see you then!\" and grinned at Casey. \"Right, where were we...?\"\n\nCasey bit her lip and grinned as she pushed back against his finger, forcing him even deeper into her. Her eyes danced as she felt him moving inside her even as she slid and ground her increasingly damp pussy against his hard cock, her moist lips leaving a damp spot outlining his cock on the material of his shorts. \n\nRobbie began to thrust back against her, enjoying the motion of his cock against her damp pussy as they kissed and nibbled each other, until Casey pulled away slightly to push her hands into the sides of his shorts and slide them down, freeing his throbbing hard cock. She wrapped her hand around him and pumped him slowly, wriggling as his finger slid slowly in and out of her anus in time to her pumping hand.\n\nCasey pulled him forward by his solid erection, grinning as she backed onto the bed. Robbie kicked away his shorts and knelt on the bed next to her, his lips seeking out hers as his hands clasped her ass again, his finger once again sliding into her tight anus.\n\nCasey grinned even wider.\n\n\"You like that, don't you?\" Robbie could only nod. \"Do something about it then, I dare you!\" she smiled, her eyes dancing and challenging all at once. Robbie's eyes widened as he suddenly realised what she was saying, then he smiled slowly as he pulled her closer, bearing her back down to the bed with her underneath him. Casey squirmed under him and arched her back, thrusting her breasts up at him, giving him an invitation he couldn't refuse. \n\nHe dipped down and caught an erect nipple between his lips, sucking the hard rubbery nub to make her gasp and sigh pleasurably. At the same time, his hand dropped down to tug her panties all the way off, and slip between her thighs to caress the soft, slick flesh, and tease open the crease between her rapidly swelling labia. Casey murmured and pushed her mound against his teasing finger, forcing it into her wet slit, and gasping as he brushed against her erect clitoris.\n\nRobbie continued to gently rub and slide his finger into her, joining it with a second, and brushing his thumb over her aching clitoris, making her writhe and catch her bottom lip between her teeth, unable to stifle the gasps and moans as he frigged her so wonderfully.\n\nHer orgasm hit suddenly, her whole body convulsing as the first powerful wave of pleasure arced through her, making her cry out loud in the pleasure-shock of release, a rush of warmth flooding Robbie's hand as he worked ceaselessly at her convulsing pussy. She reached up and clamped her lips against his as she convulsed again, and again, the waves of orgasmic pleasure bulleting through her and leaving her gasping for breath in their wake.\n\nFinally she slumped back down, sated, her eyes closed and small tears at the corners, mute evidence of the strength and power of her orgasm, the base of her throat fluttering as her pulse raced.\n\nEventually she opened her eyes to smile at Robbie.\n\n\"Wow, Baby, you give good hand jobs!\" she giggled softly, her hand slipping down and one finger rubbing and sliding in and out of her pussy. Robbie watched as her slick finger withdrew from her pussy and slid into her anus, her own juices wetting and lubricating her tight little anus.\n\n\"Your turn, baby, go easy, OK?\" she murmured, turning onto her stomach and sliding a pillow under her pelvis to raise her beautifully pert rump off the bed. Robbie eyed her rounded ass appreciatively, and moving into position behind her. His cock was already running with his own clear lubrication as he leaned down over her, lining-up his cock with her wet slit, and slowly easing himself inside her, making her hiss with satisfaction at the sudden feeling of fullness. He began to slowly slide in and out, pumping her with his rock-hard erection, until Casey looked back over her shoulder at him.\n\n\"Now Robbie, do it now!\" she whispered. He responded by withdrawing from her, his member well lubricated by Casey's pussy and his own secretions, and slowly pressed the swollen purple head against her crinkled rosebud. Casey bore back against him as he slowly pushed himself into her, her breath coming in gasps as he forced his head past the tight ligature of her anus and into her rectum. \n\nAs the head popped in past her ring, his cock slowly slid into her tight velvety rectum until he was buried to the hilt in her. He stopped, waiting for her to catch her breath. Casey was in agony. Robbie's cock was far larger than the last one she'd had rammed into her ass; every time she'd done this in the past, it had been reluctantly, with a man who was only out to please himself. This was the first time she actually wanted to do this, to completely give herself to her man and she wanted it to be good for him.\n\nRobbie paused, waiting for her to let him know what she wanted him to do next, and she loved him for his consideration. He was so tight within her that she could feel his pulse as his cock throbbed inside the tight glove of her rectum. At last, she could feel herself relaxing, and her breathing slowing as her anus accommodated the intrusion of his cock. Casey looked back at Robbie, smiling and nodding at him to continue. Robbie began sliding his member back, feeling the resistance, and hearing Casey gasp as he withdrew.\n\n\"OH MY GOD! Yeeesss! Yes Robbie, yes Baby, oh yes, like that...!\" she gasped, pushing her ass back against him as he pushed back into her, feeling a lot less resistance as he went back in,. He dropped onto his forearms, sliding his hands under her to cup and squeeze her breasts and pinch and tease her nipples as he pumped her ass in an increasing tempo, until he was pounding his cock into her as Casey writhed and gasped under him. He could feel his orgasm approaching, and Casey was humping back against him harder and harder as she tried to take in more and more of his big cock into her tight velvet tunnel, her hand working furiously at her throbbing clitoris.\n\nShe came explosively, screaming out his name, a spray of her juices bathing his groin as her pussy contracted in sympathy with her anus. Robbie gasped as her anal ring clamped down on him, holding him firmly. At the same time, her hot rectum squeezed him like an iron hand in a soft glove, inexorable pressure along his entire length bringing him to explosive orgasm. His eyes actually bulged as he felt his cock head swell to wedge tightly in her ass, and then came the almost overwhelming sensation of his spunk racing out of him, the rippling squeezing contractions of her rectum milking the sperm out of his over-stimulated cock, sending it bulleting along the length of his cock to spray deep into her bowels with unstoppable force. \n\nBolt after bolt of hot semen bathed her insides as Robbie came hard, groaning out loud as more spunk than he had ever thought possible burst out of him to spray inside her tight rectum. Casey felt every hot splash as it splashed into her, so much that Robbie could feel it being forced back along the length of his shaft to drain out of her tight-stretched anus and run down across her pussy to pool on the bed. \n\nHe remained poised above her, his weight on his elbows as he rested his forehead on the pillow next to her head, her head resting in the hollow of his neck as his breath hissed in counterpoint to his racing heart. As he gulped and sobbed for breath he gradually became aware of the trip-hammer beat of her heart slowing as the aftershocks died away. Eventually he softened and slid from her, to slump down beside her, his chest still heaving from the unprecedented force and power of his climax.\n\nCasey murmured as she rolled into the shelter of his arm, her eyes still tight shut as she recovered from the shock and power of her own shattering orgasm, eventually opening her eyes to smile sleepily at him.\n\n\"Hello Lover-Boy, that was...intense!\" she smiled. \"Of all the times I've done that, that was the first time I came like that, or came at all! You were amazing, baby!\" \n\nRobbie smiled back. \"So you've done that before, eh? Anyone I know?\" he asked jokingly, and watched as her eyes filled with tears and she looked away, turning away from him and huddling into herself, almost curling into a ball.\n\n\"Case, baby, what's the matter, what did I say?\" he asked her softly, bewildered at her reaction to his half-serious question, not knowing just how he'd offended her, or what he'd said to provoke such an extreme reaction following their lovemaking. He put his hand on her and was astonished to find she was crying, silently sobbing. Robbie gently pulled her around, holding her close against him as her sudden paroxysm of grief played itself out as he folded his arms about her.\n\nAt last she stopped crying, so Robbie used his shirt to mop her eyes, finally kissing her gently and stroking her hair to calm her down.\n\n\"So please, tell me baby, what was that for, what happened just now?\" he asked her gently.\n\nCasey looked up at him guardedly, wondering just how she was supposed to tell him, or how much.\n\n\"I only ever came home from college once in a while, when I really couldn't avoid it, and I had a really good reason for that.\" She paused, her lips moving but saying nothing.\n\n\"Go on, Case, I'm listening...\" prompted Robbie \n\nShe swallowed and continued. \"What we did, how we did it just now, dad used to do that to me every chance he got. I'm sorry baby; I didn't know how to tell you!\"\n\nShe started crying again, silently but powerfully, silent sobs wracking her body. Robbie pulled her close, fiercely, holding her as tight to him as he dared as she shook against him.\n\nEventually Casey stopped and wiped her tears away.\n\n\"He started on the night of the Senior Prom, just two weeks after my eighteenth birthday, I went with Mark Henry, but he never danced with me once...no one did. When he brought me home, Dad was waiting up for me. He took me into his study, saying I was an adult now, and he gave me a drink, and I sat with him drinking brandy and feeling all grown-up and worldly.\" \n\n\"When I finished my drink he asked me to dance with him, so I did, and suddenly his hands were all over me, and then they were up under my dress, then he was pushing me over his desk, and that's when he did it. Oh Robbie, it hurt so much, he was hurting me and I couldn't stop him! I'd never done anything like that before, and I felt so dirty, my own father! After that, he did it to me nearly every day. Robbie, he knew how much it hurt me but he wouldn't stop, no matter how much I begged him! I didn't know how to stop him! I didn't know how to tell mom, or if she'd even believe me, or maybe she knew, and just didn't care, and there was no-one else I could tell. I had no-one to protect me, there was no-one in town, not one person I could turn to after what I'd done to you, no big brother to help me, God, I made sure of that...\"\n\nShe stopped to swallow, her eyes unfocussed as her memory unreeled.\n\n\"He kept on doing it until I left for college. I had to come home eventually, mom would get at me to come home when I had a break, and I couldn't tell her why I didn't want to, and then he'd call-up and start on at me about how mom was missing me so much, then he'd get angry and threaten to cut off my tuition, and get me kicked out of my dorm, and tell mom I tried to seduce him.\" \n\n\"College was all I had, my only way of not being there with them, so I'd come home, hoping that he'd leave me alone, but no, he'd be waiting, and he'd keep me with him until mom wasn't around, and he'd do it to me some more. That was when I really needed you, Robbie, I wanted you so much to be there to help me, but you were gone, I'd already gotten rid of you...I'm so sorry, Robbie, I tried to find you to tell you I was sorry, but I also wanted you to come home so you could help me, because I needed your help so badly. I knew he'd never touch me if you were there, he was afraid of you, and I wanted you to protect me, but you weren't there, and it was all my fault...!\"\n\nShe paused again, her eyes still far away as the tears welled up.\n\n\"I started to think I was being punished; this was what happened to people who did what I did to you and I deserved it. I prayed for it to stop, but it kept on and on, until I realised no-one was listening, and maybe what was happening to me was my penance for doing what I did, and I thought that if once, just once, I'd been a real sister to you, perhaps it would eventually stop when I'd been punished enough, but it never did...!\"\n\nRobbie cut her off with a finger on her lip.\n\n\"Shh, Case, it's OK, it's over now, it's all in the past, dead and buried, remember?\"\n\nCasey couldn't let it go, the tears pouring down her face as she relived her own private shame and fear.\n\n\"When he came here today, he wanted to take me back, that's the only reason he was here, and I was so scared he'd somehow manage to do it; he doesn't care about you, or me, all he was angry about was that someone else had a hold of his little fuck-toy, that's all I am to him! Please don't let him get me again, Robbie, please...!\"\n\nRobbie held her close as she broke down again. \"Shh! You're safe now Case, you've got Joey and me, both your big brother's are here, and we've got your back! And before you ask, no, I don't think it was your fault, and no, I don't think you asked for it, and no, I don't think you deserved it. So get rid of that now, because I'm never gonna think that!\" \n\n\"I think this had better remain between us; if you tell Joey, he's liable to go down there and hurt Steve really badly; you're with me, and in Joey's eyes that makes you one of us; and he really doesn't like people messing with any of us! But let me tell you just one thing, and then we let this go forever, OK? Even with everything that happened before between us, if you'd come to me and asked me to help you, I would have; you're my little sister, and I would never have let anyone hurt you.\"\n\nCasey looked at him, her vision blurring with tears of shame at what she'd confessed, seeing the truth of what he was saying. Robbie wiped away her tears, and gently kissed her as he soothed her fears away. He understood now that they were both victims of their father, but Casey had suffered abuse he hadn't been able to imagine their own father could dish out, she'd been violated by the one man she was supposed to depend on. \n\nRobbie was incapable of desiring revenge; if Steve showed his face again, Robbie would do anything to protect Casey, but hunting down someone and taking violent revenge was not a part of his psyche. He was just glad to his depths that he was taking her with him, that she'd never again have to face their father, and that Steve would never again have the opportunity to vent his sexual predilections on his only daughter.\n\nAs he pondered, he became aware that Casey's breathing had slowed and deepened; she was asleep, which was no surprise, given their earlier exertions and then her emotional confession to him. Robbie smiled and slowly slid out of bed, to grab a shower before the others got back. He'd just finished toweling-off when there came a light, almost hesitant knock at the front door. At first disinclined to answer it, Sarah's lessons in good manners and politeness took over, so tugging on his jeans he quickly ran downstairs in his bare feet, his hair still wet and tangled, to open the door to whoever was calling at this hour.\n\nTo his surprise, Angie was standing there, looking better than she had earlier, but with a tightness about her eyes and lips that belied her apparently calm appearance.\n\n\"H...Hello Robbie. May I please come in? she asked softly, and again Robbie could sense the control she was exerting over herself, the feel of tightly-reined emotions just below the surface. \n\nRobbie looked at her blankly for a second, then opened the door and motioned her in. \n\n\"Casey's asleep, if you'll please wait a moment I'll go and...\n\nAngie put her hand on his arm to stop him.\n\n\"No, Robbie, please...I wanted to talk to you. It will only take a few moments, please!\"\n\nRobbie looked at her hand on his arm, and she yanked it away like she'd been burned. Robbie indicated the way to the living room, and followed her in, motioning her to take a seat.\n\n\"So, ah...Mrs. Dolan, how can I help you? Like I said, Casey's asleep, it won't take but a moment to get her...?\"\n\nAngie's face tightened further as she realised Robbie only thought of her as 'Mrs. Dolan, Casey's mom', and couldn't think of any reason why she should want to talk to him.\n\n\"Robbie, I know this is probably too late to make a difference, and I know you don't think much of me anyway, but I just wanted to say 'sorry'. I'm sorry for everything I did, all the things I didn't do, all the times I left you out, I'm sorry for all that. I know you don't think I'm your mom, and you have every reason in the world to think that way, but I am your mom, and I wanted to let you know that I'm sorry for what I did to you, and to beg you to let me back in. What I did was wrong, I know that now, and I have no excuse, but I do know one thing; I love my children, even if I forgot that for a while, and I need them to know that.\"\n\nA movement in the corner of her eye caught her attention, and she turned her head to see Casey leaning against the door-frame, legs and feet bare, wearing what looked like the shirt Robbie was wearing earlier that day. It hung almost to her knees, the sleeves were impossibly long on her, and she looked young, small, and vulnerable.\n\nHer heart leaped into her mouth when she saw the purple bruise decorating Casey's left cheekbone, her anger with Steve flaring again as she saw what he'd done to her daughter. Angie half rose, but Casey quickly walked over to Robbie and climbed onto the couch behind him, resting her chin on his shoulder as her arms circled his torso. As she clambered behind up him, Angie saw enough to know she was naked under the shirt, and she blushed as she realised what they must have been doing. She resolutely put that from her mind; she was here to apologise to Robbie, not question his relationship with Casey. Casey handed something to Robbie, and Angie saw it was a T-shirt, which he quickly pulled on.\n\nAngie turned her attention to Casey.\n\n\"Honey, I also want to apologise to you, for dragging you down with us, and for everything that happened, and especially for today; I saw something I didn't understand, and...I overreacted, and I'm sorry. Whatever you and Robbie do, wherever you go, if you're happy, then I'm happy for you. I don't know what your father thought he was doing, but that...\" she indicated the bruise on her face, \"that was inexcusable; he had no call to go attacking anybody. Well, he paid for it; he's having surgery tomorrow to repair his arm, and he'll be in a cast until the end of the summer, that should keep him occupied.\"",
        "Robbie stirred.\n\n\"I gave him fair warning, I asked him to leave, he chose to ignore me and attack me, so...\"\n\nAngie nodded.\n\n\"I know, I heard you warn him at least twice. He's lucky it was only his arm; it should have been his neck...!\"\n\nCasey looked closely at her mother.\n\n\"Mom, what's happened, why aren't you with dad?\"\n\nAngie looked at Casey, pale but resolute.\n\n\"Honey, your father and I are getting a divorce. After today, there's no way I can remain married to that man, not after what I found out this afternoon, or the way he's been behaving for years; today just brought it to a head. I'm sorry; I know you and he used to be close, now...\"\n\nCasey gave a bitter snort.\n\n\"Close, is that what you think? Really?\"\n\nShe looked away, and Angie saw tears trembling on her eyelashes.\n\n\"Casey, what's the matter, why are you crying, is it because of the divorce? We'll still be your parents, you don't...\"\n\nShe trailed of as she saw Casey shake her head.\n\n\"I never want to see him again, Mom, not after what he did to me! And I don't mean this...!\" she touched her cheek. \"Why do you think I hate coming home, why do you think he was so angry today? After what he did to me...!\" She trailed off, choking back tears and burying her face in Robbie's shoulder.\n\nAngie stared at her in puzzlement, and then her mouth dropped open as understanding suddenly dawned on her.\n\n\"Oh God, no, oh no, not that, please...!\" she begged, horror mounting in her eyes as Robbie slowly nodded, his eyes confirming what she feared the most.\n\n\"Baby, I'm so sorry, I never thought he could...why didn't you tell me, I would have helped you, I would have believed you...!\"\n\nCasey grinned mirthlessly.\n\n\"Would you, Mom, after all we did to Robbie, would you have believed anything I said about dad? You never helped me look for your son, you never tried to find him, you just gave him up without a fight. I thought you knew about dad, I thought you gave me up as well, that's why I never came to you, because I didn't trust you. That's how screwed-up this whole family is, and that's why I have to go with Robbie; with him I have a chance for a new start far away from here and all this.\"\n\nAngie sat ashen faced, her discovery about Steve and now Casey's rejection of her a double hammer-blow. She'd come here to ask for forgiveness, only to discover just how much she needed to be forgiven for; both her children had suffered at the hands of her husband, and both of them saw her as the one who'd rejected and neglected them. Her eyes brimmed and overflowed as the full extent of her children's misery unfurled, and she found herself reaching out to them, needing physical contact to try and bridge the gaping chasm that opened between them. \n\nCasey's face slowly softened as she realised her mother wasn't involved, she had truly been unaware and unsuspecting of what Steve had been doing to her. Casey also realised that Angie needed her daughter to forgive her for being so disconnected from what had been happening under her very nose. She climbed off the couch to kneel by her mother and take her outstretched hand.\n\n\"Mom, I'm sorry I was so harsh. For me it's over now. I've got Robbie, and I don't need or want revenge, or punishment, for dad; as much as he needs to suffer for what he did to me, that won't accomplish anything; being with Robbie is enough for me, so all I want to do is let it go and move on. Robbie's showing me how, because that's how he survived, by learning how to be someone else, with a family that loved and cared for him.\" \n\n\"He and I are going to be a family again, but a different kind of family this time, one where we love and care for each other. Accept that, Mom, and let him go properly; you can't be his mom, you gave that away a long time ago, but you'll always be mine, and still part of the family that Robbie and I will be, just not the way you want it to be. Take it or leave it, Mom.\"\n\nAngie blinked back tears as she realised the compromise Casey was offering her was as good as it was going to get. Robbie, her son Robbie, was irretrievably lost to her, but Casey was offering her a way to still be a part of his life. She looked up at him and saw him smiling at her, a good sign, the first time he'd done anything except stare blankly at her. Angie came to a decision. This would have to do; this was a way to keep a connection with her children, and maybe when enough time had passed she could attempt some sort of rapprochement, if and when the time was right. As she held Casey's hand, her fingers found the antique engagement ring placed there by Robbie, and she smiled sadly as she realised what she had to do.\n\nShe stood, Robbie also rising to his feet and taking her hands when she reached out to him.\n\n\"Promise me, Robert Anderson that you'll always look after my daughter.\" she smiled through tear-blurry eyes, and was rewarded with a beautiful sunny smile from this tall quiet man her daughter loved so much.\n\n\"I will, I swear!\" he grinned, looking into her eyes.\n\n\"Well go on, genius, hug your mother-in-law!\" Casey stage-whispered as she nudged him, and his grin widened as he and Angie hugged each other properly for the first time in more than twenty years, Angie's hug the more poignant as she both welcomed him and let him go forever.\n\n++++\n\nWhen Joey, Karen and Sarah returned from dinner, they were met with the sight of Casey, Robbie, and Angie chatting like old friends, faces wreathed in smiles, no sign of the animosity and anguish of earlier that day.\n\nAngie rose, smiling, as they walked in, the first genuine smile Sarah had ever seen on her face.\n\n\"Sarah, Joey, I'm glad I saw you before I left. I wanted to apologise for this afternoon. My husband was completely out of line, and he got what he deserved. I also told him I wanted a divorce, and he's not going to contest it, at least, not if he knows what's good for him!\" \n\n\"Joey, I'm sorry you and your mother were dragged into this, and that my husband never made any provision for you while you were growing up, so I'm sure the divorce settlement will include a substantial provision for you; just think of it as all the back-payments he should have been making to support his son...it will probably enable you to plan a very nice wedding and honeymoon! Casey, Robbie, I'll see you soon, darlings, and remember, I love you both very much. Sarah, may I speak with you...in private, please?\"\n\nSarah was intrigued; nice Angie was a new one for her, and she was curious to see what Angie could possibly want with her. Angie kissed and hugged Robbie and Casey, and then she and Sarah made their way to the porch, past an open-mouthed Joey and Karen, and a smiling Robbie and Casey.\n\nAngie began.\n\n\"Sarah, I just wanted to tell you, you were right; about Robbie, I mean. I have no way to reconnect with him as my son, there's nothing left there for me to pull back, and perhaps that's for the best.\" Her eyes sparkled with unshed tears. \"It's a painful, awful thing to admit, but I was a useless mother, and I lost him too long ago to fix it now; I really have no claim on him at all as a mother, I put nothing into him, and it was wrong of me to assume I could somehow just claim him back. But, as his mother-in-law, I still have a chance to be part of his life, that's the option Casey gave me, and I accepted it. It gives me a way to be in his life, and to remain a part of Casey's too, and the children they'll have one day. You really are his mother now; Hell, you always have been, so please, do one thing for me; look after my baby.\"\n\nSarah could see what this admission had cost her, and it tore at her heart too, but she knew Angie was right; it wasn't a perfect solution, but it was a solution.\n\nAngie dabbed at her eyes as she made to leave.\n\n\"I always envied you, Sarah, even if I couldn't admit it to myself, you were always a better person than me, and I was too stupid or arrogant to ask you how you did it. But that part of you rubbed off on Robbie. What he is today, he owes to you, so thank you for being what he needed most of all. Now I can see what Casey loves so much about him. You did good, girl! And now, I'm off to make Steve Dolan's life a miserable corner of Hell, wish me luck!\"\n\nSarah smiled as Angie waved to her as she walked to her car, then Sarah went in to see to her family.\n\n\"Mom, just in time!\" grinned Joey, as Sarah walked into the dining room. \"Family Conference time, can we all be seated please, Robbie and I have something we think everyone needs to know about.\"\n\nMystified, Sarah took a seat, getting an equally puzzled look from Casey.\n\nJoey took the chair. \"Mom, Casey, Robbie and I had a talk earlier today about something that I think affects us all. Robbie?\"\n\nRobbie took over. \"Two weeks ago, my boss, Steve Vargas offered to make me a partner in GameStx.\" Casey and Sarah looked stunned, Karen grinned and Joey just looked pleased with himself. \n\n\"So far I've held off on giving him an answer, because I was concerned about the direction we were heading in, and I wasn't sure I wanted to be part of that. Eventually I decided I would accept, but only on one condition.\" \n\nHe drew a deep breath.\n\n\"I decided I'd accept only if Joey came with me as part of the deal. We need someone like him, someone to push the company into being an innovator. We have a high-quality team working far below their true potential, we have the talent on board to gun for the big boys, and I think Joey, with his background in business and marketing, and his experience and talent as a Business Analyst would be the one to do it for us. I intend to stipulate to Steve that Joey be brought in as Vice-President in charge of Commercial Affairs and Marketing with a salary commensurate with the position. I know that Joey is keen on the idea, but other things have to happen as well. Karen?\" \n\nKaren looked thoughtful, briefly drumming her fingers on the table in front of her.\n\n\"Joey and I discussed this briefly at dinner, and the fact is, I could transfer to the San Francisco office relatively easily; the new Claims Handling software is ready to be rolled out, I don't see that doing it from there is any different to doing it from here, all my family lives in Southern California, so yes, I'm in favor. I'm in!\"\n\nJoey looked at Sarah.\n\n\"Mom?\"\n\nSarah smiled at all of them.\n\n\"You don't need my approval, I think my boys can make a grown-up decision without my help. For what it's worth, I think it's a good idea, and it's a chance for both of you to stretch your wings a little. Good luck, all of you!\"\n\nCasey didn't need to voice an opinion. Whatever Robbie decided, she would go along with it.\n\nJoey stood up grinning. \n\n\"OK, that's us decided. Robbie, I would be honored to come and work with you; it sounds like you need someone with a sense of humor who's not gonna die a virgin to come in there and motivate you bunch!\"\n\nRobbie grinned and punched Joey's shoulder as he and Karen ambled away to discuss the logistics of moving to California.\n\nSarah pulled Robbie closer and reached up to pull his head down so she could kiss him on the forehead, \"I'm so very proud of my youngest son, my little lost boy! I'm glad my boys are going to be together, I know you and Joey will make a good team!\"\n\nRobbie blushed and made to move away, but Sarah pulled his head down again, and kissed him once more on the forehead. \"And that's from someone who loves you very much and who's also very proud of you!\" Robbie looked slightly puzzled at that, but Casey put her arm in his and kissed him as well. \"I'll explain it to you later!\" she smiled.\n\nSarah took Casey's hand and smiled at the ring Robbie had given her.\n\nCasey looked worried. \"I hope you don't mind, Robbie asked me to...and I...\"\n\nSarah smiled back as she lightly kissed Casey on the cheek.\n\n\"Casey, I think Gramma Novak would be very pleased indeed to know who was wearing her ring today. Robbie chose well, and so did you.\"\n\nRobbie took his arm away from Casey to hug Sarah. \n\n\"Why don't you come to San Francisco with us, mom? With Joey and Karen gone, there'll be nothing keeping you here; all your family will be in the Bay Area, so why don't you think about coming out as well; at least we'll all be in the same time-zone. I know Joey's in love with Bel Marin Keys, now he'll be able to afford that boat he's always wanted and do...y'know, boat...things, whatever. Maybe you could perhaps think about living somewhere round there, I dunno, Novato, maybe, or Corte Madera. Remember I took you there once, and we had a picnic in the town park, and you said how nice and green it was around there? And it's only a little way to San Pedro Bay, and the Napa wineries; you know you love it around there, why not move to the North Bay now? Think about it, mom, please, I don't want you here alone...\"\n\nSarah looked thoughtful; he was making sense, maybe she should join the rest of the family now.\n\n\"I'll think about it, sweetheart, really. Now you go to bed, you kids have an early check-in tomorrow, and it's an hour to the airport from here. I'll call you tomorrow night and we'll talk some more.\"\n\nRobbie and Casey hugged Joey and Karen goodbye; they had work the next day, so this was the last time they'd see them until they made the move to California.\n\nRobbie watched Casey undressing, which really meant no more than stripping off the shirt she was wearing. She really was an enticing sight; her long slender legs, taut buttocks, and small firm breasts tipped with delicate pink nipples, and he could feel himself responding, a delicious warm tightness in his groin spreading to center itself at the base of his penis. Robbie felt himself hardening as he watched her graceful, almost balletic movements as she folded his clothes and stowed them in his flight bag, her economy of movement matched only by her complete unconsciousness of his scrutiny. Eventually, though, she became aware of his eyes on her, that subtle sense all humans possess that tells them they're being watched causing her to look over at him and smile quizzically. \n\n\"Something you wanted, baby?\" she smiled, and grinned widely as he crooked a finger at her.\n\nRobbie slid his arms around her to cup and squeeze her tight cheeks as he kissed her, the smooth flesh of her backside firm and arousing under his fingers, and his groin tensed even further as his rapidly hardening cock flexed and pressed against his flies.\n\nCasey smiled against his lips, grinding her mound against him to let him know she was also feeling the stirrings of arousal. She reached down to feel the bulge in his jeans, fondling his package as she slid her hand around his neck to pull him down for a more serious and intense kiss.\n\nShe stepped back and away from him to clamber onto the bed, Robbie's cock twitching as he caught a glimpse of her damp, swollen pussy lips as she crawled onto the bed, and he quickly stripped off his tee and jeans to follow her.\n\nAs he slid next to her, he caught her up and pulled her to him, mashing his lips against hers in a fervent, passionate kiss. Casey squirmed under him without breaking their kiss, her arms pulling and urging him to lie on top of her, at last breaking contact to smile up at him.\n\n\"Make love to me now, Robbie; make love to your wife-to-be, show me how it's going to be, baby!\"\n\nRobbie grinned down at her as her hands fondled and caressed his burgeoning erection, rubbing his wet cock head against her equally damp and syrupy pussy lips while gently squeezing and scratching at his balls with her other hand, teasing herself as she lubricated their sexes with their combined secretions. Robbie tensed as he slowly pushed forward, his fat cock slipping slowly into her tight pussy, her breath warm against his cheek as he slid into her. Casey's arms slipped around his torso, her hands gripping his back as he began to slowly pump in and out of her.\n\nCasey responded by lifting her pelvis to meet his thrusts, pumping her wet pussy up and down on his thrusting cock. She angled her pelvis to rub her clitoris on his wiry pubic hair, pleasuring herself as she tensed and relaxed her pussy muscles, alternately squeezing and releasing his cock and making him gasp with the sensation.\n\nAs Robbie pumped and hammered into her, she felt her climax approaching. That surging rushing tide started to build somewhere deep inside, making her tingle from head to foot and causing sharp little jolts of electricity to coil out and into her from her clitoris. His mat of coarse wiry pubic hair was a delightful source of stimulation as it rubbed and tickled her delicate little button as he hammered into her. Every time he rubbed against her, she gasped and squeezed him, eliciting a gasp in return, and so, building each other toward their mutual orgasm, they pumped, and thrust as they reached for their ultimate goal.\n\nWhen her orgasm hit her, it was like a soundless explosion of white light, a tsunami of pleasure swamping her and making her groan and call his name, her entire body rigid as every muscle tensed in the ecstasy of release. Her pussy clamped down on Robbie's cock, the constrictor muscles squeezing him with irresistible, delicious, glove-like tightness, pushing him over the edge. Now it was his turn to groan out loud as he came explosively, hot, soul-draining jets of his seed hosing into her, his fertile spunk filling her every inner crevice and secret place.\n\nFinally he stopped ejaculating, the powerful jets of sperm reducing to a sticky trickle as he emptied out into her receptive pussy. Casey also relaxed, her shattering orgasm diminishing and fading in a series of aftershocks that left her weak and sleepy, but satisfied. Robbie withdrew and slumped down next to heron the rumpled bed\n\n\"Baby, if you do me like that every time, I'm definitely keeping you!\" she smiled, rolling on her side to slide her arm across his midriff and down, to squeeze and knead the sculpted muscle mass that was his buttock.\n\n\"Did I ever tell you, baby, you've got a great ass!\" she quipped, grinning as Robbie slipped his hand down the curve of her thigh to clasp and gently squeeze her firm yielding cheek in return.\n\n\"But your ass is much nicer!\" he smiled, dipping down to lightly kiss her as he pulled her closer, his smile widening as she burrowed into him, squirming round to spoon into the shelter of his arm as he pulled the covers over them both.\n\n\"Get some sleep, babe, we've got a seven o'clock start, and we have to be away by nine.\"\n\nCasey yawned. \"I remember, don't worry, the alarm's set, g'night Baby, love you!\" \n\n++++\n\nWhen Steve was wheeled in from surgery, Angie was waiting for him, a sweet smile on her face. Steve's hopes leaped as he saw her, thoughts of forgiveness and reconciliation racing through his mind, to be dashed as a thick envelope hit him on the chest.\n\n\"What's this?\" he demanded, and Angie's smile broadened into a big grin.\n\n\"This is the end of your life as you know it, you sick son of a bitch!\" she gritted, the smile never leaving her face. She pulled her chair closer so she could lean over him. \"I know what you did to my daughter, and the only reason the Sheriff's not here right now is because that fat, sweaty, worthless piece of shit is your cousin. If I had my way you'd be the sweet treat at the Saturday Night gang-bang in Laroque County Jail, so you better listen really closely, mister!\"\n\nSteve shrank back as the rage and hatred in Angie's eyes burned into him.\n\nAngie continued.\n\n\"These are divorce papers; you are going to sign them, and agree to all my demands. I want what I deserve after 23 years of putting-up with you and your bullshit, and you are going to pay. In addition, these clauses here mean you never contact Casey, Robbie or Joe Anderson; you're to stay out of their lives forever. Any breach of that and I shall feel compelled to file at least 15 charges of anal rape and incest committed over three years against our daughter, who has agreed to testify against you if charges are brought. The rape statute in this state is very interesting; each charge carries a five year term, so you could go away for a very long time. Adding in the incest charges I will file, you could die in jail. Am I making myself clear? Your mutt Sheriff is going to run for cover, and your family contacts in City Hall are going to drop you like a turd sandwich when this hits the papers, and it will, I promise you. You are going to pay, Steven Dolan, and your children are finally going to get some justice.\"",
        "Steve read through the papers, his face alternately tightening and blanching as he read through the list of her demands.\n\n\"You want the house...and the lodge? Not the lodge, my father built...!\"\n\nAngie cut him off.\n\n\"Steven, if you don't agree to everything there, you're not going to need either one. As it is, you're going to be far too busy rebuilding your business to need vacations in Lake Tahoe if word of this gets out...and it will if you don't toe the line. I'm not being unreasonable; this is not California, after all, I'm not going to strip you bare, although it may feel like it; all I want is what's mine, to eventually go to my children and grandchildren, and to Joey as well; he's your son too. What you do with what's left is of no interest to me; leave it one of your little tramps for all I care, but you will sign this and make sure your children get their due. You just need to consider the consequences of not complying with the clauses in that piece of paper in your hand. Sign it, keep your word, and nothing ever surfaces ever again. Fight me on this, and you'll find out just what I'm prepared to do to bring you to your knees. Are we communicating now, Steven Dolan?\" \n\nSteve nodded, a sick expression on his face, and when Angie proffered a pen and pointed to the documents, he signed without a quibble.\n\nAngie took the papers from his unresisting hands.\n\n\"Now that's done, I never want to see or hear from you ever again, is that understood? My lawyers will be in touch with you to finalise the agreement, and remember, you stay away from your children or you go to jail. This is how you pay for what you did to our kids, and you're getting off lightly; if it had been up to me I'd have taken a shotgun and blown your balls off for what you did to Casey, but this way, our kids can rest assured they'll never have to hear from you ever again. It's not justice, but it is payback, and it will have to do.\"\n\nShe stood up and folded the documents Steve had signed, pushing them into her purse and flicking her hair out of her eyes. She made to leave, but paused at the door.\n\n\"I went to see Robbie and Casey, they're happy together, he adores her, and he forgave me for her sake. I tried, and he let me back in, just a little way, but at least I still have a small part of my son to hold onto. You could have had the same, you could have tried. But did you even want to, I wonder? Well, now you'll never know, and at the end of your days, when you're alone, will you ask yourself 'what if...?' Maybe then you'll finally understand what it means to destroy the most precious gift you were ever given. Goodbye Steve.\"\n\nAngie walked out of the hospital, stopped, and took a deep breath. As she did, she thought of Robbie and Casey, and a bright, happy smile spread across her face.\n\n++++\n\nThree months passed, three hectic, busy months; Casey graduated 28th in a class of 200, and immediately moved down from Sacramento to Daly City, Robbie and Joey hiring a U-haul van to collect all her stuff and bring it back to the condo on Gellert. Joey and Karen moved to Daly City, to an apartment on Southgate Avenue, an easy commute to Palo Alto and a five-minute drive from Robbie and Casey. Joey had joined Robbie within three weeks of quitting his job, and had quickly immersed himself in the task of pushing GameStx into the forefront as a major player in the game software market. Already he had developed and unveiled plans for the company that had Steve and Elio Vargas salivating; Robbie merely smiled, his faith in Joey completely vindicated. Other plans also began to come together, marriage plans. Karen wanted to get married in the local Catholic Church, Our Lady of Pity, her parents wanted them to marry in their church in San Bernadino, and Joey didn't care where they got married as long as they actually got married.\n\nAt last the day dawned. Joey and Karen finally tied the knot in Daly City, their family and closest friends around them, and one surprising guest; Angie Rayne-Dolan, who, after a few tentative overtures, had become friendly with Sarah, and had been invited at Joey's request, on the grounds that she was, almost, family. The Reception was held at the Hilton on Union Square, a gift from Steve and Elio Vargas.\n\nAfter the toasts, and the banquet that followed, Joey led Karen onto the floor for their first dance, followed after a circuit by Robbie and Casey, then Sarah partnered with Steve, and surprisingly, Elio and Angie, looking very shy and self-conscious. During the course of the day the ladies were passed around from partner to partner, until Casey decided that she needed some Robbie time, so she decoyed him away from the family and led him away.\n\n\"Babe, where are we going, Joey's gonna...?\" inquired Robbie.\n\n\"Shush Robbie, just follow me, all will be revealed!\" grinned Casey, taking him up to one of the suites. \"This is Karen and Joey's Suite; Karen gave me the key, I want to have you to myself for a while, so get in there, boy!\"\n\nRobbie grinned and went to unlock the door, but it was already open. He peered inside, but nothing seemed to have been disturbed, so he shrugged and pulled Casey in and closed the door behind them. The drapes were closed so the room was in dim light, but Robbie could see it was a sitting room, part of a two-room suite with what was obviously a bedroom through another door. As soon as the door was closed, Casey turned to him and pulled him down to kiss him seriously, meaningfully.\n\nRobbie felt himself hardening, as did Casey, her hands rubbing and fondling his crotch as he squeezed her taut buttocks while they kissed.\n\nCasey fumbled with his belt, and Robbie responded by slipping her dress off her shoulders to let it pool on the ground around her feet. She was only wearing wispy little mesh panties, and they soon followed the dress as Robbie stripped her. His need was now almost overwhelming, and as Casey released him from his pants and tugged his cock out of his shorts, he lifted her by her perfect ass, allowing her to wrap her legs around his waist. As she did, he thrust forward, impaling her in one movement. Casey gasped as he slid into her so fast, and Robbie moved until her back was to the door, pinning her there as he began to piston his cock into her.\n\nCasey was gasping and sobbing with the intensity of being fucked in this way, as was Robbie, and he was rapidly approaching the point of no return. Casey felt the orgasm building through her, the raw sexual energy they were releasing swirling and coursing through her like a tidal wave of heat and emotion, and she came like white lightning, screaming with the force of her release. As her pussy clamped down on him, Robbie came with a shout of pure ecstasy, his cock swelling and surging into her, pulsing rope after rope of sperm boiling into her innermost recesses as he gave up all his essence for her.\n\nSated, Robbie leaned against the door, supporting himself as his forehead pressed against the cool paintwork, still holding Casey against him as she trembled and after-shocked from the volcanic orgasm. Eventually he let her go, allowing his shrinking cock to slip from her as she slid back down to stand and lean against him.\n\n\"Wow, babe, we need to do that again, soon!\" she giggled, and stopped, her head cocked, listening.\n\n\"Robbie, there's someone in there!\" she hissed, pointing to the bedroom. \n\nRobbie made himself presentable as Casey slipped her underwear and dress back on, and the two of them silently approached the bedroom door. Sure enough, the unmistakeable sounds of people in the throes of passion made themselves heard. Robbie grinned, and made to leave but Casey stopped him.\n\n\"There's not supposed to be anyone in here, go check it out, please!\" \n\nRobbie silently pressed down on the handle and swung the door open. In the bed could be seen two figures engaged in what looked and sounded like very satisfying sex. Casey snapped on the light, and the woman shrieked and yanked the sheets up over her head, while the man gazed back at Robbie with an embarrassed 'busted' expression on his face.\n\n\"Steve?\" gasped Robbie, as Casey nudged him and indicated with her chin the female occupant. Slowly she emerged, to stare sheepishly at Robbie.\n\n\"Mom!\" he gasped, \"what...why...with...Mom!\" he burbled, transfixed, shocked at catching his mom in such a compromising position, while Casey grinned and tugged his arm to pull him out of the room.\n\n\"Sorry, folks, didn't mean to disturb you, please, go on with...whatever you were doing, we didn't see a thing, really, come on Robbie...!\" she called out, towing him out of the room as he spluttered and blushed.\n\nAs soon as they closed the connecting door, Casey collapsed against him, unable to contain her fit of giggles.\n\n\"Oh baby, you should have seen your face, oh my God, I wish I had a camera just to catch that look, you were so funny!\"\n\n\"But mom...Steve...!\" began Robbie, to be cut short by Casey. \n\n\"They were doing nothing wrong, nothing you and I don't do every day of the week, so don't be such a prude! Honestly, Robbie, Sarah's a woman, not a plaster saint, and she's finished being your mommy, now she needs some time for some fun of her own. No, not another word!\"\n\nRobbie looked rebellious for a moment, then grinned.\n\n\"Do you know you looked exactly like mom when you said that!?\"\n\nCasey laughed out loud, and led him back down to the ballroom.\n\nSarah and Steve joined them shortly, Sarah avoiding their eyes until Robbie gave her a quick hug.\n\n\"Steve's one of the good guys, Mom, you need one of those, go for it!\" he whispered in her ear, and Sarah smiled back at him, her hand searching for Steve's. Just then Casey came up to them and pulled Robbie over to one side.\n\n\"Baby, I want to show you something!\" she giggled, eyes dancing with glee. She led him over to the bar, and pointed out onto one of the balconies, where Angie and Elio were engaged in a passionate bout of lip-wrestling.\n\n\"Must be something in the air...!\" she commented, barely able to contain her laughter.\n\nThey circulated around a little more, eventually spotting Angie and Elio trying to look nonchalant, and as they caught her eye, she waved them over.\n\n\"Babies, I have something for Joey, and I want you there as well, where is he?\" \n\nRobbie spotted Joey and Karen and called them over.\n\nAngie held out her hand, and Joey, looking slightly mystified, took it.\n\n\"Joey,\" she began, \"I have something for you, a sort of wedding present.\" With that she handed him a thick file, and a set of keys.\n\n\"These are the title deeds, and the keys, for the lodge at Lake Tahoe. It was built by my ex-husband's father, your grandfather, and, as you're the oldest son, I think it's only right you should have it. There are three Ski-doo snowmobiles in the garage, and a Jeep Cherokee and snowmobile trailer; they're all yours as well, all the papers are there. No, don't thank me; for years you looked after Robbie, so thank you!\"\n\nJoey looked stunned and lost for words, eventually managing to gasp out his thanks.\n\n\"Thank you for such a wonderful gift, but wouldn't you rather keep it in the family?\"\n\nAngie smiled.\n\n\"Joey, you are family, the best family Robbie ever had, and besides, I could never go back to that place again; every time winter rolls around, my thoughts turn to West Palm Beach, not snowmobiles on a snow capped mountain!\"\n\nJoey and Karen both hugged her; there seemed nothing more to be said.\n\nRobbie cleared his throat.\n\n\"Joey, I wanted to wait until we were all together before I gave you your present, as there's kind of a reason for it.\"\n\nWith that he handed Joey the keys to his Bentley Continental GT.\n\nJoey blanched.\n\n\"No, Robbie, I was only kidding, I don't want your car, you love that car, Karen, tell him!\"\n\nRobbie grinned.\n\n\"I know you love that car too, and that's why I want you to have it. Casey and I need something a little more...family friendly.\"\n\nJoey looked blank for a second, then his eyes widened.\n\n\"Holy Shit Robbie, you guys are...you mean, you and Casey...are...I'm gonna be an uncle?\"\n\nCasey smiled. \"I found out last week for certain, but we wanted to wait until everyone was here before we told the family!\"\n\nJoey whooped and grabbed Robbie round the waist, lifting him off the floor as he laughed, then he picked up Casey and spun her round before kissing her soundly and handing her back to Robbie, slightly dazed but smiling broadly.\n\n\"Anyone else got anything they feel like telling me? \n\nAngie handed him another envelope, and smiled at him. \"Go ahead, open it!\" \n\nJoey opened it and pulled out two airline tickets and a booking slip. He looked at them and went pale, wordlessly handing them to Karen, whose eyes popped.\n\n\"The Kahala Hotel in Oahu, two weeks! Oh my God! Where did these come from?\"\n\nAngie smiled at him.\n\n\"Let's just say you have a rich relative; although perhaps not so rich now!\" she dimpled, her smile broadening into a wide grin \n\nJoey stared at her, knowing exactly who she meant, then began to laugh, leaning against Robbie as he laughed until Robbie also began to laugh, finally getting the joke.\n\n++++\n\nRobbie pulled up outside the church to a waiting Angie, and pulled two baby carriers from the back seat of the sleek silver Mercedes-Benz S-350 AMG. He handed one carrier to Casey and the other to Angie, then jumped back in to park the car around the corner from the church. That done, all three of them headed into the church, the interior cool, dim and muted after the blazing sunshine and wall of heat outside. \n\nRobbie left the babies with Casey and Angie as he made his way to the front pew. It was a special day today; he and Joey were giving their mother's hand in marriage to Steve Vargas, and he wanted nothing to go wrong. He passed by Frank and Caitlin and the twins, the girls and Caitlin all reaching out to brush fingertips with him as he passed on his way to the front of the church to wait for Joey and Sarah, grinning at Steve and Elio as they fidgeted nervously.\n\nThe ceremony was short, as Steve and Sarah had requested, simple words and a modest ceremony, and then the family was congregating outside for some photographs. When they'd finished, Elio, Sarah and her new husband went looking for Casey and Angie.\n\nThey found them sitting in the shade of an olive tree, Casey and Angie sitting on a bench with the two baby carrier between them. As Sarah came up, Angie undid the straps on the carrier next to her and handed the baby to Sarah, then linked arms with Elio, her constant companion for almost a year now as he sat down next to her.\n\n\"Hello Caitlin, did you miss mommy?\" cooed Sarah, nuzzling her daughter while Casey unstrapped the other baby and cuddled little Robbie before handing him to his grandmother. They had a few moments of peace before Moira and Morag came bustling up, demanding they be allowed to hold the babies and asking everyone to photograph them holding their little cousins. Frank and Caitlin also joined them, all the family congregating around the two newest members of the family and taking turns to hold and cuddle them. \n\nRobbie and Joey watched their family from the shade of another olive tree across the car park as Karen came up to join them, her baby-bump becoming really obvious as she linked arms with both of them. \n\n\"Your turn soon, meat-head, are you ready for the joys of parenthood?\" asked Robbie, grinning as Joey nodded emphatically.\n\n\"Ready, willing and able!\" he retorted. \"Speaking of being ready, if you get to feeling jittery about your own wedding, go have a talk with Uncle Frank and Aunt Kat, they did wonders for me when it came to getting my head facing the right way, little brother!\"\n\nKaren looked at Casey and the twins, and smiled as she rested her head for a moment on Robbie's shoulder.\n\n\"You did OK, Robbie, you have a beautiful family and you'll be just fine on the day, trust me!\" she whispered as she patted his arm."
    ],
    "authorname": "beachbum1958",
    "tags": [
        "brother sister sex",
        "brother sister incest",
        "brother",
        "sister",
        "love",
        "anal"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lost-and-found-ch-03-2"
}