{
    "title": "Hitting the Bottom Ch. 07",
    "pages": [
        "Author's note: \n\nThank you to my co-creator and editor, the brilliant Brit, who co-wrote this chapter with me :) \n\nIn previous chapters: Dan, a cop, had attempted suicide after assaulting his ex-wife/sub and ended up at the hospital where he met Nurse Sandra. Their relationship grew over the weeks following his release until finally they became lovers. Sandra wants Dan to dominate her, while Dan fears doing so would put Sandra at risk. Finally, after talking to his shrink and establishing limits with Sandra, their first play session is set to begin. \n\nIn this chapter: One long, hot play session. Ooooh yeah baby! :D \n\n~~~~~~~ \n\n\"So babygirl... you ready to play?\" \n\n\"Oh yes. I'm so ready. Yes sir!\" \n\nI breathe deeply, drinking in the naked need and anticipation in her eyes, feeling my muscles tighten as I catch and ride a renewed surge of adrenaline, my heart thumping hard in my chest. \n\n\"Good girl.\" \n\nI keep my voice low, pause to let my approval resonate between us, and watch Sandra's cheeks warm and her lips part with her tiny whimper. God, she's sweet. This beautiful, sexy, total newbie little subbie, watching me with those wide, trusting eyes. Fuck, she's gorgeous. \n\nI give myself another mental shake. This is Sandra's first play session, and I've been planning it for a whole week in my mind. I want it to be perfect for her. To do that, I need to keep my focus. \n\nFocus, Dan. \n\nFeeling myself slip into my well-practiced role is like coming home. I let the familiar sense of calm settle around me, steadying my voice as I give her my first instructions. \n\n\"Babygirl, I want you to clear the table, take the pitcher and empty glasses back into the kitchen, wash them and put them to dry. Then I'd like you to spend five minutes mentally composing yourself, relaxing your mind and your body into accepting whatever I may ask you to do. When that time is up, come back into the living room, stand on the rug facing me with your feet shoulder width apart, shoulders back and hands behind you clasped above your ass, and wait for my next instruction. Is that clear babygirl?\" \n\nShe's been listening to me closely, nodding her head at each of my directions, and now she smiles shyly at my question. \n\n\"Yes sir, all clear.\" \n\nI nod my approval and without further comment Sandra rises from the sofa, picks up the glasses and pitcher and turns to the kitchen. \n\nGood. I have about six minutes to prepare the scene. \n\nI quietly walk to the bedroom, strip and grab a towel from the en-suite, hitching it round my waist as I walk. Picking up a pillow from the bed I trot back to the living room, dump the pillow on the chair and rearrange the coffee table and the shaggy purple rug so that they are pushed back a couple of steps away from the single, cushioned chair. Close enough to feel intimate, far enough to be the perfect performing distance. I smile, picturing my plans for Sandra in my mind. \n\nReaching down to the side of the chair I lift my overnight case, open it and remove a compact kitchen timer, the sort you dial to the desired minute and then watch it slowly whirr its way backwards. This one sounds a metallic purr that grows louder the closer it gets to its goal until it announces the time's up with a loud ping; perfect for my purpose. I place it on the side table next to the chair and return the case to the floor. With my preparations done I tuck the pillow behind me and settle back, waiting, allowing myself to indulge in my rising excitement for just a moment while I'm still by myself. \n\nFuck, this is really happening. It's already started, and by God I'm going to see it through. \n\nRight on time Sandra walks through the kitchen door into the living room, sneaking a look at me before moving forward to the rug and then turning to stand facing me, her feet apart and her hands behind her back. I can see the slight hitch in her breathing as she obviously tries to quieten her anxiety. \n\n\"Well done on your first instructions, babygirl.\" \n\nI let the praise warm my tone, and watch its effect on Sandra - her tiny sigh of relief, the faint blush on her cheeks, the curl at the corner of her mouth. Some of the tension leaves her shoulders. Good. \n\nI decide to let her stand there for a bit longer, just to get used to what must be a strange feeling - standing in front of me, being watched. Complete silence envelopes us, broken only by the ticking of the wall clock as my eyes follow the rise and fall of her lovely chest beneath her soft cotton top. \n\nSoon her breathing slows down as her nerves subside and then it grows deeper, fuller with her growing excitement. So she likes being watched, my babygirl. My next words, though spoken in the same calm, steady voice, break the silence and cause her to jump. \n\n\"Very good, babygirl. Now strip for me. I want you as naked as the day you were born, clothes neatly folded at your feet and all jewelry including your watch laid on top. When you're done please resume your position.\" \n\nSandra glances up to look into my eyes, and I catch the arousal written all over her face. She starts stripping, following my instructions without hesitation, sweetly submissive and incredibly sexy to watch. I can see she is torn between giving me a show, systematically stripping, and throwing all of her clothes off at once. \n\nMethodical wins and I am treated to her luscious body slowly and surely exposing itself to my appreciative gaze. My body tightens as her tits are freed from her bra, and my gaze glides along the clear tan lines separating the milky-white orbs from her otherwise light-golden chest. She must look sensational in that bikini I think, and at the same time I note with satisfaction there's more than enough skin to color and leave my marks on, if I so choose. On the other hand her tits are so damn-near perfect it would be a shame to mar them... such delightful choices to make! \n\nBy the time her panties begin their journey South I am sporting a hard on a pole vaulter could have used. She steps out of them and folds them onto the neat pile at her feet. \n\nShe is completely naked now, and the soft light from the corner table adds an ethereal glow to her skin. She reaches back to release the catch on her simple gold necklace, the movement making her gorgeous breasts perk and lift and my mouth to water in response. While she fumbles with the catch I notice for the first time the peculiar-looking pendant that's been hiding in the valley of her chest under her T-shirt, but I can't quite catch its details. In another moment she's got it off and is bending down to put it on top of her pile of clothes, followed by her watch, and then stands upright again with her gaze firmly fixed to the floor. \n\nThis time when I break the silence it is in a lower, rougher, but equally steady voice. \n\n\"You look sensational, babygirl.\" \n\nShe breathes sharply and when she answers her voice is soft, almost dreamlike. \"Thank you sir\". \n\n\"Look at me baby. Let me see those beautiful eyes.\" \n\nSandra lifts her gaze up, but I'm not sure she quite sees me. Her eyes look darker, her pupils dilated, her stare slightly unfocused as her attention is focused inwards, lingering on the sensations and feelings brought to the fore by this first taste of submission. \n\nSo beautiful. Fuck. With some regret I pull her out of her reverie for a few moments. \n\n\"How are you doing, babygirl?\" \n\nHer eyes re-focus on mine and she blinks, breathing in a bit shakily, and a slow, tentative smile curls her lips upwards. \n\n\"I'm good. Real good, I think... am I doing okay so far?\" \n\nThe tinge of insecurity in her question is endearing. How can she not know how amazing she really is? I feel my smile stretch across my face. \"You're absolutely incredible, baby. And you're doing very well indeed. Ready for more?\" \n\nI can actually see her standing taller hearing the pleasure in my voice. \n\n\"Yes sir. I'm ready.\" \n\n'Good girl. Come here baby, and kneel between my feet.\" \n\nLeaning forward I remove the pillow from behind me and place it on the floor. Sandra takes the couple of paces needed and lowers herself smoothly onto the pillow, using her hands on my thighs for support before bringing them behind her back again, her ass resting on her heels. \n\n\"Perfect.\" \n\nI reach behind her head to gently tug down the elastic band holding her hair in a simple ponytail, until the silky strands spill over her shoulders in a sweet-smelling cascade. I place the hair band on the side table and then bury both my hands in her hair, letting my fingertips lightly massage and soothe her scalp. Sandra moans her pleasure, her eyes closing and her head tilting back into my exploring fingers. \n\n\"Mmmmm... that feels so good.\" \n\n\"Glad you like it babygirl. You may enjoy this massage as long as you keep talking to me... tell me how you felt just now, stripping for me like you did, and then coming here to kneel at my feet.\" \n\nShe takes her time before answering, rubbing her cheek against the inside of my thigh like a kitten begging to be stroked. I oblige her, sensing her need for reassurance, and can feel her relax into my touch as she replies. \n\n\"Well... I was surprised how that simple act of your giving me instructions, and my following them - how it completely changed the dynamic between us. How submissive it made me feel.\" \n\nI peer down at her. \"Hmm. And how do you like that feeling?\" \n\n\"Oh it's absolutely amazing... I love it!\" A soft, nervous giggle escapes her, as if she can't quite believe it herself. \n\nI smile. \"It shows, babygirl... You submit beautifully. I loved watching you strip for me. And you look absolutely stunning right now - naked, kneeling, and rubbing against my legs like a sweet little kitten.\" \n\nSandra inhales sharply and her eyes turn up to look boldly into mine, shining her need at me. \n\n\"It feels incredible, sir. It's exhilarating. I have a million butterflies in my stomach but it's all good - I've never felt anything like this before...\" She presses her head back against my massaging fingers, closing her eyes and soaking up the sensations. \n\n\"Mmm... and are you getting hot for me baby? Is that sweet pussy warming for me just a bit?\" \n\nAnother giggle escapes her throat. \"Just a bit? I'm freakin' soaked, and you haven't even touched me!\" She exclaims, color rising in her cheeks, her eyes growing wide in disbelief at her own boldness. \n\nI can't help but chuckle. She's such a delight, and I can't quite believe yet that I have her here, submitting to me like this. Her words however give me the confidence to push forward to the next part of my plan for tonight. My stiff, swollen dick twitches with excitement under the towel. \n\n\"That's good to know baby because I'm hot for you, too, and what's coming next is going to be a challenge for both of us, made all the more fun since we're both a bit on edge already.\" \n\nHer eyes sparkle. I briefly consider throwing my plan to the bin and simply fuck her silly right here and now, but the errant thought is firmly squashed. This is going to be so much better. With both my hands I tilt her head back so that I can watch her expression as I give her my directions. \n\n\"Babygirl, for the next 30 minutes I want you to focus all your attention on making love to my cock with your mouth. You may also use your hands if you wish. There are however two rules to this exercise: you must not make me cum, and you must not let me go soft, either. Should I do either the exercise will come to an end, and you will be withheld from getting your first reward. Do you understand your task?\" \n\n\"Yes sir.\" \n\n\"Good. Now, during your task I want you to completely block out whatever is happening around you. Should a herd of wildebeest run through the room you will ignore them. Should your phone ring it is of no concern to you. Your entire being for this time is to pleasure me. Absolutely nothing else exists except you and me, your mouth and my cock.\" \n\nHer face softens as I talk, her eyes getting that far-away look again, and then drop towards my lap where my painful erection had already tented the towel. Before she can start, however, I bring her face up once more to give her some final pointers. \n\n\"Bear in mind that to make this exercise more... entertaining... I may decide to watch the television, read a book, talk on the phone or just generally relax, anything but concentrate on my hard on. On the other hand I may also deliberately indulge in my excitement, in which case it is more likely that I cum. So it would be essential that you concentrate on the task if you want to succeed in this first challenge. Is that all clear, babygirl?\" \n\n\"Yes sir.\" \n\n\"Good, then you may begin.\" Reaching over to the side table I retrieve the kitchen timer, wound its dial to 30 minutes, and replace it on the wooden top where we both can see it. \n\n\"Your time starts now.\" \n\nI settle back for half an hour of pure enjoyment. I used to use this exercise in the past to get my sub into the right mindset, and also to give a designated start of play. I figured it would work well as a first-taste for a total newbie, too. \n\nSandra's fingers tremble as they reach for the towel at my hips and tug it open, revealing the engorged member beneath. Leaning forward she eyes her prize, bowing to kiss its swollen head almost reverently before bending further to slowly lick the underside of my cock with one long, sensuous stroke, closely followed by another and another and another, her tongue occasionally flicking the plum until I am so hard my freaking skin feels too tight around my shaft. \n\nFuck. She's only two minutes in and already I'm about to explode. Better get your attention elsewhere, officer, or you'll disappoint both of you on your very first play session. You don't want that now, do you? \n\nReaching across to the table again I grab the copy of Home Improvement Monthly and blindly open it on an article titled 'Renewable Energy in the Solar World and the Economic Savings With Correct Installation'. I make myself read the first paragraph. Fascinating stuff I comment snarkily inside my head, but I'll take any distraction I can get right now. Her tongue has ceased its leisurely licking and is now wrapped around the helmet along with her soft, wet lips. \n\nFuck. I hadn't thought this session through, apparently... I hadn't quite factored in just how good she was with her mouth. \n\nHer lips sink slowly and very deliberately down the length of my dick until they kiss my pubic hair and my cock head is firmly buried in her throat, the vision of the slight bulge in her slender neck making me even harder. Suddenly she starts to hum and I let out an involuntary groan of delight. \n\nShe looks up, still with her throat around my cock and I can see the question in her eyes: 'Am I doing good baby?' I just lean back and groan my approval while rapidly engrossing myself again in the wonders of the sun and its benefits to the environment... Anything to stop me from exploding. Anything! \n\n'A solar panel sited to be only ten degrees off true South and 15 degrees from a required elevation will lose 18% of its maximum efficiency on a day with cloud cover not exceeding the stipulated norms. Should the degree of mis-siting increase then the efficiency will exponentially decrease with...' \n\nSandra has sensed my imminent orgasm and clearly noticed my attempt to bury myself in the article. She releases me from her throat and goes back to licking the shaft up and down. Long slow teasing licks, but not hitting the head with each swipe this time. \n\nThank fuck that's working I think as I feel the excruciating throb in my bell end decrease. I now make a concerted effort to read the magazine and slowly feel the clenched muscles low in my belly relax until finally I am able to draw a full breath. \n\nPhew. Out of danger zone for now. \n\nA few minutes longer of light, slow, teasing licks and kisses, some of them venturing away from my dick to the crease of my thigh or over towards my abdomen, and I can actually feel the edge of my hardness lessen. I relax enough to notice the timer's whirr now, the sound just noticeable above our breaths and soft moans. I let my fingers glide and stroke through Sandra's smooth hair, enjoying the silky feel under my pads, my breath slowing down to near-normal. \n\nSandra senses the drop of tension in my muscles and decides to change tactics again. Taking my testicles in one hand she gently rolls them between her fingers, and with her other hand she strokes the oh-so tender area between the balls and my ass. Fuck that feels good. Again I start to groan in approval. I can sense Sandra's grin as she lowers her head and sucks on the very tip of my cock once more, her tongue gently teasing the hole that is now producing as much pre cum as I can ever remember. \n\nJeez this is getting difficult. And we're only 10 minutes into the game. \n\nFrantically I page over to read about 'Damp Proofing Basement Extensions', but her sucking is bringing me closer and closer to the edge. Just as I am about to explode she nips the head with her teeth, just hard enough to get my attention. \n\n\"Ow fuck!\" I yelp and any thought of cumming instantly vanishes, along with any feeling of peace and relaxation. \n\nSandra instantly glances up and her eyes open wide in horror when she sees the expression on my face; I am not happy. Yes, her little bite had the desired effect of stopping my orgasm, but teeth are an instant passion killer for me, an absolute no-no. In fairness I hadn't told her that, but I have no doubt that she got the message as she quickly goes back to sweetly, softly and lovingly sucking my helmet in order to make me happy again. \n\nHer renewed efforts soon achieve their desired effect and bring my slightly wilting cock back up to full hardness. The following twenty minutes are a delicious game of suck and stop, massage and cease, lick and tease. \n\nAt some point she tries slowing down by releasing my dick from the depths of her hot, wet mouth and instead nuzzling against me, letting her nose bump and press gently against my balls while my throbbing dick glides and rubs along her cheeks, aided by the copious precum seeping from its slit. But instead of cooling me off, watching the shimmering trails of sticky juice decorating her face and stringing from her skin to my cock head almost sends me over the edge again, and I feel my balls tighten up and the familiar tingling at the base of my spine, hear my own breath hitch in the back of my throat - \n\nSandra catches onto the early signs of pending orgasm and hastily withdraws, ceasing all stimulation abruptly. I hiss between my teeth, teetering right there on the edge of climax for endless seconds, my fists balled, my stomach clenched and my eyes shut tightly. \n\nFuck. Who's challenge is this anyways, hers or mine?! It would serve her right if I came now, teasing me mercilessly like that... \n\nBut no, I'd be damned if I failed her on her first challenge. Suck it up, Dan. Hold it. \n\nI open my eyes and look at her face as she watches my dick closely, with fascinated yearning. Her lips are slightly swollen from the prolonged blow job, darkened to a cherry-red color and slightly parted to allow for her quick breaths, her eyes softened with that slightly out-of-focus quality that I've just come to recognize with her submissive state of mind. My cock throbs and twitches as if trying to jump back into that pretty mouth and she blinks her surprise and giggles, her gaze shooting up to meet mine, the color on her cheeks deepening to bright crimson. \n\nGod she's sweet. I can't help myself; I bend down to kiss her deeply, losing myself for several moments in her taste and her softness before pulling back. ",
        "\"Just a couple of minutes longer babygirl. You're doing so incredibly well. Keep going... I can't wait to give you your reward.\" \n\nSandra smiles widely and bows low to take my cock into her mouth again, bobbing her head slowly and steadily with full dedication, humming again, as if chanting a mantra. The sensation is phenomenal, and I feel my balls tightening up yet again. \n\nThe ticking of the timer sounds very loudly now on the table next to us, and I know she can hear it, too. With just a minute to go she glances up at me and lets me see the devilish glint in her eyes as she starts to suck harder, faster, working her tongue against the underside, up and down, up and down, and then she's pushing all the way down so that her nose is nestled tightly against my pubis and the head of my cock is fully buried in her throat. Just as the timer starts to whirr obnoxiously loudly she swallows around my hot, engorged dick, milking and massaging the whole shaft from tip to base... \n\nPING! echoes around the room, and she instantly rubs her fingers hard against my perineum adding an acutely pleasurable pressure to the overwhelming sensory overload, now moaning loudly all around me. \n\nI explode in bliss, my cum spewing rope after rope down her throat as she continues to finger- massage me and gently suck and swallow every drop from my excruciatingly sensitive cock, the delicate lapping and licking going on long after I had finished cumming. \n\nAfter a couple of minutes indulging in her loving attention I gently take her hair in one of my hands and lift her head so she can look at me, my cock slipping out of her lips and flopping back down onto my thigh. \n\n\"Babygirl, that was absolutely incredible. Come here.\" \n\nI help her up from her kneeling position, pulling her to sit on my lap and cuddle close. She buries her face in the crook of my neck and breathes in deeply, her arms sneaking around my torso to hug me tight while my own hands glide slowly up and down her smooth back, soothing and calming her further. \n\nA few minutes pass as her soft, warm nakedness relaxes under my hands, and then I feel her starting to squirm in my lap, her lips beginning to trail kisses up my neck to the underside of my jaw, quickly adding small licks and tiny sucks as she obviously tries to get my attention. I pull back and grin down at her upturned face. \n\n\"You trying to tell me something babygirl?\" \n\nShe smiles slowly and nods her head, but says nothing. \n\n\"Ahhh... might it have something to do with a certain reward you were promised?\" \n\n\"Mmm... yes sir.\" She admits softly, an excited undercurrent peeking behind her shy smile. \n\nI tilt my head to one side, suppressing my answering grin, and instead raise an eyebrow. \"You know, babygirl, that was mighty cheeky of you, doing what you did. I never did tell you to get me off. I specifically said you were to suck me for 30 minutes without letting me cum.\" I say, watching the emotions sweep across her face. \n\nI expect some nerves to show at my words, mildly-spoken as they were, but can see none in her expression. Instead, her eyes twinkle with distinct feistiness and she pulls herself back, straightening her spine and sticking out her chin, damn cute as she holds her own even as she's sitting butt-naked and horny on my lap. \n\n\"You never told me NOT to get you off when the time's up\" she points out boldly. \"I followed your directions to the tee.\" \n\nMy chuckle escapes my throat before I can catch it. \"Ha! That you did, babygirl. That you did. I see I may need to set up some rules around taking the initiative in session without my explicit permission...\" She bites her lip looking just a tiny bit remorseful, and I am almost knocked over by my answering need to reassure her. \"But indeed today you've done nothing but follow my instructions in the best way possible, and for that you deserve your very first reward. You ready for that, babygirl?\" \n\nShe releases her abused bottom lip to sigh softly, heat burning in her eyes. \"Yes, please. I'm so ready!\" \n\nI take her head in both my hands and kiss her hard before growling into her smiling lips. \"Good. Get up and go over to the coffee table. Lie down on your back and spread your legs wide for me. Go.\" \n\nSandra almost jumps off my lap and then pretty much knocks my socks off as instead of walking the few steps over to the coffee table she drops down to her hands and knees. Throwing me a hot, seductive look behind her shoulder and wiggling her juicy ass at me she starts to crawl over to the coffee table in slow, exaggerated movements. \n\nGod she's going to kill me. And I'm going to die a happy man. \n\nI can see her swollen pink labia peeking from between the rounded tops of her thighs and I am immensely grateful for having just cum. If I hadn't I'd already be buried balls-deep inside of her, all plans for rewarding her be damned. I lean forward, forearms on knees, taking in every minute detail of the show she's giving me. \n\nWhen she reaches the coffee table Sandra gets up, turns and sits down on the low, solid surface before sinking further to lie flat on her back as instructed. The oval table is made of thick natural wood, smoothed and stained to a gleaming dark sheen, its edges softly rounded. The dark background contrasts beautifully with her golden-creamy skin and blond hair, and at that moment I wish I had a camera with me to take her picture like that. I make a mental note to ask her how she feels about having her picture or video taken. For now, I simply commit the breathtaking view to memory. \n\nShe's fucking gorgeous like that. \n\nI get up and pick up the towel left behind me on the sofa, folding it neatly as I walk forward till I get onto the carpet, looming tall over her, and then walk slowly around the table, my paces muted by the thick cotton under my naked feet. Sandra follows me with a hint of apprehension in her eyes until I get behind her shoulder; instead of craning her neck back to keep eye contact she relaxes and closes her eyes, giving up that little measure of control. \n\nGod she submits beautifully. \n\n\"Mmm... very good babygirl. You look so tasty spread out on the table like that, it's hard to decide which part of you I'm going to eat first...\" \n\nI can hear her breath hitch at my words and she moans softly and opens her thighs even wider, letting her knees drop out and arching her back, pushing her chest up, clearly indicating which parts of her body she would most appreciate feeling my mouth on. \n\nI crouch down and gently lift her head with one hand, slipping the folded towel under it with the second. \"There you go baby. Let's get you to be nice and comfortable for your reward.\" \n\nShe smiles and opens her eyes to meet mine again. \"Thank you\" \n\n\"You're very welcome babygirl.\" I lean in for a quick kiss but withdraw before we can get carried away. \"Now let's talk safewords for a minute. We're going to use the traffic light system. Are you familiar with it?\" \n\n\"Ahm, only theoretically, but yes I know how it works. Green means 'Go', Yellow means 'Slow', and 'Red' means 'Stop'.\" \n\n\"That's right. Now you may use these safewords whenever you need them and as many times as you need to. It may take a while for me to learn your body's reactions and I cannot read your mind, so I need you to communicate verbally if you're uncomfortable or if something is wrong. Okay?\" \n\nAt her nod I continue. \"I may also ask you 'what's your color' and expect a prompt and honest answer. Understood?\" \n\n\"Yes sir.\" She mumbles, closing her eyes again and breathing deep, but I cannot quite tell if it's because she fears she may need those safewords or because she's excited by the possibility. \n\n\"Hmm. So tell me babygirl, what's your color right now?\" \n\nHer eyes fly open and clash with mine. \"Oh it's green, sir. Please, I'm all green!\" \n\nI laugh my relief. \"Good! In that case, here are the rules for the rest of this session. First, only speak if you're spoken to or if you need to use your safewords. I love hearing your voice and you're free to make any noise you want, but I want your mind focused on receiving, on feeling the sensations in your body, not on conversation. All right?\" \n\n\"Yes sir.\" Her voice is so soft and breathy, so fucking sexy, I almost regret my own rule. Almost. \n\n\"Good, and second, keep still. Remember that the pace of your reward is mine to decide, not yours. Keep your body flat on the table; there will be immediate consequences if you don't. Got it?\" \n\nHer breathing quickens noticeably with my words, her nipples tightening further. \"What - what consequences?\" She manages to ask. \n\n\"Try it out and you'll see.\" I say evenly, laying out the bait tantalizingly clear before her. She groans deep in her throat but then nods again. \"Yes sir.\" \n\nI smile and take a deep breath of my own, blowing it out slowly and evenly. I run my hand down her torso, between her rose-tipped breasts and down her stomach to her lower abdomen, softly massaging the low mound of her belly before coming up to stroke the outer curves of her tits with both hands, then pushing them close together and bending to lick and kiss the gorgeous orbs while still avoiding her nipples. I hear her quickly drawn breath and feel the movement in her hips and waist as she starts to squirm and arch, but then stops herself short remembering my order to keep still. \n\n\"Mmm, very very good babygirl... you're being such a good girl for me.\" \n\nI reward her by returning my mouth to her skin, trailing open-mouthed kisses down her ribcage to the dip of her belly button and lower still to the crease of her leg, then up her side all the way back to her tits again where I finally suckle gently on those pebble-hard tips while kneading the flesh around them gently, repeatedly, enjoying the tension I can sense in her muscles as she fights with herself to curb her responses. So sweet. \n\nFinally I draw back and rise up to my feet, feeling my dick at half-mast - surprisingly soon after my recent climax - bobbing in front of me as I walk around her until I come to a stand between her spread thighs, and slowly kneel on the carpet, pushing her knees further out as I do. The table is quite low, and I note with satisfaction that with her feet on the floor her knees are still slightly higher than her hips, which should prevent the strain on her lower back from becoming too intense. I plan to keep her in this position for a while. \n\nHer eyes are back on me and I smile; I'm happy to let her watch. \"Put your hands under your head babygirl so that you can see better, and remember to keep quiet and still.\" I say, sliding my palms up and down from knees to hips and back, lightly and soothingly. She breathes in and nods, and I bend down to start kissing and tasting the soft skin at her inner thighs. Her muscles jump on initial contact and I hear her whimper softly whenever my lips venture closer to her pussy, but she keeps her position and I smile into her skin. \n\n\"You're such a good girl baby...\" \n\nI raise my head enough to take a close look at her pretty pink pussy, noting the hint of wetness gleaming around the dark-pink hole, the way her outer labia seem slightly swollen and peeled back to allow her inner lips to peek through. The smell of her need thick in the air between us. \n\nSo something about this situation has definitely made her horny. Whether it was the 30-minute blow-job, her submission to me, the potential of punishment or the expectation for her reward I still don't quite know, but as a whole I can tell with certainty that she likes the session so far. Yes! \n\nI bend over to lick along the crease to the right of her pussy with a wet, flat tongue, the scent of her sex and the bare hint of her taste going straight to my head and stiffening my cock further. I groan and repeat the movement on the other side of her groin and feel her knees close around my ears in reaction, trying to push my face to the center. \n\nStraightening up, I deliver two quick spanks to her inner thighs, one on each side, and she squeals in surprise. Her eyes shoot up to meet mine again but I am pleased to note that she spreads her knees again and keeps quiet, remembering the 'no talking' rule. \n\n\"Tsk, tsk, tsk, I told you to be still or face the consequences, babygirl\" I say mildly and her eyes widen. I can almost see the wheels in her head turning as she catches on to the little game I'd devised for her, and I almost laugh out loud as she arches her back off the table, unprompted, obviously testing my reaction. \n\nI oblige by reaching out and slapping the side of her breast, watching her flesh jiggle at the impact as her creamy skin blooms in light pink. She gasps loudly but holds my gaze steadily with her heavy-lidded stare as she deliberately repeats her movement and arches her back right off the table once more. \n\nI smile. \"So you like this game, babygirl?\" and slap her other breast, leaving a twin quickly-fading mark on her sensitive skin. She sucks her breath in and then answers shakily: \"Ohh yes sir... yes I love this game!\" \n\n\"Good. Now hush and keep still, unless you crave those spankings more than you do my mouth on your pussy...\" \n\nI can see her inner debate written all over her flushed face and smoldering eyes as I lower my face again until my lips come in contact with her swollen folds and I start eating her out for real. She tries to hold my gaze at first but soon her eyes roll back and close as the pleasure builds and I revel in her surrender, licking and sucking up and down her slippery slit, my lips pulling at her wet, engorged labia, taking it deep into my mouth before moving to circle my tongue around her stiff clit.  \n\n\"Mmm, mmm, ohmygod-ohmygod that feels so good!\" Sandra moans and mumbles to no one in particular and while I did say 'no talking' I figure this doesn't really count - I'm not sure she even noticed that she said anything - and go back to circling her erect little nub, moving my tongue a little quicker this time. \n\n\"Ohmygod yes, please, yes!\" she moans and pushes her pussy up into my mouth, her hips suspended above the table. I smack sharply on the lower part of her upturned pelvis where her perineum meets her rosebud in between the bottom curves of her ass cheeks. SWAT! \n\nSandra shrieks and immediately pulls back, putting her hips down on the table, breathing hard. \n\n\"Sorry! I'm sorry...\" \n\nI let my fingers rub gently over the tingling skin, the movement smoothed by the juice trickling down from her pussy towards her anus. \n\n\"Shhh... no need to apologize babygirl. You did nothing wrong. It's all fair part of the game - if you move you get spanked; if you stay still you get pleasured. I am delighted to do both - so the choice is yours to make...\" I hear her gasp as I confirm what she must have suspected already: her real reward is to be pleasured, or spanked, or any mix of the two - and it is hers to control and navigate within the boundaries I have set for our game. \n\nIt's our first play session, and this way I can give her what she needs without risking pushing her too far, and her choices would help me learn more about her. That knowledge would most certainly come in handy in future sessions... \n\nSandra relaxes back against the table, moving her hands out from under her head to grab the table on both sides for better leverage. \"Oh lord...\" she mumbles and then falls quiet as she boldly opens herself to me, letting her knees and her elbows drop open and closing her eyes, the epitome of trust and surrender. My heart lurches into my throat. So fucking amazing. \n\nI lean over her to kiss her soft belly before moving down over the blond fuzz on her mound and finally back down to her smooth, creamy lips, hooking my hands under her spread thighs and holding onto her hip bones as I delve back into her sweetness. In the back of my mind I realize I'm trying to keep her hips immobile because right now I really want to give her pleasure, not pain. \n\nSoon I discover I have nothing to worry about as she fully complies with my instructions, keeping as still as can be, moaning low almost constantly now as I finally focus on her clit and suck it firmly, my lips clamped around the top of her slit, my tongue stroking its underside inside my mouth. \n\nHer moans are growing harder still and her hips finally start to struggle against my hands but I hold on tight, not letting her lift them off the table, driving her higher and higher towards her climax. Her hands fly back down to her sides and hold onto the edges there, knuckles turning white until with a half- shout, half- wail she crunches her abs and raises the top half of her body, both shoulders and head coming clear off the table, her eyes finding and locking with mine, her need glinting hard in their blue depths, challenging me. \n\n\"C'mon already!\" she hisses through clenched teeth and I cannot pretend not to understand her meaning. Raising my head as well as my right palm I let it stay poised in the air just above her pussy for a heartbeat looking straight into her eyes. She doesn't flinch, doesn't cower at the obvious threat. She just pleads me with her eyes to do it. I bring my hand down swiftly, delivering a sharp, biting spank right onto her wet, swollen cunt. \n\n\"Ohmygaawwwdddd aaaagggghhhh!\" Sandra screeches and throws her head back, her spine arched and her knees open wide as sensations run through her body. I watch her closely, gauging her reaction. After several moments of suspended breath she exhales and then drops her hips down to the table, her chest slightly heaving and her eyes still tightly closed. I lower my fingers to glide up and down her drenched slit, soothing the sting with a sweet layer of pleasure. \n\nOnce most of the tension dissipates from her body I am ready to go back to my licking and sucking when she almost blows my mind as she raises her head and shoulders clear off the table again, looking me straight in the eye. \n\n\"Harder, please!\" \n\nFuck. She wants me to spank her pussy again. I swallow hard but her look doesn't waver; her eyes are locked with mine, shining with her need. \n\nI spank her pussy again, just a bit harder. \n\n\"Ffffuuuuuccckkk!\" again her head is thrown back as her back arches, pushing her breasts up, the muscles in her stomach quivering. I can see her pussy squeeze onto itself, seeping even more juice down her crack, before it is finally lowered and she breathes hard while my fingers go back to rub softly along the swollen, creamy folds. \n\nAgain she raises her head, the fire in her eyes almost scorching in its intensity. \"Please sir, may I have another?\" \n\nGod I'm in danger of blowing my load just from the look on her face. And those words... asking for what she needs without any hesitation, begging me to take her through this experience, trusting me with it... Fuck she's incredible. \n\nI spank her pussy again. And again. And again. The rhythm is slow, deliberate, letting her absorb each and every swat to her hot cunt and then stroking the edge of the pain away, waiting for her explicit request before delivering the next one. \n\nEvery time she asks for more I feel my belly clench further, my own need curling tighter. I ignore it. She needs this, she needs the sweet pain the spanking gives her, needs the all- encompassing experience where nothing exists but her body and my hand, and as long as she keeps asking I'll keep giving it to her. \n\nHer breath becomes more and more labored, catching hard with every stinging slap, and a sheen of sweat now covers her whole body. Her pussy looks swollen and almost red and strings of her cream now connect her ass to the table when she arches up. I can't help tasting her again, lapping along her slit in-between sharp spanks, and it feels as if a balloon is slowly growing just inside her vagina pushing everything out, making every fold swell and stand stiff and proud, her clit peeking out of its hood, begging for the direct feel of my hand when it comes down sharply again. ",
        "\"Ohmygod, ohmygod it hurts so good, ohmygod i'm so close please-please-pleeeaaassseee!\" \n\nI can't hold on much longer, either. I need to make her cum and I need to fuck her soon. I let my fingers catch her clit in one final spank and then keep them on her flesh, rubbing the little nubbin quickly and persistently, aided by the copious juice making my touch slippery and smooth, not letting up this time. \n\nThe swelling inside her grows even larger as her whole body starts to tremble and her head flies from side to side on the folded towel as if trying to escape the intensity of sensations coursing through her body. Then a keening, howling sound comes from the back of her throat and suddenly she's cumming under my fingers - \"Ooohhh fffuuuckkk - ooohhh fffuuuckkk - I'm cummingggg!! - quaking and shaking and squirting juice that sprays out in hot, thick drops from under my dancing fingers, raining all over her belly and her thighs, and splatters to the rug below. \n\n\"There you go babygirl... there you go. Fuck you're amazing... There you go baby...\" \n\nI'm not even sure what I'm saying exactly, I'm so incredibly turned on by the sight in front of me, by the touch and the smell of this quivering wet mess of pure femininity, still trembling in aftershock of orgasm. My own fingers are shaking as I slow down to stroke along her slit again and then carefully sink just one finger into her tight depth. \n\nWe both groan deeply. She's so hot and tight inside I think my finger is about to melt. I withdraw slowly and get up to my feet. \n\n\"Wait right there babygirl. Don't you fucking move anywhere.\" \n\nMy voice comes up gruffer, harsher than I intended but Sandra doesn't seem to be offended in the least. She opens her eyes just a crack and mumbles in-between huffs and puffs of air - \n\n\"Yes sir.\" Heavy breathing. \"I'll be right here.\" \n\nThere's a hint of a smile on her lips now and I feel my own mouth curl upwards. \n\nGod I want her. \n\nI stride over to her bedroom, grab a condom from the nightstand and get back to the living room within the space of 10 seconds. Getting back on my knees between her legs I tear the wrapper and roll the condom onto my steel-hard dick, which I could swear had never felt quite as swollen as it does right now. \n\nHolding the base of my cock in my hand I guide it to her spread pussy and circle it along her entrance for just a moment, collecting her juice around my aching head. I want to fuck her so hard, but I want to make sure I don't hurt her. She arches her back again. \n\n\"Please, Dan... don't tease me anymore. Please fuck me hard.\" \n\nHer breathy request is my undoing. I grab her hips and pull them forward to the very edge of the table, pulling her legs up to rest on my shoulders. \n\n\"Hold on to the table above your head babygirl.\" \n\nAs soon as her hands take hold I wrap my hands around her thighs and start pushing into her. I can't slam in - she is so swollen inside it takes a slow, steady pressure interspersed with some back-and-forths to plow my way into her depths. But once seated all the way in I lean forward, folding her almost in half over the table, my hands planted on the surface at her waist. \n\n\"Look at me babygirl. Look into my eyes while I fuck you.\" \n\nHer baby-blue eyes, still heavy with sated desire, come up to lock with mine and I smile as I draw back my hips and then push all the way into her again in one smooth stroke. \n\nBoth our breaths catch. I hold still deep inside of her feeling her inner muscles give way, then squeeze and flutter around my dick, her eyes sparkling as she watches my reaction. Fuck this feels good. But I don't want to play games any more. I want to fuck her hard and fast until I cum deep inside. \n\nI lean back and grab hold of her hip bones in my hands, holding her pelvis suspended above the table. She bites her lip and tightens her hold on the table, bracing herself. My answering smile is all-teeth, a growl coming out of my throat. \n\n\"Arrrggghhhh!\" \n\nMy hips start jerking sharp and hard while I pull her towards me at the same time, creating a fast and furious rhythm, making our bodies slap together and producing loud squelching noises whenever my dick bottoms out. My balls smack her perineum sharply, repeatedly and I feel my cum getting ready to erupt in any moment. \n\nShe does something inside of her, squeezes around me, intensifies the sensation and within two more strokes I'm gone, all thought lost as I feel myself explode deep in her belly, squirting my cum in pulsing jets, sharp shards of pleasure shooting everywhere, so acute they're almost painful. My heart beats like crazy in my chest and I can't catch my breath, feeling a little dizzy all of a sudden. \n\nI lower her hips back to the table, lean forward with my hands next to her waist, my cock still buried deep inside her, and concentrate on regaining control on my lungs, my eyes staring unseeingly at the flushed skin of her chest below me. \n\nWhen my gaze focuses again I bring it up to Sandra's face, taking in the sweat on her brow, the high color on her cheeks - and the burning need that is now back in her eyes. Once she's got my attention she releases her fingers from where they were curled at the edge of the table and brings them to my chest, gliding their tips up and down my torso, clearly conveying her message. \n\n\"I take it you're not quite done, babygirl? You wanna cum again?\" I ask, not quite hiding the amusement in my voice. \n\nHer cheeks turn firehouse red but she nods enthusiastically. \"Yes please sir!\" \n\nI chuckle and move forward to sit fully on the narrow, oval table, pulling her hips high on top of my thighs. My spent cock slips out and I hike her hips even higher, so that her ass rests on my belly. Her legs slip off my shoulders and I grab her knees and push them out, staring at her red, wet, gaping cunt. The delicate tissues around her entrance look abused and swollen, and her clitoris protrudes out of its hood, erect and engorged, begging for attention. \n\n\"I want to see how you do it, babygirl. I want you to masturbate for me while I watch. Can you do that, baby? Can you make yourself cum again for me, let me see how you pleasure yourself?\" \n\nThere's a moment of hesitation, followed by a renewed spark in her eyes as Sandra nods and slowly brings the fingers of her right hand to her lips, and sucks two slowly into her mouth. I watch as she licks all around and in between them, getting them fully coated with saliva, and then trails them down until they slide in an assured, practiced move into her inflamed slit. \n\nMy eyes follow her fingers and I dare not blink as they immediately start moving, drawing tight circles with the flat of her pads right onto her clit. I notice the pressure seems stronger at the bottom of the circle and lighter at the top, and the way those circles evolve to unbelievably fast side-to-side strokes when her passion rises up to the pinnacle. Her eyes are closed and her back arches again so that only her head and shoulders are on the table and I need to hook my elbows with her knees and grab hold of her hips again to help keep her in that position while her fingers keep flying across her flesh until with a high screech she bucks and cums again, writhing and shivering and sobbing her release. \n\n\"ohmygod-ohmygod-ohmygod yes-yes-yes ohmygod aaarrrrgggghhhhaaa!\" \n\nAnother small gush of juice seeps between her fingers and trickles down her clenching cunt and asshole. So fucking perfect. \n\n\"Fuck yeah babygirl, that's right... You cum so fucking beautifully baby... There you go...\" \n\nI watch her fingers slow down to a stop and then cup her pulsating pussy, squeezing lightly every few seconds while the rest of her body goes limp and I carefully push her off my thighs to lie down fully on the table, while I go back to kneeling on the carpet between her open knees. \n\nI lean in to kiss the back of her fingers over her pussy. \"Absolutely beautiful, babygirl. I'll be right back.\" \n\nI leave her there for a moment to go to the bathroom, get rid of the soiled condom, wash up a bit and then return to her with a warm, wet washcloth. She's lying there with one hand still stroking very gently between her thighs, the other gliding along the sweaty undersides of her breasts, her eyes closed and her face relaxed, a tiny smile decorating her lips. \n\nSo sweet. \n\nI crouch next to her and she blinks her eyes open, turning her head towards me, looking at me contently. \n\n\"Hi.\" Her voice is soft, a little hesitant, as if belatedly remembering to be shy about everything that had transpired between us. \n\n\"Hey babygirl.\" I lean in to kiss her briefly before using the warm washcloth on her face, neck, chest, and finally between her legs. Sandra blushes hard but lets me take care of her without comment and I wink at her. \n\n\"I was looking forward for a chance to do this ever since you washed me at the hospital.\" \n\nShe giggles. \"Mmm... I'm happy to let you bed-wash me any day! Especially since I don't have the energy to move just yet...\" \n\n\"Mmm... I may take you up on that baby. Now let's go to bed, shall we? I'm sure the table is getting hard on your back, no?\" \n\nShe agrees with a small grimace and I help her up to walk hand-in-hand into her bedroom. There's an easy breeze coming in from the open window, its slight coolness welcome against our still-too-hot bodies. I push back the thin sheet cover and we both get in, rolling to our sides facing each other. I reach over to tuck her hair behind her ear, wanting to see her face. \n\n\"So, babygirl, how was your first play session?\" \n\nShe blinks in surprise and then smiles slowly. \"Are you fishing for compliments sir?\" \n\nI laugh and smack her naked ass lightly. \"Hey! And what if I am?\" \n\nShe giggles in response. \"Oh! You're right, there's nothing wrong with compliments! I enjoyed it very, very much. And I'd very much like to do that again - play with you, that is. If you'd like to...?\" \n\nThere's that insecurity in her voice again. Can't she tell she blew my mind just now? \n\n\"I most definitely would like to play with you again, babygirl. It was an absolute pleasure. I'm very glad you liked it, too. Now tell me this: was there anything that you would have had done differently? Anything that didn't work for you? Anything we should practice more before it is absolutely perfect?\" I wink at her, making a half-joke of my question on purpose, knowing she needs to feel safe in answering honestly without worrying about hurting my feelings. \n\nShe seems to mull it over in her head and then shakes it resolutely. \"No, there was nothing I'd change. I admit I was a little embarrassed when you told me to masturbate in front of you but honestly even that turned out to be hotter than hell. I felt like a sex goddess... I loved it!\" \n\nI draw her into my arms for a long, warm hug, our bodies touching from head to toe. \"You are, you know... a sex goddess, that is. I swear I'm gonna start worshipping at your feet soon...\" \n\nShe giggles and shudders - \"oh no, the horror!\" and laughs into my chest hearing my chuckle. I push at her shoulder to roll her over to her other side so that I can spoon her from behind, pulling the sheet above both our bodies as I do. \n\n\"Hmm... alright, maybe not. But you're absolutely the sexiest woman alive, babygirl, and I'll hear no arguments about that fact. Now let's get some sleep.\" \n\n\"Mmm... 'kay\" she mumbles and snuggles close and I bury my nose in her hair, smiling at her easy consent. \n\n\"G'night babygirl.\" \n\n\"Mmm 'night sir.\" \n\n* \n\n* \n\n* \n\nAuthor's note: Did you like this chapter? Tell me, please! VOTE, FAVORITE and COMMENT. Thanks!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "mdom",
        "fsub",
        "domination",
        "submission",
        "blow-job",
        "oral",
        "pussy spanking",
        "masturbation",
        "mature",
        "romance"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-07"
}