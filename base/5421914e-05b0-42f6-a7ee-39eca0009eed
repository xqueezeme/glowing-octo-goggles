{
    "title": "Must Be Something Wrong with Me",
    "pages": [
        "A fetish occurs when there is a preoccupation with a particular part of the body or object, relying substantially on that object for sexual arousal, quite often to the detriment of a true or full relationship with another person. This is the story of a girl with a fetish. All of the characters in this story were at least 18 at the time of their actions.\n\n- - - - - - - - - - - - - - - - - - - -\n\nEmily Kay was one of Dr. Lowenstein's latest patients. She was an underclassman, a junior, nineteen years old, in her second year at Templeton College, and she had finally decided to do something about it; her problem; her secret problem. \n\nDr. Lowenstein spent the initial part of their first session gathering basic history, and then asked why Emily had come for treatment. She had already read the intake and so actually knew but, frankly, what Emily had written in the intake form didn't really sound like a problem. \"I like boys,\" she said to Dr. Lowenstein, wringing her hands, keeping her eyes focused on the floor as she confessed her deep, dark secret.\n\nDr. Lowenstein furrowed her brow. She had female patients confess that they liked girls, but never a girl confessing that she liked boys. She even felt that the problem for girls who liked girls was their insecurity over their natural predilection, and not really a problem, at least in the way the patient felt. In any case, she attempted to reassure Emily. \"Emily, I hardly think that's a significant problem. Actually, not a problem at all.\" It was at times amazing how neurotic and insecure college girls could be. \"It's perfectly normal for a girl to like boys.\"\n\n\"No, Dr. Lowenstein, I mean, I really like them; like I really, really like them.\"\n\nDr. Lowenstein had to smile. She was reminded of being in high school, when one girl tells another that she doesn't just like someone, she really, really likes him. \"Emily, still, that isn't really a problem. It's perfectly fine to really, really like someone.\"\n\nEmily could see that Dr. Lowenstein wasn't getting it. \"Well, I mean, like, it's not like the guy I like, it's just a certain part of him.\"\n\nDr. Lowenstein again furrowed her brow. She would have to admit that she was lost. \"I don't understand, Emily. What do you mean?\"\n\nEmily could feel her lips and mouth getting dry. This often happened when she had to do oral presentations in class. Her mouth would get all dry and she could hardly speak. She needed a drink of water, or something to suck on to generate some saliva. She knew what that should be, or at least would be, in her case. But, in this instance all that was available was a glass of water. She took a sip, gathering enough courage to explain.\n\n\"It's not that I like boys, doctor. I mean, I do. But, what I really like most is, well, their, you know.\"\n\nDr. Lowenstein was a sex therapist. She was not a particularly experienced one, but what she lacked in experience she made up for in creative ingenuity. She did in fact have a pretty successful practice, due in part perhaps to being the only one in town, on a campus bursting with young men and women, many of whom, not surprisingly, do have sexual problems. In any case, one of the most important components of effective treatment is to help the patient articulate his or her concern, to speak openly and comfortably about the problem. \"I believe I do, Emily.\" Actually, she still wasn't at all sure, but by saying she did, Emily could now feel that the worst of her confession was over, as the therapist does already know what she was trying to confess. \"But, I want you to say it for yourself. It's important that you say it yourself.\"\n\nShe knew the doctor was right. But, she felt like such a pervert. Who wants to admit she is a pervert? What would her parents say? \"You won't tell my parents, will you?\"\n\nThis was a not uncommon concern among her college student patients. They were all above the age of 18. That alone made the therapy confidential. But, their parents were paying for their college education. They had access to their children's academic records. It was understandable for the students to think that they might also have access to their clinic records. They didn't, but it was an understandable concern.\n\n\"Emily, if they were to call, I wouldn't even acknowledge that I am seeing you in treatment, let alone tell them anything that you might say in the privacy of these sessions.\"\n\nThat was good to hear. Her parents would have a cow if they knew what she was about to say. \"Yes, well, what I really like, about boys, what I really like.\" Her voice then got a lot quieter. \"Their penises. I really like their penises.\"\n\nThere, she had said it. Her face became beet red, but she also felt considerable relief to have finally confessed.\n\nDr. Lowenstein, though, was still confused. \"Well, dear, any normal heterosexual girl likes boys' penises.\"\n\nIt was Emily's turn to furrow her brow. The doctor was still not getting it. Weren't psychologists suppose to be empathic? \"No, no, it's not just that. Well, that is it, actually. It's just that it's just that.\"\n\n\"Emily?\"\n\n\"It's just their penises. I'm not sure that I really care much for the rest of them. I mean, I do like the rest of them, but it's just that I really, really like their penises. I like them a lot, an awful lot.\" And, once she got it off her chest, it seemed like she couldn't stop talking about it. \"I mean, they're so handsome, so masculine, so manly. And, they come in so many shapes and sizes. Some are like really, really big. Have you ever seen a really big one, Dr. Lowenstein?\" Before she could answer, even if she had wanted to, Emily continued. \"I mean, like, they can even be scary sometimes, when they're really big. But, then, I also like the small ones too. I mean, like, they're really cute when they're small, and you want to help them build themselves up, at least their confidence. The small ones are at times so insecure.\" The doctor was beginning to understand her problem. She was now talking about the penises as if they were persons. \"You sometimes have to be really patient with them. They'll sometimes just curl up and hide, like they're afraid to come out and play, and so you have to coax them without making them feel like they actually needed any help. But, eventually, they do respond, and then they stand up so straight and tall, showing off their muscles. They're muscles aren't at all big, but you can still see how proud they are of them.\"\n\n\"Yes, well, um.\"\n\n\"And, some are like perfectly straight, you know, but some are even curved, like, really curved. I was real surprised when I saw the first one like that. I was thinking, like, wondering, if they straightened out when they got inside.\"\n\nThe doctor knew she would have to ask the patient how many she had seen, but she was feeling a bit worried about the answer. Well, that wasn't a problem right now because she couldn't even get a question in.\n\n\"And, some are like really thin, others are like really thick. Doctor, do you think boys who are fat have little ones? That's what it seems to me, but, you know, it's not like I have checked all of them, but, you know, I have seen quite a few, a lot actually. One time I checked every single one at a party. That wasn't easy, cause I didn't want, like, any of the girls to know I was checking out their dates or anything. It wasn't like some sort of group thing, you know, although I suppose that would be pretty cool, just thinking about that makes me dizzy, imagine being in a room full of naked hard penises, just full of them. I like them all. Well, that's not actually true. I must admit that there is one, one kind, that I don't really like.\"\n\nEmily finally stopped talking. There was a moment of silence. It was weird. She at first had trouble admitting to the fact that she really liked penises, now she was having trouble admitting to the fact that there was a kind she didn't like. But, that was understandable. It would seem rather prejudicial for her to actually dislike one. It wasn't like she was herself a perfect beauty queen. She had her own flaws. Her obsession with penises was perhaps a rather big one.\n\nBut, she had to be honest, particularly when speaking to a therapist. She said quietly, \"I don't like hairy ones.\"\n\nDr. Lowenstein was finding it difficult to find the words. This was rather unusual for a \n\ntherapist, particularly Dr. Lowenstein, but she hadn't had a patient quite like this before.\n\nEmily added, \"You must think I'm a terrible person.\"\n\nAny good psychologist knows how to respond to that. \"No, no, not at all, Emily. You are a lovely person. At the core of every self is someone who is good and wonderful.\"\n\nEmily did appreciate Dr. Lowenstein's emotional support, but she still felt bad about her prejudice. What if a guy felt the same way about her titties? She did not have particularly large breasts. In fact, they were on the small side, a very small side. How would she feel if a guy told her that he found her unattractive once he saw how small she was?\n\n\"I mean, doctor,\" she continued, \"it isn't like I've ever told a guy I didn't like him because he had hair on his penis. It's just that I don't really like it very much. I like them to be smooth as silk, at least when they get hard. I really like them when they're hard. Don't you?\"\n\nDr. Lowenstein knew that it was best for the therapist to remain a blank screen, never revealing anything about yourself, particularly when it came to one's preferences regarding penises. One can deflect a direct question by reflecting back to the patient what she just said. \"You like them best when they're hard.\"\n\n\"Oh my, yes. I mean, well, I do like them when they're soft as well. Some of them are really quite cute when they're small. They're all cuddled up, like little sleeping boys. The ones with a foreskin are even curled up in their soft, thick comforters.\"\n\nDr. Lowenstein could appreciate the image, but she kept her appreciation to herself.\n\n\"And, then, I come along, and they naturally wake up. They're always so excited to see me.\" She again spoke as if she was interacting with just the penis. \"They wake up from their naps and sometimes leap to attention before I even touch them. It's so much fun to see them grow and swell, just getting bigger and bigger and bigger, rising up to their most ever biggest possible size.\" She breathed a deep sigh, just thinking about it made her feel happy and pleased.\n\nDr. Lowenstein could appreciate that image as well. \"Yes, well, um, well, Emily, yes, it is nice to see that but, again, how has this been a problem for your?\" Emily was lying on the doctor's couch. It was a rather peculiar couch. It had no back to it. You couldn't lean back in it. It actually looked more like a bed, a single bed, but unlike a bed it rose up a bit at the head, for the head. But, rather than a pillow, there was just this delicate white cloth, like a hankie. In any case, Dr. Lowenstein was sitting in a straight back chair, just behind and to the left of the head of the couch. She leaned forward and placed her hand on Emily's shoulder in her most reassuring, comforting manner. \"Dear, please, tell me what's troubling you.\"\n\nEmily thought that she had, but perhaps she could be a bit clearer. She looked back toward the doctor, although she couldn't actually see her unless she got up from the couch, or turned over. \"Doctor, it's just that I'm actually so much more interested in the penis than the man to which he's attached. Frankly, I don't really care to whom it's attached.\" She hesitated a moment. \"Actually, that's not true. To whom it's attached is sometimes really important. I mean, haven't you wondered what kind of a penis, a hard cock, a cop has? Or a professor? Or a doctor? A therapist? A student? A patient?\" Emily realized that she had perhaps gone too far with those suggestions, but she was making a compelling point. \"But, you know, in the end, it's still his penis that interests me. Just his penis.\"\n\nDr. Lowenstein did consider that she might be right, that a tentative, working diagnosis could indeed be a fetish. A fetish occurs when there is a preoccupation with a particular part of the body or object, relying on that object for sexual arousal, quite often to the detriment of a true or full relationship with the person. That did indeed appear to be the case in this case. It was an unusual fetish, but a fetish nonetheless. Perhaps even one that could be the subject of a case study. Dr. Lowenstein was always looking for a good case study. \"That's interesting, Emily, tell me more.\"\n\n\"Well, like for instance, the other day, I played with one during class, Dr. Lowenstein, I mean, like right during class where everyone could have seen me and I could have gotten into such terrible trouble.\" Emily then proceeded to recount the experience. Dr. Lowenstein took careful notes.\n\n- - - - - - - - - - - - - - - -\n\nIt was during the laboratory exercises of Biology 450, with Mr. Gould. Emily hadn't wanted to take this class from Mr. Gould. She wanted to take it instead from Miss Harding. It wasn't that she particularly liked Miss Harding. It's just that Miss Harding tends to have lots more penises in her classes. Emily could understand why. Miss Harding was a really attractive professor, with quite prominent breasts and shapely legs, which she displayed well in her short, tight skirts. Emily even heard rumors that Miss Harding occasionally did things with her students (see Miss Harding teaches the boys a lesson or The Chess Club, Chapter 9 of The Lessons) but they were probably just that, rumors.\n\nStill, there were quite a number of boys in Mr. Gould's class, and Mr. Gould did, of course, have a penis himself, perhaps a very good one. Emily always made sure to give a special cheerful hello when she arrived in class. Her mother had emphasized how important it was to be courteous to your teachers. A little sugar can go a long way, and when it came down to the final grade, the memory of a kind word or a pretty smile might be the deciding factor if she was right on the cusp between an A or a B.\n\nToday they were in the laboratory room, dissecting frogs. It was disgusting. There was no pleasant, nice way to describe it. It was just simply disgusting, and Emily didn't want to have anything to do with it. Most of the class time was spent in a lecture room, which simply required listening and taking notes. Emily hated the laboratory component. She had no interest in actually touching some slimy frog.\n\nFortunately for her, she was paired with Joseph Jamerson. Mr. Gould always rotated the laboratory pairings, as he didn't want to give any special advantage to a student, and it was clear that if you were paired with Joseph you had an advantage. Joseph was the brightest student in the class. He was a biology major and wanted someday to be a doctor.\n\nEmily knew that she wouldn't have to do much work with Joseph as her laboratory partner. He didn't even seem to expect anything from her. He just dove into the task himself.\n\n\"I'm so lucky to be paired with you, Joey. You're so good at this stuff.\"\n\n\"Yea,\" he succinctly replied.\n\n\"If you want me to help, you know, I will.\"\n\n\"Yea, sure.\"\n\n\"Although, I don't know how much help I could be. I'm really not very good at it.\"\n\n\"That's okay.\" Joseph was frankly glad that she wasn't trying to help. He found that it only just slowed him up when his lab partner wanted to participate. At best, he would lose time as he had to explain things. At worst, he would have to redo steps that his partner botched. He preferred a partner who didn't want to do anything, and he knew darn well that Emily would botch things up if she did try to help. \"I'll just do it. You can watch.\"\n\nEmily smiled with gratitude and relief. That was very sweet of Joey, although she didn't actually really want to watch. It was almost as disgusting to watch him dissect the frog as it was to do it yourself.\n\nShe looked around the room. Everybody appeared to be pretty intent on their tasks. Mr. Gould was circling among the laboratory tables. Each pair of students had their own laboratory table. The tables weren't particularly big, but beneath each were cabinets in which equipment and material were stored. Emily and Joseph were at the cabinets at the back right corner of the room, which she now realized provided her, them, with considerable privacy.\n\n\"You know, Joey, I could help you in one way.\"\n\n\"Excuse me?\" He wasn't really listening to her. He didn't want to listen to her, as it was rather distracting.\n\n\"I mean, I'm not really good at dissecting frogs or anything, but there are some things I can do.\" She rested her right hand lightly on his forearm, trying to give him a sign, a suggestion, of what kind of help that might be.\n\n\"I can do this okay, don't worry about it.\"\n\n\"I don't mean helping you with that,\" she said, as she slid her finger lightly up and down his forearm.\n\n\"Sure, sure, whatever you want,\" he replied. She could do anything she wanted as far as he was concerned, as long as she stopped distracting him with her finger on his arm.\n\nEmily smiled. She knew it wasn't right not to be doing anything for the assignment. She should do something to help out. She looked around to be sure that nobody would notice. She then turned slightly toward Joseph, hiding his lower body from the sight of the next lab table over, to the left of them, and then reached out with her left hand to lightly place it on the crotch of his slacks.\n\n\"What?!\" Joseph exclaimed, in surprise and shock, jerking his hip away from her hand, although being careful not to make a slip with his scalpel. He might in fact make a pretty good surgeon someday, as he just demonstrated that even if a pretty nurse touched his crotch during an operation, the patient would not have been harmed.\n\nA few of the students looked over at them at the sound of Joseph's voice. They figured that he must have just gotten a little excited about the task. It was amazing how Joseph found biology so interesting. \n\nJoseph lowered his voice to a whisper. \"What are you doing, Emily?\"\n\nShe replied in a sincerely plaintive manner, \"I was just trying to help, Joey.\"\n\n\"Help? Help, how?\"\n\n\"I was giving you 'positive reinforcement,'\" she replied, smiling proudly at her success in using one of the concepts they had learned in class. \"Every time you do something right, I will give you a little happy squeeze. Don't you think that would be fun?\"\n\nIt would certainly be fun. He had to admit that.\n\nShe pressed her argument, as she pressed her soft little bosom into his shoulder. \"You deserve something for doing all the work yourself.\"\n\nJoseph breathed in the lovely scent of the girl, which confused and startled him all the more. Templeton girls weren't allowed to wear perfume. Emily knew this, but there was an understandable element of risk when hunting penises. Perfume was at times necessary, particularly to bag the big ones. If she was caught wearing perfume she would be willing to pay the price. She considered it be analogous to a fisherman paying a fine for using illegal bait.\n\n\"I bet none of the other girls you've helped have given you anything in return.\"\n\nThat was very true, and that did at times bother him. On the one hand, he didn't mind doing all of the work, as anytime his partner tried to help it often just messed things up. But, it wasn't right that they got all that class credit for doing nothing, when he in fact did do all the work.\n\nEmily could see his resolve wavering. She returned her fingers to his crotch. Boys were often much more cooperative, more compliant, when they felt her fingers on their penises.\n\nThis time he didn't back away. He squirmed a bit, but he didn't object, at least not strongly. He whispered, \"Emily, somebody will see you, will see, us.\"\n\nEmily smiled. She knew that she had him now. She whispered back. \"Nobody will see anything, trust me. The only ones who could are Frank Harden and Jeffrey, and if I keep myself turned toward you, like this, they can't see anything, and besides, they're much too interested in their own frog.\"",
        "Joseph leaned back and looked over at Frank and Jeffrey. She was right about that. Frank and Jeffrey were engrossed in the assignment. When it came to interest and dedication to biology, they were a close second to him. Actually, not really that close, but still close enough. And, besides, the feel of a girl's touch, her fingers, lightly exploring around and around the front of his slacks, was awfully, awfully enticing.\n\nJoseph was really confused. One week ago he probably would not have even considered this. Any girl who wanted to play with his penis during a class must be psychotic. And besides, they could get into big trouble. The last thing he would want to do would be to fail biology. Was it really worth the pleasure of the feel of her touch, down there? But, after the experience in the library (see Five Steps to Delta Nu), his perspective on the subject had significantly changed.\n\nCollege was turning out to be much more confusing than he had imagined. First, this pretty girl gives him a hand job in the library for no good reason at all (he still has her pink panties), and now, the equally attractive Emily Kay is going to feel him up in biology lab? He never considered himself to be a lady's man. Well, that was an understatement, to say the least. He didn't even date. But, still, two girls in one week? Maybe he wasn't so unattractive after all.\n\n\"Well, be careful,\" he replied, looking around the room to check again that nobody was indeed looking at them.\n\nEmily whispered back, \"Now, don't you worry about a thing, Joey. While you take care of that thing, I will take care of your thing.\" She more forcefully explored the front of his slacks, trying to find the telltale bulge.\n\nJoseph blushed with the feel of Emily's fingers probing his trousers. He was glad he wore boxers. The loose black slacks required by the Templeton school dress code helped as well, and it didn't take long for his swelling erection to become evident to Emily.\n\n\"Oooooh, Joey, I think you must have a pretty big one in there,\" she whispered.\n\nJoseph blushed. He never thought of himself as being at all big, but this was now the second girl to say so.\n\nEmily could feel that he probably wasn't that big, but what is to be gained by telling him that? It was better to be nice than to be honest. And, besides, she knew by experience that a proud penis was a happy penis.\n\nShe could at least feel it growing in his slacks. She looked around the room, double checking to be sure that they weren't being noticed. It was kind of fun to realize that while all of these students were busily studying their frogs, she was playing with a boy's stiffie, unbeknownst to them. And Joseph's stiffening penis was clearly a lot more lively than a dead frog, and it was getting harder and harder, eventually pushing out his slacks quite a bit.\n\nShe pulled her hand away to see the result of her handiwork. It was always so cute, so sexy, to see a boy's pants jutting out, his excitement over seeing her, or feeling her, or being felt by her, so evident, so strong, so powerful that it just couldn't be hidden. Joey's though did look a little awkward, as it was sticking down his pant leg rather than sticking up. She whispered, \"Goodness, Joey, you've got quite the boner there.\" Emily liked using words like 'boner,' 'stiffie,' and 'woodie.' She considered them cute and fun. It made the experience all the more playful. Guys seemed to like it as well, or at least none of them had ever complained.\n\nJoseph was a bit embarrassed about it. It was nice, tremendously nice, to be having Emily admiring him like that, but he did feel a little exposed, like he was being caught having an erection, his secret revealed. He pressed his body against the cabinet to hide it from view.\n\n\"No, no, Joseph, don't do that. I think he looks real sexy. It's like you're showing off your muscles to me.\"\n\nWell, when she put it that way he didn't really mind. He pulled back from the cabinet.\n\n\"But, isn't he a little uncomfortable like that, pointing down?\" Emily was experienced enough with guys; actually, very experienced, that she knew it was indeed an uncomfortable position for an erection, sticking down into his right pant leg rather than sticking up.\n\n\"It's okay, Emily,\" Joseph softly replied, although if he was being honest he would have to agree.\n\n\"No, no, no, Joseph, it must be terribly uncomfortable like that, bent down, being forced down like that.\" She reached back over and firmly grasped the end of it, as best she could through his boxers and slacks. \"Here, let me move it so it's sticking up straight. He'll be much happier that way.\"\n\nJoseph squirmed a bit as Emily used her left hand to try to alter the placement of his cock. It wasn't easy as she couldn't get a firm grip on it, and it was rather caught or snagged by his boxers.\n\n\"I'll do it,\" Joseph suggested, putting down the scalpel to reach down with his hand.\n\nBefore he could even reach down Emily lightly slapped his wrist. \"No, no, no, Joey, that's woman's work. And, besides, you have to keep working on your nasty ole frog. Let me take care of this problem.\" Emily wanted to facilitate Joseph's dissection, not interfere with it. She reached for his zipper and, before he could stop her, quickly pulled it down.\n\n\"Oh my gosh!\" gasped Joseph.\n\n\"Shhh,\" Emily shushed. \"Somebody is going to notice us.\"\n\nThat was precisely what he was worried about, although this wouldn't be the first time that his zipper was down in a class. He was always so preoccupied with some science problem or class assignment that he would at times forget to zip himself up after he used a lavatory, much to his embarrassment when some girls started pointing and giggling. But, this would be considerably worse, as this would be a downed zipper with a raised cock.\n\nHe again let go of the scalpel to reach down, this time to pull up his zipper, but Emily kept pushing his hand away. \"Joey,\" she scolded. \"We'll never get the assignment done if you don't get back to work and, besides, if someone looks now they're certainly going to wonder what we're fighting over down there, now won't they.\"\n\nIt was a compelling argument.\n\n\"Now, you just get back to work. The sooner you let me in there, the sooner I can get out.\"\n\nJoseph's heart was pounding, with both nervous and excited tension. He was terribly, terribly worried that they might indeed get caught. The experience in the library had ended both well and bad, the bad part getting caught and having to run out in panic and humiliation. For the rest of the week he wondered if and when he would get a knock on the door by campus security, wondering if he had an explanation for exposing himself in the library.\n\nThere would be likewise no compelling explanation for Emily's hand inside his pants. He tried to keep still as she fumbled around inside. Still, though, his heart was also pounding with the excitement of feeling a girl feeling around inside his trousers, trying to find, trying to reach and get a good grip on his erection. A part of him wouldn't mind if she in fact stayed inside there.\n\nEmily was not really fumbling around. She was duly experienced with pulling out a boy's pistol from his pants. She could probably beat most any girl on the draw. She just pretended to fumble so she could linger there for awhile. She could tell that he liked it and that it also made him real nervous. She enjoyed both of his reactions.\n\n\"I'm glad you're wearing boxers, Joey,\" she said, as she finally found the vertical flap and slid her hand inside. \"I knew you would be a boxer man,\" she added, as the tips of her fingers contacted the naked skin of his hard cock. \"They're so much more manly than briefs,\" she explained, as her fingers wrapped around his shaft, and slowly, carefully, maneuvered his stiff dick so that it was pointing up.\n\nJoseph breathed a sigh of relief when she got him up straight, but he was also now breathing rather quickly and having a bit of difficulty concentrating on his dissection. Maybe he wouldn't be such a good surgeon after all? Still, not too many surgeons conduct an operation with a girl's hand gripping their hard cock in their scrubs.\n\nEmily didn't immediately remove her hand from his boxers. Once she had her hand on his hard shaft, feeling his nakedness within her fingers, the smooth, stiff, hairless shaft, she didn't really want to let go. She had captured another one, and she was not about to turn him loose until she at least she enjoyed the spoils of her victory. She softly, slowly, moved her fingers up and down the pole.\n\n\"Emily,\" Joseph whispered, although it wasn't really clear whether he was speaking in protest or pleasure. This was terribly, terribly risky but, even more so, terribly, terribly stimulation. What boy can really resist the feel of a girl's hand in his pants, on his stiff cock? What boy in his right mind would refuse her this pleasure?\n\nEmily whispered, \"Do you like that, Joey?\"\n\n\"Yes,\" he softly replied, although his eyes were beginning to have difficulty focusing. His hands were not quite so steady.\n\n\"I like it too. I really like touching a boy's penis.\"\n\nIf she kept this up much longer.\n\n\"And, yours feels so good in my hand, so stiff, so strong, so powerful,\" she said, as she stroked her fist up and down the shaft. \"But, it's kind of hard to get a good feel of it inside there.\" Before he could protest, she demonstrated her true experience in such matters, firmly gasping hold of his cock and popping it out of his slacks in one smooth, fluid motion.\n\n\"Oh my gosh!\" Joseph exclaimed. His stiff cock was now sticking straight out of his slacks! Completely naked and exposed, just jutting right out there in the middle of biology! Imagine if someone saw him now? How could he possibly explain this? How could anyone? Exposing your naked hard-on in the class was certainly much worse than just having your zipper down. This time he did let go of his tools and reached down to cover himself.\n\nImagine Mr. Gould catching him with his cock out, and then it's naturally discovered that he was also the boy exposing himself in the library. He at first thought it was kind of cool to have two girls do this for him in one week, now it actually seemed pretty bad.\n\n\"No, no,\" Emily protested. \"Don't do that. I want to see him.\"\n\n\"Are you crazy, Emily?\" He was wondering if his initial presumption was correct, that a girl who wanted to do this to him was a little off her rocker.\n\nEmily did indeed wonder about that. At this point in time, she was actually seriously thinking about seeing a therapist, and she did eventually seek the help of Dr. Lowenstein. But, right now was not the time to consider it, to question it. She knew what she wanted. \"Just let me have a little peek? Won't you please, Joey? It doesn't have to be for very long.\"\n\nJoseph was now truly ambivalent. He was right on the fence. Up until that point it was essentially just titillation. But, exposing yourself in a classroom, exposing a naked hard-on? That might really be over the line. Yet, he had never met a girl like Emily before. Actually, he just did the prior week. But, still, girls like this don't come around very often. Perhaps fortunately so, or he would probably be in big trouble by now. But, maybe at least just this one more time? They were certainly in a very safe place. If nobody could see her hand playing with him, then how could anyone see his stiff dick? He whispered to Emily, \"Just a little bit. Not long at all, or we could get in an awful lot of trouble.\" He slowly, reluctantly, but willingly, withdrew his hands from his cock, and got back to dissecting the frog, his eyes glancing around, checking to see if anyone was looking.\n\nEmily was very pleased. \"Oh my gosh, Joseph, it's wonderful.\"\n\nJoseph could feel himself stiffening harder with the compliment.\n\n\"It's so tall, and stiff, and so manly.\" She reached over again with her left hand and grasped hold of it.\n\nJoseph gasped, but focused his eyes on the dissection. He wanted to look down, to see his cock being held by this sweet, feminine hand, by this girl who seemed to love it so much, but he had to remain focused on his task, his assignment. Good grades always come first, although perhaps his dick will literally cum first this time.\n\n\"The skin is so smooth,\" just the way she liked it. She slid her hand up and down his shaft. \"I wish I had a penis like this.\"\n\nThat was a rather odd remark, he thought. But, Emily explained herself. \"I don't mean, like on me, on my body. That would be kind of silly. I just wish I had one like this to play with, any time of the day, whenever I felt like it. Wouldn't that be nice? Anytime you wanted it, you could just reach into your pocket and pull out a big hard penis.\" Perhaps it did sound kind of weird, but Joseph was thinking that it would be nice to have a couple of really large boobs to play whenever he had the hankering. He could think of quite times he would have enjoyed that. \"I love playing with a boy's big, hard cock,\" she exclaimed, as she fondly, affectionately, stroked him.\n\nJoseph's eyes glazed over and he leaned forward, bending over as he could feel himself getting ready to explode, wondering though if he should even try to control himself.\n\n\"Okay, then, Joseph, Emily, how are the two of you doing?\"\n\nIt was Mr. Gould! While Joseph was losing himself in the pleasure of Emily's hand, yet also concentrating so hard on his dissection, Mr. Gould had approached.\n\nEmily quickly let go of Joseph's cock, but moved up closer to him, ostensibly to make room for Mr. Gould to observe their progress; their progress on the dissection. Joseph's face turned a deep red as he pressed his body, his pelvis, his cock, up against the cabinet beneath the table top, trying desperately to hide himself. \"Yes sir, yes sir, yes, we're doing fine sir,\" he quickly stammered.\n\n\"Excellent, kids, excellent.\" Mr. Gould moved past them, from behind, and got over to the right side of the table, around the corner from Joseph. \"Yes, yes, you always do a wonderful job, Joseph, and,\" he turned his attention to Emily. \"I hope you're participating as well, Emily.\" He knew the score. He knew that Joseph's partners often road on his back.\n\n\"Oh yes, Mr. Gould, I'm providing a very helpful hand.\"\n\n\"I'm sure you are, dear. I'm sure you are.\" Mr. Gould, though, could see that Joseph had not made as much progress as one would have expected from his star student. \"Joseph, don't you think you should be using the eight-point scalpel, rather than this six-point?\"\n\n\"Oh, sir, perhaps, yes, of course. I'm sure you're right.\"\n\n\"Here, just step back and I'll get you one out of the cabinet.\"\n\n\"Oh! Uh, no sir, no, that's fine, this one is fine.\" Joseph could feel his heart racing, no pounding, and sweat was rapidly forming on his brow, dripping down his sides beneath his shirt. There was simply no way he could, he would, step back from the cabinet. He pressed his body against the cabinet with even more force, more fervor, perhaps in doing so he could meld his body with the wood, and would then be unable to step back. He felt the same panic he had in the library, when Mrs. Baxter approached him and that strange girl. How often does something like this happen to a guy!\n\nMr. Gould was surprised at his resistance. Joseph was generally a very agreeable, even acquiescent student.\n\n\"Well, Joseph, I would normally endorse your judgment in this regard, but I am bit concerned with your progress to this point.\"\n\nJoseph didn't know what to say. How could he defy the professor? But, how could he move aside?\n\nEmily came to his rescue. \"I'm sorry, Mr. Gould. I asked Joseph to use the six-point. I'd never used it before and he said he would show it to me. I mean, show me how to use it.\"\n\nWell, that is understandable. \"Yes, well, Joseph is certainly skilled with any tool. I'm sure he could help you learn how to best handle it. Why don't you let her take hold of it, Joseph. The best way to learn is to do it yourself.\"\n\n\"Oh golly, Mr. Gould, I don't know. I mean, well, I would be kind of nervous with you watching and everything. I get a little self-conscious using it with a teacher looking and all.\"\n\nThat was also understandable. \"Well, yes, alright then, but don't fall too far behind, Joseph. You don't want to have to stay after class to finish it up.\"\n\n\"Oh yes sir,\" Emily answered for him. \"I'll make sure Joseph finishes up real fast.\"\n\n\"Well, don't rush it though. You want to do a good job.\"\n\n\"Oh, no sir, I agree, Mr. Gould. I want to do a real good job. I mean, we both do, of course.\"\n\n\"Yes, well, I'll leave you to it then.\" Mr. Gould moved on to the table in front of them, his back now turned to the two mischievous students.\n\n\"Man that was close,\" Joseph whispered, his heart returning to a normal rate of speed, his body relaxing, and moving away somewhat from the cabinet.\n\n\"Wasn't that exciting?\" Emily asked, as she instantly slid her hand back onto Joseph's cock, which was now only half mast.\n\n\"I think maybe a bit too exciting.\"\n\n\"Oh, don't say that, Joey.\"\n\n\"C'mon, we've got to finish it up before he comes back.\"\n\nShe replied, \"I agree, you need to cum before he comes,\" as she resumed stroking his cock.\n\n\"Emily!\"\n\n\"Well, Joey,\" she retorted in her most coquettish voice, \"I did promise Professor Gould that I would you finish you up real fast,\" her experienced hand bringing him quickly back to full staff. \"Don't you want a happy ending?\"\n\nHe certainly did and, one thing was for certain, he probably would be best off if he did just let her get him off as quick as possible. He bent back over the frog, in case Mr. Gould, or anyone else, looked back at them. But, there was one quite serious problem. \"Yea but, Emily, we, I, can't do that here. You know.\"\n\n\"No, what Joseph?\"\n\nHe turned to her and gave her his most incredulous expression. \"You know!\"\n\nAs she twirled her fingers around and around the swollen bulb of his cock, she gave him in return her most innocent expression and said, \"No, Joseph, I don't know what you mean?\"\n\nJoseph sighed with frustration, in part because he knew that there was really little time left to discuss this. He was not one for lasting long, particularly as this was the only second hand of a girl to handle his cock. The pleasure she was providing was just so good, dancing and twirling around his hard dick. A girl's fingers feel so wonderful on one's cock, and this one was also so clearly better at it than the library girl. He whispered, albeit forcefully, expressing his impatience, \"I mean, I'm going to, um, I would, uh.\" He lowered his voice even further, \"ejaculate, and that's going to, you know.\"\n\n\"Joey, I didn't hear you? What did you say? What would you do?\" She heard him quite well. She just wanted to tease him a bit.\n\nHe leaned into her, drawing in more deeply the scent of her perfume, and whispered into her ear. \"Ejaculation.\"\n\nShe feigned shock and surprise. \"Oh my goodness, Joey, would you really squirt all over the place?\" She drew her fingers away from the bulb of his cock to reach down further, below, and lightly tickle his balls. \"Oh my, it does feel like you have lots and lots of sticky, nasty boy juice. I bet you would just gush and spurt over and over and over, wouldn't you Joey.\"\n\nHer fingers were so nice. \"Please, Emily, please stop or I will.\"\n\n\"Do you think you could squirt so hard that you would hit Julie's hair?\"\n\nJulie was the girl in the lab table in front of them. She was one of the prettier girls in the class. It would be rather nice to cum on her hair. She was always so pleased with herself, her looks, and she was so often dismissive of him, the twerpy bookworm, she would say. It would serve her right, shooting a big fat glob right in that carefully, managed coiffure. Joseph could feel his balls tightening up, building up pressure for the cannon ball. There was no way though that he actually, really, wanted to do that. Cumming on Julie's hair was clearly much worse than simply exposing an erection. He clenched his eyes shut to try to stop himself from cumming, trying to block out the image from his mind, but being unable to ignore the lovely feel of her hand.",
        "\"Oh don't be so worried, silly. I won't let you do that. Here, let me show you.\" Emily stepped back and opened up the cabinet door. It actually provided very nice cover for his erection. Joseph wished she had thought about that before. Emily had realized that they could use the cabinet door to hide him, but she preferred the greater risk of just using her own body. In any case, she slid around it and said in a more normal, although somewhat louder voice, \"Here, Joey, you keep working on the dissection and I'll see if I can find the eight incher.\"\n\nHe didn't correct her, but he did look down at her. She was squatting down behind the opened door, looking up at him, past his hard stiff cock now towering over her pretty face. She smiled, her large hazel eyes twinkling with flirtation, and said, \"I think this one must be the eight-incher, don't you think, Joey?\"\n\nJoseph's hard cock was well short of eight inches, but there was no way he was going to divest her of that illusion. Perhaps it looked to her like eight inches, squatting down beneath it, her eyes, her lips, just inches away. She whispered up to him, very softly, \"Would you like me to kiss it, Joey? I'll do it, if you want me to.\"\n\nJoseph tore his eyes away to glance around the room. They really couldn't let this go much longer. If she put her lips on his cock there was no way he would last any longer. No girl had ever done that for him before. Not even the girl in the library. He could feel himself wanting to cum just at the thought of it. Her lips, her tongue, would feel so good on his cock. Wouldn't they? He turned back to her. \"Yes, yes,\" he whispered back, \"please, please do it.\"\n\nShe smiled up at him. \"Oh Joey, I'm so glad. I love the taste of a boy's cum, and I want yours so very, very badly.\" She leaned forward, grasped the shaft in her hand, and planted a big kiss on the tip of his cock.\n\nJoseph again turned away, this time so that he wouldn't just cum right away, before she even got her lips around him. He wanted to cum so bad, and the sight of those pretty little girlish lips kissing his cock was just too much, too much to bear. He turned his face toward the frog, but closed his eyes, clenched them shut with the intense pleasure that was overtaking him.\n\nEmily turned her eyes to the swollen red bulb, smiling at the thought of what she was about to do. She did indeed love sucking on a boy's hard cock. There was perhaps nothing else that gave her more pleasure. And, now, once again, she had conquered another one. The cock of the star student was about to enter her mouth, and even right during the class. She sucked it into her mouth like a most delicious popsicle.\n\n\"Hmmmmmm,\" she softly groaned as she felt his swollen rod on her tongue and tasted his manliness. She stroked his shaft as well as she sucked and licked at the bulb, urging him to release his juice, his tasty manly juice, into her mouth.\n\nAs soon as he felt her tongue hit the underside of his cock, his most sensitive place, he felt himself become overwhelmed by his climax, surging up from his balls, through his shaft, and out his cock, accompanied by a primal wave of pleasure sweeping through his entire body, his legs going weak, as his cock began to gush its load into the sweet, lovely girl's mouth. \"Emily, Emily,\" he whispered, not even loud enough for her to hear, as he felt his cock jerk and spit into her mouth.\n\nEmily was lost in her own pleasure. She could feel the juices leaking from her slit, soiling her panties, as the boy's cock soiled her mouth, filling her mouth with the salty, tasty globs of gism. He tasted so good. She had come to learn that not all cum tastes the same, but all cum tasted good to her. This boy's cum though tasted better than most. She would have to ask him later what he had for lunch.\n\nJoseph could feel his legs weaken and he struggled not to reveal his secret. His body was already somewhat twisted with his cock facing Emily and his torso facing the frog, and as he twitched and jerked with his spurting, his cock suddenly popped from her mouth, squirting the last few spurts onto Emily's rosy red cheeks.\n\n\"Joseph!\" Emily exclaimed, a bit too loudly.\n\nMr. Gould said, \"Yes, well, how is it going now?\" He had returned, this time approaching from the front.\n\nJoseph looked up in fright, and exhaustion, and exclaimed, \"Mr. Gould!\"\n\nEmily quickly stuffed Joseph's cock back into his pants and zipped him, coughing as she did so, partly to hide the sound of the zipping and partly because she did indeed have to cough as she struggled to swallow Joey's cum.\n\n\"Yes sir, yes sir, well, it's going fine sir.\" He had in fact made next to no progress since the last time Mr. Gould was there.\n\nFortunately, Emily's experience with men's boxers and zippers allowed her to get him tucked back safely away fairly quickly. She then reached into the cabinet, pulled out a scalpel and stood back up. \"I found it, Joey!\" she exclaimed, looking quite gleefully proud, holding up the scalpel like it was a prize.\n\n\"Oh, Mr. Gould, I didn't hear you come. Hello sir. I went and got the six-point, cause we really weren't making any progress with the eight-point, just like you said.\"\n\n\"Yes, well.\" Mr. Gould was feeling a bit suspicious. Something didn't seem quite right here. And, then, he noticed a couple of white splats of fluid on Emily's face. \"Emily, what is that on your face?\"\n\nEmily reached up and felt a little glob of cum on her cheek. \"Oh Joey! Joey!\" she exclaimed in disgusted protest. \"You squirted some of the stuff right on my face. Professor Gould, look, some of his stuff squirted on me and it's all icky and everything. I don't like it.\"\n\nJoseph could feel his heart sink down to his feet. He couldn't belief it. Why would this girl do something like that? She was indeed some crazy bitch, and he had fallen right into it. \"Mr. Gould, please, let me explain,\" he beseeched.\n\nBut, Emily interrupted him, before he confessed. \"I was trying to find the eight-pointer and Joseph squeezed on the frog and some of his internal guts stuff just squirted right off the table. Eeeewww, Mr. Gould, I don't even like to think what it might be!\" She squinched up her face and shivered in disgust.\n\nMr. Gould shook his head and smiled at the girl's squeamishness. Some girls just can't stand this part of the class, although, he would have to admit, he wouldn't really like to have frog guts on his face either. He attempted to reassure her. \"Now, now, honey, it won't hurt you. Here, let me wipe it off for you.\"\n\n\"Oh, thank you sir, thank you so much.\" She turned her face to Joseph and gave him a mock scowl as Mr. Gould brought out his handkerchief to clean off the girl's face.\n\n- - - - - - - - - - - - - - - - - -\n\n\"We were terribly lucky not to get caught, don't you think, Dr. Lowenstein?\"\n\n\"Heh?\" Dr. Lowenstein was a bit lost in her thoughts. She looked down at her notepad and noticed that her last note was, 'He must have a pretty big one in there.' She quickly though gathered herself and said, \"Yes, well, you were, Emily. You really could have gotten into quite serious trouble. I can see why you are so concerned. I think perhaps we do have some things to work on.\"\n\n\"Yes, I know, doctor, I know. Cause, you know, that wasn't really the half of it.\"\n\n\"Excuse me?\"\n\n\"Well, Mr. Gould asked me to stay after class.\"\n\n\"What happened next?' Dr. Lowenstein leaned forward. She was very, very interested.\n\n\"Oh doctor, my time is up. I need to get to my next class.\"\n\n\"Oh yes, yes.\" How curious. Normally she would have to remind the patient that the session was over, but in this case it was she who had lost track of time. She considered having Emily come back tomorrow. There did appear to be a lot to discuss, or at least she was very curious about what happened with Mr. Gould. But it was best not to rush exploratory therapy. A week off might be good, for the both of them. Sometimes sessions can be quite stressful, or at least stimulating, for the doctor, as well as for the patient.\n\n- - - - - - - - - - - - - \n\nEmily arrived right on time for her next session. This time she wasn't so reluctant to tell her story. They were difficult stories to tell, but she did feel so much better after the last session. She did really want to get these experiences off her chest, and it was quite helpful to talk about them with a professional. She was so glad that she had decided to see Dr. Lowenstein.\n\nDr. Lowenstein as well found Emily's stories to be quite interesting and intriguing. In fact, she wondered if the entire series of experiences might make for a good case study. She could certainly imagine readers being as interested in Emily's encounters as she was herself. As a matter of fact, perhaps the entire series might warrant a book! \"Yes, Emily, well, you ended last session recounting your experience with Joseph, and you indicated that you had to stay after class with Mr. Gould?\"\n\n\"Yes, ma'am.\"\n\n\"Tell me, what happened next?\"\n\n\"Well, doctor, like I said, Mr. Gould asked me to stay after class.\"\n\n\"Excuse me, Emily, would you mind if I taped this session? It's so much easier than taking notes and I really don't want to miss anything.\"\n\n\"No, no, ma'am, that's perfectly fine with me. But, this is all confidential, isn't it? I mean, you told me that my parents wouldn't find out, but I think it's also kind of important if nobody else does as well.\"\n\n\"Absolutely, my dear,\" Dr. Lowenstein. If she did in fact publish the case study, she would get Emily's permission to do so, and would thoroughly disguise her identity so that nobody would be able to identify her as the patient.\n\n\"I mean, cause, well, it could also get Mr. Gould in a bit of trouble.\"\n\nThat sounded very intriguing. Dr. Lowenstein was quite familiar with Mr. Gould. Mr. Peters has been very supportive of her methods of treatment, but Mr. Gould has expressed considerable skepticism, even raising an objection with Dean Jackson, which annoyed Dr. Lowenstein to no end, as Mr. Gould was not himself a clinician. But, he was a member of the faculty senate and did have considerable authority over the activities of other members of the Templeton family, including even the activities of the college clinic. Dr. Lowenstein had no intention of using any of the information she gleaned from Emily against Mr. Gould, but she had to admit that she was a bit curious. \"Nobody in this college has access to your file, Emily, other than the staff of the clinic. My clinic director, Dr. Fritz Perlman, has access, but he is, as well, sworn to protect your confidentiality, and the confidentiality of any information that is contained within your file.\"\n\nEmily wasn't listening that closely. Perhaps she should have been, but that was part of her problem. She was wondering what Dr. Perlman's penis would look like, when it was all hard. She had never seen a psychologist's erection before.\n\n\"Emily?\"\n\n\"Oh yes, doctor, yes, no, it's fine, you can record this.\"\n\n\"Excellent,\" replied Dr. Lowenstein. She reached over to the coffee table and turned on her recorder. This way she could listen more closely herself.\n\nEmily then proceeded to recall her experience with Mr. Gould, the biology professor.\n\n- - - - - - - - - - - - - - - - - -\n\nEmily approached his desk and stood before it, her hands clasped before her, her eyes looking down at her feet, appearing ever so much the penitent, remorseful young lady.\n\nMr. Gould was sitting behind his desk, tapping his pencil in annoyed frustration. \"Emily, I wanted to speak with you for a bit because I'm not so sure I was being given the full story during class.\"\n\n\"Excuse me, Mr. Gould, what do you mean?\"\n\n\"Now don't play the innocent girl with me, Emily. The fluid I cleaned from your cheeks did not appear to me to come from a frog.\"\n\nEmily covered her opened mouth with her hand, her eyes widening as well, as if she just heard something that was terribly shocking, even horrifying. \"Oh, Mr. Gould, what are you saying?\"\n\n\"Emily, if you prefer, I can hand this matter over to Mr. Peters. I understand he is quite knowledgeable about how to extract confessions and discipline miscreant students.\"\n\nEmily wasn't particularly interested in seeing Mr. Peters. She knew his methods, only too well. But, it wasn't that she was especially afraid about being spanked, and perhaps even having to do more with Mr. Peters, it's just that she had already been there and done that. Mr. Peters' penis no longer interested her. \"Oh please, sir, don't send me to Mr. Peters. I really don't want to do that.\"\n\nMr. Gould was pleased with the effect of his threat. \"Yes, well then, why don't you tell me what really happened in class.\"\n\n\"Golly, Mr. Gould, it's kind of embarrassing and everything.\"\n\n\"Will it be any less embarrassing to tell Mr. Peters?\" It actually wouldn't be embarrassing at all, but it would be much less fun.\n\n\"If I tell you, you won't tell my parents, will you, Mr. Gould?\"\n\nHe had no interest in doing that. Templeton College preferred to handle such delicate matters informally, if that was at all possible. Public investigations often become quite adversarial, generating more controversy than they resolved, as well as bringing unhelpful and detrimental publicity to the college. And, besides, misbehavior of a student in a class, particularly if it was what he was thinking, would look poorly on him as well. But, if the threat of doing so did make Emily squirm a bit, then perhaps it's best not to reassure her completely. \"Well, I might be willing to keep it within this room, if I feel you are being forthright with me.\"\n\nEmily knew that once she was through with him, he would want to keep it within the room. He would be asking her to keep it a secret. \"Oh I will, sir, I will tell you everything, if you want.\"\n\nMr. Gould gave Emily his most authoritative, stern expression and said, \"Yes, well, I'm waiting, young lady.\"\n\nEmily continued to feign ambivalence and reluctance, shifting her feet, swinging her bottom, looking around the room to be sure that they were alone.\n\n\"I guess perhaps you might be more interested in explaining yourself if your parents were here?\"\n\n\"Oh my!\" she exclaimed. \"Yes, alright then, okay, but, Mr. Gould, if I could, might I just whisper it into your ear. It's really terribly embarrassing to have to say it out loud and everything.\"\n\nWell, that was certainly a reasonable request. He had no real interest in embarrassing the young lady. \"Alright then, if you must.\" He pushed his chair back from the desk to give her some room.\n\nEmily moved around the desk to get up beside him. She then leaned down, bracing herself by placing her left hand on his thigh.\n\nMr. Gould found that to be a bit personal. It wasn't really appropriate to have direct physical contact with a student. Patting a student on the back is fine, shaking a hand is fine, and perhaps at times even a hug. But, a hand on a thigh did seem like it might be crossing a line. However, acknowledging that point with Emily might just be raising a red flag, causing a problem, creating a concern, when there never really needed to be one. It was a natural thing to do to brace yourself when leaning over to whisper into someone's ear. But, with such close proximity he was now also treated to the lovely scent of her perfume, and the students of Templeton were not to wear perfume.\n\nEmily leaned in close and brought her lips to his ear. She then confessed, recounted, her experience with Joseph, being sure to include all of the relevant, revealing, titillating details, including how she could see and feel his penis getting bigger and bigger in his slacks, how she pulled his zipper down without his knowing it, how she reached inside to adjust the position of his big, hard, stiff penis.\n\nThis description was making Mr. Gould feel a bit uncomfortable, emotionally and physically, as he could feel his own penis stirring in his pants as the pretty, scented young lady whispered into his ear about how she played with Joseph's stiffly erect penis, how wonderful it looked, how big and hard and shiny and smooth it was. \"Yes, well, Emily, you don't have to tell me every specific detail.\"\n\nEmily stood back up straight. \"Oh, but Mr. Gould, you told me to be completely forthright, to leave nothing out. I want to be sure that I tell you everything, that you know every detail. I want to be a good girl.\"\n\nHe had told her to tell him everything. He could hardly back off now and say that it wasn't really necessary. That would only let her know that he was simply bluffing. \"Yes, well, alright then, proceed.\"\n\nEmily moved in even closer to finish her story. She cupped her hands together, around his ear, to whisper even more quietly, more privately, as if there were in fact people in the room who could hear, and in doing so, was now pressing one of her sweet titties against his shoulder. She recounted how she used her lips, her mouth, her tongue on him, how much she enjoyed the feel of the large purple swollen head of his cock in her mouth, how big it felt there, how much she liked the earthy smell of his cock, the taste of his cock slit, and how much she wanted to make him cum, wanted to feel and taste him as he squirted his sticky boy cum into her mouth, gushing into her little girl mouth his thick gruel, and how wonderful he did indeed taste, this very young and innocent mouth that was whispering into his ear, how she so very much enjoyed the taste of a man's cum, his gism, his cream, his gloppy, globby, gluey, gunky, gooey gruel.\n\nWhen she was done with her story she stood back up straight, looking ever so proud that she had been such a good girl, telling him every little detail, confessing to everything. She was also quite proud to see that it had the effect on him that she had been hoping. Mr. Gould now had a boner.\n\nMr. Gould was at first a bit lost for words. He crossed his legs and clasped his hands in his lap. He had no interest in having this girl see that her story had in fact excited him a bit. He felt a bit guilty about that, but certainly it was understandable. How often do you have a cute little girl whisper in your ear a dirty story about how much she enjoyed drinking a boy's cum? \"Yes, well, I'm afraid that the two of you will need to be punished for what you did, don't you think, young lady?\"\n\n\"Oh yes sir, definitely sir. It was a very naughty thing to do. But, sir, please don't punish Joey. It was really all my fault. In fact, he kept telling me to stop, but I just kept going.\" She leaned over toward him again, placing one hand on his shoulder, the other on his thigh, offering her most plaintive, pleading expression. \"It really, truly wasn't his fault Mr. Gould, honest. I would just feel so terribly terrible if he got into any trouble for what I did.\"\n\nIt was difficult to deny her entreatment. How many fathers can deny the beseeching eyes of their daughters, and what professor could really deny the appeal of this young, pretty girl, her lovely scent wafting across his nostrils, her large, pretty, hazel eyes begging for consideration. And, besides, he knew full well that Joseph was indeed a very good, upstanding boy, and would never do anything untoward within his class without considerable pressure. \"Well, alright, yes, I will consider the matter closed with respect to Joseph.\"\n\nEmily's lips stretched into a big grin as she exclaimed, \"Oh Mr. Gould! I'm so grateful.\" She leaned all the way down to him and promptly planted a big kiss on his cheek, his eyes widening in surprise at the sudden physical expression of gratitude. He wasn't expecting this much appreciation. A polite 'thank-you' would have been sufficient.\n\nEmily even followed up the kiss with a big, tight hug, pressing her young, soft, supple breasts into Mr. Gould's shoulder. \"Oh, you're such a wonderful professor, Mr. Gould. I'm ever so happy,\" squeezing herself against him ever so tightly.",
        "\"Yes, yes, well, uh, yes,\" he replied, feeling very uncomfortable with this degree of contact, particularly as he was still sporting a rather taut erection. He brought his hands from his lap, risking its exposure, to gently and politely, but firmly, push her away. \"But, dear, that does still leave the problem of yourself. You do have to answer for your indiscretion. Actually, I must say it was much, much worse than simply an indiscretion, don't you think?\"\n\nEmily stepped back and, once again, clasped her hands together, her head bowed contritely. \"Oh yes sir, that was a most terrible thing I did. I know sir, I really know,\" and this was frankly said with some degree of sincerity. She was troubled over her many indiscretions. And, goodness, the one act with Joseph paled in comparison to some of her other oral stunts. \"I really do think I might have a problem, sir.\"\n\n\"A problem?\"\n\n\"Yes sir.\"\n\n\"I don't understand.\"\n\n\"It's kind of difficult to explain, Mr. Gould.\"\n\n\"Well, honey, I don't mean to have you feeling uncomfortable, but if you don't provide an explanation, then I have no choice but to have you referred to the disciplinary board.\"\n\nEmily knew that she would indeed be in serious trouble if she was referred to Mr. Harrington and the Student Disciplinary Board. She seriously doubted that she could sway Mr. Harrington. However, it was never her intention not to explain herself to Mr. Gould. \"Can I at least whisper it again, in your ear?\"\n\n\"There's really nobody here that will hear you, Emily, other than me.\"\n\n\"I know sir, but to say it out loud is so difficult for me.\"\n\nMr. Gould sighed. Her previous whispering had been a bit problematic. However, he could see that she was quite sincere in her discomfort. \"Alright then, if you wish.\"\n\nShe replied, \"Thank you, sir,\" and then, once again, leaned back into him, cupped her hands, and whispered into his ear, ever so softly, \"It's penises, Mr. Gould.\"\n\n\"Excuse me?\"\n\nShe continued to whisper. \"Penises, Mr. Gould, I love them so much. I just can't help myself. I have to see them, feel them.\" And, even more softly, \"Kiss them.\" She paused for a moment, letting her breath tickle his ear, and then pulled back.\n\nMr. Gould could feel the sweat forming on his brow as his mouth went dry. \"Emily, I really can't believe that you're unable to control yourself.\"\n\n\"But it is really very difficult, Mr. Gould. Whenever I meet a guy I start to think, to wonder, what his penis might look like. You know, they're all so very different, particularly when they get stiff and hard and everything. Of course, you might not know that, being a man and everything.\"\n\n\"Yes, well, of course, there are many anatomical variations.\" He was finding this conversation rather uncomfortable.\n\n\"Of course sir, I didn't meant to imply that you wouldn't know. Of course you would know, being a biologist and everything. You've probably seen many, many different penises.\"\n\n\"Well, not really, it's not actually, uh, my specialty.\" He wasn't really sure it would be anyone's.\n\n\"Oh my, goodness, I just had a wonderful idea, Mr. Gould! Maybe I could do an independent study, under you of course, about how penises come in all different sizes and shapes. I mean, if you sponsored me I'm sure we could get lots and lots of penises, and we could even compare their stuff, you know, their, their, their ejaculate stuff, like with a microscope and things.\"\n\n\"Well, dear, I don't think.\"\n\n\"I like them best that way, all terribly hard and stiff. I think that's when they have the most personality. I would think that you, more than anyone, would understand.\"\n\n\"Yes, well, um, you are certainly free to pursue your own hobbies, um, studies, outside of class.\" He really didn't think it would be a good idea but, of course, he wouldn't want to discourage the young lady's scientific curiosity. He then realized though they were getting off track. \"But, still, you do clearly appreciate how inappropriate it was to do it in the class.\"\n\n\"Oh absolutely, sir.\"\n\n\"I mean, I don't go around dissecting every frog I see, and you really shouldn't try to see every, um.\" It was kind of difficult for him to say the word out loud. After all, she was a very fetching young lady, standing there in her college uniform, her innocent white blouse, black tie, plaid skirt, white socks, and Mary Janes, smiling so sweetly as she swung her hips back and forth. He lowered his voice to a whisper, now appreciating her own concern about speaking out loud, \"penis, um, yes, penis, that you come across.\"\n\n\"I know, sir. I do know that, but sometimes I just can't help myself. Like, well, you know, I would kind of like to see yours, if you wouldn't mind, sir.\"\n\n\"Mine?!\" Mr. Gould's eyes widened with shock.\n\nEmily voice was very quiet and cautious. \"Well, yes sir. I mean, after all, you do have an erection yourself. I could see it when I was whispering in your ear.\"\n\nMr. Gould tightened the crossing of his legs and dug his hands down deeper into his lap, into his stiffness. He would obviously like for it to go down, and covering it snugly with his hands wasn't really helping. \"Now, that's not in fact the case, young lady. I suspect you were confused by something else. Yes, a pen, a pen in my pocket.\"\n\n\"Mr. Gould, what I saw was much thicker than a pen.\"\n\n\"Well, yes, um, in any case, you were, of course, obviously mistaken. I would not let, do, such a thing in the presence of an undergraduate.\"\n\n\"Who isn't being honest now, Mr. Gould?\"\n\nMr. Gould was feeling a bit hoisted on his own petard, which was still sticking up in his slacks. He knew that he would get nowhere with this young lady as long as she knew he was being dishonest with her. You can't command respect and compliance if it is clear that you are yourself being duplicitous and dissembling. With considerable reluctance, Mr. Gould confessed. \"Yes, alright, yes my dear. I am sorry, but I did, for the moment, lose control of myself there.\"\n\n\"I understand, Professor Gould. Sometimes it really isn't easy controlling yourself, is it, sir.\" He could see that she was painting him into a corner. In any case, he knew that it was terribly inappropriate of him to have gotten an erection and, even worse, to have let her see it. Here he was, trying to discipline a student for being sexually inappropriate in the class, and then he displays to her his own erection.\n\n\"Well, I do certainly apologize, Emily. It was really most inappropriate of me.\"\n\nEmily stepped up to him, her knees touching his thighs. \"Don't worry, sir, I won't tell anyone.\"\n\nMr. Gould could sense that he was losing ground here, losing control not only of himself but of the situation. Yet, it was quite true that he definitely wouldn't want anyone else to know that he had gotten an erection with a student and, worse yet, that she had seen it. \"Yes, well, I suppose it's best for everyone if we just put this afternoon behind us, move on from here, and be now especially careful that nothing like this happens again. Would you not agree, Emily?\"\n\n\"Oh but sir, you haven't really let me see it yet.\"\n\n\"Emily, I am certainly not going to do that. We have both made our share of mistakes here.\" He would consider hers to be far worse than his, but perhaps in the eyes of the Board of Trustees, his might in fact be much worse, for as a professor he would be held to a much higher standard. \"Let's not compound the situation.\"\n\nEmily though just reached down, grasped the front of her skirt, and raised it up to show Mr. Gould her pretty panties, and they were very pretty indeed. They were pink cotton panties with lace trim, and prancing all over the pink cotton were little dancing bears. If that wasn't enough, her panties were tight enough to display a very clear, very pronounced, camel toe. Mr. Gould's erection had finally been slackening, with all the thoughts of the inappropriateness of the situation and his getting into a very embarrassing and problematic predicament. However, his dick now sprang back to life at the sight of the young girl's panties and the delicious outline of her slit. It looked to be a very cute, small little pouch. \"Emily, please, pull your skirt back down right this instant!\"\n\nHe said it with considerable conviction, sincerity, and authority, but she didn't obey. She instead just slowly, gently swung her hips back and forth, keeping her skirt raised and panties exposed, and said, \"But, professor, don't you like my panties?\"\n\nHe clearly did, as he could not take his eyes off them, although he did briefly do so, checking that the door to his classroom was indeed shut. However, he did not express how much he liked them. \"They are very nice panties, Emily but, really, this is most inappropriate and someone may come in. Now, please, pull your skirt back down.\"\n\n\"I'll pull them down if you take out your penis, Mr. Gould.\"\n\n\"Emily, that's absurd and you know it! I don't want to, and will not, do anything inappropriate with you. I want to be very clear about that.\"\n\n\"I'm not asking you to do anything with me, Mr. Gould. Just let me see him, just at least for a second? I'm showing you my personal spot. It's only fair now that you show me yours.\" She pulled her skirt back tight all the way up so she could see herself and, while keeping it firmly pressed against her with her left hand she brought the fingers of her right hand to the little pouch of pink panty that rose out from between her thighs. \"See, Mr. Gould, you can even see my little pussy lips through my panties.\" She looked back up at him as she lightly caressed her lips through her panties.\n\nHis face was now a deep red, both with excitement and embarrassment. He could feel as well the blood flowing into his balls, a surge of energy, of interest, of lustful preparation. He really wasn't sure what he should do, or could do. Of course, what he should do would be to just take her by the arm and escort her from the class, but he wasn't too sure he was in a position to risk her becoming angry and filing a complaint. The complaint of a young female student would always carry more weight than that of a male faculty member, particularly if he was honest about having gotten an erection. \"Yes, yes, I do see that but, really, Emily, you really shouldn't be doing this.\"\n\n\"Is he getting all hard and everything, Mr. Gould, looking at my panties?\"\n\nThere was no way he was going to answer that. Actually, there was one way to answer, without having to say anything. He realized that the best way, perhaps the safest way, to get out of this situation was to do what she wanted. When you're being threatened it's sometimes best not to fight. Just let her have what she wants and end this affair before it got out of hand. He uncrossed his legs and pulled away his hands, resting them on the arms of the chair, displaying to her, for her, a very obvious, prominent protrusion within his slacks.\n\n\"Oh, Mr. Gould, he is excited, isn't he!\"\n\nHe didn't know how long she wanted to look at him, but he had to admit that a very significant part of him was enjoying this, enjoying the fact that this very pretty young lady, younger than his own daughter, holding up her plaid skirt to show him her pink camel toe, was herself enjoying the sight of the erection within his slacks. He hadn't experienced anything like this for quite some time, perhaps nothing since he was in fact younger than Emily.\n\nEmily let go of her skirt. Mr. Gould felt both relieved and disappointed. \"Excellent, well, let's now call this a day, and we will speak no more of it.\"\n\nBut, Emily then bent forward, her lovely, flushed face moving toward his erection. He couldn't help but think that she might be actually leaning down to kiss him, to kiss him there. He quickly covered himself up again, protecting his penis from this very naughty girl.\n\nEmily kept her eyes fixed on his confused, nervous, excited eyes; her eyes expressing a yearning desire, a lust, for his cock. She softly, slowly ran her tongue along her lips.\n\nAnd, while she was doing so, while his eyes were firmly fixed on hers, she reached back under her skirt, grasped the hem of her panties, and pulled them down past her bottom cheeks, down to her thighs, albeit still under her skirt. She then stood back up.\n\nMr. Gould breathed a sigh of relief, realizing that she had only been just teasing him into thinking that she was actually going to kiss him, down there. However, with the relief also came a brief moment of disappointment. His ex-wife would never do that for him, had never done that for him. She considered it disgusting. Imagine having it done now by a pretty girl, one who was less than half his age! But, that was rather unrealistic. It was a nice fantasy, but just a fantasy. When he thought about it, Emily was perhaps demonstrating more control than him, as he probably would have let her go through with it. He misunderstood why she bent over like that and he hadn't tried to stop her. He was perhaps the one with the wicked, perverse fantasies. Thank goodness this girl was demonstrating the good judgment that he apparently had lost, at least for a moment.\n\nEmily again reached down for the hem of her skirt, and once again pulled it up, this time revealing that her panties were now bunched up around her thighs and, more importantly, revealing to the professor's eyes the most deliciously sweet cunnie he had ever seen. \"Oh my gosh,\" he quietly exclaimed, unable to restrain from acknowledging the pure delight of the vision. Emily had the most winsome cunnie one could imagine. It was a preciously pretty pussy, just a tiny little white pouch split by a tender, enchanting slit of pure delight, covered by only the most gossamer down of wispy peach fuzz. His cock was yearning, straining to escape his slacks to attack this rapturous crevice.\n\nHis eyes again went to the classroom door, but only for the most briefest of moments. His eyes really, really didn't want to look away from the treat that displayed herself before them.\n\n\"Do you think it's pretty, Mr. Gould?\"\n\nHe responded quietly, but very honestly. \"It's wonderful, Emily.\" Pretty much all resistance was now gone. He was now governed by the vision of her cunnie, by the cunnie itself. He would do anything it requested, anything it commanded.\n\nA triumphant grin graced her other lips. \"Can I see yours?\"\n\nIt was only fair. His heart was pounding, sweat was dripping down beneath his arms. \"Lock the door, Emily,\" he suggested.\n\n\"Anything you say, Professor Gould.\" She turned around, and raised the skirt behind her, offering him the sight of her adorably pert behind. Mr. Gould was not a butt man, but he could appreciate the sight of a youthful, taut, firm white fanny, split as well by yet another scrumptious, mouth-watering crack.\n\nEmily slowly walked to the door, wagging her bottom as she went. Her steps were somewhat constrained by her panties, wrapped around her thighs, but she exaggerated the constriction, walking like a well-trained geisha. It was such a captivating spectacle.\n\nAs she made her way to the door, Mr. Gould removed his cock from his slacks. By the time she had locked the door and turned around, his hard cock was out and fully displayed, poking out through his fly like a jack-in-the-box.\n\n\"Oh my, Mr. Gould,\" Emily exclaimed. \"I kind of thought a professor would be big, but I didn't imagine this big.\"\n\nMr. Gould grinned. No woman had ever referred to him as being big before. He kind of doubted that he was, but he really wouldn't know. Perhaps he was? It sure appeared that Emily was pretty darn experienced in matters such as this. She was probably speaking with some authority.\n\nIt seemed to swell even further as she made her way back, holding up now the front of her skirt as she approached. He could never imagine meeting a girl so tantalizing, so fetching, so enchanting. Her little split peach cunnie slowly approached. He reached for his cock, grasping hold. He wondered if he could convince her to masturbate together. That would perhaps be a bit obscene, but his balls were aching for relief.\n\n\"Now, now, Mr. Gould, that's my responsibility. You sit back and let Emily take care of your big, manly cock.\"\n\nEven in his current state of mind, his state of arousal, he knew that this would be wrong, very terribly wrong. \"Emily, we can't have sex, we just can't.\" It was frankly remarkable to even be saying that. He would never have imagined, at his age, that he would be saying no to a pretty girl half his age, while she was standing there, holding up her skirt.\n\n\"Mr. Gould, don't be silly. We're not going to have sex. I know that wouldn't be right and, besides, I don't think I could take a big penis like that.\" She knew full well she could, but she wasn't actually interested in taking him that way. She preferred using her hands and mouth on a guy. That was how she liked to do it. It was the way that provided her with the greatest intimacy with his cock. She wanted to see it up close, feel it up close, and taste it up close.\n\nMr. Gould wasn't sure he was in fact relieved to hear that they wouldn't have sex, although he knew that tomorrow he would probably feel relieved. In fact, he wondered if tomorrow he would feel guilty, feel worried, no matter what they did, no matter how little it was. \"I'm not so sure, Emily, that we really should be doing anything at all. We should perhaps stop before things get out of hand,\" as if they already hadn't.\n\nEmily had thought that she had him entirely under her control, but it was clear that at the threshold of victory, he was hesitating, wavering, losing his nerve. She offered, \"I will make a deal with you, Mr. Gould.\"\n\nHe wasn't too sure that he liked the sound of that. He realized that he was not really in a negotiating position, as he would be the one to suffer the most severe loss and punishment if their little 'show and tell' became public. What defense does a professor have when he has his cock sticking out of his pants? He asked, apprehensively, \"What kind of deal?\"\n\n\"If you let me play with your thing, I won't ever do it again with anyone in the class.\"\n\nThat was the deal? He was certainly expecting a lot worse than that. At best he figured she would demand an A grade (although he would now give it to her anyway; how could you not give a girl an A in biology after she shows you her delightfully pretty cunnie?). Frankly, this was a rather sweet deal for him, and, truth be told, it would help to control her behavior in class. Perhaps it would be the best thing, the only thing, to help her maintain proper decorum. \"Yes, yes, you have a deal.\"\n\n\"But, if sometime I feel the urge, you know, with another boy during the class, you have to promise to let me use your thing instead, like after class.\"\n\nLike any good car salesman, he pretended that he felt very reluctant to accept the clause, as if it was a major sacrifice on his part, when in fact it was a very satisfying addition to the contract. \"Well, I suppose I can accept that, if you feel it's absolutely necessary.\"\n\nEmily let go of her skirt and dropped down to her knees, in between the knees of the professor, and reached up to grasp hold of his stiff dick.\n\nEmily found that most cocks looked big, or at least bigger, when kneeling down beneath them, looking up at them as they towered over your face, your eyes. She really liked looking at them this way. She turned it all sorts of different ways, admiring its girth, its strength, its manliness. \"I really like men's penises best, Mr. Gould.\"\n\n\"Excuse me?\"\n\n\"He looks so much bigger, so much more manly, than the students' penises I date. I mean, well, of course, they're men too. They're like at least 18 and everything, but they seem like boys to me, compared to such a manly cock like yours. It's almost like they're still growing or something.\" Clearly they were not. Professor Gould didn't really have to explain that to her. It was probably the context of the experience, the fact that the students' penises were cocks on men with little power, little status, little responsibility, experience or age. They were cocks still playing with their toys, still horsing around like kids. The cock before her was that of a real man, a man of considerable authority and power.",
        "She got up higher on her knees, high enough so that she was at eye level with the man's stiff, naked dick. \n\nIt was wonderful. The bulb was so shiny, so purple, so agitated. She wet her lips with her tongue, leaned down, and planted a long, full, lustful kiss on the tip. She then slid her lips around and around the bulb, using her tongue as well to keep him slick and slippery. It was such a nice big fat head, like the head of a monstrous battering ram, so powerful, so fierce, so delicious, like a big purple plum.\n\nShe stuck out her tongue, and licked and licked and licked all up and down the shaft. It was not the shiny smooth shaft of a boy, it had clearly been through tough times, perhaps many times having been stroked, pounded, and beaten, but it was still quite stiff and stout and, much to her pleasure, hairless.\n\nShe returned to the tip and absorbed the purple plum into her mouth, capturing its thick richness within her mouth, where she could more thoroughly bathe it with her tongue as she ran her fist up and down the lubricated rod. She pumped and pumped the pipe, trying to draw forth from the well its full rich priceless oil, the salty gruel that he stored within his heavy, hairy balls, which she now gently but firmly grasped in her left hand, fondly tickling that sensitive area just behind his nuts, as her fist continued to jerk his cock and her tongue licked and lapped at the bulb.\n\nFor a man who rarely in life had ever had a woman even kiss him down there, who for many years was denied this pleasure by his ex-wife, it was just pure bliss. The innocent looking girl, dressed in the demure, chaste uniform of the college, had his cock buried in her mouth. She was lapping away at it like a thirsty puppy, while she stroked him with her soft girlish hand, and tickled his nuts with the other. He, and she, felt his balls pull tight against his body as the first pulse of his orgasm exploded from deep inside him and surged up and out his shaft like a gusher bursting from deep inside a well.\n\nEmily moaned with pleasure as she felt the tell-tale twitch in his cock and then tasted the first blast of cum against her tongue. She so loved the taste of cum. She was at first surprised to find that cum didn't always taste the same. It was another sweet surprise of these magically delicious appendages. Mr. Gould's cum was really very nice: very thick, like a rich, heavy, syrupy, globby gruel. That was the way she liked it. She wanted her mouth to be filled with the man's thick, syrupy, slushy, slimy, slurpy, sludgy, sticky, scummy, sloppy soup, and Professor Gould did not disappoint.\n\nSometimes she tried to swallow as a man's gism gushed forth into her mouth, but this time she opted to just let it all build up. She wanted to have a true mouthful, to feel herself completely filled, engorged by his stuff, to truly experience the effect of being inundated, asphyxiated, smothered and choked by the clammy cum. It was like she was being punished for her misbehavior by having to wash her mouth out with his cum.\n\nMr. Gould watched through his glazed eyes the pretty Emily take his stuff into her mouth. It was a rapturous sight as well as a rapturous feeling, the waves of his orgasm sweeping up through his body as his cum belched forth from his shaft and out the head into her mouth, the cherubic mouth of Emily Kay. Yes, he would have to give her an A for this. It had been so long since he had felt this good.\n\nWhen he was done she carefully pulled her mouth free, being heedful not to spill even one drop. She then looked up at Mr. Gould, an alluring, mischievous smile gracing her tightly closed lips, like she was hiding from her father that she had snatched a big gum ball from the candy jar and was now savoring its flavor, knowing that she had successfully gotten her treasure right beneath his nose.\n\nMr. Gould smiled back, still breathing quite heavily, actually trying to catch his breath.\n\n\"Isth ith okay ifth I go now Mther Gould?\"\n\n\"Yes, yes, my dear. It's okay now. You be sure though to do the next homework assignment.\" He felt a strange need to act like a teacher again, however incongruous it now appeared, now felt.\n\nEmily nodded gleefully. She stood back up, pulled her panties back up, and scampered from the class, luxuriating in the globs of cum in her mouth as she headed off to her next class.\n\n- - - - - - - - - - - - - - - - - - - \n\nEmily had been lying down on Dr. Lowenstein's couch, her head on the little white cloth. Dr. Lowenstein was sitting behind her, out of eyesight.\n\nIt was perhaps fortunate that she was, as her breasts were heaving up and down with her quickened breathing. This was, of course, precisely why the therapist sat behind the patient, so the patient could not observe the instinctive reactions of the therapist to whatever story, fantasy, or confession the patient was revealing.\n\n\"You know, doctor, sometimes I can even guess what they had been eating.\"\n\n\"Excuse me?\"\n\n\"By the taste; the taste of the cum. Asparagus, of course, is the most obvious. Onions are, well, you know, oniony. Brussels and broccoli sprouts make it a bit bitter.\" She turned her head a bit toward the doctor, although still not able to actually see her face. \"I think celery makes it sweater, but any fruit or fruit juice with lots of sugar, you know, like melons or mangos work best, I think. Don't you think so, doctor?\"\n\nDr. Lowenstein didn't really know and, strangely enough, didn't really want to admit that fact. She had a friend who was a real wine connoisseur. She could not herself though tell the difference between a Riesling and a Sauvignon Blanc. They were all just red wines to her, yet her friend readily distinguished a Cabernet Franc from a Cabernet Sauvignon. Emily reminded her of her friend, with her fine taste in cum, and she felt a little jealous. \"Have you continued to see Mr. Gould?\"\n\n\"Oh yes, of course. Not too many times though.\" She again turned her head toward the doctor. \"That's just it. I soon lose interest. Once I become too familiar with his penis I want to move on, to discover new ones, to hunt, bag, and conquer new ones. I even captured the penis of my high school teacher.\"\n\n\"Your high school teacher?\"\n\n\"Oh my goodness, Dr. Lowenstein, I'm out of time again. Can I tell you that story next week?\"\n\n\"Uh, yes, yes, yes, of course, next week. We can pick this up again next week.\"\n\n- - - - - - - - - - - - - - -\n\nWhen Emily returned the following week Dr. Lowenstein immediately asked her about her high school teacher. This had troubled her throughout the week. She had told Emily that everything that happens within a session is confidential, but there are exceptions, including any underage sexual encounter.\n\nBut, the doctor was quickly reassured. Emily wasn't referring to a time when she was in high school.\n\n\"Oh no, Dr. Lowenstein, that would be wrong. I would have been underage and everything. I'm not that kind of a girl. I was eighteen when I did it. I was legal.\"\n\nThat was very reassuring to hear.\n\n\"In fact, that's the point. I wanted to do it back then. Frankly, lots of girls did. Mr. McAllister was fresh out of college. All the girls had crushes on him and, in fact, I think Tracy Flick did do him. Tracy was so obvious, as she was with lots of guys, frankly it seemed like all of the guys. I think she was actually doing it. She was so easy.\" This sort of criticism seemed a bit hypocritical to Dr. Lowenstein, but in the early stage of therapy she didn't feel that it would be helpful to be confrontational. \"I wouldn't actually do anything with him. I was too young. I knew that. I promised my mother that I would wait until I was at least 18. Well, of course, not to have sex with Mr. McAllister, I mean, no, like, with any guy. In any case, Tracy often dropped hints to other girls that she had a \"special\" relationship with Mr. McAllister. Yea, I bet it was real 'special'.\"\n\n\"In any case, I saw him again last year, after I graduated. I was at the supermarket, just to get some milk. Did you know that the two most common things purchased at the grocery store are milk and bread? That's why they are the farthest apart in the store. Check it out. They do that so you have to go across the whole store. I didn't need any bread though. Mother just wanted the milk.\"\n\n\"In any case, I was wearing my Templeton uniform. I didn't have to. I was home visiting, and I just wanted to show my parents the uniform. Daddy likes it. I knew he would. Mother isn't so sure. She thinks it's kind of demeaning. It's funny. I think the administration considers the uniform to be conservative. It does at least prevent girls from wearing whatever they want. You know, Dr. Lowenstein, on some campuses girls even wear lingerie like it was a blouse.\" Dr. Lowenstein had heard of that. \"And, don't quote me on this, but I hear, I mean it, I hear that at Abberville College some students are even naked!\" She turned her head to Dr. Lowenstein. \"Can you imagine that? All of the students completely naked? I don't believe it. That can't be true.\" That really wasn't true, but there was some truth to it (see Naked at College). \"In any case, I think it's funny that Templeton requires this uniform when in fact I think it turns some boys on. It makes us look all innocent and pure, and lots of boys like that.\"\n\n\"Well, in any case, I ran into Mr. McAllister at the supermarket.\" Emily then proceeded to recount her experience with Mr. McAllister.\n\n- - - - - - - - - - - - - - - - - - - - - \n\nShe saw him as she was crossing through the store to get the milk. He was trying to decide which brand of frozen dinner to purchase. Emily gleefully called out, \"Hello Mr. McAllister!\"\n\nHe looked up and squinted. He did not at first recognize Emily. It was often difficult to recognize someone out of context, outside of the high school. And, the uniform certainly threw him off. Carver High School didn't require uniforms. This girl was wearing a tight white blouse, black tie, short plaid skirt, white socks, and even black Mary Janes. He had never seen a girl dressed like this, outside of the movies.\n\n\"Silly man, it's me, Mr. McAllister, Emily, Emily Kay.\"\n\nHe looked more intently as she came up the aisle. Once she got all the way up to him, standing next to him, he finally recognized her, a large smile gracing his lips as he recalled the young Miss Emily Kay. \"Why yes! Emily, yes! How very nice to see you. You graduated last year, of course, of course I remember you.\" She had been such a cute girl, and now she seemed to be even cuter in this uniform.\n\n\"It's so wonderful to see you, Mr. McAllister.\"\n\n\"Yes, well, it's very nice to see you as well, Emily.\"\n\n\"Do you like my dress, Mr. McAllister?\" She gave him a twirl. Quite a bit was already evident beyond the hem of the short plaid skirt, but a considerable amount of white thigh appeared as the hem flipped up with her twirl. Mr. McAllister even briefly detected a bit of white panty.\n\n\"Yes, well, it is very nice, Emily.\" He did indeed like her dress, very much so in fact, although it seemed a bit incongruous within this supermarket. What would make an adult girl wear such an outfit?\n\n\"It's my college uniform, Mr. McAllister. I go to Templeton now. I was just showing it off for my parents.\"\n\nHe couldn't imagine having a daughter show this dress off to him. \"Oh, yes, yes.\" He was familiar with Templeton. It was a rather conservative college. They seemed to be as much into controlling students' behavior as they were into developing their minds. Personally, he found the parents who sent their children there to be overly protective and authoritative. \"Well, how do you like it, dear?\"\n\n\"Oh, it's okay. I like my classes and such, and my teachers.\"\n\n\"Well, that's good to hear. I'm glad it worked out for you. You were always a very good student.\"\n\n\"Well, thank you, Mr. McAllister. How sweet of you to say so.\" She went up on her tip toes and gave him a quick peck on the cheek.\n\nHe was a bit surprised at that, but Emily had always been a very friendly and engaging girl.\n\n\"What are getting, Mr. McAllister?\"\n\n\"Oh, I was just trying to figure out which frozen dinner to get.\"\n\n\"Oh my, eating alone tonight, are you, sir?\"\n\n\"Yes, not that it's any business of yours, Emily.\" He wasn't really annoyed. He was used to high school girls teasing him about being single.\n\nEmily opened up the door to the freezer. She leaned over to reach deep into the bottom shelf. \"These are the more healthier brands, Mr. McAllister.\"\n\nMr. McAllister's eyes naturally went to the rising of her skirt as she bent over into the freezer. Emily did have very lovely legs. But, what eventually came into view was really quite striking. The skirt was so low, and she was bent over so far, that the lower half of her bottom was soon revealed. Mr. McAllister quickly looked around. No one else was there to notice her exposed bottom, nor to notice him noticing. He turned back to her bottom.\n\nHer tush was so cute, so very, very fresh and delicious. If only he could purchase one of these. And, it was so delightfully packaged. She was not selling it with any fancy dressing. She was wearing simple white panties, but they were ever so tight and appealing, trimmed with a very delicate lace. The pouch of her cunnie was in particular deliciously, snugly encased. He quickly adjusted the position of his awakening cock.\n\nEmily looked back around, behind her. Yes, she could see that Mr. McAllister was admiring her bottom. She did hope that he liked her panties. She wasn't wearing her most enticing panties. After all, she was just visiting her parents. But, by the expression on his face and his quick effort to hide the fact that he was shifting his penis, she could see that he was pleased. \"Do you see anything you like, Mr. McAllister?\"\n\n\"Um, well, uh, no, no, that's fine.\" If anyone came down the aisle toward them from the right, they would see her exposed fanny. For the sake of her modesty, he stepped up to her, hiding her bottom from view with his own body on one side and his shopping cart on the other. He did not want to embarrass the girl, but in standing so close her bottom was now within inches of his crotch.\n\nShe turned back to the freezer. \"Well, it's good to get the ones toward the back. They say those are the freshest you know. They put the new ones in the back. Mr. McAllister, if you wouldn't mind, hold me steady so I don't fall. It's really difficult to reach back there.\"\n\nHe moved up even closer, as close as he could get without actually touching her rump with his hard-on, and placed a hand gently on her hip.\n\nEmily pretended to slip, thrusting her butt right back at him, pressing hard into his bulge. \"Mr. McAllister, you have to hold me tighter than that!\"\n\n\"Yes, yes, well.\" A minute ago he was worried that someone might see her in her rather indelicate pose. This, however, was really much, much worse. Now it looked like he was actually trying to take her from behind, his crotch pressed tightly against her upraised bottom. He imagined the security guard watching the monitors must be enjoying this scene. And, even worse, he realized that she might in fact be able to feel his erection against her buttocks. He wished she would just hurry up.\n\nBut, Emily did not. On the contrary, she began to shift her bottom left and right as she struggled to find the right package, giving him a little lap dance right there in the supermarket, enjoying the feel of his stiffie against the soft cheeks her derriere.\n\nAfter awhile, she pushed back hard against him. \"Hey, back off. You trying to push me in here?\"\n\nHe gratefully backed away, quickly shifting over behind his shopping cart to hide his evident excitement.\n\nShe stood back up, proudly holding up a frozen Home Bistro gourmet dinner. \"Here, Mr. McAllister, these are really very yummy, and good for you too!\"\n\nHis eyes though were not on the package of Home Bistro, they were instead on the tips of Emily's tits, the nips of which were poking out of her tight blouse like a couple of bullets.\n\nEmily noticed the direction of his eyes, looked down and exclaimed, pretending to be quite embarrassed, \"Oh my!\" She tossed the frozen dinner into his cart and clasped her hands against her breasts, ostensibly to protect her modesty but in fact drawing even more attention to her breasts, to their softness and pliancy. \"I'm so sorry, Mr. McAllister. They kind of do that sometimes, you know, when they get cold, I mean.\"\n\nEmily though wasn't blushing. It was Mr. McAllister's face that was turning red. \"Yes, well, that's alright, Emily. You were in that freezer for quite awhile, actually.\"\n\n\"It's not like I got all sexually excited, you know, when I saw you.\"\n\n\"No, no, of course not, certainly not.\"\n\n\"Maybe if I warm them with my hands the little rascals will go down.\" She rubbed her palms against her nipples, around and around, and then pulled her hands away to see if it worked. It didn't, of course. If anything, they were now sticking out even further. \"Oh, my goodness no!\" and she once again tightly grasped her titties, squeezing them like she was testing a melon.\n\n\"But, I mean, it's not like that you wouldn't or couldn't excite me, Mr. McAllister. I don't mean that,\" she attempted to explain as she clutched her boobies. \"I mean, in that way, you know, sexually.\" It was a rather endearing confession when the girl is squeezing her breasts.\n\n\"No, yes, well, that's fine.\"\n\n\"I used to feel that way a lot about you, you know. Lot's of girls did. But, I'm all grown up now.\"\n\n\"Yes, I know, well, say hello to your parents for me.\" He shifted around the cart. He really wanted to extricate himself from this rather awkward moment.\n\n\"Oh my gosh, Mr. McAllister, your thing got all stiff too!\" she exclaimed, removing one hand, allowing her pointy nipple to come back into view, and pointing at what was pointing at her from his trousers.\n\n\"All jeez,\" he exclaimed, his embarrassment escalating. He quickly pulled a bag of chips from his cart and stuck them in front of his slacks.\n\nEmily laughed at his discomfort. \"Aren't we the two happy customers, Mr. McAllister. Now don't you be embarrassed by that. I'm a big girl now. I know about things like that.\" She stepped up to him and said more softly, \"You know, it's really kind of flattering for a girl, letting you know how excited you are to see her.\"\n\n\"Well, you may be flattered, Emily, but I'm a little more than embarrassed.\"\n\nEmily withdrew her other hand away. \"But, Mr. McAllister, if I can show you my stiffies, can't you show me yours?\"\n\n\"Emily, that would not be at all appropriate.\"\n\n\"Mr. McAllister, don't be embarrassed. It's not like I'm in high school anymore.\" In that outfit, she didn't look particularly grown up. \"I'm fully eighteen and I'm not even your student anymore.\" She went up on her tip toes and whispered into his ear, \"We can do anything we want now.\"\n\nThis was not helping his cock to go down.\n\nShe fell back off her tip toes and said more openly, \"You know, I've always really wanted to see your penis, Mr. McAllister.\"\n\n\"Emily! Oh my gosh! You really shouldn't say things like that!\" He knew that some of the girls in the high school had developed a crush on him, including one or two in Emily's class. A number of them had been highly flirtatious. This was to be expected. The principal had in fact spoken to him quite bluntly about it, knowing full well that the handsome young teacher would generate quite a number of fantasies, as well as rumors. The principal had made it clear that if anything untoward did in fact happen, he would be out of a job at Carver and most likely anywhere else. \"My gosh, Emily! Please, if your parents were here right now.\"\n\n\"I don't live with my parents anymore, Mr. McAllister. I live in the dorm. I tell you what. Just let me see it for one minute, just one minute.\"",
        "None of the girls in the school had ever been this bold, this blunt. Well, actually, Tracy Flick had been. But, he had never acquiesced to her flirtations, her suggestions. It wasn't worth the risk of losing his job, his reputation.\n\nBut, Emily had graduated. She was no longer a student of his, and she was eighteen. A little innocent fun can't hurt anyone. \"Alright, but for just for one minute and then I have to finish my shopping. We go our separate ways.\"\n\n\"Oh goodie!\" She had figured that her visit home was going to be rather boring. This was a nice little momentary dalliance before bringing home the milk.\n\nHe pulled the chips away, and Emily's eyes widened with delight.\n\nMr. McAllister felt really quite uncomfortable. He had never just stood there, like this, for a woman, displaying through his pants his erection for her, and certainly never in a public place. He wasn't sure if he was being punished or rewarded. On the one hand, it was quite flattering for such a pretty girl to enjoy looking at your erection. On the other hand, he felt terribly awkward and embarrassed for having developed it, and now having to display it for her, right in the supermarket.\n\nEmily stared with amused delight at his embarrassment. It was amazing how long a minute will last when all you are doing is waiting for it to pass.\n\nShe started to reach out for it but a mother with her daughter turned down the aisle. Mr. McAllister started to cover himself up, but Emily shook her head. That wasn't the deal. No hiding himself for one full minute.\n\nMr. McAllister picked up the bag of chips again, but this time he brought the bag close to his face, pretending to be studying the ingredients, hoping that neither the mother nor the daughter would look at his pants or, more specifically, his bulging crotch. He tried to alter the context, the focus, by saying, \"I don't think these will be good for you, dear.\"\n\nEmily played along, but with a different spirit. \"Do you know what I would like, daddy? I would like a big hot dog! No, a sausage, a big thick long one. Oh, and do they have bananas here? I love bananas. And, maybe a cucumber, or a pickle. A really big, juicy sweet pickle. Oh daddy, can I have a big one, please? Can I please?\"\n\nMr. McAllister's face went deep red as she prattled on. The mother clearly found the dialogue to be confusing, if not oddly disturbing. The daughter was oblivious. The good news was that it did draw their attention away from him and toward Emily. By the time they cleared the aisle, the minute was long gone.\n\n\"Alright then, Emily, funs over, now let us finish our shopping.\"\n\n\"It was fun seeing each other again, though, wasn't it Mr. McAllister?\"\n\n\"Yes, yes, it was nice.\"\n\nEmily went up on her tip toes again, whispered into his ear, \"I especially liked seeing your pickle,\" and gave him a peck goodbye as she lightly, briefly laid her fingers on his crotch. Mr. McAllister flinched at her touch, but he did not pull away. He found the little minx to be quite intriguing, if not pleasurable, but he was also grateful that it was over. She was definitely trouble, exactly what the principal had been warning him about.\n\nHe finished his shopping and drove back to his apartment. He felt good to have walked away. When in doubt, leave before any trouble develops, but he had to admit that the little nymphet remained on his mind as he drove home.\n\nAs he carried a couple of bags of groceries up to his house, he heard Emily say, \"So, this is where you live, Mr. McAllister?\"\n\nHe almost dropped the bags. \"Emily, you followed me home?\"\n\nShe had indeed. She did leave him alone through the rest of his shopping, but she also couldn't get him out of her mind, or at least the bulge in his trousers. He was one penis that she had longed for throughout high school, fantasized about, yearned for. She had restrained herself during high school, but seeing him once again in the market, or more accurately, seeing the outline of his erection through his pants, brought back such a flood of memories, memories of wishes and desires. Can you blame the girl for at least considering the possibility?\n\nShe had purchased her milk and waited for him in her car, outside the market, so that she could follow him home.\n\n\"I thought you might need help carrying your bags in.\"\n\nThat was a pretty lame excuse, to say the least. \"Emily, I'm not stupid.\"\n\nShe smiled flirtatiously at him. \"Well, of course not, Mr. McAllister, you're a teacher!\" She reached into one of his bags. He couldn't hardly stop her, as his hands were full. She pulled out one of the fresh vegetables he purchased: a long, thick cucumber. \"I should at least help you carry this in. It looks awfully big.\" She slid her fingers up and down its length. The imagery was rather obvious. \"It must be hard to walk around with one so big and hard like this.\"\n\nMr. McAllister looked up and down the street. He couldn't imagine what a neighbor might be thinking if one saw him with this young lady, dressed in her uniform, masturbating a cucumber in his front lawn. \"Please, Emily, the neighbors.\"\n\nShe ignored his plea. In fact, she shifted the cucumber to her left hand and boldly reached out to lightly slide her fingers up and down his crotch. \"I bet yours is as big as this cucumber.\"\n\n\"Emily!\" Mr. McAllister did step back, but she just stepped forward, continuing to caress and explore the front of his slacks, right in the middle of his front lawn. This would indeed draw quite a bit of curiosity from a neighbor, and most likely serious concern. Here was Mr. McAllister, a teacher at the local high school, being fondled by a petite girl, dressed in a school girl's uniform. There was no mistaking what was happening, yet in fact it would have been a mistake to have reached the obvious conclusion.\n\n\"Emily, please, please, somebody will see you. This isn't good.\"\n\n\"Well, Mr. McAllister, perhaps we should go inside? I would really love to see your home.\"\n\nGirls from the high school would at times show up at his door, always with some silly excuse and usually hinting at the possibility of something else, if he let them come in. Tracy had been the boldest, requesting a private tutoring session. He had never let any of them in. He knew that if any one of them subsequently made an accusation of an indiscretion or abuse, whether true or false, he would not be able to defend himself, having allowed the girl into his home. But, Emily was not a current student. She was eighteen years old. And, besides, none of the high school girls had ever actually fondled him in his front yard! He really needed to get off the front lawn, out of the sight of his neighbors' eyes. \"Yes, well, let's go inside and talk about this.\" He turned and proceeded to the front door, his growing erection pointing the way. As he fumbled with his keys, he further clarified with Emily, \"Now, Emily, I need to talk to you. We are going to talk, and that's all.\"\n\nEmily took the keys from his hand. He was having considerable difficulty, due in part to holding two heavy shopping bags with one arm, but there was another growing problem. \"Let me help you with that, Mr. McAllister.\" He was grateful for that. Anything to get off the porch as soon as possible was appreciated.\n\nAs Emily bent over to insert the key into the lock, she pushed her bottom back into his crotch, as she had done earlier in the store. This time Mr. McAllister did move away. She looked back over her shoulder, smiled, wiggled her bottom, and turned the key. She opened the door for him to step inside. As he walked by she patted him on the bottom.\n\nShe followed Mr. McAllister into the kitchen, where he deposited the heavy bag onto the counter. He turned back to Emily. \"Now Emily, we really do need to talk.\"\n\nHowever, as soon as he caught Emily's eyes, he stopped. Emily now had the smaller end of the cucumber in her mouth, smiling through her fully stretched open mouth, her hazel eyes twinkling as she slowly slid the cucumber in and out of her mouth, like it was a cock going in and out, in and out. Mr. McAllister was speechless.\n\nEmily pulled the cucumber from her mouth. \"Do you think yours is as big as this, Mr. McAllister?\"\n\nHe knew he wouldn't be using that cucumber in his salad. \"Emily, please, this just isn't right.\"\n\n\"But, Mr. McAllister, that's what makes it all the more fun.\"\n\n\"Your parents would be very disappointed in me, and in you.\"\n\n\"Mr. McAllister, haven't you once had the fantasy of doing it with one of your students?\"\n\nBeing now in his own home, secluded from prying eyes and ears, he was able to speak more freely. \"Well, yes, of course, Emily. I suspect all teachers do.\"\n\nShe asked more softly, \"Did you ever think about doing it with me?\"\n\n\"Emily, please.\"\n\n\"But, all we're doing is talking, Mr. McAllister. You said you wanted to talk.\"\n\n\"I wanted to talk to you, Emily.\"\n\n\"I want you to talk to me too, Mr. McAllister. I want you to tell me if you ever had any fantasies about me.\"\n\nFor someone who wanted to talk, Mr. McAllister didn't know what to say.\n\n\"I bet you had lots of fantasies about Tracy, didn't you, Mr. McAllister. In fact, I bet she has even been in this house.\"\n\nHe could comfortably speak about that. \"No, no, Emily, actually that's not true. I imagine that there were quite a bit of rumors about Miss Flick, but none of them were in fact true. I never did anything at all with her.\"\n\n\"Did you ever think of doing anything with her?\"\n\n\"Yes, yes. I will admit to that. She was a very flirtatious girl.\"\n\n\"And a very pretty one?\"\n\n\"Yes, yes. She was attractive.\"\n\nShe pretended to pout. \"But, you don't think I'm at all attractive?\"\n\n\"Emily, you are also a very attractive girl, you know that.\"\n\n\"But, you don't seem to have any fantasies about me. You know, that's a very hurtful, humiliating thing to say to a girl. You had all these fantasies about Tracy Flick and none about me.\"\n\n\"Emily, I did have fantasies about you as well. Of course I did.\"\n\nEmily smiled in triumph. \"Oh please, Mr. McAllister, won't you please tell me one of them?\"\n\n\"Emily, I really don't think I want to do that. I don't think I should, or could, do that.\"\n\nShe smiled coquettishly at him. \"If you tell me one of yours, I will tell you one of mine. All it will be is talk.\"\n\nHe really didn't think he could tell her one of his fantasies. One of them was that she got caught in the classroom window, the top half of her body was sticking out, and he came up behind her, flipped up her skirt and pulled down her panties, and then took her from behind, as she tried to keep her composure, talking to her friends down in the school yard while this unknown person fucked her from behind. Another one was less bizarre. She just had her hands tied behind her back while he titty fucked her. Perhaps the tamest fantasy was just that she came to him to ask him about what guys were like, and so he showed her his cock. But, these were really all too embarrassing to reveal. Nevertheless, his cock was now straining in his pants as he went through his list of fantasies.\n\n\"You're thinking about one of them right now, aren't you, Mr. McAllister.\" If there was one thing that Emily could do, it was to read men, particularly when it was sex on their minds. \"You're getting even bigger and bigger in there.\"\n\nHe quickly covered himself with his hands.\n\n\"No, no, Mr. McAllister. I think you look even more handsome that way, showing me how big and powerful you are.\"\n\nHe pulled his hands away. His heart was accelerating, sweat was dripping down his side.\n\n\"One of my fantasies, Mr. McAllister, was that you squirted your big manly penis all over my face.\"\n\nIt wasn't a particularly elaborate fantasy. There was no context, no scenario. But, she felt the single image spoke a thousand words.\n\nAnd, it certainly got Mr. McAllister thinking. Mr. McAllister had dated quite a few girls. He was good looking. He had his share of girlfriends. But no girl had ever said that to him before. He took a deep breath, his cock yearning for him to speak. He said, \"Well, my fantasy was that you came to me to ask me about men.\"\n\nEmily stepped forward a bit and clasped her hands behind her, slowly swinging her pert perky titties back and forth, back and forth. \"And, what did I want to know?\"\n\nMr. McAllister felt terribly embarrassed to say, but it did seem like she would not be offended. He said softly, his mouth dry, \"What a man's penis was like.\"\n\nEmily stepped up to him, reached out for his hand, and led him from the kitchen. She didn't know precisely where she was going, but she knew that the next room was likely to have a couch, if not a bed.\n\nMr. McAllister followed along, feeling now so pleased, so happy, that he had allowed her to enter the house. This was literally a dream coming true, as he watched her hips swing the plaid skirt left and right.\n\nEmily led him into his living room, where there was indeed a couch. She brought him over to the couch, and directed him to sit down.\n\nHe did as he was directed, his slacks now jutting way out, like it was a tent with a big pole holding it up. Once he was seated, Emily said, \"Mr. McAllister?\"\n\n\"Yes, Emily?\"\n\n\"I wonder if you could help me.\"\n\n\"Well, yes, dear, I am always here to help one of my better students.\"\n\n\"You're so good to me, Mr. McAllister. Mummy always said that if I don't know the answer to something, I should ask my teacher. Teachers know everything, and you are my most favorite teacher of all.\"\n\n\"Well, that's very flattering, Emily. Why don't you tell me what is on your mind.\"\n\nEmily shyly cast her eyes to the floor, clasped her hands modestly before her, and said, \"It's kind of difficult to talk about, Mr. McAllister.\"\n\n\"Emily, come here and sit on my lap.\"\n\n\"Oh yes sir!\" She willingly complied, climbing onto his lap, her plaid skirt rising up on her lily white thighs, her soft little bottom resting on his more masculine, muscular thigh.\n\nHe placed a reassuring hand on her knee. \"Now, Emily, you tell your teacher what is on your mind.\"\n\nShe leaned into his shoulder. \"Oh, Mr. McAllister, you're such a wonderful teacher.\" She snuggled in closer and said most very quietly, \"Mr. McAllister, I want you to tell me about a man's penis.\"\n\n\"The penis? You want me to explain to you about the penis?\"\n\nEmily wrapped her arms around his shoulders and looked him squarely in the eyes, pressing her young breasts into his chest. \"Oh yes, Mr. McAllister, wouldn't you please? Pretty please?\"\n\n\"But, honey, haven't your parents told you about such things?\"\n\n\"Oh no, Mr. McAllister. Daddy says it would be inappropriate to show me his. He sent me to mummy, but she said it was all just so terribly disgusting. She didn't want to talk about men's penises. She said I should talk to daddy.\"\n\n\"Well, I don't know if I should talk to you about it, Emily. After all, I'm your teacher.\"\n\nShe returned to pouting, swinging her feet as they hung from his lap. \"But, nobody else will. It's not fair! You don't want me to ask some silly boy, do you? And, well, who better to explain things than your teacher?\"\n\n\"Are you really old enough to learn about this?\"\n\n\"Mr. McAllister, I already told you, I'm a big girl now. I'm all eighteen and everything. I just never learned about this sort of thing. Won't you please let me see your penis?\"\n\nMr. McAllister was enjoying this play immensely. He couldn't be happier, as was clearly suggested by his stiff protrusion. \"Well, I will do it, Emily, for the sake of your education. But, we should probably keep this to ourselves. I'm not too sure your parents, or anyone else for that matter, will understand.\"\n\n\"Oh, it will be our secret. I promise, Mr. McAllister.\" She did eventually go on to tell Dr. Lowenstein, but that was understandable, and Dr. Lowenstein was herself sworn to secrecy.\n\n\"Alright then, let's see if I can be of some help.\" He let go of her back to reach down to his crotch to undue his belt.\n\n\"Oh no, Mr. McAllister, please, let me do it. After all, I need the practice and everything.\" She swung her body around so that she was sitting on his knees, facing him, each leg hanging down at his side. He leaned back and slid forward to the edge of the couch to give her more room.\n\nIt was clear that Emily didn't need any practice undoing men's trousers. \"It's like I'm opening up a birthday present and it isn't even my birthday!\" She almost tore away the wrapping to get to her new toy. It wasn't at all long before Mr. McAllister's stiff, hard cock was out in the open air. Emily pulled her hands away and said with considerable awe, \"Oh, Mr. McAllister, I didn't think they would be so big? Are all men so big?\"\n\nMr. McAllister was indeed a bit above average in size, but not deserving of any awards. \"Oh yes, honey. Most men are as big as this.\"\n\nShe knew he was being rather modest. She tentatively reached out and wrapped a hand around the shaft. \"Golly, I don't think I could fit something this big in me.\"\n\n\"Oh now don't be afraid, Emily. You will be able to get even bigger things than that in there. You could probably have even gotten that cucumber in there.\"\n\nShe playfully slapped him on the chest. \"Oh Mr. McAllister, don't say things like that. That's a terribly naughty idea.\"\n\n\"Would you like me to explain all of the parts to you?\"\n\n\"Oh yes, would you? I would be so grateful.\"\n\n\"I'd be glad to dear. Why don't you sit down next to me on the couch. Here, kneel down here, right next to me, and I will point out each part. And, to be sure that you're paying attention, I want you to kiss each part I tell you, so that I know you know precisely where it is.\"\n\n\"Oh yes sir, that's a wonderful idea.\" She crawled off his lap and got onto the couch beside him. She bent all the way over so that her eyes were just inches from his swollen red bulb.\n\nMr. McAllister then proceeded through aspects of the male erection: the crown, the sulcus, the shaft, the meatus, and each time Emily gave the spot a little kiss, smiling up at her teacher for approval, as well as letting him know how proud and happy she was to be his student. He emphasized in particular the frenulum. \"This is where boys are most sensitive. You want to give him an extra special kiss there.\"\n\n\"Like this, Mr. McAllister?\" Emily then leaned down, stuck her tongue out part way, and proceeded to give him little rapid licks on the underside of his crown.\n\n\"Oh my gosh, yes, yes,\" he gasped, \"just like that, Emily, just like that.\" He leaned back in the couch and placed a hand on her upraised, soft, curved rump as the little vixen licked and lapped at his sensitive nerves like a kitten cleaning her mummy's teat. Her tongue felt so, so good.\n\n\"I wonder if I can fit it in my mouth,\" she exclaimed. She looked up at him with beseeching eyes. \"Would it be okay if I tried? Could I, please?\"\n\nHe pretended to be uncertain. \"Well, I don't know, Emily.\"\n\n\"I promise I won't bite it or anything. Honestly, Mr. McAllister.\"\n\n\"Well, I suppose it would be good for your education, and everything.\"\n\n\"Mr. McAllister, you're such a good teacher.\" Emily then opened up her mouth as wide as she could, stretching her lips as far as they would go, and then lowered her face onto his cock.\n\nIt was in fact a rather tight fit, as Mr. McAllister's dick was really thick. \"Hmmmmmm,\" she moaned as she brought her face deeper and deeper into his lap, slowly bringing the stocky, fat shaft deeper and deeper into her mouth, her lips stretching wider and wider the farther and farther it disappeared into her mouth.\n\nShe stopped with a good couple of inches to go. \"Hnnnnnn,\" she complained, shaking her head, and his cock with her, communicating that it was simply too big and burly for her. She even choked a bit and quickly removed her face, coughing and rubbing her throat with her hand, her eyes a bit misty. \"Oh my goodness, Mr. McAllister. I'm so sorry. I just couldn't do it. It's just so big and strong, and everything. It's much too monstrous for my little girly mouth.\"",
        "\"Well, that's okay dear. It does take practice.\"\n\nShe took hold of it again with her hand, wrapping her elfish hand around the thick shaft. \"Maybe you could give me lessons? I would come over as much as you want, and I would practice. I promise, really I would.\"\n\n\"Well, we can talk about that later.\"\n\n\"Mummy and daddy will pay for the lessons. I'm sure they would.\"\n\nHe had to smile at that. \"Yes, well, we can discuss a fee later. For the moment, why don't you just do the best you can.\"\n\n\"Maybe I could fit it in my thingie? My girlie thingy. Let's see if it will fit there!\"\n\nThere was perhaps nothing more he would like to do, but a part of him was still ambivalent about taking advantage of this girl, using his position as her ex-teacher to exploit her for his own fantasies, even if he was no longer her teacher and she was at the age where she could make her own decisions. \"No, no, honey, I don't think that would be right.\"\n\nEmily though didn't really care if they didn't have real sex. She was more into the cock than she was into having sex. \"Well, can we pretend to do it?\"\n\nHe looked up at her, his eyes a bit glazed, with confusion as well as lust. \"Pretend?\"\n\n\"Yea. Let me show you.\"\n\nEmily then leaped from the couch, turned her back to him, bent over, lifted up her skirt, and slowly pulled down her panties. Slowly but surely bringing into view her soft, round feminine rump, and her even more feminine pouch, so lightly decorated with whiffs of delicate filaments, split by the most cute little enticing slit. She hesitated when her panties were at her knees and turned her head around to catch his eyes fixed on her cunnie. \"Do you think it's cute, Mr. McAllister?\"\n\n\"It's much more than cute, Emily. It's really gorgeous.\"\n\nShe let her panties fall to the floor, turned around, unzipped her plaid skirt, let it fall to the floor as well, and then lifted up her blouse so that he could see her from the front. She had such a deliciously enchanting cunnie. So young, so sweet, so wet. Stepping a bit out of character, albeit not really, \"Did you ever think that you would see my cunnie, Mr. McAllister?\"\n\nMr. McAllister smiled in return. \"No, no, dear, I certainly did not.\"\n\n\"Aren't you glad I came over?\"\n\n\"Yes, very, very much so.\"\n\n\"I'm glad too.\" She then climbed back onto his lap, her legs again on either side of him, bringing the lips of her cunt to his shaft. \"I'll just rub my little cunnie up and down your big manly cock, like we're actually having sex, but we won't really be doing it. Does that sound like fun, Mr. McAllister?\"\n\n\"Yes, yes, that sounds like very good fun.\"\n\nEmily proceeded to softly slide her cunt up and down his shaft, pressing into him so that his pipe split her lips, her lips even wrapping a bit around his shaft, kissing, clasping his dick with her cunt lips, caressing his thick dick with her soft, wet, hot lips as she slid her cunt up and down the stem.\n\nEmily actually enjoyed this way of doing it more than the usual way. She felt that this way she could continue to enjoy the sight of the man's cock as well as its feel against her cunt. She reached down between them and pressed his cock against her more firmly, against her equally stiff clit, as she dry fucked her teacher. Well, it wasn't really dry.\n\nMr. McAllister did enjoy it plenty enough. It was also an opportunity for him to regain a bit of self-control, to stretch this time with Emily out as long as possible. In fact, he reached up and grasped her tits through the white blouse of her Templeton uniform as she rode up and down his shaft.\n\n\"Oh Mr. McAllister. Yes, squeeze my titties, please, squeeze my little girly titties.\"\n\nHe did as she requested, paying particular attention to her taught, stiff nipples that were once again poking out through her blouse, this time for a quite different reason.\n\nShe grasped Mr. McAllister's shoulders with her little hands, squeezing them as hard as she could, her nails digging in, her eyes clenched shut, her body shuddering with a primal delight. She did not often have an orgasm in her hunts for and captures of new penises. The hunt and capture were often reward enough. However, in this instance the mounting of the trophy resulted in an explosive climax.\n\n\"Oh my gosh, Mr. McAllister,\" Emily gasped, feeling her orgasm surge through her young frame, coursing through her body like waves, tidal waves, engulfing a beach. \"Mmmm, mmmmm, mmmmmmm,\" she softly whimpered as she felt her mind, her body, being swept away.\n\nShe collapsed into the masculine arms of her instructor, twitching and trembling with her spasms, her feminine juices running down his shaft, leaving a little wet puddle on her teacher's couch.\n\nWhen she was done she curled into the crook of his shoulder, burying her face deep inside, seeking comfort and solace. She stayed there for some time, her wet cunt still cuddling his shaft as she hid within his arms, her breathing slowly returning to normal.\n\nMr. McAllister's balls were throbbing for relief, but he tenderly stroked her hair, her cheek, with one hand, her soft, naked bottom with the other. His dick remained hard, pressing against her young, hot, wet, trembling cunt.\n\nAfter awhile she lifted her head and looked him in the eyes, falling back into character. \"Will you show me how a man squirts, Mr. McAllister?\"\n\nHe affectionately tapped her button nose, drawing a little giggle from her. \"Well, certainly, dear, if that will make you happy.\"\n\n\"I think that would make me very happy, Mr. McAllister.\" She pulled herself off of him, got off the couch, and sat down on the floor, leaning back with her hands. \"You know, Mr. McAllister, I wasn't really being entirely honest with you.\"\n\nA wave of panic suddenly swept through him as he stood before her, his big, hard cock gripped in his hand. He had feared that doing something like this would get him into trouble, serious trouble. The other shoe was now going to drop.\n\n\"It's not just that I want you to cum on my face. I want to see you do it. I want you to play with it. I want to watch you make it squirt.\"\n\nWhew! Well, that could be arranged. He pulled off his slacks and briefs, and stood with his feet on either side of her shoulders as she leaned back on the floor, looking up at him, at his towering cock, with her angelic, innocent face.\n\nThis was actually pretty close to his other fantasy, as her hands were in fact behind her. In his actual fantasy he titty-fucked her and then came on her face. Well, one out of two ain't bad. He began to stroke his cock, smiling down at her.\n\n\"You have such a big cock, Mr. McAllister. So manly, so strong. Stroke it hard for me, Mr. McAllister, won't you please?\"\n\nHe did as she requested, certainly not wanting to disappoint her, his hand sliding rapidly up and down his shaft.\n\n\"Go faster, Mr. McAllister, go faster and faster.\" He did so, his hand and shaft now a whirlwind, the room filled with the squishy sound of his hand swiftly slipping and slapping up and down his shaft, his balls swinging and swaying with the violent movements of his fist.\n\n\"I bet you have lots and lots of cum, Mr. McAllister, so much more cum than the little boys I know, with their little boy balls. Your balls are so thick, so full, like those of a bull.\"\n\nAnd with that remark a big white wad of cum gushed from his dick and splatted on her forehead. It was a pretty good aim for the first one, and it was followed by a rapid, brisk series of continuously spurting gushes and globs, each of them raining down on her cherubic face, her eyes gleaming with delight as she saw above her the big hard cock of Mr. McAllister twitch and jerk as it spurted out wads and ropes of hot, thick, sticky cum.\n\nShe could feel her face becoming awash with his cum and she basked in the pleasure of feeling his wet, hot, thick gism accumulate. She did not run, she did not hide, she did not turn her head nor try to protect herself. She instead opened her mouth to even catch a few thick wads directly onto her tongue, and she even kept her eyes wide open to be able to enjoy seeing the cum gush from his big purple plum and splash down upon her.\n\nMr. McAllister's legs went weak and his knees buckled, which actually allowed him to draw his cock closer to her face so that he could take better aim, which was fortunate, as his eyes were glazed over with lust and passion as his body was wracked with the base, fundamental pleasure of his climax.\n\nEmily grinned with delight as she felt the cum pool and then slide and drip off her face, sliding down her forehead and cheeks, tickling her nose. She stuck her tongue out further to catch the globs that were within reach, so she could further enjoy the taste, as well as the sight and feel, of his manly gruel.\n\nWhen he was done a feeling of guilt swept through him as he saw what a mess he had made of her face. It appeared as if two or three men had exploded on her, as her face was literally drenched with cum. Never had she appeared so cute, so pretty, but he worried that he might have gone too far.\n\n\"That was wonderful, Mr. McAllister,\" Emily exclaimed, one eye now half closed as a drop was working its way across her eyelid and onto her cheek. \"Maybe the next time I'm in town we can do one of your other fantasies?\"\n\n- - - - - - - - - - - - - - - - - - - - \n\nDr. Lowenstein's breasts were heaving when Emily finished the story, her panties were wet. She knew that she would become quite personally active in the treatment of her next patient, a young man who had this fixation on older women. He apparently liked it when they forced him to lick and suck on their full, fleshy pussies. Dr. Lowenstein felt that it was time for some psychodrama for that patient.\n\n\"At some point, Dr. Lowenstein, I'm going to get into serious trouble doing these things.\"\n\nDr. Lowenstein regained her composure. \"But did you get into any trouble then?\"\n\n\"Well, my parents were a little upset.\"\n\n\"They found out?\"\n\n\"No, no, I got the wrong kind of milk. But, it's just that I can't seem to help myself and I want to develop a relationship with a man that goes beyond his penis. I want to have a real boyfriend. I want to want to get to know him, you know, like who he is rather than just what he has.\"\n\n\"Yes, I do understand, and more than that, Emily I do have a therapeutic approach that may help rid you of this obsession, if you would like to try it.\"\n\n\"Oh, I would, I would, Dr. Lowenstein. I'll try anything.\"\n\n\"Excellent, well, we'll start the treatment at the next session.\"\n\nEmily felt really better after that. It was always so helpful when your doctor tells you that there was a cure for your problem and that there was nothing to worry about.\n\n- - - - - - - - - - - - - - - - - \n\nIt took Dr. Lowenstein some work to get ready for the next session. She called upon some of her prior patients, Theodore Newman (see Teddy visits a therapist) and Carl and Mason (see Dr. Lowenstein's group therapy). However, she knew that it would be important to have an ample variety of shapes and sizes, so she had to interview a few more additional surrogates. The interviews were at times a bit awkward. She insisted that the boys not only show her their penises, but also in a state of excitement. You really couldn't judge a book by its cover. But, she did make sure that each of them left her office with a happy ending. She wanted her surrogates to enjoy their work. A person who enjoys his job does a good job. In the end, she felt she had obtained a pretty good distribution of sizes and shapes.\n\nEmily arrived with anticipatory excitement. She wondered what the treatment would be. She knocked on Dr. Lowenstein's door with an anxious expectation.\n\n\"Come on in, we're waiting for you.\"\n\nWe? What did she mean by we? She opened the door and was greeted with the sight of six stout erections standing along the far side of the room. She didn't know, couldn't know, to whom they were attached as all of the boys were wearing pillow cases on their heads. Dr. Lowenstein looked into getting hoods, but they were a bit expensive, as well as having a rather sinister appearance.\n\nWhite pillow cases might also have a terrible connotation, but that was avoided by using pillow cases with colorful patterns or flowers. They didn't look at all sinister. Frankly, they looked a bit silly, but what the surrogates were displaying just below the waist was not the least bit silly.\n\nShe had asked the boys to arrive early so that they would have time to don their disguises and get themselves hard. She had them wearing hoods so that none of them could see Emily. She did not want to violate the confidentiality of Emily's treatment.\n\n\"Now, Annie, I'm going to call you Annie in this session so that the boys don't know your real name. We want this treatment to be entirely anonymous. And, toward that end, I want to first be certain that you don't recognize any of the boys.\"\n\nEmily knew exactly what she meant. She carefully went up and down the line of erections saluting her like she was their commanding officer, inspecting the rifles of her troops. She felt though more like Carol in Once Upon a Time in America (surprisingly played by Tuesday Weld), searching a line of cocks for the one that had previously fucked her. In this case, however, it was hoped that she wouldn't recognize anyone. Carol failed in her effort (she picked James Wood's cock rather than Robert De Niro's). If Emily had in fact been with any one of the penises before, she would surely recognize it. She has a pretty good memory for such things. \n\nShe paused at times to carefully feel and fondle them. It was truly a cornucopia of erect penises, coming in all shapes and sizes. From a rather little one, albeit still very cute and precious, to a rather impressively large truncheon. Most of them were straight, but one was shooting up to the left, and one was even notably curved. Emily appreciated the variation. When she finished she turned to Dr. Lowenstein and announced, \"I don't know any of them. These are all completely new.\"\n\n\"Excellent, Annie.\" Dr. Lowenstein had been a bit worried about that. After all, Emily had indicated that she had known quite a number of them. It was fine with her if one or two of the boys knew each other (Mason and Carl knew each other), but she felt it was important not only for Emily's confidentiality but also for her treatment that the prescribed penises be fresh, with no contaminating history or baggage. She explained the approach she was going to use.\n\n\"Annie, we are going to use what is often referred to as Bukakke therapy, a form of implosion treatment. This is when the patient is exposed to an object or situation with a sustained intensity. Now, in most cases the stimuli is something that the patient fears, but in this case it will be that with which you are preoccupied. I believe this exposure will satiate your obsession, as well as perhaps further the release of problematic, repressed memories and conflicts concerning its origin. Now, to begin treatment, I want you to take a kneeling position in the center of the room, on the large blanket I've laid out for you and your penises.\"\n\nEmily got into her position. This seemed more like a surprise birthday party than a therapy session.\n\nDr. Lowenstein then grasped the erect penises of each of the boys in turn, leading them to a position circling Emily. She could have led them by their hands, but she felt it was in the spirit of the treatment, as well as more enjoyable, to lead them by their cocks.\n\n\"Now, Annie, what I want you to do is to just free associate with these erect penises. Play with each one, explore each one, do what you want with each of them, and let your mind roam free. Let whatever thoughts are generated by them to freely enter your mind.\"\n\nEmily gladly and quickly began the treatment. She dove her face right down on the one that was currently facing her, absorbing the cock within her mouth like a big, sweet gum ball, at the same time reaching out and grasping hold of whatever two cocks were nearest to her.\n\nThis was really a mind-boggling delight. It was like her first Halloween, when she had returned home to empty her bag of sweets and then just dove in, sucking and swallowing one candy treat after another, gorging herself on what she had previously only tasted with polite, modest restraint, one candy bar at a time, one cock at a time. Now, instead, with unleashed urgency, she rushed from one cock to another, lost in the enchantment of their stiffness, their boldness, their tastiness.\n\nThe boys could not see a thing. They did find it to be a rather unusual situation but still intensely pleasurable. Who would not want his cock so thoroughly worshiped, even if it was only one amongst many. It was a glory hole fantasy of extreme proportions, having your cock anonymously available to be fondled, stroked, jerked and sucked by a girl you did not know and could not see, a girl who just couldn't get enough dick, who wanted to bring you off in the worst way. Few boys turn down purely anonymous sex, and this was about as anonymous and pure as it got.\n\nThe boys not getting handled at any particular moment could also hear the girl stroking and sucking other cocks, mewing and moaning in rapturous joy as she consumed, gobbled, and engorged each one. She devoured them, absorbing them into her self, inhaling their essence into her being, or more accurately, swilling, sucking, slurping, and swallowing each dick as if it was the last one she would ever have.\n\nIt wasn't long before one of the boys was ready to shoot. \"I'm ready, I'm ready,\" he signaled. He was a bit disappointed to be the first. He wondered if Dr. Lowenstein would be disappointed in him, perhaps he wasn't serving as a good surrogate. Even more so, he wondered if the girl would be disappointed, would consider him to be the wimp in the group, the least adequate.\n\nBut, that wasn't how Emily felt at all. On the contrary, she was delighted that she had made one cum so quickly despite having to spread herself out so thin. She quickly turned her full attention to the boy on the verge of shooting. It was one for whom she was stroking with her left hand, but now she let go of it to bring it into her mouth, to taste the first dosage of cream. The first taste of a meal is often the best. You're so hungry, and the aroma of the meat is so tantalizing, so enticing. You just can't wait to have that first taste.\n\nAnd, she wasn't disappointed. It quickly twitched in her mouth as she grabbed onto and stroked two other cocks, and it then gushed a full load against the inside of her cheek and onto her tongue. She took only the first two shots in her mouth, as she knew it was important, clinically, to have their loads released onto her face. She was familiar with bukkake. What healthy young lady is not? But, she had never experienced its therapeutic benefits. \n\nThe young man shot five or six additional wads before he was done. The first couple missed the mark as she was naively hoping that she would not have to aim it for him, that it would naturally shoot straight without the benefit of her hand. She cursed herself. She really should have known better. The first went wide of the mark and the second splatted onto the top of her head. That could be considered a hit, but if this was a dart game it would be only five points. She let go of the boy to her right and aimed the last few shots true, splatting against her cheek and forehead.\n\n\"Now me, me,\" another gasped and she quickly turned to him as Dr. Lowenstein led the first boy away, thanking him for his outstanding contribution to the young lady's therapy as she tucked away his penis into his pants, opened the door, and led him out into the hallway, removing the hood once he was safely out of the room.\n\n\"I'm sorry I came so quickly, Dr. Lowenstein.\"\n\n\"No, no, dear, you did just fine. It was in fact a very wonderful amount of ejaculate fluid.\" She could see that he was not entirely reassured and so she added. \"It was even more than you applied to my face.\" It was important for the surrogates to leave the session feeling healthy and virile.",
        "He felt better and went off down the hall. Dr. Lowenstein quickly returned to the session.\n\nIn the meantime, the second boy had released his first splat into Emily's mouth. She was again reminded of how different boys' cum tasted. This one was definitely sweeter, perhaps with a touch of celery. But, once she got her taste she quickly disgorged it and aimed it true on her face, this time square on her nose. She liked the feel and sight of cum on her nose. She thought it looked kind of cute, like a clown's nose. Plus it tickled, and, best yet, it would drip down onto her lips and tongue. She giggled as she let his hose repeatedly gush its sticky stuff onto her nose. Dr. Lowenstein then led him away.\n\n\"I'm ready,\" said another boy, coupled by one more at the same time. Emily demonstrated her manual dexterity by grabbing both of them with her hands, pulling them to her, and then stroking their loads from their balls, leaning her face back to offer the best possible target for both of them, jerking on the jerking cocks as gobs and ropes of cum spurted from their bulbs and leaped through the air to land safely onto her upturned face, covering most every curve, crevice, bump, hill, rise, and valley of her face with a shower of sticky white gruel. She was beginning to understand bukkake and she loved it. The cum smelled so fresh, so manly, and she felt so thoroughly soaked, so completely taken care of, so drenched by the masculine milk, the manly nectar.\n\nDr. Lowenstein returned only in time to see her patient's face now thoroughly inundated, doused with the boys' cum. She quickly took these two boys away. She told them to fix their slacks as she led them to the door. There was not enough time for her to take care of them, the session was moving so fast.\n\nEmily found taking care of the last two boys to be a bit more difficult, as her face was so thoroughly awash with cum, some of it even dripping down onto the boys' cocks. They didn't seem to mind, but they wouldn't really know. For all they knew it was her saliva.\n\nAs she sucked on one of the remaining two boys the cum of the others leaked into her mouth, providing an extraordinary combination of flavors, actually tasting multiple cums as she prepared another, like it was some sort of fine french consomme, a chef's special combination of alternative flavorings, yielding through their harmonious blending a new special broth for the palate. Although, given the texture, it was perhaps more of a chowder than a broth. And, then, this next cock added its own contribution to her delicious soup, supplementing her creation with its own unique seasoning. She quickly removed it though from her mouth, not wanting to overwhelm her cuisine with one particular spice.\n\nShe let the rest of it, like the others, release its essence onto her face, joining the swamp that was now her face, hardly an inch feeling dry, and much of it covered in thick white gobs and ropes of gism. She did, though, do well to keep her eyes largely untouched, at least to the point that she could somewhat safely squint through the white mist to see the final, remaining cock.\n\nShe had saved the biggest for last. She stroked it for a bit as Dr. Lowenstein escorted the fifth cock from her office. She was particularly curious about this one, and it wasn't just that it was the biggest one. It was also now strangely familiar, or at least it seemed familiar through her squinting eyes and the blurry white cloud that hampered her vision. In fact, it was this distortion of her vision that caused her to see something that was not in fact there, that only appeared to be there: \"Oh my, Dr. Lowenstein,\" she squealed as this last cock shot its load, the biggest one yet, onto her face, \"It looks like daddy's penis!\"\n\n- - - - - - - - - - - - - - - - - - - - - \n\nThe session had been even better, more productive, than Dr. Lowenstein had expected. With her insight into the source of her fetishistic preoccupation, Emily required only a few more administrations of the therapeutic serum. She eventually grew to love the man as much as she loved his cock. "
    ],
    "authorname": "Charles Petersunn",
    "tags": [
        "older man",
        "college",
        "coed",
        "doctor",
        "medical"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/must-be-something-wrong-with-me"
}