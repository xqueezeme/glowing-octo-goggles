{
    "title": "Goddess",
    "pages": [
        "I adjusted the mask securely into place. No strings or ribbons, this baby was getting glued on with the same stuff Hollywood starlets used to stop nipple slips on the red carpet. I was nervous as it was\u2014I'd have lost my nerve altogether if I thought there was a chance I'd be recognized.\n\nI alternated between tweaking my costume and the hairpins holding my long, brown hair off of my neck, anything to keep my hands off of my face until the glue was dry and the mask fastened tight. Looking at my reflection, I thought it was possible no one would recognize me even without the mask. Hair that normally fell to the middle of my back was piled on top of my head in tendrils held up by copious amounts of bobby pins. My makeup, too, was a 180 from my usual mascara-and-lip-gloss routine. Dark, smoky eyes and pouty red lips stared back at me from what I usually considered a fairly non-descript face. Brown eyes, brown hair. Boring, boring, boring. It had certainly never attracted anyone worth attracting.\n\nMy body was a different story. Though only 5'2\", I had an exaggerated hourglass figure. Slender, yet curvy legs led to a bit of a backside and a waist so narrow I could almost fit my small hands around it, but 32DD breasts were the focal point, and a source of shame for almost my entire life. It was bizarre to see them all but on display beneath the flimsy white material of my goddess costume. My large nipples were standing at attention, unused to the friction of going braless\u2014I even wore a bra to bed! I thought I could see the shadows of my areolas behind the peaked fabric, but considering the skirt of the costume barely cleared my panty line, I wasn't going to stress it, which was easier said than done.\n\nI knew I wasn't in small-town Utah anymore, and that the chances I would be recognized here were microscopic, but even after three years at college in the state capital, it was hard to shake the paranoia induced by ridiculous religious standards.\n\nFar from being considered unlikely, abstinence was the end all be all of my town's high school society. Not only was sex verboten, but so were oral sex, hand jobs, and masturbation. Anal sex wasn't even thought of as an option! No one of any quality did any of those things, and if they did, they were too ashamed to talk about it. So, while I'd had the same amazing dimensions since junior high, they were considered a liability rather than an asset. Rumors of my promiscuity started the same day I started wearing a bra, and it didn't abate until high school when it became painfully obvious that I didn't date at all.\n\nDespite the near-constant barrage of chastity propaganda (Modest is Hottest!), I held a secret. I had dark, sensual dreams that often bled over into my waking thoughts, lust that while never acted on, was always just beneath the surface. I often fantasized about writhing naked with one popular boy after another\u2014sometimes more than one at a time.\n\nMaybe because it was because it was completely different from the way I should be thinking that I hid away, or maybe the vein of lust that was always at a slow burn was why early rumors had spread\u2014the result was the same. I was ostracized as a scarlet woman, and the fact I'd never even been kissed didn't seem to make a difference.\n\nThe end of my senior year I finally started seeing a boy in my graduating class. I was aware that he wasn't the most...anything (attractive, intelligent, ambitious), but my self-esteem was low enough to accept his proposal the day after graduation. All we'd done at that point was exchange goodnight kisses (not even involving tongues!), but that evening, finding ourselves alone, we let our guards down. We were going to get married, so we'd be doing things eventually, right?\n\nHis tongue in my mouth led to his hands up my shirt led to shirts coming off led to dry humping until he came in his pants. Guilt wracked him...until his erection recovered. Then my bra coming off led to him sucking on my nipples led to me fishing his cock (disappointingly small) out to immediately come on my hand. Guilt wracked him again...until his erection again recovered. Then my pants on the floor in the corner led to his fingers inside me (disappointingly rough) led to him penetrating me missionary-style for three or four pumps (disappointingly fast) until he pulled out and came on my leg. More cycles of guilt and recovery involved him licking my pussy (disappointingly clumsy), me sucking his cock (have I mentioned disappointingly small? I could have easily deep-throated him...if it had reached to my throat), and shock and outright refusal at my suggestion of anal play. After he'd come often enough (final score: Him- 6, Me- 0), his guilt/recovery cycle landed firmly on guilt and he asked me to go home. He wouldn't look me in the eye. He didn't even kiss me goodbye.\n\nThe next morning I woke to a break-up voicemail, I \"wasn't the marrying kind\". Whispers and pointed looks emanated from everyone in town until I left a month later for college. Even surrounded by new faces in a new place, I had enough residual guilt that I was too timid to act on my desires amid the gorgeous college boys that now surrounded me, hiding myself in bulky clothes.\n\nI made great platonic guy friends in my dorm, which was nice, and initially thought I'd lucked out with roommates. They were a lot more open-minded than any girls I'd known before, and they were adamant about setting me up on dates to try and get me experienced. I went, and I had a good time, and I even got laid a couple of times (much less disappointing than my hometown hump, but still not the libidinous adventures I was hoping for). Unfortunately, I eventually realized that the reason I wasn't getting calls afterwards wasn't because my dates were ashamed (though that attitude certainly had its place in the city, too), but because my new \"friends\" thought it was fun to steal boys out of my grasp. I was more than willing (i.e., desperate) to do just about anything with a guy I found attractive, but I couldn't compete with the promise of a front-row seat to a lesbian tryst like they provided. My roommates offered to let me into their Sapphic circle, but the idea of being with another woman held no interest for me. And honestly, as much as I wanted to express myself sexually, I didn't feel like guys that passed me over for that were worth fighting for.\n\nSo for two and a half years I'd withdrawn back into celibate hermit mode, focusing on my studies. Though absent of orgasms that weren't self-induced, my life had had a lot of success scholastically. It was the reason I was standing in front of a gilded mirror in a penthouse suite at Caesar's Palace in Las Vegas, trying to work up the courage to make my way down to a hedonistic costume party.\n\nI'd easily earned a place on the debate team that had met here for a national competition, and surreptitiously made plans to stay a couple more days on my own for the event downstairs. The mere idea of anonymity was titillating, offering me the opportunity to act out every depraved sexual act I'd dreamed about without the attached slut stigma that would follow me at home.\n\nI adjusted my gold arm band and tugged at the hem of my filmy skirt again\u2014it barely cleared the crotch of my white thong, and neither were going to offer any coverage at all if I bent over. I peered at my body and tried to determine whether or not I could see the sparse, dark diamond of neatly trimmed pubic hair behind the fabric, then gave up with a shrug. For my purposes, either way would be fine.\n\nMy hands moved up to the clunky gold necklace that I'd adjusted into a small clutch for my key card and ID, and smiled. I wanted my hands free. Determining I'd let enough time pass, I tentatively pressed at the mask. It held fast, and my smile widened. The stranger in the mirror strapped on gold gladiator heels to complete the outfit and I opened the door before I lost my determination. The hall was empty as I waited for the elevator, nagging doubts of my puritanical past whispering through my brain. Before I could give in to them, the golden doors slid open smoothly, revealing an empty car lined with mirrors.\n\nIn front of me, I didn't see a shy, shunned girl, or a desperate, awkward girl. I saw a sex goddess, a literal embodiment of my costume. I strode into the elevator that delivered me directly to the lobby in front of the party rooms. Walking much taller than my 5'6\" (with those gladiator heels) should have allowed, I wore my new confidence like a heavy perfume. I don't know if I was actually turning heads, but I felt like eyes were on me, and it emboldened me further. Making my way through the lobby, I saw women wearing even less than I was, their costumes literally painted on. You go, girls! Passed through my mind. Men weren't as bold, but almost every costume seemed to have been modified to allow for bare chests. Sexy centurions, sexy sultans, sexy devils, sexy Willy Wonkas, for fucks sake!\n\nStill, I had to laugh, because as ludicrous as the costumes might be, they were being pulled off well. Every exposed muscle was toned and tight\u2014biceps and pecs and abs, and those muscles that seemed to serve only to point to what you hoped was a big, rigid cock\u2014I didn't see one that I wouldn't like to spend the night tracing with my tongue.\n\nThe only thing we all had in common were our masks, they were mandatory for the party. As I made my way to the door, my key card allowing me to skip the line, the unmasked bouncer gripped the podium in front of him as he looked me up and down.\n\n\"Goddamn!\"\n\nI smirked, basking in his lustful gaze. He was tall, at least 6'2\", with red, wavy hair and striking blue eyes. Regrettably, he was one of the few men wearing a shirt, his sleeves straining around impressive biceps. I handed him my key card to admit my entrance, but instead of handing it back, he held on to it and leaned down in my ear to be heard above the pounding techno.\n\n\"Watch yourself. I don't even play for your team and I want to fuck you.\"\n\nThe tawdry compliment carved an arrow of heat down my stomach straight to my pussy. I moaned inwardly.\n\n\"Remember my room number. Girls like it up the ass, too.\" I flicked his earlobe with my tongue and patted the bulge in his pants.\n\nHe moaned outwardly and gripped the podium again, watching me as I tucked the card back into my necklace and walked into the strobe-lit room.\n\nWho said that?!?!? I could hardly believe the careless way I'd offered myself to a total stranger, but the further I waded into the sea of writhing, grinding bodies, the less I felt like it had been uncharacteristic. This was the real me, the sex goddess looking to be worshiped. The quiet college student hiding behind oversized clothes was the alter ego I upheld to camouflage my true identity to the world; the Clark Kent to my Superman.\n\nI found a relatively empty space and let the throbbing bass caress my body; any inhibitions I may have still had disappeared as I gyrated to the music, completely lost to the beat. I was approached by a sexy firefighter (regular firefighter?), and I let him pull me into his broad chest, enjoying the muscles straining against my body. He leaned down to my ear.\n\n\"You wanna suck my dick, you hot little bitch?\"\n\nSmall-town me would have shrunk away, ashamed that I'd behaved in a way that would elicit that kind of a suggestion. Sex goddess me was cool, calm, and collected. I stopped moving and put my palm against his face, pushing with all of my strength. Caught off guard, he stumbled and fell on what I was sure was a very nice ass. Before he could recover I stepped on his thigh, making sure to press as hard into the heel as I could as I bent into his shocked face.\n\n\"That's not the way you address a goddess. Go fuck yourself, because I'm sure as hell not going to.\" I ground my heel in deeper as I turned and found another space on the dance floor.\n\nRecovering the beat I began to move again, noticing my reaction to the firefighter had made other men watching give me a little more space. I was frustrated, but it was fine until that space filled with women that were far more aggressive toward me than any man had been. I knew men liked to console themselves over a rejection by postulating their rejecter is a lesbian, but I didn't realize actual lesbians would see that as a call to arms.\n\nIrked, I pushed my way to the bar for an ice water. Though not wearing a mask, the bartender was a painted girl, her obviously surgically enhanced breasts made up to look like puppies. My mood had shifted enough that I found it pitiful, especially when she pressed them against my arm and suggested she wanted a wet nose, too. I rolled my eyes and turned back to the erotic exhibitions on the dance floor.\n\nI still felt much more self-assured than small-town me, but sex goddess me was starting to doubt I was going to realize the pleasures of the flesh I'd hoped for. At the same time, I couldn't shake the feeling that I was being watched. The idea made me tingle from head to toe, so not all hope was lost. My gaze landed on a sexy police officer, then kept moving as I could already hear a bad pickup line based around handcuffs. A sexy Boba Fett and a sexy Batman crossed my path, but the nerd in me couldn't get over the inconsistencies in their costumes. If only they'd paid more attention to detail, they'd be getting some tail. A sly smile curved around the rim of my glass.\n\nSomething out of the corner of my eye drew my vision to an area not far from the bar. Two very sexy gladiators were standing on the outskirts of the gyrating crowd, heads close. Despite the silver masks that concealed the upper halves of their faces, I could feel their eyes boring into me. Penetrating me. My breath caught, nipples instantly hard, wetness saturating my insubstantial thong\u2014all accomplished with a look. I finished the rest of the ice water in my glass and set it on the bar, ignoring further innuendo from the canine-laden bartender.\n\nFearlessness restored, I walked toward them, hips rolling purposefully with every step. They stood rooted to the spot, devouring me\u2014one of them bit his lip and I thought my wetness was going to drip down my legs. I passed by coolly, giving them a coquettish grin over my shoulder once I was on the dance floor proper. It was a gamble, but it paid off, as I saw them turning to follow. The grin spread as I found a spot big enough to accommodate the three of us, but just barely.\n\nWithout turning, I felt their presence behind me, watching me as I swayed to the heavy beat, arms above my head, inhibitions dropped. A large hand appeared on my waist. My eyes closed in rapture as the gladiator attached to the hand pressed his hard body against my back.\n\nI blindly stretched an arm forward and felt the powerful chest of the other gladiator, his skin warm and glistening with a light sheen of sweat. My hand slid up over his broad shoulder as I pulled him against me. His lean, muscular frame pushed me back against his friend and made me especially aware of their generous anatomies. Are those swords in your pockets, or are you happy to see me? My grin had grown into a broad smile; I felt drunk with lust.\n\nThe hand on the shoulder of the gladiator in front of me wandered up to the nape of his neck and twisted fingers into his short, dark hair. He crushed his lips against mine, driving his hot tongue into my mouth. I responded eagerly. His hands travelled from my waist to my ribcage and back as we moved to the beat, exploring a little further every time. He came to a halt right under my breasts, his thumbs caressing the curves through the sheer fabric of my costume. I sighed, simultaneously enjoying the touch and wanting him to move those thumbs to my nipples. The gladiator behind me kept one hand planted on my waist and splayed the other down across my belly, fingers on top of the diamond-shaped patch of hair I'd left when I waxed, and tantalizingly close to my clitoris. I realized his position would force him to feel his buddy grinding into me, and the thought of him rubbing his friend's cock made me moan. I felt hard bulges jump against my pubic bone and the top of my ass. It made me moan louder.\n\nThe gladiator behind me moved the hand from my waist to cup a heavy breast, kneading and pulling on my nipple through the gauze of my dress. The gladiator in front of me kept one hand on a breast and slid his other down to cup my ass and pull me tighter against what felt like a very large cock. His hands were on my bare skin, positioned so he must have felt his friend's cock grinding into the string of my tiny thong. It was crazy erotic to think about the two of them pleasuring me and each other.\n\nI snaked my free arm back and twisted lighter hair between those fingers, too. The arousal they provoked and steady rhythm between us was bringing me close to an unexpected orgasm. I pulled their hair harder and harder as it built, feeling lips and tongues on my neck, hands on my breasts and bare skin. One of them, I don't know which, stuck his tongue in my ear and I came suddenly, almost violently, and oh my god, did it feel good.\n\nSoft lips brushed my ear as a husky voice broke the silence between us.\n\n\"Are you ready to leave, or would you like to stay longer?\"\n\nI was more than ready to make fantasy reality.\n\nStill breathless from my orgasm, I hoarsely replied, \"I'm only leaving if you're coming with me.\"\n\nThe voice behind me returned. \"Which one?\"\n\nI opened my eyes to see the dark-haired gladiator looking at me expectantly, lust burning from behind his mask. I had to choose? I spoke without thinking.\n\n\"What do you mean, which one? I need you both.\"\n\nThey exchanged a look over my head, and I saw shock in the dark-haired gladiator's eyes, but I heard the voice behind me again.\n\n\"Fuck, yeah.\"\n\nThe blonde gladiator pulled away and grabbed my hand, leading me through the swarm of gyrating bodies. The dark-haired gladiator quickly took his place behind me with his hands on my hips. When we had to pause on our way through the crowd, he'd use those big hands to pull me back against him, grinding his cock into the cleft of my ass. My legs were jelly; I'm positive his hard body against me was the only reason I was staying upright.\n\nOnce out in the lobby I could see my gladiators clearly and I was even more aroused. In identical costumes, they were also similar in build. Tall and slender but muscular, the leather straps that crossed over one shoulder and down under the other arm highlighted well-defined, hairless chests and strong arms. My eyes were drawn down to rippled stomachs and the \"suck me\" muscles that peeked out from the tops of their short, leather-plated tunics\u2014tunics that were clearly defining gravity in a couple of places. Blue eyes flashed from behind the mask of the blonde one, while the dark-haired gladiator's eyes were as black as his hair, but that seemed to be where the differences ended. Both jawlines were sharp, both sets of lips full and begging to be destroyed. Even their hair, though different colors, was cut similarly\u2014short and styled in Caesars to match their costumes. The nerd in me approved. We stared, gawking at each other until the blonde cleared his throat and said,\n\n\"I'll go get a cab.\"\n\nHis raspy voice spurred me into action.\n\n\"No need.\"\n\nI revealed my key card and walked towards the elevator, missing the pressure of their bodies. They were beside me in an instant, caressing my arms and back, occasionally tracing the swell of my hips\u2014stimulating, but much more reserved contact out in the light. My breathing was ragged; I had to hold my hands by my sides to keep from reaching under their tunics and stroking what I found beneath.\n\nThe doors slid open to reveal an empty car. I stared at their reflections as we entered, my mouth watering.",
        "Dear god! How did I luck out with TWO???\n\nI leaned back against the wall for support. As soon as the doors closed they moved almost in unison, bracing themselves against the mirrored wall with their forearms and bending their faces close to mine. Something about their mannerisms seemed almost familiar, and I smelled my favorite cologne. Hot breath tickled my neck, giving me goosebumps. Lips grazed my ear\u2014the blonde again.\n\n\"What do you want to happen?\"\n\nOh, god. What didn't I want?\n\nI placed my hands on their chests, tracing musculature, looking for my voice. Their breath, their delicious musky smell, hell, their mere presence, was making it hard to speak.\n\n\"I want us to do anything that feels good.\"\n\n\"Where do you want us to stop?\"\n\nThe dark-haired gladiator, in a whisper; I was beginning to think he might be mute. I hooked a hand under each waistband, caressing the tops of the hair I found with my fingertips. They sucked breath in hard between their teeth. I grinned, wondering if I was in for synchronized sex.\n\n\"We're adults. If you're doing something I don't like, I'll say stop, and you'll stop. I'll do the same.\"\n\nI could feel their smooth-shaven cheeks grazing mine as they nodded. I continued in a low voice.\n\n\"But if you're looking for specifics, I want us to kiss.\" I crept my hands in a little further. \"And play.\" Further. \"And touch.\" Further. \"And suck.\" Further. \"And fuck.\" I was far enough down to drag my fingers along the root of their shafts.\n\nThe breath in my ears was ragged. My nipples were achingly hard. The elevator couldn't deliver us fast enough. When its doors slid open I forgot my sensual sway, racing to the door to my suite and swiping the key card across the access panel. The second the light went from red to green, a strong arm reached past me to push the door in, and another wrapped around my waist, lifting me off the ground and carrying me inside.\n\nThe gladiator carrying me, Dark-Hair, spun me around and obliterated my lips under his, the kisses more passionate than the ones we'd experienced while dancing. His tongue was blazing. Blondie crushed me against Dark-Hair, his own hot tongue drawing wide swaths across my neck and exposed back. Blondie's strong hands thrust between me and Dark-Hair, finding my breasts and rolling my stiff nipples with his thumbs, making me shiver with pleasure.\n\n\"I need her mouth.\" Blondie growled at Dark-Hair. Dark-Hair sucked on my tongue for a few seconds more, then released my lips. Blondie grasped my jaw firmly and pulled me into a kiss every bit as sweltering as the one I'd been sharing with his friend while Dark-Hair slid his big hands around my waist and undid the ornamental belt cinching my dress. It fell to the carpet in a muffled clatter as he reached for my mask. I quickly broke the kiss with Blondie.\n\n\"Masks stay on,\" I panted.\n\nDark-Hair smirked, then gave a quick nod. I took a deep breath and pressed against their chests firmly, demanding space. They released me, but not without reluctance. Grabbing them by the leather straps crossing their well-defined chests, I maneuvered them until they were almost shoulder to shoulder. I looked up at them with my most devilish grin and then dropped to my knees, taking their tunics with me. Their looks of equal parts desire and surprise was totally worth the dramatic maneuver. I audibly gasped as my gaze went from their handsome faces to the reasons their tunics weren't hanging straight. While not as long as the plastic swords that had also fallen to the floor, they were the biggest weapons I'd ever seen.\n\nI licked my lips and reached out to take one in each hand, lightly exploring their veiny shafts as they stepped out of the fallen costumes. Even here they were similar, though Blondie was a little longer, and Dark-Hair a little thicker. Both were impressively massive, cut, and hard enough to engrave diamonds. My thumbs rubbed drops of pre-come around the swollen, purple heads, taking care to trace the sensitive ridge.\n\nI looked up at my gladiators, both of whom were staring at me intently, eyes hooded with desire. I slowly stroked them back and forth, increasing the pressure until I finally pulled them closer with a firm, but gentle, tug. They complied, shuffling closer to me and each other. When they were shoulder to shoulder, I began to stroke them again and brought Dark-Hair's gorgeous cock into my mouth while I held his gaze. He emitted a deep, guttural moan and I tasted a new surge of pre-come. I smiled and ran my tongue around the length of the shaft, then sucked hard on the head. He moaned again and rested his hand on Blondie's shoulder for support.\n\nBlondie's searing gaze was fixed on my mouth, watching me manipulate his friend's cock. I pulled away to give Blondie's luscious member the same attention and was rewarded with more moans. His hips jerked forward and his hand grasped out for support he found on Dark-Hair's shoulder.\n\nWatching them cling to each other, white-knuckled, I was beyond ecstatic to make them as weak in the knees as they had made me. My efforts became less controlled and more enthusiastic, the taste and textures of the gorgeous men before me taking over any self-control. I alternated back and forth, never letting go of either member until a large, trembling hand wove itself into my hair, gently angling my face upward. Dark-Hair. His eyes were closed, his voice low and shaking.\n\n\"You gotta stop. We're gonna come, and it's too early for that.\"\n\nI batted my lashes at both of them and licked my lips, tasting their delicious flesh.\n\n\"If either of you only comes once tonight, I'm going to be very displeased.\"\n\nBoth cocks in my hands twitched and I heard a strangled noise in the back of Blondie's throat. Dark-Hair stroked the tendrils in his hand then released me to continue. I gave them a sly smile and scooted closer, brushing them both against my lips at the same time. My hot breath skimmed over their swollen heads as I held them a hair's breadth apart from each other. The familiarity between them on the dance floor made me think they'd be comfortable with what I had in mind, but I paused to look at their faces, gauging whether or not the proximity was welcome.\n\nI was met by two sets of masked eyes silently begging me to continue. My pussy tingled as I slowly licked the drops of pre-come that continued to appear on their swollen heads, moving from one to the other and back again until I stretched my lips around both of them. Unintelligible groans came from both gladiators, but there were no objections to their penises rubbing against each other in my mouth. I couldn't do much more than sweep my tongue around and between their velvet flesh, but they were breathing rapidly, still clinging to one another's shoulders. I was so excited I thought I might come before they did.\n\nMy hands resumed stroking, reveling in their length and girth. Knowing they were close, I increased pressure and speed, twisting and pulling as much as I could without lubrication, trying in vain to fit more of them inside my mouth.\n\nDark-hair's thick cock swelled, but before I could release Blondie to focus on his orgasm, Blondie followed suit. For a split-second I panicked, but then realized it was exactly what I'd wanted. Sweet/salty fluid spurted over my tongue as cries of \"Oh god! Oh god!\" and \"Yes! Fuck! Yes!\" filled my ears. I held their cocks firmly until they stopped shaking, then took them into my mouth one at a time to drink every drop.\n\nIn between rapid breaths, Blondie said,\n\n\"I thought we were supposed to be worshiping the goddess, not the other way around.\"\n\nI replied, \"The night is young.\", and I was so pleased it was true.\n\nMy gladiators stooped down and lifted me onto my feet. Without their tunics, they were clad only in the leather straps across their chests, and tall leather sandals that were not unlike mine. It was so fucking sexy.\n\nBlondie pulled me into his naked body, kissing me soundly. Knowing he had to be tasting both of their come sent white-hot flames through my pussy. I felt Dark-Hair fumbling at the clasp of my heavy necklace and broke away from Blondie's kiss to help him. As soon as I turned my head, Blondie dropped to his knees and slid his hands under my filmy skirt, fondling my ass cheeks with his strong hands.\n\nI gasped and Dark-Hair filled my mouth with his tongue, reaching a hand around me to grab a hard nipple and successfully loosing my necklace. It fell to the plush carpet as Blondie's hands kneaded their way around my hips, his thumbs exploring the edges of my thong.\n\n\"My god, you are so wet.\" Blondie was raspy again.\n\nI broke my kiss with Dark-Hair with a throaty laugh.\n\n\"How could I possibly not be?\"\n\nBlondie yanked the meager undergarment down my legs, working them over my sandals.\n\n\"These need to stay on.\"\n\nThe timber in his voice made me even wetter.\n\n\"I feel the same way about yours.\"\n\nI gasped again and then moaned as Blondie's head disappeared underneath my skirt, his mouth engulfing my clit.\n\nBehind me, Dark-Hair murmured, \"Yeah, sandals stay, but this needs to go.\"\n\nMy filmy dress was pulled over my head and thrown across the room. His hands cupped my bare breasts, his manipulations of my nipples heightening the sensations Blondie was creating with his tongue. I leaned against Dark-Hair's chest and his mouth found my neck. In my ear he breathed,\n\n\"You are so fucking beautiful.\"\n\nBlondie put a large hand on the inside of my thigh, lifting it to gain better access for his hungry mouth. Unsure of my balance (I was still in 4\" heels, after all), I slung the leg over his shoulder, hooking it around the back of his neck. He grabbed my ass in both hands, kneading the flesh, steadying me against his face. Dark-Hair quickly fell to his knees. His hot mouth joined Blondie's, his tongue tasting deep inside of me and trailing the wetness back to my rosebud. Blondie spread my fleshy globes further to allow better access, and Dark-Hair's tongue plunged into the hypersensitive hole. It pushed me over the edge and I came hard on their faces, screaming until I was hoarse. Their greedy mouths kept exploring until I had to physically push them away, giggling when one would flick his tongue at a sensitive bud as I tried to escape the tongue of the other. I could feel their smiles as they tormented me with pleasure, and I think I loved them a little.\n\nBlondie eventually disentangled himself from my leg and helped me stand. I swayed on weak legs and they reached out to steady me, a large hand splayed across each hip. Breathing hard I looked down at my gladiators, who were in turn staring up at me, my juices coating their chins.\n\n\"Up.\"\n\nThey stood, their muscular forms towering over me but not intimidating in the slightest. I was happy to see their erections back at full power, thoroughly satisfied already yet eager to play more and push our games further. I pulled them down to my mouth by their leather straps, eagerly sucking my juices from their faces and running my tongue along their sharp jawlines. We stumbled as a cluster into the bedroom of the suite, falling onto the massive bed that dominated the room.\n\nI laughed again, crawling to the headboard on my hands and knees, beckoning my gladiators to join me. It didn't take much persuasion. Blondie was behind me in a flash, gripping my hips and rubbing his meaty erection in the bare crack of my ass. I couldn't believe how amazing the mere contact felt\u2014I was delirious at the thought of one of them actually putting their huge cocks inside of it. Hopefully by the end of the night they'd each have a chance.\n\nDark-Hair climbed onto the bed beside us, lying against the padded headboard, watching his friend grind against me as he stroked his thick cock. God, that was hot.\n\nBlondie leaned across me, the contact of his chest against my back so much more erotic skin to skin. Rubbing the length of his erection slowly against my tingling labia, he whispered in my ear.\n\n\"Who do you want first?\"\n\nMy eyes fixed on the inky eyes of Dark-Hair before me. \"I told you before, I need both of you.\"\n\nBlondie made that strangled little noise in his throat again, and I smiled. Dark-Hair quickly moved to me, his hand in my hair, his mouth engulfing mine. Blondie released his cock, delving one, and then two fingers into my dripping pussy. I pressed back against him reflexively, moaning into Dark-Hair's mouth. Blondie dragged his slippery fingers to my rosebud and slowly worked one into me. My mouth dropped, Dark-Hair's lips abandoned.\n\n\"Ungh!\"\n\nBlondie's husky voice was in my ear again.\n\n\"Does that feel good?\"\n\nI could only nod, but he already knew the answer.\n\nWetting his fingers again, he returned to spear me with two fingers. I gasped, eyes wide. Dark-Hair shot a poignant look over my shoulder and Blondie's penetration slowed to a halt, his thick fingers at a standstill inside me.\n\n\"Did I hurt you?\"\n\nYes. No. How to explain that it hurt so good?\n\n\"Use that.\" I pointed to the nightstand where I'd assembled provisions I thought I might need\u2014namely several different brands of lube.\n\nDark-Hair reached over, exposing his long, lithe body.\n\n\"Damn, you were ready for a wild night, weren't you?\"\n\nBlondie slipped his fingers out of me and I groaned at the loss. I closed my eyes and grinned.\n\n\"Hopeful.\"\n\nBlondie leaned his body over mine again and kissed my shoulder with surprising tenderness.\n\n\"I'd say a wild night was a sure thing. Any guy down there would kill to be us right now.\"\n\n\"I'll bet you say that to all the girls you're about to double team.\"\n\nThey looked at each other and burst into laughter, shaking uncontrollably. Blondie's erection banged against my leg and Dark-Hair's waved inches from my face, which only served to make me laugh harder. I fell onto my back alongside Dark-Hair.\n\nHe tucked a hand under my chin, his grin wide, eyes smoldering.\n\n\"Have we lived up to your expectations for the evening?\"\n\nI couldn't be anything but blatantly honest at that point.\n\n\"You've already surpassed any fantasy I've ever had.\" I reached up and stroked their necks gently. As an afterthought I added, \"I wouldn't want to be here with anyone else.\" I surprised myself\u2014I didn't even know their names, but I meant it sincerely.\n\nBlondie leaned down to kiss me, then Dark-Hair leaned over to kiss me. I vacillated between their generous mouths, our kisses soft and slow\u2014I really did need them both. My hands clutched their short hair as I guided them back and forth, incrementally closing the distance between them until it was possible to kiss them both at the same time. No hesitation from either of them, our tongues moved together, weaving and caressing. The intimacy made me insatiably wet, and my tongue became more urgent.\n\nEventually, my gladiators pulled away. Blondie ran a hand beneath me, cupping my backside.\n\n\"Do you want to try again?\"\n\n\"God, yes.\"\n\nGentle affection burned away, immediately replaced by the passion we'd started with on the dance floor. Dark-Hair grabbed every bottle off of the nightstand, leaving Blondie to choose one while he sucked on my breasts and traced lazy circles under my belly button.\n\nBlondie eventually dropped the bottles behind him. In one move, he slipped a strong arm underneath me and flipped me on top of Dark-Hair's hard body. Dark-Hair caught me in his arms, pulling me in for a blistering kiss, his hands buried in my hair, his erection straining against my stomach. Blondie straddled Dark-Hair's legs, pulling my ass toward him. He nibbled at it while I made out with his friend, angling my body further and further down until I was astride Dark-Hair's cock.\n\nI sat up, my hands on his flat stomach, my dripping pussy against his rigid shaft. I rocked my hips back and forth in deliberate motions, watching him fuck me with his eyes until I couldn't wait any longer for the real thing. I moved up just enough to line my needy opening with the large head of Dark-Hair's erection and slid him inside me while he stared into my soul. His voice was hoarse.\n\n\"I've wanted this since the first time I saw you.\"\n\nI smirked, trying to keep my composure as his thick cock stretched me past anything I'd ever experienced.\n\n\"Glad I didn't play hard to get. Oh!\"\n\nI bottomed out, my clit resting on the root of his cock. I held still for a few beats, trying to adapt to his girth. He lay frozen underneath me, his taut body looking like it was cut from stone. Behind us, I could hear Blondie breathing heavily. I looked over my shoulder to see him on his knees, fisting his huge cock while he watched me fuck his friend. It made my pussy twinge, which elicited a moan from Dark-Hair, his hands squeezing my hips tight. I turned back to him and raised myself a fraction, then down again, gasping at the sensation. I closed my eyes and continued, making larger arcs each time until I came shuddering around his cock. It didn't take long.\n\nI opened my eyes to see Dark-Hair clutching the sheets, his eyes little more than slits behind the mask and realized he was trying to hold back thrusting until I was ready. My pussy clenched at the idea, eliciting a groan from Dark-Hair.\n\n\"Fuck, you're tight!\"\n\nI was frozen, relishing the fullness inside of me, when Blondie's touch made me jump. I came down hard on Dark-Hair's cock, making us both moan. They exchanged a glance over my head, and Dark-Hair pulled me down against his chest as Blondie circled my rosebud with a cool finger. He slowly pushed it inside of me, and this time it was pure pleasure. I moaned and pressed back against him as much as I could in Dark-Hair's tight embrace. Soon another finger joined the first. I could only melt into him.\n\n\"More.\"\n\nThe cautiously exploring fingers were joined by a third, and the fullness threw me into another orgasm. Dark-Hair's thick erection pulsed inside me as Blondie's fingers pushed in deeper. I cried out in an incoherent language, quivering in Dark-Hair's arms.\n\nWhen I stopped babbling, Blondie withdrew his fingers, and before I could protest, I felt pressure that could only be his huge, velvety cock. I didn't know how both gladiators could possibly fit, but I wanted to try it more than I'd ever wanted anything in my life. I nuzzled into Dark-Hair's chest, lost in the way he smelled, focusing on his heartbeat to relax. It was racing as fast as my own.\n\nMy first thought was that Blondie must have used more than one bottle of lube. It was the only explanation for how easily such a huge cock entered my ass so painlessly. His balls were touching the underside of my ass in just a few smooth strokes, and I was petrified with pleasure.\n\nThe three of us laid still together for a glorious eternity, breathing heavily. Blondie's chest pressed against my back, Dark-Hair's chest pressed against my breasts, and both of their amazing cocks pressed against me from the inside. Knowing they'd be able to feel each other sliding in and out of my pussy made it even more exciting.\n\nI don't know which gladiator started to move first, but as soon as the stillness was broken, they both began to thrust in and out of me, steadily increasing their tempo and finding a rhythm that rendered me breathless. Pinned as I was, I was basically unable to move, completely at the mercy of the men inside me. One in, one out, yet I never felt less than completely full.\n\nIt was too much.\n\nIt was just right.\n\nIt was amazing.\n\nFrom the moment they moved together, I lost track of how many times I came; the entire encounter felt like one long orgasm. It wasn't until I was on the verge of blacking out that Blondie breathlessly announced he was going to come. He clutched my hips and thrust into me vigorously, steady rhythm replaced with wild abandon. Dark-Hair's orgasm came shortly after, and I briefly saw stars. As I regained my faculties, I enjoyed feeling them soften, wondering if they had felt each other coming, if their balls rubbing together (which they had to have been) felt as good as I thought it might.",
        "We collapsed in a pile, and if Dark-Hair was uncomfortable at the bottom, he didn't show it.\n\n\"Wow. That was...wow.\"\n\nI smiled. Blondie had described it perfectly. I took the opportunity to slip out between them and excuse myself to the bathroom. Behind the gilded door, I scrutinized myself in the mirror. My lipstick was gone, my hair was a disaster, and there was a look of contentment I'd never seen before. At least, not on my face.\n\nMy hands dug through my hair, retrieving errant bobby pins and abandoning them on the counter before attacking my hair with a brush. I worked out knots and kinks, returning it to a semblance of what it looked like on a normal day and enjoying the sensation of it swinging against my bare back. I reached up to my mask and faltered, letting my hands drop. I wasn't ready to let go of the goddess altogether.\n\nI cleaned myself off from the waist down\u2014tender, but not sore, I was happy to realize, though our combined fluids had travelled down through my sandals, which I decided to abandon. I dampened several washcloths and grabbed large, fluffy towels for my gladiators.\n\nI opened the door and padded to the bed in bare feet. My gladiators were stretched out next to each other on the bed, propped up on their elbows and speaking in low tones. Their demeanor was intimate, but it didn't appear they were lovers. I seemed to catch them off guard when I stood at the foot of the bed and held out my offerings of cleanliness. They rolled off the edge and mopped come off of their stomachs and thighs while I pulled the soggy comforter to the floor in a heap.\n\nThe bed looked far too neat for all of the shenanigans that had happened on it. I climbed on to see the blanket barely rumpled and the sheets still tight as a drum. I turned to mention it to my gladiators only to realize they were both staring at me, erections already reviving. My heart missed a beat looking at them, they were too beautiful. I crawled to them on my knees and tugged on their leather straps.\n\n\"I think you can lose these now.\"\n\nBlondie turned his back to me and looked over his shoulder.\n\n\"We'll need a little help.\"\n\nI worked on the buckle that held it together while Dark-Hair shed his sandals. While Dark-Hair's back was turned for my help with his strap, I saw him lifting his mask. I jumped to my feet and grabbed his hand.\n\n\"The masks stay on.\"\n\n\"Are you sure?\"\n\n\"I'm sure.\"\n\nHe made an unhappy grunt, but slipped the mask back on anyway. I peppered his neck with soft kisses and whispered,\n\n\"Thank you.\"\n\nHe shivered beneath my touch and goosebumps broke out over his arms. I unlatched his leather strap as Blondie's hand explored my lower back, stroking my hips and backside.\n\n\"Fuck, your body is incredible.\" He murmured.\n\nDark-Hair turned to me, joining Blondie in running his hands over my body. Standing on the bed I was taller than either of them, but not by much. My fingertips spanned their muscular shoulders; they seemed so much more naked now than they had with those meager accessories. Blondie captured my lips in a languid kiss while Dark-Hair caught an earlobe between his teeth. Every movement was easy and unhurried, our initial urgencies met.\n\nMy hands slid across their chests, trying to memorize every curve of muscle. I tweaked a nipple here and there, loving the yelp of a reaction I got every time. Eventually I was reminded of their beautiful cocks, again fully hard and rubbing against my legs as they caressed and kissed my neck and breasts and belly.\n\nI lightly scratched my fingernails down their suck me muscles to their neatly-trimmed pubic hair, noticing it for the first time. I wasn't the only hopeful one tonight, I thought with a grin as Blondie rubbed the underside of my breast. I continued to drag my fingers through the short hair, noticing they seemed mismatched. Blondie's was darker than I would have expected, while Dark-Hair's was quite a bit lighter. I opened my mouth to comment, but Dark-Hair filled it with his tongue. The welcome invasion made me forget about anything else.\n\nGradually, touches became rougher, kisses more demanding. Four hands and two mouths covering my body evoked a deep sigh; if I'd chosen the goddess costume looking to be worshiped, I'd more than succeeded. I stroked an exquisite cock in each hand, and the wetness that trickled past my smooth lips didn't go unnoticed by either gladiator. Long fingers scooped it up and pained my clitoris, forcing out a low moan. More strong fingers parted my labia and entered me smoothly.\n\nDark-Hair pulled his juicy fingers out and sucked on them, his eyes stoking my fire as much as his fingers had.\n\n\"I want you in my ass this time.\"\n\nThis time the strangled noise came from him rather than Blondie, who playfully threw me onto the bed.\n\n\"Good. I want to bury myself your sweet pussy.\"\n\nIf I was wet before, I was doubly so after he said that. Our last position had worked so well we maneuvered into place wordlessly, my gladiators reversing theirs. Blondie lay down beside me and I straddled his hard body as he grinned like a maniac. My smile probably looked that way, too. I slid onto his thick, long cock slowly, savoring every inch. Before I could start to ride him, I heard Dark-Hair behind me.\n\n\"Dude, which one did you use?\"\n\nI turned to see him holding every bottle I'd had on the nightstand in his large hands, looking lost. I couldn't help giggling, which made Blondie swell inside me, turning my laughter into moans. Blondie cleared his throat, but his reply was still raspy.\n\n\"All of them, dude. I used some from all of them.\"\n\nI was going to tease him, but it had obviously worked so I focused on moving my hips against his. I rocked deliberately, looking into Blondie's eyes. Like Dark-Hair's before him, his eyes cut into me through the mask, and I almost thought I saw...familiarity. Before my mind could process it though, Dark-Hair was nipping at my shoulder in little bites. Blondie reached down and held me close to his sturdy chest and I was enveloped again by my favorite cologne. Tonight was kismet.\n\nDark-Hair forwent fingering my ass, but he was slower than Blondie in his penetration. I felt every thick inch as he entered me, and just as before, I had an orgasm from the sheer presence of both cocks stretching me to what had to be my limit. Having them both inside me again felt the same and different, each of them touching and filling me in ways that even the other hadn't before. There was less burning, but it was still perfect and amazing.\n\nI don't know if any sexual tryst between more than two people could be described as \"making love\", but it's the closest I could ever come to describing what was happening. We built into a leisurely pace, movements strong but controlled. Pinned again I could still only react, but my orgasms were all they demanded of me. I was more than able to deliver.\n\nBlacking out wasn't a concern for me this time around, but holy mother of god, every second was incredible. Dark-Hair was the first to come this time, his swelling all the notice Blondie and I needed. It was also all we needed to join him. Instead of frenzied pumping, both gladiators thrust deep inside of me and held themselves there until they were depleted. I screamed, wishing I knew their names just so I could be shouting something intelligible.\n\nIt was a shining finale performance. I was exhausted, and I hadn't done the lion's share of the work like my gladiators had! Dark-Hair folded over me, and I collapsed onto Blondie, fabulously sensitive from our night. We laid together in a pile, breathing hard for what seemed like a long time and no time at all.\n\nBlondie squirmed, no doubt trapped in a puddle of our endeavors, and we disentangled. One by one we slid off of the bed, Blondie pulling the blanket off behind him. He threw it onto the abandoned comforter. I nodded toward the bathroom.\n\n\"Let's go get cleaned up.\"\n\nAll of us were quiet in our satisfaction, helping one another lose the layers of come and lube that we'd accumulated. I took each of my gladiators by the hand and led them to the bed where I climbed under the sheets.\n\n\"You want us to stay?\"\n\nBlondie asked, but they both looked hopeful.\n\n\"More than anything.\"\n\nBlondie slid in beside me while Dark-Hair moved to the other side and did the same. I kissed each of them in turn, soft, almost laughably chaste kisses that were as passionate as any other we'd shared, in their own way. They turned to me, propped up on their elbows like they had been when I was absent before, and I was struck by the ridiculous feeling that I belonged there, between the two of them.\n\nI knew what an absurd idea that was immediately. Threesomes with strangers didn't evolve into stable relationships, regardless of how sexually compatible, and that's not what I'd been looking for, anyway. I'd been looking for toe-curling, mind-blowing, bat shit-crazy sex. I'd found that, so there was no reason to feel unfulfilled by our time together.\n\nDark-Hair was tracing his finger along my collarbones while Blondie was doing the same around the outline of my mask.\n\n\"Can we lose these yet?\"\n\nI thought about it. No. I wanted this to be more than it was, but it couldn't. So no.\n\n\"Maybe in the morning. Let's leave something for tomorrow.\"\n\nCaresses stilled as we fell asleep together.\n\nI woke sometime later, tiny slivers of bright light peeking through the thick curtains on the windows. At some point my gladiators had turned away from me, but each of them had a sinewy arm slung over my midsection. Carefully, I shifted one, then the other, against a beautifully muscled back. They didn't stir.\n\nI slipped soundlessly out of bed and made my way around the room, quietly gathering pieces of my costume where they'd been shed. Carefully, I opened the closet door and grabbed my small suitcase, taking it with me into the bathroom. I impulsively grabbed a pen and notepad from the desk I passed along the way.\n\nShutting the door, I winced at the click of the latch and turned on the light. I rapidly threw on street clothes and pulled my tangled hair into a sloppy ponytail. I tentatively pulled at my mask. Though still secure, a few firm attempts to yank it off should work.\n\nI looked at the notepad and pen staring accusingly from the counter. All I wanted to do was crawl back into bed naked, take off my mask, and name names. Because it would ruin everything, I couldn't, so I penned a note.\n\n-My Gladiators,\n\nLast night was the most amazing night of my life, I wish it could have gone on forever. I don't know how we found each other, but I'll always be glad that we did. I hope you remember me as devotedly as I'll always remember you.-\n\nI paused. Sincerely? Love?\n\n-Forever Yours, Your Goddess-\n\nIt was definitely more accurate than the other options. They'd always possess a piece of me.\n\nI considered where to place it to make sure they saw it when a devilish idea sprung to mind. I unzipped my jeans and reached a hand into my underwear, relishing the sensitivity between my legs even as I was in a nervous rush to escape. I extracted fingers laden with nectar, certain that memories of the previous night would leave me wet for the rest of my life.\n\nI moistened the note and pressed it against the mirror, making a mental note to tip the cleaning crew a little extra as I checked out. It stayed in place; I hoped they'd figure out how it was adhered. Turning off the light, I cracked open the door. The suite was still dark and silent. My gladiators had shifted again, turning toward each other, but my absence hadn't disturbed their slumber. Their succulent bodies rose and fell noiselessly, and I tried to leave the same way.\n\nAs I passed the bed I was sorely tempted to peek under their masks before I walked out the door, but it felt too much like Psyche and Cupid. I didn't want to break the spell and ruin our perfect memory.\n\nDesertion almost complete, I leaned against the mirrored wall of the elevator, overwhelmed by what had happened since I was there last. Moving in a haze, I stepped up to the concierge desk; she gave me a knowing grin as I remembered my mask. I blushed and gently tugged at it until came off, a little sad that I'd lost the last piece of costume for my gladiators to identify me with should they charge into the lobby searching for their goddess. Despite all of the precautions I'd taken for a clean getaway, I found myself dawdling, hoping for just that.\n\nIt didn't happen.\n\nI made my way through the ostentatious front doors of the hotel, taking a long look back as the automatic doors closed\u2014the perfect metaphor. I pulled my suitcase behind me knowing I was leaving the goddess in the suite, but I also knew she'd be a part of me forever."
    ],
    "authorname": "VeiledVixen",
    "tags": [
        "mfm",
        "hotel",
        "coed",
        "oral sex",
        "anal sex",
        "dp",
        "costume party",
        "strangers",
        "threesome",
        "three way"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/goddess-18"
}