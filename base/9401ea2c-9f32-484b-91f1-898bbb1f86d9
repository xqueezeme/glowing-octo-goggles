{
    "title": "South Mountain Pack Ch. 14",
    "pages": [
        "I would like to thank hcsd1719 for his help in editing and offering encouragement. Again, there are no actual sex scenes, since the main characters are underage. All italics indicate communication through the mental bond. \n\nThe complete list of Pack members is on the blog, but if anyone would like an excel spreadsheet of the 'cheat sheet' of Pack members, please send me an email and I would be happy to provide one for you. I would like to thank mrtdust1 for his invaluable help in putting the cheat sheet on an excel spread sheet that can be added to as details are revealed. \n\nPlease remember to vote and comment, I appreciate all comments and feedback. Thank you. \n\n***** \n\nThe training room was filled with anxious Pack members at 7:50 AM, none of them wanting to be late. The youngsters under the age of fifteen were in the observation room with the sound turned off so they were unable to hear and when The Tribunal commenced the curtains would be drawn. In the middle of the training room, sitting at three tables were the Martin, Hammond and Mendez families, facing them was a table with four chairs and off to the side The Elders sat in chairs. Dante and the Italians were sitting on the bleachers off to the side, so they could observe but wouldn't disrupt the proceedings. \n\nAt 7:58, Carlo, Gina, Anthony, Sophia, Frank and Joe walked out of one of the smaller training rooms without glancing at the assembled Pack members. Frank walked to the observation room speaking quietly before drawing the curtains and pulling the door closed. Carlo, Gina, Anthony and Sophia took their seats at the head table with Carlo and Anthony taking the center seats, their mates at their sides; Frank stood on the right and Joe on the left. \n\nAt exactly 8 AM, Carlo stood and said, \"I call for this Tribunal to come to order. The charges brought against Victoria Martin, Daisy Hammond and Jade Mendez are as follows: betraying the future Madame Alpha, betraying the Alpha-Heir and betraying the Pack. According to South Mountain Pack law, the evidence will be brought forth and presented then you will be given a chance to defend yourself. After listening to the testimony The Elders will decide on your innocence or guilt; if found guilty, I will decide punishment which may range from loss of privileges to banishment from the Pack. We will start now with the evidence against you.\" \n\nDaisy and Jade started to cry while Victoria looked defiant as Paulo came forward and after hitting a few buttons on his laptop, the phone calls from Victoria to the TV station were shown on a projection screen followed by the emails sent from Daisy and Jade which confirmed Anthony's relationship with Victoria. Hearing gasps from the Pack members, Carlo shouted, \"QUIET.\" Paulo then showed the emails from Victoria which said she and Anthony had been romantically involved for months, how happy they were and how thrilled their families were. Next, the attachments to the emails were shown: pictures of her fifteenth birthday with her and Anthony standing close; Anthony and her brothers laughing together at football practice; her and Gina together at a Pack function; and the last set of pictures were labeled 'Please use these pictures when discussing me or my family on air.' They were professional photographs that Senator Martin had recently done for his newest campaign showing the family in various 'casual' and 'official' settings. \n\nThe next piece of evidence was provided by Anthony as he projected to those assembled Victoria's behavior in the cafeteria from the time she first approached him until CJ apologized. After he was finished, he looked to Sophia and held her hand tightly before projecting the next image...one in which Victoria had tried to kiss him at Rossi's Grocery store and it showed him pushing her away, telling her that Sophia was his mate and he would never betray her, Victoria telling him that as a Senator's daughter she was a much better mate than Sophia and that as soon as she turned eighteen she would be able to take care of his needs. More gasps were heard but were quickly masked as Carlo looked at the Pack members. \n\n\"I'm sorry I didn't tell you earlier, but I didn't want you to have anything to worry about. I was wrong and should have told you,\" Anthony said to Sophia as he squeezed her hand. \n\n\"I forgive you, but how would you feel if somebody tried to take me away from you?\" Sophia asked gently as Anthony's eyes turned amber and he let out a growl. \"From now on, we have to be open and honest with each other, no more secrets.\" Anthony nodded and returned to his seat. \n\n\"You have heard the evidence against them, now we will hear the defense of their actions. Jade, you will go first,\" Carlo said in a firm tone. \n\nJade, her parents Jeff and Jody and her brothers slowly stood up and tears were streaming down Jade's face as she opened and closed her mouth several times. Jeff leaned down and whispered, \"Tell them the truth and tell them everything, just like we talked about last night and this morning Sweetheart.\" She nodded and took a deep breath as she felt her parents reach out and hold her hands. \n\n\"Alpha Carlo, Madame Alpha Gina, Alpha-Heir Anthony and future Madame Alpha Sophia, the first thing I would like to say is I'm sorry for the part I played in betraying you. I have no excuse and should have known better, I know what I did was wrong and hope you can forgive me,\" she said in a low quivering voice. \"I really have no defense because I was thinking of myself and not my Pack or my family so I take full responsibility for my actions and I will accept any punishment that you deem appropriate Alpha Carlo.\" \n\n\"Jade, your father said you were pressured into doing this. Can you project the conversations you had to me, so I can send them to the other Pack members?\" Carlo asked in a gentle yet firm voice. \n\nJade lowered her head, closing her eyes as she projected the conversations she had with Daisy and Victoria. Her thoughts were disjointed and the images jumped around and Carlo said, \"Relax and concentrate Jade.\" She took a deep breath and felt her fathers strong arm around her shoulders, her mother squeeze her hand and her older brothers Jack, Josh, Jake and Joel put their hands on her back to calm her down even more. She concentrated harder and the images became clearer. \n\nVictoria telling Jade and Daisy if they didn't help her that she would start rumors about them; that they were having relations with human boys, that they were disobeying their parents and Alpha by going out without protectors, and that she had found Jade and Daisy in a compromising position together. After taking a deep breath she then projected the last conversation with the three girls; Her and Daisy begging Victoria not to interfere in Anthony and Sophia's relationship, crying as Victoria wrote emails on their accounts and telling them to hit 'send' so she could say they had sent them and not her, and her threatening them again that she would disclose the rumors if they told on her. After she was finished Jade let out a strangled sob as her father engulfed her in a hug, her brothers glaring angrily at Victoria who rolled her eyes and let out a big sigh. \n\nFrank drew in a deep breath and shifted his gaze to Clay Martin who had his head bowed and was staring at the table. Sophia reached out for her father's hand, needing the support of not only her mate, but also her father. As soon as he felt her small hand touch his, he opened his clenched fist and held her hand, squeezing it reassuringly like he had done thousands of time since she was born. \n\nCarlo stared at Jade and her father Jeff and said in a gentle tone, \"Is there anything else you would like to say?\" \n\nJody handed her daughter a Kleenex and she blew her nose before nodding her head. \"I...I...just want to say how sorry I am, I knew it was wrong and I should have stood up to her. The only excuse I have is I didn't want my mate to think bad things about me, but I should have known he would believe me and not gossip.\" \n\n\"Do you know who your mate is Jade?\" asked Gina, closing the bond off to everyone but Jade and her mother. \n\n\"Yes, Madame Gina, its Reggie Benedetto,\" Jade said quietly before she started to cry again. \"He hasn't said more than hello to me in a year and after today I'm not sure he ever will.\" \n\n\"Thank you for your honesty Jade, you may sit down,\" said Carlo as his gaze shifted to the second table. Daisy was crying silently into her father's chest as he hugged her, her mother was quietly crying and her older brothers Jay, Thomas, Nicholas and Scott were standing behind her chair glaring angrily at Victoria. \n\n\"Daisy, do you have any additional information you would like to present?\" Carlo asked gently. \n\nDaisy stood up holding tightly to her parent's hands, \"I would like to say how sorry I am for allowing this to happen Alpha Carlo. She had us convinced our lives would be ruined if we didn't do what she wanted. I admit I betrayed my future Madame Alpha, my future Alpha, you, Madame Gina, my Pack and my family but most of all I betrayed myself and my wolf.\" She took several deep breaths before continuing, \"I will accept whatever punishment you decide for me Alpha Carlo.\" \n\nHer father George whispered in her ear and she nodded, \"The only additional information I have to present is what happened after Anthony was interviewed by the reporter.\" She then projected Victoria's reaction to Carlo and gasps were once again heard from the Pack members. \n\n\"Thank you Daisy, you may sit down,\" Carlo said in a gentle voice as he watched George settle his daughter on his lap as he rocked her back and forth while she cried. Her brothers were on their knees as they tried to soothe their sister and their mother Laura was gently clearing the tears from her face. \n\nAll eyes moved to the third table where the Martin family sat. CJ, Jeff and Greg were staring off into space, Clay was still staring at the table, Allison looked like she was about to cry and Victoria was examining her nails. Carlo narrowed his eyes and said in a commanding voice, \"Victoria, it is now your turn.\" \n\nVictoria sighed loudly and stood up, shrugging her shoulders as she said, \"Yeah, I did it.\" She glared at Daisy and Jade before turning to Carlo and saying in a defiant tone, \"Luna had to have made a mistake... obviously I'd make a better mate for Anthony than HER. I have the social connections and status that an Alpha of this Pack needs, not HER. I am the daughter of a Senator, and she is the daughter of a cabinet maker for Luna's sake. What does she bring to this mating that will benefit Anthony? Absolutely nothing. I will bring political influence and untold benefits.\" \n\nSophia could feel her temper starting to boil, and felt both her mate and her father squeeze her hands. She remembered her father's words not to let her temper get the better of her and took a deep breath to maintain control. \"She's wrong Arachide, with you I have everything,\" Anthony said in a soothing voice. \n\nCarlo angrily said, \"That's the base of your defense? That you're a Senators daughter and have political influence?\" At her nod, he stood up and thundered, \"LET ME MAKE ONE THING PERFECTLY CLEAR...YOUR FATHER IS A SENATOR BECAUSE I SAY HE IS A SENATOR, I HAVE MORE POLITICAL AND FINANCIAL INFLUENCE THAN YOUR FATHER EVER WILL. I CAN MAKE ONE PHONE CALL AND YOUR FATHERS POLITICAL CAREER WOULD BE OVER AND AFTER IT'S OVER NO ONE WOULD EVEN TAKE HIS PHONE CALLS. EVERYTHING YOU HAVE IS BECAUSE I ALLOW YOU TO HAVE IT, I GAVE IT TO YOU AND I CAN TAKE IT AWAY JUST AS EASILY.\" The assembled pack members bared their necks to him in submission. \n\nGina placed her hand on top of Carlo's and he instantly felt her calming influence through her touch and the mate bond. He acknowledged the submission from his Pack and sat down staring at Victoria and seeing no remorse in her expression, he sighed loudly before saying, \"Is there anything else you'd like to say?\" \n\n\"No,\" she said in a tone devoid of all emotion as a pout crossed her face. As she went to sit, she suddenly stood straight and said, \"Yes, there is...I want extra guards posted for my protection. If those people are supposedly coming for us, what makes you think the Millers and the Carlucci's are the top targets? Anybody with a brain would realize I'd be the top target because of who I am.\" With that announcement she flopped in her seat, crossed her arms over her chest and started to pout. Her mother was crying quietly and reached out to hold her hand, but Victoria snatched it away while her father and brothers continued to stare off into space. \n\nCarlo stared at her before shaking his head, \"I'm not even going to respond to that except to say no member of this Pack is better than another. We are a Pack, a family who watches over and protects each other, if anybody feels differently please stand and tell me why you feel that way.\" He leaned back and studied his Pack members who sat silently staring at the floor in front of the head table. \n\n\"Before The Elders pass judgement, is there anything the three of you would like to say?\" Carlo asked as he looked at Jade, Daisy and Victoria. Jade and Daisy shook their heads while Victoria was pulling at a thread on her sweater. \n\nCarlo stood and turned to the twenty-seven Elders and said, \"Please go to the smaller training room for your deliberations.\" After they filed out of the room, he turned to the assembled Pack and said, \"Those of you who need to check on their youngsters please do so now.\" As the door to the observation room opened, everyone started smiling as they heard the young ones singing 'The Wheels on the bus go round and round'. Carlo leaned back in his chair with his eyes closed, wishing he were at the lake and fishing with his two best friends. \n\nLess than five minutes passed when Elder Arturo Pinelli said, \"We've reached a decision Alpha.\" \n\n\"The Elders have reached their decision,\" Carlo announced and moments later everyone was in their seats. Their was complete silence as The Elders filed into the room and Elder Arturo walked to Carlo handing him three folded slips of paper before bowing and returning to his seat. Carlo unfolded the slips labeled Daisy and Jade and looked at them before showing them to Gina, Anthony and Sophia. He stood and said in a commanding tone, \"Jade and Daisy, please stand.\" \n\nThe girls and their families slowly stood and Carlo said, \"You have both been found guilty of all three charges.\" Daisy started crying loudly and slumped against her father while Jade's knees buckled and she was held up by her father's arm around her waist. \"After watching everything that transpired, I now have a better understanding of your subsequent actions. After listening to your apologies I feel you both show true remorse and realize your actions were detrimental to your future Alpha's, your Pack but most of all to yourselves.\" He paused for a moment and glanced at Victoria who continued to pull a thread on her sweater. \"Your sentence is as follows: a one game suspension from cheerleading and you will write an essay about what being a member of South Mountain Pack means to you.\" Daisy and Jade were still crying silently but nodded as Carlo paused and looked at them. \"In the future you will be faced with difficult decisions and I want you to remember that doing the right thing isn't always the easy thing to do. We are judged not only by the words we say but by our actions and I hope from this day forward your words and actions reflect the loyalty I know you have for this Pack.\" \n\nDaisy bowed her head and said in a quiet voice, \"Thank you Alpha Carlo for believing in me when you didn't have too.\" \n\nJade wiped the tears from her eyes and said, \"Thank you Alpha Carlo for believing in me too.\" \n\nCarlo looked at both girls and said quietly, \"I believe in both of you and I know how upset this has made you and your families. Since you don't have a game to go to this weekend, take the time to reflect and learn to believe in yourself again.\" Their families hugged them and sat back down, relief evident on their faces. Carlo watched them for several moments before picking up the slip of paper with Victoria's name on it; he read it then passed it to Gina, Anthony and Sophia. \n\n\"Victoria, please stand,\" said Carlo as he turned towards her. She stood with her arms still crossed over her chest and her family stood beside her, though they looked like they wanted to be anywhere but standing with her. \"You have been found guilty of all three charges, in addition The Elders found you guilty of an additional charge of betraying your fellow Pack members.\" Allison began crying, Clay took a deep breath and her brothers looked at the floor while Victoria tossed her long blonde hair over her shoulder and sighed deeply. \"Your sentence is as follows: you are forbidden from participating in all Pack functions including the Halloween Dance and The Winter Festival, you will be required to attend these functions but you will sit in a room by yourself; you will be required to attend Full Moon Ceremonies, but you will not be allowed to participate in the Pack run or any Pack activities, you will stay in a cabin by yourself; you are stripped of your spot on the cheerleading squad and you are not allowed to attend any school activities including the Homecoming Dance and any games. In January we will have a meeting and if we determine you are feeling remorse and can once again become a productive member of this Pack then some of your privileges may be restored.\" \n\n\"THAT'S NOT FAIR, YOU CAN'T DO THAT,\" Victoria shouted as Clay grabbed a hold of her arm and told her to shut up. \n\n\"DO NOT TELL ME WHAT I CAN OR CANNOT DO,\" Carlo's voice thundered throughout the training room and the assembled Pack members recoiled and submitted their necks instantly. \"IF YOU RAISE YOUR VOICE OR TALK TO ME IN THAT TONE AGAIN, I WILL BANISH YOU AND YOUR FAMILY. CONSIDER YOURSELF LUCKY I WAS LENIENT IN MY PUNISHMENT, IF YOU DO ANYTHING LIKE THIS AGAIN, YOU AND YOUR FAMILY WILL BE BANISHED BEFORE YOU EVEN REALIZE WHAT IS GOING ON.\" Gina again slid her hand onto his and Carlo took a deep breath looking at his Pack who still had their necks in a submissive pose. Seeing this he waved a hand at them and they started to relax. \n\nClay, Allison and the boys bowed their heads and Victoria took a deep breath and nodded. She was afraid if she spoke, she would shout at her stupid Alpha again; she couldn't believe this was happening to her...she was Victoria Martin, daughter of Senator Clay Martin, not some stupid no-body. \n\n\"Since you won't be at the game, I suggest you take the time to reflect on how you are going to make amends to the Pack, and to the future Alpha's,\" said Carlo in a firm commanding tone. She glanced over and looked at her mate in disdain; that's what Luna paired her with? She was disgusted by his subservient attitude and his fawning over his stupid sister. She deserved an Alpha, not some lowly Beta and she was going to make sure it happened. As she thought about what her Alpha said she decided if she couldn't have Anthony then she would have to find another Alpha. To do that she had to be able to leave the territory and plans started to formulate in her head as she thought of how she could accomplish this. \n\n\"Since the entire Pack is here, we're going to have a meeting.\" Carlo motioned for the Hammond, Mendez and Martin family to sit on the bleachers and when he saw Victoria following her family, he said, \"Victoria, this is a Pack function, you will go and sit in the smallest training room by yourself.\" \n\nJoe said quietly, \"Victoria, follow me.\" When they got to the room, Joe made sure the room was completely empty and he said quietly, \"Empty your pockets, give me your cell phone and your pocketbook. You will sit here and do what Alpha Carlo said, you will reflect on how you are going to make amends.\" Without waiting for a response he gathered everything she gave him and quietly left the room, making sure the door was firmly closed. ",
        "\"Anybody who doesn't want their youngsters included in the meeting, please send them to the observation room,\" Carlo said as he looked over the crowd. Nobody moved, all the youngsters who were able to understand what was going on had been told and their parents wanted them included in the meetings so they would have a clear understanding of what was going on. \n\nCarlo nodded and brought everyone up to date on the improvements done to The School House; what happened at the reception with Amy Briggs and the information Paulo discovered; the renewed Alliance with Parr Ridge Pack; their plans for the safe room later that day. He stopped and looked at the Miller girls and projected the revelations made by President Roberts through the bond to those over eighteen plus Anthony, he knew the girls killed by Charles had been friends of theirs and he didn't want them to find out this way. Horrified gasps were heard throughout the training room and Holly and Nana Miller started to cry quietly as they thought of the young girls who had been friends with their girls, they were comforted by their mates who also appeared shocked. \"What I sent to your parents, they will disclose to you later,\" he said quietly and the youngsters nodded, realizing it was something bad. \n\nCarlo cleared his throat and motioned Paulo forward, who blushed as he walked to the table the Hammonds had been, placing his laptop on it. He hated being called out in front of the Pack preferring to be in the quiet confines of his office. He felt the comforting presence of his father and uncle as they walked to his side and he sighed before saying quietly, \"I'm okay, just give me a moment.\" \n\nDamian saw his brothers discomfort and said, \"Hey bro, remember that old trick about imagining your audience in their underwear, that'll relax you. No wait, that won't work since you've seen all the men nekkid already and imagining the girls naked is just wrong and imagining the moms naked is beyond disturbing. Wait a minute... I think I just threw up in my mouth.\" \n\nPaulo put his head down hiding his smile, \"Thanks Damian, I can always count on you to say the most absurd shit and make me laugh.\" He looked at his brother saying quietly, \"I know I don't say it enough, but I'm proud you're my brother.\" \n\nA crooked smile came over Damian's face, \"Thanks and I'm proud you're my brother too. You amaze me constantly with the mad computer skills you have and I'm proud of the dedication you show to keep all of us safe.\" \n\nPaulo smiled at him before taking a deep breath to start explaining the new feature connecting the cell phones to the security systems and that an email would be sent out with an installation schedule since he had to upload and program each individual security system. He hit a couple of keys on the laptop and a picture appeared on the big projection screen and he said, \"Originally, we wanted to put tracking devices in the youngsters backpacks and in the girls headbands and shoes, but the more we thought about it, we're going to give them to all Pack members. It would be activated in an emergency after you've been scanned for electronic devices. The device will be specific to each Pack member and will work worldwide since it's programmed to link to the nearest satellite and will send an alert to me, Alpha Carlo, Uncle Frank and Dad. I have it programmed so even if it's destroyed, once the link is broken between the electronics and the battery, there's enough of a charge left to send a split-second burst and we'll get the alarm.\" \n\nThere was silence from the Pack members before Vinnie said, \"That's some serious James Bond shit you've rigged up there.\" \n\nPaulo smiled at his Godfather and said, \"Q would love to get his hands on this. If you notice it looks like a mesh screen, the battery and electronics are woven together and it recharges itself through motion. It's activated through pressure; press it for three seconds to turn it on and once quickly to turn it off, you can feel it snap off.\" \n\n\"You can do all that, and your father still can't figure how the cruise control works in his truck,\" said Vinnie with a smile as Joe glared at his friend. \n\nCarlo slapped Joe on the back and said, \"We're also working on a false bottom to the backpacks, incorporating some of the supplies Joel and Jerry put in during the last training exercise. Since it's sneaky and underhanded, I don't have to tell you who came up with that idea.\" The Pack turned to look at Damian who was smiling broadly and he got up and bowed causing them to start laughing. \n\n\"Before we adjourn the meeting, is there anything you feel we need to discuss?\" asked Carlo as he looked at his Pack. \n\nEnzo stood up and said, \"I'd like to have a meeting here on Tuesday at 7 PM, with all the youngsters aged fifteen and up who'll be left in the safe room during the battle. We need to start formulating our plans.\" \n\nCarlo nodded, \"The building will be made available for you, is there anything you need us to provide?\" \n\n\"Refreshments would be nice, you know snacks, drinks, steaks, a couple of roasts, nothing too big,\" said Michael with a smile. \n\n\"How about pizza?\" asked Carlo as he laughed while the youngsters nodded. \"Anybody else?\" \n\nElder Marvin Whitmer stood and said, \"I think we should have a meeting before each Full Moon Ceremony to keep us updated. I know you can update us by using the bond, but by being together it brings us even closer.\" \n\nCarlo nodded as he said, \"We'll start having meetings at the next ceremony.\" He looked at the Pack again and not getting any more questions or suggestions, he said, \"Okay, we'll meet at The Manor House in thirty minutes.\" \n\nThe Pack members were talking loudly as they walked down the bleachers and the Hammond and Mendez families huddled protectively around Daisy and Jade. Seeing the looks that were directed towards the two girls, Sophia walked towards them with her mate and brothers following closely behind. \"Can we talk?\" she asked quietly and when the two girls nodded, she walked to the middle of the training room knowing the eyes of everyone in the Pack were on them. \n\n\"I hope we can move past this,\" Sophia began as she reached out to hold their hands. \"I've always thought of you as friends and this hasn't changed my opinion. When Anthony told everyone at practice, the two of you were the first to congratulate me and I'd like us to be close once more.\" Daisy and Jade started to cry and their brothers moved forward to protect them but stopped when they saw Sophia hug them. She whispered in their ears, \"You don't need to say anything, I heard everything you said earlier and between friends nothing more needs to be said, okay? Now, let's go in the locker room and get you cleaned up a little.\" A mischievous twinkle came into her eyes as she said, \"I hate to say this, but you both look a mess. Your eyes are red and puffy, your nose is red and your hair's a mess.\" \n\nCarlo, Gina, Frank and Rose looked at Sophia with approval and Carlo said quietly, \"She's going to make a great Madame Alpha. Luna was wise in her choice for my son, he couldn't have asked for a better mate.\" \n\nTen minutes later everyone had left but the Betas and the Italians since Frank and Joe were discussing what they wanted done at the safe room. Vinnie and Carmelo were getting ready to check the building and shut the lights when Joe turned to Clay saying, \"Victoria is still in the small training room.\" \n\nClay sighed and said, \"We can't leave her here?\" \n\nThe men hid their smiles as Carlo said, \"Unfortunately, you can't. She's young Clay; hopefully after what happened today, she'll get rid of this warped sense of entitlement she has and that arrogant attitude. If she doesn't I have a feeling someone will knock it out of her.\" He looked at Frank who shrugged his shoulders knowing it would probably be his daughter. \n\nClay sighed and looked at Frank, \"I know you've had an issue with me since I fell on top of Rose...\" He stopped speaking as Frank growled loudly and he took a deep breath before he continued, \"But I need your advice. We've taken things away from her, restricted her from going out, tried reasoning and talking with her, but nothing helps. What did you do with Sophia? She's such a nice young lady, polite, well-mannered and friendly. What did you do that I didn't?\" \n\n\"I'm not sure Clay,\" Frank said as he shrugged. \"Your sons have turned out to be fine young men, but somewhere along the way Victoria has gotten it into her head that she is better than anyone because of who you are. It seems like her whole identity is wrapped up in the fact that she is a Senator's daughter, maybe you need to take her to a therapist and find out why she feels that way.\" \n\n\"Thanks Frank, I'll talk to Doc and see what he recommends,\" Clay replied with a nod. \"I guess I better get her.\" \n\nThe men watched as he walked slowly across the room and Dante said, \"There goes a troubled man.\" \n\nThirty minutes later the Pack was at The Manor House to begin the ten minute walk to the safe house. Alberto picked up Maria and before she could protest, he whispered, \"Let me carry you, I like having you in my arms.\" She nodded and settled against his broad chest. The youngsters broke into their training session groups and started carrying the young ones and little ones. \n\n\"I swear to Luna, if you bug me one more time I'm gonna knock you out,\" Emory Bellucci ranted as she waved her arms around. \"There's nothing wrong with me, except for the fact I look and feel like a gigantic beached whale.\" \n\n\"Doc said to take it easy since the little one is due in a month Em. Let me carry you, I don't want to take the chance you'll fall and hurt yourself or the little one,\" her mate Duke said in a soft soothing tone. \"Alberto's carrying Maria.\" \n\n\"There's a big difference, she just had surgery and I'm pregnant,\" Emory narrowed her eyes and put her hands on her hips. \"Get. Out. Of. My. Way.\" Duke threw his hands in the air and moved to the side as she slowly followed the others. \n\n\"I told you when you made your declaration she was a handful,\" his father in law, Roman Sabatini said as he slapped him on the back. \"Did she tell you she got mad because I wouldn't let her help re-tar the roof of the skating rink? She threw a fit, stomped her feet and screamed like a toddler. She said I wouldn't let her on the roof because I thought it would collapse under her weight.\" \n\nHer oldest brother Austin continued, \"Dad said it wasn't true, but I don't think he helped when he told her she was becoming 'unwieldy'.\" \n\nDuke watched as she slowly walked with Anna and Cynthia and said, \"I don't know what to do anymore. She's hungry, but won't eat because she says she's fat or she wants food Doc says she shouldn't have or she wants it at 3 AM. She's sleepy but won't lie down unless it's on freshly laundered sheets. She gets up in the middle of the night to use the bathroom at least ten times and won't come back to bed until I change the sheets. During the day it's the same thing, I'm changing the damn bed twenty times a day. She's bored but doesn't do anything except watch 'The Princess Bride' and then cries. She's thirsty but only wants coffee which she can't have and hated before. I'm losing my fucking mind.\" \n\nRoman laughed, \"She's yours now and you can't give her back.\" \n\n\"I HEARD THAT,\" Emory hollered and both her mate and father looked at her with terror in their eyes. \n\n\"Oh fuck,\" muttered Duke as her brothers and Dad started to laugh. He ran after her and said in a soft tone, \"I only meant that you're such a nice loving mate and I love looking after you and our little one Em.\" \n\n\"Yeah right,\" she replied rolling her eyes as she stopped walking. \"Now carry me.\" Duke smiled as she told him she could have walked but she didn't want to get her shoes dirty, not that she could see them, but she still wanted them clean. \n\nWhen they arrived at the entrance to the safe room Joe looked at Papa Mike and said, \"Can you see the entrance?\" \n\n\"Here? All I see is rocks, evergreens and trees,\" said Papa Mike as he spun around looking for anything that looked out of place. \n\nCarlo called the Millers over to a grouping of boulders and said, \"Watch carefully, if you do this wrong, you'll get zapped with 100 amps of electricity.\" Thinking he was kidding Todd and Papa Mike started to laugh and Carlo said, \"I'm serious. We wired the ground to shock anyone who's trying to access the panel without using the correct sequence. There's a ledge on the back of the boulder and underneath is a button that needs to be pressed in a certain order for it to unlatch; five quick, one long and two quick. Anything else and you'll get shocked.\" Carlo then pulled on the top of the boulder separating it revealing a keypad and he punched in the code. Replacing the top he moved quickly to a smaller boulder and pushing on the front it separated at the bottom, \"Hitting that code will unlock the next keypad. It has an internal locking mechanism, there's no other way to access it and if you try and force it open it'll self-destruct. You must open it within twenty seconds if not it relocks and you have to do the whole sequence over. If you do it more then two times, both systems will cease to operate until Frank, Joe, Paulo or I reset the system.\" \n\nAs Carlo typed the ten digit code Frank said, \"I'll give you the codes later. Like the code to the website if you're under duress simply add '01' to the end and it'll send an alert to Carlo, Joe, Paulo and I. After you put in the correct code, you need to replace the top of the rock within ten seconds; if not the door to the safe room won't open. Turn around and watch the rocks.\" \n\nThe Millers stared at the numerous outcroppings and within seconds one of the larger ones moved similar to an old fashioned garage door, where the top tilted back and the bottom swung upwards. Their mouths fell open and Papa Mike said, \"That's fucking unbelievable. I never would've guessed the door was behind a whole outcropping of rocks. That's got to weigh a ton, how did you get it to lift?\" \n\n\"Four large hydraulic lifts, and it weighs several tons,\" said Joe motioning the Millers forward. \"Once inside, the hydraulics can be disabled preventing the door from opening. As you can see the door is solid steel and the rocks extend over the edges so it looks like a natural formation.\" \n\nTodd glanced inside the small room and said with a confused tone, \"Where's the door to get inside? All I see is dirt and more rocks.\" \n\n\"There's one more keypad. Again, the floor is wired to shock anybody who doesn't do things correctly,\" Carlo said walking to the right side of the small area. Squatting in front of a group of rocks imbedded in the wall, he pushed one on the bottom right, one on the far left and then pressed one on the back wall. Todd watched as Carlo walked over to a rock, the size of a quarter and pressed it into the wall and a small panel opened on the floor. Carlo punched in the code and the left wall started to separate, moving back and sliding into the mountain. \"They would naturally look for the door in front of them, so we put it on the side.\" \n\n\"Who the hell thinks of these things? Wiring the ground to shock people? All the secret panels and sequence things, it's unreal,\" said Todd as Frank, Joe and Paulo walked into the security room while the other Betas quickly searched the entire safe room. Moments later, shouts of \"Clear\" rang out and within minutes the Pack was inside the safe room. Carlo typed in the code to bring the outer door down and they were completely sealed inside. \n\nThe young ones moved to the corner where small tables were set up and took off their backpacks getting out coloring books, dolls, toys and books and sat quietly while the women put the little ones, newborns to toddlers, in an area with a short wall around it. The area had cribs along the wall, playpens in the center and toys scattered around. Carlo looked at his Pack and the Italians and said, \"Let's get started. Victoria, please go to one of the exam rooms.\" She looked at her Alpha and nodded and went to the exam room sitting on the only chair and staring at the wall. \n\nGina broke the women into groups; Rose - bunk rooms, Annie - kitchen supplies, Holly and Rita - food supplies, Annabelle Pinelli - linens and Teresa Giovanni - batteries and emergency supplies. Each group was assigned several women and they started inventorying and inspecting their areas. Ric and Rocco went into the security room and the Betas inspected the electric, air and water systems while the Italians checked everything. Doc and his mate, Elaine, went into the medical area and started their inventory. The youngsters kept the younger ones entertained. \n\n\"Come on Millers, I'll give you the tour,\" said Vin with a smile. He showed them the four bunk rooms, the men's shower room, the women's shower room, the medical rooms, the two cell rooms, the kitchen, the dining room and the security room. \n\n\"How in the hell did you all build this?\" asked Todd as he looked around. \n\n\"We didn't build all of it. When the Pack first arrived, they found a series of caves and used that as a safe room with a wooden door as the entrance. Over the next two hundred thirty years, we've made some improvements,\" Vin answered with a shrug. \"We've reinforced the walls with concrete and steel beams. The ceiling has I-beams every 24\" and is concrete with rebar. It's taken us years to get it like this and as new technology becomes available we update.\" \n\nDom walked up carrying Hope and Jackie and said, \"Vin, this little munchkin was asking for you.\" \n\n\"Vinnieee,\" Hope squealed and put her arms out for Vin to hold her. He lifted her out of Dom's arm, pretending to drop her as she laughed in delight. \n\n\"What's the matter munchkin?\" asked Vin as he settled her on his hip. \n\n\"Nuttin, I was tired of doin tha collers,\" she said with a big smile. \"Mommy is doin tha countin wit Miss Hawlley and Daddy is wit Mister Carmellow. I's bored.\" \n\n\"Why aren't you playing with Brooke?\" Vin asked as Hope placed her head on his shoulder and got comfortable. \n\nHope sighed loudly and said, \"She's pwaying dohllies with Wenzo. She fixeded his haier weal pwetty too, puts bows and wibbons in it.\" Vin, Dom and the Millers started to grin as she continued, \"Antny and Daymian too. Daymian letted Toni put ALL da bows an wibbons in his haier. He wooks bootiful.\" \n\n\"I bet he does, how bout we go see them?\" asked Vin as they walked into the main room and began to laugh. Almost every boy had bows and ribbons in their hair, even the ones that were in front of the TV playing video games or were in the corner with Marcus as he showed them defensive moves. As long as it kept the girls happy, they would put up with it. The older girls were grouped around Emory, Cynthia and the six other pregnant women and were talking about little ones. \n\nHope giggled and said, \"I gots one for yous too Vinnie.\" He laughed and put her on top of the table and bent down as she put the lilac with white polka dot ribbon in his hair and she clapped when she was done. \"Yous pwetty.\" \n\n\"Thank you. Jackie, where's Dom's bow? I think he needs one too,\" said Vin with a smirk as Dom pretended to scowl at Jackie. She giggled and pulled a red bow with little white hearts on it out of the pocket of her overalls and clipped it in. \n\nDom and Vin set the little girls down and they ran back to Brooke, Abby and Toni. \"I know what I wanted to ask,\" said Todd as he looked at Dom. \"Why do you all only go to school four days a week?\" \n\n\"Well, we don't take winter or spring breaks; have teacher professional days or other things like public schools. We also start a week earlier than they do,\" said Dom as he shrugged. \"We've always had a four day week; I believe it's written in our charter. We have off Fridays, except for the week of the Full Moon when we take off the day after; or Federal holidays, like Labor Day, so we'll be off that Monday.\" ",
        "\"We do a lot of Pack stuff on the days off, special training, helping out whoever needs something, that kinda stuff,\" said Vin as he watched Hope. She was trying to get something out of her backpack and as it came loose she fell backwards, he started to run towards her but Gianni scooped her up before she hit the floor and cradled her against his chest as she started to laugh. \n\n\"I got her,\" said Gianni sensing his brother's anxiety. \"I know you've been busy so I've been keeping an eye on her and I see you got your pretty purple bow.\" \n\n\"Yeah, just what I've always wanted, to be wearing a girly hair bow in front of my mate,\" said Vin as he rolled his eyes. \"Where's yours?\" \n\n\"Mr. Drama Queen took it, said he needed it to look the most beautiful,\" said Gianni with a laugh. \n\nVin looked around the room and spotted Damian coming from the men's locker room with Toni's brothers, Troy, Roger, Danny and Don. He had so many bows on his head that you couldn't even tell he had hair and Vin started laughing so hard that all he could do was point at him for the Millers to see. \n\n\"He looks like a Hallmark store exploded on his head,\" said Dom with a laugh. \n\n\"And that is the mate Luna chose for me,\" said Caitlin with a sigh before she began to laugh. \"I don't know whether to laugh AT him or with him or to feel sorry for myself that we're mates. I don't think he'll ever take anything serious.\" \n\n\"He'll be a wonderful mate and father,\" Maeve said in a serious tone. \"You're serious but have a snarky sense of humor and he ...well... he is just Damian. I think you'll balance out perfectly.\" They watched Damian pick Toni up and blow raspberries on her cheek. \n\nFrank and Joe walked over to Todd and Papa Mike and Frank said, \"There's one thing Vin left out, the emergency exit.\" Todd and Papa Mike looked confused as they followed them and watched as Joe opened an end cabinet moving the dishes out of the way before pushing in on the left interior panel revealing a keypad. He typed in an access code and they watched as the middle freezer unit moved away from the wall on rollers revealing a 3' round metal door. \"This was original to the caves; we think it was a stream that dried up, it goes straight through the mountain ending in a dry well in the basement of a house the Pack owns in Burkittsville in Frederick County. We keep vehicles in the barn and garage for emergency use.\" \n\n\"If this is the escape route, what's that door in the main room?\" asked Todd as he turned around and pointed to a similar door that was on the back wall, partially hidden behind a bookshelf. \n\n\"A diversion. If we need to escape, that door'll be opened letting our enemies think we escaped through there,\" said Frank. \"I hope they're not claustrophobic, it's only 2.5' x 2' and almost four miles long before it narrows down to nothing.\" \n\n\"I told you they were sneaky and they haven't even told you the rest of the plan,\" said Matt looking at his brother. \"If something happens, one of the youngsters is going to take shirts from the girls and run to the end of the tunnel, leave the shirts then run back. This way the girls scents will make them go down the tunnel.\" \n\n\"Thing is, the tunnel isn't big enough for adult wolves to run in or turn around, so they'll have to crawl in their wolf form or human form to the end and they'll have to back out,\" said Phil as he joined them. \n\nThe Carlucci brothers looked at each other and smiled as Joe said, \"We can't take credit for that idea. Damian thought of it when he was six. Now that I think about it, it should have been a huge clue what he would turn out like.\" \n\n\"I should've known,\" said Todd with a grin. \n\nA little over an hour later everything was done: Gina had the inventory and list of supplies to be ordered; Carlo had the assessment papers from the Italians; Frank and Joe had notes of what electronic equipment Paulo needed; Doc had the list of medical supplies to be ordered; Carmelo and Vinnie had notes about the supplies needed for the mechanical equipment. \"Okay everyone, we're done here. Young ones clean up your areas and make sure you have everything because we're not coming back if you forgot something,\" Carlo said in a loud voice. \n\nTen minutes later, the Pack was ready to leave and Paulo checked the monitors before saying, \"We're clear.\" Carlo typed in the passwords and the Pack exited as Carlo repeated the earlier process to lock the safe room down. \n\nAs they were walking to The Manor House, Matt said, \"Todd, what time are we going to the Mall to take the girls shopping?\" \n\n\"Whoever is going, I am going with you, I am hungry. Who is driving me?\" Dante said eagerly. Carlo rolled his eyes and an hour later the Millers, Carlucci's, Rossi's, Gabby, Angelo and Alberto were at the Mall. Dante quickly led the way to Long John Silver's where Amanda smiled broadly as he said, \"One register again Amanda.\" She nodded and glanced at the new cashier who quickly ran to the back to tell them Mr. Rossi was here with a ton of people. The fry cooks glanced out front unsure of 'what a ton of people' was, and as soon as they saw how many people there were, they ran to the freezer and grabbed boxes of everything. \n\n\"You do know we have other restaurants around here,\" said Carlo with a laugh as Dante was finishing the last of his hush puppies. \n\n\"None with food as good as this,\" Dante replied before he went to the register to pay and to talk to Amanda. \"I want to thank you for being at the reception yesterday; for me it was the highlight of the evening. I know how much work it was for you and your staff, speaking of which how many workers are here today?\" \n\nAmanda smiled, \"Thank you for including us Mr. Rossi, my District Manager said it was a wonderful opportunity for us. We have six here today Sir.\" \n\n\"I know they are busy, so please hand out the tips for me,\" he said as he peeled off thirty $100 bills before paying the $1,300 bill with his card. \"We will be leaving Wednesday, but I hope to see you again several times before then.\" \n\n\"Thank you again Sir,\" said Amanda with a big smile as the staff stepped out of the back and waved at Dante. \n\nDante smiled as they walked out of the restaurant and said, \"I am full and now I need to do some shopping. I need some American Levi's for myself and D &amp; D, also some of the new Nike's, Catarina wants ...\" Dante stopped talking and pulled his wallet out retrieving several pieces of paper and his eyes widened when he looked at the lists. He sighed and said in an exasperated tone, \"IO giuro di Luna, i ragazzi del mio credo che non ci sono negozi in Italia. Bath &amp; Body Works intera linea di zucchero vanigliato, sun abiti con cardigan e calzini, pantaloni capri con twin-set, Levi's, Nike's, U di MD felpe e tute, felpe con cappuccio, polo Ralph Lauren camicie e shorts ...e che diavolo \u00e8 una 'moglie battitore'?\" (I swear to Luna, these youngsters of mine think there are no stores in Italy. Bath &amp; Body Works entire line of vanilla sugar, sun dresses with matching cardigans and socks, capri pants with twin sets, Levi's, Nike's, U of MD sweatshirts and sweatpants, hoodies, Ralph Lauren polo shirts and shorts...and what the hell is a 'wife beater'?) \n\nVin told the Millers what was said and that D &amp; D were Dante's sons, Draco and Drago as Ric, Rocco and Luc pulled similar lists out of their wallets. \n\n\"It will take me hours to get all this,\" said Dante as he looked at Ric, Rocco and Luc who said their lists were almost as long. \n\n\"Let me see,\" said Gina and Dante passed the papers to her and Rose and Annie held their hands out for Ric, Rocco and Luc. \"The girls can help me pick out some outfits for Cat; she even included her size on the paper though of course it's in Italian measurements. Who does she most resemble in height and shape?\" \n\nDante pulled a picture and a credit card out of his wallet and handed them to Gina, \"Well, you know she is seventeen, and is most similar to Gabriella. She likes bright clothes and for everything to match. Buy her whatever you think she would like. There is no limit on that card, but try to keep it around $20,000.\" \n\nGina laughed as she said, \"Dante, I could buy a whole store for that.\" She looked at the list again and said, \"I don't see anything on here for Calinda.\" \n\n\"She is getting enough,\" said Dante with a smirk. \"The new plane is her birthday present.\" \n\n\"Damn it Dante,\" Carlo said with a scowl. \"Now Gina's going to want something besides the new SUV she ordered.\" Gina slowly turned her head towards Carlo and glared at him and he quickly said, \"And she would deserve everything she asked for, she's a wonderful mate and mother.\" \n\nAnthony was laughing as he said, \"Nice recovery Dad, but I think she's still mad.\" Carlo gave Gina a lopsided grin and she turned away from him, but not before he saw her smile. \n\nRic and Rocco handed their card to Rose and said their daughters resembled Sophia and Maria and also liked bright colors and to spend around $5,000. Luc gave his to Annie and told her to get Nonna casual outfits yet definitely American in design and he had no limit. Ric looked at him and said in a sarcastic tone, \"Of course you have no limit; Nonna will pay your bills when we get home.\" Luc didn't say anything just smiled which infuriated Ric. \n\nKnowing the girls didn't want their intendeds to see their outfits before their dates, Rose said, \"Dante, why don't you take Anthony, Alberto, Vin and Dom with you to get the boys things. Everyone else will come with us.\" \n\n\"As long as my intended stays safe,\" said Anthony with a scowl. \"Sophia, I want you to keep the bond open in case you need me.\" \n\n\"I'm going to be with my family plus your parents, I think you can relax,\" Sophia said as she rolled her eyes. \"Now go, we have a lot of shopping to do.\" \n\nFour hours later, they were finally done. The Millers had gotten their other three pairs of shoes, ten outfits, swimsuits, a winter coat and their first pocketbooks with matching wallets. Sophia and Maria had gotten outfits for their dates plus several others and Gabby had gotten several outfits that Sal helped pick out. Gina, Rose and Annie bought everything on the lists and there were so many bags the men had to make several trips to the vehicles because they couldn't carry them all. They met in the parking lot and when Dante saw the bags he said, \"If the other men have as much to bring back, we are going to need a bigger plane.\" \n\n\"I had the clerks pack the clothes in boxes, this way they won't wrinkle,\" said Gina as she handed back his credit card. \"Here are the receipts, I spent a little more than the budget but there were so many cute outfits I couldn't make up my mind.\" Dante shrugged since he had spent more then that on each of his sons. \n\n\"I remembered why I hate shopping so much,\" muttered Carlo as the boys agreed. The caravan drove to the Millers and the boys carried the bags inside and Vin and Dom reminded Brianna and Morgan they would be there at 6 PM to pick them up. Carlo, Gina and Dante went to The Manor House and the Moretti's followed the Carlucci's back to Frank's house. The boys changed into their board shorts and dove into the pool while the girls went to Sophia's bedroom. \n\nFor her fourteenth birthday Rose had re-done Sophia's bedroom, turning it from a little girls room into a room for a young lady. An antique mahogany bedroom set complete with a four poster queen sized bed complimented the lilac painted walls with white trim and the purple and flower printed patchwork quilt with matching curtains, shams, dust ruffle and bed linens. Mahogany frames with pictures of her family and Anthony were scattered along the wall and a mahogany bookcase was on the wall between her walk in closet and the door to her bathroom. \n\nGabby sat in the vanity chair, Maria lay on the bed propping her arm with a pillow and Sophia flopped in the bean bag she refused to let her mother throw away. The girls laughed as they recounted the exasperated looks on the boys faces as they tried on outfit after outfit. \"I know we bought some stuff, but most of the stuff we tried on was for Alpha Dante, Ric and Rocco so it wasn't our fault,\" Sophia said with a laugh. She looked at Maria, \"At least you didn't have to be a walking mannequin, you got to sit in a chair at the doorway of the changing room. I'm exhausted.\" \n\n\"Did you see Lorenzo's face when Erin was trying on her outfit for her date?\" Gabby asked with a laugh. Sophia put her finger to her lips and walked to the door, looking down the hall before closing it. \n\n\"I know, he was boiling mad,\" Maria said with a grin as Sophia sat back down. \"He growled when she came out of the dressing room if her clothes were too low cut, too tight or too short. Damian was just as bad. When Caitlin came out in that purple dress that was a size too small I thought he was going to lose it.\" \n\nGabby snorted as she said, \"He did lose it, he screamed at her to get back in the changing room and to stop wearing clothes from the children's section.\" \n\nSophia looked at Maria as she laughed, \"You're a bad sister, telling them to go out in clothes you knew didn't fit to get a reaction out of your brothers.\" \n\n\"I know, but they deserve it,\" Maria replied with an evil smile. \"And Gabby was just as bad, telling Caitlin and Erin in a loud voice how much Patrick and Bob would like them in the dresses they finally picked.\" \n\n\"What about what Sophia did?\" asked Gabby with a big smile. \n\n\"My brothers deserve it,\" Sophia responded with an evil laugh. The girls started laughing so hard tears were rolling down their faces. \n\nThe boys were quiet as they threw a football around the pool, Lorenzo had been angry and Damian on edge since they'd been at the mall. \"Did you see how tight...\" Lorenzo started to say angrily but stopped when he saw Anthony point to his head. He nodded before continuing, \"the dress was that Erin had on? It looked obscene. And the dress she's going to wear on her date with that fucking bastard? She looked beautiful in it, he doesn't fucking deserve to be with her.\" He threw the ball so hard at Victor that after catching it, he had to shake his hands. \n\n\"Caitlin too, who the fuck picked out the clothes for her to try on? I swear to Luna, they had to come from the children's section, they were too tight. I felt like running over and covering her up so nobody could see her,\" Damian ranted as he caught the pass Victor threw. \n\nVin, Dom, Anthony and Alberto looked at the boys and said, \"- didn't get anything too tight, did she?\" Each boy had inserted the name of their intended in the question and when they realized what they did they burst out laughing. \n\nMichael shook his head and smiled, \"They looked beautiful, but we're not going to tell you what they bought, you have to wait and see.\" \n\n\"So, what did you decide to do for your first dates?\" Angelo asked as he leaned against the side of the pool. \n\n\"We're going to Carmelo's since the girls want authentic pizza then we're going bowling since they've never been,\" said Dom with a smile. \n\n\"How are they going to bowl in dresses?\" asked Gino with a frown. \"Especially dresses as short as the ones they bought?\" \n\n\"WHAT THE FUCK ARE YOU TALKING ABOUT? YOU SAID THEIR DRESSES WEREN'T SHORT,\" Vin hollered glaring at his brother while Dom growled. \n\n\"Back off, don't get mad at me. And you asked if the dresses were tight, you didn't ask anything about the length,\" Gino said as he got out of the pool as Vin and Dom chased him. The other boys looked at each other with knowing smiles. \n\nTwo hours later, Vin and Dom pulled into the Millers driveway. Vin was dressed in Levi's, a blue and white striped rugby shirt with the sleeves pushed to his elbows and Timberlands; Dom was dressed in faded Levi's, a white Polo shirt and Doc Martens. \"If their dresses are too short, we'll do something besides go bowling,\" said Vin with a scowl. \"I won't have my mate bending over in front of other guys.\" \n\n\"You've said that like a hundred times, like I want my mate doing it,\" Dom said with a frown as they walked towards the front door. \"If it was up to me, we wouldn't even be going out in public; I don't want anybody looking at my mate.\" \n\nDom stepped forward and was about to knock when Papa Mike opened it and made a point to look at his watch as he said, \"Right on time. Come on in the kitchen, the girls are almost ready.\" \n\n\"I baked some brownies, would you like some?\" asked Nana Ellen with a twinkle in her eye. \"We tried a new recipe with cream cheese and cherries.\" She laughed as Vin and Dom raced to sit at the table as she handed them plates. \n\n\"These are really good,\" said Vin as Dom nodded in agreement. \"You're going to sell them in the bakery, right?\" \n\n\"That's the plan,\" said Todd as he walked into the kitchen. \"We signed the papers to buy the building. Now we need to go over the design concept with your Dad and uncle then start the build-out.\" \n\n\"We'll be here early Sunday to cut the firewood, the others are coming too. We figured it'd be a good workout instead of lifting weights,\" said Dom with a shrug before smiling at his father in law. \"We're finishing our run here, so figure for us to get here at 6...and we'll be hungry.\" \n\nPapa Mike started to laugh as he said, \"You boys are always hungry. I've never seen boys eat as much as you all do.\" \n\n\"It'll slow down when we finish growing,\" said Vin as he finished his third brownie. \n\n\"Or at least that's what Dad's hoping, he says he's going broke every time we get groceries,\" said Dom with a laugh which died quickly when they scented their mates approaching. Where they were sitting they couldn't see them but as soon as they stepped into the kitchen, both boys stood up, their mouths dropping open. Brianna was in fuchsia capris, a white silk shirt with a fuchsia and black swirl design and Keds with white lace socks. Morgan was wearing peach capris, a white t-shirt with peach fabric flowers around the neck and Keds with white socks. Both girls had their hair in braids with matching ribbons woven through. \n\n\"I'm going to fucking kill you when we get home Gino,\" said Vin to his family. \"The girls aren't in dresses, they're in capris. You had us worried for nothing.\" \n\n\"I know,\" Gino said with a laugh. \"Maria, Sophia and Gabby told them not to get dresses since they were going bowling.\" \n\n\"So all of you were in on it?\" asked Dom angrily. \n\n\"Yeah, but it wasn't our idea, but I wish it would've been. It's classic,\" said Damian as he laughed. \n\n\"We'll talk about this later,\" Vin responded with a snarl. He took a deep breath to calm down before he and Dom walked over to the girls and he pulled Brianna tightly to his side as he leaned down and kissed her gently. Dom held out his hand and when Morgan placed her hand in his he smiled before leaning down so she could scent him. He knew allowing her to scent him would put her at ease and he barely suppressed his growl when she bared her neck to him after she was done. \n\n\"We ready to get this show on the road?\" asked Matt with a smile. \n\nThe girls said they'd be back and ran upstairs and Vin looked at Todd who said quietly, \"They forgot their pocketbooks; they've never had one before. We had a big discussion earlier about what they should have in there; so I gave them $20, they have their school ID's, cell phones and some makeup.\" \n\nDom nodded and said, \"We'll make sure they don't leave them.\" He looked at Matt and Phil saying quietly, \"I'd like to thank you for agreeing to chaperone. I know it'll put them at ease rather than having my family with us, especially Morgan.\" \n\n\"It's no problem,\" said Phil with a gleam in his eye as he looked at his brother. \"We figured you'd rather have us than him.\" Vin and Dom didn't answer but smiled making Papa Mike and Nana Ellen laugh. ",
        "\"Okay, we're ready,\" Morgan said softly as she walked into the kitchen. \n\nTodd, Holly, Papa Mike and Nana Ellen hugged the girls goodbye and Holly said, \"They're your mates and they'll be overprotective but they'll want to make you happy no matter what, so relax and have a good time. Remember to listen to the boys, Uncle Matt and Uncle Phil if they sense danger.\" \n\nTodd looked at Vin and Dom giving them both a glare as he said, \"You'd better take good care of my daughters.\" \n\n\"We will Sir,\" they said at the same time before Vin said, \"We'll have them home by 11.\" Todd nodded and walked them to Matt's SUV watching as Vin and Brianna got in the third row and Dom and Morgan in the middle. They waved before pulling away and Todd stared at the end of the driveway for several minutes. \n\n\"They'll be fine,\" said Papa Mike as he put his hand on his sons shoulder. \"They have their mates and their uncles with them.\" \n\nTodd sighed loudly before saying, \"I know Dad, but they'll always be my babies. Erin and Caitlin are going on their first dates tomorrow and before you know it, somebody'll be making declarations for them too.\" \n\nPapa Mike shrugged and said, \"That is the way of our life. So far Luna has given you two strong son in laws and aligned you with a powerful family that will protect the rest of our family. We have truly been blessed by her.\" Todd nodded and his father continued, \"Now, let's go inside and work on the plans for the store a little more. Your mother is getting anxious and so is your mate.\" \n\nAt the Carlucci's, dinner was being served; baked ziti, with platters of meatballs, sweet and hot Italian sausage, homemade garlic bread and salad. The youngsters were laughing while they discussed what movie they were going to watch and the adults talked quietly about everything that happened that week. \n\nThe drive to Carmelo's was quiet for the first few minutes and Phil sensed the girls anxiety and asked, \"What do you want on your first authentic pizza? Mushrooms, green peppers, black olives, onions, sausage, pepperoni, meatballs?\" \n\n\"Do we have to pick one?\" asked Morgan quietly. \n\n\"You can have whatever you want. We'll order six pizzas with different toppings so you can figure out what you like,\" Dom answered as he reached over to hold her hand. Seeing the confusion on her face he said, \"Vin and I eat a whole pizza each and my favorite is a Supreme, that's one with everything.\" \n\n\"Sounds good,\" said Vin as he nuzzled Brianna's neck. \"What do you want?\" \n\n\"Meatballs and green peppers,\" she replied with a giggle. \n\n\"I think I'd like to try pepperoni and black olives, if that's okay,\" said Morgan as she looked at Dom with a questioning look. \n\n\"Whatever you want, you'll get,\" he replied again and felt his wolf lie down and roll over baring his belly to its mate. Twenty minutes later Carmelo was placing a large Antipasto in front of them and Dom and Vin made sure their mates were served first. Explaining what the various meats and cheeses were, they watched their reaction and noted what they liked and didn't like. \n\n\"Your pizzas will be out in twenty,\" said Carmelo as he smiled at Matt and Phil. \"I see you got stuck with chaperone duty.\" \n\nMatt smiled at his mate and said, \"We were planning on having date night anyway because we'll be busy the whole weekend, with the football game and then cutting wood for the family on Sunday.\" \n\nCarmelo nodded, \"Tell Todd my boys and I'll be there to help. I'll bring thirty pounds of sausage patties.\" Matt nodded and Brianna and Morgan eyes got huge as Vin and Dom laughed. \n\n\"We eat a lot,\" said Vin with a shrug as Carmelo laughed before walking away. \n\nOn schedule their six pizzas came and Morgan gasped as Dom put one slice of each on her plate. \"You don't have to finish them, just try them to see what you like,\" he whispered. She looked at her sister and saw Vin had done the same thing for her and she watched Dom, following his motions before taking a bite of each. \n\n\"The Supreme is my favorite but I don't like the mushrooms,\" she said and Dom took the rest off her plate and gave her two more slices of the Supreme after taking the mushrooms off by hand. She saw Vin doing the same to Brianna leaving her with the pepperoni. Wondering how accommodating he would be, she said, \"I like the bread sticks too.\" Without a word, he gave her the breadsticks from his plate. \"I thought the Supreme was your favorite? I don't want to take it from you.\" \n\n\"It is, but if you like it then that's what you'll get,\" he replied as he finished another slice of four cheese while he watched carefully making sure she had enough to drink and eat. \"Next time, we'll order it without mushrooms.\" \n\n\"Momma was right; they will do anything to make us happy. He gave me his favorite pizza and his breadsticks,\" Morgan said happily to her sister. \n\n\"I told you the same thing,\" replied Brianna. \"But remember what else Momma said, not to take advantage of it and to make sure they're happy too. That's what mates are supposed to do.\" \n\nMorgan glanced at Dom and he whispered, \"I didn't have a chance to tell you how beautiful you look.\" \n\n\"You do too...I mean you look handsome,\" she said with a shy smile. \n\nBrianna pushed against Vin's shoulder and said in a teasing voice, \"You didn't tell me I look nice.\" \n\n\"I thought I showed you how much I liked your outfit in the SUV,\" said Vin with a grin as she blushed while Matt choked on his drink. \n\nAs soon as he was able to talk, Matt said, \"I'm going to pretend I didn't hear that or see the two of you in the rear-view mirror.\" Brianna's face got even redder while Vin laughed and Dom stared at his mate wondering how long it was going to be before he could kiss her, both he and his wolf couldn't wait. \n\nMorgan could feel his gaze on her and took a deep breath before laying her head on his shoulder as she snuggled into his chest. She felt his sharp intake of breath as he brought his arm around her shoulders and kissed her gently on the forehead. Tingles raced along her skin and she heard his growl before he whispered, \"Mine.\" \n\nShe nuzzled his neck and whispered, \"Mine.\" Feeling the low growl reverberate through his chest she closed her eyes as a feeling of safety and love rushed through her before an image of that night flashed through her mind. Feeling her tense and correctly guessing what she was thinking, Dom whispered, \"I will never hurt you, you mean everything to me Zenzero. Remember what I told you the day we met, that making you happy and keeping you safe are the number one priorities in my life and that will never change.\" Hearing the sincerity in his tone and knowing her wolf trusted him Morgan started to relax and continued to scent him. \n\n\"You okay sweetie?\" asked Phil with a concerned look on his face. \n\n\"Just bad memories Uncle Phil, but Dom chases them away,\" she replied and turned slightly so she could reach for her uncle's hand. Feeling him squeeze it, she calmed down even more knowing she was surrounded by people who loved her. Sensing peace flow through her Dom looked at Phil and mouthed 'Thank you', Phil nodded and didn't let go of her hand, knowing she needed it to ground her. Dinner continued while they talked about the football game, but Morgan didn't move from her position, holding onto her uncle's hand while being held by her mate. \n\nCarmelo and his staff cleared the empty dishes before he came back and said, \"Do you want dessert or anything else?\" \n\nPhil shook his head and said, \"I think we're done. Could you add this to our tab?\" Seeing Vin and Dom ready to protest he said, \"Let us pay for dinner, we'll never have little ones so the girls are the closest thing we'll ever have.\" \n\n\"Thank you,\" said Vin with a smile. Matt and Phil nodded and minutes later they were in the SUV on the way to Bellucci's. \n\nAt the Carlucci's, the youngsters decided to swim before watching a movie and Alberto sat on a chaise with Maria since she couldn't get her cast wet. Sophia and Gabby came outside after getting changed and Gabby laughed as she saw Sal flexing as he compared muscle size with Damian. \"Nice chest Salvatore,\" she shouted as she took her cover-up off and put it on a chaise near Alberto and Maria. \n\nRemembering the instructions to compliment her, he shouted back, \"You too.\" As the words were coming out of his mouth he realized what he was saying but couldn't stop. He froze and heard dead silence as everyone stared at him with their mouths open and he said, \"Oh damn...I ugh...you know I...well, I meant...Could somebody just fucking kill me now? Just put me out of my misery please.\" \n\nTo his surprise Angelo started laughing first followed by Alberto then the Carlucci's. He looked at Gabby and she was bright red, but had a smile on her face as she asked, \"You like my new bathing suit?\" \n\nSal gulped loudly as he looked at her in the gold and black one piece swimsuit and stammered, \"Ugh...oh... yeah...it...it looks...and uhmm ...and you look...well... yeah...and I mean...\" He took a deep breath covering his face with his hands as he muttered, \"Fuck my life.\" Looking at the other boys who were laughing hysterically he said, \"Help me. Somebody please help me for fucks sake, I've turned into a blathering idiot again.\" \n\n\"Tell her she looks amazing,\" said Marcus as he wiped the tears off his face. \n\n\"And the gold brings out the highlights in her hair,\" added Damian as he leaned against the side of the pool as he caught his breath. \n\n\"Take a deep breath and calm yourself down first,\" Anthony said as he sat down with Sophia on a chaise next to Alberto and Maria. \n\nSal took a deep breath and said in a rush, \"The gold brings out the highlights in your hair and you look amazing.\" Gabby beamed but before she could answer, Gino snuck up behind Sal and knocked him into the pool. Sophia, Maria and Gabby looked at each other and tried not to laugh as Sal came spluttering to the surface. \n\nWhen they arrived at the bowling alley, Vin and Dom bought Brianna and Morgan Dexter bowling shoes as Vin explained they bowled a lot and it was easier to have their own shoes. Seeing the admiring looks the girls were getting from other boys, Dom asked Tom Bellucci for a lane away from everyone and he agreed; he knew how jealous Vin and Dom would get if somebody approached their intendeds and he didn't want the boys to get into an argument or a fight on their date. After looking at the lanes he told them the two far right lanes were open, the family there was finished and putting on their shoes. Vin and Dom nodded and held the girls hands as they walked to the lanes, glaring at the boys who were staring at their intendeds. While they waited for the family to leave, Vin and Phil went to the lockers to get their shoes and bowling balls while Dom and Matt stayed with the girls. \n\n\"We'll spend as much time as you need teaching you how to bowl. The hardest part is getting your steps down and sliding. After you put your shoes on, rub them on the carpet to scuff up the leather on the bottom a little, it'll help you slide,\" Dom said continuing to glare at the boys who were now openly staring at Brianna and Morgan. He recognized them from playing sports against them and being part of the social scene around the Hagerstown area. \n\n\"Hey Carlucci, who're the babes? We haven't seen them around here before,\" Dom heard someone shout. He looked to the crowd of boys and saw it was Harry Weaver, the quarterback for South Hagerstown High School. \n\nDom stood up to his full height of 6'3\" crossing his arms over his chest as he replied, \"They're our girlfriends Weaver, show some respect.\" \n\n\"If something happens, I want the two of you behind me or Uncle Phil. Don't do or say anything to the boys, let your mates handle it,\" Matt said in a firm tone. He glanced around noting there were now forty boys gathered and said, \"Forget that, move towards me now, but do it slow so you don't distract Dom. He needs to keep his concentration on that crowd.\" He nodded with approval as Brianna and Morgan slowly made their way towards him. \"Phil, we need you out here now.\" \n\n\"Vin, get your ass out here now,\" Dom said angrily. \n\n\"Girlfriends, huh? Well, when you're done with them this evening, pass them this way,\" another guy hollered and the boys started to laugh and give each other high-fives and fist pumps. \n\nDom turned making sure his mate and her sister were okay and sensing his brother and Phil running from the locker room, he took a step forward saying forcefully, \"Shut the fuck up. I said they were our girlfriends; show some fucking respect before I beat it into you.\" \n\nSeeing Vin and Phil running towards them, some of the boys looked nervous, they had no wish to go against Vin or Dom let alone the two older men. Tom saw what was happening and called his sons, Robert, Duke and Jerome. They came running and Robert said, \"Is there a problem? If not, go back to your lanes, if you're not bowling then you can leave.\" The three brothers stood side by side next to Vin and Dom while Matt and Phil stood in front of the girls. \n\nThe crowd of boys looked at each other and Vin said, \"My brother told you we were on a date with our girlfriends. So, I suggest you leave. If you have something to say, say it in two weeks when we play each other and we'll settle it on the field.\" \n\n\"You're talking big Carlucci with all those older guys with you,\" said Harry Weaver as he narrowed his eyes. \n\nVin raised his eyebrow and said, \"And you have your whole fucking football team with you Weaver. Like I said, we'll deal with it on the field, when I have my brothers, cousins and the rest of my team with me.\" \n\n\"I'm sure Lorenzo would like another go at you. Don't you remember the party last spring in Williamsport when he broke your nose and knocked your ass out because you said you couldn't wait to date his sister?\" asked Dom with a smirk before his face broke out in a smile. \"And by the way, she's dating Alberto Moretti... I'm sure he'd be interested in hearing what you said about his girlfriend.\" \n\nHarry visibly paled and his voice was uneven as he said, \"She's dating Moretti?\" Vin and Dom nodded and Harry who didn't want to appear to be backing down said in a nasty tone, \"We'll see you in two weeks.\" The Carlucci's didn't say anything just stood there with their arms crossed over their chests. \n\nAfter the crowd of boys left, Duke looked at Vin and Dom and said in a teasing tone, \"It's always something with you Carlucci's, isn't it?\" \n\nVin and Dom laughed as they turned to check on their mates who were peeking around Matt and Phil. Seeing the boys gone and Duke and Jerome there, Morgan asked, \"How are Emory and Cynthia?\" \n\nDuke groaned and said, \"Emory insisted on coming here to help Dad do the books, but all she's done is sit at the snack bar eating chili cheese fries, cheese popcorn and nachos. I'll be up all night because she'll have heartburn.\" \n\n\"And Cynthia is sitting with her, eating her weight in hamburgers and fries since she doesn't have morning sickness anymore,\" said Jerome with a smile. \n\nMorgan looked at Dom and asked quietly, \"Can we see them before we leave?\" He nodded quickly and pulled her into his side scenting her deeply as he felt his wolf start to calm down. After thanking the Bellucci's again, the three couples went to their lanes where they changed their shoes and the next half hour was spent showing Brianna and Morgan how to bowl duckpins. Being Were's, they had natural athletic ability and soon were bowling as if they had done it their entire lives. Brianna suggested they start a game and Morgan suggested mates against mates; Brianna, Dom and Matt against her, Vin and Phil and the men readily agreed since they were competitive by nature. \n\nAnthony tilted his head back, followed moments later by the boys as he said, \"My parents and Dante are here, I wonder what's going on.\" Minutes later the French doors opened and the adults walked out onto the patio settling around the tables. Frank and Joe brought drinks for everyone and they started talking quietly while the youngsters shrugged and continued to horse around in the pool until they heard their Alpha say, \"Anthony, could you come up here please.\" Seeing the looks on the other youngsters faces Carlo smiled and said, \"The rest of you can join us too.\" They hurriedly dried off and joined the adults. \n\nHe looked at Sophia, Maria and Gabby and said quietly, \"I know you're probably anxious about what I told the adults today. I didn't want the Miller girls to find out about their friends in public and I wanted each parent to explain it to the younger ones.\" He grabbed his mates hands before he continued, \"The three girls who had been missing from their Pack were killed by Charles. I'm not going to tell you what happened to them, I'll only say after hearing what happened we are more determined than ever to make sure you stay safe. It'll be up to your parents if they give you details, but believe me you're better off not knowing.\" \n\nSophia and Maria looked to their parents and Frank and Joe were shaking their heads emphatically, and Frank said, \"There's no fucking way I'm telling you what they went through. I wish I didn't know, but as Alpha Carlo said we are more determined than ever to protect you.\" The girls nodded and burrowed deeper into their intendeds side while Gabby reached out for Sal's hand who squeezed it reassuringly. \n\nCarlo looked at them and said, \"This next part is confidential and I don't want you to talk about it until I fill the other Betas in then the rest of the Pack. I'll tell the Level 4's tonight and everyone else this weekend.\" They nodded and Carlo continued, \"Doc brought up an interesting point, one you need to be aware of when you're making your escape plans...He believes with the upcoming threat the birth rate will skyrocket in the next year.\" Seeing the looks of confusion on their faces he said, \"You know mates cannot survive without each other; but if the male dies and the female is pregnant or has little ones, their wolf will force itself to live to make sure the little one is safe since they're the last remaining part of their mate. He believes when their mates go into heat the younger men will make sure their mates conceive, not only to carry on their genetic line but to protect their mates so they don't die. It'll be instinctual with them, their wolf will take over.\" \n\nFrank sat back and sighed, \"I hadn't thought of that, but it makes perfect sense. A male Were is the most protective of their mate when they're pregnant and after the little ones are born.\" \n\n\"Doc's right,\" Annie said quietly as Rose and Gina nodded. \"But it won't only be the males; the females will want to conceive too. Knowing their mates will possibly die, they'll do anything to keep a piece of them alive.\" \n\nThere was silence as everyone thought of what had been said and Gina said quietly, \"It wouldn't surprise me if some of the other women went into heat also; those who had stopped years before, after their daughters had been born.\" Everyone snapped their heads towards their Madame Alpha and she shrugged, \"Think about it, their wolves know their entire family is in danger; to protect the bloodlines they may go into heat again to ensure the bloodline survives.\" \n\nCarlo stared at his mate for several moments and squeezed her hand, \"If Luna blessed us with a little one I would be overjoyed; but I don't want you to get upset if it doesn't happen. You and Anthony are all the family I need and when Angelica died...\" He stopped and stared at his son as he blinked away his tears thinking of his little girl and how much she had looked like Anthony. \n\n\"I know Carlo, you don't have to say anything,\" Gina said quietly as she laid her head on his chest. She felt his arms encircle her and burrowed deeper into his comforting warmth and sighed in contentment when she felt her sons arms encircle both of them. Everyone was quiet as they didn't want to intrude and lowered their gazes to give them privacy. ",
        "Minutes later Carlo cleared his throat but didn't let go of his mate and he held his sons hand as he said, \"Doc's ordering extra supplies for the anticipated births, for the clinic and the safe room. He's also ordering an ultrasound machine and more medical equipment, so we need to make sure the electrical system in the safe room can support them. Frank and Joe, if you think we need it, buy another generator. Rose and Annie, make sure there are extra supplies in the safe room; cribs, diapers, and whatever else you feel is needed. He also wants everyone to take classes to make sure if the women go in labor during the battle they have the proper care. I mean everyone...boys too.\" He smiled at the excited looks on the girls faces and started to laugh at the disgusted looks on the boys faces. \n\nEnzo nodded and said, \"We'll make sure to account for this when we make our plans Alpha Carlo. Gino, Paulo, Michael and I decided we would distribute duties and have regular meetings to change or update our plans as needed.\" \n\nCarlo nodded as he looked the four boys in the eye and said, \"I'm not worried, that's why I put the four of you in charge. You're Carlucci's through and through, you'll always do what you think is best for the Pack.\" \n\n\"Being a Rossi Alpha has always been made easier because we have always had your family standing with us. They have stood in front of us taking the brunt of the attack, at our side through the hard times and most importantly behind us to protect our backs from our enemies,\" said Dante as he looked at Ric, Rocco, Frank and Joe who sat up straight, basking in the praise from their two Alphas. He glanced at Carlo and Anthony before he said, \"Even if you all are incredibly stupid.\" \n\nThe four men, Dante, Carlo and Anthony threw their heads back and roared with laughter while the youngsters looked at each other like they had lost their minds. \"What the hell kind of compliment is that?\" asked Damian with a scowl as the men laughed even harder. \n\nDom watched his intended in amazement; gone was the shy, timid girl and in her place was a vivacious outspoken young lady who cheered, jeered and heckled everyone. He'd never seen her like this and wondered if this was what she was like around her family and if she was feeling comfortable enough around him and Vin to finally be herself. Remembering what Madame Gina had said about her personality before she witnessed the rape of her friends, he felt like he was finally seeing the real Morgan Miller and he was completely captivated. At the end of the second game he looked at the clock and said, \"We'd better go, we promised we'd have you home by 11, and it's almost 10.\" \n\n\"But we can't stop, we're tied, we each won a game,\" said Morgan putting her hands on her hips as she frowned at her mate. \"There wasn't a winner, we've got to have a winner and I know we were going to win next game and beat you.\" \n\nHe pulled her into his side and whispered, \"We'll finish next time, my competitive mate. I don't want to get your Dad mad at me for having you out too late and you said you wanted to talk to Emory and Cynthia before we left.\" \n\nMorgan let out a large huff, \"Okay, but I don't like it.\" She narrowed her eyes and took a step up, bringing them almost eye to eye, \"Admit it Dominic Carlucci, I was getting too good and skeered you.\" \n\nDom threw back his head and laughed as he said, \"Zenzero, last game I rolled a 168 and you had a 92. Yes, you were getting better but remember I was bowling with my left hand, if I was bowling with my dominant hand like you, I would probably have bowled a near perfect game. That would be a little suspicious so we always bowl with the other hand, just like when we play sports we always use the other hand or hold back on our athletic abilities. Appearances must be kept.\" \n\nMorgan thought over what he said and he saw the twinkle in her eye, \"I still think you were skeered.\" She turned and ran to her uncles and stuck her tongue out at him before she started to laugh. Matt looked down and saw she still had on her bowling shoes and reminded her to change shoes and get her pocketbook. She looked up and saw Dom holding her Keds and pocketbook and she burst out laughing and waited while he brought them to her. After Vin and Phil put their shoes and bowling balls in the lockers, the group went to the snack bar where Emory and Cynthia were sitting in the back corner away from everybody. \n\n\"How was the date?\" asked Emory excitedly. \"You two look beautiful.\" Cynthia motioned for them to join them at the table. \n\n\"Thanks, we went to Carmelo's then came here. It was so exciting and exactly what we wanted,\" said Brianna with a big smile as Morgan nodded. \"How are you feeling? Is the little one moving a lot?\" \n\nCynthia started to laugh and said, \"She thought she was in labor ten minutes ago, but it was gas from all the food she ate. You should've seen Duke, he was so nervous I thought he was going to pass out.\" \n\n\"She's finally over her morning sickness, so she's starting to eat everything in sight,\" added Emory with a smile. \"At two months, she's a third of the way through the pregnancy and the little one is starting to move.\" \n\n\"I can't wait until I have a little one,\" said Morgan quietly as she glanced at Dom who was standing with his back to them as his eyes raked the bowling alley. He heard her and couldn't help his body tensing as he thought of her round with his little one, but he didn't want to scare her by showing any other reaction. He could feel his wolf stand at attention at the thought of their mate having their little one and he started pacing back and forth. \n\n\"Are you going to the game?\" asked Brianna. \"Sophia, Maria and Gabby have been giving us extra practices so we know the routines, but we're nervous. I'm afraid I'll get up there and forget everything.\" \n\nEmory frowned, \"No, Alpha Carlo won't let any pregnant females, young ones or little ones off the territory. It's always been that way and this year all those deemed vulnerable will be in the safe room, he doesn't want to take any chances.\" \n\n\"But we'll be at the home game in two weeks against South,\" said Cynthia with a smile. \"We'll see you then.\" \n\n\"I'll be there, if I can fit in the car,\" said Emory with a grimace as she rubbed her stomach. \"I'll be two weeks away from my due date then. Right now he feels huge but Doc said in the last month he'll get even bigger.\" She looked at her stomach and laughed, \"I can't see how that could possibly happen, I'm enormous.\" She glanced at her stomach again and started to cry, \"I look like a beached whale, I'm a fat cow and my stomach is so big I'm going to burst open any second.\" \n\nBrianna and Morgan looked at each other unsure of what was going on, one minute she was laughing the next she was in tears. Cynthia leaned over and grabbed her hand and said, \"You're fine, it's just the hormones talking.\" \n\nDuke came running around the corner, \"Sweetie, what's the matter?\" \n\nEmory looked at him and said in a quavering voice, \"It's your fault I'm fat.\" \n\n\"I keep telling you that you're not fat, you're pregnant Sweetie. That's our little one in there and as soon as he's born you'll feel better,\" Duke said in a calm reassuring voice. \"Do you want some ice cream?\" Emory sniffed as she nodded and he came back moments later with a big bowl of vanilla ice cream with hot fudge and cool whip. He looked at the other three and asked, \"Do you want some too?\" They shook their heads and watched as Emory attacked the bowl of ice cream and asked for some onion rings to dip in it. \n\n\"We've got to go, we don't want to be late,\" said Vin quietly as the girls hugged and said goodbye. On their way out, the Bellucci men wished them luck; it was the first football game they had missed in years. Carlo wanted extra men left behind to guard those staying in the safe room for added protection, so it would be one of the smallest crowds ever going to Shenandoah Pack. Minutes later they were in the SUV, Morgan and Dom in the third seat and Vin and Brianna in the second. Morgan was quiet as she tried not to glance at Vin and Brianna who were nuzzling each others neck and whispering quietly before they started to kiss. \n\n\"Dom, can I ask you something?\" she asked in a voice so quiet he barely heard her as she glanced at her shoes. \n\nHe put his hand under her chin to turn her head towards him and answered just as quietly, \"You can ask me anything.\" \n\n\"Well, this kiss thing...you know uhmm, the first kiss...how would it...would I or you...\" she stopped talking as she looked deep into his emerald eyes and saw them dilate taking on an amber tint. She heard his low growl as a shiver raced up her spine and she held her breath as his eyes lowered to fixate on her lips. Morgan made a movement towards him but Dom wasn't sure if it was from the motion of the SUV or she was leaning in. His eyes moved to stare into hers, ready to pull back if he saw hesitation or fear, even if it would kill him. Seeing nothing but excitement and trust in the sparkling grey eyes, his eyes flashed amber and he groaned as he brought his head down slowly as their lips finally met. \n\nThe kiss was whisper soft, their lips barely touching but to Morgan it felt like Dom was branding her and marking her as his own and her wolf couldn't be happier; she was prancing back and forth in delight, her tail high in the air. The human part of Morgan was almost overwhelmed; his scent surrounded her, the heat radiating off him made her skin feel like it was on fire, the hand gently caressing her cheek was sending tingles racing over her skin and she felt light-headed from the combination of the sensations... but she didn't want him to stop. \n\nDom's wolf stopped pacing and sat down howling his satisfaction at being this close to his mate and he couldn't control the feral growl that came from within him. Feeling no resistance from his mate he slowly deepened the kiss, moving his lips with increased pressure back and forth until he felt Morgan relax her lips and slightly part them; this was what he wanted and what he had been waiting for. Not wanting to overwhelm her, he continued to go slowly as he gently tilted her head to a better angle as he ran the tip of his tongue over her lower lip before sliding his tongue into her mouth. Feeling her shudder he growled again as he rubbed his tongue against hers and felt her first timid response as she mimicked what he was doing. He felt her hands settle on his shoulders and he kept one hand firmly on the back of her head and the other fisted on his leg. \n\nLess than a minute later Morgan started to pull back and Dom instantly let her go and leaned against the side of the SUV as he took slow deep breaths. She glanced at him with a shy grin before she hid her face in her hands. Dom laughed quietly and sat up pulling her into his side as he whispered, \"That was even better than I thought it would be, it was absolutely amazing, beyond amazing.\" \n\n\"Are...are you going to be kissing me like that all the time?\" asked Morgan as she blushed bright red. \n\n\"I think your Dad might have some objections if we did that all the time, though I would like to...I'd really really like to,\" Dom answered with a growl. \"We'll kiss like that when we have some privacy and you can kiss me whenever you want to, I don't always have to be the one to start. But I'd also like to start kissing you like this whenever we want.\" He leaned down and kissed her gently on the mouth and was satisfied when Morgan sighed. \n\n\"I think I'd like that,\" Morgan said as she buried her head in his neck. \"I...I think I'd like to do it again, if you want.\" Dom didn't answer, growling instead as he brought his head back down to hers and started kissing her again. \n\nMatt glanced in the rearview mirror to check the traffic since he had to change lanes and saw both couples kissing. He reached out to hold his mates hand, \"Morgan's learning to trust again, my mate. I think after tonight we'll have a completely different Morgan to watch over, protect and love.\" \n\nPhil sighed as he squeezed Matt's hand, \"Dominic and Vincent are good for them, they can help them heal after the hell they went through. Just like we helped each other and our new family has filled the emptiness inside of us both.\" \n\n\"Always together, until the end,\" Matt said as he looked at Phil who nodded as he smiled back at his mate. They were five minutes from the Millers house when Matt spoke loudly, causing the couples to jump apart, \"Anytime you want to go out again, let us know. We had a great dinner, almost got in a fight, bowled two good games and were entertained by all the goings on back there on the way home.\" \n\nPhil turned in his seat and looked at the youngsters before he started smiling, \"Girls, you need to fix your hair and lipstick. Boys, you need to wipe the lipstick off your face and neck. Other than that, I think we're good.\" Morgan and Brianna dove for their pocketbooks to get their compacts to see what Phil was saying, while Vin and Dom laughed as they followed Phil's instructions. They pulled in front of the garage with minutes to spare before the curfew and Phil took a look at the girls nodding before they went into the house. \n\nThey were met in the hallway by Todd who examined his daughters with a critical eye and said loudly, \"Why are your lips swollen? Your lipstick's smeared too.\" Brianna and Morgan blushed as their hands flew to cover their mouths and their eyes were wide as they looked at the guilty expression on their mates. Dom shoved his hands in his pockets and Vin hunched his shoulders as he rubbed the back of his neck as both boys suddenly developed a fixation on their shoes. \n\n\"Todd Miller, leave them alone,\" shouted Holly as she came down the hall with a smile on her face. \"Don't you remember what it was like when we were dating? At the end of the evening you had on more lipstick than I did.\" \n\nHe glared at Vin and Dom who were looking everywhere but at him, \"That was completely different, you were my mate and THEY are my daughters.\" \n\nHolly rolled her eyes as she smacked Todd on the arm, \"Todd, even for you that doesn't make any sense. Brianna and Morgan are THEIR mates.\" \n\n\"Daughters trump mates,\" Todd said as he raised his eyebrow as Matt and Phil couldn't hold it in anymore and burst out laughing. Todd glared at them before he started to laugh, \"I'm losing my mind, and I think Luna giving me ten daughters has been payback for what I did when I was young.\" \n\nHolly said with a smile, \"Come in the kitchen, we have cake and cookies.\" At the mention of food, Vin and Dom quickly ushered their intendeds into the kitchen and got excited seeing the three cakes and plates of cookies on the table. \n\nVin noticed how quiet everything was and asked, \"Where is everybody?\" \n\n\"Asleep,\" Todd replied as he poured each youngster a glass of milk. \"With fourteen people in the house we have to wake up hours before everybody else to get ready. That reminds me, I need to talk to your Dad about getting a bigger hot water heater or adding another one, the one we have isn't big enough.\" \n\nVin and Dom nodded as Holly put a big slice of each cake on plates and handed it to them. She looked at the girls who shook their heads and instead grabbed a sugar cookie. After taking a bite of chocolate cake Vin said, \"I'll let him know, he can take a look at it Sunday. The Moretti's will be here to help too and Mr. M is bringing thirty pounds of sausage patties to help with breakfast. Mom is sending over two breakfast casseroles, so you'll have to heat them.\" \n\n\"What's a breakfast casserole?\" asked Holly as she took a bite of the vanilla cake. As Holly was talking to the boys, Todd looked at his brothers and asked them for details on how the date went and Matt and Phil made sure to let Todd know how protective and caring the boys were. \n\n\"It's two layers of buttered bread, hash browns, cheese, sausage, onions, mushrooms green peppers and she pours scrambled eggs over it and bakes it. She serves it with sausage gravy,\" answered Vin as he started to eat the red velvet cake. \n\nDom whispered, \"I'll make sure she leaves out the mushrooms.\" Morgan nodded; pleased he would think about that. \n\nTodd looked at the clock and said, \"Okay girls, time for bed. I'd like to talk with your intendeds alone.\" Vin and Dom swallowed noisily and walked their mates to the kitchen door giving them a kiss on their foreheads. As much as they wanted to kiss them, with their Dad glaring at them they figured that was better. \n\n\"We'll be here at 8,\" whispered Dom as the girls went down the hallway, with Holly closely following them as she asked them questions about how the date went. Vin and Dom glanced at each other and slowly walked back to the table. \n\n\"Sit down,\" Todd said in a menacing tone which didn't help the boys unease. Todd continued to glare at them for several minutes before saying, \"The reason I wanted to talk to you is we haven't told the girls about their friends yet. We talked it over and didn't want to ruin this weekend for them, with their first dates and the football game. But I'd like you to be there when we tell them Sunday evening.\" \n\n\"Yes Sir, we have training from 5 to 7, but we'll come right after,\" said Vin as he exhaled slowly as he glanced at his twin, knowing there was more coming. \n\n\"I understand you almost got in a fight protecting my daughters; made sure they ate well but most of all had fun. That's all a father could ask for, but I do have one request...don't slobber all over my daughters in front of me.\" Vin and Dom blushed bright red and nodded as Todd continued, \"I can see a lot of myself in the two of you; I know what I was like at that age and how I felt after I made my declaration for Hols and to be honest...it scares the hell out of me, they're my babies.\" \n\n\"I want you to know we'll always treat your daughters with respect and protect them Sir,\" Vin said in a firm tone. \n\nDom nodded and said, \"Madame Gina told me what happened with Morgan, and I want you to know I've let her dictate the pace of everything we've done, including our first kiss. I would never do anything she's not ready for.\" \n\nTodd nodded and smiled for the first time, \"That's all a father wants to hear. Now finish your cake and get the hell home. We've got a long day ahead of us and I understand since Shenandoah Pack is isolated, you'll be able to play against them full strength.\" Vin and Dom laughed and the five men sat and talked about football until all three cakes and the cookies were gone. \n\nVin looked at the clock and saw it was almost midnight, \"We've really got to go Sir. We'll be here at 8.\" Todd nodded and walked the four men to the door and watched the vehicles pull out of the driveway before locking and alarming the house. \n\nVin and Dom entered the house quietly, reset the alarm and noticed the light under the door to their Dad's study. After knocking, they waited for permission before entering and weren't surprised to see the men having a beer. \"How was the date?\" asked Frank with a smile. \n\n\"Good,\" Dom answered. \"Ate pizza, bowled, Weaver showed his ass and we almost got into a fight, took the girls home. Oh, and Nana Ellen made chocolate, red velvet and vanilla cake and cookies too...chocolate chip, sugar and oatmeal raisin.\" \n\n\"And she made brownies with cream cheese and cherries, one of the best things I've ever eaten,\" said Vin as he rubbed his stomach. \n\nThe men started to laugh and Ric said in a teasing tone, \"You go out with your beautiful intendeds and the only thing you talk about is what you ate?\" \n\nVin and Dom looked at each other and smiled as Vin said, \"That's all we're telling you bunch of degenerates. See you in the morning.\" \n\nThey were almost out of the room when Frank said in a loud voice, \"You might want to put some Spray 'n Wash on your shirts...it'll get the lipstick stains out.\" They halted in their tracks as the men burst out laughing. ",
        "As soon as they got in the laundry room, they took off their shirts, noticing the stains on their collars. \"No wonder Mr. Miller was so mad at us,\" said Vin as he began to laugh. \"I'm surprised Phil didn't let us know.\" \n\n\"It's on the side towards the back, he probably didn't see it,\" Dom said with a shrug before he started to laugh too. \"At least it's a light color and not bright red.\" \n\n\"Well Gentlemen, I'm going to bed, 4:30 comes bright and early,\" said Frank with a grimace as he got up and stretched. \"Ric and Rocco, the blankets and pillows are in the hall closet, Luc the crib is set up for you in the family room.\" \n\n\"Vaffanculo Francesco, (Fuck you Frank)\" said Luc in a haughty tone as the men started laughing loudly. \n\nAt 4:50, Frank, Joe and the Italians were at the pool house when the Moretti's and Rossi's joined them. The boys, except Damian, would jog around the side yard and do light weight work since they had the game. \"We've got to do this at a better time, I hate waking up so fucking early,\" said Carlo glaring at Frank and Joe. \n\n\"You whine worse then Luc,\" said Frank with a smile as he punched his mates cousin on the shoulder. \"Let's start, we're going to increase our pace, I want to do the ten mile run in forty-five minutes.\" The men groaned but didn't say anything as they followed Frank and Joe into the woods while the boys started their jog. \n\nAfter their workout, everyone showered and dressed; the girls in their cheerleading uniforms and the boys in their school uniforms plus ties. After breakfast, the boys loaded the SUV's with their equipment and at 8, they were pulling into the Millers driveway. Lorenzo and Gianni pulled their trucks to the side of the driveway since they would be riding with the others. Carlo said, \"Todd, you need these decals on the back windows of the SUV's, it shows you're from SMP. Did you fill both tanks like Frank said?\" Carlo handed him SMHS decals with the picture of the husky howling in front of the full moon. Todd nodded and put them on the back of the four new SUV's they purchased earlier in the week. \"Where are the girls?\" \n\n\"Inside with Holly and Mom fixing hair bows, adjusting uniforms and other shit I have no clue about,\" Todd answered as he rolled his eyes. \"We've been up since 5 and it's been a madhouse in there, Dad and I made sure we stayed out of the way.\" He looked at Sophia and Maria and thought of his daughters as he ran his hands through his hair and said to Frank quietly, \"Are you sure it's safe Frank? If you say its safe then I'll feel better.\" \n\nFrank nodded and said quietly, \"Shenandoah Pack...well I wouldn't call them allies, they're isolated and only follow Alpha Council laws because they have to.\" Seeing the look on Todd's face he shrugged, \"They're not enemies either, I'd say they were indifferent and we have protocols we follow when we leave our territory. Anthony and Carlo don't ride in the same vehicle in case something happens and since I have both future Alpha's with me, Ric and Rocco will be with us for increased protection. Your daughters will be well protected, we've taken extra precautions and paired the girls with strong fighters, this week we have the benefit of having the Italians here.\" Frank stopped talking as he saw Damian and Annie pull in the driveway. \n\n\"Is there anything you guys don't think of?\" asked Todd. \n\n\"We plan for everything and hope nothing happens,\" said Frank with a thoughtful expression as he watched Damian pull off to the side of the driveway. \n\n\"DOC GAVE ME CLEARANCE NOW LET'S KICK SOME ASS,\" he shouted as he ran over to Maria picked her up and spun her around before kissing her loudly on the forehead as she giggled. \n\nEveryone started to laugh at his excitement except for Alberto who was scowling. He pulled her gently into his side as he scented her and whispered, \"I don't like the scent of another male on you, even if it is your brother. I want you to make sure you wear my jacket or my sweatshirt so you carry my scent today.\" Maria remembered the conversation the night Anthony made his declaration and knew Alberto needed reassurance. She crooked her finger at him and when he bent down, she scented him and whispered in his ear, \"Mine.\" As he straightened up, he looked down at her, his eyes half-lidded as he growled out, \"Three years.\" Knowing what he was talking about her face flushed bright red and she giggled. \n\nHearing a commotion, everyone turned to see the Miller girls run out of the house chattering loudly as Nana Ellen and Holly followed making sure the door was locked and alarmed. It was the first time the Carlucci boys had seen them in their uniforms and their mouths dropped open, they were used to seeing it on their sisters but on the Millers it looked completely different; the blue pleated skirt with white trim ended 3\" above the knee and the blue short sleeve top with white decals came to the top of the skirt. They had matching ribbons in their hair, white ankle socks and white Nike cheerleading shoes with a blue swoosh. The four youngest had on SMHS white t-shirts with blue decals and matching blue capris. Vin and Dom moved immediately to their mates pulling them into their sides and scenting their necks, both boys glanced at Todd before placing a quick gentle kiss on their foreheads and Todd narrowed his eyes as Matt and Phil laughed. \n\n\"Fuck,\" Lorenzo said as his amber tinted eyes raked Erin from head to toe with a predatory gleam. Seeing the look he gave her made goose bumps raise on her arms and she smiled tentatively at him and when he growled her eyes widened as she took an involuntary step back. \n\n\"Fuck me sideways,\" echoed Damian as he zeroed in on Caitlin. \"Every guy at Shenandoah Pack is going to be staring at the six of them and I don't blame them. She's fucking gorgeous...I mean they're gorgeous.\" Caitlin, Erin, Kelly and Aislin jumped up and down in excitement when Sophia, Maria and Gabby ran up to them and he said with a snarl, \"Her skirt is too fucking short again and her top is too tight. What is with her and wearing children's clothes?\" \n\n\"Her outfit isn't any tighter or shorter than your sisters,\" said Alberto as he stared at Maria. Even though Doc wouldn't give her clearance to cheer, she still wanted to wear her uniform when she sat in the stands. He glanced at Ant and saw him staring at Sophia with an intense look on his face, \"What's the matter Ant?\" \n\n\"Damian's right, everyone will be staring at our intendeds. I hope I can control my wolf when we see others staring at what's ours,\" he replied as his eyes flashed amber. \"He's already on edge knowing his mate is leaving the safety of our territory and it won't take much to provoke him.\" \n\nMarcus walked over and nudged Ant with his shoulder, \"When you're not with her, we'll be by her side. Like we always have been and always will be.\" Anthony nodded never taking his eyes off his mate. \n\nFrank and Joe looked at the sheet of paper in Joe's hand before handing it to Carlo who nodded before saying, \"Fiona, Maeve, Gino, Enzo and Dante will be with me; Fallon, Shannon, Paulo, Michael and Luc with Todd; Maria, Kelly, Alberto and Marcus with Joe; Gabby, Aislin, Angelo, Gianni and Gus with Carmelo; Caitlin, Erin, Lorenzo, Damian and Salvatore with Matt; Brianna, Morgan, Vincent, Dominic and Victor with Papa Mike; Sophia, Anthony, Ric and Rocco with Frank.\" \n\n\"We won't be riding together,\" Sal whispered to Gabby as he frowned. \n\nGabby giggled and pulled out her cell phone and whispered, \"We'll text each other. Next week when we go to Parr Ridge, Gus won't be here, so hopefully you'll be able to ride with us then. And I remembered to bring your hoodie.\" \n\n\"Load up,\" announced Carlo as he and Gina moved to their SUV and minutes later they were on their way to the training center. The girls did most of the talking and in Matt and Phil's SUV, Sal sat in the third seat between Erin and Caitlin as all three texted Gabby. As they pulled in the parking lot Joe, Frank and Carlo counted the cars and Carlo said, \"Vinnie and Ed, where protocols followed? Did you have any problems with the seating arrangement sent out by Frank and Joe?\" \n\n\"All protocols were followed, we had no problems with the seating assignments, and everyone has their vehicle placements. Everything is ready Alpha,\" said Vinnie. \"I've also been to the safe room as requested, all the pregnant females, young ones and little ones are secure. George is there with Daisy and Jade, so he is in charge since he is the highest ranking Beta.\" \n\n\"Let's go,\" Carlo said and waited for his spot in the fifty plus vehicle caravan. \n\nFiona and Maeve turned and watched as each vehicle took their place. They were in the third seat with Gina so she could get to know them better. Seeing the questioning look on their face, she said quietly, \"Frank and Joe give each vehicle a position; they alternate between vehicles that carry females and those that don't. If anything happens, the vehicle filled with males will do everything possible to make sure the vehicle behind them with females escapes. If you notice in front of us and behind us we have extra vehicles; that is because Carlo is Alpha, and Mr. Frank's car is the same way because he has Anthony and Sophia.\" \n\n\"How long of a drive is it, Ma'am?\" asked Fiona as she continued to look out the back window. \"I'm sorry for not looking at you when we're talking, but I don't want to miss anything, since we've been here we haven't gone many places.\" \n\nGina smiled at the girls enthusiasm and her eyes met Carlo's in the rearview mirror, both thinking of their daughter. \"It'll take one and a half to two hours depending on traffic. As soon as we enter Virginia, we'll be met by their Betas who'll escort us to their compound, 'Hillside House'. The Pack doesn't allow any humans onto their compound and prefer to keep themselves isolated in the mountains.\" \n\nEveryone was quiet for several minutes as Maeve and Fiona continued to stare out the windows, before Dante said, \"We cannot wait to see the boys play football again. We have the NFL package on satellite but it is not the same.\" He turned and asked the girls, \"Have you ever seen a game in person?\" \n\nThey shook their heads and Maeve said quietly, \"No Sir, on Sundays when we were allowed to see Daddy we'd watch the Cowboys and he explained the game to us, he always said if we understood football then we would understand men. I always hated the end of the game because they'd take us away again and sometimes we wouldn't see Mommy and Daddy for days, maybe even a week. Daddy always said he wished we could do more when we were together but they wouldn't let us.\" \n\n\"They had guards at the door of the room so nobody would leave and we had to be real careful of what we said because they could hear everything,\" added Fiona with a shudder as she played with a fold in her t-shirt. \"We weren't allowed to use our bond to talk either, Alpha Davis and Charles forbade it but Daddy could do it, but he didn't do it often because he got real bad headaches and it made him sick.\" \n\n\"He would do it on our birthdays or if we were really scared, he would tell us he loved us,\" Maeve said in a voice so quiet they barely heard her. \"We tried not to be scared because we knew Mommy and Daddy would be worried but sometimes we couldn't help it.\" Gina reached out and held their hands squeezing them reassuringly as she looked at the appalled expressions on the others faces. \n\n\"Especially at night, in the dorm room,\" Fiona said quietly as her eyes became glassy. \"The guards would stand there and watch while we fell asleep. I didn't like that at all and sometimes if I woke up in the middle of the night they'd be standing next to our bed staring at us.\" Carlo opened his mouth to say something but closed it when he saw Gina shake her head. His hands gripping the steering wheel were white and he glanced at Dante and saw his hands were fisted in his lap. \"Daddy told us to hold each other tight when we were scared and if we felt we were in danger he'd come to us even if he got in trouble again...but we didn't want to see Daddy get hurt again, so we didn't let him know how scared we really were.\" \n\n\"After Morgan was hurt, Daddy said he'd find a way for us to leave, even if we had to run away. Daddy said he and Papa Mike would always protect us and make sure nothing happened, but we were still scared,\" Maeve said in a quavering voice. Gina let go of their hands and put her arm around their shoulders bringing them close to her as she surrounded them with love and protection as their Alpha Female, a woman and a mother, the girls instinctively responded as they burrowed into her side. \"Now we don't have to be scared because Alpha Carlo, Madame Gina, Alpha Dante, Uncle Matt, Uncle Phil plus Mr. Frank and Mr. Joe are watching out for us.\" \n\n\"And the Pack Maeve, don't forget the whole Pack,\" added Fiona as she reached over Gina's lap to hold her sisters hand. \n\nEnzo added quietly, \"We promise to protect you no matter what. More importantly we'll teach you how to protect yourself so you never have to be afraid again, but we'll always be there for you.\" A smile broke over his face as he continued, \"According to Hope, it only counts if we pinky swears.\" He held his pinky out and Gino did the same, both girls started to laugh as they pinky swore. Enzo gave a big sigh as he said, \"At least I didn't have to wear a tiara.\" At the girls confused look he said, \"Alpha Carlo, if I project what happened, can you send it to the girls?\" Carlo nodded, hoping it would cheer them up and within minutes the girls were laughing loudly as was everyone in the SUV. \n\nAs soon as the first vehicle crossed the bridge from Brunswick, MD into Virginia they pulled into a gas station parking lot where four black Chevy Suburbans were waiting. Gina said quietly, \"Alpha Carlo, Mr. Joe, Mr. Vinnie and Mr. G will get out and be officially welcomed onto the territory. Mr. Frank won't get out because if anything happens, he needs to get Anthony and Sophia out of harms way. We don't expect anything to happen, but it's the rules Frank and Joe put in place. Carlo may be Alpha but when it comes to security he always listens to them.\" \n\nSeeing the intense look on the girls faces, Gino said, \"Mr. G's full name is Ed Giovanni, but he likes everyone to call him 'Mr. G' because he says he doesn't want to be named after a horse.\" The girls looked at him in confusion and he smiled as he said, \"You know the old TV show with the talking horse? That was Mr. Ed.\" The girls started to giggle and Dante was roaring with laughter. \n\nMoments later everyone was back in their vehicles and the caravan started again, but with two new lead vehicles and two new vehicles bringing up the rear. \"Alpha Carlo Sir, May I ask you a question?\" asked Maeve quietly. \n\n\"Yes, Maeve you can ask anything,\" he smiled at her in the rear view mirror. \n\n\"Madame Gina said they welcomed you onto the territory and Daddy said something about having to get permission or it would be trespassing or something,\" she said with a frown. \"How did we get here without getting in trouble?\" \n\n\"Your Daddy and I discussed the best route to get here and I called those Alphas and informed them you were joining my Pack but were already under my protection. I told them to offer assistance if asked, but you were to be left alone otherwise,\" Carlo answered. \"I didn't tell them there were ten underage females; I only said it was a large family.\" The girls nodded satisfied with the answer and Carlo started pointing out interesting things as they passed through several small towns. \n\nLorenzo and Damian were slouched in the middle seat of Matt's SUV as they listened to Sal, Erin and Caitlin talk and laugh as they continued to text Gabby. Lorenzo was getting madder and madder by the minute and he couldn't figure out why. Finally, he couldn't take it anymore, \"What the fuck are you doing Sal?\" \n\n\"Nothing, we're texting Gabby,\" he replied as he glanced at his cousin. \"Why?\" \n\n\"First, you're annoying the hell out of me. Second, you're sitting entirely too close to them, I bet the Gabster wouldn't like to see you rubbing all over them. Third, you're annoying the fuck out of me,\" Lorenzo said with a growl which caused Erin and Caitlin to glance at him. \n\nSal flushed as he said, \"I'm not rubbing all over them, all we're doing is texting Gabby. And where would you like me to sit? On your lap? You're losing your fucking mind Lorenzo.\" \n\n\"Will the two of you shut the fuck up? I'm trying to get in the zone and all I hear is blah blah annoying me, blah blah texting, blah blah fucking annoying me, blah blah giggling, blah blah blah blah blah. Let me tell ya something, BOTH of you are annoying the fuck out of me, you're killing me here, you're totally blowing my concentration with the incessant whining,\" Damian said grumpily as he opened his eyes and looked at Lorenzo and Sal. \"I'm about ready to ask Matt and Phil to tie me to the luggage rack to get the fuck away from you two. It'll be windy, but at least it's not raining and I'll be able to work on my tan.\" \n\n\"Fuck off Damian,\" retorted Lorenzo as he turned to stare out the window seeing Erin in the reflection. His wolf became restless again, pacing back and forth and Lorenzo assumed it was because of the upcoming game but his eyes never left the beautiful girl he was watching. \n\nIn Rose's SUV, Frank tried to concentrate on driving but kept glancing in the rear view mirror to keep an eye on Anthony and Sophia in the third seat; Anthony's arm was around her shoulder and her head was pressed against his chest. They were both aware anything they said could be heard so they were talking through the bond which infuriated Frank; he wanted to hear what was making Sophia giggle and Anthony have a smirk on his face. \n\n\"Leave them alone. Don't you remember what we were like after you finally made your declaration?\" Rose asked as she smiled at her mate. \n\n\"That's exactly why I won't leave them alone,\" replied Frank with a snort. \n\nPaulo's hands flew over the laptop keyboard as he talked with Holly about the items the bakery would carry, operating hours, use of local products, but she didn't have an answer for the most important thing...a name for the bakery. Within thirty minutes he had a mockup for their website and the Millers were astounded as he explained he pulled pictures off the internet but after the build out was done, his mom would take pictures and he would replace them. \n\nJoe was trying to keep Alberto distracted and focused on something other than Maria by talking to him about his plans for college and starting Moretti's Fire Protection Services. Every time Alberto leaned down to whisper in Maria's ear, Joe would ask another question forcing Alberto's attention towards him. \n\nAnnie was glaring at him and said, \"I know what you are doing Giuseppe and you have to remember how you were after you made your declaration.\" \n\n\"That's exactly why I won't leave them alone,\" Joe replied with a snort. \n\nIn Papa Mike's SUV Vin, Dom and Victor were teaching the Millers Italian and listening to them with their soft Texas drawl was making everyone laugh. \n\n\"We're ten minutes out,\" Carlo announced to everyone. \"Keep your eyes and ears open and remember not to speak of the upcoming threat. I know I don't have to say this, but protect the girls at all cost.\" Maeve and Fiona looked out the windows as they drove down a paved road through a dense forest of trees. \"We're here,\" Carlo said and the girls focused their attention out the windshield. \n\nThey drove through a single lane gate and the girls turned to see a chain link fence with barbed wire atop it disappearing into the woods, after they drove another 500' they passed another gate with a similar chain link fence. The road widened to two-lanes with driveways branching off leading to log cabin style homes tucked into the forest. After driving for several minutes, there was a sharp bend in the road and Carlo pulled into a clearing next to a two story house with cedar siding and dark green shutters. He turned to the girls and said, \"This is the Alpha's house, the rest of the Pack live in the log cabin homes we passed. The large building to the right is the training center, the official welcome will be held there and later we'll have lunch there between games. Stay close and don't go wandering off, when you have to use the restroom make sure you take at least one adult with you.\" The girls nodded as they looked around with anxious yet excited expressions. "
    ],
    "authorname": "pocketbooklover",
    "tags": [
        "italian",
        "werewolf",
        "weres",
        "alpha council",
        "alpha-heir",
        "beta's",
        "conflict",
        "tribunal"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/south-mountain-pack-ch-14"
}