{
    "title": "Once Upon a Halloween Ch. 03",
    "pages": [
        "(Usual Disclaimer Time: All the characters in this story are 18 years old or older, and since we're living in the wide wonderful world of porno-land here, where clich\u00e9s roam free and things might get a little unrealistic from time to time, please remember it's all in good fun.)\n\n(Author's Note: As a reminder, this story is a limited series with a light canon, meaning that while the chapters will all be related by characters and location, it won't be explicitly necessary to read every chapter to know what's going on. Each chapter will be its own thing, and can be enjoyed independently. I hope you enjoy! I also want to give special thanks to fellow Literotica author and SYM reader Lil_kitty for many excellent ideas and acting as a second set of eyes on this story, and for letting me know what did and didn't work; if you get a chance, please check out her work and drop some stars if you enjoyed, she writes some very hot and fun stories.)\n\n***\n\nFor a small town with a modest population, Briar's Mill boasted three separate movie theaters that pulled a reasonable business from surrounding towns. The biggest was of course the multiplex at the Briar's Mill Mall, with ten screens and showing all of the most recent hits. At the edge of town was the Firecracker Drive-In, which was less a drive-in theater and more a large, weed-choked lot with screens on either side of it. The audio systems rarely worked 100%, and the movies they showed were generally six months out of date, but nostalgia kept it from ever shutting down entirely.\n\nIt was on Main Street, nearly perfectly in the center of town, where the pride and joy of Briar's Mill's theaters sat. The Camelot Theater, a single screen theater built back in the 1930s, glowed with flashing lightbulbs and neon lights as a beacon of cinema's fabled golden age. The seats inside were cramped, and the paint and vaguely medieval decorations had truly seen better times, but an avid fanbase of old-timers and hipsters alike kept it afloat when so many similar theaters had fallen. With a modern concessions booth and a mostly modern digital sound system and projector, it kept up with bigger theaters admirably, and attending a late night showing of the most recent big release or classic in need of some new attention had been a rite of passage for Briar's Mill youths for ages.\n\nOn Halloween night, rather aptly, it was airing John Carpenter's 1978 Halloween all night, a tradition the nostalgia audience had kept going for nearly a decade now. Enthusiastic audiences filled the theater to be scared by (or at least mock) the classic horror film, keeping all of those who worked the Camelot rather busy for the holiday.\n\nWell, most of them, anyway.\n\nSitting in the small, quiet projection booth, Sean Donner eyed the digital projector and made sure that, yes, it was still working. As opening credits rolled across the screen and the eerie synthesizer score played over the creepy image of a jack-o-lantern that floated ever closer to the camera, Sean made sure to join the audience in cheering Jamie Lee Curtis' name before getting back to 'work', even if that work meant babysitting the projector and making sure it didn't catch fire. The projection booth itself was spacious enough to be comfortable, since it was made to hold the many film reels of older days, but with those gone, it now had room for a couple of clean couches, a refrigerator, and a desk with a laptop loaded with games. Dressed in the usher's uniform of a long-sleeved, button up blue shirt and dark pants, he was ready for anything, and expecting nothing as on most nights. Ideally, he would have been watching the projector the whole time and ensuring that nothing went wrong, but since that pretty much never happened, he usually just had to wait for complaints.\n\nIt was the waiting that was the hardest part nowadays, because waiting meant that he was stuck with his thoughts, and all of his thoughts these days were stuck on Anna.\n\nHis hand hovered over his phone, tempted to once more pull it out and look at the two of them in happier times. He even pulled the phone out once, nearly unlocked the screen, but soon quickly pocketed it.\n\n\"She's moved on, you gotta move on too. That's the healthy way to handle this,\" he repeated, though finding it easier said than done.\n\nAnna was his first girlfriend. They'd dated for three months. She was pretty, and nice, and fun, and she'd made him feel handsome when he'd never truly felt it before. In the abstract, he knew it to be true. He had a decent face, not movie star good looks or anything, but at least memorable, with dark hair, striking blue eyes and a smile that could very nearly look confident. At just over six feet tall and being a guy who semi-frequently hit the gym with his friends, he knew intellectually that he wasn't bad looking, but it was Anna who actually made him feel that way and... to suddenly feel unwanted by the girl who'd built him up and he'd lost his virginity to... yeah, it was a definite hit to the ego.\n\nHe knew he carried his share of the blame. She wanted him to be around more, and he was working his ass off, saving up for college. He'd thought he'd be able to balance these two aspects of his life, but in the end, it just didn't shake out that way. Anna wanted more of his time than he was willing to give up, and in the end a breakup made sense.\n\nThat didn't stop his hand from finding the phone again, nor him wanting to plead to get her back. It was stupid, he knew it, and like Miguel always said, there were plenty more \"chicks in the sea\" (Miguel's bad metaphor, not Sean's), but it didn't stop things from feeling just a little bit hopeless. And he'd so been looking forward to Halloween...\n\nThe phone vibrated. Perhaps a little too quickly, Sean picked it up.\n\nIt was a text from Sadie.\n\nSADIE: Going to get revenge for you now. Wish me luck!\n\nSean scowled, but knew better than to try to stop his best friend once she set her mind to something.\n\nSEAN: Just don't hurt anyone.\n\nThat was probably too much to ask for, but he didn't know what else to do. Still, it felt nice that Sadie had his back, and it was with a smile that he put his phone away.\n\nThere was a knock on the booth's door. Getting up from his stool next to the projector, Sean straightened out his uniform and sighed, hoping that it wasn't the manager, Mr. Guinness, with some last-minute notes to give Sean. Mr. Guinness was, after all, taking the night off to be with family, but the theater having been in his family for generations made him an accomplished micro-manager. Leaving it in the hands of a bunch of high school students wasn't his dream scenario, but he trusted Sean well enough to captain the ship.\n\nSteeling himself for the potential confrontation, Sean unlocked and opened the projection booth's door.\n\nThankfully, Mr. Guinness wasn't there.\n\nThere was, however, a sheet ghost wearing a large pair of 70s eyeglasses over the holes. Knowing enough of the movie reference that the joke-player was going for, Sean sighed.\n\n\"Aren't you a little short to be Michael Myers?\" Sean asked the 5'4\" sheet ghost before turning back into the projection booth.\n\n\"You're not even a little scared?\" she protested, pulling off her costume and revealing his coworker, 18-year-old June Poole. A cute brunette with a bright smile and big green eyes, her mid-back-length hair was held back by a hair tie in a loose ponytail. Wearing a uniform shirt that always seemed slightly too tight across her immense chest, she had always had a way of catching people's eyes. When they'd first started working together, she'd always teased him for not looking at her chest, but the moment he began dating Anna she kept remarkably respectful for someone who considered themselves a practical joker.\n\nJune had been a good friend for him since the breakup, even though he knew he couldn't say that he'd been the same to her.\n\n\"Not even a little,\" he replied. \"You've come up here to hang?\"\n\n\"Yeah,\" the usher replied, closing and locking the door behind her and tossing her costume and purse on the floor before going over to plop down on one of the couches. \"The house seems in order, but if anything comes up, I'll stop it.\"\n\nFor a small girl, she had a remarkable talent for breaking up fights and kicking people out. Sean replied, \"I know you will.\"\n\nShe sighed. \"Not even a *little* bit scared? Do you have any idea what I had to do to find those 70s glasses? I had to do some terrible shit.\"\n\nSean laughed. \"Sorry. It was a good costume, though. You should've taken it out to the carnival.\"\n\n\"Woulda, shoulda, coulda,\" she replied. \"But you know me, no rest for the wicked, especially when the wicked wants to hit up med school.\"\n\n\"I hear ya,\" Sean replied knowingly. He wished that he could've hung out with June more outside of work, but with her going to school the next town over at Briar's Mill's dreaded rival school, that would have likely been more trouble than it was worth with some of his friends. She was a breath of fresh air in a world that could've used more fresh air, and only being able to get some of that fresh air at work was rather annoying.\n\n\"So, any plans for later? Any tricks? Treats? Trouble? Hot dates?\" June teased, reaching over and grabbing a Coke from the fridge.\n\n\"You know I don't have any of the latter,\" Sean said, hoping a joke would deflect the sick feeling in his stomach from thinking about Anna. It didn't. He continued, \"And as for any of the former... nah, I think it's all going to be sleep for me after this.\"\n\n\"What? You aren't going to take part in any of the Halloween fun your fair town has to offer?\" June asked. As someone who'd painted her nails in alternating orange and black and wore spider earrings, he understood that it was a favorite for her, but he just had a hard time putting into words how little he was looking forward to the holiday this year.\n\n\"Everything they set up for Halloween will be closed by the time we get off,\" he explained.\n\n\"So? Doesn't mean you can't make your own fun,\" June said.\n\n\"Like?\" Sean asked, feeling that picking her brain had to be better than lingering in his own.\n\n\"Well, we could sneak some beers into the hay maze after it's empty, or break into the old Higgins House, that place is supposed to be, like, actually haunted, right?\" June teased, smiling mischievously.\n\n\"You do know that I'm just superstitious enough to find that a bad idea, right?\" Sean asked.\n\n\"Fine, fine, I yield; you're gonna have a boring Halloween night,\" June sighed, taking a sip of her Coke.\n\nFor the first time in a while not thinking about what Anna might have been doing right now, Sean asked, \"Pass me one of those?\"\n\n\"Sure,\" June replied, reaching into the fridge and tossing him a Coke. He took the cold soda gratefully, cracking it open and taking a sip.\n\nLooking out through the window on the house and finding things looking orderly enough, he asked June, \"So, I'm sure you've only got fun stuff planned for after work? Any tricks, treats, or messy hot dates planned for what's left of your Halloween evening?\"\n\n\"Maybe,\" she said, shrugging. \"I try not to make too many plans, never know what might come up.\"\n\n\"Fair,\" Sean replied.\n\n\"I mean, we're here through the midnight showing and that means, what, all of us getting off at 2:30?\" June suggested.\n\n\"Yeah, that's about right,\" Sean groaned miserably, happy that it was a Saturday and not a school day he had ahead of him.\n\n\"So, yeah, for me it's probably driving home, getting out of this damned uniform, and masturbating until I pass out,\" June said, casual and completely uncaring of how it nearly made Sean spit out a mouthful of Coke.\n\n\"JUNE!\" he exclaimed, halfway between laughing and misery.\n\n\"Hey, you asked...\" she teased. June had always been one to freely talk about her sexual exploits at work in a way that had yet to be annoying, and though it still had some entertainment value, it brought Sean into thinking about Anna again quicker than he would have liked.\n\nIt must've shown on his face. June asked, \"Sorry, still raw?\"\n\nSlowly, Sean answered, \"A little. Sorry... doesn't exactly make me a lot of fun to be around, does it?\"\n\n\"Not really,\" June replied. \"But none of us are really fun after a breakup, so I won't hold it against you. Breakups fucking suck.\"\n\n\"Tell me about it,\" Sean replied, surprised by how happy he was to talk about it. It wasn't that he couldn't talk about it with his friends, but they were all so close to the situation, all wanting to do things and tell him how everything was going to be alright, it was like he was being smothered with their good intentions when he really just wanted to sort his own shit out. Being able to talk to someone like June who he saw less frequently... it was a good outlet.\n\n\"Would it make things any easier if I called her a bitch who didn't know what she was throwing away?\" she suggested.\n\n\"She knew what she was throwing away,\" Sean answered. \"As for the bitch part... yeah, I don't think that'd help...\"\n\nSorrow had overtaken his face, which put June into a thoughtful-looking state. She said, \"Alright, we've got a real challenge here, I can work with this...\"\n\nSuddenly, her face brightened. It was such a quick change that it might as well have been set off by a lightbulb appearing above her head. \"Would a distraction help?\"\n\n\"Probably wouldn't hurt,\" Sean admitted, exhaling. Honestly, a distraction sounded pretty fucking good right about now. He may not have been the most fun, happy-go-lucky guy at the best of times, but he wasn't one prone to wallowing either. Wallowing like this... it felt like shit, and Sean would've given pretty much anything to change that feeling.\n\n\"Okay, cool!\" she exclaimed, setting down her Coke and standing up excitedly. \"Now, close your eyes...\"\n\nFamiliar with these sorts of games that June liked to play so much, he followed her instructions and closed his eyes.\n\n\"This better not be another attempt to scare me,\" he said.\n\n\"It's not,\" June replied, her voice closer to him.\n\n\"I don't believe you,\" Sean said.\n\n\"Why?\" June said.\n\n\"Because you do this all the time?\" he said.\n\n\"Point,\" she replied, \"but I promise it's not that this time. It's something better.\"\n\n\"It's not one of those videos of guys getting hit in the balls, is it?\" Sean added. \"Not that those aren't funny, that's just not the sort of funny I'm into at the moment.\"\n\n\"Look, are you gonna let me get on with my fucking surprise, or aren't you?\" June said, annoyed.\n\n\"Sorry, sorry, surprise away,\" he replied, curious and a little scared all at once. He wouldn't put it past June to try to scare him even after she said she wouldn't, and if she did... yeah, he was going to make her pay.\n\n\"Okay, you can open your eyes now!\" she said, excited.\n\nPreparing for a scare despite all of June's promises, Sean braced himself and opened his eyes.\n\nThough what he saw was certainly surprising enough to almost knock him out of his seat, it didn't quite scare him.\n\nAfter all, how could anyone be scared by a pair of bare tits as big and perfect as June's? With her shirt unbuttoned to her stomach and the front of her bra pulled down, the creamy expanse of her full, round F-cup tits was only a matter of inches away from Sean's face. Her nipples were firm and thick, with dark, silver dollar-sized areolas that just begged to be sucked on. June looked down at him proudly, smiling a huge, cocky smile.\n\n\"So, what do you think? Distracted yet?\" June asked, putting her hands under her tits to better display them to him.\n\nDistracted... right, that was certainly a word to describe how Sean felt. Distracted was... definitely a word that existed. Shocked might have been a better descriptor for having a huge pair of tits suddenly shoved in his face, but when driven by surprise and what he was seeing, trying to find a better word than distracted was certainly a challenge.\n\n\"June... what are you... what...?\" Sean muttered, his mouth dropping open from shock at what he was seeing.\n\n\"Pretty sweet, right?\" she said, squeezing them and shaking them in his face a little. \"I figured since you were still broken up over your bitch ex that a distraction in kind would help get you out of your funk, and when my tits are so much bigger than hers, I thought I might actually be able to succeed. I did succeed, right?\"\n\n\"I... uh... yeah, that's definitely... distracting,\" Sean said.\n\n\"Well, duh, that was the goal,\" June replied, leaning close to get her tits even more in Sean's face. Her nipple was so close to his lips, all he'd have to do is stick out his tongue and he'd have it in his mouth...\n\nConfusion hit Sean like a truck. Why was his mouth watering? Why was his cock hardening? Oh, right, this was what lust felt like... he thought he'd forgotten his capacity for that feeling after the breakup, but no, it was there, it just needed the right key to unlock it...\n\n\"Wow...\" he said, angling his head to get a better look at them.\n\n\"I know, right?\" June said, amused, twisting from side to side slightly to give him a better view. \"One day they just started growing, and it's like they've never stopped since! Oh, and, yeah, you can play with them if you want.\"\n\nIt felt like his cock was about to burst through his pants at her words. \"Say what?\"\n\n\"Yeah, you can play with them all you want, squeeze 'em, suck 'em, do whatever you want, only be gentle, my nipples are really, *really* sensitive,\" June said, her voice cheerful and playful.\n\n\"You're joking... this is a joke, right?\" Sean said.\n\n\"Nuh uh!\" June retorted. \"I've wanted my tits in your face for a long time, just never found the opportunity 'til now. I mean, it works out great: you get distracted, I get my tits in your face, it's win-win!\"\n\nSean was torn. He couldn't do this, could he? Deep down, he was still hoping that things with Anna might sort themselves up and they could make another go of it. Beyond that, though, June was a coworker and his friend, and in the few jobs he'd had these last couple years, people who mixed work and fun almost always tended to regret it in the end. He didn't want to make anything awkward around the theater and risk fucking up his friendship with June all because she was pushing her massive, perfect tits in his face. He couldn't risk that, could he?\n\nLicking his lips, Sean said, \"Fuck it!\" and leaned in, taking one of her nipples in his mouth.\n\n\"Mmm, yeah, that's it, suck my nipple, like that...\" June groaned, running her hands through Sean's hair and holding him in close as he sucked on her tit. Though he may have started out a bit tentative, the moment his tongue started to rub against the hard nub of her nipple, he was lost. He suckled and licked, closing his eyes as he gave in to sensation. Her tit was so soft, so welcoming, so... perfect. It was unlike anything he'd ever dreamed of before, and having her to himself right now, just pushing away all of his fears and doubts and sorrows, fuck did it feel good.\n\nThat June was dirty-talking him the entire time certainly didn't hurt matters either. \"Fuck, your mouth feels so good on me... we should've done this sooner... I know you were trying to be a good guy, and I was trying to be respectful, but if that bitch was going to treat you like that I should've shown you these titties sooner- FUCK!\"\n\nThis exclamation came when he switched tits and gently nibbled on her other nipple. She groaned and squealed, then took his hands in hers and planted them firmly on her tits, making sure that Sean was massaging and getting to know every inch of them.\n\n\"Yeah, I bet Little Miss Anna liked it all nice and gentle... but I like it fucking rough and hard... like that, suck them harder, lick me, bite me, fuck yes... like that... forget about her, you deserve to have your own fun with a pair of huge tits on a tight body like mine... her tits don't compare to mine, do they?\"",
        "Though it was hard to answer her with a mouthful of tit, Sean found it surprisingly easy to murmur, \"No...\" before continuing to suckle and massage her epic breasts.\n\n\"I can tell,\" she said, running her hand over the bulge at the front of his uniform pants. \"My, my, my, Sean, you are a big boy, aren't you?\"\n\nAt the moment she touched his clothed cock, Sean's eyes flew wide open and looked up into hers. She looked down at him with a look of playful lust, but more than that, a great sense of caring. He was reminded that she was his friend, and all of the awkward landmines that might entail, but he didn't stop sucking her tits either.\n\n\"We can stop this here if you want,\" she said, her voice dropping down into her usual friendly tone instead of the lust-driven vixen she'd become. \"If you think it might be weird, I can stop, and we can just chalk this up to some craziness brought on by the holiday and emotions running high. I wanted to distract you, and it seems like it worked, and I don't want this to mess anything up any more than you do... but I could go further with this if you want to. I... I kind of want to go further. Wanted to for a while. What do you think?\"\n\nSean pulled his mouth from her tit and sat up straight, thinking about what she had said, and over every other thought that he had had tonight. Briefly, he looked out the projection room's window as the audience enjoyed one of many long scenes of Michael Myers stalking his victims from his car. They looked nice and orderly, unlike his own thoughts (though one that was quite clear was being happy that the window was tinted enough and the booth soundproof enough that nobody in the audience could know what they were doing). Looking back into June's eyes, he saw at once her lust and her earnestness, her big, bare, amazing tits, and that hopeful little smile she had.\n\nWrapping an arm around her back, Sean pulled June in close and kissed her, pressing his mouth to her full, firm and waiting lips. The kiss was experimental at first, but quickly became deeper, their tongues pressing against one another as they explored their each other's mouths. While his hands ran up and down her back, June reached back down to massage his cock through his pants, before she fumbled for his zipper and pulled it down, snaking her hand into his pants. Sean groaned as she explored, working around the side of his briefs before she wrapped her small, strong hand around his thick cock.\n\n\"Mmm, I was right... you are big...\" she groaned, stroking him gently. \"Come on... let's go over to the couches, it's gonna be way more comfortable over there.\"\n\n\"Okay,\" Sean replied, smiling serenely. He hadn't felt this good in, well, he couldn't really remember, so that probably said something. Though it took some mental effort to extricate themselves from each other, they did manage it enough to make their way over to the couch. Along the way, June stripped off her shirt and bra, leaving herself naked from the waist up. Her skin was creamy and pale, and Sean found himself wanting to touch every square inch of her. He almost managed that on the way over, but when they reached the couch, she playfully pushed him into a sitting position.\n\nKneeling on the couch next to him, she dropped to her elbows, her face now quite close to his cock. Seeing what she wanted, he unbuckled his belt and pulled his pants down.\n\n\"Shirt too,\" she said hungrily, pulling at the waistband of his briefs while Sean fumbled to remove his shirt. When he was finally bare-chested, June commented, \"Nice.\"\n\nFinally pulling his underwear free and revealing his cock, her eyes went wide and she said, \"*Very* nice!\"\n\nSean smiled. Though it didn't feel like he had much to be proud about lately, he did rather enjoy having a rather thick 8-inch cock. Standing at full attention from June's efforts, it looked even more impressive than usual, with the thick head already beading with precum.\n\n\"Why, is that all for me?\" June asked, her voice playful and innocent.\n\n\"I think you know the answer to that,\" Sean replied, moaning as she took her finger and rubbed it over the head, spreading the precum around.\n\n\"I do,\" she said, leaning in and kissing the tip, making him hiss with pleasure. \"I just wanted to hear it come from your lips. Want me to kiss it again?\"\n\n\"Yes,\" he replied, his voice weak as he watched the topless goddess, her massive tits swaying beneath her, leaned down and gave his cockhead a slightly longer kiss, feeling as her tongue rolled around him. She parted briefly, licking and kissing up and down his shaft before planting another long, lingering kiss on the head. Sean groaned at her worshipful attention, running his hand down her bare back. June shivered at his attention before looking back up at him.\n\n\"Admit it, you want me to do more than just kiss it, don't you?\" June teased.\n\n\"Yes...\" Sean said, weakly.\n\n\"Then all you have to do is ask,\" she replied, her voice singsong as she ran a finger down the underside of his shaft.\n\n\"Please, June... I'd like a blowjob,\" Sean said, his voice needy yet polite.\n\nJune laughed. \"Oh, come on, you can ask better than that.\"\n\nGrowling with need, Sean grabbed a handful of her hair and demanded, \"Suck my cock, June.\"\n\nHis voice was lower, darker than anything he'd ever said around Anna, but it was enough to make June smile brightly. \"You got it...\"\n\nWith that, she leaned in for one last kiss, but the moment her lips met the tip of his cock, they parted, allowing more of him into her mouth. The full head of his cock disappeared between her lips with ease as her tongue danced over it, making Sean groan with pleasure. Smiling around his cock, she began to bob slightly, taking more of his cock in her mouth with every bounce. It was impressive watching how easily he disappeared into her mouth, and how eagerly she took it, slurping loudly as she gave him an amazing and messy blowjob. Although she would do it, getting Anna to suck him was always a chore, and she was never that enthusiastic about it, but June took to it as if her life depended on it.\n\nWith her mouth taking almost all of his cock and the pleasure blinding him, it took a lot to clear Sean's head enough to wish to return the favor, but it was one he wanted to return quite urgently. Reaching under her toned stomach, he tugged at June's belt. She reached down just enough to help him undo her belt and zipper, enough that he could reach down and slide his hand under her panties. Through a thick bush, he soon found her steaming hot, and oh so wet pussy lips. With two fingers, he explored, feeling around until he found her clit before he pressed them in firm, swift circles.\n\nJune groaned lustily as he fingered her while she sucked him off, and the two of them spent a good long while pleasuring each other. Sean found it a very welcome escape from his thoughts, as for the first time he was truly free of worry over the theater, or of what Anna was doing. Where he once might have been wondering if she was out at a party, or the carnival, or finding some other fun to get up to on Halloween and wondering if she was missing him, here he was enjoying an amazing blowjob from a girl he cared a lot about.\n\nIt was... well, it was pretty damn perfect.\n\nPulling off of his cock for some air, June looked at him with a mischievous smile. She gently stroked his cock, then his balls, looking at it hungrily before back to him.\n\n\"I could finish you here like this... but that isn't what either of us wants, is it?\" June teased.\n\nMore than anything, Sean was certain he needed to cum, and would have said or done just about anything to do it. He groaned a formless, needy sound that only made her laugh with pride.\n\n\"Ditch the shoes, and the pants,\" she said, standing up and doing the same. He watched her pull her pants down her nice, round ass with some interest, kicking off her shoes with ease before she made a show of slowly pulling her black panties down her toned legs. Her bush was dark and quite full, but beneath it her pussy was quite pronounced, with swollen, moist lips that just begged to be worshipped.\n\nSean was considerably less graceful than her, kicking off his pants, socks and shoes, but he found it easy to get naked in a hurry with motivation like this.\n\nOnce they were both nude, June climbed atop him, never breaking eye contact as she leaned in for another kiss. With her heavy tits pressed against his chest and her legs on either side of his, he felt her lower herself, grinding her pussy against his cock slowly.\n\nBriefly, she dropped her eyes off to the side. \"I've liked you for a really long time, Sean... I don't know if you've caught that...\"\n\n\"I had a suspicion,\" Sean admitted. \"But Anna found me first.\"\n\n\"I should've made my move first,\" June said, pouting slightly. \"We'd have both been a lot better off.\"\n\nSean leaned in and kissed her, slowly, tenderly. He felt her tense slightly, her skin turning to goosebumps under his hands.\n\n\"Maybe, but, we're here now,\" he said.\n\n\"I know,\" she replied. \"And I don't want to mess anything up when we've come this far. I don't want to ruin this... and I sure as shit don't want to ruin Halloween... so I need to ask one more time. Are you sure this is what you want?\"\n\nThere was a time only a matter of minutes ago that Sean would have questioned if this was what he wanted, but in his current position there was only one possible answer.\n\nKissing her, he said, \"I want this more than anything.\"\n\nJune smiled, kissing him back and reaching down to grab his cock. \"Good.\"\n\nLining up his cock with her entrance, she began to settle down onto Sean. The width was a bit of an issue at first, and she grit her teeth as her pussy lips parted for him. Sean hissed as her tightness began to embrace him.\n\nAnd then he'd fully broken through. \"Oh, fuck!\"\n\n\"That good, huh?\" June hissed, moaning and trembling softly as she began to settle down onto him.\n\n\"That's one way of putting it,\" he groaned, arching his hips upward and pushing more of himself into her. \"Fucking amazing.\"\n\n\"Thanks... your cock, pretty amazing too...\" June moaned, leaning forward and pressing her tits against his face as she settled down further. Sean didn't need more encouragement and began suckling at them eagerly, rocking his hips up into her as she took his last couple inches. It was a beautiful agony, waiting to be fully enveloped in her, but once he'd made it fully inside, he felt a satisfaction greater than any he'd ever known. Being inside of June was, for lack of a better word, perfect.\n\nShe wrapped her arms around him, holding him close and keeping his mouth on her tits. Her breathing was already ragged as she tried to keep him close.\n\n\"Wow... just... fucking wow...\" June groaned, staying still as she got accustomed to his cock. Smiling down, trying to return with her sense of humor, she added, \"So... better than Anna?\"\n\nLooking up from her tits without taking his mouth off her nipple, Sean first answered her by sucking harder and nibbling at her sensitive nub. The he grabbed her beautiful, full ass in both hands, lifting her up and encouraging her to fuck him.\n\n\"I'll take that as a yes,\" June whimpered, putting her hands on the back of the couch for leverage as she began to ride Sean properly.\n\n\"Oh, FUCK!\" Sean exclaimed as June began bouncing furiously on his cock. He watched her body as she fucked him, the way her massive tits bounced and her ass jiggled in his hands, the way her face scrunched up and her clutching cunt took much of his length with each bounce. Though he quite wanted to fuck her as she was fucking him, in this position it was entirely June's show, and the way his cock felt inside of her, he was hardly going to complain.\n\n\"Yeah? You fucking like that? You like getting fucked hard?\" June grunted as she slammed down onto him.\n\nSqueezing her ass, Sean answered, \"I'd think that was pretty obvious by now.\"\n\n\"I bet... fuck that's nice cock... I bet Anna never fucked you like this... like you deserve... fuck...\" June moaned, pressing her tits against his face once more as she kept fucking down onto him. Reaching down, Sean could feel her rubbing her clit as she continued fucking him.\n\n\"No,\" Sean replied, his voice muffled by her tits. \"Never... goddamn your body is amazing...\"\n\n\"What a bitch... well, I'm gonna fuck you like you should always be fucked. This is what real fucking is like,\" June answered, fingering her clit even harder. Looking down at him, she squeezed her pussy walls around his cock, making him groan from her tightness.\n\nJune laughed, though her voice had gotten noticeably higher as her fingers quickened on her clit. \"Yeah, I like to keep my cunt nice and tight, but with a cock like yours, I don't know if I can keep it like... oh fuck, I'm cumming, I'M CUMMING!\"\n\nHer body was hit with a powerful jolt, and she jerked against him. She slowed her fucking as her legs nearly gave out beneath her, but still holding her ass and guiding her, Sean helped her ride out her orgasm. She shuddered and moaned, and the flood of juices from her coated his cock and balls messily, but through it all Sean couldn't help but look at her with the greatest fondness and care. Never in his life would he have imagined that he would be right here, like this, with June, but now he couldn't imagine being anywhere else.\n\nShe slowed down, giggling slightly and pressing against him, kissing him and smiling. \"So... you still haven't cum? I can't be doing that good a job distracting you then, can I?\"\n\n\"Oh, you're plenty distracting,\" Sean said, wrapping his arms around her and spinning her to the side. Without sliding out of her, he lay her on her back on the couch with him on top. June squealed in surprise, smiling up at him as he continued to fuck down into her. With her hair splayed out beneath her and her tits bouncing with his every thrust, she was truly a sight to behold. More than that, Sean was happy to be in the driver's seat; June had done so much to try to make him feel better, it was about time he showed her how much better he was feeling.\n\n\"Oh, fuck yeah! Like that! Fuck me like that!\" June moaned, wrapping her arms around Sean as he fucked into her hard. His hips were moving with blinding speed, giving her nearly all of his cock with every thrust as he let pleasure drive him. Common sense, memories of how he'd been feeling earlier, all of them left him as he was simply driven by a primal need to fuck the goddess beneath him.\n\nHe could feel it coming on, his balls swelling with need as they bounced against her ass. While that didn't stop him from fucking her harder, it did make him very aware that he was fucking her without a condom.\n\n\"I need to... gonna cum soon... where should I...?\" he asked.\n\nPlayfully, June locked her heels behind his ass and pushed him further, before releasing him. \"While I'd love a nice creampie... I want you to paint my fucking tits...\"\n\nThe simple thought of it got him harder, made him fuck her deeper... but he was reaching the end of his rope. When he reached the point he couldn't hold back any longer, he pulled out and, straddling her body, crawled over her until his cock lay against her tits. Jacking himself furiously, he looked down at June as she opened her mouth wide and stuck out her tongue as a perfect landing target.\n\nThat was all he needed. Groaning, Sean came and came hard, the first blast ricocheting off her left tit and splashing against the side of her face. More shots soon landed between the valley of her tits, properly drenching her from her neck to her lips, while he soon began aiming, making sure to give her perfect breasts the same worshipful treatment. When the bursts finally became a matter of drops, he rubbed his cockhead against her nipple, causing both of them to groan as their sex had come to an end.\n\nPanting, Sean looked down at his painted coworker and found himself wondering just who they were. Earlier in the day, he'd been an emotional mess and she'd just been his friend and coworker. He hadn't been looking forward to Halloween as much as he'd hoped to, and then, this...\n\n\"That was...\" Sean said, trying to find words adequate enough to sum up what they had just done and finding himself wholly inadequate. \"...wow!\"\n\n\"Tell me about it,\" June laughed. \"I just had *that* cock in me. It's bigger than it looks, and it looks pretty fucking big.\"\n\n\"Thanks,\" Sean replied, rather enjoying the compliment. \"Your pussy's, well, it's really tight.\"\n\n\"Oh, I know it,\" June replied. \"But thank you. Pass me a roll of paper towels?\"\n\n\"Right!\" Sean said, a little embarrassed as he remembered just what state she was in. Climbing off of her, he grabbed a fresh roll of paper towels from on top of the refrigerator, tore one off for himself and then passed it to June, who tore off some sheets to begin cleaning herself off.\n\n\"We're gonna have a helluva time cleaning this mess up after,\" June said.\n\n\"We'll make it work,\" Sean said, cleaning off his cock and finding himself decidedly unworried about what Mr. Guinness thought about what had just happened here. He was having a good night, and he wasn't going to let anything mess with that. Remembering just why he was here, Sean wandered over to the projection window and glanced at the audience outside.\n\n\"How's it going out there?\" June asked, sitting up. Her legs were wobbly, but she smiled giddily as she ran her hands over her now clean, but still very well-fucked body. Sean clearly wasn't the only one having a good night.\n\n\"The usual. People enjoying watching a bunch of 70s kids getting stalked and picked off by a masked maniac all because they committed the cardinal sin of wanting to be young and horny,\" Sean said, looking around the room, then back to June. \"Makes me glad we don't life in Haddonfield. And that this room is soundproof.\"\n\n\"Right? I'd like to spend my Halloween getting laid and not getting killed by a masked maniac, thankyouverymuch,\" June said, rolling onto her knees and turning away from Sean as she tried to get up on her wobbly legs. \"Come to think of it, I did. Go me!\"\n\nLaughing, Sean turned back to face her, and saw what looked to be one of the most glorious things he'd ever seen. From her position turned away from him, with her knees on the couch and her hands on the back, her round ass stuck out at him. With her cheeks parted as they were, he could see her tight, winking asshole and below it her well-fucked pussy.\n\nHis mouth watered. Sean said, \"Stay right there.\"\n\n\"Why?\" June asked, looking over her shoulder at him. Seeing his obvious lust, she smiled. \"Oh. See anything you like?\"\n\n\"I can see something,\" he said, smiling devilishly as he knelt behind her. \"You did something very nice for me tonight, brought back a little of that old Halloween spirit, and I'd like to return the favor.\"\n\nJune purred. \"Oh, I like the sound of- THAT!\"\n\nHer voice hitched up as his tongue met her pussy. Going down on Anna had always been one of Sean's favorite things, and though he hadn't gotten much experience with her, he liked to think that he'd picked up a thing or two in their time together. The way June squealed and shook as his tongue explored her folds, exploring, probing within even, before he settled on her clit, told him he wasn't far off in this assessment.\n\n\"Oh yeah, right there, right there, fuck, keep going, like that... ah, this is nice, this is fucking nice...\" June groaned, struggling to keep herself on her hands and knees. \"Anna was a fucking dumbass, ditching a guy with a mouth like this; I'd have had you on your knees all the fucking time just worshipping my hot cunt, and you'd have done it, wouldn't you?\"\n\n\"Mmmhmmm,\" Sean agreed. It was difficult forming words when his mouth was full, but he thought he communicated himself pretty well. June's pussy had a savory and sweet taste and an intoxicating aroma, the kind he could find himself loving very, very soon. He licked up her juices with great gusto, wanting both to please her for what she had done for him and, well, simply because he found he was having a very good time doing it.",
        "\"While that's... fucking awesome,\" June said, her voice high and fluttery as he pleasured her, \"I want your tongue somewhere else.\"\n\nPulling his mouth from her cunt, Sean asked, \"Where?\"\n\nJune flexed her ass at him again, drawing attention to her tight, pink asshole. \"Where do you think?\"\n\nSean gulped. He'd done a fair bit when he was with Anna, but he'd never licked a girl's ass before. There was something about it that still felt, well, dirty, but there was no denying that it was also impossibly enticing. He'd already done a fair bit with June already, how was this any different? And yet, it still felt strangely taboo.\n\nJune read his hesitance and growled at him, \"Eat my fucking ass, Sean and finger my pussy until I cum, and if you do it good enough, I'll let you fuck my ass.\"\n\nSean's eyes went wide. If he hadn't eaten a girl's ass, he'd certainly never fucked one before. Only slightly hesitant, he adjusted his aim and dove in, suckling and licking at her asshole.\n\n\"Mmm, yeah, that's it, right there... I bet Little Miss Anna never let you do anything with her ass like this, right? Well, I love having my ass played with. Lick it, kiss it, fuck it, do whatever you want with it so long as you keep doing it that well,\" June groaned, reaching down to finger her clit while he ate her ass.\n\nIt was a strange position for him to be in, and while the act may have felt a little wrong at first, he soon found there was nothing wrong with eating June's ass. It may have tasted different, but worshipping her tightest, most forbidden hole was strangely enticing, and the way it made June moan and shake more than made up for any discomfort on his end. Sliding a couple fingers into her pussy, he fucked her with them in time with her own efforts on her clit, thrusting into her while he licked her asshole in tight circles.\n\nShe purred, her voice weak as she moaned, \"Ooooh, fuck... that's so good, so fucking dirty... you thought you needed a nice girl, a good girl, but what you really needed a good girl who knows how to get down and fucking nasty, and trust me Sean, I can get fucking dirty... stick around and we can do some nasty fucking stuff...\"\n\nThat brought up a question he hadn't considered. They had been fooling around for a fair bit now in the projection room, and while it had been amazing, Sean had never considered what was going to happen once they left this room. Was this a fling where they'd go back to how things were once they were clothed and out of this room? Did June expect a relationship out of this? Was he ready for another relationship? These were big questions to consider when he had his face buried in the hottest ass he'd ever seen, and they weren't ones he felt qualified to properly answer.\n\n\"Like that, like that,\" she instructed as he applied more force with his tongue to her hole. \"Keep going, fuck me with your tongue, fuck my tight fucking ass with your tongue...\"\n\nSean realized that those were also questions best left for later, and that he should do what he set out to do. Straightening his tongue out, he pushed against June's asshole hard. It took a lot of force, a lot of grunting from her, but finally he broke through, thrusting his tongue into her asshole.\n\n\"OH MY GOD, FUCKING HELL!\" June cried out, cumming hard as he broke in. Her asshole tightened around his tongue as her pussy did around his fingers, but only her pussy gushed and soaked his hand. She shook and cursed until all strength left her body and she collapsed facedown on the couch.\n\nWeakly, she turned around, her eyes full of pure, unadulterated lust as she pulled Sean in and kissed him. She sucked on his tongue, his tongue that had just been inside of her ass, with some delicious, naughty glee, before parting and smiling. Without a word, she also took the hand he'd been fucking her with and sucked his fingers into her mouth, cleaning them with lidded over eyes.\n\n\"Fuck, I taste good,\" she groaned.\n\n\"Yeah, you do,\" he replied, kissing her and savoring her flavor on her lips.\n\nJune kissed him back needily, pulling him closer to her and crushing her tits against his chest. She reached down and felt that Sean was both hard and leaking precum again, and sliding to the edge of the couch, she lined him up with her pussy and guided him inside again. Kneeling on the floor while she sat on the couch, Sean fucked her like this slowly, grunting softly while June occasionally made pleasurable mewling sounds and the two exchanged long, lingering kisses and gropes.\n\n\"I... fuck, I need this in my ass... I need you to fuck my ass sooooo bad,\" June said, looking up at Sean with her big, expressive eyes. \"Will you fuck my ass, Sean... please?\"\n\nThere were some questions in life that didn't need to be asked with that kind of insistence, but it didn't hurt to hear the request put so nicely, either.\n\nGrunting, continuing to thrust into her, he said, \"Yeah. I'd like that.\"\n\n\"Good!\" she replied brightly, kissing him and pushing him out of her. Quickly, she went to her discarded purse and explained, \"Now, you've never fucked a girl in the ass before, have you?\"\n\n\"No,\" Sean admitted, a little embarrassed.\n\n\"Makes sense. I wouldn't have thought Anna would be up for that, by the sounds of her,\" June said, pulling a small bottle of KY from the purse and smiling. \"Well, a quick lesson, then. When it comes to a good, hard, assfuck, lube is the difference between a bad time and a very good time, and if we want to make this fun, we're really going to need to lube that monster up.\"\n\n\"I understand. Pass me the bottle?\" Sean asked.\n\n\"Yeah, I love the enthusiasm, but I've got a better idea for how we can apply it to you,\" she said, upending the bottle and pouring it on her tits, working it into her cleavage before she put the bottle aside.\n\n\"Oh, I'm going to like where this is going, aren't I?\" Sean asked.\n\n\"You bet! Now sit on the couch,\" June replied, watching as he did before first, bending down to kiss him, and then kneeling between his legs. \"Fuck, this is an amazing cock... I might have to keep you.\"\n\n\"Not if I keep you first,\" Sean replied, looking on in awe as June massaged her massive, oiled-up tits.\n\n\"Yeah? You think we could make a thing of this?\" she said, leaning in and wrapping her lubed tits around his cock. Sean moaned at the heavenly sensations as his cock was wrapped up in her massive breasts, the sight of the head disappearing in and out of the valley of her cleavage feeling fucking insane as she tittyfucked him vigorously.\n\n\"A thing of tittyfucking, or, us?\" he asked.\n\nJune thought about this, but stopped meeting his gaze. \"Dealer's choice?\"\n\nThough it was hard to argue with a huge-titted girl who was tittyfucking him so well, Sean thought it best to let cooler heads prevail. \"Can we talk about this when we're less horny? I think that might be best.\"\n\n\"Right,\" she replied. \"Sorry, I can get a little crazy when I'm horny.\"\n\n\"Don't we all?\" he answered, groaning.\n\nJune laughed, squeezing her tits harder around his cock as she bounced them up and down. \"You'd be surprised. Some guys, they look at this and just go at it like they're on a mission. Not a hint of passion.\"\n\nFor all of her teasing, Sean decided to turn the tables on her and asked, \"I got them beat, don't I?\"\n\n\"Handily,\" she said, pulling her tits from his cock and then quickly kissing the tip. \"It's not every guy I let fuck my ass. You should feel special.\"\n\n\"I do,\" he said, watching attentively as she stood back up and turned around. Her magnificent ass was on full display and after shaking it from side to side briefly for his benefit, she slowly began to lower herself.\n\nAs an idea struck, he stopped her and said, \"Wait.\"\n\n\"What?\" she asked.\n\nStanding up, Sean took her by the wrist and guided her over to the window where they could look out onto the theater.\n\n\"Don't you want to watch the rest of the movie?\" Sean teased.\n\nJune raised an eyebrow at his suggestion. \"You know what... I think I do.\"\n\nTurning to face the window, June bent over at the waist and braced her hands against the wall. She jut her ass out toward him, flexing her cheeks enticingly as she showed him her tight asshole.\n\nSean grinned, a little nervously. \"Good.\"\n\nJune looked back at him encouragingly. \"You've never done this before, right?\"\n\n\"No,\" Sean admitted, approaching her slowly.\n\n\"Don't stress,\" she said. Reaching back, she gently grabbed his cock and urged him forward until he was pressing up against her tight hole. \"Just take it slow, and easy. It will take some force, and it might hurt me some, but I can take it. After that, then it'll feel really good for both of us.\"\n\nSean found it rather surreal to be in this position, June bent over, his cock about to penetrate her ass as they both looked out over the theater and watched Halloween. Below them was a reasonably full audience watching a masked killer stalking babysitters, and here they were only feet away about to get into some truly dirty fucking.\n\n\"Do it, Sean...\" June urged, biting her lip as she looked back to him. \"Fuck my ass.\"\n\nWith his cock lined up, Sean held his cock and pressed forward. June grunted and groaned, and though she talked like she was experienced with her ass, Sean doubted she'd been with any guy as big as him. Nevertheless, he pressed forward, rocking back and forth as her asshole first held firm, and then began to slowly open for the tip of his cock. With only a little more fucking, he felt her definitively open up for him, accepting more of the head.\n\n\"Almost, almost...\" he grunted, savoring the tight embrace of what he could fit into her ass.\n\n\"You got this, just a little more, just a lit- FUCK!\" June cried out, closing her eyes tightly when his cockhead finally entered her ass.\n\n\"Oh my god, ohmygod, hooooly fuck,\" he grunted slowly, looking down at the seemingly impossible sight of his cock disappearing into her ass. Never in a million years would he have expected to do this with anyone, and here he was, inside June's ass.\n\n\"Keep going,\" she whimpered. \"Sooo fucking good...\"\n\nBeyond words himself, Sean continued forcing his cock into her impossibly tight ass. He had thought he'd known tightness before, but inching inside he began to understand that there was still much he had to learn. Her ass embraced him so firmly it quite hurt, but in that pain there was an undeniable burning pleasure deep within him. He needed to fill her, to claim her, and he pushed forward insistently to give her every last inch.\n\nWith every slight push forward, she squealed and moaned, reaching down with one hand to finger her clit as he filled her. When Sean had bottomed out in her ass, his balls resting against her pussy, she looked back at him and smiled weakly.\n\n\"That's... that's some awesome cock,\" she said, almost giggling from her giddiness.\n\nWeakly, he replied, \"Wow.\" Then he leaned down and kissed her. He held her close, his hands reaching around and squeezing her lubed-up tits as he rested buried in her ass for a moment.\n\nIt was not a moment that would last long. June grunted, \"Come on, Sean, I told you I wanted you to fuck my ass and I need my ass fucked now!\"\n\nChuckling, he grabbed her hips and replied, \"So demanding.\"\n\n\"And you love it, don't you?\" June challenged.\n\nPulling his cock most of the way out of her, Sean just as quickly slammed home, making her moan. \"What do you think?\"\n\n\"Fuuuuuck...\" she moaned, bracing herself while Sean properly fucked her ass.\n\nPumping his cock into her ass hard, Sean felt well and truly good for the first time in what felt like a long time. He was happy with himself, and where he was, and couldn't have been happier for the company. He wasn't worried about his phone, or Anna, or missing out on the night, he was living in the moment with his cock buried up June Poole's ass, fucking her for everything she was worth. When she looked back at him, her face screwed up in the greatest look of passion and lust he'd ever seen on someone's face, Sean could only smile back at her and fuck her ass harder.\n\nIt was an unconventional approach to Halloween, he had to admit, but when in a matter of minutes she was cumming so loud he worried the audience might have heard her (thank god for an even louder sound system) and he filled her ass with his own cum while looking on at the horror classic, he realized he was not one to complain.\n\nStill buried in her ass, he bent over to kiss her while she did everything to stay standing on wobbly legs.\n\n\"Happy Halloween, June,\" he whispered to her, smiling sweetly and kissing her again.\n\nSmiling back and squeezing his cock with her ass, she said, \"Happy Halloween, Sean. We should really get cleaned up and back to work.\"\n\n\"I know,\" he said, wrapping his arms around her and holding her close. \"But can we stay like this a little longer, watch a little more of the movie?\"\n\nSmiling up at him sweetly, she kissed him again and said, \"Sure.\"\n\nSean sighed pleasantly. Earlier today, he would have said this Halloween perfect was impossible. Thinking on how it ended up, he realized he'd never been happier to be wrong.\n\nHe grinned. \"Happy Halloween.\"\n\n***\n\n(Author's Note 2: Writing this story is something I do in my spare time for fun, so if you're enjoying this, please, please, please drop some stars, reviews or shoot me some feedback, as they really keep me going. Though I may not always respond, I do love hearing from all of you and seeing that you're enjoying the series. It motivates me to continue writing more. You've all been wonderful and I can't thank you enough for all of your kind words and encouragement and yes, even the constructive criticisms!\n\nAnd after some recent crises and battles, I want to add one last note on a more practical concern. When it comes to mental health, I hope everyone out there is taking the time to take care of themselves. Mental health may seem like a never-ending battle, but it's a never-ending battle that is always worth fighting, and one that there are plenty of resources to be found to help with should you ever be struggling. Be good to yourselves, and to everyone else.)"
    ],
    "authorname": "aimingtomisbehave33",
    "tags": [
        "halloween",
        "18-years-old",
        "slut",
        "big dick",
        "big tits",
        "anal",
        "tittyfuck",
        "oral",
        "blowjob"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/once-upon-a-halloween-ch-03"
}