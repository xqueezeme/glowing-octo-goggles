{
    "title": "She-Male School: A Teacher Seduced",
    "pages": [
        "Summary: A new teacher is oblivious to the sex secrets of the school.\n\n\n\nNote 1: I was asked by a fan if I would ever write a she-male story a couple of years ago. At the time I didn't put much thought into the idea as I focused on my lesbian, gay and incest stories and truthfully knew very little about transgendered people. Yet another fan sent me pictures of cartoon Dickgirls and it stimulated an idea and made me curious. I began reading transgender cartoons and stories and researching the different terms like transgender, trans woman, trans man, dickgirl, t-girl, she-male, intersex, and hermaphrodite. The more I read the more intrigued I became and soon a story idea was formed. The story was supposed to be a simple story about a bi-curious teacher who is seduced by a she-male, completely unaware of the student's uniqueness, thinking she is being seduced by a girl for a lesbian encounter. But, like many of my stories, the story took on a mind of its own. In the end, the story became a novella of sorts that wouldn't end and I hope you enjoy.\n\n\n\nNote 2: Deciding to have some fun with this story, I also made the narrator ME! This version of me is pretty accurate (except I am still happily married and my children are much younger) and refers too many of my earlier stories. It is not necessary to have read any of my earlier works, but the references are fun winks at my writing past and do give some clues to the real me. \n\n\n\nThank You's: As always thanks to MAB7991 for editing.\n\n\n\nWarning: Please note that the story has a VERY lengthy set-up before any real sex occurs. If you are looking for a stroke story I hope you like a lot of foreplay, innuendo and teasing first...I mean a lot...but once the sex begins....\n\n\n\n\n\n\n\nSHE-MALE SCHOOL: A Teacher Seduced\n\n\n\n\n 1. A PROLOGUE\n After over fifteen years of teaching in public school systems in Canada, I was offered a job at a reclusive private school in southern California. I was in desperate need of a change in my teaching career, having been living an exhaustive mind-numbing routine. I was sick of the pressure to just pass everybody, I was sick of the entitlement issues of today's students and truth be told I was sick of the six months of winter (it really is depressing when there is snow on the ground by mid-October).\n \n At first, I balked at the job offer, but when the school's Headmistress committed to paying all my relocation costs and offered a salary that was double my current salary in Canada, I couldn't resist. Not to mention, southern California doesn't get snow.\n \n When the Headmistress of the school called me about the job, I was quite surprised since I never actually applied, but I remember the phone call vividly:\n \n \"Hi, is this Ms. Jasmine Winston?\" asked a friendly female voice.\n \n \"Yes it is,\" I answered, having just gotten home from work a few minutes earlier, after a rather exhausting day that had tested my patience.\n \n \"My name is Headmistress Alexis Carleton and I am in charge of an all girls' school in southern California,\" she introduced herself.\n \n I assumed I was about to be invited to come and speak to her school staff about one of my keynote presentations. Although not an expert, I have written about teaching assessments that work and also spoke on bringing learning to life. Last year, I won a teaching excellence award in Canada as one of the most innovative teachers in the country. \n \n She continued, \"After seeing you speak a few weeks ago, I found myself wishing I had someone like you on my staff with such enthusiasm and such passion for teaching. I went back to my school rejuvenated by your lecture. Then a couple of days ago as I was planning for next years' school year a thought popped into my head. If I want someone like you, why not just go out and get you.\"\n \n I listened vaguely, tired from the day, even though her flattery was cheering me up slightly. Yet, her last sentence pulled me right into the conversation. \"Pardon?\"\n \n \"I want to interview you for a position at my school, although I am already confident I want to hire you,\" she informed me.\n \n I was flattered and surprised. \"Really?\" I asked, still a bit dumbfounded by the call.\n \n \"I must have you,\" she said, her voice showing a determination even over the phone.\n \n We spent ten more minutes on the phone before I agreed I would get back to her in a couple of days with an answer if I was interested in setting up a Skype interview.\n \n Over the next couple of days I considered the opportunity. My youngest son was in grade twelve and was already accepted to a university playing football hours away, my daughter was in second year university in Toronto, over 30 hours away and I was already worried about empty nest syndrome. A new school, a new start would be a great distraction from being home alone without kids.\n \n Secondly, since I divorced my husband after he cheated on me with his secretary a couple of years ago, how clich\u00e9 is that, I had wanted to start over and had already been applying for jobs in other provinces...although California was in a whole other country.\n \n So, if I hadn't been bitter with my current job and lack of a strong education system, if my children were younger or if my husband hadn't been a cheating bastard I probably never would have considered such an extreme move, but the stars were all aligned and I decided what the fuck...why not?.\n \n Of course, I did my due diligence first and researched the school extensively.\n \n The school, Chateau Johnson for Girls, was a by invitation only school for gifted girls. Located in southern California, the school was in the middle of nowhere and all the girls lived in dorms at the school. The teachers also lived on campus and besides teaching duties were expected to be dorm mothers. The more I read the more mixed were my feelings about this unique opportunity. \n \n\nReasons to take the job:\n 1. The idea of teaching only strong academic girls, young women, was really exciting, but all those hormones would also be exhausting. \n \n 2. I loved the idea of living in the fresh air of southern California, but wasn't so keen on living in the vast emptiness the school was located. The nearest town was forty minutes away.\n \n 3. The thought of being a dorm mother was also quite interesting; in public school I had over 200 students a year and truthfully only made real teacher-student relationships with a few. I spent so much time working with kids failing, skipping class and so forth, that making real connections with students was rare. Yet, at Chateau Johnson for Girls class size was capped at 18 (at my current school the cap was 28, but that was only a suggestion and 35 students in a room made for 30 maximum was very common). \n\n\n\n4. I was thrilled I would be teaching the same girls all the classes I love: English, World History, Creative Writing, and Drama. I would finally get to teach creative writing. I had always wanted to but the Creative Writing teacher at every school I had ever worked at was already entrenched in the position (and trust me teaching staffs are like high school, full of cliques and hard to change). \n\n\n\n5. Free housing was included as part of my salary thus saving me a ton of money on rent.\n\n\n\n6. I would get six free round trip flights a year (with no restrictions to where I went).\n\n\n\n7. I also had 20 percent preparation time (20 percent more than I had at my last school), \n\n\n\n8. I would be in charge of the drama club, the graduation ceremony and would be the faculty advisor for the student council. I was excited by the additional duties as a dorm mother that would afford me the chance to interact with the students outside the classroom environment.\n\n\n\n9. Also, I was in awe of the many famous alumni that this small school had. Politicians, lawyers, celebrities, doctors and every other high profile job was represented by the school's small, but seemingly elite, alumni. \n \n 10. Lastly, I was in awe with the dress code of the school. In every school I had ever worked at the dress code was just a suggestion. If I got a dollar for every time I saw a girl's thong or a boy's underwear I would be rich; if I got another dollar for every skirt that was too short, or cleavage too low I could feed a third world country. Yet, at the elite school there wasn't a complete school uniform but very clear rules the girls must follow:\n -they must wear a blouse (only one button could be undone) or sweater\n -they must wear one of three skirt choices (given to them by the school)\n -they must wear pantyhose (also given by the school)\n\n\n I was fascinated by the fact that pantyhose were mandatory (I had never seen that before; some schools required tights if the skirt was too short or leggings, but that had seldom been enforced). If I saw a dozen girls in pantyhose in a whole year that would be a lot at my school, unlike the eighties when I was in high school and they were worn every day. I had been wearing pantyhose or thigh highs since college when my boyfriend of the time liked me in them. I have always loved the feel of silky nylon on my legs and felt they accentuate my strongest asset perfectly. I have small breasts, 34b and a decent ass, but my legs are easily my best asset. Conversely, I always noticed women in pantyhose and although I am straight, I often fantasize about being with a woman. \n \n\nI am a published writer with a few plays published, a book of poetry, and a few articles on education. Yet, my most prolific writing was under the pseudonym Jasmine Walker. I love writing porn. I have written more than eighty stories on a website called Literotica, the majority of them rather popular. \n\n\n\nMy themes are almost always about submission, seduction, humiliation, and stockings. My genres are varied, but my most common are lesbian, incest, group sex and gay. This was my dirty little secret, I lived vicariously through my writing. My real life being a lot less riveting and exciting in comparison to my fictional world, thus this move was a chance to rekindle the adventurous part of me that had never really taken the risks my characters took.\n\n\n\nI wanted to be like my characters, and every story always has pieces of the real me, yet I am much more conservative in real life (although I am not a complete innocent either), although like many of my characters I was just one temptation away from breaking free from the invisible chains society had put on me. Although no one who knows me knew this, it was the naughty side of me simmering just below the surface...bubbling like a volcano long dormant, but like all volcanoes they eventually erupt.\n\n\n In the end, the offer was too good to refuse, both financially and professionally and after two Skype interviews I was officially offered the job. I accepted, but due to an already planned trip with a couple of girlfriends, I could not arrive till the day before school started, not ideal but the reality.\n \n \n 2. THE FIRST DAY\n \n I arrived, disheveled, exhausted and PMS-ing after a five day drive that was one disaster after another and had me arriving a day later than anticipated. \n \n Headmistress Alexis, she refused to allow anyone to refer to her by her last name (and I quickly learned that all the teachers allowed their students to call them by their first names as well), was so sweet and helpful when I arrived. She wasn't fazed at all when I called her about my travel problems and after I finally did arrive she had students help me get settled in. I arrived just after 3:30 of the first day of school; I ended up finally meeting Headmistress Alexis in person at her office, curious if she was as commanding in person as she was on the phone and on Skype.\n \n Her secretary, a very pretty young woman, greeted me, \"Headmistress Alexis, will be with you in a moment, ma'am.\"\n \n I smiled, \"Please call me Jasmine.\"\n \n \"Of course, Ms. Jasmine\" the blonde smiled, before disappearing behind the door.\n \n I waited a couple of minutes before I was finally face to face with the woman who changed my life and would change it even more later.\n \n She walked directly to me and surprised me by embracing me in a warm hug the moment we met. Breaking the hug which seemed longer than usual non-family hugs she said, \"Jasmine, I am so happy you made it here.\"\n \n \"Sorry, I am late,\" I repeated my apology from a couple previous phone calls.\n \n \"No problem, I am just so happy you have agreed to be a part of our family,\" she said, squeezing my arm.\n \n I thought she was very pretty during our Skype interview, but the Internet did not do her justice. She was a black haired beauty (like the ones you only see in fashion magazines or movies), dressed in a professional business suit, black pantyhose and five inch heels that had me feeling overwhelmed. She oozed a mixture of power and sex, something I always wished I had; I was instantly intimidated by her even though she was soft spoken, caring and excessively touchy-feely. I felt even more inferior as I was dressed in jeans and a t-shirt, perfect for driving but not for meeting your well-dressed boss.\n \n \"I am very thrilled to have been offered this opportunity,\" I replied, as she sat on her desk and crossed her pantyhose clad legs. My eyes watched her legs briefly, the pantyhose seeming to literally shine.\n \n Unfortunately, she noticed me looking and smiled, as if she knew of my secret fascination for pantyhose and my secret fantasies of submitting to a woman. \"They are Wolffords.\"\n \n \"What is?\" I asked, confused.\n \n \"My pantyhose,\" she said, seemingly noticing I was staring at her legs.\n \n \"Ok,\" I said blushing, but trying to be casual about it.\n \n \"Feel them,\" she offered, her voice soft and inviting.\n \n \"Pardon?\" I asked.\n \n \"You need to feel how soft they are,\" she said, her heel dangling from her foot.\n \n \"Ok,\" I said, nervous and yet curious. I moved to her and touched near her knee. I had worn silky smooth pantyhose my whole life, but I had never felt anything so outrageously soft. \"Oh my,\" I said out loud.\n \n She agreed, \"I know. They are what all the students wear too. I believe that for our school to be the best we must be the best in everything. We recruit the best students, we hire the best teachers, we have the best technology, and we must dress the best as well.\"\n\n\n\n\"Wow,\" I said, so used to getting by with outdated computers, worn out textbooks, and teachers who hated their jobs.\n\n\n\nShe continued, \"The skirts the girls wear are Ralph Lauren and the pantyhose Wolford, I considered making the shirts all uniform too but I wanted the students to have it all.\"\n\n\n\n\"How so?\" I asked, impressed but curious.\n\n\n\n\"Well the skirt and pantyhose implies conformity, family and team,\" she explained, before adding, \"yet, choosing their own blouse or sweater gives them a chance to show their individuality.\"\n \n \"Wow giving the resemblance of choice while still controlling it,\" I assessed impressed.\n\n\n\n\"It's a mirage,\" she smiled back.\n\n\n\n\"Ahhhh, with you being the puppet master,\" I joked back.\n\n\n\nHer smile widened, \"I control everything that happens here, Jasmine.\"\n \n\n\"So it seems,\" I replied, amazed by just how manipulative and yet brilliant the Headmistress was.\n\n\n She pressed her intercom and said, \"Amanda, please bring in the pantyhose.\"\n \n \"I have always believed how you dress commands a certain respect that is almost never questioned,\" she explained, her shoe slipping from her foot and dropping to the floor.\n \n I noticed her toenails were ruby red and the pantyhose were sandlefoot, the same kind I always wear. \n \n \"I agree,\" I said, before adding, \"I would have liked to meet you in person dressed more professionally than I am today.\"\n \n She laughed. \"I don't always dress like this either.\"\n \n Amanda entered and I noticed she was wearing the same shiny type of pantyhose, although hers were a mocha color, the kind I liked the most (it made the pale me look like I have a tan). \"Here you go, Headmistress.\"\n \n \"Thank you Amanda,\" the Headmistress said, taking a small bag.\n \n I watched as Amanda silently knelt down, picked up Alexis's shoe and slipped it back on her foot.\n \n \"Good girl,\" Alexis said, as if she was speaking to a child and Amanda left the room without a word.\n \n I must have looked as perplexed as I felt as the Headmistress explained, \"Amanda used to be quite a handful, but through constant discipline she has learned to be very obedient.\"\n \n In retrospect, this was the second oddity that should have set off alarms in my head (the first was letting me touch her leg), but I was so in awe of her confidence and unexplainable allure I missed the clues completely. \n \n I nodded, \"I wish students at my old schools were so obedient.\"\n \n \"Oh here, you will learn the students are very well-behaved,\" she said, yet her tone implied she wasn't talking about school. Again, In retrospect there were so many clues as to what was underneath the surface (pun intended), but I was so taken with her confidence, beauty and intelligence that it never occurred to me that I was being pulled into a web of sin, being groomed for a position much different than what I was hired for.\n \n \"I think I am going to like it here,\" I smiled. \"I have never felt I had the support of my administration at any of my old schools. Oh sure they talked the talk, but they tripped anytime they tried to walk.\"\n \n She laughed, before her tone got serious, \"That is funny. But here, I back up everything I say.\"\n \n I stammered, not wanting to imply I was doubting her, \"I-I-I didn't mean to imply I was questioning you.\"\n \n \"I know, dear,\" she smiled warmly. Being called 'dear' was odd considering I was no doubt a few years older than her. She handed me the bag and said, \"Here are a dozen pair of Wolfford pantyhose for you in a variety of colors.\"\n \n Taking the bag, I replied, my face showing my surprise at such an odd gift, \"Thank you.\"\n \n \"You are welcome, Ms. Walker,\" she replied.\n \n My face went beet red. No one knew my secret erotica identity. \n \n She instantly corrected herself, \"I mean, Ms. Winston. Sorry, I was just on the phone with a Mrs. Walker about a coaching opportunity at our school.\n \n I let out a sigh of relief, feeling my secret was still safe, completely oblivious to the reality that it wasn't an error and that the labyrinth of innuendo and seduction was underway.\n \n Again, in retrospect it was so obvious....\n \n \"Go have a shower and dress up, Jasmine, we have a faculty supper we delayed a day so you could meet the rest of the staff,\" she instructed.\n \n Happy to have a shower and present myself respectively, I didn't notice her words were an order and not a suggestion. \"Ok, I definitely could use a long hot shower.\"\n\n\n\n\"I will have Amanda come and get you at ten to seven,\" Alexis said.\n\n\n\n\"Sounds good, I don't think I would be able to find anything around here on my own,\" I joked.\n\n\n\nAlexis smiled, \"Don't worry my dear, we will look after you here.\"\n\n \n An hour later I had been shown my fully furnished apartment (it was nearly as luxurious as a Penthouse of a hotel), I unpacked a few dresses and clean undergarments and had a nice, long, hot shower. Deciding to try to impress the immaculate Headmistress, I choose a dress rather glamorous for a faculty supper, a red dress that I had only worn once at a wedding and I pulled out a pair of mocha pantyhose, identical to the ones Amanda was wearing earlier, and put them on. As I slid them on my legs I felt rich and decadent. It was like the time I was upgraded to first class and was treated like royalty. The nylon was so soft I got myself slightly damp touching my own legs. I resisted the temptation to masturbate even though I had not had an orgasm for a few days (the long days of driving exhausting me past the point of my usual daily self-exploration and I was just finishing my period). Instead, I did my make-up and hair and tried to look my best.",
        "A knock on my door, at exactly ten to seven startled me as did Amanda's outfit. She was dressed in a skin tight red dress, five-inch heels and black pantyhose that seemed to shimmer and shine. She was easily one of the prettiest young women I had ever seen in person and I knew the temptation to misbehave was going to be very difficult. The apple was right in front of me and seemingly offering for me to take a bite.\n\n\n\n\"You look beautiful, Ms. Walker,\" she complimented.\n\n\n\n\"As do you,\" I returned the compliment.\n\n\n\n\"Are you ready?\" she asked.\n\n\n\n\"Almost,\" I said, adding, \"I just have to slip on my heels.\"\n\n\n\n\"Let me help you with that,\" she offered, entering my room.\n\n\n\n\"It's ok,\" I replied, but she was already on her knees grabbing my foot.\n\n\n\n\"No, I insist, Ms. Walker,\" she countered, as I looked down at her, my pussy getting an uncontrollable tingle.\n\n\n\nI lifted up my foot and she slipped my first heel on and then did the same to the other. Once done, she stood back up and smiled, \"There, is there anything else I can do for you, Ms. Walker?\"\n\n\n\nHer tone was so sweet, sincere and yet seemingly implying almost anything I was so distracted by her beauty, eagerness and unspoken implications. I stammered, \"N-n-no I think that will be all.\"\n\n\n\n\"Yes, Ma'am,\" she shrugged, \"Well are you ready to go then?\"\n\n\n\n\"As ready as I ever will be,\" I said, nervous to be meeting all my new colleagues. \n\n\n\nShe offered her arm, which was strange, but I took it and she began leading me through endless hallways with my arm hooked in hers, feeling a little lightheaded by her touch, no matter how innocent it was. A slight wetness formed in my panties as my body pondered the taboo possibilities with this young beauty.\n \n Thankfully before I got to wet, we arrived at the hall, which was rather extravagant like everything else at the school so far. I was the last to arrive and as soon as I did I was thankful I spent the time to look my best. Each member of the faculty was dressed in either a skirt and blouse or a dress, and all were wearing similar glimmering pantyhose. \n \n I was introduced to the rest of the small staff, each one seemed as sweet and genuine as the next. They all offered their assistance in whatever I needed. I learned that everyone on staff had been here at least five years and the woman I was replacing resigned only because she was offered a job on Senator Erica Smith's staff, an alumnus of the school.\n \n We had a great evening of getting to know each other and socializing. The dinner was delicious and I was surprised when three hours had so quickly passed. When I realized the time, my body suddenly hit the wall and I said to Alexis, \"Thanks for the great welcome, but I am completely beat.\"\n \n \"You're welcome,\" she smiled, squeezing my hand. \"Let me just text Nicole and make sure they are done in your room.\"\n \n \"Done what?\" I asked.\n \n \"Unpacking you,\" she answered, as if the answer was obvious.\n \n Instantly I panicked. What if they opened my box of toys? Being single for a while now I had purchased a few self-help toys. Although it wasn't a massive collection, it was definitely in the category of things students didn't need to know about me. \n \n \"They are just finishing up,\" Alexis said. \"You can meet some of your seniors before you officially meet them in class tomorrow.\"\n \n The thought of meeting some of my students was exciting, the thought of my students holding my dildo, vibrator, rabbit, or butt plug (I bought out of curiosity, but had never actually tried always chickening out at the last second) was mortifying. I said my goodbyes and headed back to my room.\n \n After all the surprises of the day, I received another one when I entered my room and four girls, all still dressed in their school uniforms, were breaking boxes down.\n \n A pretty blonde saw me first and said, her accent heavily English, \"Welcome to Chateau Johnson, I am Lisa.\"\n \n \"And I am Priya,\" added a dark skinned beauty who's breasts were barely held in by her tight blouse, two buttons at the top undone, her pink lace bra easy to see. \"Wow, you are a knockout,\" she added.\n \n I blushed at the compliment from a student, but before I could respond a red haired beauty, with green eyes, sauntered over to me, clearly the leader of the group, extended her hand and greeted, \"Hi, Ms. Jasmine, I am Nicole. President of the Class of 2013.\"\n \n \"Hi Lisa, Priya and Nicole,\" I replied, scanning for the box that had my toys in it.\n \n \"Don't forget me,\" called a girl with a very clear Aussie accent from the kitchen. Peaking around the corner, a short hair blonde greeted, \"Hi, I'm Christine.\"\n \n \"Well it is nice to meet you all,\" I smiled, \"but I hope there won't be a name test tomorrow, I am way too tired to promise I will remember.\"\n \n Lisa joked, \"I thought you were supposed to give the tests?\"\n \n I laughed back, \"Good, we are on the same wavelength.\"\n \n \"Well, we will let you get some rest before you are fed to the lions,\" Nicole smiled, her eyes drawing me in.\n \n \"Thanks ladies, you saved me hours of work,\" I said.\n \n \"At Chateau Johnson we are one big happy family,\" Priya added.\n \n \"Well, thanks again,\" I said.\n \n \"My cell number is on the table in case you can't find anything,\" Nicole added, before moving to my ear and whispering, \"Your box of toys is under your bed.\"\n \n My face flushed and I stammered, \"T-t-thanks.\"\n \n \"No worries, Ms. Jasmine, we all have our skeletons,\" the redhead added, her tone ominous.\n \n The girls said goodbye and left me alone. I was a bit rattled and worried that the whole school would end up knowing about my box of toys. Luckily, I was so overtired, I got undressed and collapsed into bed, oblivious to the many subtle clues that hinted at the things to come.\n \n \n 3. DRIPPING WITH INNUENDO\n \n The first couple of days flew by and I was in awe of just how different the school was. It was like I had been beamed up by a UFO and transported to an alternative universe where all students respected their teachers, used manners and cared about their grades.\n \n During the school week the curfew is 10:30, while it is midnight on the weekends, except on special events, the first which was homecoming in three weeks. \n \n The school had quite a variety of activities for the girls after school. There were a lot of clubs to join: debate, drama, cosmetology, fashion, culture club, cooking, United Nations, student council among others that held meetings Tuesday and Thursday after classes. On Monday and Wednesday the student council held fun activities. For example on Wednesday they did a massive scavenger hunt. Sports teams practiced after dinner, which was held in a large dining hall for the entire student body, and free time for homework followed. It was a very full packed schedule with the belief that busy students were good students without time to get in trouble. It was a theory that seemed to be working brilliantly, as every student was involved in clubs or sports, most both. \n \n The evenings were fun but allowed for little downtime. I did drama on Tuesdays, helped with student council on Thursdays and helped run other events on Mondays and Wednesdays. I didn't coach sports so I did get some downtime which I used to have a nice bubble bath, read a novel, prepare lesson plans or write one of my stories. Not surprisingly, the first new story I began writing was a lesbian story about a submissive teacher being seduced by her headmistress, although the plot was rather vague so far I based my characters on Alexis and myself.\n \n My seniors were like a world UN, a multicultural smorgasbord of races and nationalities. \n \n My English class consisted of students from Australia, Canada, China, England, France, Germany, India, Italy, Japan, Mexico, Peru, Russia, South Africa and the United States.\n \n My other classes were equally diverse and overall there was over forty different countries represented at the school (and over eighty in the history of the school), something the school was very proud of and celebrated.\n \n The rest of the first week was amazing, truthfully the best week of my teaching career. I loved the diversity, I loved how every girl was academically strong, I loved that most girls eagerly offered their opinion and I just loved the positive learning environment. \n \n The only oddity during the first week was the daily interruption of my senior English class by Headmistress Alexis. Each day she would have Amanda come to my classroom and remove a girl to go see Headmistress Alexis for the majority of the class which ended right before lunch. \n\n\n\nIt wouldn't be out if the ordinary in theory as she made it clear she was a hands on leader and wanted to know what each student's goals were for their senior year and beyond. It was actually a very proactive piece that I greatly supported when she mentioned it to me that first day.\n\n\n\nBut each day the girl who was taken from my class returned looking completely flushed (their faces red, seeming slightly sweaty and their uniforms slightly askew). I noticed it the first day when Lisa was called to the Headmistress's office, but didn't think much of it and again the second day when my student from Japan Reiko returned similarly flushed. \n\n\n\nThe third day, which was Thursday because I missed Monday, I watched intently out of curiosity for the return of the dark skinned Priya; unfortunately although I thought she too looked flushed, I couldn't tell for sure because of her dark skin, but her hair which was in a ponytail when she left was now down. On Friday when the very shy Kala returned flushed and unable to make eye contact with anyone I was baffled. \n \n My preparation period was after lunch so I decided to go and inform Alexis that her meetings with the girls had the girls coming back from seeing her rather flustered and out of sorts. \n\n\n\nAmanda wasn't back from lunch yet so I knocked on the door and Alexis called, \"Come on in.\"\n\n\n\nI entered and was surprised by how she was seated. Her black pantyhose covered legs on her desk, her heels off as she reclined back in her chair. I asked distracted by her legs, \"D-d-do you have a moment to speak with me?\"\n\n\n\n\"I always have time for my staff,\" she smiled. \n\n\n\n\"Thank you,\" I said, pulling my eyes away from her pantyhose-clad legs.\n\n\n\n\"Please sit down, Jasmine,\" she offered.\n\n\n I sat down on the chair where I was only a few feet away from her feet. Nylon clad legs and feet are my fetish, my weakness...the one thing that turned me on even though I had never crossed the line from straight to, well, less straight.\n \n \"I hope you don't mind me being comfortable. I am trying to get used to five inch heels and it has been a bit of a transition,\" she explained, stretching her leg up in the air. \"My feet are killing me.\"\n \n\nI laughed. \"No problem at all. I can barely wear two inch heels without wanting to end my life before the day is through. Balance is not one of my strengths.\"\n \n \"We will have to work on that,\" she said, although she didn't clarify if she meant my balance or walking in heels. \n \n After a brief moment, she asked, \"What can I do for you, Jasmine?\" she asked\n \n I couldn't take my eyes of the soles of her feet, as I stammered, \"U-u-um, I was curious about what you discuss with the girls when you see them. They all came back flushed and, well, disoriented.\"\n \n \"I imagine they do,\" Alexis smiled.\n \n \"I just thought I would let you know that once they come back from seeing you they are pretty much useless for the rest of the class,\" I explained, breaking my eyes away from her perfect feet and instead staring into her just as alluring eyes.\n \n \"That is very flattering,\" she said, her answers cryptic riddles that only had me more mystified, more intrigued, more frustrated and more concerned.\n \n \"Um,\" I began, not sure what to say.\n \n \"Do you know why I really hired you, Jasmine?\" she asked, lifting her left leg up and repositioning her legs so the right was crossing the left.\n \n \"I thought it was because you had to have me,\" I replied smiling, the words that had flattered me so much and started the ball rolling in my dramatic move to another country, not realizing the meaning of those same words could be construed in a completely different manner.\n \n \"Exactly,\" she said, smiling wide, her tone playful.\n \n When she said no more, I continued, \"And because you saw something in me that impressed you and thought I was perfect for this position.\"\n \n \"Again, exactly,\" she agreed, adding, more cryptic words,\" you will be perfect in many POSITIONS.\"\n \n \"Ok,\" I agreed, dragging out the word, clearly showing my confusion at the way she stressed the word 'positions'.\n \n \"I take a very keen interest in every student in this school. The individual meetings are for me to get to know each one IN and OUT,\" she said, the stressing of 'in and out' confusing me.\n \n \"Oh, oh, ok,\" I stammered, completely overwhelmed by the powerful Headmistress, my eyes unable to stop taking quick peeks at her legs and feet.\n \n \"I give every student and teacher here exactly what they need, but it is only through understanding their every need that I can keep them completely SATISFIED,\" she explained.\n \n Although hard to confirm or pinpoint, it seemed every last word of her responses were dripping with sexual innuendo. I replied, \"Well that is very commendable of you. I have never had a principal that really seemed to care about the staff or students. They were always too busy playing the education game.\"\n \n Her tone shifted slightly, hinting at annoyance, \"I am not a principal Jasmine, I am a Headmistress and the distinction is important. I am only accountable to MY students and MY staff and I take my job very seriously.\"\n \n I stammered, not wanting in any way to imply I was questioning her dedication or leadership. \"S-s-sorry if you misinterpreted my words, I simply meant that is actually why I came here, to serve under someone who is more than just a paper pusher or a career climber.\" I noticed after I used 'serve' which was an odd word choice, but her stocking-clad legs were a real distraction and after having touched them once, ever so briefly, I wanted to again. So many of my fantasies, especially after the betrayal of that bastard who will remain nameless, involved being seduced by a woman (sometimes younger like in my stories Pet Teacher, Deconstructing the Professor or the Lesbian MILF Seductress series and sometimes older like in Training Teacher or Turning Teacher Black). My fetish for stockings always figured into the seduction as it was always what I first noticed in a woman (well that and their eyes which made Alexis two for two). Yet, living in Canada, where it snows six months of the year, very few girls or women wear stockings or pantyhose...tights were more the logical fashion (although tights look sexy, they do not feel sexy).\n \n She smiled, her brief annoyance gone as quick as it had surfaced, \"Sorry. I get a little defensive when I am associated with the pencil pushers of the public school systems.\"\n \n Trying to compliment her I replied, \"Well, as far as I can tell you are the exact opposite of all the past administrators I have worked under.\"\n \n Again I noticed my own accidental potentially sexual implication of my word choice, first 'serve' and now 'work under'. Was my subconscious desperately screaming to get out and make one of my long-time fantasies a reality? Alexis was beautiful, was powerful, and assumedly dominant, and she wore pantyhose every day. If ever there was a person to make my fantasy a reality it was her, but she was my boss and mixing work and pleasure is never a good idea.\n \n Her answer only enhanced my naughty thoughts as she quipped, her voice seemingly sensual, yet it could have been my growing libido that made it seem that way. \"Oh I hope you will be working UNDER me for a long, long time, Jasmine.\"\n \n My pussy leaked a bit at her words, that could easily be taken as sexual, although could just as easily just be a response to a statement, although Alexis's tone, smile and facial expression spoke to the former.\n \n \"Now back to your concern, Jasmine. I will be spending a lot of one on one time and sometimes two or three on one time with each of the senior girls,\" she said, her words innocent and yet my head went into the sexual gutter of lesbian orgies. I tried to push away my growing inappropriate thoughts and yet they wouldn't go away. It didn't help that Alexis's voice was naturally sultry and that her legs and feet were a constant distraction. I desperately wanted to see her toes in the sheer fabric as all I could see from my current sitting position was the soles of her feet and glimpses of her legs.\n \n She continued, as I tried to focus on her words, \"They need lots of guidance in all aspects of their life and with coming to grips with who they are and what makes them different.\"\n \n Her words were again cryptic, particularly in hindsight, but at the time her answers seemed very logical. I agreed, \"Yes, in today's still male dominated world, it is important for young woman to understand who they are as they prepare for the sometimes unfair work world.\"\n \n \"I couldn't agree more, although the girls here have a 99 percent college graduation rate and an almost as impressive professional career rate. Here at Chateau Johnson we prepare our girls to be successful no matter the circumstances,\" Alexis bragged. \n \n \"I love how proactive and inspirational you are, Alexis,\" I agreed, her philosophy of preparation similar to mine.\n \n She smiled, \"We make sure they always RISE to the challenge so to speak.\"\n \n \"A great philosophy,\" I concurred, oblivious to plethora of hints thrown at me that nothing was as at appeared on the surface.\n \n She seemed to hold back a laugh as she added, \"Whenever they are in a HARD situation they just go with it and use their unique gifts to their advantage.\"\n \n \"And I hope I can be a BIG part of the preparation for these girls,\" I eagerly added, stressing the word 'big' like she had 'rise' and 'hard', again oblivious to the real commitment I was making.\n \n Unable to completely hold back her laughter, she chuckled softly, \"Oh Jasmine, trust me you are indeed going to play a very BIG role in fulfilling our students EVERY need. Although I must stress such a commitment is exhausting.\"\n \n \"I am here to give everything for my students,\" I again offered, making a commitment much broader and deeper than I meant at the time.\n \n She added, \"Of course you do, Jasmine. That is one of the reasons I recruited you so aggressively, your dedication to doing whatever it takes to assist in your students' learning. Of course, you understand that true pleasure COMES from complete servitude to your students.\"\n \n So pulled into her inspirational words, words I had always said myself but never saw come to fruition in the schools I had worked at, had me buying in completely to her every word and missing every obvious innuendo. \"I do get a weird tingling sensation of accomplishment any time one of my students succeeds.\"\n \n \"Yes, It is can be completely FULFILLING in so many unexpected ways,\" she smiled, uncrossing her legs. As I watched transfixed, it felt like the simple shift was in slow motion. \"Sorry, my leg was falling asleep.\"\n \n \"No problem,\" I shrugged, adding, \"my butt was constantly asleep on that tedious drive from Canada to here.\"\n \n \"Well I hope that we keep you hopping here so that never happens again,\" Alexis quipped back.\n \n \"Actually, it is happening now,\" I said, standing up on the pretense of my butt going numb but really so I could get a better view of her legs and feet.\n \n Standing up I did get a much better view of her perfect legs, displayed so tantalizingly on her desk and in those shimmering pantyhose. ",
        "It was like she knew my real intentions, her smile so knowing, her eyes so smug (can eyes be smug?). \"Well,\" she began before being interrupted by the intercom. \n \n \"Headmistress, your car is here,\" Amanda announced.\n \n \"Well, if that isn't perfect timing. I was building up the rising action in hopes of a riveting climax,\" she sighed, using the plot diagram of a short story to symbolize our conversation, before moving her legs off the desk and standing up.\n \n \"I have to get ready for class anyways,\" I shrugged, even as I wondered where she was going with so many odd references.\n \n \"We will continue this conversation later, Jasmine,\" she promised.\n \n \"I am not going anywhere,\" I joked, referring to our middle of nowhere location.\n \n She smiled, \" Good, because I want to FILL you in completely.\" After a moment as she slipped into her high heeled shoes, a different pair than last time I saw her and added, \"With our full expectations of your role here in the school.\"\n \n \"I look forward to it,\" I replied, wanting to be a team player.\n \n \"I bet you are,\" she quipped ominously, sending a chill down my spine. She hugged me, definitely longer than social rules would dictate, her breath on my ear, \"You and I are going to have so much fun.\"\n \n Another chill tingled through me but this one went directly down below as I took her hot breath, soft tone, and earlier conversation to all add up to something more than just teacher colleagues. I replied, my voice shaky, attempting to just give the slightest subtle hint that I would be interested in crossing the line from colleagues to something more, \"I am a team player, Alexis, and am willing to do ANYTHING to prove it.\"\n \n As she moved away, she smiled, \"You know the word anything has a pretty wide scope.\"\n \n Like when I was with my ex-husband, once my pussy started burning my mind shifted from shy and full of trepidation to hungry and eager (my ex would call it submissive). No longer breaking eye contact, I agreed, \"Yes, yes it does.\"\n \n\n\"We are going to get along famously,\" she replied, not seeming to miss my counter innuendo.\n\n\n\nShe gave my hand a squeeze and said, \"We will continue this conversation, my dear.\"\n\n\n\n\"Again, I look forward to that day,\" I smiled back.\n\n\n\nOnce she left, I took a deep breath and wondered...what was I getting myself into?\n\n\n\n\n\n4. A STRANGE WEEKEND OF INTRIGUE\n \n I returned to my classroom with a few minutes to calm down before I had to teach creative writing. Each girl was to write a poem for class that they would read aloud. The idea was that the class was a comfortable and safe environment to present your writing. The first time there would be no commentary or discussion from the class just listening. In future weeks we would have different focuses on what was expected.\n \n Creative writing was scheduled the same time as media studies and journalism and thus I got only some of my senior class while the rest of the class was filled with seniors from Ms. Angela's class. This was only my second class in creative writing as it occurred every second day as the last class of the day, while on the other days I had drama which was backed with home economics, thus I was still getting to know the students who were not in my home room. Because there were three classes offered at once, I only had twelve students which made the classroom more intimate for sharing. \n \n Each student read their poem to the class and I was in awe of the breadth of talent these girls had. The girls used tone, they used metaphors and they wrote poems that were honest and raw. I was giddy with excitement of where I could take these girls as the year progressed. \n \n Yet, it was Nicole's poem that had me intrigued, because even as she told me exactly what she was I didn't hear a word of the truth but instead heard words she didn't say.\n \n Ambivalence \n \n What do you see?\n Do you see the real me?\n Because...\n Perception is deception as the flickering light obscures the truth.\n \n What do you want?\n Do you like what I flaunt?\n Because...\n Underneath the exterior is a stunning interior that defies society's conformity.\n \n What do you see?\n Who do you want me to be?\n Because...\n I am man AND woman a blurred reality to Adam and Eve's simplicity.\n \n What do you crave?\n Are you mistress or slave?\n Because...\n Behind the power and control lies the submission we all dream to extoll.\n \n What do you see?\n A she or a he?\n Because...\n What you see is not what you get\n You don't know the half of it yet\n Because...\n I can give and I can become a fog consumed between what's real and fake.\n You can't see,\n The real me,\n I can be man\n or \n woman\n or\n both\n like the moon can be all or nothing but usually is somewhere in between....\n \n I thought it was a cry of hope from a girl who was questioning her sexuality when in reality she was playing me like a fiddle, reeling me in with her words. \n \n After all the girls presented their work, I asked them to hand in a hard copy of their poem, so I could assess their format and style, even though really it was so I could read Nicole's poem again and try to understand her heartfelt confession.\n \n I considered telling Nicole if she needed to talk to someone, I was always available, but realized that offering such a thing was breaking the sanctuary of the creative writing classroom. The poets could write, share their words and not be judged. It was just a poem after all, yet it lingered with me all weekend.\n \n .....\n \n The weekend was a blast as they had silly initiation activities with the freshman all Friday evening and Saturday. I won't get into all the events but, again in retrospect, there were so many clues that I was not at a normal school. Some of the games included:\n\n\n On Friday a banana relay where each freshman had to walk, or waddle would be the better term, from one end of the soccer field to the other. Of course, it looked like they had small curved cocks. It was hilarious to watch.\n \n \n\nOn Saturday a fashion show where each of the freshman were dressed up as a man and they had a fashion show where the freshman hammed it up.\n \n \n\nIn total there were over a dozen fun team-building activities and the Saturday evening ended with a dance where each of the girls dressed up like princesses. The shift from boy to girl was stunning. \n \n After a supper and dancing, there was the final initiation. Each freshman was given a glass of non-alcoholic bubbly just as a big screen popped up and Headmistress Alexis appeared on the screen. \n \n Although Alexis could not be present, she Skyped from Washington where she was working with Senator Smith, to give a speech officially welcoming the freshman to the elite school. I noticed that this time it was Alexis who was quite flushed, but didn't put much thought into it at the time. In retrospect, her speech should have added pieces to an already big puzzle.\n \n Sorry ladies I could not be there in person, but I am in Washington with Senator Smith word-smithing a bill for school funding, it is not riveting stuff but it can't all be glamorous. Anyway, without further adieu here is my welcome speech: \n \n Young ladies of Chateau Johnson for Girls,\n I hope each of you had a good first week and an enjoyable initiation. It is only through constant mingling with your peers that you will slowly come to accept who you are. Here we do not judge. Here we only help in building on your unlimited potential.\n \n Being different isn't bad, it's good. Society has forever labelled us as outcasts as not equal. Yet, the reality is it is women like us that really rule this world. We allow men to live in their charade of power, but the truth is they bow down to us and are literally at our beck and call. Here we are one big family.\n \n You were selected because you have the perfect mix of strengths and you will spend the next four years grooming those strengths until you graduate. Then you will be whatever you want to be. A lawyer, a doctor, a teacher, a politician, a fashion designer, an actress or whatever you dream to be. Our alumni are very loyal to the school and to you...our future...if you are loyal to us. \n \n And where is Ms. Winston?\n  \n I realized she was speaking to me. I moved in view of the camera.\n \n Oh there you are. You are one of us now too, Ms. Winston. So please join the freshman for our Chateau Johnson pledge. Repeat after me:\n \n\nI did as suggested, honored to be included in such an elite circle.\n\n\n I am now a sister.\n A lifelong member of the Chateau Johnson sisterhood.\n Sisterhood is family and family is sisterhood.\n I will always protect my sisters, love my sisters and respect my sisters.\n I will be proud of who I am, my differences and will ignore societies judgmental attitudes towards me.\n I will always rise to any challenge and overcome any obstacle.\n I will be an advocate for my sisters, the school, and others like us.\n I am now a sister.\n A sister of Chateau Johnson.\n \n Girls you are all now forever members of one of the most powerful groups in the world. If you work hard, play even harder, you can achieve whatever you want. There are Chateau Johnson alumni in every major profession in the world in over 50 countries and Chateau Johnson alumni ALWAYS look after fellow alumni.\n \n Now raise your glass for a toast to you. As of today you are forever Chateau Johnson ladies.\n  \n After a quick toast, Alexis finished her speech:\n \n Have a good rest of the evening and a great first year here at Chateau Johnson for Girls and remember once a Chateau Johnson girl forever a Chateau Johnson girl.\n \n She waved and signed off.\n \n The dance continued for another hour before I noticed something that caught my attention. My fellow colleague Ms. Angela came out the bathroom red faced and her hair a mess. A moment later Nicole came out of the bathroom similarly red faced but her hair still perfectly in place.\n\n\n\nInstantly a naughty thought popped into my head. Did Ms. Angela just have sex with Nicole, a student? It seemed unlikely, especially in such a public place, but yet the red cheeks and messed hair did imply something. I have never once seriously considered crossing the line with a student. \n\n\n\nSure there had been some very sexy girls in my classes, but other than brief thoughts while home alone with my toys it was nothing more than a harmless fantasy. I did have one student a couple of years ago, right after I got rid of my cheating bastard of a husband that proved very tempting. \n\n\n\nHe was sexy, rugged and domineering all things that turn me on. He flirted with me shamelessly and being single I suddenly felt eighteen again. The temptation, like Eve's apple was very appealing and I was both hungry and vulnerable, but I resisted the temptation, no matter how appetizing the forbidden fruit appeared. \n\n\n\nYet, I had only been here a few days and already I could feel my pussy begging for attention, the temptation of taking a bite out of the juicy, ripe apple becoming more and more tantalizing. The conversation with Alexis only intensified the hunger, the innuendos dripping with temptation.\n \n Of course, I had been consumed with thoughts of sexual submission with Alexis, but after one fleeting moment of potentially seeing what may have been a lesbian rendezvous between a teacher and a student, had my mind reeling. \n\n\n\nI spent over three hours a day teaching my students and noticing their legs clad in the most sensual pantyhose I had ever felt. The Wolford pantyhose literally seemed to shine and caused me to get distracted on numerous occasions already. \n\n\n\nNicole was sitting in the front row of my English class when her shoe hit the floor and like Pavlov's dog I instantly looked at her stocking-clad foot. Over the course of the past week, Nicole had on many occasions allowed her shoe to hit the ground or simply slid her feet out of her shoes (one day three inch heels, another day flats another day open toed two inch heels and sadly on Friday boots...don't get me wrong the boots were hot and really brought out the best of her but there was no foot glimpses).\n\n\n\nI thought it was all coincidence, that Nicole had no idea what she was doing to me, but after seeing her leave the bathroom seconds after my colleague I began to wonder was I Pavlov's dog and she the sexy psychologist?\n \n Curious, I walked over to Ms Angela who was getting a drink of punch which she downed completely. \"Are the social events always this much fun?\" I asked, trying to be casual.\n \n She shrugged, oblivious to what I was thinking, \"They tend to be pretty crazy usually.\"\n \n \"The girl's can just go and go,\" I said, adding, \"I am not sure I can keep up.\" again, in retrospect my last two sentences were greatly ironic, but I did not know that yet.\n \n She laughed not in fun, but in an odd resignation, \"If you only knew the half of it.\"\n \n Looking closer I noticed some white in her black as night hair. Oblivious to what it actually was, my mind still not putting the puzzle pieces together, I pointed out, \"You got something in your hair.\"\n \n Her face went flush again as she moved her hand to her hair and sighed. \"I should probably go and get this out,\" she said and left me before I could ask any more questions.\n \n I turned around, poured myself some punch and saw Nicole staring at me, a wide smile on her face. She lifted up her glass to me and after a slight nod she downed her drink. \n \n The night ended shortly after and I went home horny as hell and slightly dazed. \n \n On Friday evening, after the first couple of initiation activities were done I went home and wrote more on my new lesbian submission story about a teacher being seduced by her powerful principal. The story hit a road block when I tried to figure out how to make the seduction believable. By then though I was horny as hell and pulled out my wi-vibe and got myself off imagining what could have happened if Alexis would not have had to leave. I imagined her opening her legs and revealing her silk pantyhose were crotchless and her pussy was displayed perfectly. My orgasm came hard and fast as I replayed our conversation, the innuendos, and my own hopeful fantasy.\n \n On Saturday night after everything I thought I saw, I again retired to my room horny and this time I went directly to my bedroom and toys. I put the wi-vibe in my pussy and opened my laptop, deciding to tease myself while I wrote. After ten minutes of starts and stops on my Alexis story, I gave up and started a story about a teacher being seduced by a student. The story flowed with ease as I created a vivid tale of a divorced teacher being pulled into the wonderful world of lesbian seduction by a student. \n\n\n\nClosing my eyes, my story getting me revved up, I imagined being taken on my desk, a fantasy I had never made a reality; I imagined her under my desk as I taught, while she was licking my pussy; I imagined her sneaking into my room after curfew and making me her pet; lastly, I imagined her sharing me with the whole class as I was made to sexually pleasure each of my beautiful, young, just barely legal students. I came even harder than last night at the naughty thought of such a twisted submission. \n  \n On Sunday, I spent the day prepping for my next week's classes, had lunch with the other teachers (where I constantly wanted to ask Angela a question I couldn't get out of my mouth). I worked out in the gym, had a long bath, watched a movie and relaxed, purposely avoiding writing and getting myself horny again. Like always, once I came, I am ashamed of my naughty fantasies and my very unprofessional thoughts. \n \n I checked my author e-mail account after supper, which I had not checked in a week and was surprised to have so many e-mails. My new story 'Finding Euphoria' had been released and was doing pretty well in the Literotica summer contest, it wouldn't win but it had lots of personal responses from females wanting to explore their own lesbian curiosity. I answered every e-mail as I usually try to do including giving advice on how to dress, answering questions about how to let someone know you were submissive. Rejecting offers to meet in person, taking suggestions for future stories, admitting I didn't plan a sequel to a story. Lastly, I occasionally gave advice to a few women who saw themselves in my main characters and were bi-curious and wanted guidance as they came to grips with their sexuality or feelings of submission. Yet, it wasn't till near the end of reading all the e-mails, when I was getting tired, that I was shocked awake, as if a bucket of cold water had been poured on me.\n \n From: MistressA\n To: Jasmine Walker\n You WOW me Silkstockinglover\n \n Ms. Jasmine\n I have read all your stories and had to write to you. Your underlying theme of submission is clearly a cry for help as you write your fantasies instead of living them. \n \n You need a Mistress! You crave submission and the need to just let go and allow someone to guide you to real sexual enlightenment.\n \n Thankfully, your princess in shiny pantyhose has cum (yes cum not come).\n \n I expect you to respond to my e-mail instantly by replying instantly with three fantasies you have. I can only help you if I know you inside and out. \n \n Now be a good girl and obey your new Mistress.\n \n Luv\n Mistress A\n  \n P.S.: Don't hesitate, don't consider the pros and cons of my offer...OBEY now.\n \n I stared at the e-mail. I have had lots of aggressive presumptuous e-mails in my years of writing, but mostly by men. I had been asked to be a Mistress to submissive women and, to help guide them in their self-discovery. I have even helped men come to grips with their own curiosity, but this was new. I should have pressed delete and moved on, but instead I clicked reply.\n \n I don't know why I clicked reply (well I was damn curious truth be told) but before I knew it I was responding.\n \n From: Jasmine Walker\n To: MistressA\n Re: You WOW me Silkstockinglover\n \n Miss A,\n Thank you for the e-mail, which stories did you most enjoy? \n \n I don't know why I am answering, but below are my three biggest fantasies:\n \n \n\n1. I recently started a new job and although I know it is wrong, I have started to fantasize about my students...particularly one. I imagine her seducing me or blackmailing me to submit to her unconditionally...because I have fantasized for years of submitting to a woman but have never been able to cross that invisible line between fantasy and reality.\n \n 2. I have a new principal and she is easily one of the most beautiful, powerful women I have ever met. I was instantly smitten with her and have had many fantasies of being her submissive pet. Being taken in her office or licking her pussy under her desk as she meets with a student. The idea of doing things no one expects me to do is a major turn on, so is the risk that I could be caught.\n \n 3. Being the centerpiece of an orgy. It sounds nasty and it is I guess, but I have always wanted to be a part of a threesome or more some. Being ravished by cock after cock, or licked by tongue after tongue. Conversely, the idea of a glory hole and sucking cock after cock or a sorority party where I licked pussy after pussy is also a major turn-on.\n \n Anyway, again I am not sure why I am answering this e-mail, but it was nice to just list my fantasies.\n \n Jaz\n  \n I clicked send before I had a chance to reconsider. I checked the remainder of my e-mails and was intrigued by another that requested I write a she-male story. I had never considered such a story even though I had written gay stories and a cross-dressing story.\n\n\n\nI responded back that I was curious about the idea and asked for suggestions on what the plot would be. As I clicked send I noticed the e-mail ID was prettyandhung, which made me even more curious. Was she an actual she-male, I just assumed it was some guy with a she-male fantasy. I wished I would have asked, but figured if she-he(?) was serious they would respond back.",
        "I finished the last three e-mails, including a couple replies from my earlier replies before deciding it was time for bed. I brushed my teeth, washed my face and redid my nails, ruby red like Alexis (a color I usually refrained from using during the school year). \n\n\n\nI was about to get into bed when I decided to check if MistressA had responded to my e-mail yet, I know I shouldn't care but it I was curious to see her response. Also, writing the fantasies to her, no matter how brief, had my pussy begging for some attention. I opened up my laptop and was excited to see an email from the intriguing stranger.\n \n From: MistressA\n To: Jasmine Walker\n Re: You WOW me Silkstockinglover\n \n Pet Jaz,\n I was quite disappointed by your response. Do I sound like someone who is a Miss? I am a Mistress, your Mistress. \n \n Also, I know why you responded to my e-mail I knew you were lost from your stories...which screamed sexually repressed and yet ready to erupt.\n \n As your fantasies scream out, you need to make them a reality and you need someone who can make that happen. That someone is me.\n \n I will send you a task once a week...every Sunday...and you WILL obey. \n \n Respond immediately to learn your first task.\n \n YOUR MistressA\n\n\n\nPS: I loved Pet Teacher, Training Teacher, Deconstructing the Professor, and Spanked to Submission.\n \n I stared at the words...reading them over and over. It was impossible to deny she was wrong. My stories have, for the most part, been my fantasies, the things I wished I had the reckless carefree attitude to full fill.\n \n Yet, like the first email I felt myself hitting reply even as my mind still pondered the decision.\n \n From: Jasmine Walker\n To: MistressA\n Re: You WOW me Silkstockinglover \n \n MistressA\n Sorry for not referring to you properly, it will not happen again.\n \n I am curious what you have in mind for me.\n \n Jaz\n \n I waited wanting to know the task and knowing there was no way I could go to bed without knowing, even though I wasn't convinced I planned to actually obey.\n \n From: MistressA\n To: Jasmine Walker\n Re: You WOW me Silkstockinglover\n \n Pet Jaz,\n You are such a good girl. \n \n Task 1: Starting tomorrow you will no longer where panties (unless of course Aunt Ruby is visiting).\n \n Is that understood, my pet?\n \n MistressA\n \n I didn't even hesitate as I quickly replied, being pulled into the harmless game.\n \n From: Jasmine Walker\n To: MistressA\n Re: You WOW me Silkstockinglover \n \n MistressA\n I will obey.\n Pet Jasmine\n \n Using the word 'pet' seemed satisfying in a way I couldn't explain. I had written many stories about being a submissive pet, but using the words in reference to myself was somehow quite exciting.\n \n I went to bed horny yet again and this time I pleasured myself imagining being a pet. Crawling on all fours between the legs of my Mistress. Looking up I saw Alexis smiling down at me and yet heard the voice of Nicole ordering, \"Lick me my pet,\"\n \n I came moments later, delirious at the fantasy of submitting to both Alexis and Nicole. \n \n\n\n 5. PANTYHOSE TEMPTATION\n \n I woke up and considered not obeying the order of some stranger, but then decided 'What the Hell?' With my pantyhose on, it was not going to be much different and the slight rush of obedience was kind of exciting. During my first class of the day it was liberating to know that all the students saw was their history teacher, oblivious to the fact that I had gone commando.\n \n Alexis was still not back from her emergency trip to Washington, so my English class was not interrupted for the first time.\n \n By lunch, I was used to not having underwear on and the day proceeded as it usually did until drama.\n \n For drama class, we played a game where they each drew a word out of a hat and then had to go in front of the class and create a one-minute monologue involving their word.\n \n The class went as I hoped with lots of hilarity and some serious pieces.\n \n Maria got the word 'stars' and did a humorous one about becoming a movie star one day. \n \n Ambra got the word 'cell phone' and created a mock eulogy for her just killed phone. I laughed so hard I almost peed into my pantyhose.\n \n Estrella drew the word 'pink' and spent her whole time acting as Barbie having a pink breakdown. She finished with, \"Why always pink? What about green, or blue or any other color? Why is society deciding what I wear and who I am? What if I decide to hate pink, play rugby and get myself a girlfriend?\"\n  \n We exploded with laughter at her over-the-top breakdown Barbie.\n \n Then Lisa shocked us all.\n \n \"You know what I love more than anything in the world? \n No?\n I give you a hint. They come in so many different sizes and thicknesses and are always so, so, so, juicy. I mean there really is nothing as appetizing as a glistening...long...foot long...jumbo...hot dog.\n I mean does anyone ever forget their first hotdog? All the excitement and anticipation of how good it will taste and how utterly satisfying it will feel once it is in your mouth.\n I mean I love all hotdogs. Foot longs, wiener dogs, sausages of all kinds, each satisfy me in different ways.\n Actually, I am craving a nice juicy foot long right now.\"\n  \n Lisa looked directly at Nicole.\n \n Nicole quipped, \"Thank God it is almost lunch then.\"\n \n Samantha got stuck with the color 'blue' and did a whole ordeal about being blue because she was blue, but inside she felt red. The color crisis was tearing her apart as she tried to let her inner red out, but the powerful outer blue kept her trapped. \n \n Nicole went last. As if fate was giggling hysterically, Nicole drew the word 'pantyhose'. Her speech dripped with innuendo that everyone in the class got but me.\n \n \"The greatest inventions of all time include the cell phone, TV, computers and, of course, pantyhose,\" the beautiful girl started. She lifted her leg onto a desk and explained while rubbing her hands up and down her legs, \"You see pantyhose like these have a ton of purposes. They are so soft, smooth and comfortable I couldn't imagine not wearing them. They also accentuate my legs that have men and women taking a second and third looks.\"\n\n\n Putting her foot down she walked towards me at the back of the room as she continued again, her confidence oozing out of her, \"Pantyhose are to women what suits are to men...POWER. They tease and they please.\"\n \n Arriving at where I was sitting, she slipped her foot out of her high heeled shoe and asked, \"And don't my blue painted toenails look so tantalizing in these sheer pantyhose?\"\n \n My pussy tingled and I had to resist the urge to touch her nylon-clad stocking toes or do what I loved having done to me, suck her toes through the nylon. \n \n Before I could respond, she moved her foot back down and continued her monologue, her smile seemingly so knowing of the impact she and her pantyhose had on me. \"Of course pantyhose do more than just tease and please and woo and wow, they also keep everything underneath kept in perfect place, don't they girls?\"\n  \n Laughter exploded as Nicole finished her monologue and I was lost in thought at how hungry I was to make my submission fantasies a reality. I briefly wondered if Nicole could see past my strong teacher exterior to the insecure, submissive sexual being I wanted to be.\n \n Putting on my teacher facade I said, \"Well, that was enlightening Nicole.\"\n \n \"I aim to please,\" she quipped back, sitting back down at her desk.\n \n I wanted to stand up, but without panties on I was worried that my wetness would leak down my pantyhose clad leg. But desperate to clean myself up, I stood up, suggested they could chat for the last few minutes of class and headed to the nearest restroom which are shared with students and staff (another inclusion piece that Alexis believed in).\n \n I was sitting on the toilet after wiping myself when the bell rang. A couple of girls entered the restroom and their conversation stunned me.\n \n \"Did you see Ms. Jasmine's face? I thought she was going to bend down and kiss Nicole's foot,\" a voice said, which I recognized was Sarah.\n \n \"I did! Nicole is clearly already on the hunt for a new teacher plaything,\" another voice agreed.\n \n My head was spinning at the perception these girl's had of me...was I that transparent? Teacher plaything?\n \n \"For sure. Nicole will have her on her knees ready to please in no time,\" Sarah predicted.\n \n \"Like she did you?\" the other voice questioned, her tone playful.\n \n \"Fuck you, Samantha, ass if you said no the first time she called you to her room,\" Sarah countered.\n \n \"I played hard to get,\" Samantha replied, her tone playful.\n \n \"Until you got hard,\" Sarah joked back as the girls started leaving the bathroom.\n \n I barely heard Samantha's reply other than the phrase, \"I couldn't believe how big....\"\n \n My head was spinning. I was completely pulled into the bizarre banter of my two eighteen year old students. They had both obviously had sex with Nicole. Who else was a part of this? Was I Nicole's next target? My pussy gushed at the thought and I couldn't help but begin to pleasure myself, my need to come overtaking any sense of propriety. I closed my eyes imagined submitting to Nicole and allowed the build up of the past hour to rush through me. The orgasm hit hard and fast and I had to clench my teeth together to not allow the scream that was desperate to escape.\n \n Once done, I shook my head, wiped my pussy clean of my cum and quickly exited the restroom my head spinning.\n \n .....\n \n That night I worked on my story of lesbian submission, which was becoming more real in both my mind and body.\n \n Around 10:30 I decided to check my e-mail after refraining from checking all day. A few replies from my e-mails last night, a couple new fan mails, one comment that I should get a day job and a new one from MistressA.\n \n From: MistressA\n To: Jasmine Walker\n Did you obey my pet?\n \n Pet Jaz,\n Did you obey my order? If you did like the good girl you are, please tell me how you felt going to work without panties.\n \n MistressA\n \n I didn't hesitate as I clicked reply and answered.\n \n From: Jasmine Walker\n To: MistressA\n Re: Did you obey my pet?\n \n MistressA\n Yes ma'am, I obeyed your order like a good girl. Going sans panties was very liberating although a bit intense when I got kind of horny because of a student.\n \n Your pet Jaz\n \n As soon as I clicked send, I wondered why it felt so good to obey an order from a complete stranger.\n \n I replied to a couple of e-mails and was just about to call it a night when there was a reply from my online Mistress.\n \n From: MistressA\n To: Jasmine Walker\n Re: Did you obey my pet? \n \n My pet,\n You really are a nasty little slut wannabe aren't you? I want you to go and get yourself off pleasuring yourself thinking of submitting to this student and tomorrow I want you to compliment this student at least three times.\n \n Obey like the good pet you crave to be...\n MistressA\n \n Her orders triggered a gush of wetness in my pantyhose crotch and I knew I was going to obey her first order, but her second one seemed more challenging. Regardless, I figured I would continue obeying, at least in theory. \n \n From: Jasmine Walker\n To: MistressA\n Re: Did you obey my pet? \n \n MistressA\n I will obey every order you give. I am going to go and use my wi-vibe to pleasure myself and will find a way to compliment my sexy student as instructed.\n \n Good night....\n Your eager pet\n  \n I quickly undressed and slipped under my covers. I pleasured myself with my wi-vibe as my \n Lesbian submission fantasy shifted from Alexis to Nicole.\n\n\n\nI imagined doing a last late night check of the rooms and noticing that Nicole's door was ajar. I could hear clear moans of pleasure coming from inside and I slowly opened the door. \n \n Nicole seeing the door open called, \"Come in Ms. Jasmine, I have been waiting for you.\"\n \n I blushed but obeyed and as I entered the room, I saw Samantha between Nicole's legs eagerly lapping away. \n \n \"Did you come to submit to me, Ms. Jasmine?\" Nicole asked, smiling.\n \n \"What, no?\" I protested weakly.\n \n \"Come get a closer look, Ms. Jasmine,\" the teenage seductress offered, letting out a slight moan, submitting becoming even more tantalizing.\n \n I obeyed, so taken in by the lesbian act occurring before me. \n \n I watched for a minute, forgetting I was the adult in charge of stopping such inappropriate acts, yet instead I just stared.\n \n Nicole finally spoke, \"Go ahead, Ms. Jasmine, do what you are dying to do, submit to me. Fall to your knees and replace pet Sammy.\"\n \n I froze. I knew it was wrong, I was her teacher. Yet, I was no longer in control of my mind or body as I felt myself fall to my knees like a leaf falls from a tree...helpless. \n \n \"Good girl,\" Nicole purred, as Samantha crawled out from beneath Nicole's pantyhose-clad legs leaving a path for me to continue my journey of submission.\n \n Without instruction, as if I was being drawn in by a magnet of submission, I crawled between my teenage student's legs. Her pussy was so perfectly framed by her dark mocha pantyhose, a convenient hole revealing her trimmed pussy. My mouth watered as years of fantasy were about to became reality. I leaned forward, extended my tongue and began my journey into submission.\n  \n \"Shiiiiit,\" I screamed, my naughty teen submission fantasy bringing me to a messy, hot climax. My body quivered for an eternity as my fantasy of lesbian submission seemed so real. \n \n Once the orgasm had finished its thorough journey through me, I lay in my bed spent and confused. The temptations were getting harder and harder to resist. Yet, like the rest of my life I convinced myself fantasy is just that...a healthy way to rejuvenate yourself. Alas...sometimes the lines between fantasy and reality merge and once they do there is no turning back.\n\n\n\n\n\n6. SHADES OF SUBMISSION\n\n\n I woke up refreshed and determined to resist the growing temptation and yet still I wanted to obey my online Mistress.\n \n The morning flew by until English class when I learned Alexis was back when she called Maria out of my class for her one-on-one meeting.\n \n Today's class was about each student's favorite book. The assignment given last week was for each student to write a brief summary of the best book they have ever read. The girls tastes in literature were quite diverse and thus their choices ranged from Charles Dickens Great Expectations, to Shakespeare's Hamlet, to Steven King's Shawshank Redemption, to Jane Austin's Sense and Sensibility, to Lord of the Rings by J.R.R. Tolkien, to To Kill a Mockingbird by Harper Lee. A few others picked more recent literature like Steven King's 9/22/63, J.K. Rowling's Harry Potter series, John Green's A Fault in Our Stars and sadly two picked Twilight. \n \n Of course, not surprisingly, it was Nicole whose choice surprised me the most. I had already complimented her hair in the hallway this morning which was simple and inconspicuous. She stood up and said, \"Although the writing itself needs work, the psychological inner workings of Christian and Anastasia in 50 Shades of Grey was masterful.\"\n \n Her eyes bore into me as she continued her summary of the trashy submission novel that millions of lonely housewives had read this past year. \"You see, everybody by nature is either submissive or dominant and yet most women live in denial of their true sexuality. They marry someone who fits the image of today's society of job, marriage and kids; but never reaches the true euphoria and enlightenment that all women get from letting go from society's long held mainstream beliefs.\"\n \n It felt as if she was seeing right into my soul. I felt completely vulnerable and again the hunger to submit to this teenage seductress grew.\n \n \"In the end, although the sex scenes are weak and boring, the books psychological manipulation is fascinating,\" Nicole concluded.\n \n I could feel the heat on my cheeks as I stood up from behind my desk and moved to the front sitting on the edge, crossing my legs. I tried to hide my true inner turmoil as I joked, \"Shakespeare, Dickens, Austen and James...hmmmm...which one of these doesn't belong?\"\n \n Nicole shrugged, \"Just because it's old doesn't make it good. I like Dickens and some Shakespeare although Hamlet is terrible. Like seriously, what is the message? Indecision is bad? Thanks Shakespeare, really enlightening. And don't get me started on the pretentious crap Austen wrote...all women must be married to be happy? Are you kidding me?\"\n \n I played along, \"Tell us how you really feel Nicole.\"\n \n Nicole laughed before asking, \"What is your favorite book, Ms. Jasmine?\"\n \n I paused in reflection. \"Well it is hard to narrow it down to one book, but if I had to I would have to say the book that has stayed with me all these years is To Kill A Mockingbird.\"\n \n \"Bzzzzzzz,\" Nicole said, \"No, no, no, I want a non teacher answer.\"\n \n \"You do, do you?\" I questioned jokingly.\n \n Her tone was firm. \"Yes, I do, Ms. Jasmine.\"\n \n I thought about it for awhile and admitted, \"Well I love those James Patterson murder mysteries, I like the odd 18<sup>th</sup> century romance book and if I want to laugh I read Dave Barry's Big Trouble.\"\n \n \"She is a person,\" Nicole joked, her usual playful tone back.\n \n \"What is the last book you read?\" Samantha asked.\n \n \"David Levithan's Everyday,\" I answered, the book a strange one that questioned religion, society and sexuality. \n \n Just then Maria returned to class, her face similarly flushed like the previous students who had visited Alexis.\n \n The bell rang a moment later and I gave Nicole her second compliment of the day. \"Nicole I am really impressed with your oratory skills. You have great potential.\"\n \n \"So do you, Ms. Jasmine,\" Nicole smiled, before adding ominously, \"so do you.\"\n \n She sauntered out of class with a smug confidence that oozed sex and again it triggered a fire down below. I shook my head and tried to focus on the rest of my day.\n \n I gave Nicole another compliment in drama class and fulfilled MistressA's task. The rest of the day was uneventful until bedtime. It was my day to be on supervision and as I ushered the girls into their room at curfew I saw Emily come out of Nicole's room, her face flushed, her hair a mess and what looked like cum all over her face. She saw me, her face went ghostly white and she quickly turned the other way guilt written all over her face. \n \n Assuming Nicole had a boy in her room, I walked in her room unannounced to hear the shower running. It figures that Nicole would have her own bathroom while the others had communal bathroom and showers. I looked around. The bed was a mess, but there was no evidence of a boy. I went to the window and looked outside, but again saw nothing. I pondered the possibilities. Either there was a boy in the shower with Nicole, or the boy had somehow snuck out without being caught or Nicole was a flooder whose juices had coated Emily's face. That seemed to be the obvious reality, yet no matter how I spun it, it sure looked like cum. \n \n I patiently waited to see Nicole come out and when she did, in a long black robe, it was she who was surprised. She quickly recovered, readjusting her robe, \"What can I do for you, Ms. Jasmine?\"\n \n \"Oh, I was just doing curfew rounds,\" I said, walking casually into the steamy bathroom, which was empty.\n \n \"You are very thorough, Ms. Jasmine,\" Nicole said.\n \n \"Well, I take pride in my work,\" I replied, realizing immediately it sounded pretentious.\n \n \"Hmmmmm, is that so?\" she responded playfully, which I instantly could feel was a power play on her part.",
        "\"Well, good night,\" I said, deciding to get out of her room before Sarah's prediction from earlier became true.\n \n \"You can COME by to visit anytime you want,\" Nicole purred, not even remotely hiding her flirtatious innuendo.\n \n Lisa, Nicole's roommate, walked in and gave a look of amusement. \"Oh hi, Ms. Jasmine.\"\n \n \"Hi, Lisa. I was just leaving,\" I replied.\n \n \"Oh, because I can give you two alone time if you need to talk about anything,\" Lisa smiled.\n \n My face flushed as I stammered, rattled by all the implied innuendo, \"N-n-no, I was just finishing my rounds.\"\n \n \"Ok,\" Lisa shrugged.\n \n Nicole purred, \"Sweet dreams, Ms. Jasmine.\"\n \n \"You too,\" I absurdly replied and left.\n \n Fifteen minutes later I was in my room and checking my e-mail. There was no e-mail from MistressA which was actually rather disappointing, but there was an intriguing new e-mail from a reader.\n \n From: TransNikki\n To: silkstockingslover\n Literotica: feedback for\n \n Ma'am,\n I really have enjoyed all your stories and your underlying theme of submission, particularly submission of older woman to younger, even more particularly teacher to student. Your vivid details and character development makes for authentic reading and makes me wonder about your sexuality (are you domme or submissive for example, although I think I know).\n \n My real reason for writing though is three-fold:\n 1. To let you know how much I enjoy your writing\n 2. Hopefully to get to know you better\n 3. Lastly, to request you write a type of story you have never written before.\n \n If interested, please get back to me by e-mail or on yahoo at the same e-mail address. I will be on for a while.\n \n TransNikki\n  \n Many fans request stories and I write some as time permits and if it turns me on. Stories like Deconstructing the Professor, Spanked to Submission, \"Oh\" Submissive Town, Sorority Submission and Hot Tub Fuck Machine were all requests from fans to name a few. Her vague hint had me curious and I was pretty wired after my brief conversation with Nicole so I logged into yahoo and clicked on her username.\n \n Nylon_lover69: Hi, Nikki it is silkstockingslover \n TransNikki: Hi...&lt;blush&gt; I was hoping but not expecting you to reply. You must get many fan e-mails.\n Nylon_lover69: Some days I do, usually on the day a story is released, but your request for a story had me curious.\n TransNikki: Cool! Are your stories true?\n Nylon_lover69: Sadly, mostly no. They are fantasies of mine mostly, although A Night of Unconditional Surrender is mostly true \n TransNikki: So you write instead of do?\n Nylon_lover69: I suppose. I am a teacher and thus making fantasy a reality is rather difficult.\n TransNikki: What do you teach?\n Nylon_lover69: high school\n TransNikki: it must be hard resisting the temptations of all those boys and girls\n Nylon_lover69: don't even get me started &lt;blush&gt;\n TransNikki: So I don't mean to be blunt, but I assume you are submissive\n Nylon_lover69: mostly yes...what do u do for a living?\n TransNikki: I am in high school\n Nylon_lover69: Oh god...\n TransNikki: Don't worry, I am 18...19 in a couple of months \n Nylon_lover69: Ok\n TransNikki: So do you ever fantasize about your students?\n Nylon_lover69: Usually not...once you get to know them they become students and nothing more\n TransNikki: Always?\n Nylon_lover69: Usually\n TransNikki: Do you always wear nylons?\n Nylon_lover69: Usually\n TransNikki: me too...I think they give me a sense of POWER\n Nylon_lover69: Me too, plus my legs are my best asset and I like to showcase them which nylons do.\n TransNikki: We think alike. So I have a story idea for you\n Nylon_lover69: Share away \n TransNikki: Well, have you ever met a transgendered person?\n \n At first I thought what an odd question, but then realized her username implied she was transgendered.\n  \n Nylon_lover69: I don't think so\n TransNikki: How would you know?\n Nylon_lover69: Good point.\n TransNikki: I am transgendered, or t-girl or a she-male or the more crude term chick with a dick\n Nylon_lover69: Well I don't judge\n TransNikki: That is exactly why I choose to ask you to write my story idea\n Nylon_lover69: which is?\n TransNikki: a story of a teacher who is seduced and then dommed by her beautiful she-male student completely unaware that she has a penis\n Nylon_lover69: Interesting...\n TransNikki: the teacher is bi-curious, but unable to cross that ethical line with a student nor can she cross the society expectation line of a lesbian affair\n \n It was like she was describing me.\n \n Nylon_lover69: Sounds like me\n TransNikki: Exactly what I thought from reading your stories. But imagine if you did cross that ethical line and the girl had a penis\n Nylon_lover69: Wow\n TransNikki: a big hard penis\n Nylon_lover69: double wow \n TransNikki: will you write it?\n Nylon_lover69: I can try, the idea is unique and something different for me\n TransNikki: exactly and yet fits into your style of writing \n Nylon_lover69: true\n TransNikki: can I be the main character?\n Nylon_lover69: sure\n TransNikki: and can you be the teacher?\n Nylon_lover69: I guess \n TransNikki: Yummy...\n Nylon_lover69: tell me about yourself\n TransNikki: I have red hair, green eyes, 36c breasts and a nine inch member\n Nylon_lover69: No?!?!?!\n TransNikki: Yes!!!! \n Nylon_lover69: And you have used it?\n TransNikki: Almost every day for quite some time\n Nylon_lover69: Wow\n TransNikki: So you will write it?\n Nylon_lover69: Yes...an idea is already forming\n TransNikki: Awesome...\n Nylon_lover69: but I need to hit the hay it has been a long day\n TransNikki: Mine was LONG and HARD\n Nylon_lover69: U r so bad\n TransNikki: if u only knew!\n Nylon_lover69: Good night, I will e-mail u a draft once I write it \n TransNikki: Please do...good night and do me a favor \n Nylon_lover69: sure\n TransNikki: masturbate about being seduced by a girl with a lovely nine inch cock\n Nylon_lover69: I don't think that will be a problem\n TransNikki: good night, my pet\n \n Her reference to me being her pet surprised me and had my pussy tingling with needy attention. \n \n Nylon_lover69: Good night Ms. Nikki\n \n I logged out and saw there was another e-mail from MistressA.\n \n From: MistressA\n To: Jasmine Walker\n Cum 4 Me Now!!!\n \n Slut Jasmine\n As soon as you get this, grab something to fuck your tight little cunt, it can't be a toy, and come like the submissive little slut you are.\n \n YOUR MISTRESS\n  \n I gasped at the aggressive sentence and task and yet the wetness in my pantyhose liked the suggestion. \n \n I quickly went to the fridge, opened it up and pulled out a long, thick cucumber. I scurried to my couch, my need to obey and come controlling me, and pulled my pantyhose down and began rubbing the cucumber up and down my wet pussy lips. In one quick swoosh I slid the thick green vegetable fuck-toy inside my wanton pussy. Closing my eyes, I pumped the hard perfect green cock in and out if me like a hungry slut and allowed my fantasies to run wild.\n \n Nicole walked out of the shower in her robe and said, \"What can I do for you, Ms. Jasmine?\"\n \n \"Oh, I was just doing my nightly curfew rounds,\" I said, walking casually into the steamy bathroom, which was empty.\n \n \"You are very thorough, Ms. Jasmine,\" Nicole said.\n \n \"Well, I take pride in my work,\" I replied, realizing immediately it sounded pretentious.\n \n \"Hmmmmm, is that so?\" she responded playfully, allowing her robe to drop to the floor as she added, \"Let's see just how thoroughly you suck cock.\"\n \n I stared at her nine inch penis saluting me where a vagina should be.\n \n \"Y-y-you have a penis,\" I stammered shocked, but unable to tear my eyes away from the most beautiful penis I had ever seen.\n \n \"It's a cock, Ms. Jasmine. A big hard cock that has your mouth watering, doesn't it?\" she confidently assessed.\n \n \"Well, I, um, should go,\" I babbled, although my legs refused to move.\n \n \"Or you could stay, get on your knees, crawl over here and suck my cock like we both know you want to do,\" she countered, smiling.\n \n She was right. I loved sucking cock, I loved the power I had over a man when his member was in my mouth. I controlled his pleasure. I also loved the feeling of being told what to do. Combine that with the fact I had not had sex with anyone in over two years, I was an easy target. My pussy was on fire, my mouth was drooling, and my submissive nature was dying to break out. My last weak resistance was, \"but I am your teacher.\"\n \n \"My pet teacher,\" she purred, before adding, \"now crawl over here, and worship your Mistress's cock.\"\n \n Being called her pet only enhanced my desire to submit as did the blunt reality that I indeed wanted her to be my mistress. I felt myself falling to my knees. I crawled robotically to her big cock and looked up from my submissive position.\n \n \"Go ahead my pet, take your Mistress's cock in your cocksucking mouth,\" she ordered, tapping her cock onto my lips.\n \n I obeyed, opening my mouth and taking her huge member between my lips.\n \n The sordid submission was too much and I came like Niagara Falls all over the cucumber. I continued pumping it in and out of my cunt throughout my orgasm that I never wanted to end. As soon as my orgasm subsided as always I felt guilt and that feeling led to a sense of shame.\n \n Unfortunately, the pleasure pulses eventually came to an end and I pulled the now a little less hard cucumber out of my cunt and tossed it in the garbage.\n \n I returned to my computer and quickly typed an e-mail to my online Mistress.\n \n From: Jasmine Walker\n To: MistressA\n Re: Cum 4 Me Now!!!\n \n MistressA\n I obeyed your command, I used a cucumber from the fridge and fucked myself to an earth-shattering orgasm. It has completely wiped me out. \n \n I will check my e-mail in the morning for any further tasks from you.\n \n Good night your obedient pet Jaz\n \n I shut my computer down, walked to my bedroom and collapsed into my bed...diving into slumber in seconds.\n \n \n 7. THE POWER (HISTORICALLY SPEAKING)\n \n The next morning after showering, I checked my e-mail and was excited to find e-mails from both MistressA and TransNikki.\n \n I clicked on MistressA first.\n \n From: MistressA\n To: Jasmine Walker\n Orgasm Control\n \n Good girl my pet. A cucumber was a delicious substitute.\n \n Now in order to train you properly, you must learn orgasm control. Thus, you will not be allowed to come until Friday at 11:25.\n \n MistressA\n  \n Usually such a task would be no big deal, I could go a few days without pleasuring myself. But this recent onslaught of sexual innuendo had really revved up my sexual appetite and this task would be difficult. I also wondered if she meant AM or PM, but figured it didn't really matter at this moment.\n \n I replied.\n \n From: Jasmine Walker\n To: MistressA\n Re: Orgasm Control\n \n MistressA\n I will obey.\n Your eager submissive\n Jasmine\n  \n It was bizarre, but putting the words and obedience out there, I suddenly felt more free, which was odd considering I was doing as I was told from a complete stranger.\n \n I clicked on the email from TransNikki which included attachments.\n \n From: TransNikki\n To: Jasmine Walker\n To motivate my pet\n \n My pet teacher,\n You want to be my pet teacher, don't you Jasmine? \n \n Attached are a few pictures of me so you know I am real. \n \n The first one is of my cock hard and ready for your mouth, or pussy or ass (have you ever had a cock in your ass, pet teacher?). \n \n The second photo is off me in a dress I wore at wedding of my aunt this summer. You can see my long beautiful legs in black pantyhose and heels.\n \n The third photo is of my feet, toenails painted red, also from this summer, as I assume you have a foot fetish based on your many stocking-clad foot references in your stories.\n \n The forth picture is also from the wedding. The girl was a bridesmaid who got more than she bargained for when she hit on me at the reception dinner. Doesn't she look adorable with a mouthful of cock? I bet you would look equally adorable with a mouthful of my cock.\n \n Anyway, I hope you enjoy your day, my pictures and are ready to be the pet teacher you have written about in so many of your stories.\n \n Your Mistress to be Nikki\n  \n My pussy was tingling already, the earlier promise to MistressA now seeming very inconvenient; I clicked on the first picture. I was now staring at the biggest cock I had ever seen. Like in my fantasy fuck session last night, I could feel my mouth watering and wishing I could submit to it. After saving the picture to my hard drive, I clicked on the second picture. Unfortunately, it was only from the waist down but her legs looked absolutely delicious. The third pic of her toes was also tantalizing and had me wanting to touch myself, but I refrained....always being one to keep any promise or commitment I made. Lastly, I clicked on the last picture and my jaw dropped open. A pretty blonde, probably in her mid-twenties in a green dress, was on her knees and had half of Nikki's cock in her mouth. Nikki's red dress was lifted up and her black pantyhose were down to her ankles. Again, the photo was from the waist down, but curiously the photo was taken from far enough away there was no way it could have been taken by Nikki herself.\n \n I saved the last three pictures and replied to Nikki's e-mail, realizing I had to start getting ready for work soon.\n \n From: Jasmine Walker\n To: TransNikki\n Re: To motivate my pet\n \n WOW! WOW! Did I mention...WOW!!!!!\n \n I am literally in awe of your beautiful bottom half...ass, legs and cock. I am not sure I would be able to resist the temptation if you were my student!!!!!\n \n I will start the story as time permits, a dozen ideas are bouncing around in my head. \n \n Your very motivated pet,\n Jasmine\n  \n I closed my computer without reading any of my other e-mails and headed for breakfast. \n \n .....\n \n Today it was in History class when the sexual innuendos started flowing. The discussion was what defines power in today's world. It started as a military discussion through history with the Romans, Vikings, Turks, British, French, Russians and Americans being talked about as powerful at one time. Yet, it was Hua, my Chinese student, that pointed out that in 2013 it is economy that matters and not military. \n \n This led to a lengthy, intriguing discussion over whether the military powers that still ran the UN were actually relevant. Clearly superpowers like Britain and France had faded over the years and the fall of Communism in Russia had weakened its power and the global recession had greatly hindered the once dominant United States. So who was a world power now was when the discussion got heated.\n \n Arguments arose over what country was most powerful in 2013. Hua argued China had a strong military, a stable economy and the population to thrive, while Priya pointed out that India also has a large population, economy and isn't communist.\n\n\n\nLisa argued that the British empire never died but was still a powerful economic country because of its vast alliances in the commonwealth, while Kala pointed out that although Canada's population is tiny and it's army inconsequential in terms of power (although she argued it played a key role in the UN as a mediator) it had a vast, diverse economy that could withstand the global recession better than most.\n\n\n\nReiko pointed out that Japan has just silently kept on producing consumer goods immune to the ups and downs of the stock markets. \n\n\n\nErin pointed out that even in a recession, the United States has the greatest global impact on economy, military, entertainment and is the only 21st century world power that still remains.\n \n Finally, as usual, Nicole spoke. \"This debate is futile. This discussion is all glorified, yet delusional, nationalistic patriotism, which is so World War One. Half of China lives in fear, half of India's jobs are from outsourcing, Britain hasn't been relevant in decades, Canada is like our 51st state, we just let them think they are a country and Japan doesn't even have a military it is defended by America. That said, America is in similar turmoil as we have lost our identity as half the country supports Obama, while the other half resents him. Again, nationalism is deceiving in that people are blind to their countries flaws or dirty little secrets and focus instead on their glory days. But the truth is countries don't matter. What matters is money and who has it controls everybody and everything. The rich get richer, the poor get poorer and the middle class bounces around like a buoy on a stormy day.\"\n \n I asked, curious by her theory, \"So you are saying politicians don't matter, the rich CEO's do?\"\n \n \"Exactly. The rich control the price of oil, the rich allowed the market to crash, the rich control the government,\" Nicole continued.\n \n \"What do you think of Nicole's theory, Hua?\" I asked, Hua who had come out of her shy shell and being the most defensive about her country. \n \n \"Nicole is right,\" Hua replied avoiding eye contact, suddenly back to her shy self.\n \n \"How about you Kala?\" I asked.\n \n \"Nicole is right,\" Kala repeated Hua's three word answer.\n \n \"Well, Nicole you seem to be very persuasive,\" I said, although it was obvious that there was an unwritten rule that you didn't question your President, or maybe it was you didn't question Nicole. Either way, it was obvious who ran the senior class.\n \n She shrugged, \"I have been told that before.\"\n \n The bell rang and I pondered the unique dynamics of the senior class where it seemed nationalities didn't matter, only power did and Nicole clearly had the power.\n \n .....\n \n In English class, Christine was called down for her visit with the Headmistress and like all the others came back to class face flushed as if she had just ran a marathon. I was dying to know what transpired during these sessions and decided to question Christine after class. \n \n \"Christine, could you stay a moment,\" I asked.\n \n \"Of course, Ms. Jasmine,\" she agreed.\n \n After the rest of the class left for lunch, I asked, \"If you don't mind me asking, you seem a little out of sorts after you returned to class, are you ok?\"\n \n \"Never better,\" Christine replied.\n \n \"Can I ask what you and Headmistress Alexis discussed?\" I queried.\n \n \"Everything. Headmistress Alexis is very thorough,\" she answered, with an odd smile.\n \n \"How so?\" I asked, trying to get past the vague cryptic answers. \n \n \"She has got to know me inside and out,\" the Australian answered, again giving me no real explanation.\n \n Trying to get any sort of inside information I said, \"I was worried you were not feeling well. You returned to class all flushed.\"\n \n \"Oh, Headmistress Alexis had me sweating,\" Christine said, as she stood up. \"Is that all, Ms. Jasmine.\"\n \n Giving up, I said, \"Yes, yes, you may go.\"\n \n After she left, I sat at my desk, curious what could possibly be happening to have the girl's come back so red faced. Not knowing I would find out for myself in a couple of days.\n \n .....\n \n The rest of the day flew by and I spent the evening starting my she-male story. I only got a few pages written as I spent time researching the concept of transgender, intersex and she-males. The more I read, the more complex the issue became and my head was spinning. In the end, I decided to stick with she-male as my story focus, ignoring the Biology aspect.",
        "I checked my e-mail every hour or so, but there were no new ones which surprisingly sent a wave of disappointment through me. I suddenly craved the tasks, the simple submission. My pussy tingling for attention, I decided to take a long bath to squelch the flame below. \n \n By the time I got out, I had three e-mails, one from TransNikki. After skimming and replying to two readers flattering comments from previous stories, I clicked on the e-mail from TransNikki.\n \n From: TransNikki\n To: Jasmine Walker\n Hungry?\n \n How was your day my pet? Did my pictures get you hungry? Did you imagine one of your pretty students with a big cock underneath their skirt or dress? \n \n Be honest...would you have sex with someone like me?\n \n Your Mistress to be Nikki\n  \n Questions that a couple of days ago would not even pop into my head, yet last night's fantasy was of Nicole indeed having a big cock. \n \n I responded:\n \n From: Jasmine Walker\n To: TransNikki\n Re: Hungry? \n \n Ms. Nikki,\n Truth be told I had never in my life considered a transgendered person before, yet since your e-mails and our chat it has become a bit of an obsession. I have read a few stories on Literotica about she-males the most intriguing being 'T-Girl University' by vicjohnson and 'Tortured by the T-Girl Tutor' by SugarandSalt and I have done some research on the different variants of transgendered people before I began writing your story.\n \n \n\nSo yes, your pictures made me hungry.\n And yes, I did imagine one of my students with a big cock.\n And double yes, I would LOVE to have sex with someone like you.\n \n Your very intrigued teacher pet,\n Jasmine\n  \n I clicked send and finished getting ready for bed. Just before hitting the sheets, I checked my e-mail and saw a response with an attachment from TransNikki.\n \n From: TransNikki\n To: Jasmine Walker\n Re: Hungry? (1)\n \n My pet,\n I have a task for you. Tomorrow I want you to squeeze the hand of the girl you fantasized about. She, of course, will have no idea what the squeeze means, but you will. \n \n Also, here are a few photos taken just a few minutes ago in my dorm room.\n \n Would you do what this slut eagerly did?\n \n Sweet dreams my pet\n Your Mistress Nikki\n  \n I noticed the shift in her name, but was too excited about the pictures to focus on the underlying intent of such a change.\n \n I clicked on the first picture:\n A black girl's lips were wrapped around Nikki's big cock.\n \n My pussy tingled at just how much I suddenly wanted that cock. \n \n I clicked on the second photo:\n A black ass was bent over and Nikki's big cock was half way in it. It was a close-up side view.\n \n I suddenly wondered what it would be like to have such a big cock not only in my mouth and pussy, but in my ass.\n \n I clicked on the last photo:\n The black ass was covered with white sticky goo.\n \n My mouth watered, my pussy tingled and yet I refrained from doing what I desperately wanted to do...deciding to instead obey MistressA.\n \n Instead I quickly wrote a reply, one where my needy cunt was doing the talking:\n \n From: Jasmine Walker\n To: TransNikki\n Re: Hungry (2)\n \n Mistress Nikki,\n The pictures got me so horny and so wet. I would do anything you ask me to do if I was there with you. I would suck your big cock taking as much into my cocksucking mouth as I could; I would eagerly spread my legs while you fucked my wet HUNGRY cunt; I would bend over and let you ravage my virgin ass...giving myself to you utterly and without hesitation.\n \n Your submissive pet teacher\n Jasmine\n  \n My e-mail only made me hotter and I decided to shut my computer down, before I couldn't resist the temptation to pleasure myself any longer.\n \n I went to bed, but truthfully, my sleep was not really great...I tossed and turned as thoughts of submitting to a teenage she-male bounced inside my head.\n \n \n 8. THE APPLE IS RIPE\n\n \n I woke up and, of course, went directly to my laptop. There were messages from both MistressA and TransNikki.\n \n I clicked on TransNikki first:\n \n From: TransNikki\n To: Jasmine Walker\n Re: Hungry (3)\n \n My pet teacher,\n Your e-mail got me instantly hard and I had my roommate suck my cock while I finished up my homework for my HOT English teacher. \n \n E-mail me tonight to let me know if you accomplish your task.\n \n Attached is a pic of my cum all over my roommates' cocksucking mouth. I bet you wish it was you...don't you slut?\n \n Mistress Nikki\n \n Again I clicked on the picture and gasped at what I saw. A close-up of a girl's lips, chin and nose coated with sticky white goo.\n \n My pussy woke up instantly and I ignored its tingling neediness as I clicked on the message from Mistress A.\n \n From: MistressA\n To: Jasmine Walker\n Did u obey?\n \n My pet,\n I assumed you obeyed my order like a good girl.\n \n If you did, I bet you didn't sleep well and your needy little cunt is begging for attention. I promise you the resistance will be worth the wait. On Friday, you will have the most glorious, earth-shattering orgasm of your life...one that will change your life FOREVER!\n \n Your MistressA\n \n The promise was intriguing, although seemed a bit farfetched. I have gone days without orgasm before and there was little if any difference in pleasure between dry spells. But like a good girl, I replied.\n \n From: Jasmine Walker\n To: MistressA\n Re: Did u obey?\n \n Mistress,\n Yes, I obeyed like a good girl.\n It was very difficult as temptation suddenly seemed to appear everywhere since you gave me the task. The story I am writing is also quite exhilarating and gets me rather revved up.\n \n But I will refrain...no matter how difficult it becomes.\n \n Your pet Jaz\n  \n I showered, had breakfast and headed to work my only task being to somehow, squeeze Nicole's hand before the day's end. \n \n As usual, the morning went by rather uneventful, until English class, when Emily, my German student, was called at the beginning of class for her one-on-one with Alexis.\n \n Today's lesson was on the introduction of Shakespeare as we prepared for an intensive look at Shakespeare's Hamlet. I always believed understanding society at the time and the life of the author was important. For example, reading the book 'To Kill A Mockingbird' the racism is so obviously wrong to us reading it now, yet was way more common back then. Like Atticus says in the book, \"You have got to walk in another man's shoes,\" to truly understand his motivation.\n \n So in class we watched a brief documentary about the life and times of Shakespeare, one of the more current ones that discussed his assumed bisexuality and that many of his love poems were likely written about men. It also highlighted how all girl roles were played in theatre by young boys, as women were not allowed to act.\n \n Once the video was done, I asked, \"So what did you learn about life back in Shakespearean times?\"\n \n Estrella answered, \"It is the same as now. Men try to control and manipulate the world.\"\n \n Christine agreed, \"I agree. It is still a big boy's club where the rich get richer and the poor get poorer.\"\n \n \"Or die,\" added my Mexican student Maria.\n \n Priya, my dark skinned student, disagreed, \"I disagree. Women have come a long way in equality since the time of Shakespeare.\"\n \n \"Especially the past fifty years,\" Lisa added.\n \n \"Have we? How many female Presidents have we had?\" Erin asked.\n \n \"We had Thatcher,\" Lisa proudly beamed.\n \n \"And she ran the country like a man,\" Kala retorted.\n \n \"She did not,\" Lisa argued back.\n \n \"Maybe she was a man,\" Kala teased the proud Brit.\n \n \"That is what we need then,\" Nicole finally spoke and silence instantly filled the room.\n \n \"What?\" I asked, curious where she was going with her statement.\n \n \"A woman with balls,\" Nicole smiled, before adding, \"literally a woman on the outside, but a man underneath. What do they call them?\"\n \n \"A she-male?\" Lisa answered, smiling slightly herself.\n \n My face went red as my mind flashed back to TransNikki.\n \n Nicole added, \"But seriously. Men don't rule the world anymore, we just let them think they do. During Shakespearean times they dress as women in plays and truthfully in fashion and now they play dress-up too, but as men with power. They say behind every great man is a woman and that has never been more true than today. Oh sure it looks like men rule the world in their suit-and-tie-Wall-Street- corporate-buyout-oil-company-environment-killing-sort-of-way, but the reality is they play dress up. They write a script and do whatever they have to, to make the script real, but it is all a charade. Real power lays in the hands of the 21st century women. We still let them think they are running things, but it is all smoke and mirrors.\"\n \n I heard her words but they didn't compute as a stunning reality popped into my head. \n Could Nicole be TransNikki? \n \n \"Are you alright, Ms. Jasmine?\" Nicole asked, standing up. \"You look like you just saw a ghost.\"\n \n I stammered, \"I-I-I'm fine.\"\n \n Nicole reached me and said, \"You need to sit down. Someone go get Ms. Jasmine some water.\"\n \n Three girls quickly got up as Nicole led me to my desk, I had been standing at my podium. As I sat down, I took her hand and gave it a gentle squeeze, obeying the order that may have come from her. Thankfully, she gave no recognition of my submissive act and my suspicions quickly began to subside. \n \n\nThe next few minutes the girls looked after me with water and fruit. Emily returned, red-faced like all the other girls who had spent time with Headmistress Alexis. Then the bell rang and the girls disappeared for lunch and I was alone in my room with Nicole\n\n\n\nI finally thought I was safe, when my whole world came crumbling down in one brief moment. Nicole leaned into my ear, her hot breath sending a chill up my spine as her hand fell onto my knee, \"I think I know what you need to get some color in your cheeks, Ms. Jasmine,\"\n \n \"P-p-pardon?\" I stammered, even though it was becoming crystal clear what she was implying.\n \n \"My favorite story of yours was Pet Teacher,\" she whispered, her hand moving ever so slightly under my skirt. Her warm hand on my leg and her hot breath on my ear and neck had me a complete mess as my career flashed before my eyes as she added, \"Now you are my pet teacher, aren't you?\"\n \n I was paralyzed by both fear and excitement. I couldn't deny the impact her touch was having on my body, nor could I ignore just how hot her e-mails and pictures made me, her big cock suddenly flashing into my head.\n \n \"Y-y-you are TransNikki?\" I weakly got out.\n \n \"In the flesh,\" she smiled, her hand slithering further under my skirt.\n \n \"Do-do-do you really have a....\" I began, but couldn't finish.\n \n \"A cock?\" she finished for me.\n \n \"Y-y-yes,\" I barely got out.\n \n \"I do, my pet, does that excite you? I know in your e-mails it did,\" she purred, her hand now at my pantyhose clad pussy.\n \n \"Please stop,\" I said, although my wet pussy begged to differ.\n \n \"I was impressed that even as the thought that I was TransNikki you were still focused on completing the task I gave you,\" the sultry teen said, her finger rubbing ever so gently my pussy lips through the sheer nylon. \n \n \"I've got to go,\" I said, abruptly standing up.\n \n \"Ok, my pet,\" she smiled, putting her finger to her nose. \"Hmmmm, you smell heavenly, my pet. Plus, no panties, Ms. Jasmine, very, very interesting.\"\n \n My face went beat red and I started to leave when she called out, \"Very soon I will take you up on those promises you made me, Ms. Jasmine.\"\n \n I scurried out of the classroom, out of the school and directly to my room where tears began to stream...as I realized the predicament I was in. Not only was I writing naughty submission e-mails with one of my students, I was also writing a sex story for her and she knew my secret alter-ego...Jasmine Walker the writer.\n \n Calming down, I called Alexis and told her I was not feeling well and she told me she would cancel my afternoon classes for me (the nice thing about a small, private school) and that I should get some much-needed rest. \n \n Hanging up, I tried to figure out what I was going to do. As I replayed all my interactions with Nicole suddenly everything made sense. She gave so many hints that she was different, I just didn't realize how different. Also, the more I replayed my time here, I concluded that Nicole was clearly running the school. Assumedly having sex with a few of the girls and her next target was me.\n \n I was so exhausted from my morning and lack of sleep last night; I decided to take an afternoon nap. Surprisingly, I crashed instantly, not waking up for a few hours.\n \n .....\n \n When I woke up everything felt like a dream...a crazy very authentic feeling dream. As I opened my eyes though, reality came flooding back like a fast flowing river. Looking at the clock, I took a deep breath and decided to check my e-mail.\n \n I was just logging in when there was a knock at my door. \n \n I called out, petrified it was Nicole, \"Who is it?\"\n \n \"Cherise, Ms. Jasmine,\" her French accent unmistakeable.\n \n Relaxing a bit, I went to the door and opened it. She handed me a tray of food. \"Ms. Nicole thought you might be hungry.\"\n \n I wondered if Cherise had been fucked by Nicole as I took the tray and replied, \"Thank you, Cherise. Please thank Nicole for her thoughtfulness.\"\n \n \"Yes, Ms. Jasmine I will. I am also suppose to tell you that if you decide you would like some dessert to stop by her room later,\" Cherise said, clearly embarrassed to say it to me, but doing as she was told.\n \n \"I will keep that in mind, Cherise,\" I replied using my best poker face, before closing the door.\n \n Once alone again, I took a deep breath and returned to my computer. As I ate, I had a few new e-mails including one from MistressA and thankfully none from TransNikki which relaxed me just a bit.\n \n I took a deep breath and clicked on her e-mail.\n \n From: MistressA\n To: Jasmine Walker\n U may CUM soon!\n \n My pet,\n Under 24 hours until you get to reach the crescendo of euphoria. I promised you pleasure that you can only have imagined until now, as long as you resist the growing almost irresistible temptation to pleasure yourself.\n \n Promise me and yourself you can obey this simple command as with such complete obedience will CUM unlimited life-altering pleasure.\n \n Your Mistress \n \n Yesterday such words would have had my pussy gushing with anticipation and eagerness, yet after this morning's stunning revelation I was played out. I had no idea how I was going to face Nicole tomorrow, never mind the rest of my class that may know my secret as well.\n \n The rest of the night, I considered my options:\n 1. Quit immediately!\n\n\n 2. Have a talk with Nicole praying she had kept my secret and clarify in no uncertain terms that we must keep our teacher-student relationship professional.\n\n\n 3. Admit to Headmistress Alexis my secret past and my current predicament and let the chips fall as they may.\n\n\n 4. Get a sweet Delorean and go back in time a few days before I responded to Nicole's seemingly innocent fan e-mail.\n\n\n 5. Give in, and submit to Nicole completely, allowing my long held-in temptation to submit to a woman (was Nicole a woman? A half woman? Would a sexual relationship with her still be considered a lesbian relationship?) and risk my career.\n  \n As I looked at my options, I was always a list person, I considered the pros and cons of each of my 5 choices:\n 1. Of course this was the most expedient of the options, it solved all my issues (except I would be jobless in a different country).\n\n\n 2. This was also a logical option, although it would be such an awkward conversation, and I had no idea if she had told anyone what she knew or that she would agree with me.\n \n \n\n3. Also a reasonable solution as if anyone could quell such a critical situation it would be Alexis, yet I would surely be fired (which is worse than quitting).\n \n \n\n4. The best of the options if you ignored the fact that time travel is impossible.\n \n \n\n5. Appealing in theory, yet but deep down I knew the real me. In writing erotica, I was a risk-taker, a sexual explorer and did not worry about consequences (disease, pregnancy, moral issues, etc.). Yet in reality I was a coward who talked the talk but didn't often walk the walk. In the end, I was like so many other women in the world following society's expectations and never crossing the line that was so tempting.\n  \n As I got ready for bed, deciding to not respond to MistressA either or answer any of my fan e-mails which were beginning to grow due to neglect, I concluded that the best course of action was a heartfelt one-on-one plea with Nicole. \n \n I quickly typed an e-mail to her:\n \n From: Jasmine Walker\n To: TransNikki\n Urgent\n \n Please stop by my classroom at 8:30 tomorrow morning for a quick discussion about our situation.\n \n J\n \n I went to the bathroom, pulled out a sleeping pill (I often can't sleep...one of the reasons I have become such a prolific writer quantity wise the past three years) and took it, desperate to get a great night's sleep before dealing with the life-altering discussion I had to have. Oddly, I was completely oblivious to the life-altering conversation I was actually going to have tomorrow.\n \n \n\n\n\n9. THE APPLE IS EATEN\n\n \n The sleeping pill really worked as I was awakened by banging on my door. Looking at my clock it was five after nine; I was late for class and had completely missed my meeting with Nicole.\n \n I went to the door and my whole class was there.\n \n \"We were so worried about you,\" Samantha said, giving me a hug.\n \n \"Yeah, you are never late and when we realized no one saw you last night we got worried,\" Lisa added.\n \n I laughed, \"I'm fine, just took a really good sleeping pill last night apparently. Go back to class and I will be there in a few minutes.\"\n \n I saw Nicole at the back, her usual smile on her face, one that was unreadable. \n \n I quickly got dressed, thankfully I had showered last night and got to class. \n \n The morning flew by as I resisted looking towards Nicole and she thankfully refrained from talking, giving me the space, I needed to teach and think.\n \n It was the beginning of English class when Ms. Penelope, a lovely woman who taught juniors, came and said, \"I was to go and see Headmistress Alexis.\"\n \n \"Now?\" I asked, petrified my secret was out.\n \n \"No worries, I got your class covered,\" Ms. Penelope answered, her voice cheery giving me a brief moment of hope that it was just a quick meeting. I gave her my lesson plan for today's class and headed to see Alexis, my fate unknown.\n \n As I walked to the gallows, I figured that the worst-case scenario was I would be fired. Even though I had not deliberately or knowingly done anything unprofessional. \n \n When I arrived at the Headmistress's office Amanda seemed oblivious to my arrival. I went to speak when I realized what Amanda was doing. She was reading a story from Literotica on her computer, the website that I was a regular contributor. At the time it never occurred to me that she could be reading one of my stories, there are over 250,000 stories on the website, but I asked, pretending to not notice she was reading porn at work, that was not my role, \"What you reading?\"\n \n \"A story called 'Taking Jasmine Walker',\" she replied looking up at me. \"It's a pretty good story.\"\n \n My face I imagined went sunburn red as I realized it was not only one of my stories, but a story with me as the main character getting sexually dominated by a young British girl. \n \n \"You are here to see Mistress Alexis are you not, Ms. Jasmine?\" she asked."
    ],
    "authorname": "silkstockingslover",
    "tags": [
        "transgender",
        "transexual",
        "stockings",
        "teacher",
        "shemale",
        "she-male",
        "ranny",
        "submission",
        "dickgitl",
        "t-girl"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/she-male-school-a-teacher-seduced"
}