{
    "title": "I Will Love You Forever Pt. 2 Ch. 15",
    "pages": [
        "Note: Just a very brief note to one thank all of you and two to let you know that there is no sex is this chapter. Happy New Year to all of you and may it be prosperous!!! \n\n***********\n\nAs the train pulled away, Isadora got another look at Saul. She looked over at Noah and took note of the thoughtful look on his face. Part of her wanted to know what he was thinking, but part of her didn't want to know. She turned her thoughts toward home and seeing her family and wondered if Noah had family to spend the holidays with.\n\n\"Mr. Jackson?\" she called softly.\n\n\"Yes?\"\n\n\"Do you have plans for the holidays?\" Isadora asked.\n\n\"No, I'm here on business.\" Noah replied.\n\n\"Would you like to come over to our house? There'll be plenty of food and mama says that there's always room for one more.\" Isadora said.\n\nNoah didn't immediately respond. His plan was to meet with Whitman and a few others and then spend a quiet week at the hotel. He had thought about taking Whitman up on his offer to stay at his house, but a week with Whitman's wife glaring at him and hearing her snide comments was a little too much to bear. He knew that at some point, he would say something that would cause an argument and that he would tell Mrs. Whitman just what he thought of her.\n\n\"I think that I would enjoy that.\" He finally said with a smile. \"I would also like to contribute to the meal.\" He added.\n\n\"There's no need for you to do that.\" Isadora replied. \"Mama always makes enough to feed an army.\"\n\n\"Nevertheless, I insist.\" Noah replied.\n\nA few minutes later, Isadora took one of the law journals out of her valise and began to read it. It was one that she had read before, but she didn't mind. She reread the notes that she had made in the corner and then the circled phrases that she hadn't really understood when she first read the journal. She noted with pride that she now understood each and every phrase and term.\n\nEver since she started school, she hovered between being a defense attorney and a prosecutor. The problem was that her people needed both. She wondered if it was possible to do both. If she saw Mr. Whitman, she would ask him about it.\n\nShe looked over at Noah Jackson. He was still very much an enigma to her. She had a ton of questions about him, but didn't ask. She knew that if she did, he would demand to know something about her. She turned her attention back to the Journal and began to read it. She missed the look that Noah Jackson gave her through the slits of his mostly closed eyes.\n\nShe reminded him so much of her...\n\n'Her' was his daughter Evangeline who had been taken from him way to soon. If she had lived, she would have been Isadora's age... maybe a little older. She had that same natural curiosity about her and like Isadora, was very intelligent.\n\nNoah felt the pang in his heart that he felt every time he thought about her and his wife Angela. Both of them were gone leaving him alone and with nothing except for his work. He pushed the feelings aside and thought about the young white man who had no qualms about doing menial labor. He recalled the day when Saul had gone to the defense of a fellow worker. He had a feeling about him then, as he did now. To this point, he had never helped a white person and wondered why. \n\nClearly the boy was no racist. He attended a black church, lived with a black family and did a job that was primarily held by blacks. There was one other thing. Noah noticed the way in which the boy looked at Isadora. It wasn't an outright look of interest, but the interest was there. He also wondered what they boy's story was. How he came to be in California and what his plans were. When he and Isadora got back, it was time to pay Brother Joshua and his wife a visit.\n\n***\n\nSaul helped one more family with their luggage before it was time for his shift to end. He was tired, hungry and wanted nothing more than to go home and go to bed. He checked on Harry to make sure that he was doing alright and headed toward home.\n\n\"Hey! Wait up!\" Harry called after him.\n\nSaul waited for the small, wiry black man to reach him.\n\n\"What way are you walking home?\" He asked when he reached Saul.\n\n\"The way I always go home.\" Saul replied. \"Why?\"\n\n\"Don't go that way.\" Harry whispered looking around. \"The new guy is planning to jump you.\"\n\n\"How do you know?\" Saul asked.\n\n\"I have my ways.\" Harry replied. \n\nSaul looked at Harry and grinned.\n\n\"Saul... you gonna go home your normal way ain't ya?\"\n\n\"Thanks for the heads up, I'll see you tomorrow.\" Saul said and walked away.\n\n\"Wait a minute!\" Harry called out. \"What are you doin'? Didn't you hear me?\"\n\n\"I heard you fine.\" Saul replied. \"I'm not changing the way that I go home because of one idiot. The other thing is this, they'll know that you told me and they'll come after you.\"\n\n\"They?\" Harry asked.\n\n\"Yes they.\" Saul replied. \"I heard them talking about it today.\"\n\nHarry was quiet for several seconds before he spoke again.\n\n\"I'm coming with you.\" He said. \"I don't live but two blocks over from you and don' tell me that I don' hafta. I already knows that. Can I ask you sumthin?\"\n\n\"Sure.\" Saul replied.\n\n\"Why don' ya just go another way home?\"\n\nSaul thought about his answer for a moment before answering.\n\n\"My father used to tell me that the one thing that a man doesn't do is to run away from trouble. He used to say that unless you face it head on, it keeps coming back. He's right about that.\" Saul said. \"If I don't face these guys now, they'll just keep coming back. At some point, they'll catch me and we'll be at the same place. But Harry, go home; this isn't your fight.\"\n\n\"The hell it ain't!\" Harry exclaimed. \"It wasn't your fight when that man tried to say that I dropped his luggage on purpose was it?\"\n\n\"No, but that was different.\" Saul replied.\n\n\"How so?\" Harry demanded.\n\n\"You weren't going up against your own kind.\" Saul replied. \"If you go with me, you will be.\"\n\n\"I'm still going with you.\" Harry insisted. \"So let me get my pail and let's go.\"\n\nTen minutes later, they were headed toward Joshua's house. Their ears were straining to hear any sounds that were out of the ordinary. They were half way to the house when they heard the first voice. Seconds later, there was a second and then a third voice.\n\n\"Here they come.\" Harry whispered.\n\n\"Keep walking.\" Saul whispered back. \"I don't want them to know that we heard them.\"\n\nThey had gone a few more steps when the first of the three men stepped out to their right.\n\n\"There'll be one up ahead.\" Saul murmured. \"That makes four.\"\n\n\"We can take em'\" Harry said. \"I'm stronger than I look.\"\n\nBy this time, one man was behind them and they were flanked on either side. Moments later, Dewey Adams was standing in front of them blocking their way. Dewey looked at Harry first and then at Saul before he spoke.\n\n\"Well looky here. If it ain't the white boy and his nigger.\"\n\nWhen neither Saul nor Harry said anything, Dewey asked Harry a direct question.\n\n\"What you doin' with this white boy? He ain't one of us.\"\n\n\"That be none of ya business.\" Harry replied. \"Just let us be on our way.\"\n\nSaul stood silent ready to move and then he realized something. The three that were with Dewey didn't want to be there. They had been either intimidated into the fight or they were having second thoughts. If he got rid of Dewey, the others would go away.\n\n\"Dewey.\" Saul called out. \"It seems to me that the issue is between us and no one else. So why don't we let them go home and we settle this between the two of us.\"\n\n\"Saul!\" Harry hissed. \"Whatcha doin'? You see how big he is?\"\n\nSaul ignored him and taunted Dewey.\n\n\"Unless of course; you're afraid of a skinny white boy.\"\n\nDewey's eyes widened at Saul's taunt. He had heard about how Saul had gone to Harry's defense, but he hadn't believed that any more than he had believed that a white man was working amongst them. In his mind, Saul was taking a job that another black man needed.\n\n\"What do you say?\" Saul asked. \"Are we going to do this?\"\n\n\"I'm going to kick your white ass.\" Dewey said.\n\n\"Probably; especially since you've got a good three inches on me and at least forty pounds.\" Saul said calmly. \"But you aren't and won't be the last person white or black to kick my ass. I will promise you this though; I won't just stand here and let you do it. I'll do anything that I can to take your black ass down. Are you ready?\"\n\nSaul handed his lunch pail to Harry, took off his uniform jacket and rolled his sleeves up. He took the fighters stance and waited.\n\nDewey looked around to see where the others were. They were still standing where they had stopped. He knew that if he used them, the word would get around that he was too afraid to take the white boy on alone. But he couldn't walk away without looking like a coward either. He wasn't worried about getting into trouble for beating a white man. They were in the black part of town and no one would say or do anything to stop him except for Harry. Without warning, Dewey charged.\n\nHis face was contorted with anger and hatred at white people in general. Suddenly, he didn't care who saw him or if he went to jail or not. He didn't even care if he killed Saul. Saul now symbolized every white person who had taken from him. He became every white man that had called him a nigger and treated him as if he was no more than dirt.\n\nAs Saul waited for Dewey to make his decision, he watched him and remembered something that Jacob once told him.\n\n\"Every man has a 'tell'- a signal that lets you know that he's going to make a move. It's an unconscious thing meaning that they aren't aware that they're doing it. Look over there at that group of white men. You see the bald one?\"\n\n\"I see him.\" Saul replied.\n\n\"He's going to start a fight with the man holding the cards.\" Jacob said.\n\n\"How do you know?\" Saul asked intrigued.\n\n\"Look at the way his shoulders just tensed.\" Jacob said.\n\nMoments later, a fight broke out and it was as Jacob had predicted. The bald headed man had initiated the fight.\n\n\"You're in a dangerous place boy.\" Jacob told him. \"You need to know your surroundings and you have to watch people and learn their 'tells' it can save your life.\"\n\nSaul kept his eyes glued on Dewey looking for a 'tell'. A moment later, he saw it. It was in his eyes. Something in them had changed. He was also acutely aware that the purpose of the fight had changed. It was no longer about a single white man taking a job; he had just become every white man. In that moment, Saul realized that he could die.\n\nHe braced himself for the charge that he knew was coming and whispered a prayer for help. Even though he knew that the hit was coming, Saul was still caught by surprise. He found himself on the ground, flat on his back and winded.\n\n\"That what you call fightin'?\" Dewey sneered as he got ready for another charge.\n\nThe remaining men were silent as Saul slowly got to his feet his chest heaving as he tried to catch his breath. He had just learned something about his opponent. He was brute strength fueled by hatred and anger. Saul knew that he had to make his smaller size and speed work for him. When he saw Harry take a step toward him, he waved him away.\n\nThe next time Dewey charged, Saul simply moved out of the way.\n\n\"Who scared now?\" Dewey asked his breath coming out in gasps.\n\nSaul didn't reply but let Dewey come to him in three more charges before he finally took a swing at him. Dewey bellowed in anger and hatred that Saul had gotten in the first official hit of the fight. He whirled around and charged. This time he grabbed Saul around the waist and threw him to the ground. Saul struggled to get from beneath the Dewey who was now pummeling him with his fist anywhere that he could make contact. He tried to protect his head while he looked for an opening to do some damage.\n\nDewey let out a bellow of pain and moved enough that Saul could punch him in the face. Dewey let out another bellow and rolled off Saul. Saul looked around and saw that the other men were still standing in their places. He didn't have too long to wonder about why Dewey had cried out in pain because the big man was coming at him again.\n\nSaul jumped to his feet just as Dewey reached him. Suddenly, Saul was back on the ground and seeing stars. Dewey had punched him on the side of the head and was kneeling beside him with his arm pulled back and hand in a tight fist ready to hit him again.\n\nHarry had seen enough. He rushed over to Dewey and grabbed his arm just as it was moving toward Saul's face.\n\n\"Enough.\" He said as he strained to hold onto Dewey's arm.\n\nDewey shook Harry off and resumed his attack on Saul. He had managed to get two more punches in before the men who had come with him intervened.\n\n\"Don't you show up at work- you don't work there no mo'.\" Dewey said as he pulled away from the men holding him. \"You hear me? Show up and I'll kill ya.\"\n\nDewey and the men walked away leaving Saul and Harry alone. Saul's face was a bloody, swollen mess and his eyes were swollen shut. It hurt to move.\n\n\"Can you get up?\" Harry asked.\n\n\"I... I think so.\" Saul mumbled through swollen lips.\n\n\"Come on then.\" Harry said helping him to his feet.\n\nThey hadn't gotten far when they ran into Joshua who was with another man.\n\n\"Lord have mercy!\" Joshua exclaimed when he saw Saul's face. \"Let's get you home.\"\n\nJoshua took one side and the other man the other leaving Harry to carry their belongings.\n\n\"Who did this?\" Joshua asked as they walked.\n\n\"Don't worry about it.\" Saul mumbled.\n\n\"It was...\"\n\n\"Nobody.\" Saul interrupted Harry before he could say anymore.\n\n\"Saul, who did this to you?\" Joshua demanded.\n\n\"Dewey did it.\" Harry said before Saul could stop him. \"I dunno his last name; he just started workin' at the train station a couple of weeks ago.\"\n\n\"Do you know where he lives?\" Joshua asked.\n\n\"No sir, but he told Saul that if he came back to work he would kill him.\" Harry replied. \"How'd you know to come?\"\n\n\"Someone saw what was happening.\" Joshua's friend replied. \"Unfortunately, they waited until the fight was over before they came for help.\"\n\nCora met them at the door and gasped when she saw Saul's face.\n\n\"Oh my lord! Get him in here!\" She exclaimed. \"Put him on the couch.\"\n\n\"I think that he'll be more comfortable in his room.\" Joshua said. \"It isn't much further.\"\n\nSaul moaned when Joshua and the man with him laid him on the bed.\n\n\"He might have a few broken ribs.\" The man said. \"Cora, do you have any old sheets that we can cut into strips? We need to make a binder.\"\n\n\"I'll be back with that and some hot water.\" Cora said as she hurried away.\n\n\"Son, my name is Reggie. I'm Cora's nephew. Now I know that you're already in quite a bit of pain and I regret to say that I'm going to have to cause a lot more.\"\n\n\"Yes sir.\" Saul mumbled not believing that he could possibly hurt any more than he did.\n\n\"We'll be as gentle as possible, but it will help if you can move yourself. Do you think that you can do that?\" Reggie asked.\n\n\"Yes sir.\" Saul replied as he tried to lick his dry, swollen lips.\n\nCora came back a few minutes later with the torn strips of sheet, a basin of warm water and a glass of water.\n\n\"We'll get you fixed up and then we'll give you some sips of water.\" Joshua said. \"Did you get hit in the head?\"\n\n\"Yes suh he did.\" Harry piped up. \"It was at least once.\"\n\n\"We're going to have to keep him awake.\" Reggie said softly.\n\nAn hour later, Saul was bound with the sheets and his face cleaned of the blood. He had been wrong about the pain. The pain that he felt during the beating paled in comparison to the pain afterwards. He was so sleepy, but as soon as his eyes began to close; someone woke him up.\n\n\"We have to keep you awake for just a few more hours.\" Reggie said. \n\nSaul lost track of how many times he had heard that and of how many times he had been asked what his name was, where he was and how many fingers he saw. Finally, after what seemed to be days; Saul was allowed to sleep.\n\n***\n\nIsadora's sense of excitement grew the closer the train got to home. She wondered how much Greenville had changed in her absence. Tired of reading, she decided to start a conversation with Noah even though she would have to answer a question about herself.\n\n\"Are you from Greenville?\" she asked.\n\nNoah looked at her and hesitated before answering.\n\n\"I was born here a long time ago.\" He said. \"And I left a long time ago.\"\n\n\"How do you know Mr. Whitman?\" Isadora asked.\n\n\"That is a long story.\" Noah replied. \"Suffice it to say that it wasn't under the best of circumstances. Tell me Isadora, what drives you? I have seen determination before, but yours is beyond any that I've seen.\"\n\n\"I just want to succeed.\" Isadora replied. \"I want my family to be proud of me and I want to take them away from Mississippi.\"\n\n\"Those are very nice and proper answers.\" Noah said after a moment. \"I also know them to be true. But... there's more to it than that. When I watch you study, there is an intensity that is tempered with anger. I'm not going to ask what's behind the anger but I'm going to offer you a bit of hard learned wisdom.\n\nAnger can be a very useful emotion. It can also be a hindrance to meeting your goals if it isn't kept in check. The thing about anger is that it can become a part of you without your being aware of it. When it's time to let it go, it's difficult. I'm not saying don't use the anger to your advantage. What I am saying is that you make sure that it doesn't take over.\"\n\n\"What happened to you?\" Isadora whispered.\n\nNoah didn't answer. Instead, he leaned back in his seat and closed his eyes.\n\n*****\n\nErnie was sitting alone watching the party when Maeve handed him a plate of food and sat down in the empty chair next to him.\n\n\"How long have you been friends with Kenji and Patricia?\" She asked.\n\n\"Not long.\" Ernie replied after thanking her for the food.\n\n\"I thought so.\" Maeve replied with a smile.\n\n\"Why do you say that?\" Ernie asked.\n\n\"You're tense.\" Maeve replied. \"You really haven't interacted with anyone except for Joel and now me. I don't know if you noticed, but people just walk up to each other and say hello. You didn't which tells me that you aren't comfortable with being here.\" \n\n\"How long have you known them?\" Ernie asked.\n\n\"A few months, but I know how you feel.\" Maeve replied. \"It was kind of scary given what happened at school with that racist group. You do know about that don't you?\"\n\nErnie's face burned as he tried to decide on what to tell her. It occurred to him that he couldn't lie to her. If he did, she was bound to find out the truth.\n\n\"I... I know about the group he stammered.\"\n\n\"It was awful!\" Maeve said. \"I hope that Andrew Kelly never gets out of prison. In fact; I think that everyone in the group should go to prison.\"\n\n\"But you can't imprison people for what they believe.\" Ernie said.\n\n\"No.\" Maeve agreed. \"But what about those that knew that they were wrong? One of them broke Joel's hand!\"\n\n\"I know.\" Ernie said softly.\n\n\"Don't you think that he should be punished for that?\" Maeve asked her voice intense.\n\n\"You must be a law student.\" Ernie said changing the subject.\n\n\"What? Oops sorry.\" Maeve said blushing.\n\n\"Ernie.\" Patricia said from behind him. \"I'm sorry that we didn't get over here sooner, but we're glad that you came.\"\n\n\"Thanks for inviting me.\" Ernie replied glad for the interruption\n\n\"Are you getting enough to eat?\" Kenji asked.\n\n\"Yes, Maeve took care of that.\" Ernie replied.\n\n\"I have sampled the pumpkin roll.\" Kenji said. \"It is delicious.\"\n\n\"I'll be sure to tell mom that you liked it.\" Ernie replied. \"This is a really nice place.\" Ernie said looking around.\n\n\"It belongs to a friend of ours.\" Patricia replied. \"She lives in another house not far from here.\"",
        "That explained it Ernie thought and then wondered why it even mattered. Once again he realized that maybe Andrew had a little more influence on him than he realized. It sickened him to admit that in order for that to happen, he had to have believed what Andrew was saying to some small degree. Suddenly, he felt the need to leave. The only things that stopped him were that Joel was watching him and if he left, he would be giving in to fear and prejudice.\n\nHe took a deep breath, looked at Kenji and Patricia and smiled. He thought about inviting them to dinner as his mother had suggested, but thought that it might be too much too soon. Instead he would get to know them better.\n\n\"Some of us have formed a study group.\" Kenji said. \"You are welcome to join us. We are talking about our schedules now and trying to set up a regular day and time.\"\n\n\"I would like to join if it's alright with the others.\" Ernie said.\n\n\"Of course it is.\" Kenji replied.\n\nA few minutes later, Maeve and Patricia were alone. Everyone else was discussing the study group.\n\n\"What are you doing now that Isadora is gone?\" Patricia asked.\n\n\"Nothing much.\" She replied. \"I'm trying read ahead for the next semester.\"\n\n\"Me too.\" Patricia said. \"I'm also going to be taking three classes which is a new thing for me.\"\n\n\"You'll do fine.\" Maeve said with a smile. \"So what do you know about your new friend?\" She asked changing the subject.\n\n\"He's in Kenji and Joel's class but behind them because he wasn't in the accelerated program.\" Patricia replied. \"He was a part of that group that was after us...\"\n\n\"What?!\" Maeve interrupted.\n\n\"Let me finish.\" Patricia said. \"I said was. He left the group before Andrew Kelly went off the deep end.\"\n\n\"What made him leave?\" Maeve asked. \"People don't just walk away from something like that.\"\n\n\"I don't know.\" Patricia said. \"He came to us after Milton Vaughn's funeral and apologized to us.\"\n\n\"You didn't ask him why?\" Maeve asked.\n\n\"He said that he realized that he was wrong and that was the end of it.\" Patricia replied.\n\n\"There's more to it.\" Maeve replied. \n\n\"Well, he was the one who broke Joel's hand.\" Patricia said. \"I know that he and Joel have talked about it.\"\n\n\"No wonder he's so uncomfortable.\" Maeve murmured. \"Do you think that he meant it? The apology I mean?\"\n\n\"He's here isn't he?\" Patricia asked. \"It couldn't have been easy for him to apologize and talk to Joel. He's even sitting with them in class and now he's here. I'm not stupid enough to believe that he didn't believe any of what he said, but Maeve what's important is that he admitted what he did and he's here.\"\n\n\"You know,\" Maeve said after a moment. \"You and Kenji are as much an enigma to me as Isadora is. I mean she has tunnel vision as far as what she wants. I'm not saying that it's a bad thing, but all she does is study. And then there's you. I heard about women of grace, but you are so beyond that. I don't think that I could have the attitude that you and Kenji do.\"\n\n\"Kenji and I have been through so much.\" Patricia replied. \"It's a long story, but we've almost lost each other three times now. When you stop and look at the big picture, you realize that anger and hatred are such wasted emotions. I won't tell you that we weren't angry or that we didn't come close to hating- at least I did, but in the end; it changes nothing.\"\n\n\"He went to the camps didn't he?\" Maeve asked softly.\n\n\"Yes.\" Patricia replied. \"That was one of the times that I hated. I was pregnant with Ralph and I was scared. We had already been through so much and then...\"\n\nPatricia stopped talking and wiped at her eyes. \n\n\"I'm sorry.\" Maeve said taking her hand in hers. \"I didn't mean to upset you.\"\n\n\"You didn't.\" Patricia assured her. \"It's still a very painful memory and I think that it always will be, but on the bright side; Kenji and I are together. We have two beautiful children and we're on our way to meeting our goals.\"\n\n\"You give me faith that true love really exist.\" Maeve said. \"My parents are happy I guess, but they don't look at each other the way that you and Kenji look at each other. Even if I didn't know you, I would be able to tell that he loves you and you him. I only hope to be so lucky.\"\n\n\"Why were you asking about Ernie?\" Patricia asked.\n\n\"I don't know,\" Maeve said with a grin. \"He's kind of cute.\" \n\nShe then turned serious.\n\n\"But, he was a part of that group. He hurt Joel.\" She added.\n\n\"True,\" Patricia conceded, \"but it has to count for something that he's no longer a part of that no matter how it happened. I think that if you're interested that you should talk to him.\"\n\nKenji watched Patricia as she and Maeve talked. He was briefly concerned when he saw her wipe her eyes. He relaxed again when he saw her smile. He turned his attention back to the discussion about the study group. As of yet Ernie hadn't said anything. Kenji wondered if he was waiting for an invitation to speak.\n\n\"Ernie,\" Kenji said. \"You are a part of this so please if you have any suggestions or if the times discussed are not good for you; say something.\"\n\n\"I... it all sounds good.\" Ernie said. \"I'm sure that it would be ok to come to my house when it's my turn.\"\n\nJoel looked at Ernie, but made no comment. He still wasn't ready to believe that Ernie had really changed.\n\nThe party ended around eleven. Penny and Maeve took care of the dishes while Kenji, Joel and Ernie put away the table and chairs and took care of the trash. Ernie and Joel didn't talk, but Kenji and Ernie did.\n\n\"This must have been difficult for you.\" He said as they carried a table into the garage.\n\n\"Did it show?\" Ernie asked.\n\n\"A little.\" Kenji replied with a small smile.\n\n\"I keep trying to tell myself that I didn't believe any of what Andrew told me.\" Ernie said. \"I've been realizing that to some degree that I did. It wasn't anything that my parents taught me. In fact, when they found out about my involvement with Andrew, they were horrified and ashamed. I don't know where the attitude came from and it doesn't matter. It was wrong then and it's wrong now.\"\n\n\"Self-realization can be a difficult thing.\" Kenji replied. \"I learned a few things about myself as well.\"\n\n\"Like what if I may ask?\" Ernie replied.\n\n\"I learned that I am as capable of hate as anyone.\" Kenji replied. \"There was a time when I would have denied that. I also learned that I am capable of killing. If you, Andrew or any of your group had harmed any in my family; I would have killed you.\"\n\nThe words though softly spoken sent a chill through Ernie.\n\n\"My family is everything to me.\" Kenji continued and then said no more.\n\nErnie recognized a threat when he heard one. Kenji while extending to him the hand of friendship was also warning him.\n\n\"Kenji, I swear to you that I won't ever do anything to harm you or your family. I've learned my lesson and if there was any way that I could change what happened; I would.\"\n\nKenji nodded and considered the topic closed. It was well after midnight before Kenji and Patricia were alone.\n\n\"What were you and Ernie talking about?\" Patricia asked as they got ready for bed.\n\n\"It was difficult for him to be here.\" Kenji replied. \"He is learning a few uncomfortable things about himself. Kirei, why were you crying when you were talking to Maeve?\"\n\n\"You saw that?\" Patricia asked.\n\n\"Yes, now tell me why you were crying.\" Kenji replied.\n\n\"We were talking about Isadora and then us. She hopes to be as lucky as we are.\" Patricia replied.\n\n\"Is that what made you cry?\" Kenji asked gently.\n\n\"No.\" She replied after a brief hesitation. \"She asked me if you went to the camps. No matter how long ago that was, it still feels as if it just happened. Even just thinking about it makes my heart hurt. If I close my eyes I can still see that bus pulling away.\"\n\n\"Kirei that was a traumatic time for all of us.\" Kenji said. \"I still think about those times too and when I do, those are the times that I hold you a little tighter and kiss you more often.\"\n\n\"Like now?\" Patricia asked.\n\n\"Like now.\" Kenji confirmed. \"The thing to remember is that we survivied and we are where we need to be. The other thing is this; you must talk to me when you're frightened. Whether you should or shouldn't still be afraid is immaterial. The fact is that you are afraid. Kirei, are you afraid now?\"\n\n\"Yes but ...\"\n\n\"Why haven't you said anything?\" Kenji asked.\n\n\"Because the last thing you need is my insecurities.\" Patricia replied. \"And it isn't all of the time. When it happens, it's usually unexpected it's because I see or hear something that triggers it. What about you? What makes you think about it?\" Patricia asked as she wrapped her arms around him.\n\n\"Before I answer that,\" Kenji replied hugging her back, \"I think that you need to be reminded that we've made it this far because we have never kept anything from each other. Just as I should have talked to you, you should have talked to me. Our lives are only going to get busier and it will be easy for us to put off talking to each other. It's going to be even more important that we stay connected.\"\n\n\"I agree, but you didn't answer the rest of my question.\" Patricia said.\n\n\"Sometimes it happens when I'm sitting in class and my mind wanders.\" Kenji replied. \"I begin to miss you and almost always those months of being without you come to mind. That is why when I finally see you, I am so relieved and I have to touch you.\"\n\n\"We're never going to get over that are we?\" Patricia asked.\n\n\"I would say no.\" Kenji replied as he edged her back toward the bed. \"That experience is part of who we are.\" He added as he kissed her. \"I love you Kirei.\"\n\n\"I love you too.\" Patricia replied his face and then tangling her hands in his hair. \n\n\"Are you ready for me?\" Kenji asked as he positioned himself between her open legs.\n\nPatricia gave a barely imperceptible nod and sighed as Kenji slowly slid into her looking into her eyes as she did so. She lay still letting him have his moment before moving against him. Afterwards, instead of talking as they usually did, they held each other tightly and fell asleep.\n\n***\n\nHana looked at her wedding kimono and smiled. She was remembering her wedding to Hiroshi. She had thought that she was happy then and she supposed that she was, but it was nothing like how she was feeling at that moment. With Hiroshi it was more nerves than happiness she realized. With Nick, it was all happiness with a little nervousness. The smile vanished when she remembered the conversation that Nick had with his family a couple of weeks before. They were adamant in their opposition to their upcoming marriage. She could only imagine what they were saying because Nick's back was stiff and the muscles in his jaw were working like they did when he was angry. Then she heard the anger in his voice.\n\n\"I didn't call to ask your permission.\" He said. \"I called out of respect and to inform you. The wedding is January first if you choose to come. But let me warn you, if you can't come and be civil, then stay home.\"\n\nNick hung up after giving them the particulars of the ceremony. Hana hugged him not knowing what to say and feeling guilty as she remembered some of the things that she had said to Kenji about Patricia. She was now on the receiving end and now had a new appreciation for what Kenji and Patricia must have felt.\n\n\"I am so sorry.\" She whispered hugging him.\n\n\"You have nothing to be sorry for.\" Nick said kissing her. \"It's their problem not ours.\"\n\nHana stood up, touched the almost finished Kimono and decided that she wanted and needed to ask Patricia and Kenji once again for forgiveness. She looked at the clock and realized that the party at their house was still going on. She made plans to call them soon and to make her apologies.\n\nShe called them the next morning even before she made Nick's coffee. Her guilt at the way she had treated them had kept her awake. When she called, Kenji answered the phone.\n\n\"Mother? Is everything alright?\" He asked.\n\n\"It's fine.\" Hana replied. \"I just wanted to apologize to you and Patricia.\"\n\n\"Why?\" Kenji asked.\n\n\"Is Patricia nearby?\" Hana asked.\n\n\"She is in the kitchen.\" Kenji replied. \"Mother are you certain that nothing is wrong?\"\n\n\"I'm fine; may we come to see you after breakfast?\" Hana asked.\n\n\"We are picking up the children after lunch so we will be here.\" Kenji replied curious as to the reason for the apology.\n\n\"We will be there soon.\" Hana replied and hung up.\n\n\"Who was that?\" Patricia asked.\n\n\"Mother.\" Kenji replied. \"She and Nick are coming over after breakfast. She says that she wants to apologize for something.\"\n\n\"Did she say what?' Patricia asked frowning as she tried to think of why Hana would owe them an apology.\n\n\"No.\" Kenji replied as he took her hand and led her to the kitchen table. \"Sit and I will bring you breakfast.\"\n\nAn hour later, Nick and Hana were sitting in the living room holding hands. Kenji and Patricia looked at each other and then at them.\n\n\"I know that you are wondering why I want to apologize.\" Hana said. \"It's something that I've apologized about before, but until recently; I didn't realize... I didn't realize how disrespectful and how horribly I treated you until Nick spoke to his family about our wedding. Patricia, I cannot tell you how much I regret my part in what almost happened to you and for my treatment of you afterwards. I made an already difficult situation even more difficult.\n\nI have said this before and I will say it again. You are one of the strongest and most graceful people that I know. I have learned much from you and I hope to have just a little of your grace when I meet Nick's family for the first time. Kenjiro, when Nick was talking to his family I was reminded of you when you finally told us about Patricia. I heard the same firmness and resolution in his voice that I heard in yours. I also apologize to you for not accepting Patricia from the beginning and for allowing your father and Joben to do what they did. I humbly ask that you both forgive me.\"\n\n\"Hana,\" Patricia said after a moment, \"that's past history. You've been forgiven. I understood that you were caught between a rock and a hard place. So please, stop feeling guilty about it.\"\n\n\"I agree.\" Kenji replied. \"But I must confess that I was hurt and angry by what happened. It is time to move forward and to let go of the guilt. I am sorry that Nick's family is having a difficult time, but they could learn to love and accept you as you have learned to love and accept Patricia.\"\n\nNick stroke Hana's knuckles as he listened to the conversation. He wanted to believe what Kenji said, but he knew better. If his family came, it would only be to cause trouble. He was now regretting inviting them to the wedding, but it was too late to take it back. He could only hope that they didn't show up. Even as he thought it, he knew that they would.\n\nAfter the apologies were over, Hana and Patricia discussed the ceremony while Nick and Kenji talked about Andrew Kelly.\n\n\"He's never getting out.\" Nick said. \"And as far as we know, the group is all but disbanded. You still need to be careful.\"\n\n\"I understand... Nick, you are expecting your family to cause trouble at the wedding aren't you?\" Kenji asked.\n\n\"Unfortunately yes.\" Nick replied. \"I'm hoping that they won't make the trip.\" He added with a tight smile.\n\nThe conversation turned to general things until it was time to pick up the children from John and Hattie's house.\n\n\"I have an idea.\" Nick said. \"Why don't Hana and I pick them up and take them home with us? It's been a while since we've kept them and you two could have another night alone.\"\n\nKenji was tempted, but he missed them. \n\n\"Let me discuss it with Patricia.\" He finally said.\n\nThirty minutes later, Nick and Hana were on their way to John and Hattie's with a change of clothes for the children. Patricia called ahead to let them know about the change in plan. The telephone had been a gift for John and Hattie's anniversary from all of them. It had taken them a while to get used to the phone, but now they loved it.\n\n\"So Kirei,\" Kenji said nuzzling her ear, \"what would you like to do today?\"\n\nPatricia thought for a minute.\n\n\"I would like to do something that we haven't done in a long time.\" She replied.\n\n\"And what would that be?\" Kenji asked.\n\n\"I would like to go back upstairs, get back into bed and stay there until.... After lunch.\" She replied.\n\nShe knew by the bulge in Kenji's pants that he was in full agreement with her.\n\n\"Let's go.\" She said pulling on his hand.\n\n****\n\nSaul woke up late the next morning. He cried out in pain when he tried to get out of bed. \n\n\"What the hell?\" he mumbled through swollen lips.\n\n\"Hold on a minute.\" Joshua said. \"Let me help you.\"\n\n\"What happened?\" Saul asked and then he remembered the beating.\n\nIt was slow going, but finally Saul was in the bathroom. He steadied himself by bracing himself against the wall and urinated. The pain was temporarily forgotten as he felt the relief of emptying his bladdder. On his way out, he stopped to look at his reflection in the mirror. He was shocked and appalled at his appearance. His face was still swollen and bruised, his eyes so swollen that that his pupils appeared to be nothing more than a sliver of brown.\n\nWith a start he realized that he didn't know what day it was and if he was supposed to be at work.\n\n\"What day is this?\" He mumbled.\n\n\"Monday.\" Joshua replied.\n\n\"Work.\" Saul mumbled. \"I have to go...\"\n\n\"You're not going anywhere.\" Joshua said sternly. \"I already talked to your boss.\"\n\n\"He believed you?\" Saul asked.\n\n\"Not at first, but then he came by to see you.\" Joshua replied. \"Your job is safe.\"\n\n\"Dewey... I have to go back.\" Saul said.\n\n\"Not today you aren't.\" Joshua said as he helped Saul back to bed.\n\nSaul fell back to sleep only waking when he heard Cora calling his name.\n\n\"I made some broth.\" Cora said as she sat on the side of the bed. \n\n\"My uniform... is it...\"\n\n\"I managed to get the blood out of it and I mended it.\" Cora replied. \"Now hush and take some of this broth.\"\n\nSaul found that he was hungry and ate a second bowl of the broth this time feeding himself. By the end of the second bowl, he felt better; but was still in considerable pain. After eating, he began to force himself to move from the bed refusing any help. He had Joshua read his vocabulary words to him until he couldn't concentrate any longer.\n\nThe next time he woke up, it was close to dawn. Through the slits in his eyes, he could see his mended uniform hanging. He lay in bed for another thirty minutes before he got up, used the bathroom and dressed for work. As quietly as he could, he slipped out of the front door and began to walk to work.\n\nProgress was slow, but an hour and a half later; Saul was at the train station. No one noticed him at first, but when they did; all activity stopped.\n\n\"I'll be damned.\" Someone said in a voice that held respect.\n\n\"What?\" Harry asked.\n\n\"Look over there.\" Someone else said. \"It's your white buddy.\"\n\n\"What?\" Harry asked thinking that there had to be some mistake.\n\nHe turned around to see Saul slowly making his way toward them. \n\n\"Crazy assed white boy.\" He murmured under his breath as he ran out to meet him part way.\n\n\"What y'all starin' at?\" Dewey demanded when he came out. \n\nAs soon as he saw the reason for the stares, his anger rose. He stomped out toward Saul and Harry stopping less than a foot away from them.\n\n\"What did I tell you?\" He demanded. \"I told you that if you came back that I would kill you.\"\n\n\"You did mention that.\" Saul said.\n\n\"Why you here then?\" Dewey demanded.\n\n\"I work here.\" Saul replied and took a step toward Dewey. \"And I'm not quitting because you whipped my ass. I'm as entitled to work here as you are now get out of my way.\"\n\nDewey stood where he was and raised his fist.",
        "\"Go home white boy.\" He hissed.\n\nHarry stepped between Dewey and Saul and looked up at Dewey.\n\n\"I let you hurt my friend once, I ain't gonna let you do it agin.\"\n\n\"Harry...\" Saul mumbled.\n\n\"No!\" Harry exclaimed still looking at Dewey. \"Now, if you wanna get to him, then you gots to move me.\"\n\nUnbeknownst to Dewey, Harry and Saul, a small group of baggage carriers had moved closer so that they could hear what was being said.\n\n\"Why you helpin' him?\" Dewey asked. \"He let you put your cock in his white ass? Or maybe he lets you suck it.\"\n\n\"Say what you want.\" Harry said as he took another step closer to Dewey. \"But you ain't touchin' him agin.\"\n\nDewey laughed and shoved Harry so hard that he flew backwards into Saul. He was about to shove him again when someone spoke up.\n\n\"Leave em' be.\"\n\nDewey turned around seeing the group that had been watching and listening for the first time.\n\n\"Who said that?\" He demanded his voice filled with menace.\n\n\"I did.\" The same voice replied. \n\nDewey watched as a tall black man who was of mixed heritage stepped forward and walked toward him.\n\n\"I'll kick your half-breed ass too.\" Dewey snarled.\n\n\"Then you hafta kick mine too.\" Another voice piped up and stepped forward.\n\nOne by one the men in the group stepped forward and made a circle around Dewey, Saul and Harry.\n\n\"You might be able to take some of us.\" The light skinned man said, \"But you can't take all of us. I suggest that you take your ass to your station and stay away from these boys.\"\n\nDewey started to say something but though better of it when the circle around him tightened. He gave Saul a scorching glare and then pushed his way out of the circle.\n\n\"What the fuck Saul?\" Harry asked. \"What are you doin? You can barely walk.\"\n\n\"Like you all I have a family to support.\" Saul mumbled.\n\n\"How you gonna carry luggage?\" Harry asked.\n\n\"I'll manage.\" Saul replied. He turned to the group and addressed them. \"Thank you.\"\n\n\"Watch you back white boy.\" The light skinned man said, \"He ain't done with you.\"\n\n****\n\nIsadora's heart raced when the train made its first stop in Mississippi. In a few hours she would be home. She could already taste her mother's homemade biscuits smothered with butter and honey or one of her homemade jams. She couldn't wait to tell them about school and the friends that she made.\n\nShe and Noah hadn't talked of anything remotely personal for the last two days of the train ride. Instead, he drilled her on legal terminology and had her read passages from the law journals. Afterwards they would get into debates about the interpretation of the text.\n\nFinally, the train was pulling into the station closet to Greenville. Isadora was so excited that Noah gave her a rarely seen smile.\n\n\"Mr. Whitman will be waiting for us.\" Noah said when Isadora asked him about transportation from the station to Greenville. \"Isadora, I want to tell you something.\"\n\nIsadora looked at him expectantly.\n\n\"When I first met you, you were reading one of Whitman's law books. I had a feeling about you. That's why I drilled you that day. After talking to Whitman about you, we decided to help you go to school. After you got to California, Bella said something to me. She said that she could see you arguing before the Supreme Court. I concur and I will do anything that I can to help you get there. You are an amazing young woman and I am pleased to have made your acquaintance.\"\n\nIsadora was surprised. She had never considered herself special. She was driven to be sure, but special?\n\n\"I don't know what to say.\" She said after a few seconds. \"I can only say thank you for helping me and that I'll do my best not to disappoint you. I'm sorry, but did you say we?\"\n\n\"Yes.\" Noah replied. \"Whitman is one of many who contribute to the education and future s of young people such as you. I trust that you will keep that bit of knowledge to yourself. Things would become very difficult for him if this were found out.\"\n\n\"What about Mrs. Whitman?\" Isadora asked. \n\n\"She doesn't know.\" Noah replied.\n\n\"I understand.\" Isadora said. \"Why are you telling me this?\" she asked.\n\n\"It is my hope that when you are able that you will continue to help our people along. That is my hope for all that we help, but you are the most promising of any that we have helped. You will be the one to speak for us from a legal standpoint.\" Noah replied.\n\n\"You're putting a whole lot of faith in me.\" Isadora said. \"I hope that it isn't misplaced.\"\n\n\"It isn't.\" Noah said as he leaned forward. \"You Isadora Hughes are going to make a difference in this world.\"\n\nHe sat back and looked at her his gaze intent.\n\n\"I'll do my best.\" Isadora replied.\n\nTwo hours later, they were in Whitman's car heading towards Greenville.\n\n\"You look well.\" Whitman said to Isadora. \n\n\"Thank you sir and I mean for everything.\" Isadora replied.\n\n\"You're welcome.\" He replied with a smile. \"I'm pleased with how well you're doing at school. Noah tells me that you want to add more classes to your curriculum.\"\n\n\"Yes sir. I want to complete my undergrad as quickly as I can.\" Isadora replied. \"I also have a question for you.\"\n\n\"I'm listening.\" Whitman replied.\n\n\"Is it possible to go back and forth between and defense?\"\n\n\"It is but you can run the risk of conflict of interests.\" Whitman replied. \"It's best to choose a side and stick to it. But... you could on occasion take on a defense or prosecution case without too much trouble if the same individual wasn't involved.\"\n\n\"I thought as much.\" Isadora replied.\n\nWhitman's answer confirmed her choice. She was going to be a prosecutor first. The decision reminded her of the names on the paper. She wondered where they were and hoped that she wouldn't run into them. Even as she thought it, she knew that it would happen. Greenville was a small place where everyone knew everyone.\n\nShe sighed heavily and forced the thought from her mind. She would deal with it when and if it happened. She closed her eyes and let the sound of the car engine lull her to sleep.\n\n\"We're here.\" Noah said waking her up.\n\nIsadora sat up, rubbed her eyes and looked around into the darkness. Even in the dark she could tell that little had changed. A light tap of the car horn brought everyone out of the house. Isadora jumped out of the car and ran toward her family while Whitman and Noah unloaded her things.\n\n\"Thank ya Mister Whitman and Mister Jackson.\" Isadora's father Frank said. \"We appreciates y'all.\"\n\n\"I'm happy to help.\" Mr. Whitman replied.\n\n\"Mama, I asked Mr. Jackson to come for Christmas dinner.\" Isadora said.\n\n\"There's always room for one more.\" Her mother replied. \"Mr. Whitman you and the missus is welcome too.\"\n\n\"Thank you, that's very kind of you; but we already have plans.\" He replied.\n\n\"Then let me send a pie with you for the holiday.\" Isadora's mother insisted.\n\n\"Thank you... Mrs. Whitman enjoys your pies.\"\n\nAs they waited for the pie, Noah examined Isadora's family. He was looking that spark that Isadora possessed. He was looking for any spark that could be blown into a flame. So far, he had seen nothing, but then again; he was tired and it was dark.\n\n\"Here ya are.\" Isadora's mother said handing Whitman the pie.\n\n\"It's still warm, it ain't been out the oven but an hour.\" She said.\n\n\"It smells wonderful, thank you. Noah, are you ready to go?\" Whitman asked.\n\n\"Yes.\" Noah replied. \"What time shall I be here tomorrow?\" he asked Isadora.\n\n\"Come anytime.\" She replied. \"But we eat at four.\"\n\n\"I shall see you then.\" Noah replied with a slight bow.\n\nIsadora watched the car pull off while her brothers gathered her luggage.\n\n\"You gonna stand out here all night?\" her father asked. \"We been holdin' supper.\" \n\nSupper was loud and happy with everyone talking at once.\n\n\"So Izzy, do ya really pick grapefruit from a tree and eat it?\" Her father asked.\n\n\"I sure do.\" Isadora replied. \"In fact, I brought some back with me. Byron can you get that big bag? The one that you thought I put rocks in?\"\n\nThe room went silent as Isadora unloaded the bag of its contents. \n\n\"These came from Lenny and Bella's trees in their back yard. I tried to pick them when they weren't quite ripe.\"\n\nShe passed the fruit around smiling at the expressions on their faces.\n\n\"Oh and mama, I even brought some lemons for fresh lemonade for dinner tomorrow.\"\n\nThe laughter resumed as Isadora asked for a knife and began to cut up the fruit. Later, when the dishes were done, they sat around the living room in a comfortable silence that was broken by Byron.\n\n\"We all proud of you Izzy.\" He said. \"And we glad that you came home even if it for just a little while.\"\n\nIsadora swallowed the lump in her throat. She loved her family as much as they loved her. She renewed the promise that she made to herself to take them away from Greenville as soon as possible.\n\n\"I'm glad to be home.\" She said softly. \"I've missed all of you so much.\"\n\n\"We better hit the sack.\" Her mother said. \"We need an early start in the mornin'.\"\n\n***\n\nNoah checked into one of the few hotels that allowed blacks. It wasn't much with its lumpy bed and musty sheets, but it was preferable to doing battle with Whitman's wife. When he checked in, he noticed the way the clerk eyed him and knew that he had jacked up the price of the room. Noah didn't argue with the man, he just paid for the week and went about his business.\n\nWhen he got to his room, he locked the door and propped a chair up against it. Afterwards, he changed into his sleeping attire and went to look out of the window. He peered into the darkness taking in the shapes of the buildings. He hated Mississippi with a passion that he couldn't even begin to verbalize.\n\nHe reminded himself of the advice that he had given Isadora and took a deep breath. He stood peering out into the darkness for a long time before he lay down. Even then he couldn't sleep. His mind was on a certain young man who had just recently graduated from Morehouse College and was preparing for the ministry. He had a good feeling about him, his spark was already turning into a flame.\n\nNoah woke up feeling refreshed although he hadn't slept much. He wanted an early start since he would have to walk to Isadora's house for dinner. He was also hoping to find something open so that he could contribute to the meal. He started to leave his room, but doubled back. He took the small valise from under the bed and looked inside of it. After a moment, he picked the valise up and left the room. He walked past the clerk at the desk without speaking and walked outside into the cold, brisk morning.\n\nTaking that first breath of fresh air in the morning was always his favorite time of the day no matter where he was. As always, he stood for a moment enjoying the feel of the air on his face. He looked to his left and then to his right and then started off for the left. It was direction in which Isadora's family lived and if he was going to find anything open, it would be in that direction.\n\nHe walked for almost half a mile before he found a store open. It was owned by an older black man hoping to make a little extra money.\n\n\"Even the white folk come in here if they desperate.\" He said with a cackle. \"What ya look-in' for?\" he asked.\n\n\"I'll let you know when I find it.\" Noah replied as he wandered around the small store. He looked out of a window and saw a smoke house.\n\n\"Do you have any hams in there?\" he asked.\n\n\"I got one that's ready.\" The man replied.\n\n\"How much are you asking for it?\" Noah replied.\n\n\"It's a big one.\" The man said.\n\n\"How much?\" Noah asked again.\n\n\"Six dollars.\" The man replied.\n\n\"I'll take it.\" Noah said as he set his valise down and took out his bill fold.\n\n\"Yes suh!\" the man said excitedly.\n\nIt turned out that the man hadn't been exaggerating. The ham was huge and Noah had no idea of how he was going to carry it and the valise to Isadora's home. The man seeing his problem offered a solution.\n\n\"I ain't got a car, but I got an old bike with a cart hooked on the back. You welcome to it. Where you goin'?\"\n\n\"I'm going to the Hughes'.\" Noah replied.\n\n\"Oh they ain't but two miles down the road.\" The man replied. \"You in for a treat. Take the bike and drop it off tomorrow.\"\n\n\"I'll bring it back later tonight.\" Noah replied.\n\n\"Son, look here; the Klan boys don't take no holidays off. Now if I was you, I'd stay the night over there.\"\n\nNoah hadn't thought about that and was glad that he brought the valise. He offered to pay the man for the use of the bike and cart, but the man turned him down.\n\n\"No suh, I wasn't goin nowhere anyhow.\"\n\nA few minutes later, the cart was loaded and Noah was trying to remember the art of riding a bike. Fifteen minutes later, he was on his way.\n\n***\n\n\"Somebody coming on a bike!\" Byron yelled.\n\nIsadora joined him on the porch squinting to see who was coming.\n\n\"That's Mr. Jackson.\" She said. \"Where'd he get the bike?\"\n\nNoah rode up ringing the little bell on the handlebars. To Isadora he seemed years younger and there was a light in his eyes that she hadn't seen before. She could almost see him as a young man twenty to thirty years younger. It made her wonder what happened to him to take away the mischievous sparkle in his eyes.\n\n\"Woooo weeee!\" Noah exclaimed as he jumped off the bike. \"It's been a long time since I rode a bike.\"\n\n\"Whose bike is it?\" Isadora asked.\n\n\"I stopped at the store about two miles down.\" Noah replied. \"I bought a ham and I couldn't carry it and my valise so the owner offered me the use of his bike.\"\n\n\"That's Mister Humphries.\" Byron said. \n\n\"Yes well, there's a ham in the cart.\" Noah said. \"Would you mind carrying it in?\"\n\n\"Yes suh.\" Byron replied.\n\n\"Isadora, is there a place for me to put my valise?\" Noah asked.\n\n\"There's a cabinet in my room. No one will bother it.\" Isadora replied.\n\n\"I'm not worried about that.\" Noah replied as he handed the bag to her.\n\n\"Isadora! Where your manners?\" Her mother called out. \"Mr. Jackson come on in and makes yourself at home.\"\n\nThe small house already smelled of roasting meat and baking bread. Noah's stomach growled in anticipation. As if she heard his stomach roar, Isadora came into the living room with a plate containing several slices of bread slathered with butter and honey. \n\n\"It's going to be a while until supper.\" She said. \"This should hold you.\"\n\n\"Thank you.\" Noah said gratefully accepting the bread.\n\n\"They're playing horseshoes out in back if you want to join them.\" Isadora said. \n\n\"I think I'll do that.\" Noah replied with a smile.\n\nAfter Isadora went back to the kitchen, Noah took a bite of the hot bread and closed his eyes. The odors coming from the kitchen and the sounds coming from the outside took him back to a much happier time in his life. He could even hear Angela, his wife scolding someone for snitching a piece of bread. A solitary tear ran down his cheek at the memory.\n\nHe jarred himself from the memory, wiped his face and finished the bread. He carried the plate to the kitchen, thanked Isadora and her mother and went outside where a loud game of horseshoes was in progress.\n\n\"I didn't cook the ham.\" Isadora's mother said as they sat the table, \"But I'll slice some for breakfast... You is stayin' ain't ya?\"\n\n\"I don't want to impose...\"\n\n\"It isn't safe.\" Isadora broke in. \"Mama was telling me that just last week two black boys were found hanging. The word is that they were out checking their traps and they lost track of time.\"\n\n\"I thank you for your kindness.\" Noah said respectfully.\n\n\"Taint no problem.\" Byron said. \"Like mama says, there's always room for one more. You can bunk with me.\"\n\n\"Make sure you let him sleep by the window.\" Isadora teased.\n\nA burst of laughter filled the small house and the stories about Isadora's childhood began. That night, Noah slept peacefully. In the morning, he would pull Byron aside and talk to him, he had seen something. Isadora's other brother and his wife would have to stay put. It wasn't that Noah thought them stupid or unworthy, but he had to be selective in where he put the money. He hoped that in time, that an education would be available to everyone, but for now...\n\nAs he closed his eyes, he thought about the white boy that he had seen at church and then again when he had gone to the defense of a black co-worker. Until he saw that, he hadn't entertained the idea of providing an education for a white person. But... he had seen that spark. It was as bright as the one that he had seen in Isadora.\n\nJust as Noah was almost asleep, Byron let out a sound and then an odor that made his eyes water. Noah now understood why Byron had insisted that he sleep by the window. Noah let out a soft chuckle and went to sleep.\n\n*****\n\nThe day after Christmas, Patricia, Abby and Hattie helped Hana put in the final stitches of her wedding kimono. It was beautiful in its simplicity.\n\n\"Hana this is breathtaking.\" Abby said softly. \"Thank you for allowing me to put in a few stitches.\"\n\n\"It wouldn't be complete if I did not have you and the others do this.\" Hana replied. \"It is because of you that this is happening.\"\n\nAfter the dress was finished, Hana served tea. The first one that she served was Patricia. She handed her the tea cup with a bow. \n\n\"Thank you daughter.\" She said softly.\n\n\"I am honored to be your daughter.\" Patricia said with a bow of her head.\n\nHana went to each woman and thanked them before sitting down to join them. The women sipped their tea each of them thinking about how they had come together.\n\n\"So are you ready?\" Hattie asked.\n\nPatricia listened to her mother talk. The speech of old was about gone only reappearing when she was excited. Both of her parents were now reading at high school level thanks to Kenji's gentle teaching.\n\n\"I am ready and very happy.\" Hana replied with a smile.\n\n\"Have you heard back from Nick's family?\" Patricia asked.\n\n\"No.\" Hana replied. \"Nick is hoping that they will not come, but a meeting is inevitable. I would rather meet them and be done with it even it is at the wedding.\"\n\n\"Maybe they'll behave.\" Abby said. \"Where will they stay?\" Abby asked.\n\n\"Nick will pay for a hotel.\" Hana replied. \"He does not want them here.\"\n\n\"There's room at my house.\" Abby said.\n\n\"And at ours.\" Patricia chimed in. \"But I would bet that they wouldn't want to stay with us.\"\n\n\"Thank you for your kind offers.\" Hana said. \"I will let Nick know.\"\n\n\"I talked to Sally this morning.\" Patricia said. \"She's hoping that the doctor will let her out of bed to come to the wedding. I told her that we would take lots of pictures and make sure that she got a piece of cake.\"\n\nThe women chatted until it was time to go home and make dinner. Abby was going to have dinner with Patricia, Kenji and the children. It had been a long time since she had spent an evening with them and she had something that she needed to talk to them about.\n\nAfter dinner was over and the kitchen cleaned, Abby read to the children. When they were in bed, she broached the subject that she had been thinking about for weeks.\n\n\"Before I say anything,\" Abby said. \"I'm fine. I feel wonderful so don't panic.\"\n\nKenji and Patricia looked at each other worriedly.\n\n\"Will you stop that?\" Abby said curtly. \"I'm fine. I just want you to know a few things. In case anything should happen to me, my attorney has papers for you. Since I consider you my only family, everything that I have goes to you. This house is already in your name but I added it to the list anyway. The other thing is this, if something happens and I can't make my own decisions; I want you to let me go.\"\n\n\"Abby...\" Patricia said.\n\n\"Now listen to me.\" Abby said. \"I've had one hell of a life and lord willing; I'll be around for a few more years. But if that doesn't happen, I just want to be kept comfortable. It's all in the papers. I know that it you take me to the hospital they'll do whatever they have to do regardless of my wishes. That's why I want to die at home surrounded by my family. Having said that, if whatever is wrong with me is fixable; then by all means fix it.\"",
        "It took Abby several minutes to convince them that she wasn't sick but thinking ahead. She knew that of the two of them, Kenji would be the one to understand. Patricia would fight it no matter what. \n\n\"We will do our best to comply with your wishes.\" Kenji replied. \n\n\"That's all that I'm asking for.\" Abby replied with a smile.\n\n\"Abby, are you sure that you aren't sick?\" Patricia asked.\n\n\"I feel wonderful and plan to watch you graduate from medical school which reminds me. I am more than able and willing to watch the children to give you additional study time.\" Abby said changing the subject. \"I can come here if you like or they can come to my house.\"\n\nPatricia accepted grateful for any extra help that she could get. The science classes still worried her in spite of Kenji's belief that she would do well.\n\n***\n\nSaul made it through each work day with the help of some of the others. He knew that the light skinned was right and made every attempt to stay out of Dewey's way. If there was another confrontation, he would stand as he did before, but he wasn't going to look for trouble either. He noticed that he was rarely alone and if he was, Dewey was nowhere to be seen. He didn't get to properly thank the man who had spoken up first after Harry until a few days later.\n\nThe man, Clinton Walls accepted the thanks with a curt nod of his head and walked away. Saul finished his shift in considerable pain, but it was getting easier to do more of his own work. The swelling in his eyes had gone down enough that he could see adequately and the bruises while still a vivid black and blue were beginning to fade. \n\nDewey hadn't and wouldn't be forgetting about him anytime soon so Saul kept his guard up at all times. He also knew that it was only a matter of time before Dewey would manage to catch him alone. Joshua and Reggie had managed to find out who Dewey was and where he lived.\n\n\"We want to have a little talk with him.\" Reggie said.\n\n\"Please don't do that.\" Saul said. \"I'll deal with it on my own.\"\n\nIt had taken him some hard talking to convince them not to interfere and a promise on his part that he would ask for help if he needed it. Neither man had been happy that he had gone back to work so soon, but they understood his rationale.\n\n\"Just watch your back.\" Reggie told him.\n\nReggie, Saul found out was Cora's nephew who was visiting for the holidays from Huntsville, Alabama. He had just arrived on the night of the fight with Dewey. He didn't find out about Saul until he got there. As the week passed, Saul and Reggie became friends. It was with Reggie that Saul discussed his future with and told the story of Jacob in its entirety.\n\n\"Your friend sounds a lot like Uncle Joshua.\" Reggie commented. \"I also agree with Uncle Joshua in that Jacob was murdered in plain sight. The question is what are you going to do about it? The way I see it is that if you at least the ball rolling, it would go a long way toward honoring your friend.\"\n\n\"That's true, but what can they do from here?\" Saul asked. \"Who would believe a felon?\"\n\n\"I can't answer the first question.\" Reggie replied. \"But I can answer the second one. You have several things to your advantage. One, you're white. Felon or not, that's going to carry some weight.Two, you've already been in contact with that lawyer so you have a history with him and three, what you told him turned out to be true.\"\n\n\"The other issue is this,\" Saul said. \"My family is still down there. If Ellis finds out that I've said anything he'll do something to them.\"\n\n\"If their safety wasn't an issue would you go see the lawyer?\" Reggie asked.\n\n\"I ... Yes.\" Saul replied after a brief hesitation. \"But how would I manage that? There is no one close by or at least no one that would help them.\"\n\n\"May I ask a personal question?\" Reggie asked.\n\n\"I guess so.\" Saul replied.\n\n\"How does your mama feel about black folk?\"\n\n\"Her feelings softened a little when I told her about Jacob.\" Saul replied. \"Why do you ask?\"\n\n\"I just had a thought, but if she doesn't care for black people; then it isn't an option. Are you sure that there's no place that they can go?\"\n\n\"I'm sure.\" Saul replied.\n\n\"There is another option.\" Reggie said. \"You could bring them here.\"\n\n\"Here?\" Saul asked. \"Where would they live?\"\n\n\"I was just making a suggestion.\" Reggie said.\n\n\"I know.\" Saul said. \"And as much as I like the idea, I don't have enough money saved to get them all here. But I still have a decision to make don't I?\"\n\n\"Another personal question.\" Reggie said. \"Why were you in prison?\"\n\n\"I killed my father.\" Saul said. \"He was hurting my sister and I hit him over the head with an iron skillet. I didn't mean to hit him as hard as I did, but... he died soon afterwards.\"\n\n\"Let me ask you another question.\" Reggie said. \"Why didn't you take another way home last week? You knew that Dewey was waiting for you. And when you saw him; why didn't you run? You knew that there wasn't a chance in hell that you could win.\"\n\nSaul thought about his answer.\n\n\"My father was a miserable man who thought that everyone needed to be as miserable as he was. The highlight of his day was watching us cringe when he came home from work. He was a bastard. But... he did teach me something and that was to never run from trouble. He used to say that once you run, you'll keep running. I knew that I was going to get my ass kicked, but I refused to run and I will never run.\"\n\n\"Saul,\" Reggie said after a moment. \"Were you listening to yourself?\"\n\nHe had been.\n\n\"Reggie, will you help me write a letter to my mother?\" He asked.\n\n\"Of course.\" Reggie replied. \"Have you thought about what you want to do with your life? Surely you don't want to be a bag boy forever.\"\n\n\"That's the other thing that I've been thinking about.\" Saul said. \"I've never considered myself a religious man until I left South Carolina. Most of the people that I met on the train were Christian people who shared their food with a white man when they didn't have to. Going to church with Joshua and Cora has made me realize a few things... I think that I want to be a minister.\"\n\nReggie didn't speak for several minutes. Saul's revelation surprised him, but then; it really didn't. He admired Saul's quiet strength and courage.\n\n\"I think that you would be a good minister.\" Reggie said.\n\n\"Do you really think so?\" Saul asked.\n\n\"Yes I do.\" Reggie replied. \"What we need to do is to step up the pace on your learning to read as it stands now, you wouldn't make it through a college course. I plan on staying for a while and I'd be happy to help you.\"\n\n\"Reggie, what did you do before you came here?\" Saul asked.\n\n\"I was a school teacher.\" Reggie replied with a smile. \"Shall we go write that letter?\"\n\n****\n\nIsadora was disappointed at how fast the visit home was going. She and Noah would be on the train the day after New Years for the journey back. Noah had decided to stay with them after he had gone back to his hotel room to find it ransacked. Most of his clothes had been shredded and the words \"uppity nigger\" had been scrawled on the room's only mirror and on the walls. Noah had made no comment other than he was glad that he thought to take his valise with him. When he checked out, the clerk told him that he had to pay for the damages to the room. Not wanting to start an argument that he knew he wouldn't win, Noah paid the extra money and checked out. It was another reminder of why he hated Mississippi.\n\nIsadora walked to town on full alert. She listened to every sound, quickening her step if she heard anything that didn't sound right to her ears. Noah had asked if she wanted company, but she said no. She wanted to walk this walk so that she could refresh her memory.\n\nShe made it to town without incident and went to Mr. Whitman's office. Seeing that he was with a client, she walked to the general store to buy a few staples for her family. Noah had given her the money and told her to get whatever she could carry. She looked at the prices and decided to go to the same black owned store that Noah had bought the ham from. She knew that the Mr. Humphries would appreciate it and that Noah would approve. \n\nShe was at the back of the store and walking toward the entrance to leave when she heard him. \n\n\"Come on sugah\" He was saying to someone. \"The wedding is in a few weeks and I've already spent a fortune.\"\n\n\"Just this one thing... please?\" A soft voice pleaded. \"I promise that I won't ask for another thing.\"\n\n\"I believe that's what you said the last time.\" He said his tenor voice filled with amusement. \"But go on, I'll meet you there.\"\n\nIsadora was frozen in place, her mouth was dry and her heart was pounding so loud that she was sure that he could hear it. She waited until she heard the front door of the store open and close. Thinking that he had gone, she stepped out. Too late she realized her mistake and tried to step back; but he saw her.\n\n\"Well if it isn't the college girl.\" He drawled. \"I heard that you were back.\" He said.\n\nIsadora couldn't speak. She looked down unable to look into his leering face. She took a step backwards when he stepped closer to her.\n\n\"You've been the talk of the town.\" He said softly. \"An attorney huh? I always knew that you were smart for a nigger. In fact, I always thought that you were too smart for your own good. But... you sure did feel good...\"\n\nIsadora's face burned at the memory and then anger set in. She looked up at him with eyes filled with fury and hate. \n\n\"If you like, I can set up a repeat performance... \"\n\nIsadora snapped. Before she realized what she was doing, she slapped him across the face as hard as she could. The store owner looked up and then looked away. He had no desire to get mixed up in whatever the mayor's son was into.\n\n\"I could have you arrested for laying hands on a white man.\" He said as he rubbed his cheek. \"And then you could kiss that college education good bye.\"\n\nIsadora took a shaky deep breath. He was right. She followed Noah's example and chose not to fight a fight that she had no hope of winning. She would concede the fight in order to win the war. But she wasn't leaving until she had her say.\n\n\"I hear that you're getting married.\" She said. \"Congratulations.\"\n\nHe stepped back confused by her change in attitude.\n\n\"Enjoy your life while you can.\" She said. \"I'm not threatening you; I'm just wishing you well and warning you that you'll see me again.\"\n\nShe pushed past him, decided not to wait for Mr. Whitman and took another way home. She no longer needed to refresh her memory. It was a longer walk by a mile and she got to the store just before Mr. Humphries was closing for lunch.\n\n\"You jus' caught me.\" Mr. Humphries said when she walked in. \"What can I get ya?\"\n\nSoon Isadora had more than she could carry and needed to use the bike with the cart. As she biked the two miles home, she tried to forget the encounter in town. She wasn't ready to share her anger and outrage... not yet.\n\n\"What did you do?\" Her mother asked. \"Buy out the store?'\n\n\"I left a few things.\" Isadora said smiling.\n\nSomething about Isadora caught her mother's attention.\n\n\"You alright?\" she asked.\n\n\"I'm fine.\" Isadora replied. \"I'm just thinking about how fast the time flew.\"\n\n\"It sure did.\" Her mother agreed. \"It was sure nice havin' you home.\"\n\n\"It was good to be here.\" Isadora said. \"In a few years I'll be back.\"\n\n\"What you mean?\" Her mother asked surprised. \"Why you wanna come back here? There ain't nothing here.\"\n\n\"You're here.\" Isadora said wishing that she hadn't said anything. \"This will always be home for me.\"\n\n\"I understand, but baby; this place has so much hatred. You need to be where you can do some good. This place ain't ready for you.\"\n\nIsadora didn't reply. If she did, she would have to explain why she had to come back.\n\n\"We'll see.\" She said. \"Graduation is a long ways off.\"\n\nNoah stood on the other side of the door listening. He wanted to know why it was so important to Isadora that she came back. He also knew that she wouldn't tell him unless he revealed something about himself. Then the question became how badly he wanted to know what Isadora was hiding.\n\n***\n\nThe first of Nick's family arrived on December 30. The rest of them would arrive on the morning of the 31st. He had given Abby's offer of having people stay with her some thought and decided that his parents would be a good match. His brother, sisters and their spouses would stay at a hotel. He didn't even consider Kenji and Patricia's offer. He already knew what the reaction would be and he wouldn't and couldn't do that to them.\n\nHe looked over at Hana who was dressing for the evening. He could tell that she was nervous even though she tried to hide it. It was at her insistence that they were even seeing his family before the wedding.\n\n\"Maybe if we meet before the wedding, all will be well.\" She said.\n\nHe didn't agree, but it was worth a shot. Then she invited Kenji, Patricia and the children along with John and Hattie. He tried to change her mind, but she stood firm.\n\n\"These are our family and I am not ashamed of them. I would rather have them meet tonight than tomorrow. If your family cannot accept ours, then they will have an opportunity to change their minds about attending the wedding.\"\n\nNick didn't like it, but conceded that she had a point. Kenji, Patricia and the others were informed of the probability of a problem. He strongly suggested that the children be left at home. Kenji agreed and asked Joel and Penny to babysit since they had no New Year's Eve plans.\n\nAbby arrived first with Nick's parents. She had spent a day with them and had decided that if they left, it wouldn't be too soon. Nick's father grated on her nerves from the moment they walked in the door. His mother hadn't been much better.\n\n\"So do you know this Jap broad?\" Louis Alexander asked.\n\n\"I know Hana quite well.\" Abby replied bristling.\n\n\"I'm sure that she's a nice woman.\" Julia, Nick's mother said. \"But she's the enemy!\"\n\n\"The war is over.\" Abby said. \"And Hana was never an enemy to this country. In fact, many of those interred were born here.\"\n\n\"Planted as spies no doubt.\" Louis replied as he looked around the living room.\n\nAbby bit her tongue. She could see that there was no reasoning with them. What amazed her was that given their own humble lifestyle, they were making snide remarks about the house.\n\n\"You don't have a pool?\" Julia asked.\n\n\"No.\" Abby replied. \"I don't swim.\" \n\n\"I don't know, but Nicky made this place sound like a resort.\" Louis said.\n\n\"Just what did Nicky say?\" Abby asked.\n\n\"He said that we would be staying at a nice place... and I guess it is; it just isn't what we were expecting.\" Louis said.\n\n\"Louis, you're being rude.\" Julia said. \"Thank you for opening your home to us.\" She said to Abby. \"I smell dinner cooking; can I help you with something?\"\n\n\"No, why don't you make yourselves at home?\" Abby said wanting a few minutes to gather her wits.\n\nShe had just gone into the living room to announce dinner when she heard Nick's parents talking.\n\n\"Who are these people?\" Julia was asking. \"Is that a colored woman with a Jap? And that one must be her...\"\n\n\"Those are photos of my family.\" Abby said interrupting them before they said anything to really set her off. \"The lovely woman standing next to Nick is Hana. Standing next to her is her son Kenjiro and his wife Patricia. The two little ones are their children Ralph and Marie. The tall distinguished looking black man is Patricia's father John and the beautiful woman next to him is his wife Hattie who happens to make the best apple pie on this side of the earth.\"\n\nJulia and Louis looked at each other and then at the photos.\n\n\"Are they going to be at the wedding?\" Julia asked.\n\n\"Of course they are!\" Abby snapped. \"They're family aren't they?\" \n\nJulia blinked at her tone but said nothing. What had their son gotten himself into?\n\nDinner was tense at best, but Abby refused to apologize. If Louis and Julia decided to leave, she would take them to the train station herself. She was actually hoping that they would want to leave, but no such luck.\n\n\"Dinner was good, thank you.\" Julia said softly.\n\n\"You're welcome.\" Abby replied. \"I have one of Hattie's pound cakes for dessert if you're ready.\"\n\n\"Hattie... she's the colored woman who makes the pies right?\" Louis asked.\n\n\"Yes... would you care for a piece of cake?\" Abby asked.\n\n\"You got coffee to go with it?\" Louis asked.\n\n\"Of course.\" Abby replied gritting her teeth.\n\nShe got up from the table and began to gather the dirty dishes. Julia began to help her. When they were alone in the kitchen, she apologized.\n\n\"Louis is like any man,\" she said, \"He's got his ways. I'm sorry if he offended you.\"\n\nAbby wondered how parents like these could have raised someone like Nick. The bigger question was why their obvious bigotry didn't affect him more than it had.\n\n\"So do you really claim all of those people as family?\" Julia asked as she scraped the plates.\n\n\"Yes I do and that includes Nick.\" Abby replied. \"I should also tell you that I take offense to any snide or blatant comments that are made about any of them. The coffee is ready and the cups are in the cabinet next to the stove.\"\n\nAbby wished that she could slip away and call Nick to give him a heads up, but the opportunity didn't present itself. She could only hope that he had a clue.\n\n***\n\nHana finished dressing, kissed Nick and went to the kitchen to finish dinner. Nick followed her to the kitchen to help, but was caught by the ringing of the doorbell. He opened the door to let Abby and his parents in. \n\n\"Come in.\" he said a tad stiffly. He could already see the thoughts that were swirling around in his parents' head.\n\n\"I thought that you were some big time lawyer.\" His father said looking around the living room.\n\nThe comment reminded Nick of why he had never invited his family to visit. Instead of addressing the comment, Nick turned to his mother.\n\n\"Mom, you look great.\" He said as he kissed her on the cheek.\n\n\"And you're just as handsome as ever.\" Julia replied. \n\nNick greeted Abby next murmuring a thank you in her ear. He could only imagine what the last several hours had been like for her. A moment later, Hana came in from the kitchen.\n\n\"Hana honey, come meet my parents.\" Nick said holding his hand out to her.\n\nHana walked toward him and took his hand relieved when he pulled her into his side.\n\n\"Mom, Dad; this is Hana . Sweetheart, this is my mother Julia and my father Louis. The others should be here soon.\"\n\n\"Welcome to our home.\" Hana said with a shy smile and bow. \"Please sit down. Dinner will be ready as soon as the others arrive.\"\n\nNo one missed the fact that Nick's parents hadn't spoken to Hana when she addressed them. Instead they stared at Hana as if she was something other than human. It took Nick making the same suggestion before anyone moved. By the time they were sitting. Kenji and Patricia and the others with the exception of the rest of Nick's family had arrived.\n\nThe introductions if possible, were even tenser than before. The tension rose to the roof when Nick's siblings and their spouses arrived. His Brother, Tyler had fought in Germany and had participated in D-Day. Both of his sisters' husband's had fought in the war with one of them fighting in the Pacific arena.\n\nWhen Tyler looked around the room taking in the sea of multicolored faces, he swore.\n\n\"Is this fucking for real?\" He asked. \"Are you really going to marry a Jap?\"\n\nNick didn't answer at first. He was trying to contain his anger.\n\n\"And then you got these... people here.\"\n\nThe room was quiet. No one said a word until Nick's brother-in-law Douglass opened his mouth.\n\n\"Damn Nick, not only are you marrying a Jap, you got the coloreds in here too. But to be honest with you, I'd rather see you marry one of them. At least they were born here.\"",
        "Nick jumped to his feet and went for Douglas.\n\n\"Nick!\" Hana cried out just as he reached Douglas. \"Don't! It's alright!\"\n\n\"The hell it is!\" Nick shot back. \n\nHe had stopped in front of Douglas and was glaring at him. Then his glare went from him to the others in his family. \n\n\"I didn't want you here.\" He said his voice low and intense. \"I only told you about Hana out of respect. I didn't want to invite you, but she wanted to give you the option to say no. I like a fool agreed with her. You all knew that she was Japanese before you came so why you're here is beyond me unless it was just to raise hell.\n\nJust as you prefer that I was marrying a black woman, I prefer that you weren't here. Consider yourselves uninvited to the wedding. Feel free to stay at the hotel until your departure date which is January second. Tyler you drove didn't you?\"\n\n\"Yeah but Nicky come on! These people aren't your family!\"\n\n\"You're wrong there.\" Nick replied. \"They are my family. We've been through more shit together than you can even begin to imagine. I knew that you would have issues and that's fine; but they're your issues. What I didn't expect was the blatant show of disrespect. I expected the snide comments and was prepared for them, but this... I want you all out of here. Mom and dad, I'll take you back to Abby's and then check you in at the hotel.\"\n\n\"Nick.\" John said softly. \"Maybe they could...\"\n\n\"No.\" Nick said firmly. \"They've made their position clear and there's no point in trying to pretend that they didn't. I'm only surprised that my father hasn't said anything yet.\"\n\n\"I don't need to.\" Louis said as he stood up. \"Just so you know, I didn't want to be here anymore than you wanted me here. I only came because your mother wanted to come although for the life of me I don't know why. She isn't any happier about this than I am. I'm done here, let's go.\"\n\n\"Wait... please.\" Hana said softly.\n\n\"I... I made dinner, so will you please stay?\" she asked looking at Julia seeing the indecision in her eyes. She communicated with her mother to mother and as one who understood what it felt like to have a child make a choice that was less than pleasing.\n\nJust as Julia was going to speak, Louis jumped in.\n\n\"We're not staying. Nick, let's go.\"\n\nEveryone watched in silence as Nick's birth family gathered their things and headed for the door. As they left, Hana realized that she now knew exactly how Patricia had felt. After they were gone, Hana let the first tear fall. Patricia took her by the hand and led her to the kitchen and hugged her.\n\nBy the time Nick got back, dinner was on the table. He could tell that Hana had been crying and felt horrible. He hugged her and kissed her before taking her into his office.\n\n\"Baby I'm sorry. I never should have let them come.\"\n\n\"We had to try.\" Hana said softly. \n\nThey stayed in the office for a few more minutes before joining the others for dinner. Hana ate very little, but the others had no problems with their appetite. Abby noticed that Hana wasn't eating and addressed it.\n\n\"Hana, they aren't worth losing any sleep or wasting any tears over. They came with their minds already made up. The thing to think about now is that by this time tomorrow, you and Nick will be married. So why don't you try to eat a little more of this delicious dinner that you made?\"\n\n\"Honey she's right.\" Nick said taking her hand in his.\n\n\"Kenjiro, is that what you thought of us?\" Hana asked.\n\n\"Yes it was.\" Kenji replied. \"It hurt to think like that, but Patricia was and is my life. If I had to do it again, I would make the same choice.\"\n\nHana didn't say anything for several minutes. Finally, she smiled at him.\n\n\"Patricia and I are very fortunate women to have men such as you and Nick in our lives.\"\n\nThe mood at the dinner table lightened and became festive as last minute plans for the wedding were discussed. At midnight they brought in the New Year together and then parted ways.\n\n***\n\nAndrew sat on his cot with his back against the wall. His eyes were closed and in his mind, he was at home. He was dressed in his pajamas instead of the blue prison uniform and he was warm. He could smell his mother's fresh cinnamon rolls as they baked. His mouth watered just at the thought of them. In his mind, it was ten in the morning instead of six am. In his mind, he was just waking up. He had nowhere to be. He was still on break from school.\n\nThe sound of the clanging bell announcing roll call pulled him from his reverie. He got to his feet, put on his jacket and took his place outside of his cell. He was in Cell block A which was designated for the good prisoners and he was determined to stay there. So far he had managed to keep his nose clean. He found it hard to believe that he had only been on 'the rock' for a few weeks. It felt more like a lifetime ago since he saw Kenji for the first time and his life began a slow descent until he was now where he was.\n\nA few minutes later he was in the dining room eating breakfast. Instead of it being a leisurely affair, he had twenty minutes to eat as much as he wanted. After breakfast, he would be taken back to his cell where he would read and daydream about home and the life that he had lost. \n\nOn occasion, he would hear talk about escape and when he did; he closed his ears. He heard the stories about those who attempted it and decided that he didn't want to join their ranks. Full, but not stuffed from breakfast, Andrew was taken to his cell where he began to read one of several books that he got from the library But what he really wanted was news from the outside world.\n\nHe knew better than to ask the guards or the inmates that had visitation rights. The inmates that had visitors didn't know any more than he did. All of their conversations were monitored and any news was strictly about family.\n\nAndrew inhaled and then grimaced. There was a time when he loved the smell of the ocean, but no more. He decided that if he ever got out of prison, he was going to move as far away from the ocean that he could get. He closed his eyes, blocked out the sounds and smells of the ocean and began to read.\n\n****\n\nThe sky was a clear blue on Nick and Hana's wedding day. Hana still wished that things had turned out differently with Nick's family, but she had done her best. She looked at the kimono that hung in the doorway in Kenji and Patricia's room. The sounds of the children laughing as they hung the decorations for the reception wafted through the open windows. In less than three hours, she would be Hana Alexander.\n\nShe wondered if Hiroshi and Dai would come. She had invited them to dinner, but Hiroshi had other obligations. He had given her no answer to the wedding invitation. She understood. It would be awkward to watch one's ex-spouse marry another.\n\nAn hour later, Abby, Patricia and Hattie were in the room helping her to get ready. She had surprised all of them by asking John to escort her to Nick. \n\n\"I would be honored if you would do this.\" She told him the night of the dinner with Nick's family.\n\nJohn had been speechless and responded by vigorously nodding his head. One of the things that he would always regret was not going to either of Patricia's weddings. \n\nKenji stood with Nick waiting for the wedding to start. \n\n\"Are you nervous?\" Kenji asked.\n\n\"A little.\" Nick replied with a chuckle, \"But I don't know why. We've been living together as a married couple for a long time.\"\n\n\"Maybe it is because you don't have to keep my mother hidden any longer.\" Kenji suggested.\n\n\"Maybe so.\" Nick agreed. \"Thank you for your blessing. It means a lot to us.\"\n\n\"Nick, I considered you my mother's husband long before this.\" Kenji replied. \"I also consider you my father although my birth father lives.\"\n\nThe first strains of soft music filled the air. The minister made his way to the Nick and Kenji and urged them to their places. Nick looked around to see who had come. Charles along with his fianc\u00e9e sat in the second row. Briscoe sat to Charles' left and gave him a curt nod. Paul and his fianc\u00e9e sat behind Briscoe with Penny, Joel and the children sitting behind them. Abby, Patricia and Hattie sat in the front row leaving Maeve to take care of the music.\n\nNick's breath caught when he saw Hana coming toward him, her hand resting on John's arm. Unable to help himself, he met them half way and finished the walk to the minister with them. After thanking John, he took Hana's hand and nodded.\n\nThirty minutes later, Hana Takeda was Hana Alexander.\n\n******\n\nNotable Alcatraz inmates: Al Capone, George \"Machine Gun\" Kelly, Robert Stroud-\"Birdman of Alcatraz\" and Alvin Karpis who was the inmate with the longest stay at Alcatraz- twenty-five years and one month. He was also the last of the \"Public Enemies.\"\n\n*******\n\nCivil Rights\n\nThe Peekskill Riots took place at Cortlandt Manor, Westchester County, New York. The riots were anti-communist with anti-black and anti-Semite undertones occurred at the announcement that Paul Robeson would be performing at a concert to benefit the Civil Rights Congress.\n\n1949 is the first year in which there were no reported lynchings of Afro-Americans in the USA \n\nJames A. Colescott, the Imperial Wizard for the Klan from 1939-1944 dissolved the Klan (the second Ku Klux Klan) after the IRS placed a $685,000 lien against the organization.\n\n*******\n\nAmerican history events\n\nPresident Harry S. Truman reveals his Fair Deal program.\n\nThe first Volkswagen Beetle arrives in the United States.\n\nThe \"Red Scare\" occurs. Several celebrities including Helen Keller, Danny Kaye, and Fredric March are named in an FBI report as being Communist Party members.\n\nAlbert II, a rhesus monkey is the first primate to enter space.\n\nHopalong Cassidy, the first television western airs on NBC.\n\nKDKA-TV becomes the first local, on air television station in the US.\n\nThe last of the US troops leave South Korea.\n\nThe last six surviving veterans of the War Between the States meet in Indianapolis.\n\nHoward Unruh, a WWII veteran becomes America's first single-episode mass murderer.\n\nThe Housing Act of 1949 is enacted.\n\nIva Toguri D'Aquino is found guilty of broadcasting for Japan as Tokyo Rose\n\nHeavyweight Champion Joe Louis retires.\n\n********\n\nWorld events\n\nThe rationing of clothes ends in Britain.\n\nAurora Quezon former First lady of the Philippines is assassinated\n\nIndia issues the London Declaration which enabled it and any other nation to remain in the British Commonwealth despite becoming a republic.\n\nIsrael is the made the 59th member of the United Nations\n\nThe Soviet Union lifts its blockade of Berlin, Germany.\n\nJoseph Stalin attacks Soviet Jews accusing them of being pro- Western and antisocialists.\n\n********\n\nFor those of you who are wondering who the young black man that Noah fell asleep thinking about, it was Martin Luther King Jr. He had graduated from Morehouse College and was going into the ministry."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "historical drama",
        "japanese",
        "black woman",
        "white man",
        "racism",
        "historical romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-15"
}