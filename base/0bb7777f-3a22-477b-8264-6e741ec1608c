{
    "title": "Kismet or Happenstance? Ch. 10",
    "pages": [
        "Many thanks to Evanslily for the fresh pair of eyes.\n\n\n\nJune 2007\n\nAna's arms banded tighter around Sean's middle as the Harley tilted left into a wide arc. The stuttered drr carried down the dusty driveway before stopping in front of the two storey building. She yanked off her helmet and bounded to the massive front door with coltish energy. \"Remember, it looks a little rough but try to look past it.\"\n\n\"Lead the way.\"\n\nShe tugged on his arm like a little girl and introduced him to Marty Lewis, the realtor for the property. With his mushroom haircut Marty looked like the fifth Beatle but barely old enough to drive, let alone sell real estate. \n\n\"So what do you think? Isn't it a great space?\" \n\nSean took in the battered floors and the boarded up windows covered in dust. Layers and layers of dust. Had his Little Miss Practical had taken leave of her senses? Or was this an elaborate prank? The way Ana's exuberance brightened the light-deprived space made it impossible to tease her. Whatever it was she saw in here that made her this excited warranted a closer look so he offered her a non-committal nod. \n\n\"Look at these floors!\" Ana enthused as though her gaze pierced through the piles of paint and grime covering the wide planks beneath her neat Keds. \"I love the industrial vibe. Check out the doors and moldings\u2014you just don't see this kind of craftsmanship anymore.\" \n\nMarty grinned as if he too had Ana's special eyesight. \"This place just needs someone special to come in and see it for the gem that it is.\" \n\nAna laid her hand on Sean's arm. \"So what do you think?\" The note in her voice called for one type of response.\n\n\"This is going to need a lot of work\u2014a lot of work,\" Sean stressed for Marty's sake, hoping to counteract Ana's unbridled enthusiasm.\n\n\"I know,\" she conceded reluctantly, \"but I think if I budgeted, I could make it work.\" But her conviction had dwindled as she spoke. \n\nSean saw her light dim as the weight of reality sank on to her shoulders. Even at its bargain price, renovating the property was a risky financial proposition. Yet if there was one person who could make this a home, it was Ana. And if there was a way to help make it happen for her, he'd find it. \"Getting a roommate would help with the mortgage.\"\n\n\"Yeah,\" Ana agreed half-heartedly. \"But it could take months before this place is even halfway close to being move-in ready.\"\n\n\"What if it wasn't just any roommate?\"\n\nMarty shoved his hands in his pockets and stepped backwards. \"Why don't you guys take a look around and talk. I'll wait outside.\" \n\nSean knew the instant the meaning behind his words dawned on her. The confused expression was gone. Little Miss Practical had arrived, twenty minutes late with her suitcase full of questions and hypotheticals. He wondered how long it would take before he heard \"let's think about it\".\n\n\"You mean...you want us to live together?\"\n\n\"Yes.\" \n\n\"But what about your house?\"\n\n\"I could rent it or sell it and put the equity into this place. A bigger down payment means we'd have to borrow less money.\"\n\n\"Sean...Living together\u2014that's a big step. And selling your home\u2014that's huge. We haven't been together that long. You should think this over.\" \n\n\"A year is long enough and we practically live together already.\"\n\nHe knew her well enough now to notice the slight shift of her brows. Ana was spooked and trying not to panic. Maybe he should've just kept his damned mouth shut and played the role she'd wanted him to play when she asked him to see this property with her. But if this was too much for her he'd rather know right now. Ana's nature veered to the cautious side while he made his decisions then dove right in. But he couldn't help feeling a stab of disappointment over her hesitation. \n\nHe walked over to one of the floor-to-ceiling windows and studied the overgrown lot bordered by a forest of trees. His niece Grace would love to stamp her green thumb all over this mini-jungle. \"It was just an idea.\" \n\nAna caught the hurt buried in his too even voice. The floorboards squeaked in protest as she crossed the expansive room. It sure was a lot of house for one person. Alternating where they spent half their week wasn't the same as living together full time, twenty-four seven. With no three day timeouts to miss each other while they reconnected with their separate worlds. And while Sean had done this before, she hadn't. He was asking them to change their lives but he was being too laid back about it. \"Babe, you have to admit living together and buying a house is a huge step for us.\"\n\nSean looped an arm around her shoulders and drew her closer. The tension between them ebbed. \"It's okay if you're not ready.\" \n\n\"Are you?\"\n\nHe nodded. \n\n\"You're not saying all this because you think buying this place would make me happy, are you? I can walk away from this,\" she said, gesturing to the empty room, \"if the numbers don't add up.\"\n\n\"Believe me, I have my own selfish reasons for wanting to live with you. I'm not that much of a saint.\" \n\nAna crunched the inside of her lower lip, unsure how to put her questions to words. Sasha had been down this road with Alex\u2014or had tried to\u2014and ended up being ditched. \"So...do you just see us living together?\" \n\nSean's gaze narrowed in on her and he dropped his arm. He faced her straight on, his subtle body language asking her to be direct with him. \"What's on your mind?\" \n\n\"Don't you think we should figure out what our plans are first before we consider buying a house?\"\n\n\"You mean marriage?\"\n\nAna's heart sputtered. \"Yes\u2014or not. I didn't mean\u2014\"\n\n\"I see us doing that and having kids too.\"\n\nPart of Ana's brain couldn't believe they were having The Talk. In detail. They'd jokingly mapped out their dreams for the future a few times during the past months. But most of the time they'd been busy living, working and exploring that shared space of being in love, being in a relationship. She'd tucked the images of their life together safely in the back of her mind, reserving them for the future. But maybe the future was closer than she thought. Or not. \n\n\"Are you thinking...maybe in a few years?\" Then realizing she'd all but ambushed him, she touched his arm. \"It's okay if you haven't thought that far ahead\u2014all this is kind of sudden.\" Her attempt at levity ended with a nervous laugh.\n\n\"How long do you think it'll take to fix this place up?\"\n\nAna looked around and focused on the reality of what she saw instead of its potential. \"Gosh, that depends on so many things. The inspection, any surprises we find during construction, the budget. I'd guess it would take about six months to get this place inhabitable. And maybe a year to complete? \n\n\"How about we tackle that first before getting married? The kids\u2014I haven't thought that far ahead but we can practice for a while.\"\n\nOh. My. God. He meant it, despite his slow smile and the joke. She once envisioned dating two or three years before a standard year long engagement to her nameless, faceless partner-lover-friend. The timeline had given her some measure of comfort she'd ease into a future guaranteed to be secure, one without too many ripples. But Sean had rewritten the script she had for a partner-lover-friend. Her life-map had changed its course faster than she'd planned. Ana realized she'd already made her choice This should feel fast and reckless but she didn't find those feelings even as she dug around for them. \n\n\"You really want to marry me.\" \n\nSean folded his arms and gave her a stern look. \"You didn't think we were just going to shack up so you could get your fill of good food and great sex, did you?\"\n\nAna took his hand in hers. \"Well...you are a good cook.\" \n\n* * * * *\n\nThey came back on a Wednesday afternoon after days of number crunching, meetings with real estate attorneys, and sifting through piles of paperwork. Ana's excitement infected him the second they walked into the shed back at the lot's south-east end. \n\n\"This could be your recording studio,\" she said, her voice full of dreams. \"You'd be far enough that you wouldn't have to worry about being too loud.\" \n\nSean took in the hills peeking out behind the cluster of trees bordering the property. The vista could've been imported from a European town or, he smiled, Ireland. \"And once we get the landscaping done you'll have a gorgeous view outside\u2014you could watch the sunrise,\" she added to sweeten the proposal, knowing how much he treasured that time of day.\n\n\"Sounds good.\"\n\nThey plotted their ideas for the yard as they strolled along the narrow pathway back to the main building. The blades of grass whispered and danced under the afternoon sun.\n\nThe sharp clicks of Ana's heels bounced around while she perused the would-be kitchen. \"We can have an informal dining area right here. And this nook can hold a built-in desk\u2014something small for mail or working on a laptop and shelves for all your cookbooks.\" She waved her arms, creating designs in the air. The run down interior clashed with the refinement of her sunshine yellow blouse and denim wide-leg trousers. Ana was all subtle power and feminine grace.\n\n\"Let's check out upstairs.\" She paused in the middle of a light stream when he lagged behind and frowned. \"What's wrong?\"\n\n\"Nothing.\" \n\n\"Why are you looking at me that way?\"\n\n\"You're sexy when you're in command.\"\n\nAna ducked her head then tilted it up again. The motion caused the light to play in her hair. Countless small gestures like that had become songs in the past year. He still hadn't gotten used to all the little ways Ana caught him off guard. \n\nShe held out her hand; the one he'd put a ring on. \"I like the sound of that,\" she quipped after she rebounded from that split second of endearing shyness. \n\nSean's gaze floated up to the mezzanine. \"Those'll be a lot of steps for you to climb when you're pregnant. You think the kids would be safe up there when they start crawling and walking around?\" \n\nAna's head whipped around. Reality popped out like a Jack-in-the-box. This man in the sharp charcoal suit was going to be her children's father. \n\n\"Um...we could childproof the area or we could stay down here until the kids are old enough.\" The kids. She imagined chasing after them and playing outside. The spirit of the future already lived in these bricks walls.\n\n\"So what do you think?\"\n\n\"You had me at recording studio.\" \n\nAna beamed.\n\n\"So you want to do this?\"\n\n\"Yeah. Let's make an offer.\"\n\n* * * * *\n\nSaturday November 4th, 2007.\n\nAna sagged against the brick wall and squeezed her eyes shut. But she still saw how far they were from what she'd hoped for this house and for them. What if this was a huge and costly mistake? Breathe. What if this was all too much too soon? She willed her composure to return with every inhale and tried to expel the wild stampede of emotions inside her with every exhale.\n\nThere'd been an odd mix of angst and perverse delight as Sean presented his review of their plumber's job performance\u2014well, lack thereof over the last two weeks. He listed every no-show, every late arrival and every early departure right down to the minute. And every excuse Troy offered was quietly annihilated in that cool, steely voice that meant one thing: Sean was pissed off. But Troy pressed on with his \"so-what\" attitude and a hand on his belt. It was like watching a precious cub toy with a grown lion and wondering when he'd go too far.\n\nAna's attempts to mediate were silenced with a determined blue glare. Instead of getting angry, he stayed so cool, it was disturbing. An eerie calm fell over the kitchen. She looked on in horror as Sean tugged the check Ana had signed from under Troy's tool box. It was already too late by the time the hollow, uh-oh feeling twisting her gut turned into red flags and alarms bells. The rip of paper tore through the silence. \n\nTroy's casual mien vanished. \"I'm not coming back here until I'm paid!\" \n\nSean cocked his head to the side as if Troy's threat was the funniest thing he'd heard all day. As if they had their pick of plumbers who could update their sixty-year-old water supply system this time of year.\n\n\"That won't be much of a departure, now will it?\" Sean volleyed in a sardonic tone. Troy had no comeback; his bluff had been useless. \"Since you've already collected half your fee, I expect you to finish the bathrooms. Today.\" \n\nTroy picked up his toolbox from the sheet of plywood that substituted for the bar top and stomped out the kitchen. The thin sheet of wood reminded Ana of yet another project on the list of things to complete; a list that had stopped shrinking. She rubbed her nape as an arrow darted from the back of her head to her brow. The white paneled cabinetry without its black honed granite countertops and the boxes of stainless steel appliances were a testament to the fact that there'd be no Thanksgiving dinner coming out of this kitchen. The throb above her brow thumped in time with her pulse. A gentle hand passed between her shoulder blades. \n\n\"You okay?\"\n\nOh, now he wanted her opinion on something? \n\n\"Why would I be okay? We won't have a plumber after today. It would've been nice if you'd discussed it with me first before you decided to go off and fire him. I guess since I'm just a half-owner my opinion doesn't matter much.\" She pinched her nose, willing her frustration to not dissolve into tears.\n\nSean dropped his hand. \n\n\"We've been talking about this for days. I told you we should've fired this guy two weeks ago. What he's doing is nothing more than extortion; playing into it has only set us back even more.\"\n\nHis cool Monday morning quarterbacking lit her fuse. \n\n\"So is this my fault now?\" she shouted quietly as she stalked the length of the topless island. \"Were you on the phone everyday trying to get other estimates?\" He shoved his hands in his pockets. At least he had the decency to look sheepish. \"What? No answer?\" she snarled before slapping a palm to her forehead. \"Oh, right. You were too busy shooting a music video! See, while you've been talking about this, I've been trying to find a solution. On my own.\"\n\nSean parked his hands above the waistband of his jeans. Good. He wasn't going to let her bulldozer him. \n\n\"It's not like I'm out partying all night, Ana. I've been working my ass off and you know it. If this is anybody's fault, it's his. Do you honestly think we should've just handed over more money and trust him to show up for a change?\"\n\nAna didn't want to listen to reason. She was hungry for a fight\u2014something, anything to let her to blast her pent up emotions all over this fucking kitchen. Only Sean wasn't playing along. His newfound patience irritated the hell out of her. You could never win an argument with a lawyer. \n\nYou're losing control. Do you want Troy to hear? The observation came as if a part of her had detached itself and had watched this scene unfold. Ana ran as fast as her battered Keds allowed before her next missile did irrevocable harm.\n\nShe shivered and hugged her middle but it had little to do with the cool November breezes whipping around her. Now that her wild spark of anger had fizzled its origins were frighteningly clear. In less than two weeks he would be moving in with her. Permanently. After four months and two offers that didn't pan out, Duncan had bought Sean's house after his separation from Jess had become permanent. \n\nThe house that held so many precious memories, where it all began for Sean and her, had been sold. That it remained in the family offered a measure of comfort. Sean no longer carried the burden of two mortgages. She no longer shouldered the guilt that he'd done so to help make their dream home a reality. But the good news also sent her mind down several unwanted avenues. \n\nThe two weeks she'd spent recuperating at Sean's place last December had been nice. So nice that it had been easy to gloss over what it meant to be together day in day out to focus on the bigger picture with romantic enthusiasm. She'd been too busy these last four months dealing with work, building permits, inspections and a phantom plumber to have these questions. \n\nWhat if things changed once Sean moved into her apartment? What if his boundless energy jangle her nerves? Would her need for quiet wear on his patience? What if hidden eccentricities come tumbling out with no place to hide in her cramped quarters? \n\nHow did Sean remain so confident, so unwavering on days like this when it felt like the world had become a giant obstacle course? When it felt like restoring this house would ruin their relationship? They were stepping into a future as unpredictable as the sky above. The part of her that craved order and constancy rebelled, made her scared. \n\nChill out. You're just having a bad day. Renovating a house is stressful but it'll pass. You'll feel a million times worse if you chicken out now. Breathe. Chill. \n\nAna hugged herself tighter and tapped her head against the brick wall. The merry-go-round of subversive thoughts spinning in her brain wouldn't stop. \n\n\"Ana?\"\n\nAna's head snapped back into upright position. Shit. Sean was mere steps away. I must look like a mess. It wouldn't have made much difference if she'd heard him anyway. Her head dropped against the brick again. She was too drained to move or think about tucking the errant curls fluttering across her face.\n\n\"Hey.\" \n\nThe gentleness in his voice almost undid her but Ana refused to cry. They were in this together and he needed her to be strong. She turned to face him with the side of her head still stuck to the wall. He leaned against the wall's edge, his arms folded across his chest. His body language was expectant yet patient. \n\n\"I'm sorry I was such a royal bi\u2014\" \n\nHis fingers touched her mouth before they hooked the flailing tendrils behind her ear.\n\n\"Apology accepted.\"\n\nAna worried her lower lip. A part of her wished he hadn't let her off the hook so graciously because now she felt guilty. Maybe that was the penance she deserved. \n\n\"What's up?\"\n\nShe reached out her hand but let it fall to her side before she touched his forearm. While she trusted him to listen, trusting herself not to hurt him if she voiced her worries was another thing. His warm fingers looped over hers, offering comfort and strength.\n\n\"What's going on? Tell me.\"\n\nHer hand grew restless under his as her eyes clashed with his knowing stare. \"Do you ever get worried...about us living together? Be honest.\" \n\nThe ball of his thumb swept over her knuckles. That flicker of uncertainty made her feel less alien for having doubts of her own. \"Sometimes.\" \n\nHis quiet admission came without panic. Ana held on to his hand to let him know it was okay while he continued. An easy silence fell between them before he spoke again. \n\n\"You're grouchy in the morning. And the way you toss and turn all night\u2014it's like sleeping in a blender.\" \n\nHis playful words were so at odds with the seriousness in those serious blue eyes. He was trying to lighten the mood for her sake. He was trying to be strong for her when all of this couldn't be easy for him; he must be feeling under pressure too.. The love reserved just for Sean burrowed its roots deeper, surged and expanded at once.\n\n\"What about you?\"\n\n\"I worry about how we'll adjust. You know, you're used to living in a house and all.\" She dropped her head, and felt a bit foolish because they'd talked about this before. But she met no censure when she looked up at him again. \"It just hit me that we're really doing this. I mean, I know we've been planning this...but it's finally here.\" \n\nThe to-do list flashed in front of her again. She squeezed the back of her neck, trying to release the tension there. \"The way things are going, we might be in my apartment a while. And I started thinking about small stuff like clothes on the floor or us fighting because you left the seat down or crumbs in the bed. It's stupid stuff, really.\" Ana shrugged her shoulders, not sure if she was merely trying to convince Sean. He smiled at her then.",
        "\"Oh, I can guarantee you we'll get on each other's nerves at least a few times, sweetheart.\" \n\nSean was certain he'd just run across a field of landmines with that admission. Yet he wasn't going to bullshit her and make her feel better with empty promises. But instead of freaking out for a minute, his little worrier looked relieved to hear that piece of truth. Pleased even. And this was the same woman who'd gotten upset because they'd unloaded an unreliable plumber from the payroll? He reached for her other chilled hand and pulled her close. It would take a lifetime to unravel this woman. \n\n\"But,\" he paused, \"being with you\u2014us being together is bigger than all that. We'll get through it and faster than you think. You'll see. Look how much we've gotten done already.\"\n\nAna released a heavy breath and lifted her head from the crook of his neck. \"I don't think we're going make the Christmas deadline though,\" she said, a thin veil of disappointment over her words as she hugged his waist. He rubbed her back in a slow cadence.\n\n\"We'll do our best and if it doesn't happen, we'll deal with it. There'll be other Christmases.\" \n\nShe offered him the first real smile he'd seen in days. Everything felt back on track again. \"When did you get to be so patient?\"\n\n\"Must be the love of a good woman and some of her good ways rubbing off on me.\"\n\nAna pressed closer and dropped a quick kiss below his cheek. \"Damn, you're smooth. I knew there had to be a reason why I'm willing to give up closet space for you.\"\n\n\"Just remember that when I mess up that whole color wheel thing you've got going on.\" Leave it to Ana to take organizing her clothes by color to the ultimate level. He laughed when she gave him a playful scowl. \n\nSean rested his forehead against hers and took a moment to enjoy being with her like this. Between juggling their jobs, the house, and turning hobbies into careers, these quiet moments had become precious. \"After we're done here, how 'bout we head home and take a long shower and not think about packing or anything construction related until tomorrow?\"\n\nAna turned in his arms. \"That sounds perfect.\" \n\nThey walked back to the twelve foot glass and steel framed doors that spanned the length of the porch. She pointed to the fiery russets, pinks and golds behind the mountains. \n\n\"Look. Imagine how great it'll be when we sit out here for dinner.\"\n\nHe stood behind her with his arms folded below her neck and saw her words paint an outdoor living room that overlooked the yard of flowers and green grass. He saw a good life here, a place they could share with friends and family. \n\n\"What?\" \n\n\"I'm not that grumpy in the morning.\" \"You've got to be kidding.\"\n\nAna punched him in the arm then took off.\n\n\"You're going pay for that!\" \n\nAna woke up to the distant sound of a guitar and a chorus of soft, intermittent snores from the other end of the couch. The last thing she remembered was plopping down on the couch to channel surf while Sean took calls from his sister and someone from the band. Ana felt better, lighter. Their talk reminded her that their plans didn't float in dewy eyed excitement. They were rooted in something strong, something real. Dodger lifted his beige head as she slid out from under the blanket Sean must have draped over her. \n\nShe leaned on the doorframe, captivated by his intensity. Despite the work he'd done on Letters from the Road, there were songs that would never be written for or sung by anyone else but him. She knew in time Sean would fulfill that dream too. \n\nHis fingers found various chord constellations hidden within the strings. Some were slow and pensive; others fell in a sweet cascade of sound. He tested the notes he had scribbled in song, then he'd grab the notepad from off the bench and write at a manic pace. The process repeated several times. \n\nSean took a swig of beer and closed his eyes. The notes floated in perfect arrangement behind his eyelids. He set the bottle on the side table and tested the image on his guitar. Threads of awareness spread down his back in a webbed dance while the pen scrolled across the page. Ana was near. \n\nShe stood in the doorway, wearing one of his white dress shirts, arms crossed and the top of one foot hooked behind the ankle of the other. Soft. Beautiful. Inviting. That's what Ana was with those disheveled waves framing her pretty face. It's what he loved about the mornings when he woke up and found her curled next to him with her bare skin all warm and soft from sleep. He felt a smile working its way to his mouth. Soon all his mornings would begin that way instead of a few days here and there.\n\n\"That's good,\" she said as she padded barefoot across the wooden deck. \"Don't stop.\" Her sleepy rasp drifted over him and awoke a need that had been neglected for too many days. She folded her legs under her on the bench and looked so adorable with those pink crease marks on her cheek. \n\n\"Do you know yet when the video's going to debut?\"\n\nSean shook his head and continued to play. \n\n\"I can't wait to see it, it's going to be a hit.\"\n\nHe took another sip of beer. Ana's determination and utter lack of subtlety made him smile. Her belief in him did amazing things for his ego. \"You wouldn't just be a wee bit biased, now would you?\" he teased while his thumb and index met.\n\nAna crinkled her nose and took the guitar from his lap. \"Not one bit.\" She dipped her head while her graceful fingers plucked the strings in the way he'd taught her.\n\n\"That's pretty good.\"\n\nA streak of muted light fell over her hair and face as she raised her head. \"Now who's biased,\" she quipped with unwarranted humility.\n\n\"I recognize talent when I see it.\"\n\nBut it wasn't her talent he was staring at and she knew it. Her brown eyes sparkled with a mix of sexual awareness and mischief as she strummed the guitar. She stopped playing and set the guitar on the table next to her. \"Brennan, are you buttering me up?\"\n\n\"Only if it's working.\"\n\nAna closed the gaping panels that lured him with small peeks of golden skin and cleavage. She rubbed her arms as she said, \"You're gonna have to do better than that.\" \n\n\"Cold?\" Sean saw his chance to get her inside and in his warm bed where he could reacquaint himself with those lush curves he pretended not to notice during their chaste shower.\n\nShe scooted over into his waiting arms and nestled her head in the crook of his shoulder. Her eyes skipped over the string-light lanterns swaying above them. \"It's hard to believe this is one our last weekends out here.\" \n\nThe wistful note in her words caught his attention. Was there more than nervousness about the future that fueled her outburst this afternoon? Her sad smile didn't help either. \n\n\"Lots of good memories here... I miss it already.\" \n\nThe unwelcome questions that had snuck up on him vanished. He saw Ana at the dining table, her hair up, wearing a black dress. She'd been all cute and embarrassed after the Rioja she'd been drinking sprayed out her mouth. He must have said something funny that July night\u2014though he couldn't remember what it was. Pages of memories flew by in quick animation. This was where it all began for them.\n\nHe rested his jaw on her head and inhaled Ana's bare skin. Clean. Delicate. Feminine. \"We'll make new ones.\" \n\n\"Yeah...and at least we can still visit.\" Her cool fingers slid under his t-shirt to trace spirals over his stomach. \"You know it's kind of a full circle thing that Duncan gets to enjoy all the work Grace put into garden. I hope he's happy here, he deserves it.\" Her compassion blanketed him in warmth. He held her close, stroking her legs and back. Life was perfect.\n\n\"Let's head inside, you're getting cold.\" \n\nAna snuggled closer. Feeling her pressed against him like this was having an effect. \"I'm fine. Besides, I've got my Irish love to keep me warm,\" she supplied with a cheesy, dimpled grin.\n\nSean playfully rolled his eyes and shook his head in mock annoyance. \"Oh, God!\" Ana's kooky habit of replying with lyrics was one of those things that made him laugh when it didn't drive him nuts. He gave her pout a quick kiss. \"Be right back.\" \n\nHe returned with her flip-flops in his hand and a blanket draped over his shoulder. His thoughtfulness touched her as though he'd brought her daisies and chocolate. These were the little things that whispered I love you, I'll look after you . He eased her legs over his lap and arranged the blanket over their limbs before folding his arms around her. \n\n\"Better?\" His voice was as gentle and protective as the gesture. \n\n\"Mm-hmm.\" The soft cotton of his shirt brushed her cheek as she nodded her answer. She burrowed against his chest, seeking more of his solid warmth. She kissed the side of his neck.\n\n\"What's that for?\" \n\n\"You always take such good care of me.\"\n\nSean wasted no time listing his good deeds. He almost had her believing he was a veritable saint by the time she rewarded each one with a line of kisses along his jaw. He chuckled when she told him so. \"I wouldn't go that far.\" His hand traveled up her thigh to illustrate his point. The way his eyes raked over her made her ache for things no saint could deliver. \"You hit me hard this afternoon and never said sorry.\"\n\n\"I'm so sorry, sweetheart,\" she cooed as her fingers skated over his mint green shirt from collar to cuff. \"I would kiss it all better, but you're overdressed.\"\n\nHis hand stopped shy of where she needed to be touched. \"You're a smart girl. Improvise.\"\n\nAna nipped his ear then licked the tip of the lobe...the way that drove him wild. \"Like this?\"\n\nHe made a low sound. \"You can do better.\" \n\nShe cupped his jaw and drew his head down to hers. \"How about this?\" she said against his mouth then slanted her lips over his, teasing him with the promise of her kiss. \n\nSean's fist closed over her hair. He pulled her head back, forcing her eyes to his. \"You like playing with fire, Belle?\"\n\nHis rough demand made her swallow with the hot anticipation of kissing him, tasting him. The slight clench in her throat worked its way down, unfurling liquid desire within her core. \n\n\"Two can play this game.\" His lips skimmed the wild pulse below her jaw. She spread her legs with shameless abandon when he pushed his hand between her thighs. His smile was devilish and proud when he cupped her. \"See what happens when you play with fire?\" His fingers flexed over her panties, making her arch under his big, warm hand. \"I bet you're hot inside.\" For every word he rasped at her neck, he stroked her. Languid touches that made her want more than his fingers caressing her through thin cotton, more than his breath on her skin. Ana wanted more. \n\n\"Do you want me to touch you there?\"\n\n\"Yes.\" \n\nShe moaned as she angled her head to his and sought his mouth. His lips opened over hers the instant they connected. She gasped when his thumb slid under the edge of her panties. His tongue flicked away the sound and his taste unfolded with every velvet sweep inside her mouth. Fruit. Malt. Warm. Smooth. Ana closed her eyes and twined her fingers around the damp strands at his nape, pulling him closer, wanting more of his mouth. Their tongues bandied back and forth, teasing, licking...savoring. His fingers mimicked that slow, erotic pace as they traced the seam of her sex and delved deeper. He made a low sound of masculine pleasure as he tested her arousal. Even now he still reacted with surprise at how quickly she responded to his touch. \n\nThe blanket flew behind her. Sean scooped her onto his lap, his voice all whiskey and smoke when he whispered against her lips, \"Let's go inside.\" \n\n\"Don't want to wait.\" She breathed out then breathed in the faint scent of soap, water and Sean. His arms tensed under her knees. A question and answer passed in one look. \n\nEverything stopped...then exploded in a flurry of frantic movement. \n\nSean's shirt landed on the blanket. A short conspiratorial laugh filled the air as they worked to drag off Ana's panties. He fisted the side panel, ready to tear them off her.\n\n\"Wait.\" \n\nShe lifted her hips and shimmied so he could tug the scrap of cotton down her legs. Damn. The way her ass brushed over his fly made his cock pulse with every pass. Pulse. Pulse. Pulse... \n\nAnd then she straddled him. \n\nSean stifled a groan as her delicious weight settled over him. Just one piece of clothing separated him from the softness he'd had under his hand. So close, he and his shorts barely contained his lust. She went after the waistband of his shorts as he attacked the buttons on her shirt. The zipper sighed and her eyes widened. \n\n\"You're going commando?\" Her voice held threads of disbelief even as his shaft sprang up to demand her attention. Ana couldn't look away. His cock was flushed an angry reddish pink and taut; the broad head glistened. She had to touch it, feel its weight and smoothness in her hand.\n\nHis knuckles smoothed across her clavicle then lower. \"You're not the only practical one around here.\" Amazing that she still blushed even after all this time. The look of delight and wonder on her face was an aphrodisiac in and of itself. But then he never tired of watching Ana watch him. Her gaze traveled from base to tip and back felt like a caress, making the sweet ache build even before her right palm closed over his length.\n\nShe caught him staring at her. \"What?\"\n\n\"You're...beautiful.\" He half expected a sassy comeback, maybe more of her sweet shyness.\n\nHer left hand cradled the side of his face. \"You make me feel that way.\" And she made his masculine pride soar knowing he pleasured her in such a deep way. \"You're beautiful too,\" she added with that adorable, impish dimple. \n\nBeautiful had been an understatement. \n\nOut here under a canopy of bougainvillea and soft lights, with his shirt hanging open, Ana was...exquisite, breathtaking...perfect. Her hand drifted down his neck, past his collarbone. \"In so many ways,\" she whispered before she kissed him. His stomach contracted as her forefinger circled his navel again and again in tandem with the hand tormenting the tip of his cock. \"Inside and out.\" Her breathy voice evoked sex. Primal. Raw.\n\nInside and out.\n\nThose three words echoed inside his ears. They carried to all his senses until he had to get inside Ana, to feel her, hear her and see her while he moved...inside and out.\n\nAna suckled his lower lip, sending hot currents straight to his erection. He jerked in her hand. Her tongue did a wicked dance around that sensitive spot below his Adam's apple. \"You feel...so...hot.\" \n\nHe watched in fascination as her fingers dipped between her legs. Her index and formed a ring around the middle of his shaft, spreading her moisture over him, driving him crazy with every twist, every squeeze. Hold on. Don't lose control.\n\n\"So hot...you feel so good.\" \n\nSean cupped her sex, rubbing his palm over her damp kinky curls. \"So do you, sweetheart.\" Her hands flew to his shoulders and she arched into his hand. \"You like that, don't you?\" Her damp folds got wetter as if her body had tuned into the same frequency making his whole body tight with arousal. \"Say it.\"\n\n\"I-I like...it.\" She gasped as his touch grew more intimate then cried out when his finger entered her\u2014barely. \"More...want more.\" The cool night air danced over her nipples, making them pucker. She cupped one breast and pressed her forearm against the other, trying to dull the heaviness, the need to be touched. \"Fuck\u2014Sean!\" Ana pleaded while another finger pressed at her entrance.\n\n\"Soon, baby,\" he husked at her ear. \"Let's see how ready you are.\" Each hypnotic word preceded a slow, slick push inside her. Ana shook her head, trying to clear the haze of lust and pleasure as his fingers filled her inch by inch. \n\n\"'M ready. Ah,\" she mumbled as he thrust in, then fanned out those long fingers.\n\n\"Ride my fingers, Belle...show me how you'll ride me.\" \n\nSean urged her on with a string of sexy words while the hand on her hip guided her over him. He could have said anything just then, especially when he took her cue and nuzzled his head against the hand palming her breast. His hot, moist mouth closed over her nipple and pulled the tight peak inside. She buried her head in his neck, her nails digging into his biceps while he laved her with lurid swirls of tongue and wicked scrapes of teeth. Pleasure coiled beyond his lunging fingers.\n\nHer voice sounded distant to her own ears as she spoke. \"Sean, please...\" Her slick walls clasped his fingers, trying to draw them deeper to that place inside her that would send her over the edge. Why wasn't he driving deeper? Yes! Right there.\n\n\"You need to come, don't you?\"\n\nShe spat out a \"yes\" before he finished; partly to answer him, partly because she was climbing, getting close.\n\nSean gritted his teeth as the soft, wet flesh around his fingers fluttered. Ana needed a little more time before his cock replaced them. He continued stroking her until her choppy moans turned into one blissful note. \"Come on me,\" he grated before he withdrew his soaked fingers. A few rough shoves left his shorts shackled around his ankles. He steadied her as she trapped his cock between her damp sex lips and began rubbing over him, spreading her moisture and warmth from tip to base then back. His eyes snapped shut and his head rolled back like a puppet cut from its strings. \"Jesus.\"\n\n\"You like that\u2014say it.\"\n\nSean nipped her ear. \"Tease.\" \n\nElectricity spiraled through his veins as Ana swayed over him again. \"You love it.\" Damn, she loved pushing him to the edge. \n\n\"Yes.\" He grunted when Ana's silken heat touched the tip of his dick. \"Fuck\u2014yes\" \n\n\"Soon.\"\n\nTheir hissed-in breath buzzed in the air the instant his crown slipped inside her. Sean groaned as she slid down his length, opening around him. Her fingers snared his wrists, squeezing them while soft yielded slowly to hard. \n\n\"Don't. Stop.\" \n\nHe couldn't remain still; he needed more. His hips rose up, filling her in one smooth stroke. The fit, the feel of skin on skin was...perfect. \n\nAna rocked her hips. \n\nHe couldn't take his eyes away as she writhed over him with graceful arcs and sharp rolls. Her hand rose to her nape then slid across the jutting line of her clavicle. Every undulating move was pure burlesque sensuality.\n\n\"Yes,\" he chanted as she quickened her tempo. He cupped her backside, bouncing her on his surging cock as she writhed on its length. The urge to come grew with every pass of creamy friction. In. Out. Up. Down. He knew he couldn't hold back much longer the instant Ana pierced him with her intense dark gaze. An invisible weight lodged in his chest then radiated out in splinters. Goosebumps covered his skin. Eyes closed, he gritted his teeth as her hips bumped his. Even now he felt her watching him, feeding him with the unbridled lust and joy he'd read in her eyes seconds before. She pulled back, dragging his length along slick flesh. So hot, snug. The next thought tumbled out in a broken sigh as Ana ground down on him. \"Nothing better.\" \n\nShe withdrew halfway then thrust down again. Faster. Harder. His control was spinning away. He reached between them intent on having her lead him over the edge.\n\n\"Mmm\u2014right there,\" she said in a tiny whimper. \"Yes! So good...so good.\"\n\nAna twisted and jerked. More friction. More pleasure. Sensation shimmered, building in one tight mass. He dropped delicate kisses along her jaw, down her neck then dipped his head to her breast. His tongue flicked her nipple, titillating her with each velvet pass. The pressure built within her as she sank onto his hot rigid column and clenched around him. Ana kept filling her body with his while Sean kept filling her mind with the whispers of love and beauty he branded on her skin. He answered her wild movements. She answered his tender words. Give and take, again and again in an intimate soul dance. ",
        "Even as her climax rushed closer, she tried to delay it. She wanted to prolong her pirouette within this space of body and soul that reached deeper than the pleasures to come. The rasp of Sean's calloused fingers rolling around her clit lured her away. Sean suckled her\u2014hard. Tiny points of sensation within her core.\n\nThe pressure built and built and built... \n\n\"That's it. There it is...come on, come on me.\" \n\nHis words could have been in any language and she would've understood them. Sensation burst within her and blew out, showering every nerve with hot, tingling bliss. His tormented moans told her how badly he needed the sweet release he was fighting for her sake. Ana grabbed the back of the love seat and rode him hard, forcing him to join her. The wicker dug into her palms as she braced herself against his fast, sharp shoves.\n\nSean crossed his arms around Ana's back, helpless to slow himself as he drove into her with short, rough strokes. She matched every move he made. Her soft skin rubbed over his chest as she clung to him the way her satin sheath clung to his cock. Those brown eyes demanded everything he had and held nothing back when she looked at him. She undid him with one look. Sean poured himself into her in quick, scalding spurts as the last pulses of her orgasm overlapped the start of his. He barely registered the rough scrape of the cushion he sat on or the wicker against his back as he convulsed beneath her. Everything spun away in white-hot pleasure.\n\nThey remained joined as they slowly floated into an awareness of the world around them. A chirping calypso of bright night sounds rose above their shared quiet. Ana rubbed her cheek across his soft hair as the last tremors coursed them. His breath hitched, tickling her shoulder when he exhaled a rush of air. \n\n\"We should fight more often.\"\n\nSean drew his head back. Ana cupped his face, tilting his chin up for her kiss. \n\n\"Ow!\" \n\nThe shirt she'd stolen from him did little to dull the sting on her backside. His hands dove beneath the shirt to soothe the bittersweet ache he'd inflicted, oh-so very well. A sliver of dark excitement flared to life \n\n\"Payback's a mother, isn't it?\"\n\nShe bit his shoulder hard enough to leave a temporary mark; soft enough for him to like it.\n\n\"Punish me some more.\"\n\n\n\nAna shifted on to her side to find Sean's dark head on the pillow next to hers. Unable to resist, she brushed back the wave of black hair on his forehead. With his knuckles propped under his cheek, he looked angelic and boyishly beautiful. The rebellious strands fell to his brow, totally in keeping with the owner's spirit. \n\nShe thought, felt and knew one thing in this Sunday morning stillness. \"I love you.\" She could muscle through all the hassles of moving and construction if it meant she'd get to wake up like this everyday. One blue, blue eye peered at her then closed, startling her just as she nestled back into the warm sheets.\n\n\"Love you too,\" he said in a scratchy whisper then fell asleep again.\n\nOh, yes. Waking up next to the one she loved was a blessing.\n\n* * * * *\n\nJanuary, 2008.\n\n\"See you later,\" Ana said before Sean shut the car door. \n\nShe watched the Range Rover disappear down the drive. He was on his way to do a sound check for his guest appearance with Wired for Sound. Letters from the Road wouldn't drop until another three weeks but the album was getting lots of good buzz. She walked up to the front door, proud that the chance the band had taken in having Sean write, co-write and produce most of their songs would pay off. At the last minute, they decided to include an acoustic version of Exit Twenty-nine on the album; a duet between Darien Scott and Sean. It turned out to be the lead single for the new record. \n\nShe wiped her dusty shoes on the mat and went to the kitchen. Once the concrete got poured next week, trekking dirt from the driveway into the house would be a thing of the past. \"Dad, do you want a beer?\"\n\n\"You read my mind.\"\n\nAna grabbed a bottle of water and the beer. \"Let's go outside and get some fresh air.\"\n\nThey sat down on five-gallon paint drums and chatted about what was left to do now that the contractors had completed their work. Ana brought an ear to each shoulder to release the tightness around her neck. Some of it had to do with the bags of trash they'd carried out, most of it was because she'd been on high alert while Sean was there. She suspected her dad's visit was merely a ruse to interrogate them about their plans for the future.\n\n\"Thanks for helping out...and for not bringing up anything about us getting married.\" She felt as tentative as a newborn foal testing its legs whenever they talked about something personal. Or at least when they tried to. Her dad reserved his eloquence for the football field and playbooks. That was just his way and Ana accepted it. Yet that didn't stop the disappointment from kicking up, like right now.\n\nDon Williams studied the bottle in his hand and took another swig.\n\n\"I think he'd marry you tomorrow. It's not him I'm worried about.\" Her father may not have been as longwinded off the field but he took his bluntness with him everywhere.\n\n\"What do you mean? I love Sean, I want to marry him.\" \n\nDon put up his hands. His weathered face gave nothing away until he pursed his lips. Their brown eyes met and the standoff began. Well, if he was going to drag it out of her...\n\n\"I want to marry him, I do\u2014more than anything else.\" Why did that sound so defensive? \"It's just...\" Ana sighed. \"You're going to think I'm nuts, but sometimes being this happy freaks me out.\"\n\nHis sparse grey brows drew close. \n\n\"It's not like every day's perfect, don't get me wrong, we work at it. But it's not hard, you know? Sometimes, I think: 'is this for real?' And I worry that something'll happen and it'll all go away.\" \n\nAll Ana got was silence. She felt self-conscious and exposed. Oh, God. He probably was just as uncomfortable as she was. \"I know, it's weird,\" she said for his sake and turned her attention to the lawn.\n\n\"No, it's not.\" \n\nHe said it with such quiet understanding it shocked her. He stared down to the floor. Ana winced inside when their eyes met. \"Don't let what happened between me and your mother keep you from being happy. We made some mistakes but there were lots of good times too. And we had you. You know back then people didn't talk the way they do now. We didn't have Oprah.\" His smile was forced but sweet. \"Times are different. You and Sean are different.\" \n\n\"You'll be okay, Ana. Your head's on straight. I can't take credit for that. Your mother raised you mostly by herself, even when we were together.\" He waved off her protests and continued. \"After the divorce...I didn't step up the way I should have\u2014I'm sorry.\"\n\nAna wiped her cheeks. She never realized just how much she needed to hear those words or how cathartic they'd be until now. She thought she'd convinced herself it was okay if they never came. \"Dad, it wasn't all your fault, I didn't make it easy on you.\"\n\nDon shook his head. His voice was thick with remorse when he said, \"You were just a kid; you weren't supposed to have all the answers. I was your father.\" \n\n\"You still are. Simon will never take your place. I hope you know that.\" She laid her hand on his knee. \"And it's not too late for us to be close again.\" \n\nHe was too choked up to do anything but nod and squeeze his eyes between his fingers Seeing her tough-as-nails dad fight back tears made Ana's eyes water. He held on way too tight when her hand covered his but it was the best feeling in the world. \n\nThe conversation went on and Ana got advice on marriage that came with straightforward wisdom. He told her about the lessons he'd learned when he and Gwen almost separated. It was the conversation she easily could've had with her mom. It was the conversation she thought she'd never have with her dad. He asked all the questions a father would ask before he gave his blessing. Then he gave it.\n\n\"Just promise me one thing, okay? Just because I'm giving you my blessing doesn't mean I don't think you're doing this thing ass backwards.\"\n\n\"Da-ad.\"\n\n\"Let me finish. As much as I don't like it, I don't want you getting married because you think you have to, okay? You're a smart girl\u2014woman. Follow your heart and don't let anyone push you into anything you don't want to do. That goes for your old man too.\" \n\n\"Can I get that in writing?\"\n\nHis knuckles grazed her jaw. \"A real lil smartass, aren't you?\"\n\n\"I wonder who I got it from?\"\n\nThey laughed.\n\nIt was late afternoon when Ana started locking up the empty house. Her t-shirt, jeans and shoulders bore the toll of a long day of cleaning up. Her favorite part would start next week: decorating! She had two weeks to get it done before Super Bowl Sunday. In talking about her plans she deliberately veered off into the topic where her dad felt most at home. \n\nHe folded his arms. \"Now, you wouldn't be going with the Giants just to piss Sean off?\"\n\n\"We-ell...maybe just a little. He wants to buy this huge flat screen TV so we can all feel like we're right there. Can you imagine the look on their faces if the Patriots lose?\" \n\nHe chuckled. It was the highlight of Ana's day and the best housewarming gift he could have given her.\n\n\"But after watching that game where they nearly came back I think they have a good chance.\" \n\nHer dad's shit-eating grin didn't fade as they walked to the foyer. \"Right.\" \n\nShe found him staring up at the fa\u00e7ade after she locked the front door. \"Everything okay, Dad?\"\n\n\"I'm proud of you. If your mother were here she'd say the same thing and she'd tell you you deserve to be happy.\" \n\nShe hugged him. There was no awkwardness when he hugged her back.\n\nA soft breeze blew around them as they went back to the time when a little girl watched her father as if he were her hero. \n\nDon Williams had thought he'd only see that look on her face in old photos. \n\n* * * * *\n\nSaturday February 2nd, 2008.\n\nCar Dodger Williams sunbathed in front of Guan Yin. Surrounded by a bed of violets, the statue watched over the mischievous canine with unwavering compassion. He looked back before he approached the dainty flowers to see if that would animate the figure.  \n\n\"No\u2014no\u2014no!\" came the gentle reprimand from the porch. \n\nHumans! First he had to suffer the indignity of watching while they ate the delicious smelling food, now this. Dodger lowered his head and sent his mistress a contrite look just in case there was something left on her plate for him. Her mate had adopted the good habit too so he turned his head to the male and threw in a tail wag for good measure.\n\n\"It's so pretty and peaceful out here,\" Ana said as the sunlight poked through the wall of trees to lie on the grass. The coolness from the night before still lingered in the air. Morning dew clung to the leaves and glimmered in the grass like randomly strewn diamonds.\n\nThe garden had started to fill in, just in time for their unofficial housewarming / Super Bowl party tomorrow. Small projects were still pending but the structural elements were complete. And the major rooms were styled thanks to the restless energy she'd had last night. Thinking about the big unveiling tomorrow made her eager for this day to pass. Then again, they'd worked so hard for this day to come and reveling in it together was worth cherishing. \n\nDespite having moved in two weeks ago, this was the first weekend it felt like a home. It was all the more special because Sean would be here all weekend. The band's media blitz in support of Letters from the Road had taken him across the coast to perform on the talk show circuit and launch parties. Ana joined him whenever she could and wondered where Sean got his energy from because traveling with a band was not as glamorous as it appeared on TV.\n\n\"Feels like we're somewhere else.\"\n\n\"Yes. Imagine how it'll look when summer comes around.\" The purple and white bougainvillea would climb across the arbor Sean and Duncan had put up to frame the loggia by then. She raised her glass of orange juice to his. \"We made it, Irish.\"\n\n\"It's almost hard to believe. It went by so fast.\"\n\nAna wrinkled her nose. \"It just feels that way 'cause we're almost done.\" \n\nShe took another slow, provocative bite of the souffl\u00e9. For a few seconds Sean forgot his food and simply stared. Sensual awareness laced his blood like cognac, heavy and warm.\n\n\"How is it?\"\n\n\"My love for you grows exponentially with every bite.\" \n\nAna's grin deepened as if she'd been tickled by her own humor. The way she embraced her dorkish side was inexplicably one of her most endearing traits. There she sat all ladylike with her legs crossed, wearing boxers and a black tee that read: Follow me. I know the way out. Her chic bob swung below her chin in a riot of sleep tousled curls. He was getting over the loss of its length because the hairstyle called attention to her neck. Her elegant, delectable neck. He'd never fancied himself that much of a neck man until she'd come home with her new 'do two weeks ago. \n\nHer tongue flicked over her lips as if to prolong the flavors after the fork slid through her lips. It had been too long since he'd felt that mouth on his skin. Competing ideas and images bombarded his brain. All starred Ana lavishing her wicked attention all over him. A soft purr reached his ears. Jesus. He didn't need to hear that sound right now. \n\nHer eyes glazed over with epicurean delight. \"This is so good\u2014you're amazing, you know that?\" Ana sent him an inquisitive look. \"Aren't you going to eat?\" \n\nA lewd answer hovered on his tongue but she spoke before he decided to go with it.\n\n\"I wouldn't mind having this again Monday morning. And make sure you don't serve me the same thing two days in a row. That's not gonna fly this year. \" \n\nSean's competitive streak bristled. Come Monday morning she'd regret her flippant demand. Regret was a misnomer now that he thought about it. She'd have lots of fun next week.\n\n\"It's not going to happen, sweetheart.\" His lurid glance made a deliberate stop at her chest then traveled lower. \n\nAna quirked a brow. \"You wait and see, sweetheart. Eli's going to come through and my Super Bowl record will remain perfect.\" \n\nOh, Ana was good. Her sneaky jab at the Patriots' record irritated the hell out of him. Hers was a stealthy brand of trash talk, teeming with double entendres. Her little digs would end tomorrow. There was no way the Patriots' season would be blemished. No fucking way. \n\nAna set her plate down on the cube while Sean's fork scraped his. Man, that was too easy. \"Come on, let me show you what I did last night.\"\n\nShe took him on a tour of the dining room then the guestroom, explaining what she did in designer terms. But she never admitted that yesterday's letdown about her biological mother had inspired her night of covert decorating. He wasn't sure if or how he should bring it up. The other option: let Ana do her soldier-on routine.\n\n\"How are you feeling today with everything?\"\n\nAna ironed the crisply tucked coverlet with her hand. \"I'm trying not to think about it because if I start I don't think I'll be able to stop.\" She sounded more resigned than resolute. Time ticked by with little touches and adjustments to the already perfect bed. \n\nShe felt Sean's eyes on her as she repositioned the lamp on the night table. His silence asked for more. \"I'm taking a break from it. It's been nothing but go-go-go lately and I just need to come up for air.\" \n\nThere'd been so much attention on getting things done that this focus on what was missing threatened to be a permanent state of being. The daily checks of e-mail and adoption message boards had become a frustrating habit. One that dead ended in Vancouver Canada. \n\n\"Don't worry, things will settle down after tomorrow.\" \n\nShe looped an arm around his waist on their way back to the kitchen. \"No, it'll be fun to have everybody over. I can't wait for them to see everything.\"\n\n\"They're going to be blown away by what you did.\" He knew he was and he lived here. Ana had merged streamlined furniture and his love of the beach with her romantic exoticism. Classic formality held hands with exuberant pops of red in a way that was quietly playful. Most of all, their home was so them.\n\n\"I couldn't have done it without my favorite, very handsome design assistant.\" Her saccharine sweet delivery made him leery.\n\n\"You mean slave.\" \n\nIf he never heard the words 'beach inspired color palette', 'furniture' and 'shopping' strung together in a sentence, he'd be a happy man.\n\n\"You're still open all day next Saturday, right?\"\n\nUh-oh.\n\n\"Yeah?\"\n\n\"Good. I need some ideas on what to get for your studio and the den. We're only going to look. I promise.\"\n\nSo they were going to do wander around aimlessly? Oh, yeah, that was so much better. \n\n\"What if I say no?\"\n\n\"I'll just add it to my list\u2014either way you're coming with me. Besides, I can't go without my favorite\u2014\"\n\nHe let her know what he thought of her list and its odds of happening with one look. \"Yeah, yeah. Williams, you've got a long way to go if you think you're being smooth.\" \n\nAna countered with a kiss. \"How's that?\"\n\n\"Still... a ...long way to go.\" Somehow he managed to make sense while she teased the corners of his mouth.\n\n\"Meet me later and maybe I'll change your mind. Enjoy your run. You're really hot when you're all sweaty\" \n\n\"Tease.\"\n\n\n\n\"What are you doing?\"\n\n\"You don't know?\" He nuzzled the back of her neck. \"It hasn't been that long.\"\n\n\"Just give me an hour and I'm all yours.\"\n\nSean plucked the pencil out of her hand and tossed it onto the drafting table. \"You've been in here all day.\" His hands reached under her tank top.\n\n\"Stop it.\" Ana picked up the pencil and continued sketching. \"Babe, we can do this later\u2014I promise.\" His low chuckle incensed her while she jerked and twisted.\n\n\"But I want you now.\" He pressed against her back to prove his point. His sinful laugh mocked her efforts to get free, made her aware of the ugly thrill his forcefulness inspired. \"That's so sexy, don't stop.\" \n\nShe tried to reason with him; if he gave her more time she'd have a great head start on the new collection. He pulled up her shirt and unhooked her bra.\n\n\"You need to take a break and chill out.\" Sean pressed his bare chest against her back. \"That's what you said this morning.\" \n\n\"Yeah, but\u2014\"\n\n\"And I need to be inside you.\" His warm hand snuck under her bra to cover her breast. \"Do I have to remind you how much you like it?\" \n\n\"Sean\u2014\"\n\n\"Shh. You think too much. Just feel.\" His other hand slid down her stomach, inside her shorts. The pencil clunked on to the drafting table. He made a rumbling sound of approval as he cupped her. Ana's need to connect surpassed her need to create. \n\n\"Love finding you like this.\" His long fingers traced her damp slit to emphasize his point. \"I missed this.\"\n\nMe too. The words got lost in a hissed-in breath while he fondled her. How could she speak words when he touched her like that? Ana canted her hips and sent his fingers just where she craved them. Ah, yes. \n\n\"Take off your clothes.\" There was something dark and phantomlike in having those commands come from an unseen face. He made the task harder by teasing her, caressing her. \"Good girl,\" he said before he pushed her down. Ana gripped the edges of the table as he nudged her feet apart. \n\nSean filled her mind with deliciously vulgar accounts of what he wanted when he won their bet. She saw them in all the rooms he intended to take her, in all the ways he insisted she would. Every day. Every night. Ana whispered fantasies of her own while his hands and mouth worked their way down her back. It took every bit of effort to keep her knees straight while his tongue found its mark\u2014again and again. God, he was so good at this. \"I want to wake up like this. All week.\" ",
        "The moan he pressed into her moist flesh made her shiver. \"Like this?\" His tongue swept over her. Pleasure coursed through her blood like a livewire, crackling along her veins. Even the feel of his breath on her skin excited her. \"Or this?\" \n\n\"Both.\"\n\n\"So greedy.\" Then he showed her how both felt, swipe after suckle after swipe. \"Mmm...so sweet.\" The tracing paper rustled, flicking her breasts as she sagged onto the table. She saw him shove down his jeans through half-lidded eyes. The look they shared when he caught her staring at his cock made her burn with anticipation. Then Sean showed her what it was like to really burn when he brushed his shaft back and forth between her folds. \n\n\"Do that again,\" came Sean's rough demand when she rocked in time with him. He gripped her hip and shoulder, controlling her while the head trailed over her clit and inched lower. Ana cried out at that first hard probing. He took his time pushing every inch into her. She felt every contour, every ridge of his relentless penetration. \n\n\"Remember how much you love this?\" His gruff voice rolled through her like smoke and permeated the darkest corners of her mind. \n\nHe felt warm and heavy inside her. \"Yes.\" \n\nShe rolled her hips so her sheath twisted along his length in corkscrew spirals. Sean swore and caught her hips in bruising grip. His withdrawal came with the same measured pace. For a girl who didn't like surprises Ana loved how Sean easily switched from aggressive to tender during sex. Her eyes watered. The slow friction felt every bit as good as his entry. She whimpered in pleasure and regret when just the tip of him remained within her. She wanted him back. Deep. His fingers skated down her spine then flew back to her hip when she bucked. \"Sean.\"\n\n\"What?\" \n\nShe knew why he waited, knew he wouldn't move until she begged him to. The battle between rebellion and surrender created the most decadent ache. \n\nSean withdrew a fraction. \n\n\"Please. I need it.\"\n\n\"What? Tell me.\"\n\nAna didn't disappoint him. There was freedom in submitting to something bigger than herself, in letting it consume her. She opened her mouth to speak again but Sean stole her words with one merciless thrust after another. This was the man who would break down any barrier until they were linked. Every move he made within her affirmed it. She pushed off the table to meet each inward drive. His hand curled into her hair, tugged her head back as he leaned over her. The ride was wild, demanding and too good to last. They slumped over the table, their energy spent. \n\n\"Now I kinda hope you win the bet.\" \n\nSean rubbed his cheek against her hair and pressed a smile to her temple. \n\n* * * * *\n\nSunday morning came with the excitement of welcoming their loved ones into their home. Ana tucked the flowers Gwen brought into a vase. She looked out the kitchen window and saw the Cobra cruise up the driveway before the engine's low rumble announced its arrival. \n\n\"Your folks are here.\" \n\nDominic Brennan skipped out to the passenger side and opened the door for his bride of forty years. His excitement over that car hadn't faded since the day Duncan and Sean handed him the keys. Don and Jack Williams practically turned the same age when they peeked out the window to investigate but Sharon found Dodger way more interesting.\n\n\"Holy sh\u2014\"\n\n\"Jack!\" Gwen's brown eyes lasered him with the look all teenagers made their mother's perfect. She turned to Don for reinforcement. His wry expression was more for Gwen's benefit than for Jack's censure. \n\nHugs, handshakes and kisses started in the foyer. Housewarming gifts were set on the kitchen counter before the house tour began. There was pride in hearing the superlatives, in seeing their family take in the transformation of all the rooms they'd seen in various stages of chaos. Their home was a proclamation of two lives joined to create something new and whole onto itself. \n\n\"Ana, this is beautiful,\" said Gwen of the antique china displayed in the dining room's two armoires. The set was a family heirloom passed down to her mother. Gwen traced the ornate carvings in the wood. \"Where did you buy these?\" \n\n\"At a flea market. Can you believe we got those for two hundred dollars?\"\n\nClodagh turned to Ana. \"Both?\"\n\n\"You should've seen her talk the guy down,\" Sean said with disbelief that held a tinge of embarrassment. Ana glared at him. \n\n\"We just sanded them down and painted them.\" She'd chosen the Chinese red not only because it made the delicate collection of dishes stand out; it was Sean's favorite color. \"Maybe we can do Thanksgiving here this year.\" \n\nGwen put her arm around Ana's waist, her brown eyes lit up as she looked to Clodagh. \"No long hours in the kitchen? I like the sound of that!\" \n\nThey all talked their way to the kitchen, making plans for the big feast. The men carried the sports talk outside when Jack asked Dominic about his \"sweet ride\". The rumor that Sean had helped to restore it cemented his cool status in Jack's eyes. At first Ana didn't think much of it when Sean and her father didn't return. But the minutes dragged on and she found her attention shifting from the buoyant chatter around the island to the vigil she kept on the driveway. From here it looked like they were taking turns at a monologue. An uneasy curiosity rose up. What was taking them so long? They walked into the kitchen after an eternity, Ana scanned their faces for clues but found none. She filed it in the back of her mind to stay on the lookout for a moment when she could take one of them aside.\n\n\"I was telling Ana we should have her help us decorate,\" Clodagh told Sean.\n\n\"Just don't complain when she makes you shop all day long.\" Sean went on to tell them about their trips to flea markets where she'd turned into a furniture predator. \"All you have to say is 'furniture' and she'll be up and ready by five.\"\n\nAna cut her eyes at him then turned back to Gwen and Clodagh. \"Everybody knows you've got to get an early move to catch all the good deals.\"\n\nBut Sean wasn't done. He told them about the endless minutes standing in one Home Depot aisle while Ana read every light bulb box to find the best color temperature. \"The guy who was helping us hadn't heard of that either. So what does Ana do?\" He looked at her. \"Tell 'em.\" \n\nHe was mostly wrong if he thought she'd get embarrassed telling everyone how she morphed into a \"lighting professor\". Home Depot should thank her for the invaluable knowledge she'd imparted to their employee. But Sean had everyone besides Jack chuckling by the time she'd explained her side of things. \n\n\"So much for being my favorite design assistant.\"\n\n\"Aww.\" He kissed the top her head.\n\nJack cracked an imaginary whip in Sean's direction with a whoosh. Laughter erupted again.\n\nAna went over to stand next to Jack, who stood taller than he did over Thanksgiving. \"It's good to know who's really on my side. You just wait a few years, Jack. You'll see what it's like.\"\n\nA sly grin played across Sharon's face. \"Maybe it won't be that long.\" \n\nJack replied with a look of disgust.\n\nBy the time Stacy arrived a half hour later the scent of barbeque spices drifted off the grill. The afternoon passed with rowdy outbursts, tense silences and good food. Duncan brought Grams and Grandpa Sean to round out the group. Stacy and Sharon seemed to watch Duncan as much they did the game.\n\nThe final quarter was epic. New York scored the first touchdown. New England answered and took a four point lead into the last two minutes. New York advanced to the twenty-four yard line with a minute to go. The next four plays put the Patriots' perfect season in peril. Thirty seconds left. History and every sports clich\u00e9 known to man was in Eli Manning's hands. The ball flew into the New England end zone. Only the TV spoke. \n\n\"It's over! It's over! Oh. My. God!\"\n\n\"They can come back!\"\n\n\"Brady can do it.\"\n\nSilence.\n\nThe football sailed towards the Giants' end zone and fell out of reach. Jubilant screams ricocheted around the living room. \n\nStacy giggled when her high-five hit the air instead of Ana's hand. \"You did it again,\" she said and took another swig of her wine cooler. \"If I was Gisele I'd be consoling Tom all night long.\"\n\nGrams chuckled; the only one in her family able to make sound. \"He is a fine looking one.\" Grandpa Sean wasn't amused.\n\nThe rest of the Brennan clan recovered just in time to see coach Belichick scurry off of the field.\n\nDon Williams shook his head. \"Un-believable! You'd think he didn't know there was a fifty percent chance of this happening.\"\n\nThe Williams ate and drank in celebration while the Brennans ate and drank because there was nothing to celebrate. Ana loaded another tray full of snacks and watched them carry on in the living room. This was why she'd moved across the country. Her family. Her home. It was much bigger than she'd hoped for back then. Sean made his way to her holding several bottles. My family. My home. \n\n\"Quit smirking and hand it over.\"\n\nInstead of correcting his assumption, she pushed the folded note across the counter. \"I added some stuff you're very good at, you're going to like it.\"\n\n\"Smooth,\" he teased then opened the yellow paper. \n\nAna patted his butt. \"I'm learning from the master.\"\n\n\"You're going to kill me.\" \n\n\"See? I have confidence in you\u2014but what a way to go, eh? \" She tore up his list and threw it in the trash.\n\n\"Yeah, don't rub it in or anything.\"\n\n* * * * * \n\nMarch, 2008. \n\nAna picked up the fashion magazine even though she already had a copy featuring Darien Scott on the cover. She flipped the pages until she got to the cover credits. The elation at seeing her name at the end of the list still hadn't faded. She paid for the bottles of water and merged into the stream of passengers and rolling luggage.\n\nShe hadn't been on a plane since her trip to New York last September. At the time she'd thought the meeting with the Bergman retail team to be spectacularly anti-climactic. When Camille Pratt invited Ana to lunch she wrote it off as the mandatory kindness one got after essentially being told \"we think your stuff sucks\"\u2014at least that's how her ego took it. Ana expected the golden brush-off while they ate alongside a busy Manhattan side walk. What she got was a restrained cheerleader in a business suit and stilettos. \"The fact that the buyers wanted to meet with you is validation of your talent.\" Those words wouldn't have fueled Ana's determination had they come from someone else. \"Try other stores. Trendy boutiques would be a fine place to start, perhaps you'll let it slip that Bergman was interested,\" Camille said with a cunning smile.\n\nSo instead of moping on a plane for six hours, Ana drew inspiration from Sean's can-do spirit and Simon's make-the-system-work-for-you strategies. She plotted, made phone calls and met store managers until she found a boutique on Hollywood's trendy Robertson Boulevard to carry her jewelry. Then she launched a website and gave Darien several pieces to wear during public appearances and in the band's videos. \n\nThe advertising ploy paid off. \n\nSales were steady until fans and fashionistas had to know where Darien got those necklaces and earrings. Now vendors were calling her\u2014Bergman New York was one of them. The next meeting would be different. Ana's belief in her creations was boosted by sales figures and good buzz. Most of all she had the conviction that Bergman wasn't the only avenue available to make this new venture a success. Maybe in time she could afford to move on from Design Haus.\n\nThere was another trip to New York in the works but this one to Maui was a well earned respite, especially for Sean. \n\nAna slowed her steps when she saw a paperback novel in Sean's seat while her tote guarded its neighbor. She looked on from the corner with pride. Sean stood at the end of the aisle in the middle of two spring breakers while another pointed his phone at them. He deserved to bask in the moment; after all it had been ten years in the making. It was all thanks to that stripped down little song she'd fallen in love to almost two years ago. \n\nWhen scenes like this one first occurred after the Exit Twenty-Nine single and video debuted, Sean admitted the attention would've gone straight to his ego had it happened in his twenties. Now he enjoyed his taste of fame for what it was and joked that he had about ten minutes left. Ana was happy for him because the accolades were hard earned, because the law student who almost had a record deal no longer had that lingering \"what if\". \n\nThese days he focused on seizing the momentum from his work on Letters from the Road to establish himself as a writer / producer. Sometimes Ana worried about his workload because he did all this while still in legal. But he was happy. However, the time might come when he'd have to make a permanent trade: days at the desk for days turning sounds into music, words into lyrics. She'd look after him to make sure he didn't burn himself out. That's why she'd suggested they get away for a few days.\n\nThe subtle change of his expression when he spotted her reached farther than words. He never looked at anyone that way.\n\nSean opened his hand. \"Hand it over.\" \n\n\"I promise I won't check e-mail the whole time we're there.\"\n\nHe didn't budge. \n\n\"What if you check it once a day and let me know?\"\n\n\"Having you pester me all day long isn't my idea of a vacation.\" \n\nAna pursed her lips. Sean's fingers called for compliance. At one time she believed having a man\u2014anyone\u2014look after her meant compromising too much of her independence. But while navigating the overlapping spaces between couple and individual, Ana found herself freer, bolder to be herself, encouraged to pursue the things she wanted. She surrendered the Blackberry and let the fun and relaxation they planned for the next five days seep in. \n\n\n\nIf this trip was supposed to be a stress reliever, it sure hadn't started that way judging from the rattling sounds that came from the bathroom. \n\n\"What's wrong?\"\n\nAna continued digging in her make-up bag. \"I can't find my pills. I know I put them in here!\" Finally, she looked at him. \"Did you bring condoms?\"\n\nHe shook his head. \"I'll get some in the morning,\" he said though the point was moot. Ana continued fretting, zipping and unzipping. She wouldn't sleep until she found those pills. Hell, if it were possible she'd fly back home to track them down. He grabbed the bag.\n\n\"A baby isn't the end of the world.\"\n\n\"Gee, Irish, you sure know how to make a girl feel better.\" It was almost two am what did she expect? \"Why are you getting all worked up over something that hasn't even happened?\"\n\n\"Because a baby is a big deal. Don't think because my dad's been cool about us living together that he won't kick your ass and mine if I go home with a bun in the oven.\"\n\nHe snorted and shook his head. \"Your dad?\" The fact that she only had on a shirt and panties didn't detract from her exasperated look but he saw more. He dropped the bag on the counter. \"Come here.\" Ana walked into his arms. \"Even though we're going to fuck like crazy while we're here, it doesn't mean you'll get pregnant. And no, I wouldn't freak out if you did.\" He touched the tip of her nose. \"I know how that mind works.\"\n\n\"It's not that,\" she said quietly. \"We have so much going on. I just want to enjoy us being together\u2014just the two of us, a little while longer.\"\n\n\"Me too.\"\n\n\"And then I think about our baby...and I want that too. But I don't want it to feel like...pressure when it happens.\" \n\nThe way her voice and expression softened when she said \"our baby\" filled him with a mix of love for this woman and longing for the future they'd have together. Whenever he was sure he'd committed his entire heart to her, Ana showed him there was more for her to take.\n\nSean brushed back her hair. \"No matter how our kid gets here, he or she will be very much wanted. Okay?\"\n\nAna nodded and stayed in his embrace while she reached an arm into her handbag, calmer this time. Out came a thin card with rows of pills attached. \n\n\"And I was just about to call 911.\"\n\nShe sent him \"the look\". \"Very funny.\" \n\n\"You're so cute when you're pissed,\" he said before he nuzzled her neck. \n\nAna smoothed the side of his face. \"Our children will be so lucky to have you as their father.\" \n\nSean, who'd been quick with words from the time he'd learned to speak, found he had none. So he put everything in his kiss, in the way he reached for her. He held her until the weight of their travel and the late hour left his bones. \n\n\"I thought you were tired,\" Ana whispered. Her fingers sliced through the hair above his nape. She took her time to follow the dips and rises of the strands because the simple act brought her pleasure. And that knowledge sent pin pricks of arousal over his skin.\n\nHis hands followed the curve of her backside and drew her up into him. He studied her face. \"Are you?\"\n\nThe corner of her mouth curled upwards before she voiced her answer. Her kiss was a soft brush of lips, innocent and sweet. Sweetness gave way to something more ardent when he opened his mouth for her. Her taste swept through him, made him answer the slow glide of her tongue with his own. He heard a moan but didn't know who made the sound; he didn't care. What he needed was the feel of her skin against his, to know he pleased her as much as she pleased him. She writhed against his fingers when he reached inside her panties. Sean broke the kiss and molded his palm over her center again and again. He felt warm, moist flesh and nothing else.\n\n\"You're just full of surprises.\"\n\n\"I take it you approve.\"\n\n\"Of this?\" he asked as his fingers neared her opening. \"Always.\" \n\nHe hoisted her up onto the vanity, pulled aside her panties and put his eager mouth on her. Ana's nails scored his scalp as he licked. The sensation kept him sane while she bucked and cried out. Damn. The taste of her earthy musk made him want to bury himself in her heat until she screamed. \n\n\"Sean.\" \n\nHe knew what that note in her voice meant even if his fingers weren't being clenched within her sex. \"Go with it, sweetheart.\"\n\nAna wanted to but not without Sean inside her. It wasn't the same. She told him so and pulled at his shirt, forcing him to stop. His belt clattered on the tile; their clothes fell away. He grasped her knees and pulled her to the counter's edge. \"I love you,\" she said as she opened for him, inviting him to her. Her breath caught when he fed her the first inches of his shaft. Ana fell back and bumped her head against the mirror. It barely registered against the sensation of being stretched and filled. \"More...need you.\"\n\nSean needed the bed. He could love her there the way he wanted. He wrapped her legs around his waist and lifted her off the vanity.\n\n\"Wha\u2014Ohmigod!\" Ana's voice cracked with sweet hurt as her weight bore down on his entire length. \n\n\"I know.\" \n\nEvery nerve shook from the effort to remain still while he let her adjust to the swift impalement. With no barrier between them he felt everything in how Ana enveloped him. Soft. Humid. Pressure. Each step he took caused him to shift deep inside her, made her bury breathy sounds into his neck. \n\nThey fell onto the bed in a tangle of arms and legs, kissing, hands searching, skin covering skin. Love came in broken phrases and unsaid words. Sean fought for a slow, deliberate pace. He had to feel every sensation and catch every expression that crossed her face when he pushed in, when he eased out. He wanted Ana to feel him and see him too. Ana moved beneath him, with him, pulled him down on to her as though she had to burrow closer still. \n\nSomehow the slow cadence wasn't fast enough\u2014and then fast wasn't fast enough. Up and up they went, reaching higher, straining together. The mattress protested. Sean tried to warn her how close he was, how good it already felt but Ana drank his desperate whispers. He fisted the sheets and slammed his eyes shut, helpless as they plummeted into the endless free fall. Her fingertips clutched his damp back, making sure he wrung out every bit of pleasure within her before he collapsed. ",
        "They filtered back to something close to normal one breath at a time. Even nestled on the pillow, Sean's head felt like a brick, his limbs were boneless. He shifted, trying to spare Ana his weight but sank back onto her. He moved again but her arms and legs folded around him. \"Stay.\" \n\n\"Too heavy.\"\n\n\"Uh-uhn.\"\n\nSean pressed the smile her stubbornness caused to her cheek and lifted his head. He caught her face in his hands. He took in her soft, sleepy eyes and her lips, reddened from his kisses. He put that flush of pleasure on her skin. His pride soared. He reached to touch the curls draped across the pillow. To think there was a time when he wondered if he'd find love to be too quiet. But sharing his life with Ana was his greatest adventure. She grounded him and expanded his world at once. He opened his mouth just as she turned her head to kiss the inside of his hand. Marry me. \n\nBut he had no a ring, had no special moment planned. Ana deserved both.\n\n\"What?\"\n\n\"I love you.\" Somehow those words fell short.\n\nAna touched her mouth to his shoulder, his neck, and his jaw before she echoed his words. Then she found his mouth. They were still kissing when he rolled over with her. He dragged the sheet over them and relaxed while he stroked her back. They fell asleep perfectly exhausted in each other's arms. \n\n* * * * * *\n\nAna and Sean rented a Jeep and spent half a day a day exploring the island's unique sights, sounds and tastes along the winding Hanna highway. Balmy breezes and sunshine teased their faces. The road lead them along rainforests and ocean views while sharp turns and one lane bridges added another kind of drama. They stopped to snap pictures of the gorgeous landscape then drove on to snorkel at a black sand beach. Other days they drifted into markets where conversations in the native tongue sounded more like song than language. \n\nThe subtle scent of nature was everywhere and hard to miss especially on the afternoon they hiked through a forest of bamboo. Curved paths led to a series of waterfalls with heights for the dare devils and the more cautious thrill seekers in the tour group. They started at the tallest descent before they worked their way down. Every leap off the rocks was a rush that had to be repeated. For Sean, the sight of Ana swinging through the air, squealing with delight before she let go of the rope was as fun as doing it himself. \n\nThey splashed around and laughed like children in the dark pools nestled within the jungle of trees and birdsongs. Then they snuck off to a secluded spot and made love under a banyan tree\u2014Ana's idea, one she had no trouble convincing him to try after she knelt at his feet. The next night they attended a luau and got swept away in the sensuality of the ancient dance. They never made it to the bed when they returned to their rented cottage. \n\nBut all the things they'd seen and done in this paradise didn't compare to the splendor of watching the sunset from Haleakala Mountain. Though sunrise was just as spectacular, there was less of a crowd at this hour. \n\nAna stood still in front of Sean, her fingers glued to his wrists while he looped his arms below her sweater. Amber clouds stretched out before them in a sea of undulating waves. They were so close it seemed like everyone on the mountain could walk out and touch the sun. A gentle applause broke out as the sun disappeared beneath the clouds and set the sky in a fiery glow. The shiver that ran down Ana's arm had little to do with the crisp, chilly air.\n\n\"I'll never forget this,\" she whispered so as not to disturb the moment's reverence. \n\nSean's cheek brushed hers; he sounded as solemn as she did when he said, \"Me neither.\"\n\nA mix of euphoria and adrenaline hit his system. Instinct took over. Sean turned Ana to face him. \n\n\"Marry me.\" The words were out when he realized that it sounded like a demand and not a proposal. \"Will you marry me, Ana?\" He should have done it on bended knee; on his way down he remembered...no ring. \n\nDammit. This was the most important moment in their lives and he was botching it up.\n\n\"I-I don't have your ring yet....\"\n\nAna reached for Sean's hands as he stood up. \"It's you I'm marrying, not some piece of jewelry.\" \n\n\"Is that a yes?\"\n\nThat flicker of vulnerability in those blue eyes she adored made the first happy tears fall.\n\n\"Yes! Yes!\" She wrapped her arms around his neck tight as he lifted her off the ground. This moment was a million times more glorious than the one she just witnessed, better than her daydreams ever conjured. \n\nApplause broke out again. \n\nSean and Ana found they had an audience of smiling and curious faces. Members of their tour group offered congratulations and took pictures so the newly engaged couple had a record of their special moment. Thousands of stars dotted the sky, becoming brighter with every passing second as though Mother Nature had gradually turned on the light inside them.\n\nThey hardly slept that night. \n\n* * * * * \n\nVacation withdrawal wasn't an option when they'd been sitting on a secret for two days. With their senses revived, Sean and Ana packed their clothes and souvenirs, touched down after sunrise and knocked on Duncan's door. Ana's pent up excitement built to tedious levels during the question / answer session about the trip. She lavished five days worth of back scratches and belly rubs on Dodger in part to soothe herself.\n\n\"I have another favor to ask,\" Sean said in the most offhanded manner. Finally. Ana's gaze locked on Duncan. \"What do you say about being my best man?\"\n\nDuncan searched Ana's face for confirmation. The second she nodded, he enveloped Sean in a rough, hearty hug only brothers could share. When it was Ana's turn, he held her like a doll and kissed her cheek. \"Welcome to the family!\" He picked her up to make it official. \"You better marry her quick before she comes to her senses.\"\n\n\"I should have asked you instead,\" Sean told Dodger who wanted to give and get more love. \n\nThey chatted with Duncan over celebratory bowls of Cheerios and pulled out the digital camera. They told him about the fun detour they'd taken thanks to four stubborn cows in the picture. \n\nIt wasn't until mid-morning that Duncan walked them to the driveway where another round of hugs and congratulations took place. \n\n\"It's good seeing you this happy,\" Duncan said as he clapped Sean's back. His eyes glinted with a mix of humor and seriousness when he turned to Ana. \"The pressure's going to be on you two to have the first boy.\"\n\n\"We've got to practice first\u2014\" Sean quipped and sent Ana a meaningful look. \"\u2014a lot.\" \n\nThe harder Ana tried not to blush, the less it worked. In the end, Ana embraced her embarrassment and hugged her future brother-in-law goodbye. But she wouldn't let Sean get away with teasing her. \"Lucky for you, I'm a good teacher.\" \n\n\"Oh, yeah,\" said Duncan, \"you've met your match\n\n\n\nAna relived the past days again, this time during a three-way call with Sasha and Michelle. She delivered her happy news to her dad and Gwen after she'd left messages for her girls to call back for a phone conference. She couldn't bear to tell them any different. It was as close as to how it she'd have told them had they all still been living in the same zip code. \n\nSasha was the first to speak. \"See? I told you he was going to propose!\" she told Michelle. Sasha had taken Michelle's spot as love's head cheerleader. \n\n\"Were you shocked?\" Michelle asked.\n\n\"I didn't think it would happen this soon.\"\n\n\"You have to promise us one thing,\" Sasha demanded.\n\n\"What?\"\n\n\"No fugly bridesmaids dresses!\" \n\nThey laughed and plotted until Ana wished she could yank her friends through the phone and into her den. It wasn't until she'd hung up that Ana remembered email. She turned on the computer and checked the messages that came in since she handed off her Blackberry. \n\n\"Sean! Sean!\"\n\nThe crack in Ana's voice sent chills down his spine. Sean bolted down the hallway; Dodger followed with his tail drooped. He found her standing in the middle of the den. \"Baby, what is it?\" he asked as he checked her over. She was trembling when he pulled her to him. \"What's wrong?\"\n\n\"It's her.\" The words were more breath than sound. \n\nHe followed her gaze to the computer screen.\n\n\"She gave me her phone number,\" Ana whispered into his shirt. Her voice carried three years of questions, dead ends and hope. Sean rocked her in his arms while relief, joy and shock fell down her cheeks. He felt all those things with her, felt grateful that he was here for her. \n\n\"Do you think I should wait to call her?\"\n\n\"What do you want to do?\"\n\n\"I feel like I'm going to throw up.\"\n\nSean sat and placed her on his lap. He rubbed her back, arms and shoulders, soothing her as if she were a child. \"Better?\"\n\nThe gust of nerves in her stomach and the shaky feeling hadn't subsided but having him here made it better so Ana nodded a half-truth. But Sean knew her too well to buy it. \n\n\"Come here.\"\n\nShe settled onto his chest and as though he read her mind he asked, \"Do you want me to dial the number?\"\n\nShe held his hand and he never let go while she spoke to Lisa Dunham.\n\n* * * * *\n\nJuly 2008\n\nAna checked the contents of the picnic basket again and let the lid drop. \"All set.\" \n\nThe destination was familiar. They drove out to the beach whenever they wanted a break or needed to reconnect. Sometimes they took off for no reason other than the beach itself. But today was special. It was two years ago that Ana got lost in traffic and ended up where she was meant to be all along.\n\nWhen they weren't playing the canine version of tag 'n run across the sand, Sean and Ana held hands while the water lapped at their feet. Their plan: find a good spot, enjoy a simple feast and unwind before their night on the town. The softened volume on the medley of voices, music and laughter around them marked the end of the afternoon. The energy and motion on the sand got calmer, the waves grew louder. \n\nAna sat on the blanket, her knees drawn up and bracketed by Sean's. She stared at the ring on her left hand. The ring had a timeless elegance; the vivid yellow perfect for a woman who loved whimsy. The diamonds came alive under the sunlight, doing a fiery dance around yellow sapphire. Sean had chosen it because it was her birthstone. Its color always led her back to that sunset on Haleakala...just as he'd hoped. \n\nShe wiggled her fingers, not used to its delicate weight and still in awe of what it meant. While Sean's first proposal was dreamlike and spontaneous, the second one made it all more...real. \n\nThere was no fancy restaurant or choreographed program. It was the two of them making a pledge for everyday and it would take them into the future. While that sunset in Maui had been etched in her memory, Ana cherished the fact that she only had to step on her porch to relive that moment when Sean pulled the ring from under his place mat and slid his promises down her finger. \n\nSean kissed her shoulder. \"We better head out.\" He didn't sound convinced, neither did she when she said, \"Yeah.\" Ana laced her fingers around his to keep him in place. \n\nThey drew out every second to make it last until the next visit. Her mind skipped ahead to the days they'd each hold onto their toddler's hand and watch tiny feet touch the ocean for the first time. Maybe they'd have a boy first. \n\nBut someone would be missing. Always. \n\nBittersweet realization washed over her. \n\n\"What is it?\"\n\n\"I wish she were here\u2014\" She pressed her palm to her wet nose. \"\u2014to see everything.\"\n\n\"I know.\"\n\nSean molded his body to hers and laid his right hand above her heartbeat. It was a gentle reminder her of what she knew, one that comforted her. Ana twisted around and squeezed his thigh to let him know she understood. They packed up the remnants of their picnic and coaxed Dodger onto his leash. A soft breeze blew, nudging Ana's fingers into Sean's outstretched hand just as she reached out to take it. It felt like a familiar touch and a blessing. She paused to draw in every nuance of that feeling before she looked up at him. \n\nHe touched the tip of her nose then kissed her dimple. \"Ready?\"\n\n\"Yes, let's go home.\" "
    ],
    "authorname": "August_Bouvier",
    "tags": [
        "love story",
        "interracial romance",
        "future"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/kismet-or-happenstance-ch-10"
}