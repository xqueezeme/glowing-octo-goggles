{
    "title": "Snowbound with Her Crush",
    "pages": [
        "This one is for the Valentine's Day Contest, so your votes would be very much appreciated, and of course any comments you'd like to make. Since I think the idea of getting stranded in a storm by a fire is a really hot idea for a story, this is another take on that...\n\n*\n\nEllie Sanders shivered as she got out of the shower, convinced she had goosebumps popping up on her goosebumps, the air was just so cold. Her teeth chattering as she reached for the bath sheet to wrap herself up, she could feel herself shuddering all the way to her toes. The wind was really howling outside, so the cabin wasn't exactly warm, especially in mid-February. And the tiny space heaters were almost useless. And since she'd never learned how to light a fire, at least one that would stay lit, she knew she'd have to bundle up to try and keep warm till everyone else arrived.\n\nBut at least if the lights went out, which they kept threatening, with how they were flickering off and on, at least she had the light on her phone to see her way around, along with her book light, that she never went anywhere without, being such a voracious reader.\n\nSo, she knew she'd be fine. At least she hoped.\n\nBut some Valentine's weekend this was turning out to be. She blew out a frustrated breath, as she reached for the hairdryer to blow out her long, unruly red hair that insisted on curling down her back in heavy waves, no matter how hard she tried to straighten it. Her brother Jack and his fianc\u00e9e Mandy had planned a fun couple's weekend at the family cabin, and since Ellie didn't have a man in her life, her sister Carrie had invited her boyfriend John's brother Charles, to join them, to even the numbers, undoubtedly so she wouldn't feel like such a geek, seeing the rest of them paired off and all happy as could be.\n\nOf course her sister swore that Charles would be perfect for her, since he'd just graduated with a master's degree in English literature, which she assumed would mean he'd have his nose buried in a book for the entire weekend, and would barely even notice her. Lost in that depressing thought, she jumped when she heard her phone ping with a text.\n\nWhen she picked it up, she saw it was her brother Jack: \"Sorry, kiddo, but the roads are getting dangerous, so we've pulled off the highway and we're spending the night in a motel. Stay warm, and we'll try and get there as soon as it's safe to travel, hopefully by morning.\" \n\nEllie texted back: \"No worries, I'm fine. Just make sure the roads are clear before you head out again.\"\n\nOnce she'd dressed in a warm pink fleecy sweat suit, with wool socks and fuzzy pink slippers just to try and keep her feet from turning blue, she stared sighing at the daunting sight of the big, cold stone fireplace, and knew she'd better get busy trying to get a fire going, seeing as no one was coming to help her now.\n\nDown on her hands and knees in front of the hearth, doing her damndest to get the stupid kindling to light with a barbecue lighter that refused to stay lit, she turned her head and froze when she thought she heard someone, or even worse, something banging on the front door. The hair on the back of her neck stood on end, knowing it couldn't be her family, since they'd told her they weren't coming tonight because of the storm, so she wondered who it could be, especially since it was hardly a night to be out for a casual drive.\n\nCarefully tip-toeing across the room, with the fire-poker in her hand, she pulled back the curtain at the top of the door just enough to peek out the window, and she let out a gasp, her heart nearly jumping into her throat when she realized who it was. Holy crap it was Dex! Her brother's best friend, who she thought was still on the other side of the world, living out his latest adventure. But when she tugged open the door, there he was; big and tall and just as gorgeous as ever. He burst inside bringing in a cold gust of air and a swirl of snow, before he grinned and slammed the door shut behind him, muttering, \"Holy crap, what a storm.\"\n\nOnce he'd shook the snow off himself, stomped his booted feet to get all he could off those, too, he tossed back the hood on his parka, flashed a heart-stopping dimpled smile and said, \"Hey, kiddo, so how you managing on your own?\"\n\nDoing her best not to stammer, she was just so shocked to see him, and he looked so darn good, she said, \"I didn't even know you were coming. And how did you know I was up here on my own?\"\n\nHe tugged off his gloves and unzipped his coat as he told her, \"When your brother heard I was back from filming my latest gig, heli-skiing in New Zealand, he said I should come up and join you guys for the Valentine weekend. And I was on my way up, hitting nothing but one white out after and another, trying to decide if I should pull off the highway to look for somewhere to get out of the storm, when Jack texted to let me know that you'd come up early to try and warm the place up, so you were here all on your own. Then I decided to push through till I finally got here, just to be sure you were okay.\"\n\nEllie slowly nodded her head, still stunned to find herself alone with her lifelong crush, never mind the fact that he'd risked his life to come and help her out. And as she stood blinking at him in a stupor, Dex let his gaze wander over her, surprised and delighted to discover once again how amazing she looked all grown up. Damn, little Ellie was sure no kid anymore; and was definitely a full grown woman. And just looking at her in her sexy pale pink body-hugging sweats with all that long thick red hair curling down her back, and no bra from what he could tell -- seeing as her nipples were rock hard and poking at the fabric -- unfortunately was also getting him hard.\n\nThinking back, as he doffed his outerwear, he smiled remembering the last time he'd spent some time with her. Before last summer, he'd only ever thought of her as a kid, seeing as he had at least twelve years on her. And being his buddy's kid sister, no matter how gorgeous she was, he'd always had to force himself to remember that she was off limits. Though now that she was all grown up, he started to grin, wondering if the rules still applied, especially when she looked so smokin' hot, that all he could think of was what she'd look like naked.\n\nBut finally last summer they'd really connected. He'd been out back of the cabin alone in the hot tub, trying to soothe his aching muscles, after nearly getting himself drowned, white water rafting in the Yukon, when Ellie had wandered out in a sexy looking pair of cut-off denims and a barely there little white bikini top, making his eyes flare. And no matter how hard he tried to avert his gaze, he just couldn't stop staring, and remembered he'd also had to force himself to close his gaping mouth, she just looked so insanely hot. Perfect breasts, high and perky, with some really nice cleavage, and her ass had him wanting to sink his teeth in for a bite, it was so nicely rounded and toned, and her legs were just so tanned and smooth, they had him imaging how good they'd feel wrapped around his waist, as he clutched her ass and slid in deep. And all he could think of was getting her to join him in the tub, for a little fun in the water.\n\nBut she'd blushed at the thought and only agreed to sit on the edge and dangle her legs in to keep him company. And despite the fact she looked good enough to eat, they'd wound up talking for longer than they'd ever talked before. And he was delighted to discover that in addition to being easy on the eyes, she had a terrific sense of humor, a razor sharp wit, was amazingly bright, and he honestly couldn't remember ever feeling so at ease with a woman, she was just so much fun and so cool to be with.\n\nAnd when her sister had called her inside to help with dinner, Dex could still remember how disappointed he'd felt. Though he knew that nothing could happen between them, considering who she was, and her age. But the hour or so they'd talked alone together, never left him.\n\n-------------\n\nNoticing he was just standing holding his coat, Ellie finally remembered her manners and took it from him, while he bent and took his boots off at the door and put them on a tray to dry.\n\nBut when he came up behind her at the closet and breathed against her hair, \"So how have you been doing on your own up here, Ellie?\" All she could do was close her eyes and shiver right to her toes. God, his voice was just so deep and sexy, that he might as well have asked her if she wanted to get naked with him and get busy, he had her quivering so freaking hard.\n\nFinally she got up the nerve to turn around and look him in the eye, and wowzers what a mistake that was, since the devilish glint in his eye was just so teasing, she already felt like she was in way over her head, despite the fact that he'd only just walked through the door. Good lord, the man was lethal, and no wonder she'd been secretly harboring a crush for him for as long as she could remember.\n\nOf course knowing he was a born flirt, and that nearly every woman he encountered found him irresistible, judging from all the women she'd seen him posing with him online, she knew she shouldn't feel too flattered, and imagined he was probably just having a little fun, toying with her. Being a world famous travel blogger, into exploring the world's most far flung destinations while being filmed doing outrageous things, like braving the most extreme sports known to man and willing to try anything suggested to him, so it could be put online. She knew he was too far out of her league to even consider anything ever happening between them. She sighed, looking up into his eyes.\n\nBut still, a girl could dream.\n\nFinally, she swallowed hard, anxiously licked her lips and tried to be practical, deciding to offer him something to eat. \"If you're hungry I made some chili and I got a nice loaf of crusty Italian bread to go with it, and it's still warm, if you want a bowl.\"\n\nSeeing how flustered she looked Dex shook his head and explained, \"No it's okay. I got a burger when I stopped for gas, so I'm good.\" Then he brushed a lock of hair from her forehead, almost laughing at the way she instantly shivered and told her, \"But I think I'd better get to work on building us a fire, or we'll be cold tonight.\"\n\nOnce the lights flickered one last time and then went out, no doubt from the high winds that came with the storm, Ellie was so glad Dex had shown up, even if just to get the fire going. She knelt by the hearth and put on a flashlight so he could see what he was doing. And he was kind enough to even show her how it was done, down on his knees beside her, balling up a huge pile of newspaper and stacking it carefully in the hearth, before topping it with a good amount of kindling, and finally a couple of logs, just to get it going, explaining he'd add more wood later, once it caught. And then when he lit the paper the whole thing went whoosh, and voila, he had a real live fire going that she knew would warm the place up pretty quickly.\n\nSoon, finding herself nice and toasty, curled up by the roaring fire, Ellie pulled a few pillows off the couch onto the hearthside rug, and watched Dex go fetch the bottles of liquor he'd brought, along with a couple of glasses.\n\nDex got on the floor beside her, handed her a glass of whisky, and smiling into her eyes, he said, \"Happy Valentine's day, Ellie.\"\n\nShe blinked looking up at the big brass clock on the wall, then started to smile, realizing, he was right and it was just after midnight and the most romantic day of the year had actually arrived. She happily clinked her glass with his, deciding he was the perfect person to spend it with. But she was also pleased that he was starting to refer to her by her actual name and wasn't calling her kiddo anymore, since she'd always hated being referred to as a kid, even if she was the youngest in the family.\n\nDeciding things were just a little too cozy with gorgeous Ellie so close and looking just a little too enticing to resist, already finding himself captivated by her pretty smile, especially with her face bathed in a romantic firelit glow, Dex decided he needed a distraction before he gave into temptation and did something stupid like pull her in for a kiss. Glancing around the room he noticed one of the end tables had a lower shelf stacked with games, and when he spied a deck of cards, desperate for something to do that wouldn't involve getting them naked, he grabbed them and asked her, \"You ever play poker, Ellie?\"\n\nEllie nearly choked on her drink, and had to fight hard to keep a straight face, since he would have no way of knowing that she'd earned a reputation as a poker shark in college, which kept her in spending money, at least until everyone figured out she couldn't be beat and refused to play with her anymore. \"Maybe once or twice,\" she said, giving him a casual shrug. And as he took the cards out of the box, she asked, \"But what are we playing for, because I don't have any change.\"\n\nAs Dex took a sip of whiskey, his gaze settled on the lushness of her lips that he knew would be sweet as honey. Then he grinned, as he murmured deep and low, \"How about winner gets to choose?\"\n\nEllie bit into her lip, playfully wiggling her eyebrows as some very naughty thoughts began to flood her brain. Then, taking full advantage of the fact his attention was focused on the cards, she raked in the sight of his incredibly ripped body clad in skin tight jeans and a body hugging black sweater, along with his carelessly tussled blond hair, that she'd always wanted to run her fingers through. Fighting the urge to lick her lips, she asked, \"So, if I win, then you have to take something off, is that how it works?\"\n\nDex blinked, not really sure he'd heard her right, he swallowed hard, and said, \"Are you saying you want to play strip poker, Ellie?\"\n\nHearing him saying it out loud had her wondering if she'd lost her mind, and she decided she'd better push her drink away before she blurted out anything else that was likely to get her into trouble. Knowing full well that once she got him naked, she wouldn't even know what to do with him, never mind how disappointed he'd be when he realized she didn't have a clue about sex. God, what was she thinking, flirting with a guy like him, who probably knew every trick in the book, and then some, that he'd no doubt invented, just to keep from getting bored in the sack.\n\nAs he shuffled the deck, feeling a little reckless, deciding to throw caution to the wind, since they were basically stranded alone in a raging storm, Dex said, \"Tell you what, if I win a hand, I get to kiss you. And if you win, you get to do whatever you want with me.\"\n\nShocked speechless, Ellie's gaze widened, and she could actually feel her panties getting damp and her nipples growing hard just imagining all the fun stuff she'd love to try with him. But then her eyes popped when it occurred to her that he'd said he'd like to kiss her. Holy shit! Dex, the hottest man she'd ever laid eyes on, actually wanted to kiss her. Wow. She started to grin. Deciding maybe it wouldn't hurt to let him win a hand or two, or even the first dozen or so, if it meant she'd finally get a kiss out of him, after lusting after him for as long as she could remember. And of course the longer she let him win, the more he'd have to keep kiss her. Which is what she'd call a win, win.\n\nOnce he'd dealt two hands for Five Card Draw, Ellie held hers as awkwardly as she could, anxiously biting into her lip, like she didn't have a clue what to do. Finally, doing her best to look confused, she said, \"So, remind me, Dex, what beats what again? I know twos and threes are probably not a good thing to have in my hand though, right?\"\n\nDex chuckled, since she probably didn't know she wasn't supposed to give her hand away. Still, she looked so adorably confused, he was more than happy to explain the game to her. \"Well, Ellie, that depends on how many you've got. Any card can be good if you've got enough of them.\" Then he found the card in the card box that showed what hands were best and pushed it over so she could see the ranking of the cards. Then he said, \"So, once you decide if your hand's okay, I guess we should place our bets.\"\n\nShe nodded and stared hard at her cards, and then back down at the card with the scoring explained, as though trying to figure if she had anything worth keeping. But seeing as she was staring at both a pair of aces and a pair of kings, what she really wanted to do was toss all her cards, just so he'd have an excuse to plant one on her when he won.\n\nThen Dex grabbed a jar of red jellybeans off the table that she'd brought for something sweet to celebrate the day, deciding they could use them to wager just for fun. After pouring her out a little more than half of them, to give her more chances to bet, and then putting the rest in a pile for himself, he said, \"So, what's your wager, Ellie?\"\n\nWhen she picked up just two jelly beans and cautiously put them down between them, Dex nodded and said, \"Okay, I'll see your two beans and raise you three.\" Then he said, \"So, how many cards do you want?\"\n\nEllie winced and asked, \"Um, is five cards too many to ask for?\"\n\nDex grinned, shaking his head. God, she was just so sweet that he hated to disappoint her, seeing as he was holding a pair of fives and a pair of nines, and only needed to discard a single card. After he'd dealt her five new cards, and she tossed aside her original hand, he spread his cards out and let her see his winning hand.\n\nEllie nodded and put down the mess she'd been dealt after she'd thrown away what would have beat his, with two aces and kings. Now stuck with just a ten, deuce, three, five and six, she was thrilled to have lost, even if she'd rigged it. \"So, who won?\" she asked him, batting her eyelashes and looking all innocent.\n\n\"Sorry honey, but two pair beats that mess you've got every time. But it's still early, no worries. I'm sure you'll catch on and win a few hands.\" But then he smiled warmly into her eyes when he leaned across and took his prize, taking hold of her by the chin and pressing a chaste little kiss to her lips. Then his head snapped back and he blinked shaking his head, surprised to discover that even just the feel of her mouth pressed to his was pretty sweet no matter how lightly.\n\nSmiling at delighted look in her big blue eyes, he handed her the deck, and told her, \"Your deal, Ellie.\"\n\nAs the game progressed, though she tried her hardest to lose, tossing away every good hand she got, so she'd get to enjoy a few more kisses, which she noticed kept getting longer and deeper with every touch of his lips, when she finally won a hand, she flashed him a very naughty grin as she tried to decide exactly what she'd like to do to him. And the anxious way he was swallowing and staring at her, she decided it might be fun to tease him a little, and see him with some of clothes off. \"Um, seeing as I won this hand, I think those jeans of yours should go.\"\n\nDex looked down at his jeans, wondering why, out of everything he was wearing, she had to pick his freaking jeans, since she'd know the instant he got them off how hard she'd managed to get him, just from sharing a couple of kisses. Still, a deal was a deal, so he got to his feet and kept his eyes on hers, smirking, as he took his sweet time popping the button on his jeans before he ever so slowly began to lower his fly, doing his damndest not to laugh out loud at the way her mouth was falling open and her eyes were going big as moons as his very pronounced erection began to gradually make itself known. And once he pushed his jeans down over his legs and tossed them aside, her chin nearly dropped to the floor once she got a good look at just how big and hard his deal was, straining to break free of his clingy black boxers.",
        "Chuckling, Dex touched a finger to her chin to close her gaping mouth. Grinning at the look of wonder in her eyes, he dropped a quick kiss to her lips, and told her, \"My deal now, sweet cheeks.\"\n\nStill wide-eyed, all Ellie could do was nod, too stunned to even get a word out, after seeing a show like that. Holy crow. She imagined by the size of him, standing well over six feet tall, that he'd be packing something pretty impressive. But wow, the guy was not only ripped, with muscles to spare everywhere, even his uber toned thighs, but jeez, what he was rocking in his boxers was enough to make her innocent little pussy want to run and hide.\n\nAfter thoroughly enjoying the spoils of her win, with a jaw-dropping strip-tease like that, Ellie decided it might be time to start playing her 'A' game and quit trying to pretend she didn't know how to play. And by the time she'd won nearly every hand, and got him down to just his boxers, having won even his socks, playfully batting her eyelashes, as she now expertly shuffled the deck, she said sweetly, \"I hope you're not getting too chilly over there, Dex.\"\n\nDex narrowed his eyes on her, beginning to wonder if the little minx had played him. \"I'm thinking you've picked up this game surprisingly fast, haven't you?\"\n\nShe grinned as she took in the delectable sight of his ripped, tanned, toned body, with a nice smattering of golden chest hair that trailed all the way down over his smokin' six-pack to the promised land just inside his boxers. Wiggling her eyebrows, she shrugged and said, \"Beginner's luck, I guess.\"\n\nBut when Dex managed to win the next hand, his grin turned devilish when he asked, \"So, what would you think if we changed it up, and this time I get to ask you to take something off?\"\n\nStaring at him sitting in front of her almost naked, her nipples were so hard, they ached, and she knew if he told her to take her top off, he'd know in a heart-beat just how much she wanted him. So she tried to sound indifferent as she shrugged and said, \"Fair's fair, I guess, maybe I'll start with my slippers.\" But inside everything she owned was tingling like crazy at the thought of stripping off for him, especially between her legs, like her pussy had its own heartbeat, that she was convinced she could hear pounding all the way to her ears.\n\nAnd wouldn't you know it, Dex won the next hand, and his grin was pure evil, as he got up on his knees, and told her, \"Here, let me help you with that top, I don't want your feet to get cold if you take off your slippers.\" But once he'd pulled her top off over her head, and her shimmering fiery red hair floated back down over her shoulders and he got his first look at the perfection of her round, perky breasts and enticingly erect pink nipples, he almost swallowed his freaking tongue. Damn, now all he could think of was how much he a wanted a taste. And all thoughts of impropriety fled when he looked down at himself and saw his twitching cock nearly busting out of his drawers, just itching to get at sweet little Ellie half naked.\n\nSo, naturally, the game soon forgotten, Dex got down on the floor, tipped up her chin, and really began to kiss her. Done with chaste little kisses, desperate for a real taste of her, he slid his tongue across her lips and when she opened up, he sank it inside, and soon they both began to clutch at each other as their tongues began to mate. Dex kissed her long and slow till she was wrapping her arms around his neck and softly whimpering, and finally anxiously pulling him down on top of her. Both of them moaned into the kiss as he blanketed her body with his, cupping her breasts and teasing her nipples with his thumbs as they made crazy hot love with their mouths.\n\nFinally, when he lifted his head, slightly gasping, his chest heaving hard, he looked down at her like he was seeing her for the first time. Bathed in the romantic glow of the fire, she just looked so unbelievably beautiful, with her fiery red hair shimmering all around her, and damn, the taste of her was unreal. All he knew, was right now, more than anything, he not only wanted but needed to make love to her. Even if he'd only have her this one time, he just had to know what it would feel like to get inside her and experience what it would feel like to really be with her.\n\nNipping playfully on her bottom lip, and giving it a gentle tug, the way she was really starting to whimper, and eagerly thrust up her hips, he knew she wanted more, too.\n\nHe discarded his boxers as he began to trail a hot damp path from her lips to her chin, moaning as he slid his tongue along her collarbone before engulfing one of her nipples in his mouth, he twirled his tongue around it till he had her squirming with unbridled need. Till finally he reluctantly released her nipple, pausing only long enough to push her sweatpants and panties down over her hips. He carried on kissing his way down to her navel, where he dipped in his tongue, swirling it around, smiling as she started to squeal and shake, as though for some reason she was shocked by what he was doing. But when he pressed his lips to the pretty little red curl on the top of her mound, he didn't expect her to stiffen up and gasp, or to plead with him, \"Please stop, Dex, don't go any further. I don't like that, it's feels awful.\"\n\nHe stopped and blinked. Don't go any further? It feels awful? Who the fuck had she been sleeping with that made her hate the idea of a guy making love to her pussy with his mouth? And seeing as he was exactly where he wanted to be, knowing how much he loved to pleasure a woman this way, especially seeing as he'd been told by nearly every woman he'd ever slept with that he was genius at getting them off, he knew he had to let her feel what he could do for her. So at least she wouldn't go through life denying herself the pleasure of a man going down on her, deciding it would be a shame for her to never know just how incredible a little tongue-fucking could feel, especially since he'd always considered foreplay every bit as important as the main event.\n\nBut as much as he wanted her, he did as she asked and didn't go any further. Then after dropping a tender little kiss to her belly, he looked up at the tortured look on her face and quietly asked, \"What happened, Ellie? Did someone hurt you?\"\n\nShe winced, ready to die of shame as she shook her head. \"No, he didn't really hurt me. But he was so rough, and the way he almost ate me alive, I just hated it, and that's what made me...\" Too embarrassed to finish, she flinched and turned her head away so she wouldn't have to look at him, she felt so stupid.\n\nHe waited a moment for her to finish, but when she stayed silent, finally he asked, \"Made you what, Ellie?\"\n\nAfter a moment, she turned her head and looked down at him. \"It's so embarrassing, I've never told anyone, not even my sister. So how I can tell you?\"\n\nDex gently ran his hands over her thighs and looked up into her eyes and told her, \"I promise you can trust me, Ellie. Whatever happens here tonight stays between us, no worries.\"\n\nShe thought on that for a while, then heaving an anxious breath she finally said in a rush, \"It made me give up on the idea of ever having sex, okay?\" Then she slammed her eyes shut and waited for him to laugh, or even get up and leave her alone on the floor.\n\nThe crackling of the fire the only sound in the room, a full minute passed as Dex's brain tried to absorb what she'd just told him. Good god, she was so gorgeous and so hot, that he could hardly believe his ears. Till finally, just to be sure, he asked, \"So, are you trying to tell me that you've never...\"\n\n\"Gotten laid?\"\n\nHe nodded.\n\n\"No, I've still got my V card fully intact, and unfortunately I've never had it stamped.\" Poor thing just looked so uncomfortable, and so embarrassed that he crawled up, took her in his arms and kissed her. As he playfully feathered tender little kisses over her eyes, her nose, her cheeks and finally her pretty lips, eventually Ellie laughed, and pulled back to look at him. \"Guess you must think it's pretty pathetic to still be a virgin at my age, huh?\"\n\nDex shook his head, and brushed the hair from her eyes. \"No, of course not. And it's not like you're eighty. What are you, about twenty-two? Lots of women make a conscious decision to wait till they're married, and there's no shame in that.\"\n\nHe was being so understanding, she wasn't sure how to tell him that she hadn't exactly been waiting, more like she'd been too spooked to try to take the leap again with anyone else, after the guy who'd left her too uncomfortable to ever want to try it again. Just the thought of a man getting his head down between her legs made her shudder, and not in a good way.\n\nSo naturally, she'd never let anyone do anything else to her either. And now here she was finally alone and naked with the man of her dreams and she didn't have a clue what to do with him. It would serve her right if he got dressed again, got up and left, even with the danger of a violent snowstorm raging outside.\n\nFinally, gazing into the tormented look in her eyes, Dex ran a finger along her bottom lip and told her, \"How about if we try taking it nice and slow. And we just kiss for a while, and if you want to go any further, it'll be your call. Otherwise, I'm happy to just be close and enjoy the fire, and celebrate Valentine's morning together.\"\n\nGod, could he possibly melt her heart anymore? Aside from being the hottest hunk she'd ever met, she'd always thought he had a sweet side, too. But wow, to think he was giving her an out, when she knew he had to be dying to get laid, because she could feel he was just so hard against her thigh. But when he pressed a tender kiss to her lips, wrapped her in his arms, and gently ran his hands along her back, she realized she trusted him enough to at least try to see what it would feel like with him.\n\nFor the longest time, all they did was kiss, softly at first, with him gently plucking at her lips, but gradually their kisses got longer and slower, and damn, so much freaking hotter. And the way they were beginning to grind on each other, it started to feel like so much more than just exploring each other's mouths. Eventually, their chests heaving hard, he'd gotten her so wet for him that Ellie actually hoped they'd wind up making love, or she'd be falling asleep feeling really disappointed at never finding out what it might have been like with him, especially after he'd gotten her so insanely aroused.\n\nAfter heaving a long slow breath, she finally got up the nerve and slid her hand between them and cautiously touched a finger to the tip of his erection. And she was surprised at the way he sucked in a breath, and that his dick seem to twitch, just from her touch.\n\nDex smiled into her eyes, as she wrinkled her forehead looking confused as she began to run her finger over the pre-come oozing from his slit, explaining to her, \"You got me really hard, Ellie.\" Like as hard as a fucking brick. Normally by now he'd normally be rolling off whatever pretty lady he'd just fucked and heading for the can to dispose of his spent condom. But for some reason he'd really enjoyed taking it slow with her. And her getting up the nerve to finally touch him felt so incredible, it was almost sweet.\n\nSoftly brushing his lips over hers, he suggested, \"How would you like it if I tried kissing you very gently all the way down your body? And I promise if you don't like it, I'll stop the second you say so and won't go any further.\" He wiggled his eyebrows, making her grin. \"But I'm willing to bet you'll like it.\"\n\nBiting into her lip, grinning back, she finally nodded her head. \"Okay.\" Now that she told him her secret, she knew she could trust him to be gentle and not try to devour her to within an inch of her life like the other guy had.\n\nAnd as he began to gently run his hands over her and dust soft little butterfly kisses down over her body, sending the most delightful little tingle she'd ever felt all through her, she actually started to giggle. At least until he was finally pressing his lips to her mound, then she began to anxiously lick her lips, until she finally was able to relax and began to smile and roll her eyes, when she realized just how good he could make her feel.\n\nOh, his lips just felt so warm and soft, and he was being so unbelievably tender, that without even thinking she parted her thighs and let him move lower, to explore her a little more. And when he touched the tip of his tongue along her sensitive folds and then began to slowly run it along her pussy lips, her eyes drifted shut and her chest began to heave as she let out a long slow delighted moan. Oh wow, now she understood why women enjoyed this type of thing so much, and she realized all she'd needed was the right man to show her just how good it could feel. Ooh, lordy, and the heat of his tongue just felt so insanely good caressing her sex, he had every last thing she owned tingling like crazy, and now she wished he'd never stop.\n\nThe moment he gently drew her clit between his lips and softly began to suckle, feeling both slightly startled and yet shockingly aroused by how warm and tingly he was getting her, Ellie drew in a sharp breath and shoved her hands into his hair and began to tug, till he was wincing from the slight stinging in his scalp. Not sure from her mixed signals exactly what she was feeling, Dex looked up and told her, \"Ellie, if you want me to stop, just say the word.\"\n\nHer eyes still closed, smiling the most satisfied smile he thought he'd ever seen, she shook her head, and murmured, \"Mmm, no, please don't stop. It just feels so good, I can... hardly believe it.\"\n\nThough his balls felt ready to burst, and he needed inside her so badly he literally ached, Dex smiled, more than happy just to give her what she needed. He could always take care of himself later, but for now, she was all he cared about. And if he could succeed in making her come, and get her over her fear of sex, he'd feel like he'd really accomplished something by opening her up to a world of erotic pleasure that she never knew existed.\n\nAlternating between softly sliding his flattened tongue along her warm silken slit, and gradually fucking into her tight little pussy with just the tip, the way she was beginning to writhe, and tug at his hair, tossing her head from side to side and really starting to make some noise, he could tell she'd be coming good and hard when she came.\n\nBut he never imagined that taking it slow and really savoring the essence of a woman could be so unbelievably arousing, or as satisfying. And damn, she was just so sweet, like warm honey gliding over his tongue, that he knew he could easily get addicted to the taste of her. Carefully he worked a finger inside her tight little opening, and finally when he latched his mouth onto her clit and began to gently suckle at the little bundle of nerves, that was all it took, and suddenly he had her screaming his name, throwing back her head and quivering like mad from head to toe. And seeing her first orgasm wash over her, was only getting him harder, and by now his dick felt hard enough to burst. But no matter how much he wanted inside her, he decided it was all he would do. And he'd just have to wait to get the relief he needed later.\n\nStill, determined to let her feel just how good it could be, he didn't relent and just kept working her pussy till she was nearly crawling out of her skin, sure he'd never before seen a woman come so hard or for so long. Her chest still heaving, her eyelids flickered open and she flashed him the most elated smile he knew he'd ever seen, telling him, \"Oh, wow, Dex, I had no idea it could feel so good.\"\n\nDex blew out a shaky breath, surprised to realize after pleasuring like that, she wasn't the only one shaking. Then he crawled up her body, and sank his tongue into her mouth, and kissed her long and slow, so she could have a taste of how delectably sweet she was. And then he just wrapped his arms around her and held her close, tenderly cradling her as she slowly came down from the high of coming so wickedly hard.\n\nStroking her back, he asked, \"Ellie, are you okay?\"\n\nAt first all she could do was nod, because wow, just wow. Never in her life had she ever experienced anything as amazing, or so all consuming. It was like he'd tapped into her central nervous system and made her come so hard she'd nearly blown a fuse. She'd heard that orgasms could feel really good, but what she'd just experienced was too mind-numbingly amazing to even put into words.\n\nAnd after what he'd done for her, she wanted to return the favor, and she just hoped he wouldn't laugh when he realized how little she knew about trying to pleasure a man, since she wasn't even sure how to start.\n\nWhen she took a deep breath and reached between them, she was shocked at how hard he felt, like solid granite, but yet so hot and smooth to the touch. And the tip was so wet, it was just oozing with what she imagined was pre-come. As she ran her thumb over the crown, she smiled as he groaned and began to thrust into her hand. \"Damn, that feels good,\" he told her, shocked that just the touch of her hand was nearly enough to send him right over the edge. Of course after the pleasure of going down on her, he'd gotten himself so stoked, he knew it wouldn't take much and he'd be coming like a fucking tidal wave.\n\nThen holy shit, he couldn't believe it when she actually began to slide her warm little body down over his, and then touch her lips to the tip of his dick! Dex's eyes rolled all the way to the back of head, sure he'd never felt anything as nut-clenchingly amazing as sweet little Ellie's mouth pressing a kiss to his cock. Just the thought of it alone was almost enough to make him come and come hard. And Jesus, and when she lashed out her hot little tongue and gave him a lick, he swore he was about to shoot his load like he'd never shot before. Fuck, he shook his head, convinced that he'd never felt anything as good -- ever.\n\nDeciding that shooting a big hot load in her face was probably not a good way to start her education into carnal pleasures, Dex pulled her up under the arms till they were face to face and he pressed his lips to hers, savoring the taste of her lips as he smiled into her eyes. And when she finally pulled back, she said, \"So, I'm guessing you don't like it when a woman puts her mouth on you?\"\n\nDex rolled his eyes all over again, trying not to laugh. She had to be kidding. If he ever had the nerves of steel required to actually hold back long enough to let her suck him off, he'd probably be the happiest man alive, just from the feel of her warm soft lips wrapping around his cock, never mind how crazy good it would feel to have her take him into her mouth. He could actually feel his dick twitch just imagining how fantastic that would feel, to have sweet little Ellie actually sucking him off till he came.\n\nDex chuckled and shook his head. \"Trouble is, you've got me so hard, Ellie, if I were to let you do that, I wouldn't last two seconds, and I'd be coming like there's no tomorrow.\"\n\nShe nodded, and then tipped her head. \"So do you have a condom, then?\"\n\nHe could feel his eyes flare, and his pulse pick up just at the thought of sliding his cock into the tight wet heat of her body. But, he didn't think it would be fair to her if he went all the way and took her virginity. And he had a feeling that later, she might just regret letting a fly by night guy like him take something so precious from her.\n\nThen he reminded himself, that the only reason he powered through the storm to get to her, was to help her warm up the cabin, and make sure she was okay. And he knew if her brother ever found out that he'd gotten her naked and had his tongue on her, even just to let her feel how good oral sex could be, he'd probably want to knock him out cold. Never mind if he rolled on a condom and got busy plundering her tight little pussy.",
        "Dex decided that was one line even he didn't think he should cross -- though he was definitely no saint.\n\nBut sweet little Ellie was surprisingly persistent. Cupping his face in her hands, she pressed her lips to his and murmured against his mouth, \"What we did just felt so good, now I want to experience it all. And I want you to be the one to stamp my V card, Dex, and show me just how good it can feel to finally make love with a man.\"\n\nDex groaned as she brushed her taut nipples across his chest, making his dick twitch like crazy, the damn thing was so eager to get at her. And by now he wanted inside her so badly he literally ached. And he knew if she were anyone else, he'd already have her on her back, and he'd be buried in her so deep, she'd be tearing out his hair, and screaming his fucking name.\n\nBut this was Ellie, his best friend Jack's kid sister, and he knew even being naked and alone with her was all kinds of wrong. He shook his head. If only she didn't feel so good, rubbing her hot little pussy along his thigh, and making him want to crawl out of skin with how she was running her tongue over his nipples. Fuck, she put a whole new spin on being a cock-tease, since his cock felt like she was trying to torture the poor bastard to death.\n\nDex knew one thing though, if he did decide to make love to her, he would definitely be gentle and careful with her and take his time. Knowing that he'd be her first, he would slide into so slowly, he wouldn't care if it took an hour to finally go balls deep, at long as he didn't hurt her, while hopefully letting her realize just how good two people could feel, joined as close as they possibly could be .\n\nBut then he thought about what might happen if he turned her down. Trouble was, if she was determined to lose her virginity, there was sure as hell no telling what her next partner might be like. Could be the guy would just fuck her hard and once he'd gotten off, he'd just roll off her and leave her sore and wondering if that's all there was to sex. And she'd probably never want to try it again, since the last jerk she'd been with had nearly scared into keeping herself intact for the rest of her life.\n\nThen before he could even make up his mind, softly moaning Ellie was curling her hands behind his neck, tugging his head down and sinking her tongue deep into his mouth, sliding her hot little body over his, and wrapping herself around him, feeling like the warmest softest blanket he'd ever felt. Smiling down into his eyes, she asked, \"So, will you be my first, Dex? Please?\"\n\nUtterly lost in the pleading look in her eyes, Dex's resolve began to waver. Though he couldn't remember ever turning down a chance to get laid, he had a feeling that this was one time he really should say no, and tell her it wasn't going to happen. But then again, he hated to have her feeling like he was rejecting her, because he sure as hell didn't want to hurt her, or make her think she wasn't a desirable woman, because damn, he knew this had to be the hottest experience of his life.\n\nAs cupped her lush, warm ass in his hands, and gave her a squeeze, god, she just felt so good, so warm and soft and supple, he started to wonder, what would be the harm. And as she peppered his face, neck and chest with teasing little kisses, till she finally tugged at his lips, and grazed her teeth over his chin, making his cock twitch insanely hard, she was definitely starting to wear down his resistance. In his entire life, he knew he'd never wanted a woman more than her right now. And he knew that sinking his cock into all that tight, wet heat would surely be the closest he'd ever get to heaven, no matter how long he lived.\n\nBut as he struggled to decide if he should cross the one line in the sand, he knew he shouldn't cross, she took matters into her own hands, took hold of his cock and began to slide it along her hot little pussy. And he knew then, it was now or never, since he could feel his pulse going into overdrive and his heart pounding like mad in his chest. She was getting him so damned aroused that soon there'd be no turning back. And he knew that never getting a chance to experience what it would be like with her, if he turned her down, now that they were so close to having it happen, would be just too hard to wrap his head around later, especially knowing he'd have to live with the sad fact that he'd willingly given up the chance to be buried deep in Ellie's sweet little body, even just this once.\n\nAnd she just so looked so tempting, with all that fiery red hair shimmering around her face, every inch of her warm soft body bathed in a sexy firelit glow. And the reflection of the flames dancing in her eyes, seemed to be taunting him to give in and just take her, as she smiled down at him with unabashed desire; the perfect combination of innocence and temptress, she was just too sexy to resist.\n\nEven as he scanned the floor for his jeans, so he could find his wallet and get out a condom, he knew he had to be sure before they took this final step, so he looked into her eyes and said, \"You're sure about this Ellie? You know there'll be no going back, if you decide you wish you hadn't later. And I'm not exactly small, and I can tell you're pretty tight, and I wouldn't want to hurt you.\"\n\nGrinning at the thought of finally getting it on with the man she'd lusted over for what felt like forever, Ellie traced a finger nail around his perfect lips, then leaned close and whispered against his mouth, \"You won't hurt me, Dex. I know you'll take it slow. And I just want this to happen with you so much. And since today's Valentine's day, it'll be something I'll always remember; that I made love with you for the first time when we were all alone caught in a storm, with nothing but the fire to keep us warm on the most romantic day of the year -- the night you finally made me feel like a real live woman for the first time in my life.\"\n\nGeez, how could he ever say no to her after that, and why would he even want to, when she was right about one thing, she had definitely grown into one helluva desirable woman. And from the scent of their mingled arousal filling the air, there was no getting around it, he wanted her every bit as much as she wanted him.\n\nHis mind made up, he ripped into the condom package with his teeth then hesitated when he noticed the look of awe on her face as he took hold of his tool, preparing to wrap it up. And he wondered if she'd ever seen a condom before, much less watched one being applied.\n\nHe got his answer, when she licked her lips and nervously asked, \"Can I try and put that on for you?\"\n\nDex rolled his eyes, sure he was stoked enough to lose it in her hand if she started handling him, he raised an eyebrow and asked, \"You ever put one on anybody before?\"\n\nWhen she shook her and looked pleadingly into his eyes, he blew out a breath, gave in and handed it to her. \"Just be sure to leave a little room at the top for uh...\"\n\n\"When you come?\"\n\nHe smiled at her and said, \"Yeah, for that.\"\n\n\"Okay.\" Just as he thought, the instant she took hold of his cock it twitched really hard, and he swore it started to thicken right before his eyes, just from the feel of her soft little hand sliding over it. She smiled at the feel of him as she stroked her hand up and down along his shaft. \"Ooh, it's so hard, yet it feels so silky soft.\"\n\n\"Yeah, it's funny like that.\" And if she didn't stop messing with it, soon he wouldn't need any protection because he'd be losing his load before she even got him bagged.\n\nAnd the look of concentration on her face was so adorable, the way she had the tip of her tongue poking out at the corner of her mouth, as she struggled to wrestle his erection into the condom, he almost reached for his phone to get a picture of her first attempt at bagging a boner. But then again, it wasn't something he'd ever want anyone else to see -- sweet little Ellie with his dick in her hand.\n\nOnce she finally got the tip covered and managed to painstakingly roll it all the way down every long, hard throbbing inch of him, Dex swore he could feel his heart pounding right to the soles of his freaking feet, she'd had him so primed to get to it.\n\nOnly thing was, she would be his first, too -- his first virgin. And he knew he'd have to take it slow and watch for any signs of her changing her mind, in case she wanted him to stop. But right now, he was so stoked at the thought of getting inside her, that he just cupped her pretty face in his hand, and made slow sweet love to her mouth, groaning at the sensual feel of her hot little tongue sliding over his. His breathing already coming hard and fast, and his pulse racing like mad, gradually he trailed his other hand down over her luscious breasts, gently tugging at her diamond hard nipple, smiling against her mouth at the sexy sounds she was making and the way she was sliding her feet up along his calves, obviously getting hotter by the second.\n\nHe was so turned on by the time he was licking at her nipples that he knew it would take an act of divine intervention to call a halt to what they were about to experience together. At this point, he was so hard, and so jacked, he needed to slide inside her, more than he needed his next breath.\n\nAnd when he ran a hand over her flat little tummy and then stroked his fingers over her mound, he could feel her beginning to quiver, and he knew that once he got inside her and made her come, she'd be shaking right to her toes, she was so responsive.\n\nThe moment he slipped a finger inside her, they both started to moan, it just felt so good for both of them. Dex could feel she was drenched, and so tight, he knew his cock would be in heaven sinking into her hot little pussy. By the time he managed to push a second finger into her snug little channel, she was really starting to whimper and thrust against his hand. And he just knew she'd be amazing once he finally made it inside her.\n\nSo, after he smiled reassuringly into her eyes, he got onto his knees, parted her thighs and slid one leg after the other over his shoulder, pressing soft little kisses along her thighs with his eyes on hers as she smiled up at him, looking so damn sexy he could hardly believe it was really her.\n\nThen he took hold of his cock and nudged the tip between her folds, feeling a line of sweat run down his back as ever so slowly he thrust just hard enough to broach her opening. And when he looked up, he couldn't believe the way she was softly smiling with her eyes half closed, licking at her lips. All he knew was that he had never wanted inside a woman more than her right now. She looked so hot with all that fiery red hair splayed around her gorgeous face, and her full breasts heaving. And Jesus, the sounds she was making as he pulled back and then pushed in and filled her a little more with each thrust of his hips, was enough, if he wasn't there already, to bring him to his freaking knees.\n\nHe could feel himself trembling as he carefully, inch by long hard inch, began to fill her tight little pussy. But she was just so amazingly snug, and felt so damn good, wrapped tight around him, and squeezing him hard, that he didn't care if it took him forever, he was determined to give them both a night they'd never forget.\n\nWhen he pressed a kiss then lashed his tongue along the tender flesh at the back of her knee, she softly whimpered and smiled straight into his eyes. And when he thrust a little deeper, she bit into her lip and whispered, \"Mmm, Dex, that feels so good. Even with how big you are, it just feels amazing to feel you inside me, stretching me to fit you.\"\n\nShe wouldn't get an argument from him, because damn, he was right where he wanted to be. Buried deep in her hot, tight little pussy, staring down at the sultriest look he thought he'd ever seen in a woman's gaze. And he knew that he'd never forget a single moment of this night, the night that Ellie had given herself to him, and only him.\n\nAnd when he started to pick up his pace and push into a little faster, and just a little deeper, she wrapped her legs around the back of his neck, squeezing him wickedly hard, her body starting to quiver, she softly whispered, \"Oh, yes, just like that.\" And he knew he'd hit her g-spot, so he kept right on giving it to her. Till finally she was gasping and tossing her head back and squealing like mad, while crying out, \"Yes! Yes! Yes!\" So, he knew he was right about one thing, seeing her come was truly a thing of beauty.\n\nJust to prolong her pleasure, he massaged her clit as he began to swirl his hips, working himself into her just a little harder with every thrust. Until finally, both of them were quaking and groaning, and as he felt her coming all over his cock for the second time in a matter of minutes, he let go and pushed into her and froze. And he knew, as he felt his eyes rolling back in his head, that in his entire life he'd never come as hard, or ever felt anything as mind-numbingly amazing as what he'd just experienced with her.\n\nThe look of elation on her face as he held himself in place, still pulsing deep inside her quivering little pussy was enough to have him believing this might be more for them than just getting themselves off, because as incredible as it was for both of them, it felt like a lot much more than just sex.\n\nOnce he took hold of the end of the condom and pulled out of her, he took her in his arms and kissed her like his life depended on it, feeling so over the moon happy after sharing something as sweet as that with her. And the feverish way she was kissing him back, had him wondering if just maybe they'd lit a spark in each other that, once the night was over, might be hard to put out.\n\nAfter he'd put a couple more logs on the fire, he curled up with her warm and tight in his arms. And when he kissed her goodnight, the way she was smiling into his eyes, he wasn't sure if he should be relieved that she'd enjoyed her first time as much as she had, or if should be worried that she was already counting on more.\n\nWhen Dex awoke in the morning, though the storm had cleared and the sun was shining, feeling the chill in the air, he tugged the blanket up higher, and when he turned his head, aware of a warm soft body tucked in close beside him, his breath caught in his throat the moment he saw who it was. Gorgeous Ellie was tucked in his arms, and she just looked so angelic with her long red lashes fanning across her cheeks. And her lips looked so soft, he wanted to touch his lips to hers and press a kiss to her mouth. But hating the thought of waking her, he just blew out a long, slow breath and took her in, remembering how incredible she'd felt when he'd pushed inside her, and she'd softly sighed, like he'd just given her everything she'd ever dreamed of, just by making love to her.\n\nBut then he noticed their empty glasses on the end table, and the half-empty bottle they'd shared. And suddenly the joy he'd been feeling was gone, as began to feel overwhelmed with a sense of guilt.\n\nWhat the hell had he been thinking? She was still his best friend's kid sister, no matter how sexy she was or how enticing she'd been last night, or how good it had felt when they'd finally given in. He knew damn well he had no business messing with her. He should have just told her it wasn't going to happen, especially since he knew they'd had a few drinks, it wasn't fair to her.\n\nAnd he could just imagine, not only how pissed, but disappointed her brother would be with him, if he were to walk in now and find them naked in each other's arms. He'd probably throw him out and never want to speak to him again, and he wouldn't blame him. Seeing as they'd grown up as close as brothers, with how the Sander's family had always treated him like one of their own, since his parents had split and gone their separate ways when he was still in his teens. Wracked with guilt, he shook his head, thinking that this was how he repaid them, by taking advantage of their innocent daughter, and having his way with her.\n\nBut he knew one thing. Instead of beating himself up, they'd better get up and get some clothes on before the rest of them showed up and caught them sleeping together. Besides, the the air in the cabin was feeling cool again. So he knew the fire must have burned out during the night, when he'd been too wrapped up in Ellie to even remember to add more logs to keep it going.\n\nDex gently brushed back her hair, tempted to press a kiss to her soft, warm lips, but he pulled back. Since he knew he had to let her know that what happened between them was never going to happen again. Kissing her now was out of the question, no matter how irresistible she looked fast asleep and warm in his arms.\n\nStill, unable to resist, he ran a finger over her cheekbone, and then slid it over the silky softness of her shoulder, remembering how he'd savored every last inch of her last night, he'd lost himself in her so completely. And he knew he'd never gone as slowly or taken more care with anyone before, and the payoff when he'd finally inched his way into the wonder of her was almost indescribable it had just felt so good to be chest to chest, breathing the same air, wrapped in each other's arms as he carefully slid into the delectable warmth of her of her soft, tight little body.\n\nThen he flinched and pulled back his hand when a sharp pain shot through his thumb, the one he'd dislocated rock climbing in Tibet. And he was beginning to realize how old he was starting to feel whenever he was chilled, since he'd managed to crack nearly all of his ribs, along with his tailbone doing one crazy stunt or another. Which was why, at the ripe old age of thirty-four he was seriously considering leaving his jet-setting ways, and accepting the job at the Sports Network, hosting a program about the type of things he'd been doing. Especially since they'd been after him to join their team for the last five years, sure that he could add some real life experience to their broadcasts, seeing as there was almost nothing he hadn't done. They knew his history, having played rookie baseball as a teenager fresh from college, where he'd graduated top of his class with a degree in journalism, before he'd decided he wanted to see the world, and had discovered a way to get paid for the pleasure of enjoying it, by putting it all online. But now he was starting to wonder, as his body paid the toll for all the dangerous stunts he'd put himself through, if he wouldn't be better to at least try giving his body a rest, while reconnecting with family and friends he rarely saw anymore, since he'd always been off somewhere on his next adventure. And thankfully he had enough money socked away, that he could afford to try something new.\n\nAs his gaze settled on Ellie, he even dared to wonder if she might be another reason to stay. But then he closed his eyes and shook his head, since there was no way he could ever consider having anything with her, at least not without losing the best friend he ever had, her brother Jack. And he knew her family would never accept them being a couple, seeing as they practically considered him as one of their own since he'd spent so much time with them over the years.\n\nSo, as much as it pained him to do it, he pinched her butt, shocking her awake, instead of kissing her like he would have liked to. Then with no hint of warmth in his voice, he told her, \"It's morning, Ellie, so we'd better get up and get dressed before your family shows up.\"\n\nConfused, as she began to come awake, Ellie frowned, confused by the harsh expression on his face, wondering what happened to the tender lover she'd experienced the night before. But then reality sunk in as she realized that for a guy like him, she was probably just another conquest and nothing more than another notch in his belt. And now that he'd gotten what he wanted, it was over.",
        "Resolved that they were done, she got to her feet and began to fold up the blanket to put back on the couch. But she was surprised that Dex stayed in the room, staring at her, with his eyes going all dark and sexy as he raked her over, since she was still naked. He finally asked, \"You okay?\"\n\n\"Sure, just dandy,\" she told him, rolling her eyes, doing her best to cover her breasts with her arm, while also trying not to be too obvious about putting her other hand over her mound to try and conceal her sex. But he had to know from the look in her eyes that she was angry, although part of her was thinking he just looked so darn yummy, with his hair all messy and his muscles all bulging, and his dick amazingly still a little hard, that she had to force herself to look away and not stare.\n\nBut, seriously, now he gave a shit about her, and wanted to know if she was okay? When he couldn't even say good morning to her, when they'd woken up together wrapped in each other's arms.\n\nDex ran a hand through his hair, hating for her to think he was actually the heartless prick he seemed. Looking her over, she just looked so vulnerable. So, he took a breath and told her, \"Ellie I think we both know that last night, as incredible as it was, is all we can ever have. And we're done now. Seeing as your family has always treated me like one of their own, I know they'd never accept you and I even seeing each other, even once in a while. So, I think it's probably best if we just put last night behind us, and go back to just being friends.\"\n\n\"Sure, no problem, Pal,\" She said, snatching her things off the floor and stalking out of the room toward the staircase just as fast as her legs would take her.\n\nAs Dex picked his jeans up off the floor and started to tug them on, he wondered what he could do to make her understand that although, he more than just liked her, and he'd really enjoyed the time they'd spent together, he also knew that her family would go ballistic if they ever discovered what they'd been up to last night by the fire. So, it was probably just as well that she realized it was over, even if she was angry.\n\nWhen Ellie heard her brother's van pulling into the driveway, now that she was showered, wearing a fresh change of clothes, and feeling a little calmer, she went to the door to greet them. She could hear Dex in the kitchen probably making coffee. And now that she had time to cool off and mull over what he'd said, though she hated to think that last night was all they'd ever have, she knew that sadly, he was probably right and her family would never accept them being anything more than friends.\n\nBut as soon as the five of them walked in from the cold, Ellie blinked her eyes, and had to swallow, she was just so surprised when she got her first look at John's brother, Charles. Wow, he was one good looking guy. Tall, dark and surprisingly handsome with a killer bod, and equally killer smile, he sure didn't look like the nerdy bookworm she was expecting. And though Ellie wasn't really into meeting anyone new, especially after what she'd just gone through with Dex, she decided he might at least be someone she could talk to and spend a little time with over the course of the weekend.\n\nAnd his smile widened as he looked her over and shook her hand, and said, \"You must be Ellie. I'm Charles, and it's really nice to meet you. And Happy Valentine's Day.\"\n\nAnd when he handed her a small heart-shaped box of chocolates, she smiled back, and said, \"It's nice to meet you, too. And thank you for the chocolates and Happy Valentine's Day to you, too, Charles.\" Of course, she was delighted to see from the corner of her eye that Dex was glaring him down, probably wondering who the heck he was.\n\nShe was right. The moment Dex saw Charles walk in with the rest of them and flash Ellie what he thought was a big phony smile, he wondered who the hell the guy was, and why the jerk was giving her a heart-shaped boxes of candy.\n\nThough slightly annoyed, Dex still remembered his manners, and shook everyone's hand, and introduced himself to Charles. Then he told them, \"I just made some coffee if anyone's interested.\"\n\nAs soon as the other's started heading upstairs to the bedrooms, to stow their stuff, Ellie's tall, slender very pretty, dark-haired sister Carrie leaned close, grinned and whispered in her ear, \"So, how did you two make out last night, stranded up here on your own?\"\n\n\"Actually, we made out just fine.\" It was more like incredible, if she was going to be honest, but Ellie just shrugged and said, \"Thankfully Dex showed up in time to get the fire started just before the power went out, so we were warm enough.\" Though by the time they'd fallen asleep together, he'd practically had her burning up, but that was also something she'd never share with her sister.\n\nWiggling her eyebrows suggestively, Carrie quietly said, \"Well, knowing you've always secretly had a thing for him, I wondered how it felt to finally get that big tall hunk of man all to yourself for a night.\"\n\nUnaware that Dex had walked up behind her, holding a cup of coffee, Ellie rolled her eyes and told her sister, \"I have never had a thing for Dex, he's just not really my type. You know I've always been more into brains than brawn.\"\n\nBut when she saw the mortified look on her sister's face, and noticed her staring uncomfortably over her shoulder, Ellie knew that Dex was right behind her and had probably heard every word. Wincing, when she turned to look at him, he just said, \"I got you a coffee, Ellie.\"\n\nEllie tried to look in his eyes, hoping he'd realize she was just trying to get her sister to stop snooping, but he wouldn't meet her gaze and just turned and walked away.\n\nCarrie whispered, \"Oh my god, do you think he heard you?\"\n\nEllie nodded. \"Yeah, he heard.\"\n\nThen Carrie looked down at something shiny poking out from under the couch. And Ellie just about died when she picked up a bright red condom wrapper, the kind that Dex had used the night before. \"Where do you think this came from?\" her sister asked, actually sounding curious.\n\nEllie shrugged. \"I don't know, could be Jack's, could be anybody's. I should probably vacuum around the cabin before we leave, I can't remember if I bothered to clean under the furniture in the fall before we closed up, or not.\"\n\nCarrie nodded and tucked the little square into her pocket, then thankfully said, \"Guess everyone's probably hungry, so I should get busy and put out some brunch.\"\n\nA moment later Charles wandered in holding a mug of coffee and said, \"So, I hear you're a teacher, Ellie.\"\n\nShe nodded. \"Yes, I've just started teaching English.\"\n\nHe smiled. \"And how are you enjoying it?\"\n\nWith a sigh she said, \"Oh, I love the kids. Though they can be challenging, they're still a lot of fun.\"\n\n\"So, where do you see yourself in five years?\" He smirked. \"Still teaching?\"\n\nShe blinked, wondering why teaching didn't sound like the type of job he'd never consider, and apparently didn't have much respect for. So she shrugged and said, \"Well, considering how much I enjoy sharing the written word with all the impressionable young mind's in my care, I can't see why I wouldn't still be enjoying it for the foreseeable future.\"\n\nCharles nodded, took a long swallow of his coffee, and changed the subject. \"Your sister was telling me there some pretty scenery around here. Would you like to join me for a walk, and show me around after we've eaten?\"\n\nEllie nodded, since she'd been thinking of going for a walk on her own to think things over, she said, \"Sure.\"\n\nOnce everyone had helped get the food on long oak the dining room table, Dex held out a chair for Ellie. And she gave him a little smile when he took the seat next to hers. \"Sorry,\" she whispered, hoping she knew what he meant. And he just shrugged like it hadn't bothered him and poured her some wine.\n\nBut when Charles announced that Ellie had offered to show him the sights, Dex piped up and said, \"I might just join you, then. I could use some fresh air.\"\n\nThen he gave Charles a hard look, that he hoped would make him realize that he wanted him to back off, and leave Ellie the hell alone. Though he refused to admit even to himself that he was jealous, he had to admit the thought of Ellie hooking up with the stuck up little shit had him seeing green.\n\nAfter that, though, the mood around the table was fun, all of them sharing stories about the storm and the decrepit old motel the five of them were forced to stay in the night before. Ellie's sister Carrie laughed and told them, \"Oh, god, it was real time warp. It looked like a movie set, and I bet they could make money by renting the place out for a 1950's era movie shoot.\"\n\nJack nodded as he accepted a slice of bread from John, before passing the basket along. \"Yeah, it was pretty bad. The mattresses were so old, when I got in bed I sank into the shape that had been made by everyone who'd ever slept there, probably for last sixty years, and then I had to hang onto the sides to get out again.\"\n\nHis fianc\u00e9e Mandy reached for his hand and winked at him when she said, \"So, we just had to cuddle up close in the middle, all night. But at least the sheets and bathrooms were clean.\"\n\nHer sister Carrie's boyfriend John laughed and said, \"I noticed after we checked in, that the room next to ours had a fist-size hole at the top of the window, and they only used it to store old furniture by the looks of it. But I think some birds had taken up residence in there, because I could hear them flapping around all night. It was kind of creepy.\"\n\nThen Charles said, \"I think the owners hope for travellers to get forced off the highway so they'll have no choice but to stay in there, otherwise, I don't think they get much business.\"\n\nFinally, Ellie's brother Jack looked back and forth between his sister Ellie and Dex and asked, \"So, how did you two manage last night?\" And Ellie suddenly felt nervous when everyone stopped talking to hear her answer.\n\nEllie looked over at Dex and told them what she'd told her sister. \"Well thankfully Dex showed up and got a fire going before the power went down, so we were pretty toasty.\"\n\nUnder the table, Dex slid his hand over her thigh and squeezed her knee, as he whispered in her ear only loud enough for her to hear. \"Actually, you got me so hot last night, I was way more than toasty.\"\n\nShe grinned and reached under the table and squeezed his hand. Only thing they didn't notice was her eagle eyed sister Carrie watching their flirty little exchange.\n\nMandy had baked heart shaped cookies, and cupcakes piped with hearts and cupids, so they enjoyed them with coffee after they'd finished their brunch. And Ellie noticed that Charles was keeping his gaze trained on her, so she finally lifted her gaze and met his and said, \"Just let me know when you two are ready for your walk.\" Just so he'd know she wasn't planning on going out with him on her own.\n\nDex smiled at her and said, \"I'm ready anytime you are, Ellie.\"\n\nAs the three of them walked along the freshly ploughed dirt road together, Ellie pointed and said, \"Just up ahead there's a creek with a beaver dam, and it's pretty big. I've seen them working on repairing it a few times, so hopefully we'll see something today.\"\n\nDex took her hand to help her keep her footing, when they had to cross an old broken stone fence to get to the creek. And the way he looked into her eyes, he had her wondering if they really were done -- especially since he'd been pretty touchy-feely under the table at brunch, too. Her expression softened and once Charles had strode ahead of them out of earshot, she said, \"My sister Carrie was trying to figure out if we'd hooked up last night, so, I told her you weren't my type.\"\n\n\"I know I heard.\"\n\nShe winced and said, \"Sorry.\"\n\n\"No worries. But I was thinking maybe Charles is more your type, since I noticed he brought enough books to start his own library. So, he might be brainy enough for you.\"\n\nShe blew out a breath and told him, \"Dex, I just wanted her to back off, okay?\" Ellie was also tempted to mention the condom wrapper her sister had found, but decided it might be best just to pretend that bit of mortification never happened.\n\nThey'd been walking for a while, when Dex surprised her when he said, \"You know, I've been thinking about accepting a job here, working for the Sports Network. They've been after me to join their team for a couple of years now.\"\n\n\"Really? But considering how you never stop moving, and all you seem to do is hop from one country to the next going off on your next adventure, don't you think you'd be bored staying in one place, and working one job?\"\n\nHis eyes swept slowly over her pretty face as he said, \"I don't know, I've been on the road so long, I've been starting to think that I'd like to see what it would feel like to have a place to call home, instead of living out of a suitcase all the time.\" Then he ran his hand over her cheek and told her, \"And it might be nice to have someone to come home to every night, too.\"\n\nEllie's heart fluttered at the thought. But she knew he didn't mean her. He couldn't possibly. She'd seen the pictures of him posing with busty bikini clad babes and other shots of snow bunnies crawling all over him, so she knew she would never be in his league. After all, why would a stud muffin like him, who could have pretty much any woman he wanted ever be interested in an ordinary school teacher like her -- especially one with untameable red hair and freckles?\n\nCharles was waving them over, so they strode over and met him at the dam. And when he silently pointed down at the water, they all went quiet when they saw a big fat beaver swimming back toward the dam with a stick in his mouth, obviously working on doing some repairs. \"Well, I'll be,\" Dex said, \"I don't think I've ever seen a beaver in real life before.\"\n\nEllie smiled at him and squeezed his arm. \"They're so interesting to watch. All they do is work, and I wonder if they ever stop to enjoy their little home.\"\n\nDex nodded as he looked into her eyes. \"Yeah, it makes you think.\"\n\nAfter they'd walked a little further up the road and Ellie had shown them a small snow shrouded water fall that fed another crystal clear stream that trickled down beside the road, they decided to head back, since even the fish that often swam there seemed to be gone for the winter.\n\nThey chatted on the way back. Charles asking Dex, \"So what is it you do, Dex?\"\n\nEllie grinned at Dex, and before he could answer, she told him, \"He's a YouTube sensation and a travel blogger. And he's actually pretty famous. If you google him, you'll find him on one of his adventures.\"\n\nDex rolled his eyes and downplayed what he did, since he was never much into bragging. \"Yeah, I travel a lot, and film a lot of what I do.\"\n\n\"So, all you do is travel, and you earn your living like that?\" Charles asked, looking surprised.\n\n\"Up until now, yeah.\" He looked over at Ellie as he told him, \"I've also got a degree in journalism, so I was thinking I might start to put it to use, and take a job here for one of the networks, to see how that works out.\"\n\n\"Oh, journalism is an interesting field, isn't it; especially with the current political climate,\" Charles remarked.\n\n\"Well, I won't be involved in reporting on politics, since I'm more into sports, especially anything extreme. But I think it'll be interesting, and I think I'll enjoy it.\"\n\nCharles shrugged as they reached the cabin. \"Well, I hope it works out for you.\"\n\nAnd once they went inside, Dex said to Ellie, \"Can I talk to you alone for a minute?\"\n\nShe nodded and said, \"Sure. Just let me get my boots and coat off.\"\n\nDex looked around to make sure no one could hear him, before he said, \"No, leave them on. Let's go out back.\"\n\nOnce they'd carefully made their way through the snow, around to the back of the cabin, Dex turned and faced her, then tipped up her face and kissed her. When they finally broke apart Ellie could feel that every inch of her tingling, and both them were breathing pretty hard. Looking up into his eyes, she said, \"But I thought you said we could never be together. So, why are you doing this?\"\n\nDex shook his head. \"I don't, Ellie. Last night, was so good with you, that I can't just walk away. And though the sex was amazing, it was way more than that. I really like you, and I have for a while. Actually, if I'm going to be honest, I more than just like you. And now that I've decided I might try making my home here again, I'd really like it if we could see each other.\"\n\nHer eyes widened. \"Are asking to go out with me?\"\n\nHe smiled. \"Yeah. All day I've been kicking myself for trying to give you the brush off this morning, when it's the last thing I want to do. I know I've got to have a talk with your brother. And even if he wants to kick my ass for hooking up with his kid sister, I just can't stop feeling what I'm feeling for you. So... what do you say? Are you willing to give me a chance?\"\n\nSmiling into his eyes, she pushed up on her toes, wrapped her arms around his neck and laughed when he took over and lifted her off her feet, hugged her tight against his chest and nearly kissed her silly. Then she looked into his eyes, and said, \"My sister was right, and I've always had a thing for you, Dex.\"\n\nHe smiled into her pretty blue eyes. \"At this point, I'll take whatever I can get, because I've sure got a thing for you.\" Then he ran his hand over her cheek and said, \"We should head back inside and join the rest of them, and you're probably cold.\" Not after a kiss like that she wasn't.\n\nThen Ellie flinched, when he went to take her by the hand and lead her back inside, because she thought he should know about what her sister found. \"Before we go in, I should probably tell you that Carrie found the condom wrapper from last night, it was sticking out from under the couch. So, I think she has a pretty good idea how we kept warm.\"\n\n\"Was she upset?\"\n\n\"No, but I lied and told her I didn't whose it was. But I think she's got a pretty good idea what we'd been up to.\"\n\nHe smiled and told her, \"Well, soon they're all going to know when we tell them we're together now. Especially if you agree to move into the house with me, that I've been looking at buying just outside the city.\"\n\nEllie's mouth fell open. \"Are you serious?\"\n\n\"Why not? Then we can be together all the time. I've got to meet the builder this week to decide on all the finishings, if I agree to buy it. So you can come with me and get a say, too.\"\n\nFeeling stunned, Ellie looked all around and then back at him. \"I can't believe this is happening. And you actually want to be with me.\"\n\nDex chuckled. \"To be honest, I was afraid you'd turn me down, seeing as you mentioned to your sister you'd never been into jocks, and preferred more of an intellectual type like Charles.\"\n\nGrinning, Ellie wrapped her arms around his waist then rubbed her nose against his and told him, \"Dex, you're my type. You're smart and fun and so good looking and you're really great in the sack, or in front of a roaring fire. And I just love everything about you, and have for what feels like forever.\"\n\nHe broke into a smile. \"That's got to be the nicest thing I've ever heard, especially since I figured out why I couldn't just walk away from you, when I realized that what I was feeling for you was way more than just lust. I fallen for you too, Ellie, though I've been fighting it for a really long time.\" He hugged her tight one more time, thrilled that things had turned out the way they had. Then he took her by the hand, and said, \"So, what do you say we go inside and face the music?\"\n\nShe shrugged. \"I don't think my sister will be too surprised, and Jack will just have to accept the fact that I'm a grown woman who knows what she wants.\" When he pointed a finger at his chest and mouthed, 'me?' she laughed and said, \"Yes, Dex, I want you.\"",
        "Then Dex shook his head and said, \"Man, am I ever glad I braved that snow storm to get to you last night.\"\n\nEllie squeezed his hand. \"Me too, or I wouldn't be planning a future with my Valentine right now...\""
    ],
    "authorname": "Smuttyandfun",
    "tags": [
        "boner",
        "going down",
        "hot red head",
        "virgin"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/snowbound-with-her-crush"
}