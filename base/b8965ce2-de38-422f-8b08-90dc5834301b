{
    "title": "Silver Fox Pt. 01",
    "pages": [
        "Author's Note: This was another one that was started with a character request. It just took a bit longer than expected.\n\nThe only content warnings for this one are that it's a longer story and it has some build up to the erotica. It's going to post in two parts and they'll be posted close together. Enjoy and have fun :)\n\nJackson\n\nI think it was the hair that did it.\n\nSee, it used to be somewhat darker and then faded over the years anyway, but then it just kept fading, kept changing, until I started to see something that was more like dull highlights. By the time I started noticing that I was having some, ah, other changes in life, it was highlighted silver.\n\nIt looked kind of cool, actually, and it certainly fit on my face, especially with the scar that ran along one cheek. It's true that I changed my look to fit it, another effect I've heard comes with a midlife experience. Although, mine seemed to go backwards from those stories of guys who tried to pull off clothes they thought looked cool when they were younger. Instead of the leather I once wore to work - jackets and other odd styled shirts that were printed with the logo of a place called Sulfur's, where I bartended - I switched to collared shirts and vests, accumulated more suits for other fun events. I had a preference in style even, where I could roll back the shirt sleeves so that the tattoos along my arms crawled out and showed just a little. Where I had once kept a high and tight haircut, I let it grow a little bit and gave it more style.\n\nThose changes were the little changes. Those made sense. Like I said, the style fit and a man has to recognize his strengths. That silver in my hair, for instance, was definitely one of those characteristics that qualified as a strength. All it took was a few times winking at a younger woman who had the right kind of interests to tell that fact, a few times of older playboy charm done with the right style.\n\nNo, it was a different change that was messing with me and I couldn't tell what had started that one. It was no conscious thought of my own, that was for sure, and I can back that claim up since it affected my sex life and that was the last thing I would ever choose to affect.\n\nI sighed and left my bathroom, thinking that I was too old and set in my ways to have a fucking midlife crisis. Jesus in hell, I just didn't want anything to do with it when I was happy with my life. I'd never been married, never settled down. My apartment was in an area of the city that wasn't ideal for schools and families, so it was both nice and perfect for me, and I loved the opposite sex, loved them. I was a perpetual bachelor, a bartender who had once led a life that was a little too interesting and was all too happy to settle with a little bit of routine. When I wasn't bartending at Sulfur's, I worked as a car mechanic because I could and it was fun for me, which seemed a promising indicator of a fulfilled life, when a man had the leisure to do the jobs he wanted because they were fun and not because he was reliant. I was a silent partner in a few other businesses that had caught my interest, mostly because of their kinky sexual nature, and the end result was damned well enjoyable.\n\nSo when I philosophized about it, I couldn't think of a single reason why I'd have a crisis.\n\nOf course, that's supposedly the point of one of those, I guess. I was still thinking about it on this specific night when I walked out of my apartment to leave for work, when I saw her for the first time.\n\n--------\n\nThe apartment right across from mine had been empty for a long time, since the man who once lived there had violently committed suicide, the type of thing that catches attention. When Sam Rousey - the owner of the car mechanic shop I worked at and a high school friend - asked about places for his youngest sister to move into, I'd made a suggestion. They'd been helping her move in for a few days.\n\nBut it was the first glimpse I had of the girl herself and it stunned me. God, that hair. It was dark red and vibrant and made me feel dirty with the thoughts it gave me. What was it Game of Thrones had called that color of hair? Kissed by fire. Oh man, it got to me, but it only got better from there.\n\nShe was playfully wrestling with a black cat - crossed my path and we all know what that means - held against her shoulder, her apartment keys in her hand, dressed like my personal daydream in those tight jeans and a Grateful Dead shirt. The tattoo on her upper arm was revealed in the midst of her playing with her cat and it was of the Grateful Dead skull and everything, a sight that made me all the more interested.\n\nAnd then she looked at me, those blue eyes going wide in a way - you know what I mean? It's that way, the one that makes you well aware that you did something right when getting ready - that made me want to grin, so that I had to keep a straight face. I even managed to make my smile calm when she dropped her keys, although my blood pounded when her wide eyes had a factor of submissive behavior in them, the kind of thing that got to me and only fueled that internal, devilish hedonist in me. \"You must be Sam's sister.\" I knelt to pick up her keys, trying to rein in my wayward thoughts.\n\nShe smiled, those doe eyes so wide and so shy, with this quality of searching for approval that naturally pleaser based people had, a look I'd learned to recognize, thanks to my own interests. Jesus, stop it. You're different now. Whatever change you're going through means you can't play with a new one even if she was interested in that kind of thing. \"That's me. My name is Essie. Well, it's Esther, technically, but no one calls me that. And you...\" She trailed off, then grinned. \"You work with Sam. Jackson Sanders, right? I think I've seen you around a couple of times.\"\n\n\"I'm there fairly often.\" Although, I felt like if I'd seen her, I would have remembered it. God, that face. She had to be early 20s still, a fair bit younger than me, just old enough to drink. \"I'm glad someone moved in across, though. That place is great, even if it has a, ah, colorful history.\"\n\nShe laughed. \"That part didn't bother me much. Plus it's not within school-\"\n\n\"Districts,\" I finished. \"I know, it's great. There's never any kids here. I think there's, like, two and they both live downstairs.\"\n\nShe was such a doll. Sweet as hell, too, and I'd started to realize that I liked younger girls. Of course, I liked the ones my age, too, but younger didn't always necessarily mean a bad thing. Younger usually meant I got to teach them certain depraved delights, things like... oh, this and that.\n\nYou're not teaching anyone fuck all right now, if you don't figure out what's going on with your bullshit. You were already weird, but now you're weirder. Sadly, that was the truth. I'd always had some odd proclivities in bed, it was true, but lately, that was the thing that had been changing about me. My strange proclivities had gotten... stranger. And not in the light way that you could just explain to someone in casual conversation.\n\nHer eyes, though. They lit up with this shine when she laughed and it was gorgeous. And that Grateful Dead shirt and tattoo. I had depraved kinks, but one that wasn't depraved was my thing for any girl who appreciated Jerry Garcia. It wasn't exactly a standard occurrence that I got to talk with a deadhead her age. \"Right, and since it's not optimal, the price is lower, but it just so happens to be gorgeous and is in perfect proximity to the bar I tend.\"\n\nOh, God, she was a bartender, too? And she was right across the hallway from me. What fresh hell was this? \"What a coincidence. That's what I do.\"\n\n\"Really? That's awesome. I'm at a sports bar called Cocoa's. How about you?\"\n\nI smiled, absently brushing my hand across my belt before I touched the logo on a shirt sleeve, my silent form of flirting with a girl. I thrilled to how her eyes flicked to the motion, to how her gaze lowered a little in another of those submissive cues that people give. There was a kind of innocence in the reaction, in the same way a girl might react to me in general, without realizing why, when they didn't really know my kind of lifestyle, and that thrilled me again, with thoughts of teaching her. Teach what? No, seriously, how are you going to teach anyone anything right now? \"I don't think you'd know it, but it's called Sulfur's,\" I answered quietly. \"And who is this?\" I held my hand out to her cat, who stared at it and then at me in baleful speculation.\n\n\"You would think correctly. And this is a pain in the ass. But his name is Ozymandias.\"\n\nI couldn't help but laugh. \"The smartest kitty on the planet.\"\n\nExcitement lit her eyes. \"You know Watchmen!\"\n\nHer eyes glittered again. I don't know if it was the odd vibrant blue color of them, when set against that frame of dark red curls, but it turned me on, and she seemed so happy whenever I showed happiness, another of those submissive cues to make this entire thing worse. \"I do, as chance would have it. Also, love that shirt. Listen, if you need any help, just let me know. I'm in and out all the time and if I remember correctly, Sam has six other brothers that are older than you. So I feel like it's an implied threat that if anything happened...\"\n\nShe was already laughing again. \"Life wasn't quiet growing up, that's for sure. Have fun bartending.\"\n\nShe waved when I did, awkwardly when holding her cute, judgmental little cat. I wondered if she was as shy as her initial behavior suggested, as shy as the way she kept looking down in that way that made me want to give command and take control, that way that made my blood pulse with excited adrenaline and wicked thoughts. With that red hair, I was having fantasies of how she'd look with a ball gag keeping her quiet, with a rope harness framing her body, holding her trussed up to a hook, helpless and waiting.\n\nNo, I had felt it was a fairly safe guess to assume she wouldn't have heard of Sulfur's. See, the bar I worked at, the bar where I met people and picked them up to play with, the bar that was filled with people who would be willing to talk about my preferred kind of games, was a fetish club. And not one of the more playful ones. I mean it was playful in its own way, don't get me wrong, but there were fetish clubs where you went if you were looking to experiment, to find out if kink was your thing, and then there were clubs like Sulfur's, for people who knew kink was their thing and wanted a place to safely find their edges, as wild as they might like.\n\nThe truth was that my kinks included domination, but that wasn't my main kink. No, I was one of the bad guys, one of the ones with that name that didn't go over well, the sadists. Pain was my kink, first and foremost, and always had been. Giving pain was... Oh, there was nothing like it. It was my romance, my drug. As far as I could tell, I was just born that way and it wasn't a bad thing, either. I mean, while growing up I'd had those inner struggles where I wondered what was wrong with me, but I'd outgrown those and turned into a happy, playful, well adjusted sadist. Hell, I used to play with newer friends all the time, had played with a lot of submissives who wanted to know how much pain they liked or if they liked it at all. But lately, my proclivity for giving pain specifically had gotten... a little worse, a little more dangerous, which was the real reason why I couldn't play with newer people anymore. It wasn't that there was a problem for them, exactly. It was just that newer people would never be interested in the kinds of games I wanted to play now.\n\nBecause the other truth was, that was what was affected with the one change I was having that scared me sometimes.\n\nI ran my hand through my hair when I left my apartment building, sighing in the night air when I thought of her and how adorable she was again, having fantasies of what I'd do if she did like my kind of thing. I'd be a kind sadist, so that she trembled in pain, but whimpered happily with my loving encouragements. I had vague images of her in one of the rooms at Sulfur's, daydreams of how dominant adrenaline would flood my body with every paddle strike or strap lash.\n\nBut I didn't daydream about sex anymore. Because that was the reality of that one change that freaked me out, the reason why I couldn't play with newer people. I was turning so obsessed with pain that I didn't even want sex anymore. Sex was a release of all that dominant energy that giving pain gave me.\n\nI didn't want that release these days because that dominant energy made me want to give more pain and I wanted to burn in sadism, even more than I wanted sex now. The only thing I could think about whatever weird midlife crisis I was having anymore was a thought I couldn't face just yet. They said that crises came from the fear that you hadn't lived enough in some way, that you hadn't fulfilled some need.\n\nAll I could come up with in the reasoning of this crisis was that my one regret seemed to be that I hadn't indulged in heavier sadism and harsher pain. It was the kind of thought that made me flinch when I had fantasies of her gorgeous, sweet blue eyes and all those adorable, submissive cues.\n\nGod, this is fucked. I shoved the thought back and did what I did every night. I went to my favorite fetish bar to tend it and to maybe get into some twisted form of depravity for the night. It actually worked for a little while, too.\n\nIt'd be a few months before I even realized that night was my first meeting with the girl who would turn my world upside down, when it was already not exactly stable. Even so, I didn't forget it, though. A redheaded deadhead with a black cat. How cool was she?\n\n--------\n\nEssie\n\nOne thing about being an introvert is that our stories are pretty damned boring until some extraneous factor comes along and forces us to be interesting.\n\nNo, seriously, looking back, you would think that having moved back to the city again after a divorce from marrying too young and fast, going into being a bartender, and getting used to it would have something of note in the tale. Terrifyingly, it doesn't. Hell, even the part where I became a bartender was something one of my brothers directed me into doing. It's all a story that anyone could just imagine, if they've ever met a subservient personality with such low initiative that you instantly could tell they needed some guidance. A quiet bartender watches football games at a sports bar, talks to people, uses a people pleasing personality to substitute for charm, talks about her pet cat with anyone she can, and attracts regulars. That's the story. It turns out that submissive attitude I was born with was something that made me really good at talking with people, even if I was shy. Who knew? Oh, at nights, by myself? That was even more boring. I went home and watched either an old spaghetti western or a musical.\n\nWell, for the most part. There was that one thing that did make things interesting. Him. The guy next door.\n\nOver the next couple of months, every time I saw Sam's friend, Jackson, I felt like my heart was going to give one day. Sometimes I would get home from going shopping or hanging out at the bar, because that was how awesome Cocoa's was as a sports bar and there was always some fantasy football nerd around for me to get into a conversation with. Eventually, one of the other bartenders would tease me for working without getting paid because people loved me so much when I loved pleasing people.\n\nBut I would get home and every now and again, that was the atmosphere I had when I saw him, the submissive mood that would make me look up at him and turn eager, needy even. The silver in his hair looked like distinguished highlighting and it turned me on. One time, I'd been looking through messages on my phone when I was leaving for work and almost ran into him. When I looked up and saw who it was, already apologizing, I'd backed against the wall too fast and in a way that made me aware of my blood flowing south in my body. His eyes were a darker blue than mine were and that scar along his face always twisted a little when he smiled. The way I'd pressed back against the wall gave me images of him pressing me against a wall instead. There was something about him that shouted a sense of roughness and experience and it made me tingle in this delightful way. Even better, he made it clear when I amused him, laughing along with me so that I felt happy that I had made someone else smile.\n\n\"Easy, little deadhead,\" he'd said with a wink that time, making me want to melt all the more. \"You're not so bad yourself.\" And that. Oh, that charm was dangerous, the kind of thing a girl's mother warned her about, but it was hard to remember that when his smile was warm and approving, the kind of smile that made me feel like I'd pleased him.\n\nIt was that quality, too, that made me crave to see more of that smile from him, when he made me feel more pleasing than anyone ever had.\n\nGirl, you're crazy. He is too old for you and you just got done with your divorce from marrying too early and too fast. True on both counts, but God, my body did not care about either of those things.\n\nI tried to remind myself that his being the same age as Sam put him at 18 years my senior and that was 41 to my 23. I started the reminder to try to make myself think straight.\n\nOnly to get all the more horny off the thought because oh man, that silver in his hair and those tattoos that showed under his sleeves. He might have had age, but age fit him incredibly well.\n\nIf I was honest about the fact, though, there was a little more to it than that. See, I didn't know what my type was when it came to sexual interests. Whatever it was, it didn't center around hair color, eye color, gender, or body type. It seemed something more based on presence, from what I could tell, although whatever that presence was, it did seem to show up more often in guys who were bigger than me.\n\nWhatever that type was, he was it. He was all of it, in spades.\n\nYou've got way too much going on right now to be this distracted.\n\nThat was true and all, but it felt so damned good to flirt. Another time, I ran into him again when Ozzy ran out and that time I actually did run right into his knees at the same time I finally caught my favorite little nightmare of a cat.\n\nHe grinned and helped me up. \"I always wondered why people claimed cats were superior to dogs.\" He winked again, so close to me that I was getting so damned horny. \"I still have questions, but I can't argue against the judgment of someone with a tattoo like that and hair that red, sweetheart.\"\n\nOh God, I liked that nickname. He didn't say it with insecurity like a younger guy would. He said it deliberately, meant it, and owned it in that way that sent shivers of danger down my spine. \"But I didn't choose the hair,\" I said with a grin.\n\nHe lowered his voice in conspiracy. \"I won't tell anyone if you don't. Besides, that color being natural? We can't tell people that anyway when it's just not fair.\"\n\nHe was good. And I mean good. But it wasn't just all that either, if I'm being honest about it. Some of it had to do with the time I ran into him in life. See, the next part was embarrassing, but I still had all the memories of the times my ex had called me frigid when I wasn't in the mood for sex, when he told me I seemed so distant and hard to please, which always confused me.\n\nFor whatever reason, I wasn't frigid when it came to the kinds of fantasies the man next door inspired, fantasies that were only exacerbated by all the BDSM books and stories I'd read in secret before. I was starting to be obsessed actually. My nights would start off with my usual quiet behavior, things like watching the Sound of Music or reading Herbert's Dune or something, but then I would pick up my phone and read other stories instead, fantasizing until I ached and my fantasies started to go crazy about him.",
        "I had images of him pressing me back against the bed or of being on my knees in front of him, blowing him while he made sounds of pleasure above me. For that last one, the thing that really turned me on was the thought of looking up at him and getting to see him look down at me, getting to see that silver in his hair from a different kind of angle while he stroked my hair, his eyes alight with that pleasure and approval when he gave it so effectively.\n\nOf course, I kind of had an idea where some of these adventurous fantasies were coming from, besides my erotica inspirations. One thing about having been married was how repetitive the sex had gotten. It'd been good sex at first, don't get me wrong, but it'd been a routine and extremely vanilla kind after a while. Now that I was free and I was apparently having this kind of reaction, I kind of wanted to know a little more about that aspect of life.\n\nLike I said, though, I was actually shy and boring as all bloody fuck. I was vanilla as hell with my past experiences and I didn't take the reins on anything, ever. I liked it that way.\n\nStill, sometimes life takes mercy on a subservient type of person. It's almost like the powers that be recognize how that kind of person just isn't going to get the ball rolling on their own life and realizes that a push has to be made, an external event.\n\nFor me, that external event was a living nightmare to rival Ozymandias the cat. Her name was Isabelle. It was actually me who ended up asking her for some help, believe it or not, but I can't take any kind of credit, like none. See, by that time, I had gotten to know Isabelle really well over the course of those first months, when the only other thing of note was my run-ins with him.\n\nAnd Isabelle... Let's just say Isabelle had a very interesting life and a personality that made it very hard to be shy.\n\n--------\n\nThe night I finally got up some courage to indulge in a little of my extremely buried adventurous spirit, I made her drink as soon as she set down, since she always got the same thing and she watched in an approval that made my people pleasing nature happy. \"God, Essie, I never thought I'd have a second favorite bartender in life, but you're it.\"\n\n\"Second?\" I feigned playful outrage because Isabelle loved a little bratty flirting and her girlfriend, Kody, didn't mind. \"How dare you. I'm second?\"\n\nShe laughed. \"Yeah, but it's not a personal factor. I've just known the other one for a lot longer than I've known you.\" She took a drink and Isabelle liked her drinks strong. Her face twisted just the slightest amount, just enough to hint that it was liquor in her glass and not soda. \"Mm, that's fucking amazing. So, I had a client this past weekend. It was a man who wanted to emulate lion sex, except with me as the male cat and him as the female.\"\n\nI leaned against the bar. \"Oh, do tell.\" Because I loved hearing Isabelle's stories. She was a dominatrix escort and Kody was the submissive girlfriend that she was madly in love with. I loved hearing anything about it, if I'm being honest. Like I said, I was so damned boring and, as any girl with adventure hidden in her spirit can tell you, we do, at the very least, enjoy hearing stories, even if they make us blush sometimes. \"What's lion sex like?\"\n\nShe grinned. \"No idea. I don't actually have a barbed cock, but I thought I did pretty well wrestling him into submission with a strap-on.\"\n\n\"Was he a good boy?\" Asking that question gave me this little thrill and it was one of those things that was making all those hidden curiosities want to explore all the more. Maybe not a lot, but a little, you know? I heard all these stories and loved them and read all this erotica and had this fascination. It was just this kind of torment that I was, by nature, incapable of doing much about it.\n\n\"He was a very good boy and I made sure to tell him that.\"\n\nI had to laugh at how secure she was. It was the kind of thing that made me feel warm and happy, especially on those nights when I got to see her with her girlfriend, Kody. Because Kody was downright adorable and over the month or so that I'd gotten to talk with them, Kody was the one who made me want to get out more, actually. She was shy, like me, and she loved to make people happy. One time, she'd rested her head on Isabelle's shoulder and quietly told me, \"It's why I like submissive sex. I can make someone happy and be rewarded with... very good kinds of touch. There's no doubt on whether I did the right thing or touched them the way they liked, no insecurities that kill the mood.\"\n\nThe two of them made this cute image too. Isabelle was as dark haired as Kody was blonde. Kody was smaller and bowed her head while Isabelle stood tall in her heeled boots, meeting the world with her eyes.\n\nSure, it was weird, but I was a bartender. I was okay with weird and I could say that this was one of the more honest types of weird I'd seen in life. I think it was that, in the end, that made me finally ask a question. Just one question and by then it actually didn't take as much courage as might be expected, especially with the encouragement from Kody. It was even easier when Isabelle had already teased me about how submissive I behaved sometimes, and she would know. Like I said, I can't take credit for the moment when the person it involved was so much my opposite. I think I was more along the lines of collateral damage. \"Hey, Isabelle. Can I ask you something?\"\n\nShe nodded. \"Sure, I'll answer if I can.\"\n\nI hesitated and then just asked it. \"Let's say that someone wanted to be called a 'good girl', but didn't know exactly where to start. Do you know a place to... I don't know, meet people? Talk or try things out?\"\n\nI knew that there were places like that. Anyone who'd been on an internet forum could tell you that, but I just didn't know where those places would be, exactly. Isabelle's smile was less of her raucous kind and more gentle. \"Not easy for you to ask that, huh?\"\n\n\"Absolutely not, but I want to enjoy being divorced and the guy next door keeps inspiring bad thoughts.\"\n\nShe grinned. \"Mmm, your older, tattooed silver fox next door, you mean. That's hot, by the way, and we all know it. The ones with age are the ones who know how to work their fingers, if you know what I mean.\" I had to laugh because, yes, I'd definitely confessed to her some of those moments when I'd been talking with Kody on what submission felt like for her. \"Cheers to that, kitten. And I do know places, as it so happens. I have a favorite, actually. It's not exactly the type of place you would go to for just starting out with things, but everyone there is pretty amazing and they're all protective about their own. It's a little on the deep end side of things, but if you feel brave and up to it, it worked for Kody. Maybe you'll like it, too.\"\n\nOh, Lord. I didn't entirely know what the \"deep end of things\" entailed, but it sounded like something I should probably brace for. I laughed, feeling absolutely terrified, but endlessly curious after all the stories I'd heard Isabelle tell. \"I don't... Oh, man. Okay, I didn't even think I'd get this far. Yeah. Yeah, I want... I want to know a little bit more.\"\n\nIsabelle beamed and there was so much pride in it that it made me feel like I could walk on air. It made me feel warm, from my head to my toes in so much happiness. \"Good girl.\"\n\nThat sealed it for me. There was this basic happiness that I got just from the words, in the same way that Kody sometimes talked about how basically happy it made her. It went with the feeling I sometimes got from having a person come to the bar, looking like they'd had a rough day, and being able to make them smile again. It went with that basic pleasure in something like dragging a string across the ground and seeing Ozzy pounce on it, his ears flattened and his tail waving in playfulness. \"Wow.\" I grinned, looking down. \"Okay, I'm still scared, but after hearing Kody talk about it...\"\n\nIsabelle's eyes had a different, more protective set in them when she looked at me, as if I was one of her charges now. It was the same way a relationship with anyone might change for certain moments, though, and didn't feel as awkward as I would have thought. I remembered moments from being married, when his eyes would turn different over me, too, how it hadn't felt like a good thing. It had felt like, and ended up being, a bad thing, actually. But Isabelle? Isabelle was up front and open about her controlling tendencies. She gave them an outlet in a way that she said felt far more safe and negotiated. \"It does feel pretty special sometimes, but, hey, it's also not always for everyone. But it doesn't hurt to find out, either. Just before I even take you, I'll tell you now that you don't even have to do anything when we go there. There's a bar there and you can just talk to people. Sometimes, people go there even when they don't want to play like that, but you'll definitely see naked people and people playing, too. Also, latex. You'll see just, like, so much latex. It's great.\"\n\nI laughed. \"I appreciate the forewarning. So, what are things like when people just play out in the open like that?\"\n\nShe grinned. \"Hotter than hell. Everyone loves some exhibition fun. You can't get in without someone with a card to take you, unless it's a designated open door night, but Kody and I both have a card, so you're good in that way. It just means that you have to stay with us, if you choose that option. Since it's a little bit of a harder place, that setup just ensures a certain kind of safety to the edgeplay.\"\n\n\"Edgeplay?\"\n\n\"It's just harder play styles, the kind that might become unsafe if they get out of hand. We like safety. Safety is good. So long as you're okay with that, then we're good.\"\n\nI laughed again, and it was breathless this time. \"Oh, yeah, no, I don't want to wander by myself, actually. That's perfect.\"\n\n\"Calm down, kitten. It's just meeting people and it'll be fun. They're really cool and you can meet my first favorite bartender actually. Oh, one other thing.\" Her eyes sparkled with some mischief, a sense of playfulness. \"I get to dress you when we go.\"\n\n\"Oh, dear God. You really want to push an introvert to their limits, don't you? Okay. Okay, yeah.\"\n\nShe had this look of excitement. \"I would never push any limits. How dare you accuse me? I'm just going to make you look gorgeous, thank you. Speaking of all this, I actually have to take Kody tonight. Sometimes, she has desires I can't fulfill.\"\n\nThat made me curious. \"Like, for cock?\" Another thing? After a few months of hanging around Isabelle, I felt like I was getting more vulgar.\n\nShe laughed. \"No, actually. She can live without that, as it turns out. For... er.\" She glanced at me, then smiled. \"Pain, actually. I'm a Domme, but I'm not a sadist and the kinds of pain she sometimes wants makes me a little... uncomfortable. We have friends there, though, who already know about it and can give it to her.\"\n\n\"Wow.\" I swallowed. \"I need to process all that before giving any kind of answer.\" Sweet little Kody, pain, sadism, Domme, and me being involved with this conversation in general caught up to me around that point.\n\nIsabelle winked. \"They're all really nice, I promise. Well, unless you don't want them to be.\" That last, she said in a lurid little voice that calmed me quite a bit, with how it made me giggle.\n\n\"Pain. Um. Can I message both of you and ask questions? I'm going to be honest and confess that my mind just went kind of dead and, you know, that's awkward, so...\"\n\nIsabelle burst into laughter over her drink. \"Oh, see, it's moments like these that make me so freaking excited for this now. You're going to be so much fun. Of course you can.\"\n\nSometimes in life, the phrase \"ask and you shall receive\" proves more true than ever. If I'd have known quite what I'd be getting into when I set a date to go to the place she knew - and she wisely made me choose a day and time right then and there, so I couldn't easily weasel my way out when the cowardice took over - I'd have never done it.\n\nOne conversation, but it was a conversation with a Domme named Isabelle and Isabelle was interesting. Isabelle knew a lot about an underground world that had gotten my attention while I was married. I started out with books, lurid books about domination, where a male top would kiss his playmate and tell her how sweet she was when she obeyed, books about girls who couldn't figure out why some things didn't make sense in their lives and it felt like a modern day Prince Charming story when she found the guy and he was a Dom who could command her and give her a sense of structure in life. It made me sigh happily, with how romantic it was. Sometimes it seemed strange to me, but it almost seemed to hold hands with that soft part of me that loved to watch Fiddler on the Roof or Guys and Dolls, that quiet side.\n\nIt was something that seemed to speak with me enough that it made me curious about more of that world. Maybe it was all just my inner romance and maybe it was just something that people did to scratch an itch, something that didn't have the deeper meaning I was placing to it. But I felt like I wouldn't know if I didn't find out more.\n\nI'd been called sexually frigid enough times by my ex that I was insecure enough to, hilariously, get over the insecurities that came with being so shy. I did have a brief fear that learning more about this would only prove to me that I really was frigid, but the way I'd been masturbating lately, with thoughts of him, seemed to suggest that some things turned me on. The way I enjoyed those stories and books, quietly and by myself, seemed to show something was there.\n\nI wanted to know what it was. Maybe it would be a good thing about myself.\n\n--------\n\nJackson\n\n\"Oh, please!\"\n\nHer name was Kody and she wasn't actually my submissive. She was the partner of the dominatrix across from me, Isabelle.\n\n\"Easy.\" I stroked my hand over her thighs, smoothing over the strap marks I'd left so far. She had these cute lacy, black panties that matched her bra and I trailed my hand between her legs, over that so thin fabric, evoking a very different cry than the one of pain, one that made me smile with the feel of how drenched she was. I shushed over Kody, and she was restrained, bent forward, over a bondage table in Sulfur's fetish club. \"You're doing so well for me. What was the count?\"\n\nShe took a breath for a moment, then whispered. \"Twenty, sir.\"\n\n\"Good girl.\" I struck the belt across her ass again and she shrieked in pain, a sound that always made me burn. Lately, it had been making me burn so much that it made me uncomfortable, actually. The sounds that came from giving a submissive pain, specifically, made my blood hotter with a power trip, so much so that I hadn't gotten off in months while playing these games.\n\nThey were part of the reason why I didn't want to anymore, even if they were sexually intense, even if I was hard as hell for the scent of sex and the feel of Kody vibrating in submission. See, the power trip being tethered with my arousal meant that if I got off, this kind of trip would be \"released\" with the arousal in some way. Like I said, for me it had gotten to the point that I didn't want to release the domination energy I got from giving pain. I wanted to bask in it, so much so that it was better than any orgasm.\n\nKody fueled me with more of it with her soft, whimpering count, \"21, sir.\"\n\n\"Good girl.\" That time, it was Isabelle to say it and her voice was far more distant than mine was. My sadism was pure, tempered only by my conscience. The end result was that I wanted the pain I gave to be enjoyed. It was my form of affection, in the same way that other people might give a hug, so I warmed the pain I gave with words of pleasure. I wanted my hugs, so to speak, to be liked.\n\nIsabelle was more of an exacting mistress, on the other hand. She clasped her hand on the back of Kody's neck so that her sub trembled in subspace, flying on ecstasy. It was a joy of being a male sadist who was a bartender and DM in a fetish club, that couples like Isabelle and Kody came to me for pain needs because, for instance, Isabelle wasn't as much on the topic of giving pain. She just didn't have the proclivity for it, but she cared about her little submissive and wanted to make sure she had her needs met.\n\nI struck the belt again, feeling the vibration up my arm, that energy reaction that came from when an implement connected on impact. I equated that feeling with dominance of a kind that made me stand straighter, made me be... more. In general, it made all of me, every last particle, into more. \"22, sir!\"\n\nIsabelle crouched to kiss her submissive, caressing a hand through her hair while I stroked my marks again. I was leaving beautiful marks, too, reddening lines that were spaced nice and even, ones that made me feel a little proud of myself. \"How pretty you look with your new strap marks to decorate you. I think you'll enjoy them.\"\n\nThere was this magical sensation of control that came with standing over a restrained and forced prone submissive, the sensation of stroking over them and feeling them tremble. I soothed the pain I was giving, so horny and so unwilling to do anything about it anymore. Orgasm was fun, but power was the long lasting addiction that lingered like a drug in the bloodstream. My petting had an undercurrent of condescension to it and Isabelle lifted back, tapping her sub's cheek in a small, gentle slap. \"What do you say to him for his kindness in making sure your marks are pretty?\"\n\n\"Th-thank you, sir.\"\n\n\"You're welcome. Deep breaths. You can take more for me.\" I whipped the belt, nice and hard to the sound of her cry, delighting in it. Sounds of pain were like music for me. Each one was so different and each one was evoked differently. If you struck lower on the thighs, it hurt more and the reaction was different in tone. It felt like composing for me, like an art, where I made my playmate sing a song so gorgeous.\n\n\"23, sir!\"\n\n\"How pretty.\" It felt like standing in a freezer in some ways, the way my mind turned cold and the world slowed until it felt like everything was in a transcendent kind of sight. I'm not good at explaining it sometimes, but it felt like a form of zen magic that you only saw in movies, a perfect equilibrium and serenity. It felt like the sniper in Jarhead breathing out steadily in anticipation to see the pink mist, maybe. It was this excited, slow thrumming of the heart pumping equally slow, steady arousal through the veins. \"A little more.\" I snapped the belt and it made a crack sound in counterpoint to the cry of pain. Isabelle grasped her sub's throat and I smiled. There really wasn't anything quite like sending a submissive tumbling into that magical place of subspace by clasping a hand around the throat in the way a wolf would lock its teeth in a threat around the throat of a pack mate to force it into submission. Even being near it made me feel... animal.\n\n\"24, sir! Oh, please! Please, it hurts.\"\n\n\"One more.\" I soothed my palm over the marks again. Kody wasn't a hard pain player, but every now and again, Isabelle said she started getting antsy and some pain therapy soothed her back down into happy submission. And her whole body vibrated beneath me with anticipation. \"Such a brave girl you are.\"\n\n\"Oh, please...\" She pant in a little fear and that fear intensified when Isabelle tightened her hand.\n\n\"Be good, kitten.\"\n\n\"Listen to your mistress and lift your ass back up for the last one. We'll make it count, beautiful thing.\" Kody was shaking in fear when I gently clasped a hand at her waist and lifted her back to position, nice and easy. It was a Dom's job to make sure they gave encouragement when needed and I was... perhaps an odd sort of sadist and Dom. Well, sadist more than a dominant, but I truly wanted my pain to be enjoyed and I wanted to be as soft and gentle as could be to that end. I wanted to hurt... and adore.",
        "Er. Perhaps not adore. That was a fantasy and Kody wasn't mine. I hadn't had a sub as mine in years, being the strange breed I was and having the life of a bachelor drilled through my skull. And now there was this recent addition to my sadism to make things all the more complicated, this sense of wanting pain over sex when they usually went together.\n\nStill, it was nice to have those romantic thoughts. I soothed Kody and whatever her eyes must have looked like, the sight of them made Isabelle smile. She stroked her sub and cooed over her, whispering words I couldn't hear so that I smiled. I loved seeing the two of them together when they were so obviously loving. It took a strong Dom or Domme to recognize when they couldn't quite meet their submissive's needs and to ensure those needs were met.\n\nI kept one hand around Kody's waist and stroked my hand over her panties again, caressing over that most sensitive part of her sex so that she shrieked and bucked, crying out again. \"Sir, I-!\"\n\n\"Ask me for the last one like a good girl. You can do this.\"\n\n\"Oh. God. I. Um.\" She had to shake her head as best she could to try to think, her golden blonde hair shimmering to the side where it had long since fallen over her shoulder. She was smaller than her mistress, too, but I think they both loved that fact, and Isabelle had dark brown curls as opposed to Kody's lighter hair. For me, all of it, both of them together, as an entire picture merely looked beautiful. \"Please, may I have another, sir?\"\n\n\"Good girl.\" I lashed the belt, the hardest yet, enough to send violence cascading up my arm in what felt like a ripple effect that made me exhale in desire, but I ignored my own sexual desire entirely, and went onto the other part that would fuel my control.\n\nI tugged the belt between her legs and grasped the other end of it in my other hand, pressing it to her clit so that she yelped and bucked, still riding the wave of the last sharp bite of pain I'd given her. God, the scent of her was enticing too and I thrilled to the way Isabelle clasped her face in a fierce hold, smothering her cries in a sinful kiss while I worked the belt. Kody bucked her hips and it might have been over the fabric still, but it didn't matter in the wake of the pain. The contrast of sensation was more than enough and Kody's muffled cries turned more desperate while she writhed and I tugged the belt back and forth until-\n\n\"Oh, my God!\" It came out a howl when Isabelle let her up from the kiss and Kody thrashed in release, jerking her wrists in her cuffs, riding it out on my belt while I smiled and held her between my arms.\n\nIsabelle pet her hair while she shuddered with soft little whimpers. \"What do you say to him?\"\n\n\"Thank you for hurting me, sir,\" she whispered.\n\nI stroked a hand down her thigh and pulled away. \"It was my pleasure.\"\n\nAnd... the frightening thing was that I meant those words, that it really was absolutely all my pleasure. So much so that it was freaking me out more and more with every time I played. Even with the scent of cum filling my nostrils and after the feel of her drenched panties, it messed with me. Because I still didn't have a single desire to alleviate any kind of sexual need.\n\nAll that I had was the addiction to my sadism and part of me had to wonder if this meant I'd turned a little too hard to the dark side of things. I wanted to want to hurt more. I wanted to crave to give more pain all night, so that it throbbed in my bloodstream like a background soundtrack, so that I stayed in that state of \"more\".\n\n--------\n\nI cleaned up the dungeon while Isabelle took Kody to a quiet place, presumably to pet and love on her submissive. It chafed a little, that I wasn't part of that aftercare, but I understood too. A lot of subs only wanted one touch after a scene and, for Kody, that touch was Isabelle's.\n\nThat being said, Isabelle knew the problems of being a Dom. By the time I finished taking care of the dungeon, Isabelle and Kody were sitting at the bar together along with some other friends of ours. A man named Christopher, my boss and the forerunner of Sulfur's Beta, had been bartending for me. He grinned at me when he looked up and I stopped at the bar to hug Kody. \"Feel okay, sweetheart?\"\n\nShe gave me a dazed, delighted look that made my heart sing. \"Yes, sir, thank you.\"\n\nAbove her head, Isabelle mouthed a repetition. \"Thanks.\"\n\n\"Any time.\" I said it to both of them and then walked behind the bar, so that Christopher could go do his own thing. \"Hey, where's Deirdre?\" I asked him. It was the time of night when Christopher's slave should have gotten there and he grinned, while Isabelle laughed, making Kody giggle.\n\n\"Where do you think?\" Isabelle asked at the same time Christopher pointed upwards.\n\nRight. I looked up at the birdcages that hung over Sulfur's bar, smiling at the sight of Deirdre dancing in one. Across from her, in another cage, was a girl named Gracie. When I looked up, Deirdre winked down at me, crawling to the cage bars playfully, and I shook my head, laughing, giving her a look of exasperation. Even if I was deeply disturbed by my life at the moment, the combination of having dominance rushing through me and being surrounded by the people I knew best in life made it easy to fall back into my charming sadist and bartender role.\n\nChristopher even stayed at the bar that night, which was awesome. At one point, I got a chance to lean forward to talk more with him and Isabelle. \"I saw her again last night.\"\n\nChristopher grinned. \"Your new little redheaded obsession?\"\n\n\"God, I don't know what it is about her.\" Isabelle laughed at my tone, but I really didn't know. I was losing my mind in thoughts of her, to the point where I was wondering if this was all lust or not. And I could deal with that, if it was just lust, you know? Passion and flirting were fun things, but the way I kept running into her... Oh, man, she was heavenly. \"It's her eyes, maybe, and she looks down all the time in that way, you know what I mean?\"\n\n\"That way like she's hoping you'll give her approval or some kind of guidance in things as little as conversation?\"\n\n\"That's the one! And her hair. Jesus, if I knew she was interested in me or this at all, I think she'd be the first new player I'd try in months. I've been too... concerned, you know?\"\n\nChristopher answered that one, while Isabelle leaned against the bar, her arm around a sedate and well satisfied, cuddly little submissive. \"You know, I get why, but I think you're being a little too hard on yourself. I think it was Courtney who had that one scene a while ago, that she broke off when she got freaked out by the extent of her sadism.\"\n\nIsabelle answered him. \"It was. Remember, it was with that guy she still loves and adores. She had an orgasm off giving pain. Like, nothing else was happening at all, to hear her tell it, and she caned him nice and hard one time. I'm trying to remember her words, but it was something about the feel of hard recoil from the stripe along with the sound he made.\"\n\nI thought of Kody's cries of pain and could understand that all too well. For me, as a guy, I always needed at least a stroke or two to get off, but yeah, I could get it. I could see it from what I knew about some girls, how easily they could get off, and I could see why it'd freak someone the fuck out.\n\nIt was freaking me insanely the fuck out that I was less interested in an orgasm than ever. It only felt more solidified with every time I played, that I didn't want that. Whenever I got home, I eventually jerked myself off, once that flow of delightful power trip abated enough that I wouldn't notice the release of it.\n\nChristopher's voice was soft. \"You know, new players sometimes do have interests in trying pain play, too. Doesn't it seem, I don't know, fitting that you have all the more control with how you are now? It means they wouldn't find a safer top to try it with. I'm just saying, since you said if she was here, you'd consider it. Maybe you should consider it a little harder. You really seem to like her. By that, I mean you haven't shut up about her every time you've run into her for, like, months.\"\n\nI laughed. \"Well, since she's not here, it hardly matters, does it?\"\n\nIsabelle rolled her eyes. \"He's talking about you bringing her here since she's right across the fucking hall from you, moron. Jesus Christ, this is why I can sometimes fuck guys, but am forever staying gay in my relationships. Guys are fucking hopeless.\"\n\n\"Listen here, bitch.\"\n\nIsabelle laughed and I was allowed to call her that now that I knew her so well. Christopher ran his hand through his hair, though. \"Why does it feel just as much like babysitting to be around Doms as it does being around subs? I feel like one of these entities or groups should fucking balance each other out.\"\n\nI mock sighed. \"Look, we're all just playing the same game, really, but in different roles. It keeps us young at heart, at any rate.\"\n\nBut I rather liked staying young at heart. It was one of the reasons why I was fairly confident that my midlife crisis didn't have much to do with settling down or missing a steady submissive partner. The idea crossed my mind, but the truth was I didn't really want to grow out of these games.\n\nI leaned back against the bar and talked with them as the night went on. And no, I had no fucking idea what Isabelle had going through her mind at the time.\n\nShe was that good about things.\n\n--------\n\nEssie\n\nIt was definitely a good thing Isabelle made me agree to everything in advance because I tried to get out of it, like, nine times over the next couple of weeks. That was when the next open door night was and Isabelle said it didn't actually matter which night we went because I'd be with her and Kody, but open door nights meant I wouldn't have to stay by their side. It also meant that a lot of the play styles would be lighter.\n\nI'd jumped on the opportunity when she mentioned it, on anything that could make this slightly less nerve wracking. Although, if it helped, I couldn't immediately tell. I started to get this antsy feeling in the pit of my stomach, this restlessness whenever I considered whatever I had agreed to. The first time, I messaged Isabelle and said I didn't think I could make it after all, due to the schedule, but then she'd been undeterred. Okay, choose a different night.\n\nI'd gone back and forth with her on it until I finally realized that Isabelle had found out my interests and she was hell bent and determined for me to find out more about those interests. It did help that her and Kody were both females, as sexist as that sounds. I felt like if she'd been a male Dom, I'd have never asked her for help of this kind in the first place.\n\nThe night of, though, I was definitely questioning my sanity. Isabelle and Kody met me at my place and, from my understanding, their fetish club was already opened. Their coming to my place ensured I was stuck going, as it seemed that Isabelle didn't trust me to come over to hers. Smart of her, really. If I had two strengths in life, they were avoiding confrontation and being a coward. Those were my superpowers.\n\nIt got worse, too. It got, just, so much worse. When Isabelle showed me what I was wearing, I choked, and stared at her in stunned shock, a look of, You've got to be kidding, but it turned out Isabelle was stubborn and knew how to manipulate submissive behavior. \"Oh, come on, kitten. You want to be a good girl, don't you? See, it's not so bad and how brave you can be...\" All of this was cooed over me while getting me to put on a part at a time, just to try it.\n\nI ended up keeping it, actually, because staring in the mirror... Wow.\n\nShe had dressed me down in a skimpy, sleeveless latex dress with latex gloves, along with these heels that were wild to try to walk in. The latex, once I had it on, was fascinating, though. It felt like a second skin, actually, and I stared at myself in the mirror when she was done, thinking that I looked sexier than hell. I did, too. The dress had this shiny skirt that flared around me and I turned this way and that, staring at myself.\n\nIsabelle studied me while Kody played with Ozzy in his cat tree. \"That is a gorgeous look for you. Now, you need the finishing touches.\" And the finishing touches were every bit as fetishized as the rest of it. She fit a collar around my throat, so that I had a brief moment where I shuddered with the sensation, with the thought of being collared, with how... arousing it was. She didn't give me time to process much, though, and I felt like that was on purpose, as she continued on to the cuffs around my wrists as well, and then covered me with a long jacket so that none of it was visible for when we walked to Sulfur's. No one drove in a city as big as the one we lived in, as it was such a pain, but the jacket did its job well. Only the collar showed over it. Isabelle grinned at the final sight. \"Perfect, but you're not allowed to wear the jacket past the door. There's lockers and I'll take it to them, but you have to take it off as soon as we get into the entryway.\"\n\n\"Isabelle, I don't know...\"\n\nShe gave me a look that quelled the words and then smiled to soothe me. \"Hush. Yes, you can. You look gorgeous, and like a good kitten, besides.\"\n\nFor the first time, I actually believed it when she told me that. The truth was that the black latex was so striking and she'd pinned my hair out of my face, so that it fell down my back and around my shoulders. In the doorway mirror, I lifted one hand, touching my face with the shining gloves and the image that stared back at me truly was something strange. This girl stood a little differently, with more of a cast to please someone in a more sexual way than what I normally had. I blinked thoughtfully and then nodded, numbed with enough shock that I was going to end up along with all of this nonsense. Who had started this bad idea again?\n\nRight. Me. \"Thank you, Isabelle.\"\n\nThat's when she grabbed my collar's ring and I wanted to moan out loud, wanted to beg for more, as soon as she did it, as soon as I felt my first real taste of dominant intention. \"You're very welcome, kitten. Come on.\"\n\nKody grinned and hopped up from my loveseat. \"Open door nights are a blast!\"\n\nIt wasn't that I didn't believe her. It was just that I felt nervous about things for me.\n\nThis was where things got interesting, though, was when I reached the place named Sulfur's, and I had a brief thought that I'd heard that name before. Outwardly, it certainly didn't look threatening, actually. It had these lights that weren't overly bright in color for its logo, with the word \"Beta\" proclaiming it as a branch of fetish clubs. Isabelle guided me through the door and I stared at the BDSM furniture that sat as decoration as soon as we walked through the entryway.\n\nOh, man. It was right there in the open about it, no hiding what it was, and I watched a girl pass a door guy while walking in, and then felt insecure that she was wearing jeans and a t-shirt, which was what I worked better in. Jeans and a jersey were my thing, but now I felt odd. \"Isabelle, are you sure there will be people like me?\"\n\nIsabelle tugged me by my collar again, and that time I did whimper. \"Yes. Hush.\"\n\nIt wasn't said in a mean way at all, either. It was just said in an even way, one that structured me. I had a brief moment to remind myself that I'd chosen to ask a Dominatrix for help with this, one that was pretty damned skilled in topping people with personalities like mine. \"Yes, Isabelle.\"\n\nI stared at the door guy, then waved shyly when he waved at me, trying to take it all in while Isabelle tugged me through with her finger in the O-ring of my collar, deliberately ensuring I couldn't think too much about these things. My eyes went wide when I walked through the doorway, though.\n\nTwo giant birdcages hung on either side of the bar, and both of them had a person dancing in them. They were the first thing I noticed but I just barely glanced at the direction of the bar for the first time in my life, when that was usually where I was most interested in, now that I spent so much time at one. There was just way too much else going on besides that in that place.\n\nThe sound of kinky sex was this overwhelming soundtrack, along with the dark undercurrent of house music that seemed to pulse from the walls. I glanced at Isabelle and Kody and it was Kody who guided me a little then. \"Look,\" she said, pointing.\n\nI turned to where she gestured, gasping and tugging my collar, to feel comforted by the the reminder of its presence, when I did. Kody knew I was more straight than gay and fascinated with submissiveness, specifically, and had cleverly pointed me in the direction of a scene that made my eyes go wide.\n\nThe girl was cuffed in ceiling restraints, on a dais so that she was displayed, and she was blindfolded and gagged, as well. While I watched, a man stroked up her body from behind, cupping her breasts to display them better while he whispered in her ear. Whatever he said made her moan and arch in his embrace, so that he laughed softly, and I whimpered at the sight. It wasn't so much the scene itself, since nothing was actually happening really, as it was the look on the man's face, the way his eyes were alight with this commanding sense, this presence.\n\nI glanced to another couple, one that wasn't even playing at all. This one could have been anyone you saw while passing tons of people in the mall. The guy wore jeans and a shirt and the woman was dressed in a date night kind of dress with heels. What made it different was that he wore a collar and when she tugged the O-ring of the collar, his lips parted in a silent gasp and he bowed his head, in a way that suddenly made a lot of sense to me. He seemed much more different in his submission than the female had, and the Domme was certainly different from the Dom, but the cool way she watched her submissive made my skin tingle anyway, in the same way that Isabelle had so attracted me.\n\nTwo things clicked in my life. Two things abruptly made themselves very clear. One was the fact that the type I had never been able to identify suddenly seemed a lot like a BDSM Dom. And the second thing was that I didn't feel frigid at fucking all in that moment.\n\nI felt electrified, alive, and so very interested. I was scared still, but that suddenly seemed to make things all the better. It seemed exciting. I turned around and shied to Isabelle when a man with that presence I recognized walked over to her. Like I said, I was still scared, but oh, I was interested, too. I shivered and Kody giggled, tugging me a little closer into a hug of comfort that made me smile. I felt drunk enough on thrill to indulge in that too, to enjoy the sensation of another female against me, as soft as females were. Kody was wearing this sheer nightie too, so the action of brushing against her ensured I could feel... most all of her, but that electric sensation only made me crave and I nuzzled closer, while she stroked my hair. \"It's okay. You'll find that all those submissive behaviors that people sometimes disdain and scold you for in the outside world are welcome and encouraged here. It's like a bubble away from everything else. I know it's shocking, but it's so freeing and wonderful.\" I moaned in desire at the thought of not being thought of as weak for those subservient behaviors, of not being chastised or teased for how happy it made me to make people smile. I had always thought of myself as a coward in these self deprecating connotations. Maybe... Maybe there were places where it wasn't bad.\n\n\"Hey, you. I'd like you to meet someone, so stop being an adorable little coward against my sub.\" Isabelle tugged me by my collar to pull me back to her, but her use of that same word, \"coward\", was flirtatious and she was smiling, as if in answer to all the thoughts and feelings I was having. Kody's words resonated with me so that every moment was starting to make me feel safe and accepted, even if I didn't know many people yet. \"This is actually who got me into being an escort. He runs this branch of Sulfur's and his games are a vestige of the days of Gor and high protocol, which is to say he's a stuffy romantic, but also adorable. Say hi to Christopher.\"",
        "\"Hello.\" It was easier to say it without thinking, as a form of obedience even if I didn't fully understand all of that, and Christopher grinned at the quick response. He didn't look overly threatening either. His shoulder length hair and chocolate eyes had a hint of invitation and approachability actually, which helped.\n\n\"Hello, back. I've heard, let's say, a thing or two about you.\" His eyes fixed on the Grateful Dead tattoo on my arm. \"Have to love a deadhead in latex.\"\n\nI laughed, and it worked to make me open up more. \"Well, that is something I actually feel secure in claiming to be at the moment, but as a fair warning, if you start the conversation, I'm not responsible for when you eventually get bored to tears. And I'm shocked enough that I'll ramble right now, so there's that, too.\"\n\nChristopher laughed and I felt happy that I'd pleased him in some way, a trait that I was realizing must show to certain people who were looking for it because his eyes were somehow more distant when I glanced up at him, and more gentle. The strange thing about the distance, too, was how arousing it was, how it fit with that feeling of his being dominant. \"Fair enough. I like you, by the way, and I can see what Isabelle meant.\" He paused, then grinned and winked at Isabelle. \"And I always was a sucker for a good romance. You might find someone who interests you enough to make you want to play a little tonight.\"\n\nI glanced back at Isabelle and Kody, laughing. \"Oh, I don't know about that. I'm way too scared-\" And that's when I saw him, when Kody turned my face to clue me in.\n\nHe was at the bar, the first bar in a while I had just glanced over instead of studying, and wasn't that fitting? My silver fox with the tattoos, as Isabelle called him. I swallowed and my sex felt hot even though the thong I wore under the latex was oh, so sheer. He was leaned over the bar, talking with two friends, a guy and a girl, and his face was alight with mischief and play. He flirted, relentlessly, and he was wearing the button up shirt and vest pieces of a suit, the jacket resting on a chair beside him, the sleeves of the suit shirt rolled up in that way he did that was killer. The silver highlights in his hair made my skin burn and it was hotter than it'd ever been, fueled with the sex I was surrounded by, heightened with the feel of the collar around my throat and the cuffs at my wrists. A guy passed me and turned around, grinning at the sight of me. \"Gorgeous dress.\" And I shuddered in the moment, feeling strangely so sexual and so safe to be submissive, when I was always submissive and scared of that fact.\n\nChristopher was smiling when I looked at him. \"I was also always a sucker for a decent setup. Why don't you go say hello, little doe eyes?\"\n\n\"I-\" I looked at Isabelle and then swallowed and took a step towards the bar. It was just saying hello.\n\nWho are you fooling? It's saying hello sideways if those fantasies have their wish. I was so wet, so... needy. There was something about the romance of this place and how dark it was and how my sensibilities were shot to hell and back. I was \"far from home\", as the saying went, where I'd sat with my replays of My Fair Lady and everything Sondheim.\n\nI took another frightened step forward when Isabelle laughed and grabbed me by my collar, taking matters into her own hands. \"Oh, no you don't. I didn't dress you up in his favorite latex outfit for you to get cold feet now, kitten.\"\n\n--------\n\nJackson\n\nYou know, I was doing just fine in life, too. Sure, I had some problems, but I'd deal with those and, otherwise, I fucking loved my life. I was a bartender in a fetish club at nights, for Christ's sake, and a sometimes mechanic at Sam Rousey's car shop. My life was fucking beautiful. It was the real kink in my midlife crisis theory, was how I could look back over and think that I wasn't missing out on anything. I didn't think of marriage, for instance, and have regrets that I wasn't married. My apartment was as bachelor as bachelor could get, so much so that I had Fender barstools at my countertop, BDSM pain play toys scattered through the apartment (hell, the only dates I brought home were ones who would be into those toys, so I used them as decoration because it amused me and aroused them), an unused dart board hung against a wall, the TV was connected to three different gaming consoles because I could.\n\nOf course, every now and again I would meet her in the hallway and think about going on a date with her. I tried to not think about her being at Sulfur's because that was just too damned arousing for me, the thought of her frightened eyes in my favorite hard play fetish club. Those thoughts always ended in a bad place, though, because I'd wonder what she might look like in bed and then shy away with the thought that I was...\n\nI wasn't interested in fucking her in the image. I tried so hard to get interested in sex at all in those images I had of her, only to fail every single time, even though I was surrounded by the erotic. I was only interested in things like those cries of pain, the way she would cringe away from the cane when I moved onto it with her, the way she might look with tears in her eyes and the way she would learn that I didn't stop at tears. Ugh, God, it would be the girl next door to exacerbate my goddamn sadism issues. But her eyes, though... That clash of baby blue with her red hair was something I couldn't get out of my head.\n\nWhile I was figuring it out, there were certain nights at Sulfur's where I generally quit playing altogether, and these were Christopher's open door nights where he let new people in. It was a tradition that Asher Lavrov, the owner of the Sulfur's chain, had started and new people loved Christopher. He was just so goddamn romantic, even if he was stuffy as all hell, and especially the submissive girls gravitated to him. And why wouldn't they? The man set up an entire dungeon with a shallow pool and fake flowers just so he could have something out of a fairy tale that he could call \"The Pleasure Garden\".\n\nBut just because I didn't play with new people at the moment didn't mean I was bored. Lily and Alex were two friends that made a habit to seek me out every open door night and we had a game we liked to play together. \"Okay, what about him?\" I gestured to a guy with a fishnet shirt and Alex studied him.\n\n\"Alright, that's a tough one. Definitely shy and he's definitely into Christopher at the moment, but... he keeps looking at the girl on the Saint Andrew's Cross when she gives that sound of pain. I'm going with S type transitioning curiously into D type for the sadism.\"\n\nLily shoved his shoulder. \"Now you're just projecting.\"\n\n\"I am not. I was shy, but I was never an S type.\" He paused. \"In the bedroom, as a qualifier. Meeting your parents doesn't count. No one knows what to do in that situation.\"\n\nLily gave me a flat stare. \"Beta sadism should come with a warning label. Something like 'Hi, I have crippling social anxiety, despite my bedroom domination and deep humiliation games'.\"\n\nAlex kissed her temple and I had to grin at how cute the two of them were together, in this odd way. \"Don't knock his shy sadism. I've been contending that the term 'soft sadism' should be a coined phrase for years.\"\n\nSee what I mean? Life was great. And then Isabelle had to throw me a curve ball.\n\n\"Jackson?\"\n\nI froze at the sound of that voice. It was this moment where I wondered what stars aligned that I would hear the sound of it in this place, that quiet, shy, and sweet voice of hers. The irony wasn't lost on me, either, that this was also kind of a personal hell of mine... but one so delightful that I didn't mind it. I turned to her and it was only from years of bartending that I managed to not act like an idiot at the sight of her. \"Essie?\"\n\nI fixed the sight of her in my memory, with the outfit she was wearing because holy fuck. The sweet, redheaded girl next door had traded her sports jerseys, unisex workout shirts, Grateful Dead tees, and jeans for shining, black latex. Of course, given that she worked at a well known sports bar and was evidently well loved there and given that she had seven older brothers, those clothes made sense. But they also meant I was not expecting how downright hot she was. And oh, she was, especially when 20 years' worth of latex fetish caught up to me.\n\nHer black dress was short with this cute little flare for the bottom and it was sleeveless. Her tits filled it out in this way that was pornographic and made me think of how it would feel to slap her breasts and cinch her nipples between my nails while she whimpered. The black collar around her throat was wide, with obvious O-rings and it matched the cuffs she wore... over latex gloves that made me want to groan. She obviously wore heels, too, but I was still trying to make it past what I could see of her over the bar. She smiled that shy little smile while I tried to piece together the sight of her with the girl who had squeaked in fear and dropped a copy of Herbert's Dune in the hallway, only to swallow with hot arousal at the two sides of her. \"Yeah. It... shocks me, too,\" she said, laughing a little breathlessly.\n\nI'd been holding back and shying away from my fantasies, but the sudden sight of her ripped the flood gates open. She looked down while I had a rage of dominant adrenaline fueling my thoughts, things that inspired commands and fantasies of making her dress like that every night, until she didn't blush with the feel of being so revealed. I thought of having her bent over my chair for me to paddle her and-\n\nIsabelle smiled beside her. \"She was curious about the life.\" And her smile was one that made me narrow my eyes. \"I told her that this might not be the place for new ones to usually start with, but it was very welcoming and we would keep her from the back shower rooms.\"\n\n\"What are you doing?\" I asked it when Isabelle went through the sectioning for the bar, while she winked at Kody, who had another wicked little smile.\n\nShe pat my shoulder, whispering too low for anyone to hear. \"You know, it took me a bit to realize that your redheaded deadhead next door was actually my second favorite bartender.\" And then she spoke up and put the nail in my coffin, looking to Essie. \"Kitten, since you and Jackson know each other and with what I know about you so far, I think he might be able to answer some of your questions. And it just so happens that Christopher has me on the roster to work sometimes, so I can cover as bartender.\"\n\nOh, God. No, wait. She couldn't do this to me. She couldn't leave me alone with the object of my fantasies, not when Essie was dressed to slay a sadist's heart. \"I think maybe Christopher has to sign off on that-\" I tried softly.\n\nOnly to be shut down by fucking Christopher, as if on some satanic cue that brought him to the bar. \"Already did. I like this one and you're experienced.\" He smiled at me. \"Have fun.\"\n\nTraitors. They were all fucking traitors. I stared down at Essie and it was game over when she turned those wide eyes up to me. I'd been fantasizing about her for months and, even with the latex, she had these doe eyes that looked both frightened and curious. I smiled to soothe her and it seemed to work, even with my scarred up face. Well, hell. I couldn't leave her when she looked up at me like that, even if it was a bad idea. \"Give me a second. I'm trying to piece my thoughts together. Jesus, Essie, you look... Wow.\"\n\nShe grinned. \"And you're not so bad yourself.\"\n\nI had to laugh at the repetition of my own words, the same ones that had once soothed over that moment for her. \"Sometimes I clean up pretty well.\" I turned around to look at Christopher, who rolled his eyes and held up three fingers, indicating a dungeon number, throwing me a set of keys.\n\nA private dungeon. Jesus fucking Christ, so I could make this bad idea worse? I wasn't going to use the keys. I was not going to use the keys. Number three had the bondage bed... I had an image of those cuffs of hers being tethered wide apart so that she was splayed out for me to-\n\nHurt. Because lately I didn't even have sex. I took a deep breath and got my bearings, somehow keeping my smile on to keep Essie comforted. \"So, you know Isabelle from Cocoa's?\"\n\nShe laughed and some of the tension seemed to leave her face when I led her away from the bar and near one of the side tables instead. She glanced around me and up to one of the birdcages where Christopher's slave, Deirdre, danced like an exotic captive. A blush lit Essie's face at the sight, but so did a small smile of romance. \"Yeah. Um, sorry, I'm taking it all in, you know? But, yeah, Isabelle has been great. She's the one who dressed me up, by the way. I definitely can't take credit.\"\n\nI rolled my eyes and winked at her. \"Of course she did. Leave it to Isabelle to find excuses to throw more latex into the mix.\" And to taunt me with the sight of it on someone she knew I was into. \"She said you had questions.\" I fingered the keys in my hand and I had to ask the question because when a submissive type - and she was obviously on that side of things - had questions, it was best to let them have control. You let them make the choices... until they didn't want to anymore. \"Would you like to talk out here or somewhere more private?\"\n\nShe looked at me, face still flushed, and a spark of wicked mischief lit her eyes even through the shy playfulness. \"Somewhere private, please.\" And her voice was so goddamned breathy and sweet that it shredded my previous resolve.\n\n\"Alright, sweetheart. Come on.\" Dungeon with the bondage bed. Alright, we were doing this.\n\nWith the girl next door.\n\n--------\n\nOnce I had the resolve set in stone and got her into the dungeon, it was easier actually. It gave me a moment to breathe from having a damned rug ripped from under my feet, gave me a moment to consider which violent ways I was going to murder Isabelle and Christopher later, too. Okay, you've been doing this for twenty damned years. Just because it's her doesn't mean you've forgotten how to fucking do this.\n\nEssie stared around the dungeon with this curiosity, too. \"Wow, that bed, though.\"\n\nI grinned. \"Want to sit on it?\"\n\nHer eyes lit up with playful laughter and she went to the dungeon bed, touching it curiously with her latex gloves while I was getting hornier by the second with the sight of her being there. \"I know I can't feel anything through these, but... is it strange that I like that?\"\n\nJesus hell... \"I don't think so.\" No, because I thought it was wonderful that she liked the restriction of the latex. I thought she needed more of it. And the skirt of that dress was so close to showing me her ass and all I could think was that she needed marks decorating her, my marks. \"A lot of people like latex, you'll find. What made you come here with Isabelle?\"\n\nShe turned around, sitting on the edge of the bed to look up at me like a redheaded fetish pixie. \"I'm not sure, actually. I didn't always react well to sex while married, I suppose, but I knew there was an attraction to... I guess it would be the submission side of things?\" She asked it in a question, looking up for approval so much that it made my heart feel warm, and her eyes lit up when I nodded. \"Isabelle talked with me about some things already, and then there's how Kody always acts with her at the bar. It seems so happy. Can I ask what side of things you are? Or, um, is that too much?\"\n\n\"It's not too much.\" I said it, but I wanted to cringe at the question. I refused to lie about these things, but for the first time in my life, I wanted someone to be okay with the answer so badly that it made me nervous. Normally, if I answered this question and someone got too afraid to try it, then it was no harm done. I'd smile and comfort them, then find someone that would be more their style. It worked like that sometimes. Sadism could be a massive turn off and sometimes a Dom like me with too much experience came across as more intimidating than guiding when someone wanted to learn along with another Dom. But, well, I didn't want to find someone else for her. \"I'm on the domination side of things, but more in the sadistic and pain sense than just the control sense.\"\n\nHer eyes widened and I wondered what it meant, hating the feeling of insecurity. I wasn't a fucking teenager anymore, and I hadn't been this thrown off in years. \"As in the giving pain idea?\" I nodded and then blinked when she sat forward because where other people seemed to get more shy and afraid with that answer, she seemed to get more curious and less afraid. \"Wow, what's it like? For you, I mean? I know it will sound like a stupid question, but why does that do it for you, if that makes sense?\"\n\nThere was zero judgment. I felt as shy as Alex for a moment and finally went to sit beside her. \"I don't know, actually. I just know that the adrenaline and power rush feels even better than orgasm for me.\"\n\n\"Really, really? That's something that Kody said, when I was asking her, too, that the submission felt better for her than even an orgasm, so when given the command to not have one, she loved obeying that. Do the two ideas hold hands?\"\n\nOh, goddammit, why was she so sweet? I smiled, looking down at the floor, thinking it through. \"In my experience, they can hold hands, as you put it. Or, at least, they seem to compliment each other sometimes. But the truth is I don't think ideas like that will ever always be similar in the way that you might be thinking. For instance, some people like submission because of the aspect of pleasing someone, making someone happy. But just as many people like it for other reasons, like the challenge. And there's some people who want to submit all the time, 24/7, right? But there's even more that only want to in the bedroom or in some aspects of life.\" I really loved this, almost dangerously loved teaching her like this. That feeling of control pulsed through my veins, the kind that I could amp up into ecstasy with a pain session. \"So, I think that maybe it's more accurate to say that it's possible for the ideas to hold hands like that, but not always the case.\"\n\nHer blue eyes were so wide. \"That makes sense. You're right, people really can't be generalized like that and I'm sorry if it was insensitive. I just didn't know there was so much like this, under that play surface, you know? But I really like it.\" She laughed and it was a little breathless, in a very good way. \"I knew about the collars, though.\"\n\nI had to laugh, too. \"Everyone seems to know about the collar thing. Yours is very pretty, by the way, and useful, too, like the cuffs you're wearing. For instance, play collars are nice for things like control. Like this.\"\n\nIt was a line to cross and I stepped over it, caught up in her and that damned latex. I crooked my finger through the front O-ring at her throat and tugged her closer and she made a sound that made me impossibly hard when I did. \"Oh!\" Her latex clad hand grasped my arm, making it even worse, when she was pulled off balance and she stared up at me in submission so obvious that it made me want to play with her so fucking badly that it hurt. Her eyes were wide and waiting for whatever came next.\n\n\"You like that.\" My voice sounded so damned distant over the roaring blood in my ears. It sounded hot with arousal and desire, so much that she couldn't miss it.\n\n\"Yes! Please... Um.\" She took a breath, as if clinging to courage, and blushed furiously. \"I don't know how to ask.\"\n\nI might have been a born sadist, but I was incapable of leaving submission like that in the pain of anxiety and shyness. Beyond that, it was a personal rule of mine, as a Dom, that I wanted to leave every submissive in better shape when she left me than when she'd come to me. \"Easy. One rule for sure is that you have to learn to be okay with saying what you want or don't want, with setting your limits. Let me help you with this one. Say something like, 'I want you to show me more, please'.\"",
        "Her blush deepened but she smiled gratefully, too, and my heart was all the happier for having walked the line of comforting her and making her be brave for me. And she did give me bravery, so much that I wasn't actually expecting her request. \"I want you to show me more, please, but I want you to show me what you like.\"\n\nWell. Fuck.\n\n--------\n\nEssie\n\nHis eyes turned wary with my words, but I didn't regret them and I for damn sure didn't regret the decision to go there that night. I wanted to know. I wanted to understand. What was that like for him? I had so many questions but I didn't know how to ask them of him, things like why giving pain gave him pleasure. What did he like about it? Was it sexual? I knew from Isabelle that it didn't always have to be sexual.\n\n\"What I like is a little tricky, especially for someone new.\"\n\nI nodded. \"I can understand that. What if... What if you showed me light things while showing me domination? Please, I'm so curious.\" I blushed, then admitted bashfully. \"Also, I'm a little more comfortable around you.\"\n\n\"There are ways to do it,\" he finally answered quietly, then sighed. \"And I definitely want to do them with you, but... Let me ask. Do you know much about your pain tolerance? For instance, you said once that you were married. Did you ever try anything outside of vanilla while married, things like clamps maybe?\"\n\nHe still held the O-ring of my collar and God, I loved that. It felt like something had clicked into place for me, something that was all too happy to be held by his finger like that. I bowed my head, like some people seemed to, hoping it pleased him. \"No. I didn't try anything like that. It was honestly as vanilla as you could probably imagine.\"\n\nHe nodded thoughtfully when I chanced a glance at him and it was fascinating to watch him. He was changing in this way, you see, because it was clear that the sight of me had thrown him off, but he was recovering quickly and I admired him for it. I couldn't recover from the shock of seeing him at all, but he was already sitting straighter, lifting his chin in that sense of security I had seen him have before. Every second made me bow my head lower, eager to have him teach me and lead me. It made me thrilled, actually, to think of him like that, as a sadist... and my instructor. \"Could you make me like it?\"\n\nHe looked down at me, shocked, eyes wide. \"Er. That is a fetish for some people actually and some things can be conditioned that way, but...\" He swallowed. \"Not for an introductory playtime.\"\n\nHis reaction let me know that it was definitely a fetish he was into. \"Understood.\" I bowed my head again, waiting and loving it.\n\n\"Okay. Let's do this in a kind of introduction to a few different ideas and see what you like and don't like. If we reach pain and you like it, we'll do a little more of it and I'll explain... some things I like. As for the toys, I refuse to go farther than, say, restraints and a riding crop or a light paddle. Even if you like something a lot and beg for it, I won't do it until it's been talked about after a 'scene' is over. But I'll show you some of the beginning ideas. How does that sound?\"\n\nI kept my face lowered, my eyes on his chest, but that was because I was blushing so damned furiously. \"Um. That sounds great, but I'm also stuck on being in this room with you and hearing about riding crops, so honestly, you're going to be the main juror, if you will, in this. I know that's not fair, but it's what's happening right now.\"\n\nHis laugh made me grin, even if I was still blushing like crazy. His was always a deeper laugh, but warm, too. \"I'll take that, actually, but just so you know, if you're playing with a beginner Dom, make sure you think straight about it. You're right in thinking that it wouldn't be fair to them when they're still trying to figure out the basics of being a Dom. Last thing, choose your safewords, two of them. One to mean 'slow down' and another to mean 'stop entirely'.\"\n\nIsabelle had definitely iterated those, already. \"Yellow for the first and red for the second,\" I answered, and my voice sounded oh, so very far away with the knowledge that I was signing up for this, that I was begging him to show me what he liked.\n\nTo hurt you. Admit it to yourself and get used to it. You're asking him to hurt you, so you better back out now if you want to. But I didn't want to back out, though. That was the thing. I was genuinely curious as to why he liked the things he did and why he was interested in giving pain. The submission thing already made some sense to me and the dominance thing made me curious and horny, but the sadism, when he brought it up? That made me more fascinated than all the rest, especially after Isabelle had brought up Kody craving it. What did it do for him, giving it? It was the kind of thing I didn't think I'd ever fully empathize with and after messaging Isabelle and Kody to ask questions before walking through the doors of Sulfur's, I was starting to think I wouldn't be able to empathize with much except for the submission aspect. But I wanted to try and if I couldn't have empathy, then I wanted to mentally understand. I was fascinated with this place.\n\n\"Perfect. And... actually, I guess this is the last thing. I don't have sex involved with my games or scenes. This is about showing you these things and if you need to get off at the end, I'll get you off, but it won't be with sex. Okay?\"\n\nI looked up at him in both shock and trepidation and he still held a finger through the O-ring of my play collar, but it was the point that really drove home what I was getting ready to do. I don't know why his bringing up sex so directly made it so clear, even though it was to say he didn't do it, but it made me well aware of what came next somehow. \"Okay. Okay, understood.\"\n\nHis smile was gentle. \"Brave girl. Ready?\"\n\nI nodded, flooded with warmth from his approval, and for a moment wondered what happened after that. When you started these things, was it like a movie director starting a scene? But then I felt like an idiot because of course it wouldn't be like that and people couldn't just turn the mindset on like that, could they? Surely it was like romance or something, right, and-\n\nHis hands stroked up my thigh and my thoughts shut up, while he laughed again. \"Your mind goes all too fast, doesn't it, with so many questions?\" I stood almost mechanically when his hands manipulated me, until he had me standing between his legs where he turned me around, one hand gliding across my latex clad back and the other went up my thigh... until I forgot to take a breath with the thought that he was the one behind me, the guy of my fucking fantasies, and then-\n\n\"Oh, my god, please.\" It was a soft gasp when his hand was a stroke between my legs and he laughed behind me, while I had thoughts like, is this what sadism often starts with?\n\n\"There we go. Let's try to disrupt some of those thoughts. Sometimes, a lot of times, submission is something better felt than it is a mental theory.\" I was okay with that. I was so okay with that. I rode his fingers harder, grateful for something to take my mind off the fear. \"Good girl, and so brave for me, too.\" He made a soft sound and I grasped his arm for better balance, breath coming shorter. \"Fuck, I always loved the feel of latex, too. Like feeling someone's second skin and having it be so restrictive.\" Oh, God, his voice sounded deeper and whatever insecurities he'd briefly had with his shock, they were definitely gone by then. I whimpered and he still stroked over my cute lacy thong, the one that was so easily accessed with such a short latex dress.\n\n\"There we are.\" His voice was a coo of approval and it made me hotter than hot. I was drenched through the lacy fabric his fingers manipulated, already having been so aroused off of merely talking with him. He reached up to crook his finger through the collar's back O-ring and I cried out a little at the reminder of its presence, of how easily controlled it made me feel. \"For a lot of people, dominance and submission is this strange mix of the physical and mental, but for you right now, we want it to be physical until you get in the mindset. Let's try part of it. When you play games with me, I am 'Sir', so answer 'Yes, Sir'.\"\n\nThe thought made me too horny, with his palm still massaging me, to even feel embarrassed. I merely moaned eagerly. \"Yes, Sir.\"\n\n\"How pretty.\" His fingertips manipulated right over my clit and I squeaked, staggering back into his arms while he caught me easily. \"And we seem to like saying that. That's a good thing, baby. Now, let's see if you like other types of respect because sometimes that just fuels the turn on. Kneel for me? On your knees like this.\" He pressed on my shoulders and I sank down in the same way my mind felt like it was sinking. It felt right somehow to fall to my knees at his feet, to look up at him with the restrictions of latex gloves between me and the rest of the world. He was right in how it did feel like a second skin, one that made me feel tightly encased, held close, and... safe in a strange way, just like this place, Sulfur's, was making me feel safe enough to do something crazy, like get on my knees for the guy of my dreams.\n\n\"Yes, Sir.\"\n\n\"Such a good girl. Bow your head for me and sit up straight. You want to look pretty for your Sir when you obey, understood?\"\n\nJust when I thought he couldn't get any hotter, he blew all my fantasies of him out of the water. It wasn't the dirty talk I had fantasized about, but my God, it was better than that. \"Yes, Sir.\" And those words. I said them because I wanted to say them, because the thought of pleasing him really did turn me on. And then there was what I had asked for, waiting in the background... Sadism. The thought scared me, but it made me too curious to resist, too.\n\n\"Just like that. Thrust your tits out a little more for me when they just look so fucking gorgeous in latex.\" I leaned into his palm when he caressed my cheek in reward, feeling so strange, as if I was partially floating. It felt good to obey, if I'm honest, because you want to know what was crazy?\n\nMy mind really was going, for fucking once in my life, quiet. I spent my life plagued by anxiety. Was this right? Did my tone of voice come across as mean? Would it be rude to ask someone a little more about a subject? How did I tell the Starbucks guy that I didn't want to order out loud, that I'd just redo my app order if it was messed up? It was why I couldn't find it in me to take initiative for much, when initiative was another decision for me to doubt.\n\nAll of that finally shut the fuck up. He was telling me what to do and he didn't leave me any doubt as to whether or not I'd done it correctly. And then there was the added thrill of the latex dress and the way its skirt fanned around me, the way my gloves felt. His hand curled around my collar, covering it to grasp my throat, and I moaned, feeling alive and excited all at once.\n\nHe laughed above me. \"That's a green light for having your breath threatened. Maybe we'll try that another time, if you like the idea.\" I whimpered happily, excited for whatever he wanted to do when he was making me feel so at peace. \"For right now, let's try some more restraint, especially when you have such pretty cuffs to make it easy for me.\" He didn't do what I thought he'd do with the cuffs. I had images in my mind of ropes and chains between them, of something more complex than what he did, at least. Because all he did was attach the two cuff rings together at the small of my back, using a karabiner that he had at his belt. But, oh, don't knock simplicity. I shifted, testing the restraint, and then whimpered when I realized just how much a person relied on their hands. Vanilla sex didn't brace me for being on my knees like that, for having my head bowed, for shifting in the cuffs that held my hands at the small of my back and realizing...\n\nI felt helpless, at his mercy. If I had been only partially floating in a headspace before, I was drifting after that, waiting for him to do what he willed.\n\nAnd all he'd done was cuff me.\n\n\"Oh, sweetheart.\" He crouched in front of me, lifting my face with a finger at my chin. \"What unmet needs have you had that you fall so easily into subspace?\" I moaned at the words \"unmet needs\", thinking that he seemed every bit like he could take care of whatever those were, and then moaned louder when he pressed his lips to mine. His kiss wasn't like any other I'd ever had, either. It was harder, for one thing, with a kind of latent intensity boiling beneath the surface, and the cuffs ensured that whenever I tried to lift my hand to caress his face, to feel his scars, I couldn't do so, and I only whined to the thought. \"Jesus Christ.\" He growled the words when he pulled away, stroking his fingers over the tops of my breasts, right above the dress. \"Deep breath. You still with me?\"\n\n\"Yes, Sir.\" What sensual voice was that when I answered and where had it been for past sex encounters? Even to my own ears, I sounded more feminine than ever, more ready and opened up. It was this sensation of waiting for him to lead me where he wanted to go.\n\n\"Good girl. So, yes for restraints too.\" He smiled, his blue eyes dancing, and my heart turned so happy that it hurt with the thought of having pleased him. \"You're definitely not alone in liking those, by the way. Come here. I'll show you a little of what I like and we'll see from there where we go.\"\n\nHe had to help me up, one hand on the restraints and the other caressing over the latex dress at my waist, while I felt lost with the force with which this was hitting home for me. I hadn't been expecting how nice it would be to feel silent, to not worry so damned much. I'd only been expecting adventure, something I would enjoy, but there were so many other things that I loved... way more than I thought I would. For instance, he was still dressed casually in his suit without the jacket, the tattoos on his arm visible enough to make it obvious that they were partial or full sleeve tattoos, and his silver sprinkled hair was cut and styled in the way he always wore. He looked put together and collected. The contrast of that with the latex I wore felt... It made me feel degraded, maybe? As if I wore a little slave maid uniform you might see in videos and it thrilled me to think of serving him like that, in this same outfit setup. \"Talk with me, sweetheart.\" Oh, Jesus. Talk with him? I was bent over the bondage bed and he was kicking my feet apart casually, lifting the latex skirt to bare my ass. \"You said you hadn't played with pain before, right?\"\n\nHis fingers stroked over my covered pussy and I had to catch my breath to answer. \"N-no, Sir. Not pain.\" Do you know what you're getting into? God, I didn't actually, but I was more than eager to find out.\n\n\"Pleasure goes with it, for me. For a start, arousal dampens some of the pain when getting into heavier play. But for me, to explain better, it's hard to give pain to someone I don't have some kind of connection with. Would you like to know why?\"\n\n\"Yes, please, Sir!\" It came out a desperate squeak when he caressed over my clit, when my arousal felt like torture. It was this strangest blend where I got so caught up in how quiet and calm this mindset was that I totally forgot how much physical pleasure I was getting until he brought it back to my attention with a touch, with his words that were hotter than hell. I couldn't think, could only feel, and that was a lot of goddamn feeling. I whined, actually whined like a wounded animal when his hand disappeared from his caress, only to yelp in shock when that hand slapped against my ass.\n\nAnd that's when my life took a very dark turn.\n\n--------\n\n\"Oh, please!\"\n\n\"Good girl. Deep breaths for me. See, it's hard for me because giving pain is my favorite form of affection and I can't give that if I don't at least talk with the person beforehand.\" He slapped the other asscheek and I squirmed under him, then moaned when he pressed the cuffs further up my back to hold me more restrained. I had thought I was aroused before. It was nothing to what I felt then. \"I want it to be enjoyed.\" He spanked me again and I broke.\n\n\"More, please!\"\n\nHe smoothed his hand over my ass. \"That's it, just like that. Let's go a little higher with it, though. A man can only give hugs for so long before he wants to give kisses instead.\" I jarred with the force of the next slap, mouth opening in a shocked breath, because it was definitely harder. There was more pain in it.\n\nAnd I liked that, when it was placed with the words he was telling me, when his pain was a form of approval, the greatest form of approval, if it was affection for him. \"Yes, Sir.\" Hugs and kisses. Because hugs were a lighter form of affection and this was how he gave that and I didn't fully understand still, but oh my God, my body understood and loved the hell out of it. Affection.\n\nI wanted more affection. \"Good girl. How brave for me.\" His slap jarred me again and I closed my eyes, in such a dark place. It felt like it held hands with that feeling he'd called subspace before, that feeling of floating, but this was different, too. If before had been like floating in bliss so I never wanted to fight a command, then this felt like having my will smothered in some way. It was more forceful... and more arousing for me. \"But it's true that I want it to hurt, too. I like the cries of pain and I like the way pain opens a person up, makes them bare. It empties them out, once they accept it, and, for me I suppose, it seems much more powerful and intimate than pleasure.\" It felt hot where he slapped and he gave me three quick slaps that time, so that it compounded. It seared at first and then settled into a fire on my flesh that was more arousing than ever. Kisses. Why did I love that thought so much? Why did it feel... romantic? \"So, for me, I want to alternate between pleasure and pain.\" I cried out a low, animal sound when he emphasized his point with another caress between my legs. \"I don't want to break someone, you see. I'd rather build you up with more and more pain so I can give more and more affection.\"\n\nHis next series of strikes were almost fierce and they did hurt. There was pain, but I liked that fact with the words he was giving me, with the reason behind it. I danced on my toes, shaking, feeling needy. \"I like that thought, Sir.\"\n\nHe made a low sound that only amped me higher, with how aroused it was. \"Christ, you definitely do. You've drenched your thong, sweetheart.\" He pressed his fingers against the fabric to emphasize and he was right. There was so much cum leaking from me that every caress he gave felt wet and cold and slick against my clit.\n\n\"Please, please, please, please, please...\" I whispered it in a breathless string before I finally got my thoughts together enough to ask for what I was dying for. \"Please, more! Please, show me more of what you like! I like pleasing you.\"\n\n\"Careful. Those are words to warm a Dom's heart. You might say it makes him all the more... affectionate.\" I squealed in ecstasy with the spanks it earned me, how they were even harder. It felt perverse in a way, how much I liked how pain was a reward with him. Most dynamics I had ever read about went the other way and conditioning was always used in my favorite BDSM stories, as it sounded so mentally intriguing.\n\nWhat kind of conditioning would go with how he worked, when he wanted pain to be his version of showing love? How twisted could he make things when he'd obviously been doing this a long time?\n\nWhy did that make me hornier than any fucking thing I'd ever felt in my life? Even more arousing was the words I said, without his prompting, because they just felt right in the atmosphere, with what he was telling me. \"Thank you, Sir.\"",
        "He made another of those low sounds, covering me with his body when he leaned over me on the bondage bed. I shuddered with another horny cry when he grazed his teeth across my shoulder, when the action made me arch up to feel how hard his cock was through his suit. I wanted him. So fucking badly, too, but I was more eager to please him, to learn more, to have him keep calling me a good girl. I felt like a good girl and I didn't feel like a coward. I felt sweet and submissive, and that wasn't a bad thing. No, it was such a good thing, part of what made me a good girl in his eyes. \"I did not expect this to go like this, baby.\" His laugh was a light shake of breath and he was far from that person who had been caught off guard. This was more like the man who had so casually controlled conversations in the hallway with me, a Dom. \"But then, I haven't expected anything about this night. I promised that if you enjoyed this, I would give you a lighter toy and I'll let you choose it. I can give you the crop or the paddle this time.\"\n\nI wanted to beg for both, but something in the way he'd so organized his thoughts and established that he would not go further than what was previously set, along with the way he held me under strict control, with a hand around my collar and the other holding my thigh, made it clear that he wasn't going back on that. I wondered how long he might be willing to play with his toys and then considered my choices. At first, I thought that I might get more time with him, more \"kisses\" from the crop, but then the image of him holding a paddle and spanking me in my latex maid setup was too irresistible. He chuckled above me when I was quiet for too long with the consideration, pulling away from me. \"Naughty girl.\" I arched in pleasure when he spanked me. \"You let your mind wander too far, but don't worry.\" He spanked me again. \"I think it's endearing.\" That made me moan again when I was already starting to piece together that his compliments and those qualities he liked earned me pain.\n\nWhy did I like this? I couldn't say, but it was something in just how damned depraved it was to have pain so effectively connected with his approval. Because holy hell, he was so very effective about it. I don't know that I liked the sensation of pain at that point, but I do know that the mental aspect was flat making me crave. \"Paddle, please, Sir.\" Just saying the word to choose it shot me so close to orgasm that it hurt.\n\n\"Nice choice. This one is a lighter one, leather covered. For a reference, it can be delightfully hard when you get into other types of paddles. I have a favorite one that's something like an oak ping pong paddle shape. Once you get into a hundred strikes or so with it, it leaves some wicked pretty marks and makes for nice, long sessions, too.\" Oh, my God, I was losing my mind. Everything about that disturbed me in a very good way and it was another thing I didn't understand.\n\nBut I knew I wanted him to keep talking about these scary ideas. \"A h-hundred?\"\n\nHe stroked my hair back, letting me see the light leather covered paddle he held, letting me see his face where I laid against the bondage bed. His eyes were light, so light, with his pleasure and enjoyment and it made the atmosphere somehow darker. \"None of that for you. But for the reference, it's a fun part of learning these games and discovering limits and the things you like. You can keep coming back to Sulfur's to discover more as you like.\"\n\n\"I'd like that, please, Sir.\"\n\n\"I had a feeling you might. And no, that's for more extreme times.\" He touched my nose, his scar twisting with his amusement. \"This is a lesson, naughty girl, not a hard sadism game.\"\n\n\"Yes, Sir, I'm sorry.\" Somehow, in this game with him, I could even meet his eyes more easily than I could outside of it.\n\n\"Don't be. It's another endearing thing.\" That made me moan and his smile was so soft, so dark, so... sweetly sinful. He was the strangest blend of a person I'd ever met, so much more than just the silvery haired man next door that had enticed my fantasies, and it was intoxicating. \"Another thing I like, and some of the other Doms will like, is for you to show respect for them and their toys. Kiss the paddle like a good girl.\"\n\nI shifted my hands in my cuffs, flexing my latex coated fingers in a new kind of fear. I was almost scared to have the orgasm that was threatening me. It felt like if I reached it, it might stop my heart with how horny I was getting off his words and his twisted game. I was having these dark thoughts of how I wanted to love his pain, of how I wanted to work up to that kind of crazy number of paddle strikes when I became used to his affection and how I might start to crave that with hot conditioning.\n\nI kissed the paddle, the toy of his intimacy for that moment, and laid still, looking up at him and waiting. \"Yes, Sir.\"\n\nHis eyes did darken then, with a blend of that playfulness and intense desire. \"You like this.\"\n\nI whimpered. \"I don't know why, but yes.\"\n\n\"Easy.\" Concern filled his voice and his eyes calmed even while I watched the look change to something more tame. He stroked my hair while I marveled at his control. \"It's okay. A lot of people like these things and sometimes there isn't always just a direct reason why. They just do. I've got you, sweetheart, and I think it's beautiful that you like it. Not very many people like my games when they're on the strange side.\" It felt like taking a breather, while he pet my hair until I could process the fact that it was okay. It was weird, but I was safe.\n\nAnd it was okay. \"Thank you, Sir,\" I said softly.\n\nHis eyes lightened again. \"Like I said, I want it to be enjoyed when giving pain is just so much fun.\" And he just as easily went back to what he was doing, back to the game we were both in, the transition from a light check in to playing so seamless that it was an artform. The paddle stroked my ass, a hard strip encased in leather to soften it, and the excitement almost choked me. \"Let me show you how pleased it makes me that you like this, actually.\" I shrieked when he rewarded me, half from arousal and half from pain, the paddle snapping against my ass.\n\n\"Thank you, Sir!\" Oh, but yes! This was it. This was the more I'd been begging for and I hadn't been sure of what it meant when I asked for it, but I knew now. I'd been asking for more pain.\n\n\"See, a lot of it has to do with sound for me. Sounds of pain are just so... gorgeous, so desperate.\" I sobbed on a moan, hot fire stinging through my flesh, as hot as my pussy felt with arousal. And then I cried out louder with the next one, with the knowledge that he enjoyed the sounds. It earned me another one and I twisted my wrists in my cuffs because I had my legs spread apart again and I didn't want to close myself to him, even if it was hard. \"And so much more intense, too.\" He smoothed his palm across the hot spots, caressing me, and my cry turned into a keen of shock with how his gentle touch tingled in the wake of his pain. \"Good girl.\" He tethered his pain with praise and I wanted to drown in the conditioning until it broke me, and the result was that I delighted in every strike that went with his voice. \"How pretty your ass looks when it's reddened.\" It went with another strike. \"And how brave you're being for me.\" Another. I felt like I'd never be the same. \"I love how you cringe away, only to lift back up for more.\" I never wanted him to stop and the next made me mewl pathetically. All I could think of was his voice casually bringing up a hundred strikes with the paddle and I wanted to be trained to take that when it came with this kind of approval and care, with so much... affection. \"And the way your face twists when the paddle hits, only to smooth over with need. Look at me. Let me see you better.\" He moved his free hand to control me with a hand in my hair, so that I was forced to meet his eyes. And I was never very good at looking into a person's eyes, but I never wanted to look away from him once I met his. They were intense and the look in them made me arch, made me tremble.\n\nBecause the look in them was truly affectionate. He wasn't kidding. Hurting me really was a form of intimacy for him. I watched him smile at whatever he saw in my eyes and he looked away to aim the paddle, while I looked back to watch his arm raise, his grip on it steady and exacting. I wanted to burn the visual in memory and then felt like maybe it was burned there when the paddle hit harder than it had yet, hard enough to make me twist and shift, hard enough to bypass the pleasant sensation from before, moving on to something that was mostly just pain. And he was carefully layering his blows too, so that it compounded. His eyes went back to mine when he had his aim, his hand tight in my hair. \"That's fucking gorgeous.\"\n\n\"Thank you, Sir. Oh, God!\"\n\nHis eyes were amused and I felt... connected with him somehow. It was like the rest of the world didn't matter. There was only him and his pleasure... and the pain he gave with his pleasure. \"Hurts, doesn't it?\" And the look in his eyes was almost enough to set me off. It was darker again and intense with something wicked.\n\nIt sank in why. Because he wanted to hear me tell him that he was hurting me. \"Yes, Sir, it hurts,\" I breathed.\n\n\"You want more?\"\n\n\"Yes, Sir, I want you to hurt me more.\"\n\nHis eyes turned to fire with the words, as if they stole some of his control, and I thrilled to it. I shrieked when he paddled me again. \"I like those words, sweetheart, quite a bit.\"\n\nI knew what to do with that knowledge. \"Yes, Sir, I want you to hurt me more!\" Repeat the words he liked.\n\nThe paddle took my breath away and I blinked when I felt tears in the corner of my eyes. He had moved his positioning down to lower on my thighs where it hurt even more. It made me feel dazed and blissed out of my mind, too, because the pain made it harder to obey him, which only made it feel better to my submission when I succeeded in doing so. He stared down at me for a moment and then released his hold in my hair to stroke a finger across my eye, caressing over the tears there in a way that was adoring. \"I like you, little dove.\" I choked when it came with a loving paddle strike, a hard one. \"A lot.\" He made it clear what that meant when he struck me again and I breathed out in an acceptance, trembling in a kind of confusion. I didn't know how it worked, but I loved that he liked me and that seemed to mean that I loved how hard he was hurting me. Under his hand and words, under his atmosphere, it made all the sense in the world that of course I should love it even if it hurt. Of course pain meant affection.\n\n\"I'm glad, Sir!\"\n\n\"You are, aren't you? Jesus fucking Christ.\" He gave one last paddle strike, one that made me shriek and yelp, and then I shrieked louder when he dropped the paddle and lifted me from my bent over position with a finger through the back O-ring of my collar and his other hand at my cuffs. \"Show me. Show me how much you like this. Show me how much of a good girl you are.\" When he had me up and against him, he switched his touch to circle a hand around my throat and used his free hand to slap my pussy over my thong, then circled his fingers in a massage over my clit that made my sounds turn into frantic, meaningless begging that all ran together. \"Good girl.\" He slapped again and they weren't light slaps. They were sharp, shocking spanks against my clit, followed by that masterful stroking of his. \"Thank me for hurting you, like a respectful little submissive should.\"\n\n\"Thank you, Sir, for hurting me.\"\n\n\"Fucking beautiful.\" I moaned with how his voice sounded hoarse. And I was learning from him that an older guy came with a fucking ton of benefits. Like experience. Jesus God in fucking heaven with the mother Mary, I was twisting like an animal from his touch, from how he knew what he was doing, and he did know. He knew exactly when to stop his pleasurable petting to spank my pussy. Hard. He knew exactly how to gauge for the force to put behind those slaps, to make me scream louder. I'd never been so mindlessly wild and that hoarse growl of pleasure from him only fueled me, as did the feel of how hard he was against my ass. I wanted to beg for his cock, but refused to do it when he said he wouldn't do that. So I just writhed harder against him instead, grinding against that length as if I might entice him. \"Such a pretty little sweetheart for me.\" It felt like a dance. Excitement coursed through me and my moans turned into squeals of need. \"That's it, ride back against my dick as hard as you need. Do you want to show me how much you enjoyed it and cum for me?\"\n\nOh, my God, please. He was going to be the death of me. \"Yes! Yes, please, Sir, please let me show you how much I liked it! Please let me cum, please.\" And I was so far gone that I wasn't even blushing.\n\n\"Good girl. I want that, too. And how respectful you are, waiting for my permission.\"\n\n\"Oh, God, please!\" I didn't even realize some of the things I was doing, the ways I was submitting without thinking of it. He was just that controlling and intense.\n\nHe spanked my pussy, four times in quick succession. \"Cum for me.\" I shook when he didn't go back to petting, when he continued the slaps instead, because he liked me and that was how he showed it. My breaths turned shorter. His voice was controlled. I couldn't think. But I was close. So. Fucking. Close.\n\nMy thrashing stopped when I went tense with a jolt and I don't know what sound I made over the roaring of blood in my ears, over the way my vision turned white with the wildest orgasm I'd ever had. The next thing I could even hear again was his purring voice in my ear. \"That's it, you little fucking wanton. Cum nice and hard for me.\" And I moaned because he'd traded those slaps for the petting over my clit again and the result was another, smaller orgasm right on the heels of that one, with how sensitive I was and how ready his pain had made me. \"How pretty you are for me. And such a good girl.\" And that. Oh, God, the approval and encouragement only served to heighten the emotion of it so that I was shaking weakly at the end.\n\nHe had to keep me up, had to lower me to the ground, and that's about the time I realized I had a crush on the guy next door and I couldn't think straight enough to know if I was actually into him or his sex.\n\n--------\n\nJackson\n\n\"Easy.\" I picked her up after releasing her cuffs, while she hid her face in my chest, holding her bridal style like a little latex princess. She really looked unfairly gorgeous in that outfit, too. Fucking Isabelle would find the girl next door and dress her up like a Christmas present specially wrapped for me. It was everything that was my fetish and, hey, spoiler alert, I might be mostly sadistic, but I was Dom enough to dislike being manipulated like this.\n\nAlthough, I really didn't mind overly much, especially with that addictive power and violence surging through my veins, that force up my arms, like a muscle memory of hurting her. God, I was having too many thoughts at once.\n\nIt disturbed me that the same surge of power that was turning more addictive than orgasm for me was the exact thing I let take over when I needed to care for a playmate that was a little too new to this, one I had gone a little too deep with. Mind games were a trip. But I knew how to fix that trip at the end.\n\nI cradled her on the bondage bed, wondering what I was doing, where this thing with her was going. Because I didn't know exactly, but I knew I wasn't done playing these games with her yet, if she'd have more of me. Maybe it wasn't going anywhere at all or maybe I was just going to have a few scenes before we realized we didn't play well together.\n\nBut I really wanted those few scenes, even if it hurt more at the end, if it didn't work well.\n\nShe sealed both of our paths by finally whispering in a voice I could barely hear. \"I want you to show me more things like that, please.\"\n\nI stroked her hair, thrilling to the pleasure of latex against my skin when I brushed against her dress or gloves and I said the right thing, but it wasn't with the right intention. See, what I said was, \"Let's calm down together after that and see how you feel then.\" And my intention was that I was going to take her up on that offer when we were calmed down.\n\nOf course, it didn't end up mattering much when she eventually looked up at me, after being still and cuddling against my side for a while. \"That was... Jesus. W-wait, what about you?\"\n\nIt made me smile to hear her ask that. \"I don't do the sex thing right now. I promise that I got what I needed out of it. Have fun?\"\n\n\"Oh, my God, yes!\" She stared up at me and her mind was turned back on in this way that made me feel like a puppy wagging its tail with how stark the transition was. \"And what does that mean? Does it not have to do with sex for you? Is it like that for a lot of people?\"\n\nI grinned with all the more happiness. My life had been starting to feel so... slow, in some ways. She didn't make me feel slow at all. She made me feel alive with all those questions and with how adventurous she seemed to be under her shyness. \"Well. I haven't actually tried to explain my thing to anyone new at this, but I'll try. It used to be very sexual for me. Lately, it hasn't been like that. Er, actually that's not quite right. Hurting someone still is very sexual for me, but I don't want to release the kind of sexual that it is, if that makes sense. I suppose sadism, for me, is... kind of like being edged in a soft way, a way that you like as opposed to a way that's frustrating.\"\n\nHer eyes were so blue, too, at odds with her dark red hair. Her arms were sprinkled with freckles and I found that I enjoyed that fact, as it seemed so endearing in a way. It wasn't that I preferred softer females, exactly. It was just that, with her, the softness made me feel all the more dominating, especially when combined with her wide eyed curiosity. \"What's being edged?\"\n\n\"Easiest, most relatable explanation? You know that feeling of being horny, like if you read hot erotica or watch porn while you're in a place where you can't do anything about it? That's kind of like a light version of feeling edged. On edge. Needing to get off... but for some people, they kind of don't want to.\" A blush spread across her face, despite what we'd just done and I burst into laughter. \"Oh, you do know what I mean, naughty girl.\"\n\n\"I... might.\" But her grin was playful and wicked. \"Okay, yes, absolutely. Especially if I'm bored before work and I'll read something and then go bartend while being kind of horny in the background.\" She paused and her voice was breathless. \"I really liked what you just did. It hurt but I liked it and I don't know what that means.\"\n\nShe shivered when I leaned over her and stroked my palm across her latex. \"It means that you have a fetish that a lot of other people have and there's nothing wrong with that.\" It also meant that my heart was doing fucking somersaults in my chest. \"And I liked it, too, by the way. I was going to ask if you wanted to text. That way if you still wanted to play some more after you've thought about things, we could talk about it and talk about me showing you more. Or we could talk about if you would like to try things with someone else.\" I hated that last thought, but it felt like part of my job as a top, to make it clear that she could experiment and find out if she liked something else, someone else, better.\n\n\"Yes! Yes, I want you to show me more, please. I mean I'll think about it, but I have all these questions and I don't understand why I liked it so much, but I want to know more, too, you know? Is the way you do things the way other people do them?\"\n\nAt that, I laughed, feeling nervous with the questions and what they might mean for her potentially finding other partners, but I wouldn't lie, either. I didn't have it in me, with the games I liked. It was probably one of those old fashioned ideas, but it was the kind of thing that felt dishonoring. \"No. I'm actually fucking weird, if you want the truth. I mean there are some who are like that, but probably not the exact way. It's like anything else. Each person is going to be different about it, if that makes sense. If you want to know some of the others, you could play with other people.\"",
        "That's when she did something that definitely sealed things. Because she shifted closer to me as if I was someone to protect her and softly said, \"I'd like to keep playing with you, if that's an option, please. Although it feels odd not getting you off, too.\"\n\nYeah, well, if she was going to keep playing with me, I was ending that thought right then. I lowered myself over her, grasping both of her wrists in one hand while she inhaled in shock, something that made me excited all over again. And then I traced my free hand up her thigh, pausing to pinch the delicate inside of her thigh between my fingernails so that she whimpered, her eyes going wide, and then she pant and shook when I pinched slowly harder. \"This is me getting off, sweetheart. This is what I need and you gave it to me. If you keep playing with me, I think it's something you'll get used to, but think about it, okay?\"\n\n\"Yes, Sir,\" she whispered automatically, and then exhaled in a burst of relief when I released her, feeling a dangerous thrill through my blood, a surge of power games that made me want to give more pain again.\n\nI hadn't been lying with what I told her. It was a lot like being painfully edged, but lately... Lately, I was starting to want to give more and more pain and I didn't want to be free from the desire to give pain. I didn't want off the edge.\n\nFor a brief moment, I had a deep fear and thrill when I considered why I might be so attracted to her, when she was inexperienced. Because part of me thought that maybe I was that attracted to her because she was inexperienced, when that meant I could train her to my play style, condition her to stop thinking about my pleasure being connected to my orgasms. It meant I could condition her to my strange blend of romance and wanting my pain to be loved, if I placed every greeting kiss with something like pinching her the way I'd just done.\n\nIt disturbed me. It was the kind of thing that made me wonder again, that thought that wouldn't leave me alone. How far gone was I?\n\n--------\n\nEssie\n\nAfter he fixed the dungeon when he was done with it, we went out to the bar area where Isabelle and Jackson's other two friends were still hanging out. I scolded Isabelle when it was obvious that she'd known Jackson and I knew each other, but she only grinned and asked, \"Okay, yeah, I'm terrible for manipulating. But. How did it go?\" And then she'd broken into laughter when I couldn't keep the grin from my face and Jackson had wagged his finger at her.\n\n\"Okay, chick, just because something had a good outcome doesn't negate the starting guilt.\"\n\n\"Yes, alright, but how did it go, though?\"\n\nJackson's friend, Lily, had burst into laughter at that and I'd been charmed. These people were so fun with each other and Jackson even changed a little bit with them, something that fascinated me. It was a common enough idea that people had different faces for different situations. A person didn't act the same around a lot of people as they would in the intimate setting with their loved one, for instance. A woman wasn't the same at home with her family as she was while out drinking with her girlfriends. Jackson came more alive around his friends. He spoke with more playfulness, taunting and teasing, and he had a projection that commanded. At the same time, his eyes turned flat and unforgiving when he reiterated the Sulfur's fetish club rule that there was no playing under the influence after someone got one of his drinks.\n\nBesides that was how tightly knitted this group was. It made me all the more curious, in the way that even if I hadn't taken to this kind of kinky sex with Jackson, I'd still want to go back. Isabelle took me around to see more scenes, explaining some things to me. She described so much that it made me want to know more about all of it. She described what a switch was to me, as in someone who switched between submitting and dominating, and that spurred a whole new thread of questions for me. I asked if the dominating mindset was much like what Jackson showed me with the submission mindset and then had to ask how someone could just so easily switch between those two. I didn't feel like I could ever do that.\n\nIsabelle ended up looking over her shoulder to make sure that Jackson was distracted with bartending and then whispered, \"So, he showed you some of the pain thing he likes, huh?\"\n\nAnd then I had to grin with the thought that these people talked with each other like anyone would talk among a group of friends. \"Yeah! Isabelle, I didn't understand it, but I loved it! I still don't get it. He said that I could play with other people sometime, if I wanted, but I was a little too intimidated by that fact and said I wanted to just play with him for a while. If it comes up again, though, I just realized that I know you and Kody. Do you think-?\"\n\nShe grinned. \"Only if you decide you want to. I think you should definitely stay with him if you like that kind of thing more, though. I'm not heavy into the pain parts, but he's something else altogether, and there's really no one safer to show you those things.\"\n\nThere was so much! I ended up on a porn spree when I got home and, in my defense, it was for research purposes. Jackson and Isabelle took me home that night, but once I waved goodbye to her and then bashfully said goodnight to him, whimpering in the hallway when he gave me a hug while pinching my arm to hear me in pain, I got my laptop. Sure, I could have gone to google, but that just seemed so lacking in creativity, so I went to free porn story sites instead. I specifically looked for stories that had something about that magical headspace that Jackson had called subspace, wanting to know a lot more about it. My mind never shut the fuck up. It always worked and it always questioned everything in a continual nightmare of social anxiety, but he had made it shut up. He had made me feel silent and peaceful, so that I wasn't even thinking about how much older he was than me or how he was way more experienced, which had to mean that he was going to get bored of me, right?\n\nGod, I ended up masturbating so many times, too, thinking of being helpless to someone. I read stories where someone was kidnapped and forced under that mindset, I read stories where someone was merely tied down to their bed and teased and reached that mindset, stories where they had to have more pain. I read some that were darker, some that were more informative than others, and I loved all of them.\n\nAnd I didn't know what that meant for me, but I knew that there was something deliciously dark and different about Jackson Sanders, something that was probably dangerous for me. There was something bad about how adoring he was when he gave me pain, something twisted about the look in his eyes at the end when talking about seeing each other again.\n\nIt was something that a girl probably would have stayed away from if she was smarter than me. I only felt thrill, amplified by some of what I had learned about myself from his scene, and a dark curiosity.\n\nIt was somewhere around the third video and 12th story that same night that I picked up my phone, turning even more thrilled with the thought that he was right across the hall from me. I messaged him.\n\nI want to play more, if you still do. And then I looked over my shoulder even though there was no one in the apartment with me, feeling like a teenager again, before I grinned and added. I've been watching videos and reading... stuff.\n\nStuff. Such a vague word that could be taken any way possible. He didn't let me get away with it. For ten minutes, I paced around my bed, barely daring to look at my phone, while I had the thought that he was probably calm as could be. On the other hand, I had that heart stopping sensation where I wanted to see his reply, but was too scared to, too. It was that sensation of sending any risky text to a crush and God, I definitely had a crush on him. I mean I knew it was a crush, though. It was the kind of thing that could easily have just been physical, but I was dying to chase the rainbow and find out if that was the case or if-\n\nI lit my phone's screen to see if a message was there and then threw it on the bed when there was one. Dangerous. There was something dangerous about him. He liked hurting me and I didn't know a lot about this. What twisted places could he lead me to, when teaching me how he thought I should be taught? I finally looked at the message. I would love to play more. You can come to Sulfur's whenever you like, by the way, as long as you stay with me. You'll just have to message me beforehand to let me know.\n\nGood and bad answer. Good that he wanted to keep playing, bad that he wanted me to decide when. Don't let me choose when!\n\nHe sent back an eyeroll emoji. Definitely heavy on the submissive side of things. Alright, how about when you get off work, say, Wednesday?\n\nYes, please!\n\nGod, I already couldn't wait until then which was another reason why he couldn't let me choose when. If he did, I'd drive him nuts. As for research content, how about this? And then he added a link with a winking face.\n\nI opened the story and read... And read. It was longer than the other scene stories I had been reading, and it had elaborate build up. Of course, it wasn't overly long, but the story. Oh, man. It wasn't even a BDSM story. It was a nonconsent story where a guy forced a girl to enjoy things she usually hated and I remembered asking him if that could be a thing, remembered him answering that yes, it could be and actually was part of some styles. I ended up masturbating harder than I had with any of the others and then went to the author's page for more stories, chancing a glance at the info.\n\nIt was the age and the place that got me. He'd added the city we lived in, which was something he could do when it was a large city and the age was around the age of... I messaged Jackson. Is this you?\n\nHe sent me back another winking face, with the message, Enjoy, beautiful girl, and I started at the top of the story list and went from there, making myself cum over... and over...\n\nI ended up falling asleep after one, only to wake up and cry out in pain with thoughts of him and the stories he wrote, whimpering with more of that feeling of danger. Once again, I had that dark thought, the one that was borne of that second when he'd spanked me nice and hard while talking about affection, one that came from how much I liked what he'd done. Where would he take me when I was new to this and I was his to teach, when he didn't even do the sex part of it anymore? I had the same sensation of reckless abandon I'd had when my adventurous and wanderer desire had once taken me skydiving, that same thrill of looking down at the ground that was unfathomably far away and taking a leap, screaming in excitement.\n\nOnly, this felt better.\n\n--------\n\nJackson\n\nI felt so much excitement for Wednesday that it was obvious and I had an instant indicator that it was obvious when I got to Sulfur's that night. I'd left Sam's car shop after working there, taken a shower at my place (thinking that the apartment across from mine was already empty by that point, when her bar kept earlier hours than mine), and as soon as I walked through the door of Sulfur's, Christopher smiled without even looking up from his phone, already seated at the bar. \"Have a good day, Jackie?\"\n\nI had to smirk over getting the bar set up. \"Well, it's going to be a good day.\"\n\nChristopher laughed and finally looked up. It was something of a strange thing working at Sulfur's, actually. Sometimes, I had moments where I'd stop and consider how desensitized I was getting to my lifestyle, because I'd think how Christopher would have already ensured the different dungeons were cleaned and set up and safe. He'd have added decorations as he wanted and he was relaxed on a barstool while I set up my own domain. \"For the record, she's decided you're her Dom in the same way a stray puppy might decide someone was their person.\"\n\n\"What?\" I set up the ice chest, checked the drink cooler, and wiped the bar down with cleaner, staring at him with the thought that... Bloody hell, I kind of knew what he meant.\n\nHe didn't let me get away with shit, either, because that was Christopher. \"Don't play stupid. When she sat out here, she leaned into you when she was nervous, looked to you for validation... All the rest. You can't tell me you didn't pick up on it.\"\n\nI had, actually, and I loved it so much that it was part of the reason why I was so damned happy for the night. \"Alright, fair. It's just that... Jesus, those eyes of hers and that hair. And oh God, the latex, Christopher.\"\n\n\"The latex was a nice touch, but definitely Isabelle's manipulation.\"\n\n\"I told her to wear the gloves again.\"\n\nChristopher laughed. \"Of course you did. Not the dress, though?\"\n\n\"No. I mean I wanted to, but you know. Nigh impossible to get off and most girls feel gross when it sweats.\"\n\n\"Yeah, there's a downside or two, especially for a new person learning these things. Going to play with her tonight, huh?\"\n\nI grinned, feeling like a puppy again, and Christopher gave me a wry smile. And he didn't mind, so long as I had his bar covered. Which I did. I was making Isabelle cover it again when this was all her fault anyway. That was the punishment I'd landed on for her interference. \"Hey, Chris. I got a question.\" He nodded to go ahead, casually leaning against the bar, his fingers threaded through his shoulder length dark hair so that it looked even prettier than it always did. \"You've always been on the Master side of things, as opposed to just Domination.\" I paused. \"What made you first try that?\"\n\nHe paused in brushing his hair back and then leaned forward. \"I loved control.\" He shrugged. \"It didn't go with sadism or anything else. I just loved control. I get that she's awesome. She seemed to be when she ran into me and Isabelle introduced us and after you guys were done, she seemed to like talking with everyone. And you said she loved your pain game, as odd as it is. I get all that, Jackson, but don't... Don't get ahead of yourself, man. I'll start with saying that, but.\" He held up his hand, adding that last part when I went to cut him off with the reassurance that I wasn't being fucking rash, and I let him finish. \"But I'll finish by saying that being a Master or a Dominant is whatever you want to define it to be once you get to know each other better. Some Masters are not all that controlling. Some Dominants are more controlling than you'd expect. You know all this, so just see how much power exchange fits with the both of you if she does want to be more than fuck buddies.\"\n\n\"Fair.\" One of these days, I was going to learn better than to give Christopher more of an excuse to tell me what to do. It already drove me crazy with the bar. Still, though, I couldn't fully regret it when he told me things I probably needed to hear, even if he was right and they were things that I did know. Because the truth was I was starting to have fantasies of more power exchange than I'd ever really desired before. I'd always been more of a sadist than a dominant, always been more about pain games, one at a time, rather than having a slave. The Master and slave thing was Christopher's territory and, once again, it made me a little uncomfortable when I thought of how much this newfound fantasy might be tethered with my addiction to that power trip game.\n\nIt was on my mind when Christopher wandered off to play, when people got there. It started to get close to when Deirdre would get there that night, but Lily and Alex had started having this habit where they'd show up after work together sometimes and they always said hello.\n\nLily was awesome too, but she always was. She was social as all hell where Alex was shy, but that meant she was really good at reading a person, so she took one look at me, saw my distraction, and said, \"Die Hard's not a Christmas movie.\"\n\nIt worked. \"I swear to fuck, I'll throw a drink in your face.\"\n\n\"Do it, bitch. I won't take it back. Just because it had a Christmas party happening in the movie does not make it a Christmas movie.\"\n\n\"You're marrying this girl. How could you?\" I stared at Alex in mock judgment and he burst out laughing.\n\n\"How could I not? Do you know where I'd be tonight if not for her? Because I don't know exactly, but I can tell you that a fetish club like this one would not be it.\"\n\n\"That's still sacrilege. Oh, hey, there's Deirdre.\"\n\nLily's eyes sparked and she pat Alex's shoulder. \"One second, it was such a bad day and I swear that I couldn't make a single person happy all fucking day, so I need to misbehave really quick.\"\n\n\"What do you think that means for me tonight?\" He asked it of me while we watched her together.\n\n\"No ide- Oh. That's what it means.\" We watched when Lily cut Deirdre off before the slave could reach her Master and Lily grasped the back of Deirdre's head right in front of Christopher, kissing her in the most obviously bratty display I'd ever seen in my life. Christopher's eyes made me smile when I recognized that look. Because he turned more distant, lifting one eyebrow with a quirk of the lips, and the look in his eyes was far more... more. I don't know how to explain it, but it fascinated me with the thoughts I was starting to have involving Essie. It was like seeing a master sculptor with clay and you just knew that he saw more than what the average person did. You knew that he had that experience to see more and to know how to create art out of what he saw.\n\nDeirdre's cry when she was kissed was something Christopher had trained her to, something that was made to be sexual and eager, made to entice. She whimpered as if uncertain when she pulled away too, as if confused for a moment that she'd had the reaction with a kiss she wasn't expecting. Christopher grasped Lily by her hair so that she squeaked and giggled, while Alex shrugged. \"Right, well, I might be shy as fuck, but there's some things you don't say no to, and a poor little masochist having a bad day and needing a correction just feels like one of them.\"\n\n\"Cheers to that.\" I watched, grinning when he went to Lily. It was a known fact that Alex and Lily were, for the most part, monogamous later in their relationship, but Christopher was really good at what he did. He didn't cross that line, even while he threatened Lily so that she whimpered, and he wouldn't have because he knew the both of them.\n\nShe whimpered all the harder when Alex curled a hand around her throat, fear coming to her eyes.\n\nI think it was a reason why I got along so well with Alex, actually. Like me, he was a sadist. But he was an odd brand of a sadist, also like me. Of course, he was odd in his own way, but...\n\nIt was nice to talk with him, to watch the two of them together. There were so many stories of men and women who craved domination or pain and found themselves in relationships or marriages that were already established as vanilla, so they'd end up wishing that they could train the person they liked to be a dominant or a sadist. It felt strangely uplifting getting to watch an instance where a bottom had actually trained a top and it worked out.\n\nIt calmed me, made me breathe a little easier when I felt so antsy. Because I did feel antsy. It held hands with the excitement that came from my being so damned eager to see her that night, to play with her.\n\nSee, the other part about it that was disconcerting for me was that we'd talked about what we might do together, how I might teach her things. And she'd begged me to teach her the way I wanted things to be, begged me to show her my preferences. A better person would show her things about domination and submission, would teach her about the different types of toys and sensations other than pain play.",
        "I wasn't that good. I'd caved and I was horribly excited about that fact.\n\nIt was a couple of hours before she messaged me and had me get her at the door and as soon as I saw her, it only got worse. Because my world came back into steady control. She looked beautiful and she was wearing the overcoat she'd worn with her latex dress, along with heels and the latex gloves like I'd told her to. The ground felt stable again and it scared me all over again, how delightful it was to feel that rush of power in the blood stream that made me see life so much more clearly.\n\nBecause she grinned when she saw me and walked right into my arms, coming back to me for me to hurt her more.\n\n\"Look at me.\" I forced her face up with a thumb under her jaw, so that she had to look at me and I could see her gorgeous eyes. \"Grab my arms so I can feel the latex and don't look away, understood?\"\n\nConfusion lit her eyes for a moment, but she nodded and obeyed, watching me curiously so that I had to smile. I slid my hand under her jacket, turning all the more excited with the feel of a lacy halter top that left her stomach bare. \"I like to give hugs.\" My voice was breathy and I held her close with one arm, caressing my other hand over her stomach before I clawed my fingers, digging my nails into her flesh. She gasped, then moaned, so that I smiled. \"I like kisses even better.\" She shuddered at that, then gasped against my lips when I pressed to her, scratching my nails to cause even more pain. Her body was tight against mine, in a way that it wouldn't be with just any kiss. She was shuddering and she held tight to my arms in a way that was intoxicating, with how she both wanted to get away and refused to do so, staying in my arms. It was the type of thing that made my heart hurt with happiness.\n\nWhen I released her, she gasped in a way that no other kiss compared to and I smiled down at her, while she seemed to have to focus to clear her mind, while I felt a lot of control and power and wanted more. \"Oh, wow,\" she finally purred, and I grinned with how much lust was in her voice.\n\n\"Careful,\" I answered. \"You keep telling me how much you like my play ideas and I'll keep doing things like give you hugs and kisses that way all the time.\"\n\n\"I'm okay with that.\" She stroked her latex clad hands up my arms with a little bit of wicked intent in her eyes, the kind that let me know she was catching on fast and using my fetishes to manipulate, the kind that made me thrill with the Dom's need to tame a brat. \"Please hurt me more.\"\n\nAnd that was the nail in the coffin, the words that stopped the fear filled voice of my conscience and replaced it with only desire.\n\n\"Come on, then, sweetheart. Let me... teach you more.\"\n\n--------\n\nEssie\n\nLet me teach you more.\n\nI really liked him as a teacher. Dangerously so. I waved to Isabelle where she already stood behind the bar, covering for Jackson, and then stopped his leading me to stare at the scene on the Saint Andrew's Cross. Jackson grinned when he saw what caught my attention and watched with me for a moment.\n\nChristopher was the name of Jackson's boss and I had gotten to know some of the people the last time I'd been there. So I knew that the girl on her knees was his slave, Deirdre, and she was eating out Jackson's friend, Lily, where she was tethered on the cross. But it was her fianc\u00e9 who made me really stare. Alex had seemed so mild mannered and timid the night before.\n\nThe way he held a cane in one hand and snapped it across Lily's tits so that she shrieked made me reconsider what I knew of him. Jackson laughed at the expression on my face while I watched Alex grin, twisted laughter in his eyes while he fingered the cane he held. \"Sadists. We're everywhere. From my understanding, she had a very bad day and felt needy.\"\n\nI turned to him and he winked so that I laughed and continued to follow him. \"Wow, and he's so mean about it, too. I know you said that's who played with Lily, but I wasn't expecting that, somehow.\"\n\nJackson grinned and opened a dungeon door. \"I think you'll find that BDSM play is whatever people make it to be. Think about Isabelle and Kody. I mean there are couples like Christopher and Deirdre, that practice an absolute lifestyle, but there are far more who are just like everyone else and have a need to satisfy every so often. There isn't always just a stamp on someone's forehead or a collar around their throat to say that their kinky.\"\n\nI followed him into the dungeon and stared around at the circular tower dungeon setup. It looked like a BDSM version of a dungeon you'd see in Beauty and the Beast and it was another thing I wasn't expecting, too. \"I like this one!\"\n\nHe laughed. \"I thought this one might hit a fun spot for you.\" I went still where he approached me from behind, pulling me to his chest, and my heart skipped when he tugged open my sash, unbuttoning my jacket. \"It does inspire something strangely romantic in nature, doesn't it?\" His voice was lowering and after my first experience with him, I was starting to pick up on things, like how that lowering of his voice, in the way another man might speak lower to give his beloved gentle encouragement and sweet nothings, was something of a threat from him, a warning. And sure enough, he traced his hand up my side... up my slutty halter top, lifting the fabric, until his fingers found my nipple. I tried to brace but couldn't really and the result was a gasp when he cinched the delicate peak.\n\nI arched and twisted in his embrace, trying to shrink from the pain, and my pussy clenched with emptiness hard enough to make me moan in the midst of the gentle pain. \"You smell so good when you're so turned on from the pain, sweetheart.\" I closed my eyes and my mind was turning still again, calming under his-\n\naffection\n\n-pain. I shuddered at how sweet his voice was, how he cooed in encouragement while hurting, even while he held me forced against him. \"And I adore those sounds of yours.\" His lips were soft against my hair and he tugged me back against his cock, so that I arched and rubbed against him. I giggled breathlessly when he released me, in a sense of dark shock and pleasure that I didn't understand. But I liked it.\n\n\"Such a good girl you are. What's your safewords?\"\n\n\"Red and yellow, Sir.\"\n\n\"Perfect. You want me to take over this one and take you a little deeper into what I like specifically, right? You can tell me you don't want that at any time, by the way, sweetheart, and I can teach you just submission.\" He turned my head a little so I could see his face and he was smiling easily, his scarred face a picture of security, framed with that sandy hair highlighted silver, and I turned all the more wet from the sight of him. \"I could honestly have fun teaching you just submission for months. This is about you, understood?\"\n\n\"I understand, but I want you to show me how you do things, Sir. I want to know how different things leave different marks, like you said before.\"\n\n\"Mmm. Different kinds of affection.\" His eyes were so inviting when he spoke of pain. Jesus, it did things to me. \"We'll get there. Let's get you stripped first.\" I held still while he tugged off my jacket, then pulled off my lacy skirt and halter, talking while he worked. \"Speaking of Alex and sadistic kinks, he also has another little proclivity that might amuse you.\" He was so assured in his motions. I didn't know if it came from being older or a top or a mix of both of those things, but he cupped my tits without questioning or soothing into the motion. He just did it, with a sense of casual use that made me moan with the sensation of being a toy for him to play with. And, dear God, it was a sensation that excited me. \"You see, he has a major lactation fetish, but without the lactating mess. He hates the thought of actual milk or anything to do with it. No, he specifically just has a thing for this action.\" I pant with how aroused his motions made me, when I realized what he was doing. See, he'd cinched both of my nipples in a painful grip again and when I could think straight enough through the pain he gave me, I realized he was tugging my nipples in alternating motions, as if milking me.\n\n\"Oh, please!\" I begged, but I wasn't sure what it was for, only knew that it felt painful, how horny the thought made me, and it wasn't exactly the same thing as how much I loved his physical pain. It was more on the mental side than that because there was a sensation of torment with how cruel his nails could be, but it was more the thought of being brought low, being reduced to an object.\n\nI shouldn't like that, but I did. I think maybe it had to do with that fact from before, the one about my mind never shutting up. I think it had to do with being intellectually curious and being degraded into just a little plaything. There was something attractive, in a fetishized way, about it. Jackson's voice was soft where he rested his cheek against the back of my head. \"Just relax and enjoy it. Humiliation is fun, which is why Alex likes things like this. He also likes latex, after getting to play around with it, mostly because he enjoys turning Lily into a little covered up fuckdoll.\" If I could think straight, I'd wonder how that worked in their day to day relationship. As it was, I had a thought and then it was gone, while my mind started to go still, as if being slowly smothered into calm and quiet.\n\n\"Yes, Sir,\" I whispered, and he laughed above me, letting me go.\n\n\"That's what we like to hear. Last time, I didn't show you the clamps when I thought that taking off the latex might make you uncomfortable.\"\n\nI blinked, having to work to think through a fog of lust, while he guided me past a large wood and iron table setup and to a set of shackles that hung from the ceiling. \"Yeah, it was weird getting it off and weirder to clean.\"\n\nHe laughed again, grasping my wrists in a gentle hand to tug them over my head, fixing them in the dungeon manacles. His hand stroked up the gloves, his eyes lightening in pleasure and enjoyment with the sensation, while I had the daydream of being something like a wayward lady in a fantasy land, a Jane Doe in a place where you really shouldn't be a Jane Doe. \"It takes a little bit of commitment to play with it. The gloves, though... Those, I think we should keep.\"\n\nHe worked so easily, casually, walking around me to a bag he'd dropped on the floor, where he knelt to get a gleaming silver chain. I watched while he lifted another paddle and a strap, too, turning heated with thoughts of how intimate his touch felt when he gave pain, at how alive he seemed when his body vibrated with the force of striking an implement. He set the paddle and strap on the stone table when he walked past it, the silver clamps in his hands. I blinked when he held them up for me to see closer. \"There's all kinds of different styles for these. My personal favorite are actually ones called clover clamps, but they're a bit harsh. These, on the other hand, start out quite kind, but... they screw tighter so we can find a gauge for you. Besides, they're quite pretty, don't you think?\"\n\n\"Yes, Sir.\" I was starting to realize a kind of fear in these games with him. Namely, that he was instructing me in these things and that I didn't want to disrespect him or deny him. I enjoyed pleasing him when he was my sexual teacher. \"P-pretty.\"\n\nThey actually were, too, with little jewels hanging from their clamp part, but the cute addition didn't take away from what they were, from the way they gleamed. I felt a strange blend of wild curiosity and fear, but it was more fear of the unknown. I had never gotten to try clamps, even though I'd read so much about them, not even to experiment with something like clothespins. \"Easy.\" He said it so softly, understanding my fear, even while he gently massaged my nipples with his thumbs. Not hurting, for once, but stimulating. I whimpered quietly when he lifted the end of one clamp and he smiled, eyes on his task. \"Deep breaths. It's okay.\"\n\nI exhaled, blinking, when the pincers fell shut, and it took a moment for it to sink in when I had been braced for something far worse. Instead, it was almost a soft sensation and I moaned, tugging my wrists in the manacles above my head, then moaned louder with the reminder of my restriction. Jackson laughed, attaching the other end to the other nipple and it was all the sweeter for it. I looked down just to see the jewels hanging from my breasts. \"A lot of the pain enjoyment comes from the anticipation, sweetheart, especially when you don't know how little or badly something might actually hurt.\" Jesus, I couldn't think because it was more than true. The best way I could describe the sensation was to call it a highly submissive relief that it wasn't as bad as I'd been braced for and that feeling somehow translated to gratitude and surrender to the man who had control of that pain.\n\nIt was fucking addictive. I kept my head bowed until Jackson gently lifted my face. \"Look at me. Let's up the ante a little, since you seem to enjoy that pressure just a little too much.\"\n\n\"Yes, Sir.\" And it took real effort to keep my eyes on his. It felt more naturally submissive to look away, to bow, and I had to remind myself of the command over and over again, but it made it easier when I did. The other thing that made it easier was the intensity of his gaze, how it felt like romance to look in his eyes when he did these things. Because this was a different Jackson than the playful one who was a bartender.\n\nThis one had more fire in his eyes, a lot more, and he was excited in a strange way that was somehow slow and sweet. I moaned when he tightened the screws of the clamps, when he went ever so slowly, watching my eyes while he alternated between twisting each one. He smiled when the pleasurable pressure turned to light pain, when my face must have changed with the increase... and then he kept going. \"Good girl. You can take it.\"\n\nWhat else was there to say, when I was trapped so deeply in that mental place where things felt so calm and still? \"Yes, Sir.\"\n\nAnd, really, I could. The steady increase had this strange cumulative effect, a slow build where I breathed in and out, staring into his eyes. A little more. And then more. And then a little more. My whimpers sounded far away and I was meeting his eyes through a glaze, as if the world was fading, all except for him. I exhaled in a gasp when he finally stopped. \"Good girl. How pretty you look when you're hurting. And the sounds you make are fucking gorgeous. Let's see what other sounds you can give me. We'll start with the paddle since it's one you know and work our way up from there with the strap, after we have a gauge.\"\n\n\"Yes, please, Sir.\"\n\n\"How brave for me. Kiss the paddle and tell me why you do that.\"\n\nAnother thing. There was more talking with his kind of sex sometimes, in certain moments. And he was good at this dark kind of dirty talk, in the way that made me feel hotter than hot, like I was burning. My pussy clenched again, on air, in that way that amazed me when it happened, when it was like this spasm of painful need. It brought to my attention how badly I ached and it was even worse to know how hard he was and to know he was so controlled that he wasn't going to do a thing about his arousal. It made me crave all the worse to know my own release would be for my undisciplined need, that he would be almost dispassionate about it, save for his pleasure in seeing me come undone. I had to take another breath, feeling a strange kind of fogginess, and gently, adoringly kissed his paddle. \"To show respect for your toys, Sir, because they're part of your affection.\"\n\nHis pleasure made me feel exultant, and I mean in a way that was intimately gratifying. I think that had a lot to do with the atmosphere, but I moaned happily when he purred his answer. \"Very good. That's it, exactly, and I'm a sadist who wants it to be enjoyed. Now, I could use a spreader bar and keep your legs wide open for me, but I'd prefer you to show me you like my affection by standing straight for me. It will be harder than it was last time, but I think you can try.\" He tapped my ass with the paddle. \"Legs spread wide.\" He kissed my cheek when I opened, then whispered, \"Wider,\" so that I moaned and spread painfully wide. \"Good girl. Pleasure dampens some of the sensation, remember.\"\n\nI cried out when he stroked the side of his hand between my legs and he always had this way about doing it that was hot as fuck. He'd straighten his palm and just stroke, then twist his wrist as he desired, every motion deliberate and slow while I burned all the hotter for it. \"Yes, Sir, thank you!\"\n\n\"You have such good manners, too.\" He pressed two fingers to my clit and then gave me the first paddle blow, so I squealed in need for any kind of more he'd give me, caught between the two sensations. My legs shook and I hopped before I remembered to keep myself spread for him. He still lectured me in that loving voice that was twisted and somehow romantic as hell, atmospherically fueled by the circular dungeon. \"Stay spread like a good girl.\" Another paddle strike while I had to focus to obey. \"It's hard, but you'll find most Doms prefer you to keep your pussy open and available for them.\" Another strike and he moved his hand away, wrapping his arm around my waist to hold me closer, kissing my neck while he gave me a harder paddle strike. And then a harder one. \"It shows me you like it and shows me you're mine for the moment.\" Oh, Jesus, I liked that thought. Another strike. Another. Another. He was holding me so tight, in a hug like embrace and he paused to smooth his palm down my ass, scratching his nails over a hot spot he'd left. \"That one was rough.\" And what did he do with that knowledge? He did it again, then scraped his nails over it. Again and scratch. My ass felt hot after each one and those scratches of his were light enough to be ticklish, but it burned in a pleasant way after each one. He shifted his hand to finger me slightly again instead, just enough to make me shout a moan of need. \"You're so fucking wet for me, too.\" Wet enough to hear it... His words turned to a soft, calming coo. \"You can fight your cuffs all you like, sweetheart, but they're not giving and you're not going anywhere.\"\n\n\"Oh, my God!\" It was another shout when his words made me burn. I hadn't even realized I was yanking on the bracers, when I was so caught up in trying to keep my legs spread and even that was more difficult that I dreamed it would be. I wasn't being very still at all, was dancing in his arms, but I seemed to force my legs back apart quickly enough for his liking.\n\n\"Good girl. I'll give you a choice. We can spend more time with the paddle or we can move onto your strapping sooner. If you want the second one, I'll paddle you a little longer and then we'll spend a long time with more pain than the paddle.\"\n\nOh, but it was mean of him to give me a choice like that. Especially when I understood the soft warning in his voice, that the second option was going to hurt a lot more in an intense way.\n\nIt's more affection, I corrected in my head. \"More of the strap, please, Sir.\"\n\n\"That's a choice I like. We'll call this the halfway mark with the paddle, then, and let's make the last half of it count.\"\n\n\"Y-yes, Sir.\" I closed my eyes and nuzzled closer to where he held me, squeaking when he paddled me again. He fell quiet with me, too, holding me cuddled against him like that even while he held true on his word and paddled me harder, so that I jarred in his arms and had to gasp against his neck. He kissed my hair, then struck the paddle, stroked up my torso to reach the clamp chain, then tugged it and paddled, smoothed his palm to trail a fingertip across my crushed nipples, then paddled again.\n\nThe end result was that by the time he was done, my ass felt bruised with the force he'd been using. It definitely felt hot and tormented... and I felt loss when he pulled away to trade out his toy, so much so that I looked down and waited in eager obedience for him to come back to me, trembling.",
        "And he understood. I raised my eyes when he held the strap at my chin, lifting my gaze to his. \"It's okay. I'm right here and we're not done... cuddling.\" He winked on that last word, a dark, sensual look in his eyes, so that I had to smile dazedly. \"Sweet little sub. Let's see how you like these clamps when they're taken off.\"\n\nHe was slow about it, releasing one clamp, so that I moaned in shock with how badly it throbbed when the sensation flooded back into the peak. His responding smile was sinful as he released the second one. \"We enjoy those, as well, it seems.\" He paced away one more time to set those to the side and came back, holding the strap to my lips. \"Now, what do you do with my toys before we start?\"\n\nI was in such a dark place, but I didn't quite even realize how dark until I felt a surge of eagerness and kissed his strap with fervor, feeling like that was the right thing to do. It was twisted, how I wanted to kiss it all over, so long as he'd keep holding me so softly while he hurt me, so long as I could have more of that quiet intensity. When I met his gaze again, there was even more of that darkness, but also more of that affection he had. It made me shiver, how that look made me burn for more pain. \"Fucking hell, sweetheart. Keep holding still for me.\"\n\n\"Yes, Sir.\" My voice was breathy, husky with adoration and desire. His version of sex was somehow filled with more lust and emotional intimacy than any other I could remember having. I didn't know how that worked but I loved it and wanted more. \"Please strap me, Sir.\"\n\nHe curled his arm around me again, only that time he kissed me before he started, and it was fierce. His lips were almost bruising against mine and he trailed the strap up my thighs. When he pulled away, his voice was that deeper, desire filled version again. \"I would love to. It's going to hurt, sweetheart, and I'm not going to be nice after a display like that. I'm going to strap down your thighs so that you scream for me and I want you to try to stay with your legs spread for each one. And why am I going to do that, baby?\"\n\nHe pressed his forehead to mine, while I thrilled to the mere sight of him. The answer made me moan before I said it, but then I did. \"Because I made you feel more affectionate.\"\n\n\"Good girl. Come here.\" But he blended the usual kinds of affection with his own, twisted form in such a seamless way that it was making me confused. I really was starting to love it and that made me all the more turned on, with the thoughts of being conditioned to equate his pain with his kindness. It was just so damned depraved and-\n\nI shrieked with the first strap blow and he stood back a little to have a nice, hard swing through. Because he was as bad as his word again and wasn't being nice at all. \"Oh, please!\"\n\nBut I couldn't bring myself to beg him to stop, couldn't bring myself to actually say those words. \"Such pretty sounds.\" He struck three times quickly, once on each thigh and then once dead center of my ass cheeks, while I tried to process how hard he was playing. \"I love hearing you ask me for it, baby.\" I moaned, then shouted again when he did another series of stripes before he pressed his lips to my temple, soft gentle kisses to go with his pain. He whipped me harder when I whimpered and I was getting so used to him that I knew that meant he enjoyed that sound. \"Such a pretty girl.\" The strap fell over and over in sharp motions. He couldn't hold me as tightly with it as he could the paddle, but he pet me all over and pressed against me, so that the sounds turned into a blend of my cries, his loving kisses and petting, and soft exhales of his victorious breath when he whipped. His free hand pet me, all over, while the strap fell. I shouted his name when he stroked between my legs, then moaned desperately when he pinched one of my so very sore nipples, then whined when he strapped and scratched his nails up a mark.\n\nI swallowed and made myself speak. \"Please strap me more, Sir.\"\n\nHe growled and paused to bite my shoulder in his approval, so that I gasped, and I watched him stand back, more to my front, holding the strap in consideration before he spoke softly. \"How fucking gorgeous you sound, asking me for it.\"\n\n\"Thank you, S-S-ir!\" I shrieked that last part when he definitely made things worse.\n\nBecause he strapped my pussy and I had the twisted thought that he really loved what I'd said to hurt me so much in reward. It was dark, so dark, the mindset I was in. I shook and he watched me, gauging.\n\nWhatever he saw made him strap me again and it was finally enough to make me break and close my legs to him, to make me shiver and stare at him, silently begging. He smiled and approached me, one hand grasping the chains that held the manacles, while he stroked the belt up my thighs, his face close to mine, and I couldn't look away. \"Open back up. You want me to keep having my fun, don't you?\"\n\n\"Y-yes, Sir. I'm sorry. It hurts.\"\n\n\"I know.\" He kissed me, shaking the chain of the manacles a little, and I moaned. \"It's supposed to, but that's a good thing, isn't it?\"\n\n\"Yes, Sir.\" I whimpered it in a cowering, pathetic voice, even while I spread my legs back for him, sniffling.\n\n\"Good girl. You stay open for Sir. And why is it a good thing that it hurts?\"\n\n\"Because the more it hurts, the more pleased you are.\"\n\n\"That's it.\" He stood back and snapped the strap so that I squealed, clenching my fists in the chains. \"Don't close yourself from me when I want to show you how pleasing you are to me.\" Somehow, it was a little easier to spread back open after I naturally cringed shut, once I'd surrendered to the fact that I wasn't going to safeword and that I wanted him to keep loving on me with his pain even if I didn't at the same time. It felt like giving in, giving up, and once that decision was made, it was easier to force myself back wide, at least a little. \"Sweetheart, you're lovely when you obey something so difficult. How much of a good girl you are for Sir.\"\n\nI breathed through the strap on my pussy, then grit my teeth when he started to alternate the stripes with blows to my thighs, and he was so good. He hit every spot he knew would be most tender, making sure to choose the places that would give me the most pain. I was just barely aware of answering him politely, \"Thank you, Sir. Please strap me more.\"\n\nBut he only gave me a few more after that and I was far gone, so far gone. The world felt like it had disappeared and I blinked at the ground, at the way my feet were braced firmly against the stone floor, studying all these things in a vague sense of surreal observance. It was that way a person might take stock of their surroundings when they have a moment, that dim check list. Nothing seemed to matter to me anymore except for the fact that he was making me suffer to show me his affection and I was supposed to take it. It was this head space that took over my world after having surrendered myself to the fact that I wasn't stopping him, that I wouldn't do that.\n\nI looked up at him when he embraced me again, his hand cupping my face in a way that felt more intimate than any other time the motion had been given to me. I was all too ready to lean into that caress, dazed and waiting, more helpless than I'd ever been in my life. \"S-sir?\"\n\nHe smiled, kissing me so that I moaned against his lips, and then moaned louder when he thrust his tongue between my lips, opening up for him. When he finally pulled away, he answered me. \"No more for you this time.\" I whimpered in a strange sense of wounded confusion and he stroked my hair. \"No, no, not because I don't want to. It's just not safe, beautiful girl. Besides, I think that display of obedience and surrender deserves a reward.\" I gasped when he stroked between my legs in the same way he'd been doing, my eyes going wide with how tender the flesh felt after his punishment on it, then squealed when he thrust two fingers inside of me, sobbing with how needy I felt. I twisted in my chains and he pulled away with a growl, releasing the cuffs around my wrists. \"Stroke my face,\" he whispered, his voice low and husky with arousal that he wasn't going to sate with me. And I felt that sense of loss that I wasn't going to get to give him that kind of pleasure, when my own pleasure had always been connected with the fact that my partner enjoyed things and got off with me. I had to work to remember what he'd said before, that I'd been giving him a desire he needed more.\n\nIt still gave me conflict, but it helped that he'd given me a command. I stroked his face, the latex a barrier between my touch on him, but his eyes closed and his lips parted with how much he loved it, and when he finally opened his eyes back, they blazed with heat. \"That's it. Wait, come here and sit on the edge of the table.\" He was more frantic with his motions than before, too, in the way that someone nearing orgasm would become more frantic with their thrusts against another person. I sat the way he indicated and then he tugged my legs wide and knelt in front of me so that I gasped. \"Stroke my hair.\"\n\nThat was easy to do when he eagerly pressed his lips to my pussy and sucked, then thrust his tongue inside of me so that I held onto him tight, grasping his hair more than stroking. But it seemed to be all the same to him, with the way he pulled back for a second to growl in a sense of horny ferocity, only to go back to eating me, swirling his tongue while I rode his face. I had to work to focus enough to fuel his latex addiction, had to work to remember to move my hands. I stroked down his jawline and the thrusts of his tongue turned wilder, stroked over his forehead and he scraped his teeth over my sore pussy lips so that I shrieked in fear and arousal, riding his face like a wanton. Jesus, I'd never lost enough of my shyness to behave like I did with him, but I couldn't think straight enough to feel any of it anymore, could only think that I needed more. The sounds of his sucking made me fiendish and the sight of his jaw working, along with the way he shuddered every time I stroked the gloves down his neck and shoulders, was the hottest fucking thing I'd ever seen in my life.\n\nI shouted in orgasm, riding his tongue, and he tightened his arms around my legs, holding me tight against him while he lapped up whatever wild amount of cum I poured for him.\n\nHe was already moving before I could even think straight, grabbing one of my hands and manipulating my fingers between his own, while I was still riding aftershocks of bliss, waves of it crashing through me. They intensified all over again when he thrust our fingers inside of me together, when I felt the latex and came all over again. \"That's what we like,\" he growled, and it was amused and greedy at the same time. He worked us together to fuel my bliss, his eyes blazing while he watched me.\n\nMy ears were ringing when I was starting to come down, when I was breathless. I stared into his eyes while he smiled wickedly, then whimpered when he gently pulled our fingers from me. It only got better from there, too.\n\nHe held my gaze and sucked my fingers between his lips, working his face until I got the gist and fucked my fingers in and out of his mouth, listening to him purr his pleasure around them.\n\n--------\n\nJackson\n\nI was screwed.\n\nIt seemed more clear after a second scene that I was genuinely getting some kind of emotional involvement with Essie, even more than the usual kind of attachment I had with playmates. And that was a problem. She was new and I didn't know her so well. Having emotions for someone I mostly knew in a physical way didn't bode well. There were too many potential factors for getting hurt when we likely wouldn't be compatible in some way.\n\nIt was really hard to think about that when I held her against my side, leaning against the dungeon wall with her with my shirt and vest off, while she stroked my chest and abdomen with latex. The blend of being soothed by the sleek feel and feeling control with the barrier between her touch and my flesh was heady in a delightful way, especially with that wicked pulse of unsated power rush in my veins. \"Can I tell you something?\"\n\nI opened my eyes and met her gaze, holding her closer. \"Anything.\"\n\n\"I... really like you, Jackson. I really like playing these games with you.\"\n\nWhich was dangerous for her with the direction I wanted to go in those games with her. Because I wanted to go to dark places. \"I'm glad, sweetheart.\" I stroked her hair back from her eyes, smiling at how sweetly she looked up at me. She had those doe eyes, guileless and honest. \"I love playing them, too.\" I hesitated, working up my courage. \"This comes with a warning. Playing like this with me goes in a... twisted direction.\"\n\nShe stroked her palm up my neck and I felt like a feline sadist, stroked into purring happiness. \"I want to do that. Please?\"\n\n\"Let me think about it, Essie. I've never had a regular submissive before, not in the way I... think about being with you. I know where it would go and I'm telling you it's something not light. Let's keep playing like this for a bit, is all I mean, and see how it goes?\"\n\nShe stared up at me, still with that sweet look and God, I was having evil thoughts of twisting an angel into corruption and liking it. I was thinking of her being inexperienced and teaching her in my way, fully my way, again. \"That makes sense. W-will you tell me where it would go, please, Sir?\"\n\nPlease strap me more, Sir. Hell, I'd tell her anything when she kept calling me that, when that's what I wanted to be to her. That... or that other word. Master. I was answering before I could catch hold of my wayward thoughts. \"I'd condition you to equate any pain I'd give you as an act of love. If I met you for a date somewhere around people, I'd hug you and pinch right here.\" I used my nails to cruelly cinch a sensitive spot against the side of her abdomen, a place where it would easily be acceptable to publicly touch her and where no one would know the real depravity behind the action. \"I'd do it when I kissed you, so that everything would start to run together with my hurting you.\" What was even better was how she whimpered with my pinching her so sharply even then. Her eyes glazed in a way that was a single nudge away from subspace and I had fantasies of keeping her on that ledge, so that any command would make her aroused for more and she'd fall so readily at my knees.\n\nWhich was the real reason behind my asking Christopher the question about being a Master. Because I really enjoyed the thought of keeping her one step away from ready obedience with every small gesture like that. Her eyes were wide when she answered, my sharp little love bite of pain still lingering in them even though I'd let her go. \"I like that thought, Sir.\"\n\n\"I'd keep doing it, too, so that eventually, if I didn't give you pain with a hug or kiss, you'd ask me why and you'd ask while genuinely craving me to make up for it.\" I had rampant fantasies of her starting to beg for erotic torment as my act of love.\n\nShe nuzzled close to me, a look of fear balanced with heated arousal in her eyes. \"Yes, please. I'd like to try if you wanted to.\" She smiled shyly. \"And I like the thought of going out with you.\"\n\nI rested my head on her hair, stunned at how easily I had imagined the thought of going on a date with her. Because that had been another part of it, the thought of taking her to eat or something, of talking with her. I even had thoughts of walking across the hallway to see her before she left for work, of being more.\n\nEvery last one of those fantasies were tinted with the thought of corrupting her in day to day motions, in casually meeting her where any boyfriend and girlfriend would and conditioning her there, too, so that it thoroughly affected her in even those normal places. Her laugh was a little shaky after a moment of cuddling close with me. \"It's a little strange for me in some ways, that you don't get off, I mean. I always placed a lot of satisfaction in making sure my partner got off, too. It used to give me problems, actually. Anxiety is a turn off and it gave me a lot of that when I needed them to be pleased.\" Her smile was shy, so that I had to smile, too. \"You make it clear that you're pleased with me, though, so it's only a little strange.\"\n\n\"That's another thing you'd get used to,\" I answered softly, thrilling to the way she shivered in a little fear of me. \"Eventually, you'd just know that suffering for me and being obedient while I have control is my orgasm. I don't want to press the release valve on the power trip, sweetheart. I like wanting to hurt you and I don't want to make the feeling stop with orgasm.\"\n\nI said it as a warning.\n\nBut she only shivered and cuddled closer to me, snuggling against me. \"Because you like giving your affection.\" And, God help me, but her voice was warm and happy about that fact.\n\nBecause I liked giving my affection. That was one way to put it. I felt sick in the head, horny off the thought of desecrating her. What was happening to me?\n\n \n"
    ],
    "authorname": "Payne_Hall",
    "tags": [
        "redhead",
        "mdom",
        "spanking",
        "bdsm",
        "submissive",
        "femsub",
        "fsub",
        "female sub",
        "male dom"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/silver-fox-pt-01"
}