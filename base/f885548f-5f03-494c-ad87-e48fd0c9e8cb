{
    "title": "The Mountain Ch. 07",
    "pages": [
        "Thanks so much for all your comments and encouragement. It's good to be back and I am so excited to be sharing another chapter with you. I want to give a big thanks to ACTX for being a thoughtful, no-nonsense beta reader for multiple chapters, including this one. Also thanks to audreydarling (check out her story, Identities, in this category!!) and ESK for pre-reading. Anything that works is due to their awesome support--the mistakes and mis-steps are my own. \n\nThe rest of \"The Mountain\" is written and I'm working on edits for the final three chapters. A warning--it ends on a bit of a cliffhanger, but I think the arc of the first story is resolved. And I'm working on a sequel!\n\n--\n\nPersephone insisted on cleaning the room before they left. She explained, with the tone of someone speaking to a small and somewhat stupid child, that this would create plausible deniability. \"If Warder finds out, I can tell him you talked me into taking you for another bath. That's not as bad as going outside. He'll probably only kill us.\"\n\nLucy let out a feeble laugh, but it died when Persephone just put a hand on her hip and studied her disdainfully.\n\nLucy swallowed her laughter. \"How long do we have? Do you know when he's coming back?\"\n\nIt was something she had wondered about. How well-informed Persephone actually was of Warder's movements.\n\n\"We have time,\" said Persephone, not elaborating.\n\nPersephone's housework was more meticulous than usual, but finally, there was nothing else to be folded or swept or shined. She nodded to Lucy, who jumped to her feet.\n\nPersephone didn't tie Lucy's hands: \"You'd be completely vulnerable, stupid.\"\n\nShe did, however, take her shoes as Lucy had suggested.\n\nPersephone also forced her to wear several layers topped off by one of Warder's jackets and a hat. Despite her lack of footwear, Lucy was actually sweating as Persephone surveyed her.\n\n\"Anyone who took more than a glance would know it was you,\" she said.\n\n\"Let's avoid running into anyone then.\"\n\nPersephone snorted. \"I am certainly going to try to do that. If we do see anyone, keep your mouth shut.\"\n\nLucy nodded. She wasn't going to risk saying anything now to keep the outing from happening. Luckily, Lucy had been able to slip the antenna into her pocket while Persephone was searching for the right clothes for the journey. It was buried now under several more layers, but Lucy knew she would have to ditch or distract Persephone anyways to do what she needed to do. She would deal with that problem once they were outdoors.\n\nThe hallways were fairly deserted, but not completely. Persephone had hidden her own hair, too, for fear that people would see her and discern the identity of her companion.\n\nThe halls narrowed and Lucy began to feel tired. She was out of shape after weeks of being trapped inside the mountain. They started to ascend and the slight but persistent incline added to her fatigue. The lights in the hallway became less frequent so that Lucy had to squint to see. At least the dim light meant they were more easily hidden. Persephone seemed to think so, too, because she picked up the pace and she actually spoke to Lucy.\n\n\"We're close. Stay to the right.\"\n\nLucy stopped short when Persephone led her straight into a dead end. The confinement put her on instant alert and she resisted the urge to look backwards in search of a clear escape route. It was possible that Persephone had only agreed to this plan as a safe way to get rid of Lucy. Lucy had believed that Persephone's loyalty to Warder protected her, but she didn't really know what the mountain people were like.\n\n\"Relax,\" said Persephone, seeming to read her thoughts. \"It's a door.\"\n\nShe reached for the wall and a lighted panel came to life, casting the hallway in a bluish glow. This time, Lucy did glance behind her, hoping that no one would see them.\n\n\"No one comes up here usually,\" said Persephone. She pressed her palm into the panel. There was a whirring noise and the wall ahead of them--which appeared to be solid stone--slid slowly open. It was dark on the other side, but a friendly, familiar kind of dark. And Lucy could feel actual wind on her face.\n\n\"I know you said you wanted to see the sun,\" said Persephone. \"But it's too late. It was now or never.\"\n\nFor a moment, Lucy wasn't thinking about her mission at all. She took a few tentative steps past Persephone, emerging onto a small stone balcony. Stars--real stars--glowed above her.\n\n\"You can't go back on our deal,\" said Persephone from behind her. \"It's still outside.\"\n\n\"It's perfect,\" said Lucy.\n\nIt was cold on the mountaintop--especially barefoot. She hugged herself and leaned into the wind grateful to feel cold on her own terms. Far in the distance, she could see the faintest lights--like stars, but softer. Lanterns, lighting the homes of the islanders. Beyond those lights, hidden by darkness, was the sea. She closed her eyes and wondered if the very faint rushing she could hear was more wind or, through some miracle, the waves.\n\n\"We should go back.\"\n\nLucy snapped her eyes open and saw that Persephone was still standing in the doorway, arms crossed. She was tapping her foot impatiently.\n\n\"I need a little more time.\"\n\nPersephone sighed but Lucy could tell that she wasn't yet at the point of forcing her. She knew that she should start looking for a way to set up the antenna, but she was still overwhelmed by the sensation of having sky overhead. She leaned her head back and looked at the stars, amazed by how close and how many they seemed from high up. Unbidden, the memory of standing with Warder in the empty Great Hall came to mind.\n\nHe had kissed her.\n\nNo, she reminded herself. You kissed him.\n\nShe understood now that Warder had somehow been trying to hurry their mating. Kissing him had sealed her fate. But why had she really done it? To placate him, certainly. To try to regain some semblance of control. To answer his challenge because he thought that she was too afraid to do it.\n\nBecause she had wanted to. Because he was beautiful. Because he had shown her the stars.\n\nLucy realized that her eyes were watering in the wind. She looked down, trying to get her bearings, but the tears kept coming. She sniffled and was surprised when a sob escaped her lips. She looked at Persephone in horror, swiping at her face with one bulky sleeve.\n\nPersephone looked uncomfortable. \"I'll give you a minute,\" she said. \"Two minutes. Then we have to go.\" With that, Persephone turned her back and walked a few feet past the door and back into the hall, giving Lucy some semblance of privacy.\n\nPersephone pitied her. The realization made Lucy want to cry harder. Worse, she realized that in her sadness, she longed for Warder. She could almost feel his strong arms encircling her, his large hands brushing away her tears. He would laugh at her for crying. He would reason with her, maybe, and then--\n\nDespite the cold, Lucy was starting to feel uncomfortably warm. She shook herself and checked on Persephone. She had said that Lucy could have two minutes, but it was just as likely that she could turn around at any moment. Lucy stepped a few feet away, just barely out of Persephone's view. She and Sheera had practiced setting up the antenna over and over again back home. They had trained to be able to do the job as quickly and inconspicuously as possible. They had never allowed themselves to really believe that they would be caught, much less so quickly. And their practice sessions had all taken place in sunlight as the intention had never been to try to sneak onto the mountain at night.\n\nThat, Lucy thought, choking back a laugh, had been deemed too risky.\n\nLucy unbuttoned Warder's coat and retrieved the antenna. She fit the pieces together quickly, relying more on feel that sight, praying that all those hours of practice would be enough. Sheera's father had long insisted that the trickiest part of the operation was to find a way to hide the antenna without allowing the signal to be completely blocked by the mountain. It helped that they were so high, but outside the balcony area that had obviously been carved into the stone, the mountain here was rocky, with a large peak jutting up to either side. It might not be the best place for the antenna, but it was the best chance Lucy was likely to get. Gently, she leaned over the front of the balcony and nestled the assembled antenna between some rocks. She was considering moving it when she felt a sharp tug on the back of her jacket.\n\n\"What are you doing?\" hissed Persephone.\n\nLucy whirled around, praying that Persephone could not see the antenna glinting softly in the moonlight.\n\n\"I was trying to see my town,\" said Lucy. \"I thought I could make out some of the lights.\"\n\n\"You're an idiot,\" said Persephone. Whatever pity she had felt for Lucy over her tears had obviously fled. \"Warder is going to struggle to keep you alive.\"\n\n\"A few more minutes?\" asked Lucy, taking in deep breaths of the mountain air.\n\n\"No. We have to get back before he does.\"\n\nLucy allowed Persephone to lead her back into the mountain. When the panel in the wall slid shut behind them, leaving the antenna safely on the other side, she almost sighed with relief.\n\nNow, she had to find a way to escape.\n\n#\n\nWarder watched on a small screen as Persephone led his mate down a deserted hallway. He had been waiting for something like this ever since he found the contraption that Lucy had hidden on the mountain on the day of her capture. What surprised him was that she had managed to rope Persephone into her plans.\n\nHe had made an unusual miscalculation when it came to Persephone. He had understood the the girl felt something for him, but he had believed it to be harmless, childish love--something that would fade when another man captured her attention. He hadn't minded her possessiveness because he knew her to be loyal.\n\nBut she had put his intended mate in danger. Tried to keep them apart when Lucy needed him--called for him.\n\nHe hadn't known if he would be able to master his anger. But Persephone seemed to have learned her lesson. And even now, her actions showed temperance and recklessness in almost equal measure. She should not have taken Lucy from his rooms by herself. But they were safe enough. And he had little doubt that the excursion had been his mate's idea. If Persephone was allowing herself to be influenced, perhaps she would content herself to the situation as it was.\n\nThe women slipped out of sight on the screen and Warder's fingers moved swiftly over the control panel as he changed the view. Persephone was hurrying Lucy back towards his rooms, pausing only when she heard footsteps in adjoining corridors. She had been smart enough to wait until dinner, when the majority of the mountain's denizens were ensconced in the Great Hall. He was almost grateful. Now that Lucy had made her move, he could confront her. She would learn that she could not keep her plans secret from him. They were mated--he knew her, understood her. He would have to punish her for sneaking away, but he would also show her that he could be merciful. And eventually, with time and proximity, she would reach for him again across their bond. Ask him--beg him--to take her to bed. With time, she would seek to earn his trust, like any member of his household, his army.\n\nIf he didn't feel patient--that was his weakness. An enjoyable one, even, coaxed into life by his desire for his mate. He could endure.\n\nThe image on the camera flickered and Warder frowned, adjusting the controls. The cameras weren't used frequently--they took a large amount of resources to run and there were other methods used to ensure that the mountain was secure. But something about the sudden disconnect between himself and his mate made him nervous. He fiddled with the controls again and blinked at the screen. Then, as realization dawned, he bit out a command, calling for his second.\n\n\"Rader, with me.\"\n\nRader flew into the room, solemn at his commander's tone. \"Yes, sir?\"\n\n\"The lights are down in the sector nine hallway. Six hundred feet. Send someone immediately.\"\n\n\"Yes, sir.\"\n\nLights. It had happened before, but there was always concern over the cause. Sometimes it was nothing--a damaged circuit or a flicker whose origin could not be determined. But this felt wrong. And his mate was there, in the darkness, invisible now on the cameras even as they continued recording.\n\nHe was halfway down the hallway, heading in her direction, when he heard the clang of steel on steel. Shouting. Screams.\n\n#\n\nThis is a code six. All areas, code six. Until further notice, code six. Please proceed immediately to your stations.\n\n\"Fuck.\"\n\nPersephone cursed loudly enough to be heard over the sirens. She grabbed Lucy's hand and looked up and down the hall. She started to run, dragging Lucy with her.\n\n\"Persephone! What's going on?\"\n\nAs if in answer, the voice sounded again.\n\nThis is a code six...\n\nThe rest of the message played and then after a few seconds, it started again on a loop.\n\nPersephone dragged Lucy around a corner only to pull her backwards out of the way at the last moment as a group of soldiers ran past, their weapons drawn. Lucy stifled a scream and pressed her body against the wall. \"What is this?\"\n\n\"We have to hurry,\" said Persephone. \"We'll be safe in Warder's rooms.\"\n\nLucy was afraid to argue. Anxiety was coursing through her. She realized, faintly, that not all of it was actually her own. As she ran, she attempted to separate out the feelings coursing through her.\n\nWarder.\n\nShe knew that he could hear the sirens and that he was worried for her safety. She hoped he didn't know that she was outside of her rooms.\n\nBehind that, there was something else. As if the mountain itself were anxious and speaking to her.\n\nRun. Run. Run.\n\nThere was a loud popping noise and Lucy hit the ground, convinced that she had heard gunfire. Persephone stumbled and fell next to her, cursing as her knee slammed into the stone.\n\nLucy realized that the noise had been light bulbs popping one by one, plunging half of the hallway into darkness.\n\n\"I'm sorry,\" she said while Persephone groaned at the pain in her knee.\n\n\"Just shut up,\" said Persephone. \"Let me think.\"\n\nLucy huddled closer to the stone wall, squinting into the darkness for fear of what might be out there. \"What does Code Six mean?\"\n\n\"Hostiles inside the mountain,\" said Persephone.\n\nLucy felt a wave of relief wash over her. \"Islanders?\" she asked, unable to keep the hope out of her voice.\n\nPersephone snorted. \"Idiots with a death wish,\" she said, getting to her feet. \"The old apartment is closer and I still have the key.\"\n\nLimping only the tiniest bit, Persephone grabbed Lucy's hand again and started dragging her in a new direction, almost immediately taking a turn. Lucy tried to loosen Persephone's grip. If she could run, she might be able to rendezvous with the islanders. Of course, there was just as good a chance she would run directly into a warrior...or seven.\n\nShe settled for keeping a close eye on her surroundings as they hurtled through the dark, hoping that if an opportunity came, she would be ready.\n\n#\n\nMiles hung back as his fellow islanders fought their way into the mountain via the door they had breached. It was one of the only visible doors into the mountain--an obvious, vulnerable point of entry. But after weeks of planning, they hadn't been able to find any other.\n\nMiles knew that his reluctance made him look weak, but he had a specific aim. The other islanders were here to get revenge. If they were able to rescue Lucy, they would. But hope that she was even still alive had faded. So, they would do as much damage as they could, try to take down warriors and, ultimately, set the mountain aflame, smoking the rest of them out to where archers waited in the trees surrounding the mountain.\n\nIf the plan worked, the islanders might finally conquer the invaders, take back their lives. But the plan depended on many factors and with the first steps an islander had taken into the mountain, the feeble protection of the treaty had been ended.\n\nSheera had said that the rebels were foolish. Maybe she was right. But Miles had intel that no one else did. He had a plan that no other islander knew.\n\nThe woman had found him in the woods one day when he was trailing Sheera through the trees. She had appeared out of nowhere, soundless as a panther, and cornered Miles against a tree, one hand over his mouth, the other locked painlessly but immovably around his neck, holding him against the tree.\n\n\"You're out of bounds,\" she purred.\n\nMiles had felt his lunch roil in his stomach. He threw up from fear and the woman took his hand away just in time, looking at him in disgust.\n\n\"I thought I'd captured a rebel, but you're nothing but a terrified child.\"\n\nThe derision in her voice reminded him of Sheera. Miles stood as tall and brave as he could when he answered her, pretending not to feel the sick that was coating his jeans.\n\n\"I am. I am a rebel, you bitch.\"\n\nThe woman had looked him up and down, a sneer on her face. \"Good,\" she said.\n\nAnd then she told him that Lucy was dead.\n\nAt first, Miles didn't believe it. But the woman explained that Lucy had been claimed by a fierce warrior. He had used her and discarded her, refusing her help when she fell sick within the cold of the mountain. She was gone.\n\nThen, as Miles's mind reeled with thoughts of Sheera, Lucy's family, the woman detailed the method through which Miles might seek revenge for what had happened to Lucy.\n\n\"Why?\" he asked, unwilling to trust one of the mountain scum. Even--or especially--one as icily beautiful as the stranger bringing news of Lucy's death.\n\n\"We are not all so cruel as the warrior who killed your friend,\" said the woman. \"We liked her. She was sweet. She did not deserve to die.\"\n\nSo Miles listened to her plans.\n\nHer friends, the warrior explained, would know Miles' face. They would ease his way if they could. But Miles needed to be swift. Brave.\n\n\"No one will suspect me,\" said Miles.\n\n\"No,\" the woman said. \"I don't think they will.\"\n\nAnd it was treason to plot with the warriors. But avenging Lucy--if she could no longer be saved, it was the next best thing. Her disappearance had sparked the renewed war between their peoples.\n\nMiles decided not to tell Sheera. He would wait until he could also promise her that Lucy had been avenged. And Sheera would know that Miles was the one who did it, proving once and for all that he was smart. That he was brave. That he was worthy of her, her quick mind and her beauty.\n\nInside the mountain, a sword flashed through the air and Miles screamed. Another warrior knocked the sword away. The warrior seemed to recognize him. \"Go, boy,\" he snarled under his breath. And then, to the warrior he had parried, \"we are to take as many of them alive as we can. That one seems no threat.\"\n\n\"He's getting away,\" snarled the other warrior, angry to have lost sight of his prey.\n\n\"Londin is down that corridor,\" said the warrior. \"He will catch him easily.\"\n\nBut if Londin was the terrifying, scarred warrior who Miles streaked past a moment later, the warrior just snarled and slapped Miles on the back, hurrying him on his way.\n\n#\n\nLights kept breaking around them. Lucy became used to the sound, barely flinching as she followed Persephone. Despite Persephone's injured knee, she was moving fast and Lucy struggled to keep up. She felt guilty for causing the injury. Yes, Persephone was her captor. But in some ways--in some ways Persephone seemed just as trapped as she did.\n\nPersephone changed course as another set of lights broke above them. Lucy felt shards of glass settle in her hair and she could smell a faint burning released as each light broke apart. Persephone turned again, backtracking down a different hallway and Lucy realized something.",
        "\"We're being herded.\"\n\nShe stopped short and Persephone nearly fell again. She tugged hard on Lucy's arm. \"Keep moving.\"\n\n\"Why do you keep taking turns?\"\n\n\"I'm trying to get us there as quickly as possible.\"\n\n\"You're staying in the light,\" said Lucy.\n\nPersephone tried again to drag Lucy after her, but Lucy resisted with all her might and Persephone only managed to move her a few feet.\n\n\"Come on.\"\n\n\"No,\" said Lucy. \"Wait. The lights. You're keeping to the light.\"\n\nPersephone looked uncomfortable. \"I don't like the dark.\"\n\nAs Persephone admitted it, the siren went silent.\n\n\"That doesn't mean it's over, does it?\"\n\n\"There would be another announcement.\"\n\n\"The lights...it's as if someone is illuminating exactly the path they want us to take.\"\n\nAs she said it, Lucy realized it sounded crazy. But--the islanders wouldn't be able to control the lights. At least, she didn't think so. There was no electricity outside the mountain. Even Sheera's father...\n\nSomething felt wrong.\n\n\"Never mind,\" she said. \"Let's go.\"\n\n\"No,\" said Persephone, chewing unconsciously on a fingernail. \"You're right. And the all-clear should have sounded by now. We should go that way,\" said Persephone, gesturing into the dark with a determined look on her face. \"Keep one hand on the wall. We can reach the apartment in five minutes.\"\n\n#\n\nWithout the siren, the hallways were oppressively quiet. All Lucy could hear was the sound of her own ragged breathing and Persephone shuffling quietly ahead of her.\n\nBefore, they had passed people every few moments. But the dark hallways were empty now.\n\n\"We're close,\" Persephone whispered.\n\nLucy nodded, even though Persephone couldn't see her in the dark.\n\nThen, the screaming started again.\n\nThis time, it hurt.\n\nLucy wrenched herself out of Persephone's grip and clasped her hands over her ears. She could hear Persephone calling her name in the darkness and then pulling at her, trying to make her get up. She wanted to respond, but the screaming took over. She curled into a ball and screamed back.\n\n\"Stop!\"\n\nThe screaming stopped.\n\nThe hallway filled with light. Lucy opened her eyes, shaking. There, at the end of the hallway, was the woman from the Great Hall.\n\nYsabel.\n\n#\n\nThey dispatched with the invading islanders embarrassingly quickly. Half of their force abandoned the attack when they saw warriors pouring towards them through the tunnels. The other half fought without discipline, made dangerous only because they were angry and panicked and had little to lose.\n\nWarder wasn't able to stop some of them from being cut down. His own troops had orders to take prisoners at any cost but their own lives. But it has been a long time since any of the warriors under the mountain had been allowed to lose themselves in battle. Some of them delighted too much in killing, appreciating the opportunity to show their skills.\n\nWarder used his own sword to stop a warrior from cutting down an islander who was begging on his knees. \"There is no honor in killing a man who has already been disarmed,\" he growled.\n\nThe attacker was Celon, head of a regiment of his own. He struggled to parry as Warder kept blocking his blows. \"Is this uncharacteristic mercy because an islander warms your bed, Warder?\" Celon managed through clenched teeth.\n\n\"Death might be the mercy once Hadren determines how to answer this rebellion. For now, we take prisoners when we can. Or do you feel you know better than our King?\"\n\n\"I feel our King would see things my way,\" said Celon. But he abandoned his attempts to murder the islander. Warder hauled the man to his feet in one hand and thrust him at a passing member of his own guard. \"Tie him up with the others,\" he said, swallowing his disgust as the man fainted.\n\nThe islanders forces were all but put down, with nearly every man either dead or captured. It would take time for the warriors to comb through all the tunnels, seeking out any last stragglers who might, through sheer luck, have found a way deeper into the mountain as they fled. But there was no doubt that the battle was won.\n\nGrowling, he barked commands to Rader regarding the sweep. Cenia, tying up a group of islanders nearby, rushed to Rader's side as Warder swept away.\n\nThere had not been time for the islanders to make it far into the mountain. It was the only thing that kept Warder sane as he thought of Lucy. He would know through the mating bond if she was truly in danger--Lucy couldn't reject that awareness they shared, even as she sought to deny their connection. But the lack of panic or fear from the bond didn't mean she was safe. Lucy didn't know all the dangers that lurked in the mountain.\n\nHe had responsibilities to attend to. The treaty had been broken. His home had been breached. But his first duty was to find his mate, ensure her safety. He broke into a run towards his quarters.\n\n#\n\nYsabel looked like she had that day in the Great Hall, except this time, her hands were not tied.\n\nShe was alone.\n\n\"Stay back,\" said Persephone. Her face was pale in the bluish light filling the hallway and her voice shook. \"Stay the fuck back.\"\n\nYsabel smiled, her eyes vacant. She kept moving forward, taking her time. She stumbled a little and caught herself against the wall.\n\nPersephone's fear didn't match Ysabel's demeanor. Persephone was at least half a foot taller than both Lucy and Ysabel and she had pulled her through the halls tonight without breaking a sweat. She could easily take Ysabel down. But she seemed terrified anyway.\n\n\"You were screaming.\"\n\nPersephone pinched Lucy's arm to get her to be quiet, but Lucy ignored her. Ysabel looked around the hallway, as if she was trying to determine the origin of the sound. Then, her gaze leveled on Lucy.\n\n\"I knew you could hear me.\"\n\n\"Why?\"\n\nLucy wasn't sure if she was asking why Ysabel had been screaming or why she had known Lucy would be able to hear her. It didn't matter, because Ysabel didn't answer. Instead, she raised one skinny arm in the air. A flash of light seemed to spark from her fingers, directly towards Persephone. Wordlessly, Persephone slumped to the floor.\n\nLucy fell to the floor next to Persephone, feeling for a pulse. It was there--Persephone had been knocked out.\n\n\"What did you do?\" Lucy asked.\n\n\"I don't like her,\" said Ysabel, shrugging one thin shoulder. \"I came to find you.\"\n\nLucy stood up, taking care to stand so that she blocked Persephone's prone form from Ysabel as much as possible. \"Why?\"\n\nYsabel flung her arms wide. \"Don't you want to escape?\"\n\nLucy's heart seemed to skip a beat. \"You can help me get out of here?\"\n\nAccepting the offer was risky, but Ysabel's hands had been tied that day in the Great Hall. She was a prisoner, too.\n\n\"Everyone is distracted by the attack,\" said Ysabel. \"There can be no better time.\" She frowned and dropped her arms. \"You wish to leave your mate?\"\n\n\"Yes,\" said Lucy without hesitation.\n\nYsabel titled her head to one side. \"He has marked you,\" she said. \"I can see it.\"\n\nLucy raised a hand to her neck where Warder had bitten her, realized that he had bitten that wrist, too.\n\n\"It doesn't go away, you know,\" said Ysabel. She turned her head to one side and brushed her long hair out of the way to show Lucy the mark on her own neck. The scar was old, but Lucy could still tell that the claiming had been brutal. The skin was puckered, shot through with red and white marks where the skin had closed back together. It looked as if Ysabel had been bitten more than once, up and down the side of her neck.\n\n\"I'm sorry,\" said Lucy. \"I'm sorry that you were hurt.\"\n\nIt seemed to be the right thing to say. Ysabel reached out, taking Lucy's hand in her own. Her hands were cool and thin and and surprisingly strong. \"Let us go.\"\n\n#\n\nWarder found his quarters warm--he was still getting used to that--and empty. The bed was made, the lights were dimmed. Persephone and Lucy had not made it back. He growled in fury, reaching out blindly and smashing one of the kitchen chairs against the wall where it shattered into splinters.\n\nHe marshalled his calm, focusing on his mate's scent, determined to follow her. He found her--the sweet, floral and citrus scent of her. But as he moved to follow her, he scented something else.\n\nSmoke.\n\nFaint, but growing stronger. And inside the mountain, with the precautions that they were forced to take, it would soon be enough to doom anyone nearby. The warrior's home was particularly vulnerable to fire and their response was characteristically ruthless. If a fire was not quickly contained, the ventilation system inside the mountain would seal off the area, starving the fire of oxygen--and dooming anyone trapped inside with it.\n\nEven as Warder moved to respond, he heard the soft whoosh of the vents closing, felt the heat that was more deadly than the nearby hot springs. Lucy might still be trapped in this sector. Lucy, but also--the children. Anyone in the nursery would not survive long.\n\nWith a roar of anguish, Warder ran. He would find the fire and subdue it. Then, he would get everyone out.\n\nWhen the children were safe--when Lucy was safe--he would find the warriors who had dared to burn his home and tear them apart.\n\n#\n\nYsabel led Lucy through the darkness. Each time footsteps came their way, Ysabel raised a hand and the lights around them burst apart, slowing the progress of anyone who might pursue them. It seemed Persephone was not the only one of the mountain people who was wary in darkness. Odd, for a people living under the earth.\n\nThey moved quickly and quietly and eventually, over the gentle slap of their bare feet against stone, Lucy heard running water.\n\n\"What is it?\" she breathed.\n\n\"An underground river,\" said Ysabel. \"It leads--\" she waved a hand \"--out.\"\n\nThey turned a corner and Lucy stared at the water spilling past them and disappearing, black as night, into a dark tunnel a long way below.\n\n\"Is it safe to jump?\" she asked. \"Or can we climb down?\"\n\n\"It's a tricky business,\" said Ysabel. \"As easy to fall and break your neck as it is to capture the current and escape.\"\n\n\"Have others--\"\n\n\"They've tried,\" said Ysabel, a too-wide smile on her face.\n\nLucy sensed that Ysabel was losing her nerve. To her mind, escape was worth the risk. \"I don't want to be trapped here anymore. Come with me, Ysabel. The islanders will take care of us. Of you. You wouldn't be a prisoner anymore. You won't have to be an omega anymore.\"\n\nYsabel looked at Lucy with something close to disdain. \"The islanders are prisoners,\" she said. \"And omegas are born. They cannot be unmade, only broken.\"\n\nLucy thought of the words she had whispered to Warder in the dark. \"One of us will break,\" she had told them.\n\nNeither of us are weak.\n\n\"Maybe we can't stop being--omega,\" said Lucy. \"But we can leave. Please, Ysabel.\"\n\n\"You know, it will happen to you, too,\" said Ysabel, ignoring Lucy's pleas. \"The longer you are with your mate, the more you will need him. It cannot be undone. And if he casts you aside, the pain will keep growing. It will eat you like a living thing. Living inside you.\"\n\n\"I won't let Warder cause me pain,\" said Lucy.\n\n\"You won't be able to help it,\" said Ysabel sadly. \"I could keep you from feeling pain like that.\"\n\n\"If we leave--\"\n\n\"Do you think Warder loves you?\" asked Ysabel.\n\n\"What? No,\" said Lucy. \"No.\"\n\n\"I think he does,\" said Ysabel. \"He could have mated any of the omegas here in the mountain, but he chose you. Was it because you are powerful or because you are pretty?\" Ysabel sunk suddenly to the floor, still clutching at her hair.\n\nLucy reached out a tentative hand to stroke her back. \"Ysabel, you can be free of it. Free of Hadren.\"\n\nYsabel whirled around, slapping away Lucy's hand. \"There isn't any way to get free!\" she said, her voice sharp. \"And now--with you here. What use am I to him if I can't make him powerful? He will abandon me.\"\n\n\"What do you mean?\" asked Lucy. \"Don't you want to break the bond?\"\n\n\"Only death can do that.\"\n\nLucy took a step back, the roaring in her ears louder than the rushing water. Only death. Was she truly bound to Warder until death? Even if she escaped, would he follow her? Would she desire him, dream of him? \"It doesn't matter, Ysabel. We can run. We can fight it. Perhaps, if we get far enough away--\"\n\nYsabel didn't seem to hear her. \"Hadren will be angry. He will be so angry. But I have survived his anger before. And he loves me. He does. It's only that he is afraid.\"\n\n\"Of course--of course he loves you.\"\n\nYsabel looked up at Lucy, desperation in her eyes. \"You think so?\"\n\n\"Of course,\" she said, trying to keep her voice soothing.\n\n\"Then you understand? What I must do?\"\n\n\"We need to go, Ysabel--\"\n\nThe waterfall beckoned. Deadly. But--a chance.\n\nYsabel noticed the direction of her gaze. \"He will think that's how it happened,\" she said. \"That you were trying to escape.\"\n\n\"What?\"\n\nYsabel lifted her hand and the light that had injured Persephone glowed between her fingers. Lucy had convinced herself that it was a magic trick of some kind. But this was no trick. The light was a living thing in Ysabel's hands, thrumming with power. Ysabel stretched it like taffy, seeming to get lost in the beauty of it. Lucy backed a step away, keeping her eyes on Ysabel.\n\n\"Warder will still be a threat. But without you around, Hadren will be able to kill him. All you have to do is try to escape. And then...\" Ysabel raised one hand into the air, that strange power of hers dangling from it like a spider on a string. She tossed the bit of light over the edge into the water where it blinked and disappeared. \"Splash,\" said Ysabel.\n\nSeveral things happened at once. Ysabel lunged at Lucy. Lucy dodged and at the same time, Warder rounded the corner. He roared at the sight of Ysabel standing over his mate. Lucy bit back a scream. He was covered in soot--darkness personified.\n\nYsabel turned at Warder's approach. \"What are you doing here?\"\n\n\"Do not stand between me and my mate, Ysabel.\"\n\n\"I am more powerful than you,\" said Ysabel. She raised her hands, light crackling between them once more.\n\n\"Is he the one who put you up to this?\" snarled Warder. \"Grace? It doesn't matter, Ysabel. Whether it was Hadren or not, I'll kill him for this.\"\n\nYsabel screamed, inside and out. Lucy heard it with her ears and with her mind, felt it in her bones, burrowing under her skin. The sound of the water dimmed to a distant whoosh, so that the whole world was screaming and pain.\n\n\"I'll kill you!\" The screams resolved into words. Dark, deadly promises. \"I'll kill you,\" screamed Ysabel. \"I'll kill you!\"\n\nAnd then she raised her hands. Not towards Lucy this time, but towards Warder.\n\nLucy stood. She hated him. Of course she did. But she couldn't watch him die. And if he did die, she thought selfishly, Ysabel would surely kill her, too.\n\n\"Ysabel!\"\n\nThe woman turned and she flung the light she has been going to throw at Warder in Lucy's direction. The final push towards her \"accidental\" death.\n\nLucy flung her hands up, as if she could ward against it. And as she did, a matching light sparked forth from her own fingers. Terrified, she flung it away as Ysabel had done. The light flew, blinding her, filling the dark hallway.\n\nYsabel screamed, but the sound was different this time. For a moment, she seemed to glow and then she was truly on fire, her body convulsing. She fell to the stone floor, what was visible of her skin horribly burned.\n\nThe light faded and all Lucy could hear was her own breathing. She stared at Ysabel's prone form. She couldn't tell if the woman was dead or only badly injured.\n\n\"Lucy, stop!\" Warder's command cut into her shock.\n\nIn her panic, she had moved close to the edge of the waterfall. Too close. So close, that Warder was afraid to reach for her for fear that she would shy away from him and fall.\n\n\"Is she dead?\"\n\n\"I don't know,\" said Warder. \"It doesn't matter right now. You were defending yourself.\"\n\n\"I was defending you,\" said Lucy. \"Did you--did you make me do it?\"\n\nSlowly, Warder shook his head. Then, carefully, keeping his eyes on her, he knelt on the stone floor as if he could somehow make himself less terrifying. Less imposing. He reached out his hand.\n\nIt wasn't that his attempt didn't approach the desired effect. But Lucy was scared of other things than Warder for the first time in a long time. She was scared of Ysabel, even as she lay prone on the floor. She was scared of that light.\n\nShe was scared of herself.\n\n\"Come away from the edge, Lucy,\" said Warder. His voice was strained, but forceful. He tried again, and this time the command was almost a purr. \"Come to me, Lucy.\"\n\nLucy stared at him, her heart pounding. Her eyes darted to Ysabel, still unmoving. She wanted to go to Warder. Wanted him to explain what the hell had just happened. Wanted him to soothe her and comfort her and protect her from the horrible things inside the mountain. Things that had just become stranger and darker and more--just, more than she had ever even thought to be afraid of.\n\n\"Come, Lucy.\"\n\nShe wanted to. Wanted him.\n\nShe looked behind her to judge the drop and the moment of indecision was enough. Instantly, Warder grabbed her, dragging her towards him by his jacket and then gathering her up so that her back was against his chest.\n\n\"No,\" said Lucy, but she found herself clinging to his arm where it circled her waist and she wasn't sure if she was trying to escape or trying to hold on.\n\n\"Be calm,\" said Warder, leaning down and speaking into her hair. \"I will explain. I will protect you.\"\n\nAt his words, she did try to break free of his arms, but he only held her tighter, dragging her further from the drop. When they had retreated a safe distance, he allowed her to push him a few feet away, watching her closely as she paced in front of him. \"Are the islanders here?\" she asked, threading her fingers unconsciously through her hair.\n\n\"They breached the mountain, but the threat has been contained.\"\n\n\"Are they dead?\" asked Lucy, looking him straight in the eyes. \"Did you kill them?\"\n\nWarder scowled. \"Most were taken prisoners. Some are dead.\"\n\n\"You killed my people,\" said Lucy.\n\nWarder grabbed her again, his hands painful where the gripped her upper arms. She felt the way that he marshalled himself from further violence, felt his grip relax as he gained control of his anger. \"They attacked us,\" Warder said. \"They broke the treaty. Even so, I saved as many as I could.\"\n\nLucy was silent, trying to find a new argument, a new way to sift through all that had happened. Before she could, Warder pushed her behind him, trapping her against the wall.\n\n\"Hadren,\" she heard him say, his voice rumbling through her body where he was pressed against her.\n\n\"You've killed her!\" Hadren's voice was wild. Even with her view mostly blocked by Warder's body, Lucy could see the way that the hallway lit up with that same strange light. And somehow, she knew that Warder must have deflected it, because Hadren shouted in frustration.\n\n\"Not dead yet,\" Warder said, his voice a low growl. \"Not if you can still do that.\"\n\nLucy felt Warder move, deflecting another blow. He was forcing her so close to the wall that she could barely breathe. She pressed her hands against his back to steady herself, to remind him that she was there. He shifted slightly and Lucy's hands slid away.\n\nThey were wet.\n\nIn the next flash of light, she saw that they were red with blood. Warder's blood. She screamed and Warder reached for her. \"You're bleeding,\" she said. She ran her hands over his armor, searching for the wound.\n\n\"It is not a fatal wound,\" said Warder. \"I want you to run. Quickly, while Hadren is down. When this is finished, I will find you.\"\n",
        "\"Warder--\"\n\n\"Go!\" He commanded, his voice terrifying. He pushed her towards the hallway. As she went, she saw that Hadren was on the ground, but struggling already to rise. \"Go!\"\n\nHis voice was powerful enough to propel her forward. She ran aimlessly, unsure of her direction. After a moment, she realized that glass was crackling under her feet--she was traversing the hallways where Ysabel had broken the lights. Lucy wondered if she could find Persephone--if she was even still alive. Warder's blood was heavy on her hands, sticky as it dried. Would he really survive the fight with Hadren?\n\nShe did not love him; she did not want him to die.\n\nA figure in uniform came around the corner and collided with Lucy. On instinct, she tried to change direction, fearing harm from any warrior except Warder. The warrior made a noise deep in her throat and reached for Lucy's hands as she tried to run past.\n\n\"You're bleeding.\"\n\nLucy stopped short. She knew that voice. It was like a ghost from her other life, outside the mountain. Because it couldn't really be--it couldn't be--\n\n\"Sheera?\"\n\nThe warrior dropped their hood, revealing Sheera's bright hair. \"Luce.\"\n\n\"What are you doing here?\" asked Lucy. \"It's not safe! Are you with the rebels? Are you--\"\n\nSheera cut her off with a crushing hug. \"You're alive.\"\n\n\"Yes,\" said Lucy. \"And the blood--isn't mine.\"\n\nSheera pulled back and surveyed her, confirming for herself that this was true. \"Good,\" she said. \"I'm not a rebel, but I knew what they were planning. I found a way in and now seemed like as good a time as any. While they're distracted.\"\n\n\"You can get us out?\"\n\n\"Yes,\" said Sheera. \"You're going home.\" "
    ],
    "authorname": "MariLeigh",
    "tags": [
        "omegaverse",
        "captive",
        "mate",
        "warrior"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-mountain-ch-07"
}