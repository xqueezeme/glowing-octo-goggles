{
    "title": "Just a Little Magic Ch. 13",
    "pages": [
        "JUST A LITTLE BIT OF MAGIC Chapter 13\n\n1. BREANNA Atlanta, Georgia January 9, 2001 January 14, 2028\n\n2. ELODIE Brugges, Belgium February 8 February 13\n\n3. VICKY Singapore March 9 March 13\n\n4. SOPHIE Montreal, Quebec April 7 April 12\n\n5. IRENE Limassol, Cyprus May 7 May 11\n\n6. SANDRA Taipei (Taiwan) June 5 June 10\n\n7. ASHLEY Chicago, Illinois July 5 July 9\n\n8. MIRELLA Sao Paulo, Brazil August 4 August 8\n\n9. KAVIA Vadodara, Gujarat September 2 September 6\n\n10. ESTHER Johannesburg, S.A. October 2 October 6\n\n11. TAMARA Tampa, Florida November 1 November 5\n\n12. RI Osaka, Japan November 30 December 1\n\n13. JANINE Toronto, Ontario December 30 December 31\n\n*****\n\nEsther was attracted to me. Lillian's spell hadn't failed - it just couldn't overcome Esther's convictions. I couldn't see a way over that hurdle. Nor could she - she didn't really expect me to come back.\n\nBrazil, and Mirella took my mind off that problem for a while. What can I say? It's pretty hard to remain gloomy during an entire week of spectacular sex with one of the most attractive women on the planet.\n\n- \"I fired Mauricio.\" she told me.\n\n- \"Long overdue.\" I said. Janine would be happy, at least. \"Who's going to be your manager, then?\"\n\n- \"Who should it be? What do you think?\"\n\n- \"Is there anyone you trust more than Carla?\" I asked.\n\n- \"You can read my mind!\" she exclaimed.\n\n***\n\nToronto. Janine and Lillian.\n\n- \"Okay. So you propose to her.\" said Janine. \"Problem solved.\"\n\nI was horrified. \"I can't marry Esther!\"\n\n- \"Why not?\" said Janine.\n\nLillian waved a hand at her. Then she turned to me. \"If that's what it takes to save her life ... could you not? It would only be temporary, Peter.\"\n\nI couldn't look at her. Was that what we'd come to? Marry Esther, just so that I could impregnate her? Marry her, only to leave her afterwards? Wouldn't we be better off if I just told her the whole story? Compared to rape by my father, would it be so horrible for her to have sex with me?\n\nOr could she come to understand that it would be a marriage of convenience only - that we would conceive a child to prevent a demon from raping and impregnating her?\n\nIt was clear to me, too, that she was part of a package deal: if I wanted Esther, I'd also be taking on Grandma and little Sunny. I couldn't just walk out on them afterwards. But getting married would also mean ... saying goodbye to my hopes with Sophie.\n\nWhat could I possibly say: 'I'm sorry, Soph - but it's only temporary. I'll divorce her in a year or two, and then we can be together'?\n\nHad I been indulging myself in completely impossible dreams? How could I possibly end up with Sophie if I had 13 children by 13 different women? Or if I was already married to one of them?\n\nWhat a ridiculously tangled web we'd weaved.\n\n***\n\nI spent my birthday with Sophie. She treated me like a king. I was 24 years old, and trying to maintain 12 relationships - in other words, I was cheating on the woman I loved. I just couldn't make sense of it.\n\nIn the back of my mind was the crazy timetable of my life: in less than 9 months, I was going to have to impregnate Breanna.\n\nA month after that, I was going to have to deflower and impregnate Elodie.\n\nIt was just so ... ludicrous. I didn't know how to compartmentalize these contradictory aspects of my completely messed-up life. I was a loyal and attentive boyfriend - except for the fact that I'd been having sex with 9 other women (and was trying to add two more to that list).\n\nI was desperately seeking a solution to the Esther problem, while thinking how to please my beautiful girlfriend.\n\n- \"You've got that look, again.\" said Sophie.\n\n- \"Huh? Which look?\"\n\n- \"The 'I'm a thousand miles away right now, but if you leave a message, I might get back to you' look.\"\n\n- \"I'm sorry.\"\n\n- \"Problem? Or problems? Anything I can help you with?\"\n\n- \"You know - the magic show. Our routine. Lillian and Janine.\" That was close enough to the truth - or as close as I could go. I wanted to tell her everything - but I was afraid of a repeat performance of my feverish vomiting. Even when I simply contemplated the idea of telling her, I began to feel nauseous, and sick to my stomach.\n\n- \"Are you still enjoying it?\" asked Sophie.\n\nSophie was so damned beautiful, and so smart ... she could cut to the heart of the matter just like that.\n\n- \"I still get a kick out of doing the show. And I feel great when we come up with a new routine, or a new element that works. It's just ... the business of it. The travel ... being away from you all the time ...\"\n\nSophie smiled, and leaned over to softly kiss me on the cheek. \"You say the sweetest things.\"\n\n- \"I can't see myself doing this forever.\" I said.\n\n- \"Oh?\"\n\n- \"A few more years, tops.\"\n\n- \"And then?\"\n\n- \"Then I have to find something that doesn't involve being on the road all the time. I'd rather stay in one place. Preferably some place closer to you.\"\n\nSophie softly stroked my earlobe.\n\n- \"How close?\" she asked.\n\n- \"Like ... in the same room?\"\n\n- \"Good answer.\"\n\n***\n\n- \"We're in the home stretch, Peter.\" said Lillian. \"You can't afford to lose your focus.\"\n\n- \"Keep your head in the game.\" said Janine.\n\nIt's a game, now? A matter of life and death for 13 women, one of whom I was in love with - and many more that I cared about very much. How that was possible, I had yet to figure out. I still didn't know how to approach Elodie and Esther, either.\n\nLillian had organized a whirlwind tour of Europe - 6 weeks. Sammy didn't understand.\n\n- \"Wouldn't it be better to tour Western Canada? The Midwest states?\" he said. \"Heck, even a tour of Ireland and the UK makes more sense than this schedule.\"\n\n- \"International profile.\" said Lillian.\n\nLater on, Sammy talked to me alone. \"What's going on, Pete? Does Janine have a boyfriend in Paris, or something?\"\n\nWith remarkable self-control, I managed not to spit my coffee all over him.\n\n- \"What makes you say that?\"\n\n- \"Dude - this tour doesn't have enough dates. It's more travel and tourism than anything else. We could make more money doing the same number of shows in Southern Ontario.\"\n\n- \"I'll talk to them, Sam. But I think they're determined to do another world tour. I'm hoping that ... after next year, things will settle down.\"\n\n- \"Pete. Seriously. You can't keep letting Lillian and Janine make the business decisions. You know what I'm saying?\"\n\n- \"I know.\"\n\n***\n\nLillian wanted me to concentrate on Elodie (and Christiane). I saw them twice while we did shows in Belgium, and then twice more after our series of shows in Paris.\n\nThey invited me back to their apartment, to share a couple of bottles of wine. It was a cozy place. I complimented them.\n\n- \"You really like it?\" said Elodie.\n\n- \"Of course. I love the neighbourhood, and I'm quite fond of the tenants, too.\"\n\nChristiane laughed aloud. I enjoyed their company - they knew that. I'd also let them know (without making a big deal about it) that I found both of them attractive. I'd never made anything remotely like a pass at them. We didn't talk about sex at all.\n\nBut a compliment here, an observation here ... they laughed a lot, with me, but it wasn't hard to tell that both Elodie and Christiane enjoyed my company - and considered me a friend.\n\nTonight, though ... there was something different. A different atmosphere. Elodie was a little tense. Christiane was chattering even more than usual. She was building up to the main event, slowly approaching her goal.\n\n- \"We've been thinking - Elodie and I. It's ... it may sound strange to you, but ...\"\n\nThank goodness for mind-reading. I got a pretty good idea of what Christiane was going to say before the words came tumbling out of her.\n\n\"We've been thinking. That ... well, that we might like to have a child.\"\n\n- \"Or two.\" said Elodie.\n\n***\n\nMirella came to Paris again. Since Sammy was back at home, there was no need to be anything more than moderately discreet. She could stay overnight in my hotel room (as she did the first night), or I could stay in hers (as I did the second night).\n\nI was on my way back to my own room when my cell phone went off. I checked to see who it was.\n\nKavia.\n\nOh, well. I answered.\n\n- \"Hello, Kavia. How are you?\"\n\n- \"A little tired, but very happy. You'll never guess where I am!\"\n\n- \"Where?\"\n\n- \"Paris!\"\n\n***\n\nKavia's plane had just landed. She would need a while to get through customs, and then to come into the city. I told her which hotel I was at - what else was I supposed to do? Then I ran to find Janine and Lillian.\n\nCooler heads (than mine) quickly prevailed. They came up with the rudiments of a plan. Lunch with Mirella, while Janine waited for Kavia, and took her to my hotel room, where she could shower, change, and refresh herself.\n\nI returned from lunch with Mirella, and went to my room, for a joyful reunion with my Indian paramour. She was almost giddy with anticipation, which resulted in a frenzied fuck that almost went out of control (Kavia banged her head on the headboard, and nearly gave herself a concussion).\n\nWe both showered, and went off to our evening performance. I explained to Kavia that I had to meet, afterwards, with a French journalist, who wanted to interview Janine and me.\n\n- \"Oh - that's so cool.\" said Kavia. \"Can I come?\"\n\nI had to shake my head. \"Pretty dull stuff. It'll all be in French, too. But I can be back by midnight or so ... and I don't have a show tomorrow night.\"\n\n- \"Mmm ...\" she said. \"Maybe I'll be able to stay awake until you get back.\"\n\n- \"Or I could wake you up ...\"\n\n- \"You'd better.\"\n\nThe show went well. Lillian passed me a little blue pill, backstage. Then she took charge of Kavia, and got her back to my hotel room. I returned with Mirella (who'd also been at the show), and managed to convince her that we should go to her room, instead of mine.\n\nShe was a little more demanding than I'd expected. Mirella was flying home the next day, so that this would be our last time together for a while. She was happy to have a passionate fuck - the first time. But then Mirella wanted 'proof of my devotion', and a prolonged cuddle before our second bout.\n\nShe rode me slowly, teasing us both, bringing me to the edge of orgasm, and then pulling back just before I could come. Tantalizing ... and delicious. Kavia will just have to wait, I decided. Mirella had her way with me, before allowing us both to climax, almost simultaneously.\n\nIt was well past midnight before I could disentangle myself from my Brazilian lover. She didn't complain when I went to shower in her bathroom. She murmured an endearment when I kissed her cheek, but was too sated, or too tired to ask me to stay.\n\nI went back to my own room - just as tired, just as sated, but still erect - to find Kavia asleep on my bed. She was lying face down, wearing only some wispy lingerie. That helped me to decide on just how to wake her.\n\nShe barely stirred as I began to press light kisses on her lovely ass. She moaned a little when I spread her butt cheeks, and began to stroke her pussy lips with my finger. Still lying on her stomach, Kavia raised her hips a little, to give me better access.\n\nShe groaned aloud when I lay down on the bed behind her, and began feasting on her with lips and tongue.\n\n- \"Oh, yes ...\" she grunted, when I finally penetrated her from behind.\n\nKavia was the recipient - and beneficiary - of my best efforts, from roughly 2 A.M. until just before dawn.\n\nAfter another shower, I was just barely presentable enough to have breakfast with Mirella, and then to see her off as she and Cousin Carla took a taxi to the airport.\n\nThen I went back to see Kavia.\n\n- \"This is fun.\" she said. \"I want to travel with you for a while.\"\n\nShe came to Frankfurt with us - and came in Frankfurt (multiple times). It wasn't until after Vienna that she could be persuaded to go home.\n\n- \"I love travelling with you.\" she said. \"We should do this again.\"\n\n- \"That's a wonderful idea.\" I said.\n\n***\n\nIrene met me in Athens. We spent three days there, and then took a ferry to Crete. She was an amazing tour guide, providing just enough information to keep me interested, without inundating me with facts.\n\nBut when I was genuinely intrigued, Irene had stories to tell me. She was growing ever more comfortable with me, secure in the knowledge that I was coming back to see her - and that I would continue to do so.\n\nShe was so sad when I had to leave, that I promised to return for an extended stay.\n\n- \"I'd like to stay longer. For ... a month or so, next time.\" I wasn't sure that I could pull that off - or when. I was really just thinking aloud.\n\nThat made Irene happy - but also sad. She was worried about our long-term prospects. How could we truly be together if I could only be here for a week every four to six months?\n\nI didn't have an answer to that unspoken question.\n\n***\n\nJapan. Ri. She did her best to blow my mind again. She'd dyed her hair a curious shade of burgundy (which didn't really suit her), and she dressed for me in some sort of silky mesh that made it look like she'd gotten an especially freaky Escher tattoo. She really wanted to impress me, so that I would come back more often.\n\nTaiwan. Sandra was ... sweeter. Kinder. She asked me if I was open to the idea of her coming to visit me in Canada.\n\n- \"I've never travelled very far. But I'd like to see your country ...\"\n\nJust like Ri, Sandra wanted to see me more often. She knew how far it was from Toronto to Taipei. She was actually thrilled that I'd made the trip three times - but she was worried that I'd grow tired of her. She was also wondering what she could do to connect us more firmly - to guarantee a future between us.\n\nVicky spent another night in my hotel room. I'd been intoxicated by her tight, sweet little body the first time. She was no less lovely - but I could've wished that she would show just a tiny bit of ... initiative.\n\nIt was like playing the piano; the piano responds - sometimes beautifully - but it doesn't touch you back. I did my best to make it worthwhile for her. She had two orgasms, at least. And as we lay cuddling, I read her mind: she was thinking about how we (she and I) could expand her parents' garden, and perhaps set them up with a few more chickens and pigs.\n\nMy next stop was India, where Kavia was up to her old tricks. I met a Bollywood actress, and a semi-famous golfer. She was showing me off, but also hoping that I would be impressed, and therefore see her as a prestigious mate.\n\nShe had also commissioned someone to do full horoscopes of the two of us, to prove that we were fully compatible because our stars were so were aligned.\n\nI saw the astrological charts, and surprised Kavia by vomiting all over them. There was next to no warning: I saw the diagrams and dates, felt nauseous, and almost immediately spewed up my lunch.\n\nShe apologized. I apologized. But I also repeated my warnings about her attempts to show me off, like some prize bull. Kavia felt properly remorseful - for the rest of that day.\n\n***\n\nEsther was surprised to see me again. I'd kept in touch - a letter, and a phone call. But she was still astonished when I actually turned up on her doorstep with gifts for Grandma and Sunny - and for her.\n\n- \"I don't understand, Peter.\"\n\n- \"You were perfectly clear, Esther. You told me the truth. And since then, I've been trying to reconcile my feelings for you with ... your feelings.\"\n\n\"I think that you know that I desire you - as a woman. And I suspect that you feel the same, to some degree ...\"\n\nThat was putting it mildly. Esther was hot for me. But she couldn't break her moral code, regardless of how tempted she was. Nor would she abandon her mother or her daughter.\n\nThe ball was definitely in my court - I just wasn't ready to return it - not quite yet.\n\nWas that unfair? No. Was it teasing? Maybe (a little).\n\nEsther wasn't going to abandon her principles. The question was ... could I?\n\n***\n\nBrazil. Tampa. Atlanta. Chicago. I got back to Toronto at the end of the summer.\n\n- \"Rest and refit, partner.\" said Janine.\n\n- \"Almost there.\" said Lillian. Her plan: I would make one more world tour. No shows - this would be more like a 'holiday' for me. 12 destinations; one more connection with each of the 'women in question'. That's how we would finish 2027.\n\nOn January 14th, 2028, I would have to impregnate Breanna.\n\n***\n\nI snuck away to Montreal for a weekend, to see Sophie.\n\nThe day I got back to Toronto, I was absolutely stunned. Sitting outside the door to the apartment I shared with Sammy, was ...\n\n- \"Ashley?\"\n\nShe stood up. \"Hey, Pete. I thought ... I thought I'd surprise you. Sorry. I probably should have called.\"\n\nWhat could I do? She looked so vulnerable - she'd driven from Chicago to Toronto - and she was still unsure of her reception.\n\nI took her in my arms. \"I can't believe you're here.\"\n\nText sequence #1: Sammy - 'what are you doing tonight?' - 'staying at Trish's. Why?'\n\nText sequence #2: Janine - 'help!!!'\n\nIt had taken Ashley considerable courage to do this. She had gone after guys that she'd fucked before, only to discover that they wanted nothing more to do with her. But she wanted me - and she suspected that I really did like her.\n\nI didn't have it in me to disappoint her again. Besides, I was going to have to get her pregnant in July of the next year. She only had a simple overnight bag with her - I put it in my room, and then took her to dinner.\n\nWe went to a Polish restaurant, where you could get enormous schnitzels, bigger than the plates they served them on, plus big steins of beer.\n\n- \"You're not mad at me? For showing up unannounced?\"\n\n- \"No, Ashley. Would I have preferred that you warn me that you were coming? Yes. But I'm really pleased to see you.\"\n\n- \"I'm glad. I was afraid ...\"\n\n- \"You shouldn't be. You're a spectacular woman. Any guy would be lucky to be with you.\"\n\nAshley had driven 8 hours to come see me - and she'd been uncertain of her reception. But once I'd welcomed her to my apartment, there was no doubt where we'd end up. So I went down on her, and brought her to two orgasms before I would even let her touch my cock.\n\nBy the time I actually entered her, she was fit to be tied.\n\n- \"Oh, my God!\" she cried out. \"I love you!\"\n\nShe didn't mention it, afterwards. I think that Ashley was a little embarrassed. But I'd heard her - quite clearly - and I was more embarrassed than she was.\n\n***\n\n- \"Got to get you ready for the final push.\" said Janine.\n\nIt was late September of 2027. I had just enough time for one more whirlwind world tour, to see each of the 12 women. Then ... the Year of Decision. I would have to impregnate one woman every month.\n\nBreanna in January. Elodie in February. Vicky in March.\n\nSophie in April.\n\nI was ... a mess. Conflicted. Confused.\n\n- \"You need a spa treatment.\" said Lillian.\n\nShe booked a day for me. Massage. Manicure. Pedicure. The full treatment. I showed up at the spa treatment center at the appointed time.\n\nGina did the massage. I felt like a wet noodle after that.\n\n- \"You just relax, Mr. Grey.\" she said. \"Our technician will be in shortly, for your mani-pedi.\"\n\nI did as she asked. I was so relaxed, I was practically asleep.\n\n- \"Hi.\" said the technician. \"I'm here for your ... oh, shit.\"\n\nI rolled over. To look up into a face I knew so very well.\n\n- \"Danielle?\"\n\n***\n\n- \"I can get you another technician.\" she said, immediately.\n\n- \"Danielle?\" My ex-girlfriend could hardly look at me.\n\nShe was terribly embarrassed to be in the same room with me. I tried to put her at ease.\n\n\"Hey - it's okay. There's no hard feelings ... I mean, I understood that you had hard feeling towards me. But ... I'm still curious. What happened with us? Was it something I did? Or didn't do?\"",
        "Danielle looked at me as if I was demented. She shook her head.\n\n- \"I'm not talking about this with you.\"\n\n- \"I wish you could.\" I said. \"I'd really like to know.\"\n\n- \"Really?\" she said, her voice just dripping with sarcasm.\n\n- \"Really. I have no idea what I did wrong. Please, Danielle: can't you just tell me?\"\n\n- \"Are you for real?\"\n\n- \"I don't understand.\"\n\nDanielle came to a decision. \"Stay here.\" she said. She went to have a word with her boss. When she returned, she led me through the back of the shop, out into the alley behind.\n\n- \"I'm just taking a cigarette break.\" she said.\n\n- \"I didn't know you smoked.\"\n\n- \"I don't.\"\n\nShe hesitated, staring down at the ground.\n\n\"Look, Pete ... I liked you. A lot. I was starting to ... really fall for you, you know?\"\n\nI didn't interrupt her. Telling Danielle that I'd been in love with her wasn't something that she needed to hear right now.\n\n\"But your sidekick really freaked me out.\"\n\n- \"Sammy?\"\n\n- \"No! Janine.\"\n\n- \"Janine freaked you out?\"\n\n- \"Remember your birthday party? Janine told me that you were a player - 'a serial womanizer', she called you. I couldn't figure out why your friend would say that about you. I didn't get the impression that she was all that worried about how I felt.\"\n\n\"Then she asked if she could come over to apartment, to talk to me. She started telling me this long story about your security, my security, and the dangers of celebrity. Prying journalists, stalkers ...\"\n\n- \"When was this? Why didn't you tell me?\"\n\n- \"Just before you went on tour - your American tour. And what was I supposed to tell you? That your partner is a weirdo? I didn't understand the point she was trying to make, anyway. All the while she was talking, I just more and more uncomfortable. I dunno - at the time, it was just ... weird. It sounds stupid, but I got this weird feeling that she was like, trying to brainwash me, or something.\"\n\n\"I told her that I was tired. She wouldn't stop talking. Finally ... I kind of freaked out, and asked her to leave.\"\n\n\"Three weeks later - you were in the States - she sent me an email. I didn't even know she had my address. It was a short message, with an attachment. She wrote 'This will only take a moment of your time, but you need to see this. It's about Pete.' I had no idea what it was, but I clicked on the video attachment.\"\n\n- \"A video? Of what?\"\n\nDanielle took a deep breath. \"Of you. Having sex with some red-headed skank with pierced nipples and a tramp stamp. Then the location changed, and it was another scene of you having sex - very energetic sex - with another woman.\"\n\nI was stunned. I hadn't cheated on Danielle - ever. Nor had I ever recorded myself having sex. But red hair? Pierced nipple and tramp stamp? That sounded like Daisy, the friend of Janine's that she'd fixed me up with after Michelle - my first girlfriend - broke off with me.\n\n- \"I don't know why I just told you all of that.\" said Danielle. \"I don't even know why I'm out here with you. You make my skin crawl. You still sound just like that guy I once knew - but obviously I didn't know you at all. I still have those videos, you know. Every time I think about you, if I feel the slightest regret, I take them out and watch them again.\"\n\n- \"I'm so sorry that you had to go through that, Danielle. But I never -\"\n\n- \"You're sorry? That I found out? Or that you got caught? And you never meant for me to get hurt? Is that it?\"\n\n- \"No.\"\n\n- \"Just go away. And please - stay away. Don't come around here again, alright?\"\n\nThat said, Danielle went back inside. I didn't follow her.\n\n***\n\nI confronted Janine.\n\n- \"Why the fuck would you do something like that?\"\n\n- \"To protect you.\"\n\n- \"To protect me? From what?\"\n\nJanine sighed. \"We were approaching a delicate part of the plan, Pete. How would you have been, with Ashley and Breanna and Tamara, if you'd been thinking of Danielle? What if she wanted to come on tour with us? Or if she showed up unannounced, for a surprise visit - like Kavia, in Paris? What if she'd gotten suspicious, and started following you?\"\n\n- \"Danielle wasn't a stalker, Janine.\"\n\n- \"You never know. Are you sure that she'd never get jealous? What if she saw you with one of the 12? Or worse - what if she decided to go public, and tell everyone that she was your girlfriend? All we would need would be for one of the 12 to find out - and we'd have been sunk. Would they be willing to bear your child if they found out that you had a girlfriend? Did you ever think of that?\"\n\n\"FOCUS, Pete!\"\n\nI wasn't happy with her answers. They sounded plausible. Reasonable, even. I should've been agreeing with her.\n\nBut why did it hurt so much? I had to turn away, because tears were beginning to well up in my eyes. Janine had deliberately torpedoed my relationship - and she'd lied to do it. Daisy had been before Danielle. I had no idea who the other woman was, or when the video was taken. But I'd never cheated on Danielle.\n\nI knew why we were doing this - how could I forget it? We were trying to save 13 women from being raped and murdered.\n\nBut did I have to sacrifice any chance at happiness in my own life as well?\n\nAnd why did Janine have to lie to me?\n\n***\n\nI got Sammy to sit down with me, and have a few beers.\n\n- \"Tell me something, Sam - and the truth, please: does Janine freak you out a bit?\"\n\n- \"Are you fucking serious?\" he said.\n\n\"Dude: I'll never forget some of the things she did for me. I'd probably still be a virgin, if she hadn't brought Penny in to be my Prom date. And the girls on the road? Those two French girls, in the same room - at the same time - with Janine fingering herself in the corner? Highlight reel shit.\"\n\n\"But if you want the truth? That is one cold, manipulative bitch. She had you eating out of her hand for years. I get it; she's amazingly hot. I don't blame you, man. But I didn't like the way she treated you. Still don't.\"\n\n\"Worst part is, I don't get why she does it. She should've been building you up - not tearing you down. Sorry, Pete - that's just how I feel.\"\n\n- \"No, it's all good, Sam. I asked you for the truth. Thanks.\"\n\n***\n\nLillian, Janine and I embarked on the 'whirlwind tour'. There were only three months remaining before January 11th in the Year of Decision - the night that I was going to impregnate Breanna.\n\nSammy knew that I would be away ('to recharge my batteries'). Sophie thought that I was going on retreat with Janine, to isolate ourselves and come up with some new material.\n\n- \"I could go with you, if you want.\" she said.\n\n- \"You could?\"\n\n- \"I've saved up a few days. I could come and join you for a week or so.\"\n\n- \"You're an angel.\" I reminded my girlfriend. \"But what's Janine going to do, while I'm pulling off your underwear with my teeth?\"\n\n- \"Umm ... read a good book?\"\n\n- \"Save your days, Sophie - we'll use them on a real holiday. I'll take you wherever you want to go.\"\n\n- \"Mmm. I'll hold you to that.\"\n\nJanine and I did no shows at all. This was 'Around the World in 87 days' tour, to make sure that all was well with my 11 other relationships.\n\nEurope first. BRUGGES. Elodie and Christian were delighted to see me, especially because they'd been talking about me for the past few months.\n\n- \"We're going to get married.\" said Christiane. \"We would love it if you could be here.\"\n\n- \"Congratulations! That's wonderful!\"\n\nBelgium has very liberal laws - it was really the perfect place for a pair of lesbian vegetarian environmentalists who wanted to get married. But that wasn't the end of their revelations.\n\n- \"Elodie wants to have a child.\" said Christiane. \"And we'd like you to be the father.\"\n\n- \"Christiane wants to have a child, too.\" said Elodie. \"And we want you to be the father.\"\n\nLillian was probably even happier than the 'happy couple'.\n\nCYPRUS. Irene was very emotional when I arrived. She'd been spending far too much time thinking about our future together. It wasn't very difficult to read her mind.\n\nOn my second night in Limassol, I decided to tackle her fears head on.\n\n- \"Irene? Can I ask you something?\"\n\n- \"Of course.\"\n\n- \"I wonder ... could you ever picture us ... together? In the future, I mean?\"\n\nIt wasn't a proposal. But it was darn close, and she knew it. Irene was elated.\n\nI felt like a charlatan.\n\n***\n\nJAPAN. Our Far Eastern 'holiday' began well. Ri was over the moon to have me back again. She'd also been doing some thinking.\n\n- \"Perhaps I could come to visit you, next time. In America.\"\n\n- \"Canada.\"\n\n- \"Yes. I could come to see your home.\"\n\nTAIWAN. Sandra had been thinking as well.\n\n- \"Do you think I could find work in Toronto?\" she asked.\n\n- \"You're thinking of moving?\"\n\n- \"To be closer to you. Yes, I am.\"\n\nSINGAPORE. Vicky came back to my hotel room. I must say that I did enjoy her lovely body, even if she didn't reciprocate. She would suck my cock, if I put it in front of her face, but that was about it. She did have a spectacular ass, though.\n\nWe went to visit her parents again. That was when the full-court press began. Vicky's father showed me the edge of his property, and pointed out all of the land nearby that was for sale, or potentially available.\n\nVicky's Mom fed me, and regaled me with tales of how her beautiful daughter had turned down a host of suitors - waiting for her true prince.\n\nINDIA. Kavia was getting desperate. She'd never had a long-term relationship; now that she wanted one, she had no idea how to go about it.\n\n- \"Relax, Kavia. Stop trying to impress me with your social connections, or the pedigree of the last guy you fucked. You're with me, now.\"\n\n- \"What does that mean?\"\n\n- \"I'm not with you because of your family. I couldn't care less who they are. I'm with you because you're very attractive, and willing to fuck me on the beach. I like you because you have a great imagination, and because you go out of your way to try to please me.\"\n\nShe got it. She recognized some of those same traits in me.\n\n***\n\nJOHANNESBURG.\n\n- Suck it up, Pete!\"\n\n- \"Janine!\" said Lillian, sharply. \"This is a difficult decision for Pete.\"\n\nThe two women - my mentors - gave me a little space. But there was no relaxation in their attitudes. They expected me to come through - to take one for the team.\n\n- \"You have to.\" said Janine.\n\n- \"There's no other way.\" said Lillian.\n\nThat was why I went down on one knee, and asked Esther to marry me. It wasn't the way I would have asked Sophie ... but I did it. I presented the traditional little box.\n\nEsther was shocked.\n\n- \"Peter ...\"\n\n- \"Will you marry me, Esther?\" I said.\n\nShe hesitated. She couldn't quite believe that I was doing this.\n\n\"I know what I'm asking.\" I said. \"I'm asking you to let me help you look after your Mother - and Sunny, too.\"\n\nShe was off-balance. Esther hadn't expected anything like this.\n\n- \"I ...\"\n\n- \"You don't have to answer today.\" I said. \"Take your time. Think it over.\"\n\nEsther needed three days. Then she gave me her answer.\n\n- \"Yes, Peter. I will marry you.\"\n\nWe chose the 3rd of October. It was nearly a full year away - and one day after her birthday. It was also the day that I had to impregnate her.\n\n***\n\nMy life was essentially over.\n\n- \"It's not so bad.\" said Janine. \"Not too many guys would be crying about it, if they were in your place.\"\n\nLillian shot her another look, and shook her head. \"You're doing this to save her life, Peter. To save her daughter from your father's evil plot. Remember what we're trying to achieve here.\"\n\n- \"I know.\"\n\n- \"And in time, we'll be able to let them all know what you've done - and why it had to be done. Then you can step back, and re-evaluate.\"\n\nBy 'in time', Lillian meant in a few years. By 'step back and re-evaluate', she meant divorce Esther, and get on with my own life.\n\nBut why marry her, and then break her heart a few years later? That sounded like what my real father had done to my mother - and to me. How could I foil his machinations by adopting his methods? Fight fire with fire? Except that innocent people are the ones who get burned.\n\nI'd been thinking all along that I would somehow come out of all this successfully, with all the women safe (though pregnant) - and that I would walk away with Sophie.\n\nBut we'd have a child. And I'd have 12 other children, by 12 other women. I kept shaking my head, trying to wrap my brain about this crazy idea. Why had I ever accepted to take this on in the first place?\n\nObviously, I'd never thought it through this far. And now that I was trying to, it was just too late, and too big for me to deal with. The mental effort was too much for me. I ended up sleeping through the rest of the flight to Brazil.\n\nMirella looked great. Her long black hair seemed thicker and more lustrous than ever. She was just a spectacular woman, in so many ways. I smiled, but she wasn't fooled.\n\n- \"What is it, Peter?\" she said. \"You seem ... troubled.\"\n\n- \"It's nothing. I'm very pleased to see you.\"\n\n- \"No - something is weighing you down. You can tell me - you know that, don't you?\"\n\n- \"I would never burden you with my little troubles, Mirella.\"\n\n- \"You wouldn't? But isn't that what friends are for? To share your successes - but also to help you deal with the reverses?\"\n\nI didn't know how to answer her. I'd never really considered her as a friend. Lord knows I should have. I was having sex with Kavia - whom I didn't even like. Then a couple of women - like Ri and Breanna - that I didn't have strong feelings about either way. Hell, I was going to marry a woman that I barely knew.\n\n\"You're my lover.\" she said. \"But you've been a friend to me, too. You saved me from that photographer. You also helped me to finally move on from Mauricio, and to take Carla as my manager - which has turned out to be a very good decision.\"\n\n\"You've supported me, and advised me. Won't you let me do the same for you?\"\n\nI was at a loss. Mirella had given me her company, and her body. Now she was offering me ... friendship? It seemed to be something even more valuable than what we already had.\n\n- \"I'm ... honoured.\" I said, choking a little.\n\nI couldn't tell her, of course, what was on my mind. I couldn't even make up a plausible story. All I could do was promise to tell her one day, when I'd worked it out in my own mind. Mirella gave me a great gift: she understood.\n\nWe didn't make love that night. She held me close, and comforted me. She asked nothing of me, but gave me what she thought I needed.\n\n***\n\nBy the time I got to Tamara, in Tampa, I had recovered my equilibrium. It was a good thing, because Tamara was having a minor existential crisis.\n\nShe was almost in the final year of her PhD. program. If all went well, she'd be finishing just be before Christmas of next year. That meant that she had to start thinking about where to apply for a job. She had to consider life after academia.\n\nShe was wondering if that life was going to include me.\n\nI knew that her birthday was on the 1st of November. I also knew that on the 5th of November of next year, she was going to conceive a child, thanks to me.\n\n- \"I'm mobile, Tamara.\" I told her. \"Wherever your best option is, I can be based there. Don't limit your opportunities because of what you think I need. We can work with whatever decision is best for you.\"\n\nWe hadn't discussed marriage, or even a permanent relationship, but now I was holding out that possibility.\n\nTamara wrapped her long legs around me, and clung to me fiercely as we made love.\n\n***\n\nAtlanta. Lillian came to dinner with Breanna and me, playing the part of my friend in Atlanta. While I was in the washroom, Lillian told Breanna just how smitten with her I was with - and that I was thinking of 'popping the question' sometime soon.\n\nI let Breanna know that I'd be back in Atlanta in early January, and that I was hoping to spend some 'quality time'. My buxom black lover leapt to the predictable conclusion.\n\nShe tried to smother me with affection that night. In her mind, she was busy contemplating life as the wife of a celebrity: the talk show interviews, the fashion magazine articles, the attention ...\n\n***\n\nChicago was the final stop on our tour. Ashley was still in the process of changing. She was still a 'partier', if no longer a slut. She was also very easy to get along with.\n\n- \"I'd like to come see around your birthday - maybe spend a couple of weeks with you.\"\n\n- \"Won't you be on tour?\"\n\n- \"No.\" I said. \"I was thinking of taking a holiday. You want to go on vacation with me? Could you get the time off?\"\n\n- \"Yeah ... I mean, sure. Where would you want to go?\"\n\n- \"Where would you want to go? My treat, of course. Paris? Hawaii?\"\n\n- \"Really?\"\n\nAshley was very affectionate that night. She cried, too.\n\n\"Nobody's ever been this nice to me.\"\n\n- \"Shh ... you deserve it.\"\n\n***\n\nLillian and Janice gave me almost a month off. Late December and Christmas could be mine. After New Year's, we would have to concentrate on Operation Breanna - the beginning of the Year of Decision.\n\nI saw Sammy and Trish. He was actually a little frosty with me - I couldn't blame him, after the way we'd cold-shouldered him for the last couple of tours. Trish had to kick him under the table a few times to get him to loosen up.\n\nThen I went to Montreal. Sophie was just as perceptive as Mirella had been; she immediately recognized the black cloud hovering over me.\n\n- \"What's wrong?\"\n\n- \"I'm okay.\"\n\n- \"You most certainly are not. And don't go all quiet on me - what is it?\"\n\nI didn't think that I could fool Sophie. I didn't want to, either - but my last two efforts to tell her the truth had failed dismally (one of them in vomitous ruin). I decided to skirt 'round the truth, and see if I could get away with that.\n\n- \"It's ... complicated.\" I began. Sophie just stared at me, waiting semi-patiently.\n\n\"You know that I love you.\"\n\n- \"And I love you.\" she said, with a mild frown. \"That's not what's bothering you.\"\n\n- \"No. I've been thinking ... about the future ... and ...\"\n\nShe didn't interrupt my faltering little speech.\n\n\"I want us to be together, Soph. I want you more than anything. But there are things going on ... things I can't even begin to explain. I don't even know where to start ...\"\n\n- \"Your career?\" she said.\n\n- \"Partly.\"\n\n- \"Janine?\"\n\n- \"Janine?\"\n\n- \"You're not quite over her, are you?\"\n\n- \"No! Soph - it's not about Janine. I mean - not in that sense. We haven't been ... ah, intimate ... since before I met you.\"\n\n- \"Really?\"\n\n- \"Absolutely.\" Oh, this was dangerous territory. I didn't want her to ask me how many women I'd been with - that was a ski slope to perdition.\n\n\"I've been thinking about ... our future. You and me. It's just ... there are things I have to do. Things I'm committed to. Janine is part of that, but not in any romantic sense.\"\n\n\"You're the only one I want. It's just ...\"\n\nI was digging myself a deeper and deeper hole. Sophie rescued me.\n\n- \"Not this year? Is that what you're trying to say? Pete - I'm not sitting here wasting away, waiting for you to commit. If you haven't noticed - I have the same problem. I have a very demanding job, in a city that I love. I'm not ready to move, either.\"\n\nShe leaned forward, and placed a very soft kiss on my cheek.\n\n\"We're good. Time will solve this one.\"\n\n***\n\nOperation Breanna almost didn't get off the ground. The woman in question contacted me right after New Year's.\n\n- \"Hey, Babe. Can we postpone your visit? My Dad wants to come see me that week.\"\n\nJanine cursed a blue streak. Lillian immediately booked a flight to Atlanta.\n\nBreanna called me a couple of days later: \"Sorry Babe - Dad had to cancel. We're still good for the original dates, if that's okay with you.\"",
        "I showed up in Atlanta on a Monday - the 10th of January, 2028. Breanna would be raped and impregnated by my father on the 14th. I was going to beat him to the punch by seducing and impregnating her on the 11th.\n\nShe was in tip-top form. She'd bought some new clothes for my visit, and in anticipation of a pretty substantial declaration on my part. She was expecting a proposal, or some sort of commitment. She'd gone so far as to take Wednesday off work, just in case Tuesday night turned out to be legendary.\n\nWe had a quiet night on Monday - me tired from my flight, her from work. She fucked me before we went to sleep, but it was more the opening act, or the feature film before the main event that we both expected on Tuesday night.\n\nShe went off to work Tuesday, with a big smile on her face. I'd told her that I needed to do 'some shopping', but that I would take care of dinner, too.\n\nLillian dropped by in the afternoon, to give me a new outfit for Breanna, along with an expensive diamond necklace.\n\nBreanna came home from work looking a little tired.\n\n- \"Rough day?\"\n\n- \"You have no idea.\" she said.\n\n- \"Why don't you take a bath.\" I said. \"I'll make you a drink, and you can tell me about it.\"\n\n- \"What about dinner?\" she asked.\n\n- \"I can have it ready in 30 minutes. Bath first - and a drink. Let's get you freshened up, and relaxed. How about a foot massage, while you tell me about your day?\"\n\nShe accepted my directions, and climbed into a hot, sudsy tub. I had to admire the way the soapy suds clung to the lower slopes of her breasts. I handed her a margarita.\n\n- \"You're spoiling me.\"\n\n- \"Hardly.\" I said. \"You deserve the very best.\" Including a full helping of my baby batter tonight. No condom - and you'll be all for that.\n\n\"So tell me - what went on today?\" I waited for her to tell me about her tough day, working in animal control for the city of Atlanta.\n\nBreanna sighed, and lay back in the hot water.\n\n- \"You have no idea. People are nuts, whenever there's a full moon. But the dogs at the shelter? It's crazy ... they howl, and jump around. They say that the full moon affects people the same way - and I believe it.\"\n\n\"My friend Shelley - she works at the hospital - it's their busiest night of the month. People do weird shit when there's a full moon. You ask cops, or teachers ... people just go do stupid things when the moon is full ... I'd hate to work in a mental hospital, you know ...\"\n\n\"Where you going?\" said Breanna.\n\n- \"Just checking on dinner.\" I mumbled.\n\nI left the bathroom like a zombie. My steps led me into Breanna's living room, with its large picture window. I looked out, into the gathering dark, and saw it - the full moon.\n\nThere it was, in all its glory.\n\nI don't have the greatest memory. I wasn't much of a student, back in school. But I couldn't possibly have forgotten what Janine and Lillian had told me, all those years ago.\n\nMy father, Robert Clifford, was going to rape and impregnate 13 women on the nights of 13 consecutive full moons, all in the same year. These women, all of magical bloodline - all born on the night of a full moon in 2001, would give birth to daughters.\n\nRobert Clifford would murder them all, and steal the 13 girls, who he would raise as a super-powerful coven of witches.\n\nExcept that it was all bullshit.\n\nI was here with Breanna, on the 11th of January - on the night of the full moon. Janine and Lillian had lied to me: they'd told me that the full moon fell on the 14th.\n\nIt was all a lie. My father wasn't coming.\n\nI was Robert Clifford. The demon was me.\n\n*****\n\n<br >\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magic",
        "magician",
        "nerd",
        "seduction",
        "harem"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-13"
}