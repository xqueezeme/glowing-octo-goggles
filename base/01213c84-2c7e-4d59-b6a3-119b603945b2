{
    "title": "The Nurse and the Nanny",
    "pages": [
        "To the real life Merri: this story is dedicated to you. Your encouragement to write this story down, and your kind words about the rest of what I've written mean more to me than you'll ever understand.\n\nTo everyone else: this is a different sort of story for me.\n\nIt's something I've been working for a long time, going back several years. \n\nIt's about sexual emotion as much as actual sex, so be patient. \n\nIt's a flashback story, that takes place in 1996. Writing it that way was important to me because there are several elements to this story that are based on actual events in my life. \n\nAs with most things that I write this story takes place in a happy alternate reality where people don't worry about std's or the need for birth control. \n\nFeaturing:\n\nMerri: A twenty-nine year old nurse who hires me as a nanny.\n\nSabrina: a fictionalized version of myself at age twenty, where I really was an awkward dork who worried about her sexual interests, orientation, and identity. \n\nAs always I enjoy your comments and private messages here on Literotica, but my emotions about this relationship are very real, so please be nice if you can.\n\nIf you're reading this in September of 2021 check my profile for a chance to submit kink ideas for a future Emily/Natalie story (part of the Friday Night Delight/Natalie's House series if you're interested).\n\nIsabellaEmily\n\n~~~\n\nHello. \n\nI'm Sabrina. Let me tell you the beginning of a story.\n\nIt was the fall of 1996. I had just spent the past two years attending community college after graduating from high school. \n\nI was twenty years old and I still lived at home, with my mother and father. Even though most kids my age loathed living at home, I didn't mind it for the most part. \n\nMy parents never imposed a curfew or asked a lot of questions about what I was doing or who I was with. I'd discovered that as long as I had a job, was working my ass off with a full course load and wasn't being a selfish slob around the house that they were pretty easy to get along with.\n\nThe only area of my life where I yearned for more privacy was my masturbation life. \n\nAt that point it wasn't a sex life. Other than masturbation, I had no sex life. I was socially awkward, and much more into horror movies, science fiction and writing poetry than I was anything else. \n\nAs a result, I hadn't had many dates, and the guys who had asked me out had given me the impression they were much more interested in their own orgasms than mine. \n\nI hadn't yet discovered that there are plenty of guys and girls who find dorks to be quite attractive, so I was very much a sexually inexperienced and frustrated wallflower.\n\nSo my sex life consisted entirely of masturbation. I had my own room of course, and my parents always knocked before entering and very much respected my privacy. \n\nBut I had to learn to orgasm quietly, and I really didn't have a place good enough to hide anything good, like a sex toy.\n\nI'd discovered masturbation when I was eighteen, and by the time I turned nineteen I was an aficionada of self-pleasure. \n\nI used my fingers, the handle of two different hairbrushes, my showerhead, an electric toothbrush when no one was home to hear it, and any other phallic shaped item I could find. \n\nI also spent hours with my legs wrapped around a body pillow, simultaneously humping it, clutching it in ecstasy, and biting it to keep from screaming through orgasm after orgasm.\n\nI even discovered an affinity for some kink, and explored that as frequently and as carefully as I could.\n\nBut as I happily fantasized about kinky sex and a variety of partners and experiences, I also struggled with extreme shyness, and extreme shame. \n\nI didn't have anyone to talk to about that stuff, and I secretly feared that some of the stuff I was interested in was abnormal. \n\nAnd I even feared that I was abnormally fascinated with the kinky things that would be considered normal by the people I knew. \n\nSo I kept my sexual interests to myself, and focused on my classes. And on reading. And on using our primitive dial up internet connection to explore my sexuality in private.\n\nIn the fall of 1996 right after my twentieth birthday, one of our old neighbors from down the block came to see me about a babysitting job. \n\nShe and her husband had lived next door to us for a few years, but they'd divorced, and she'd sold that house and moved about five miles away into a small split-level house. Her former babysitter had just left for college out of state, and she looked me up. \n\nHer name was Meredith and at twenty-nine she was nine years older than me, but we reconnected quickly and were immediately comfortable with each other. She worked as a nurse in at the local hospital and was gone from late afternoon until after midnight most nights, so she needed someone to make the kids dinner and get them to bed. \n\nI accepted the job and would get to her house a few minutes after the kids got off the school bus every afternoon. \n\nAs soon as they said goodbye to their mom, I'd get dinner started, find something around the house that needed done like laundry, vacuuming, or dusting, and then feed the kids, help them with homework, play games with them, watch tv, and then chase them to bed. \n\nAfter two weeks Meredith insisted that I begin to call her Merri. She explained that she'd always spelled it that way to be different from all the other 'Mary's' that she knew. \n\nShe gave me a key to her house and announced that she was changing my job title from 'babysitter' to 'part-time nanny' because of my insistence on helping with cleaning and other household stuff. \n\nSince she worked until well after midnight, I would often sleep for a few hours on her sofa, and then she'd wake me up when she got home so I could drive back to my parents' house and my own bed. \n\nOn one particularly rainy night she woke me up and gave me an extra blanket, insisting that I just stay on the sofa until morning. After that staying the night on the sofa and then heading home early in the morning became the norm for a few weeks. \n\nAnd then one Monday when I got there, she told me that she'd moved her bedroom downstairs to what had been a game room off the family room. The previous owners had put some money into it, putting in a full bathroom and hot tub down there. \n\nSo she christened that the new 'master' bedroom, and splurged on herself and purchased a new waterbed and all new bedroom furniture. \n\nShe offered me her old bedroom upstairs as a place I could stay whenever I wanted an uninterrupted night of sleep, or the weather wasn't cooperative. \n\nShe let me keep a change of clothes in the closet, and since her old bedroom was the old master bedroom, it had its own bathroom I could use if I needed to shower while I was there.\n\nWe fell into a very comfortable routine. Having my own space upstairs made it easier to fall asleep after the kids were in bed, and I got in the habit of staying over a few nights a week. \n\nThe worse the weather, the more likely I was to just plan on staying the night, and with the ability to bring a change of clothes and shower there in the morning, I could leave for classes right from there.\n\nMy parents didn't mind this arrangement at all, if I let them know in advance when I would be staying over so they didn't worry. \n\nMerri seemed like a complete grownup to me, and I often had to remind myself that she was closer to my age than to my mom's age. \n\nAs time went on, I got more and more comfortable with her, and came to regard her more as an almost older sister than anything else. She would ask me about the social aspects of college, and about my dating life (which was nearly non-existent), and she gave me pointers on makeup and clothes. \n\nIf I didn't have class the next day, or if she had the next day off, I'd sometimes be awake when she got home, and we'd sit up and talk for an hour or more. \n\nOccasionally if she'd worked overtime, she'd get home on Friday evening just after nine p.m. and those nights were often like a slumber party, with the two of us sitting in her dark living room and talking and giggling until almost dawn. \n\nI found I could use her as a sounding board, asking questions about dating and boys. \n\n\"You know you can ask me anything.\" She'd said one night, as we sat on opposite ends of her couch sipping hot tea in the light of a flickering candle. \n\n\"I guess so.\" I'd replied.\n\n\"I mean it.\" She said. \"When I was your age, I had no one to talk to about dating, or guys, or sex or orgasms or kissing or anything like that. So, if you ever have something you want to talk about, or ask about, no matter what it is, just let me know.\"\n\nThat exchange stuck with me for weeks, largely because I was so worried about my sexual interests. \n\nWhile the internet in those days wasn't what it would soon become, I used it to read all about the things I was interested in. \n\nI read all about oral sex, both giving and receiving. I spent hours touching my swollen clit and wondering what a tongue would feel like flicking over it. \n\nI licked my fingers after touching myself and wondered what it would be like to taste my own arousal on a hard cock after it had been inside me. I wondered if another woman's aroused clit would taste different than my own did on my fingers. \n\nI read all about giving blow jobs. I wondered endlessly what a male's cum would taste like, and what it would feel like to have a hard penis ejaculate in my mouth.\n\nI wondered if another woman would really be able to lick my cunt better than a man could.\n\nI would masturbate with the handle one hairbrush in my cunt and the other in my mouth, pretending two different cocks were feeling pleasure from my body at once.\n\nI learned that I wasn't alone in my sexual interests. But I worried about the intensity of my masturbation sessions. \n\nI sometimes would make myself orgasm two different times in one night, and I'd do so while using a variety of fantasies and imagined scenarios involving both real people and made-up strangers. \n\nAnd those fantasies also included an entire menu of kinky sex acts that I was sure most people my age had never even considered or heard of. \n\nI worried that I was masturbating too much.\n\nI worried that I was putting too much imagination into it, and that somehow, I should be putting that energy into real sex, and if I couldn't find real sex I should wait in frustration until I could.\n\nI would sometimes hike into the woods by myself in the summer so I could be undressed and masturbate in the warm summer sun, choosing my locations carefully so I wouldn't be caught. \n\nIn those moments of pure lust I would pretend that I was masturbating in front of a partner. \n\nOr a stranger. \n\nOr a crowd. \n\nI worried that I was somehow sexually broken because I not only enjoyed those things but needed to do them. And I worried about the fact that every time I swore that I would quit I'd end up right back in the middle of my fantasies, sweaty in my bed grunting and grinding my way towards 'just one more' orgasm. \n\nOther girls my age were giggling about sex with their boyfriends, or about how to end a blowjob before getting cum in their mouth, and about how much of a mess an aborted blowjob or a handjob could cause.\n\nI listened and laughed along, but desired more than quick sex just to make a guy happy. I wanted to feel a guy cum inside me. \n\nHell, some nights I felt like I needed to feel a guy cum inside me.\n\nI didn't want to give a handjob in a dark car. I wanted to do it somewhere that would let me watch every throb and spurt.\n\nI desperately fantasized about male cum. I wanted it in me. I wanted it on me. I wanted to taste it, to smell it, to feel the texture of it on my fingers and skin. \n\nI tried not to dwell on thoughts about females, but my subconscious knew what my body wanted, and at night I would often have feverish dreams about female orgasms. \n\nAs much as I struggled to admit it to myself, I craved an opportunity to lick a stiff clitoris, or to kiss and suck on a pair of female breasts and nipples.\n\nI didn't want a partner to merely touch my breasts. I wanted someone to suck and bite my nipples while I orgasmed. And even though I often started my fantasies with male sexual partners, at the moment of my masturbatory orgasms it was just as likely to be the image of a women using her mouth on me as a man. \n\nI worried that I was desiring things that made me some sort of a pervert or sexual lunatic. I had so many questions that I asked myself repeatedly.\n\nDid girls really want these things?\n\nAnd if they did, were they things they thought about as frequently as I did?\n\nDid they fantasize about them as vividly as I did? \n\nDid they orgasm while imagining them?\n\nSo when Merri offered to answer any questions I might have, I began to wonder how exactly I could bring some of these things up. I didn't want her to think that I was weird. But I couldn't go on like I'd been, and I somehow trusted that her responses might be both honest and helpful.\n\nIf only I could summon the courage to talk about my thoughts. \n\nIn the weeks to come we continued our late-night conversations, sometimes veering towards the subject of dating, but I could never find the right way to move the conversation towards my desired topics.\n\nOne night she came in just after midnight and I was still up reading a book about stress management for a paper I was writing. We started talking about the various tensions in each of our lives, and what sort of things we did to manage those feelings. \n\nEventually she asked me how I coped with the stress in my life.\n\n\"Oh the usual ways I guess.\" I told her.\n\n\"Like what specifically?\" she asked.\n\nWe were talking quietly, sitting in the downstairs family room.\n\n\"Well I try to take a walk in the woods a few times a week when the weather cooperates.\" I told her. \"And I read a lot.\"\n\n\"I need to exercise more.\" She said. \"Maybe sometime that you're headed out into the woods I could join you.\"\n\n\"That would be fun.\" I said. \n\n\"So what else do you do?\" she asked. \"You don't really seem to have any hobbies that I've noticed. Except for the pile of books you've always got with you.\"\n\n\"I guess reading is my biggest hobby.\" I admitted. \"And the only other thing in my life that I have that relieves stress is taking a long hot shower.\" \n\n\"Oh yeah?\" she said with a grin. \"Just to get clean, or do you have a detachable showerhead?\"\n\n\"I, uh, well, I, uh.......\" I stammered, feeling my face flush with embarrassment. \n\nI groped for an answer, not wanting to admit that I often orgasmed with my showerhead pulsing against my clit, but somehow sensing that an immediate and total denial would be seen as an admission of my dirty habit. \n\nEveryone knew about showerheads being used for personal sexual pleasure, right? Feigning total ignorance would really be suspicious.\n\nAnd as these thoughts were racing through my head I made eye contact with her and knew that my hesitation had already answered her question.\n\nMy face got even hotter and I felt totally speechless. I blinked rapidly several times, afraid that I might even start crying I felt so ashamed. \n\n\"Hey, hey, hey,\" she said, \"it's alright Sabrina.\" \n\nShe reached out and took my hand, squeezing it tight.\n\n\"You don't have to be embarrassed.\" She continued. \"Just about everyone masturbates once in a while.\"\n\n\"Everyone?\" I whispered, my heart pounding.\n\n\"Oh hell yes.\" She said. \"Everyone.\"\n\nShe squeezed my hand until I looked up and made eye contact. \n\n\"Including me.\" She whispered.\n\n\"You do?\" I asked.\n\nMerri was a full-fledged adult in my eyes, and the fact that she would need to relieve lust in that way hadn't occurred to me. I'd just assumed that most people eventually got a grip on those desires and once they'd had 'real' sex they wouldn't go back to masturbation, even when they weren't having regular sex.\n\n\"Of course.\" She said. \"Probably more often than you ever do.\"\n\n\"Really?\" I asked, dumbfounded and doubtful. \n\nI wanted to press her for details, to see if maybe she was even a little like me, but I had no idea how to steer the conversation that way.\n\n\"Oh yes.\" She assured me. \"All the time.\"\n\n\"How......like when.....how much?\" I whispered, moving my eyes down to stare at the coffee table. \n\n\"Sabrina there's no limit on how much is normal if that's what you're worried about.\" She said, squeezing my hand again. \"I don't do it every night, but I do it most nights. Sometimes more than once. It's been an important part of my life for years.\"\n\nI looked up and we made eye contact again.\n\n\"It's something I really enjoy.\" She said. \"And it's about the best stress relief there is.\"\n\nI couldn't help but grin, relief mixing in with my embarrassment as I came to terms with this new information. Maybe I wasn't as weird as I thought I might be. \n\n\"Me too.\" I confessed. \"It's just about the most relaxing thing I've ever done.\"\n\n\"It's one of the things that has gotten me through the last two years.\" She giggled. \"Without being able to make myself cum I'd have gone out of my mind.\"\n\n\"I didn't......I guess I never thought that.......\" I stammered, still trying to process this information.\n\n\"I guess most women try it at some point.\" She said. \"But college is probably where most of us really discover the difference between quick orgasms and the ones with a long, slow build up that really count.\"\n\n\"That's how it's worked for me.\" I said. \n\n\"Can I ask you a really personal question Sabrina?\" she asked. \n\n\"Sure.\" I said, wondering why I suddenly felt an erotic flush spread through me.\n\n\"Is it just a shower thing for you?\" she asked. \"Or have you discovered some of the even better ways?\"\n\n\"I've done a lot of different ways.\" I said. \"I first tried the showerhead because I was curious, and then just did that once in a while for a couple months. And then....well something happened that helped.\"\n\n\"What was it?\" she asked softly.\n\n\"I found a paperback book. In a pile of donated books in the college library.\" I told her. \"It was a novel, but it was all about sex. I was reading it in bed, and it was really pretty graphic. Suddenly I realized that I was responding to it.\"\n\n\"I get that.\" She said. \"I love to read erotica. The right story can make me so deliciously horny.\"\n\nI giggled to hear her use the word 'horny'.\n\n\"That's what happened to me.\" I said. \"I tried to keep reading and just ignore it, but I figured out that knowing I was turned on made the story even better, and the story made me even more turned on.\"\n\n\"I may want to borrow that book.\" She teased.\n\n\"I got embarrassed after what happened and I threw it away.\" I told her.\n\n\"After what happened?\" she asked. \"What happened to embarrass you?\" \n\n\"While I was reading I put a pillow between my legs to sort of....just to kind of.....\" I wasn't even sure how to explain it.\n\nFortunately she understood.\n\n\"Because when you're getting turned on it feels good to have something to push against Sabrina.\" She whispered. \"That's natural.\"\n\n\"Well I just kept reading and the pillow was there, and the more I read the more intense everything felt.\" I told her. \"I turned off the lights and was reading with a flashlight, and suddenly I just lost control, and it was like the showerhead only a thousand times better.\"\n\n\"And that embarrassed you?\" she asked me.\n\n\"I thought I was a pervert.\" I told her. \"So I got rid of the book and vowed to never do it again.\"\n\n\"How long did you wait?\" she asked. \"Before you tried it again?\"\n\n\"About four days.\" I said softly.\n\n\"That sounds so much like my story.\" She said with a smile. \"I watched a video in my dorm room that turned me on, and I realized that the showerhead was nothing. Afterwards I was really embarrassed, but before long I was doing it every chance I got.\"",
        "\"Really?\" I asked.\n\n\"Oh yes Sabrina.\" She said. \"There's not one damn thing wrong with you. In fact you sound pretty normal.\"\n\nI can't emphasize enough how important that conversation with Merri was to me. \n\nI had lived in such fear of someone finding out that I touched myself for pleasure, and here I was telling someone I liked and admired and she was telling me it was normal. \n\nSo normal that she'd admitted to doing it too.\n\nStill I'd have died if anyone in my family had found out. \n\nAnd lurking in the back of my mind was the worry that if Merri knew all the details of my fantasy life she might not consider me normal at all.\n\nOur conversation drifted to other things that night, and eventually I went upstairs to my guest room, and she went to her own bedroom. \n\nHowever, I lay awake for a long time, wondering how I could have kept the conversation on the topic of masturbation and pleasure, and worrying that the chance would never come up again. \n\nThe conversation had aroused me. Not in an erotic way, but maybe my body felt a certain jolt of freedom from her confession, that signaled to my brain that it was alright to be horny.\n\nThat night I crossed a line I'd never crossed before. \n\nI fingered myself to orgasm in her guest room. \n\nIn all my months of sleeping over at her house I'd never done that before, saving my orgasmic needs to be met in the privacy of my own bed at home. I'd felt like touching myself in her house would somehow make me extra dirty.\n\nBut laying there in the dark I let my fingers drift down into my pajama pants, and I found that I was wet with hot desire. I spread my legs and my practiced fingers went on either side of my clit, sliding up and down slowly and pushing in a soft circle over my swollen lips every few moments. \n\nI felt a delicious tension of lustful pressure build in my loins, and I pulled the pillow from under my head and clutched it on my chest, ready to bury my face in it and smother any noises I might make when my orgasm arrived. \n\nIn my mind's eye the pillow became a person in my fantasy. \n\nIt became Merri, her head on my chest as I held onto her tight and fingered the needy wetness between my legs. \n\nThinking about Merri brought my pleasure closer, and I started rolling my hips and squeezed my eyes shut, my fingers moving faster and faster as my belly tightened. \n\nI wondered if Merri masturbated on her back like I did, and I had a sudden lustful picture in my head of her laying in her bed with her legs spread and her fingers busy.\n\nAnd suddenly I realized something. \n\nShe'd said \"I don't do it every night, but I do it most nights. Sometimes more than once. It's been an important part of my life for years.\" \n\nIf she did it most nights that meant that on at least one of the nights I'd been up in this guest room, she'd been directly beneath me, making herself have an orgasm. Or two.\n\nThat thought pulled me over the edge, and my body hunched up as my pussy clenched and spasmed against my fingers as my orgasm pounded through my body. \n\nIt went on longer than I'd thought it would, and when my body relaxed back against the mattress, I took in several deep shuddering breaths. \n\nI lay there feeling my thudding heart slow down, and I brought my fingers to my mouth and licked at the tangy flavor of my own arousal and pleasure. I could smell my lust on my fingertips, and I closed my eyes and savored my post orgasmic feeling of peace. \n\nWhen I woke up the next morning I smelled my fingers again, feeling a surge of lust twist through me at the memory of the night before. Reluctantly I got out of bed and got cleaned up, denying my desire to stay under the cover and explore my lust.\n\nFor the next couple of weeks our routine remained the same. I'd stay at my parent's house on the weekends, but during the week I'd mostly stay at Merri's, keeping clothes in the guest room closet, food in her kitchen, and even doing some of my laundry there at her insistence. \n\nWe even stopped calling it the 'guest room' and it became, at least unofficially, 'Sabrina's room'. \n\nOur late-night conversations were still few and far between, and when they did happen they didn't offer an opportunity for me to conversationally guide them back towards sex. \n\nEver since our talk about masturbation I felt better about the frequency of my habit, but I still struggled with my interest in perversion. My friends talked about sex often, but their conversations were more aimed at the social and dating aspects. None of them seemed to share my 'interest level' in exploring pleasure.\n\nAs fall slid into winter, the weather grew colder and the threat of snow became ever present. I made sure I had extra clothes at Merri's in case I ever got snowed in there, or in case Merri got snowed in at work and I ended up staying with the kids longer than planned. \n\n~~~\n\nOne particularly snowy Wednesday afternoon in early December I got to Merri's house just as the weather service announced a school closure for the next two days. The kids were extra wound up with this news, and I felt pretty good too, since that meant no classes at the college for me either. \n\nMerri left early for work, giving herself extra time on the icy roads, and while the kids played video games (something they rarely were allowed to do on school nights) I cracked open my books and started on my homework, hoping to get it done so I could enjoy the next few days off.\n\nAfter about three hours I got up from the table and put my books away. I was just starting to set the table so the kids and I could eat when the phone rang.\n\n\"Hello?\" I answered.\n\n\"Sabrina! I just thought I'd let you know that the kid's dad is going to be by in a bit to get them.\" Said Merri.\n\nMerri's ex-husband was a teacher, and he and Merri got along well enough that they didn't rely on any court decided visitation schedule. They just did what they felt was best for the kids. \n\n\"Okay.\" I said. \"Do I need to get anything ready for them?\"\n\n\"Just make sure they each take enough clothes for a few extra days, and their winter stuff.\" Merri said. \"And one more favor?\"\n\n\"Anything.\" I said.\n\n\"In the top drawer of my dresser I have a flashlight.\" She said. \"Could you get it and leave it on the kitchen counter for me? If the storm kills the power I could at least find a light as soon as I stumble in from the garage.\"\n\n\"Sure thing.\" I told her.\n\n\"Thank you.\" She said. \"Once the kids are gone feel free to take off for the weekend if you like. No sense sitting in the empty house until I get home.\"\n\n\"Sounds good.\" I replied. \"Have a good weekend.\"\n\nI hung up the phone and got the kids headed upstairs to pack. They were used to going to their dad's, so I offered only an occasional suggestion or reminder about what to put into their bags, and then they were ready.\n\nBefore long their dad arrived, and with a lot of noise and happy energy the three of them loaded up their stuff and they were on their way.\n\nAs I watched them back out of the driveway I realized that this was the first time I'd ever been alone in the house. \n\nI went down the half flight of stairs into the family room and walked into Merri's bedroom. I had only been in here once when she'd first set it up, and I felt suddenly strange, like I was snooping where I didn't belong.\n\nI went to her dresser and pulled open the top drawer, and suddenly froze in embarrassed shock. \n\nThere was a flashlight in there all right, along with three glass candles, and a box of wooden matches. \n\nBut lying next to all that was a white plastic vibrator. I stared at it for a long moment. My instinct was to grab the flashlight and slam the drawer closed and pretend I hadn't seen it. \n\nBut the curious lust in my stomach so badly wanted to touch it. \n\nTruth be told I wanted to do more than touch it. \n\nI wanted to smell it. \n\nI wanted to taste it.\n\nI wanted to twist the bottom of it and discover what the vibrations would feel like against my hand. Against my thigh. Against my pussy lips. Inside my hole.\n\nI reached a finger out towards it, but hesitated. Merri wasn't merely an object of an orgasmic fantasy. She was my friend, and this would feel like a betrayal. \n\nShe probably hadn't meant for me to see this. \n\nI stared longingly for another few moments, and then took out the flashlight and slid the drawer closed and returned to the kitchen. \n\nI had some clothes in her dryer and I went to the laundry room to retrieve them, planning to take most of my clothes back to my parents for the long weekend. \n\nBut when I got to the laundry room my heart began to thud again. On top of the dirty clothes basket were the clothes Merri had been wearing before she changed and left for work. \n\nAnd on top of the dirty clothes, were a pair of lacy purple panties. \n\nWithout realizing what I was doing I suddenly realized I had picked them up. \n\nAs I stood there holding her panties, I had an almost irresistible urge to sniff them. I often sniffed my own panties, especially if I'd been aroused or worn them to masturbate in, and I wondered if her scent would be anything like my own.\n\nBut somehow that would also feel like a violation to me, like I was invading her personal space.\n\nOn the other hand, these weren't in her room. They were right here in the laundry room where she obviously didn't care if I saw them. \n\nAnd I was already holding them. \n\nI brought them to my nose and closed my eyes, breathing in her smell. Even though I had never smelled Merri in this sort of way before, I was certain that I would have known that this was her scent even if I didn't know they were her panties. \n\nI felt a primal pull towards her, and realized that my nipples were hard, my hands were sweating, I was breathing hard, and my own pussy was drenched with desire. \n\nI dropped her panties back on the laundry pile and gathered up my own laundry and carried it to my room. Alone in my room I had a fantasy of retrieving her panties from the laundry basket and masturbating while inhaling her scent.\n\nBut my fear of somehow being caught, even though I was alone in the house, far outweighed my desire for an immediate orgasm. I could make myself wait until I got back to my own house.\n\nI went back into the kitchen, with a sense of guilt. I decided to give the house a quick cleaning, as a way of bringing some peace to the shame I felt for having seen her sex toy and then sniffing the crotch of her panties.\n\nI washed the bowls and cups from the kids after school snack, and then got out the vacuum and ran it in the upstairs hallway, all three bedrooms up there, the living room and finally down in the family room. I was about to put it away when I decided to run it in her bedroom as well. \n\nI usually didn't run it in any of the bedrooms, just sticking to the common areas of the house and the upstairs hallway. However, I was now using one of the bedrooms, and I'd been in the kids' rooms helping them pack, so it didn't feel like I was intruding to vacuum in them. \n\nShe always left her bedroom door open, so I'd seen into her room almost every time I was in the family room. And it wasn't like I'd be violating her personal space too much since she'd already sent me in there to get the flashlight. \n\nI pushed the vacuum into her room, and soon had her carpet finished. As I was winding up the cord, I looked around the room, and again felt that odd feeling of being alone in the house. \n\nNot just alone in the house, but alone in Merri's bedroom. \n\nAlone in the room where she masturbated.\n\nAlone in the room where she pushed the vibrator up into herself.\n\nI took the vacuum back to the hall closet, wondering what was happening to me.\n\nI'd never been romantically attracted to women. My whole life males had been the object of my romantic fantasies, crushes, and as I grew older my sexual attention.\n\nBut females sometimes factored into my sexual fantasies. Not so much as the objects of my desire, but certainly as supporting parts of my lust. Although I would often awaken in the middle of the night and realize that I'd been having intense sex with another woman in one of my dreams. \n\nI had no real sexual feelings for Merri, except for the closeness I felt for her as a friend, and the small part of me that knew something intimate about her, and that she knew something intimate about me.\n\nStanding alone in her kitchen, I thought about how she'd not only given me a job but had made me feel welcome and loved. She'd even let me into a private part of her life and had been kind and gentle with something that I was deeply ashamed of. \n\nI realized that I was feeling an affection for her that I hadn't ever experienced before. \n\nNot a romantic crush, but almost like that.\n\nNot lust, but almost like that too.\n\nDefinitely not a family sort of affection. \n\nI stood still pondering it for a moment and decided that just like so many other parts of my private life it was just something I couldn't really define.\n\nSuddenly I felt a cold draft across my neck and turned around with a start to see Merri coming in from the garage.\n\n\"Why are you home so early?\" I asked her. \n\n\"They're closing everything down out there.\" She told me. \"So they sent me home in case they need me later in the weekend.\"\n\n\"Well I'll be out of your hair soon.\" I told her. \"I just stuck around long enough to run the vacuum and finish the dishes.\"\n\n\"You do too much around here.\" She said. \"But you're a lifesaver.\" \n\nShe went through the kitchen and put her bag on the living room couch. \n\n\"The roads are a total nightmare.\" She said. \"It'll take you a month to get home.\" \n\n\"It's a good thing then that I've got nowhere to be for the next few days.\" I said.\n\n\"I'm going to change clothes,\" she said, \"and then make some hot chocolate and relax. You're welcome to stick around if you want to.\"\n\nShe headed for her room, and I started some water heating. By the time it was ready she was back.\n\n\"Thanks for vacuuming.\" She said. \"It's great coming home to a clean house. I can't remember how we got along without you.\"\n\n\"My pleasure.\" I said. \"I live here part time. The least I can do is clean here part time.\"\n\n\"Stick around for a cup of cocoa?\" she asked.\n\n\"Sure.\" I grinned.\n\n\"Grab that flashlight in case the power goes out and take it down to the family room.\" She said. \"I'll bring the drinks.\"\n\nI picked up the flashlight and carried it down to the family room, and in a few moments she joined me, carrying two mugs of hot chocolate.\n\nI settled in on the sofa, and she turned off all the lights except a tiny one on top of her tv. Listening to the wind howl outside made the dark room seem cozy and peaceful. \n\nShe handed me a mug and then sat down on the other end of the sofa, stretching her legs out so that her feet were almost touching me.\n\n\"Is this okay?\" she asked. \"I don't want to crowd you.\"\n\n\"It's fine.\" I said. \"I'm enjoying the peace and quiet.\"\n\n\"Me too.\" She said. \"It's always a joy to talk to you about life. Between the kids and work I don't get a lot of interesting adult conversation.\"\n\n\"I feel the same way.\" I said quietly. \"In fact the conversation we had a few weeks ago really made me feel a lot better about some stuff I was worried about.\"\n\n\"Oh yeah?\" she asked. \"Which conversation was that?\"\n\n\"When we were talking about stress.\" I said softly. \"And stress relief.\"\n\n\"Oh.\" She said with a kind smile. \"You mean when we talked about masturbation.\" \n\n\"Yeah.\" I smiled as well.\n\n\"What exactly were you worried about Sabrina?\" she asked.\n\n\"Just that......well......uh.....that I was.....well.....\" I took a deep breath before continuing. \"I was worried that I was doing it too much.\"\n\n\"Too much?\" she asked.\n\nI nodded in the dark room.\n\n\"I don't think there's really any way to measure how much is too much.\" She said. \"Do you ever do it more than once a day?\"\n\nI nodded in the dark, deeply embarrassed. \n\n\"Do you ever have days where you don't do it?\" she asked.\n\nI nodded again.\n\n\"So what would seem to be 'too much' on a day where you don't do it, might seem like 'not enough' on a day where you do a couple of times.\" She said, putting verbal quotation marks around some of her words. \"Does that make sense?\"\n\n\"Sure.\" I said, and it really did. \n\n\"I never even tried it until I went to college.\" She said. \"I lived in an apartment with two friends. We each had our own room, and one night I woke up from a really sexy dream, and without really knowing what I was doing I touched myself until I came.\"\n\nShe paused and took a drink of her cocoa.\n\n\"It was the first orgasm I ever had, and I was instantly addicted.\" She continued. \"I had my fingers in myself first thing every morning when I woke up and again every night before I went to sleep. I even used to do it in the middle of the afternoon if I was there alone and didn't have classes.\"\n\n\"Wow.\" I said.\n\n\"I got my first toy on a Saturday morning when I had the apartment to myself for the weekend.\" she giggled. \"On Monday I woke up so sore I could hardly walk. It wasn't until Thursday that I felt normal down there.\"\n\n\"Toy?\" I asked, curious lust about her white vibrator tight in my belly.\n\n\"My first vibrator.\" She said. \"Do you have one?\"\n\nI shook my head 'no', positive that my hairbrush didn't count. \n\n\"Can I ask you another question?\" she said. \"About what you were worried about?\"\n\n\"You can ask me anything Merri.\" I said in the quiet room.\n\n\"Do you ever do it instead of doing something you're supposed to be doing? Like work or going to class?\" she asked.\n\n\"Oh no!\" I said. \"Nothing like that.\"\n\n\"Do you ever do it while you're doing something important?\" she asked \"Like driving, or studying?\"\n\n\"Nope.\" I said. \"Well maybe on a study break.\"\n\n\"That's what study breaks are for.\" She giggled. \"I never would have made it through any of my finals in college without those kinds of breaks.\"\n\nI laughed with her, remembering how a few nights earlier I'd been sitting in my room studying and realized I had my pen in my mouth. And that had made me think about oral sex and within a few minutes I was under the covers in my bed pushing the handle of my hairbrush into my wet pussy.\n\n\"Can I ask you a really personal question Sabrina?\" she asked.\n\n\"Definitely.\" I replied.\n\n\"You don't have to answer of course.\" She said. \"But since you're worried about it I'm curious where you do it?\"\n\n\"Where?\" I repeated.\n\n\"Like I said you don't have to answer.\" She said. \"I just thought maybe you were worried about where you were doing it.\"\n\n\"Well maybe a little.\" I confessed. \"Mostly I do it at home in my own bed, or at least in my own room. Sometimes in my shower at home.\"\n\n\"That's not unusual.\" She said. \"What are you worried about?\"\n\n\"Well sometimes I do it in the woods.\" I told her. \"When I'm out there hiking.\"\n\n\"A nature lover huh?\" she said, with a friendly grin.\n\n\"I guess so.\" I said, hoping she couldn't tell I was blushing in the dark room. \"I just like feeling the sun and the breeze, when it's nice outside.\"\n\n\"Do you do it where people could see you?\" she asked.\n\n\"Oh no. I'm always really careful about that.\" I said. \n\n\"So home and in the woods.\" She said. \"Anywhere else? Do you do it here?\"\n\n\"No.\" I said softly. \"Except for just one time. I feel like doing it here would be like irresponsible or something.\"\n\n\"Well I do want you to feel at home here.\" She said. \"Was it irresponsible the time you did it here?\"\n\n\"No.\" I said, staring at the coffee table. \"It was late at night. After we talked about it that time. I didn't plan it. After I went to bed I just sort of realized.....it just sort of happened.\"\n\n\"Oh Sabrina,\" she said, \"that's not weird at all. I did it that night too. The conversation was sort of hot.\"\n\n\"I felt like maybe I'd crossed a line.\" I said, not sure why I was telling her this. \"By letting something we talked about get to me like that.\"",
        "\"We can't always control what turns us on.\" She told me. \"Sometimes our bodies just have erotic reactions to things we see or hear or think about.\"\n\nShe got up and took my mug from me and headed towards the kitchen. \n\nI got up and followed her, unwilling to let the conversation drift away.\n\nShe turned the heat on under the water kettle again, and spooned more chocolate into our mugs.\n\nShe turned and rested her hips against the counter, and I did the same against the sink.\n\n\"Sabrina,\" she said, \"if you're not masturbating instead of doing the things you're supposed to do, and if you're not masturbating in situations that could be dangerous or unhealthy, I don't think you have anything to worry about.\"\n\n\"Well that was part of what I was worried about.\" I said softly, unable to make eye contact, but determined to find her opinion on my fascination with kink. \n\n\"Were you worried about doing it here?\" she asked, moving closer to me, and taking my hand. \"Because as long as you do it behind closed doors, I don't think that is wrong at all.\"\n\nAs embarrassed as I was, in that moment I felt like a complete and total adult. Like she was seeing me as an equal. I wasn't a college girl in her eyes. I was an adult woman.\n\n\"It wasn't that.\" I said. \"But that does make me feel better. Thank you.\"\n\nShe leaned in and hugged me, and I put my arms around her and squeezed. We stood like that for a moment, before the kettle started to whistle, and she kissed my forehead and then turned back to the stove.\n\nI had enjoyed the hug more than I thought I would and couldn't really understand why. My palms were sweaty, and my heartrate was definitely elevated. \n\nMaybe the combination of closeness and the conversation? \n\nShe poured the water into the mugs and gave each of them a few quick stirs. She handed mine to me and then nodded her head and I followed her back down to the shadowy family room.\n\n\"So what was your worry Sabrina?\" she asked me, settling in on her end of the couch with her knees pulled up in front of her watching me.\n\n\"It was.......I was......I....uh.....\" I was stammering again, torn between confiding in her and being ashamed. \n\n\"Honey, it's okay.\" She whispered. \"You don't have to tell me if you really don't want to. But whatever it is, you can tell me. I won't tell anyone, and I promise not to make fun of you.\"\n\nI looked up and caught her eyes and knew that this was it. The single best time I was probably ever going to have to talk about this stuff. \n\n\"What you said earlier.\" I said softly. \"About not being able to control what turns us on? That we sometimes just have reactions to things?\"\n\n\"Yes?\" she said.\n\n\"Sometimes the things I think about. The sexual things I think about, especially when I'm, you know, touching myself?\" I said. \"Sometimes I worry that they're not really normal.\"\n\n\"What kind of things are they?\" she asked. \"Are they dangerous things?\" \n\n\"I don't think so.\" I said. \"Although I'm always afraid what would happen if someone found out.\"\n\n\"Are they illegal things?\" she asked carefully.\n\n\"Oh no!\" I said, louder than I'd intended. \"They're all legal. I've looked them up on the internet, and they're safe enough, I guess. I just worry that it's not normal to like them so much. Or to like so many of them. Or to think about them so often.\"\n\n\"What sort of things are they Sabrina?\" she asked. \n\n\"I think about oral sex.\" I said. \"A lot.\" \n\n\"Oral sex?\" she asked softly.\n\n\"That's one of the things, yes.\" I answered. \"I wonder what it feels like to have it happen. I wonder what it feels like to do it to a guy.\"\n\n\"Those are normal things to wonder about.\" She said. \"You shouldn't feel badly for being curious.\"\n\n\"It's not just curious.\" I told her. \"It's way beyond just being curious. And it's not just oral sex either.\"\n\n\"So tell me Sabrina.\" She said. \"You can trust me.\"\n\nI took a deep breath, and then plunged in.\n\n\"It's a lot of stuff. Watching people have sex or masturbate, letting them watch me, seeing how long I can feel pleasure without having an orgasm, and seeing how I could make someone else last like that.\" I said it all in a rush, stopping to look up at her.\n\nShe smiled warmly at me, no judgement or disgust apparent on her face.\n\n\"I also think about being tied up or tying someone else up.\" I went on. \"I think about touching a guy while he's hard, not just a little either, but stroking him for a real long time and making him beg for more.\"\n\n\"Honey I don't think there's anything wrong with any of that.\" She whispered. \"I've tried all those things.\"\n\n\"You have?\" I blurted out. \n\nI was shocked that things I'd considered to be activities that only complete perverts would engage in were things that Merri had done.\n\n\"Oh my yes Sabrina.\" She said. \"All of them and even more.\"\n\n\"You don't think I'm weird?\" I asked, trying hard to keep my voice from shaking.\n\nShe suddenly leaned over and put her mug on the coffee table, before sliding next to me and putting her arm around me. \n\nLike it was the most natural thing in the world I put my head down on her shoulder.\n\n\"Sabrina, I think you're absolutely normal.\" She whispered. \"Maybe even better than normal because you're so young but you've already developed a list of things that arouse you to think about.\"\n\n\"I think about them all the time.\" I said.\n\nShe squeezed me with her arm.\n\n\"That's okay.\" She said. \"Trust me, it's absolutely normal and healthy to think about sex and the different ways to enjoy it.\"\n\n\"I even think about them when I.....uh.....while I do it to myself.\" I whispered.\n\n\"That's one of the best times to think about that stuff.\" She said quietly. \"And do you want to know a secret?\" \n\n\"Sure.\" I said. \n\n\"I think about some of those things while I do it too.\" She whispered back.\n\n\"But every time?\" I asked, afraid I was going one question too far.\n\nShe giggled again. \n\n\"Yes Sabrina.\" She said. \"I think about kinky and weird things just about every time.\"\n\nI closed my eyes, sitting there in the dark with the wind howling outside, feeling her next to me. I had never felt this close to anyone before, and I didn't want this connection to end.\n\n\"Did you tell your parents that you'd be home early?\" she asked. \"Are they worried about you?\"\n\n\"No I didn't tell them.\" I said. \"I wasn't going to let them know until I was leaving here. I wanted to finish the laundry and dishes. They're not expecting me until Saturday or Sunday.\"\n\n\"Well you can leave if you want to.\" She told me. \"But the roads were absolutely awful. And they're probably getting worse.\"\n\nShe put her hand on my thigh and gave it a sisterly squeeze. \n\n\"I think a soak in the hot tub would be just the thing to enjoy during a blizzard.\" She said. \"Want to join me?\"\n\nI was startled by the offer. I swam in our pool at home all summer, but I'd never been in a hot tub before. And with just the two of us here it felt like it would be intimately awkward.\n\n\"Are you sure it would be okay?\" I asked her.\n\n\"Of course.\" She said with a grin. \"My house so it's my rules, and I say it's absolutely okay.\"\n\n\"I don't have a bathing suit here.\" I said.\n\n\"Don't worry about that.\" She said. \n\nShe stood and went into her bedroom, and in a moment, I heard the giant tub start to fill with water. \n\nShe returned and gathered up the mugs and headed to the kitchen. In a moment she was back with a bottle of wine and two glasses. She started for her bedroom.\n\n\"Come on.\" Merri said.\n\nI followed her into her bedroom, and then through to her bathroom, where she put the two glasses and the wine on the ledge of the hot tub, turned the water off, and dipped her arm in.\n\n\"Perfect.\" She said. \"Let's get in and relax.\"\n\nShe went to the doorway and turned off the overhead light and used a dimmer switch to cause a soft glow to shine from three wall mounted lights. \n\n\"Do you have an extra bathing suit I could borrow?\" I asked. \n\nIt was a silly question. Although we were close to the same height, she had much bigger breasts than I did, and while she was fit, I was downright skinny. Nothing that fit her would be likely to fit me.\n\n\"I can loan you one if you'd be more comfortable, or you can get in with your bra and underwear on, or just naked.\" She said.\n\nShe undid the drawstring on her sweatpants, and pulled them down over her hips, and pulled each sock off as she pulled the pants over her feet. \n\nShe stood up and I found myself staring uncontrollably. She hadn't been wearing any panties, and her pussy was completely bare. It didn't look shaved, it just looked soft and hairless.\n\nShe saw me staring and grinned.\n\n\"I had it waxed.\" She said. \"It feels so much more sensitive when I wear something soft and silky. And the hot water feels absolutely lovely without any hair in the way.\"\n\n\"Did it hurt?\" I asked.\n\n\"It stings, but the results are worth it.\" She said.\n\n\"I'm sorry.\" I said. \"I didn't mean to stare.\" \n\n\"That's quite alright.\" She said. \"If I didn't want people looking at it, I wouldn't make it pretty to look at.\"\n\nI grinned back at her, feeling a flush of pride wash over me.\n\n'She wanted me to look!' I thought.\n\nShe pulled her hoodie off over her head, and I turned away, knowing my eyes would betray my interest in her body if she saw my face. \n\nI undid my pants as well and bent down to pull my shoes and socks off. When I stood up I heard her foot splash into the water and I turned towards the tub as I started to push my pants over my hips.\n\nAnd I froze for the second time, caught by the sight of Merri standing in the hot tub, just a few feet from me, totally naked. My eyes were drawn to her breasts, and her areola's looked dark brown and the size of silver dollars. \n\n\"Sorry.\" I mumbled again. \"You're beautiful but I shouldn't keep staring.\"\n\n\"Sabrina you're the prettiest girl I've ever seen.\" She said softly. \"So hurry up and get undressed so I can stare too.\"\n\nI stepped out of my pants and pulled my shirt off. I gathered my clothes up and looked for a place to put them, intending to get into the tub wearing my panties and bra.\n\n\"Just put them on the floor.\" She said. \"We'll put them through the wash tomorrow.\"\n\nI dropped them on my shoes and turned to the tub and saw that she hadn't been kidding. \n\nShe was staring at my almost naked body.\n\n\"You can take those off too.\" She said. \"It's just us here and I certainly don't mind.\"\n\n\"Are you sure?\" I asked.\n\n\"Of course.\" She said. \"I think you have a nice body. I certainly don't mind seeing it.\"\n\nI blushed again and hoped that in the dimly lit room she wouldn't be able to tell.\n\nI reached behind myself and unhooked my bra and hesitated just a moment before taking it off and stepping out of my panties. \n\nI had been naked in front of others in locker rooms several times in my life, and of course at doctor's appointments. But never in my life had I been undressed in a room where the other person was naked, and it was just the two of us. \n\nIt felt erotic, even if it hadn't been intended that way by her.\n\nI stepped into the hot water and forgot about Merri for a moment as I sank down into the relaxing heat.\n\n\"Oh wow.\" I whispered, with my eyes closed.\n\n\"It's usually the second-best part of my day when I finally get into the tub.\" She said.\n\n\"What's the best part?\" I asked softly.\n\n\"Having an orgasm. Or two. Or five.\" She sighed. \n\nMy eyes opened and we made eye contact.\n\n\"Five?\" I whispered.\n\n\"Sure.\" She said. \"Sometimes. Don't you ever cum more than once?\"\n\n\"I do sometimes.\" I admitted. \"But usually after a break. And then just maybe two times.\"\n\n\"The next time you get really horny, and you have a while to play,\" she said, \"tease yourself and make yourself wait a bit for your orgasm.\"\n\n\"Okay.\" I said.\n\n\"And when you finally do make yourself cum, just as soon as your orgasm is over wait about thirty seconds and then stimulate yourself again as intensely as you can.\"\n\n\"I will definitely try that.\" I said. \"It sounds amazing.\" \n\n\"Oh it is.\" She grinned.\n\n\"I might even try it tonight.\" I said. \"If I don't fall asleep in here and drown or die of frostbite on the way home.\"\n\n\"I won't let you drown.\" She assured me. \"If you look sleepy, I'll slide over there and pinch you to keep you awake.\"\n\nAt that moment the lights flickered. \n\n\"And I don't think you should even try to go home tonight unless you have to.\" She said. \"That way you can definitely try it tonight. And you can absolutely have some mind-blowing orgasms in that room up there. I know I sure have!\"\n\n\"Then I am definitely going to try it tonight.\" I said, feeling my belly tighten in anticipation.\n\n\"I'm really enjoying this conversation, Sabrina.\" She told me. \"It's been too long since I've had a friend to talk dirty with.\"\n\n\"I think this is good for me too.\" I replied. \"I haven't had anyone to ever talk to about this stuff. I mean I could ask my mom if I really had to, but not someone who really gets what I'm feeling.\"\n\n\"That makes sense.\" She said. \"I had a friend I learned lots from too. My parents are pretty straight. They'd die if they knew all the different things I've done to have orgasms.\"\n\nI giggled again, suddenly feeling brave and horny in the hot water.\n\n\"I think most people would die if they knew some of the things I've done just to have an orgasm alone.\"\n\n\"Oh yeah?\" she said, stretching out her foot and touching mine. \"Tell me one of them. See if I live through it.\"\n\n\"Okay.\" I said. \"But this is a bit strange, I think. I thought of it earlier when you mentioned a sex toy.\"\n\n\"Oh yeah?\" she grinned, her foot giving mine a rub before retreating to her side of the tub. \n\n\"I don't have any vibrators or anything.\" I said. \"But I have these two hairbrushes, with plastic handles. I sometimes push one inside of me and suck on the other one.\"\n\nA silence hung in the room, and nothing was moving except for the faint movement of the water. She was so still for so many minutes that I wondered if I had said something wrong.\n\n\"Judas fuck.\" She whispered.\n\nI just looked at her, afraid to say anything, but unable to look away.\n\n\"That's so fucking hot.\" Merri whispered. \"Do you have any idea how fucking erotic that sounds Sabrina?\"\n\n\"I'm not sure.\" I said. \"It's just something I really wanted to try one night after thinking about....well after thinking about tasting a cock.\"\n\n\"You've never had a real cock have you?\" she asked softly.\n\n\"No I haven't.\" I said.\n\n\"Have you ever seen one?\" she asked.\n\n\"I walked in on a guy changing once at the college. Backstage during a play rehearsal.\" I said. \"But it wasn't planned or anything, and he wasn't hard.\"\n\n\"That's too bad.\" She giggled. \n\n\"I know.\" I agreed. \"I dreamt about it for weeks. I kept waking up sweaty and horny.\"\n\n\"Have you ever done anything sexual with another person?\" she asked.\n\n\"Last Christmas Eve I had a date who played with my breasts.\" I told her. \"Except once he got his fingers on my nipple he just kept squeezing and twisting it.\"\n\n\"College guys have no idea how to handle breasts.\" She said. \"They think if they do the same thing over and over it will eventually make us spread our legs.\"\n\n\"After about ten minutes he wanted a handjob.\" I laughed. \"And as much as I wanted to try it, I knew he'd tell everyone. And after the way he touched me, I knew it wouldn't be very fun with him.\"\n\n\"Once guys get a little older most of them figure out that each woman is different.\" She said. \"They figure out that part of the fun of new partners is learning what those special triggers are.\" \n\n\"Special triggers?\" I asked. \"Like individual kinks or needs?\"\n\n\"Exactly.\" She said. \"For instance, I'd guess with you, that sexual conversation like we've been having tonight would turn you on far more than just grabbing at your tits.\"\n\n\"I think you're right.\" I agreed.\n\n\"For me, it's kissing.\" She said. \"If someone holds me and we kiss for a long time, it builds up so much need in my body that I can cum from almost any sort of touch at all.\" \n\n\"Really?\" I whispered.\n\n\"Yes.\" She said. \"Although I don't really know why. Except I once had someone kiss me and hold me while I fingered myself. I came so hard with her that I almost passed out.\" \n\n\"Her?\" I whispered, almost to myself.\n\n\"Yes.\" She answered. \"I'm mostly straight Sabrina. But I've played with a few women. Nothing really romantic, just sharing pleasure.\"\n\n\"That makes sense.\" I said, feeling my pussy throb in the hot water. I wondered where exactly the line between romantic feelings and sexual feelings was. \n\n\"She was the first woman who ever made me totally wet just by playing with my breasts.\" She said. \"Before that I'd just been with guys who did what that guy did to you.\"\n\n\"Mine get really sensitive when I play by myself.\" I said. \"Sometimes I can rub them both at the same time and get really close to an orgasm.\"\n\n\"That's because they're so perfectly petite.\" She said.\n\n\"You mean small.\" I giggled.\n\n\"I think they're perfect.\" She said. \"For your size and shape they look so incredibly erotic.\"\n\nI felt a flush of pride run through me. All compliments are nice, but when they're spoken by someone you value as much as I valued Merri, they take on a different velocity as they hit you.\n\n\"All women have the same number of nerve endings in their breasts.\" She continued. \"But when your breasts aren't so huge, they're all concentrated together.\"\n\n\"I never really thought of that.\" I said. \"But it makes sense.\"\n\n\"Anyway,\" she said, \"she sort of 'woke my nipples up', and they've been really sensitive ever since. Or at least she made me aware of how sensitive they get anytime I'm even a little horny\"\n\n\"That sounds so hot.\" I said.\n\n\"Want to see?\" she asked.\n\nWithout waiting for an answer she sat up, her chest coming up out of the water. I could see that her nipples were stiff, with water dripping off of them. I almost moaned just from seeing them.\n\nShe sat back down and smiled.\n\n\"Our conversation has got me sort of worked up.\" She said. \n\n\"It's pretty dark in here.\" I said. \"But I could almost see.\"\n\n\"Well then here.\" She said.\n\nBefore I had time to react, she slid across the tub and was sitting next to me, our shoulders touching. She reached for my fingers, and I let her pull them to her breast. I pressed my palm flat against her flesh, feeling her stiff nipple against my hand.\n\n\"If you can't see, you can feel.\" She whispered, and I felt her body quiver.\n\nThis time I did moan, my emotions and thoughts swirling through me, but none of them able to compete with the sheer lust that I was feeling.\n\nBetween my thoughts, emotions and lust though, it was my lust that was in control, and without thought or plan I slid my hand down a bit, and my fingers took her nipple and pulled softly. \n\n\"Oh fuuuuuuuuuuuuck.\" Merri moaned. \n\nShe closed her eyes and shuddered. Her hand was suddenly on my knee, and she moved it softly a few inches up onto my thigh, and even under the hot water the skin-on-skin contact made my clitoris throb.\n\n\"So,\" she said, her voice thick with lust, \"just the guy on Christmas Eve? No other sexual partners?\" \n\nHer hand stayed where it was, but her fingers were flexing on my thigh, and despite the heat of the tub and warmth of the room I shivered.\n\n\"Not really.\" I panted. \n\n\"Not really?\" she asked, looking me in the eye from six inches away. \n\nI cupped her breast, feeling the weight of her in my hand.\n\n\"I called someone from a chat room.\" I said. \"For phone sex.\"\n\n\"Did you cum with him?\" she asked me, her fingers moving a millimeter closer to my cunt. I could feel the tickle as her fingertip made contact with my bush.\n\n\"I called two people.\" I said, my voice shaking. \"Two different people, two different times I mean.\"\n\n\"Did you masturbate with them both?\" she asked me.\n\n\"The first one we just talked, and he was touching himself. I didn't want to cum when he did,\" I said, \"I wanted to take turns so I could listen to him without being distracted.\" ",
        "\"That's sounds very erotic.\" She said. \"It's always nice to be able to focus on your partners pleasure.\"\n\n\"Except after he came he hung up.\" I whispered. \"And I didn't get to. At least not with him. I did by myself afterwards.\"\n\n\"That's too bad.\" She said. \"What about the other call?\"\n\nI almost asked her to promise not to think I was weird, but I realized that with her fingers close to my most sensitive spot we were way past judging each other. \n\n\"It was with another girl.\" I said, admitting something to myself as I said the words out loud.\n\nHer fingers left my thigh and touched my belly. I took in a deep breath and felt her fingers tickle their way up my skin, towards my chest.\n\n\"Did you hear her cum?\" Merri whispered into my ear.\n\n\"Yes.\" I groaned. \"She let me hear her cum.\"\n\n\"And did she get to hear you?\" she asked, her breath hot against my ear, and her fingers like electricity on the skin under my breast.\n\nMy belly clenched. \n\nI'd never known the underside of my breast was so goddamn sensitive before.\n\n\"She almost did.\" I said. \"I described what I was doing to myself and I got so close, but my parents got home and we had to stop.\"\n\n\"You never tried to call her back?\" she asked.\n\nI gasped again, feeling her other hand on my other breast. \n\n\"Oh god I did, I tried to.\" I told her. \"But one of us was always busy when the other one was free.\"\n\n\"Do you still think about her when you touch yourself?\" she asked me. \n\nHer index finger was circling my areola, and I squirmed in the hot water, feeling pleasure roll through my body.\n\n\"I do.\" I said. \"Some nights all I want is for someone to listen to me or watch me.\"\n\n\"You want to share your pleasure with someone don't you Sabrina?\" she asked, her voice thick and soft in my ear.\n\n\"I do.\" I said through gritted teeth. \"I want that so fucking bad.\"\n\n\"I think you're like me.\" She whispered. \"That's what I crave even more than mere orgasms. I want my partner to want my orgasms as bad as their own, because I want all of theirs in addition to mine.\"\n\n\"I never thought how to explain it.\" I said, my voice trembling. \"But that's the way I feel. Exactly.\"\n\n\"What you want isn't always normal.\" She said. \"Too many people just want to cum. What you're after though is much more powerful than just an orgasm. It's a connected pleasure.\" \n\nShe flicked her fingernail across my nipple, and my whole body tensed as a shockwave of need grasped me. \n\n\"Orgasms are fun. They're relaxing, invigorating, and they can remind us of all the best parts of what we can experience physically.\" She said. \"But sharing someone else's orgasm, one you can taste and hear and feel and see, that's a powerful level of intimacy.\"\n\n\"That's what I want.\" I moaned. \"It's what I need. Someone who feels exactly like that.\"\n\nShe moved her finger away from my breast and put both of her arms around me and pulled me close. I melted against her and wrapped my arms around her, wanting to feel every inch of my body against hers.\n\nI felt both completely in control of what I was doing, and at the same time completely detached, as if I was dreaming.\n\n\"You do know someone exactly like that.\" Merri whispered. \n\nShe leaned forward and brushed her lips against my own. \n\n\"And she's needed to find someone who feels this way for a long time.\" She said, leaning over and licking my earlobe.\n\nI jumped in her arms. My entire body felt like it was on fire and I was trying to press it as hard against her as I could. \n\n\"Fuuuuuck.\" I groaned.\n\n\"More than even being fucked or licked or having a cock to suck, you want to cum and have someone else there with you while you do, don't you?\" she asked me again.\n\n\"Oh fuck yes!\" I groaned. \n\nI was shaking.\n\nI was shaking with lust, and fear, and nervousness, and desire, and need and with the newness of this experience and with my feelings for Merri and with the awakening of feelings that I didn't even know I had.\n\n\"I want that so fucking much.\" I said, fighting back tears.\n\n\"Shhhhh.\" She said, stroking my hair. \"It's okay honey. You're okay.\"\n\n\"I'm sorry Merri.\" I said, tears rolling down my cheeks. \"I don't know why I'm crying. I don't know what I'm even feeling, except I love it and I don't ever fucking want it to go away.\"\n\n\"Maybe it doesn't have to go away.\" She said softly. \"But maybe we can add to it.\"\n\nShe pressed her lips to mine, and I pulled her body close, pressing myself against her as hard as I could. \n\nHer tongue touched mine and I moaned into her mouth, stretching my legs out and trying to pull her down on top of me. \n\nI'd wanted to wrap my legs around her, to feel our bodies rub against each other, but suddenly I was under the water, and I came bounding up, snorting and coughing into the air and splashing water all over the room.\n\nI felt embarrassed and stupid for having ruined the kiss, tried to catch my breath.\n\n\"Jesus I'm sorry.\" I gasped \"I didn't mean to...\"\n\nHer lips were on mine again, and she pulled me to her, so I was on her lap. I felt my pussy press against her belly, and her fingers suddenly pinched one of my nipples as her mouth licked tenderly at the other one.\n\nMy cunt twisted with a pulse of pleasure, that traveled up into my stomach and through my whole body, causing my nipples and clit to feel like they were vibrating.\n\n\"Oh gaaaaawwwwwwwwwd.\" I groaned out loud in the quiet room, feeling tears fill my eyes again.\n\nHer lips pulled my nipple, and I wrapped my arms around her head and rolled my hips against her.\n\nShe gently pushed me off her and stood up, taking my hand and pulling me to my feet. She stepped out onto a fuzzy bathmat, and I followed her, my legs shaking. \n\nShe reached into the tub and pulled the handle, and it started to drain. Still holding my hand, she turned and guided me over to a towel rack, where she pulled down a big yellow towel and started drying me. \n\nWhen I was mostly dry, she ran the towel around her own body, before dropping it on the floor. She took me by the hand again, and I followed easier now that my legs had stopped shaking. \n\nWe went into her bedroom, and she pulled me onto her giant bed, positioning me in the middle and laying next to me, both of us on our back and our shoulders, hips, and thighs touching. The only light in the room came through the open door from her bathroom. \n\nWe were still holding hands.\n\n\"If you want your first orgasm with someone to happen tonight Sabrina, I can help you.\" She said. \n\nI swallowed and took a deep breath. \n\nI definitely wanted to cum. \n\nMore than wanted, I desperately needed to cum. Even laying still I could feel my clit throb and my nipples were so stiff they were almost painful. \n\nBut I didn't want to change anything between Merri and myself. We had such a good relationship, almost like sisters. It was one thing to talk about orgasms and sex together. But if we did those things, what would happen to our relationship? \n\n\"This doesn't have to change things between us.\" She said softly, as if she were reading my mind. \"I love our conversations, and our connection.\"\n\n\"Me too.\" I whispered. \"I don't want to screw that up. I don't want to ruin this.\" \n\nI paused, trying to choose my words carefully. \n\n\"You're the best friend I've ever had.\" I said, speaking out into the dark room.\n\nI felt her roll up onto her side, and she let go of my hand, and let her other hand rest lightly on my belly.\n\nI shivered, realizing that for the first time in my life I was in bed with someone naked, and their fingers were only inches from my swollen pussy lips.\n\n\"Tonight doesn't have to make things worse.\" She said. \"Maybe now that we know that we're so much alike we can be there for each other. Maybe that will make things better.\"\n\n\"I want that.\" I said, fighting to keep my voice from shaking.\n\n\"Sure.\" She said softly. \"Not just for sex. For sharing closeness.\"\n\nHer fingers began to move on my belly, just an inch at a time, and I shivered again, feeling a physical need push against me, in a way that I had never before experienced. \n\n\"Merri?\" I groaned.\n\n\"Yes honey?\" she replied, her lips touching my ear.\n\n\"Can......can we?\" I stuttered. \n\n\"Can we what Sabrina?\" she asked.\n\n\"C-can we.....I...uh.....I n-need......to.....need to.....I w-want.....\" I struggled to speak instead of just moaning.\n\n\"Do you want to cum Sabrina?\" she whispered. \n\nShe put her lips against mine, and I spread my legs and reached for her body.\n\n\"Oh f-f-f-fuck yes.\" I said, my lips touching hers. \n\nI felt her tongue lick along my upper lip, and then push into my mouth, and I grabbed her hip and pulled her against me.\n\nWe kissed like that, our hips rolling gently as we moaned and clutched at each other, her grinding against the bed and me humping at the air, my body begging for contact.\n\nThe waterbed absorbed our motion, rolling us up and down with each other's rhythm in gentle waves.\n\nHer fingers touched my breast again, and I grunted with need and lifted my ass off of the bed. \n\nShe slid down, and I felt her thighs on either side of my leg. I felt her wet tongue lick my nipple at the same moment her hairless cunt touched my knee.\n\n\"Oh fuck! Oh fuck!\" I yelled. \n\nShe sucked at my nipple, and I twisted my hands in her hair and thumped my ass up and down on the bed, both of us riding the waves I caused.\n\n\"Sabrina?\" she whispered.\n\n\"Yes?\" I croaked. \n\n\"Close your eyes honey.\" She said.\n\nI did and felt her fingers on my inner thigh.\n\nI whimpered with need.\n\n\"Just concentrate on what it feels like.\" She said. \"Don't try to make yourself cum. Don't try to hold it back. Just let the pleasure do whatever it needs to.\"\n\nHer fingers pushed up along my cunt lips and I let out a long loud moan, feeling myself clench and flutter in delight.\n\nShe drug her fingers up and down along my lips, and I felt how wet and swollen they were as her fingers caused the slippery lips to part with need.\n\nShe kissed my breast gently and I twisted my fingers even tighter in her hair.\n\n\"You don't have to answer.\" She whispered. \"But when I ask you a question, I want you to think about what I'm asking.\"\n\n\"Uh-huh.\" I groaned, closing my eyes as another pulse of pleasure gripped me.\n\n\"Does that feel good?\" she asked. \"My fingers on your lips?\" \n\nShe pushed a finger to the very edge of my opening and swirled it around.\n\n\"Teasing your sensitive opening.....do you feel all those nerve endings?\" she whispered.\n\nI rolled my hips again, no longer in control of my body.\n\nShe nudged a second finger inside of my opening, and I felt a tightness in my belly that I knew was the start of an orgasm.\n\n\"Does your hole feel good Sabrina?\" she hissed.\n\nAnd then her fingers touched my clit, and the pleasure caused by her touch was almost painful it was so intense.\n\n\"UGFFFF.....UGFFF.....DO......IT......FUG...IS...FEEL.....FUUUUUUUUUUCK.\" the words humped out of my mouth uncontrollably.\n\n\"Does that feel good?\" she asked softly. \"Does your clit like being rubbed?\"\n\nI opened my eyes wide in the dark room, staring up at the ceiling as my body burned with a sexual tension that it had never felt before.\n\n\"Merri.\" I begged her. \"Oh Merri.\"\n\n\"What does it feel like?\" she whispered.\n\n\"It's so soft.\" I panted. \"It's pulling me.....just pulling me....more and more....\"\n\nShe put one finger on each side of my clit and trapped my clit between them. Before I could process the sharp pleasure that caused her hot and wet tongue covered my nipple again, slowly licking it like an ice cream cone.\n\n\"Oh god.\" I moaned, feeling my orgasm get closer.\n\n\"Is it still pulling?\" She asked.\n\n\"Oh fuck yes fuck yes oh fuck!\" I gasped.\n\n\"Do you need to cum?\" she asked. \"Not just want, but do you fucking need to?\"\n\n\"Oh my cum,\" I whispered, \"I need it so bad. It's never been like this.\"\n\nShe put her fingers on my clit again and started to slide them back and forth.\n\n\"How's that feel baby?\" she asked softly.\n\n\"Oh Merri so so so fuck oh god fuck oh god.\" I howled into the darkness.\n\nMy voice pitched higher and higher, and I pushed my head back against the pillow and shut my eyes tight.\n\nMy orgasm had arrived. \n\nIt just hadn't started yet.\n\n\"Love this moment, Sabrina.\" She whispered. \"The moment between pleasure and release.\"\n\nShe was working her fingers in a slippery circle, and started going even faster as I trembled against her.\n\nShe pressed her body down on mine, and I pushed up against her, rocking with feelings I couldn't describe or believe.\n\n\"Ride it!\" she whispered.\n\nHer fingers went even faster.\n\nI opened my mouth wide and shrieked into the empty house, my pleasure screaming in my own ears as I felt the pressure in my cunt begin to burst.\n\nThe lustful agony burned within me as my orgasm built.\n\nAnd built.\n\nAnd built.\n\nAnd built.\n\nAnd built.\n\nAnd then plateaued for just one glorious moment that became and explosion of heat and ecstasy that consumed me.\n\n\"Aaaaaaaaaaaaaaaaaahhhhhhhhhhhhhhhhhhhhgggggggggggg!\" I screamed as it pounded through my body.\n\nI humped and screamed and scratched and yelled and felt a tight throbbing in my clit that I hadn't even known was possible.\n\nAnd then I was still, with her wet fingers on my thigh, my lungs heaving, and a numb dizziness in my arms and legs.\n\nI shut my eyes and was trying to think of something to say, when suddenly she shifted and I felt her tongue flick in and out of my belly button.\n\nShe flicked it against my abdomen. \n\nShe flicked it against my pubic hair.\n\nAnd then she touched it to my clit, and without warning another orgasm slammed into me. \n\nI opened my mouth to scream, and no sound came out as a torrent of pleasure pushed through me yet again.\n\nShe wiped her tongue back and forth over my stiff button as she pushed a finger into my cunt. I felt myself throb around her finger, and when she started twisting it in time with her tongue lapping pleasure against my clit I sat up. \n\nI was unable to move my lower half as she pinned my thighs to the bed, but I bent forward as the orgasm twisted through me over and over and over and over and over again.\n\nAs it ended my ass was off the bed and I had all my weight on my arms.\n\n\"Oh god oh fuck.\" I panted.\n\nShe moved again, crawling between my legs and pushing her face into my wet pussy.\n\nI screamed as another shock of physical delight bolted through me, and I grabbed her head and pushed against her face. \n\n\"God god god god god!\" I yelled, feeling another round of intense pleasure well up within me.\n\nAnd then I came again, almost as intense as my last orgasm, but longer and so much more relaxing. \n\nI felt as if all the energy and tension inside of me shot out of my cunt as she moved her lips and tongue and finger against all my most sensitive places. \n\nI fell back on the bed and pulled my legs up, feeling her tongue lick against me as my body shifted down and down and down into a pleased state of exhaustion. I blinked as I felt tears running down my cheeks.\n\nEventually I stretched my legs out on either side of her. I could feel her hot breath against my thigh, and I reached down and rested one hand on the back of her head. \n\nNeither of us moved, and for a long time the entire house was silent, and the bed was completely still. \n\nBy the time I could speak again I didn't know what to say. 'Thank you' seemed lame, and I couldn't come up with anything else. After a while I wondered if she had fallen asleep.\n\nShe changed positions again, and she was back on top of me, one of her legs between mine, and her mouth moving to my own. \n\nI greedily pushed my tongue against hers, tasting my arousal and pleasure all over her tongue and lips and chin. \n\nShe moaned softly against my mouth, and the liquid fire of lust gripped me again. \n\nWe kissed with heat and passion, our tongues and lips conveying our feelings and need and desire back and forth between us. \n\nI suddenly felt her press herself against my hip and moved my hand to her ass and squeezed as she pressed into me again.\n\nHer pussy felt molten hot against me, and she began to grind her slick flesh against me as we kissed. \n\nFor a long time, it went on like that, her softly moaning and humping against my body as I held her tight. \n\nI put my hand between us and felt for her breast, her teeth biting my tongue as I found her nipple. \n\n\"What should I do?\" I asked her.\n\n\"I can cum just like this.\" She said, her hips pushing back and forth against me.\n\nI held her breast tightly with one hand, and pulled her to me with the other, and she began to pant and move faster.\n\n\"Tell me when you cum.\" I said softly, kissing her neck.\n\n\"I'm gonna.\" She said. \"I'm gonna cum soon.\"\n\n\"I want you to.\" I moaned. \"I want you to cum for me Merri!\"\n\n\"Oh Sabrina I'm gonna cum!\" she screeched, her hips fucking against me as fast as she could move them.\n\n\"Do it!\" I urged her.\n\n\"Hold me tight!\" she yelled. \"Hold me while I go!\"\n\nI pinched her nipple again and licked her throat, and I felt her bite my shoulder and scream against it.\n\nShe moved back and forth on me, moaning and whimpering, and I felt her hot body vibrate with release.\n\nI'm not sure quite what I expected after her orgasm ended, but I secretly hoped that she wanted to cum again. \n\nI secretly hoped I could make her cum.\n\nShe kissed me again, and then rolled off the bed and went to her dresser. She fumbled with something for a moment, and then I heard her call for me in the family room.\n\n\"Sabrina?\" she called. \"Can you come in here?\"\n\nCurious I followed her into the family room and realized that she'd gone up a level into the living room.\n\nIt was a more formal room than the family room, with a matching love seat and sofa, two arm chairs, and a small China cabinet filled with school pictures, vacation mementos and the other assorted things families accumulate.\n\nI joined her, realizing exactly how soft this deep carpet was on my bare feet.\n\n\"Help me.\" She said.\n\nI saw her take one end of the love seat and perplexed I took the other, realizing that she wanted me to help her slide it around so that it was facing the sofa. We pushed them together so that they were touching.\n\nShe went down the stairs and returned in a moment with two towels and handed one to me. \n\nShe turned the overhead lights on, and then spread out her towel on the love seat and climbed over the arm of the sofa and sat on it. \n\n\"Will you join me?\" she asked with a smile.\n\nUnsure what was happening I spread out the towel I was holding on the sofa where she indicated and soon, I was sitting exactly across from her, with our legs intertwined. \n\n\"I want to cum again.\" She announced. \"And I need you to watch me.\"\n\nShe reached beside her on the love seat and I realized that she was holding her vibrator.\n\nWith wide eyes I watched her put her fingers against her pussy lips, and work them up and down, making sure she was slippery all over.\n\nHer face contorted with lust as her fingers worked over her lips, and then she was rubbing the tip of the vibrator up and down against herself. \n\n\"Oh wow.\" She said. \"I haven't cum in this room in a while.\" \n\nI looked around, as if realizing for the first time that we weren't in her bedroom.\n\n'She likes to masturbate outside of her bedroom!' I thought. \n\nI turned my attention back to the show she was giving me, and she pulled the vibrator to her mouth and licked the tip of it, getting it wet with her tongue. \n\n\"Fuck.\" I said softly. \n\nI was gripped by the filthy sight of my friend sucking an artificial cock in this formal room.\n\nShe pushed it against her cunt again, this time pushing it inside a few inches, a lewd smile on her face as she did so.\n\n\"The first stretch of cock is always the best.\" She said. \"Even when it's not a real one.\"\n\nI stared as she worked the toy in and out, her lips glistening with arousal, and the tip of the toy shiny with her need. ",
        "She pulled it out again and started to bring it to her mouth.\n\n\"Can I taste it?\" I asked.\n\nShe froze for a second, and then held it out to me. \n\nI leaned forward and took her hand in mine and pulled it closer to me.\n\nUnable to help myself I closed my eyes and sniffed it, fulfilling my need from earlier. And this was better. Whatever it might have smelled like a few hours ago, now it smelled like Merri, sexy and horny and unmistakably feminine. \n\nI flicked my tongue out and licked against it, tasting my first aroused female cunt that wasn't my own.\n\nI pulled it further into my mouth, feeling it against my tongue and teeth, tasting the tangy flavor of her impending orgasm, torn between wishing it was a real cock for me to play with, and glad it wasn't so I could watch whatever Merri was planning to do with it. \n\nI sucked it for another moment, and then let her take it away, pausing to kiss the tip of it as I made eye contact with her.\n\nShe rubbed it against her hole again, this time pausing for a brief second before using her fingers to push it up inside herself. \n\n\"Ohhhhhhhhhh.\" She sighed.\n\nI was transfixed by watching what she was doing, but so insanely jealous at the same time. I wanted to feel something hard sink itself into my needy cunt too.\n\nShe slid down on the cushions a little, and then raised her legs, planting one foot on either side of my head and pushing herself closer to me. \n\nI suddenly understood why she'd wanted to be out here. She was doing this so I could watch.\n\nI reached out and traced my fingertips along her inner thighs, and she groaned as she pulled the toy almost all the way out of herself, and then pushed it back in.\n\nI kept tickling her thighs, looking at her face every few moments but concentrating on watching her pussy lips slide in, and then back out, sticking to the slippery toy as she fucked herself with it. \n\n\"Does it feel good?\" I asked her. \n\n\"Yes. It does.\" She said with a smile. \"Especially when I'm already horny.\"\n\n\"That makes everything better doesn't it?\" I asked.\n\n\"Always my dear.\" She said. \"But being with you when you came, that made me need this more than ever.\"\n\nI giggled. \n\n\"I enjoyed it too.\" I said. \n\nZZZZZZZT\n\n\"Oh shit yeah!\" she grunted.\n\nThe vibrator had begun to buzz softly in her, and I could feel the vibrations along her thigh. \n\nShe pumped it a bit faster, tipping it as she pulled it out to touch her clit with it.\n\n\"Wow.\" I said softly.\n\nThis was the single most erotic thing I'd ever seen.\n\n\"It's starting to feel really good now.\" She said quietly.\n\nHer hips were moving in rhythm with her wrist pulling the toy in and out, her nipples were stiff with arousal, and she was softly whimpering as her orgasm came within range.\n\n\"It won't be long.\" She moaned.\n\nAs much as I wanted to just watch, I didn't want to be left out. I squirmed around up under her leg and using my hand I gently caressed her breast before pulling the nipple into my mouth.\n\n\"Oh Sabrina,\" she moaned, \"that's so good.\"\n\nI sucked it as gently as I could, and let my fingers begin to stroke along her belly.\n\n\"It's going to happen baby.\" She whispered.\n\nI pushed my fingers down and gasped at how slippery her gash was. I felt the toy buzzing against my fingers as it slid in and out in her frantic pace. I made my fingertips as slick as I could and then moved them to her clit, pressing hard and rubbing back and forth.\n\nI pulled at her nipple with my teeth and saw her free hand grab the sofa cushion.\n\n\"Oh Sabrina.\" She whispered. \"I'm going to cum for you.\"\n\n\"Cum for me Merri!\" I said with her nipple between my teeth. I flicked my tongue against it. \"Cum!\"\n\n\"Oh fuck! Fuck! FUUUUUUUUUUUUCK!\" she screamed at the top of her lungs. \n\nI felt her clit pulse against my fingers and moved my mouth up to hers and shoved my tongue into her mouth as she screamed again, her body shaking against me.\n\nI felt her hand on my breast twisting at my nipple, and I kissed her harder.\n\nShe was fucking herself with the vibrator and panting as her orgasm wound down.\n\nI extended my fingers and felt the toy, hard and buzzing and slick with her orgasmic juices. As I was touching it the buzzing slowed and then stopped. She kept it pushed inside her, and I moved my fingers along her soft and hairless pussy. \n\nI expected it to feel prickly, like my legs when they needed shaved, but instead it was as soft as her thighs had been.\n\n\"That was incredible.\" She whispered. \"Thank you for sharing that with me.\"\n\n\"Are you finished?\" I whispered, running my index finger back and forth over her clitoris.\n\n\"Oh sweet fuck.\" She groaned, leaning forward. \"I thought so......\"\n\nI pushed my way between her legs, and licked her clit, before sucking it into my mouth.\n\nHer hips rolled and I felt her hand on the back of my head.\n\nThe toy started to buzz again, and I started to suck on her stiff nub of flesh as I pushed against the toy, making sure she could feel its full length inside her.\n\n\"OHFUCKSABRINAMAKEMECUMMAKEMECUMFUCK!\" she screamed again. \n\nHer feet beat against the sofa and she pushed against me and grabbed my hair and I felt her clit jump in my mouth and I moaned in horny delight.\n\nShe rode against me for several more seconds, before pulling my hair to get me to take my lips off of her clit. \n\n\"That sounded like it felt good.\" I grinned at her.\n\n\"You have no idea.\" She said with a smile. \n\n\"I know.\" I said. \"I have got to try one of those.\"\n\nShe held up the vibe and we both looked at it for a moment, and then she looked right at me and winked. \n\n\"Your turn.\" She whispered. \n\nI was on my knees next to her, and I had intended on sitting back and stretching my legs out, but she knew more about my body than I seemed to, and she moved behind me and bumped my ass with her thigh to get me to scoot forward.\n\n\"Grab the back of the couch.\" She told me, taking my shoulder and guiding me.\n\nI was on my knees, facing over the back of the couch, and she put a hand on the small of my back and I felt the toy begin to buzz against my inner thighs.\n\nShe was behind me, and I thought she was going to push it into me from that position, but instead she put the tip against my clit.\n\n\"Holy cumfuck!\" I screamed, the pleasure unexpected, powerful, and consuming as the toy buzzed against my erect little clitoris.\n\nI felt the couch move and then I felt her tongue, probing against my lips from behind.\n\nI had never even imagined having someone tongue me from that position, and the physical sensations along with the filthy notion of what I was letting her do took me up to, and then rocketing over, the edge.\n\n\"Oh gawd! Merri I'm cumming! I'm cumming! I'm cumming!\" I screeched.\n\nThe orgasm was hot and fierce and roared through me like a freight train, and the minute it stopped another started, and as I rode over the peak of the second one I felt one of Merri's fingers rub my anus and I bucked against her, shrieking at the top of my lungs as every nerve in my body burst into white hot energy.\n\n~\n\nI was on my stomach, on her sofa, and I felt slick wetness on my inner thighs.\n\n~ \n\nI felt a cool washcloth wipe my forehead, and then down my back.\n\n~\n\n\"Come on honey.\" Merri said softly.\n\nI realized that she had moved the love seat a bit, and she took my hand and got me on my feet.\n\n~\n\nI followed her down the short flight of steps, through the family room, and then I was on her bed, still naked.\n\nAll the lights were on, and I saw her leave the room.\n\nIn a moment she was back. \n\nShe was also completely nude still. \n\nThe lights went off, and it was completely dark.\n\n~\n\nThe bed rolled gently as she climbed on next to me, and a fuzzy blanket was pulled over me and she spooned against me.\n\n~\n\n\"Merri?\" I whispered.\n\n\"Yes?\" she answered sleepily.\n\n\"I just.......thank you.\" I said softly, my eyes stinging with tears.\n\nShe kissed the back of my neck.\n\n\"You're welcome Sabrina.\" She said. \"I love you.\"\n\n\"I love you too Merri.\" I said. \n\n~\n\nI opened my eyes later in the pitch darkness of the room, and I felt her body against me. One of her arms was around me, and I felt her hand softly cupping my breast. \n\nI went back to sleep, feeling things I hadn't ever felt before. \n\nGood things.\n\n~~~\n\nThank you so much for reading this story. This is the most personal story I've ever posted here. \n\nThis is part of my discovery of who I was sexually, and definitely part of what got me started on the journey I'm still on. \n\nThere were several true elements to it, and the real life Merri has been very supportive over the years as we've discussed the possibility of me writing it down.\n\nShe's also been a great supporter of what I've published here on Literotica.\n\nAs always I really am appreciative of anyone who enjoys, even a little bit, reading the things that I enjoy writing about.\n\nIE"
    ],
    "authorname": "IsabellaEmily",
    "tags": [
        "learning",
        "older",
        "younger",
        "lesbian romance",
        "first time",
        "romance",
        "masturbation",
        "oral sex"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/the-nurse-and-the-nanny"
}