{
    "title": "Backdoor Sweetheart Ch. 04",
    "pages": [
        "Author's note: This is a work of fiction. All characters are eighteen years or older. Don't expect realism and you won't be disappointed when you don't find it! Enjoy!\n\n*****\n\nFor once, rather than cross our shared backyard and let myself in by the backdoor as usual, I approached Lizzie's house from the front. Pausing at the door to button then unbutton again the top button of my shirt, I went as far as to ring the bell, like a guy would do when picking up his girlfriend for a date. That was kind of what we were doing that night, more or less.\n\nAfter a swift click-clacking of high heels getting closer, the door opened to reveal Rose, Liz's mom, smiling kindly at me. Her wavy red hair was pulled up in a sort of elaborate bun, while her make up brought out her big hazel eyes. She was wearing a classy, tight-fitting strapless blue dress that accentuated her ample breasts and every other curve of her womanly hourglass figure, exposing her toned legs at the same time.\n\n\"Russ, sweetie, come in! Liz is still getting ready,\" Rose said as I stepped inside.\n\n\"Wow, you look great tonight!\" I said, genuinely impressed by Rose's attire, as I had been minutes earlier when my mom had asked my opinion about her figure-hugging black dress. \" I assume you guys are going to some big fancy New Year's Eve party, right?\" \n\n\"Yeah, sort of...\" Rose nodded, looking less than willing to go into detail, just like my mom had been when I asked her the same question. Before I could investigate further, Rose took in a big lungful of air and yelled out at the top of her voice: \"Liiiiz! Are you ready, baby? Russ is here!\" \n\nFrom upstairs, my beloved Lizzie's words resounded just as loud as her mom's: \"Tell him to come uuup! I need some help here!\"\n\n\"I think he heard you already, honey!\" Rose shouted back, smiling as she turned to me and asked in her soft, husky tone: \"Is your mom ready to go, Russ? You look very handsome, by the way.\" \n\n\"Thanks. And yeah, Mom's ready,\" I replied, not particularly baffled by my girlfriend's and her mother's trademark way to communicate with each other across the house.\n\n\"Okay, let's see: car keys, phone, purse... Alright, I'm off!\" Rose said, leaning in to plant an affectionate smooch on my cheek, followed by a serious look straight into my eyes. \"You two have fun tonight, but not too much fun, okay Russ? The last party Vanessa organized ended with the cops at our door, as I recall...\"\n\n\"Ah yes, good times!\" I replied, smirking a bit but also going fluffy inside as I remember the fateful night when Liz and I had sex for the very first time, the night I was first allowed inside that magnificent bubble-butt of hers, thus becoming hooked forever on the amazing tightness of her sweet little asshole. \n\nCatching a hint of sarcasm in my dreamy comment, Rose frowned for a moment, only to relax again immediately afterward. Knowing that her daughter was in good hands with someone as uninterested in getting wasted as me by her side, Rose sighed and concluded: \"Well, at least this time it's going to be Vanessa's house that the police will show up at. Bye, Russ. Keep an eye on my baby girl for me, okay?\"\n\n\"You know I will.\"\n\n\"Yes, I do,\" Rose nodded amiably as she opened the door. Turning toward the stairs one last time, she hollered: \"Bye, sweetieeee! Have fuuuun!\"\n\n\"You too Mooooom!\" Liz yelled back from upstairs.\n\nAfter Rose left, I swiftly made my way to Lizzie's room. As I approached the flung open door, I could feel a light thumping sound reverberating across the floor while Liz's voice reached me in a soft yet persistent grumble. \"Stupid pants! Come on, come on... Damn it! What the hell is wrong with my butt tonight!?\"\n\nChuckling at those words, knowing that nothing could ever be wrong with Lizzie's legendary bubble-butt, I stepped inside my almost-sister's bedroom, unaware of what was waiting for me there. \"Hey Liz, did your mom say exactly where they're going tonight? Because I... Oh my god!\"\n\nFacing away from me as she stood barefoot at her dresser wearing just a purple lacy bra and matching thong, Lizzie was jumping in place, trying to fit into a pair of extra skinny jeans. At each little jump, her huge jutting tits bounced and shook, threatening to spill out of the cups of her bra while her magnificent booty rippled and wobbled amazingly. She wasn't making much progress though, the waistline of her pants remaining blocked right under the fleshy lower curve of her protruding buttcheeks. \n\nIn that situation, the perfect roundness of Liz's beautiful heart-shaped ass was accentuated to the extreme. The soft plumpness of her meaty globes was so enticing that I was hit by a blasting wave of arousal that made my cock stiffen to rock-hardness in a heartbeat. I was literally drooling as I stared transfixed at the spellbinding sight of my girlfriend's full bouncy asscheeks jiggling all over the place with her every tiny jump. Failing to pull her pants up and over her spectacular bubble-butt, Lizzie was inadvertently giving me an awesome erotic show as she made her juicy round buns pop outward even more with each new attempt to fit into her pants. \n\nAt the same time, as I stood there rooted in place, mesmerized by the most fabulous ass in the world presented to me in all its majestic lusciousness, I couldn't help but take in the comical expression of exasperated reproach panted on Liz's adorable face. As she looked over her shoulder and down at her mouth-watering apple bottom, she seriously seemed mad at it! Somehow, that made the whole thing even more exciting to me. \n\n\"Stupid butt, did you get even bigger in the last two weeks?! These jeans used to fit, more or less...\"\n\nWalking as if in a trance, I approached my sweet grumpy Lizzie from behind, my massive erection straining painfully inside my pants. Placing my hands reverently on her masterpiece of an ass, I leaned against Liz's back and planted a long loving kiss on her pouty lips. \n\n\"Hey baby!\" she purred, flashing me a bright smile. \n\nWhile we traded a few more kisses, my hands kneaded and caressed Liz's plump asscheeks, savoring their flawless smoothness as their delicious juicy roundness filled my palms to overflowing. When Lizzie resumed speaking, I was already hooking my fingers into the sides of her thong, right where the string bit into the soft skin of her hips. \n\n\"Okay, Russ, help me out here. Maybe together we can... Uh, Russ, what are you doing?! You're supposed to pull my pants up, not pull my panties down!\"\n\nHumming with anticipation and licking my lips, I got down on my knees until my face was level with my sweet Lizzie's perfect bubble-butt. Slowly, I finished peeling off her thong, enjoying the sight of that thin strip of lacy cloth being extracted from the depths of her luscious asscrack where it had been cozily trapped so far. Looking up into her baffled bespectacled eyes, I chuckled and shrugged. \n\n\"Sorry, Liz, but I can't help myself. Your ass is just too epic!\"\n\n\"Aw, Russ!\" she giggled as I pulled her jeans and panties just a little bit lower down her shapely thighs to make her glorious rump bulge out even more. \"You know I love hearing you say that, but I was really trying to ohhh...! Oh baby, that feels good! Uuhh Russ...\"\n\nWith my face pressed between her soft round asscheeks and my hands parting and caressing those full fleshy globes, I smiled as I heard Lizzie's breath catch in her throat and her words fade into sexy little moans of pleasure brought on by the sequence of butterfly kisses that I was placing all over the protruding curves of her booty. As Liz purred and instinctively wiggled her bouncy bubble-butt, I swiftly let my mouth push deeper and deeper into her ass-cleavage, getting closer to the tiny pink rosebud of her butthole.\n\n\"Ooohh Russ, that's not fair! Uuhh... But it's so good!\" Liz panted, shivering as my smooching lips finally came in contact with her adorable little sphincter. \n\nArching her back and moaning in anticipation, my amazing girlfriend sighed lustfully as I swiped my tongue all around the tender rim of her most intimate and sensitive orifice in a series of slow, sloppy licks. After placing a couple more wet kisses on her gummy butt-ring, I pulled back while still keeping her juicy asscheeks well spread to feast my eyes on the sight of her pulsating little hineyhole and her puffy, moist pussy lips. Rubbing my face adoringly all over Lizzie's fantastic booty, smelling the fruity flavor of her shower gel exuding from her smooth pale skin, I looked up to meet her gaze. Her big brown eyes were sparkling behind her cute nerdy glasses and her full lips were parted in anticipation as I smiled teasingly at her.\n\n\"Well, I guess I should really stop and help you get dressed, eh Liz? We've got a party to go to after all...\"\n\n\"Yeah, right, like that's gonna happen now!\" Lizzie chuckled, pushing out her plump bubble-butt and bending at the waist to give me better access to her holes. \"We're not going anywhere or doing anything until you finish what you started, Russ. I mean it!\" \n\nBarely sparing a second to reach down to my crotch and adjust the massive erection tenting my pants, I shared one knowing look with my sweet Lizzie before burying my face between her voluptuous asscheeks again. As I started lapping away at her lovely little pucker, her sexy vocalizations brought a huge smile to my butt-pleasing lips.\n\n\"Ooooh my god, Russ! Aaahhh yes, baby, lick my ass... Lick my horny little asshole like thaaaat!\"\n\n*****\n\nIn the three days following the morning when Lizzie had gifted me with her virginity, we were kept pretty busy by the delicious task of making her pussy 'catch up' with her asshole. She even officially invested me with the power to 'take her pussy and have at it, anytime and anywhere', as she very invitingly put it. At first I thought she was joking, but the determined look in my almost-sister's soulful brown eyes told me that she was very serious about it. \n\n\"Russ, I want to see if I can cum as hard from regular sex as I do from anal...\" Liz cooed as we snuggled in her bed late at night, the memories of her deflowering earlier that day still very vivid in both our minds. \"Honestly, I don't think I can have those huge full-body orgasms in any other way except with your cock deep in my ass, but hey, it could be fun to try!\" she added with a giggle. Her tiny hand was pumping slowing up and down my stiffening shaft as she continued: \"I mean, this morning was our first time after all, so maybe we should, like, practice a bit... What do you say, baby? Wanna give my inexperience little pussy a good pounding until I cum on your big fat cock?\"\n\nI didn't technically say anything in response, because my mouth was instantly glued to Lizzie's and it stayed like that all through the passionate snatch-stretching coupling that followed. Anyway, starting that night, as per her request and much to our mutual pleasure, I eagerly plowed my amazing girlfriend's juicy slit at any given chance for the following three days. In that time, despite my complete addiction to her tight little asshole, I soon became desperately enamored with the silky, suctioning wetness of her snug pussy as well. \n\nI loved the way Lizzie looked at me as she lay back on the bed and spread her legs open while extending her arms, smiling to me, her eyes shiny with excitement behind her glasses as she invited me to penetrate her. Just like I did whenever I fucked her cute little butthole, I made it a point to thoroughly lick Liz's sweet pussy before I pushed my cock into her dripping folds, sinking all the way inside her until my bloated glans was pushing as deep as possible within her soft vaginal tunnel and my pubic bone was pressing firmly against her slick, swollen clit. \n\nSavoring the taste of her juices saturating my mouth, I remained there motionless for a few moments, enjoying the glorious dewy snugness I was immersed into. While my fully sheathed erection throbbed inside her caressing pussy, I leaned down and pressed my chest into Liz's huge boobs as her lips met mine and our tongues started dancing together. A shiver always ran down my spine as I felt her shift underneath me to throw her arms around my neck and wrap her legs around my back, her tiny feet locking together right above my butt and pulling me in deeper, confirming her eagerness and readiness. Then and only then did I start moving inside her, eliciting kiss-muffled moans that spurred me on as I slid in and out of my beloved Lizzie's tight, slippery pussy. \n\nHer sighs and mewls, uttered straight into my smooching mouth, always let me know when it was okay to increase my pumping tempo. Guided by Liz's sexy squeals, I gradually picked up my plowing rhythm, thrusting faster and harder until I was slamming away into her delicious little slit. As clingy as her silky folds felt around my dickmeat as a rule, Lizzie's drooling pussy clutched my dick even more amazingly when an orgasm hit her, making her moan louder into my mouth as she dug her nails into my back. The feel and sight and sound of my irreplaceable almost-sister cumming on my snatch-cramming boner was usually too much for me, causing me to explode in climax and inundate her quivering vaginal walls with thick ropes of cum. \n\nMissionary was definitely our top choice when it came to regular sex, because it felt so intimate, with lots of kissing and a sense of being truly fused together, but we did experiment with other positions too. I was a big fan of doggy, because it gave me an awesome view of Liz's plump majestic ass bouncing back and forth on my pussy-drilling cock, plus it allowed me to knead her meaty buttcheeks and let my fingers play with her winking little rosebud, something she always appreciated. \n\nI also played with Lizzie's asshole a lot when she rode me cowgirl style, which soon became her personal favorite position. As I bucked my swollen shaft up into her dripping honey pot, I gaped and teased Liz's twitching sphincter, moistening it with her trickling girlcum before I started pumping my fingers in and out of her tight butthole, making her pleasure screams burst louder as her cock-engulfing bounces grew more urgent. Liz's big swaying tits and her puffy suckable nipples were awesome to behold in those occasions, calling irresistibly for me to nibble and kiss and lick on them. While she rose and fell rhythmically on my lap, yelling out in lascivious joy as she forced her clingy pussy down to devour my stiff pole over and over again, I could barely bring myself to remove my face from her pillowy cleavage so that I could breath, let alone form words, but I'm confident that my boob-muffled grunts spoke volumes about how hot and sexy and downright amazing I thought Liz was.\n\nOne thing that really blew me away about fucking Lizzie's pussy rather than her ass, was the fact that almost no preparations were required. I loved getting Liz's adorable little butthole ready for my cock by licking and smooching and slobbering all over that pretty pink star of hers, I truly enjoyed it, but the innate readiness of a soft nectar-slick pussy grew on me in no time. It was just so fucking hot to be able to simply slide my aching boner right inside a welcoming, moist hole that lubed itself up based on Lizzie's arousal. And it wasn't just hot, it was kind of practical too, since we were always fooling around one way or the other and my naughty girlfriend was at least as horny as I was. In light of all that, we quickly decided not to limit ourselves to our respective bedrooms when it came to doing some 'catching up' for her pussy. \n\nLiving rooms, kitchens and once even the back porch of Lizzie's house became the setting of our quickies, which always came with a lot of kiss-muted giggles and the added excitement of possibly getting caught by our Moms. Technically they were back at work, but the renovations in their office building were taking longer than they should have been, which meant that the Moms weren't keeping predictable hours at the office. Usually they would go in for a bit then come back with folders and papers to work from home on their laptops, only to then go back to the office when they were needed there or they had to get other stuff. The Moms were definitely not happy about that situation, and, for our own naughty reasons, neither were Lizzie and I. \n\nThe Moms' unpredictable schedule and intermittent presence at home had brought back Lizzie's reticence to do anal while there was even the slightest risk of getting caught in the act. As much as I loved my awesome almost-sister's quirks, I couldn't help but remind her that we weren't being exactly discreet during our vigorous nightly humping, or our slow and languid wake up fucks, not to mention the random sneaky quickies on the couch or the kitchen table we were suddenly getting a kick out of. Still, even though she was aware that our Moms knew that we were having sex and quite a lot of it, Lizzie just couldn't get over her odd prudishness about letting anyone except me know that she was totally and very happily into butt stuff. \n\n\"I don't know how to explain it, Russ, but I can't do anal if the Moms are around. I just can't...\" she pouted the only time I brought this thing up just in passing, while we cuddled after I had filled her clingy pussy to overflowing with a massive load of cum. As I laughed and hugged her curvy body tight to me, lewdly enjoying the wet feel of our mixed juices drenching my crotch, Liz snickered and shrugged, pressing her bulging tits into my side. \"It's just part of my craziness, baby, what can I say...\"  \n\nOf course, she didn't have to say anything at all. Pounding her pussy was amazing, it was merely curiosity that had made me ask her why she was still bothered by the idea of someone discovering that she was so much into anal. But still, it wasn't like we were avoiding butt stuff completely. Whenever I ate her dewy folds out, I never neglected to rim her adorable pink rosebud too, and I finger-fucked her little asshole any time we had sex in any position except missionary. When I pointed all of that out to her with a chuckle, Lizzie just scoffed dismissively, laughing my argument off and rebutting with an impish grin and a sexy wink. \n\n\"Oh, come on now, Russ! That hardly counts as anal in my book, and it shouldn't count in yours either! I mean,\" she purred in an ever huskier voice, \"a pro assfucker like you shouldn't use the term 'anal' for anything less than a full blown balls-deep rump ride, don't you think, baby?\"\n\nThat comment, not to mention the sweetly sluttish tone in which Lizzie delivered it, stirred a maelstrom of lust and love inside me that led to an intense make out session followed by another bout of 'catching up' for my amazing girlfriend's snug, sperm-slick pussy. \n\nEventually, after three days devoted to the delectable task of reshaping her sweet little slit to fit my boner to perfection, Lizzie reached a kind of verdict. In a half-solemn and half-giggly tone, she stated that yes, having my cock pumping in and out of her pussy did in fact make her cum easily and a lot, but no, her vaginal orgasms were never as mind-blowingly powerful as the ones she got from getting assfucked. \n\nThat potentially disappointing discovery did not dampen our enthusiasm at all, though, and why would it? When it was all said and done, we were left with a great excuse to start what we immediately agreed to consider as a long-term research project that involved having as much sex as possible until someday, maybe, one of Lizzie's vaginal orgasms would match the intensity of her toe-curling anal climaxes. That sounded like a lot of fun to both of us.\n\n*****\n\nSo, three days after I took my adored Lizzie's virginity and despite the delicious overdose of pussy-plowing action I got (or maybe, in a pretty weird way, because of it), my ever-burning lust for Liz's beautiful plump bubble-butt was unchanged. If anything, it had increased. ",
        "That's probably why I reacted the way I did that night before the party as soon as I saw her bouncy round booty hanging out of her recalcitrant skinny jeans, jiggling and rippling away like the juicy, meaty masterpiece among asses that it was.\n\nAs I knelt there with my face buried between Lizzie's luscious buttcheeks, treating her delicate little asshole to the most thorough rimjob I could possibly give, I wondered for a second what would happen if her Mom should unexpectedly come back into the house right there and then, to get something she forgot, for instance. Most likely, neither Liz nor I would even notice if it happened, given how desperately horny we were as we focused completely on what we both knew was mere foreplay for our imminent assfuck, the first after three days of anal abstinence.\n\n\"Uuhh fuck yeeess! Ooohh Russ... You lick my ass soooo good!\" Lizzie screamed, clawing at the wooden surface of the dresser and arching her back even more, pushing her round jiggly booty against me as if trying to force my tongue to slip deeper into her twitching, saliva-slick anus. \"Oh my god, babyyyy! You're gonna make me cum just licking my asshole like thaaaat!\"\n\nAs soon as those panted words registered, I unclasped my mouth from Liz's winking, spittle-glossy rosebud and shifted lower, aiming at her hot puffy labia. Even though I had purposely ignored her sweet snatch up to that moment to single-mindedly unleash my lingual skills on her butthole, I was thrilled to find her slit literally dripping with juices. While I captured her swollen pussy lips in a lewd suctioning kiss, my adored Lizzie shuddered and squealed with pleasure, egging me on with her moans as the delicious taste of her nectar invaded my mouth and went straight to my head. \n\n\"Uuhh Ruuuss! Oohh... Yeaahhh, that's iiiit!\" she yelped moments later as I began avidly nibbling and sucking and lapping on her engorged, pulsating clit. \n\nFeeling her getting close, high on her lustful sighs and on the sweet rivulets of her liquid arousal trickling into my mouth, I swiftly slipped a finger into her luscious buttcrack and poked at the puckered, saliva-drenched opening of her anus, gently pushing my digit into her tiny, pulsating orifice. Lizzie's breath caught in her throat as the stimulation of my lips and tongue on her needy clit was amplified by the slow uninterrupted penetration of my ass-probing finger. Once I was knuckle-deep into her butt, I barely managed to pump my digit in and out of her tight little hineyhole a couple of times before my amazing girlfriend choked on her mewls and went rigid all over. Suddenly, her climaxing sphincter squeezed my pistoning finger while her soaked pussy rewarded my smooching efforts with a gushing overflow of her delicious girlcum. \n\n\"Yeeeesss, babyyy! Oohh fuuuck, that's so good!\" Lizzie screamed out, cumming and trembling as I ate her drooling folds out like there was no tomorrow. \n\nHer ecstatic sobs grew in volume even more when, instead of letting up, I decided to extend her pleasure even more. Still masturbating Liz's rubbery butthole with my index finger, I started a lewd licking routine made of deep tongue swipes that went from her oversensitive clit to her clingy rosebud and back again, by way of her girlcum-dripping slit and smooth taint. I munched on my adored Lizzie's pussy and nursed on her clit with unrestrained gusto, but I also made it a point to lap and slobber all over her pink little orifice too, making her eager butt-ring so thoroughly slick and shiny with my spittle that I had no problem easing a second digit inside her snug, warm anus while I also increased my ass-pumping pace. \n\nMy cock flexed with aching need inside my pants as I orally worshiped Liz's lovely holes and gloried in the mind-blowing symphony of pleasure yelps that tumbled out of her mouth. The long gasping sighs caused by my suckling kisses on her clit were amazing, as were the incessant throaty moans caused by my persistent masturbation of her sphincter. Still, what really drove me crazy were the breathless whimpers that Liz let out whenever I sloppily smooched her labia and wiggled my tongue inside the sweet dewy folds of her pussy in a lewd and languid parody of an intense french kiss. Eventually, some actual words escaped Lizzie's parted, O-shaped lips. \n\n\"Oohhh, Russ... Fuck, baby!\" she exhaled with a sort of laugh, looking down at me over her shoulder, her bespectacled brown eyes glazed with desire. \"This is so awesome but... Uuhhh yeahh, lick me like that, yesss! But wait, ooh... Russ, now you have to fuck me, okay? I need you inside me, like, right now!\"\n\nRabidly horny as I was, I instantly stood up and unbuckled my pants, pulling them down along with my boxers and letting my massively erect boner spring out. As I pressed myself against Lizzie's gorgeous curvy body, she planted her splayed open hands on the dresser and tilted her booty up even more, wiggling her glorious bubble-butt against me and capturing my thick hardness between the soft, bouncy fullness of her asscheeks. With my arms locked around her and my fingers running all over her cute tummy, I rocked my groin into her round rump and humped my dick in her cozy buttcrack as I leaned closer so that our mouths could meet in a passionate, needy kiss. As Lizzie smooched my juice-glossy lips, I murmured brokenly into her succulent mouth, reaching up with my hands to pull down the cups of her bra and let her spectacular tits spill out and fill my palms.\n\n\"Where do you want me, Liz?\" I panted, flexing my boner in her cozy ass-cleavage as she squealed from the nipple-teasing and boob-pawing caresses I was giving her. \"Tell me in which hole you want my cock.\" \n\n\"Oohh Russ, that's so fucking hot!\" Lizzie sighed at my lust-thick words, a beautifully wanton smile dancing on her lips. \"I want you in all my holes, baby, take any hole you want! Fuck me, Russ, just fuck me pleeease!\"\n\nFeeling dollop after dollop of runny precum oozing from my glans as I kept grinding up and down between the jiggly mounds of her asscheeks, I sucked avidly on Lizzie's tongue before insisting: \"Tell me which hole to fuck, Liz. I wanna hear you say where you want me to stick my cock.\"\n\nSquirming with arousal, Lizzie wiggled her magnificent bubble-butt and moved slightly forward to arch her back even more, accentuating the curve of her magnificent round ass. Inviting as it was, that slight shift in position was enough to let my stiff hotdogged boner slip free from the fleshy embrace of her butt-cleavage and slap back against my abdomen with a lewd thwack. Swiftly reaching back, Liz wrapped her tiny hand around my pole, gripping me possessively with her delicate fingers. Her voice was the sexiest of coos as she locked her bespectacled desire-glazed gaze with mine and slowly spoke. \n\n\"Lube up in my pussy first, Russ, then stick your big cock deep in my ass and fuck me hard until you fill me with cum. I want you so much, baby... I need you inside me like crazy!\"\n\n\"Holy fuck, Liz!\" I growled in response, gluing my mouth to hers and feasting on her tumid lips.\n\nPanting through our scorching soulkiss, I let Lizzie's hand guide my swollen shaft to her sopping little slit, until my bloated knob was poking into the groove of her drenched, puffy pussy lips. As I eased myself into her nectar-drooling opening, I moaned into Liz's mouth as the warmth and wetness of her silky folds engulfed my glans and then inch after veiny inch of my cock, bathing me in the dripping softness of her snug vaginal passage. As I pressed myself forward in an uninterrupted gliding push, Lizzie rocked back in turn to welcome my rigid shaft inside her, until her labia were wrapped around the base of my dick and my entire meaty length was completely slotted within her needy, pulsating slit.\n\n\"Ooohh Russ... I love how your cock feels inside me!\" she panted into my smooching lips as soon as we were once again joined completely. \"Uuhh fuck, my pussy is so full! Oohh... It's sooo good... You're so fucking hard for me, baby!\"\n\nOur mouths were locked together again before I could reply. Without wasting another second, I squeezed Lizzie's fabulous boobs in my hands and started fucking her juicy little pussy with the longest, deepest strokes I could manage. The soft walls of her nectar-flooded honey pot clutched all around my pistoning thickness like a vise made of liquid silk as I quickly accelerated into a strong snatch-plowing rhythm marked by the clapping impacts of my groin hitting Liz's majestic buttcheeks. Her kiss-muffled moans and the voracity with which she sucked on my tongue and nibbled my lips assured me that Lizzie was into that frenzied cunt-pounding assault as much as I was, so I kept cramming myself hard and fast inside her syrupy passage, glorying in the tender suctioning contractions of her enveloping folds. \n\nThe flow of juices squelching around my pistoning boner and the way she pushed back ever more aggressively into my spearing thrusts told me that my amazing girlfriend was rapidly approaching her peak. As always, the notion that I was about to make my beloved Lizzie cum generated an intoxicating mix of lust and love inside me, egging me on to give her as much pleasure as I possibly could. Picking up my pussy-stuffing tempo even more, so much so that Liz had to place her hands wide apart on the surface of the dresser and really prop herself up on her extended arms, I turned my tit-massaging routine into a series of more nipple-centered manipulations. Tweaking and pulling and pinching her stiff puffy nipples, I worked Lizzie's sensitive pink nubs with that subtle combination of viciousness and gentleness that never failed to make her shiver in delight. \n\nHer lips didn't stop nursing on mine for a second while Liz, as expected, began squealing with urgency, mutedly yelping into my mouth, clearly appreciating the sensations radiating from her big beautiful tits and her clingy, cock-jammed snatch. Moments later, as I pushed my massively erect cock as deep as possible into her drooling pussy once again, Lizzie came, screaming as she still munched on my mouth. \n\n\"Mmmh... Mmmhhh! MMMMHH!\"\n\nThe slight pain caused by Liz's teeth biting into my lips as she climaxed with my boner ramming in and out of her spasming vaginal tunnel made me smile inside. Her voracious nipping kiss kind of hurt a bit, but it was okay, it was a sign of just how pleasurable Lizzie's crashing orgasm was. As she writhed in ecstasy, wrapped firmly in my embrace, I was totally mesmerized by Liz's hotness and beauty. Drunk on my own burning adoration for her, I just kept humping away into her snug nectar-squishy pussy until Liz finally pulled back from our torrid kiss and haltingly spoke.\n\n\"Ooooh my god! Holy shit, Russ!\" she gasped, smiling radiantly between raspy breaths. \"Uuhh yeaaah! You're fucking my pussy so good! But wait, baby, wait... Oohh, put it in my ass, Russ! Ahhh fuuuck... I need you to fuck my ass, baby! Pleeease!\"\n\nHorny as I was at that point, I didn't think that anything could have stopped me from continuing to pound Lizzie's cock-caressing pussy until I blew my load inside her womb. Still, that panting desire-husky plea to sodomize her did sober me up a bit, the prospect of sinking myself into her tight little asshole managing to cut through the red mist of my rutting rampage to make my cunt-cramming rhythm slow and finally stop. \n\nHolding still, I exhaled and smiled in glad anticipation. As I breathed and hummed, letting my rising ejaculation settle down, my throbbing boner rested motionless within the moist, velvety sheath of Lizzie's snug pussy. Letting go of her massive tits, I started caressing the smooth skin of her back, stroking her shoulders and her sides and then tracing her arched spine downwards, headed for the beckoning roundness of her soft bubble-butt. Enjoying the feather-light touch of my fingertips, Liz purred contentedly, wiggling her plump booty. \n\n\"Wow, that was intense...\" I panted, shaking my head, still quite cunt-drunk as I enjoyed the feel of Lizzie's flawless skin under my digits and the tender, engulfing moistness of her sugary passage around my cock. \"I guess I got carried away a bit there, but your pussy is just too good, Liz! So wet and soft and cozy...\" \n\n\"Glad you like it, Russ!\" she replied with a satisfied smile. \"You're so hard inside me and you fucked me so good, baby! I just hope you'll do the same with my ass now...\" \n\nWith an impish laugh, Lizzie suddenly gave a bouncy backward push with her fleshy asscheeks, forcing me to pull out of her pussy in the sexiest way possible. Giggling over her shoulder as my raging hardness slipped out of her nectar-leaking slit, Lizzie just cocked an eyebrow suggestively and shook her majestic ass, swaying her hips slowly round and round. The juicy, jiggling ripples of her perfect bubble-butt were hypnotizing to say the least, but my ass-fixated brain still registered Liz's soft, sexy murmurs: \"Do it, Russ... My ass is all yours... Fuck my tight little asshole, baby...\"\n\nAs she spoke those irresistible words, Lizzie was moaning with anticipation and bending over the dresser completely, so that her huge bulging tits were squashed into the lacquered wooden surface. The sight of her sumptuous bubble-butt so enticingly offered and tilted up toward me was enough to make my painfully stiff length flex, empowering the rush of anal desire sizzling through me. My hands were on Liz's epic ass in a heartbeat, parting her meaty buns and revealing the adorable, tiny pink star of her sphincter. A sheen of my saliva was making her rosebud glint and my cock was literally dripping with Liz's pussy juices, all of which suddenly reminded me of something else, something that made me curse bitterly.\n\n\"Fuck! The lube!\" I exclaimed, slapping my forehead as I remembered that I didn't have the bottle of lubricant with me. \"Damn, I left it in my jacket, in the car! Oh well... You've got some in your nightstand, right, Liz?\"\n\nGrinning like a Cheshire cat as she looked at me over her shoulder, Lizzie just reached an arm toward the far end of the dresser, where her bag lay. After swiftly rummaging in it, she extracted the half-empty bottle of lube we kept at her place. As she handed it to me, staying docilely bent down with her bouncy bubble-butt ready to be plundered, a playful smile danced on Liz's lips. Behind her cute geeky glasses, her brown eyes were as big and luminous as ever when they locked with mine and our hands met, holding the bottle together. Our laughs exploded at the same time as Lizzie and I silently processed the fact that we had both preemptively decided to bring some lube to the party, each of us eagerly anticipating some butt stuff to happen that night.\n\n\"We're pretty terrible, aren't we, Russ?\" Lizzie chuckled as she let go of the bottle of lubricant, entrusting it to me. \"I mean, really... Could either of us be more ass-obsessed?!\"\n\nSmiling lovingly at her, I nodded my agreement. \"Well, yeah, there's that... Also, we can take this as the ultimate proof that great minds think alike!\"\n\n\"Oh yeah, definitely!\" Lizzie concurred, joining in my laughter. Then, wiggling her round jiggly rump, she went on with a sexy purr. \"Now, how about you stick that big fat cock in my ass, Russ? It looks so swollen, like it really needs a hot tight place to squeeze all the cum out of it...\"\n\nThe teasing wink and the way she bit her lips in anticipation were the perfect cherry on top of Lizzie's insanely hot dirty talk. Panting with arousal, I nestled my rock-hard dickmeat in her soft asscrack and held her plump bouncy buttcheeks apart with one hand while pouring lube all over my length and on her winking little rosebud. As Liz reached a hand to her pussy and started slowly circling her clit, I gently gaped her rubbery orifice with my thumb and forefinger, letting a generous dose of the slippery fluid dribble straight into her needy asshole. My sweet Lizzie shuddered and gasped as the cold lube trickled into her anus, but the warm feel of my cockhead poking and prodding at the entrance of her tiny twitching sphincter made her instantly sigh with excitement. \n\nAs always before I claimed her ass, I looked up from the awesome sight of my purple glans pressing against Liz's slick needy butt-ring to lock gazes with her. \"Ready, babe?\"\n\nNodding and cooing as the pleasurable buzz radiating from her well-rubbed clit enveloped her voluptuous body, Lizzie smiled as she softly said: \"I'm ready, Russ. Stretch my asshole good, baby! I want to feel full of you, all the way inside me... I want you to go deep, really deep in my ass!\"\n\nHer true need, the trust and intimacy that tinged Liz's genuine plea to be filled up by my cock made me go all fluffy inside while my boner throbbed with desire. Resting my hands on the smooth, perfectly round hillocks of her asscheeks, I kept my eyes locked with my adored almost-sister's as I pushed my hips forward a bit, slowly but firmly pressing my bulbous glans into her alluring little butthole. \n\n\"Oh my god, Liz, you have such a fantastic ass... And your sweet asshole is so tiny and pink and cute... You're so fucking beautiful, Liz!\" I grunted without even knowing I was speaking, transfixed as I watched her slippery sphincter pulsating excitedly in response to my gentle push as I started to penetrate her. \n\nLooking obscenely big against Lizzie's tight little orifice, my bloated cockhead bulged out while I kept a gentle but firm pressure on the rubbery puckered opening of her forbidden hole. There was resistance for just a moment, then, as Liz sighed and let her anal muscles relax completely, her willing butt-ring yielded and blossomed out around my spongy knob, letting me in. The clingy, slick warmth of her anus engulfed me in a velvety grip as soon as my glans slipped past Lizzie's tender pink rosebud, disappearing with a squishy pop inside her amazing ass along with the first rock-hard inches of my shaft. Gritting my teeth as a wave of anal delight hit me, I stopped there and waited.\n\n\"Ahh fuck, babe!\" I panted as I kneaded Liz's epic bubble-butt while slowly easing my boner deeper into the heavenly tightness of her rectum, sliding further inside her a millimeter at a time. \"I love your ass! Your asshole is so fucking tight, Liz!\"\n\n\"Oowhh yes, Russ! Uuuhh fuck yeaahhh! Your cock... So big in my ass... Uunghh!\" Lizzie mewled lustfully, straining to speak coherently. \n\nHer eyes were barely open behind her glasses, her head resting sideways on her forearm as she panted at the feel of her tiniest, most delicate hole stretching out to its limit around my massively erect boner. She looked so insanely beautiful with her auburn hair fanned out on the surface of the dresser, her mouth hanging slackly open as she tried to steady her ragged breathing. A rapturous smile danced on Liz's puffy lips while she persistently frigged her clit, making a visible effort to stay focused enough to look over her shoulder at me and talk. \n\n\"K-k-keep going, baby... Uuhh fuck! Your cock feels so fucking good in my ass! Don't stop, Russ, I need you to stuff me full... Oowwhh god! Give me more, baby, I want you deep inside meee! Uunghh, you're so hard and sooo big, I love how you stretch my tight little asshole... Ooohh Ruuuss... Open me up and fuck me, baby, fuck my aaass!\"\n\nTrembling with arousal as I held onto the plumpest, roundest, juiciest bubble-butt ever, I smiled at my adored Lizzie as I carefully pressed forward, sliding my raging erection into her pliant butthole. Watching her oily, distended orifice hungrily gobbling inch after inch of my fat cockmeat, I growled at the irreplaceable feel of Liz's smooth dick-hugging anal walls warmly enveloping more and more of my length as I delved deeper and deeper into her rectum. As if that unique sensation wasn't enough, the magnificent sight of my shaft plunging between her plump buttcheeks and disappearing into her dilated little asshole was accompanied by the celestial chorus of sighs, moans and gasps of unrestrained anal pleasure that kept escaping my sweet Lizzie's O-shaped mouth. ",
        "Excited and achingly hard as I was, I feared that the sensory overload I was experiencing might make me cum too soon, but that didn't stop me from completing my slow yet persistent ass-plugging mission. Taking my time to savor every moment, glorying in the pattern of brief resistance followed by willing capitulation that marked the conquest of every snug millimeter of her slippery anal passage, I eventually managed to cram my girthy shaft to the root inside the amazing tightness of Lizzie's warm, cock-squeezing rectum. \n\nWith my scrotum pressed into her soft juice-drenched pussy lips and my groin glued to the luscious perfection of her bouncy booty, I exhaled in delight as I drank in the spectacle of Liz's stretched out butt-ring wrapped firmly around the thick base of my shaft. The mere sight of our anal joining caused my boner to flex with joy inside her ass, coaxing a big dollop of pre-cum to spurt from my glans and plaster the deepest depths of Lizzie's buttery bowels. The unique mixture of slick tightness, caressing heat and smooth pressure surrounding my stiff pole felt like perfection itself. Lizzie's ass was pure heaven, and once again I was being welcomed in there, completely and wantonly. Buried balls-deep inside her adorable pink butthole, massaged from tip to root by her rippling, swiftly adjusting rectum, I sank my fingers in the meaty plumpness of my adored almost-sister's pillowy bubble-butt, groaning deliriously. \n\n\"Holy fuck, Liz! Your ass is the absolute best, babe... It feels so good around my cock, it's incredible! Ohh god, how can this tight little asshole be so fucking awesome... Seriously, how?!\"\n\nSmiling as she panted and whimpered, squirming with pleasure in time with the dick-clenching contractions coursing through her cock-stuffed anal passage, Lizzie had a weird expression of sultry, slutty pride on her flushed face as she met my gaze and haltingly replied. \n\n\"Oowwhh Russ! You should know by now that uuuhh... My legendary ass has lots of special powers, like... Uuunghh... Like making your big cock feel super fucking good! Uuuhh Russ... You have to fuck me now, baby... Fuck my ass hard and deep!\"\n\nLeaning down on her curvy bent-over frame, I planted a long sloppy kiss on Lizzie's succulent lips before panting straight into her mouth: \"As you wish, my Anal Queen!\"\n\nThe half-giggle and half-purr that Liz let out, smooching me tenderly as I stirred my shaft inside her velvety rectum, seamlessly turned into a long husky moan moments later, when I pulled my thick log slightly out of her ass and then pushed back in, taking her breath away and making her shiver in delight underneath me. Not wasting any time, feeling her relaxation and eagerness, I started sliding my boner in and out of Lizzie's clingy little sphincter in short shallow strokes, keeping most of my fat dickmeat crammed deep inside her anus at each pass as I got in a fluid butt-stretching rhythm. \n\nDespite the slickness of her anal sheath and her obvious desire to be sodomized, I willed myself to go slow at first, extracting a bit more of my shaft from Liz's pliant tiny orifice every time before gliding back into the warm, cock-tugging tightness of her narrow anal chute. All the while, I remained draped over Lizzie's surrendered body, my kneading hands paying homage to her sumptuous bubble-butt while we traded passionate tongue-suckling kisses. Every now and then, I interrupted our rabid make out session to pepper her shoulders and neck and chin with butterfly smooches, and also to leave her mouth free to let out those insanely erotic whimpers that were the glorious background sound to our every loving assfuck.\n\nWhile the squishy motions of Lizzie's fingers strumming away on her clit got more urgent, my butt-jamming routine grew gradually more intense. At every in-stroke I pumped my well-greased pole a bit more urgently into her ass, plunging faster into her steamy anal depths, until I was embedded to the hilt and it was time to retreat and enjoy the feel of her snug oily anus clutching greedily all around me, sucking on my withdrawing boner and giving me the mind-blowing impression that her sweet cock-hungry butthole was desperately trying not to let me go. Gradually lengthening my strokes, I was soon pulling out most of my veiny hardness from Lizzie's docile sphincter at each pass, making her moan uninterruptedly, her expression ever more ecstatic. \n\nLiz's broken, lustful yelps and the tell-tale pre-orgasmic pulsations of her slick rectum were making me crazy with pleasure, egging me on to pick up my sodomizing tempo even more. The meaty impacts of my crotch slamming against her jiggly bubble-butt turned into a quick clapping beat as I started plowing Liz's exquisite little anus with vigorous ass-slamming thrusts. The slippery friction and the suctioning tightness of her rippling anal walls clinging to my rump-skewering rod were making me see stars as my bootylicious goddess's vocalizations increased in pitch and loudness, heralding her imminent climax. \n\n\"Ooohh my god, Ruuuss! I'm gonna cuuum! Uuhhh your cock is making my asshole cum so haaard! Ooohh fuuuck... Uuhh babyyy... Fuck fuck fuuhh-uuhh-uuck!\"\n\nAt those words, I gritted my teeth and began mounting my beloved Lizzie's plump heart-shaped ass like my life depended on it. Growling low in my throat, I drove my massively hard shaft faster and harder and deeper into her twitching asshole at every pass. I only paused for the briefest of moments whenever I bottomed out inside her ass, to enjoy the incomparably tight and smooth feel of full anal penetration, then I pulled out from the slick, velvety warm grip of Liz's quivering rectum only to quickly plunge balls-deep inside her magnificent bubble-butt, over and over again. Pressing my chest on her arched back and resting my head close to hers, I bucked my hips as vigorously as possible into my sweet Lizzie's round booty while we locked gazes. Behind her glasses, her eyes were reduced to pleasure-clouded slits, a spark of pure anal lust burning in her lustrous brown orbs.\n\n\"Fuck, Russ... Uuhh fuck!\" Liz half-laughed and half-yelped, puckering up her lips for a kiss but unable to actually press her mouth onto mine. \"I love iiit! Ooowhh... I fucking love your cock pounding my ass! Uuhh god, yeaaahhh... I love you so much, babyyyy!\" \n\n\"I love you too, Liz! Ahhh fuck, your ass is too fucking good...\" I growled as I smooched her lips and kept sliding my butt-drilling pole in and out of her snug, pulsating anus. \"I love your epic booty, and I love it when you cum with my cock deep in your tight little asshole... Oohh yeah, Liz, cum for me now! Cum with my cock in your ass, Lizzie!\"\n\nThe barrage of ass-splitting thrusts that I unleashed as soon as the words were out of my mouth did the trick. Liz's desire-glazed eyes snapped open as her breath was suddenly knocked out of her. A powerful series of cock-choking contractions coursed through her fully stuffed anal passage, trapping my butt-slamming boner in a delicious prison of soft, rippling tightness. Liz's rectum held my shaft in such a clingy, dick-tugging grip that it forced my intense sodomizing pace to a sudden halt. My head spun while the pleasure centers in my brain fired up all at once, giving me the impression that time had stopped. In that moment of absolute and hyper-concentrated buttfucking bliss, I looked into Lizzie's stupefied eyes to find her looking back into mine. \n\nAs I stared deep into my almost-sister's very being, meanwhile remaining totally engulfed within her beautiful orgasming ass, I felt connected to her like never before, caught together as we were in a priceless instant of perfect physical and non physical oneness. It was crazy and amazing beyond words, like a still frame of unadulterated happiness made real. It was as sudden and fleeting as the blink of an eye, then reality reasserted itself, calling Liz and me back to find ourselves in the middle of an overwhelming, mind-shattering storm of shared anal delight. \n\n\"OOOOH MY GOD RUUUUUSS! UUUHHH YEEEEESSS!\"\n\nLizzie's orgasmic screams and the cock-milking contractions of her rectum hit me at the same time as the wet feel of her gushing girlcum streaming all over my pussy-bumping scrotum. With my aching boner tucked balls-deep inside her ass, throbbing hard and drooling glob upon sticky glob of precum inside her buttery bowels, I was more than happy to just stay there as I was and let Liz's toe-curling anal climax squeeze out every last drop of seed I had in me. Feeling my ejaculation draw nearer with every second, I groaned and grabbed possessively onto her plump juicy booty as I enjoyed the delicious intensity of the cock-nursing anal massages that her climaxing asshole was treating me to. Then, unexpectedly, Lizzie's rapturous yells coalesced into words of such compelling hotness that even my dopey, lust-fogged brain couldn't ignore them.\n\n\"UUUHH FUCK ME, RUSS! Fuck me, fuck me, fuck meeee! Oooohh shiiit... Fuck my ass, Russ! More, I need moooore! Don't stop fucking my aaaaass! Uuhhh make my ass cum again, babyyy!\"\n\nThat needy, pleasure-demanding plea triggered something inside me. It awakened a sort of primal sodomizing fury or something, spurring me on to pound away at the amazing, dick-milking ass I was buried balls-deep into. \n\nGrowling, gluing my torso to Liz's arched back and thus pinning her down to the lacquered surface of the dresser, I started frenziedly bucking my hips, pumping my massively stiff cockmeat in and out of my adored Lizzie's orgasm-possessed and impossibly snug rectum. It was a good thing that I had poured so much lube straight into her ass and that my shaft was also coated with a dripping layer of her pussy juices, otherwise there would have been no way I could have managed to move inside her cramping anal passage, let alone fuck it, not with my cock being so swollen and her anus being tighter than ever due to her spectacular and still rolling climax.\n\n\"OOWWHHH YEESS! UUHH RUSS RUUUSS RUUH-MMHHPH!...\"\n\nThe kiss that locked our mouths together silenced Liz's breathless screams as I hammered away into her ass with all I had. My cock throbbed and flexed continuously, pulsating against the slick constricting walls of Lizzie's warm rectum and thus making her asshole sizzle and clench with increased pleasure around my butt-pounding length, creating a vicious circle of mind-blowing anal delight. For the longest thirty seconds of my life, I rode my beloved Lizzie's rump with bestial lust, impaling her twitching, docile little rosebud with a barrage of savage ass-reaming plunges that caused an uninterrupted flow of kiss-muffled yelps to tumble from her mouth straight into mine.\n\nIt didn't last long, but it was the most intense handful of seconds of both mine and Lizzie's life so far. It ended as spontaneously and intensely as it had begun, when I suddenly let go of one of her sumptuous round buttcheeks and stabbed my hand straight to her pussy. While Liz strummed crazily on her engorged clit, I slipped two fingers into her soft nectar-drooling folds. With my fat log still ramming away in and out of her narrow oily rectum, we trembled in unison as I pushed my digits deep into Lizzie's vaginal channel and curled them up, trying to reach her g-spot.\n\nMaybe I did rub the right place inside her pussy, or maybe she was just ready to blow already, it was hard to say. Whatever the reason, within moments the divine squeezes of Lizzie's amazingly tight asshole reached a new peak of balls-draining intensity. As her earth-shattering orgasm reared up and crashed full force into her all over again, empowered by my lustful butt-busting thrusts and by the mixed stimulation on her pussy and clit, Liz yelled into my mouth and sank her teeth into my tongue. Sheathed to the hilt in her beautiful plump ass, unable to move inside her totally clamped-down rectum, consumed by the burning rush of atavistic passion that had claimed both of us, I bucked my hips one last time, trying to bury myself impossibly deeper inside her ass than I already was. Then I came. \n\nI saw stars as a deluge of hot cum fountained from my swollen boner, spraying rope after massive rope of sperm inside Lizzie's deepest anal depths. As I flooded her warm dick-suctioning rectum with an impressive barrage of my milky seed, I could feel the beat of Liz's heart pulsating all around my fully immersed cockmeat. I was totally overcome with love, lust and orgasmic bliss all at the same time as I realized that the twitching spasms of my almost-sister's anal walls were coming in synch with the throbbing of my ejaculating pole and the surges of jetting spunk that were inundating her smooth, constricting rectum. \n\nThe flashing shocks of our shared and equally powerful orgasms undid both Lizzie and me, burning through us and going back and forth between our deeply fused bodies. Long after my cock had finished unloading a torrent of dense sperm inside her ass and her soft little pussy had stopped gushing her sweet girlcum on my balls, even as her warm seed-plastered anal passage relaxed and the last drops of pearly semen oozed out of my bloated glans, the haze of our pleasure still enveloped us, leaving us spent and ecstatically breathless, crumpled against the dresser with our mouths still joined together.\n\nI was light-headed when Lizzie and I finally broke our breathless, devouring soulkiss. In truth, we were both driven by the sheer need to gulp in some air, otherwise we would have probably extended our torrid make out session even more. Groggily, with my head resting on her shoulder and my arms wrapped around her soft cute tummy, I stood up a bit straighter, separating my chest from her arched back. Pleasure-weakened as she was, Lizzie slowly lifted her upper body off the surface of the dresser and planted her elbows on it to hold herself up. No longer squashed underneath her, my babe's huge beautiful tits were swinging heavily in time with her labored breathing as she cast me a dopey-eyed glance over her shoulder, a beaming smile painted on her flustered, gorgeous face.\n\n\"Oh... My... God...\" she stated dizzily, taking in big lungfuls of air between each word. \"Russ... That was just... Wow! Simply fucking WOW!\"\n\n\"I know, right...\" I managed to exhale, blinking and taking stock as if emerging from some sort of butt-lust overdose. I was barely starting to get my bearings when Liz's bright laughter made me look into her soulful, bespectacled brown eyes. She was looking at me funny, an adorable yet mischievous expression brightening her pretty visage. \"What?\" I asked, baffled.\n\n\"Oh nothing, I was just enjoying the feel of having my asshole filled to bursting with cock and cum! Seriously, Russ, that was a lot of cum even for your standards! Mmmh, such a huge creamy load squishing inside my ass... I can actually feel your cum deep in my tummy, all gooey and warm...\" Liz dreamily purred, blushing a bit yet clearly getting a kick out of the whole situation, all the while wiggling her cock-crammed bubble-butt against my groin in tiny, lazy circles. \"And you're barely even softening! Jeez, baby, my ass really must be magic or something!\"\n\nI had to laugh at that. \"Oh yeah, your ass is definitely magic, Liz!\" Then, more seriously, I added: \"Uhm, maybe I should pull out now, though... It got sort of crazy at the end, and I was a bit rough, I guess... But you're okay, right Liz? I didn't hurt you, did I? It just seemed right at the moment, so...\" \n\n\"Aw, baby! Of course you didn't hurt me, relax!\" Lizzie purred, locking an arm around my neck to pull me closer and then kissing me lovingly. \"Well, it did hurt a little bit at some point, but in good way, you know... And yeah, it felt very right at the moment, it was so good and intense! Really, I'm more than okay, Russ, I'm great! I still have goosebumps all over, see? And I love feeling you in my ass, stuffed so deep inside me, filling me with your big cock right after you've pumped my little asshole full of cum... Oh Russ, I know it's dirty and slutty, but I just love it when you creampie my ass like that! In fact,\" she added, her languid coos suddenly shifting to a bright playful tone, her words breaking into a silvery laugh, \"now that I think about it... Ahah! Yes, of course!\" \n\nEver more befuddled, dazed by the aftershocks of pleasure still coursing through me, I straightened up further and pulled Lizzie with me, cupping her chin as I gently turned her head to stare questioningly into her smirking face. \n\n\"Russ,\" Liz said in response to my unspoken question, a spike of excitement in her voice, \"I've just had the best idea ever! Come with me! No, nonono don't pull out. Stay in my ass... Let's just, uhm, just hold me tight from behind like you're doing and move with me, okay? Right, now let's try to get to my nightstand... Yeah, that's it, great!\"\n\n\"What the fuck...\" I snickered along with Liz as we made our ungainly way across her bedroom, moving together in short jumps and awkward shuffles while remaining connected, my cock still sheathed inside her ass.\n\nWith my pants bunched around my ankles and Liz's skinny jeans pulled down to her mid-thighs, our progress was both slow and comical, and the fact that we erupted in laughter at every clumsily synched step didn't help either. Still, we did manage to cross the room while staying joined. At that point, Lizzie instructed me to sit on the edge of her bed. Following my motions, she settled herself on my lap in turn, making us both moan as her plump bubble-butt pressed on my thighs and my chubby boner was firmly pushed to the hilt into her seed-sloppy anus. Then, leaning toward her nightstand, Liz reached inside the top drawer and fished out something pink.\n\n\"Wait a second, is that...\"\n\n\"My buttplug, yes!\" Lizzie finished for me, holding the plastic toy in her hand and staring at it with a sort of funny intensity. \"And, along with the massive load of cum you've just shot in my ass, it's the key element to the best idea ever! Watch this, Russ, I'm sure you'll like it...\"\n\nStanding slowly up, Liz raised her juicy rump from my lap, causing my semi-hard erection to gently slide out of her clingy, sperm-slick asshole. My groan of disappointment and Lizzie's resigned sigh marked the moment when my fat glans slipped from her delicious little orifice with a squishy plop. Still, I had no time to feel dissatisfied. Standing before me, bent at the waist with her legs held straight and her big pillowy tits dangling heavily from her chest, Liz was giving me an incredible close up view of her round, fabulous booty. \n\nLooking over her shoulder as I salivated in transfixed adoration of her heart-shaped masterpiece of an ass, my sweet Lizzie urged me into action: \"Quickly now, Russ! Spread my buttcheeks!\"\n\nI did as I was told, always glad to fill my palms with the fleshy perfection of my girlfriend's beautiful bubble-butt and always thrilled to unveil the rosy star-shaped treasure hidden deep within her luscious ass-cleavage. Bent over as she was, Lizzie was already giving me an amazing view of her smooth nectar-glossy pussy, but the best was yet to come. As soon as I splayed her meaty globes wide apart, a jolt of excitement hit my chubby shaft at the sight of her gaping, cum-smeared sphincter winking at me while it tightened closed on itself and gradually resumed its tiny puckered shape. Even though I had shot my load really deep inside Liz's rectum, I could see the first gooey white globs of my seed already starting to trickle out of her pink twitching rosebud. I would have happily just sat there and watched that lewdly beautiful spectacle, but Lizzie was in a hurry to complete her plan.\n\n\"Aw no... It's leaking out of me, I can feel it!\" Liz squealed, furrowing her brow in displeasure as she looked at me over her shoulder. \"Hold my buttcheeks open, Russ. I'm gonna stop that creamy cum from trying to leave my asshole!\" she said, unable to suppress a giggle at her own naughtily determined words as she reached back with her hand and swiftly pressed the tip of the buttplug to her tender, shrinking orifice.",
        "My cock flexed with excitement and a huge grin spread on my face as I watched Lizzie push gently on the base of the tapered toy, gradually embedding it inside her insatiable little asshole. A soft sexy sigh escaped her lips as her adorable sphincter eagerly gobbled the whole buttplug, until only the base of the toy was left outside of her ass. With her delicate rubbery anal ring sealed shut around the plastic invader and her needy anus nicely jammed again, Liz exhaled contentedly. \n\n\"Mmh that's much better...\" she cooed, winking at me over her shoulder and wiggling her epic bubble-butt right in my face. Turning around and facing me, my amazing almost-sister chuckled as she took in my goofy expression. \"This way I'll feel your cum inside me all night! Plus, when you fuck my ass again later, I'll be already all lubed up and ready for your cock! Now tell me, Russ,\" she concluded, clearly proud of herself, and with good reason, \"is this the best idea ever, or not?\" \n\nAll I could say was a heartfelt: \"Fuck yeah!\"\n\nLaughing excitedly, Liz fell into my outstretched arms and sat sideways on my lap with her hands locked around my neck. We started making out instantly, munching on the other's lips with passion and love, driven by the naughty, joyous complicity that bound us together. Once again, I was mind-blown by my sweet Lizzie's adventurousness and sheer awesomeness. Not only had she assumed that we'd have more anal sex later, which I too had counted on, but she also wanted to feel my cum inside her ass and hold it in there with the buttplug until then! There really were no words to express how much I adored her, so I just tried to let her know it through my kisses. \n\nDuring our smooching marathon, my plump cum-glazed boner rested against the smooth womanly curve of Lizzie's bubble-butt, getting harder by the second. When she broke our lip-lock, my surprise turned into arousal in a second as I felt her tiny hand grabbing my sperm-slick shaft at the base and slowly starting to pump up and down. As I moaned and hummed in delight under her lazy jacking manipulations, Liz gave me one final giggly peck on the lips, before murmuring sexily into my mouth.\n\n\"Russ, if you take off your pants right now, like, in the next five seconds, I'll get on my knees and suck your cock until you fill my mouth with cum... I want to swallow you so bad, baby!\"\n\n\"Oh my god! Yes!\" I gasped, my mind aflame with desire all over again and my recuperating erection stiffening even more. \n\nIn the blink of an eye, Liz had jumped off my lap with a tittering squeal while I kicked off my shoes and pants and boxers, sending everything flying across the room in a messy heap. Snickering and biting her lips with excitement, Lizzie removed her skinny jeans, throwing them away along with her panties and bra, remaining gloriously naked except for her adorable nerdy glasses. \n\n\"There! I hate those stupid pants, by the way...\" she grumbled as she knelt down between my legs as promised, looking up at me as I feasted my eyes on her huge jutting tits, her naturally beautiful face and every other bit of her voluptuous body. \"I guess I'll just wear a skirt tonight. It's too bad, though...\" Liz went on with a sigh, her sparkling brown eyes locked with mine as she held my boner at the base and gently brushed her exquisite lips on my purple glans. \"My ass would have looked great in those jeans, Russ. Seriously.\"\n\n\"Ooh Liz... Ahh, fuck!\" I moaned as she took me into her mouth, sliding the soft seal of her lips past my bulbous tip and down my shaft in a lascivious nursing smooch. \"Liz, your ass looks great all the time! Believe me, I should know, I'm always staring at your epic booty, always... It's just too beautiful, babe, so perfect... Oohh yeaah...\"\n\nBobbing her head fluidly in a slow cocksucking rhythm, smiling around my lip-stretching pole as my increasingly pleasure-shaky words faded into moans, Lizzie slurped hungrily on my seed-coated dickmeat for a few more moments before pulling back with a purr. \n\n\"Thanks, baby! I love that you're so crazy about my big butt, you know... You always make me cum so much when you fuck my ass, Russ, it's so good! I can't believe how much I like having your huge cock stuffed deep inside my tight little asshole... And you say the nicest things too, it's so great to know that you like my ass the way you do, baby.\" \n\nLizzie's languid words came out slowly and between long pauses, understandably, since she was lovingly lapping up and down and all round my thick rod, retrieving every speck of sperm she could get, making me grunt with horniness in the process. As Liz suckled and licked and smooched my plump semi-hardness, I couldn't stop groaning in ecstasy, drinking in the whole amazing scene all the while. At some point, after her incredible routine of sloppy dick-worshiping kisses turned into a long nursing session on my bloated knob, Lizzie laughed and spoke musingly, almost to herself. \n\n\"Mmh... So big and fat, hard but not too hard... All wet and slippery... Yeah, it's perfect!\"\n\n\"Whaaa...\" I dreamily laughed. \"What do you mean, Liz?\"\n\n\"Your cock is perfect right now, Russ...\" she purred, flashing me a sultry smile while she rubbed my dickmeat on her soft lips, lasciviously using it like a brush to spread around the slick glinting mixture of my precum and her saliva. \"It's perfect for this...\"\n\nGobbling my glans and sliding her vacuuming mouth down along my veiny pole, Lizzie pushed her face lower and lower in a long uninterrupted plunge, stopping only when her nose was pressed into my crotch and my balls were resting on her spittle-shiny chin. The liquid heat of Liz's constricting oral cavity engulfed me from tip to root as she held me there, slotted to the hilt inside her gullet. Even though she had learned to deepthroat me pretty easily and she had developed insane cocksucking skills, Lizzie had never actually managed to cram my entire length down her throat in one single, effortless pass before. It would have been pure awesomeness to experience such a perfect balls-deep blowjob from my beloved girlfriend at any given moment, but somehow it felt even more thrilling right there and then, after our wild sodomy and with the colossal load of cum I had just sprayed inside her ass being greedily hoarded deep in her rectum thanks to the buttplug. \n\n\"Ooohh fuuuck... Aaahh Liz, that's so good!\" I growled, my mind reeling with excitement as my chubby, stiffening cock throbbed with joy inside her warm, clutching gullet. \"That's so fucking amazing, babe!\" \n\nLizzie just winked at me and kind of smiled around my throat-jamming girth as she slowly started pulling back, keeping eye contact all the while and suctioning me sloppily with her saliva-flooded mouth. When only my fat spongy knob remained immersed in her slurping oral cavity, she took a moment to breathe deeply through her nose and then swiftly started inhaling me all over again, to the sound of her squishy cock-gobbling noises and my own moans of unrestrained appreciation. \n\nA spark of lustful, lascivious pride glinted in Liz's big brown eyes as she repeated her dick-swallowing feat again and again and again, setting a devastating deepthroating rhythm. Gagging and spluttering but never stopping, my sweet Lizzie gave me the most passionate and loving blowjob she had ever given me, making me so crazed with pleasure that my hands clawed at the bedspread and my eyes rolled back in my skull as I howled out deliriously. Of course, my dick soon hardened to a state of absolute steely stiffness, which in turn made Lizzie's self-choking plunges lose some depth. \n\nThat was when I fully realized what she had meant earlier when she had said that my cock was 'perfect': while I was semi-hard, it was much easier for her to let my boner slip all the way down her gullet, because it could still adapt and kind of bend inside her oral cavity and so reach deeper into her throat. That thought sent a jolt of arousal to my groin and made my heart beat faster, filling me with emotion. It was incredibly satisfying on so many levels to realize that Liz must have mused on that concept and waited for the right moment to experiment that tonsil-poking penetration with me. It was super hot, but it also made me go all fluffy inside, once again reminding me of how lucky I was to have my sweet, sexy, incredible almost-sister always by my side. \n\nReaching my hands to her dick-clogged face, I gently caressed my adored Lizzie's cheeks and tucked her cascading auburn locks behind her ears as she devotedly kept sucking my cock. It was great to bask in the visual of her expert lips sliding wetly up and down my rock-hardness, and the symphony of sloppy fellating sounds that came with it empowered the glorious feel of Liz's soft hot mouth nursing and slobbering on me. All the while, an irrepressible buzz of affection and intimacy was there too, simmering inside me, making every second of that passionate blowjob even brighter, more meaningful and pleasurable. \n\nMy eyes never left hers as Lizzie kept blowing me lovingly, until I exploded inside her talented cocksucking mouth, inundating her oral cavity with jet after jet of warm cum. While still spraying thick ropes of seed against her palate and down her throat, I lay back on my elbows, dizzy with the intensity of my release, panting and smiling as Liz persistently suckled on my spewing boner. As she coaxed every last drop of sperm from me with her swirling tongue and massaging lips, Lizzie moaned and purred around my fat dickmeat, enthusiastically swallowing my fluid essence in noisy, hungry gulps and keeping at it until she was sure that my balls were totally drained of all semen. \n\nFinally, when she climbed into bed by my side, humming contentedly and licking her lips, I instantly wrapped her in the tightest embrace possible, making her squeal and giggle as her big jutting tits got squashed into my chest and my hands roamed all over her soft curvy body. Snuggling and kissing and caressing, we rested in each other's arms on Liz's bed for quite a while, enjoying the feel of one another's naked skin, savoring our absolute closeness. \n\nWhen she eventually spoke, there was laughter in my amazing girlfriend's voice. \"Well, Russ, I guess we'll be fashionably late for Vanessa's party!\"\n\n\"I guess we will, yeah,\" I replied, planting a lingering kiss on Lizzie's gorgeous, smiling mouth. \"But, theoretically, as long as we get there before midnight we should be fine.\"\n\n\"Right,\" she nodded, still smirking, \"but maybe we should go now...\"\n\n\"Yeah, maybe...\" I conceded as my fingers traced the smooth slopes of Liz's huge jutting tits, then moved down to her cute tummy and further below, past her pussy mound, until I reached my target and I started caressing her moist, swollen labia. \"Or, maybe...\"\n\n\"Ooh Russ!\" Liz sighed, her smile widening as I slid two digits into her dewy little slit while titillating her budding, nectar-slippery clit with my thumb. \"You're really terrible, you know... Uuhh yeees, like that! So terrible, baby...\"\n\n\"I guess that makes two of us, then!\" I chuckled as I felt my adored Lizzie melting in my arms while her juicy folds got wetter and hotter under my touch, her giggles soon turning into those fantastic pleasure mewls I could never get tired of listening to.\n\nYes, we were definitely going be late for the party!"
    ],
    "authorname": "ZenZerker",
    "tags": [
        "anal",
        "ass",
        "oral",
        "anal creampie",
        "ass to mouth",
        "love"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/backdoor-sweetheart-ch-04"
}