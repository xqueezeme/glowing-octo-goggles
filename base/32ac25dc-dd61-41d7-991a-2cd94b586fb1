{
    "title": "The Best Summer Job Ever Ch. 05",
    "pages": [
        "Here's the alternate happy ending I promised. This part is more of a love story than the others, but there's still plenty of sex. If you liked how chapter four left off then you might not want to read it. For those who do read enjoy.\n\n***\n\nFor four long years I had worked for this day. The past two years had been difficult, but every new day was a little bit easier. Today I was graduating from college and looked at it as a new beginning. Tomorrow I was going on a date with friend of a friend of a friend and while I wasn't expecting to find eternal happiness it was a start that had been a long time in coming. Heading to the auditorium I felt free for the first time in years and finding my place in the crowd I waited for my name to be called.\n\nI still had lingering feelings for Ellen, but the occasional emails I exchanged with her daughter told me she had a new man in her life. When I found out she was involved with another man over a year ago I knew it was time to move on. This past year I'd been so busy with school that I used it as an excuse but all that was going to change. Ellen was a remarkable woman and more than anything else I felt she deserved to be happy. I'd never forget her but knowing she had found a new man to love made it easier for me to start dating again. No matter what happened in the future I'd always cherish the happy memories of our magical summer where life seemed so simple.\n\nMy college roommate couldn't believe I was going on a date after seeing me stay single for the past two years. I'd become the butt of countless jokes in our little circle off friends during that time. They kept saying they were sad to see my self-induced solitude end, but I knew they were all happy for me. None of them knew the full story, or anything more than a small part of it for that matter, but they all knew there was a bad experience with a woman in my past that was too painful to talk about. For a long time I blamed Ellen for everything that happened, but Gloria's harsh words to me on the day I left made me realize I'd never treated her like a woman I truly loved and that, as much as anything, had led to me losing her. \n\n\"Daniel Clarke, botany,\" the master or ceremonies called as I walked proudly across the stage to accept my diploma. Searching the crowd I found my parents and managed to maintain my broad smile despite who I saw sitting in the row behind them. Her hair was much longer and her tan was a little lighter, but I could never forget her beautiful face. Ellen smiled back at me. Suddenly my two years of healing evaporated and I was sitting on the curb outside her home a broken man again. Why had she come back? How could she do this to me now?\n\nBack in my seat I sat mesmerized waiting for the ceremony to end. By the time it was over I had come to one conclusion, my roommate was right. I wasn't going on my date tomorrow and I owed him $20. Finding my parents at their seats, my eyes found Ellen a few rows above now. She made eye contact with me and walked away, no doubt expecting me to follow. It would have been smarter to let her go, but I would have given anything to hear her voice one more time. I told my parents that there was an old friend I wanted to say hello to and I'd be right back.\n\n\"Your hair is longer,\" she said running a stand through her fingers when I found her. My hair starts to curl once it grows past my ears and I was sporting a messy tangle of hair that had to be brushed from my eyes constantly. At least I had shaved off my scraggly beard for graduation.\n\n\"Yours is too,\" I said. It hung down just past her shoulders and looked fantastic on her. \"What are you doing here?\"\n\n\"I came to see you graduate,\" she said but I knew there had to be a lot more to it than that.\n\n\"I'm getting it cut soon,\" I said taking her hand away from my hair and forcing her to look me in the eye. \"Why did you come here?\" I asked again.\n\n\"I don't want to do this here. There's so much to talk about but I want us to be alone. Will you be going home anytime soon?\" she asked.\n\n\"Next week,\" I said.\n\n\"Will you come see me then?\" she asked with a hopeful look.\n\n\"Will you be home this time?\" I said too harshly.\n\n\"I deserved that,\" she said looking hurt.\n\n\"You never should have come here. I was finally ready to move on. After all that time alone I thought I was over you at last. Now... now I don't know what to do. I'll come see you but only because one look at you again has left me no other choice,\" I said before she could walk away. I could feel my frozen heart start to thaw at the sight of her beautiful smile.\n\n\"I'll be waiting for you Daniel I promise,\" she said. \"Don't cut your hair, I like how it looks on you,\" she added before turning to go.\n\nThe moment I saw her I knew I'd been kidding myself. I still loved her, even after all this time. My summer with Ellen had been the best time of my life and I was willing to do anything for another chance with her. Every waking moment for the next few days was spent trying to figure her out. What could have changed for her to come back into my life? I was preparing myself for a new romance with her but what if it was something else? I had to be ready for less than what I was hoping for or the disappointment would be too much to bear.\n\nI was expecting an endless amount of abuse from my friends when I backed out of yet another date, but they sensed something was wrong. No one made any jokes and their faces were filled with pity. I'd fallen so low that I'd become too sad to make fun of. My emotions ran from the sheer joy of seeing her again to intense bitterness over our time apart. I was still angry that she hadn't been willing to let our relationship last and was afraid I was getting too excited when I didn't know where this was leading yet.\n\nThe following Friday arrived and I still didn't know what to expect as I was driving over to see her again. I thought about bringing her fresh flowers but didn't want to look too desperate. The one thing I had decided over the past few days was that no matter what happened it was going to be on my terms. I couldn't accept another fling with her. As much as I wanted to make love to her one more time, I needed to know there was more to it than that. Losing her once had almost been too much to live with, a second time would be.\n\nAt her home Gloria let me in. She had known to expect me and wasn't surprised when I arrived. I was shocked when she greeted me without the disdain she had shown towards me the last time I saw her. In two years she'd forgiven me it seemed. Ellen was waiting for me in her bedchamber and I walked the familiar path on my own. I'd thought I would never see the inside of her house again, but now I was heading towards her bedroom. Her choice of a meeting place seemed to confirm what I suspected from the moment I saw her, but I remained cautious.\n\nI knocked on the outer door and let myself in when she called to me from inside. She was smiling at me from to doorway to her inner chamber. Ellen was wearing a light blue dress that I thought was the perfect color on her and the emerald necklace I'd given her, another good sign. She looked so beautiful it hurt even more to think about our time apart. I had no idea what to say and she suffered the same problem so for a long time we just stared at each other.\n\n\"Come in,\" she said at last inviting me to join her inside.\n\n\"I think it would be best if we stayed out here for now,\" I said in a carefully controlled voice. As much as I wanted to run straight to her I needed to know where we stood first. We could, and would, fuck anywhere but my refusal to join her inside sent the desired message.\n\n\"Ok,\" she agreed joining me in the outer chamber for now.\n\n\"Are you going to tell me what you want now?\" I asked with a little too much gruffness in my voice.\n\n\"For the past two years I've been struggling with this Daniel. I can never make it up to you for what I did, but I'm sorry. I'm so sorry,\" she said starting to cry.\n\n\"Sorry for what?\" I asked in a low voice. I felt like shit watching her cry and reminded myself that although she was the one who ended it before, it hadn't been any easier on her.\n\n\"For everything. For thinking I didn't need you. For taking you for granted. For not believing in your love for me. For not coming to you sooner,\" she said with tears trickling from her big brown eyes.\n\n\"What changed?\" I said stepping towards her and touching her hand. I was sure she knew I was ready to forgive her or I wouldn't have come here, but first I needed to know why she had come back to me after all this time.\n\n\"My hair,\" she said with a little laugh as she brushed away the tears.\n\n\"Your hair?\" I said perplexed.\n\n\"Eight months ago I found a lump in my breast...\" she started.\n\n\"No! No, no, no!\" I said vehemently. She couldn't come back to me just to say goodbye forever. It was far too much to deal with and I started to cry as she threw her arms around me.\n\n\"It's ok Daniel. Shhh... I didn't mean to scare you. It was a benign cyst but it terrified me. For a few days I feared the worst, too scared to go to the doctor. When I thought I might lose my hair I decided to grow it out. While waiting for the test results I realized there was something far more important than my hair that I had already lost,\" she said looking at me hopefully.\n\n\"I wasn't lost. You knew where to find me the whole time,\" I said hugging her tight.\n\n\"Oh Daniel the thought of getting sick and maybe never seeing you again was too much,\" Ellen whispered into my ear. \"The day Jessica and I went to my doctor's office all I could think about was that you should have been there with us.\"\n\n\"You should have told me,\" I said.\n\n\"I didn't want to disrupt your classes. It was nothing but a big scare in the end,\" she explained.\n\n\"But if...\" I started. Fear gripped me and it was impossible to finish what I had begun to say.\n\n\"If it was anything serious I would have come to you,\" she assured me. \"I did come see you once,\" she said with a smile across her face now.\n\n\"When?\" I asked wondering how I had missed her.\n\n\"I came to see you play soccer,\" she said. \"I can't even remember the score, but I can still see you running and sweating,\" she said with a faraway look on her face as if she was still watching me. \"At the end of the game you took your shirt off and I know I wasn't the only woman with my eyes glued to you.\" She could have been describing any game I played this past year.\n\n\"Yeah right,\" I said blushing.\n\n\"Your modesty is part of what draws me to you,\" she said smiling. \"You're an absolute hunk Daniel. You don't even notice the way women look at you do you? That first day we met I was attracted to you immediately, I'm just glad you were a good gardener so I didn't have to hire you just for your looks.\" She had never told me that before but from her tone I knew she was telling the truth.\n\n\"I wish I would have seen you,\" I said. Had she always felt this good in my arms?\n\n\"I wasn't ready then, but I'm ready now,\" she said starting to kissing my neck.\n\n\"I can't do this,\" I said finding the strength to stop her from somewhere deep inside. \"Losing you once was hard enough, I need to know this can last or it's something I can't start again.\"\n\n\"Look at me Daniel,\" she said taking her chin from my shoulder. \"I don't know if I can ever make it up to you for these past two years but I'll spend everyday from this day forward trying. I'm ready to admit I love you Daniel. Please give me another chance,\" she said in a desperate voice.\n\n\"If you really love me then I'm yours Ellie,\" I said honestly. The smile that brightened her face when I called her Ellie was beyond beautiful.\n\n\"Of course I love you, I always did,\" she whispered.\n\nSagging back into my arms she hugged me fiercely and cried letting it all out. I was so happy to hear her say those words that my own voice had left me. All I could do was hug her back and let her stammer through what she wanted to say. She kept talking about the thought of dying without seeing me again and how much it had scared her after she'd found the lump. It made her realize that everyday was precious and she should have been spending them with me. Losing me in the future still scared her, but when she was fearing the worst medically all she could think about was how much easier it would have been to face it with me at her side where I belonged. She had wanted to come to me as soon as she got the good news, but forced herself to wait until I finished school. As she poured out her emotions she felt tiny and fragile in my arms, but I was there to take care of her from now on.\n\nIt seemed as if she never wanted to leave my arms again. All the little things I had missed about her started to come back to me. Her smooth, supple skin felt incredible against my arms and neck. The smell of her perfume and shampoo filled my nose as I inhaled them deeply. Warmth and comfort radiated from her, as we held each other close letting what had happened today soak in. I could feel her big, beautiful breasts pressed firmly into my chest. They were a reminder of the incredible sex we had once shared and soon would again. I could wait for now, we had all the time in the world for a change.\n\nWhen I felt her arms relax around me, I opened my eyes and looked at my love. The tears were mostly gone now, but her eyes still shone wetly. This close to her I realized my memory had failed me all those months we'd spent apart, she was far more beautiful in the flesh. Was she waiting for me to kiss her? I couldn't tell anymore so the only to find out was to go for it. I gave her a quick peck on the lips and pulled back to gauge her reaction. She was smiling so I gave her another, slightly longer kiss. With each kiss her smile grew wider until her hands snaked though my hair holding my lips to hers.\n\nIt felt a little strange to be kissing her again after all this time. Our lips didn't move as one like they had before and once her teeth bumped mine clumsily. The coordination would come back with time though and the passion was already there. For a long time we hugged each other close our lips pressed together until her tongue brushed my lips tentatively. Remembering Ellen as a bold, confident woman it made me stop to laugh and her embarrassed smile fueled the laughter on and on.\n\n\"You're beautiful when you're shy like that,\" I told her.\n\n\"Thank you honey,\" she said smiling sweetly.\n\n\"If you're not ready to pick up where we left off we can take it slow Ellie,\" I offered rubbing her back.\n\n\"No I'm more than ready,\" she said her fuck me eyes appearing from nowhere. \"Unless you want to slow down?\"\n\n\"Do I look like a man who wants to wait?\" I said give her a deep French kiss and rubbing my erection against her leg.\n\n\"Thank god I've been dreaming of this day since I sent you away,\" she said grinding her hips against me and returning the kiss.\n\nScooping her up in my arms she clung to my neck as I carried her towards the bedroom I'd been afraid to enter when I arrived. Her lips didn't leave mine until I set her down on the bed ready to strip. Before I could undo the second button on my shirt she was pulling me down on top her. I was eager to make love to her, but every kiss she gave me more than made up for the delay. Those soft lips I had dreamed about for all those long lonely months were too enticing to leave. I let my hands wander caressing her arms, kneading her breasts, and up her smooth thigh beneath her dress. The moan that escaped her lips was music to my ears; I had thought I might never hear it again. I knew her signs well enough and my petting had put her in the mood for a lot more than kissing.\n\nEllen stopped kissing me and unbuttoned my shirt. Taking her time she kissed my chest as each button undone revealed a little more of me. On my knees I discarded my shirt as she rolled over and waited for me to unzip her dress. With her ass grinding circles against my crotch I leaned over her and kissed down her back as I lowered her zipper. When I was done I could just see the edge of her silk panties and was ready to rip them off her. My lover had other ideas though and turned over holding the hanging dress against her nakedness. Squeezing her arms together she made her breasts bulge and let the top of her dress drop to almost expose her nipples again and again.\n\nBacking off as she continued to tease me with a shake of her shoulders or a lick of her lips. Taking my socks off I focused on her eyes that seemed glued to mine. Starting to remove my pants I waited for her eyes to leave mine and smiled when they finally did. At first I'd been worried being naked in front of her would be hard to get used to again, but the look of admiration she gave me made me feel comfortable right away. When she finally tore her eyes away from my cock and met my gaze again she knew I was waiting for my chance to see her body again. Sliding her dress up past her hips, she lifted it over her head and threw it aside. Lifting her breasts she played with them as I watched completely awestruck. They looked so much better than I remembered.\n\nWhen she released her breasts and hooked her thumbs inside her panties my cock already tingled with desire. I thought the sight of her pussy after all this time might make me faint but I should have known she wasn't going to make it that easy. Keeping her legs pressed together she wiggled out of her panties and lay back with her hand concealing her pussy. Pursing her lips he blew me a kiss and groped her cunt hidden behind her fingers. I took my cock in hand, ready to stroke it, but her scowl made me stop. Even after all this time she still hated the idea of me pleasuring myself when she was there to take care of me.\n\n\"I want you Daniel, I need you Daniel,\" she said softly as she exposed herself to me. Her hairless pussy glistened wetly; at least one thing was exactly how I remembered it.\n\n\"Are you sure?\" I asked suppressing my smile.\n\n\"If you want me to beg I will,\" she said completely serious.\n\n\"No I don't,\" I said crawling onto the bed with her. \"I'm sorry Ellie.\"\n\n\"Make love to me honey,\" she said inviting me inside her for the first time in almost two years.\n\nI slid my cock into her carefully enjoying the feel of her pussy as it engulfed my cock. Once I was inside her Ellen clung to me with her arms and legs holding our bodies tight together. She was crying again as I kissed her and asked if she was ok. Ellen told me she'd spent so many nights scared that she'd never be with me again that she was overwhelmed now. I held her telling her I loved her and giving her all the time she needed. Loosening her grip on me she told me she loved me too and let me start pumping inside her. Kissing her as we made love, I went nice and slow letting us both enjoy every long stroke.\n\nWithin a few minutes I felt my cock tingle, signaling my approaching orgasm. After so long apart and countless hours fantasizing about her I was far too excited to last any longer without stopping. She kissed me when I halted with my body on top her and pushed against my shoulders smiling at my hesitation. I knew she was fully aware of my reasons for stopping and yet she wanted me to go on anyway. Shaking my head so she knew I didn't want to disappoint her, she nodded with a beautiful smile as if to say I could never disappoint her in bed.\n\nOn the brink of cumming I increased the tempo a few notches and watched her bite her lower lip in response. There was a look of sheer pleasure on her face as I pumped her faster and faster. The sex between us had always been amazing and she seemed to be enjoying it as much as ever. Despite her assuring smile I still tried in vain to prolong my orgasm for her. When I could take the torment no longer I thrust my cock deep inside her and let my cum shoot into her pussy. Ellen moaned as she felt each stream of cum splash against the walls of her cunt. By the time I had finished she gripped me tightly again, forcing me to take her on top of me as I rolled off her.",
        "Resting her head on my shoulder she kissed my neck with her hand pressed against my beating heart. My hand found her nipple and toyed with it until it was long and hard, running light circles around it. We'd lain like this hundreds of time after sex in the past, but for the first time there was no fear or urgency on the edge of my awareness. This wasn't the desperate love making of two people who knew the clock was ticking closer to end. Ellen was willing to let things last now and I was going to do whatever it took to make her mine forever.\n\n\"Sorry I couldn't last longer my love,\" I said to her kissing the top of her head. It felt unbelievably good to be able to call her that and see her smile.\n\n\"Sorry? Alan would have lasted half as long and been asleep already,\" she said. Misreading my face she quickly added, \"I'm sorry I shouldn't have mentioned him, he was the only one.\"\n\n\"It's ok,\" I said kissing her. \"I never knew his name.\"\n\n\"We were together for about six months,\" she said. I didn't feel the least bit jealous or insecure but I could see she felt guilty so I let her tell me about him. \"I wasn't expecting the sex with him to be anywhere near as good as it was with you, but it was how bad everything else was that surprised me. Not once did he bring me flowers and he always complained when I wanted to go dancing. On my birthday he didn't even give me a card. He said something stupid like with all my money what could he get me that I wanted and didn't already have. Jessica heard him and looked like she wanted to claw his eyes out,\" she started laughing. \"Maybe I should have let her. He was right there isn't anything I wanted or needed, but I knew you would have done something to make me feel special and loved. That's what I need, not gold or diamonds, just a man who makes me feel special and loved. You did that for me everyday Daniel,\" she said gazing at me. \"He even hinted that I should get a nose job,\" she said suddenly. \"It's not funny. Stop laughing. I suppose you think I should get one too then?\" she said with narrowed eyes.\n\n\"Of course not Ellie,\" I said kissing her on the tip of the nose.\n\n\"Well what's so funny?\" she said still angry.\n\n\"I was just wondering where you buried his body afterwards,\" I said and finally she joined me in my laughter. If I had been jealous of him at all it would have been gone now. Obviously he hadn't know her at all if he thought he could get away with saying something like that.\n\n\"All that was bad enough,\" she said continuing her story. \"But when I had my health scare he seemed more concerned over making sure my appointment wasn't on a day he was going golfing than he was about me. Jessica made me get rid of him after that.\" I held her wondering how she could have put up with such a selfish and heartless man, but I suppose I owed him my thanks for driving her back to me.\n\n\"You know if you were with me I would have found that lump sooner,\" I said squeezing her breast and making her laugh. That was much better. I wanted her to make her smile and laugh and forget about him everyday.\n\n\"What about you?\" she asked. \"I'm sure there must be all sorts of women at your college who will be heart broken knowing they'll get no more of this,\" she said rubbing my chest.\n\n\"No,\" I said shaking my head.\n\n\"What do you mean no Daniel? Trust me any old girlfriend would remember being with you,\" she said with a smile.\n\n\"I mean there are no girlfriends to remember,\" I said.\n\n\"Well even a single night would be unforgettable,\" she said still smiling.\n\n\"There was no one Ellie,\" I said.\n\n\"You were alone all that time? No sex at all?\" she asked looking stunned as I nodded.\n\n\"You got by with the golf guy,\" I said making her smile return.\n\n\"But why Daniel? You must have been going crazy,\" she said with concern in her voice.\n\n\"I had lots of help from my right hand man,\" I said making a stroking motion as she laughed.\n\n\"Now I feel like I cheated on you,\" she said sounding guilty.\n\n\"Are you kidding me? I'm the one who cheated on you with Gwen and Hannah and even Jessica,\" I said.\n\n\"That wasn't cheating honey I knew all about it. I was the one who initiated it all,\" she said shaking her head.\n\n\"Yes it was cheating Ellie and I promise it will never happen again. I convinced myself it was ok before because you were doing it to keep distance between us,\" I said holding her.\n\n\"You're right,\" she said with downcast eyes. \"It was easier that way but I never blamed you or held it against you.\"\n\n\"Either way that's all in the past. The future is just you and me,\" I said. I knew Jessica was involved with a guy at her college, but had no idea what had become of the others.\n\nOur long talk had given me a chance to recover. Ellen was excited to find a fresh erection between my legs as I sat up. Spreading her legs she waited for me to slip my cock inside her again. The trickle of cum leaking from her pussy wasn't enough to prevent me from lying down between her legs for a taste before we got back to screwing. During our summer together Ellen had taught me all I'd ever need to know about pleasuring a woman with my tongue and lips. Now that we were back together I was anxious to show her that I hadn't forgotten those valuable lessons. She looked like she wanted to be fucked hard but her smile was one of pure bliss as my tongue touched her outer lips.\n\nI love the taste of her juices, even if they were mingled with my own cum. Furrowing my tongue through her pussy lips I place my mouth around her delicate pink entrance and sucked up the liquid that had pooled there. Swallowing I went back for more as I licked all around to make them flow freely. Her clit was engorged, sitting at the top of her lips and begging to be sucked. It was tempting but I wanted to make her squirm first. Ignoring it for now, I stopped to laugh as she cleared her throat then giggled down at me. She was confident that I knew what I was doing and waited patiently as I built towards her orgasm with excruciating slowness. Taking her clit between my lips at last, I gave it a careful nibble as she sucked in a sharp breath.\n\nEllen moaned as I pleasured her and when I looked up I could see her eyes were closed and her head was lolling from side to side. Slipping two fingers past her lips I wiggled them deep inside. Withdrawing them I brushed my wet finger across her mouth letting her suck them clean. I always found that to be a huge turn on and had to kiss her. Lying next to her I kissed her deeply push my tongue into her mouth and swirling it in circles around hers. Keeping my cock to one side I continued to rub her pussy softly, planning to return to my oral sex efforts momentarily. When I tried to go down on her again she caught my lips in her teeth and stopped me in my tracks. Seizing me by the cock she have me a few rapid strokes and spread her legs leaving no doubt what she wanted.\n\nSoon as I fit my cock inside her lips I fired it home making her gasp beneath me. Panting hard at the beginning, as if each stroke was half pain and half pure joy, Ellen squirmed beneath me in an effort to make sure she took me as deep as possible. It didn't take long for the panting to stop and through gritted teeth she began urging me on. Changing the angle of my thrusts I explored her pussy, seeing if I could remember what she liked. Whenever the tip of my cock hit her in just the right spot she touched me on the torso with a trembling hand, her eyes full of love. The slapping sound of our bodies went on and on, drowned out by the occasional scream of ecstasy from Ellen.\n\nI pulled out wanting to take her from behind where I could admire her beautiful ass and legs but she was having none of it. Lunging to her knees with remarkable speed, she tipped me onto my back and mounted me. With her cunt poised above my hips she reached for my cock and shoved it back inside. The look of pure determination on her face was incredibly sexy as she rode me. When her eyes found mine I blew her a kiss and toppling forward with a smile she collected a dozen more. Each time she'd regained her balance and momentum for a few strokes I'd do it again luring her lips to mine. I was hoping I could frustrate her but every time she came to me with a smile. There didn't seem to be any chance of her denying me a kiss ever again based on the speed with which she responded to my requests. After I stopped to play with her breasts instead, she pursed her lips and snickered as I sat up to deliver my kiss to her.\n\nHugging her tight in my arms I threw her off to the side and knelt beside her. She spread her legs and I shook my head. Stroking my cock lightly she opened her mouth ready to give me a blowjob but I said no with a shake of my head again. Rolling over she stretched out and showed off her pussy squeezed between her tanned thighs. This time I nodded as she smiled with glee swaying her hips seductively and awaiting more of my cock. Ramming it into her I reached under to grab her breasts and pulled her to her knees. Leaning back against me she humped her hips into me as my hands dropped to her waist where she held them. Kissing her neck she turned to give me a taste of her lips that spurred me on. I wanted to fuck her right through the wall and flung her to bed so forcefully that I felt my heart leap in my chest. Stopping in a near panic I was relived when she turned around wondering what was wrong. She smiled at the concern on my face and slapped her own ass incredibly hard to show me she still craved the rough sex we used to share all the time.\n\nThere was no more fooling around after that. I pounded her cunt mercilessly from behind wanting to feel her pussy clench around me again and again. Ellen was roaring at me without restraint now asking me to fuck her faster, harder, deeper. Giving her exactly what she wanted, I focused on making sure each thrust rocked her body. Her huge canopied bed gave us plenty of room but I slowly drove her towards to top of bed until she hit the headboard with a thud. I was worried I had hurt her again, but it didn't even faze her. Spinning around she glared at me and waited for me to fuck her to the other end of the bed. Taking a moment to kiss her again first, her kiss was filled with such complete desperation that I knew she was close.\n\nThe brief break had given me a renewed burst of energy as I entered her again. Fucking her from behind all I could think about what how much I had missed her and how fortunate I was to have her back. As lovers we complimented each other perfectly, but now that we were together again as a real couple I couldn't wait to do the simple things we'd been afraid of before. I want to take her to a movie or go to one of her dinner parties as a couple. The tightening of her pussy around my cock brought me out of my daydream. Amazingly I hadn't allowed the pace to slip at all, fucking her like a mindless machine as my head filled with happy thoughts. Flicking her clit quickly seconds before she came I felt her tense and then melt beneath me grunting as she fell to the bed. Lying next to her I kissed her gently on the neck and shoulders until her trembling stopped.\n\n\"I love you Ellie,\" I said the moment she rolled over with a tired smile.\n\n\"I love you too Daniel,\" she said wiggling into my arms. \"Will you stay with me tonight?\"\n\n\"Of course I will,\" I said kissing her.\n\n\"Will you stay with me tomorrow night?\" she asked with a smile.\n\n\"Yes,\" I said with another kiss.\n\n\"Will you move in with me the day after that?\" she asked crawling on top of me.\n\n\"Why wait that long, I'm not busy tomorrow,\" I said.\n\n\"What about your parents hon?\" she asked suddenly, looking scared.\n\n\"They have a place to stay,\" I said trying to make a joke of what could be a huge problem. Ellen didn't smile back at me. I was sure my father would be supportive, but my mother might take this hard.\n\n\"You need to tell them about us,\" she said. \"Being together won't be easy Daniel but I'll do whatever it takes to make them accept me.\"\n\n\"I love you Ellie. They shouldn't need any more reason that that,\" I told her.\n\n\"Let's hope not,\" she said hugging me.\n\nAfter that she made me lie down face up and positioned herself between my legs. Ellen took genuine joy in giving me head and I certainly wasn't about to complain. She sucked my cock carefully at the start as she familiarized herself with every inch again. The smile on her face as she played with my cock was captivating. It was easy to tell she was extremely happy to have her favorite real live sex toy back in her life. For a moment I found myself wondering if the man she'd dated while we were apart had ever satisfied her like this. Probably not I decided, I knew there was no other woman in the world that made me feel like this. Noticing me watching her work my cock she kissed it on the head and hugged it between her breasts with an adoring smile. If it wasn't attached to me I might have been jealous.\n\nWith slow, deep movements she teased my cock closer and closer to climax. I knew she enjoyed the power it gave her over me, but in a good way. From the look on her face I could tell that she loved knowing she was able give me such incredible pleasure. My orgasm was close now, real close. Leaning back with my eyes closed I knew I was going to erupt all over her face any second now. Ellen loved to taste my cum and play with it so I wasn't concerned about cumming on her. I could feel my balls churning and braced myself for the orgasm that never came. Opening my eyes in shock I looked at Ellen who had stopped just in time. She started up at me with a smug smile that said she still knew everything about me in bed. Kissing me on the stomach she let the tips of her fingers brush lightly along the length of my cock waiting for me calm down.\n\nStroking me with a gentle grip she took the head inside her mouth again. She laughed at my whimper and rubbed my leg soothingly. The teasing was practically unbearable. I had been away from her for so long that I wanted to cum and cum and cum again. It was impossible for her to miss the desperation in my demeanor and I was sure she would give me the release I needed this time. Pushing me to the brink once more I let out a relaxed sigh ready to cum this time, but she stopped once more for just a beat relishing my pleading look before jerking me fast and taking my cock deep in her throat. After letting me spill my load with a weak groan she kissed me all over. Then she slipped under the covers on what had always been her side of the bed when we were together and I took my rightful place at her side.\n\n\"I love you Ellie,\" I whispered when she cuddled into me.\n\n\"I love you too honey,\" she said against my neck.\n\n\"I love you Ellie,\" I said again.\n\n\"I love you too Daniel,\" she said smiling at me now. I must have told her I loved her a thousand times during our first day together again just to hear her say it back.\n\n\"Tomorrow I want you to come meet my parents,\" I said. \"The sooner they know about us the sooner I can move in with you,\" I said watching her smile despite the nervousness.\n\n\"Ok,\" she said. \"Can we do it in the afternoon? Gwen invited me to dinner tomorrow night and I want you to come too.\"\n\n\"No Ellie I told you I'm done with other women,\" I said shaking my head.\n\n\"But...\" she started to say.\n\n\"No I said. There's no way I'm starting that again,\" I said firmly.\n\n\"Let me finish,\" she said placing a hand over my mouth. \"I never want to share you again either honey. The dinner is with Gwen and her new fianc\u00e9.\"\n\n\"Gwen is getting married again?\" I said with a smile.\n\n\"To a wonderful man who treats her like his queen. You should see them they're so happy together,\" Ellen said smiling back.\n\nMaybe they were happy but I think we had them beat. We spent our first day together naked in her bedroom making love for hours. Later in the evening, when the house was deserted we went down to her kitchen for dinner. Ellen cooked us a wonderful meal and we ate by candlelight with a bottle of her favorite wine. The euphoric feeling that came with knowing this didn't have to end this time was incredible. For almost two years she was missing from my life, now she was back and she was my life. Even as we ate Ellen sat with her chair against mine as if she was afraid to let me get more than a few inches away from her ever again.\n\nAfter dinner she asked me if I wanted to take a look around the garden. She dressed in a pair of jeans and the sweater I had bought her in Mexico. I recognized it like she knew I would and couldn't stop smiling. It did look fantastic on her, even better than I could have imagined when I picked it out. I wore the only clothes I had with me as we walked out through the back holding hands. The sun was setting so we wouldn't get to see all of her expansive property. She took me on a quick tour that end with the fountain area that I had redesigned for her during my summer as her gardener. Nothing had changed; it looked exactly like it had when I had left it save for two years worth of growth on some of the plants. With tears in her eyes she told me how this had become her favorite place. Whenever she was missing me she would come here to be alone with her thoughts and no matter how sad she was this beautiful gift I had given her would always fill her with happy memories.\n\nA blind man could have read the look in her eyes. Standing a few feet apart facing each other we stripped out of our clothes. Lying down on the lush, cool grass with her I kissed her beneath the clear night sky as the stars started to appear high above us. The ground was surprisingly comfortable under us as we started out slowly, each stroke filled with love. Pressing my body down on top of her I kissed her tenderly and brushed a blade of grass from her hair.\n\nIt became darker as we screwed but my eyes grew accustomed to the lack of light and her moon lit body shone with wetness from the damp grass. The shadows from my body above her allowed her features to disappear and return countless times like my own private peep show starring the most beautiful woman in the world. Her breasts felt cool to the touch and her nipples were extra hard, from the cold and the arousal. Having cum so many times earlier in the day I was ready to fuck her for as long as she wanted me. After delivering her first orgasm I pulled her on top of me and tried to rub some warmth into her goose pimpled skin. Climbing off me when she was ready for more sex she knelt in the grass urging me to fuck some heat into her.\n\nBanging her from behind I stood with my knees bent and gave it to her as hard as I could. Her voice screamed back at me from the darkness as the damp strands of her hair clung to her skin until a toss of her head sent them airborne for a brief taste of freedom. There was heat wherever our bodies met and the screams soon turned to unintelligible moans. Reaching down to touch her face I found her cheek felt warm and her brow was beaded with sweat. Opening her mouth she sucked my fingers and nibbled them gently. Spitting them out just before she came with a loud shriek she began to topple but held her hips up as long as she could letting each thrust send a ripple of pleasure through her. I lay behind her when she'd finally had enough and held her sweaty body to mine. It was impossible to tell where the trembling stopped and the shivering began, but soon her skin was cool to the touch and she had spun around to nestle herself into me for warmth. Covered with blades of grass and other debris we gathered our clothes and hurried for the house.\n\nPassing her pool along the way I couldn't resist taking her for a quick swim. Scooping her up into my arms I ignored her pleas and warned her to drop her clothes or they would get wet. She tossed them down and squeezed my neck in her arms as I ran to edge and jumped in. Squealing when the cool water swallowed us she kissed me as we resurfaced. I could see she wanted me inside her again already, but the water had left me soft and shrunken. Ellen has seen me without an erection many times before of course, but seemed amazed at the difference in size now. Her face had a look of utter determination it as she went to work. The longer the cool water countered her efforts, the more it strengthened her resolve. It was impossible for her to accept failure.",
        "With my back against the edge of the pool she brushed her wet breasts across me, the cold forgotten now. Touching my cock seemed to have no affect and as time when by she went from outraged to panicked to perplexed. Glaring at me she seemed to be trying to determine if I was doing anything to keep my cock soft. She was starting to take it personal that all her best efforts were failing to arouse me. I tired to hug her and explain that it wasn't her fault but she pushed me away in annoyance. Taking a deep breath she ducked under the water and took my shriveled cock between her lips to warm it. I was just starting to show the slightest signs of life when she released me and came up gasping for breath. The satisfied smile she gave me before diving again was a wonderful sight. It took five more trips and a fondling grip of my balls to make me completely hard. Instead of taking me inside her pussy for more sex she stepped out of the pool and gathered her clothes, satisfied that she had completed her mission for now.\n\nWatching her wet, naked body from the pool I wanted her to come back more than anything. At the doorway she turned to look at me. Shaking her head at my obvious desire she stood on her tiptoes and pointed her pussy at me as she spread her lips. Tasting her fingers she heard the splash of me getting out the water and closed the door as I raced towards her. Locking the door behind her she taunted me from the other side of the glass as I rattled the knob. Pressing my cock against the glass in the desperate hope that seeing what she was missing would change her mind, I watched her rub her pussy on the opposite side of the windowpane. The wet streak she left on the glass was too much and I pleaded with her to open the door. With a helpless shrug she blew me a kiss and walked away knowing I'd have to run all the way around to the main entrance to get inside.\n\nRunning as fast as I could until I slipped barefoot on the wet grass, I picked myself up and continued more carefully. My biggest fear was finding the front door locked but it was open and once inside I raced to her bedroom taking the steps two at a time. The hallway was a blur as I ran with long strides my bouncing cock hard and hungry between my legs. Crashing into the outer chamber of her bedroom I dropped my clothes and burst through the double doors leading inside.\n\nEllen was on her hands and knees facing away from me. Fucking herself with a sex toy, she didn't turn to greet me even though she must have heard my heavy breathing. Focusing whatever anger was in me on her toy, I snatched it from her hand and threw as hard as I could to clatter off the wall. Arching her back Ellen offered me her pussy. Jamming my cock into her as she slammed her ass back to meet me, I held her hips tightly with an arm that wrapped under her. My other hand ran up the middle of her back gently keeping her still for a moment. Without seeing me she knew I wanted a kiss before we started and knelt up leaning over her shoulder to give me one. Dropping suddenly she thrust her ass back knocking me off balance and waited for me to give her a hard fucking.\n\nI was still winded from my sprint upstairs to meet her, but I didn't let that slow me down. Ellen had always shown a nearly unquenchable desire for sex so I wasn't surprised at all to find her so horny after all that time apart. Knowing she still now loved the rough sex I didn't worry about hurting her at all this time. My muscles weren't tired but my heart was racing and my lungs were burning as I tried to maintain top speed. Whenever I let myself slow Ellen urged me on with a scream for more and I put forth the effort. When she started to show signs of cumming soon I was relieved. Cheating with a hand on her clit I finished her off with one last surge and collapsed onto my back gasping for air.\n\nEven though she'd just had another orgasm, Ellen forced herself to hold me. Kissing me all over the face she whispered her love for me. Letting her hands run over my body as I panted for breath it didn't take long for her to find my cock. She took it between her lips and sucked it softly, not wanting me to cum again yet. With her body on top of me her pussy was in my face but I was still too out of breath to do more that rub it with my fingers. A kiss on the abdomen from her soothed away any worries that my inability to lick her pussy yet might upset her.\n\nBefore I was ready to pleasure her with my tongue she slipped off the bed and went to her hot tub. With her feet dangling in the water she got the temperature set and added some bubble bath. She got up to leave and blew me a kiss coming back a few minutes later with a bottle of wine and two glasses. Sitting in the water now, she filled both glasses and licked her lips looking at me. Crossing the room I slipped into the water with her and held her from behind as she passed me my glass. Kissing her neck I let my wine trickle down over her neck and breasts, slurping up what I could before it dripped into the water.\n\nThe hours of lovemaking had left us both drained. Ellen sat on my lap letting her head rest against my chest. Each time I kissed her she sighed happily. We soaked for half an hour in the warm, relaxing water. I caressed her body with a gentle touch letting my hands travel all over her perfect skin. Holding her slippery breasts in my hands I ran my fingers around her nipples light making Ellen moan softly. Setting her wine glass on the side of the tub, she closed her eyes and shifted to a more comfortable position on my lap. Leaning back against me she held my arms around her and tilted her head she offered her neck for my lips. The realization that this was my life now filled me and I was overcome with emotion shaking with her in my arms. Noticing the change in me she turned on her side and putting her arms around my neck she kissed me deeply. Brushing her wet hair back from her face I held her chin and kissed her back.\n\nGetting of out the water we wrapped in towels to keep our wet bodies warm. I watched Ellen blow her hair dry and then let her do mine, something she seemed to take an incredible amount of happiness from. When it was time to help her put on her body lotion before bed, I was equally overjoyed to help her. After that I was ready for the first night of the rest of my life in bed with the woman I loved. Side by side with our heads sharing a single pillow we cuddled and kissed beneath the blankets.\n\n\"Maybe we should put off that visit to your parents house,\" Ellen said suddenly.\n\n\"I promise everything will be ok Ellie,\" I said trying to ease her concern.\n\n\"I'm scared Daniel. What if they try to keep us apart?\" she fretted.\n\n\"Shhhh... it's ok my love. They can try all they want, but I'm going to be with you no matter what,\" I assured her. \"There's nothing they can do or say that will keep us apart.\"\n\n\"I hate the idea of coming between you and them,\" Ellen said sounding guilty.\n\n\"You're worrying about nothing. I'm sure they'll accept you,\" I said, but I was nowhere near as certain as I let on. I was confident my father wouldn't have a problem with it; my mother might be a different story. Ellen had mentioned not wanting to have any more children before. It was something I was willing to accept to be with her, but if my mother knew she would never have a grandchild it would turn her against Ellen, against us.\n\n\"I love you honey. Goodnight,\" Ellen said kissing me once before closing her eyes.\n\n\"I love you too,\" I said hugging her against me.\n\nThe next morning I woke up on my back with Ellen lying across my arm and her back to me. My arm was asleep, tingling with pins and needles, but I couldn't have been happier. Sliding my arm out carefully, I clench my hand into a fist a few times to get the blood flowing again. Needing to relive myself I eased myself out of bed and raced to the bathroom. She was still sleeping when I returned so I climbed into bed again. When Ellen did wake up she seemed panicked and felt behind herself blindly with her hand breathing a sigh of relief when she touched me.\n\n\"I had a dream that you didn't come,\" she said rolling over.\n\n\"You always make me cum Ellie,\" I said twisting her words and kissing the smile that spread across her face.\n\n\"Mmmmm... a girl could get used to waking up to this,\" she said toying with my hardening cock.\n\n\"What do you think you're doing?\" I said with a mock scold when I saw her hand disappear between her legs.\n\n\"Getting ready you,\" she said with an innocent look.\n\n\"And steal all my fun?' I said pushing her hand away and positioning myself between her legs.\n\nKissing her lower lips I treasured her warm feel against my face. Her pussy wasn't wet yet but I was going to rectify that quickly. Ellen let her hand brush over my face and I sucked her fingers into my mouth before pinning her wrists to the bed out of my way. Spreading her legs wider she pressed her cunt into my mouth as I tried to cover her entirely with my lips. Releasing her wrists, I pulled her lips apart and furrowed my tongue inside her. With her juices just starting to flow I tongued at her entrance and spread what leaked from inside around her lips. My lover let out a deep, relaxed sigh as I pleasured her. She'd spent months training me to lick her pussy just right and those lessons from almost two years ago had never been forgotten.\n\nIt was obvious that she was ready for sex now, but I was in no rush to penetrate her and Ellen had just starting to enjoy it. Leaving her lips for a moment, I licked her inner thigh before diving back in. Holding her lips open I could see a bead of liquid trickle out of her and scooped it up with my tongue. Until now I had ignored her clit but it was looking plump and practically begged for my attention. Giving it a flick with my tongue I heard her moan loudly in response. Back to her lips to let her calm down I gave her sensitive little nub the occasional caress. When I knew she was close I stopped and lay next to her.\n\nEllen gave me a quizzical look, opening her mouth when I leaned close. Tasting herself on me she kissed me back until the flavor was gone. When she tried to sit up, no doubt planning to get me ready, I rubbed my already stiff cock against her leg and laughed at her little pout. She spread her lips with her fingers and all but asked me to fuck her. Sliding down a little on the bed I stopped at her breasts to suck her nipples. At first she gave a frustrated sigh, but I could feel her nipples stiffen between my lips and soon the rest of her was responding as well. With one of her full round breasts in each hand I flicked my thumbs past her nipples while applying firm pressure on them. Pinching them one at a time until she let out a little shriek and then stopping to sooth it with a gentle touch from my tongue.\n\nBy now she was writhing beneath me and eager for sex. I wanted one more taste of her pussy first though, so I moved down between her legs again. As much as she wanted me inside her, the promise of more oral sex got her to spread her legs easily enough. This time I didn't tease her at all. Going straight for her clit I sucked it between my lips and gave it precise, careful nibbles. Ellen had trusted me completely in bed before and knew that if she started thrashing from the stimulation I'd stop to keep her safe. I wanted to show her she could still have faith in me to give her amazing sex and always keep her safe. Shoving two fingers inside her I rotated them in a circular motion causing her entrance to gape and leak.\n\nWhen I stopped again Ellen gave me a pleading, desperate look but it quickly turned to a smile when she saw me lining up to give her the cock she wanted. I settled into a medium pace right away. It was fast enough to help push her towards an orgasm quickly, but slow enough to let us exchange kisses as often as we wanted. Sucking on her neck I made love to her certain there was no better feeling in the world. Her body was soft and warm beneath me as she accepted each thrust with a low moan. When I felt her tighten around me I screwed her a little harder until she came holding me close with her arms and legs.\n\nLying on top of her I kissed her waiting for her signal to continue. She looked tired, but it was the good early morning just been fucked kind of tired. Part of me had been worried that our years apart might have changed my feelings for her, but I knew now that my love for her was stronger than ever. All I could think about was being with her and doing everything in my power to make her happy. Nothing meant more to me than making her happy. When she asked me for more sex I delivered what she wanted, as if I could ever refuse her. Already stimulated from before, she told me go faster to make her cum and again I did as she asked. I'd been much closer to cumming when she had her first orgasm than I had let on. After the break I had plenty of stamina now but used my fingers on her clit just to make sure. Her orgasm was a little more intense the second time around but after a brief break with me on top of her she pushed my shoulder until I rolled off to my side of the bed.\n\nReversing her body on the bed lay on her side with her head by my cock giving me a nice view of her long perfectly tanned legs and moist pussy lips. Stroking me gently for a few moments before guiding me into her mouth she opened her legs for my hands and let me play with her cunt as she treated me to a blowjob. She didn't mind me rubbing her pussy, but I knew this was all about my enjoyment when she didn't swing her leg over me and offer her pussy to my mouth. Ellen didn't want me to cum yet and her breaks were frequent, though my cock never left her hand. Tensing and making my cock jump in her hand to let her know when I wanted more I listened to her wonderful laugh. I decided to test her and sure enough, when I made my cock dance too soon she gave me a playful elbow in the midsection.\n\nLeaving me on the brink once more she got up to crouch over me and sank down on my cock. Holding herself steady, she let me decide if I wanted to cum right away or make it last a little longer. Giving her a few rapid thrusts, I pushed her down onto my lap and stopped just in time. Smiling down she ground her hips into me, inching back and forth on my lap. Squeezing me with her incredible cunt she tested my limits and kissed me when I had lasted through it. Running my hand over her leg I gazed up at her with eyes full of love, she smiled and bent down to kiss me in response. After our kiss I gave her a little nod and she rode me to my orgasm within seconds letting me cum inside her.\n\n\"You let me sleep in hon,\" she said noticing the clock and we lay together afterwards. \"We need to get ready soon if were going to see your parents.\"\n\n\"Ok,\" I said trying to kiss her.\n\n\"Stop that,\" she said trying to talk about the serious matter with me, but relented and kissed me back when she saw my frown. \"We can't stay in bed all day if you want to me to meet them. It won't be easy but once it's out of the way we can be together every night.\"\n\n\"I know Ellie,\" I said releasing her from my arms. \"So am I your boyfriend now or what?\" I asked with a goofy smile.\n\n\"What else would you be?\" she said shaking her head and smiling back at me. \"Why is that so funny? I guess you think I'm your bitch or your ho or whatever the kids call it these days.\"\n\n\"Oh Ellie,\" I said with uncontrollable laughter. \"Sometimes you say things that remind me how different our worlds are.\"\n\n\"Are you trying to say I'm an old woman?\" she asked in a playful voice but I knew this was dangerous territory I'd stumbled into.\n\n\"No of course not,\" I said hugging her. \"I don't want to dig myself into a deeper hole. I'd never call you my bitch or ho, you're my girlfriend and I love you.\"\n\n\"I love you too honey,\" she said kissing me. \"We should go get ready.\"\n\nAfter a shower together, where I decided it would be part of our regular routine, I went to call home while Ellen was drying off. I was glad my father answered. When I told him I was bringing home a girl for them to meet he didn't have a thousand questions for me and he didn't get mad for not giving him more than an hour warning. He said he'd tell mom to expect us in an hour and I smiled knowing she'd blame him now. Poor dad wouldn't have a clue why she was so upset. I dressed in the only clothes I had with me and waited for Ellen. She sent me out to the front chamber to wait for her. Watching TV to pass the time I stood up when I heard her come in.\n\n\"You look perfect,\" I said shaking my head in wonder. She wore a simple sweater and jeans, with understated makeup. The outfit managed to mask the raw sexuality that normally radiated from her in waves, but let her pure beauty shine through.\n\n\"You think they'll like me?\" she said looking so cute as she worried what they might think of her.\n\n\"It doesn't matter if they like you, because I love you,\" I told her. \"I won't let them get in the way of us.\"\n\n\"I know you won't honey. I'm not expecting them to be thrilled that their only child is moving in with a woman almost twice his age, but I'm hoping they won't hate me,\" she said looking scared.\n\n\"Maybe today will be a huge disaster,\" I said preparing her for the worst. \"But I'll talk to them as many times as it takes to make things right.\"\n\nWe left walked down to her garage and chose her least dazzling vehicle, an SUV like one you might see all over suburbia. She wanted me to drive, but I said it would be best if she did. To keep our minds off the inevitable Ellen told me a little about Gwen's fianc\u00e9 I'd be meeting at dinner tonight. His name was Peter and Ellen couldn't stop smiling as she told me how he treated Gwen. When I worried about what he would think of me Ellen assured me everything would be ok. I thought that maybe Peter was younger like me, but she laughed and said he was ten years older than Gwen. When we got to my parents place there nothing else to do but go inside and get it over with.\n\n\"Hello? We're here,\" I called from the entrance with Ellen stood behind me. I could feel her hand tighten around mine as footsteps approached.\n\n\"How come you never told us you had a girlfriend sweetie?\" my mother said coming around the turn. She stopped dead and fell silent when she saw Ellen.\n\n\"Mom, dad this is Ellen. Ellen these are my parents Doug and Janet,\" I said filling the silence in an attempt to break the awkward tension.\n\n\"I'm pleased to meet you both,\" Ellen said warmly extending her hand. \"I know I'm not what you expected but I care for your son very much.\"\n\n\"Please come in,\" my father said shaking her hand. The look he gave me seemed to say are you sure about this son, but at the same time I could see he was ready to support me either way. One look at Ellen and any man could see why I had fallen for her.\n\n\"Is this some sort of joke?\" my mother said staring at me and ignoring Ellen's outstretched hand.\n\n\"Janet give him a chance to explain,\" my father said putting an arm around mom and I could have kissed him for helping to reign in her anger.\n\n\"Well I'm sorry but this is just a bit of a shock,\" she said as my father calmed her down. \"Come in and we can talk. Is this something new?\" my mother asked when we'd taken our seats in the living room.\n\n\"We were seeing each other two summers ago,\" I started.\n\n\"Two summers ago,\" my father said cutting me off. \"You're Ms. Swanson, the lady he did the gardening for then?\" he asked.\n\n\"Yes,\" Ellen said blushing. \"I never planned for any of this to happen, but we ended up falling for each other while working on the garden. You're son is a wonderful man.\"\n\n\"If it's been going on that long why are you telling us now?\" my mother asked in an angry voice.\n\n\"We were apart for two years, but Ellen came to see me at graduation last week. I spent the night with her last night and I'm going to move in with her,\" I said spilling it out.",
        "\"Moving in? Is this about her money?\" my mother said looking dumbstruck now.\n\n\"I understand how this must make you feel Janet,\" Ellen said in a soft voice.\n\n\"Do you have any children Ellen?\" she snapped.\n\n\"Yes a daughter,\" she said meekly.\n\n\"Well you can come back and tell me you understand how I feel when she brings home a man twice her age. Until then don't you dare try to tell me you understand what this feels like\" she said standing to leave.\n\n\"Mom please I love her and...\" I wanted to explain but she didn't give me a chance.\n\n\"Love her?\" she said her eyes wide with anger.\n\n\"Yes...\" I said looking at my feet.\n\n\"You're old enough to make your own decisions and you're smart enough to know I don't approve of this at all. She's certainly pretty enough so have your fun Dan and pretend this will work. Get it out of your system and move on with your life,\" she said daring me to say something back to her. \"To think I used to worry that he never brought home any girls for us to meet,\" she muttered in disgust as she walked away.\n\n\"I'm so sorry about that,\" my dad said with a nervous smile when she'd left. \"You're not what we were expecting Ellen, but I'm glad you both decided to tell us. She'll come around,\" he said nodding towards to other room. \"She just needs some time.\"\n\n\"Thanks dad,\" I said. \"I'll just get some of my clothes for now,\" I added as my father nodded.\n\n\"I'll wait for you outside\" Ellen said as I rushed upstairs.\n\n\"Well that went smoothly,\" I joked getting into the SUV with Ellen ten minutes later. I could see that she'd been crying and it tore me up inside.\n\n\"She hates me,\" Ellen said wiping her eyes.\n\n\"She doesn't hate you, she hates the idea of her son dating an older woman. When she gets to know you she'll love you like I do,\" I said grasping her hand.\n\n\"Do you really think so?\" she asked hopefully.\n\n\"I know so, just don't tell her you don't want any more children or you're on your own,\" I said but again my joke failed to lighten the mood. Ellen actually looked far worse now.\n\n\"Oh Daniel I thought I'd told you,\" she said in a trembling voice.\n\n\"Told me what?\" I asked.\n\n\"When I had Jessica it was a difficult birth. There was a lot of bleeding,\" she said in a tiny sad voice. She looked as if she was talking about something that happened yesterday, not twenty years ago. I've never been able to forgive myself for bringing back her most painful memories. \"When it was all over they told me more children wouldn't be possible. There I was holding my precious little girl on what should have been the happiest day of my life, and it was, but a part of me couldn't stop thinking about all the others I'd never have. I guess a part of me never will.\"\n\n\"Come here Ellie,\" I said holding her in my arms. \"I didn't know. I'm so sorry I never knew.\"\n\n\"You're not mad?\" she said sounding surprised. \"You still want to be with me?\"\n\n\"Is that part of the reason you sent me away after our summer together?\" I asked feeling sick when she nodded and studied the floor. \"Look at me Ellie. I love you. The two years we spent apart were the most miserable years of my life. If we need a baby to complete our lives then we can adopt one, but I could never leave you to have a child with another woman. How could I love a baby who reminded me everyday that he or she was the only reason I wasn't with you?\" It warmed my heart to see the fear in her eyes evaporate.\n\n\"You're such an amazing man Daniel,\" she said drying her eyes and kissing me. She let me hold her in my arms for a long time before finally speaking again. \"Where should we go?\"\n\n\"Let's go home,\" I said relieved that I was able to make her smile at last.\n\nWe made love as soon as we got home. That night I dressed in one of the suits Ellen had given me two years ago and we went to dinner. Ellen made me hide to surprise Gwen at dinner. Seeing four places set Gwen asked the waiter to take one away, but Ellen told her she'd brought a date. When I stepped out she gave me a huge hug and told me how happy she was to see me back with Ellen. I don't know exactly what it was about him, but Ellen was right, I could tell Peter was the perfect man for Gwen the first time I met him. Gwen made me promise to attend the wedding, as if there was anyway Ellen would let me skip out on being her date.\n\nAfter that night Ellen and I did all the things we been afraid to do as a couple before. I went to her fancy dinner parties where she didn't let anyone mistake me for anything but her man. It was awkward at first but the more of them we went to the easier it got. The same people showed up to each one and before long I was just one of the crowd. Ellen was a no nonsense woman and I think they all knew she wouldn't have tolerated anything less. I found it hard introducing her to my friends and they all made the same tired kept man wisecracks. They accepted her though because in the end they could all plainly see how much she meant to me. She never liked to flaunt her wealth, but insisted on paying for dinner or whatever else we did with my friends, something the poor students and recent graduates could appreciate. None of them expected it from her but they were always genuinely grateful for her generosity.\n\nI got to see Jessica again soon after Ellen and I reunited. She'd broken up with her most recent boyfriend but was already on the prowl for a new one. Somewhere out there was a guy who was going to get himself one hell of a woman if he could only keep up. I'd been extremely worried that they'd expect me to welcome Jessica back into our bed, but it never came up. Ellen and I were a real couple now and Jessica respected our privacy. She came and went spending some time with us over the summer between traveling and visiting friends before her classes started again in the fall. One night she admitted to me that she really wasn't interested in school, but both her parents agreed that no degree meant no trust fund. At least there were lots of guys at school she said with a laugh making me promise not to tell her mother. I told Ellen about her lack of interest in school anyway because I didn't want to hide anything from her, but should have known she didn't need me to tell her.\n\nOur first big fight was over my unwillingness to rely on her money. I hated the idea that anyone could think I wanted this amazing woman for anything other than who she was. Working a job I hated for a boss I hated even more to make sure I had enough money to see to my own needs was something I felt like I had to do. Once my boss found out my girlfriend was much older than me and incredibly wealthy he seemed to take great pleasure in making endless jokes at my expense. Each day somehow managed to be worse than the last. He mocked me constantly, joking that if I didn't like it maybe I should get my girlfriend to buy the place and fire him. With the way he treated me he was lucky I didn't tell Ellen half of what went on or she might have tried just that. I came home too tired to do anything but go straight to bed most nights and let some of my anger come out in my words to Ellen.\n\n\"Why do you keep going to that place everyday if you hate it so much?\" she shouted at me one night when I came home in a foul mood.\n\n\"What are you talking about? I have to work,\" I said shaking my head.\n\n\"Why? We have more money that we could ever spend. At least find a job you like,\" she said angrily.\n\n\"It's your money and it's not the reason I'm with you. I don't want people to think...\" I started to explain.\n\n\"Who gives a fuck what people think? No matter what you do they're going to think it anyway honey so let them. I know you love me, that's all that matters,\" she said trying to kiss me.\n\n\"But...\" I started again.\n\n\"There are no buts,\" she said. \"How do you think it makes me feel seeing you go to a job you hate everyday? You come home everyday tired and upset. I know you're not mad at me, but I'm the one you take it out on. How would you feel if I was working a job I hated and you had the money to support us both?\"\n\n\"That would be different,\" I said stubbornly.\n\n\"No it wouldn't honey. How can you expect other people to accept our relationship if you won't? I know you have your pride, but you need to stop killing yourself for that horrible man. If it were a job you loved or one where they at least treated you with respect then I wouldn't care at all. It breaks my heart knowing you'd rather go through that everyday than spend some of our money,\" she stressed the words \"our money\" as she started to cry. I always felt horrible when I made her cry. \n\n\"I'm so sorry Ellie,\" I said taking her into my arms. \"If you want me to quit then I will.\"\n\n\"So you'll tell them tomorrow?\" she asked resting her head on my shoulder.\n\n\"No,\" I said waiting for her to give me a frustrated look. \"I just won't show up anymore and they can figure it out from there.\"\n\n\"Oh honey,\" she said laughing and kissing me. \"Thank you Daniel that makes me so happy. Don't you just love makeup sex?\" she asked unbuttoning my shirt with a smile.\n\n\"Well I'm pretty beat, but I can lie here all vulnerable and helpless if you want to take advantage of me,\" I said with her fingers already attacking my belt.\n\nThe longer we stayed together, the more my mom believed it might last and she slowly started to warm up to Ellen. She cared about me too much to lose me because of who I was with. In the beginning I had a lot of arguments with her and didn't bring Ellen back for a long time. My father remained the calming influence and he was able to make mom listen to him. Eventually she realized I'd decided to spend my life with Ellen and it was up to her how big a part she'd play in my life from now on. I didn't think she'd ever accept Ellen completely like I'd hoped, but she made a real effort and she couldn't deny the fact that we loved each other.\n\nAfter a several months, the amount of sex in our life slowly diminished but it didn't drive us apart like I once feared it might. Knowing we were going to have a tomorrow took some of the urgency out of relationship. Neither of us felt the need to spend every waking moment in bed anymore. It felt good to watch a movie together and not glance at the clock wondering how many orgasms we'd cheated ourselves of. If I was ready for bed I didn't care if she wanted to finish watching her show or give one of her friends a call. If she wanted sex when she came to bed she knew plenty of good ways to wake me up. She didn't mind if I spent a night out with the guys. At the same time she knew she was always my first priority, all she had to do was say the word and I'd blow them off. The sex was still frequent and fantastic, but missing a night here or there didn't feel like a huge loss anymore. I know I never turned her down when she wanted it and couldn't remember her refusing me either, but she would tease me once in a while.\n\nThat summer at Gwen's wedding I watched the ceremony from the bride's side of the church. Gwen looked beautiful in her wedding dress, but to me she paled in comparison to her maid of honor. After the dinner and Ellen's obligatory dance with the best man, she spent the night in my arms sparing a single dance for Peter while I partnered with Gwen. Ellen looked so happy for her friend and I smiled knowing the romance in the air meant I was in for a night of incredible passion. There was something else in her eye and it didn't take me long to figure it out. I could tell she was thinking about what it would be like to be the bride one more time. Closing my eyes a moment I found it easy to picture her in a wedding dress and knew immediately that I wanted it too.\n\nI had known the day she accepted me back into her life that marriage was part of any real future together. Ellen was a strong, independent woman who wasn't afraid to take what she wanted. At the same time I knew she was old fashioned when it came to romance and loved it when I brought her flowers or opened a door for her. I couldn't envision her asking me to marry her so the responsibility was on my shoulders. I ran the idea by Jessica and then Gwen. They both said almost the exact same thing when they stopped screaming for joy. They assured me she would say yes and told me not to worry about anything else. When I told my parents, even my mother seemed pleased and that's when I knew I was on the right track. By now she had accepted the fact that Ellen was the woman I was going to spend my life with and she wanted to see her son marry the woman of his dreams no matter who she was.\n\nThe only problems remaining were what to do about the ring and how to ask her. Month after month I held back because I could never afford the expensive ring she deserved. No matter what I did the best I could give her would never compare to the jewelry she already owned. She was out shopping one night when I let myself into her vanity and sorted through her collection. There was so much more than I imagined and I realized that I'd never seen her wear most of it. Looking around there were only a few things I recognized and then it hit me. The only jewelry was never without was the necklace I'd given her down in Mexico. The cost of the ring didn't matter at all because whatever I gave her would represent my promise to love her now and forever. The best I could afford was more than enough for her. I was confident now and I knew the perfect place to ask her too.\n\nWhen I mentioned taking a trip to Mexico a little over a month later Ellen thought it was a wonderful idea. She took care of all the arrangements booking us for two weeks in same hotel we'd stayed at before. Right now she was in the middle of some important business deals so we wouldn't be leaving for over a month. I already had the ring picked out but it gave me time to plan everything else. Having saved most of the money I'd made from my job before quitting and continuing to work gardening jobs I had a decent sized ring fund set aside. Ellen had recommended me to some of her friends and they were happy to hire me for landscaping advice when they found out I was the one who had worked on hers the summer Ray was away. In the end, I had saved enough money to get her a ring most women would dream of owning. I found a jeweler in town who did amazing custom work and spent hours sitting in his store going over his books of designs until we'd come up with the perfect ring for the love of my life. The ring had a diamond at the center, with smaller diamonds and emeralds surrounding it, and the white gold band was engraved with her favorite flowers. When I showed it to Jessica the immediate tears in her eyes told me I'd chosen wisely.\n\nThe last time we'd come to Mexico the only thing on our minds was lust for each other. Plenty of that remained and our first few days were filled with fucking and memories of our first trip, but we had a lot more time now. We spent most mornings together on the beach and visited the same restaurants we'd gone to on our last trip. My original plan had been to ask her to marry me on our last night in Mexico, but I decided it would be better to ask halfway through so we'd have a week to celebrate alone. I'd thought ahead enough to make dinner reservations on a few different nights so I'd have options once we got down there. I let her go shopping alone and went to the restaurant where we'd be dinning tonight. When I told the staff there I'd be asking my girlfriend to marry me tonight they went out of their way to help make it special by providing flowers and the privacy of a secluded table. Ellen really was rubbing off on me because I let my money show how grateful I was with the promise of a lot more if things went as smoothly as promised.\n\n\"Do you have anything planned for tonight hon?\" Ellen asked when I got back to the hotel and found her taking a bath.\n\n\"Just a romantic dinner with my favorite girl. Did you want to come too? I can call and see if they have a table for three,\" I teased jumping back from the water she splashed at me.\n\n\"Get in here,\" she said with smoldering eyes.\n\n\"But I'm not dirty,\" I said staying out of her reach.\n\n\"I said get in,\" she said looking desperate for me to join her.\n\nStripping down as she watched with a triumphant smile, I was naked but not quite erect in seconds. She knelt up in the water and sucked my cock as I stood waiting to get in. By the time she stopped I was completely hard and well on my way to cumming. Standing she let me get in a sit down then sank down onto my familiar cock. Sometimes Ellen liked to see just how fast she could make me cum and today was one of those days. She knew I had plenty of staying power when needed, but took great delight in knowing she turned me on so much I was helpless to resist her. Seeing me look away and trying to make myself last only made her more determined as she kissed my neck before filling my ear with dirty talk. Groaning I let my cum flood her pussy and slumped in the water, spent for now. She giggled with glee and hopped out of the water after rinsing her cunt to start getting ready.\n\nEllen let me soak in the water for a few minutes, but it wasn't long before she stared at me though the mirror and told me to finish up. Every time we went out to a nice dinner or show she wanted to surprise me with her outfit. I'd come to expect it and love it, even though she'd never look less than fantastic in my eyes no matter what she wore. Dressed in my new tailored suit Ellen had bought me for the trip I waited for her nervously, checking my pocket every few minutes to make sure the ring was still there. In my mind I pictured her wearing a slinky light blue dress. She knew it was my favorite color on her and there was a large section of her closet devoted to that particular shade of blue now. When she came out I smiled wide seeing that I'd been right.\n\n\"I knew you'd be wearing that color,\" I said proudly. The color was right but the dress was cut differently than I pictured. The neck was much higher showing no cleavage but clinging to her breasts and the back was open revealing a lot of skin.\n\n\"You're no fun,\" she pouted. \"How can I surprise you when every time I ask you to pick something you always want the same color?\"\n\n\"The outfit doesn't matter Ellie. It's the girl inside the wrapper I want to play with,\" I said making her smile at me.\n\n\"Well next time I'm picking something completely different then,\" she said.\n\n\"Ok but I think the blue looks best on you,\" I said honestly.\n\n\"Of course you do,\" she said rolling her eyes, but it was all in fun. \"I'm ready if you are hon.\"\n\nI let her take my arm and led her to the elevator down to the lobby. There was a car already waiting for us and it looked like he'd been there a while. He knew who he was waiting for though and greeted us with a smile, knowing the tip would more than make up for it. In the past Ellen had tried getting me to take her money and pay when we went out, but that made me feel much worse than just letting her pay our way. Over time I was becoming more comfortable with her wealth. Ellen was always going to be obscenely wealthy and the longer we were together the less it mattered. I'd never be able to spend freely like her though. She laughed at the way I liked to look for bargains at the grocery store as if saving a quarter on a box of cereal would somehow make a difference. It was a habit I'd developed as a poor student and I just couldn't shake it.\n\nAt the restaurant they took us directly to our private table. I pulled out Ellen's chair for her and the bouquet of her favorite flowers was on her seat as planned. She kissed me in thanks and gave me a look that said she knew something might be up. As we sat down I could tell she was wondering why they hadn't left menus for us, but smiled when I poured from a bottle of one of her favorite wines for her. Our waiter returned shortly with appetizers and again I'd pre selected some of her favorites.",
        "\"I took the liberty of ordering for us beforehand,\" I admitted when it became obvious. \"If you'd rather something else I'll have them bring a menu.\"\n\n\"That's fine honey,\" she said touching my hand. \"You know what I like as well as I do by now. I bet your main course will be a medium-rare steak with rice because they didn't have potatoes the way you like them on the menu and you didn't want to ask.\"\n\n\"Not even close, I asked for the steak medium,\" I said smiling as she laughed. \"You're incredible Ellie. I love you so much,\" I said leaning over for a long, lingering kiss.\n\n\"Dinner is here,\" she said eyeing the waiter stood patiently behind me when our lips parted.\n\nAs we ate Ellen told me about the stores she found while out shopping today. I promised she could model the clothes she bought when we got back to the hotel, making her laugh when I asked if any were blue. Wondering if she had somehow read my thoughts or could see the perspiration on my forehead I ate slowly. As much I wanted to commit my life to Ellen it was nerve wracking waiting for dinner to end. Ellen didn't order desert most nights when we were out, but when the waiter brought her a double serving of chocolate truffle cake she smiled. I knew she loved it and wanted to treat her. It was too much for her to finish though so I leaned in and let her give me a taste.\n\nThe restaurant played soft, slow music all the time so we had something to dance to. When I stood and offered Ellen my hand she couldn't agree fast enough slipping comfortably into my arms. I'd never been so nervous in my life. My heart was hammering in my chest and my arm on Ellen's back shook uncontrollably if I didn't keep it pressed tight against her. She had her head resting against my right shoulder as we swayed to the music. I was surprised she didn't notice my erratic heartbeat and was worried that if she shifted her arm she might feel the ring box inside my jacket. I kept telling myself there was nothing to worry, that all I had to do was ask and she was sure to say yes. I kept trying to build up the courage to give her the ring but was too afraid to stop.\n\nEllen loved to dance so I kept going until she thanked me with a kiss and stepped away saying her feet were getting sore in her heels. When I didn't sit down myself and instead stood next to her holding her hand she gave me a puzzled look. Willing my arm to reach inside my coat I took the box out and held it tight in my hand. It was easy to sink to one knee with my legs going weak beneath me. Opening the box I watched Ellen's face wishing I could make her smile like that forever. Clearing my throat I had one more surprise for Ellen if I could only find my voice.\n\n\"Te quiero Ellie. Usted me casar\u00e1?\" I said asking her to marry me in Spanish. Her eyes had already filled with tears when I got down on my knee and now as I anticipated her response they overflowed.\n\n\"S\u00ed me casar\u00e9 con usted. Te quiero tanto Daniel,\" she answered crying without restraint now. She spoke so quickly I didn't understand it all, but I knew what si meant. Offering me her trembling hand she let me slip the ring on her finger, a perfect fit thanks to Jessica's advice. Bending at the waist she hugged me fiercely and press her lips to mine for a kiss that left me breathless.\n\n\"I love you so much Ellie. I promise to take care of you and love you everyday from now until forever,\" I whispered before kissing her again. Ellen was crying and shaking in my arms. For a long time she couldn't speak letting me hold her \n\n\"Oh Daniel I love you too. I love you so much,\" she said with tears streaming down her cheeks. \"You don't know what my life was like before you came along or during the time we were apart but I never want to go back to that. Now I know I'll never have to. You've made me so happy my love,\" she said kissing me.\n\n\"Is the ring ok?\" I asked wondering what she thought of it.\n\n\"I'd love it no matter what because it's from you, but it looks amazing honey. It's so pretty and so unique. Where did you get it?\" she asked studying the flowers on the band.\n\n\"I found a place back home where they made it for me. I'm glad you like it. I really wanted to get you something special,\" I said relieved by her genuine reaction.\n\n\"Well I love it so stop worrying. I love you a lot more though,\" she said kissing me again. \"I think you better take me back to our hotel hon unless you want to make love to me on this table,\" she said and I knew it wasn't a joke.\n\nI called for the waiter and asked for our bill. Sitting next to Ellen we made out without worrying what the staff might think. When he returned Ellen didn't even glance at the total, instead tossing down a handful of bills from her purse that dwarfed the check. On the way out she gave money to every employee we passed and left plenty more with manager to give to anyone she missed. It was her way of thanking them for their part in our special night. Our driver was already waiting for us and as we got in Ellen told him to take us straight to the hotel. In the back seat together our lips rarely parted as he drove. Ellen couldn't resist grasping my cock and smirked when she found it rock hard.\n\nIt wasn't a long ride back to the hotel, but I lost myself in the moment. I couldn't kiss her enough to show her how much I loved her. A small part of me had been afraid she might say no but now that she had agreed to become my wife I was filled with endless joy. When my hand on her knee started to slide up her leg she opened them wide for me. The driver pretended not to notice but I knew he could hear us and didn't care. Ellen moaned as I rubbed her pussy beneath her silk panties and kissed me back harder than before. I felt the car stop and thinking we were at a traffic light continued to make out with my new fianc\u00e9. It wasn't until the driver cleared his throat a few minutes later that we realized we were at the hotel and he wanted to stop us before we got carried away any further. The driver said something in Spanish that made Ellen smile as she handed over another huge tip that made him smile back, bobbing his head in thanks.\n\n\"What did he say?\" I asked her as we hurried inside.\n\n\"He wished us a happy wedding,\" she said smiling and kissing me. \"I love you so much Daniel,\" she said with her arms around my neck kissing me some more as we waited for the elevator.\n\n\"I love you too Ellie. I promise to do everything I can to make our marriage a happy one,\" I said returning each kiss.\n\n\"Just be yourself then honey. Just be the wonderful caring man you are,\" she said.\n\nWhen out elevator arrived I lifted Ellen and carried her inside. With her legs clinging around my hips I held her against the wall and slammed the button for our floor. Holding her in my arms I was so eager to kiss her and make love to her that it felt like I could carry her forever as if she was weightless. Stepping out of the elevator at our floor I carried her easily to our room and let her shoulders rest on the door as I fumbled for the card to let us in. She started to drop when the door opened but I caught her long before she fell. To me it was a sign that she'd always be safe in my arms. I kicked the door closed behind us and carried her towards the bedroom.\n\nI laid her down on the bed gently and climbed on top of her. Neither of us could stop the kissing as we tried to strip each other. I managed to get out of my suit jacket, but her fingers were too unsteady on my tie and shirt buttons. At the same time I had no idea how to get her out of her dress, I thought it had to fasten behind her neck but I couldn't find it. Taking her hands away from my collar with a gentle touch, I kissed her tenderly. For now the kissing was enough for both of us. I wanted this night to last forever and was savoring every moment with my future bride. The exchange of kisses went on and on with neither of us wanting to stop. When I finally pulled back to loosen my tie she took the opportunity to tell me she loved me and I had to kiss her some more.\n\nEven when I tried to roll off her, Ellen rolled with me keeping her lips pressed to mine. With her on top I could at least squeeze her ass as I tried to tempt her by pushing my erection up against her. She kept on kissing me but her hands vanished behind her neck and moments later her dress was hanging down to expose her breasts. They looked more beautiful than ever, sagging under their own weight with dark round nipples that begged to be sucked. Ellen let me fondle them as she continued to kiss me sighing softly whenever I rubbed her nipples. When she could wait no longer she sat up letting her breasts sway past my lips knowing I'd suck one in immediately.\n\nUsing just my mouth so my hands were free to undo my shirt I teased one nipple until it was wet and hard before switching sides. Ellen moaned louder now and ground her hips into me as her dress continued to ride up her legs exposing more of their perfectly shaped inches with every shift of her body. One of her heels scraped against my leg and though I barely noticed it Ellen stopped long enough to slip her shoes off. It gave me a chance to finish unbuttoning my shirt and loosen my tie enough to fit it over my head. Turing back to me she noticed my bare chest and ran her fingers over it, brushing the hair that had filled in darker and thicker over the past few years. Hugging her body to mine she kissed me again letting me feel her breasts against my chest something she knew I loved.\n\nThe next time she sat up she slid down past my crotch. Her hands were steady now as she unfastened my belt with a determined look. Tearing my zipper open she reached into my underwear and pulled out my cock. Holding it in a soft grip she stroked it a few moments and bent to suck it just long enough to make it wet. Lifting her dress over her head she dropped in on the floor and lay on her back wearing just her panties and a smile. I couldn't pull my pants off quickly enough but struggled to get them past my shoes. Kicking at them the left shoe was stubborn and I was forced to bend over to untie it in order to shake it free. Naked now I positioned myself with my face between her legs but Ellen stopped me with a hand and shook her head. She wanted me inside her and I couldn't agree more. Slipping her panties past her hips and down her legs I noted how wet they were before lining up my cock to penetrate her.\n\nEllen opened her mouth with a soft sigh as I pushed inside her. There were tears of joy in her eyes as I pressed my body down on top of her to make love for the first time as an engaged couple. With her arms around my neck she hugged me close, letting me kiss her neck and whisper my love for her as she gripped me with her legs too. When her legs loosened around me I began filling her with slow, loving stokes. There was plenty of time for some lust filled fucking later, but this time first time we both wanted it to be gentle. The most important thing was feeling close to the woman I loved and making sure she could feel my love for her each time I pumped inside her.\n\nThe pace was slow but her incredible body and knowing we'd be together forever now quickly put me in an excited state. Her every moved felt sensuous beneath me, each turn and twist of her body designed to bring me pleasure. Every inch of her skin was soft, warm, and perfect. I didn't want to stop, but in order to keep from cumming I had to. It wasn't fair. This was supposed to last so much longer but I couldn't get my body to cooperate. Ellen saw the concern on my face as I stopped and kissed me tenderly. It was her way of telling me she wouldn't and couldn't be disappointed by my performance. I loved her for always being understanding and we both knew I'd make it up to her on the later rounds but the love of my life deserved better. The choice was mine and I decided to stop as often as needed to make it last.\n\nAsking her to be still beneath me to make it easier she gave me another kiss that screamed don't worry honey. In order to calm myself down I began thinking about what her saying yes meant to our future. The thought of her soon calling me her husband brought a huge smile to my face. Even since we had gotten back together there was a small part of me that remained terrified this might end again, but now that feeling was completely gone. Ellen smiled back at me and touched my arm lightly. She still didn't care how long I could last, but after my break I was ready to give her all the loving she deserved.\n\nWhen I started pumping her again she spread her legs a little to give me space. I ran my hands over her breasts and teased her nipples, kissing her as we made love. The longer it went on, the more Ellen began to anticipate me stopping again but I kept going sliding my cock in and out of her. No matter how understanding she was, I knew she was pleasantly surprised and completely thrilled at my ability to keep going this time. I could have cum whenever I wanted but this was a special night and I was going to make it last until she was ready. Every stroke inside her felt better than the last as I paced myself.\n\nGradually, my efforts pushed Ellen towards an orgasm as I watched for the familiar signs. Her soft moans grew louder and deeper over time. In the beginning she'd wanted kisses constantly, but now as her excitement grew she rarely pursed her soft lips. Her warm skin grew hot wherever our bodies touched and her legs moved with me, pulling me in with each stroke. When I did require another break she gave me longing look and continued to writhe beneath me, but I wouldn't let her hands near her clit to finish the job. One more session and she'd be done I thought, but one became two, then three and more. The longer it went on the more anxious she became until the looks she gave me were almost pained. I refused to cum first or move beyond the gentle, loving pace.\n\nEllen was twisting beneath me like she was trying to scratch an itch she couldn't reach. I was hoping this was it because I didn't know how much longer I could last. Each series of strokes had become shorter and the risk of cumming was much higher. Just when I was about to stop again, I felt Ellen's pussy clench around me. Looking down I could see her holding her breath waiting for her orgasm to rattle through her body. This was the moment I'd been waiting for and relaxing as I pumped into her I let my cum flood her pussy with a shallow groan. At the same time, Ellen shuddered beneath me unable to control the shaking as each spurt sent another shiver through her body. I kissed her once more and she wrapped her arms around me as we shared our incredible orgasms.\n\nRolling so she could rest her weight on me, I held tight and told her I loved her again and again. She looked so tired I thought she might fall asleep in my arms, but long after the tingling in my body had stopped she kissed me and got up to use the bathroom. Without her warmth, my sweaty body was soon feeling a chill in the air-conditioned room and I slipped under the covers to await her return. Ellen stepped out of the bathroom and sauntered towards the bed with a smile when she saw the blankets turned down on her side. Turning her back to me as she got in, she pressed her body against mine and held my hand when my arm wrapped around her. She sighed softly as I kissed her neck, but she seemed more interested in studying her new ring.\n\n\"Mmmm...\" she moaned with a tired little laugh.\n\n\"You really do like it,\" I said between kisses.\n\n\"Oh Daniel it's perfect,\" she said turning on her back. \"I feel like the luckiest woman in the world tonight. I can't wait to get home and show it to everyone, but we have a week to celebrate on our own first,\" she said with a sultry smile.\n\n\"I'm just relieved you said yes and that I can stop worrying about it all the time,\" I told her.\n\n\"I couldn't have said yes fast enough. I kept telling myself not to get my hopes up hon but this is something I've dreamt about. I knew you planned to stay with me but this... this is forever,\" she said smiling at the ring she held up in front of my face. \"I don't want to put the wedding off, I want you to be my husband more than anything. Can we do it in a month or two?\" she asked hopefully.\n\n\"We can do it tomorrow if you want my love,\" I said kissing her.\n\n\"I can wait a little while,\" she said with a soft laugh. \"I want everyone to be there to share our special day with us. What about your parents?\" she asked suddenly. I could see that the prospect of telling my parents about our engagement worried her a lot.\n\n\"They can come too I guess,\" I said with a grin.\n\n\"You know what I mean. How are we going to tell them we're getting married?\" she said looking distraught as if this could somehow ruin everything. I would have liked to tease her a little more, but I couldn't let her go on thinking that anything could interfere with what we both wanted so much.\n\n\"I told them before we left Ellie and they were happy for us,\" I said holding her safely in my arms.\n\n\"Your mother too?\" she asked, clearly not believing what I told her.\n\n\"Yes my mother too. She knows she can't change who I love and wants me to be happy more than anything,\" I said. \"I bet she can't wait to help you plan the wedding.\"\n\n\"Oh honey that means so much to me,\" she said with tears in her eyes. \"I never wanted to come between you and them.\"\n\nHolding her in my arms I let her cry her tears of joy. All day I'd been anticipating a night of hard fucking, but it didn't seem right after the special evening we had shared. I wanted to comfort her and hold her close all night. When she looked up into my eyes I shook my head and she smiled pressing her head into my chest. I reached over and turned the lights off then settled into my pillow with Ellen hugging herself close to me. Sleep was a long time in coming as I whispered my love for her countless times and our lips met in an endless stream of kisses.\n\nThe next morning I woke up and found Ellen still sleeping in my arms. I loved to watch her sleep. She looked so peaceful, so beautiful with her chest rising and dropping slowly and her lips slightly parting with each tiny breath. My eyes were drawn to the engagement ring on her finger and I smiled thinking how perfect it looked on her. Visions of what our wedding would be like starting filling my mind. I hoped I'd be able to convince Ellen to keep the ceremony small, but it was her day and I wasn't going get in the way of anything she really wanted. From the day we'd gotten back together marrying Ellen had been in the back of my mind and now that she'd said yes I couldn't wait to make her my wife.\n\nNeeding to relive myself, I rolled Ellen off of me gently and tucked the covers around her with a soft kiss on the forehead. She murmured softly but didn't wake up as I slipped away. After visiting the bathroom I ordered us breakfast and sat down to watch her sleep. My mind was filled with all the things I wanted to do with her. Ellen was always talking about taking me on trips to show me all her favorite vacation spots. Now that we were going to be husband and wife I was hoping she'd make time for it. I was starting to get over my fear of spending her money, not that I'd ever be comfortable spending freely on myself, but I was willing to plan a lavish trip as a surprise for her. We'd be spending her money but there was no way around that and I knew it didn't matter to her. What she had said during our fight was true, if I was the one with all the money I would have been happy to support her and this was no different.\n\nThe room service arrived with a loud knock that caused Ellen to stir. I rushed to the door and wheeled the cart right into the bedroom. Ellen was sitting up in bed now with the blankets draped across her. Wrapping them around her like a toga she came to me and slipped comfortably into my arms for our first kiss of the day. She was eager for sex, as expected, but I convinced her to sit on the end of the bed and have breakfast with me first.",
        "\"I know we were supposed to go on that boat cruise today honey but I want to stay here all day instead,\" she said as we ate.\n\n\"What are we going to do here all day?\" I said with a wide smile.\n\n\"Well I'll be lying around naked so I'm sure you'll think of something,\" she said smiling back.\n\n\"I love you Ellie,\" I said kissing her as I set my glass of juice down.\n\n\"I love you too Daniel,\" she said kissing me back. \"I hope you're finished eating hon because I want you to fuck me now.\"\n\nEllen pushed the cart away from the bed and dropped the blankets as she said that. Sliding back on the bed naked she spread her legs wide and slapped her pussy, her hand making a wet sound against her already excited snatch. I had dressed in a pair of shorts and t-shirt to answer the door but now I was over dressed. Sometimes I think if Ellen had her way I'd always be naked and erect. Fingering herself with one hand while the other played with her nipples she put on a little show meant to make me hard if I wasn't already. Taking off my shirt and tossing it aside I let her approving eyes linger over my body a moment longer before dropping my shorts. My hard cock sprang straight out in front of me and she gave me a pleading look.\n\nIt was impossible to make her wait any longer when I wanted her so bad it hurt. Jumping onto the bed I took my familiar place between her legs. Jamming my cock inside her, I heard her grunt beneath me but her tongue filled kiss told me she wanted it hard and fast. Last night I'd gone to great lengths to hold off my orgasm for her, but with this pace she knew I couldn't do it again. I knew she didn't care though, the faster the first time was out of the way, the sooner we'd get the next rounds where I could fuck her for as long as she wanted it. Even though she was unlikely to cum this time, she still enjoyed each jarring stroke and lifted her ass to meet me.\n\nI was going to cum quickly at this pace, but that didn't mean I had to surrender to the first urge. When Ellen saw me wrinkle my brow as I tried to prolong the inevitable she licked her lips pinched one of my nipples. Squeezing my cock with her exquisite pussy she held me by the hips and pulled me in on each stroke now. She wasn't making it easy to last, but it was her way of showing how little it mattered. Ellen loved to play little games in bed and trying to make me cum when I didn't want to was definitely one of her favorites. At this point, if I stopped restraining myself for just a moment I was going to cum. She started filling my ear with dirty talk and asking why I couldn't cum yet if I found her so sexy. Surrendering myself to my orgasm, I collapsed on top of her filling her pussy with cum as my cock tingled.\n\nWhen my balls had stopped tightening with each spurt of cum inside her, I rolled off onto my back gasping for breath. Ellen kissed me and jerked my cock rapidly for a few moments laughing at my weak groan before rushing off to the bathroom with a huge smile. I heard her running the bath water and tried to compose myself knowing she'd expect me to join her soon. When the water stopped, I got up immediately and took the bottle of wine we hadn't finished from a few nights ago with me. It was early to start drinking, but we had a good reason to celebrate.\n\nEllen was already in the water sitting to one side in anticipation of my arrival. When I sat in the edge of the tub she didn't need any prodding to kneel in front of me and take my shriveling cock between her lips. Popping the cork from the wine I tilted it to let some pour into her open mouth when she looked up at the sound. Taking a long swig from the bottle I gave her another taste, smiling as she let it trickle from the corners of her mouth and down over her breasts. I licked along her neck and then all around her breasts savoring the taste of her wine covered skin. We'd started with just over half a bottle and were quickly running out. Using my thumb to control the flow I splashed some on my cock and waited for her to suck in clean before dowsing it again. With barely a mouth full left now I offered her the bottle for the last taste but she kissed me and pushed half into my mouth.\n\nAlready my amazing lover had made me hard again. Ellen was ready to take full advantage of my erect cock and tugged me off the edge into the water. Facing me she sank down on my cock guiding it inside her eager lips. With me holding her behind the back, she wrapped her legs around my waist tightly and leaned back to begin riding me. Her skin was slippery with water and suds, adding to her already sensuous feel. Water splashed around her legs keep her lower body wet and more dripped from her hair to run down over her breasts. To aid her efforts I began rising to meet her each time she lowered her cunt onto my cock. Even with my help it was an awkward position for her and Ellen was soon panting from the effort and stimulation. Slowing as she tired, she surprised me by throwing herself at me and toppling me back into the water with a splash.\n\nGiggling playfully she kissed me and held still when I started pumping up into her. I didn't have much leverage and the strokes were awkward so she happily sat up when I asked her to. Before I could direct her she was already leaning over the edge of the tub with her pussy sitting high and inviting. The water had left her soaked but I think her cunt would have been just as wet if we were still in bed. With her hands gripping the tub she awaited my reentry. The moment I ran my cock against her lips to tease her a little she flung her hips towards me trying to capture it. It kept slipping against her wet skin to slide up between her legs or back to rest in the groove between her ass cheeks. I could see her trembling anxiously as she tried to get it inside blindly and wouldn't let her use her hands to help. The stimulation of my cock gliding along her clit was making it hard for her to focus, but she was determined to win. Finally she spread her knees in the water causing her lips to part and circled her hips slowly until she felt my head catch between her lips. Slamming back to engulf my cock she let out a triumphant squeal.\n\nIt was the moment I'd been eagerly waiting for. Pushing her up against the tub I fucked her as hard as I could. Ellen shrieked and roared at me to give it to her, my teasing having driven her mad with desire. Her upper body sagged over the tub and her hands braced against the floor holding her steady for my onslaught. Standing up behind her, my hands gripped the edge of the tub as I pounded down into her. When I stopped for a moment to grind my hips with my cock buried inside her she slammed her fist into my stomach, annoyed that I would stop when she was so close now. Ellen grunted as I started pummeling into her cunt again and was soon moaning loudly as her orgasm approached. I wanted to make her cum hard and began wiggling my thumb up her ass to make the fit of my cock inside her that much tighter.\n\n\"Quit fucking around and stick it in me,\" she screamed at me when I was too slow in sliding my thumb inside her ass.\n\n\"Like this?\" I asked shoving it in and continuing to fuck her hard.\n\n\"Oh god yes fuck meeeee!\" she panted. \"You know where I want it honey make me cum.\"\n\n\"Don't you want it to last?\" I teased her. \"I think I should stop for a while.\"\n\n\"No! No you can't,\" she said in a heart breaking voice that made me feel horrible for teasing her. \"Please don't stop Daniel,\" she pleaded even though my pace had never slowed.\n\n\"Shhhhh it's ok Ellie. I was just teasing,\" I said rubbing my hand over her back gently.\n\n\"I love you,\" she said looking over her shoulder as she reached back to grasp my hand.\n\n\"I love you too,\" I said squeezing her hand.\n\n\"Then make me cum with your cock,\" she moaned.\n\nI did exactly as the love of my life asked. Sliding my other hand under her waist, I left my fingers stroke her slippery clit and gave her every inch of my cock right where she wanted. Within moments her cunt clenched around me as she arched her back, her entire body going ridged with her breasts thrust forward. She was breathing sharply as her orgasm ripped through her body. I continued to fuck her slowing slightly so I could support her out of control body. Even when she went limp and sagged over the edge of the tub I kept going until tensed with another orgasm and another and another. Finally, using her last ounces of strength she crawled out of the tub away from me and collapsed on the floor a shuddering mess.\n\nSmiling I climbed out after her and rolled her onto her back knowing she'd thank me later despite her look of absolute desperation. Forcing her weaken legs apart easily I fingered her rapidly and watched her thrash. She was trying to say stop but her quivering chin wouldn't let her get the words out clearly so I pretended not to understand. When I stopped fingering her she rolled on her side and curled up in a fetal position. Kneeling on the floor next to her I rolled her towards me and scooped her up into my arms. Lifting her I kissed her softly as her head sagged against my chest with a weak smile. Carrying her to bed I tried to lay her down but she refused to leave my arms. Lying on my back I let her cling to me and pulled the blankets over us. Caressing her skin gently as her breathing evened, she fell asleep in my arms almost immediately. Ellen felt so good in my arms that I soon dozed off as well until she woke me hours later with a kiss.\n\n\"Even if I didn't love everything about you I'd still have to marry you for the sex alone,\" she said with an adoring smile. \"Deep down I knew I wanted you and that cock forever the first time we made love.\"\n\n\"You were so hot that day,\" I said smiling up at her. \"Even when you started dressing conservatively after my little accident it only made me want you more. I couldn't believe such a beautiful woman was willing to let me have my way with her and now I'll get to have my way with her for the rest of my life.\"\n\n\"Have your way with me?\" she said her eyes narrowing in anger.\n\n\"Ellie no I didn't mean...\" I started to apologize.\n\n\"Relax honey,\" she said laughing at my lightning quick backtracking. \"Nothing makes me happier than pleasing you with my body except for taking my pleasure from yours.\"\n\n\"Sounds good to me,\" I said rolling her onto her back with a kiss that made her moan.\n\nWe spent that first day after our engagement naked and making love. No matter how many times we screwed I always wanted her again. She was like a favorite meal that I could never get enough of. I felt like the luckiest man in the world because was going to spend everyday with her from now on and couldn't imagine anything better. The rest of our trip was filled with electrifying sex that reminded us both of our first few days together. Everyday we tried to somehow outdo the day before.\n\nWe'd planned to call home and spread the good news that first day but it wasn't until the next day that we got around to it. They were easy calls to make for the most part, but with Ellen dialing the numbers I wasn't surprised when my parents were the last ones on the list. Handing me the phone she hugged me nervously as we waited for them to answer.\n\n\"Hi mom,\" I said feeling Ellen stiffen in my arms. \"Is dad home? Still at work is he? No, no it's ok I was hoping you'd both be home but you can tell him. We're still down in Mexico; we'll be coming home in a few days. She said yes mom. I know,\" I said tears coming to my eyes as she told me how happy she was for me. \"Probably soon after we get back, maybe a month or two to arrange everything. Yes she's right here. Ok I love you too here's Ellen,\" I said handing her the phone.\n\n\"What?\" she said looking at the phone as if it were a venomous snake.\n\n\"She wants to talk to you,\" I said. With a deep breath she took the phone and held it to her ear composing herself before speaking.\n\n\"Hello? Thank you,\" she said smiling. \"It was wonderful, he was so romantic. Did he show you the ring? Oh wait until you see it, it's so beautiful. Your son is an amazing man and I love him so much. Yeah I know. I'd like that too,\" she said starting to cry. \"We'll see you when we get back.\"\n\n\"What did she say?\" I asked returning the loving kiss Ellen gave me.\n\n\"That she was happy for us and happy that her son would be marrying the woman he loves. She said it would feel weird if a woman almost her own age called her mom, but she hoped I'd call her a friend from now on,\" she said griping me tight and crying into my shoulder. \"She really does want us to be happy Daniel.\"\n\nBy the time we left Mexico I loved Ellen more than ever and couldn't wait to make her my wife. If becoming engaged made our relationship this much better I could only imagine what it would be like once we were married. The day we got home Jessica had arranged a surprise party to greet us. I watched Ellen with a smile as she proudly showed off her ring, sharing hugs and tears with everyone. When she came face to face with my mother and hugged her I was overjoyed that the two most important women in my life were finally getting along.\n\nWith neither of us wanting to waste anytime, we decided to get married a little over a month later on Saturday afternoon. I convinced Ellen to keep the ceremony small and together we decided to get married in the garden that had brought us together. There were no shortage of people eager to help and the cost of setting it all up on short notice was no worry either. Even with the recent changes in their relationship, I was a little surprised that Ellen and my mother went shopping together for wedding ideas and spent an evening out to dinner just the two of them. When Ellen came home smiling and kept giving me funny looks I knew my mother must have told her some embarrassing stories about me but was too afraid to ask.\n\nThere was one thing I needed to give Ellen before we were married. I didn't want her to have to worry about her finances on top of everything else so I met with a lawyer and had him draft up a simple prenuptial agreement. If we were to separate Ellen would keep her money, real estate, cars, and all the rest. All I was entitled to was my clothes and few simple possessions. This way she'd have peace of mind and wouldn't have to worry about bringing it up and hurting my feelings. I wanted to make sure her only concern was arranging the wedding of her dreams.\n\n\"What's this?\" she said starting to read it when I handed it to her after dinner one night.\n\n\"I didn't want you to have to worry about it so I went to a lawyer and took care of it,\" I told her.\n\n\"Daniel,\" she said shaking her head with sadness in her eyes.\n\n\"You just need to sign the bottom or if it's no good have one of your lawyers bring me one and I'll sign it,\" I said.\n\n\"I don't need this,\" she said. \"I love you Daniel and I know you love me. But this... this piece of paper in case we fail I hate it,\" she said tearing it in half and then half again. \"Are you having second thoughts about getting married? We can push it back if you're scared hon.\"\n\n\"No of course not Ellie. I love you so much and I can't wait to get married. I only did it because I thought it would be a relief for you,\" I explained.\n\n\"Oh honey,\" she said dropping the torn pages to the floor and stepping into my arms. \"Standing here in your arms is a relief. Waking up next to you every morning is a relief. We don't need any what ifs ok?\"\n\n\"Ok,\" I said hugging her tight afraid I might lose her if I loosened my grip. \"I did it for you not because I'm worried our marriage won't work.\"\n\n\"Well that was sweet in its own way but completely unnecessary,\" she said kissing me. \"Besides if you ever decide to leave me my lawyers will destroy you,\" she teased me with a laugh as I scooped her up and carried her off to bed.\n\nThe next few weeks were hectic. Ellen had me fitted for a tuxedo and spent days with her dress designer make sure it was absolutely perfect. While she was busy having her dress made it was up to me to accept any deliveries and keep calling anyone who was falling behind. I found it was easy to get a little pushy with people who were too slow in responding. This was all for the woman of my dreams and I refused to let anything ruin it. She always smiled when she came home and listened to my updates. As the weeks went by I reminded her that she had agreed to keep it small but she gave me an innocent shrug and a sweet smile. Apparently small to Ellen was nearly three hundred guests and lavish ceremony with a price tag that made my head spin. I kissed her and told her it was ok though, she was having so much fun there was no way I could ask her to slow down.\n\nEllen approached everything so seriously that I happily did whatever she asked of me if for no other reason than to see her smile. We spent two separate nights with caterers tasting one dish after another as Ellen made notes and came up a complete menu for our guests to choose from. Once the food was set we needed to pick wines and champagne to go with it. Finally there was the cake to choose. We ended up with an incredible looking five-tiered cake, with a different flavor on each level.\n\nThe food was one of the biggest things to take care of but there were so many more. Ellen wanted fresh flowers for every table and the gazebo that would act as alter for our wedding. She left it up to me saying she wanted me to surprise her but I didn't have time to do it all myself. I worked closely with the best florist in town making sure the arrangements were perfect for her. There were so many little details to take care of and so little time left. The pressure to get everything done in time was starting to get to me and it was Ellen who forced me to relax.\n\nOn top of everything else, with little more than a week to go out of town guests started to arrive and many of them were staying with us. There was plenty of room for them but entertaining our guests took up our valuable time. I tried to convince Elle to put them up in hotels but she wouldn't hear of it, though she had no trouble letting them know nicely when they were getting in the way of our planning. Jessica was a godsend taking care of our guests when we had other commitments.\n\nI got to meet Ellen's family for the first time that week. Both her parents were passed away but she had three older brothers with families of their own who prided themselves on looking out for their baby sister. It made me feel like I had to win the approval of three surrogate fathers at once. Ellen had taken her sister in-laws out for a ladies night and that left me alone at home with them. The night started fine with a tour of the garden and a ball game on the big screen, but they turned on me all at once like a pack of wolves grilling me on my intentions with their little sister. My head was spinning trying to keep up with the questions they fired at me. Thankfully the women returned shortly after it started to rescue me. They starting laughing and Ellen smiled at her brothers shaking her head. It had all been a big joke on me but at least I was able to convince Ellen I needed some extra special comforting in bed that night.\n\nA week before the wedding one last crisis arose. Ellen came home from a night out with my mother crying hysterically. It was late and she found me in our bedroom getting ready for bed. I couldn't get her to calm down enough to tell me what had happened and began to fear the worst. She passed me the box she was carrying as if it would explain everything and I opened it to look inside. It was a tiny baby's blanket no doubt meant to be some sort of cruel, mocking gift. I'd told my mother about Ellen's inability to have more children before asking Ellen to marry me. She'd been disappointed but surprisingly supportive at the time. Now this? I was completely furious and ready to cut her out of my life forever for what she'd done. Just looking at the tears in Ellen's eyes left me angrier than I'd ever been. I need to put the anger aside for now and comfort Ellen but first I was going to destroy this blanket."
    ],
    "authorname": "MasterBates13",
    "tags": [],
    "category": "Mature",
    "url": "https://www.literotica.com/s/the-best-summer-job-ever-ch-05"
}