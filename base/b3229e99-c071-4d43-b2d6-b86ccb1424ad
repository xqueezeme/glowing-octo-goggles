{
    "title": "A Valentine's Day Anal Surprise",
    "pages": [
        "\"Hi, Eric. The traffic must've been tolerable; you're here early.\" The matronly and attractive art department secretary, Amanda, stood from behind her desk. \n\n\"Yes, indeed, only 20 minutes today from Federal Way,\" I told her. \n\n\"Excellent, Eric. Dr. Crawley wants to talk with you a moment.\" Amanda nodded down the hall to the office.\n\n\"Am I in trouble again?\" \n\n\"When have you ever been in trouble here? You'll have a modeling partner, and she wants to introduce you.\" Amanda handed me the payment request voucher.\n\n\"Hopefully, this partner will be alive. Two sessions ago, I posed with a skeleton.\" I signed the voucher and handed it back across the counter. \"Thanks for filling in the form. Much easier than remembering my address and everything.\" \n\n\"Oh, I know. You've got to save all your brainpower for your poses.\" \n\n\"You got me there. I do appreciate it, though. I'm still on for Thursday?\"\n\n\"Yes, and since you're so nice to me, I'll have your voucher ready then too. Break a leg.\" She waved her hands toward the door and shooed me away.\n\nI'm a nude art model, part-time. Today's assignment is a three-hour session for Dr. Bethany Crawley's advanced figure drawing class at the local university in Tacoma, Washington. My real job is managing a homecare medical equipment firm. I have the flexibility to take the odd modeling assignment a couple of times a month.\n\nI knocked on Bethany's door. \"Come in.\" Bethany was dressed as usual in a mid-thigh, indigo linen skirt with an alabaster, straight collar pullover. Short-sleeved, by the way. I don't know how I know those things, but I do. \"Hi, Eric, thanks for coming by.\"\n\nAnother woman stood in front of Bethany's desk. \"I want you to meet Allison. I hope you won't mind modeling together this evening, and Thursday, too.\"\n\nAllison, wearing a pair of lavender ankle jeans and a white, cotton Jacquard top, extended her hand in welcome. I clasped her hand in return. \"Hi, Allison, I'm Eric. Pleased to meet you. Of course, I'd be delighted to model with you.\" \n\nI looked over to Bethany, \"I don't want to make assumptions. Will this be nude?\"\n\n\"Of course, Eric. That's the only way to teach figure drawing. Clothing is appropriate only in the theater, occasionally.\" Bethany smiled and continued. \"You've been solo all your times in my classes, but I assume you've modeled with a partner before?\"\n\n\"I have, many times in Northern California. I'm comfortable with it and have self-control.\" I tried to appear firm on that subject. \n\nBethany reached out and touched my arm. \"I have no doubt you'll behave properly tonight, Eric, don't be concerned in the least. We're here to capture the natural essence of the human form. You two must get changed. Class starts in ten minutes.\"\n\nI followed Allison out of the office, and we walked up the hallway to the studio. \"Have you modeled for Bethany before? I've not seen you before.\" \n\n\"Many, many times. I started before Bethany arrived, 15 years ago. I'm full-time throughout the Seattle area and live nearby, but I haven't worked here for a while. I think this was a last-minute decision on Bethany's part. Luckily, I had a cancellation just before she called. So here I am.\" We arrived at the studio.\n\nAllison looked in her mid-40s, a few years older than me and at least half a foot shorter than my 6'1\" height. She had a curvy but not plus-sized body; noticeable hips and bust but a thinner waist in between. A mass of curly red hair framed her pleasant face. I am ashamed to admit I looked forward to discovering whether her pubic patch matched. \n\n\"Do you mind sharing the changing room? I could use the restroom.\" I asked inside the studio.\n\n\"Don't be silly. The first time I modeled here, there wasn't a changing room, and I had to use the restroom. Once. It was unpleasant, so I started changing in the studio in front of everyone, and it didn't bother me at all. Now that the storage room is available for changing, I use it.\" Allison laughed at my suggestion. \"Amanda told me you're married; she saw it on the paperwork you filed when you started here. Your wife doesn't mind this?\" We walked into the changing room.\n\n\"Not at all. We met at college in California indirectly because of my modeling. It's the ploy I used to start our relationship, and we have a great relationship. She's always saying she doesn't care where I get hungry, as long as I come home for lunch. What about you?\"\n\n\"I've been married, but it didn't take. Guess I like to eat out too much. I do what I like and don't want anyone else interfering. I do have a daughter at grad school in Houston and spend time there if that counts.\" Allison started to unbutton her blouse. \n\nI took that as my cue and turned around to provide privacy. I removed my clothes and pulled my robe out of my gym bag. When I put my clothes in the bag, I realized Allison didn't have anything, not even a purse. I saw the cell phone outline in her back pocket, but nothing else. I wondered if she kept her robe here in the supply room and turned to see she didn't use a robe. She had already opened the door and walked into the studio, nude. All her hair colors matched.\n\nI followed her out and felt dumb for wearing a robe but would feel dumber taking it off. She walked to the model stand near the middle of the studio and sat on the front edge, waiting for the students to arrive. The confidence she displayed with her nudity was disarming. \n\nI sat next to her. \"I have to ask; do you always work without a robe?\"\n\n\"Absolutely. I'd be nude 24 hours a day if I could. If they don't like it, they don't have to call me. But they do call me, you see, so everything's good.\" She answered matter-of-factly. \"Don't you find that thing ridiculous?\"\n\n\"Well, yeah. I'm sure you've noticed different requirements for males. Until I've worked a year or two at most venues, they're strict about a couple of things, robes being one of them.\" I deliberately didn't mention the other strict rule for guys. I was afraid verbalizing the taboo would make it happen, especially around Allison.\n\n\"Yep, it's all bullshit. Guys do get hard. It happens, so get over it.\" She put her hand on my thigh and squeezed to emphasize her point. It took all my willpower and the recitation of baseball statistics to keep me from springing a full-on boner right then. \n\nFortunately, Bethany entered and addressed the class, \"Okay, everyone. We're privileged to have two wonderful models this evening, Allison and Eric. We've worked with Eric already this semester but not Allison. She's busy in Seattle and Houston and hasn't been available, but we're lucky to have her for our special sessions tonight and Thursday.\n\n\"As I promised all semester, we'll explore the drawing challenges of a couple. It's a complex enterprise from many perspectives. Allison and Eric have two widely variant physiques, not only in musculature, proportion, and shape but also in size and sex. You are all well-practiced working with an individual model's negative spaces and contrapposto. Still, those change radically with the introduction of a second model. It's more than doubly challenging to observe and accurately draw the physical reality of those differences with two people on the stand. Those are the least challenging aspects of drawing a couple.\n\n\"The most difficult problem is capturing the narrative relationship between our two models; what story do they tell together? As technically excellent as some may be, many models present themselves as statues, not living human beings. It's fine to learn from a statue, but great art interprets the story behind the form. Many of you spoke highly of Eric's sessions with us, and I can assure you Allison rises to the same standard. Tonight, we need to pay close attention to what their poses tell us about Allison and Eric's relationship. Our task as artists is to capture and communicate that in your work.\"\n\nI listened to Bethany extoll our virtues as models and had the hazy thought she'd nominate us for some sort of artistic peace prize. Still, I understood what she meant.\n\nBethany turned to us. \"We'll start with 40 minutes of five-minute gesture poses; I'll keep time. Please do try to tell the story of your relationship through your poses. I'm certain you'll find what we're looking for, and since you haven't worked together before, please feel free to whisper during the pose. First pose, please.\"\n\nI took my robe off, tossed it under the model stand, and we stepped up to the middle of the stage. We both held out our hands in what must be the standard first pose a couple does together. We face each other, toes almost touching, hold hands and lean back, finding a balance point where we're in equilibrium. Exciting shapes, all open to the artist's view, not too much touching, and a chance to get to understand the other person in a posing situation. It works best with people of roughly similar height, but we found a good balance point by each of us having our left legs extended back and bent at the knee to provide more support.\n\n\"A good start. I'll tell you when to change.\" Bethany announced.\n\nAllison whispered, \"Tell me, Eric, how long have you been shaving your package?\" She was refreshingly direct.\n\n\"On and off for fifteen years but consistently the past three. It felt sexy and different when I started, and I enjoyed the surprise when modeling. Not many males shaved back then, so it was sometimes a shock to artists and students. It's a hassle, though, and I didn't always do it.\"\n\n\"What changed three years ago?\"\n\nI didn't want to follow this line of questioning since it would eventually lead to an open display of my hard cock. Allison insistently arched her eyebrows, and I couldn't think of a good lie. \"I met the woman who became my wife during one of those squeaky-clean periods. She'd never met anyone who shaved, and long story short, she loved it. It was clear the benefits of being shaved far outweighed the hassle.\" Now that the subject was open, I could feel my cock's first hint of tumescence. It was not yet dangerously apparent, but the parking brake broke, and the car rolled downhill. \n\n\"Do you have any thoughts for our other poses?\" Allison asked softly.\n\n\"If you don't mind touching, we can do this pose, but to the side, our arms linked?\" \n\n\"Yeah, that's good. For the third, do you mind if I sit on your back while you're down on all fours?\" She asked.\n\n\"No, not at all, just sit either on my pelvis or shoulders, not right in the middle of my back.\" \n\nI tried looking only in her eyes or face but couldn't help looking down at her body every so often. It was a sight to behold. Her large breasts had a comfortable, slight sag but were still full and firm by any measure. If her hard nipples were an indication of something besides the air temperature in the studio, she enjoyed her work. She didn't shave any hair on her body. Fine red-blonde hair lightly tufted her underarms. Silky, long, flaming red hair framed her pussy and curled out and away from her labia. \n\n\"Do you like what you see, Eric?\" She'd caught me staring. \n\n\"I'm sorry, couldn't help myself. I'll try to avoid it.\" I turned red from embarrassment.\n\n\"Oh, honey, I'm glad you're looking but wish you'd display it more physically if you know what I mean. Bethany wants some narrative action, and you can't get more active than that.\" \n\nOf course, as soon as she spoke, my cock responded. \"Damn it, Allison, you're going to get your wish. The session might get cut short if I can't get it under control.\" \n\n\"Don't you worry about it, dear? I've worked with Bethany enough to know she'll follow my intuition. Your poses will be appropriate, stiff dick and all. Give them a show. It's what they want.\" \n\n\"I'll give it some thought.\" The timer rang.\n\n\"Next pose. Eric, more of that intensity at the end, please.\"\n\n\"Looks like you're right, Allison.\" We broke the pose and took a moment to stretch.\n\nWe moved into our second pose. It's like the first, except instead of leaning back, away from each other, we lean off to the left. We started off facing each other and slightly offset, the inside of my right foot touching Allison's right foot. We leaned to the left and maintained balance by interlinking our arms, bent at the elbow. \n\n\"I'd like to modify this if you don't mind,\" Allison said when I'd placed my foot next to hers. \n\nShe thrust her right leg forward, between and through my legs, pushing her pussy against my thigh and pulling my balls and cock against her hip. Next, she wrapped her right arm around my left hip, grabbed my ass, and used her left hand to guide my right arm into a similar position around her. The problem was negotiating her ample breasts. I threaded the needle by angling my arm above her right breast and under her left. She placed her left hand on her hip just above my arm, tilted her head back, and, smiling the most engaging smile possible, looked into my eyes. I followed her lead on the final flourishes to the pose.\n\n\"Oh my, that's gorgeous, a frozen moment from a ferocious tango,\" Bethany exclaimed and set the timer. \n\n\"I can see you have a lot to teach me, Allison, so I'll follow your lead.\"\n\n\"You're a quick learner, Eric. Don't worry. I'll keep it on the right side of too much. You can tell your wife everything.\" \n\nAllison gently rocked her pelvis back and forth, rubbing her pussy against my thigh. My cock pressed against her hip, and her movement brought friction on my cock. I can resist anything except temptation and was fully erect against Allison's hip. I set aside my concern and went with it. The pressure wasn't enough to come, but near the end of the pose, I started oozing over Allison's hip.\n\nThe timer rang again. \"Brilliant, absolutely wonderful. Exactly what I was hoping for, please continue.\"\n\n\"Down on all fours, if I remember correctly?\" I asked with a smile.\n\nAllison laughed. \"You are a fast learner.\"\n\nI lowered to my hands and knees, and Allison straddled my shoulders, leaned forward over my back, and rested on her elbows, her hands draped down over my ass cheeks. \n\n\"Very nice, let's begin.\" Bethany reset the timer.\n\nAllison's pubic hair rubbed against me, tickling my neck. Her weight rested on my shoulders, and if I tried to scratch, I'd rub her pussy. She may not have minded, but I wanted to maintain the fiction of decorum for my wife.\n\nLinda, my wife, and I modeled together back in California. She's a big girl, plus-sized, only two inches shorter than me, and never thought of modeling before we met. It took my encouragement and consistent, gentle persuasion to overcome her initial reluctance. She'd agree to model only as a couple and then only with me. W\n\nShe hadn't pursued it since moving to Washington a year ago.\n\nNow, with Allison's pussy tickling my neck, I wondered how I'd explain this to Linda. She's not a jealous woman, and my descriptions of modeling sessions with other partners were an aphrodisiac. None of those sessions took this direction. \n\nThoughts of Linda clanged to an end with the ring of the timer and Bethany's voice. \"Another beautiful pose. Five more, and we'll break and discuss the final two hours.\"\n\nAs Allison directed me into position for each new pose, the time quickly passed. Allison respected a hands-off, or cunt-off rather, limitation on the explicitness of the poses. It was an interesting if ordinary, session except for my constant hard-on and Allison's push toward explicitness. We posed as two people caressing each other in the throes of foreplay, staying short of actual penetration. Allison walked out of the studio nude at the end of the last pose. I assumed she was going to the restroom. \n\nShe soon returned and sat beside me on the model stand, telling me how boring most of her modeling assignments were and what her daughter was doing in Houston. \n\nBethany came over to us. \"Superb. A couple of those poses require an hour or more to capture their form and spirit adequately. Since you'll both be here Thursday, I suggest we explore four of these poses for a half-hour each. I'll pick the two most exciting ones for extended work on Thursday.\"\n\nI looked at Allison. \"It's fine with me. How about you?\"\n\n\"I'm ready. Let's get going.\" Allison swiveled to stand up and prepare.\n\nBethany had to catch up. \"Good. The first is Allison sitting on the stool with Eric standing. The next pose is Eric, lying on your back with Allison straddling you cowgirl style in simulated sex. The third pose has Eric on his back with Allison on her side, on bolsters, slightly above, and facing the opposite direction. The final pose is where you're both lying on your sides, facing the same direction with Eric behind, embracing Allison in front.\"\n\n\"They are all fine for me. Any would be good for an hour and a half Thursday.\" I said and looked over to Allison.\n\n\"None of them are difficult for me.\" Allison smiled at me.\n\n\"Let's get to work then.\"\n\nAllison set the stool in the center of the stage and sat down. I stood next to her, my right hip against her left shoulder. This time, instead of resting her left hand on my left hip as she did for the short pose, she reached up between my legs and wrapped it around my right leg with the back of her hand pushing against my balls. She bent her legs at the knees, curled them to her right side, and placed her right hand on top of her right thigh. Since this would be a long pose, everyone in the class moved for a frontal view. \n\nBethany started the timer at 25 minutes. The initial excitement with Allison during the beginning of the class kept my attention focused on her. A month ago, I modeled for this class and vaguely remembered them as an older group of students. They looked to be their mid-20s until mid-30s, primarily women, eight out of ten. I noticed a trend in the more advanced figure drawing classes, older students, and more women. \n\nI had draped my right hand on Allison's right shoulder near her neck and my left hand on my left hip, and we looked into each other's eyes. I began the pose with my soft cock tucked down and against Allison's left breast. She wasn't content to let the time run out peacefully and started moving her left hand, the one between my legs. At first, she squeezed, which was stressful enough, but then she rubbed her thumb under my balls and against the base of my cock behind my balls. \n\nMy response was predictable. Allison teasingly smiled at me, and my cock pushed, with increasing insistence, against her breast. I thought her breast would capture and contain my cock, but she deliberately moved her shoulder, and I popped out and up. My cock's steady rise stopped when it pressed against the underside of Allison's chin. It looked a few times like she was going to tilt her head, letting my cock free to bob up and down in front of her face, but my imploring eyes somehow induced restraint. \n\nI could see Allison directing her attention to herself. She angled her right hand closer to her pussy and started lightly rubbing her pussy lips. Eventually, she increased the tempo and moved her index finger over her clit. The time passed quickly, and fortunately, the timer rang to end the pose.\n\n\"I'm sorry, Eric, I got carried away.\" Allison apologized as we stretched. \n\n\"It's okay. I understand the class wants more erotic poses, but I'm not comfortable going any further than we already have. My wife is understanding but has her boundaries.\" \n\nBethany stopped circulating among the students to remind us of the next pose. \"You're doing terrific, and the students are responding to the challenges you're presenting. You're both showing tremendous intensity and admirable restraint. This next pose will be equally demanding, I'm sure.\"\n\nI put the stool on the floor and rolled onto my back in the middle of the stand. Allison stepped over my hips, straddling me, and looked down to prepare to lower to my waist. ",
        "\"It would be so much easier if we just fucked, Eric. How can we hide your cock otherwise?\" Allison asked as she kneeled over me before lowering to make contact.\n\nI looked over at the group as they moved and settled into their drawing positions. They were all arranged for views over my shoulders toward Allison frontally. \"I'd love to help you, Allison, but everyone's grouped up here,\" and I tilted my head back to where they were setting up. \"I can bend my right leg like this and keep my cock behind you.\"\n\nI reached for my cock with my left hand and her hip with my right, pushed my cock back, and pulled her cunt down onto my pubic bone. \"See, all snug and out of the way. No one needs to be the wiser. I'm sure you'll find some way to get me hard again. With your legs spread, my cock will rub against your ass, and maybe your asshole. If it's a problem, we can try something else.\"\n\n\"Oh god, I wish it were a problem. I love ass play.\"\n\n\"It's okay if you want to rub your cute clit on my pubic bone. I'll hold your breasts and squeeze your nipples to help you along if you'd like.\" \n\nShe leaned forward to support herself on her outstretched arms. \"I'd love that, Eric. Don't be surprised if I come and squirt while I do.\" \n\nI placed my hands on her breasts while Bethany scrutinized the pose. \"Beautiful composition, many triangular shaped negative spaces, and an intense, singularly focused narrative purpose. Let's begin drawing.\"\n\nAllison began slowly, gradually, rocking her pelvis back and forth, pinching her clit between our pubic arches. I started caressing her breasts and nipples, and she closed her eyes, lost in a personal reverie. As I knew it would, my cock got hard again. When Allison felt it rubbing against her puckered back hole, she moved her hips to push back against my cock and squeeze it between her ass and my leg.\n\n\"Can you lower your leg? I want a better angle to push on your cock against my asshole?\" I lowered it a fraction, waited, and when her tiny frown remained, I reduced it by the same fraction. That did the trick, and a smile reappeared. \n\nAs intense as all of this might seem, I was waiting out the time remaining on the pose. It was exciting but not overpowering. I could relax and enjoy the sensations. The class was feverishly drawing, translating their feelings into an image on paper, the essence of art. \n\nWe had another four minutes, and the feeling of Allison's rubbing built. I hoped this wouldn't be one of the poses Bethany selected for Thursday. I wouldn't be able to hold out an entire hour and a half without coming in front of the class, but maybe that's what she wanted. For today's version, though, they'd have to make do with Allison's orgasm, which started with a minute remaining on the pose. She kept contained, but it was apparent from her tensed muscles and tightly controlled quivering what was happening. True to her word, she squirted over my stomach. The timer rang as she calmed down, and Bethany came to the model stand.\n\nBethany was effusive. \"Stunning, Allison. I've been walking among the students, observing their work. Their preparatory sketching laid the groundwork for most of them to capture your expression at the climax of the pose. Brilliant work, and thank you for your contribution. Eric, I understand your situation and laud your efforts to support these poses within your framework. Thanks so much. Please take a well-deserved few minutes before the third pose.\" \n\nAllison laid down on my chest. I hugged her; the only thing I could do that seemed appropriate. My hard cock fell back against her pussy and ass, but she didn't say anything and soon slid off to my right.\n\n\"Thanks, Eric. That was perfect and released a lot of built-up tension and frustration from the last few weeks. I must say you do a superb job of shaving your pubes, absolutely no stubble down there, smooth as silk. Thanks again.\"\n\n\"I'm glad I could help, honestly,\" I said quietly and thought how unusual the past couple of hours have been. \n\nWe still had work to do and stirred from our pause to get the bolsters under the model stand. The bolster was a six-inch-thick block of firm upholstery foam that would raise Allison above me.\n\nWe placed a sheet over the bolster, and I laid down on my back again, with my left side against the bolster, a pillow under my head, and my left leg raised and bent at the knee, forming a triangle. Allison laid down on the bolster, on her left side, with her head resting on my raised left knee. She bent her left knee, so it stuck out over the edge of the bolster over my left shoulder, and I placed my left arm behind her knee and rested my hand on her right hip. \n\nShe put her left arm through the triangle formed by my bent left knee and, being Allison, put her hand down on my swollen cock and balls. It was pointless to object. She put her right hand on her right hip, almost touching mine. My right arm bent back, over my head, with my hand forming a headrest under the back of my head.\n\nBethany approached the end of the model stand next to my head. \"Are the hands in this pose okay, Eric?\"\n\n\"As long as Allison resists the urge to suck me off, I'm good,\" I said, loud enough for Allison to hear, smile and nod in agreement.\n\n\"Well then, this is a great penultimate pose. Let's begin.\" We took another half minute settling into something we could easily hold the full 25 minutes. \n\nAllison, being Allison, played with me, cupping my balls with her fingers and pressing the heel of her palm into the base of my cock. Then she stretched her fingers and curled them back, scratching the underside of my cock with her fingernails. My orgasmic trigger is unusual. I prefer a lot of pressure on the base of my cock to ejaculate. So far, I hadn't worried about coming with Allison, but she would soon find my sweet spot. I thought the best defense would be a potent offense.\n\nI couldn't reach her breasts, but I could move my left hand and touch her pussy. I would typically ask before touching a model's pussy. In fact, except for my wife, I'd never touched another model's pussy. Still, Allison was already massaging my groin. I felt justified in moving my left hand to slide my thumb over the protruding tuft of red pubic hair and down across the length of her vulva. I carefully watched her face for any adverse reaction. She looked up from my cock, started a broad smile, closed her eyes, tilted her head back, and rocked her hips back for easier access to her cunt. I pushed my thumb into her pussy, and she stopped playing with my cock.\n\nI'd been watching Allison's face for reactions and didn't notice she had moved her hand again and started rubbing her clit with her index finger. It was five minutes in, and we'd found the final details of our pose. The primary focus was Allison's pussy; I massaged the inside with my thumb, and she stroked her clit. She still rubbed the underside of my cock and massaged my balls, but less attentively as time passed and her excitement increased. \n\nAt the 20-minute mark, Allison decided on a final touch and closed her fist around my balls and pulled them back toward her. This action drew the skin of my cock taut and raised it from a flopped back position on my stomach to standing vertical. Pre-cum oozed in a thick, glistening web that pooled below my navel and streamed down my side and onto the model stand. It was a race to the finish.\n\nI felt Allison's pussy tighten around my thumb with two minutes remaining. She stopped rubbing her clit and applied steady pressure as she began her second orgasm of the evening. This time she didn't try to maintain the pose but straightened her legs and surrendered her body to the more intense convulsions. There was officially a minute still on the timer, but we'd already finished.\n\nBethany once again sat on the model stand, closer to Allison's side. \"I thought your last pose was incredible, but you've outdone yourself. Superb, stunning. Well done, both of you. Another short break, and we'll start on the last pose.\"\n\nAllison looked spent as we slowly sat up facing each other and rested. My cock had deflated, and I surveyed the pre-cum smeared over me. \n\n\"I wish they had a shower here.\" \n\n\"I'll gladly lick you clean.\" Allison grinned as she tempted me. \n\n\"I appreciate the offer, but I'll pass. This time.\"\n\nWe sat silently for a few more minutes. I heard a quiet ring tone coming from the changing room, and Allison perked up with a look of genuine concern. She quickly rose and dashed off to the changing room door. After a couple of minutes of hushed conversation, she returned looking distressed.\n\n\"I'm so sorry. My phone vibrates except for calls from my daughter. She has my modeling schedule and would only call in an emergency. She's been in an auto accident. It's not critical, but she's broken her right arm and leg. She was a passenger when another car ran a red light, hitting her side of the car. She's at the Houston medical center, and I have to go.\" Allison looked more collected than I would have under the circumstances. \n\nBethany hugged Allison. \"I'm so sorry. What can I do to help?\" \n\n\"I appreciate it, but I don't think anything. I live a few blocks away and walk here. I'll go home quickly and get an Uber to Sea-Tac. I booked the 11:30 red-eye to Houston, so I'll leave now. Melissa is conscious and resting, but they're keeping her in the hospital for two days of observation. She'll need help and support after discharge. I'm sorry, but I'll have to cancel Thursday.\" Allison was getting more distressed as she talked.\n\nBethany spoke up. \"Oh honey, don't think twice. We'll figure something out. Just get going. Give my love to Melissa.\"\n\nIt was my turn. \"I'm parked right outside; I'll be happy to give you a ride home to save a few minutes.\"\n\nAllison thought for a moment. \"Yeah, that would be good. I'm getting overwhelmed, so yeah, a ride home.\"\n\nBethany urged us on. \"Get going, get dressed.\"\n\nWe ran to the changing room and dressed in record time. \"Would you like a ride to the airport? I live in Federal Way. It's not a bother at all.\"\n\n\"Oh, thanks, Eric, but I have a good friend who's an Uber driver, and I already called her. I just need to get home and packed. Thanks so much for the offer, though.\"\n\nBethany met us by the studio door and gave Allison another hug. \"You have my number, and if there's anything I can do, please let me know. Call when you get a chance.\"\n\nBethany turned to me. \"You've been so generous tonight, but I have another favor to ask. I've tried booking everyone I know, and Allison was the only model available on this short notice. Do you know anyone who might be able to model Thursday for normal poses?\"\n\nI thought of a possibility. \"I do but have no idea if she's available. I'll get her number to Amanda in the morning, and you can call her.\" \n\n\"Thanks, Eric. Now, get going.\"\n\nWe were in the car in a flash. I had to force myself to slow down for the short drive. \n\n\"Thanks so much for this and the great time modeling with you. I'm sorry I was such a tease. You have to keep this from Bethany, but this time every other year, she has a couple's session for her advanced drawing class.\"\n\n\"Why?\"\n\n\"Come on, Eric. What day is Thursday? Don't tell me you're one of those clueless guys. It's Valentine's Day, and Bethany wants romantic erotic poses. It's a tradition, and her students demand it. She contacts me because I'll do erotic posing; not many will in a university studio setting.\"\n\n\"Things are making more sense. I haven't been here long enough to learn those traditions.\"\n\n\"Not only that, since you're married, she had no idea if you would participate or be interested. In the past, a few models quit, indignant because she asked. She didn't want to risk losing you for your everyday work and came up with this plan to see if I could coax you along. She loves the foreplay aspect and would have loved oral, but she's always drawn the line at actual sex. Simulated sex is okay, but not actual. My suggestion of fucking was purely my teasing. Don't blame Bethany.\"\n\nShe pointed out the entrance to her apartment complex, and her Uber friend arrived simultaneously. \"Thanks for telling me. It was exceptional modeling with you. I hope all goes well with Melissa, and I'm sure Bethany will convey any updates from you. I hope we can catch up when you return. You'd love to meet my wife. She's a model too and might be interested in modeling with you.\" \n\n\"You're full of surprises, Eric, and your wife being a model opens many interesting possibilities. We'll talk when I get back.\" A quick peck on my cheek, and she was gone into the apartment complex, stopping first to talk to her friend. I sat for a few moments, collecting my thoughts. \n\nI had a half an hour drive home. I'd tell Linda everything; it's easier to keep stories straight when I'm truthful, and describing tonight's session's intimate details would lead to fantastic sex. When we moved to Washington, Linda needed to devote her time to grad school. I slowly sought solo modeling work, and it's taken most of the year to get established. Linda felt more comfortable with her academic career, and I'd started looking for couple's assignments for the fall. \n\nI exited I-5 in Federal Way and looped around the frontage road to our apartment complex. I opened the door to our apartment and saw Linda, nude, sitting on the couch, watching TV. \"Hi, beautiful, we had to end early.\"\n\nShe looked at me, clicked the remote to turn off the TV, and patted the sofa next to her. \"Strip, sit down, and tell me all about it.\"\n\nI'd barely started before Linda leaned over, wrapped her lips around my cock, and cupped my balls in her hand. A few minutes more and she moved to kneel on the couch with her knees against my thigh and bent down to continue sucking. Her cunt and asshole were spread wide. I draped my arm over her back and ass and rubbed her clit with my middle finger with an occasional foray inside her pussy.\n\nWhen I got to the part where Allison straddled me and pressed my cock between her asshole and my leg, Linda shuddered and raised her head a moment. \"Don't stop talking, but you know where I need your finger.\"\n\n\"Your wish is my command.\" I continued with the description and moved my wet fingers out of her cunt and over her asshole. I curled the tip of my finger and pressed against her tight asshole until she relaxed, opened, and my finger entered her puckered back door. \n\nConcentrating on my train of thought became more difficult. Still, when I filled Linda's asshole with my finger and stopped talking, she released my cock again. \"Please, keep talking. I need another finger in there, too.\"\n\nI slid my index finger up her bottom alongside my middle finger and rotated them in the way Linda loves. I had more difficulty describing the sensations of the last pose with Allison when Linda sat up. \"I need your cock in my ass. Let's get to bed.\"\n\nWe dashed to the bedroom, my hard cock waggling in front of me. We've learned each other's needs well and don't have to communicate verbally to satisfy our flashes of overpowering lust. Linda loves the Magic Wand vibrator and keeps one plugged in on her nightstand. She jumped on the bed in her favorite position, face down, spread eagle, and the wand underneath. She pushed it against her clit with both hands and spread her legs, exposing her gorgeous, inviting ass. I kneeled behind and bent over to suck her asshole, probing it with my tongue, then straightened up to angle my cock toward her crotch. \n\nI pushed a few hard thrusts into her cunt and reached over to grab the Kama Sutra lube off my nightstand. I pulled my cock out of Linda's slick pussy and messily slathered lube over it and her asshole, tossing the lube to the floor. I leaned forward on one arm and, holding my cock with my other hand, pressed the tip against her beautiful, brown starburst and gently pushed. She tilted her hips to provide a straight shot into her ass, and I felt her sphincter relax to accept my cockhead. When the plumb of my glans passed into her rectum, I stopped my thrust to let her anus accommodate. Linda had other ideas. \"Fuck my ass hard, Eric. I've been so naughty I need a spanking too.\" \n\nI pushed up with both arms, extended my legs back, lifted on my toes, and thrust my total weight into Linda's ass. She closed her legs under me and held them tightly together. I clamped my legs outside of hers, pushing her thighs more tightly together. I balanced on my left arm in a modified upward-stretching-dog yoga pose and pulled out enough to expose her right ass cheek, and I slapped her butt with my right hand. \n\nLinda's bucking, orgasmic contractions started. I slammed back into her as hard as I could. Clenching every muscle in my body, I exploded into my beautiful bride's ass. I collapsed in a gasping, sweaty mass on her back and felt the final quivers of her orgasm wind their way through her body. \n\nWe were soon on our sides, facing each other, cuddling, kissing, and stroking. \"I think we need a shower, and you have to finish your story. It sounds like Allison likes to do the type of modeling we like, but you still haven't told me why you're home early.\" \n\nI continued describing the modeling session while we cleaned up and got back in bed. \"So, we were taking a break before the final pose, and Allison's cell phone rang. Her daughter, Melissa, was in an accident in Houston. Allison, of course, had to get there as quickly as possible and canceled her repeat on Thursday. Allison had walked to campus, and I offered to drive her home, but first Bethany asked if I knew anyone who could fill in on such short notice for normal poses.\"\n\nLinda chuckled. \"I can read your mind, you sneaky little bastard. You want me to fill in for Allison the day after tomorrow. It would be fine, but I hate the regular couple's modeling routine. All because of that prick in Fairfield telling us he wouldn't have us back because his jackass male students thought I was too fat to model, and you had to be gay to get hard with me.\"\n\n\"That was a low point, but we worked out how to make it fun again. Anyway, on the ride to Allison's apartment, she told me these two sessions were a treat from Bethany to her advanced class. Every other year she arranges a pair of romantic, erotic couple's drawing sessions.\"\n\n\"For Valentine's Day. That's so sweet. Bethany must be a real romantic at heart.\"\n\n\"I didn't even think of Valentine's Day, Allison had to tell me. Guys are stupid, aren't we?\"\n\n\"What can I say, Eric? When you're right, you're right. But if the session was supposed to be erotic, we could do what we wanted. Bethany asked for normal poses, but she couldn't be upset if we went further. Oh my god, Eric, we could fuck in front of them.\"\n\n\"Allison had to hurry, and we didn't have more time to talk, but she said Bethany always drew the line to exclude fucking.\"\n\n\"Bethany sprang this whole thing on you tonight so we can spring something else on her, Thursday.\" She reached down to massage my balls. \"Did you tell Bethany the possible model was your wife?\"\n\n\"No, I said I knew someone who might be available. Why?\"\n\n\"I'll agree to the normal routine and pretend we don't know each other and make it seem more realistic. On the day, we'll do our explicit posing. We'll fuck this time, in front of a class who won't be expecting it but can't complain because it's what they wanted in the first place.\"\n\n\"God, you're nasty. Very nasty. I love it.\"\n\n\"How many students are in the class?\"\n\n\"Tonight, eight women and two men, I think all grad students.\"\n\n\"I want to get this clear in my head. You'll get my number to Bethany; she'll call me to arrange a strictly normal couple's session for Thursday. We'll show up and fuck our brains out on the model stand in front of total strangers.\"\n\n\"Yeah, that's a good plan.\"\n\nShe slapped my ass hard. \"My god, you're making me all hot again. What story do I give Bethany?\"",
        "\"I'm not sure, but something vague. We modeled once at the community college, and you wore underwear. You know how community colleges are. You've modeled less than a year and don't have much experience but want more. You can fill in whatever you want.\"\n\n\"Okay, this sounds exciting. She'll call tomorrow to set it up, so I'll have time to think of something interesting. It's late, but I'm getting charged up. Want another go?\" She lifted the sheet and started kissing her way down my chest. \n\n\"I can't deny you anything.\" \n\nI called Amanda at the art department the following day and left Linda's number. I hadn't heard from anyone when I arrived home later in the afternoon.\n\n\"Hi, I'm home. Did you hear from Bethany?\" I shouted into the either.\n\n\"No need to shout.\" Linda leaned backward from behind the kitchen wall, exposing her nude left breast as she talked. \"It's all set. As you can see, I'm practicing.\"\n\nI walked up behind her, pushed up under her breasts with one arm, and reached for her pussy. \"Do tell.\"\n\n\"Not unless you're practicing too.\" She said with a flirty, innocent smile.\n\nSuitably encouraged, I striped fast.\n\nWe went to the sofa to play and talk. \"I was reading undergrad term papers when she called. She'd gotten my number from you, told me she had an emergency cancellation for a session tomorrow evening for the second day of a couple's session. She asked if I was available and what my experience and requirements were.\"\n\n\"Only one, lots of lube.\" \n\n\"Oh, shut up and let me tell the story. I told Bethany I'm 23, making me four years younger, and had modeled for ten months, clothed and nude. I modeled one time with a man, you, at the community college and wore a two-piece bathing suit. I told her I'm available and would do it nude provided she understood I'm inexperienced with a partner.\"\n\n\"We'll have to forget all we know about each other.\"\n\n\"Once again, shut up and let me tell the story. Bethany said the Thursday session was supposed to be the second of two, expanding on more explicitly sensuous poses than usual in a couple's session. She wanted to use some of the same poses from the first session but hold them longer so the class could complete their drawing assignments. She hoped I would mimic the style of the poses but without the contact. I told her you were a nice guy who was helpful and respectful, and it would be exciting to learn new things with you.\"\n\nMy cock stood at full attention. \"My God, Linda, that's so hot. You made it sound like you're a wise virgin wanting to learn the ways of the erotic modeling world.\"\n\nShe bent over to take my cock into her mouth, cup my balls, and start massaging them in the way I love so much. She abruptly stopped and sat up. \"And like the good, tight virgin I am, I have to save myself for tomorrow night. You pumped so much cum into me last night I needed a maxi pad this morning to keep from soaking my pants. You need to save yourself too and reload.\"\n\nShe then stood up and went back into the kitchen.\n\nI followed. \"You have a good point there, but I won't be able to wait any longer, though. Have you thought of any poses you'd like to do?\"\n\nLinda smiled her best coquettish smile. \"Bethany wants to follow the original plan from last night but tamer and within my comfort level. I'd be thrilled to go along with it. You'll get to have fantasies of fucking Allison and a virgin at the same time.\"\n\n\"Last night, you were nasty, and doubly so today.\" I shook my head in wonderment, and my phone rang. \"It's Amanda from the university. Maybe the whole thing's been called off.\"\n\nI slid my finger up to answer. \"Hello, Amanda. What can I do for you?\"\n\n\"Wait for Bethany. She doesn't have your phone number. I'll put her through.\"\n\nAfter a click and a pause, Bethany came on the line. \"Hello, Eric.\"\n\n\"Hi, Bethany, how may I help?\" \n\n\"I called Linda. She's available and willing to model tomorrow. She's younger than my students and very inexperienced. I tip-toed around the type of posing I'd like to do, but she said she'd like to learn. I thought we'd modify some of the poses you and Allison did last night with more distance between you two, but I want to keep the form. We'll start with a few gesture warm-ups I'll let her choose. Hopefully, she'll feel safer with her poses, and we can see what she's comfortable with before committing to the other poses. We won't have the intense narrative as with you and Allison, but it's the best we can hope for.\"\n\n\"It will be a challenge. I'll be on my best behavior and follow your lead. Thanks for calling. See you tomorrow.\"\n\n\"Thanks again, Eric. Goodbye.\" \n\nI looked at Linda. \"We're all set. We'll start with gesture warm-ups of your creation, so Bethany can see what you're comfortable with, then she'll describe her poses. I know which ones they'll be from those I told you above last night, and rather than make them less explicit, we'll make them more. Are you sure you're ready for this?\"\n\n\"Come over here and feel my cunt, she'll tell you. But don't play with it too hard. I'm a virgin, you know. I've got to finish making dinner, so go away. Don't touch yourself, no cheating.\"\n\nIt was difficult not playing with myself. I desperately wanted to come, but I shared that problem with Linda, and we suffered together. \n\nThankfully, the next day passed quickly. Our delivery driver called in sick, and I had to handle his deliveries, which made the day fly by. I got lost and thought it would take hours to find the place, but everything got back on track, and I made it home earlier than usual.\n\nI opened the door to the sound of Linda's voice. \"Sit down at the kitchen table, honey. I'll show you my new look.\" She must have been out of sight in the bedroom and heard me open the door. \n\nI followed her instructions and was shocked when she stepped into the front room from the hallway across from the front door. She'd done herself up as a milder Harley Quinn. She'd done her chestnut hair in the double, side pigtail style and wore a white button-up, short-sleeved blouse, no bra, a brown and yellow plaid, pleated, short skirt, black fitflop ballet pumps, and white, calf-high stockings. She looked the 23 years she told Bethany and maybe a couple of years younger. \n\nShe performed a quick pirouette which raised her skirt to reveal no knickers. \"You like?\"\n\nOnce my shock subsided, and speech returned, I joked, \"I've got to put some ice in my underwear. You're so hot I'm going to catch fire.\" \n\n\"It's going to be a lot of work tonight, so I ordered pizza delivery. It should be here any minute.\"\n\n\"We need to get there early. If you want to be official, there's paperwork to fill out with Amanda. I thought I'd drop you off a half block from campus so no one will see us together before we meet in the studio.\" On cue, the doorbell rang.\n\n\"I'll get it, honey; you stay put.\" \n\nThe open front door blocked my view of the porch, and all I could see was Linda's back as the delivery guy said the amount. \"Wait a minute, let me get the card from my purse.\" \n\nShe walked diagonally away from me, across the front room to the hallway door. She'd put her purse on top of a plastic storage box next to the hallway entrance, nearly on the floor. When she bent over, she kept her legs straight, and her skirt rode up her ass, completely exposing her pussy and asshole. Rummaging to find her card, she finally straightened up and turned back to the door. She'd unbuttoned her blouse down to her navel, and when she exaggerated the sway of her hips, first one, then the other of her nipples peeked out as she walked back to the door.\n\nI heard a few more moments of muffled talk followed by, \"Thank you and goodbye.\" She stepped back, closed the door, and, holding the pizza, turned toward me.\n\n\"Oh my god. That was so exciting.\" She came back to the table, put the pizza down, and fluttered her hands in front of her face in a half-mock attempt of fanning to cool down. \"I wasn't sure I could follow through, but I set it up so that once I opened the door, I couldn't back out.\" \n\n\"You've outdone yourself, Linda. I could cancel tonight and stay here to amuse ourselves.\"\n\n\"Don't you dare, Eric? I haven't had this much excitement in a long time. I think of it as your unintended Valentine's Day present. I needed to see if I could pull this off. There'll be only two guys at class tonight, and I wanted to make sure they'd like this.\"\n\n\"Sit down and eat something. Bethany will want to meet you in her office to talk and might take you to the studio and show you around, too. I printed a map of campus, so you'll know where to go.\" I gave her the paper and pointed out the office and studios. \n\n\"I think we've got all of this covered, Eric. Whatever happens, I love you so much it almost hurts. The anticipation is overwhelming, and I hope I'm able to make you fill me with your cum again tonight.\"\n\nWe quickly ate the pizza and drove to the campus. We didn't talk much during the drive, contemplating how the evening would unfold. I coasted to a stop around the corner from the campus entrance nearest the art department. Linda opened the door and got out of the car. She had her little wallet in her hand.\n\nSomething was missing. \"Where's your robe?\"\n\n\"Oops. I'm taking a cue from Allison.\" She held up her wallet. \"I brought my driver's license and social for the paperwork. Otherwise, I want to be naked. See you soon.\" \n\nShe swung the door shut and walked toward campus. I waited five minutes, lightly tapped the gas pedal, and headed to the parking lot. I grabbed my bag from the back seat and took my time walking to the art building.\n\nAmanda was alone in her office, and she glanced up with a sterner look than usual.\n\n\"Eric, Eric, Eric. You're in such trouble now.\" \n\nPanicked, I asked, \"What did I do? You've always said I'm never in trouble here. What happened?\"\n\n\"The new model, Linda, came in a few minutes ago. It's good she had her IDs for her paperwork to verify her age. She's young, inexperienced, and yet precociously sexual. I understand you have modeling rules because of your wife, but this girl, Linda, could get you in trouble tonight.\"\n\nI turned beet red, trying to think of something to say that wouldn't give it all away and let me maintain some self-respect at staying in control.\n\nShe broke into a huge grin, reached up, and put her hand on my arm. \"Calm down, Eric, I'm teasing you. You've worked with Linda before and kept your commitments to your wife while modeling here, and I respect you for it.\"\n\n\"Thanks, Amanda. You had me worried for a minute there.\"\n\n\"Linda's talking with Bethany. You're to meet them in the studio. I hope you and Harley, I mean Linda, have fun. Break a leg.\" She waved her hands again and shooed me out of the door.\n\nThe door to the studio was propped open, but neither Linda nor Bethany had arrived. Students were coming in and setting up. Most smiled and acknowledged my presence. Several came up and said thanks for the exciting poses on Tuesday. I couldn't concentrate enough to manage small talk and hoped I didn't come across as too aloof. They arrived; Linda followed by Bethany.\n\n\"Hello Bethany, have you heard from Allison?\"\n\n\"A couple of hours ago, and Melissa's fine, except for the broken bones. She was released this morning. Allison got the university to help get her through the rest of the semester. As you know, when Allison sets her mind to something, it happens.\" Bethany paused, \"Eric, this is Linda. You worked together once before.\" \n\n\"Hello, Linda. You seem different than I remember. It has been a few months, though.\" I held out my hand.\n\nShe held my hand in both of hers. \"I've tried to grow up and experience different things.\" \n\nBethany made of point to having my attention before she spoke. \"Linda hasn't modeled nude with a partner but wants to learn as much as possible tonight. We'll start with six five-minute gesture poses I'd like Linda to initiate to see her approach and comfort level. She knows you're a capable and considerate model who understands the narrative structure I want for these poses. You'll also do whatever she requests to help her learn.\"\n\n\"Thanks for your confidence, Bethany.\" She dressed more casually tonight, in a navy tie-dye, jersey pintuck dress. \n\nI switched my focus back to Linda. \"If I can help to speed your learning process, I'll do my best to accommodate.\"\n\n\"You were very kind at community, and Bethany's said wonderful things about you. I want this to be a great session and will do anything, anything at all, to learn.\" Linda laid it on thick.\n\n\"I explained what we were trying to accomplish with the poses you and Allison did on Tuesday, and we would like to work on details of similar poses. After seeing how this first part goes, we'll try tamer, longer versions of Tuesday's poses. Neither of you should do anything if you feel uncomfortable. You are completely free to break the pose at any time and voice your concerns. Is that clear?\"\n\nLinda and I nodded our understanding in unison.\n\n\"Excellent.\" Bethany looked at the clock. \"A few minutes until 7:00. Eric, please show Linda the dressing room.\" She pointed to the changing room door. \n\nI asked innocently, \"Do you want privacy to change, Linda?\"\n\n\"We'll see each other soon enough, so what's the point?\" Linda replied and walked to the changing room door with me following.\n\n\"What do you think so far?\" I asked as soon as I closed the door.\n\n\"She tried to be adult and delicate concerning erotic poses, and I tried to be precocious. I think it served both our ends. She wants the more explicit poses but is afraid of offending me and having me raise hell and cause trouble. This is going to be great.\" Linda said before unbuttoning her blouse.\n\n\"We have six poses of your choosing. What do you want to do?\" \n\n\"Start with our old standard and go from there. I'll make poses like the ones you described on Tuesday. Hopefully, she'll be comfortable giving us those poses, and we'll make them completely our own.\"\n\n\"As always, an excellent plan.\"\n\nShe'd finished stripping off and wasn't going to wait around for old, slow me. \"I'm looking forward to this. I'm fucking somebody up on that stage tonight.\" She stepped over to push her tongue deep into my mouth. \"I hope it's you. See you soon.\"\n\nShe opened the door, stepped through, and closed it behind. I quickly finished with my socks and pants, stuffed everything into my bag, put on my robe, and joined Linda in the studio.\n\nShe was already on the model stand doing her usual 'innocent' routine of standing near the platform's edge and bending over to spread herself. She went around getting a stool here, a bolster there, and arranging them for our use. Whenever she stood, her legs were at least as far apart as her shoulders. With her pussy lips shaved up to the top of her clit, it was easier to see her cunt than when Allison walked around the stage. Make-up and attitude changed Linda to look younger, but her body was the sexy, completely full-grown woman I married.\n\nBethany met me with a glance asking, 'Everything okay?' I smiled and nodded yes, time to begin. \"As you all know, Allison had to travel to Houston to be with her daughter. Melissa is doing very well, and we'll have Allison's superb modeling when she returns after her daughter's recovery. We're lucky to have Linda available on such short notice. She modeled solo the past year, and we appreciate her help and will be supportive however we can. We'll start with six five-minute gesture poses. I'll keep time.\"\n\nI took my robe off and dropped it near the corner of the stand. Linda stood facing me, looked flustered, and asked, \"It's okay to touch, isn't it?\" She'd maneuvered us into a position where she could ask Bethany and me simultaneously.\n\n\"Yes, of course, Linda. Guide Eric, however, you wish.\" Bethany answered.\n\nLinda looked me up and down, thrust her right hand between my thighs, and pushed against my right leg, saying, \"Please spread your legs apart.\" \n\nShe acted as someone awkwardly trying to have another person change position but could not verbalize it. In frustration, she grabbed the limb and moved it. It was an enchanting combination of innocence and unintended eroticism. Sliding her hand between my legs, she ended up catching my limp cock and balls and squeezed them against my thigh as she pushed. \"Oh, I'm so sorry. I didn't mean to..., to be..., to be inappropriate.\" \n\nIn her haste and embarrassment, she pulled her hand back, then reinserted it on the other side of my cock and balls to push my leg. It was a skillful attempt to appear more experienced than she was and keep moving forward. I moved my right leg farther to the right until she let up on the pressure and pulled her hand back. \n\nShe looked down at my cock and, seemingly without thinking, reached out and patted it. \"I hope I didn't hurt you.\" \n\nI wasn't hurt, but my blood flow was redirected, which I suspect was her real purpose. She stood facing me. \"Use your left hand to hold your right wrist like this,\" she showed me using her hands, \"And with your right hand, hold my left wrist while I do the same with you.\" \n\nShe stood so close my cock pushed against her bush, and we leaned back to make space for the box formed from our interlocking hands. I leaned back, and she stepped between my spread legs with both of her legs and kept her balance by adjusting our arms. \n\nIt wasn't a great pose, but not wrong either, an attempt at something different and almost succeeding. Linda's real goal was to get us physically touching in a way that looked comic overall but was sexual in detail. She succeeded brilliantly. My legs were wide apart, and Linda squeezed her's tightly together and a foot length behind me. We weren't leaning back as much as our usual, more open initial pose, but enough, so my balls rested on her bush and my cock on her belly. The way she arranged our hands allowed us to bend our elbows to keep closer together, and her ample breasts pushed against my right hand. \n\nLinda turned to Bethany, \"Is this a good start?\"\n\nMy cock was beyond fulsome on its way to fully erect and pushed into Linda's belly, and Bethany noticed it. \"That's an interesting pose, Linda. As long as you're comfortable, I'll start time.\"\n\nLinda looked into my eyes, tilted her head, and gave me a demure smile while subtly mouthing, \"I love you.\" Whenever she says that while we're posing, I'm unable to respond in any way other than with a fully hard cock. Linda alternately flexed then relaxed her thighs, pushing against my balls with each cycle. We were 30 seconds into the pose, and my cock thrust straight up between us, throbbing to my heartbeat and spewing pre-cum like a Hawaiian lava flow. \n\nI'm not sure how I made it through the five minutes without coming, but my suffering ended when Bethany said, \"Very good, very intense, but time for a new pose.\"\n\nWe stepped apart. \"Down on all fours, facing that way.\" Linda pointed to her left. \n\nThe model stand in the middle of the studio gives some students a straight-on view of my rear-end. Even straight female artists accept a female model's spread ass cheeks. Still, they don't often appreciate a male in a similar pose. Linda solved this problem by straddling my hips, facing the same direction, and sitting directly above my ass, offering a view of her ass. \n\nShe bent forward, placed the weight of her torso on her elbows and forearms, locking her fingers together and resting them over the back of my head. Her butt was off-center, so her pussy was directly against the raised mass of my glute. She exaggerated the bend of her hips in the style of a jockey riding a horse, getting the maximum pressure against my ass. She pushed her breasts forward between her arms. I was slightly exposed back there, but she was stretched wide. \n\n\"How's this?\"\n\n\"Fascinating, Linda. Let's begin.\"",
        "Linda wasted no time and started grinding her clit into my ass. I responded by tightening and releasing my glutes to push back. She'd climaxed on more than one occasion during similar poses, but with more time than today. I noticed Bethany walking around the room, providing guidance. Time extended well beyond the previously announced five minutes.\n\nI don't think Linda would have lasted much longer. I could feel her trembling from the effort, and we were both slippery with sweat. When she stood up, her nipples resembled marbles, and a pink blush of excitement extended from her face, down her neck, and across her breasts.\n\nBethany stood by the stand again. \"Excellent intensity. Linda. Thank you for the interesting poses. Ready for the next one?\"\n\n\"I am, and it will be something more provocative. I see the trapeze above the stage. I'd like to use it to support my arms over my head.\"\n\n\"By all means. Eric, two bolts take up the slack in the chains holding it to the ceiling. You can reach and loosen them to lower it for Linda. Reinsert the bolts to fix the height.\"\n\nI'd used the trapeze a couple of times solo for the same purpose and knew how it worked. Linda squatted on her knees, her ass resting on her heels, and reached up to hold the trapeze. \"Eric, please tighten it to this height.\" I replaced the bolts, and she tested their strength. \n\nShe aligned herself under the trapeze with her legs apart. \"Eric, please lie down on your back between my legs with your head there and your hips here.\" She pointed in front of my head and between her legs for my hips.\n\nI knew what she was going for, the cowgirl pose Allison used for simulated sex. However, Linda would use the trapeze to support her torso rather than leaning forward on her arms. My cock was fully erect, and I could tell from her aroused nipples and the lingering blush of her face and chest she wanted my cock inside her pussy. I felt she would try to fuck. \n\nBethany watched me move into position under Linda. \"I see what you're going for, Linda. It will be like one of Allison's poses on Tuesday. Okay with you, Eric?\"\n\n\"If it's like Tuesday, I'm good.\"\n\n\"I'll trust you two to work it out.\"\n\nI was in place and raised both knees to provide a hiding place for my cock. Linda adjusted her feet, bent down to her knees, and readjusted her position to align her calves beside my body. Flexing her hips, she lowered to all fours. Her breasts were hanging against my face, and I quickly bit one of her nipples. I felt a slight tremor from her legs against my side. She reached up for the trapeze and lifted her chest from my face, and lowered her ass against my legs. \n\n\"I'm going to get this out of the way, behind you.\" I pushed my cock back between my legs and nodded that she could lower to my stomach. \n\nShe wriggled around, trying to find the correct geometry, and said, \"I'm sorry, Eric, that's just not right. With your legs bent, it's uncomfortable and doesn't feel natural. It would be best if you lower your legs all the way. Is that okay, Bethany?\"\n\nBethany moved to look at the pose from the side and back. \"I think she's right, Eric. Can you lower your legs?\"\n\nI smiled and nodded while lowering my legs. Linda pulled herself up to allow room for my cock to spring up and noisily slap against my stomach. Before anyone could say something, Linda settled back down with her pussy lips sliding on my cock. She arched her back, prominently pushed her breasts forward, wiggled her hips a few times, adjusted her legs, and announced, \"That's just right.\" \n\nI was still looking at Bethany, who appeared startled by the sudden change in position. She examined the pose from behind, looking closely at Linda's ass and my balls and the front, looking at the head of my cock sticking out from beneath Linda's bush. \"Linda, you've outdone yourself. An excellent pose with tremendous intensity. If I may be allowed one suggestion, and only if you agree, could Eric cradle your breasts? Again, only if you are completely comfortable.\"\n\nI could feel the heat and moisture radiating from Linda's cunt. She leaned toward Bethany. \"I'd like Eric's caress, but you can see my nipples are hard and aroused. I'm embarrassed to say this because I want to be professional with my modeling. Still, I may have an orgasm if Eric touches me in that way.\" \n\nBethany placed her hand on Linda's shoulder. \"Thank you for your confidence and for being open and honest with me. Feel free to experience an orgasm during our session. We would be honored to capture it artistically. It's the epitome of what we wish to accomplish tonight. I'm so glad you found your way here. Eric, please complete the pose.\" Bethany kept her gaze on Linda's tits.\n\nI raised my hands to the underside of Linda's breasts and gently pushed up until they filled the palms of both hands. \"May I squeeze your nipples with my fingers?\"\n\nLinda made a final adjustment on the trapeze, tilted her head back, closed her eyes, and nodded yes. I curled my index fingers into a hook above her nipples, around the areola. From underneath, I pushed my thumbs up, squeezing her nipples firmly into the crook of my fingers. \n\nI knew Linda's response and concentrated instead on Bethany's reaction. Her sharp inhalation and the flush of redness across her face told me we had nothing to worry about for the rest of the night. \"Wonderful, Linda. Enjoy.\" Bethany backed away and resumed her teaching duties. \n\nLinda began gently rocking her pelvis front to back, sliding her clit along my cock. I could tell she knew we had a long session to fill and didn't want to get into wild abandon territory too soon, but I also knew she would come during this pose. I could have tilted my pelvis and accidentally let my cock slip into Linda's cunt. I knew, though, we wanted our actual first fuck here to be a deliberate, open action, taken after we had explored and pushed other boundaries. \n\nI tried to match my rhythmic thrusts and nipple pinches to Linda's crescendo. I could send her over the edge with various tiny, personal touches or probes. I would have revealed a previous intimacy and destroyed the suspension of disbelief we tried to maintain. \n\nEight minutes into the pose, I knew Bethany wanted to see Linda's orgasm and would give Linda all the time she needed. I followed Bethany's travels among the seven students I could see through my half-closed eyes. She was careful to take equal time with each, encouraging them to spend more time looking at the models than at the drawing. She made frequent, quick sketches on their drawings to highlight a particular point she was trying to make and always offered smiling praise and encouragement. \n\nLinda's rhythm was slowing, and she'd splayed her legs to produce maximum pressure on her clit. She stopped rocking, and I looked over her body. Every muscle was taut and tremulous, her skin luminescent. I'm not sure what I heard first, the rattling of the trapeze chains or the low groan emanating from her throat. The chains rattled a full 30 seconds, but I couldn't hear them over the series of increasingly loud moans and groans. All student's eyes were on her statuesque form, and some kept drawing. \n\nEventually, the studio calmed to silence. The only movement was Linda's intense, heavy breathing and the visible relaxing of her muscles. She slumped forward, still grasping the trapeze, and opened her eyes and smiled. I moved my hands up under her arms, and she let go of the trapeze to lower onto my chest. I deliberately gauged my embrace to be like Allison's on Tuesday but added in a whisper, \"I love you.\" \n\nTrying to maintain our act, Linda pushed up, rolled off my body, and sat up beside me. She looked around and saw the stool, reached over the edge of the stand to grab it, placed it next to her, threw an arm over the seat, and relaxed. \n\n\"You were sublime, Linda. I've never witnessed that in this studio before. Thank you.\" Bethany sat on the edge of the stand and smiled. \"Please take a few minutes to regroup.\"\n\n\"Bethany, I'm afraid I have to take a few minutes to pee. Where's the restroom?\" She broke the room's considerable tension, and we all erupted in laughter.\n\n\"Out the door to the left, third door to the right.\" Bethany paralleled her directions with arm movements.\n\nI was already sitting in the corner of the stand to allow space for Linda and Bethany. My cock was still hard and utterly soaked in Linda's wetness. She doesn't usually squirt but does flow heavily when excited. \"I noticed you don't use a robe. You can borrow mine.\" I offered.\n\n\"Thanks, but I'm too messy, and I enjoy it too.\" She waved her hands over her body.\n\nBethany shrugged her shoulders, and Linda scooted off the stage and out the studio door.\n\n\"You've handled this well, Eric. Thank you. She's not what I expected.\"\n\n\"She is not the shy young woman I remember. I hope I haven't taken advantage.\"\n\n\"You certainly haven't. Linda knows what she's doing. I'm more concerned for your boundaries, though. Are you okay with this so far?\"\n\n\"I told my wife what happened on Tuesday, and she assured me that anything that happens with Linda tonight was fine with her. I will have to tell her all the intimate, explicit details. I must admit to not getting much sleep Tuesday night, and I expect another sleepless night tonight.\"\n\nBethany smiled. \"Her poses are so intense I've taken more time than I expected. I'll let her do one more of these shorter poses and then discuss the two one-hour-long poses to fill out the class.\"\n\n\"I think it's a safe assumption Linda won't have problems with any pose you'd propose. Which of the four are you considering?\" \n\n\"This cowgirl one is a winner, but she may not want to repeat it so soon. The other one I like would have been the last one on Tuesday, the one we weren't able to do a long pose with Allison; both of you on your sides, facing the same direction with you behind. It doesn't sound too exciting, but there's potential.\"\n\n\"I'll do my best.\" \n\nLinda returned and weaved her way through the student's easels, looking at their work, returning to the stand where we sat. I heard several, 'Thank you for your exciting poses,' and other compliments. \n\nShe made it back to the stand, looking more put together than when she left. \"Reporting for duty. Three more short poses.\"\n\n\"Your first three poses were so wonderful I let them go on longer than planned. Do one shorter pose, and we'll move on to the two one-hour-long poses. Okay?\"\n\nI nodded yes, but Linda jumped up and stood in the middle of the stand. \"Let's get to work, Eric. Sit down facing that way.\" She pointed down in front of her and then to her right. I moved over and sat cross-legged with my hands in my lap, unsuccessfully trying to hide my hard cock. \n\n\"Lean back on your extended arms.\" She bent over to push my shoulder back and held it there until I extended my arms for support. She bent over farther than necessary, and her breasts hung directly in front of my face. \"Put your legs together, bend your knees and put your feet there.\" She stood back up and again pointed where she wanted my feet. I was shaped like a letter M, from my feet to knee to butt to shoulder to hand. It was impossible to hide my cock, which stuck straight up. \n\nLinda looked at my knees and said, \"No, that's not quite right,\" and stepped over my body with her right leg, so she straddled me and faced my knees. She bent over, put her left hand on my left knee, \"Extend your leg afoot,\" which lowered my knee and increased the bend at her waist. \n\nShe put her right hand to my right knee and pushed it to the right. \"Leave your knee bent and rest your leg down flat on the stand.\" She kept her hand on my leg as I lowered it, sliding it up my thigh. It looked like she was carefully guiding my leg down, but as she did, she bent further at her hips and pushed her ass back. Her hand reached my balls and her pussy pressed against my face simultaneously. She held the contact three or four seconds, then stood up and twisted around. \"Oh my god, I'm so sorry, I'm so sorry. I get focused on the pose, and I'm just not thinking. I'm so sorry.\"\n\nI tried not to laugh. \"Don't worry. How do you fit in here?\" \n\n\"Like this.\" She lifted her right leg back over my head and sat down on my left side. She stretched out on her left hip, splitting her legs around my left hand until her pussy touched my wrist. She supported her body on her left elbow and rested her head on my raised thigh, near my knee. She lifted her right leg, bent her knee then arranged her breasts to nestle in the V formed by my thigh and stomach. Finally, she moved her left forearm to touch my balls with her fingers.\n\nBethany was standing in front of the stand, watching the adjustments. \"Another provocative pose Linda. I want to make sure you're comfortable with it.\"\n\n\"Yes, this feels comfortable and natural.\" She lowered her voice into a conspiratorial whisper. \"But I feel with Eric, you know, hard like this, I should be holding him. Do you think it's okay?\"\n\n\"It would complete the narrative structure of the pose; the intimate time between two lovers. Do you agree, Eric?\" Bethany arched her eyebrows, and I interpreted it as a plea to let Linda hold my cock.\n\n\"It would be consistent with our session on Tuesday. Go ahead.\" I tried to be reluctant and supportive.\n\n\"Then, by all means, Linda, make the final adjustments, and we'll start the timer.\"\n\nLinda moved her right arm from her side and hooked the base of my cock with her index and middle fingers, and lightly squeezed. Then she moved her left hand to encircle my scrotum with her index finger and thumb, held my balls in the palm of her hand, and gently pulled. When she adjusted her head, and the tip of my cock was a centimeter from her lips.\n\nWhen Bethany stepped back and aside, taking in the full pose in its intimate detail, she said, \"Wonderful, Linda, absolutely wonderful. I'll start the timer.\"\n\nLinda looked up to Bethany. \"Wait a moment, Bethany. You're right, this is wonderful, but I think it would be more natural if I could kiss him.\" She looked down at the head of my cock.\n\nAfter a moment's hesitation, Bethany replied. \"That would certainly take it to another level. Eric?\" I faked a semi-shocked look and a hesitant nod yes. \"Go ahead, Linda. I'll start the timer when you're ready.\"\n\nLinda bent her head down, lifted her eyes to mine, smiled, and placed her lips on the tip of my cock. \"Excellent, Linda. I'll begin.\" Linda then opened her mouth and lowered her lips around my cock, engulfing a third of my length in her mouth. \n\nBethany had a turn at a semi-shocked look but didn't fake it. I only saw her out of the corner of my eye because I kept looking into my lovely wife's eyes as she motionlessly sucked on my cock. Bethany recovered quickly and continued her mentoring duties, praising her student's work and directing their attention to observations or techniques they may have overlooked. \n\nBethany didn't set a specific time for the pose, but I figured at least 15 minutes if I made allowance for two one-hour poses. Watching Linda suck my cock in front of 11 other people was exciting but wouldn't bring my orgasm, and we watched each other for a while. I wanted to return Linda's favors and moved my left hand to explore her pussy. She expresses thanks with minor leg adjustments to ease access. \n\nIgnoring my digital dexterity, Linda pulled on my balls. She knows my responses so well that if she'd press at the base of my cock and tighten the skin on my shaft, she'd make me come. I suddenly realized that was her plan and had deliberately arranged the pose for that purpose. She pushed against my cock with the big knuckle of her index finger and pulled down on my scrotum to stretch the skin. \n\nLinda knew she'd succeed when I thrust up involuntarily. She looked into my eyes and flashed a smile of excitement and determination. She next abandoned the static pose and noticeably pumped her mouth up and down on my cock in rhythm with her stroking it with her fingers. \n\nI closed my eyes and surrendered to Linda's ministrations. Although my position allowed only short thrusts into Linda's mouth, I began to feel the swirl of contraction from the pit of my stomach and the base of my cock. My orgasm was imminent. \n\nI opened my eyes to check the time and was surprised to see Bethany approaching the stand. She made it clear she didn't want us to stop and leaned toward Linda's ear to whisper loud enough for me to hear too, \"Please don't swallow, Linda. We'd all like to see.\" Bethany quickly moved back among the students.\n\nWe were free to move as necessary, and Linda sat more upright, getting better leverage and opening the view. She smiled and glanced once up to my face, then returned her gaze down to aim my cock. I extended my neck and straightened my back to brace for the explosion. Linda squeezed and pushed down on the base of my cock and kept my balls tightly in her grip. \n\nI felt two or three contractions before I opened my eyes and saw my still twitching cock oozing cum down my shaft and over Linda's hand. She didn't precisely follow Bethany's request and let one load splash inside her mouth. She was licking her lips and allowing a small rivulet of cum to flow from the corner of her mouth.\n\nI could see one rope of cum extending from her left breast, over the nipple, up her chest to her neck and cheek. Another shot must have been a direct hit on her left pigtail since I saw a large glob of cum mixed up in the free end and dripping down onto her left shoulder. The remainder of my cum splattered in a Pollack-like pattern near her mouth, chin, and chest.\n\nI didn't know how we could maintain the fiction we weren't familiar with each other. I wanted to lean forward to hug and kiss, but we smiled at each other, trying to look surprised this could happen. I leaned back to lie down, temporarily exhausted, and Bethany appeared beside us.\n\n\"I don't know what to say. We've never seen anything remotely like either of these last two posts in this studio. What you've accomplished after one previous session modeling is incredible. I can't wait to book you next semester after you've had a few more together. It's time for a short break before we tackle the longer poses. Are you both okay? Can I get you something?\"\n\nWe both said, \"Some paper towels.\" We all had another laugh. Willful suspension of disbelief is an incredible illusion.\n\n\"I've got some in my office. I'll be right back.\" Bethany headed straight for the door. \n\nI remained supine, trying to catch my breath while Linda moved a few inches farther away and leaned back on her arms. Her sly smile meant she wanted to maintain our fiction. Bethany returned with an entire roll of paper towels and tossed it to Linda. \"You need this more than Eric. Let's break until quarter past eight, and we'll set up the next pose. Please feel free to roam around and view the artwork or take a restroom break.\" \n\nLinda tore four or five sheets off the roll and vaguely cleaned herself, leaving a pile of crumpled paper beside her. She tossed me the roll, and I followed suit. Linda swung her legs over the edge of the stand and twisted around to look in my direction. \"I'm going to clean up more in the restroom. Toss them back.\" She pointed to the towel roll. I complied, and she took off toward the door. \n\nI needed more recovery time to have any chance of making it through the next two hours. I laid back down. I wanted to look at the artwork but not wear the robe. Allison and Linda could walk around nude, but not a male model. Today has been unusual, but I try to exercise better judgment when I'm by myself.\n\nI cradled my head in my hands and crossed my ankles. Looking past my toes, I lifted my gaze to the clock. There was no one in front of me, and for eight more minutes, I had time for a quick nap. My thoughts were interrupted by a soft, low, female voice originating from somewhere above and behind my head. \"Hello, Eric, am I bothering you?\"",
        "Many years ago, I took several years of ballet training. I tried to display my skill while flipping over and succeeded in looking like a dying fish caught on the beach at low tide. I propped myself on my elbows and forearms. \"No, not at all.\"\n\nShe was polite and considerate, lowering down to her knees, so we looked at each other on the same level. She placed her hands on the edge of the stand to help keep her balance. \"Of course, your posing is wonderful. You modeled in three sessions of a class I took last semester and your two previous times for Bethany in this class. My name's Jennifer, by the way.\"\n\nShe looked a few years younger than me, in her early 30s, and wore a wedding ring. \"Pleased to meet you, Jennifer, and thanks so much for the compliment. I rarely hear from students except if there's a complaint.\"\n\n\"I can't imagine anyone complaining.\"\n\n\"Thanks again. The complaints aren't usually to me personally, but the discomfort around nude males more generally. It comes with the territory.\"\n\n\"You've been so open and comfortable in your poses with Allison and Linda. I must ask about something they've both done.\"\n\n\"Ask away, Jennifer.\"\n\n\"I've watched how they've played with your balls. I find that exciting, very exciting.\" She blushed and looked up, away from me. \"The thought of squeezing and pulling on a man's balls feels powerful to me. Exciting and powerful. My experience has been less than satisfactory, though; it's a sensitive part of a man's anatomy and can be easily hurt.\"\n\n\"That's interesting, Jennifer. Thank you for trusting me with your confidence.\" I reached to place a hand on top of hers. \"I've always enjoyed that kind of stimulation of my balls, and I'm lucky to be married to a woman who finds pleasure for herself in handling me that way. We were open to those kinds of experiences from the start of our relationship, but we've also grown to trust each other completely. Allison and Linda seem similarly inclined, and I assume they are skilled through practice. Of course, one must have a willing partner on whom to practice. I can ask Linda to talk with you.\"\n\n\"Sure. I should get back to my easel. Everyone's coming back. Thanks for listening.\"\n\n\"I'll tell Linda. Good luck.\"\n\nWith clocks on three walls, I only had to look up to see the break was almost over. I turned onto my right side and rested my head on my hand. I saw most of the students had returned, including Linda. She talked with one of the male students who sat on a tall stool and pointed to various parts of his drawings clipped to the easel in front of him. \n\nLinda leaned back and forth across his easel to point too and managed to move in such a way her swaying breasts kept pressing against his arm. She needed to hold her hand on this thigh for support as well. My first assumption was she was trying to keep up the act, but maybe she had something else in mind. \n\nBethany returned and sat on the stage, turned slightly to her right to look at me, and casually put her hand on my left hip, a first. She had touched me many times when I modeled with the skeleton a few weeks ago, precisely locating a joint or muscle attachment to compare with a live body. She'd never handled me in this more casual fashion. It felt like some Valentine's Day fever must have filled the studio. \n\nBethany waved to Linda so we could start again. \"You two need something easy after those last two poses, so I'd like you to do the reclining pose next. Eric did the five-minute set-up with Allison on Tuesday, but she had to leave before doing the long version. You're taller, Linda, so there'll be a different geometry you'll have to work out. Unfortunately, there won't be much opportunity for the intimate contact you've had but use the time to gather strength for the last pose.\" \n\nI pushed up and swung my legs around to get up on all fours. \"I'll get the bolsters. Bethany, do you want to move the stand back toward the changing room to allow more space for frontal views? I think that's where all the interest will be.\" \n\n\"An excellent idea, Eric. It's fine where it is for a short warm-up, but there's nothing to see, except your cute ass, of course, from the back.\" \n\nBethany turned and announced to the class. \"This will be a reclining pose like the one Allison and Eric did during one of the short poses on Tuesday. We're moving the stage a couple of meters back to make space for everyone in front. Please rearrange yourselves.\"\n\nThe three of us pushed the stage as far as Bethany thought appropriate, kicking the bolsters out from underneath as we moved. Bethany then helped rearrange the easels. Linda and I were left to set up the pose. I picked up the bolsters and whispered, \"We've done this pose before. It should be fun.\"\n\nShe whispered too, but more frantically. \"I'm so fucking horny, Eric. If you can't get your cock stuffed into my cunt soon, I'll have to find someone who will. I know I came a few minutes ago, but sucking you off triggered my pussy. I gave in to Bethany's request and let you shoot all over me rather than sucking it down. I only got a taste in my mouth, but it was enough to get me going again. I tried to frig myself in the toilet, but people kept coming in. It was too damned chaotic, and I couldn't concentrate. At least here on the stage, people leave you to your business in quiet. Shit.\"\n\nI couldn't abide Linda's distress, and regardless of consequences, I held her head and kissed her forehead. My hands slid over her shoulders, down her shoulder blades, over her back, and grasped her ass cheeks firmly, one in each hand. I pulled her into my cock against her pubic mound and stomach. \"Hey, beautiful, hold me. We'll fuck on this stage soon and find some way to get my cock in your ass too. We have to be patient a few more minutes.\"\n\nI felt her whole body relax, and she leaned back to look into my eyes. \"Oh Eric, that's worth the wait. Let's go.\"\n\nLinda pulled the sheet back, and I placed the two bolsters, a thin one for Linda and the thicker one for me, along the long axis of the stage. She studied the studio and decided to push one corner of the stand back a half foot so we'd be slightly angled into the audience when lying on our right sides. She stepped up and began positioning herself.\n\nBethany made a final equipment move to the front of the stage and paused next to me. \"Is Linda okay? She looked upset.\"\n\n\"She had a minor panic attack. Her dog was home alone for a few hours, and she couldn't remember giving the dog sitter all the necessary instructions. She said she might have to go home to make sure. I reassured her it would be alright. Don't worry.\" I leaned in closer to whisper, \"Is it me, or is this a fuckin' weird night.\"\n\nBethany started with a single chuckle, then another, and a cascade of full-out laughter. I've never seen her break up like that. She shook her head and resumed her relocation efforts after patting me on my ass.\n\nI turned back to Linda and found her crawling into position on the bolster. She asked me, \"What happened with Bethany?\" \n\nI could only think to stick with one story. \"Not much. She's worried about leaving her dog home alone. I told her the daughter of one of my customers runs an exclusive dog sitting service, and I'd get the contact number to her tomorrow. You saw her obvious relief.\"\n\nLinda laid on her right side, her right arm extended straight beyond her head, flat on the stage, and bent at the elbow with her head propped up on her hand. Her legs flexed at the hips and knees, with her left leg resting directly on her right. She looked beautiful and supremely sexy. Her luscious body curved from her head, sloping to her waist, rising over her hips and thighs, and descending to her feet. \n\nLinda is always aware of the fullness and placement of her breasts and enjoys them as much as I do. She took care in their display, held her left arm underneath her breasts, and compressed them within the frame of her arm. I kept staring at her marble-like nipples and realized my well-worn cock was reawakening. I smiled and forced myself to look up from her breasts and into her eyes. \n\nI crawled onto the stage, partially blocking the audience's view, took a page from Linda's first pose, and placed her limbs by touch and not by voice. Sitting on my knees with my butt on my heels, I turned my right-hand palm up and inserted it between her legs at her knees. I lifted her left leg until it was vertical and formed an exciting triangle within the boundary of her foot, knee, cunt, and stage. \n\nI slid my right hand down her left thigh until I reached her cunt and pushed my palm flat against it. I lowered my gaze to her pussy and could see she followed with hers. We both watched my hand transfer some of her moisture and lubrication to my cock, and I watched the vivid pinkish bloom develop on her cheeks and flow down her neck and chest. I patted her right leg to remain flat on the stage. \n\nI crawled around her feet and arranged myself behind her on the thicker bolster. Fundamentally, we were spooning. I laid down behind her on my right side with my legs together, bent in the same pattern as Linda's. I raised my torso on my extended right arm. My torso popped up diagonally from behind her raised left leg, with the downward diagonal of my right arm planted behind her head. \n\nThe exact position of my pelvis is more complicated than it appears at first glance. Our plan was for my soft cock to harden during the pose and, without another noticeable movement, 'accidentally' lodge against Linda's pussy lips. I'd penetrate her splayed cunt in full view when I became fully erect. Fortunately, this wasn't our first rodeo. I left a couple of inches of space between us to allow the proper geometry. I tucked my soft cock down toward her feet behind her right leg.\n\nTo finish up, I pressed my right leg up against Linda's and copied the triangular shape of her left leg, but further away. I extended my left arm to cup Linda's left breast and lightly squeezed her nipple. She stretched her left arm along her body, placing her hand on top of her thigh.\n\nFrom right to left, as seen by the artists, were two triangular shapes formed by our raised left legs and the stage, offset both left to right and front to back. Linda's body extended horizontally with the stand from the triangle of her leg. My torso projected up to the left from behind Linda, bisecting the angle of Linda's left leg and her torso. Two more triangles extended to the left; one formed from my torso extended right arm and Linda's body, and the last created from Linda's arm, head, and neck.\n\nWe'd created an interesting formal composition. I wouldn't say it rose to the caliber of Rodin's 'The Kiss,' but better than average. Whatever the pose lacked in stunning formal composition, it made up in narrative potential. \n\nI surreptitiously surveyed the studio and saw disinterested students hoping to see a roller coaster of explosive sexual fireworks but settling for a pedestrian bus ride. I looked at Bethany. \"If this is acceptable, we're ready to begin.\" \n\nShe looked carefully at the composition. Her expression implied she found it a good placeholder until the final pose and a stunning session climax. \"I've set the timer, and we have 50 minutes. Please begin.\"\n\nI looked back to Linda, and we held each other's gaze for a quarter-hour or more, motionless and in silence. She signaled the start of serious efforts when I felt her ass clench and push into my belly. She smiled and wiggled her butt at the same time. I was on the edge of tumescence, and the slight movement of Linda's ass slid my already slickened dick a few millimeters along her thigh. I've heard it called the butterfly effect, and I knew the ensuing chain of events was irreversible. I mouthed, 'I love you.'\n\nIrreversible doesn't mean immediate, and since we had another half an hour to fill, I was in no hurry. I remembered Jennifer's questions. Everyone was bored, the session was informal, and I knew our soft, discrete whispers wouldn't be a problem. They'd be neither heard nor understood. \"When you came back from the restroom, I was talking with a woman. Her name is Jennifer.\"\n\n\"Is that so.\" Linda scowled. \"You were deep in conversation and holding her hand, but you were also naked. I'd sucked your cock to climax, you shot your load all over my body, and still, you couldn't keep your hands to yourself.\" \n\nThe suddenness of her reply caught me short for a moment, but I felt her right thigh tighten and relax, rubbing my cock against her leg. \"Yes, mistress, I'm guilty as charged. I remain naked and await your punishment. There's more to the story, and perhaps you'll let me finish before I suffer your punishment.\"\n\nShe laughed, which made things worse by jiggling my cock, causing a vibration that extended my cock another centimeter but kept it still tucked discreetly behind her thigh. \"Proceed.\"\n\n\"Your deft handling of my testicles inspired Jennifer. She wants some ball play, and I don't mean cricket. Her husband has refused to participate, feigning injury. She'd suppressed her desires until seeing you and Allison bang on my balls. I told her I'd ask for your sage wisdom, and maybe you'd speak with her.\"\n\n\"Shit. I'm surprised your cheap-ass whore-mind didn't think to offer your balls up on a platter so Jennifer could practice then and there.\" Only her smile gave her away. \n\nI first felt the blood pressure increase in my neck, and the hot, blood-borne bloom expanded to my face. \"I know, mistress, only you can offer my balls up, on a platter or otherwise. They're yours to do with as you wish.\"\n\nOver the years we had modeled together, Linda and I practiced disguising our intentions. Tonight, no one saw any movement for at least the first half an hour. Our adjustments were a twitch here or a jiggle there. The students could see we calmly whispered, but it didn't affect the pose, and they couldn't hear anything. I felt my cock's first stirrings, but I plump up first, then lengthen. So, my cock doesn't draw undue attention until a final burst of blood. \n\nThat all changed when Linda said, \"I can feel your cock. I saw the artery in your neck expand and immediately felt your cock extend down my thigh.\" My heart rate deepened, and each explosion in my chest pumped directly to my cock. In one sudden spurt, my cock sprang from firmly wedged behind Linda's thigh to sticking forward above her thigh. \n\nThe unexpected jolt to my cock didn't phase Linda. \"The geometry is almost right, but pull back just a bit. That's good, tilt right. Perfect.\"\n\nThe startling movement drew attention and raised a commotion when students reached for erasers and rubbed their drawings. Noisily alerted to something happening, everyone was looking when the tip of my cock bounced off the lower opening of Linda's pussy for the first time. \n\nLinda's voice and smile connected our hearts and linked them to my cock. I counted five heartbeats in four seconds, and I felt the heat of Linda's welcoming vestibule against the insistent head of my cock. All I could say was, \"I love you, honey.\"\n\nI kept my eyes on Linda to try and delay the inevitable. Still, stray looks to her full breasts fueled the return of my full-throttled blood flow, and with two or three more pulses, the head of my cock pushed between her pussy lips. Linda's smile told me she'd felt it too. We were more emotionally and physically connected than we'd been in a long time, and her eyes inflamed my heart.\n\nI held still and didn't want unnecessary thrusting to end our fun prematurely. I kept my eyes fixed on Linda and asked, \"Can you tell how many are looking?\"\n\nShe slowly moved her eyes to view the studio. \"All of them, glued to our fucking.\" She lowered her eyes, indicating where my cock entered her cunt. \"You're barely inside me. When you grow and fill me, they'll start sweating.\"\n\nThe thought of being watched while fucking got my cock throbbing and quickly expanded to fill Linda's cunt. \"That was fast, buster. If I didn't know you're a dedicated, professional life drawing model, I'd say you're enjoying yourself entirely too much.\" I forced myself to look to Linda while time stood still.\n\nIt seemed like hours, but only minutes passed. \"We've set something in motion tonight, definitely between us, but among the rest of them too,\" I whispered and raised my eyebrows to our audience. \n\n\"Eric, I'm not concerned with the audience. You're hard inside me, I'm enjoying it immensely, and they're paying us to fuck in front of strangers. Do you have any thoughts over the next pose? Bethany wanted the cowgirl pose. I assume she wants a longer version of one I did earlier, with me on top.\"\n\n\"That's what she said, but you've managed to take over the class. Whatever you'd like is what we'll do. What do you think of an alien anal probing as I promised?\"\n\n\"It sounds so yummy, but we have to make it so open and flagrant they'll be shocked. We've got their attention. Let's send them over the edge.\"\n\n\"I can sit at the front of the stage with you on my lap, leaning back against my chest. With my cock in your ass, of course. I brought the lube. It's in my bag.\"\n\nI glanced up from Linda to gauge the class. I could see half the students, and they were all fiercely drawing, intensely focused. In the extreme of my peripheral vision, Bethany stopped with a couple of students and continued her positive guidance. \n\nI felt Linda slowly rocking her hips to pump my cock, and I responded in counter-rhythm, pushing up when she pushed down. Nothing frantic, just slow rhythmic motion. I'd lost sight of Bethany for another few minutes. \n\nI was roused from my reverie when Linda mouthed, \"Bethany's coming.\" We slowed our thrusting but didn't completely stop.\n\nMy eyes were on Linda while hers were on Bethany. She walked the length of the model stand and squatted to balance on the balls of her feet near Linda's head. Bethany spoke above a whisper, loud enough for me to hear but aimed at Linda. \"This is stunning, Linda. You've gone far beyond my hopes and expectations. I want to make sure you feel comfortable with what you've accomplished so far this evening.\"\n\n\"I'm inexperienced in these things, Bethany. You said your original plan was for erotically charged poses. I had an orgasm before, and Eric splattered cum all over me in the last pose. Now, Eric's slick cock accidentally pressed against my pussy lips. It felt so good, and I didn't think it would be a problem.\" \n\n\"It isn't, Linda, given the circumstances.\" Bethany looked over to our conjoined genitals. \n\n\"I felt Eric try to control his hardness, but he grew longer and spread my pussy lips. His cock felt so good in my mouth I thought it might feel as good in my pussy. It does.\" \n\nBethany returned her gaze to Linda's face. \"You've come a long way tonight and uninhibitedly engaged in the learning process. Your poses are beautiful and erotic. It's time for a break before the final pose tonight.\"\n\n\"Do you still have a preference for the pose we'll do next?\"\n\n\"I had something in mind, a long version of one of your earlier, short poses, but now I'm not sure.\"\n\n\"I'm a beginner, an inexperienced nude model, and for the last pose, I'd like to show you what I've learned. Would that be possible, Bethany?\" Linda gave Bethany her most honest and seductive, pouty look.\n\n\"An intriguing idea, Linda, but I have to return to my office for a few minutes. We'll talk after the break.\"\n\nLinda stopped her movements and looked around at all the shocked faces staring at us. She smiled and, in her most perky voice, informed everyone, \"I've got to pee again.\" She moved so quickly we disengaged with a pop, and I barely caught a glimpse of her ass when she turned into the hallway. \n\nBethany came to her senses. \"Well. Yes. Time for a break. We've gone overtime again, so let's start up again at nine twenty.\" She left for her office.",
        "I took all this as a cue to sit and relax. I didn't attempt to hide my erection while casually looking around the room. The students were trying to calm down and adjust their drawings and supplies for the final pose. The sexual tension wasn't overwhelming but close. I thought they would be more careful what they wished for when they wanted an erotic drawing session in the future.\n\nLinda returned and sat next to me. \"I only peed; I want to save the excitement for our last pose. Where's Bethany?\"\n\n\"She left right after you and appeared agitated too. I wouldn't be surprised if she took a long break.\"\n\n\"I'm so excited, Eric. It's Valentine's Day, and I love being naked with you. I think Bethany's in the spirit, too, and got a charge from seeing us fuck. It's an electric night, and everyone's charged up.\"\n\n\"I've felt it all night since the beginning when Bethany introduced you.\"\n\n\"I'm going to spread the joy and talk with Jennifer and that guy.\" She looked across to the guy she talked to during the last break. \"I'll keep up pretenses, weak as they are.\" She jumped down and walked over to chat with Jennifer.\n\nA few students wandered out into the hallway. Most stayed and watched either Linda or me while they continued their preparations. I thought to get the lube and couldn't explain why I brought it but realized we were too far gone to worry. I got it from my bag, tossed it on the back corner of the stand, and sat to the side at the front. \n\nLinda had finished chatting with Jennifer and moved along to talk with the other guy. He whispered, and I couldn't hear. Linda spoke in her usual voice, and I think she wanted me to hear. \"Those are beautiful even though drawn from such a distance. Would you like a closer look?\" \n\nShe turned around facing me, bent over at her waist, and rested her hands on her knees. She looked at me and smiled while wiggling her spread ass and backing up. The drawings must have been of her ass and pussy. She backed up into his arm before stopping and moving forward a half step. \n\nHe said something I couldn't hear, and she turned her head back toward him. \"Sure, go ahead and move them around if you like.\" He reached up and pulled her pussy lips out from her cunt and wiggled them back and forth. She looked back to me, smiled, and arched her eyebrows. She soon stood up, turned, and put her hand on his shoulder. \"Glad I could help.\"\n\nLinda returned and sat near the center of the stage, a foot away from me. \"You know I'm playing, Eric. We've never gone this far with a group like this, and it's so exciting. I'm sure Bethany wants me, Jennifer wants to pull on your balls, and Robert over there, well, he's just a guy and wants to fuck.\"\n\n\"You told Jennifer she could play with my balls tonight?\"\n\n\"No, but yours are proven up to the task. We don't have enough time tonight, and I need your cock in my ass. Another night would be fun to do something interesting with more people. Let's get through tonight and arrange something with Bethany for another special day, maybe the vernal equinox.\"\n\n\"Speaking of Bethany, here she comes, and right on time, too.\" \n\nBethany arranged her hair in a scrunchy when she stopped in front of Linda. \"We have time for one more pose, and you wanted to show me what you've learned this evening.\" \n\nLinda casually leaned forward and reached up to draw Bethany closer. Unfortunately, Bethany's raised arms allowed Linda to press her hand against Bethany's chest and not her shoulder. Linda somehow massaged Bethany's boob while whispering. \"I've already come, sucked Eric's cock, and had my pussy fucked. For the last pose, I want to complete the triple and have Eric fuck my bottom. I'll have my last hole filled.\" \n\nBethany was flushed, visibly aroused, and could only nod yes.\n\nLinda looked at me. \"Eric, please sit with your butt here, your legs together and straight out, and lean back on your hands.\" She slapped the stand where she wanted my butt and stood up to get the lube from the corner.\n\nI hurried over and got into position with my legs together near the front edge. My lower calf and feet cantilevered over the edge of the stand. My cock stuck straight up from my lap, but I knew Linda's ass would soon cover my immodest display. \n\nLinda stood by my right thigh. \"Perfect, Eric. Keep still while I get into position and lube us up.\" She stepped over to straddle my legs, facing the class with her ass inches in front of my face. \n\n\"Eric, I have a big favor to ask. Would you prepare my tight little butthole for your big cock?\"\n\nShe'd twisted around to look at me, pushed her ass back to spread her cheeks, and held out the lube. I knew she wanted me to apply some, so I raised my hand to receive a glob. Before the lube, though, I had to kiss her beautiful bottom and lick and probe her ass with my tongue. She wiggled and squirmed before I smeared the lube on her dark star and pushed two fingers inside to help her loosen up quickly.\n\nAfter I withdrew my fingers from her ass, she bent over, squeezed lube on my cock, and stroked a thick layer over me. She tossed the lube behind her, squatted down, reached under her pussy, and grabbed my cock. Wriggling the tip against her already loosened target, she smoothly lowered her ass over my cock until fully impaled. She leaned back against my chest, extended her arms behind to help steady her body, and moved her feet forward, so her toes touched the side of my knees. She relaxed her legs to let them splay apart, and I tried to imagine the view the students had.\n\nLinda leaned back off-center to the right and casually rested her head beside mine. \"How does this look, Bethany?\" \n\nI could easily see her to our left. She quickly scanned Linda's tits and stomach but stared at her pussy. \"I'm stunned, Linda, stunned. With each successive pose, I think you've reached the zenith of your ability only to be proven wrong with your next. Your pose is spectacular. Both of you, it's wonderful. We have another half an hour of class but hold it only as long as you can.\"\n\n\"Thank you for the compliments, Bethany. Can you do something for me? I applied too much lube and smeared it over everything. Please take a corner of the sheet or something and wipe us off down there. The time would pass more comfortably.\"\n\n\"Of course, Linda. Give me a moment to find things.\" She scanned the stand and, not disturbing the sheet, picked up the paper towel roll. She sat by Linda's right knee, pulled the leg against her body, and reached down to begin wiping up.\n\n\"Can you move your legs apart, Eric, enough so I can get you all cleaned up.\" I complied and felt her gentle touch pressing against my balls and thighs. She wiped up, dabbing the base of my cock and the exposed rim of Linda's expanded back door. I couldn't see or directly feel what she did next. Still, judging from Linda's deeper breaths and quiet moan, Bethany had started cleaning Linda's vulva and was doing a thorough job. Linda leaned her head back against my shoulder and started rocking her hips. \n\nA few seconds later, she raised her head and whispered. \"It feels great, Bethany, but I don't want to come yet. We still have a pose to finish.\"\n\n\"You're right, Linda. I'd like to say a few things to the class first.\" Bethany stood up and spoke loud enough for the entire class to hear.\n\n\"We have precious little time to capture this magnificent pose. Notice the negative spaces formed between Linda and Eric's legs and where their arms reach back for support.\" Bethany stood slightly to our right, to the left from the student's view, and used her extended arm to point to the subject of her attention. \n\n\"We cannot neglect the narrative impact of this pose either. Linda has privileged us with an opportunity to artistically interpret a powerful woman in the lustful throws of wanton abandon. Notice her swollen labia, engorged clitoris, and hardened nipples. These are all the direct result of her complete anal penetration,\" Bethany paused and looked into Linda's eyes, \"and her joy in revealing it to all of us.\" She understood Linda's proclivities and smiled as she looked back to the students who drew furiously. \n\n\"We have another 30 minutes, and I'm sure Linda and Eric will provide another fitting climax to this wonderful pose.\" Bethany began her usual rounds of spending time with each student. \n\n\"Happy Valentine's Day, I love you,\" I whispered in her ear. \n\n\"This is so wonderful, Eric. It feels like I'm exposing my most intimate soul, and it's so exciting. I want this to go on forever.\"\n\nWe didn't move for 15 minutes, maybe longer, and I was grateful for being in Linda's ass. She had a tight grip around the base of my cock with her contracted sphincter, but the rest of my cock was snug and warm inside. Her rectum didn't have the muscles to squeeze my shaft's length, which helped keep me from coming. \n\nI kept my eyes closed, and I think Linda did too. We both luxuriated in the warm excitement of our blatant sexual display. I felt my wife stirring down there, her hips rocking to the rhythmic contractions of her ass gripping my cock. \"Is it time to bring the show to a conclusion?\"\n\n\"Yes, honey, I don't want to hold it off any longer. Can you reach me? I'd like to feel your fingers.\" \n\nI moved my left arm around Linda to rub my fingers over her vulva. She had been sitting with her head against my cheek, and she tilted her head back, started moaning, and increased the tempo of her rocking hips. \n\nI alternated between rubbing her lips and dipping a few fingers inside her cunt. After a couple of minutes to warm up and feel the increased tempo of her pelvic thrusting, I started fingering her clit, which sent Linda into overdrive. She began pushing up with her legs to slide her ass up and down my shaft. I rocked my hips to meet her thrusts, and we soon hit an urgent rhythm disrupting any attempt to capture an image. \n\nWe were both close when Linda brought her right hand to her breast and squeezed her left breast and nipple. We were precariously balanced, and before the dam broke, we had to lie on our backs. Linda straightened her legs, spread them as wide apart as she could, and moved her left hand to take over on her clit. I felt my balls pull up beside my cock, and I held my hands on her hips to hold her steady as I pounded my cock up into her ass. \n\nWe arched our backs and wholly tensed up when our climatic contractions started. It felt like Linda's sphincter was trying to suck me in as wave after wave of explosive energy erupted from my loins and filled her ass with my cum. We both relaxed and the studio ceiling slowly replaced the stars in my field of vision.\n\nWe were sweaty and still trembling when the giggling started. I think I started it, but Linda immediately joined in. Soon, we were laughing so hard it was difficult to keep her on top of me. All the jiggling softened my cock, and it slipped out of Linda's bottom. I felt the gushing of cum pouring over my crotch. As Linda said earlier, we like messy sex.\n\nLinda slid off me to the right. I turned onto my right side, and she onto her left. \"I love you so much,\" I whispered while awkwardly hugging and kissing her. We couldn't indulge long, and hearing the scrapping of chairs and general movement, we saw Bethany standing by our feet.\n\n\"I can't think of a more fitting, erotic end of our Valentine's Day romantic drawing sessions.\" Bethany started with a polite clapping, and immediately everyone joined in with applause. \n\nLinda and I sat up and smiled, trying to acknowledge their appreciation. I reached back for the role of disappearing paper towels. We'd gone through a few and would need more to clean enough to get dressed. Bethany sat at the edge of the stage while we cleaned.\n\n\"I'm on to your secret. I got worried when it looked like you'd have sex and went to talk with Amanda. She told me your voucher forms indicated you were at least living together, if not married. I know it was late, but I called Allison, too, and she confirmed you'd mentioned your wife modeled.\" Bethany paused, and it felt like we needed to say something.\n\n\"I hope this means you're not going to banish us in the future.\" I looked hopeful while cleaning up cum and sweat from my lap. \n\n\"Far from it, Eric. We can't have another class like this until our next Valentine's Day sessions. Still, several soon-to-be graduating students expressed a desire for more intimate sessions. I have a studio on Fox Island and could accommodate up to 15 artists for a more exclusive session. Allison wants to participate too.\" She looked over to Jennifer. \"We've also had a request for instruction involving male anatomy, which may be an interesting drawing subject as well.\"\n\nI think Linda was feeling left out. \"Can you check if I cleaned everything?\" She got on her hands and knees with her butt facing me. \n\n\"You missed a couple of spots, but I'll get them,\" I said while wiping her ass with another paper towel. I finished her cleaning with a kiss on her puckered hole, and she stood up and stretched, then bent down to hug Bethany.\n\n\"Thanks for letting us do this, Bethany. I think it would be fun to visit your studio, but I'm exhausted, and it's time to get home.\" We all stood.\n\n\"I'll call you guys to schedule something. Thanks again.\"\n\nAt the end of our session, Linda was calm toward Bethany but talked nonstop in the changing room while I started dressing. \"Oh god, Eric. That was so much fun. I didn't want to seem too eager with Bethany's offer to model in her studio. That would be great. I'm so excited. I can't wait.\"\n\nI heard Linda but didn't pay much attention and finished dressing. I packed my robe and flip-flops in my gym bag and turned to see Linda was dressed only in her white, calf-high socks and fitflops. \"I thought you were exhausted and wanted to get home?\"\n\n\"I'm ready, Eric. Let's go.\"\n\n\"You're naked, and it's cold.\"\n\n\"You weren't paying attention, were you? I've been telling you how exciting I am being nude. I can't stand to put clothes on. I'll have to get dressed tomorrow morning, but I'm staying like this until then. It's only 50 degrees outside anyway. Put my clothes in your bag, and let's go.\"\n\nI've learned it's futile to argue beyond a certain point and couldn't help feeling this would be the perfect end to a very surprising Valentine's Day."
    ],
    "authorname": "JGittes",
    "tags": [
        "anal creampie",
        "analingus",
        "public sex",
        "public anal sex",
        "exhibitionism",
        "female exhibitionist",
        "couple",
        "cunnilingus",
        "blowjob"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/a-valentines-day-anal-surprise"
}