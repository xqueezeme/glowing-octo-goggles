{
    "title": "M Club Ch. 15",
    "pages": [
        "The first rule of M Club is: You don't talk about M Club. The second rule of M Club is: You don't talk about M Club. Third rule of M Club: No touching anyone but yourself. Fourth rule: No recording devices. Fifth rule: No clothing below the waist. Sixth rule: If this is your first time at M Club, you must masturbate. \n\n* * *\n\n\"So, what's the story between you and Lisa?\"\n\nAndy glanced at Vida where she rode shotgun in his old beater, before returning his focus to the road. Even though things had gone smoothly with her initiation into M Club, he still felt a certain awkwardness in her presence. She ran in a higher social circle, had wealthy parents, and they'd rarely ever crossed paths in school outside of being in band together. That and he found the amount of leg she had on display highly distracting.\n\n\"Well,\" he said, searching for the right words. \"It's complicated. I guess.\"\n\n\"Complicated?\" \n\nAndy sighed. \"We've gone out a couple times, but I don't get the impression she's as interested in me as I am in her.\"\n\n\"I see. And you are interested in her? Or is it just because Sean and Den are an item?\"\n\nIt pained him how easily she cut to the quick of the matter. No sense denying it, he figured, and it might be nice to have someone he could unload on.\n\n\"Yeah, that's probably more of it. I mean, yes, I like her and she's smart and fun and cute and all. But, if it wasn't for our friendships, I doubt we'd have ever gone out. Sean and Den had tried to hook us up and couple times before and she was never interested until after the club started. And then, well, like I said, it's only been a couple dates.\"\n\nVida patted him on the leg, probably unaware how pleasantly uncomfortable that made him.\n\n\"I wouldn't sweat it,\" she said. \"I mean, you're going to different schools in the fall anyway. If you can get a summer fling out of it, great. If not, I'm sure you'll find some hottie in college. Especially since you'll be playing football.\"\n\n\"Hopefully.\"\n\n\"I'll put in a good word for you with my boyfriend. He can give you some inside info on what to do this summer and what to expect come training camp.\"\n\nAndy cocked his head. \"Wait, your boyfriend plays on the Southern Cougars football team?\"\n\n\"I didn't mention that?\"\n\nAndy looked at her and she appeared genuinely embarrassed. \"Don't think so, no.\"\n\nShe gave him an apologetic shrug. \"Yeah, plays safety. Has a shot at being a starter next season. Played a little as a sub and special teams last year.\"\n\n\"Nice.\"\n\nAfter her touch on his leg, and the memory of her patting his crotch after her initiation, he was doubly disappointed at the reminder of her college boyfriend. He found her both very attractive and far less intellectually intimidating than Lisa. That and her reputation for being both sexually experienced and open... Why did he always pine for the taken girls and strike out with those who weren't?\n\nAndy turned down the street with the closest access to the park where the M Club maintained their secret clearing. A few houses on the left side of the street were widely spaced and on the right side was nothing but the dense woods of the park. About two blocks down was the trailhead that led to the nearly invisible game trail to the spot. Vida, after asking him for a lift home, inquired about the spot they'd mentioned and he offered to drive past the park just to give her some idea where it was located.\n\nHis heart clenched when he recognized Lisa's car parked on the side of the road just beside the trailhead. What was she doing here? They weren't supposed to meet as a club until Friday. Sean and Den had set aside today as a \"date day\" and Lisa had said she needed to get some studying done when he'd asked if she wanted to hang out. Surely, she wouldn't be here alone, would she? And, if not, that almost certainly meant she was here with the others. Without him.\n\n\"Something wrong?\" Vida leaned forward, clearly bothered by his expression.\n\n\"No,\" he said, knowing she wouldn't buy it for a second. \"Just surprised to see that car here.\"\n\n\"Why?\"\n\nThe heat rose in his face and he could feel his palms getting sweaty. He knew he shouldn't be upset if they were doing something together. It wasn't like he and Lisa were a couple or exclusive or anything of the sort. They'd never kept him out of club activities before, and they could hang out without it having to be a club thing. Still, he couldn't help but feel crushed at the exclusion.\n\n\"It's Lisa's.\"\n\nVida considered that for a moment. \"Oh,\" she said in a flat tone, clearly catching on. \"So, you think she's not alone.\"\n\n\"I'm not sure,\" he said, slowing as he approached, unsure what to do next.\n\n\"You wanna go find out?\"\n\nPart of him did, part of him didn't. What would he do if it was the three of them, playing without including him? Would he confront them? What good would that do? Probably ruin some friendships as well as break up the club. He might feel a little better for making them feel guilty, but it wouldn't last.\n\n\"No, not really.\" He sped up, only glancing back in his rearview mirror.\n\n\"Sorry,\" Vida said, sounding genuinely sympathetic. \"I don't know you guys all that well, but do you think those two would invite Lisa into their...relationship?\"\n\nAndy did. That was the frustrating part. It was all too easy to believe it.\n\n\"Yeah, maybe. I mean, it was the three of them together who first started what then became the M Club. I only got in because I kinda guilted them into it.\"\n\n\"Oh. Like me.\"\n\nAndy appreciated her effort. \"Sorta, yeah.\"\n\n\"Are Den and Lisa...?\"\n\n\"Lovers?\" Andy gave her a wry smile and shook his head. \"I'm not sure what they are. They kinda hinted around that something might have happened between them. Even Sean hinted at it, but didn't go into any details. At one of our last meetings, though, they did lick Sean's and my...jizz...off the other's tits. And there was some extracurricular licking and sucking involved. Let's just say it didn't look like their first time.\"\n\n\"Wow,\" Vida said, taking a deep breath. \"Didn't see that coming.\"\n\n\"I think they were being a bit careful at your audition. Not wanting to give away too much until they got more comfortable with you. If you hadn't been there, it might have been a little different.\"\n\nVida frowned. \"Sorry I got in the way, then.\"\n\nAndy shook his head. \"Don't be. We were all glad you came, at least after the fact. They all like you and think you were a great sport. Yes, it changes the dynamics a bit, but...well, I'm glad you're in.\"\n\n\"Thanks.\"\n\nThe next few minutes passed in relative silence. Vida engaged in a text exchange while Andy concentrated on driving through the unfamiliar neighborhood, making turns at her direction. The houses in this area were all huge, with vast expanses of lush grass and well-manicured yards giving them plenty of space from the neighbors. The apartment he shared with his mom could fit inside many of their garages. He felt out of his depth, as was usually the case around Vida.\n\n\"This is it, on the right,\" she said, tucking her phone away as he pulled into the driveway. \"You can park along the side of the driveway here, if you want.\"\n\nHe hadn't planned on staying, but Vida had said 'park' rather than 'drop me off.' He did as instructed, but left the car running.\n\n\"Wanna come in for a bit?\" There was no seductive or suggestive tone to her voice. Rather, it just seemed like something a friend would ask. When he hesitated, she added, \"I was just texting Leon, my boyfriend, and he should be here soon. So, if you wanted that introduction, now's a good time.\"\n\n\"Uh, I don't know.\" Andy kicked himself for sounding so lame.\n\nVida didn't back down. \"C'mon. I'll show you around and you can get your mind off...that other thing.\"\n\nThe irritation from being reminded about his friends was enough to push him into agreeing. He really did need something to get his mind off what Sean and Den and Lisa might be doing with each other right now. Without him.\n\n\"Okay, sure.\"\n\nShe placed a hand on his arm and smiled. \"I'm sure we can find a way to clear your head.\"\n\nWithout explaining what she meant by that, Vida let herself out of the car and waited for him to join her. He followed around to a side door, wondering what she had in mind. Her boyfriend was coming over, which nixed anything sexual. Dope? He wasn't into that sort of thing, too afraid of losing out on his football opportunities. Alcohol? Almost as bad, especially on a school night and before going home to have dinner with his mom. Still, his mood was dark enough that he was willing to play along and find out.\n\nThe inside of Vida's house was every bit as elegant as the outside. Aside from its sheer size, everything exuded class - polished wood, brass fixtures, crown molding, expensive-looking art. And everything was spotlessly clean. The place hardly looked lived in.\n\n\"Well, this is it,\" Vida said, giving him a bit of a guilty look. \"We've only lived here for about three years, and it really doesn't feel like home yet. And with me moving away in the fall, I'm not sure it ever will. Still, I shouldn't complain. Got my own room with private bathroom. Girl can't ask for much more than that.\"\n\nAndy smiled at her commentary and followed as she gave him the tour of the place. While it was big, it wasn't quite what he would call a mansion. Just a really big house. It didn't have many more rooms than Sean's place, but those that it had were big and spacious, especially the living room with a second-floor balcony overlooking it. The house had something of a U-shaped layout, wrapping around a gorgeous outdoor pool and hot tub. The yard and outdoor furnishings were elegant, and it appeared to be very private.\n\n\"Wow,\" he said, genuinely impressed. \"M Club should just move all its meetings here.\"\n\nVida shrugged. \"We probably could. It's not like my parents are ever around. And even if they were, they still might not notice us.\"\n\nAndy picked up that hint of irritation in her voice again and realized how true it was that a house didn't make a home.\n\nAfter he got his fill of being awestruck by the backyard, Vida let him upstairs and showed him the home theater room, guest rooms, and her bedroom. Finally, at least one room in the house wasn't immaculate, though her bedroom was still tidier than he could recall his apartment having ever been. Her furniture looked expensive, but the bed was unmade and homework was strewn across a wide desk in front of windows overlooking the pool. She had many stuffed animals littering a corner where a couple beanbag chairs faced a modest-sized flat screen television mounted on the wall.\n\nVida dropped her school bag by the desk and held out her arms. \"This is where the magic happens. And occasionally my homework.\"\n\n\"Nice. I approve.\" He looked around, taking in a few of the photos of friends and, he assumed, her parents. She looked happy in all of them, so perhaps her lamentations about her parents were a bit overly dramatized.\n\n\"Bathroom here, if you need it,\" she said, waving toward the one other door back by the desk.\n\n\"I'm good, thanks.\" He sensed an awkward pause coming on. He still didn't know her particularly well - not well enough to pick familiar conversation threads. And he was in her room, uncertain what she expected out of it. Was she just that friendly a person, trying to make him feel welcome when he would otherwise be in a funk?\n\n\"Vee?\" A loud voice called out from somewhere downstairs.\n\nVida smiled and held up a finger to him. \"That'd be Leon. Just a sec.\" She walked to her door and yelled out that she was up in her room.\n\nAndy tried to play it cool, but he suddenly felt very conspicuous about being in Vida's bedroom with her college football playing boyfriend on his way up. Just how was that going to look to him? Did he have any idea she'd brought him over? If so, meeting in the living room or somewhere more \"neutral\" seemed like it would have been a better idea.\n\n\"Hey baby,\" Leon said as he stepped through the door. He faltered for a moment as he met eyes with Andy and his grin vanished.\n\nAndy was stunned to realize he knew the guy - Leon Jacobs. Vida hadn't mentioned that her boyfriend had gone to Highland High, two years ahead of them. Andy only vaguely knew the guy, that he was one of the better players on the varsity squad while he still played JV. On top of the awkwardness of being an older guy who commanded respect for his achievements, Leon had an imposing physical presence. He was mixed ethnicity - African American and Caucasian, most likely - and at nearly Sean's height he had a good four inches on Andy. And he was built. His arm and calf muscles bulged with unmistakable definition without being quite as bulky as a linebacker or heavier weight position might have. He looked every bit the part of a hard-hitting safety.\n\n\"Hi,\" Andy said, trying to sound confident.\n\nLeon gave him a quizzical look. \"Do I know you?\"\n\n\"Leon, this is a classmate and friend, Andy Martin,\" Vida said, joining her boyfriend and wrapping her fingers around his forearm.\n\n\"I was playing JV while you were earning all-conference honors,\" Andy said, figuring it might help to play up the respect card.\n\nLeon smiled and nodded. \"Okay, I do remember you now. Little short, but fast and tough as a bulldog.\"\n\nAndy chuckled, humbled that he was remembered even if for being short of stature. \"Yeah. Didn't exactly grow out of it.\"\n\n\"Still playing?\" Leon stepped forward enough to shake hands with an iron grip.\n\n\"Yeah, actually.\"\n\nVida jumped in. \"And that's part of the reason he's here. I told him I'd introduce you, since he'll be playing with you at Southern next year. Thought you could give him some inside tips.\"\n\nLeon looked slightly puzzled and Andy immediately realized Leon would know all the incoming scholarship players, especially within his position group. Embarrassed, he quickly tried to set the record straight. \"Preferred walk-on. No guarantees.\"\n\n\"That's cool,\" Leon said, nodding. \"We actually have quite a bit of turn-over, so there's always a chance for a guy with drive and dedication to make the squad. And us Highland guys have a reputation to uphold. Yeah, sure, I can give you the low-down.\"\n\nVida held up her hands. \"I'll let you two talk shop for a bit while I get something to drink. You want anything?\"\n\nLeon asked for a Gatorade and Andy simply seconded that request. To his surprise and relief, Leon turned out to be a regular guy and settled into a conversation about football at the college level like they'd been best friends for years. Silly as Vida's suggestion might have seemed at first, he found himself learning several little tidbits that put him at greater ease with what to expect come training camp time.\n\nIf there was any downside to warming to Leon so quickly, it was that he no longer held out hope that Vida needed any rescuing from her boyfriend by the likes of him. The guy was nice, personable, polite, and good looking. If this was Vida's standard, he knew he was every bit as out of her league as he'd originally thought back before she joined up with the M Club.\n\nVida returned a few minutes later, drinks in hand, and settled back on her bed while listening to Leon's stories. When there was finally a lull in the conversation, she hopped up and took him by the hand.\n\n\"Honey,\" she said, her sweet voice commanding attention.\n\n\"Yeah, baby?\"\n\n\"I don't believe you've given me a proper hello kiss yet.\"\n\nLeon shook his head and grinned. \"Sorry about that.\"\n\nHe wrapped her in his arms and leaned way down to kiss her. Vida, at over a foot shorter, had to crane her neck back to accept it. She wrapped an arm around his head and locked on, giving him a tongue-filled kiss that was far more than the sort of simple peck one would give in front of decent company. Andy felt slightly uncomfortable at the display. Was she trying to make him uncomfortable, or just establishing beyond any doubt to whom she was attached...in case he was harboring any ideas?\n\nWhen she finally let go, Leon straightened upright. He gave Andy an apologetic glance and tiniest of shrugs.\n\n\"Honey?\"\n\n\"Yeah, baby?\"\n\nVida kicked back one foot and traced her fingertips along Leons sizeable pecs. \"I don't believe I've given you your proper hello blowjob yet.\"\n\nLeon appeared a little surprised at her observation, though on the surface far less so than Andy felt. Never had he felt like such a third wheel and he wondered how best he could excuse himself from the situation. Vida, since getting up from the bed, hadn't so much as glanced his direction.\n\n\"Well, that's okay,\" Leon said, running his hand up and down her side. \"Understandable with having a guest and all.\"\n\n\"Andy doesn't mind,\" Vida said, still refusing to look his direction.\n\nAndy's head whirled. What was she playing at? Did she think she needed to pay him back for her own voyeuristic role back in the library? If so, at least she hadn't tried to hide him in her closet. Could she be a pure exhibitionist who got off on being watched? He'd never heard any rumors about her along that angle, but that didn't mean much. The only thing it didn't feel like was punishment or some deliberate attempt to make him uncomfortable, since she had no motive. None he could think of, anyway.\n\nLeon, over Vida's head, looked his way. Andy gave him a perplexed shrug and, to his surprise, Leon smiled and almost chuckled. Then he, too, shrugged and turned his attention back to the girl in his arms.\n\nAndy was left to his own, standing awkwardly less than ten feet away from the couple as she began to tug at the hem of Leon's shirt. He helped her lift it off, revealing a torso every bit as chiseled as his exposed arms and calves. Andy felt a small pang of jealousy and secret hope that the college football program's trainers might one day have him looking like that. Leon's skin was just a shade darker than Vida's, and glistened around the definition in the diffuse late afternoon sunlight.\n\nOnce his shirt was casually tossed aside, Vida raked her fingers over his chest and down his abs until reaching the waistband of his athletic shorts. There was no hesitation as she tugged both shorts and underwear down until his semi-erect cock popped free, bouncing while she finished undressing him. Leon had nothing to be ashamed of down below, Andy noted. The guy wasn't quite as long as Sean or thick as Andy, but he was a close second on both fronts. Leon, surprisingly, didn't seem the slightest bit embarrassed at having been undressed in front of a near total stranger, or at the state of his cock.\n\nAndy wondered whether this wasn't the first time this sort of thing had happened to him. Maybe he and Vida were exceptionally open when it came to sex, possibly even with other teammates. Was there a whole other side to this football experience he had to look forward to in the fall?\n\nVida knelt at Leon's feet. His cock appeared to have reached full tumescence, pointing up just above the top of her head. She pulled it down with one hand until able to plant a dainty kiss on the tip. Leon sighed and put his hands on his hips, content to let her do her thing.\n\nAndy felt the familiar tightness in his own shorts as his cock responded to the display. Granted, he was only seeing a guy's cock and not Vida's cute, naked body, but this was a blowjob and there was no shame in responding to that. He'd seen plenty of porn where it was a dressed woman, her mouth, and a guy's cock.\n\nVida began licking the length of Leon's cock, handling it like one with considerable experience. Andy felt a pang of jealousy at all the guys who'd been on the receiving end of Vida's attention before, but also hopeful that perhaps he could one day be a beneficiary of that history.\n\nAfter licking him all over, she changed gears and began sucking on Leon's balls - taking one and then the other into her mouth. While doing things to them with her tongue Andy could only imagine, Vida also stroked his shaft. Leon closed his eyes and rocked his hips in time with her motions.",
        "Andy watched in silence, mesmerized. He wondered if she was going to suck him off to completion, and what that would be like. Would he cum on her body, even though she was still fully clothed? Or take it in her mouth? Swallow or spit?\n\nVida appeared to be in no particular hurry to bring her boyfriend to climax, however, as she continuously alternated techniques and used a slow, steady pace. She wrapped her lips entirely around his shaft and sank down on him, taking a fair bit more of his length than Andy would have thought possible. Leon's girth was such that it was clearly a bit of a stretch for her to encompass him fully, but she managed to still look relaxed.\n\nShe worked him over for a bit. As they established a rhythm, she began to hold still while Leon thrust his hips into her, fucking her mouth. Watching such a petite girl handle a man like Leon was as jarring as it was sexy.\n\nAfter a little bit of that action, Vida leaned back until he came out of her mouth. \"Let's take this to the bed,\" she said, grabbing him by the hand and taking him around to the far side of her queen-sized mattress. She nudged him until he climbed on the mattress and laid on his back.\n\nVida, still standing beside him, removed her shirt and shorts. Finally, she glanced up at Andy and smiled as they locked eyes. He knew she was enjoying the hell out of this and, best he could tell, was doing it for his benefit. Her bra came next and he broke eye contact first, his gaze falling to her tiny breasts with those lovely, puffy areolas. Leon reached out and stroked her hip as she shimmied out of her panties, giving both boys a full view.\n\nAndy was still rooted in the same spot as when all this had started. The action was now ever further away, adding a dimension to the detached awkwardness he felt. Was he supposed to move or just stay in spot? What was the protocol for something like this, especially when he was largely being ignored? He'd been thrown into a game for which he had no knowledge of the rules.\n\nVida looked back to Leon and climbed onto the bed and then him. She straddled his crotch and ran her hands across his chest. He reached up and cupped her breasts, then began lightly pinching her nipples. She bent over to give him a long, lusty kiss.\n\nWithout looking Andy's way, Vida extended her hand his direction and curled a come-hither finger. Without acknowledging whether he noticed, she then patted the empty half of the bed beside them. Andy cursed to himself in nervous excitement - she wanted him to watch from up close, but would Leon be okay with another guy mere inches away from them? He had only Vida's judgement to go on and, so far, she seemed to be calling the shots.\n\nHe slowly crossed the room until he stood beside the empty half of the bed. Vida was still leaning over, locked in a kiss, but her hips were grinding into Leon's crotch. Again, without looking up, she patted the bed.\n\nUnable or unwilling to resist, Andy climbed onto the bed, moving slowly as if trying not to wake a sleeping partner. He expected Leon to look up in surprise or annoyance, but he seemed far too invested in playing with Vida's tits and thrusting his hips into hers. Andy could hardly blame him.\n\nVida, hands planted on Leon's pecs, sat upright. She continued to grind her pussy into his erection where it lay on his stomach. Back and forth, she slid along its length, until it glistened with her natural lubrication.\n\n\"Enjoying the show?\" Vida's eyes were dreamy, but back to being solely for her boyfriend. Andy knew the question was for him, though.\n\n\"Yeah.\"\n\nVida gasped at a pinch of her nipple and smiled. \"Show me.\"\n\nFuck. A tiny part of Andy felt guilty for any role he might play in this encounter, given his budding relationship with Lisa. Most of the rest of him, however, was still smarting by the implication of seeing her car at the park and by sheer hormonal lust. He was under Vida's spell and resistance was useless.\n\nHe scooted enough toward the middle of the bed so he could lay back. Lifting his hips, he pulled off his shorts and underwear in one wad and tossed them over the side of the bed. It felt wonderful to finally give his erection some freedom. And, to his relief, he didn't feel self-conscious about exposing himself beside the naked couple. He felt more like a welcome near-participant than an awkward outsider.\n\nThrough all the M Club activities, Andy was plenty comfortable playing with himself in front of an audience. He took his cock in hand, pointed it toward the ceiling, and established a slow stroke. Vida checked him out and in his peripheral vision he caught Leon sneaking a peek.\n\n\"Yup, I'd say he's definitely enjoying the show,\" Vida said, her attention returning to the man beneath her.\n\nWhile Andy watched on, Vida reached for Leon's cock and guided it to her pussy. She had to lift herself up a bit to get it in, but soon she was sinking straight down on that long shaft. Her eyes closed and she let out a long sigh. Finally, she bottomed out.\n\n\"God, I love how you fill me up,\" she said, slowly cracking her eyes open.\n\n\"Anything for you, baby.\"\n\nVida smiled and began to ride him cowgirl, slow bounces up and down. Leon held her by the hips, giving small thrusts in response to her movement. There was a clear comfort and familiarity in their coupling.\n\nAndy could have been jealous. Perhaps some small part of him was. Instead, though, he simply admired their confidence and appreciated their willingness to share with him. Maybe what he and the others had found in the M Club wasn't quite as rare as he'd initially assumed. He found himself stroking in time with their fucking and it took little effort to imagine it was his cock Vida was riding.\n\nAfter a bit, Vida leaned forward to kiss Leon. In doing so, she changed her hip motion from up and down to more of a grinding front to back slide. Leon's hands explored her body, sometimes enveloping her ass, fondling her breasts, or even running through her hair.\n\nAndy was most surprised by their passion for one another. Sure, there was a lust expressed in the sexual act, but the way their looked at one another and exchanged tender touches between more vigorous outbursts...it was special. He knew they really did love one another. He also had trouble picturing his coupling with Lisa or even Denby having quite that same element. What did that say about him? Maybe he was fixated a bit too much on the physical side of dating and relationships.\n\nVida came to a stop and lifted herself off Leon.\n\n\"Leon, down there,\" she said, pointing toward the foot of the bed. He didn't even hesitate to do as told, scooting down and getting to his knees.\n\n\"Andy, over here,\" she said, pointing to the head of her bed between the two pillows. \"And you can sit up.\"\n\nAndy didn't know exactly where this was going, but like Leon he took his orders without question. He glanced over Vida's shoulder to Leon who just gave him a quick smile and shrug.\n\nVida positioned herself between the two of them on her hands and knees. Her head hovered above Andy's cock, while her ass wiggled invitingly in Leon's direction. Andy could hardly believe it, but it appeared she wanted to take them both at the same time. Had they ever done this before? If not, Leon seemed remarkably nonchalant about the arrangement.\n\nAndy watched as Leon shuffled forward. He couldn't see the penetration, but he knew when it happened by the expression on Vida's face. Leon grabbed her hips and began to slowly fuck her doggy style.\n\nAndy pumped his painfully swollen cock a couple times as he watched. Vida made eye contact with him and grinned, then licked her lips in a very suggestive manner.\n\n\"You think I'm gonna suck your cock?\"\n\nAndy wondered how best to answer. Would either get offended if he said the wrong thing?\n\n\"I don't know what to think anymore,\" he said, hedging.\n\nVida chuckled. \"This sort of thing doesn't happen to you every day, then?\"\n\nAndy shook his head. \"No, not really. Disappointing, but...\"\n\nWhen she didn't touch him, Andy kept up a slow stroke. Vida watched, almost mesmerized, but came no closer.\n\n\"What do you think, honey?\" Vida took a quick peek back. \"He's pretty thick. Thicker than you, even. Think I could take him?\"\n\nLeon smiled. \"Baby, I'd never bet against you when it comes to sex.\"\n\nVida turned back to Andy. \"I think that's a yes.\"\n\nAndy gulped. Apparently, the rumors about Vida's sexual history were woefully understated. His imagination could scarcely encompass what was happening and might come next.\n\n\"What do you think, Andy?\" Vida reached out and traced a single fingernail along his inner thigh and then up to the sensitive spot between his hip and pubic bone. He shuddered. \"Should we find out? Maybe teach Lisa a lesson? Or are you going to stay true to her until you know for sure?\"\n\nFuck! If she hadn't said anything and just leaned forward, he'd be getting the most amazing blowjob of his life. Granted, it'd be the first, but he was certain it would be amazing. And part of a threesome? But then she had to bring his conscience into it. What if he had jumped to conclusions about Lisa? Or, even if she was playing with the others, what if she still really was interested in him...just at her own, slower pace? He'd feel guilty about doing this.\n\n\"I...I don't know.\" He felt ashamed to sound so weak, especially in front of Leon. But he was being honest.\n\nVida gave him a sympathetic shrug. \"If you're not sure, then I guess I'd better not. Can't take it back, after all.\"\n\n\"No.\" Andy's cock might still be fully aroused, but the rest of him slumped.\n\n\"But I do want you to show me what you've got, in case there's a next time.\"\n\nThat cheered Andy up. He even caught Leon looking at him, and the guy gave him a quick nod. At their encouragement, he picked up the pace of his stroking. He had to admit, for all the inspiration Lisa and Denby had given him, having Vida watching him from point blank range while she was getting fucked from behind topped it all.\n\nThe three of them went at it for several minutes, only the sounds of skin slapping and sliding, heavy breathing and moaning, to break the silence. Andy knew his climax wasn't far off, but he was reluctant to cum when the others hadn't. He also feared making a mess on her bed or her face.\n\nVida changed things up by having Leon pull out. She laid on her back beside Andy and Leon knelt between her knees and slid back inside. The change in position gave Andy a much better view of the thick cock as it pistoned in and out of that delectable pussy. He was tempted to reach out and play with her nipples, but resisted.\n\nVida was the first to climax, which happened soon after Leon reached down and used a thumb to rub her clit while continuing to pump away. Vida moaned and shuddered, hand grasping Andy's thigh in the process. When the peak passed, Leon slowed his pace to a near stop while she recovered.\n\nVida purred, then hooked her legs around Leon's ass to pull him in deeper. \"You boys getting close?\"\n\n\"Just about there,\" Leon said, resuming his quick pace.\n\n\"Same,\" Andy said.\n\nVida watched Andy's cock for a minute, then said, \"You can cum on my tits, if you want.\"\n\nAndy was a little surprised. A glance at Leon showed complete indifference. Andy shrugged and rose to his knees, positioning himself beside Vida with his erection dangling over her chest.\n\nWhile he stroked faster, his orgasm fast approaching, he felt Vida's hand grab his ass. It seemed an innocent enough gesture until he felt her fingers working their way down between his cheeks until they brushed up against the back of his scrotum. She pressed into him, feeling the very root of his erection, and gave him a wink when he looked down at her in surprise.\n\nHer touch was all it took to push him over, and he pointed his cock right between her tiny breasts. Several squirts of semen splattered across her breastbone and one hard nipple, the milky white fluid especially stark against her darker skin.\n\nLeon came moments later, grunting and thrusting violently into Vida's pussy until finally burying himself as deep as possible. He held her legs wide, pelvis locked to pelvis. Finished, he slowly withdrew, black cock glistening in their shared fluids.\n\n\"Mmm...double dosed,\" Vida said. \"My lucky day.\"\n\n\"That was the sexiest thing I've ever seen,\" Andy said. Having squeezed out the last drops, he sat back on his haunches.\n\nLeon chuckled. \"Pretty much the norm with Vee.\"\n\nVida clearly took that as a compliment. \"Now, since Andy's our guest, he gets right of first refusal in clean up.\"\n\nAndy gave her a puzzled look. \n\nLeon laughed. \"Let me translate. If you want to lick her pussy or tits, you may.\"\n\nAndy blushed furiously at the suggestion. Not that he had anything against licking pussy, but with Leon's semen dripping out of it? No thanks. And licking his own jizz off her tits was almost as unappealing a notion. He thought they were messing with him until he saw Vida's expression.\n\n\"Just offering,\" she said, straight-faced. \"But if that's over the line on the whole Lisa front, that's cool.\"\n\n\"Uh, yeah, probably,\" Andy said, taking the offered out. \n\nVida got an evil glint in her eye. \"Or you could clean up Leon.\"\n\nEven Leon raised his eyebrows at that, but said nothing before Andy blurted, \"Thanks, but I'll pass. Again.\"\n\nVida shrugged. \"Suit yourself. Honey, it's all yours.\"\n\nLeon hesitated and something unspoken passed between the couple. Andy knew some guys didn't mind that sort of thing, but to have Vida put him on the spot in the presence of a guest seemed a bit much.\n\nVida sighed. \"Andy, I think Leon needs some sort of assurance that you will keep all of this to yourself. He's a little uptight about his image with his teammates.\"\n\nLeon gave her a warning look, but then turned to Andy.\n\n\"Lips are sealed,\" Andy said. \"Swear.\"\n\nLeon looked back and forth between the two, then seemed resigned and knelt between Vida's legs. Without hesitation, he licked her pussy clean from bottom to top. He took his time and it was clear Vida was getting a thrill out of it when he worked her clit over. Perhaps in payback, however, he broke off contact before she could really get going.\n\nThen Andy got a real shock. Leon licked his way up Vida's tummy, pausing to probe her belly button, and continued up until reaching the puddle of semen across her breasts. Again, without hesitation or sign of revulsion, he licked Andy's cum clean off her body, finishing with her decorated nipple.\n\nOkay, that definitely didn't need to get back to the football team. Was the guy bi? He hadn't shown any interest in Andy, but it seemed odd for a guy to be comfortable with that otherwise. Maybe the two of them had simply gone to such wild places sexually that even this was mundane.\n\nVida had offered to let Andy \"clean up\" Leon, though. It did seem rather suggestive, perhaps even fishing for curiosity. The notion made Andy a little uncomfortable, though not revolted. Maybe Vida just had some specific kinks, and by all appearances it was she who called most of the shots in the relationship.\n\nLeon, finished, gave Vida a kiss long enough to make Andy start feeling like that third wheel again. When they broke it off, he half expected her to lick Leon clean, but instead she got off the bed and headed for her bathroom.\n\n\"Back in a jiff, boys,\" she said, her ass wiggling in her wake.\n\nWhen the door closed, Leon rose to fetch a tissue and wipe himself clean. Andy decided this was probably a good time to get dressed. Even if they wanted to play more, he needed to get home for dinner.\n\nAndy lowered his voice and said, \"Uh, so, just to be clear, I had no idea Vida intended any of this. I mean, we're kinda acquaintances and all, but...\"\n\n\"I know,\" Leon said, also in a soft voice. \"And I also know I have absolutely nothing to worry about. Not a thing.\"\n\nAndy wasn't sure if that was a subtle threat, or complete and utter confidence and comfort with Vida and their relationship. Perhaps a bit of both. Andy respected it either way. He nodded.\n\nLeon pulled on his shirt, leaving his cock conspicuously exposed like some sort of display of dominance. \"Thing is, there aren't many girls like Vida. If you ever find one, you just hold on for dear life and remember the two most important words: Yes and baby.\"\n\nAndy nodded. \"Good advice.\"\n\nLeon nodded back and then finished dressing. Vida came out of the bathroom, still naked, and took Andy by the arm.\n\n\"Be right back,\" she said to Leon. \"Gonna see our guest out.\"\n\n\"Sure thing, baby.\"\n\nAndy chuckled inwardly as he let Vida lead him back downstairs to the side door. Still holding him by the arm, she gave him a surprisingly shy smile.\n\n\"I hope I didn't shock the hell out of you,\" she said.\n\nAndy shrugged. \"Maybe a little. I'll get over it.\"\n\n\"I'll bet. Honestly, I didn't really plan that out. I just kinda, well, went with the moment.\"\n\n\"Fair enough.\"\n\n\"And, I was serious about what I said. I'd love to blow you. Get tag-teamed by you two. If, you know, things don't work out so well on the Lisa front.\" She held up her hand. \"And don't get me wrong. I hope that works out. For goodness sake, don't fuck that up just on the chance of getting a little action with me and Leon. Just because I was in a mood today doesn't guarantee it'll ever happen again.\"\n\nAndy doubted it was just a one-time thing with her, but nodded in agreement. He got the sentiment that she didn't want to feel responsible for getting in the way of anyone else's relationship.\n\n\"Friday?\" he said.\n\n\"M Club? Wouldn't miss it.\" She positively glowed with enthusiasm.\n\nAndy lowered his voice. \"Have you told Leon about it yet?\"\n\nShe shook her head. \"No. Why? Can't wait to see his cock again?\"\n\nAndy blushed and she burst out laughing at his reaction. \"Relax,\" she said. \"Just messing with you. I probably will, just haven't decided when yet. He's too busy to make most of our meetings, anyway.\"\n\n\"Okay, see ya.\" \n\n\"Tomorrow.\"\n\nWhen he reached his car, Andy looked back and was slightly surprised to see Vida standing outside the door where anyone driving by might be able to see her naked body. Granted, she'd probably be able to hear them coming and slip back in, but still. He waved and got one in return before she disappeared.\n\nYes, a girl like Vida would be amazing. But would he be able to handle someone that bold, that open? He tried to put himself in Leon's shoes - coming over to his girlfriend's house only to find another dude there, and then being expected to fuck her while the stranger watched. Maybe it took a special kind of guy to handle a special kind of girl."
    ],
    "authorname": "WatchingCloud",
    "tags": [
        "masturbation",
        "blowjob",
        "threesome",
        "voyeur",
        "bedroom",
        "cream pie",
        "clean up",
        "bicurious",
        "cum shot",
        "submissive"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/m-club-ch-15"
}