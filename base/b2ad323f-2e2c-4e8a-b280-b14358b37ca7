{
    "title": "Bandit - The Prequel",
    "pages": [
        "Saddar City, Iraq \n\nMay, 2003 \n\nI remember the flash of light to the left side of our line, but I never heard a sound. Strange isn't it? How you can remember somethings about an event, but other memories are blacked out. I woke up the first time in a Blackhawk with a medic hovering over me yelling into my ear that I was going to be okay. \n\n\"Just hang on man. Hang the fuck on.\" \n\nThose words were prophetic in so many ways over the next thirteen years that I still shake my head when I have that memory. \n\nJust hang on man. Hang the fuck on. \n\nFebruary 2014 \n\n\"Thank you, Reverend.\" I said as I hoisted my backpack to my shoulders and walked out of the church doors into the early morning light. \n\n\"You're welcome Sam. Will we see you tonight?\" he asked as I turned to leave. \n\n\"Possibly. I'm not sure about anything these days.\" I replied. \n\n\"Sam, look, I know this is hard. I really do understand. I wasn't always a minister; forty-three years ago, I was in the Central Highlands of Viet Nam.\" \n\n\"Really?\" \n\n\"Trust me Brother, you're not the first veteran I've dealt with. You have options, I can help if you let me.\" \n\n\"We'll see Preacher.\" I said, looking down at the ground. \n\n\"I'll be here Sam. Just let me know.\" \n\n\"Yeah.\" I said, looking up at the grey skies and wondering when the rain would start as I began to walk toward downtown Richmond. I thought that with any luck I could at least panhandle enough money to buy lunch and a fifth of whiskey before I wandered back here tonight to sleep off another drunk. \n\nI was ashamed at how far I had fallen in the two years since my retirement form the Army. Three years ago, I had been a Master Sergeant, albeit a drunken mess of a Master Sergeant but I was still able to do my job. I had a wife and two children that I loved more than I loved life itself, unfortunately I loved a guy by the name of Jim Beam too and that ended my career and my marriage. \n\nI lost my wife and children first. Shelby left me and took the kids with her to move back to her parent's home in Kansas. She left me a letter that basically said that she couldn't handle watching the man that she loved kill himself slowly by drinking his life away. She told me that she would rather take the kids across the country and take the heat for breaking up our family than to let them see a man they should idolize drink himself into a mindless oblivion each night. \n\nThen the Army, more specifically, the anal-retentive Lieutenant Colonel we got as a new Battalion Commander, stripped me of the only thing I had left when I showed up for work five minutes late for a PT session. Okay, so I blew a .06 when they sent me for a Fit for Duty physical. I had been far more drunk on numerous runs over the years. They were decent enough to award me a Meritorious Service Medal when I \"retired\". \n\nFuck 'em. I could manage it on my own. \n\nBy two in the afternoon I had managed to collect about twenty dollars in change and small bills. The weight of the coins in my jacket pocket filled me with a sense of shame but I had to eat. According to the terms of my divorce, Shelby was getting almost all my retirement check for spousal and child support. I was left with crumbs and handouts and she was reaping the benefits and attention of being \"that poor woman with two children whose husband went crazy after his last tour in Iraq\". \n\nI was bitter, I was angry, I was living in shelters and I had no hope of my situation improving. It had been over two years since I had even spoken to my son or daughter. Each time I tried to call, they were \"busy\" or \"asleep\" or I received a litany of other lame ass excuses from Shelby and her parents. So much of \"until death us do part\". Then again, I was already dead; I just didn't have the enough sense to lay down. \n\nI wandered aimlessly around Richmond for an hour or so before I found myself standing by the James River at the Robert E. Lee Memorial Bridge. For lack of anything better to do, I started walking across it heading toward Belle Island. I had gotten halfway across when I stopped and began looking down at the water and thought to myself that all I had to do was jump and all this shit would end. The pack on my back would drag me under and the problems and pain would end. It was that simple I thought as I placed my right foot on the bottom of the safety railing. \n\n\"Hi.\" I heard a voice say quietly on my right side. \n\n\"Hey.\" I replied, not even bothering to look up. \n\n\"That water looks kinda cold.\" the voice said. \n\n\"Yeah.\" I replied, looking at the ice on the bank of the river. \n\n\"So, whatcha thinking about?\" the voice asked. \n\n\"I have no fucking idea.\" I replied honestly, looking up to see a Richmond police officer straddling a bicycle. \n\n\"How long were you with the 10<sup>th</sup> Mountain?\" he asked, nodding at the division patch on my shoulder as he slid off the bike and dropped the kickstand. \n\n\"Four years.\" I said, suddenly feeling extremely drained. \n\n\"I was a Captain in the Marine Corps.\" he said, pausing before he added, \"Military Police. You?\" \n\n\"Master Sergeant; Infantry.\" \n\nGrabbing his bike, he lifted the kickstand and began to walk further down the bridge. He glanced back over his shoulder looking at me and asked, \"You coming, or what?\" \n\n\"Yeah.\" I said, glancing down at the water and shifting the weight on my back I began to walk behind him listening to him talk about nothing. He stopped when I finally grew tired of it and asked him if he thought I was a jumper. \n\n\"Nah, I knew you were. That's why I stopped and started talking to you.\" \n\n\"Why?\" I asked. \n\n\"I'm sorry, what is your name?\" he asked me, holding out his hand. \n\n\"Sam, Sam Williams.\" I responded, as I offered mine as well. \n\n\"David Jensen. Nice to meet you Sam.\" \n\n\"Nice to meet you too. Now, why?\" I asked again. \n\n\"Because you weren't going to be number twenty-two. At least not on my watch; which ended thirty minutes ago by the way.\" he said with such conviction that it rocked me back on my heels. \n\nI stood there in stunned silence with David staring at me with a determined look on his face. He had mentioned the magic number for any veteran of Iraq or Afghanistan. Twenty-two; the daily number of veteran suicides across the US. Was it so obvious to a total stranger that I looked like I had reached the end of the line? \n\n\"Why?\" I asked again. \n\n\"Because I can't fix the whole world Sam. All I can do is fix little pieces of mine. I help you out and you pay it forward when you see someone so down and out that they look like they have reached the end. In time, they will help someone out. That's how you fix the world, one person at a time, but first we need to get you to a better place than you are right now. Where are you living?\" \n\n\"Shelters mostly. If they are full I find an overpass to crawl under.\" \n\n\"Don't freak out on me. I'm going to call a friend to come by and pick us up. He may or may not be driving an unmarked car. I don't know if he is on shift or not, so just relax. I'm taking you to a group home for vets. The guy that runs it is in my VA support group so I'm almost positive that they can find you a place to stay for a while.\" he said as he pulled his phone out of his pocket. \n\n\"Um.\" I began. \n\n\"Sam, I swear, I'm not even going to run your name to check for warrants. I just want to get you some place safe tonight. We can deal with the rest tomorrow.\" \n\n\"Again, why?\" \n\n\"Like I said, you won't be number twenty-two. At least not today.\" \n\n\"This guy isn't a Bible thumper, is he?\" \n\n\"Who? Tony? He has a strong faith in God but no, he isn't a Bible thumper. He and some of the guys have a morning prayer meeting, most of them don't attend; it's up to you.\" he answered. \n\nWe stood there talking while we waited for his friend to show up. I learned that he had been on the force there for three years, he had graduated from Purdue and had gone straight into the Marines after college. He was married to his high school sweetheart and they had a son who was one. He genuinely loved being a cop and missed being a Marine officer. \n\n\"You remind me a lot of a friend of mine, Bobby.\" \n\n\"Army buddy?\" he responded. \n\n\"Kind of; we were in high school together before the Army. These days he's the county sheriff where we grew up.\" I said, remembering the good times that Bobby and I had shared as kids. God, he would be so ashamed of me now, I thought to myself. \n\n\"Where is that?\" \n\n\"Nice try Dude.\" I said, smiling at him as a black Dodge slowed to a stop beside us. \n\nTwenty minutes later I walked through the front door of the shelter that would, eventually turn my life around. Calling it a shelter is a misnomer; it eventually became my home and it was also a small old-fashioned motel with 10 rooms total. It was built in the 1940s and had been remodeled; recently from the looks of things. I was given a room that had a full-sized bed, a dresser, closet, a small fridge, a small TV that picked up the local stations, a couple of chairs and a small bathroom with a shower. The lobby served as a common area and dining room for us. \n\nTony explained the house rules, which were very simple. Show respect, help each other, no drugs and go to your counselling meetings. The last was made even easier because he had a shuttle van that ran to the VA hospital Monday through Friday. When I asked where the money came for all of this, Tony and David just looked at one another and smiled; then Tony said, \"God has a wicked sense of humor.\" \n\n\"No. Seriously, where?\" \n\n\"I opened about three years ago. Started small you know? I didn't have much so I could only help one or two vets at a time. God called me to do this, so I was doing what He wanted me to do. One of the guys I helped cleaned up, sobered up and straightened his life out to the point that he left with a decent chance of never coming back. On a whim one day, he bought a lottery ticket after work.\" \n\n\"No shit?\" \n\n\"Like I said, God has a wicked sense of humor.\" \n\n\"So where is he now?\" \n\n\"When I spoke to him yesterday, he was in Alaska on a cruise.\" \n\n\"So now what?\" I asked. \n\n\"Get a good night's sleep, wake up, eat breakfast and we run you to the hospital tomorrow to start that process.\" David stated. \n\n\"Awesome. I hate the VA.\" I responded, before I added, \"And what is this we stuff?\" \n\n\"I volunteer here a couple of times each month. Tomorrow is my turn to drive the van.\" \n\n\"Oh.\" I responded as they turned and walked toward the door. \n\n\"Hey guys.\" I said before they could leave, \"Thank you both, I appreciate it.\" \n\n\"Not a problem Brother. Try and get some sleep.\" Tony said, smiling as he closed the door. \n\nThe next morning found me sitting in a waiting room, thoroughly depressed by the sea of broken humanity around me and filling out government form after government form that asked the same stupid fucking questions. An hour into the process I stood up and stretched then sighed and sat back down. David looked at me and laughed, then asked me if I needed to go for a walk or something. \n\n\"Or something? If it weren't ten in the morning I would dive into a bottle of Jim Beam and try to drown myself. God Almighty this place is depressing as fuck!\" \n\n\"Yeah, I know, I've dealt with it for so long that I cringe at the mention of it.\" \n\n\"Yeah. The one in North Carolina is so bad that I only went there three times and each time I felt worse than I did when I went in. It is almost like they intentionally try to break you more, so you won't come back.\" \n\n\"What I would love to do is get a law passed that say the members of Congress and their families are required to use the VA system. We would see some changes then.\" \n\n\"Hell naw!\" I said laughing, \"It's bad enough that those asshats get involved in this. I can't imagine what a goat screw it would turn into if they showed up here. It would start a riot!\" \n\nIt wasn't as bad as I thought it would be. It only took the VA four months to deny my claim and another four months to decide that my appeal was denied as well. The second appeal took another six but that one got me classified as 80% disabled. I could have appealed that, but I didn't have the fight in me. Besides, the disability was retroactive from the day I filed my first claim. I had fourteen months of disability pay going into my old credit union account. \n\nHopefully it would be enough to let me buy an old beater to get back and forth to my part time job in. It wasn't much. I worked in the yard of a small hardware store, stocking and pulling lumber orders for customers. The owner paid me weekly and it gave me enough money that I could go to dinner and rent a movie every now and then. The disability would be great because at least now I could afford a cheap apartment instead of taking up a bed at the shelter. It was time to move on and let Tony and David help some other guy out. \n\n\"I need to order some checks and get a new ATM card.\" I said to the teller. \n\n\"If you can just sign in sir, a Customer Service Rep will be with you in a few minutes.\" \n\nI was at the credit union to make sure everything was set up correctly when my disability check finally went into my account. I glanced nervously at my watch because I only had two hours to get this taken care of and make it back to the shelter in order to make my A.A. meeting. I was getting my One Year award tonight and I was really looking forward to it. \n\nTwenty minutes later, I got the biggest shock of my life when the CSR slid my new ATM card across her desk and asked me if I wanted to transfer anything into savings because the interest rate was much higher there. \n\n\"Really? How much interest could a couple of dollars accrue?\" \n\n\"Well, in your case, quite a bit Mister Williams. Do you need to see your current balance?\" she asked with a perplexed look on her face. \n\n\"Please?\" I asked, beginning to wonder what she was looking at. \n\nShe took a sticky note and scribbled a figure on it then handed it to me. $132,359.29 \n\n\"There has to be a mistake.\" I said, turning pale as I looked down at the note. \n\n\"No Sir. That's your balance.\" she replied confidently. \n\n\"Have there been any garnishments on a court order?\" \n\n\"Child support or something like that?\" \n\n\"Yes.\" \n\n\"None that I can see, and it looks like this all came from the Department of Defense, they would have garnished it there before they released anything into your account.\" \n\n\"Transfer all but two thousand into my Savings. I need to make a phone call or two.\" I said, hoping that what I thought was happening wasn't or hadn't happened. \n\nI hopped on the bus and headed back to the shelter. Walking into the office I found Tony and explained what had happened at the credit union and then asked to borrow his cell phone. I had a burner phone for emergencies, but I didn't want Shelby having that number just yet. \n\nI was honestly shocked when Shelby answered. \n\n\"Hello?\" \n\n\"Shelby?\" \n\n\"Yes?\" \n\n\"It's me, Sam.\" \n\n\"Sam?\" \n\n\"Yeah, how are you?\" I asked. \n\n\"I'm doing okay, how are you? \n\n\"Alive. Better. Sober. I need to talk to you.\" \n\n\"You drop off the face of the Earth for three years and now you need to talk to me?\" \n\n\"Why aren't you taking the child support payments?\" \n\n\"I went back to court two years ago, after you disappeared, and asked them for full custody. The court granted it to me on the condition that you no longer had to pay support because you were obviously mentally incapable of supporting yourself, let alone your children. I gave up the money but at least I can protect our children from seeing the homeless wreck their father has become.\" she said bitterly. \n\n\"So much for until Death us do part.\" \n\n\"You did die Sam. You were just too damn drunk to lay down.\" \n\n\"I've been sober, for a year now.\" I said softly and remembering my thoughts on this subject from a year or so ago. \n\n\"Really?\" \n\n\"Yes.\" I said, looking down at my chip and turning it over in the palm of my hand. \n\n\"I've been remarried for eighteen months.\" she retorted in a sarcastic tone. \n\n\"I'm not doing this Shelby, not tonight. I'm not going to get into a fight. I'll call you later and we can talk but at least I know why I my checking account is where it is. Goodbye.\" \n\n\"Goodbye Sam. Call again when you can't talk as long.\" she said bitterly as she disconnected the call. \n\nI handed Tony his phone and stood there silently for a moment collecting my thoughts. I had learned a lot over the past year about disappointment and failure and I knew better than to react to news like this without rationally thinking about what the ramifications would be. Then I cut loose with a thirty second string of obscenities, blasphemies and profanity. Tony waited for a good five seconds after I finished before he finally spoke. \n\n\"Anything I can do?\" he asked, with a sincere tone of concern in his voice. \n\n\"No.\" I said, still seething. \n\n\"At least now you know.\" \n\n\"Yeah, now I know.\" \n\n\"You're not going to do anything stupid when I leave are you?\" \n\n\"You mean get drunk or do a Swan Dive off a bridge?\" \n\n\"Or both.\" he said as his eyes searched my face. \n\n\"Nah, I'm just going to sit here and cuss a lot.\" \n\n\"Let's go for a walk. It will help clear your head. Besides, I have some news for you.\" \n\n\"I'm not sure me being in public is a good idea man.\" \n\n\"Come on Sam, I'll buy you a drink.\" he said, grinning at me. \n\n\"So long as it's a Sprite.\" \n\n\"Oh Lord! You're going for the clear stuff right off the bat? That is never a good sign.\" \n\n\"Be careful! I might even mix it up and switch to Dr. Pepper later.\" I said with a grin. \n\n\"God help us!\" \n\nThe news was this. Apparently, way back when, on the day that I met David and this odyssey of recovery had begun for me, I had screwed up. I mentioned that one of my oldest friends was a sheriff and I had given David his name. David, being a cop, had started doing some research and when he found out where I was born he put two and two together and made a phone call to Bobby. Not only that, he had been keeping Bobby informed on my progress. I was already pissed off; when Tony dropped this on my lap, I exploded. \n\n\"Why the fuck would he do that?\" I asked, stopping at the door to the office and turning on Tony so abruptly that he took a step back. \n\n\"Sam, relax. Look, he and I both knew that you would eventually need more support and Bobby and his wife are more than willing to help you once you leave. You even mentioned last month that you were moving back to your hometown. Why not have a support system in place that knew you were coming?\" \n\n\"That's for me to decide, damn it!\" \n\n\"You really are a stupid bastard sometimes! Has anyone ever told you that?\" Sam responded angrily, stopping me in my tracks and leaving me staring at him for calling me a stupid bastard. I had known him for over a year and the strongest word I had ever heard him use was \"fudge\". \n\n\"Um.\" \n\n\"You can't do this alone Sam. You know that. Just stop and look at how far you've come. A year ago, the news that you got today would have set off a round of binge drinking that would have left you comatose and tonight you took it standing up and moving forward. Why? Because you knew you weren't alone.\" \n\n\"I can't do anything about it.\" I offered weakly. \n\n\"No. You can't do anything about it right away. In a year or two maybe, it might take longer because you are going to have to prove to the courts that you can care for your children and that you have turned your life around, but that will take time.\" \n\n\"True.\" I mumbled, stunned by the matter of fact tone that Tony was taking with me. He had once again gone from friend to mentor at the drop of a hat, just when I needed it the most. \n\n\"Good God Sam. You have me, you have David, you have Sam and his wife on your side. Stop and think about how that will play out in court one day. You just have to be patient a little longer. You can't fix someone as broken as you were in a matter of weeks or months and the courts know that. And besides, I have something else to tell you.\" ",
        "\"Oh, joy and fucking happiness! What? The IRS is coming after me because I owe back taxes on income I was too drunk and screwed up to file on?\" \n\n\"Oh fudge! I hadn't thought about that! You need to get that fixed fast. But no, I think I found a program for you.\" \n\n\"What kind of program?\" \n\n\"What do you know about service dogs?\" he asked me. \n\n\"Nothing. Why?\" \n\nBy the time I dealt with the IRS my savings account was twenty-two thousand dollars lighter. The disability back payment covered that, and I laughed thinking that Uncle Sam had basically spent thousands of dollars to put my checking account right back to where it was when he started. That still left me with more money than I thought I would ever have at this point in my life. \n\nI was actually starting to enjoy my life again and the look on the other residents faces when I pulled into the parking lot driving a beat-up Jeep CJ-7 that was blowing more exhaust through the holes in the floor than it was out of the tailpipe was hilarious. \n\n\"It's a fixer upper.\" I said as I shut it off and listened to it cough and sputter for a few seconds before it finally died. \n\n\"Dude, how much did they pay you to take it off their hands?\" Tony asked. \n\n\"About treefiddy.\" I said with a laugh. \n\n\"It has potential.\" \n\n\"Don't we all?\" \n\n\"Yep, but Dude, you really need to ditch the 8-track and maybe upgrade to a cassette player instead.\" Tony said with a grin. \n\n\"No damn way.\" I said, laughing at him and holding up the Electric Light Orchestra's 'Out of the Blue' eight track cartridge the previous owner had given me. \n\n\"God help us!\" he replied as I popped it in and 'Turn to Stone' began blaring out of the speakers. \n\nMy trip to the service dog organization was almost a disaster. I was becoming really stressed out at the thought of moving back home. I had spoken to Bobby numerous times over the last month that I was in Richmond and I was finally convinced that he was willing to help without it becoming a drama-fest of sympathy. I had even driven up twice and stayed with him and Heather, to look at houses in the area and I was waiting on an offer on a cabin I had liked to be accepted. \n\nTony was tied up the day I went to look at the dogs, so David took a day off work to go there with me. I had done their assessment online and it turned out that I was a perfect fit for a dog. I never bothered to ask how many strings got pulled to jump me to the head of the line but I'm pretty sure it was more than one. I met Kurt, the director in his office and he explained what the organization did and what was expected of me if I did find a good fit with a dog here. \n\n\"Mr. Williams? Have you ever seen or read Harry Potter?\" Kurt asked as we walked through the facility and entered the training yard. \n\n\"Yes.\" I answered, slightly taken aback by the question and sadly remembering all the times I had read the first of those books to my children before they went to bed. \n\n\"Dogs are like wands; they chose the human. Keep that in mind and don't get frustrated if you don't seem to bond with one right away. These animals are chosen for their intelligence and their ability to adapt to their handlers and surroundings.\" \n\n\"Got it. Thanks for the heads up.\" I said, looking over at David and chuckling. \n\nThe dog choses the human? I didn't know what he was on, but I wanted fifty-five gallons of it in a drum with a four-foot long straw. \n\nThere were three German Shepherds, a Boxer and a Greyhound who was a rescued racing dog but there was something missing. I couldn't put my finger on it but there was a chemistry that just wasn't there. It was like I would have had to settle for one of them and I didn't like that feeling. I think they sensed it because none of them seemed interested in me either. I asked the director if these were all the dogs that they had ready and he smiled sadly and nodded his head. \n\nThen I heard a sharp bark behind me. \n\nTurning around I saw a handsome, German Shepherd in a kennel by himself, with his head cocked to the right. He had a black mask across both eyes and a black saddle; the rest of his fur was a deep dark brown. As I looked at him he stood up then barked a second time and lifted his paw up to the chain link door that separated us; cocking his head to the left he sat down and barked again. \n\n\"Who is that?\" I asked, almost afraid that speaking would somehow ruin the moment. \n\n\"Bandit.\" Kurt whispered. \n\n\"Is he ready?\" \n\n\"We thought he was, but he was returned last week.\" \n\n\"Why?\" \n\n\"The recipient said that he didn't feel it was a good match after he got him home. The poor guy has been depressed since he got back. This is the first sign of life that I've seen in him in days.\" \n\n\"Can I see him? I sort of understand what it feels like to be abandoned.\" \n\n\"Sure, let me grab a lead.\" \n\n\"The wand choses the wizard Mr. Potter.\" David whispered with awe, in a passable English accent behind me. \n\n\"Indeed Mr. Ollivander, indeed it does.\" I said, watching as the director led Bandit over to me. \n\n\"Have you ever been around or owned a German Shepherd Sam?\" Kurt asked me as I sat on the ground beside Bandit. \n\n\"No, not really, I've worked with them in Afghanistan, but this is totally different.\" \n\n\"At least you understand that. He isn't a working dog; he won't find a bomb for you but if you listen to him, he can keep you from blowing up or melting down.\" \n\n\"That would be nice.\" I said, scratching Bandit's ears. \n\nWe went through basic training together; well, service dog basic training anyway. It took about six weeks of on-site training to learn each other's idiosyncrasies. Each day that I left the facility I felt a little better about it and each morning I woke up and rushed to get back and each day Bandit seemed happier to see me show up. The best part came at during the third week when I was allowed to take Bandit home with me every night and bring him back the next day. \n\nOn the first Saturday in June, I loaded the few boxes of clothes that I had into my Jeep to begin my trek back home. Bandit was sitting in the passenger seat with his yellow vest on. Underneath the Service Dog patch were 3<sup>rd</sup> and 4<sup>th</sup> Infantry Division patches, a 10<sup>th</sup> Mountain Division patch and a military style name tape with BANDIT in black upper-case letters. His tongue was hanging out the side of his muzzle as he panted in the early morning heat and humidity, and he was fidgeting with excitement. \n\nI had gotten a call from Heather about an hour ago telling me that she had met the furniture delivery guys and they were in the process of setting up the bedroom and living room. She wanted to know what to do with all of my \"military stuff\" that Shelby had shipped to me the week before. \n\n\"Just shove it in the back bedroom. I'll deal with it later.\" I told her. \n\n\"How did you get her to send it to you?\" she asked. \n\n\"I paid her three times what it cost her to ship it.\" \n\n\"I'll see you in a few hours Sweetie.\" \n\n\"Thank you, Heather. I owe you big time for this.\" \n\n\"No, you don't.\" she said laughing, then adding, \"But I do like dark chocolate and Tulips.\" \n\n\"Noted, just don't tell your husband about it; you know how he gets.\" \n\n\"It'll be our little secret Baby.\" she whispered seductively before she laughed and disconnected the call. \n\nAfter shaking hands with Tony and David I climbed behind the wheel of the Jeep and pulled up to the highway. Just before I let the clutch out I looked over at Bandit, who was now sitting up and wagging his tail excitedly; looking at me, he barked as if to say, \"Let's get this circus on the road.\" \n\n\"What is it boy? Are you ready to start something new? Huh?\" I asked as he cocked his head at the sound of my voice, then added \"Are you?\" \n\nHe barked loudly and lifted his paw as if he was pointing down the road. \n\n\"Well, let's do this.\" I said, smiling and turning left onto the road. \n\nOn that first night, in my new home, I realized that I was finally beginning to finally find some peace in my life. Bandit lifted his head when I stopped scratching and perking up his ears he looked at me. \n\n\"Do you think we can get through this together?\" I asked as I sat on the couch, slowly petting his head again. He looked up at me not understanding a single word that I had said, but responding to my voice, he inched a little closer to me and laid his head back down on my lap. \n\n\"Me too buddy. Me too.\" \n\nAs always, I hope you liked it. \n\nYDW \n\n***** \n\nAuthor's Note: Now you have the backstory; or a little of it anyway. Yes, I realize it could have been longer and I could have delved into the mind of someone who has PTSD further. I simply wanted to touch on a few of the many struggles numerous veterans like Sam have to overcome in order to function in society. Alcoholism, drug dependency, divorce and homelessness are but a few. \n\nA few years ago, I saw a political cartoon that broke my heart because a bearded, disheveled veteran in a cardboard box said, \"In 2004 people would cross the street to shake my hand. Now they cross it to get away from the crazy homeless guy.\" \n\nI received so many kind reviews and emails on Bandit asking so many questions that I felt the need to add to the story. \n\nLet me address a few of the questions. \n\nDid you think that Bandit would get the reception it has gotten on Literotica? \n\nNo and thank you all for the amazing amount of love you have shown. \n\nAre you a veteran? \n\nYes, and I do not miss the military in the least. But, God help me, I miss the men and women I got to work with. \n\nIs Bandit an autobiography? \n\nNo. I don't own a service dog; I never have. But I am amazed by the dogs that I do know and the positive impacts they've had on my friend's lives. \n\nDo you really think an erotic story site is the proper venue to bring attention to Combat Related PTSD? \n\nThere are tens of thousands of veterans in the United States with CRPTSD. I'm not the first to write a story on Literotica about it and I probably won't be the last. I got extremely lucky when Bandit got this much exposure because it gave, and still gives, the victims and survivors a voice; or at least I hope it does. \n\nTwenty-two veterans a day commit suicide in the US alone, and that is twenty-two too many. This story has made people think, laugh, cry and apparently, have a little hope. People seem to think that Sam and Misti are the central characters: that makes me smile. How many of you would have read this far if it weren't for Bandit? \n\nIs the story complete or is there more in the works? \n\nThere is more in the works. I have the epilogue planned out and about 20% written. Spoiler Alert: It will probably break a few hearts and cause a few tears; but, that's life."
    ],
    "authorname": "YouDidWhut",
    "tags": [
        "ptsd",
        "k9",
        "service dog",
        "military"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/bandit-the-prequel"
}