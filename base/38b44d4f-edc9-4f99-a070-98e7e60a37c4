{
    "title": "A Succubus Awakens Ch. 03",
    "pages": [
        "Succubi are known most commonly for their seductive abilities. And it is true their ability to entice men is not exaggerated. However, it is a mistake to believe oneself immune to their abilities simply by resisting their charm. It is a lack of focus that lets them in. Seduction is indeed the strategy that comes most easily to them, but anything that shocks us, distracts us, or otherwise shakes our conviction will do. Do not count yourself among the many who have resisted a succubus' temptations, only to find themselves instead facing their wrath.\n\n<p align=\"right\">-Sir Arthur Thompson, The Demonic Archive</p>\n\n\"I wish you would put some clothes on.\"\n\n\"No you don't.\"\n\nGwen sat on the arm of the sofa, legs crossed. She punctuated the statement with a fake yawn. Making it a point to stretch and arch her back as seductively as she could manage. It had been seven days since Amy had hypothesized she was a succubus, and there was no denying it now. A week's worth of changes had morphed her diminutive frame into the lithe, nubile physique of a nymph. Most of her old clothes no longer fit her, so she'd replaced them with garments better suited to her new, erotic body. Now, she wore only a cropped tee that hung loosely over her perky breasts, revealing her toned midsection, and a pair of cheeky red panties, frilled with lace that accentuated the heart shaped curves of her butt.\n\nShe opened one eye to find Amy watching intently with flushed cheeks. Gwen flashed her a wry smile, and punctuated it by sending a spark of pleasure across their connection. Gwen felt Amy's own faint arousal echo back in spite of her claim. The link between them had grown stronger over the past week. It felt like a natural part of their relationship now, as if it had always been there. Gwen could sense Amy's feelings and sensations, and share her own. True to her word, she never used it to control Amy. That first night of discovery, she'd wielded the connection like a leash. Now though, she mostly ignored it. It was just an open door in the back of her mind. Connecting them.\n\nAmy attempted to stroll past her to the kitchen, but Gwen caught her wrist. Her grip was soft and loose. Amy could easily pull away if she wanted. Instead, as if she knew this was coming, she stopped and looked down. Gwen pouted up at her.\n\n\"Breakfast?\"\n\nAmy rolled her eyes, but she bent over, brushing a dangling lock of hair behind her ear as she leaned in for a kiss. Gwen's grip slid to Amy's hand and their fingers intertwined as Amy kissed her. A warm glow filled the connection. Gwen breathed in Amy's essence. She'd never grow tired of its sweet taste. As her powers developed she found more depth in the flavor. Subtle notes of something that rounded out its profile and always left her with a shifting aftertaste. She suspected they were Amy's emotions, or parts of her personality? Maybe the sweetness was her innocence. That seemed like the kind of thing a succubus would find sweet.\n\nAmy sealed the kiss with a firm press and pulled away. Gwen tried to follow until she teetered on the edge of her seat and relented.\n\n\"Can I have my breakfast now?\"\n\n\"Be my guest.\"\n\nGwen watched Amy as she busied herself making coffee. Her felt pajamas bunched around her thighs and Gwen could easily make out the shape of her buxom rear-end. She licked her lips as she imagined her hands gliding along those curves. Squeezing handfuls of the soft flesh. Looking up at Amy as she sank to her knees, and buried her face between those soft thighs.\n\nHer fantasies had grown more lewd lately. Often, they involved Amy taking charge. Based on legends, Gwen would have guessed that Succubi preferred to be in control, but it seemed to depend on who she fantasized about. In contrast, the things she imagined doing to Laura were anything but subservient. She'd promised Amy that she wouldn't feed on anyone else, but that didn't prevent her from imagining it. At first she'ed suppressed the urge, but her mind seemed to conjure fantasies at every opportunity. She'd given up on resisting. Amy turned to face her. She affected a look of pure innocence.\n\n\"Are we still going into town this weekend?\"\n\n\"If you want to.\"\n\n\"I thought we'd do some more research.\"\n\n\"May as well.\" Gwen shrugged.\n\nThe previous weekend they'd done some digging around local bookstores but hadn't found anything mentioning succubi that was useful. Just more fantasy books, a roleplaying game rulebook (Gwen discovered that she had 66 hitpoints), and a handful of pornographic comics that Gwen had mostly bought just to see Amy's reaction. All of it lay in a forgotten pile under the coffee table. They'd made plans to visit some historic bookstores downtown, but over the past week Gwen's desire to find evidence had faded, along with much of her anxiety. Why look for secondhand accounts when you could learn through experience? Besides, everything so far had been a bust.\n\nOddly enough, Gwen wasn't the only one. Amy, who ravenously attacked problems until she solved them, had stopped bothering with many of the tests. No more checking for wings, or fangs. She stopped asking for body measurements, which was a bummer because Gwen was pretty proud of them now, and had stopped asking about powers. At first Gwen worried that it was her fault. That she'd accidentally done something with her abilities to dull the curiosity that she found so charming. Now though, she was confident that wasn't the case.\n\nDespite Gwen's daily feeding, Amy's performance at school hadn't slipped, and when she did take measurements, her eyes and wits were as sharp as ever. It was more like she'd narrowed down what to track and what not to. If she'd found some concrete evidence though, she shared it with Gwen. Oh well, it was Amy. Capable of making logical leaps the rest of the world couldn't follow. Besides, she trusted Amy implicitly. She would tell her if she found something important.\n\n\"Well we already made plans so let's just go. I have a few other things to take care of while I'm there anyways. Can you survive on your own for a few hours?\"\n\n\"Things like what?\"\n\n\"Just some errands for my dad.\"\n\n\"Your dad, who lives in Chicago, needs you to run errands in San Francisco?\"\n\n\"Yes. Stop pestering.\" She sounded almost motherly, it was cute.\n\n\"Fine, I'll find something else to do.\" Then tacked on, \"or someone.\"\n\n\"Not funny.\"\n\nGwen was joking, but beneath it her hunger had been steadily growing. Fearing that she would slip up again, and violate Amy's ultimatum, Gwen told her about the increasing levels of arousal as soon as she was sure. Amy theorized that, similar to the other changes, her hunger was still developing, and they weren't sure how strong it would get. To curtail it she now fed on Amy several times a day. Amy insisted it wasn't affecting her, but Gwen could tell she was growing tired. She slept earlier, and woke up later. She could sense Amy's exhaustion in the dream, where she did her best to comfort her through the night. If her hunger grew much more, they both knew Amy wouldn't be able to keep up. So far the strategy they'd silently agreed on was to ignore it and hope the problem went away.\n\nFood didn't hold any appeal to her, so she retreated to the bathroom to take her daily measurements while Amy ate. The horns had finally stopped growing. They were wider now, about two inches in diameter, and just over six inches long. They angled back, narrowing as they followed the curvature of her head before flicking out into small upward spikes. They were a nuisance. She'd already destroyed another pillow, and they caught on the collar of her shirts if she wasn't careful. Despite the inconvenience, she'd grown to like them. Something about the shape of the curves of their hard, rough surface was attractive to her. Gwen supposed that it wasn't all that strange. They were a part of her body after all. Humans found the human form attractive, why wouldn't succubi be the same?\n\nAmy had asked her to continue measuring her tongue and fingernail growth, and as expected they both surpassed human averages. Amy definitely knew something she didn't. Her nails formed sharper than before, not quite claws, but they were growing quickly. It was only in the past couple days that they started, and already they were the longest nails she'd had in her life. Her tongue was now about 10cm, which Amy informed her was tied for the world record. The nails seemed a poor self defence. Gwen could imagine what to do with the tongue.\n\nHooved feet and wings seemed to be off the table. Fine by her. There was nothing appealing about having goat feet. Flying would have been cool, but the horns already made dressing difficult. Wings would make it a nightmare. She still checked her tailbone every day. If Amy's track record held, that meant she'd be getting a tail. Gwen wasn't sure how she felt about that. She'd have to wait to find out though, no changes today. She marked it down.\n\nThe one thing Amy hadn;t brought up was the dream. She still went there every night, like clockwork. The thought that she may never have a normal dream again saddened her, but each night she grew more comfortable in the succubus dream, as she now thought of it. She could move easier, and didn;t have to try as hard to sense all the other dreams around her. Still, night after night she found herself with Amy, cradling her friend's dream, and telling her all the things he couldn't admit in the waking world. Either Amy didn't know about the dreams, or whatever sources she'd decided were canon didn't. Gwen was glad either way. It felt sacred, private. She wanted to keep it to herself.\n\nShe closed the notebook and studied her face. It had changed too. Still Gwen, but the angles were all different. Her cheekbones were a bit sharper. Her lips a bit fuller, and more defined. Her eyes even seemed a bit bigger. It was all subtle. Minus the horns, she still looked perfectly human. But the combined effect gave her face a teasing, playful look, and her new features seemed far more expressive. She made faces at herself. Anger, joy, disappointment, sadness. Each face conveyed precisely what she meant it to. She tilted her head and pouted. No wonder Amy always gave in.\n\nAmy was waiting for her at the door by the time she'd showered and changed. Gwen wore a red half sweater, a high wasted, pleated black skirt that fell just below her mid thigh, and black stockings and boots. She found that she enjoyed picking her outfits now. Something she used to hate. Before, it had just about finding the bare minimum to escape anyone's notice. She'd wear jeans and a tee shirt every day if she could. Now though, every day was an opportunity to find a new way to highlight her supernaturally alluring features.\n\nAt first, she'd resisted the urge. Stubbornly clinging to her old habits as if changing them would mean changing herself. After giving it some thought though, Gwen realized that dressing terribly was not, in fact, core to her personality. Nor would it stop the changes. She already had horns and claws. What was a change of clothes? It was all superficial. Inside she was still Gwen. Demonic powers or not. The past week, living happily with Amy and staying in control, had proven that.\n\nSo she'd given in, gone shopping with Amy and blown half her bank account on new clothes. Turns out they're expensive when you're not just buying tee shirts and jeans. Gwen knew Amy would help pay if she asked. Amy's dad gave her a generous allowance each month and she rarely used all of it, but Gwen hated accepting financial help, and Amy knew better than to offer. Gwen usually only worked during the summer, saving for living expenses. Her scholarships covered her tuition and school fees. Next semester though, she'd probably have to get a job.\n\nAmy dropped her off near the engineering building, promising to pick her up after Aqua Eco, and left her to suffer through another Friday. The connection grew weak as Amy's white Prius shrank into the distance. It seemed that the connection was affected by physical proximity, and Amy's classes were on the other side of campus. At that distance it was barely a whisper. She watched Amy's car disappear around the corner and reluctantly turned away.\n\n\"Hey! Gwen! Did you fill out your lab sheet? I completely forgot. I mean, I meant to, but I had to work. And then afterwards, my buddy Kyle came over and brought-\"\n\n\"Sure, Chris.\"\n\nShe dug through her bag and handed him her green Chem folder. As he took it, he gave her body a less than subtle scan. She pretended not to notice.\n\n\"Just get it back to me by eleven.\"\n\n\"Thank you, like, so much.\"\n\nHe followed her into the building like a puppy. Their first classes were next to each other. Gwen could feel his eyes on her ass. She made it a point to add a little extra sway to her hips, and reached out with her senses. His energy was starchy, like potato chips. She felt one corner of her mouth quirk up. Junk food. She didn't drain any, though. She'd be a good little succubus for Amy. Besides, she probably couldn't. Not without strengthening the connection.\n\n\"So you were telling me what your buddy Kyle brought over last night.\"\n\n\"Right!\"\n\n- - - - -\n\nThe day passed uneventfully. The professor handed back a calc test she'd taken on Monday. A 'C'. Normally anything less than an 'A' was unacceptable, but she found that it didn't bother her much. Chalk it up to recent events. Chris returned her report, and she spent lab using her body to tease him and see what reactions she could get. For just a moment she considered inviting him to the bathroom for a snack. If that wasn't a sign her hunger was growing, she didn't know what was.\n\nWhen five arrived, and her classes were finally over, she found herself walking past the same bench she'd sat on last week while agonizing over Amy's response to her advances. Then, she'd been filled with dread. Worrying about hurting Amy, losing her, about becoming a monster.\n\nNow those thoughts seemed silly. She had so much more than she'd ever hoped. Amy was idolized. Sought after by practically anyone that met her, and Gwen got to kiss her daily. Hold her hand as they sat on the sofa. Bask in her warm embrace. The changes had stopped bothering her too. Anxiety had been replaced by anticipation. Maybe that was also a change. She was eager to see what came next. Gwen shrugged her backpack higher and made her way to Aqua Eco with a spring in her step. Even Laura couldn't bring her down today.\n\nAs luck would have it, Laura didn't say a word to her the entire meeting. In fact, ever since their encounter in the elevator last week Laura had completely ignored her. No passive aggressive comments, no insults, no questions about Amy. Come to think of it, this was the first time Gwen had seen her all week. Maybe Laura was scared. The idea stirred something within her, and Gwen slipped into fantasy and spent the rest of the meeting picturing all the ways she could justify Laura's fear. Her arousal surged to a pleasant buzz. By the time they wrapped she was in a state of fevered lust rivaling the night of the incident. The strength of the connection was slowly growing. Amy was making her way across campus to pick her up. She needed to calm down or she'd jump Amy and drain her right there in the parking lot. Deep breaths.\n\nLaura quickly made her goodbyes, pointedly avoiding Gwen, and bolted out the door as soon as she was able. Gwen's breath caught at the sight of Laura rounding the corner. A sense of urgency washed over her. Feral instinct took over, and before she knew what was happening she'd risen to give chase.\n\nIn the hall, Laura was nowhere to be seen. Gwen's senses flared. She breathed in and caught the scent of Laura's energy. Bitter sweet, and tinged with a delicious acidity. Fear. She should leave. Instead, Gwen let her new senses guide her. Left down the hall, then right, then down a flight of stairs. As she got closer the scent of Laura's energy grew stronger. She could taste it now. She stood outside the door to the second floor women's room. A large wooden door was the only thing between her and her prey.\n\nFor a moment, she hesitated. She was about to break the rules, but she was desperate, and she knew Amy was tired from the constant feeding. Soon Amy's body wouldn't be able to keep up with her appetite. If she didn't do something to curb this hunger she'd lose control again. Maybe do something irrevocable.\n\nAmy would tell her to walk away. Her hunger and her loyalty to her best friend warred within her. Gwen looked down at her hand, resting on the flat surface of the door. Laura should have picked a room with a lock. She pushed, and the heavy door swung in easily.\n\n\"Avoiding me?\"\n\nLaura froze facing the mirror, in the middle of checking her makeup. The eyes of her reflection went wide. Her mouth fell open and her body tensed. She quickly gathered her composure and turned to face her with a nonchalance that rang hollow.\n\n\"Of course not. Why would I?\"\n\nGwen ignored the question, dropped her backpack to the ground beside her, and began a slow saunter toward her. Laura fliched, almost imperceptibly, as she took the first step.\n\n\"Do you need something? I'm very busy.\"\n\nLaura held the edge of the counter with white knuckles. Her eyes flitted to the door, no doubt calculating whether she could make it past Gwen. She couldn't.\n\n\"Do you think I'm scared of you?\"\n\nGwen breathed in. Amber and lilac. The fragrance of Laura's perfume wove together with the scent of her energy, stoking the fires of her arousal.\n\n\"I'm warning you! Last time I let it go, but if you touch me again you'll regret it.\"\n\nGwen came to a stop mere inches away. Close enough to reach out and touch her. Distantly, she felt the connection with Amy grow. She was getting closer. Classes were over, and the building was mostly empty, but a handful of students still walked the halls. There was a chance someone could walk in. What if she couldn't breach Laura's defences? There were a lot of reasons to turn around and leave. The risks would have weighed heavily on the old Gwen. Paralyzed her. Not now. She didn't care. She felt invincible.\n\nLaura opened her mouth, but before she could continue her posturing Gwen seized a handful of auburn hair and stepped forward, closing the remaining distance and crushing her lips against the other girl's. Laura resisted. She pulled fruitlessly at Gwen's grip. She pounded her fists against Gwen's chest. She tried kicking, and Gwen caught her leg by the thigh and held it there. Gwen loved how easy it was. For a moment, she pulled back and studied the cowering girl.\n\nHigh and mighty Laura, the socialite, the heiress. Again, she was wearing her diamond earrings. They were simple, but still far flashier than school warranted. A symbol of her superiority. She certainly didn't look superior now though. She was panting from her exertions. Her eyes were filled with terror and rage. Tears were welling up, and her makeup was beginning to run. Gwen was surprised by her own face in the mirror. A visage of cruel delight. Framed by the beautiful curves of her horns. This was what a succubus looked like.\n\nGwen felt for Laura's energy and once again found herself against the wall of steel. She brushed her senses along its surface and found what she was seeking. A tiny fracture. Almost imperceptible. She just needed to break through.\n\nShe pushed Laura. Without her arms to support her, Laura bent backward over the counter and lost her footing. Gwen hoisted her up and forced her legs apart, stepping between them. Laura drew a breath, preparing to scream. Gwen released her thigh, and gripped her jaw instead, pulling her hair back with her other hand to force her mouth open, then sealed it with an opened mouthed kiss, forcing her tongue in. Laura's scream was muffled, and sputtered out as Gwen's elongated tongue slithered down her throat. The fissures in her defences widened. Gwen stabbed at them with her consciousness and finally broke through. The first thread formed.",
        "With Amy, she was handicapped by love and concern. Now, she was free to indulge. She felt no sympathy. Gave no thought to the damage she might cause. Gwen pushed her desire across the budding connection, into Laura, and felt a small spark of arousal flare to life amidst the storm of emotions raging within. She nursed it carefully. Coaxing it along with each pulsating beat of her own arousal. It grew brighter and brighter, like an ember being breathed to life. Gwen began to pluck at the threads, and Laura's resistance grew weaker.\n\nIt all came to her naturally. The first night with Amy, she'd been clumsy. A child tugging at the strings of a harp. No wonder they'd broken. Now she understood. The threads tensed and loosed in time as Gwen played a euphoric symphony across them.\n\nHer hands fell away. Laura froze, unsure what to do now that she wasn't restrained. Before she had a chance to decide, Gwen took hold of her firm ass, a hand on each cheek, and slid her forward until Laura's groin rested against her hip. Laura managed to prevent herself from falling by leaning back with her palms on the counter, and glared up at her. Gwen tightened the threads, and Laura's eyes lost focus. Her rational mind fought against Gwen's invading will. It was a losing battle.\n\nGrudgingly, Laura began grinding hesitantly against her hip. Gwen helped her by pulling her in time. Her expression of anger gradually gave way to confused arousal. Her movements became more urgent. Elation filled Gwen as she watched the haughty girl succumb to her power, reduced to a puppet. She didn't relent. Laura's defences had crumbled to nearly nothing, leaving her completely exposed. She bound Laura with more and more threads. She drank more and more deeply. Tears finally escaped, running down Laura's face as she surrendered. She began gasping with each needy thrust. Quietly at first, then louder as her resistance fell away.\n\nGwen lifted her up and stood. It was surprisingly easy. Laura's legs wrapped around her. A designer shoe clattered to the floor. Laura nestled into her, wrapping her arms around Gwen's shoulders, and resumed her eager grinding. Gwen carried her to the door and pinned her against it. Laura grunted as her back made contact with the hard surface. Now they wouldn't be interrupted. She kissed Laura forcefully. Deeply.\n\nHer hands began to explore Laura's body. Everywhere they went she felt Laura's muscles tightening under her soft skin as she writhed. It was the body of a dancer. Graceful, supple. How far could she bend it before it broke? Gwen's excitement peaked. Her sex ached for attention. Her panties were soaked through, and their movements had coated her inner thighs with her fluids. She felt the cool air against them. She released Laura and stepped back. She kept one hand on the door to hold it closed.\n\nLaura couldn't support herself without Gwen's weight pinning her against the door. Her legs, shaking and weak, slid from Gwen's back and she crumpled to the floor. Shock and surprise reverberated through the connection. Gwen released the threads and let them still. She cut off the flow of ecstasy she'd been force feeding Laura, and waited. Slowly, Laura steadied herself and looked up at her. Her face was crimson and her body slick with sweat, but the momentary release had brought some clarity back. Her eyes were focused. Her lip trembled as she spoke in a raspy voice.\n\n\"..Please.\"\n\n\"Please what?\"\n\nShe knew the answer. Laura wanted to escape. She waited.\n\n\"Pl-\"\n\nHer words were choked off, replaced by a strangled cry of passion as Gwen renewed her assault. Flooded the connection with everything she could muster. She watched as Laura's sanity slipped away, drowned out by ecstasy. Her mouth hung limp, and her tongue lolled. Her eyes rolled back and she gasped a quiet scream.\n\nThis is what she craved. The power. The control. Watching someone fall to her. Her new senses had added an entirely new dimension to sexual encounters that allowed her to truly savor them. The physical pleasure, the emotions, the taste of Laura's submission. She stemmed the tide of pleasure again.\n\n\"Please what?\" She taunted.\n\n\"Please... m- m- more.\"\n\nAs Laura stammered, she reached up and put a trembling hand on Gwen's leg. She struggled to her knees until she could slide it beneath Gwen's skirt, up to the waistband of her thong. She paused, looking up for approval. Gwen nodded. Laura slid the thong over the curves of her hips and down her legs. Gwen stepped out of them and took a wide stance. Cool air brushed against the wet skin of her mons. She shivered as she watched Laura rising higher on her knees. She could feel Laura recoiling at what she was being forced to do and tugging weakly against the threads, but it was too late for that. Gwen held the girl's reins in a vice grip and urged her on. The part of her lodged deep inside Laura yearned for this. She knew Laura felt it too.\n\nLaura's head disappeared under her skirt, and a moment later Gwen felt her tongue trail along her outer folds. She reinforced the action with a spike of pleasure. Laura grew more confident. Gwen bent her knees slightly to give her better access. Laura found her way to Gwen's twitching bud. She bit her lip to stifle a moan as Laura's tongue made contact. It was pure ecstasy. Her phone buzzed.\n\nFuck. In her frenzied heat she'd completely forgotten about Amy and let her awareness of their connection slip away. When she felt for it, it was strong. Amy was probably in the lot just outside. Her bag sat nearby, just out of her reach. She snapped a finger. Laura stopped and emerged from her skirt, looking up at her, confused. The area around her mouth was glazed with Gwen's juices.\n\n\"Phone. Now.\" She pointed at the bag.\n\nLaura scrabbled to it, her knees were beginning to bruise from the fall, and her clothes were a mess. Laura fished as the phone continued to ring. She found it, and held it up. Her hips were still moving slightly. Humping needily at the air of their own accord. Gwen snatched it from her hand, quickly cleared her throat, and answered.\n\n\"Hello?\"\n\n\"Where are you?\"\n\n\"I'm still in the building. Sorry, Laura kept me late.\" Gwen motioned for Laura to continue her task. She crawled obediently back into position.\n\n\"Do you when you'll be out? I've got a lot of homework to do.\"\n\nLaura's mouth found her. Gwen struggled to keep her voice neutral as she responded.\n\n\"It won't be long. Maybe a few more minutes.\"\n\n\"Alright. Well tell her I said hello and just text me when you're coming.\"\n\nThe call ended. Typical Amy. Laura considered her a rival, but Amy treated Laura like any other classmate. Her intentions were kind, but it probably stung even more that she didn't reciprocate Laura's feelings.\n\n\"Amy says hi.\"\n\nGwen reached down and grabbed Laura by the hair again, and pulled her in. She closed her legs enough to lock Laura in place. Laura's tongue danced along her crevice and between her folds, hungrily lapping at her nectar. She felt Laura's submission growing with each taste. Gwen felt hot. Everything faded but the pleasure. With the threads she drove Laura on. Faster and faster. She was pushing against Laura's head, fucking herself with the girl's tongue. Her lust mounted, and she felt it slip past the point of no return, rising sharply to an overwhelming euphoria that threatened to rip her apart. Then it crested, broke, and a powerful orgasm tore through her.\n\nHer muscles spasmed and her thighs locked around Laura as wave after wave of bliss filled her. It rushed across the connection as her control of the threads slipped. Laura began shaking and moaned into her as her own orgasm took hold. Gwen held her there until she feared she would pass out, then released her. Laura collapsed to the ground, twitching. She wore a dull smile and her eyes stared blankly in the distance. Gwen braced herself against the door with both hands to avoid collapsing as the orgasm began to fade, replaced by an afterglow of satisfaction.\n\nCautiously, she stood straight and stumbled over to the mirror. She was a mess. She smoothed her hair and clothes, and washed her face. Behind her, Laura slowly began stirring. Once she'd made herself presentable, or as close as she could get, she moved to stand over Laura.\n\nHer hunger was as weak as it had ever been. There was still a whisper of arousal, but she was as close to normal as she'd felt since the changes began. As she looked down at her broken classmate though, she didn't feel a trace of pity. She considered her options as Laura sat up and leaned back against the door. Laura watched her, despondent, and waited. There was no fight left in her. She flinched when Gwen spoke.\n\n\"Here's the deal. You won't tell anyone about this. If you do, to use your own words, you'll regret it.\"\n\nLaura just nodded meekly.\n\n\"From now on, whenever I say so, we're going to meet up and have some more fun. If you behave yourself, I promise to be nicer next time. Deal?\"\n\n\"Do I have a choice?\"\n\nLaura had regained enough composure to speak, but she was on the verge of tears, and her words dripped with hatred. If only she knew how delicious it was.\n\n\"Of course not. But give it some time, and you may even grow to like it.\"\n\n\"Fuck you.\"\n\nShe could use the threads to bend her into compliance, but that was too easy. Instead, she placed the sole of her foot on Laura's shoulder and kicked downward, slamming her to the floor. Her head was still against the door, crooked uncomfortably. She struggled but Gwen effortlessly held her pinned.\n\n\"Try again.\"\n\n\"...Fine.\"\n\nGwen let her go.\n\n\"Now, my underwear?\"\n\nShe held her hand out. Laura picked up her crumpled thong and handed it to her. It was still damp, and she wasn't about to wear something that had been on the bathroom floor, so she tucked it into her bag.\n\n\"Good girl.\"\n\nShe pulled the door open, gently nudging Laura aside until it was wide enough to squeeze through.\n\n\"Oh,\" She turned and called back. \"And stop bothering Amy.\"\n\n- - - - -\n\nGwen stared out the window, watching the streetlights fly by as Amy drove her home. She'd explained her disheveled state as the result of running across campus to retrieve something from the engineering building. The lie came easily. Amy seemed to buy it, or at least she wasn't pressing the issue. A heavy silence filled the car as Gwen stewed in her thoughts.\n\nAfter the incident with Amy, she'd gone back to normal. She'd felt guilty about hurting her friend, worried and anxious about the consequences, and scared of what was happening to her. This time there was none of that. She'd just attacked Laura, bent her to her will, and left her lying broken on the bathroom floor. But there was no guilt. No pity. In fact, she even felt a faint sense of pride. Like this is she was supposed to be. It seemed that along with the physical changes, she'd developed a concerning lack of empathy.\n\nIt wasn't as if she'd forgotten right and wrong. Using your demonic powers to enslave a fellow student fit pretty squarely in the \"wrong\" category. Gwen knew that, she just didn't seem to care anymore, and that worried her. Not for Laura's sake, but for Amy's. If her humanity was slipping away, to be replaced by whatever instinct had driven her actions tonight, how long before that instinct was directed at the person she was closest to? She glanced over.\n\nAmy's eyes were heavy, and bags were beginning to form again. She couldn't keep up with Gwen's hunger any longer. At least now she'd have some relief, not that Gwen could tell her that. She'd broken the rules, and Amy would make good on her threats and kick Gwen out if she found out. So Laura would be a sacrificial lamb. Amy's secret whipping boy, soaking up Gwen's darkest impulses so that Amy didn't have to. She knew Amy wouldn't approve, but Gwen would protect her, even if it meant lying to her. If Laura was collateral damage then so what? If Amy was safe, that seemed right to her.\n\nGwen was relieved that her feelings for Amy were intact. In fact, they seemed to be stronger than ever now that she'd stopped fighting them. She was in love with her best friend. Two weeks ago that thought had scared her. Now it filled her with relief. She hadn't lost that. It was her lifeline. Amy would be her new right and wrong, she decided. The pole around which her moral compass revolved. As long as she always did what was best for Amy, there would be something guiding her beyond pure instinct.\n\nAmy was driving with one hand, the other rested on the dash. Without thinking, Gwen reached out and placed her hand atop it. It was still cold from waiting in the parking lot. Amy didn't like to idle her car just for the heat. Gwen expected her to pull away, but she seemed content to let Gwen stay there. Happiness filled her, chasing away her dark thoughts. She was worrying too much. She'd never hurt Amy.\n\n\"Hey Amy?\"\n\n\"Yeah?\"\n\n\"Thanks. For everything.\"\n\nWhen they arrived at the apartment Gwen rushed to the bathroom to shower. Amy called after her.\n\n\"Are you hungry?\"\n\nGwen stopped in her tracks, then skipped back to plant a quick peck on Amy's lips. One of her eyebrows quirked up in confusion. It was cute.\n\n\"That's it?\"\n\n\"That's it. I'll be okay for one night. You need to get some rest.\"\n\nGwen wanted Amy to recover as fast as possible, and she didn't trust herself not to drain any energy if she'd lingered longer. She was still satisfied, but Laura's energy just couldn't compare to Amy's delicate sweetness. With her worries gone, Gwen found she was practically giddy. She pranced back down the hallway, jumping to slap her hand on the frame of the archway as she passed it, then turned to give Amy a devilish grin.\n\n\"I told you not to do that!\"\n\nGwen just blew her a kiss and stepped into the bathroom. She knew Amy didn't reciprocate her feelings. She accepted that along with the rules that first night, but lately she'd felt the connection changing. Amy seemed more warm to her playful advances, and resisted less and less when Gwen tried to feed more. Would she have a change of heart? Did Gwen dare to hope?\n\nShe stripped, and admired her body in the mirror. It was delectable. Tight and firm in all the right places, soft in others. Neither Amy's mature beauty, nor Laura's flowing grace, but a touch of both. A young, fiery beauty all her own, that sang of pleasure and mischief. She stepped into the shower with renewed confidence. She decided that she would hold out hope that Amy would change her mind. After all, who could resist her?\n\n- - - - -\n\nAs soon as Amy heard the water start running, she let her composure drop and sank into the sofa. It seemed Gwen had given her a night off. Amy wasn't sure how to feel about that. She was exhausted. If Gwen saw her like this she'd stop feeding, and that would lead to her losing control and preying on someone else. Amy was one of the few people in the world who knew demons existed, it was her responsibility to protect others from Gwen. And for that matter, Gwen from herself. The idea of her feeding on someone else filled Amy with unease.\n\nHer lips still tingled from the contact. She brought a hand up and brushed a finger against them. Gwen had told her about how the powers worked, at least as far as she understood them, and after a week, Amy had learned to tell when Gwen was feeding. It wasn't very difficult. It tended to coincide with sudden bursts of arousal. Tonight had just been a normal kiss. Not even a kiss. A peck. Was it disappointment that she was feeling? Surely not. She was happy to help Gwen, but the arrangement was purely clinical. She threw her head back and stared at the ceiling through heavy lids. Of course that was just posturing.\n\nAmy wasn't as naive as everyone thought. Gwen told her about the threads, as she called them, and their supposed connection. Amy couldn't feel it, she didn't have whatever sixth sense was required, but she could see the evidence of its existence. Over the course of the week she'd found it harder and harder to resist Gwen's desires, and her embarrassment and discomfort at Gwen's advances was fading. Sometimes she even looked forward to them. It wasn't that she was being manipulated, she believed Gwen when she said she wasn't using the threads, but Amy could tell that she'd changed. She wanted to please Gwen. She often found herself doing things to Gwen happy without needing to be asked.\n\nPerhaps some kind of bleed-through from the connection? Why force someone to do what you want, when you can just rewrite them to want it too. She recalled something she'd read on The New Demonic Archive, about continued exposure to succubuses corrupting your 'aura'. It was a terrifying thought, but Amy found herself impressed, and more than a little curious. She had the unique opportunity to experience something first hand that most people didn't know existed. She forced herself to stand before she fell asleep and shambled to her room. She resisted the urge to pause and gaze longingly at the bathroom door.\n\nIn her room she brought out her laptop, and the binder in which she'd been tracking Gwen's transformation. She made note of her musings about her feelings and desires changing. Amy hated the term 'aura'. It was so vague and unscientific, but the archive had proven her most reliable source of information so she used it anyway. She just wished the author would explain what the hell it was. Tomorrow she'd get the chance to ask him directly.\n\nShe opened her email and reread his reply. Next Saturday. Half past two. Come alone. Below, he'd printed an address in San Francisco and signed the email as 'JT'. It was an old house in an affluent part of town. She skimmed through their short but intense correspondence above the reply. He'd been convinced, and maybe still was, that she was some sort of spy. Working for the demons in the government. He was as rambling and paranoid as the worst parts of the blog, but she'd coaxed out enough information to convince herself that he knew more. Apparently he lived in England. Even offering to fly there, he'd absolutely refused to meet. At least until she told him that she had direct access to a demon. He'd immediately replied with the cryptic instructions. She hated using Gwen as a bargaining chip, but she needed to know more.\n\nAmy shut the laptop and binder, and put them away neatly. She still needed to shower, but her eyes were growing heavier by the minute. She was eager to sleep. For the past week she'd dreamt almost exclusively about Gwen. In her dreams, her trepidations were gone. She embraced their new relationship. They were partners. Lovers. She felt her face grow hot thinking about it. What the hell had she gotten herself into? As she lay there, sleep finally came. In the morning she'd wake with frizzy, tangled hair and rumpled clothes, but for now, she fell into a deep restful slumber."
    ],
    "authorname": "Autumn_Ash",
    "tags": [
        "lesbian",
        "succubus",
        "mind control",
        "mind break",
        "transformation",
        "corruption",
        "romance"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/a-succubus-awakens-ch-03"
}