{
    "title": "What The Cat Dragged In Ch. 06",
    "pages": [
        "Thanks to the reviewers, the voters and the readers!\n\n6. Ask Me No More Questions\n\nHe'd let her sleep for a few minutes, mostly to try and figure out why the hell he wasn't pissed off at her. The point where the left side of her neck joined her shoulder was covered in scabbed wounds and ringed with bruises. There were other healing marks on her tits, and one on her stomach. The scent of old wounds and gathering infection in her shoulder reminded him that she was so fucking fragile. The flick of a claw in the right spot could kill her. A grip that was too tight or a push that was too hard would break those bones that still made hard hills and soft valleys under her pale skin. \n\nHe should have been pissed off. He should have hated her for her human frailty. He should have wanted to tear her apart, just because he could. Just to feel her warm blood covering him. Just to smell her shock and terror. Sitting there, listening to her sigh in her sleep, he couldn't picture any of that with any clarity. If anybody ever found out, he'd never live it down and she'd never survive it.\n\n\"What's wrong?\" she murmured.\n\nHow the fuck was she always inside his head when she wasn't? \"What do you mean?\"\n\n\"You got tense.\" Her hands drifted along his sides and back.\n\nHe tugged her hair, so that she was looking at him. \"Did I?\" He felt a little tremor go through her.\n\nA little shrug. \"You're all muscle. Sitting here like this, I couldn't miss it.\" A little smile ghosted over her lips.\n\nHe let the corner of his mouth twitch. \"Get the fuck up.\" He let go of her hair. She winced a little as she moved off of him and reached for her shirt. \"Leave that off.\"\n\nShe blushed and held the fabric in front of herself. \"But if you want breakfast-\"\n\n\"First I'm gonna put something on your shoulder. The stench is driving me fucking nuts.\"\n\n*~*~*~*~*~*\n\nKelly sat on the rim of the tub, shivering while he pulled gauze pads, tape, peroxide and antibiotic ointment out of the cabinets. All if it was newly purchased and used only by her to clean her other wounds. She wondered why he stayed there with no first aid supplies at all. Anything could happen.\n\n\"I said turn around.\" \n\nKelly put her back to him again and bit her lower lip, the shirt held in front of her. She heard him pouring something in the sink. \n\n\"Gonna reopen the infected ones so I can clean 'em out right. Hold still.\" \n\nHe ran the tip of one claw slowly along the length of each scratch. She recognized the intense, burning sting as alcohol. Kelly fought to stay silent and still. By the time he'd reached the third one, her fingernails were biting into her thigh so hard she was certain she was going to draw blood there too. He started treating the wounds with peroxide-soaked gauze. \n\n\"Th-there are four that I can't reach.\" She hated to mention it, but she didn't want to have to go through this again if she could help it.\n\n\"I know. The fourth one ain't infected.\" He cleaned the wound efficiently, but she could tell he wasn't trying to cause her undue pain.\n\n\"How can you tell? Is it not as red as the others?\" She turned, trying to get a view of the back of her shoulder. He put one hand on her head and turned it toward the wall again.\n\n\"Told you, I can smell it.\"\n\n\"I didn't think you meant that literally.\"\n\nHe snorted. \"I'm feral. Scent's like another kind of vision for me.\"\n\n\"I didn't know.\" The sharpness of the pain faded to a dull, throbbing ache.\n\n\"Obviously.\" He started again, this time with a new pad. His hands were almost soothing. \"You ever met any kind of mutant before?\"\n\n\"My best friend in grade school did something with electricity.\"\n\n\"What?\"\n\n\"I'm not sure. It scared her and I think it scared her parents too. They sent her to some kind of special school a week before...\" she stopped. \"Before everything else happened.\"\n\nHe spread soothing ointment over the wounds, then taped a dry gauze pad over all of it. \"That why you didn't fall for all that CoH shit?\"\n\nKelly shrugged with her other shoulder. \"That, and the fact that drunken monkeys could come up with more logical reasons to hate bananas than the CoH has for hating mutants.\"\n\nHis fingers paused as he was smoothing down the last piece of tape. For a minute Kelly was nervous that she'd said something wrong. Then he started to laugh. Kelly blushed a little and turned her head, he nipped her ear. \"Put your shirt on. I'm hungry.\"\n\nKelly pulled the shirt over her head. \"What do you want?\"\n\n\"How the fuck should I know? Something with sausage.\" He didn't make a move to help her out of the tub, but he stood there and let her use his crossed arms to hold onto for balance. \"And you're having something more than an orange.\"\n\n*~*~*~*~*~*\n\nHe looked down at her sleeping profile. After breakfast he'd wanted to get some real sleep. She'd prattled on about packing and getting things in order. He hadn't bothered listening. He'd picked her up, put her over one shoulder and brought her with him. She'd complained the whole way, but it took all of five fucking minutes before she curled up against him and went to sleep. He'd wrapped himself around her and nodded off too, at least for a few hours.\n\nNow, as he was looking down at her, he tried to figure out where the best place would be to keep her safe. The place in West Virginia had been his first thought. It was in the mountains in the middle of fucking nowhere. He'd used it to lay low for months at a time. When he was there, it would be perfect. When he wasn't, she'd be vulnerable because of the isolation.\n\nThe place in Maine was the other option. He'd bought it on a whim. If he'd been able to get drunk he would have claimed drunkenness, anything but the real reason. It was huge and rambling, perched on a bluff overlooking the ocean. It was probably beautiful when it was first built, he'd made it better. More suited to himself and his lifestyle. \n\nOne hand drifted down over her thigh. She sighed and turned to face him, snuggling against his chest.\n\nMaybe he'd tell her the real reason. Hell, maybe she'd guess.\n\n*~*~*~*~*~*\n\nKelly woke up to Victor pinching her nipples. She smiled and let herself get lost in the way he mixed pleasure and pain so thoroughly that she couldn't tell where one started and and the other ended. It still confused her, but that confusion was waning in importance. Maybe that made her some kind of pervert, she didn't much care. She knew that whatever the reason, she was able to be vulnerable for a few minutes. Maybe it never would make sense. Maybe that was alright.\n\n\"Where are we going?\" she asked. Her head was resting on his chest, his fingers drifting through her hair.\n\n\"Told you.\" He let the tips of his claws rake lightly over her scalp, sending pleasant shivers down her spine.\n\n\"You didn't tell me where through.\" Her eyes were closed.\n\nHis hand paused. \"Why?\"\n\n\"Because I'm curious.\" Her tone hadn't lost the dreamy quality of deep relaxation.\n\n\"What if I don't tell you? What're you gonna do?\" There was a little smirk in his voice.\n\nKelly shrugged. \"Don't know. Are you ticklish?\"\n\n\"Am I what?\"\n\n\"Ticklish.\" One fingertip had barely started to stroke over his ribs. Before she knew what was happening, Kelly found herself on her back with her wrists pinned over he head by one large hand. Fear washed over her instantly. Kelly bit her lower lip and started to twist her hands in his firm grip. He held her still, but traced the pad of one finger down over her sternum and around her navel. His pointed claw never touched her skin. For some reason that calmed her. When she relaxed, he grinned down at her.\n\n\"Guess that's something else you're not gonna find out today, frail.\"\n\nShe arched and squirmed, this time it wasn't out of fear though. He wasn't squeezing her wrists hard enough to cause pain, but she wasn't able to pull her hands away either. Kelly started to laugh. \"That is not fair!\"\n\n\"Who the fuck said I had to be fair?\" He nipped her lower lip, just hard enough to draw a drop of blood. \"C'mon, lunch.\"\n\n*~*~*~*~*~*\n\nFor Kelly, the afternoon passed in fits and starts. The thought of leaving the cabin for some unknown destination was terrifying. He'd called it one of his 'hideouts', but that didn't stop her imagination from spinning wild tales of ending up with someone else like Dawes, or worse. At around mid-afternoon, she'd tried asking again. \n\nHe growled. \"Did I stutter the first time, frail?\" \n\n\"No, but-\"\n\nHe started advancing on her, backing her up against the bookshelves. \"But you just thought that if you fuckin' pick at me enough I'd break down and tell you.\"\n\n\"No, I-\"\n\n\"No?\" He traced her cheek with one claw. \"You sure about that answer?\"\n\nKelly's heart was pounding, she grasped the shelf behind her to stop the tremors that wouldn't be suppressed any other way. \"I was just curious, I didn't mean-\"\n\nHis hand moved down and settled around her throat. It was closed just tightly enough to send terror racing through her body. \"You gonna ask again?\"\n\nKelly shook her head.\n\n\"Out loud.\" \n\n\"No.\" Kelly whispered. He held her there for a minute, his intense eyes locked on hers as if deciding whether or not she was telling the truth. Finally he let her go and turned around heading toward the hall. She closed her eyes and tried to stay still until he disappeared. When he paused in the doorway, Kelly almost started shaking, despite her best efforts to be still. His eyes weren't on her, though, and he kept walking. She heard the door to the study open and slam shut.\n\n*~*~*~*~*~*\n\nCreed started pacing as soon as the door was closed behind him, covering the spacious room in four long strides before turning and covering the same distance again. He should have beaten her. Not enough to kill her, just enough to teach her a goddamn good lesson and to prove that he wasn't all empty threats. She looked at him like she expected it though. Like she was fucking ready to just go running deep inside herself so she wouldn't have to to be mentally present while her body was being bruised and broken. He knew that trick better than he would ever admit to. The fact that he could see her getting ready to slip away meant that she'd done it so much it was second nature to her. That pissed him off in a whole different way than her questions had.\n\nHe didn't give a rat's ass that she hadn't been his when it happened. The fact that under any other circumstance he would have used her until she was no good to him and either killed her or left her for dead didn't matter either. She was his now. And why the fuck couldn't she understand that? He'd told her often enough, hadn't he? He'd even tried not to make her bleed when he fucked her. Did she think he was bothering with that for his own goddamn health? \n\nAs soon as he'd told her about leaving the change in her had started. Sure she did all the usual shit she always did, but there was something different about that too, like she was memorizing things with all of weak human senses. The way the counter felt under her fingertips. The way the books on the shelves smelled when she straightened them. The way the wind through the trees made the woods here sound like a breathing creature sometimes. Even the way his claws felt when they slid through her skin. It wasn't like she could be so fucking attached to this place, she hadn't been here long enough for that. She was locking it all away though, like she was never going to-\n\nHe stopped, his head snapped up. That was it. It was fucking stupid, but smart as she was, she was just a frail. \n\nCreed left the room silently. He was fairly certain he wasn't going to find her curled up in a ball crying somewhere. She might be a fairly stupid frail from time to time, but she wasn't a weak one, ever. He saw her standing on a chair in the kitchen, polishing the knotty pine cabinets. Apprehensive fear hung in the air. He made sure to let her hear him move closer. She didn't turn to look at him.\n\nHe leaned against the door frame. \"You did that before I left.\" \n\nHer arm paused, but she didn't turn. \"I wasn't sure when it would be done again.\"\n\n\"Dunno. Whenever you get back here I guess, unless you fall and crack your head open first. Then I don't know when.\" He shrugged and looked disinterested.\n\nShe looked over her shoulder, a little smile tugging at her lips. \"I'm short, I'm used to climbing on chairs.\"\n\n\"Well I ain't used to looking up at you.\" He crossed the room and put his hands on her hips. She put down the cloth she was using. He set her on her feet again, her back to him. His hands moved around her waist possessively, stroking over her stomach. \"There's no Roland Dawes at the other end of this, frail.\" A tremor went through her.\n\n\"I never said-\"\n\n\"I fuckin' know that. 'F you had I wouldn't have been pacing for the last half hour trying to figure out what's going on in your goddamn head.\"\n\nHer fingertips stroked the backs of his hands, then down over his fingers to the smooth backs of his claws. \"That's not it.\"\n\n\"You're a bad liar.\" His voice was soft, the tips of his claws bit into the soft flesh of her abdomen. He felt her tremble. Her anxiety spiked. \"Somethin' makin' you nervous frail?\" He pressed a little harder, so that he was just on the edge of breaking her skin. She leaned back against him.\n\n\"It's always worse.\" She whispered. He could smell the tears she was fighting, as well as fear and anger that threatened to overwhelm her. It was a volatile cocktail, and if the scent of her blood had been added to it, he would have fucked her again on the freshly scrubbed tile floor. \"Every change, it's just another circle of Hell. Is it so bad that I want to know what I'm walking into? Or that I want to memorize everything about the one place I've actually been able to relax?\"\n\n\"And you'd just go?\" He stroked her stomach, feeling the indentations he'd made in her skin, even through her shirt.\n\nShe almost laughed. \"Well fed and well rested I might have a chance against Stan or Dawes. Nothing in the world would give me a chance against you.\"\n\nHe gave a little snort. \"That's the first sensible thing you've said in the last five minutes.\" Even though it was laced with sarcasm, his voice was still a soft rumble. The scent of her tears receded. He traced one finger over the bruised bites on the side of her neck, pressing just hard enough to cause a jolt of pain to course through her. \"Don't see anybody else walking around wearing my fucking marks.\"\n\nThe little mewling sound she made spoke volumes, even if he hadn't noticed the peaks of her nipples against the shirt. He grinned. \"Don't get me too turned on, Kitten. You won't get dinner before we leave.\"\n\nShe turned, her arms slid around his waist, her face snuggled against his chest. There was a little smile on her face. His hands paused barely and inch from her body. He'd never fucking understand frails, but he'd be damned if he'd let this one just grab him whenever she wanted. He growled and pushed her back into the edge of the counter hard enough that she'd have an oblong bruise across her back as a reminder. She let out a pained gasp, his mouth closed over hers in an aggressive kiss, stifling whatever sound she was going to make. His fingers tangled in her hair pulling hard enough to bring fresh tears to her eyes. When he felt her surrender completely his mouth softened, his fingers stroked down the back of her neck. Finally, he stepped back and drew her against him again. This time she hesitated for just a heartbeat before settling against him.\n\n*~*~*~*~*~*\n\nKelly's fears weren't completely gone, but they were at least back under control again. Nothing in what he said or how he said it indicated insincerity to her. The fact that he said it at all made it even more important to her. All afternoon, she reminded herself of those things. He'd told her he wanted to leave at seven, so they ate early to give her time to put the kitchen back in order before they left. The food that could be frozen already was. He'd told her the rest would be taken care of by his cleaning service. \n\nAt ten of seven she finished chapter fifteen in part II of 20,000 Leagues Under The Sea. She's hoped to finish the book before they left, but that wasn't going to happen. She put it back on the shelf.\n\n\"Did you finish it?\" He was carrying three black bags. She could tell one was made for a laptop. One was a duffel bag that probably held clothing. She had no idea what was in the other one, but she'd seen him carry it when he left before, too.\n\n\"No, but-\"\n\nHe rolled his eyes. \"Then take the fucking book with you. It's my goddamn house we're going to, the thing ain't gonna turn to dust if you take it out of here.\"\n\nShe smiled a little. \"Thanks.\"\n\n\"You read The Time Machine yet?\"\n\n\"No, I haven't.\"\n\n\"Bring it. I don't remember if I have a copy at the other place or not.\" \n\nKelly found that one as well. She put both books in the large shopping bag he'd brought her sweats back in. It held the few items she had as well as her ruined backpack. She had a separate bag of first aid supplies. She knew she might need to change the bandage on her shoulder at some point at least. She pulled on her sweater.\n\n\"You about ready?\" \n\n\"All set.\" She managed a little smile.\n\nHe looked at her as if he didn't like what he saw. \"You need something warmer than that.\"\n\n\"I'll put on an extra sweatshirt if I get cold.\" Kelly had a hard time not squirming under the weight of his disapproval.\n\n\"Fuck that.\" He set his bags down and disappeared into the bedroom again. She moved her things into the kitchen, busying her hands by straightening dishtowels. \n\n\"Here.\" He tossed a fleece-lined brown leather jacket at her. It was predictably far too big, but it was warm.\n\n*~*~*~*~*~*\n\nExcept for the bridge crossing into Vermont, Creed stuck to back roads that only locals and criminals would know. It would take longer, but he didn't exactly have a time table to keep. His next scheduled job was a month away, and if he needed to put that off he could. The frail had been awake for the first couple of hours, but she eventually nodded off. She was curled up on the bench seat of the old Chevy, her head rested against the window. His jacket was draped over her like a blanket, her knees were drawn up, as if she were hiding under it. He could smell her anxiety. It reminded him of a time when Jimmy had smelled exactly the same way.\n\nIt was the middle of the second winter he and Jimmy were on their own. That first winter had been so fucking hard on the runt that Victor hadn't been entirely sure the kid would survive another one. He hated the idea of going into a settlement, he knew they'd look at him like he was some kind of monster.\n\nAnd he'd fucking tried. He hadn't needed any of them, but for Jimmy's sake he'd put up with the stares and the comments. He'd put up with being worked like a fucking animal and left hungry and cold in whatever barn, outhouse or woodpile nobody chased them out of. He would have kept putting up with it too if Jimmy had fared any better. He was just as sick as he had been the winter before. They were both just as cold, both just as miserable, both just as hungry, and now they had other people telling them how fucking grateful they should be for all of it.\n\nHe didn't remember exactly what the last straw was, but he was fairly certain it was something that happened to Jimmy. The years and conscious effort to forget the details of that part of his existence had served to effectively eradicate most of them. He knew for certain that they'd tried to leave the first time soon after sunrise. A storm had broken the night before and the sun was shining for the first time in days. They hadn't gotten far when a group of men from the settlement caught up with them and dragged them back, accusing them of stealing chickens. \n\nIt was a fucking excuse, everybody knew it. That's when the hatred and his rage really came out, like pus from a boil. He'd started fighting back, but that made it worse for Jimmy and the runt couldn't take it. He'd fucking let them beat the hell out of him until they got tired. Without a healing factor, Jimmy damn near died from that beating he got.",
        "Three weeks later, Jimmy was well enough to try again, but Victor had waited for another storm. They'd set off in the middle of the night as the blizzard raged around them. Jimmy had complained every step of the way. He hadn't been thrilled either, but the blowing snow would cover their trail, and the weather was bad enough that he'd doubted anyone would try and follow for long. Just before dawn, he'd found a cave. It kept them out of the wind, and he'd gotten a small fire going. Jimmy finally fell into an exhausted, nervous sleep. He'd stayed up, keeping watch and planning where they would go from there.\n\nThe frail whimpered in her sleep. He reached out and stroked her leg absently, expecting her to settle again. Instead she woke up.\n\n\"Where are we?\" Her voice was still muddled with sleep.\n\n\"Still in Vermont.\" He slowed the car and turned onto a nearly hidden dirt road. A few minutes later, the headlights picked out a decrepit barn in the distance.\n\nShe sat up straighter and her anxiety spiked.\n\n\"We're switching vehicles. Stay here.\" \n\n*~*~*~*~*~*\n\nKelly put the jacket on again and zipped it. She watched him move what looked like a loose board just enough to expose a numeric key pad. He punched in a code and she heard a whirring noise. Light leaked out from between the gaps in the wooden doors. He unlocked those and got back in the car. He drove in to the clean, well-lighted space of a building within a building. She got out of the car when he did. \n\nShe looked around. \"This is....wow.\" \n\nHe chuckled. \"You think I'd leave my shit laying around in the middle of nowhere with no protection?\"\n\n\"I'm not sure what I thought.\"\n\nHe pulled a cover off a deep blue Escalade with dark tinted windows. Kelly didn't realize her mouth was hanging open until she saw him grinning at her, his fangs clearly visible.\n\nShe blushed. \"Okay, so I wasn't expecting that either.\" \n\nHe chuckled. Kelly was sure this man didn't need any help with his ego, but she could tell from the set of his shoulders that he liked seeing her impressed with something he owned. \n\nHe opened the trunk and started transferring bags. \"C'mon.\"\n\n*~*~*~*~*~*\n\nCreed had been sure that she was going to annoy the shit out of him on this trip, but every time he expected her to be a pain in the ass she wasn't. He was supposed to be the unpredictable one, frails were supposed to be easy to read. Course he'd never spent this much time with a conscious one before, maybe they were all like that. \n\nShe'd had her eyes closed for the past hour, but he knew she wasn't sleeping. The anxiety had settled around her again, though it wasn't as strong as before. He guessed he would count that as a step in a positive direction. \n\n\"Ever see the ocean, frail?\" He asked.\n\nShe glanced over at him, as if surprised to hear his voice. \"When I was four we went to Florida and I know we spent some time at the beach. I used to have pictures of it, but I don't really remember it. I guess I was too young.\" Her voice was soft, like it was before she fell asleep.\n\n\"Used to have pictures?\" Something about the way she said it struck him, he glanced over at her. She was looking out the window into the darkness.\n\nShe shrugged. \"Things happen.\" \n\nHe wondered if she knew how unconvincing it sounded. He let a growl creep into his voice. \"I can guess what happened.\" \n\nShe gave a little nod and looked over her shoulder at him. She tried to manage a smile. \"Why do you ask about the ocean?\"\n\n\"The house is near the ocean.\" \n\nAnother small smile, this one more genuine. Her eyes lingered on him. \"Sounds beautiful.\"\n\n\"Started out as a pile of shit. It's pretty livable now though.\"\n\nShe laughed softly, it dispelled some of the anxiety that had settled around her. When he glanced over, he could see that some of the animation had returned to her eyes. One bare foot protruded from her makeshift blanket.\n\n\"Will you be upset with me if I ask how much further?\"\n\nHe reached out and grasped her ankle, allowing his claws to tease her soft flesh. She moved her leg a little closer. \"Close to four a.m. now. I figure we'll stop for breakfast in a couple of hours, we should be there by nine.\" He scratched carefully, just enough to raise stinging red marks that would be gone before they stopped for breakfast. \"Any other questions, frail?\"\n\nHe smelled the barest hint of her arousal. The anxiety was almost entirely gone. \"No.\" She smiled drowsily. \n\nHe turned his eyes back to the road, but kept his hand on her ankle."
    ],
    "authorname": "psyche_b_mused",
    "tags": [
        "victor creed",
        "roadtrip",
        "wounds",
        "anger"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/what-the-cat-dragged-in-ch-06"
}