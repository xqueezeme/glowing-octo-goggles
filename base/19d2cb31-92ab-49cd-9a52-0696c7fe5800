{
    "title": "Secret Smiles and Three Little Words Pt. 38",
    "pages": [
        "Chapter 53 \n\n\"Good morning,\" Alex said walking into the living room. \n\n\"Good afternoon,\" Gavin grinned pointing out that it was after lunch. \n\nShe looked to the clock and shook her head. \n\n\"Sorry, I couldn't sleep so I went to the hospital,\" Alex explained kissing Nora who was coloring with Gavin. \n\n\"Everything Ok?\" Gavin asked. \n\n\"Yes,\" Alex nodded picking up a crayon and began helping as well. \"Just wanted to make sure Dad knew what he was supposed to be doing.\" \n\n\"What he was supposed to be doing?\" Gavin asked with a grin. \n\nAlex nodded. \n\n\"Ok,\" Gavin smiled. \"I have to go back to Chicago today, I have a surgery scheduled. I can reschedule if you need me here.\" \n\n\"No,\" Alex shook her head. \"We are just waiting on Dad, so go back.\" \n\n\"Ok,\" Gavin nodded. \"I'll drive back from Chicago so we can lose the rental.\" \n\n\"Ok,\" Alex nodded. \n\n\"Are you wanting to stay here, or should I look for a more permanent place until your Dad is better?\" Gavin asked her. \n\n\"What do you mean?\" Alex asked him. \n\n\"The landlord here wants to rent it,\" Gavin told her about Livy's apartment. \n\n\"Oh,\" Alex frowned. \"I don't want to rush back.\" Alex told him, she hadn't even thought about the apartment. \n\n\"Ok,\" Gavin nodded. \"I'll start looking for a place to rent here.\" \n\nAfter dropping Gavin at the airport in Pittsburg, Alex and Nora made their way back to the hospital. \n\nWalking in, they found Al getting some physical therapy. He smiled at them as the physical therapist finished stretching his legs. \n\n\"How are you feeling today?\" Alex asked him. \n\n\"Just so wore out!\" Al complained. \n\n\"Part of it is the meds,\" Alex explained. \"At least that is what Gavin told me.\" \n\n\"Where is he?\" Al asked as he held Nora in his arms. \n\n\"He had to fly back to Chicago for some appointments,\" Alex told him watching his father and Nora together made her smile. \n\n\"How are you doing little girl?\" Al asked Nora. She shrugged. \n\n\"You don't smell like you normally do,\" the little girl told him. \n\n\"Well, that's probably because I haven't had a shower in days!\" He laughed. \n\n\"You don't smell bad Grandpa, you just don't smell like you normally do,\" she assured him. \n\n\"I don't have my man cologne,\" he told her. This brought the memory of the scent to Alex. His Old Spice. \n\n\"You look better today,\" Alex told him taking his hand. \n\n\"I guess you and Gavin were right,\" Al told her. \"With all that is going on...I just needed to make a decision.\" \n\n\"I like the decision you have made,\" Alex smiled. \n\n\"Gotta get better,\" Al said kissing Nora's head. \"I have a job to do!\" \n\n\"Where are you guys staying?\" he asked. \n\n\"Right now, at ...Nora's,\" Alex choked on the word 'Livy's', never able to get it out. She switched to make it Nora's place instead. A name that wouldn't bring tears or a nauseous feeling. \"But we will have to move to a hotel or something after Gavin gets back.\" \n\n\"Why don't you guys just stay at the house?\" Al asked her. \"Plenty of room there, and it would make me feel better if someone was there.\" \n\n\"Mom is there,\" Alex frowned. \"I'm not sure I'm ready for her yet.\" \n\n\"What do you mean?\" \n\n\"There was a...incident,\" Alex said carefully. \"I...sort of...hit her.\" \n\n\"You did what?\" Al asked his voice going cold. \n\n\"Dad,\" Alex tried to get out of the quicksand of the conversation. \"Later.\" \n\n\"No,\" Al told her, his eyes hardening. \n\nAlex shifted her eyes towards Nora, indicating she didn't want to discuss it in front of her. Al nodded that he understood but he shook his head angrily letting Alex know he wasn't happy. \n\nThe door behind her opening had them both looking to it. Krista and her husband Ken walked in, Trevor after that. \n\n\"Hey Aunt Alex,\" Trevor smiled as he saw her. \n\n\"Hey Trevor,\" Alex smiled and stood. \n\nShe hugged the teen and within that hug she could tell there was still some discord between him and his parents. It was the way he held on to her a little longer than normal that told her so. Telling her within the embrace that there was a pain he wanted her to ease. \n\nShe leaned back and cupped his face in her hands and let him know with her eyes that the message was received. He smiled when he realized she got it. \n\n\"How are you doing?\" she asked him. \n\n\"Still kind of shook up, ya' know?\" he asked. \n\n\"I know,\" she said hugging him again. \n\nTrever sat down near Nora and went over the last couple of hockey games for Al who wasn't allowed to watch games as it got him too excited. The Penguins had pulled out two overtime games and was looking like a lock for the playoffs. After a few minutes of small talk, Trevor knew he had to get Nora from the room so the adults could \"talk\". He could tell by the way his parents and Alex weren't talking. Nothing said between them but the icy stares. \n\n\"Hey kiddo,\" Trevor smiled. \"What do you say we go down and check if they have those gummi bears you like so much?\" Nora nodded and Alex pulled some money out of her pocket. \n\n\"No, I got it,\" Trevor told her with a shake of his head. Alex took his hand and put the money in anyway. Trevor went to argue but Alex lifted her eyebrows. \n\n\"Are you sure you want to argue...with me?\" Alex winked at him. \n\n\"No chance,\" Trevor laughed. The two kids left the room. The mood in the room shifted dramatically. Gone was the light conversation of hockey and school. Now the air seemed to get heavy and Alex looked to her father who sensed it as well. \n\n\"You have to let Mom move back in,\" Krista began as soon as the door was closed behind the kids. Alex looked to him, shocked that her mother wasn't living at home. \n\n\"Mom isn't living at the house?\" Alex asked him. He shook his head. \n\n\"No, he kicked her out because of her belief in God,\" Krista growled. Alex cut her eyes to her oldest sister and shot fire at her. \n\n\"I did not kick her out for her belief in God, I kicked her out for her lack of it,\" Al told them carefully. \"She claims to be Christian, but fails in living like it!\" \n\n\"Dad!\" Krista whined. \n\n\"Stop,\" Alex demanded her older sister to stop whining, the mere sound of her whiney voice like that of nails on a chalkboard. \"Explain,\" she demanded from her father. \n\n\"I told your mother to choose,\" Al told her. \"If she wanted to live with me and stay as my wife then she would have to leave her church.\" \n\n\"Dad,\" Alex was confused. \"Why?\" \n\n\"Her church was tearing this family apart,\" Al told her firmly. \"Scratch that...it tore this family apart.\" \n\n\"I watched her use her church to push you away,\" Al told her taking her hand. \"I haven't forgiven myself for that yet...then she starts in on Livy. I knew you were strong enough to handle all the bullshit...but Livy was never strong like you. I could see what her mother was doing with her words and I did nothing!\" He shook his head in humiliation. \"Then she did something I never thought I would ever have to worry about.\" \n\n\"What was that?\" Alex asked him. \n\n\"She put Nora in a position to be abused,\" he told her. \n\n\"What?\" Alex growled. \n\n\"Livy had forbidden your mother to take Nora over to Don's,\" Al explained laying his head back, struggling to catch his breath. \"She was doing it anyway on Thursday nights.\" \n\n\"The last time, the little bitch of a whore Don was with hurt Nora,\" Al said as his eyes flashed with anger. \n\n\"Easy,\" Alex warned seeing his temper rise. \n\n\"I sent your mother over with specific instructions,\" Al told her. \"She was to apologize to Livy and promise to never disobey her wishes concerning Nora ever again.\" \n\n\"What happened?\" Alex asked carefully. \n\n\"She instead tried to convince Livy to go back to Don so she could save face in her fucking church,\" Al finished. \n\n\"Oh my God!\" Alex gasped shaking her head. \n\n\"I sat there in our kitchen, trying to figure out what happened to the woman I married,\" Al gasped in disbelief letting Alex know he was still left wondering. \"I realized, that as long as she was in the church she would stay this way. So I told her to pack some bags and leave. She could come back, when she left that particular church.\" \n\nAlex buried her face in her hands and shook her head. It was no wonder Livy felt so much pressure. She had already felt responsible for her own marriage falling apart, which had nothing to do with her. Then the pressure of watching her parent's marriage crumble. Then her mother and sisters ganging up on her while she was alone. \n\n\"You can't expect Mom to turn her back on God,\" Krista told him. \n\n\"I'm not,\" Al smiled. \"She can go to any church she wants to.\" \n\n\"Oh,\" Krista sighed with relief, glad he had changed his mind. \"She told me that you wouldn't let her move back in!\" \n\n\"No,\" Al shook his head. \"She can move back in when she gets your sister's forgiveness.\" \n\nKrista's face contorted then she rolled her eyes knowing that Alex liked to hold grudges. She hoped that the idea of their parents divorcing after thirty years would make her make an exception in this case. For the happiness of the family and then the church would be so much easier to handle. \n\n\"Alex?\" Krista asked. \"You aren't going to hold a grudge from something you could have ended years ago?\" \n\n\"What?\" Al and Alex said at once. \n\n\"Alex will forgive her,\" Krista assured. \n\n\"No,\" Al said with a shake of his head. \"She needs to get Livy's forgiveness.\" \n\n\"Dad!\" Krista gasped. \"She can't.\" \n\n\"I know,\" Al said coldly. \n\n\"Dad!\" Krista said in disbelief. \"Alex, talk some sense into him!\" \n\nAlex looked to him and frowned, reading his face. It was rare for her father to make such a resolute stand. He normally was easygoing. She then looked back to her older sister. \n\n\"Just a second ago you were blaming me for all of this, putting the blame at my feet for Mom and Dad. How did that work out last time you tried that?\" Alex barked at her. Krista misunderstood the comment and rolled her eyes. \n\n\"I think Dad needs to rest,\" Alex said staring at him. \"His marriage needs to take a back seat to getting better.\" \n\n\"But this is ludicrous!\" Krista exclaimed. \"You can't throw thirty years of marriage away!\" \n\n\"I'm not,\" Al warned her. \"She is.\" \n\nKrista threw her hands up in frustration. She stalked back and forth trying to figure out what to do next. She looked to Alex when the kids came back and she tilted her head that she wanted to talk to Alex in the hall. Alex frowned and kissed her father. \n\n\"I'm going for some coffee,\" Alex smiled. \"Want anything?\" \n\n\"Yeah,\" Al smiled. \"How about the Blast Furnace Burger from the Industry Public House? Tall beer? Think they would let me have that?\" \n\n\"Uh,\" Alex laughed. \"I think if the burger itself didn't kill you, the ghost peppers on it would!\" \n\n\"I eat one every time I'm in Pittsburg!\" Al defended. \n\n\"Which is why you had your little heart attack!\" Alex pointed out. \"Oh, and don't think that scolding is forgotten about! As soon as you're better...\" Alex left it open ended and Al chuckled. \n\nAlex waited for her sister to follow her out of the ICU room and for the door to close before turning. \n\n\"What?\" Alex growled. \n\n\"Alex,\" Krista said shaking her head taking note of the demeanor change. \"You can't let Mom and Dad end their marriage!\" \n\n\"I'm not letting anything happen!\" Alex told her. \"It sounds like Mom is doing it all!\" \n\n\"C'mon!\" Krista begged. \"This is our parents we are talking about!\" \n\n\"You still haven't clued in yet?\" Alex asked her. \"You still think all of this can be salvaged? Still not taking responsibility for you role in all this?\" \n\n\"My role?\" Krista gasped. Alex nodded then shook her head that Krista was playing this off. \"You are saying this is my fault?\" \n\n\"I'm saying this has been brought on by the lot of you!\" Alex suddenly snapped turning on her sister who was following a safe distance behind her. \"You and your fucking church! It disowned Livy...even though she was the only one blameless for what happened. Your fucking church sided with Don and his whore.\" \n\n\"You and your lot,\" Alex snarled with venom nearly dripping from her teeth. \"Then began to heap caustic remarks on her and disowned her. Your own flesh and blood! The people who she should have been able to lean on, abandoning her and taking sides with the guilty?\" \n\n\"We nev...,\" \n\n\"Fuck you!\" Alex snapped. \"I talked to Livy nearly every day! She told me everything you were doing.\" \n\nThe snarling and the venom being sprayed forced the nurse to call security to make sure this argument didn't get out of hand. \n\n\"How dare you!\" Alex finally gasped shaking her head. \"Livy was so fragile! She always was! She went with you guys only because she didn't have the strength to stand alone! Then when she needed your understanding...you deserted her! Then you began to heap all of your problems on her! Oh how bad this looks to our church? Oh how bad this makes US look?\" Alex mocked her in a sweet and innocent voice that was anything but. \n\n\"You wanted her to stay with a man that cheated repeatedly,\" Alex reminded. \"To stay with a man that had two close calls of knocking someone else up. She forgave him once, I sorta understood that...but if she would have done it a second time...I would have lost a lot of respect for her. I wouldn't have disowned her like you, but I would have told her she was being a fool to take him back!\" \n\n\"You know the old saying,\" Alex said as the security got there. \"Fool me once, shame on you...fool me twice? Shame on me!\" \n\n\"Having never been married, I don't expect you to understand what it takes to make a marriage work!\" Krista said dismissively. \n\n\"I need to be married to understand that a man should make a commitment and then stick to it?\" Alex laughed. \"No, no, no...I don't have to be married to know I should be treated with respect! I don't have to be married to have the man I love keep his dick in his pants!\" \n\n\"A vow is something different than living in sin like you are doing!\" Krista pointed out. \n\n\"Hmm,\" Alex laughed as the security guard came over. She looked at him and her eyes told him all he needed to know. He stopped and stood nearby. \"It's really rather funny...you do realize that marriage in itself wasn't really a thing back when Christ was alive?\" \n\n\"What?\" Krista laughed disbelievingly her mind scrambling to decipher what Alex was saying. \n\n\"Oh yeah,\" Alex smiled. \"When Jesus walked, if two people wanted to be together, there was no formal ceremony like we have today, that didn't start until nearly a thousand years after his death. Before then, it was two people who made a commitment to one another. Verbally...then backed it up with their actions. No paper, no rings and no church. So all of those people lived in sin?\" \n\n\"I mean if you want to ridicule me, be my guest,\" Alex shrugged. \"But the very first man and woman on earth?\" Alex shrugged with a smile. \"Who married them?\" Krista shook her head. \n\n\"Adam and Eve? No preacher? Living in sin!\" Alex laughed. \"Your idea of Christianity and marriage is so fucked up! Ridicule and point out the flaws of others while you pretend to have none yourself? Fucking hypocrite!\" \n\n\"I'm not doing that!\" Krista warned. \n\n\"No?\" Alex asked. \"Still not coming to grips that it was you, Mom and Brandy who killed Livy?\" \n\n\"Livy killed herself!\" Krista growled. \n\n\"Hmm,\" Alex shook her head. \"And your little stand here in the hospital? Where the three of you blamed her for Dad's heart attack?\" Krista lost the expression on her face. \n\n\"Oh yes, bitch,\" Alex nearly laughed. \"I know all about it! I know that you never returned her phone calls...never accepted her offers for dinner. Refused to be her sister when she needed you the most.\" \n\n\"Then stood here in this hospital and bullied her, blaming her for the fact your hypocritical church is now turning on you!\" Alex giggled sinisterly. \"That's what this is really about, right? You want Dad to take Mom back because holy shit! If they get a divorce? Oh my, what will your precious little church do to you? Or are you planning on shunning Mom next? Going to cut ties? Going to try and be Christian? First Livy, then Mom, what will the church think? Will they look at you and Brandy and wonder...which one is next?\" \n\n\"Will they huddle around and whisper behind your back, taking bets on which Lasko sister will bite the dust next?\" Alex laughed again. \"Oh Krista...are you next?\" \n\n\"Alex,\" Krista gasped. \n\n\"No, no dear,\" Alex said mockingly. \"You are not my sister, we are not family. Try that bullshit with someone else! Ease your conscious in your church, if you can.\" Alex left her sister there with her jaw open. \"If they will still have you after all the sin of divorced parents and a sister living in sin!\" \n\n*** \n\nJack sat in the front pew of his church staring at the floor. The blood was gone now but he could still see it. He could still see her, lying there. The tears fell silently down his face. The pain just wouldn't recede. It haunted him. The weight loss pointed out by those around him. His normally clean shaven face now replaced with stubble as he just didn't have the urge or energy to shave. \n\nHe looked to the stained glass behind the altar, Christ in his final moments. \n\n\"Forgive me Father!\" He whispered softly. \"I have doubts!\" He closed his eyes and tears were forced out. \n\nThe feeling of someone taking his hand caused his eyes to open and his lungs to empty the air in them as he looked at her. \n\n\"Livy?\" he gasped. She smiled at him. \"What?\" \n\n\"This isn't your fault!\" she told him. \n\n\"It's all my fault!\" he cried. \n\n\"No,\" \n\n\"Yes,\" he nodded. \"I should have chosen you!\" \n\n\"No,\" \n\n\"Yes,\" he closed his eyes and when he opened his eyes, she wasn't there. He knew she wasn't real, but she had been haunting his dreams. Now she was haunting him while he was awake. \n\n\"Father Jack?\" the voice caused him to spin and look behind him. \n\n\"Alex,\" he smiled. He stood and faced her. \n\n\"Are you OK?\" she asked him coming closer. \n\n\"Yes,\" he nodded. \n\nShe looked at him skeptically and took his outstretched hand and shook it. \n\n\"How can I help you?\" Jack asked her guiding her to the pew and sitting down with her. \n\n\"I'm struggling with all of this,\" Alex admitted. \"But I should warn you, I'm not Catholic.\" This caused a soft huff of a laugh from the priest. \"What?\" \n\n\"The very first conversation with Livy began an awful lot like this!\" he smiled. \"I first met your sister right there.\" Jack said turning and pointing to the pew two rows back. \n\n\"She was so lost!\" Jack told her softly. \"So confused!\" Alex nodded as she watched the tears fall. \n\n\"Disowned by her family...abandoned by her church...husband causing her so much pain, struggling to figure out what was best for Nora, standing alone,\" Jack complained. \"Not you of course,\" Jack corrected. Alex nodded that she understood. \n\n\"She felt that even God had abandoned her,\" Jack shook his head as he looked to the spot on the floor he last felt her. Alex followed his eyes as he had stopped talking. \n\n\"Father?\" She coaxed softly. \n\n\"Sorry,\" he said shaking his head to clear the vision of her there, covered in her blood. \"What can I do for you?\" \n\n\"I'll be taking Nora home with me, once my father is better,\" Alex told him. \"Livy has asked me to take Nora in, with her Will.\" \n\n\"I understand,\" Jack nodded as his face became distant again as he stared at Livy on the floor of blood. \n\n\"I'm going to keep her in the Catholic Church,\" Alex told him following his eyes again. \"Not being Catholic, I'm not sure what to do.\" \n\n\"Hmm,\" Jack smiled. He turned to face her. \"Nora has already begun the Catechism classes, so you just need to contact the local church near you. Once she finishes her classes, she will have her first communion. Then she will be Catholic so these conversations with Lasko women don't start with 'I'm not Catholic!'\" He laughed without humor. ",
        "\"Are you ok Father?\" Alex asked as she watched him stare at the spot on the floor again. \n\n\"No,\" he said simply. \"I won't ever be ok again.\" He looked to her and shook his head that he didn't want to go into it. \n\n\"Jack,\" Alex said touching his face gently. \"This was not your fault.\" \n\n\"Yes it was,\" Jack said tearfully. \"If I had been here...\" \n\n\"Jack,\" Alex shook her head. \"Livy would never have blamed you...Nora doesn't blame you. I don't either. I am happy that in her final moments she was with someone who cared about her!\" \n\n\"Sorry Alex,\" Jack said standing up. \"I wish forgiveness was that easy!\" He began to walk towards the door to leave. \n\n\"Jack,\" Alex said not looking at him. \"It was that mentality that killed Livy...don't do the same.\" \n\nJack stood holding the doorknob in his hand. \n\n\"You were so quick to forgive Livy,\" Alex pointed out turning to him. \"Be as quick and easy to forgive yourself.\" Jack said nothing but left the sanctuary quietly. \n\nAlex looked to the immaculately clean floor and wondered what he was looking for. \n\n*** \n\nGavin stood in the entryway of the condo. His eyes looking at everything. He began to wonder if his life was ever going to be the same. On the flight home, all he could think about was how his life was going to change now. Not just a little, but dramatically. He was still adjusting to having a woman in his life who was about to become his wife! \n\nNo longer looking at the woman on his arm as just a sub, or just a woman he was living with for a short period of time. This relationship had no definitive end, well it did. Until death do us part. This relationship wasn't like the others. It wasn't like Elizabeth or Regina before her. This one, had kidnapped his heart and he didn't want it back. \n\nHe adapted his mindset to accept the fact he was no longer going to be a bachelor, now he had to change it again. Now he was going to be married and become an instant parent. It wasn't something he had even thought about. Yes they had talked about her going off the birth control but he thought he would have had time to come to grips with children. Nine months at least! \n\nNow, he looked around the condo and thought of all the things he had done in this place. The parties. The women. He let his head drop back and thought about it. He liked his lifestyle. He liked BDSM. How does one continue that with kids? \n\nThe phone in his pocket rang and he answered it without looking. \n\n\"I hear you are back in Chicago?\" Madelyn's voice asked him. \n\n\"Yeah,\" Gavin nodded. \"I had some surgeries scheduled.\" \n\n\"Are you ok?\" she could hear the doubt in his voice. \n\n\"I'm just standing here looking at the condo,\" he told her. \n\n\"Something amiss?\" \n\n\"No,\" he told her. \"Just thinking how my life is changing.\" \n\n\"Doubts?\" she asked. \n\n\"I guess so,\" he admitted embarrassedly. \n\n\"I would be surprised if you weren't having some doubts,\" Madelyn told him. \"It would have told me you weren't thinking everything through.\" \n\n\"I liked my life,\" Gavin told her. \"Is it horrible to say that?\" \n\n\"No,\" she assured him. \"But it doesn't have to end.\" \n\n\"How the hell can I have a Dom/sub relationship with a child in the condo?\" Gavin asked her. \n\n\"I don't know,\" she admitted. \"I never had to factor kids into the life.\" \n\n\"I've been a Dom so long, what if I can't do vanilla?\" he asked himself more than her. \n\n\"You adapt,\" she answered. \"You are such a good Dom that you adapted almost yearly, adapting for the sub!\" \n\n\"That was different,\" he told her. \n\n\"No,\" she argued. \"You adapted, that's all you have to do.\" \n\n\"What if I can't?\" \n\n\"Then you will have to leave her,\" Madelyn said firmly. \n\n\"I can't do that either,\" he said softly. \n\n\"I thought you and Alex had talked about kids?\" she asked him. \n\n\"We had,\" he agreed. \"But I thought I would have had time to adjust. Time to come to grips with the realization...,\" \n\n\"Realization?\" Madelyn asked when he stopped talking. \n\n\"I'm not going to be the most important person in her life anymore,\" Gavin whispered. \n\n\"No,\" Madelyn agreed. \"You won't.\" \n\n\"How does a Dom adjust to that?\" Gavin asked her. \n\n\"I don't know,\" Madelyn said softly. \"I don't know.\" \n\n\"I'm also going to have to violate another absolute,\" Gavin told her. \n\n\"Which one?\" \n\n\"I'm going to have to share,\" he told her. \"I'm going to have to share her.\" \n\nThe following morning he made his way down to the garage to start his drive back to Pennsylvania. He hadn't slept much and now he wondered if he should put it off another day and get some rest. He rejected the idea, knowing Alex was there by herself, and she needed him there. \n\nLooking at the two cars parked in the private garage he stopped. Both were sports cars. Bucket seats, and very little room in the back. Built for single people, not for people with little kids in booster seats. Not families. Bringing the wave of disillusionment that his life that he loved was now changing and he couldn't stop it from happening. \n\n\"What the fuck are you going to do?\" Gavin asked himself. The doubt clouding his mood. \"Adapt.\" He said heading for Alex's Mercedes. \"You are just going to have to adapt!\" \n\n*** \n\nAlex stood waiting for the elevator. They were taking her father for more tests and therapy. She was holding Nora's hand as they had decided to go out for lunch instead of eating hospital food again. Her smiled broadened as she saw him walking up. \n\n\"Uncle Gavin!\" Nora shouted as she dropped Alex's hand and ran towards him. Gavin dropped to his knees and Nora engulfed him in her arms and he did the same with her. His eyes closing and his face losing some of its distress. \n\nAlex watched it happen and wondered what he was worried about. Was it just the terrible stuff swirling around them or was there something more even more unfathomable? She watched his face melt and the smile come out. Nora kissed his cheek and he returned the love to her. Then looked up at Alex. \n\n\"Where are you two ladies headed?\" he asked Nora. \n\n\"To get real food!\" Nora whispered in his ear, which caused him to laugh. \n\n\"Not digging the hospital food?\" he asked her. \n\n\"It doesn't have any taste!\" Nora complained. Gavin nodded that he agreed. He stood up and Alex was still watching him very carefully, trying to ascertain what was on his mind. He shook his head at her as she was still easy for him to read. \n\n\"I'm fine,\" he told her taking her face and cupping it with his hand. \n\n\"Are you sure?\" she asked him. \n\n\"Positive,\" he nodded. \"Well...sorta positive. We'll find out in the next fifteen minutes.\" He said, his mischievous grin coming out. \n\n\"What does that mean?\" Alex asked him. \n\n\"I'll explain over lunch,\" he told her taking her hand. Now he was flanked by Nora in one hand, Alex in the other. \n\nHe began to walk out and caught their reflection in the glass. They looked like a family. He stopped and Alex looked to him then to where his eyes were glued. \n\n\"What's wrong?\" she asked. \n\n\"Nothing,\" he shrugged. \"Adapting.\" \n\nHe continued his way out, with the girls on either side of him. He pulled the key out to the Mercedes and pushed the remote to unlock the doors. \n\n\"What the hell is that?\" Alex asked stopping in her tracks. \n\n\"That,\" Gavin gave a half smile. \"Is an adaptation.\" \n\nThey stood looking over the new Mercedes SUV. Alex closed her eyes, she should have recognized that little grin. It was the same one he had when he got her the other Mercedes. \n\n\"I didn't think we could both keep sports cars,\" Gavin shrugged. \"Not much room for car seats.\" \n\n\"It's still a lease, right?\" Alex asked he voice hardening. Gavin chuckled. \"Shit!\" \n\n\"I think we are beyond leases, right?\" Gavin asked her. \"I mean, the lease thing was only supposed to last two years anyway...and that was when I was looking at us as dating.\" \n\n\"Now that we are going to be married,\" Gavin shrugged. \"I kind of figured that whole stance of buying your own car was gone.\" \n\n\"No,\" Alex said through gritted teeth. \"It wasn't!\" \n\n\"Really?\" Gavin chuckled. \"We are about to become husband and wife...sharing in all things. Love. Home. Money. Bills.\" He could see that line of reasoning was having no effect on the temper tantrum Alex was thinking of throwing. \n\n\"I mean really?\" Gavin asked her deciding to change tact's. \"Where are we going to put Nora? In the trunk of my Aston Martin? And while your old Mercedes said it had a back seat...you know for a fact it doesn't really have much...uh room?\" Gavin flicked his eyebrows at her reminding her of the one attempt of having sex in it. They decided it was impossible and he wound up fucking her on the hood instead. \n\n\"I could have gone with a mini-van,\" Gavin pointed out. \n\n\"Oh God! No!\" Alex said with a gasp. \"I'll take the SUV!\" \n\n\"Thought so,\" Gavin laughed as he opened the door and put Nora in the car seat he had already retrieved from the rental car. He held the keys up to her and she took it apprehensively. \n\n\"I'm not sure how I feel about this,\" Alex warned him. \n\n\"I'm not sure we have a choice,\" he said back. \"We are both going to have to make some on the fly adjustments.\" \n\n\"Like?\" she asked knowing he wasn't really talking about the new car. \n\n\"Our lifestyle,\" he told her. \n\n\"I'm sorry,\" Alex said shaking her head. \"I hadn't even thought about it!\" \n\n\"It's not something we have to address right now, but it will have to be addressed.\" \n\n\"Do you have ideas?\" she asked. \n\n\"None,\" he told her with a shrug as he opened the driver's side car door. \"But, sometimes life doesn't give you choices of when and where to adapt. Sometimes you have to adapt or fade away.\" Alex closed her eyes. She didn't like the concept of fading away. \n\n*** \n\nThey walked into Alex's childhood home. It seemed empty without her mother or father there. Gavin took the sleeping Nora up the stairs and Alex followed him slowly. Looking at the pictures that lined the staircase. She started to cry as she saw a picture of a smiling Livy, her front tooth missing in a school picture. \n\nGavin turned at the top of the stairs and looked back at her. \n\n\"First door on the left,\" Alex told him shaking her head and continuing on. Alex pulled the small girl's shoes off as Gavin made his way out. \n\nLooking back at her Alex's heart began to break. Even though she was going to be with her from here on, Nora would have to someday come to grips with her mother's suicide. There would be sadness involved. There would be anger as well. There would be confusion. There may even be some guilt. \n\nShe found Gavin already in bed in her old room. She smiled at him from the doorway and began to take her clothes off. She slid into bed after putting on some sleep wear. Gavin pulled her deeply within his embrace and held her tightly. She wrapped her arms and her fingers around his and felt his body on hers from behind. \n\n\"What are we going to do with our lifestyle choice?\" Alex asked him. She had been thinking about it ever since he brought it up. Could they continue it? \n\n\"I don't know,\" he admitted. \"Not the most pressing problem we have, so it will keep.\" \n\n\"What's the most pressing problem?\" she asked him. \"The wedding?\" \n\n\"No, that's been postponed,\" he told her. She spun on him. \n\n\"What?\" the panic ripping through her as she thought about the negatives that statement had. \n\n\"Easy!\" he commanded as he realized where she leapt to. \"I put it on hold because your dad is in no condition to walk you down the aisle!\" \n\n\"But...,\" she began but couldn't get the question out. \n\n\"I'm not letting you off that easy!\" Gavin teased. \"You are still stuck with becoming my wife!\" She smiled as her breathing came back as she was sure she hadn't taken a breath since her mind leapt to conclusions that he was backing out of marrying her. \n\nShe returned to his embrace. \n\n\"We will do the wedding when Al is strong enough to fulfill his fatherly duties,\" Gavin assured her with a kiss to the back of her head. \n\n\"Just as long as you aren't changing your mind,\" she said cautiously. \n\n\"Never,\" he told her. \n\nIt was just one word, but it was the way he said the word. The conviction in it. Like what she believed the men at the Alamo had told Santa Anna when they were told to surrender. The word leaving no doubt at the ending. \n\n\"Our lives are going to change...aren't they?\" she asked him. \n\n\"Yes,\" he whispered. \"For the better.\" \n\nShe smiled and sleep came to her quickly. The exhaustion of the emotions taking its toll. The relief of him holding her. The relief of the knowledge through all of this, he was still there, holding her hand. \n\nShe thought back to the hospital, when he stopped and looked at something she couldn't see. Then in her mind's eyes she saw it. He was not only holding her hand. He was holding Nora's. That's what had stopped him. \n\n*** \n\nJack opened the door to the rectory and the smell overpowered him. He furrowed his brow and made his way to the kitchen to see who was cooking. Walking in, his feet cemented to the floor of the doorway. \n\n\"Hey honey,\" the woman smiled at him. \"Dinner will be done in a few!\" She went back to cooking, the smell making his mouth water. \n\n\"What are you doing?\" he asked her, the smile crossing his face. \n\n\"Making dinner,\" she replied. \"Duh!\" \n\n\"No,\" he smiled as her chastising. \"What are you doing here?\" \n\n\"Where else would I be?\" she asked him setting a plate down on the table for him. \"C'mon, I know you're hungry. You haven't eaten in days!\" \n\n\"I haven't been hungry,\" he told her dragging his feet to the table. \n\n\"Well,\" she shrugged. \"I hope you're hungry now, because I made tons!\" \n\n\"Well, the poker boys will be happy then, until you take their money again,\" he said to her as he sat down. He didn't pick up the fork and dig in like his stomach wanted to. He stared at his food and then lifted his head to look at her. \n\n\"Oh my!\" he gasped. She had undone the buttons on her shirt and had slipped it off. \"I can't.\" He told her immediately. \n\n\"Yes you can,\" she smiled taking off her bra and revealing herself to him. He turned his eyes away. \n\n\"Please,\" he whispered. \"Get dressed!\" \n\nShe picked up his hand and put in on her breast. The soft warm feel of it filled his hand and he gasped softly. \n\n\"Do you like that?\" she asked him. He could only nod. She picked up his other hand and put it on her other breast. \"Feel me Jack, squeeze me, I know you want to!\" She reached to his lap and felt him and found him hard. \n\n\"This is...I can't,\" he whispered still not looking at her, but not pulling his hands away for her body. \n\n\"It's ok,\" she whispered. \"I won't tell anyone!\" \n\n\"I will know!\" he told her firmly as she pulled his zipper down. \"Please don't!\" \n\n\"You lips say one thing, your cock says another!\" she told him dropping to her knees and taking his hardness into her warm mouth causing him to whimper slightly. \n\nHe looked down and saw the dark hair bobbing gently on him. His cock disappearing then reappearing from her mouth. Her saliva glistening on it making it shiny in the kitchen light. His hand came to rest on the back of her head, not pulling her off, but helping her along. She sped up as he leaned back and let her continue. Something he knew he shouldn't allow. But God had failed him, maybe he wasn't meant to wear the collar anymore. Maybe this was the last straw. \n\nThe wet, warm feel of her mouth made his legs shake as his mind fought within itself. The guilt of letting this poor girl go down on him, damning them both! His hips began to rock upward, how long had it been? Since before seminary. Ten years? Fifteen years now? That was the last time he let a woman touch him with sexual desire. \n\nThe girl was drunk, a college girl from a nearby state school. This woman wasn't her. He truly cared about this woman. He scoffed at himself, if he cared about her he would stop her and keep her from damning her soul...and his. Still, his hands weren't stopping her, they were helping her. Her soft moans telling him she wanted this, and her aggressiveness telling him she had wanted it for a long time. \n\nHis toes began to point as his orgasm began to build. His legs tight and shaking now as she brought her hand up and began to tug on his hard cock. Holding just the head in her mouth as she stroked. \n\n\"You need to stop!\" he begged. \"This is wrong!\" \n\nShe giggled in response as she truly knew he didn't want her to stop, if he did, he wouldn't be pressing on her head. \n\nHe erupted into her mouth causing him to call out in a growl as his long unattended cock bucked with great force, a buildup of cum over the years it seemed. Exploding and filling her mouth with his salty seed. Lightning bolt, after lightning bolt shot through his body with each ejaculation into her mouth. He seemed to cum forever, his breathing ragged as he fell back against the seat back as she slowly ran her tongue around the head of his cock, cleaning him off. \n\nHe looked down at her, knowing he could never return to the collar now. She looked up at him. Her eyes satisfied as she reached for the glass on the table and took a drink to wash him down. \n\nJack awoke with a start, his breathing rapid and short. His shirt wet with perspiration. He felt himself through his pajama and found himself rock hard, a slight wetness surrounding the tip of his cock in his pajama bottoms. \n\n\"Please Lord,\" he whispered. \"Forgive me!\" He said a short prayer as his breath became normal again. He rolled over and saw her. \n\n\"Livy,\" he whispered as she sat in the chair in his bedroom. \n\n\"That was a completely inappropriate dream,\" she told him. Her hands resting on the arms of the chair in which she sat. \n\n\"Why are you haunting my dreams?\" he asked her. \n\n\"Is that what I was doing?\" she smiled. \"Haunting you?\" \n\nJack sat up in bed and looked to the empty chair. \n\n***"
    ],
    "authorname": "CJT",
    "tags": [
        "oral sex",
        "cum in mouth"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-38"
}