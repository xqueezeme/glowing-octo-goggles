{
    "title": "Surefoot 28: Dead Man's Hand",
    "pages": [
        "<blockquote>\"If you can't spot the sucker in your first half hour at the table, then you are the sucker.\" - Mike McDermott, Rounders/<blockquote>\n\nSpace Station Ta'Landra, Casperian Sector:\n\nThe Caitian male strode into the casino as if he owned the place, his mahogany tail swishing with anticipation, and his ears twitching as he listened to the sounds of the flashing gambling machines, the music from the distant speakers, and the cheers and jeers of the gamblers and their supporters and detractors, as a thousand ephemeral dreams were cultivated and burned with mercurial speed.\n\nThe casino, like the station around it, was designed and owned by the Son'a, which meant it was even more decadent and hedonistic than most civilian-run facilities, and there was a scent of many substances that would be banned in Federation space. The actual number of Son'a present, however, seemed tiny, compared to that of their servant races the Ellora and the Tarlac, one of the former approaching him with a polite smile. \"Good evening, Sir, and welcome to Zad'ik's. May I help you?\"\n\nHe took in her scent, tugged at the sleeves of his tailored tuxedo, his tail twitching with anticipation as he replied, \"I hope so. I'm here for the Tournament.\"\n\nThe Ellora hostess, a dark-skinned saurian with patterned, swept-back bone plates on her hairless head, widened her smile a little more. \"Your name, please, Sir?\"\n\n\"Esek Hrelle, of Cait.\"\n\nShe nodded, quickly and fluidly checking a small display unit in her hand, before looking up again. \"Here we are. It is fortunate that you arrived when you did, Sir; many hopefuls are on hand to take the place of potential latecomers.\"\n\nHe grinned. \"Here's hoping my luck continues.\"\n\nShe handed him the display unit. \"Please confirm the credit transfer of fifty bars of gold-pressed latinum for your buy-in.\"\n\nHe nodded and accepted the unit, confirming the transfer from the station's bank, where he had deposited the money following his arrival, before handing it back. She motioned for him to follow her towards the rear of the casino as she did her spiel. \"The Tournament will consist of three rounds, with breaks for complimentary food and hygiene room visits, and the House game is Terran Hold 'Em. You'll receive the same amount of chips for your stake as everyone else, in denominations of Ten, Twenty and Fifty; you cannot add to it from outside sources, and your place in the Tournament will end when your stake is depleted, if you leave the casino at any point, or if you are caught cheating. If you make it to the subsequent rounds, whatever you have accumulated to that point will be converted to higher-value chips.\"\n\nShe led him into a room as large as the main casino, but dominated by a series of round tables topped in green felt, where Tarlac dealers sat, warming up their hands with shuffling cards, and Ellora hostesses brought drinks to the participants already sitting down, eager to get started. Other players and spectators sat at the long, dark bar, and several Son'a, with their grey, stretched faces and cowled, brown-gold clothes, stood near a dais.\n\nHe also caught a familiar scent near the bar, but didn't look in that direction.\n\n*\n\nAt the bar itself, a sepia-furred Caitian female in resplendent blue sipped cautiously at her drink, watching the Tournament players through the mirror behind the bar-\n\n\"Someone, call Station Security.\"\n\nShe took in the scent of the Son'a male approaching her, and then his reflection, before turning, facing him and smiling. \"And why should Station Security be alerted?\"\n\nHe drew up, leaning against the bar and smiling, oblivious to how sepulchral the expression appeared to her; his age was hard to determine, given his people's proclivities towards crude cosmetic therapies, but his voice sounded young to middle age. \"Because it's a crime that a beautiful woman like you should be drinking alone.\" He chuckled at his own quip. \"Good evening. My name's Naal'en.\"\n\nShe turned, holding out her hand. \"Mleni Dal.\"\n\nHe accepted her hand, kissing her knuckles in an antiquated gesture. \"A sincere pleasure to meet you, Ms Dal. And what brings you to our little corner of space?\"\n\nShe sighed, making the remaining amber liquid in her wide-brimmed glass swirl and fizz. \"I'm a ship's doctor-for-hire, and I just finished a contract on a Tellarite ore freighter. Six months of dealing with Iridium Lung, hoof infections and insults.\" She rolled her eyes at that. \"Now I'm between engagements, as they say. You don't know of any vessels currently docked who might be looking for medical staff, do you?\"\n\nHe seemed to consider the question, as he signalled for a drink of his own. \"Well, I have some friends who work in Customs, I can ask around.\" He smiled again. \"Though I have to confess to being reluctant to let you get away. I've never met a Caitian before.\"\n\nShe smiled back -- letting her tail draw up and brush against his leg. \"And I've never met a Son'a.\" She raised her glass to him as he received a drink. \"Here's to getting to know each other better.\"\n\n*\n\nIn the hotel complex situated opposite Zad'ik's, a young couple in formal wear walked into the hotel, dragging several large suitcases behind them on antigrav leashes. They drew up to the Reception desk, the harried-looking Tarlac male clerk behind the desk asking, \"May I help you?\"\n\nThe male of the couple, a slim, silver-haired Terran in his early twenties, grinned as the female, a large-framed Bolian, nibbled at his ear. \"Yes, we reserved the Honeymoon Suite: Mr and Mrs John Smith.\"\n\nThe Bolian stopped nibbling to beam at the clerk and declare loudly and boisterously, \"I'M MRS SMITH!\" She shoved her beefy hand with the tiny diamond ring on her fourth finger into the clerk's face. \"HIS MOTHER HATES ME, BUT SHE CAN'T DO ANYTHING ABOUT IT NOW, THE OLD COW! HAH!\"\n\nThe clerk winced at the booming voice, but recovered quickly, providing them the key to their room.\n\nThey continued their effusive affection for each other until they entered the suite, before disengaging and silently retrieving two Starfleet security tricorders, quickly and thoroughly scanning every room, before finally looking to each other, nodding and shutting down their instruments, Neraxis declaring, \"No monitoring devices. Let's get to work.\"\n\nJonas set aside his tricorder and grinned cheekily. \"I wouldn't call it work.\"\n\n\"Horny bastard. Now come on, I want to be ready when Kami and Sasha do their thing.\"\n\nAs they began unpacking the equipment, Jonas pointed out, \"She wouldn't hate you.\"\n\nShe looked up. \"Huh? Who?\"\n\n\"My Mom. She'd love you.\"\n\n\"Oh. Thanks.\" She flushed a little darker blue now. \"I, ah, didn't mean to call her a cow, by the way.\"\n\nHe grinned. \"Don't worry, I've called her worse. In my head, anyway...\"\n\n*\n\nAt Docking Bay 14, a private Caitian pleasure craft designated the SS Opal Eye had arrived, and after the usual protocols, opened to release its one -- official -- passenger: a young, handsome, white-furred Caitian male, clad in a most expensive hand-tailored suit, complete with gold tail bands and earring in his pointed right ear. He approached the Ellora Customs clerk and smiled charmingly at her. \"And hello to you, sweet lady.\"\n\n\"Hello, Sir,\" she asked, smiling despite herself. \"Name, Origin, and Reason for visit?\"\n\nHe leaned in. \"Meow Rrori, of Clan Rrori on Cait; you'll have heard of us, of course.\" He glanced down at the claws extended on his fingers, idly rubbing them together. \"And after four months scouting this side of the Quadrant for potential business enterprises for my clan, I am in dire need of companionship.\" He leaned in closer, his chocolate-brown eyes fixed longingly on her. \"Soft, inviting companionship.\"\n\nThe Ellora clerk smiled back politely. \"Then, Mr Rrori, I would recommend Lar'ame's Pleasure Palace on Level Nine. They cater to only the finest of clientele.\"\n\nHe affected a look of disappointment at the suggestion. \"Oh? But what if I like what I see in front of me right now?\"\n\n\"I'm sorry, Mr Rrori,\" she replied. \"But only the entertainers in Lar'ame's are allowed to fraternise with visitors.\"\n\nHe made a disappointed sound. \"Such a pity; I'd love to have given you a tour of my ship, maybe even take you on a quick trip to Casperia Prime. Level Nine, did you say?\"\n\nShe nodded. \"The casino, hotel, restaurants and holosuites are also located there. Enjoy yourself during your stay, Sir.\"\n\nAs he strode towards the lifts, a voice in his inner ear spoke up. \"Red to Orange: are you a stroking idiot? What was that all about? What if she had decided to take you up on your offer?\"\n\nHe stopped, reached up and touched the area behind the right side of his jaw where his Embed lay under his furred skin, making sure no one was nearby as he replied, \"Calm down, Red. I'm an expert at these things; I could sense she wouldn't have been interested in me, as difficult as that may be to believe.\" He peered at the adjacent docking bay, where a Son'a transport ship had arrived, and noticed an alcove in the corridor. \"Ideal beam-in point, approximately eight metres in the direction of the transport, no station staff or security devices in the vicinity. Hurry, their passengers are about to disembark, you can blend in with them.\"\n\n\"I'm on it, Orange. Get going. And keep it in your pants; you're here to work, not rut. Red out.\"\n\nRrori sighed. His Squad Leader had been wound up like some ancient clockwork device since learning she was going to be Valedictorian at their graduation in a month's time, an honour he would have once craved for himself, to meet the supremely high standards expected from his clan. But since then, he had relaxed some, decided to just be the best he could be, and remain humble.\n\nSasha needed a good rutting herself. And more than once, he had considered forgoing protocol and offering her his superlative services. Except that he respected her, her embrace of Caitian culture... and her single-handed defeat of a Vlathi assassin.\n\nThen he headed off for the Pleasure Palace to make himself available... though not to those he would prefer.\n\n*\n\nAt the adjacent docking bay, the figure who had beamed into the alcove waited until the passengers were leaving, and surreptitiously joined them. She was dressed as a Son'a female in a decorated cowl and robes, and she glanced around, taking in her surroundings immediately, before spotting several male Son'a congregating near the access to the lifts. They conversed among themselves as she approached -- suddenly straightening up as they saw the rank of SupraAdhar on the visitor's clothes. A Subadhar spoke up. \"Ma'am! I, ah, can I help you?\"\n\nThe female saw his friends slink away, as she replied, \"I hope so. What's your name?\"\n\n\"Um, Subadhar Cul'kin, Ma'am. How may I be of assistance?\"\n\nShe regarded him -- and then softened her posture, smiling as best she could with her restricted facial muscles. \"Cul'kin? That's a manly name. Well, Cul'kin... I've just been transferred here from Son'a Command, I don't know anyone here, and I could do with someone to show me around. Would you like to show me around, Cul'kin?\"\n\n\"Me? Yes, yes of course!\"\n\n\"Good. Do you live alone?\"\n\n\"Alone?\" He swallowed. \"Um... yes, yes I do. Why?\"\n\nShe moved in closer, reaching up and lightly stroking his face. \"Well, I thought if we were going to have a tour of the station, we could start... in your quarters?\"\n\nHe laughed softly. \"Oh yes, that's an excellent idea... um...\"\n\nShe realised his hesitation, and offered, \"Sa'sha.\"\n\nHe was practically skipping to his quarters, opening the door and ushering her inside. She tensed, readied herself for when the door slid shut.\n\nThen she struck him in the solar plexus, driving her hand into his nose as he doubled over, before reaching up to his neck and squeezing, hoping her training sessions with Commander T'Varik bore fruit-\n\nCul'kin collapsed.\n\nSasha flexed her hand. \"'Start a tour of the station in your quarters'. Seriously, how do any of you guys fall for that porn dialogue crap?\" She found some spare material used for their cowls, tying the male's hands behind him before gagging him and dragging him into his closet. Then she found his communicator and ID and retrieved them, before touching the Embed just under the skin of her neck. \"Red to White: I've got them.\"\n\n\"Acknowledged, Red, Violet has a side entrance to the hotel accessible for you, come up to Room 409.\"\n\n\"Acknowledged, White. Over and Out.\" Then she began stripping off her Son'a disguise, her relief at being out of that claustrophobic gear eclipsed by her general nerves over all of this. She was certain everyone else was handling this mission better.\n\n*\n\nAt another docking bay, Weynik stepped out through the airlock with the other disembarking passengers, trying to suppress his nerves as he tugged at the lapels of his jacket, trying not to glance up at his tall, coal-furred Caitian companion in her attractive blood-red outfit -- or to acknowledge the tail that brushed up against him, or her hand as it touched the swept-back aquamarine fins on his head.\n\nHe was definitely out of his comfort zone here. He missed his ship, his crew... and especially his daughter Naida. He should be on his Bridge, barking orders, saving the Galaxy and coming home to sing and dance with his baby, not running around like this. If it had been that smug bastard Admiral Trenagen who had come up with this, he would have told him to fu-\n\nBeside him, Lt C'Rash made a sound, getting his attention, as they approached a bored-looking Son'a behind the Customs desk. The boredom lifted as he took in the sight of C'Rash, never even acknowledging the diminutive Roylan beside her as he asked, \"State your business -- and please tell me you're here to see me.\"\n\nWeynik waited for the man's attention, replying when he realised that he was never going to get it otherwise. \"She can be... if the price is right.\"\n\nThe Customs official glanced down with veiled confusion and more open contempt. \"And who, or what, are you?\"\n\nWeynik produced the fabricated identification. \"Nik Furee, of Roylan Talent Management. Call me Big Nik.\" He indicated the silent, glowering C'Rash. \"And this little lady is the hottest new star since the Beta Aquilae Nova: Pretty Kitty!\" As more interest was generated, Weynik felt himself get more into character, his words becoming theatrical, flamboyant and enticing. \"And when you get off duty and pop down to Lar'ame's Pleasure Palace, you'll see moves that you never knew existed! They talk about her all the way back to Argelius! And our hot little Caitian is here for a limited time only! Come early, or don't bother coming at all!\" He reached up, took her by the elbow and guided her along.\n\nHe saw one of the onlookers, a burly human male, reach out and try to touch C'Rash's tail -- until Weynik stepped in, grabbing the man by the wrist, twisting until the man was brought down in pain to his knees, before Weynik struck the man's throat with the outstretched tips of the fingers of his free hand. Everyone watched the man collapse fully to the floor, as Weynik looked around, warning, \"Look, but don't touch, gentlemen! My Kitty doesn't give it away for nothing!\" He started off, gesturing for her to follow.\n\nShe did, waiting until they were alone in the corridor before muttering, \"'Your Kitty', Captain? I think you're enjoying your role too much.\"\n\n\"Me? No, Lieutenant, absolutely not,\" he lied, touching the Embed just behind his right headfin. \"Green to White: Black and I are onboard.\"\n\n*\n\nIn the Tournament Room, a Son'a male stood on a dais, overlooking the 200-plus players and spectators, his voice carrying through the room as he announced, \"Welcome, one and all, to the Fourth Annual Ta'Landra Poker Tournament! I am your host, Adhar Zad'ik.\n\nNow, some of you I've seen here before, others are first-timers. But all have a chance to win the Prize, because as we all know, poker is not just a game of skill, but of luck. And what is the Prize? I know many of you have been asking my staff since you arrived.\" He raised a wagging finger as he laughed and many in the audience joined in. \"Naughty, naughty! Only the final six will get a glimpse... and then, they'll understand why we keep it a secret.\"\n\nHrelle stood in the back, half-listening, instead scanning the crowd of other participants. He knew his target was here, but of course it wasn't guaranteed that he would make it to the Final Round -- for that matter, it wasn't guaranteed that Hrelle would make it, either. He'd played enough poker to know that nothing was certain.\n\nFortunately, the Vulcan who planned all this seemed confident enough...\n\n*\n\nUSS Surefoot, Deck 2 Fore -- Conference Room, Two Weeks Ago:\n\nThe hologram rotated slowly over the table, looking more like a spiny organic sea creature than a space station, as Commander T'Varik stood aside and briefed the assembled. \"The Son'a outpost is designated Space Station Ta'Landra, situated in open space near the Horvian Cluster in the Casperian Sector, at the borders of Federation, Cardassian and Tzenkethi territories.\n\nThere are standing orders from Starfleet Command for vessels not to dock here for shore leave, due to the sanctions the Federation have currently levelled against the Son'a for their various illegal activities, including dealings brokered between themselves and criminal and terrorist organisations such as the Orion Syndicate. The station is heavily fortified by all accounts, and can accommodate any number of different vessels.\n\nOne of the station's chief administrators, a Son'a Adhar named Zad'ik, operates a casino on the station, and holds an annual poker tournament, with participants from throughout the Quadrant and beyond attending. The Tournament winner does not get a monetary Prize, but an object which remains a secret until the Final Round. Previous Prizes have all proven to be items stolen from various sources within the Federation or beyond: an intact and complete Kurlan Naiskos, the Jewelled Sword of the Third Hur'Q Emperor, and Van Gogh's Starry Night.\"\n\nShe changed the image on the display, to one of a pale-skinned human male of middle age, with receding dark hair and an aristocratic bearing. \"One of the regular participants, one who has made it to the Final Round at every Tournament without actually winning, is this man: Bastien Dumont, formerly of of the New Paris Colonies in the Omega Aurigae system. He runs a legitimate interstellar shipping network... but Starfleet Intelligence confirms he is also a senior operative for the Bel-Zon, managing their transport and smuggling operations. He is considered their Right Hand Man.\" She looked to one member of the assembled. \"In fact, Captain, it is believed he organised the Vlathi incident.\"\n\nHrelle nodded, tense. Misha was sitting on his lap, content to chew on one of the sleeves of his father's uniform, until he sensed Papa's gaze and anger fixed on the image of Dumont, and stopped chewing to turn and growl at it.\n\nSasha lifted her little brother up off of Hrelle's lap to scratch behind his pointed ears and cast out any aggression. \"If we know all this, why hasn't he been arrested?\"\n\n\"Lack of evidence, Ensign, despite the efforts of Starfleet Intelligence -- hence the mission assigned to us, not by Admiral Trenagen, but Admiral Tattok, and not officially an SI operation. Bastien Dumont lives and operates from his private cruiser the SS Corsaire, which will be docked at Ta'Landra for the Tournament. Our mission will be to take advantage of this short period to board the ship when it is minimally occupied, and surreptitiously obtain all available intelligence on the Bel-Zon, its operations and associates.\"",
        "\"And not apprehend him as well?\"\n\n\"No, Ensign. We will be in Open Space, on a Son'a facility, and the Federation currently holds no extradition treaties with them. Legally we cannot arrest him.\"\n\n\"Okay, how about we just kick his ass a little before we go?\"\n\nHrelle grunted, understanding and sharing the feeling.\n\n\"Our presence there should ideally remain covert,\" the Vulcan confirmed dryly. \"For our own safety, if nothing else. Once the intelligence from Dumont's ship is fully analysed and simultaneous operations can be launched to shut down as many aspects of the Bel-Zon's operations as quickly as possible, then Dumont can be apprehended.\"\n\n\"And what about the Son'a?\" Kami asked. \"And these stolen items they use as prizes? They seem as criminal as the Bel-Zon.\"\n\nT'Varik nodded. \"They are. But our focus must be on the Bel-Zon, and Dumont.\"\n\nHrelle nodded absently, still staring at that holographic face...\n\n*\n\nIn the Pleasure Palace, Rrori leaned back in his chair, surrounded by buxom women of many races, all attracted to his good looks and charm -- and liberal application of credits -- and motioned for a refill of his champagne glass, trusting in the alcohol suppressants he'd taken before disembarking the Opal Eye to keep him sober and clear-headed.\n\nHe diverted his attention between the women fawning over him, the dancers on the stage -- and the front door to the Pleasure Palace, waiting for Captain Weynik and Lt C'Rash to arrive. They should have been there by now, and he was tempted to go off somewhere and find out what was going on.\n\nSo he settled for a quick Update tap, reaching up to touch his Embed twice. Seconds later, Jonas' voice reached his ears. \"White to Orange: Green and Black are on their way, all clear.\"\n\nNext to him, oblivious to the subdermal implant or the message it just delivered, one of the Palace women, a bald, crimson-skinned humanoid from a race Rrori didn't recognise, drew up to his ear, making it twitch as she implored in a sultry voice, \"Let's get a room, my Cat-Man; I want you inside me so much, it hurts...\"\n\n\"What was that, Orange?\"\n\nRrori sat up, gently pushing the woman back. \"Maybe later.\" He finished his glass and handed it to her. He could get used to all this secret agent business...\n\n*\n\nThe Tournament Room had been hot and claustrophobic during the First Round, despite its size and the valiant efforts of the station's environmental controls. Dumont endured it, however, focusing on crushing the deluded dreams of those two hundred-odd fools who thought they had a chance at the Prize -- and to build up his own winnings, seeing him through the Second Round, when they were pared down to just 36.\n\nIt was more comfortable now, but this round took longer; these were the hardier, the better-skilled, the luckier. Still, it served to whet Dumont's appetite, playing against others of comparable acumen. He made it through, of course, along with five others, and he was eager to commence the Third and Final Round.\n\nTheir host Zad'ik attempted a welcoming smile, though the slate-grey, stretched-taut face of the Son'a made it look ghastly. \"We have separated the wheat from the chaff, ground the away the unworthy in the crucible of competition -- and now we have our six finalists: Henry Gondroff of Terra; Achatch of the House of Khibh; Tala of Romulus; Hazo of Ferenginar; Bastien Dumont of New Paris; and Esek Hrelle of Cait.\"\n\nDumont had been stepping forward when his name was called, but now he stopped in place, his heart skipping a beat. \"W-Wait- what was that last name?\"\n\nZad'ik looked at him. \"Esek Hrelle of Cait.\"\n\nNow Dumont's heart triphammered, as the full realisation of what Zad'ik said sank in. He glanced around the crowd, frantically searching- no, it couldn't be, it couldn't-\n\n\"Here, bubulah,\" offered a growl from nearby.\n\nDumont staggered backwards, bumping into others as the large, brown-furred Caitian stepped into view, clad in a tailored tuxedo. His cold, steely-blue eyes fixed on the human. \"Bonsoir, Monsieur Dumont. We meet at last. It's nice to put a scent and a face to the name I've seen in Starfleet Intelligence reports.\"\n\nDumont backed away even further, drawing up to Zad'ik and pointing a shaking finger at Hrelle, loudly declaring, \"You- You can't have him here!\"\n\nThe Son'a frowned, or at least did his best. \"Why not?\"\n\n\"Because he's a Captain with Starfleet! He's not here to play poker!\"\n\nZad'ik smirked. \"He's certainly done a good impression of someone otherwise, having made it this far.\"\n\nDumont swallowed, still glaring fearfully at Hrelle, as if waiting for the Caitian to bare his teeth and claws and attack him. \"You don't understand! He's here for ME! He knows who I work for! We have a... a history with him!\"\n\nZad'ik now looked to Hrelle with suspicion. \"Is this true, Captain?\"\n\nHrelle had been distracted by a beautiful Ellora waitress offering him a refill of his whiskey, but now he turned back to their host. \"Hmm? Yes, I suppose you could say I've crossed paths with the Bel-Zon once or twice over the years.\"\n\n\"Don't play coy, Captain!\" Dumont sneered, drawing closer to Zad'ik, his voice lower. \"We were responsible for the deaths of Hrelle's first wife and the crew of his first command. We sold him into slavery. And more recently, I... I personally arranged for the transport of Vlathi assassins onto his current ship in order to kill him and his new family. With all that, can you still believe he's just here for the Tournament?\"\n\nThe Son'a looked back with increased concern at Hrelle, who had been listening and drinking casually while Dumont spoke. But now the Starfleet officer shrugged. \"Yeah, that's all true. But I'm sure it was nothing personal, just business. Happens all the time, especially in our line of work. Besides, even if I did hold a grudge, this station is Son'a territory. I have no legal standing here.\"\n\n\"As if that would stop you!\" Dumont exclaimed. \"You're a savage, an animal! What you did to the Vlathi, what you did to my associate Lur Dissak and his men on Skaros-\"\n\nNow Hrelle sighed wearily and look to Zad'ik. \"You know, when I was a cub learning how to play, my loving Papa used to tell me, 'Nothing matters but the cards in your hand and the chips in the pot; everything else is a distraction'.\n\nAnd he was right. Look at us all here tonight: we've had Klingons sitting with Romulans, Selay with Anticans, Morlar with Tzenkethi. With none of them killing each other, and all willing to put aside politics and history for the sake of the Game.\"\n\nAs several of the other players made sounds of agreement, he continued, indicating Dumont. \"Of course I know what this man and his organisation did to me and my family, but do you hear me asking for him to be removed? No! Because I'm willing to be professional about it! We came from all over the Quadrant and beyond to play poker. Let's just play poker!\"\n\nThat brought on applause from the crowd. Zad'ik regarded Hrelle some more, before nodding and finally announcing, \"You will be allowed to participate in the Final Round, Captain. But you will be closely watched; any sign of trouble, and your Starfleet credentials will not save you from Son'a justice.\"\n\n\"Fair enough!\" Hrelle exclaimed cheerfully, finishing his drink and depositing the glass on a passing tray.\n\n\"NO!\" Dumont drew closer to Zad'ik, whispering, \"Adhar... the Bel-Zon will reward you handsomely if you-\"\n\n\"If we what? Remove one of your competitors without good cause?\" Zad'ik grunted with contempt. \"If the rest of the Bel-Zon are as craven as you, perhaps we should rethink any potential alliance with you? And if you are that fearful for your life, then you may leave. Your buy-in will remain unreturnable, of course, as per the Rules.\"\n\nDumont's stomach plummeted. He had done well tonight, very well. To drop out now... even at the risk of his own life... surely even Hrelle wouldn't be so foolish as to try something, here, alone? The man had too much to lose.\n\nHe shook his head. \"I... withdraw my objection.\"\n\n\"Glad to hear it!\" Hrelle beamed jovially, stepping forward and offering his hand. \"No hard feelings?\"\n\nDumont stared at it warily, aware of everyone's attention on them.\n\nHe drew in with his own, feeling the strong, furred hand clasp around his as they shook warmly.\n\nZad'ik smiled. \"There, all settled amicably! Now, if we may proceed...\"\n\nBut as the Son'a departed, Hrelle suddenly pulled Dumont closer and whispered, \"Have no illusions, Stroke-off:\n\nYou're not leaving this station alive...\"\n\n*\n\nNear the bar, Naal'en leaned in closer to the brown-furred Caitian female. \"Ms Dal, since we've become better acquainted, I was wondering if I could ask you something... personal?\"\n\nShe smiled, letting her tail drift across to stroke his hand. \"Well... you can always ask. There's no guarantee that I'll answer, but as they say, Nothing Ventured, Nothing Gained.\"\n\nThe Son'a chuckled. \"So tell me... what are you doing with all the electronic equipment attached to your arm?\"\n\nShe froze, gasping as he reached out and drew the sleeve of her blouse up, revealing the devices.\n\nStill holding onto her, he produced a hexagonal ID card. \"Subadhar Naa'len, Station Security. I think you should come with me.\"\n\n*\n\nWhen the hotel room door chimed, Neraxis approached, phaser in hand as she scanned through the door with her tricorder, before opening it. \"Eeeuw, I thought you were gonna take off that hideous Son'a makeup.\"\n\n\"Very funny.\" Sasha pushed past her as she spotted the pizza boxes on a nearby table, flipping open a lid -- and cursing. \"What in the Seven Hells-\"\n\nJonas grunted from his seat surrounded by monitors and other equipment. \"Bolian Special: rotted meat topping. Remind me not to let her do the ordering next time. Try the other one.\"\n\nSasha took his advice, nodding with approval at the double pepperoni offering, tossing him the Son'a communicator and ID before helping herself to a slice. \"I'm famished. All this spy stuff makes me ravenous.\"\n\n\"Yeah, because normally you have a bird's appetite,\" Neraxis pointed out, setting down the phaser and tricorder.\n\n\"What about the others?\" Sasha mumbled between bites. \"How are they doing?\"\n\nAs Jonas busied himself scanning and modifying the captured Son'a equipment, Neraxis replied, \"Rrori's at the Pleasure Palace, somehow keeping his piece strapped down, and Captain Weynik and Lieutenant C'Rash have arrived. But we don't have a signal from Kami yet.\"\n\n\"What about Dad?\"\n\n\"Once he entered the Casino, the shielding around the premises blocked transmissions to his Embed.\" Neraxis nodded to the viewscreen on the wall facing the bed, as it displayed various shots of some of the poker tables in the Tournament Room. \"Luckily they've been broadcasting it throughout the station. I'm surprised at how quickly so many of them dropped out. I thought only the best played in this?\"\n\nJonas shook his head, never taking his eyes from his work. \"Anyone can play if they can afford the buy-in. It's only the best who survive to the final round. And the House ends up with over ten thousand bars of gold-pressed latinum.\"\n\n\"Ten thousand? Holy Hraxor! The Son'a didn't even have to pay for the Prize, whatever it is, they just stole it!\"\n\nJonas smirked. \"In gambling, the only sure winner is the House.\"\n\nSasha caught a quick shot of her father, eyeing one of the hostesses in a way that she knew was meant to be part of his persona, but still disturbed her, knowing how devoted he was to Kami. So, he'd made it to the Final Round, something he assured them that he could do. She never expected him to be such a cardsharp, and made a note to ask Captain Weynik about some of the adventures he had with him when they were Sasha's age, long before Dad met her mother Hannah. \"Shouldn't Kami have done her bit by now?\"\n\nNeraxis helped herself to another slice of Bolian Special, knowing no one else would. \"There's still time, according to T'Varik's schedule. Why don't you keep yourself occupied with writing your Valedictorian speech?\"\n\n\"Stroke off.\"\n\n\"Here, let me help.\" The Bolian pretended to ponder it, before contributing, \"I owe it all to my best friend Neraxis, for being such an inspiration in my sad, sex-free life-\" She dodged the cushion Sasha threw in her direction.\n\n*\n\nIn the station's Security Centre, Naa'len's attitude had changed, become all business, as he motioned for Kami to take a seat in the centre of a stark interrogation room, one of his uniformed female associates removing the electronic gauntlet from her left forearm for examination. He crossed his arms as he regarded her. \"So, Ms Dal, assuming that's your name, care to confess now and save us some time? Was it the Caitian you were helping?\"\n\n\"Why, because he happens to be the only other Caitian in the place?\"\n\n\"No, because you kept looking over in his direction.\"\n\nShe matched his posture. \"I'm not helping anyone here. I don't even know him.\"\n\n\"There are rules against bringing in electronics to communicate with the players.\"\n\nShe kept her expression mild, cooperative. \"I told you, Naa'len, I'm not helping anyone here. I'm not even interested in gambling! It bores me to tears-\"\n\nHe slammed his fist down on the desk beside him, making her jump. \"Enough! Start telling me the truth, or else!\"\n\nShe looked up at him nervously, before finally nodding, shaking a little. \"O-Okay... I- I do know him. Captain Hrelle, I mean. He's... my brother-in-law.\"\n\nHe frowned at her. \"Your brother-in-law?\"\n\nShe nodded again. \"He married into our clan. My sister Kami loves him. Our Matriarch... doesn't. She suspects he's unfaithful to her when he's away on shore leave, and asked me to follow him here and keep a secret eye on him, catch him in the act, record his behaviour in order to confront him later.\" She swallowed, looking down at the floor. \"That's what that equipment you found on me is for. I had to keep a distance from him, so he didn't pick up my scent.\"\n\nHe studied her, glancing at the monitor screens, where the Tournament was being watched, and smirked. \"I'd heard that Starfleet Captains were tomcats- no offence.\"\n\nShe looked up again at him. \"Caitians take fidelity in marriage seriously. He might think he can gallivant around the Galaxy rutting with every curvy piece of tail that he meets. But he's wrong.\"\n\nNaa'len's assistant returned with the confiscated equipment, reporting. \"It's just one-way long-range multispectral recorders, Subadhar. She has vivids of Captain Hrelle flirting with the hostesses.\"\n\nThe Son'a looked back at Kami. \"Is flirting considered a No-No with your people?\"\n\nKami's face went taut. \"Yes-Yes.\" Now she rose to her feet. \"Subadhar, may I please have a word with you... privately?\"\n\nHe didn't take his eyes off her, but shooed his assistant away. When they were alone, he announced, \"I won't charge you with conspiracy to cheat, but I can't let you back in there with this.\"\n\n\"I understand, and I appreciate your wisdom and commitment to your job; I have a better idea, and a proposition.\" She smiled. \"You obviously have recording equipment of your own in here, and can gather much more evidence than I can on my feckless brother-in-law down there.\"\n\nHe nodded pensively, but then asked, \"And at the risk of sounding mercenary, what would be in it for me?\"\n\nShe reached up and lightly touched his face. \"Well, my gratitude for one thing.\" As she drew in closer, purring now at a frequency more felt than heard by Naa'len, she added, \"And then there's the rest of my expense account given me by the Matriarch to secretly travel here. Would 47 slips of Gold-Pressed Latinum sway you as well?\"\n\nIt did, and seconds later, he had her sitting at one of the monitors, away from the rest of his staff -- and never seeing her slip another device from a hidden pocket on her belt and under the monitor station.\n\n*\n\nIn the hotel room, Jonas was staring blankly at one of his screens, when it suddenly came to life, making him start and straighten up. \"We're in! Kami's got the Leech attached!\" His fingers danced over the controls, accessing the station's security and personnel records, and amending and adding to them, nodding. \"There, Phase 3 complete: our own communicator signals will be completely ignored now, the appointments have been added, and now I'm accessing the Customs manifests, identifying crew from the Corsaire.\"\n\nNearby, Neraxis nodded and touched her Embed. \"Blue to Violet: Phase 3 Complete. Blue to Green: you're on.\"\n\n*\n\nIn Lar'ame's Pleasure Palace, Weynik felt the buzz on his neck, and heard the voice vibrating. \"Blue to Green: you're on.\"\n\nHe didn't acknowledge the announcement, focusing on the Son'a female who obviously managed the establishment. Lithe, slinky figures wearing nothing or next to nothing orbited and gyrated around light poles on raised platforms around the club as patrons negotiated for more private sessions in the adjacent rooms, but many of the onlookers were busy glancing over at the new arrivals -- well, the Caitian female, anyway.\n\nBut the Palace manageress was all business. \"Mr Furee, you should have arranged for an appointment before travelling all the way out here with your...\" She glanced at C'Rash. \"Act.\"\n\n\"I did!\" Weynik insisted. \"Check your agenda again!\" His heart was racing; he hadn't intended to approach the woman until it was confirmed that they had hacked into her records and added the appointment, but she had approached them first, forcing him to begin early. \"Unless of course I should go complain to Station Management about this breach of contract! It cost us to get here, you know!\"\n\nReluctantly she accessed the display unit in her hand -- grunting. \"Oh. Apparently you did make an appointment.\" She looked at him. \"No doubt my idiot Tarlac assistant didn't think to acknowledge it verbally, so I could prepare. Please excuse me.\"\n\nHe waved off the apology. \"The important thing is that we're here now, and my Pretty Kitty is ready to show you what she can do.\"\n\nThe manager looked C'Rash over, before pointing to a door near the bar. \"The dressing room's in there, find yourself something suitable and get out there, the crowd's growing.\"\n\nC'Rash looked to Weynik, who smiled lasciviously and confirmed, \"Get going, Sweetie, show them what Big Nik's Pretty Kitty can do.\"\n\nShe glared at him, but nodded and departed. Weynik made a note to profusely apologise to the Lieutenant the next time they were alone, before she took a swipe at his eyestalks.\n\n*\n\nIn the Security Centre, Kami watched the monitor as the six finalists in the Tournament Room drew together, led out of view by Zad'ik. \"What's happening? Where are they going?\"\n\nSitting uncomfortably close, Naa'len smiled. \"Zad'ik's taking them into the Vault to see the Prize before the Final Round begins.\"\n\n\"Oh?\" She affected an insouciance. \"And what is the Prize?\"\n\nHe chuckled. \"Sorry, no one apart from Zad'ik and the finalists get to know before the Tournament finishes. He has a flair for the dramatic.\"\n\n\"But you know what it is, don't you?\" she ventured flirtatiously. \"He couldn't keep something like that from the station's Head of Security.\"\n\n\"No,\" he admitted, smiling. \"He couldn't.\"\n\nThen one of his assistants approached. \"Sir, a Subadhar from the Docking Bay has been found assaulted in his quarters! His communicator and ID have been taken!\"\n\nHis amusement was eclipsed by business. \"Get an investigation team together.\" He looked to Kami. \"We'll need to do this another time.\"\n\nShe rose to her feet. \"Oh, but, couldn't I stay here a bit longer? Our business and all?\"\n\n\"Sorry, I'm afraid not. You may return to the bar, if you wish, and keep an eye on your brother-in-law from there. I will provide you with the requested recordings later.\"",
        "She nodded, allowing herself to be escorted, hoping that they didn't discover the Leech before the others were done.\n\n*\n\nZad'ik was like a theatrical Master of Ceremonies, all smiles and flashy waves of his arms as he led the six finalists down a corridor, always looking back at them, as if they might be children with limited attention spans. \"This is actually my favourite part of the Tournament.\"\n\n\"What,\" The Romulan woman quipped, \"Not counting all the buy-ins you've collected?\"\n\n\"No,\" he replied without irony. \"This. When all of you see what's on offer to the winner of the Tournament. It's like catching a glimpse of the prey on the horizon, as the Hunt is about to commence.\" He stopped at an armoured door, where two heavily-armed Tarlac guards stood. They stepped away, allowing Zad'ik to enter a security sequence, before stepping back. \"One moment, while the Vault is cleaned.\"\n\n\"Cleaned?\" the Ferengi, Hazo, repeated, as if he couldn't believe his oversized ears, chuckling. \"That's not how you launder money, Zad'ik.\"\n\nThe Son'a was watching a visual display counting down. \"Among other security measures such as pressure-sensitive gravitic floor traps and deadlocks, the Vault interior is filled with Tholian triselenide mist when unoccupied.\"\n\n\"Mist?\" Henry Gondroff asked. \"What, like a poison gas?\"\n\n\"Not quite: the mist is actually a cloud of microscopic triselenide, very sharp crystals that Tholians use to scour clean their outer carapaces, a substance similar to that which now lines the interior of the Vault. For most carbon-based lifeforms and other materials, however, contact with the mist would be like falling into a vat filled with a billion tiny blades.\" Zad'ik grinned. \"There literally wouldn't be enough left of you to ship home to your next of kin.\" The countdown ended, and the door rolled aside.\n\nZad'ik confidently led them into a windowless interior lined from top to bottom with a pale, salmon-pink ceramic material, interspersed with apertures where the aforementioned mist was pumped out or in. The material was also luminous, providing light to the walls, revealing doors of various sizes.\n\nThe Son'a moved to one door a square metre in area at the far end of the Vault, triggering a final lock on it before opening the door, revealing a storage unit filled to capacity an ornately-decorated rectangular box of shimmering gold and various oval jewels of different colours, and covered in ancient-looking script.\n\nZad'ik indicated the box, as if the finalists might have overlooked it. \"Dear friends, allow me to introduce you to an object of ineffable rarity and value: a Bajoran Orb.\"\n\nHrelle suppressed his shock, though several of the other finalists who, like Hrelle, recognised the term, were more open in their amazement.\n\n\"The Tears of the Prophets,\" Zad'ik crooned in a mesmerising voice, clearly relishing the chance to show off his latest acquisition to others. \"One of only a handful of artefacts sent into this universe by the aliens living in the Bajoran Wormhole, the Orbs were taken by the Cardassians for study. But the objects defied all attempts at this, while their powers proved both undeniable and arcane.\"\n\n\"I see a box,\" the Ferengi Hazo declared, squinting at it. \"Not an Orb.\"\n\n\"This is the original Orb Ark,\" Zad'ik explained, smiling as he reached out and opened the little doors at the front of the Ark -- as a dazzling, shimmering brilliance emanated from an hourglass-shaped crystal object within, lighting them all up even further.\n\nHrelle blinked, wanting to stare deeply into the light even as he felt an atavistic desire to turn away. He had read stories about the Orbs, knew that Starfleet and Federation scientists saw them as artefacts of alien sophistication rather than mystical objects of reverence like the Bajorans. But the Bajorans' rights to possess them again was inarguable.\n\nHrelle didn't believe in anything Divine. But the thought that after all the horrors, the loss, that the Bajorans had suffered over the generations, that one of their Orbs could end up a prize in a poker game, felt... blasphemous.\n\nThe Klingon Achatch stared as if hypnotised. \"They are supposed to have special abilities... what abilities does this one have?\"\n\n\"No one knows,\" Zad'ik beamed. \"Not for this one, anyway. Others have been known to manipulate space or even time, or induce visions or prophecies of the past or the future, healing the sick...\"\n\n\"Maybe it's just a fancy bedside reading light,\" Gondroff muttered.\n\n\"I think I'd rather have gold-pressed latinum,\" the Ferengi groused.\n\n\"You two have no vision,\" the Romulan declared contemptuously. \"The Bajorans would give you one of their moons to get back one of their precious Orbs. They'd pay anything.\"\n\n\"Or you could keep it,\" Dumont suggested, still staring at it. \"Imagine the advantage you could have if it gave you visions of the future.\"\n\n\"Some of us have futures that are already more obvious than others,\" Hrelle pointed out helpfully from the rear.\n\nDumont turned in alarm, as if rudely shaken out of his thoughts with the reminder of Hrelle's proximity. But Hrelle was distracted himself by this unexpected twist in the plan. They couldn't leave the Orb in the hands of anyone here.\n\nBack outside with the rest, he scanned the crowd of spectators, seeing his wife near the bar. As he stepped apart from the others, signalling a waitress for another whiskey, he waited until he was alone again, before murmuring in Old Caitian, \"Nod if you hear me.\"\n\nKami sat alone, but nodded.\n\nInwardly he thanked his luck as he continued. \"Change of plan. The Prize is a Bajoran Orb. It's coming with us.\"\n\nHe watched her make a show of bringing her glass to her mouth, covering her reply: \"Are you sure?\"\n\n\"Yes. Tell Violet. Hurry.\"\n\n\"Captain Hrelle?\"\n\nHe turned; Zad'ik was near the Finalist's Table, looking at him curiously. \"Are you okay, Captain?\"\n\nHe shrugged and approached. \"I was praying to the Great Mother for good fortune.\"\n\n\"Have Her throw some my way,\" Gondroff joked, cracking his knuckles and making the Ferengi nearby wince.\n\n\"Let us leave superstititon out of this,\" Tala suggested. \"And proceed to what's important.\"\n\n\"Yes,\" Athach concurred. \"We have wasted enough time.\"\n\nHrelle chuckled. \"A Klingon and a Romulan in agreement? I guess miracles do happen.\" Hrelle spared a final glance towards his wife, satisfied with her departure -- and hoping his First Officer can pull a proverbial ace from her sleeve.\n\n*\n\nKami rushed down the Promenade, touching her Embed. \"Gold to Blue: I'm on my way, urgent message from Brown, order an Emergency Pizza from Violet.\"\n\nShe was in the hotel room seconds before there was another chime at the door, and a Vulcan female in the plain white linen outfit of the hotel kitchen staff entered, carrying a large pizza box, handing it to Neraxis and Sasha. \"I hope you are offering gratuities to the staff; the wages offered by this establishment are minimal.\"\n\nThe Bolian opened the box, grimacing. \"Vegetarian?\"\n\n\"It is a healthier and more ethical choice.\" T'Varik turned to Kami. \"The rumours in the kitchens are that Captain Hrelle has made it to the Final Round.\"\n\n\"Yes -- but he's told me that the Prize is a stolen Bajoran Orb.\"\n\nEveryone in the room looked to her, T'Varik nodding in understanding. \"This of course changes our priorities. We must retrieve it.\"\n\nNeraxis had helped herself to a fresh slice, removing the black olives from the cheese. \"Why? I thought we said recovering the stolen Prizes wasn't our priority.\"\n\n\"This isn't just some painting or archaeological relic,\" Kami reminded her soberly. \"It's a very important symbol of the Bajoran people, even if we only see them as advanced objects from the Wormhole aliens.\"\n\n\"And even employing merely our own scientific perspective,\" T'Varik added, \"The Orbs possess properties that could prove potentially dangerous in the wrong hands, hence the standing orders from Starfleet Command to use all reasonable means to obtain and return the Orbs to the Bajorans.\" She nodded to herself. \"Our mission has become more than just intelligence gathering, and will require a considerable reconsideration on my part as to the original plan.\" She paused and continued. \"It is done.\"\n\n\"And about time,\" Sasha quipped. \"You took almost 3 seconds.\"\n\n\"3.1416 seconds; endeavour to be more precise in future, Ensign. Our objectives have expanded. We are now engaged not only in intelligence gathering, but also theft.\"\n\n\"Theft?\" Neraxis asked, smiling with delight.\n\n\"I believe the ancient Terran terminology for this will be a 'caper'. Mr Ostrow, you studied the technical specifications of the Corsaire?\"\n\n\"Yes, Ma'am,\" he nodded, \"A Corona-class light freighter adapted for high speed private transport and-\"\n\n\"Is it capable of delivering a duonetic pulse strong enough to disable the station's primary systems?\"\n\nJonas paused to call up some figures, before responding with, \"It... should, Commander. But the Station possesses a holistic redundancy network capable of immediately rerouting through available systems.\"\n\n\"Not if a set of Ms Nemm's phaser grenades, detonated immediately prior to the pulse, disrupts that network. Can the Leech planted by Counselor Hrelle access the security specifications of the Casino vault?\"\n\nQuickly he checked again. \"Yes. Here you go-\"\n\n\"Please, go help yourself to pizza and prevent Ms Hrelle from developing a waistline comparable to her father's.\" The Vulcan ignored the obvious cursing in Old Caitian from Sasha as she sat down and access the specifications. \"Multiphasic shielding with multiple independent redundancies preventing transporter beams, gravitic floor traps, and triselenide mist employed in the interior. Theft will be... difficult. But not impossible, not with the Special Equipment from Starfleet Intelligence I brought with us. Ms Nemm, set my case on the bed and open it.\"\n\n\"Maybe we'll get lucky,\" Sasha suggested. \"And Dad will just win it legitimately?\"\n\n\"When your father agreed to participate in the Tournament to observe and distract Dumont, it was with the caveat that victory is not guaranteed, for him or for anyone -- especially if the game turns out to be 'rigged'. Should theft become necessary, we will have only a limited window of opportunity in which the accomplish it.\"\n\n\"So who'll do the actual thieving?\"\n\n\"Lt C'Rash. She has proved to be a most limber individual.\" She looked to the cadets. \"And that is not a cue for sexual innuendo. From any of you.\"\n\nJonas and Neraxis flushed and looked elsewhere. Sasha almost looked like she would reply anyway -- but settled for another defiant slice of pizza.\n\n*\n\nCaptain DaSilva matched the description given to C'Rash by Jonas: Terran, pink-skinned, middle-aged, overweight, bald. He didn't mention the wandering hands, but then she supposed she couldn't have guessed that those were a standard feature for someone who would visit an establishment like this.\n\nStill, she danced and gyrated in front of him, letting herself move to the booming music from the speakers around them, her tail swishing behind her as she met with his obvious, enthusiastic approval.\n\nHe leaned back in his chair as she finally straddled him, his interest obvious now to her, her hands moving over his clothes, her muzzle at his throat, purring against him while she searched for his- there!\n\nShe slid the ID out of his pocket while distracting him with a long, luscious lick of his throat, forcing down her disgust at his taste. Vulcans were far more appetising...\n\nShe drew back and smiled at him.\n\nThen she extended her claws and dug them into his neck and shoulders.\n\nHis eyes widened and his interest wilted instantly as pain ran through him. He screeched in a soprano voice as she drew blood, and he struggled to force her off him as she held on, making sure she got a lot of his blood under her claws. The nightclub's security staff, the manageress and Weynik drew up, the Roylan sounding suitably aghast as he scolded, \"Bad Kitty! Bad! Stop that this instant!\" He looked to the Manageress as C'Rash rose from the man's lap and stepped back. \"I'm so sorry about this, she's in Season right now and sometimes forgets to take her suppressants-\"\n\nThe Son'a was horrified at the man's injuries, before looking to C'Rash and Weynik. \"You barbarians! I'll have you arrested! Call Station Security!\"\n\nWeynik tensed, looking to C'Rash, silently signally her to get ready to fight their way out of there-\n\nUntil Rrori stepped up, nursing his champagne glass. \"Excuse me? Do we have to have Security involved in this? I'd rather not have my evening spoiled.\"\n\nNearby, DaSilva had a cloth wrapped around his neck and shoulders, pressing down tightly as the material soaked in his blood. \"Spoiled? That filthy Cat tried to kill me!\"\n\nThe Son'a manageress looked to Rrori. \"Excuse me, Sir, please stay out of this-\"\n\nBut Rrori held up several strips of gold-pressed latinum. \"Would this cover the damages?\" He looked to DaSilva. \"There's some here for you too, Sir, for your trouble. I'm sure the Medical Bay on the Station can get those scratches seen to in no time, and get you back here to continue your shore leave.\"\n\nThe human looked to him suspiciously, wincing at the pain. \"Why would you do that? Do you know her?\"\n\n\"No.\" He gave C'Rash a wink. \"I wouldn't mind getting to know her, though. A Caitian male knows how to handle a female in Season, but not if she's locked away somewhere.\"\n\nThe Son'a looked to DaSilva, exchanging a silent negotiation before she decided, \"Fine. But do your handling elsewhere. And don't come back!\"\n\n\"Of course, of course.\" Rrori looked to Weynik and motioned to the exit. \"Shall we head back to my ship and settle on terms?\"\n\nThe Roylan grinned. \"Yes, let's.\" He snapped his fingers at C'Rash. \"Let's go, Kitty.\"\n\nRrori chuckled -- until C'Rash hissed at him.\n\n*\n\nDumont tried to stay calm, to focus on the initial hands between the finalists. This was the time when they took the measure of each other, gauged their strengths and weaknesses and identify their tells.\n\nThe Terran Henry Gondroff was a living legend, a veteran -- but only in his own sector, never having played the Tournament before now, and so far his tactics leaned towards the cautious.\n\nThe Klingon Achatch played like his people fought: with reckless abandon, cursing his gods of luck whenever he lost, when to Dumont's trained eye the man seemed to have been lucky to get as far as he had.\n\nThe Romulan Tala, meanwhile, was the polar opposite, registering only just enough presence to stay in the game, adopting her people's tactics to isolationism, possibly to become more aggressive as the players were whittled down.\n\nOnly the Ferengi Hazo showed panache, an unpredictable mix of the two, but Dumont thought he would get the measure of him before long.\n\nIt helped that Dumont had made himself familiar beforehand with many of those most likely to end up in the Final Round, and hold information that could get under their skin.\n\nBut his attention still returned to Hrelle, sitting opposite, as far away as he could get while still be at the table, silent since the Final Round started, seemingly having a better go at focusing on the game than Dumont. The fear that lingered in the back of Dumont's head was like a globfly, buzzing and unignorable.\n\n\"Call,\" Hrelle said, the growl in his voice a further distraction.\n\nThe others met the call; the Ferengi won this hand with a delighted cackle. Dumont called for another drink, against his better judgement. It was too quiet; they had cleared the audience of anyone unwilling to pay the additional spectator fee to watch the Final Round, and had darkened the surrounding area, leaving only the table strongly lit. Hrelle was putting him off-\n\nPutting him off... intentionally? Was it a tactic on the Caitian's part, to throw Dumont off his game, and let Hrelle take advantage? It made sense. If Hrelle had truly been after revenge, he surely would have taken it before now, and give himself a better chance at the Prize?\n\nAnd the more Dumont considered it likely, the angrier he grew, that he could fall for such an amateurish tactic.\n\nWell, he decided, two can literally play at that game... as they prepared for the next hand, he regarded Hrelle. \"Cheer up, Captain. This isn't your first beating. It's happened to you many times, I know.\"\n\nThe Caitian looked up and across the table. \"Excuse me, Monsieur Dumont?\"\n\n\"When you were first captured by the Bel-Zon, almost nine years ago? You surely couldn't have forgotten that?\" Dumont looked to the others, who displayed bemused ignorance of the details. \"Do you not know the story? We needed the security codes to Station Salem Four, codes locked in Captain Hrelle's brain. So we killed his crew on the Furyk and captured him.\n\nIn the subsequent days he spent with us, we broke over a third of his bones. We removed his claws. We raped him. We burned and scarred him. By the end, when we were cutting off his tail, he gave up the information. He was wailing like a baby, begging, pleading for us to stop.\" He focused on Hrelle's face. \"We gave you such a gift, Captain. The Gift of Indescribable Agony.\"\n\nThe others looked dumbfounded at Hrelle, who stared back at Dumont for a moment, before finally replying, \"And I never got you anything in return.\" Now he looked to the dealer. \"Is there a gift shop on this station? Do you sell fridge magnets or snowglobes?\"\n\nThat elicited chuckles from some of the other players and spectators. Dumont glowered -- but then saw the cracks in the Caitian's demeanour.\n\nDumont was getting to him. Good.\n\n*\n\nNeraxis crawled through the maintenance ducts, thoroughly enjoying herself; as much as she accepted the importance of standing guard in the hotel room over Jonas and the others, she relished being able to take a more active role in the operation.\n\n\"Almost there, Blue,\" Jonas informed her through her Embed. \"Just a little bit more. I'll tell you when to stop.\"\n\nShe laughed to herself. \"That's what you said last night, White.\"\n\n\"Let's keep it professional, Blue. Stop; plant the grenade on the junction port immediately over your head.\"\n\n\"Acknowledged.\" She twisted onto her back, removing another phaser grenade from her pouch, activating its tractor clamp and attaching it to the aforementioned port. \"Done. How many more?\"\n\n\"Five. The next one nearest you is twenty metres ahead, and two levels down. Get moving, please, we're on a schedule.\"\n\n\"Yes, Sir.\" She smiled; Jonas sounded so commanding, it was such an amazing maturity since the early days when he wouldn't say Boo to a tribble. People said the same thing about her, but she didn't see it herself.\n\n*\n\nDumont forced himself to slow down his drinking. Henry Gondroff proved to be the first one to leave the table; his legendary status was obviously only among the lesser-skilled, and the rest of them had made an unconscious effort to team up and clean him out. He departed, though he left his money behind, divided up evenly among the others.\n\nDumont had hoped that Hrelle would have been the first to go, but clearly he was made of sterner stuff. He didn't expect a Starfleet officer to be such a good poker player, but then by all accounts, Hrelle was an unusual figure.\n\nSo who was next?\n\nAchatch. Yes, the Klingon. And then maybe Hrelle will finally crack, make a fatal mistake and go, too.\n\nAnd then Dumont would send more assassins for the Caitian bastard. As many as it would take to wipe Hrelle and his misbegotten family from the face of the Galaxy.\n\nThen the next hand started. \"Achatch, how is your House doing since that cowardly assassination?\"\n\nThe Klingon looked at him. \"Assassination?\"",
        "Dumont nodded, throwing in one card for another. \"Of course, your father's assassination by the House of Ilkrin?\"\n\nThe Klingon sneered angrily at him. \"My father was not assassinated! He died in honourable combat on Galkaris! Not at the hands of one of those cowardly Ilkrin targs!\"\n\nDumont nodded. \"No, no, of course not. I'm sure all the rumours floating about are entirely unfounded. Forget I said anything.\"\n\nAchatch bared his jagged teeth at the Frenchman, and tried to return to his cards.\n\nDumont suppressed a smile.\n\n*\n\nC'Rash, Rrori and Weynik entered the hotel room, the Caitian Chief of Security declaring, \"I need a shower. I want to clean my claws.\"\n\nT'Varik rose from her seat beside Jonas. \"That would defeat the purpose of your assault on the Corsaire Captain.\" She indicated the scanning panels set up next to the miniature replicator unit. \"Place your hands flat, claws extended.\"\n\n\"I know what to do,\" the Caitian snapped, looking up at the viewscreen, where the poker game was in session. \"How's Uncle Esek managing?\"\n\n\"From the looks of his chips,\" Weynik noted, reaching for a large slice of pizza, cradling it to contain its impressive collection of extra cheese, olives and green bell peppers. \"He's holding his own. He was always a superior player, even back at the Academy, but I never expected him to be able to match the Galaxy's professionals.\"\n\n\"What he might lack in experience,\" Kami pointed out. \"His senses, and psychological training from me, compensate... if he can stay focused.\" She frowned as the cameras focused on him. \"Dumont has a tactic of seeking out the psychological weaknesses of other players, and goading them into acting carelessly, or giving away tells. And unfortunately, Dumont has a lot of information on Esek, to use against him.\"\n\n\"The Captain will not succumb,\" Rrori declared, risking one of the remaining slices of Bolian Special. \"He will wait until the Tournament ends to claim his vengeance.\"\n\n\"That would be exceedingly foolish,\" T'Varik pointed out, \"As he would be arrested by the Son'a, and we would have no legal means of freeing him.\" She looked over at Jonas, who was running the DNA scans and bioreplicator unit they brought with them. \"Mr Ostrow?\"\n\nJonas nodded. \"Plenty of DNA from Captain DaSilva, enough to coat the dermal hand patches and contact lenses and, hopefully, fool the Corsaire's security systems.\"\n\n\"Good. Captain Weynik, Ensign Hrelle, you may wish to change into more appropriate attire for the next phase.\"\n\nWhen Jonas was done, C'Rash rose. \"I'm going to wash my claws and change out of this. I feel foolish.\"\n\n\"You may wash your claws,\" T'Varik clarified. \"But you will remain in your outfit for a while longer. I have something for you to deliver to Captain Hrelle, and your current seductive attire will be most appropriate.\"\n\n*\n\n\"QI'yaH!\" Achatch bellowed, kicking back his chair, his hands balled into fists, before turning and storming out of the room, shoving aside anyone in his way -- and many who were nowhere near him.\n\nHrelle stayed in his seat, turning slightly to call after him, \"Nice playing with you! Qapla' in all your future endeavours!\" He turned back to the remaining players. \"Lovely man, I'll miss his warm, inviting nature.\"\n\nHazo chuckled, his huge wrinkled Ferengi ears twitching as he passed his hand over some newly-acquired chips. \"He left the best part of himself behind. Now let's get going, I have some grub worms waiting for me back at my room-\"\n\n\"Esek... darling...\"\n\nHrelle turned in his chair, tensing as he watched C'Rash approach unexpectedly. \"Uh...\"\n\nShe drew in closer, crouching beside him, sparing a glance at the other players before focusing on Hrelle again, her voice sultry, pouting. \"Esek, how long are you going to be playing this silly little game? I'm bored just sitting in our hotel room waiting for you to come back! You promised we'd have some fun!\"\n\nHrelle offered an embarrassed look to the others, before reaching up and stroking C'Rash's muzzle. \"Now, now, Cupcake, you get back, and when I win, maybe I'll buy you that Tholian silk dress you're always asking about, okay?\" He drew into the side of her head as if to stroke her muzzle, and in Old Caitian muttered, \"What's going on?\"\n\nShe reached up and playfully tickled him under his chin while her other hand slipped something into his tuxedo pocket. Seconds later, his Embed activated. \"Gold to Brown: we've modified a stolen Son'a communicator to piggyback your own signal. If you can hear me... scratch behind Black's ear.\"\n\nAmused now, Hrelle followed his wife's instructions.\n\n\"Good,\" Kami replied, her smirk carrying over the signal. \"Now stop flirting with your niece, you pervert, even if it's play-acting, it's just wrong.\"\n\nZad'ik approached the romantic couple. \"Captain, forgive the interruption to this tender scene, but perhaps you could continue this after the Tournament?\"\n\n\"Yes, yes of course.\" He shook off the female's attention and thumbed towards the front doors. \"Go on, Cupcake. Don't wear yourself out before I get back.\" Then he slapped her rear as she departed, chuckling to himself -- before appearing embarrassed now. \"Um, sorry about that, she's in Season.\"\n\n\"L'amour est exigeant, Mon Capitaine,\" Dumont informed him. \"But I wonder what your wife would say if she knew?\" He looked across the table at his opponent. \"Unless you're going to lie and claim that that was her? I've seen her image.\"\n\nHrelle chuckled, signalling for another drink. \"No, Monsieur. My wife is not that young and attractive any more. Her fur is greying, her boobs are sagging, and she's working up a real belly on her from sitting around eating shuris rolls all day.\" He grunted. \"I hate it when females let themselves go as they get old.\"\n\nTala grunted. \"You're quite a charmer, Captain.\"\n\n\"Sounds astute to me,\" Hazo noted, chuckling.\n\n\"But aren't you worried about what might happen if any of the Tournament broadcast leaks out and gets to her?\" Dumont taunted.\n\n\"You mean, if you arranged it to leak out, Monsieur?\" Hrelle smirked. \"That's about your level. And no, I'm not worried. For all her faults, my wife is perceptive enough to know how I really feel about her. Don't fret about my marriage, Dumont. You have other, more personal things to concern yourself with.\" His smirk dropped. \"Let's get going.\"\n\n*\n\nIn the hotel room, everyone watched Kami as she watched the exchange, listened to what was said, her tail twitching through the hole in her chair where she sat. It was T'Varik who approached her. \"He was, of course, playing a role necessary to justify C'Rash secreting the communicator to him. We do not wish you to become upset.\"\n\nKami stared at the screen a second more, before looking up at her friend and smiling. \"What? You don't think I was getting angry over his words, do you?\" She glanced at some of the others, saw their own concern and embarrassment, and laughed. \"I know that fat bastard better than anyone else here does. I know how he really feels about me; it radiates from him like the light from a nova.\"\n\nThen her expression sobered as her gaze returned to the screen, pointing to Dumont. \"That man organised the assassins who nearly killed my cub, my family, myself.\" Her tail twitched in agitation through the back of the chair where she sat. \"Now, he upsets me. And he's getting under Esek's fur; I can see it in my husband's expression, his reactions.\"\n\n\"He can handle it,\" Weynik assured her. \"I've known Wide Load for decades; that stuff pours off him like water off a fat duck's back.\"\n\nKami remained unconvinced, never looking away until T'Varik approached. \"If you believe it necessary, you can ask him to 'throw' the Tournament and drop out. His winning is not required for us to achieve our objectives.\"\n\nShe looked up at the Vulcan. \"You sound confident.\"\n\nT'Varik folded her hands behind her back. \"I am confident. When my former associate Captain Sakuth was in our Brig following the Oubliette Incident, she challenged me to 'do her job' without making an ethical compromise, or sacrificing innocents. So when Admiral Tattok offered the Captain an opportunity to obtain vital information on the Bel-Zon, and requested that I organise the operation, I accepted the challenge.\n\nThe original plan will result in the disablement of the Bel-Zon operation, and acquisition of vital information on their contacts, their bases of operation and past as well as current objectives. My revised plan will achieve this, and more. To that end, I have a new task for you, a return to the station's Security Centre... and a new identity.\"\n\nBefore she could elaborate, C'Rash entered the hotel room, her tail smacking everything around her as she strode to the bathroom. \"No one had better say anything to me about what I had to do.\"\n\nBut as the bathroom door was closing, Weynik managed to throw out, \"Whatever you say, Cupcake.\"\n\nThe door just about muffled the curses inside.\n\n*\n\nHazo had been the next to go, the old Ferengi surprisingly philosophical about losing, and the hostesses had exchanged the remaining players' chips for ones of larger amounts, in order to make space on the table, and now Dumont could see the aggression rise in the Romulan Tala as she saw the end in sight.\n\nThen there was Hrelle, whose discipline was eroding from Dumont's continued taunts. Tells were rising. And as they launched into another hand, Dumont was determined to continue onward. \"Would you like a break, Captain?\"\n\nHrelle never looked up from his hand. \"And why would I want a break, Monsieur?\"\n\nDumont rearranged his own cards. \"To call home. To make sure your family was still alive and well.\"\n\nHrelle looked up now, as did Tala, both of them looking at the Frenchman.\n\nDumont looked up now, affecting innocence. \"Not that I'm implying that-\"\n\n\"My family is alive and well. They're on Cait, surrounded by members of our clan. And anyone who tries to threaten us on our own territory will only live long enough to fully understand the supreme stupidity of such an action. Are we clear on that?\"\n\n\"Of course, Captain. I didn't mean to upset you.\"\n\n\"You didn't,\" Hrelle snapped tautly.\n\nThey went silent, until Dumont added while betting, \"It's just that you seem to have poor luck with your loved ones. Your first wife -- what was her name again? -- was killed, your stepdaughter left orphaned and alone...\" He reached for his drink. \"Sasha, isn't it?\" He sipped at his cognac. \"I've seen images of her, Captain. Very attractive. Buxom. I'm sure she's popular with the boys, I bet. Now, if we had taken her instead of you all those years ago, we wouldn't have sent her to the mines or the Orion fighting pits. Her work would have been much more... recreational.\"\n\nThe table was vibrating, making the stacks of chips shudder, as if the station's gravity generators were out of alignment.\n\nOn the other side of the table, Hrelle glared.\n\nAnd then heard the voice just under his ear. \"Gold to Brown: Calm down. You'll get yourself in trouble.\"\n\nHe bared his teeth as he leaned forward.\n\n\"You're scaring me, Esek, no matter what he says to get at you, you- wait, are you doing this deliberately? Making Dumont think he's getting to you? Twitch your ears!\"\n\nHe did.\n\n\"You bastard... you had ME convinced you're ready to rip his throat out! And I know your fat ass better than anyone else!\"\n\nHe smiled at his wife's response as he made a visible show of calming down and settling back. \"You're not getting the better of me, Dumont.\"\n\n\"Captain,\" Tala started. \"You can't possibly allow his insults to go unchallenged, can you?\"\n\n\"And what would you have him do?\" Dumont countered, sneering at her. \"Attack me? And get us both removed leaving you the default Tournament winner?\" The man grunted. \"Typical Romulan behaviour. Pathetic. I haven't met one of your people with even a nanogram of fortitude. You sneak attack at places like Khitomer and Tomed, and then you scurry back behind the Neutral Zone like a pack of dockrats when the lights are switched on.\"\n\n\"You insult the Romulan Empire, human,\" Tala warned him. \"Desist, or we'll-\"\n\n\"You'll what, you'll withdraw and close your borders? Again? Your whole race acts like some petulant adolescent storming off to their bedroom writing pretentious poetry and imagining everyone's talking about them in their absence. This is not the case, by the way. No one cares if you stay or go.\" He looked up at her now. \"When your ancestors fled from Vulcan, did the Vulcans even notice?\" He pushed a stack of chips towards the pot. \"Raise you a hundred.\"\n\nShe glared at him, and met his raise.\n\n*\n\nThe young woman in the maintenance gear was busy chatting away with her walking companion as they marched down the docking bay corridor to the bored-looking guard, the woman's voice carrying. \"So I ask him, 'Why is it always me that has to do the crap jobs? What is Nehrat doing while I'm crawling through all those recycling ducts?' And you know what he says? He says -- and I shit you not that this is exactly what he says -- he says, 'You can't expect a girl to do work like that!' Would you believe it?\"\n\nThe guard held up his hand. \"Is there a problem? Are you lost?\"\n\nSasha looked to him, adjusting the shoulder straps of the engineering bag she was carrying, her face twisted in simmering rage. \"Lost? I wish I was lost! I wish I was lost and out of comlink range to a certain stroke-off supervisor who clearly favours certain pretty young things who drop their trousers to get ahead!\"\n\nBeside her, Weynik looked up, his hands resting on his equipment belt, but now he produced his faked station ID. \"Please excuse her, we've been pulling double duty for the Tournament. We're Mario and Luigi, from Station Maintenance. The station's sensors detected a radiation leak from your warp core. It will no doubt be another false alarm, but we have to check it out anyway.\"\n\nThe guard frowned at them. \"The Captain and Engineer are off-ship, I can't let you onboard without their clearance.\"\n\nSasha turned red, as she gestured aggressively at the guard. \"Oh, of course you can't! Because that would clearly mean that the Universe wasn't a total cesspit filled with targ slurry! Why don't I just stick my head in a stroking plasma column and be done with it? It'd be the perfect topper for this miserable stroking week!\"\n\n\"What my colleague means,\" Weynik explained calmly, \"Is that Docking Regulation 47.7 authorises Station Maintenance staff to board docked vessels without clearance in the event of a potential safety hazard-\"\n\n\"Of course,\" Sasha butted in, \"You could always call your Captain and Engineer back to escort us around your little ship! Go on, call them while they're on shore leave, and they'll come here and find out that you disturbed them from whatever they were doing unnecessarily! Go on, I dare you!\"\n\n\"What my colleague means,\" Weynik explained again. \"Is that you should have received confirmation of our visit on your Duty PADD, and that we'll be as quick as we can.\"\n\nThe guard shot another bemused look at Sasha, before following Weynik's advice and checking his PADD, nodding and opening the door. \"Okay. But I'll have to escort you while you're onboard.\"\n\n\"Thank you, Sir, that would be marvellous.\" Weynik tensed, preparing for when they entered the ship and the door began closing before asking, \"How many others are still onboard? We need to know for the safety report.\"\n\n\"No one else, they're all on leave-\" He never finished the rest, as Sasha struck him in his lower back, delivering a second kick to the back of one of his knees, before grabbing him by the arm and delivering a blow to his neck with her free hand.\n\nWeynik stared at her. \"What do you think you're doing, Ensign?\"\n\nSasha let the unconscious figure slide to the bulkhead. \"What? You weren't doing anything to stop him!\"\n\n\"Yes, I was! I was obtaining valuable information, and waiting for him to lead us to a place where we can secure him!\"\n\nShe flushed. \"Oh. Because now we have to drag him along, right?\"\n\n\"What do you mean 'we', Giraffeski? Get to work, we have to find the Auxiliary Control Room, which according to the specs, is on Deck 3 Aft.\"\n\nSasha huffed as she slipped her arms under the guard's arms and dragged him along. \"Sorry, Captain.\"\n\nHe chuckled. \"That's okay. This year's Valedictorian is allowed the odd mistake.\"\n\n\"Please, don't remind me of that. The graduation is two weeks away! I haven't even gotten to writing my speech!\"\n\n\"And?\"\n\n\"And, I have no idea what to say. I've watched about thirty or so recorded ones previously given, and they... they're all so... lofty and confident.\"\n\nHe stopped and walked up to a door, noting the lock as it slid aside obediently, revealing a hygiene chamber. \"In here. At least he can keep out of trouble.\"\n\nShe huffed in acknowledgement as she lay him down on the floor and stepped out. As the door closed, Weynik produced a phaser pen and burned the lock shut as she declared, \"I've tried to come up with something, but I don't know what to say.\"\n\nHe stopped and considered it. \"How about 'I deserve this wholeheartedly, and if you don't agree, you can all stroke off'.\"\n\nNow she laughed. \"I wish! It's just not what I'm feeling.\"\n\n\"So what are you feeling?\"\n\nShe sighed. \"Nervous as hell. Undeserving. I never set out to earn this honour. I'm sure that there's plenty of other cadets who have worked harder who would deserve this more. I just wanted to do the best I can. But, you know, if they think I earned it, then I'll do the best I can to live up to expectations.\"\n\nWeynik was silent for a moment, before noting, \"It sounds like you just wrote your speech.\"\n\nShe looked to him, smiling. \"It's a bit short, isn't it?\"\n\nHe smiled at her. \"You have a problem with shortness? It's your speech, you can make it as short or long, as sombre or as crazy as you like. So long as it's you. Besides, you don't want to keep your Dad standing around on the Academy grounds all day while a graduation buffet table sits nearby unconquered by him. Come on.\"\n\nThe entered the Engineering Section of the Corsaire, a tiny enclosure compared to the Surefoot, and strode to an Auxiliary Control station, Weynik hopping up and placing his hand on the appropriate panel, hoping the dermal covering with Captain DaSilva's cloned DNA will be read as belonging to the ship's commanding officer.\n\nThe display before him came to life. He smiled. \"Sweet.\" He lifted up his hand to begin accessing the appropriate controls. \"I'll ready the duonetic pulse. You take the adjacent station, Ensign, and get familiar with the Flight Ops and Navigation protocols.\"\n\nShe complied, but asked, \"What about Dumont's database?\"\n\n\"Not a priority anymore, since we're taking the ship around it.\" He smiled. \"I envy you, Sash.\"\n\n\"Me, Sir? Why?\"\n\n\"You've had such adventures in your life already, and you're just starting out. Can you imagine what you might be up to in ten, twenty, thirty years' time?\"\n\nShe smirked to herself, finding the protocols easier than she expected. \"It all seems so far away...\"\n\n\"It'll get there, sooner than you think-\"\n\nJust then the door behind them slid open, and a bandaged Captain DaSilva entered. \"Greg, where the hell are- You?\"\n\n*\n\nEven through the filtered, artificial vision provided her by the exographic sensor strapped over her eye, she didn't like what she saw below. It was bad enough being in this filthy, claustrophobic maintenance duct, without looking down into the Vault, and counting the many ways she could die a horrible death down there.",
        "In her Embed, T'Varik's voice asked, \"Your assessment, Black?\"\n\nC'Rash willed her anxious tail from smacking the roof of the duct. The exographic sensor let her peer through the walls to the ceramic interior of the Vault, as the triselenide mist pumped into it swirled lazily around, like a school of tiny sea creatures slowly driving themselves insane inside an aquarium far too small for them.\n\n\"Leaving out profanity?\"\n\n\"Preferably.\"\n\n\"Then I have nothing to say.\"\n\n\"I must insist on a more professional response, Black.\"\n\n\"Oh, okay.\" She breathed in before continuing. \"White's data on the security specifications doesn't do justice to seeing it all together. Multiphasic antitransporter shielding completely surrounds the Vault, as does a metre of duranium. The interior is filled with a mist that will turn me into tasty Caitian p\u00e2t\u00e9, and the floor contains weight-sensitive gravitic traps that will instantly quintuple the local gravity and shatter my bones under my own weight.\"\n\n\"The duonetic pulse will disable the shielding if not the gravitic trap,\" T'Varik reminded her. \"And your personal transporter unit should provide sufficient power to allow you to beam in and out. The mist will remain, however, necessitating the use of your Life Support Belt, and the tractor clamps for your hands and feet will keep you off the floor.\"\n\nC'Rash glanced down at the wide belt strapped around her waist. \"You really expect me to put my life in the proverbial hands of an experimental piece of century-old technology?\"\n\n\"The Life Support Belt you are wearing is not in itself that old, but admittedly the principle behind it is; prototypes were tested by the USS Enterprise between 2269 and 2270. It will generate a force field that will provide protection and atmosphere for a limited period.\"\n\n\"And tell me again why we haven't been using them all this time?\"\n\n\"The final assessment from the Science Officer and Chief Engineer of the Enterprise was that standard environmental suits provided protection for a significantly longer period of time than the belts, and that suits offered a longer window of opportunity for escape or rescue in the event of suit breach or systems failure, whereas an immediate death was more likely in the event of a failure with the belts.\"\n\n\"Oh. Wonderful. Why don't I just get a suit on instead?\"\n\n\"An environmental suit would offer only slightly greater protection from the triselenide mist than the belt, and much less flexibility. Also, you will need to use your force field to protect the Orb once you open the storage container and expose it to the mist.\"\n\n\"While also keeping off the ground until I'm ready to beam out, and hope that I get out with what we're after before the gravitic traps crush me to death, or the force field fails and I'm shredded into a billion tiny sexy pieces, or whatever else might kill me.\"\n\nAfter an unusual pause, T'Varik finally responded. \"Black, I will not ask anyone to do anything on this mission if they believe there is a substantial possibility of death or injury to themselves. Our standing orders only ask us to take reasonable risks to obtain any Orbs... and I would consider putting you in jeopardy to be very unreasonable.\"\n\nC'Rash lay there, smiling. \"No. I'll be okay, I'm just shaking off nervous energy, but thanks for the offer anyway. I love you, Green.\"\n\n\"That is not an appropriate announcement at this time, Black.\" After a pause the Vulcan added, \"It is not unreciprocated, however. Stand by. Green, out.\"\n\n*\n\nCaptain DaSilva stood in the doorway to Engineering, jaw dropped as he took in the sight of Sasha and Weynik, though he focused on the latter, obviously recognised from the Pleasure Palace. \"You! The Pimp!\"\n\nWeynik launched himself at the human, striking out at his kneecap, the man crying out as Weynik sent him to one side before flipping the man over Weynik's shoulder and striking the nerve clusters near his neck, stopping to peer outside.\n\nSasha listened to sounds down the hallway. \"Two more coming- no, three, male, heavy-\"\n\n\"Stay back,\" he ordered. \"I'll deal with them.\" He raced out, focusing on the figures moving towards him, obviously attracted to the noise -- but then speeding up at the approach of the Roylan.\n\nWeynik dodged a clumsy attempt by one to grab him, reaching back and twisting the man's arm and striking his throat, before ducking around the second, punching him in the groin even as he moved to the third -- but couldn't avoid the third delivering a sucker punch. The first one returned and tackled him into the nearest wall-\n\nBut then their attention was drawn to Sasha, who leapt into the fray, her Caitian K'Gressor martial arts moves throwing off the Corsaire crewmen and giving Weynik a chance to recover and regain the upper hand, assisting in ending the fight.\n\nThe trio of crewmen lay at their feet, Sasha looking to Weynik. \"Sorry for disobeying orders, Sir.\"\n\nHe shrugged. \"I don't remember any such orders. How did you judge them so well by their sounds?\"\n\n\"A trick from Dad. It'd be better if I had his ears, of course.\"\n\n\"At least you don't have his belly. Come on, let's find another toilet to lock them up in and get back to work.\"\n\n*\n\nIn the hotel room, Jonas glanced up from his display. \"Commander, the recordings are finished and inserted into the appropriate timecodes.\"\n\nT'Varik never looked up from her PADD. \"Good work, Mr Ostrow. Are you still reading the signals from the phaser grenades planted by Ms Nemm?\"\n\n\"Yes, Ma'am.\"\n\nShe nodded. \"You and Ms Nemm continue to monitor the security traffic.\"\n\nSitting next to Jonas, Neraxis smiled. \"Can we order some more pizzas, Ma'am?\"\n\n\"No.\"\n\n\"But this is hungry work!\"\n\nThe Vulcan raised a slight eyebrow. \"You have already had three pizzas delivered. You are meant to be a honeymooning couple alone in here.\"\n\n\"Exactly! Scrappy is working up an appetite in me! He's like a wild stallion!\"\n\n\"Continue monitoring the security traffic, Ms Nemm. Quietly.\"\n\nNeraxis turned back to her own display, until she acknowledged Jonas glaring at her, his pale skin flushing as he whispered, \"Don't tell the Commander I'm like that!\"\n\nShe chuckled. \"But you are, Lt Studmuffin.\"\n\n\"Shut up, or I'll ask you to marry me for real.\"\n\nThe Bolian paused, regarding him soberly. \"You shut up... or I'll say Yes.\"\n\nNow he flushed further, looking away -- to see Kami at the other end of the room, facing the wall viewscreen but now looking over at them and grinning, before rising up and announcing, \"The Romulan has left the Tournament, and I believe I have an appointment back at Security... and maybe I should shop for a new dress along the way. You know, just in case I get invited to some formal ceremony in the near future.\" She laughed as she felt Jonas' glare follow her departure.\n\n*\n\nAs a new deck was opened for the final round of hands between Hrelle and Dumont, Zad'ik approached. \"Gentlemen, it has been a most entertaining evening, and I am almost sorry to see it end.\" Then his expression and tone tightened. \"Though I have been concerned about the obvious tension between you two. Tension which has been deliberately provoked on both sides.\"\n\nDumont leaned back in his chair, eyes fixed on the Caitian opposite him. \"It's all part of the Game, Adhar. A little verbal sparring, to shake the resolve of the opponent, to put a crack in their pokerface and reveal the tells. You hosted enough of these Tournaments to have seen such tactics before.\"\n\n\"Yes -- but always between players who are merely professional rivals. Not between two people with an obvious... tempestuous history between them. I'd rather not end this evening in a bloody fight.\"\n\n\"Oh, I'm sure that won't happen,\" Dumont taunted. \"Will it, Captain? All's fair in Love and War, yes?\"\n\n\"I'm glad you said that, Monsieur,\" Hrelle growled. \"Because what we have here definitely isn't Love. Let's get going.\"\n\n*\n\nIn the Station Security Centre, Naa'len was focused on investigating the assault on the Son'a in his own quarters, when a subordinate approached. \"Subadhar, that Caitian who was here earlier has returned-\"\n\nNaa'len rose and turned, facing Kami. \"I'm sorry Ms Dal, I'm rather busy-\"\n\nKami stood formally, dressed in an equally formal outfit, lacking any flirtatiousness. \"My name's not Dal.\" She produced a gold ID badge shaped like a feline pawprint. \"Caitian Security Services. And you're about to get a lot busier.\"\n\n*\n\nIn the Tournament Room, T'Varik's voice reached Hrelle's inner ear. \"All units in place, Brown, and ready. I believe 'Good Luck' is an apropos offering.\"\n\nHrelle nodded to himself as he reached for his drink, feeling like he was swimming through the thick tension in the air. Dumont had grown silent when it had been pared down to just the two of them. But it wouldn't be long before the bastard started up again-\n\n\"Is he walking, Mon Capitaine?\"\n\nHrelle looked up. \"Pardon?\"\n\nDumont looked back, smiling affably. \"Your son? Misha is his name, isn't it? Is he walking?\"\n\n\"Yes. Yes, he is.\"\n\n\"Excellent. I'd wondered if he had suffered any ill effects from his encounter with the Vlathi. According to the accounts I'd read, his injuries must have been excruciating. No adult should have to suffer so, let alone a child.\"\n\nHrelle tensed, as the glass in his hand was looked near to breaking, \"My son is strong. It'll take more than a pack of filthy snakes sent by a coward to finish him off.\"\n\nDumont's smile broadened. \"Still, it couldn't have been easy for him. Or for you, for that matter, being there, letting him be crushed like that, and doing nothing about it.\"\n\nHrelle set down his glass and cards and stared unblinkingly at his opponent, acknowledging how their dealer had stopped as well, keeping still, as if afraid of getting caught in the imminent, inevitable bloodshed. Security staff drew closer.\n\nDumont matched Hrelle's stare. \"What did it sound like?\"\n\n\"What did what sound like?\"\n\n\"Your baby's bones, as they broke? What did it sound like? Was it like cracking your knuckles? Was it like stepping on twigs in a walk through a forest? Was it a thundercrack? Or did his screams drown all that out?\"\n\nHrelle stared back, seemingly shaking with rage.\n\n*\n\nIn the hotel room, Jonas and Neraxis were packing up their equipment, but now stopped and watched the exchange between Hrelle and Dumont on the viewscreen, Jonas' hands balling into fists. \"Son of a bitch...\"\n\n\"I could kick that asshole out the nearest airlock,\" Neraxis growled.\n\n\"Get in line. I'm glad the Counselor isn't here to hear that bastard.\"\n\nT'Varik looked to them. \"I suggest you focus on your tasks, and be assured that, should this operation succeed, Dumont will not get away with his actions, or words.\" She activated her Embed. \"Green to Brown: we're ready.\"\n\n*\n\n\"Green to Brown: we're ready.\"\n\nIn the Tournament Room, Hrelle kept perfectly still, staring hard at Dumont.\n\nNearby, Zad'ik drew closer. \"Captain, if you require a break-\"\n\n\"NO!\" He flung his drink aside and swept all the chips off the table, creating a multicoloured plastic avalanche. \"I'm tired of this crap!\"\n\nDumont smirked -- but still looked rattled. \"Are you forfeiting, Mon Capitaine?\"\n\n\"No, I'm bored and I'm offering you a chance to finish this off, here and now! All our chips in the pot, fresh deck, Orion One Card Draw, Winner Takes All!\"\n\nDumont stared back, pensive... before finally nodding. \"Pourqupi pas, Capitaine? However...\" He looked to Zad'ik. \"I must insist on more guards in our presence, in case our Caitian friend chooses to forget himself. You guaranteed my safety.\"\n\nZad'ik grunted. \"I could insist that you two continue as per the Regulations... but it has been an entertaining -- and profitable -- evening already.\" He motioned to his left, towards the men at the end of the corridor leading to the Vault. \"One of you will walk away with the Prize anyway momentarily, so their presence down there is no longer required.\" He waved to the table. \"Proceed. And may the luckier man emerge victorious.\"\n\nThe dealer cleared away the old deck, as Hrelle and Dumont stood at opposite poles of the table. Then the dealer broke open a fresh pack and began shuffling, moving quickly -- probably wanting to get away at the first possible opportunity.\n\nThe deck was set between them.\n\nThe players looked to each other, Hrelle offering, \"You first.\"\n\nDumont reached across, grasped part of the deck and lifted it up, smiling at the exposed card in his hands. \"Ace of Diamonds.\"\n\nHrelle reached out now, took part of the remaining deck and lifted it up. \"Three of Clubs.\"\n\nThe Frenchman grinned. \"Mes condol\u00e9ances.\"\n\nThe Caitian frowned, setting down his card. \"Why, Monsieur? I won.\"\n\n\"What? In what Universe does a Three beat an Ace in One Card Draw?\"\n\n\"When it's Orion One Card Draw. I was quite specific about what variation of Draw I wanted to play. And in the Orion variation, Ace is always the lowest card, because the letter A closely resembles the Orion pictograph for Slave. I saw enough of them when I was one. Didn't you know of the variation?\" He looked to the dealer for confirmation.\n\nThe Tarlac paled as he looked at Dumont, and then to Zad'ik, nodding.\n\nZad'ik spread his arms out, smiling. \"Congratulations, Captain Hrelle!\"\n\nDumont turned a ghastly colour as the full realisation sank in. \"You... you played me!\"\n\nHrelle smiled. \"You ain't seen nothing yet, bubulah...\"\n\n*\n\nIn the hotel room, T'Varik touched her Embed in her neck. \"Green to Red: Begin.\"\n\nIn the Corsaire, Sasha activated the commands. \"Pulse activated!\"\n\nFrom the cruiser's warp core, energy travelled out through the docking and refuelling conduits, as the phaser grenades around the station detonated, disabling the surge protectors and shutting down lights and power on one side of the station, including the casino and the surrounding areas.\n\n*\n\nFrom inside the duct above the Vault, C'Rash switched on the Life Support Belt, feeling the warm spongy energy flow out over her fur and outfit like water, even as she heard an interior voice, not like the transmissions from her Embed, but still unnervingly under her skin: FIELD POWER AT 98%.\n\nShe aimed her exographic sensor to peer down through the Vault ceiling, adjusted her equipment harness, and reached for the controls of her personal transporter unit, bracing herself for the jump-\n\n-into the air, her hands and feet shooting out to the nearest wall, the tractors in the clamps allowing her to cling to the ceramic surface...\n\nExcept that they didn't. The material proved resistant to the clamps, and she began sliding down the wall to the floor. Frantically she realised that the force field was interfering with the effectiveness of the clamps, and she twisted in place, buying herself precious seconds until she could increase the power on the clamps to compensate.\n\nIt worked... when she was just a few centimetres from the floor.\n\nFIELD POWER AT 72%\n\n\"I'm in!\" She reported, forcing her tail to stay raised and cursed, not expecting such a rapid power drain; no wonder the Belts were consigned to history with the beige pyjama uniforms. She began her ascent to the level of the storage unit that contained the Orb, retrieved her phaser cutter and began cutting through the lock.\n\nFIELD POWER AT 60%\n\nHer muscles ached from the exertion required holding herself in place while also operating the cutter. She imagined the swirls of cutting crystals around her, imagined how they would shred her when her field finally gave up.\n\nFIELD POWER AT 52%\n\nThe lock burned away, and she pocketed her cutter and opened the door, spying the Ark within. Some of the mist already began scouring the surface of the Ark as her own movements made the air churn. She readied her other equipment, not knowing if the mist would have an effect on the Orb, but not wanting to take the chance. \"Stand by for beam out!\"\n\nFIELD POWER AT 48%\n\nShe opened the Ark doors, as the Orb's incredible, unignorable light streamed out, touching her, caressing her through her force field, calming her sense of urgency.\n\nMother's Cubs, it was the most beautiful thing she'd ever seen... she could stare at it for... for hours...\n\nFIELD POWER AT 32%\n\nFIELD POWER AT 28%\n\nFIELD POWER AT 25% SHUTDOWN IMMINENT...\n\n*\n\nThere was fear and confusion in the darkened casino, with curses and cries about a possible attack from outside forces. But Dumont was more concerned about an attack closer, much closer to him. Hrelle! Hrelle had somehow caused all this! He'd rigged the game to win, and now he was going to make good on his promise to kill him!\n\nHe rose and manoeuvred through the darkness, his mind picturing the route out of the Tournament Room, the casino, and back to his ship.\n\nHe never even sensed Hrelle, his enhanced vision unimpaired by the darkness, draw up and slip the Son'a communicator from C'Rash into one of Dumont's jacket pockets.\n\nUntil Hrelle leaned in and murmured in his ear, \"Run, Stroke-off. Make the Hunt interesting for me.\"\n\n*\n\nIn the hotel room, lit only by their Starfleet torches after the pulse disabled the power, T'Varik started at the Embed transmission. \"Black to Green; all done, I'm on the Opal Eye, preparing for Phase Six.\"\n\nThe Vulcan indulged in a luxuriant 1.6 seconds of sheer relief, before responding calmly with, \"Acknowledged, Black.\" She looked to Neraxis and Jonas, confirming they were ready with their equipment. \"Green to Red: Collect Blue, White and myself and initiate appropriate evasion.\"\n\n\"Stand by, Green.\" Sasha replied.\n\nThe Vulcan looked to Neraxis and Jonas, who stood close with their equipment, looking relieved that the operation was almost over, but still concerned for those remaining behind for the final gambit.\n\nA concerned T'Varik mirrored.\n\n*\n\nAt the Corsaire's Docking Bay, some passers-by caught in the confusion of the blackout stopped and cried out in response to the horrible screeching and grinding of metal from the docking bay door, then panicked and ran as the cruiser's engines powered up, and the ship departed... ripping itself free of the docking clamps.\n\n*\n\nDumont was halfway through the blacked out casino, shoving aside patrons and staff, certain Hrelle was about to pounce on him from behind, when power was suddenly restored - and he ran into one of Zad'ik's men -- and a female Caitian Dumont quickly recognised. \"You! You're his mate!\" He looked fearfully to the Son'a. \"Protect me! Please! Something is going on!\"\n\nNaa'len grunted, grabbing Dumont by the arm. \"Yes. We know.\"\n\n*\n\nThe lights returned in the Tournament Room, Hrelle having returned to the table unnoticed, but then glancing around and noting, \"Where's Dumont? I was hoping to give him a hug goodbye.\"\n\nZad'ik had other things on his mind, as an alarm sounded off from the direction of the docking bays. He looked to a subordinate. \"Contact Ops, find out what's happening!\" To the guards he barked, \"Get back to the Vault, make sure it's still secure!\" Now he looked back at Hrelle. \"What did you do, Captain?\"\n\nHrelle blinked. \"Me? Nothing. I've been here all the time. Weren't you paying attention?\"\n\nThe subordinate returned. \"Adhar, a ship just ripped itself from its docking bay and is fleeing! It's the Corsaire!\"\n\n\"Dumont's ship?\" Zad'ik looked around. \"Where did he go?\"\n\nJust then Dumont returned, albeit helped along by Naa'len, Kami, C'Rash, Rrori and several Tarlac security guards entered the room, Naa'len looking to Zad'ik. \"Check your Prize! Hurry!\"",
        "\"My Prize, you mean!\" Hrelle corrected, following Zad'ik and the other Son'a down the hall.\n\nIt seemed to take an interminable amount of time to clear all the safeguards and have the Vault door roll aside, revealing... the door to the storage unit containing the Orb Ark open, and the contents missing.\n\n\"No...\" Zad'ik murmured. \"No...\"\n\nAs he approached, Hrelle followed, shaking his head sadly. \"Mother's Cubs... how could they... how could-\" His foot kicked something on the floor. \"What's that?\"\n\nZad'ik looked down, noticing scraps of mist-scoured metal, twisted and pockmarked. Hrelle knelt and picked one up, examining it. \"They look like isolinear tags.\"\n\n\"What?\"\n\nThe Caitian turned the piece around in his hand. \"They're little transporter homing beacons, enhancing signals to ensure safe transport in unsafe environments. Poachers use them on protected worlds to collect rare animals -- and slavers use them as well. I've apprehended criminal organisations who have used them.\"\n\nNaa'len was there now, a Son'a scanner in hand, moving it around the room. \"There are numerous DNA fragments in here -- Son'a, Human, Caitian -- but we know there have been visitors in here tonight. But there is definitely a recent trace of transporter energy in here.\"\n\nZad'ik shook with rage, looking to the Head of Security. \"Lock down the station! I want the ones responsible for this taken!\"\n\n\"There's no need,\" the Security Chief assured him. \"We have him already.\" Then he turned and departed from the Vault, fully expecting the others to follow him.\n\nBack in the Tournament Room, Naa'len strode up to Dumont. \"He's the one.\"\n\nDumont paled. \"W-What? You can't be serious!\"\n\n\"What is going on?\" Zad'ik demanded, looking to the Caitian female. \"Who are you?\"\n\n\"It's Hrelle's wife,\" Dumont exclaimed. \"I recognise her image from our files!\"\n\n\"Wrong,\" Hrelle informed him. \"She does resemble my wife -- not as attractive as my real wife, of course -- but this agent has been playing my wife for the last several months, since the Vlathi incident.\"\n\nKami nodded formerly, producing the gold badge for Zad'ik. \"Special Agent Tantomile, of the Mother's Claws.\"\n\n\"The what?\"\n\n\"The Caitian Secret Service,\" Hrelle explained, as Kami put away her badge. \"They've been assigned to me since the Bel-Zon sent the Vlathi to my ship to assassinate my family.\" He nodded to C'Rash. \"Those are the other members of her team, Special Agents Coricopat and Pouncival. I'm reassigned temporarily from Starfleet and am acting as an unofficial member of the Claws for the duration of this mission, due to my special talents with the cards. Sadly, they wouldn't give me a badge of my own.\"\n\n\"This is nonsense!\" Dumont declared.\n\n\"Be silent!\" Zad'ik snapped, focusing on Naa'len. \"You'd better be prepared to explain this.\"\n\n\"I am, Adhar,\" he assured smugly. \"Agent Tantomile here arrived earlier tonight with a cover story. I saw through it easily, of course, as I did her second cover, and she eventually came clean with the truth.\"\n\nKami nodded in confirmation. \"I must compliment you on the professionalism of your Security Chief here, Adhar. Yes, I eventually revealed who I was, and why we were here: to use the Tournament as cover to board Dumont's ship while he was off it, and clone his database on the Bel-Zon.\n\nBut along the way, we learned that Dumont had a secret operation all his own ongoing. He had heard you'd obtained a Bajoran Orb, and he had made plans to steal it from you, in the event that he couldn't win it fairly.\"\n\nNow Dumont flushed. \"What? That's preposterous! Why would I do that?\"\n\n\"We have supplied evidence to your Security Chief that the Bel-Zon has been in communication with an extremist Bajoran faction known as The Alliance for Global Unity,\" Kami continued, still focused on Zad'ik. \"The Alliance wished to obtain the Orb and use it as leverage to gain controlling power with the Bajoran government. In return, the Bel-Zon would get exclusive access to secretly grow their Vraxorin narcotic crop on one of the Bajoran system's habitable moons -- and as Bajor is not a Federation member, and the Alliance would hamper any efforts made to join the Federation, the Bel-Zon could act with impunity for many years.\"\n\n\"Bajorans?\" Dumont spluttered. \"We have no dealings with the Bajorans!\"\n\nZad'ik looked at Kami, and then Hrelle, suspiciously. \"Why would Caitian Security Services be so forthcoming with such intelligence?\"\n\n\"Because our target was the Bel-Zon,\" Kami answered. \"As far as we are aware, you have posed no direct threat to Caitian citizens. And I deemed it necessary to share this information in order to expedite our departure, in case you blamed us for any of Dumont's actions.\"\n\nThe Frenchman looked to Zad'ik. \"Adhar, you can't listen to this-\"\n\n\"I said be silent!\" His face looked ready to split with anger as he returned to Kami. \"Go on.\"\n\nShe complied. \"Once it became clear what was going on, and that it would complicate our own mission, I openly approached Naa'len, told him the truth and showed him the evidence.\"\n\n\"Evidence? What evidence?\" Dumont demanded, looking apoplectic. \"There is none!\"\n\n\"There's much,\" Naa'len corrected harshly. \"And all damning. Earlier tonight, a Subadhar from the Docking Bays brought what looked like a newly-arrived Son'a female back to his quarters. He was assaulted in there, and his ID and communicator was taken. We found forensic evidence at the crime scene confirming it was a human female in disguise, and in fact have seen visual security recordings involving members of Dumont's crew.\n\nThe ID was employed to gain access to the station's maintenance conduit network, where grenades were planted in strategic locations, and an operative was placed in the conduit above the Vault. Then, at the proper time, a duonetic pulse was sent from Dumont's ship, disabling our power systems, and allowing that operative to beam into the Vault to steal the Orb.\"\n\n\"That would explain the isolinear tags we found in there,\" Hrelle observed. \"To help pinpoint and steal the Prize, maybe even a few other things in there too while they were at it.\"\n\n\"This is absurd!\" Dumont declared. \"Why would I do all that? I was ready to win!\"\n\n\"Until you lost,\" Hrelle reminded him. \"And then seconds later after your loss was broadcast to the rest of the station, including your accomplices, the lights went out... and for that matter, as I recall, so did you.\"\n\n\"Yes,\" Zad'ik agreed slowly. \"You did. Obviously trying to escape back to your ship.\"\n\n\"But your people betrayed you,\" Kami continued. \"They broke free of the docking bay and are currently heading out of Open Space. Leaving you to face Son'a justice alone.\"\n\nDumont paled. \"N-No! No, none of this is true!\" He strode up to Zad'ik. \"I was leaving because the lights went out and I didn't know why, and I was afraid of Hrelle attacking me! I made those fears clear to you from the start!\"\n\n\"Yes,\" Zad'ik agreed, but not in a supportive way. \"And you had me divert my guards from away from the Vault to be in here, just before the blackout.\"\n\n\"Don't forget the stolen Son'a communicator,\" Kami reminded Naa'len.\n\nThe Son'a nodded at that, focused on Dumont. \"Yes, that. Should something go wrong, it would have been convenient to have a communicator not blocked by the shielding around the casino, something your accomplices could have locked on to beam you away.\"\n\nDumont looked to Za'dik pleadingly. \"Adhar, I swear to you on my life... I DON'T HAVE A COMMUNICATOR!\"\n\nNaa'len drew closer, raising a communicator of his own and activating it.\n\nA sound came from one of Dumont's jacket pockets.\n\nThe Frenchman gasped, struggling to reach in and withdraw the source, holding it up and declaring, \"I- I don't know how this got in here!\" He flung it aside, focusing on Hrelle, confusion and anxiety vying now with anger. \"You did this! You set me up! All of this! You and your people did this!\"\n\nHrelle grunted, drawing closer to him. \"Why would we? We already got what we wanted: the intelligence from your ship, enough information to cripple the Bel-Zon's operations in this part of the Quadrant. Why bother setting you up as well? Besides... personally, I would want a lot more out of you than to just set you up. Much more. But we don't always get what we want out of life, do we? We just have to grab what we can.\"\n\nSwiftly he reached out, grasped Dumont by his hand and crushed nearly every bone he encountered, the sounds almost immediately eclipsed by the Frenchman's screams as he dropped to his knees.\n\nHrelle let him go, glaring down at him. \"That's what a baby's bones sound like when they break. Adieu, Monsieur Dumont. I don't think we'll meet again -- not after the Son'a have dealt with you.\"\n\nZad'ik signalled to Naa'len, whose Tarlac guards approached Dumont and grabbed him, lifting him up as he struggled, still wracked with pain but desperately pleading. \"N-No- it's all lies! I didn't do anything! I swear!\"\n\nHrelle watched Dumont depart, before facing Zad'ik again. \"Well? Do you offer a cash equivalent?\"\n\n\"Excuse me, Captain?\"\n\n\"For the Prize? It wasn't my fault that you let someone steal it.\"\n\nThe Son'a glared at him. \"You come here and disrupt my Tournament as part of some spy operation, and you have the gall to ask for money?\"\n\n\"Hey, is that the thanks we get? We warned you about the treachery, and anyway I won the Tournament fair and square-\"\n\n\"And if it comforts you, Captain, I will let Son'a Command know about the Bel-Zon's dealings, which no doubt will affect all our future business with them. But no, there is nothing in the Rules about a cash equivalent to the prize. You will remain listed nominally as the winner for this year, however.\"\n\n\"What? Son of a bitch...\"\n\nBut then Kami put a hand on his shoulder. \"Captain, our original objectives have been achieved. perhaps we should just go?\"\n\nHe considered her suggestion, then grumbled as he departed with her and the other Caitians. \"I was hoping for a promotion for returning an Orb...\"\n\n*\n\nThe four Caitians remained silent as they quickly strode back to the Opal Eye, until they entered through the docking port and the hatch closed behind them. Hrelle breathed out. \"Cadet, initiate immediate departure sequences and get us away from here, Maximum Warp.\" As Rrori rushed to the cockpit, Hrelle turned to C'Rash. \"Are the station's defence systems still down?\"\n\nShe nodded. \"They don't know it, though. Everything will look nominal until they try and use their tractor beams or disruptors.\"\n\n\"Good. And the objet d'attention?\"\n\nShe frowned, before understanding. \"Still in the Transporter Room. I'd stay away from it if I were you. I nearly didn't make it out of there because of it.\"\n\nKami looked intrigued. \"Did it give you a vision?\"\n\nThe sable-furred Caitian shook her head. \"No, but if you stare at it too long, you think it's staring back at you. I'm gonna get up there with the Cub and alert the Surefoot to rendezvous with us and the Corsaire. And then prepare for all the inevitable jokes about my lapdancing.\"\n\nAs she started off, Hrelle called after her. \"Lieutenant?\"\n\nShe stopped and glared back at him, ready for the teasing.\n\nInstead he strode up to her, holding out his hand. \"Well done. Very well done. You were superb. Thank you.\"\n\n\"My... My pleasure, Sir.\" After a moment of hesitation, she nodded in gratitude and took his hand in return, before striding off again.\n\nHrelle and Kami looked to each other, before embracing tightly, Kami confessing, \"I didn't think we'd get away with it.\"\n\n\"I know what you mean. I think I developed three or four ulcers tonight.\" His tail twitched as he felt the docking clamps release, and the cruiser's impulse engine power up, before the vessel banked away from the station and entered warp space. \"T'Varik was superlative at planning all this; I hope I don't lose her to Starfleet Intelligence.\" He made a purring sound. \"And you, you were magnificent. Very convincing.\"\n\n\"Not bad for an old woman with sagging boobs and a shuris roll around her waist. Allegedly.\" She gave him a playful smack on the back of his head. \"They're gonna kill Dumont, aren't they?\"\n\n\"Most likely. And with the false evidence provided to the Son'a, any potential business partnership between them and the Bel-Zon will collapse now. Not to mention how much we'll have crippled the Bel-Zon itself by eliminating their shipping and smuggling arm, and gaining access to their records, their contacts and operations in the Federation. Quite a victory.\"\n\n\"And yet you still felt the need to physically injure Dumont?\"\n\nHe drew back to look into her eyes. \"Well... I could have done worse to him, much worse. Consider it poetic justice for the Right Hand of the Bel-Zon.\"\n\nHer expression sobered. \"Don't be flippant about it, Esek. It's one thing to let the Beast out to protect yourself or others in the midst of battle. This was something else-\"\n\nHe held up a placating hand. \"I know, I know, I indulged myself too much. And I'm supposed to be better than that. Sorry.\"\n\nNow she smiled. \"Shall we go look at it? I've never seen one before up close.\"\n\nHe took her hand as she guided him to the small transporter unit and storage hold onboard the cruiser, where an hourglass-shaped crystal sat in its Ark on the pad, surrounded by coruscating white light.\n\nHrelle gasped, still in awe of it. -- and that their plan worked, that they convinced the Son'a that the Bel-Zon stole it. It was possible that the Son'a would hear later that they were deceived, but by then the original would be in the hands of the Bajorans, and then the Son'a can protest all they want to the Federation, for all the good it would do.\n\n\"T'Varik studied the scans of the Orb Ark from C'Rash's sensor readings,\" Kami noted quietly. \"The Bajoran archives record it as being the Ark that held the 'Orb of Tomorrows'. Whatever that means.\"\n\n\"That sounds intriguing,\" Hrelle smiled, crouching beside it as his eyes adjusted to the arcane brilliance. \"Imagine, learning about the future, knowing what's to come...\"\n\nHis wife shook her head. \"I like surprises. Don't you?\"\n\nHis smile blossomed into a grin. \"No. I've had enough of them in my life. If I have to face the unexpected, I want a warning about it.\"\n\nHe reached out to touch the Orb.\n\n\"Esek, wait-\"\n\nHe didn't remember actually touching the surface of the Orb, couldn't tell if it was hot or cold, hard or soft, smooth or furry, except that as his hand drew nearer, it seemed to react, enveloping him in light and sound and sensation...\n\nAnd then he felt himself flying through space.\n\nSeveral years ago, he was on a space station that literally ripped apart around him, leaving him in space without a suit, and surfing on a piece of debris into the atmosphere of a planet, before he was rescued by the Surefoot. This, however, made him feel like he was sailing at warp speed through deep space like the Surefoot itself.\n\nAnd it was beautiful: stars and nebula and comets, and flashes of pulsars and quasars and anomalies he couldn't identify. He felt immensely tiny in comparison to the rest of the Universe... and yet, not insignificant. And unlike his earlier experience, he heard more than the pounding of his own blood in his body. He heard voices, and whispers, and murmurs and laughs and cries.\n\nAnd he heard music: a guitar, a drum, and a countdown... it was his good friend David Bowie singing Space Oddity! It was like the Official Music of the Cosmos, matching the infinite majesty he felt both within and without.\n\nAnd in the stars, he caught glimpses of planets and ships, of landscapes and babies and old people and animals. And he saw faces: more ephemeral than real, faces familiar and not, or familiar but older, more lined and worn than what he would have expected, memories that weren't his, that would never be his, flying by out of sequence.\n\nMany faces. And none of them were his...\n\n\"Though I'm past one hundred thousand miles / I'm feeling very still...\"\n\n\"Grandpa? Are you there? It's Hannah...\"\n\n\"What are we, if not storytellers?\"\n\n\"Nothing wrong with a little grey. It's distinguished... especially for this new role...\"\n\n\"The Prime Directive has been rescinded for the duration of the crisis...\"\n\n\"And I think my spaceship knows which way to go / Tell my wife I love her very much, she knows-\"\n\n\"He'll love having a little sister to care for-\"\n\n\"Do you, Lieutenant Jonas Ostrow, take this woman...\"\n\n\"The Surefoot-B: a new ship, a new mission, a new era...\"\n\nBut then he felt himself quickening, being tractored towards darker, more turbulent regions, no longer feeling in control, as the voices and the images rushing past him reflected the increasing turbulence.\n\n\"Ground Control to Major Tom / Your circuit's dead, there's something wrong-\"\n\n\"Grandpa? Where are you?\"\n\n\"The Cardassians have built a spatial catapult to propel their ships-\"\n\n\"I'm sorry, Admiral, we've exhausted all the accepted therapies...\"\n\n\"The Ferasans have allied with the Dominion! They're moving onto Cait!\"\n\n\"Hrelle and his bastard clan have interfered with us for the last time...\"\n\n\"Attention Starfleet! This is Captain Sasha Hrelle! We have engaged the Kelvins-\"\n\n\"It is with profound sorrow that I must report the loss of two souls of infinite value...\"\n\n\"THEY BROKE IT! THE CATS BROKE MY MOON!\"\n\n\"Arm the Seven Hells-\"\n\n\"No... losing my cub... losing my husband... please, I can't take any more-\"\n\n\"Grandpa! I need you!\"\n\n\"The Borg Republic are sending cubes to support us, but we don't know long-\"\n\n\"Can you hear me, Major Tom?\"\n\n\"I wanted so much for him to be here, on this day, to see me graduate... He gave me so much: love, laughter, support, encouragement, inspiration... and a baby brother...And now... now they're both gone... and I don't know how we -- how I -- can go on without them...\"\n\n\"Can you hear me, Major Tom?\"\n\n\"...death of Captain Esek Hrelle, and his young son Misha...\"\n\n\"Can you hear me, Major Tom?\"\n\n\"Grandpa...\n\n...Where have the stars gone?\"\n\nTHE ADVENTURES OF THE SUREFOOT WILL CONTINUE..."
    ],
    "authorname": "Surefoot",
    "tags": [
        "star trek",
        "star trek fanfic",
        "star trek fan fiction",
        "starfleet",
        "surefoot",
        "aliens",
        "federation",
        "caitian",
        "caitians",
        "starfleet academy"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/surefoot-28-dead-mans-hand"
}