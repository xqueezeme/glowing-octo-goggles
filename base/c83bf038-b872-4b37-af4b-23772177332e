{
    "title": "Home for Horny Monsters Ch. 56",
    "pages": [
        "Hi all! Here it is, the next chapter of Home for Horny Monsters!\n\nNew reader? There's over half a million words of this bad boy on the internet, I have somehow War and Peace'd myself some monster smut! You could start here, but you would be missing out on some really good stuff. You could also just jump in. Who knows, you might enjoy this chapter enough to go back and take a look at the beginning.\n\nReturning readers, welcome back! It's been a long month for me, and I hope this chapter finds you well. I've been looking forward to sharing this scene with you for so many months now, I really wish I could write faster.\n\nAnyway, I won't keep you. Don't forget to check my bio for release dates, and definitely don't forget to rate, comment or review. I do eventually read all of them, and I absolutely love your enthusiasm. I struggle with story insecurity like every writer, and it really helps keep me focused on what matters.\n\nSee you on the other side!\n\nMoonrise\n\nKisa sat on the roof of the house, her eyes locked on the wrought iron gate at the back of the property line. It had been over a week since Mike had gone through it and returned with the devil dog in tow. Despite his reassurance that Cerberus was no longer a danger to them, all she could picture in her mind was being chased through the misty woods by a fire breathing beast.\n\nMemories of her trip into the Underworld from so long ago had rushed in on her like ice water. She had fled from the sight of the creature to hide somewhere deep in the house. It wasn't until Tink tracked her down later that she was able to calm down and return to the rest of the house. She hardly ever went into the backyard anymore, afraid that Cerberus might come through the gates and pounce on her.\n\nHer deep-seated fear of the devil dog was instinctual, and it was yet another cat-related problem which bothered her. Death had been very impressed by Mike's journey into the Underworld, but very disappointed when he learned that nobody had thought to map the place while they were there.\n\n\"Aha, I have it!\" Death sat next to her on the roof, his robes pulled up to reveal bony legs as he frantically scribbled in his notebook. He flipped it over to reveal that he had, in fact, written the word CAT in blue crayon. He had also drawn a highly unflattering picture of her beneath it.\n\nShe scowled and took the picture from him. \"You spelled it right, but did you have to draw giant tits on me with nipples? They're bigger than my head.\"\n\n\"Hmm?\" He took the drawing back and examined. \"Ah, I see. In my haste to identify your gender as a woman, I neglected to account for scale. I should draw your breasts much smaller next time, or maybe not at all.\"\n\n\"Don't draw my tits at all,\" she yelled, then snatched the drawing out of his bony hands. Death regarded her patiently for over a minute before she groaned and handed him the paper back. \"I'm sorry I yelled at you. I'm just...grumpy is all.\"\n\n\"I'll bet,\" said a voice from behind her, and she jumped to her feet and spun around to see Mike standing there. He wore a button-down shirt with a pair of slacks. Without any difficulty, he walked down the sloped roof toward them. \"May I?\"\n\n\"Yes, Mike Radley.\" Death handed over the paper and waited while Mike scrutinized it.\n\n\"You did a very good job,\" Mike told him. \"Did the thicker crayons help?\"\n\n\"They did indeed, Mike Radley. However...\" Death held up his fingers to reveal blue smudges of wax all across them. \"There seems to be a tradeoff for their convenience.\"\n\n\"I would assume fine motor control can be learned, but you don't have any muscles, so I'm not sure where that leaves us. Still, this shows a lot of improvement, and I think this one should go on the fridge.\" He handed it back.\n\n\"You honor me with your words, Mike Radley.\" Death took the drawing and clutched it tightly against his chest. \"I shall put it up at once so that all may be proud of my achievements.\"\n\n\"Sounds goo\u2014no, not that way!\" Mike stuck out his hand as Death hopped off the side of the roof and plummeted to the ground. \"Tink, dodge!\"\n\nThere was a loud thud, followed by the sound of Tink shrieking in anger. Death had plummeted into the work table she had set up beneath them and caught the edge of it, launching her tools across the yard, some of which landed in Naia's fountain.\n\nShrieking, Tink held up her hammer like she was going to throw it. Death shouted his apologies, which nobody else could hear, before letting himself into the house. Tink threw her hammer in the bushes, causing a pair of rats to burst free and run for safety in the garage.\n\n\"Geez,\" Kisa muttered, looking over the edge. \"He's like a child. You know that, right?\"\n\n\"We were all children, once. It's only a matter of time before something comes along to burn away that innocence.\" He rubbed his side with one hand, right by his hip. \"I wanted you to know that I've noticed how much time you spend with him. Thank you.\"\n\n\"Please. He follows me around is all.\" She walked along the edge of the roof, her back to Mike. He had barely said anything to her since his return from the Underworld. The few times she had seen him for longer than a few seconds, he had been busy either researching something or spending time with one of the others.\n\nTime fucking them, that was. It had been a shock the first few times she had walked in on Mike with one of the other girls, but now she had seen him have sex with almost everybody in the house. She had been dumb enough to ask Death about it, which had turned into an hours-long explanation regarding his take on human relationships. However, she had learned from Abella that Mike and Naia shared some sort of spiritual bond that made the others so attracted to him.\n\nWhatever magic he possessed didn't seem to have any effect on her, thank god. She felt embarrassed by how eager the others were to please him, treating him like a celebrity rock god, or something. They seemed to fall over each other trying to make him happy, and if he wasn't so damned nice to everybody, she probably would have left out of disgust.\n\nStill, when he had appeared on the roof, she couldn't help but notice that his hair was perfectly styled, and the wind on the roof ruffled his shirt in a manner that highlighted the muscles in his chest. Even mother nature was falling over herself to make him look good, and she snorted at the idea.\n\n\"It really is appreciated,\" he said. \"I'll admit, I get stuff done much faster without having to explain myself to him, so you've been a big help to me. But that's not why I'm up here.\"\n\n\"Oh?\" She smirked and turned around, but was surprised to see that he had removed his shoes to walk along the edge right behind her. \"Aren't you afraid you'll fall?\"\n\n\"Used to be. Heights don't bother me anymore.\"\n\nShe narrowed her eyes at him. \"How did you get up here, anyway?\"\n\n\"Climbed up,\" he answered. \"Abella told me you were here and offered me a lift, but she has a habit of demanding certain favors from me afterward.\"\n\nKisa snorted again, then looked away. Indeed.\n\n\"Anyway, the real reason I came up here was because of Zel's ceremony tomorrow. She's becoming the official chieftain of the whole herd, and she invited some of us to come and take part.\"\n\nShe had no interest in the centaurs other than to watch them out in the front yard as they worked. If nothing else, they had been entertaining to observe. \"Why do you think they want me there?\" she asked, then scampered up the roof to hop onto one of the turrets.\n\n\"They didn't request you specifically.\" Mike stood just below the turret now. \"I was just wondering if you wanted to go with me. There's supposed to be dancing and music, and I thought you might enjoy getting out of the house for a bit.\"\n\nShe stopped on the edge of the turret, then turned around. \"What kind of music?\"\n\n\"I have no idea,\" he told her, then turned to look over the yard. \"It's really pretty up here.\"\n\nShe scowled, ready to tell him that the roof was hers. Abella usually kept to herself, which meant that other than Death, it was one of the only places she could be alone. However, she bit her tongue.\n\n\"Anyway, if you wanted to come, I wanted you to have a heads up so you can pick out a dress or something. Tink is making a dress for herself and offered to make you one, too.\"\n\n\"Tink...is going?\" The idea of Tink going too brought up a weird feeling in her chest. Though some of her memories had returned, they were sporadic and rarely made sense. Her love-hate relationship with the goblin was something she struggled to understand, and this was one of those times. It shouldn't matter to her that Tink was going, but for some reason, it did.\n\n\"She is, but mainly because I told her she needs a break. She's had to rewire the entire house and upgrade the circuit box, which hasn't been done since it was first installed sometime last century. She's trying to put more safeguards in as a result of Quetzalli's mishaps so that she doesn't have to keep working on it. Apparently the wires have melted in some places, and if the house wasn't magic, she's fairly certain a fire would have been started. I think we could all use some downtime. Oh, right. Speaking of wires...\"\n\nHe pulled something out of his pocket and held it out to her. She took it from him and saw that it was an electronic device with a touch screen and a pair of earplugs.\n\n\"It's the latest iPod,\" he explained. \"It's kind of like a phone, but it's for playing music. I went ahead and loaded a bunch of stuff on there and started a Spotify account for you, which is a way to listen to new stuff. The record player is fun and all, but you can use the wireless earbuds to listen to your music wherever.\"\n\nHe gave her a brief rundown of how everything worked, and she tried her best to follow. She had been asleep for so long that the latest technology was like magic to her, but the touch interface seemed simple, and she was able to get the earbuds to fit in her ears with a little bit of help. She was pleased to hear the stream of tunes when she hit play, but then paused the music.\n\n\"What's the catch?\" she asked him, suddenly suspicious.\n\n\"There isn't one. I know you like to dance is all, and the wireless buds will make it easier for you to dance wherever you want. Oh, but be careful not to lose them. I had trouble getting those ones. Apparently, there's a bit of a shortage.\"\n\nShe looked at the iPod and then back at him. \"No, really. There has to be a catch. You want something, don't you? Give me a gift, make a small request, make me feel like I owe you something.\"\n\nHe shook his head. \"Nope. As Caretaker, I'm supposed to make sure everyone is happy and healthy, or at least that's my take on it. I don't even know you that well, but I have noticed that you love music and like to be on your own. This way, you can do both. Anyway, I need to get downstairs. I promised Jenny a game of checkers.\" He walked away from her and toward a corner of the roof where he was able to drop down a level before climbing onto a drain pipe and going the rest of the way down.\n\nKisa snorted, then pulled one of the buds out of her ear to look at it. It looked like something from space, but the sound quality seemed pretty nice.\n\n\"There's always a catch,\" she muttered.\n\n\"You'd think so,\" said a feminine voice from behind her. Kisa startled and dropped the earbud, only for a black scorpion's tail to whip around her and snag it with a pair of pincers on the end.\n\n\"Is everybody trying to scare me off this fucking roof?\" She turned around to see Lily the succubus there. \"Seriously, none of you make any fucking noise moving around up here! And why are you even up here anyway?\"\n\nLily contemplated Kisa and then took the earbud off of her tail. \"Actually, I've been up here quite a bit. You don't even know I'm here most days, because I make myself small and hide on the other side of that.\" She pointed to the top of the turret. \"I don't like it in the house because it's just so full of people all the damned time and I just want to kick back and look at the clouds.\"\n\n\"Maybe you should go back to your corner of the roof, then, and leave me alone.\"\n\n\"Now, now, Catnip, you keep talking to me like that and I'll show you just how many lives you have left.\" She handed over the earbud. \"I overheard what you said about him and decided to do my good deed for the month.\"\n\n\"And what? Tell me he's actually a good guy or something?\"\n\nLily sighed. \"Ugh, never mind. If you want to waste the next few months of your life wallowing, be my fucking guest. I'll do my good deed somewhere else.\" She started to walk away and then spun around. \"And you know what? Demons can't lie. So whatever I had to tell you was going to be fucking golden.\"\n\nHer wings popped open and she launched herself into the sky, spiraling upward until she was little more than a speck.\n\nKisa frowned, then looked at the earbud in her hand. The succubus was one of the few people here she didn't already have a missing history with, and it occurred to her that her own response had been less than kind.\n\nHad she always been this way? So angry and eager to push others away?\n\n\"Kisa.\" When the old man spoke, she immediately shook her head and put in the earbud, eager to drown out whatever memory was surfacing. With the touch of her finger, she started a hip hop playlist that made her tail flick back and forth to the beat. Looking down at the iPod, she contemplated Mike and his words as a song she had never heard before saturated her thoughts.\n\nHe seemed too good to be true, but was he? If not for the sex stuff, she would probably be less distrustful, but she hated the idea of just ending up as another notch on his bedpost.\n\nShe felt a stirring in her stomach, thinking about how he had looked standing on the edge of the roof. Would it really be that bad if she did?\n\nA shadow passed overhead, and she looked up in time to see Abella land on one of the reinforced beams of the roof, the metal groaning under her weight.\n\n\"Fuck it,\" she muttered, then moved toward the same spot where Mike had descended. Her rooftop refuge was no longer quiet, and she decided that her room would be a better place to stay.\n\nOnce on the ground, she walked past Tink, who was running the wire along the side of the house. She stopped for a moment to watch, then continued inside to find somewhere quiet.\n\nThe house itself was crowded with rats who were repairing holes in the plaster. It looked like the house would be back to normal again in a few days at the current rate, and she found herself distracted more than once by the swishing tail of one of the rats. She had discovered not too long ago that she not only had a prey drive, but the sight of a dangling string awakened weird feelings in her that she avoided indulging in.\n\nThe last thing she wanted was shit from Tink about playing with a string.\n\nOnce in her room, she saw that a note had been put on her brand new bed. Her room actually had furniture now, which was a welcome change from when she had first arrived. She picked up the paper and turned it over.\n\nGreen dress in armoire, Tink adjust tomorrow, it said in curly letters.\n\nCrumpling up the note, Kisa moved over to the small armoire that they had put in her room and then opened it. Hanging from the rod was an emerald green dress that felt like silk. Tempted to shred it, she pulled it down and held it against her body and then walked over to look at herself in the mirror.\n\nIt had been cut to account for her tail, and the skirt was flared at the bottom. Kisa twisted her hips in time to the music from her earbuds and noticed that the fabric shimmered with her movements. The sides of the dress had high seams, which would allow for maximum mobility.\n\nIt not only looked like it would fit her, but it looked like it had been designed for dancing. As the beat in her ears continued, she just had to know how it would look while it was on.\n\n\"God damn, tiny-titted booger,\" she muttered, then slid out of her clothes to try the dress on.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nMike picked up the sports coat on his bed and put it on. He had ordered it online and Tink had made some alterations to it, and it now fit perfectly. He stopped in the bathroom to admire how it looked in the mirror, only to see Naia staring at him with a hungry look in her eyes.\n\n\"Looks good from back here,\" she told him. \"Wish I could go with you.\"\n\n\"Me. too,\" he told her, then turned around to give her a peck on the lips. \"Don't think we could fit the centaur tribe around your fountain.\"\n\nShe pouted, then gave him a wink. \"You owe me a hot soak in the near future.\"\n\n\"Yeah, I do.\" He touched her cheek and she turned into water and vanished down the drain. On his way out of the bathroom, he stopped when he saw Lily sitting on the edge of the bed. She was in an elegant black gown with red trim and had on black lace gloves. Around her neck was the pendant he had given her, an antique stone in a silver setting.\n\n\"You look delicious,\" she said, then stood to join him. \"And I am so ready for a night on the town.\"\n\n\"Yeah, it's kind of weird. With everything going on with faerie queen plans, Zel's ceremony kind of snuck up on me.\" He held still while she adjusted his collar. \"Will be fun to blow off some steam before going back to the Underworld.\"\n\nLily scowled. \"Still planning to swim upstream in the Underworld, are you?\" She was referring to a plan that Beth had concocted. During Samhain, the veil between worlds would become thin, allowing the fae and other spirits to cross over. Mike's plan was to see where they were coming from and track their origin until he made it back to the queen's court, a plan made much easier now by the fact that he could now ride Cerberus through the Underworld.\n\n\"I don't have a better idea. According to Sulyvahn, the flow of time between the two places synchronizes, so we don't have to worry about me getting stuck there for thirty years by accident.\" He picked up a pair of ties from the bed. \"What do you think?\" he asked, holding each one up to his neck.\n\nLily took the ties from him and threw them on the floor. \"You look stupid in a tie,\" she declared, then undid the top button of his shirt to open his collar up. \"When someone tells you to dress nice, it doesn't mean you have to look like an asshole.\"\n\n\"I...\" He didn't know how to respond, so took her advice and threw the ties back on the bed. \"You're here super early. I'm not headed to see the Moon Tribe for a few hours yet.\"\n\n\"Oh, I know. I wanted to come with you when you head to the other house. Maybe meet my new little sister, see if she likes to play dress up.\"\n\nMike laughed, then picked up the backpack sitting by his bedroom door. It was heavy, packed to the brim with paperback books. He had been tempted to buy Amymone an e-reader but had no way for her to keep it charged. \"I would love the company. Come on, let's go.\"\n\nHe led her downstairs and then out back to the gate. Naia waved to them as they passed, and he unlocked the padlock before swinging the gate open. The mists of the Underworld curled around his limbs like snakes, but the effect no longer bothered him. Once inside the Underworld, he cupped his hands to his mouth.\n\n\"Cerberus!\" His voice vanished into the woods, and he turned to look at Lily. \"I thought it was bad news for you to be in here? Something about demons coming to check on you?\"\n\nShe shook her head. \"I won't be in here long, and even if they show, they will see Cerberus and leave. Demons don't fuck with hellhounds, it's a bit of an unspoken rule.\"\n\n\"There's my fun fact for the day.\" He turned his attention to the mist just as a large shadow formed and then leapt toward him. Cerberus landed with a loud thump, then sniffed his face before transforming into a woman. Their leather outfit looked slightly more refined now, and each head had black bows in their hair.",
        "\"I'll be fucked,\" Lily muttered. \"You really did it. You domesticated one of the fiercest predators in existence.\"\n\nHe nodded. \"This shouldn't be a surprise to you, I know you've been reading my memories.\" Lily had been back in the Dreamscape with him most of the week, trying to help him refine his techniques. The Shadow had been mysteriously absent, so the succubus had been putting Mike through the paces.\n\n\"Seeing it in real life is different,\" she told him, then stuck her hand toward Cerberus. The head nearest to her swiveled to sniff her hand, and then the beast had formed once more, a trio of growls rumbling from her chest.\n\n\"Easy, Cerberus. Lily is a friend.\" He patted the fur of Cerberus' chest, and the rumbling dwindled. \"That's a good girl.\"\n\n\"Why do you talk to her like she's a dog?\" Lily asked.\n\n\"Well...isn't she?\" He frowned at the question, then looked at Cerberus. \"I figured the enchantment that bound her to me made her more human, but that was it.\"\n\nLily shook her head. \"Cerberus are actually very smart. Whatever changed because of the magic really only gave her the ability to transform.\"\n\n\"Cerberus, is this true?\" he asked. The hellhound transformed back into a woman and sneered at Lily.\n\n\"Master speaks to Cerberus how master wants,\" they said, each head speaking only a word at a time. \"Cerberus is a good girl for master.\"\n\nStunned, Lily shook her head. \"Well fuck me in the ass, she's got it bad for you. I shouldn't be surprised.\"\n\n\"Shit, now I feel bad. I'm\u2014\" he was about to speak when Lily clamped a hand over his mouth.\n\n\"Romeo, I'm not certain how powerful the enchantment is that bound her to you, but if she is deferring to you as an alpha male, I want to remind you that she is still a fire-breathing demon who relies heavily on instinct. If she were to feel that her own status has shifted, it could be problematic. She's your bitch, you're not hers.\" She released her grip on him when Cerberus growled at her. \"Just a thought.\"\n\n\"It's okay, Cerberus,\" he said, then looked at Lily. \"Thanks for the reminder. Cerberus, take us to the other house.\"\n\nThe scowl on Cerberus' faces disappeared, and they all nodded eagerly before becoming the beast once more. Mike climbed onto their back and pulled Lily up behind him once she changed her clothes into a red tank top and jeans. Once settled, he grabbed a handful of fur and held on tight while Cerberus broke into a loping trot.\n\nThe ride was different every time. The other day, it had only been five minutes long, but it usually averaged half an hour. Lily was leaning back with her hands behind her, and her tail was curled lovingly around his thigh.\n\n\"So what have you been up to during the day?\" he asked. \"I heard Quetzalli mention you at breakfast.\"\n\nShe laughed, a sound that echoed back to him from the trees. \"The zombie and the dragon have become quite the odd couple, if I say so myself. Caught them experimenting in Dana's bedroom last night. It was quite a sight.\"\n\n\"Experimenting?\" He knew he had heard her right, but suspected she was hiding something. \"Experimenting how?\"\n\n\"The dragon was completely naked, for starters.\"\n\nHis cock twitched in response, but Lily's tone was teasing. \"She was naked? What were they doing?\" When Lily didn't answer, he looked over his shoulder and saw her biting her lip, clearly trying to buy some time to think of a clever (yet truthful) response.\n\n\"Oh, fine. You're no fun. Dana was trying to teach Quetzalli how to control her electrical charges. She can summon a charge, but can't control it once it's there on account of her busted horn, and Dana is tired of having her toys get blown up by the field.\" Lily rolled her eyes dramatically. \"She also was trying to teach Quetzalli how to make a shifting electromagnetic field via alternating currents. Something about being able to test the shielding inside the drones in the backyard without losing them in the greenhouse. It was nerd stuff. You would love it.\"\n\n\"Maybe. I struggled with learning about electricity in school, and I'm not much better now, even though...well, you know.\"\n\n\"Do I ever.\" She grinned and stroked his thigh with her tail. \"Been a while since I've ridden the lightning myself.\"\n\nHe grunted and turned back around to face forward, refusing to take the bait. He had spent countless hours recently with Lily in the Dreamscape, and she absolutely loved tormenting him sexually while they were in there, peeking into his mind to read his thoughts. Out here, she didn't have that luxury, so he figured turnabout was fair play.\n\n\"So...why was she naked?\" he asked.\n\n\"Something about the static build-up,\" she answered. \"You would have loved it. The dragon has quite the rocking body.\"\n\nInwardly, he nodded. Quetzalli had a very curvy figure, but their relationship right now was primarily storm facts and keeping her fingers out of the outlets.\n\nOut in the mist, dark shapes shifted about, but Cerberus ignored them. Mike saw the hint of faces appear in the darkness, and frowned. \"Are these lost spirits?\" he asked.\n\n\"Some. It's possible to become stuck here and wander forever, but you could also be seeing hints of another plane. Think of them all like giant, four-dimensional spheres rotating through this world, and realize that you can see glimpses of them. They could also be spirits like the ones trapped at the other house, and if we knew how to pass into their world, we could go talk to them.\"\n\n\"Like the ones that live by the shadow's castle?\"\n\n\"Exactly. That fucker has pulled them all inside his castle walls, so I can't even chat them up anymore. Not that it ever did me much good. I'm fairly certain he's up to something, but no idea what.\"\n\nMike smirked. \"Burning down my world, most likely. Last I spoke with him, he said he had found somebody else to take his bargain. As far as I know, nobody in the house has spoken with him, so it must be someone on the outside. Do you think it could be Amir?\"\n\n\"No. That shit head doesn't have a soul, so no bargain. Still, could be one of his cronies from the society, maybe someone who survived.\"\n\n\"Like Elizabeth? We know she survived.\" The witch had confronted him after the society had been gobbled up by a dimensional rupture. Other than her, he had no idea who could have survived, though Lily insisted that Amir must still be around.\n\n\"Maybe. To be honest, I don't see someone like her parting with a piece of her soul. She knows what a bad idea that is, and it would take a serious bargain to convince her. I don't know that there's anything she would want so badly as to risk ending up as Emily did.\"\n\n\"Speaking of,\" he muttered, the house coming into view. Cerberus stopped at the gates and dropped them off, then gave Mike three quick licks before bounding into the misty woods once more. He gave a little wave and watched until their shadow disappeared.\n\n\"So I wasn't going to say anything, but when they're human, they look kind of like you.\" Lily was leaning against the base of the fence. \"What's that about?\"\n\n\"Yuki noticed, too. She thinks the magic tried to make her into a shape I would find appealing, but then got caught up on making too many changes and defaulted to the nearest human form. We're lucky it didn't turn me into a dog, or worse, leave them how they were. I wouldn't have been able to establish dominance and bind her to me.\"\n\nLily chuckled. \"Oh, I'm sure you could have made something work.\"\n\n\"Not without a ladder and the ability to hold my breath.\" He walked past her and toward the house. \"It worked out the way it did, and that's good enough for me.\"\n\nThey entered the home and stopped when they heard Emily wailing upstairs. Mike ignored it and kept going until he was in the backyard. Once outside again, he looked back to see Lily staring up the stairs.\n\n\"You okay?\" he asked.\n\n\"You go ahead,\" she told him. \"I'm curious about something.\"\n\n\"She's not right,\" he warned her. He was aware that she already knew this, but it needed to be said. \"And be careful. She was barely in control last time I came, and I haven't been able to get her to tell me anything. It's like she's stuck in a loop.\"\n\n\"Oh, don't worry about me.\" She headed up the stairs with a determined look on her face. \"I'll meet you out back in a few minutes.\"\n\nHe watched her ascend and then headed out back. Amymone was lying against the fountain, and her face lit up when she saw him. By her side was a stack of books he had brought on his last trip, and he suspected she had already plowed through most of them.\n\n\"Hi!\" Amymone hopped to her feet and adjusted her dress, then carefully tucked a leaf into the book she had been reading. \"Did you bring me more?\"\n\n\"Yes, I did,\" he announced, then set the bag down. Each book he handed her was treated like a treasure, and he allowed her to read the summary on the back before handing her the next one. She was chattering with excitement, and her enthusiasm was only transcended by the occasional wail from up above.\n\nAfter a particularly loud scream, Amymone paused in her perusal and looked up at the window. \"She's in a mood,\" she noted.\n\n\"Yeah, Lily went up to see her. She's a succubus, so I'm not worried that she'll get hurt.\"\n\nThe dryad smirked. \"Well, maybe not, but I wouldn't underestimate what's left of Emily.\"\n\nOnce the words left her mouth, the bedroom window shattered. Lily tumbled through the air and landed on the ground with a thud. The glass from the window hung suspended in mid-air for a moment before reversing course and reformed, good as new. Once the window was rebuilt, Emily appeared behind it, her eyes filled with darkness.\n\n\"Lily, you good?\" Mike was already moving toward her when she hopped to her feet with a scowl on her face.\n\n\"Yeah. Queen cunt up there wasn't very happy to see me.\" Lily brushed off her pants and then gave Emily the finger. \"Tried to have a conversation with her and she went full Carrie on me, but without the blood.\"\n\n\"Ooh, Carrie, that's a good one!\" Amymone ran to Mike and grabbed his arm. \"Is King still alive and writing books? I love a good horror novel.\"\n\n\"I assume so. I'll try to get you some next time.\" He looked up at the window. \"It fixed itself.\"\n\n\"Yep. The Underworld doesn't like change, and this place is special enough as is. Can't have it showing up all busted in your world, now can we?\" Amymone sat down next to her book pile and reached into her cleavage and produced an envelope made of leaves. \"Oh, before I forget. This is for Naia.\"\n\n\"Oh, right. Thanks.\" He took it from her and pulled a letter out of the outside pocket of the bag. Naia and Amymone had been exchanging letters, which seemed to help. The news that her sister still existed had given her hope, and the letters had been a great way for the pair to keep in touch. \"Also, no word on the heartwood. The centaurs are keeping their eyes out for it, but it's a big jungle.\"\n\nAmymone sighed. \"Yeah, well, I've got at least a couple of years left in me before I disappear. You keep bringing me stuff to read and I'll do my best to enjoy it. By the way, I'm Amymone.\" She waved at Lily.\n\n\"You sure are,\" the succubus replied. \"If you don't mind, I'm gonna wander the grounds a bit until you're ready to leave.\" Her wings unfurled and she leapt into the sky and vanished over the roof.\n\n\"Is she always that moody?\" Amymone asked.\n\n\"Yep. But she's a good person.\" He sat next to Amymone and picked up a book he had brought her earlier in the week. Though they didn't have a lot in common, there was one thing she enjoyed more than reading and he felt like indulging her. \"So what did you think of this one?\"\n\nA big smile appeared on her face. \"Oh, I am so glad you asked,\" she responded, and then spent the next hour telling him all about the books she had read. She spoke quickly, as if afraid that she would disappear at any second and be unable to share her opinions on the stories he had brought her. On occasion, Mike looked up to see Lily on the roof, her eyes on the forest. She had claimed that she was just looking around, but he knew without a doubt that she was up there watching for trouble.\n\nOnce it was time to leave, he left Amymone behind with her new stack of books and headed for the front gate. He paused long enough to wave at Emily. He usually dropped by just to say hello, but since she threw Lily through a window, he decided he would try some other day. Once in the front yard, Lily joined him, and he called for Cerberus and waited.\n\nThe ride back was uneventful, though Lily did spend some of it tracing circles on his thigh with her tail. He wondered how Cerberus would handle it if he decided to give the succubus what she wanted while riding on their back, but didn't want to upset the delicate balance they currently had.\n\nBesides, he also didn't want to be late for Zel's ceremony. He had seen very little of the centaur lately, and was already getting the idea that he was about to see even less of her. The bulk of nearly every day was spent surrounded by people, and he now understood how easy it was to lose track of someone when your life was suddenly so busy. He had never been popular growing up, content with a couple of good friends at a time, though he often struggled at maintaining even those relationships.\n\nNow though, every day was packed to the brim. Some of the women in the house were content to just be in his presence and spend time with him, while others preferred to enjoy more intimate pursuits. The nymph magic running through his veins meant he was able to rise to the occasion whenever he was needed, but he still couldn't be in two places at once.\n\nWhen Mike sighed, Lily scooted close to him and wrapped her arms around his chest. Her hands hovered just over his pecs, and she squeezed him through his shirt.\n\n\"Penny for your thoughts, Romeo.\"\n\n\"Just feel stretched thin is all. Once Cecilia is back, I'm hoping things settle down for a bit before the next crisis hits. Wouldn't mind a small vacation or something.\"\n\nHer grip loosened. \"What, you mean away from the house?\"\n\nHe chuckled. \"Well, we both know I can't really leave the house. Not in a traditional sense, anyway. Don't feel like being hunted down by whoever is mad at me that week.\"\n\n\"I could give you more time in the Dreamscape,\" she purred, then pulled herself against him. He could feel her breasts squished against his shoulder blades. \"You just have to ask.\"\n\nHe smiled and put his hands over hers. \"That sounds wonderful, but I mean out here, in the real world. Maybe somewhere that isn't a beach, someplace I could go with some of the others. Tink has been working herself to death, and I bet Beth wouldn't mind seeing somewhere new.\" He had hardly seen the lawyer in the last week. Between the time she spent with Sulyvahn or Asterion and the time she put into looking for the geas contract, she was almost non-existent as well.\n\nThen again, based on the things he had seen and heard, it was likely she wasn't interested in any of his attention anyway.\n\n\"And what about me?\" Lily asked. \"Do I feature in this vacation of yours?\"\n\nHe squeezed her hands. \"If I didn't bring you, how would we have any fun?\"\n\nA small sigh escaped Lily's lips and she laid her head down against the back of his neck, staying nuzzled up to him for the remainder of the ride.\n\nOnce they were back home, he waved Cerberus off and returned to the house with Lily right behind him. She was back in her formal gown, and they happened to pass the fountain just as Dana and Quetzalli emerged from the garage.\n\nDana was wearing a button-down shirt with dress slacks, and her hair was no longer in a ponytail. She had obviously run a curler through her gray and blonde hair and put on a little bit of makeup, which made her look a bit older. Quetzalli looked stunning in a shimmering gown with sequins embroidered across the front in the pattern of the constellations.\n\n\"Whoo, hot stuff,\" Lily declared, then slapped Dana on the ass. \"You wearing a thong under there?\"\n\nDana ignored Lily and turned her attention to Quetzalli. \"The centaurs made this dress especially for her,\" she told Mike. \"They wove something that wouldn't accumulate a charge.\"\n\n\"Wonderful. You look very pretty, Quetzalli.\" He held his elbow out to her. \"Shall we?\"\n\n\"Yes,\" she said, then put her arm through his, sending a good shock into his arm. He flinched, then scowled at Dana.\n\n\"By no charge, I meant static cling,\" she told him. \"She's still gonna zap you.\"\n\n\"Okay, fair eno\u2014ow!\" He howled in pain when Lily touched her finger to his butt and he received another shock.\n\n\"That's what you get for holding hands with another girl,\" she pouted, then threw an arm around Dana's waist. \"If I told you that you had the body of a dead girl, would you hold it against me?\"\n\nDana rolled her eyes. \"Somebody kill me again,\" she moaned, and followed behind Mike as they walked through the house and out into the front yard. Beth and Sulyvahn were already out there, and Beth was dressed to kill. She was wearing a low cut blue gown with a white skirt that flared when she turned to watch them all come down the stairs.\n\n\"Is this everybody?\" Beth asked. When she stepped aside, Mike saw that Reggie was standing behind her with a small contingent of rats. The rat king wore a little bow tie around his neck that complemented his fake glasses very well.\n\n\"Almost. Where's Tink?\" No sooner had he asked did the front door open with a slam, startling some nearby rats. Out strolled Tink in a yellow gown that came down to her knees. She put her hands on her waist and grinned, showing all of her teeth.\n\n\"Tink ready for dancing,\" she declared, then looked over her shoulder and frowned. \"Husband wait,\" she added, then disappeared back into the house.\n\n\"What did she forget?\" asked Beth.\n\nMike had no idea, but was surprised when Tink emerged towing a very reluctant Kisa by the wrist. Kisa wore a gorgeous emerald green gown that shimmered in the waning light of day, and he heard Beth gasp in surprise. Kisa's ears were folded forward in either anger or embarrassment; it was hard to tell.\n\n\"Tink bring grumpy cat girl,\" the goblin declared, then pulled Kisa forward until they both walked down the steps. \"Big night out, eat too much, and shake booty!\"\n\n\"You look wonderful, Tink.\" Mike moved close to the goblin and lifted her goggles slightly to remove the pencil that was tucked behind her ear. \"I'm glad you're ready to take a break and have some fun.\"\n\n\"Tink make big fun, you see.\" She grinned at Kisa, who turned her head away.\n\n\"You look very nice as well, Kisa. I'm glad you're coming tonight.\" He didn't expect much of an answer, and when she shrugged at him, he turned to the others. \"Okay, let's see our girl become the new chief, shall we?\"\n\nTink let out a raucous cheer and dragged Kisa toward the portal to the Moon Tribe's home. The others followed while Mike paused just long enough to go wind the sundial. Even though it was supposed to be a fun outing, he half expected trouble to find him somehow. He stopped to look at the Jabberwock, which was slumbering on the edge of the hedge maze. Someone had decorated its horns with flowers, and he chuckled. As a result of his delay, he was the last to go through the portal.\n\nWell, almost the last. Beth had stopped to wait for him.\n\n\"You look very pretty,\" he told her, his mouth suddenly dry.\n\n\"Thanks,\" she said. \"This whole thing kind of reminds me of prom. Everyone dressing up for a night of dancing and fun with friends. Takes me back a bit.\"\n\n\"I never went to my prom. And even if I had...\" he contemplated the portal for a moment. \"Then I bet this is going to be way more fun.\"\n\n\"I agree. Shall we?\" She crooked her arm out for him to take, and just as he was about to slide his arm through hers, Tink appeared through the portal.\n\n\"Husband too slow,\" she declared, then grabbed him by the hand and pulled him through.",
        "Laughing, he allowed her to lead him into the centaur's village. The yurts had all been decorated with floral arrangements, and tall tables had been set out for the centaurs to eat and drink at. A table had been set up on a platform that would allow Mike and the others to sit at eye level with the tribe, and he was warmly greeted with handshakes and the occasional back slap that threatened to topple him. Everyone had already taken their seats at the table, and the centaurs had gathered around to talk with them.\n\nOverhead, the fairies were darting about, chased by eager centaur children who laughed and giggled. Cerulea allowed herself to be captured in a jar and made faces at the kids for their amusement, until she squeezed free to join her sisters.\n\nAround the edges of the village, the centaurs had set up instruments and were playing a variety of drums, flutes, and stringed instruments that reminded Mike of sitars. The whole affair reminded him of the summer he had gone to a renaissance festival with a former girlfriend and gotten sick from being out in the sun for too long. So far, the food here was much better, and the company even more so. For a change, everyone seemed enthralled by the festivities, which allowed him to sit back and snack on some fried vegetables on a stick that had been brought to him.\n\n\"Caretaker?\" A centaur lass approached him, her hair hanging from her head in thick braids. \"The future chief would like a word with you.\"\n\nHe nodded and bid farewell to the others. As he left, he looked back to see Kisa watching a nearby centaur perform, and was almost knocked over by a centaur child as it went running past in an attempt to catch Olivia. When he glanced over to the herd of children, he laughed when he saw Tink riding one of them and handing out make-shift nets to the other kids. He was so happy that she was having a great time.\n\nLed away from the center of the village, he found himself standing before a large, decorated yurt that looked more like a small circus tent than a home. Standing outside of it was a pair of armed centaurs who stood at attention once Mike was in view. They greeted him warmly and held open the flaps so that he could step inside.\n\nThe inside of the yurt revealed decorated walls and a small cluster of centaur women who were fussing about a central figure standing on a pedestal. It was Zel, and she waved him over.\n\n\"Just a minute,\" she told him. \"Once they're done braiding my hair, we can talk.\"\n\n\"Yeah, sure.\" He looked for something to sit on and found a nearby stack of boxes filled with fruit. After making sure the arrangement was stable, he took a seat and watched as the women around Zel finished placing long, intricate braids in her hair. They incorporated beads and feathers, and when they stepped away, he saw she was wearing an ornate vest that hugged her torso.\n\n\"You look great,\" he told her.\n\n\"Thank you.\" She blushed and then waved her attendants off. \"I need a private word with the Caretaker.\"\n\nThe centaurs left, but more than a couple gave Mike lingering glances on their way out. Once they were alone, Zel walked over to him and smiled.\n\n\"It's the big day,\" she said, then did a little circle. \"Do I look okay? I mean, I know I look okay, but what do you think?\"\n\n\"You look great.\" He stood so that they were closer to eye level. \"Everything okay?\"\n\nShe nodded, then led him over to a table that had some food laid out. \"I won't get much of a chance to eat once the ceremony starts, so I've been snacking through the day. Go ahead and help yourself.\"\n\n\"Thanks.\" He picked up an apple and bit into it, the juice running down his face. \"I didn't know there were apples growing in the greenhouse.\"\n\n\"They don't. These are imported from the other world, where the old tribe lives.\" Zel's previous tribe had exiled most of the men and women who now lived in the village. Though relations were strained, they did have a truce, and the greenhouse was packed full of rare vegetation that the tribe could use for trade. \"It will take a few years before we can grow them on our own.\"\n\n\"I see. So what's up? If you called me here for advice on how to be a leader, I am definitely the wrong person for it.\"\n\n\"No, not that. I already know I'm a far better leader than you.\" She said this without a trace of malice. \"However, I think you give yourself far too little credit.\"\n\n\"Perhaps,\" he agreed.\n\n\"I called you here for a couple of reasons. The first one is that I miss you.\" A sad smile crossed her face. \"It seems like I've barely seen you for the last month or so, but that's not anybody's fault. I've been busy here, and you've been busy trying to get Cecilia back. It happens. I just thought it would be nice to sit with you for a bit and catch up.\"\n\nMike nodded. \"We can absolutely do that. I'm actually headed off to the Underworld myself in just a few days, hopefully, I can bring Cecilia back and everything will settle down.\"\n\n\"Oh, I doubt things will ever settle down. Not in that house.\" Zel picked up something that looked like a pear with thorns and used her fingernail to break the skin and start peeling it. \"I would like to schedule something with you. A day, once a month, where you and I can meet and just catch up. Our relationship is important to me, and if we don't make time for it, we'll realize that far too many months have passed. That wouldn't make me happy at all.\"\n\nHe was about to argue that they didn't need such an arrangement, but she was absolutely right. Without any accountability, it would be hard to keep track of when they had seen each other last.\n\n\"I think that's a great idea,\" he told her.\n\n\"Good. We don't have to pick a time today, but let's do it soon.\" She finished peeling the skin off the fruit and took a bite of it. The flesh of the pear was white, but the juices ran red, and she caught them with her free hand just under her chin. \"I loved these growing up. Never eat more than a couple, though. Will make you sick.\"\n\nShe held out the fruit to him and he took a bite and immediately blanched. \"Oh, that's bitter,\" he told her.\n\n\"I suppose so. More for me, then.\" She winked and walked to the middle of the yurt. \"The ceremony will start as the moon rises into the sky. I'm not sure how long it will last, it all depends on the herd. My aunt made all the arrangements, and I'm just going along with it. It's meant to be something that I don't have to deal with. However, there is a part of the ceremony she gave me a heads up about and I was hoping you could help.\"\n\n\"I'll do anything,\" he said.\n\n\"Typically, when someone becomes chief of the herd, it is through bloodlines or competition, and the other leaders of the tribe stand up with the new chief as the title is accepted from the tribe's shaman. Well, because the tribe is new, we don't really have any leaders, so it will just be her and I up there. The centaurs recognize you as the leader of your own herd, and I was hoping you could stand with me.\"\n\n\"Absolutely, count me in.\"\n\nShe smiled. \"Great. You can walk in with me when they tell us it's time.\" Her smile faded. \"Um, but there is something else.\"\n\nHe saw from her body language that she was afraid. He took her hands in his own and then stepped into her, giving her a big hug. \"We can always talk about anything,\" he told her, his hands circling her waist.\n\n\"Yeah.\" She stepped back, a sad smile on her face. \"I just don't want it to be awkward or anything. Anyway, I'll just spill the beans\u2014I'm pregnant.\"\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nKisa frowned at the food that had been set in front of her. Though it both looked and smelled delicious, the vegetarian dish she had been provided by the centaurs tasted bland and unappealing. She wondered how much of that was her prior taste in food, and how much was the cat side of her. Though she hadn't taken to chasing mice by any means, she had definitely had impure thoughts about how one of the rats in the house would taste.\n\nContemplating her dish, she looked up to see Tink surrounded by children. The goblin was telling them a story, and all of them soon broke into laughter, though more than one covered their mouth in disbelief. Grumbling to herself, Kisa pushed the food on her plate into the sauce that had come with it and tried to eat some of it.\n\n\"You don't look happy.\" This came from Dana, who sat across from her. She wasn't eating either\u2014the centaurs hadn't bothered putting a plate in front of her.\n\n\"Why should I? Tink dragged me here, but she's over there, and there's nothing good to eat. There's plenty of music, but nobody is really playing a tune, it's like an improv jamboree in here.\" Kisa pushed food around her plate in disgust. \"I thought maybe this would be fun, but now it'll be awkward if I sneak off.\"\n\n\"Hmm.\" Dana looked over her shoulder, her gaze sweeping across the crowd. \"You know, it looks like everyone else here is having fun. Maybe you should quit relying on everyone else to guarantee you a good time and go make your own.\"\n\nTaken aback, Kisa dropped her fork. Unsure what to say, a small growl escaped her. \"I don't see you out there having fun,\" she muttered.\n\n\"You don't see me over here sulking about it, either. My idea of fun is overshadowed by so many other issues, I won't bore you with them. What matters most right now is that I'm surrounded by a community who was willing to invite me here in the first place, even though the one job they gave me to do has been impossible so far.\"\n\n\"The thing with the drones?\" Kisa asked, suddenly curious. She had watched Dana messing with the flying devices more than once, and knew that some sort of experiment was being conducted in the greenhouse with them.\n\n\"Yeah. The herd wants to map this place out better so that they can expand. As far as anyone knows, this place is an entire world, ripe for exploration. But the jungle is thick, and a good terrain map would make it easier for them to make decisions about planting and such.\" Dana turned her attention to a group of centaurs who had started an impromptu jam over by an unlit bonfire. As the music played, nearby centaurs stamped their feet in time with the beat, and a collective bass line began flowing through the camp.\n\nKisa looked around to see that everyone playing instruments had joined in, and a much bigger song was now emerging.\n\n\"It's pretty interesting,\" Dana said, raising her voice to be heard. \"I asked them about it once. They call it 'One Herd.' Their music is a lot like their other traditions, and they do this to represent the various tribes coming together to act as one giant herd. Wait until you see them dance, they do this thing\u2014\"\n\nDana was still talking as Kisa slid out of her chair and approached the bonfire. The centaurs were grouping up now and forming a giant circle around the stack of wood. Up above, the sky was darkening, and the beat of the drums resonated through her entire body.\n\n\"Is like heartbeat,\" the old man told her, his firm hands on her hips. They were standing in front of a mirror, and she was wearing baggy sweats with a tank top that was tight enough that she could see her own ribs through it. \"Let heartbeat of music move whole body, not just arms and legs.\"\n\nTo emphasize, he moved her hips in a tight circle in time with a metronome he had set in the corner. She sighed and looked down at where he was holding her, wondering if this was when he was going to try and take advantage of her. She had been staying with him for a couple of weeks now, and she couldn't help but wonder when the other shoe would drop.\n\n\"No, much too stiff,\" he said, then let go and stood next to her. \"Too tight through pelvis. You need to unlock hips, Kisa.\" To demonstrate, he gyrated his hips, the bulge of his crotch now on full display in the mirror. He always wore a pair of grey tights when he practiced, and she looked away from his reflection.\n\n\"Isn't that kind of gross?\" she asked. \"Swinging your nuts around for everyone to see?\"\n\n\"Human body is beautiful, Kisa,\" he told her with a scowl. \"I dance for my own joy, and maybe joy of others. If someone has problem with my body, it is their problem, not mine. Never let what others think keep you from moving and chasing your own joy.\"\n\nThe beat had now filled her completely, her lips parted slightly as she stepped between a pair of centaurs to see the center of the circle. A man and a woman were stomping their feet and galloping around to keep everybody back, and a centaur stepped out from the crowd to reveal an elaborate headdress made of leaves and flowers.\n\nSomebody cheered, and then a few others came forward, similarly dressed. They wore a variety of beads woven into the fabric that adorned their clothing and a bit of their flanks. They faced off with one another and stomped their feet while moving in a circular pattern. As far as dancing went, this seemed pretty tame.\n\nAt the front of the crowd, she found somewhere to stand next to a centaur child who stood about a foot taller than she did. The young man looked enthralled, his eyes wide in excitement.\n\n\"What are they doing?\" she asked him, and he turned to look at her. A moment of surprise passed over his face when he saw who asked the question, and he lowered his front half so that they were now eye level.\n\n\"It's a traditional dance,\" he explained, shouting to be heard. \"Many years ago, it was called a whirling something, I can't remember that part, but we now call it Running with the Wind.\"\n\nThe centaurs were now sidestepping from each other in time with the beat, and men and women alike were now twisting their arms from side to side as if winding themselves up. Kisa watched them for a second, then looked back at the youngster. \"Do they teach this to all the kids?\"\n\nHe blushed and looked down. \"It's a tough dance, not everyone can do it.\"\n\nThinking that an odd answer, she was about to ask him what he meant when she saw that he was looking at one of his feet. Upon closer inspection, she saw that the ankle looked slightly thinner than the other three, and the hoof beneath it was the same color as his human skin. Over his hoof, he wore a thick brace, and she saw what looked like large toenails peeking over the edges. The hoof itself looked like it was stuck somewhere between human and horse, and she realized that the centaur had a deformity.\n\n\"Anyone can dance,\" she informed him, the heat rising in her cheeks. \"Even this.\" The centaurs were now incorporating small turns with their lower bodies while they stepped sideways, and she had a feeling they were building up to something.\n\nThe youngster's cheeks turned red, and he frowned. \"Dancing and being good at it are two entirely separate things.\"\n\n\"Fuck that noise,\" she growled. \"You dance from your own heart, not everyone else's.\" The centaurs were now doing slow, full-body spins, and she saw that a few of them had moved up against the edges of the circle, making more room for the others.\n\nThere were two men and one woman in the circle, and Kisa stamped along with the others as the beat increased and the three centaurs started twirling. What started as a casual spin became aggressive, and the centaurs were now holding up their arms for balance as they spun, kicking up dirt and grit. All three of them looked like tiny tornados, and eventually one of them stumbled and fell out of sync with the others, leaving just one man and the woman.\n\nIt was a dance-off. She watched in amazement as the remaining two spun harder and faster than before, until the man finally lost his balance and stumbled into the others, caught by the crowd. The woman raised her arms in victory and trotted over toward her friends as another group came forward and the process repeated.\n\n\"See?\" The centaur youth pointed at the new set of dancers as they spun. \"It takes a lot of strength and coordination. They could fall, or accidentally kick someone.\" His eyes were locked on the dancers, and he chewed on his lip.\n\n\"But you do it, don't you?\" she asked. \"When nobody is looking, I bet you practice it.\"\n\nHe didn't respond.\n\nWhen the next group of dancers finished, three more walked into the center of the ring, and Kisa joined them. The centaurs went silent as Kisa appraised them with a raised eyebrow, then stomped her feet along with the beat to let them know she was serious.\n\n\"She could get hurt,\" someone protested from the side.\n\n\"You worry about your own damned self,\" she shouted in the direction of the voice. \"I'm here to run with the wind.\"\n\nAnother moment of silence came, but was penetrated by a cheer, and the centaurs all stamped their feet together. The other three spread out, giving Kisa plenty of room, and though she stood nearly six feet shorter than they did, she intended to use the space.\n\nThe dance progressed slower than the others, but she didn't care. She let the rhythm claim her, and stuck her arms out like the other dancers, twisting her hips from side to side. She could feel her tail whipping around behind her, and as the dance sped up, she lifted one leg and took an Arabesque stance. Without an extra pair of legs to help, she did her best to maintain the rotation of the dance, tossing in an additional pirouette on occasion and leaping to the side while spinning.\n\nThe chants from the crowd were growing louder, and during a particularly tight spin, she saw that one of the other dancers had fallen out of formation. Being smaller than the centaurs, she didn't have to turn nearly as fast, so was good to continue.\n\nCheers went up from the crowd as another dancer spun until dizzy. The dance paused when the departing dancer nearly face-planted into the center of the circle, and once he was gone, Kisa stood across from a centaur woman with long, braided hair bedazzled with colored beads.\n\n\"Think you can keep up?\" asked the centaur. Kisa happened to catch the eye of the centaur youth standing on the edge of the crowd.\n\n\"I was about to ask you the same thing.\" Kisa went through the initial twists, pleased at how her dress spun about her body and caught the waning light of day. The smell of smoke filled the air as someone started lighting the bonfire, and the dance continued.\n\nThe centaur was now doing a wide spin with her body, then coming to a stop to spin the other way. Kisa matched her move for move but drew in closer. The crowd yelled in excitement, and when the centaur kicked her rear legs out in a particularly tight spin that looked like a bucking bronco, she stepped beneath the legs, her body leaned back.\n\nGasps of fear and amazement came from the crowd, but Kisa's timing was impeccable. She was now doing her own version of the dance in the orbit of the centaur, her short frame allowing her to occasionally slip beneath the centaur's body and whirl on the other side. She moved back and forth beneath the centaur, throwing her arms wide and looking up into the sky.\n\nThe beat of the earth traveled through her feet and into her very core, and her entire body now pulsated along with it. The world was just spinning faces and drum beats, and when she finally stepped into a groove in the earth and lost her balance, a strong hand grabbed her by the wrist and caught her.\n\n\"Not bad,\" said her dance partner, who had also stopped. Everyone was shouting cheers of approval, and Kisa smiled, her breath coming in rapid bursts. \"Let's let someone else have a turn, shall we?\"\n\nKisa nodded, and the two of them stepped out of the circle together. When she looked back, she saw that some of the youngsters were now dancing, and smiled when she saw the young man she had been talking to join in.\n\n\"You ride the wind very well,\" her partner told her. \"Would you like to see some of our other dances?\"\n\n\"Yes, please,\" she said, her heart overflowing with joy as she was led to another dance circle she hadn't seen.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nMike's jaw hung from his face like a broken window shade, and he counted backward to the last time he had been with Zel sexually. Hadn't she said he couldn't knock her up? Fear of parenting aside, how much could he even contribute to a child that could outrace him? His heart was pounding in his ears, and it occurred to him that Zel was still talking, but he hadn't been listening.",
        "\"\u2014and he's a very good man, obviously he has a problem similar to my own, but...are you okay?\" she asked, concern now written on her features.\n\n\"Wait, who's a very good man?\"\n\n\"You weren't listening, were you? Why would you...oh. Oh!\" Her cheeks blossomed, and she let out a hearty laugh. \"You thought for a second that it was yours, didn't you?\"\n\nHe nodded, noticing just now how dry his mouth was.\n\nZel laughed long and hard, with tears forming in the corners of her eyes. \"Humans can't breed with centaurs, silly. You've known this. I am only a few weeks along with foal, centaurs know almost right away.\"\n\n\"But you seemed afraid to tell me,\" he told her. \"Why?\"\n\n\"Oh, that.\" She sobered up. \"I was afraid you might be upset that I had been seeing someone. It's kind of expected for the chief to start a family, and I met a very fine stallion who was exiled from the tribe for a deformity similar to mine.\" Zel's original tribe often exiled centaurs who had been born with human traits, and had been unaware that Zel herself had been born with a human vagina.\n\n\"So if it's a similar issue, that means he...his dick is...\"\n\n\"Sort of. It's very long for a human penis, but short for a horse. But for me?\" She winked. \"It's perfect.\"\n\n\"I'm so happy for you,\" he told her, mentally adding that he was also happy for himself.\n\nShe snorted, and then let out a sigh. \"I'm glad. We never really discussed our own relationship when we started being intimate, and I was worried that maybe you thought we were more than friends or something. Not that you'd have any room to complain, considering your current roommate situation.\"\n\n\"No, of course not.\"\n\n\"But the other part of that is that I am choosing to be monogamous with him. I just wanted to make certain you understood that our previous dalliance was likely our last.\"\n\nHe chuckled. \"Intimacy is not the linchpin of our relationship. It's trust and mutual respect. I'll look back on it fondly, but your future happiness is what matters most to me.\"\n\nShe hugged him again, and they just visited for the next hour as the light of day slowly disappeared through the flap of the yurt. Loud music now played through the thick fabric of the yurt and he had completely lost track of time when a centaur pushed her way into the structure.\n\n\"It is almost time,\" announced the newcomer. \"The shaman has requested your presence before the moon rises.\"\n\n\"Thank you.\" Zel dismissed the attendant with the wave of her hand, then looked at Mike. \"We are the Moon Tribe, after all. It will rise over the trees just as I am formally given the mantle of chieftain. Kind of makes me nostalgic for that time on the cliff with you.\"\n\nHe smiled. That moment with Zel felt like years ago, but it had only been a bit longer than a month. She had been bathed in the moon's light while dancing to music from his phone, and she had looked absolutely radiant. Back then, she had been nothing more than an outcast, hidden from her people. Now, she was about to become their leader, and he felt proud that he had been such a large part of that journey with her.\n\n\"Help me?\" she asked, then picked up an intricately decorated garment that slid over her shoulders like a cross between a shawl and a vest. He assisted her by straining out the fabric over her equine portions, then pulled the rest of her hair through it. He couldn't help but feel a little misty-eyed. Though the two of them had already agreed to make time once a month, it definitely felt like Zel was moving forward with a destiny that no longer included him.\n\nAnd once she had her foal, then what? Between running the whole herd and having a family, would she even still want to make time for him? He felt like these were silly thoughts to be having at a time like this, and he rubbed the moisture from his eyes.\n\n\"Oh my.\" Zel put her hand on her stomach. \"It all just kind of hit me right now. I'm their leader already, but after tonight, it will be official. The success of the herd rests solely on my shoulders, and now I'm absolutely terrified that I will fuck things up.\"\n\n\"Well, you could always do what I do when trouble comes knocking.\" He untangled one of her braids from the vest and then pushed a hair away from her face.\n\n\"Get really lucky, or try to fuck it?\" Her eyes were full of mirth, and she leaned forward to plant a kiss on his forehead.\n\n\"Um...\" He laughed, whatever advice he had been about to give now gone from his brain. \"Yeah, maybe. Or, you know, rely on some help from your friends. We'll always be around to support you.\"\n\n\"Thank you.\" Now that her garment was adjusted correctly, she stood tall, suddenly looking very regal. She giggled, then covered her mouth. \"I'm kind of nervous.\"\n\n\"Then we can go together.\" He led the way and held the flap open for her.\n\nA small group of centaurs were there to escort them, all wearing ceremonial garb. They walked across the camp until they were led onto a small hill that had been built at the edge of the main clearing.\n\nAround them, a couple of large bonfires were already burning, and the music had reached a fever pitch. To the side, he saw Tink chasing centaur children, and Lily was sitting on one of the tables, surrounded by men who hung on her every word.\n\nOff to the side, he heard a loud cheer and turned to see Kisa dancing next to the bonfire between a pair of centaurs playing instruments. The way she moved caused the light of the fire to roll off her dress in shimmering waves. It was impossible to follow her movements, but it looked like she was incorporating belly dancing, ballet, and acrobatics into quite the show.\n\nShe was currently doing a twist that flared out her dress, the curve of her buttocks vanishing into the shadows beneath the fabric. A few of the centaurs danced alongside her, doing their best to keep up, and Kisa twisted around to reveal the biggest smile he had ever seen. It was like seeing a different version of her, finally emerging as if from a long slumber.\n\n\"Mike?\" Zel had paused to wait for him. How long had he been watching?\n\n\"Sorry,\" he mumbled, then caught up. Zel's aunt made it up the hill first with Quetzalli in tow and looked over her shoulder at the small contingent. Zel looked so much like her aunt that it was a little eerie.\n\nThe party below was in full swing, and when the shaman raised her hands in the air, the festivities halted almost immediately. Children were gathered up, and food was set down as the herd formed a giant semi-circle around the base of the hill.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nKisa nearly tripped over herself when the music came to a stop, then almost panicked when she saw the sudden looks of intensity on the faces of the centaurs. Thinking something bad had happened, she scrambled onto a nearby table and saw that a centaur woman was now speaking. She was adorned in a collection of feathers and beads, and the pouches slung across her hips made Kisa think that she was the shaman that had been mentioned by others throughout the night.\n\n\"We have gathered here on this momentous occasion to celebrate the ascension of the new chief,\" she began. A small group of centaurs now gathered at the base of the hill, their eyes turned outward toward the others. \"Assembled before me is the leadership of the tribe. If there are any who would lay claim to the title of chieftain among them, speak now, that you may be heard.\"\n\nOne by one, each of the centaurs pivoted in a circle to face the shaman. None of them said a word, and the shaman nodded.\n\n\"Tonight's ascension is a special one. We are a people who have long been divided by a culture of barbaric traditions, yet today we begin anew. A herd built on love, support, and acceptance will allow us to be stronger than ever, and this auspicious occasion has been blessed with the presence of the dragon Quetzalli.\"\n\nAt the mention of her name, Quetzalli stepped up onto the hill and bowed her head in respect.\n\n\"I wish the Moon Tribe many generations of health, happiness, and prosperity,\" said the dragon, and a small cheer came up from the crowd.\n\nOver the treeline behind the hill, the moon was now rising, casting a solemn glow over the proceeding. Kisa was having difficulty looking away from it, and her belly was starting to itch. She wondered if she had gotten a piece of straw inside her dress.\n\nThe shaman was now speaking about the traditional roles of the chieftain, and something about the various tribes of the herd, but Kisa was distracted. Her hands were feeling along her stomach, trying to scratch an itch that moved about. She hopped down off the table and hid behind it to lift up her skirt and run her hand along the fur of her belly.\n\nA small growl escaped her, and she covered her mouth. Nobody was paying any attention to her, so she stuck both hands up her skirt again and felt around. The itch was migrating wildly. Sometimes it was on her hips, and other times it was on her breasts. It even moved back to her ass, and every time she got close to scratching it, it moved away.\n\n\"Fucking bullshit,\" she muttered, then looked up to see what was happening now. Mike and Quetzalli were now standing together off to the side of the shaman who was talking about the lands inside the greenhouse, but she could no longer concentrate, her full attention on the sight of the moon rising above the congregation. She felt like she was soaking it in, her whole body filling with a slow-burning fire that made her leg muscles clench.\n\nOff to the side, she caught Tink watching her, but couldn't be bothered by the goblin's attention. Her hands were now moving on their own, trying to track down the sensation that consumed her attention, and was startled when the centaurs all knelt down on one knee. This served to give her a perfect look at Zel stepping forward to the top of the hill, her body silhouetted by the rising moon behind her. The shaman was handing over a large, wooden staff while Quetzalli placed a wreath of flowers on Zel's head.\n\nHowever, it was the moon she couldn't look away from. It had become a beacon of light that mesmerized her, washing away her thoughts. Zel was speaking now, her words no more than a foreign buzzing in Kisa's ears. The burning in her body was concentrating on her stomach now, and it was moving down her belly and between her legs.\n\nKisa clamped a hand over her mouth to cover up another growl.\n\nOff to the side, Tink was now approaching her, and Zel said something that made the entire herd cheer in response.\n\nTaking a chance, Kisa let go of her mouth and let out a piteous howl, her insides igniting as her other hand toyed with the soft fur around her clit.\n\nWhat the fuck am I doing? She backed away from the table and ran from the herd, but her entire pelvic region felt like it was being consumed by fire. Dodging between yurts, she stumbled into a dark clearing and fell to the ground on all fours. She arched her back, her tail lifting high into the air.\n\n\"Stupid kitty cat?\" It was Tink, and she wore a look of concern and curiosity. Her goggles were over her eyes, and the lenses flipped back and forth into place.\n\n\"Leave me alone,\" Kisa tried to say, but the word alone stretched into another yowl. She tried to stand and fell instead, her hands grabbing at her inner thighs. It was clear what was happening to her now, and she was horrified by the implications.\n\n\"Tink get husband,\" declared the goblin before she disappeared.\n\n\"Noooo, don't get him!\" At the mention of Mike, the hand toying with her clit slid down between the soft, furry folds of her labia and pressed against her vaginal opening. The sudden shock of pleasure made her cry out in sweet agony, and then she moaned in defeat. What if the centaurs saw her? What excuse would she have for trying to rub one out in the middle of their ceremony?\n\nThere was more cheering from the herd, and Kisa was trying to find a hole to crawl into and die in when she felt a strong pair of arms scoop her up. She looked up to see Mike gazing at her with concern, and he was moving away from the crowd.\n\n\"Tink said you were hurt. What happened?\" he asked.\n\n\"Tink no say hurt!\" The goblin was by his side with a shit-eating grin on her face. \"Tink say kitty cat in heat!\"\n\n\"Heat?\" When he looked at Kisa, she felt herself melt. His name no longer came to her, all that she knew was that he seemed to radiate like the sun itself, her insides now on fire. Any intellectual thought or feeling she had about him was washed away by the tide of hormones that dominated her brain, and she grabbed his face with both hands and pulled him down for a kiss. The moment their tongues touched, she felt a spark pass between them.\n\nCradled in Mike's arms, she squeezed her thigh muscles. Her tail had become trapped between her legs, and it pressed directly against her aching clit, causing her to let out a moan that became a short wail.\n\n\"Mmm\u2014ah!\" Mike had pulled his face away from hers, and she grabbed at his neck in an attempt to pull him back down. \"Is there somewhere we can go, or...\"\n\n\"Tink find somewhere.\" The goblin was flipping through the lenses of her goggles, then pointed. \"Empty home this way, good place for privacy.\"\n\n\"Lead the wa-hay!\" Mike's voice jumped an octave when Kisa grabbed his crotch with her hand, surprised to feel the massive length inside. She had seen it occasionally from a distance, but she now suspected that she could barely get her fingers around it.\n\nAs they moved between tents and skirted roaming centaurs, she grabbed onto his neck and wrapped her legs around his waist. In the back of her mind, she was absolutely mortified at her behavior, but her instincts controlled everything now. The air between them seemed to shimmer and sparkle as if they were surrounded by a curtain of stars.\n\nTink led them into a small, unfurnished Yurt lit by glowing stones that had been strung up from the supports like dangling Christmas ornaments. There were several hand-woven baskets around the edges of the structure, and the faint hint of herbs floated in the air. Mike tried to set her down, but she twisted about and managed to tackle him to the ground.\n\nA growl came from deep inside her belly, and she pinned him to the ground.\n\n\"Kisa, I\u2014\"\n\nShe covered Mike's mouth with her hand, her breath coming in short bursts now. The air was suddenly heavy, and Tink took a step back, her mouth open in shock. Sparkling lights now filled the air, twinkling around them.\n\n\"Shut up and fuck me,\" she said, then fumbled with the belt of his pants.\n\n<center>\ud83c\udfe1\ud83c\udfe1\ud83c\udfe1</center>\n\nWhen Tink had come for him, he had ducked away from the tail end of Zel's ceremony with a quick nod in her direction. Weaving between the crowd, all he could think was that a clumsy centaur had crushed Kisa's leg while dancing, or maybe she had gotten stepped on. He had been surprised to find her in such a state, and his first thought was that maybe she had run across some mandragora pollen that Zel had most likely stashed away.\n\nHowever, as he carried her through the centaur camp, he had been distracted by the little flickers of light that were now flitting back and forth between them. At first, he had wondered if some concoction of Zel's had been set loose to flow on the breeze, but now that they were tucked away in some kind of storage yurt, the effect was only increasing.\n\nHe had initially tried to resist, but not only was Kisa's body pressed so hard against his, but he was also picturing how she had moved while dancing. The memory of her lithe form gyrating in the firelight had inspired the start of an erection, and once she had grabbed his cock through his pants, it had come to life, overriding any objections he had.\n\nShe fumbled with his belt, and by the time she got his pants unbuckled, his erect cock sprung free and smacked her in between her eyes. Stunned at her sudden aggression, he opened his mouth to say something, but she practically inhaled his cock into her tiny mouth. A throaty growl escaped her, and she let out a purr while she stroked his shaft, pausing on occasion to lick the head of his dick. Her tongue was rough, yet sent shivers down his spine.\n\n\"Oh, Kisa,\" he muttered, then turned his head to see Tink sitting at the edge of the yurt. She was crouched down, her skirt hiked up to reveal that, as usual, she wasn't wearing any underwear.\n\nWhat was going through the goblin's mind? And what were these weird lights? He reached out to touch one that had landed on Kisa's ear and felt a jolt go into his body. The sudden surge of magic startled him, but not because it hurt.\n\nNo, he was startled to discover that the magic was his own. Upon touching the light, it transformed into a tiny spark and sank into the flesh of his finger. Somehow, the magic lights twinkling between them belonged to him, but how was that even possible?\n\nKisa groaned on his cock, then slid up his body, letting his cock drag down the center of her body until her crotch was pushed against it. She was small, like Tink, and she used one hand to steady his cock before pressing herself against it. Kisa let out a growl that transformed into a series of moans, and the lights were swirling around them now, as if they were inside a planetarium.\n\nHe grabbed her hips and pressed himself up and into her. The pressure increased as he stretched her labia wide, and then suddenly, he was in.\n\nShe let out a growl and dug her claws into the flesh of his chest and stomach, then let out a purr as she went limp against him. Though her body was still, her tail was now flicking about erratically above them, and the lights now held still.\n\n\"You are so... fucking... big,\" moaned Kisa. \"My stomach feels so full of you.\"\n\n\"You feel amazing against me.\" He wrapped his hands around her hips and pushed her dress up and over her head. She was naked now, and her fur was amazingly soft. He couldn't help but stroke her spine, which made her arch her lower back.\n\nHer purring became louder, and she started riding him. His cock couldn't go any further than halfway, and her face would scrunch up. She bared her teeth and hissed when he pushed up into her and pushed against her cervix.\n\n\"Shit, sorry,\" he said, then shivered. His magic was starting to do its thing and was manifesting all along his body. However, instead of crawling along his skin, it floated upward between them, turning into motes of light.\n\nKisa sat up straight, her claws leaving red lines down his chest. He raised his hands up her hips and cupped her supple breasts, his fingers squeezing them through a thin layer of fur. She growled at him, then groaned, her vaginal walls squeezing his dick.\n\nThe motes of light were spiraling now, and spreading outward. It was a slow dance, as if a swarm of fireflies circled them. He sat up a bit and noticed that the scratches on his chest were already starting to fade. Kisa was growling again, and he used one of his hands to tease her clit. She reacted immediately, and the lights danced about even faster now.\n\nTink gasped, and Mike turned his head to see that the mote field had expanded to the edges of the yurt, and she was now caught in it. The lights, when they struck her, became sparks that danced down her green skin and disappeared beneath the yellow fabric of her dress.\n\n\"Husband,\" she gasped, then touched herself, her fingers exploring her tight snatch.\n\nKisa didn't seem to notice, her eyes now closed as she swirled her hips about. She was humming a melody while she fucked him, now sitting up on her knees to keep from sinking down too far on him. Tink was crawling across the floor on all fours, and when she made it to him, she held her skirt in place and promptly sat on his face.\n\nHis cock jerked, and he heard Kisa gasp, but all he could see now was Tink's thighs and stomach. He wrapped his arms around her thighs to hold her in place and buried his tongue deep inside her tight snatch, seeking out the double clitoris hidden within. He was just able to reach one of them with his tongue, and she let out a growl of her own.",
        "A dark pair of hands grabbed Tink by the hips, and then slid up her torso to squeeze her breasts. Kisa's movements were becoming more frantic, and his magic was concentrating around his crotch. Tink twisted around on his face so that she faced Kisa, and he could hear them kissing. From where he was, he couldn't tell if the two of them were making out or fighting, and Tink's tail was now whipping around over him. The two of them growled at each other, but neither of them dismounted.\n\n\"Fucking horny kitty,\" Tink muttered, then she leaned forward, causing Kisa to sink down hard onto him. \"Try to make husband fit, feel much better.\"\n\n\"Fuck you, goblin girl,\" Kisa replied, and their weight shifted again.\n\nTink's pussy was pushed so hard against his face that he was now being smothered by her ass cheeks. Mike pushed against her with his hands, trying to lift her just a little, but she had clamped onto his head with her thighs.\n\n\"Tink help, move hips like this.\" She was now shifting on Mike's face, which allowed him to catch his breath. \"Move forward, push against husband.\"\n\nKisa's weight shifted, and she was now more horizontal. Tink's fingers were now between him and Kisa, and he could feel the goblin toying with the cat. The cat girl's cries were becoming louder, and the mote field was starting to shower the room with sparks.\n\nHis own orgasm was approaching, and he fought hard to hold it back. As far as he could tell, Kisa was nowhere near her own, but the velvety soft folds of her vagina were accentuated by the warm fur of her body pressed so tightly against him. Now that she wasn't digging her claws into him, it was easy to get lost in the heat of her body.\n\nTink wasn't helping either. Between eating her out and knowing that the goblin was working hard to get Kisa off, he simply couldn't concentrate on anything else other than the sensations moving through his hips. His orgasm was approaching, and he felt guilty as the pressure overwhelmed him.\n\nAfter all, Kisa was the one in heat.\n\nHis balls retracted into his body and he felt every muscle in his pelvis tighten up. He groaned, and the floating motes of light held perfectly still for just a moment before rocketing in and vanishing like snowflakes against his skin.\n\nWhen he erupted, Tink let out a cry and fell off of his face, revealing that Kisa was now sitting upright, her hands planted on his hips. As the magic left his body and flowed into her, light streamed out of her eyes and mouth as she spasmed on top of him. The contractions of her pussy sucked him in deep, and she let out a howl that raised the hairs on his body.\n\nHer claws dug into him some more, and then she collapsed on top of him.\n\n\"Kisa? Kisa!\" He lifted her up to see if she was okay, causing her to pop off of his cock. Semen spilled out of her in copious amounts, soaking his crotch, and he rolled her onto her back.\n\nShe was breathing, and her eyelids fluttered open. Her green eyes were now flecked with sparkling lights inside, and she looked at him in surprise.\n\nBefore anything could be said, the flap of the yurt opened and Lily burst in, her eyes flickering yellow and red. She stood over Mike and sniffed the air, then looked down at him.\n\n\"What the fuck was that?\" she demanded, then backed away from him. \"I could feel it all the way on the other side of the camp and came running over.\"\n\n\"You felt that?\" He scooted out from under Kisa, then looked at Tink. \"You okay over there?\"\n\n\"Big light make Tink horny,\" she grumbled. \"Husband fix Tink later.\"\n\n\"Er... yeah.\" He looked back at Kisa. She was regarding him with fascination, and he saw little sparks move across her pupils. \"And you? Are you okay?\"\n\n\"I...uh...yeah.\" She covered herself with her hands, then turned around to grab her dress off the ground. When she stood up, semen dripped out of her and onto the ground. It shimmered as if infused with glitter.\n\n\"Wait a second.\" Lily moved forward and grabbed Kisa by the jaw and twisted her face from side to side. Kisa tried to push herself free, but Lily was able to easily overpower her. \"Oh. Oh, this is too fucking rich! Welcome to the Radley house, kitty cat.\"\n\n\"What? Is something wrong?\" Mike touched Lily's wrist, and the succubus released Kisa.\n\n\"Wrong? No, not technically.\" She grinned, then moved toward the flap of the door. \"But I have a new suspicion about your friend there. She isn't a regular cat.\"\n\nKisa shook her head and slid the dress over her head. \"No shit. I used to be human.\"\n\n\"I'm not talking about that part of you, short stack.\" Lily gave Kisa a poke in the chest, then looked at Mike. \"You see it, don't you? Your own magic in her eyes?\"\n\n\"Uh, yeah.\" Mike looked at Kisa, then back at Lily. \"There were floating lights, too. Where did they come from?\"\n\n\"Oh, they're yours. You weren't summoning them, she was.\" Lily sat on her tail, a smug look on her face. \"I could smell it, you know? She ran past me, right after the moon rose. Her arousal. Poor little kitty went into heat, and\u2014\"\n\n\"Call me a kitty one more time, I dare you.\" Kisa revealed her claws. \"This is embarrassing enough without hearing from your sorry ass.\"\n\n\"Lily.\" Mike scowled at the succubus. \"I know you love toying with people, but out with it.\"\n\nLily sighed dramatically and rolled her eyes. \"Ugh, fine. When I stand in here with you, I can sense your presence, but now I sense it in two spots. You used your magic on a cat, Romeo. A black cat.\"\n\nMike puzzled at this thought for a moment, and then shook his head. \"I don't follow.\"\n\nLily laughed, then winked. \"Whatever it was that transformed her, it wasn't just trying to make her into a cat. The cat is just the form, not the function. You used your magic on her, and she not only allowed you to, but she also participated. What you have now is your very own familiar.\"\n\n\"A familiar? Like a witch?\" He looked over at Kisa. \"Do you feel any different?\"\n\n\"I'm not sure,\" she confessed, then looked back at Lily. \"He's not my master now or something, is he?\"\n\n\"Only if you want him to be, but you can work it out in therapy. But that isn't what I would worry about.\" Lily opened the flap to the door and stepped out into the night air, her hand holding the flap open. \"If your friend here was in heat because of the full moon, it also means that she's fertile and ready to have your kittens. Might wanna go get some Plan B from the resident witch horsey, just to be safe. You can all consider that my good deed for the month.\"\n\nShe winked at them and then let the flap close, leaving them behind.\n\nMike looked at Kisa in horror, his thoughts on what Zel had told him earlier. There was an equal look of horror in her eyes as well, and Tink stumbled to her feet, her cheeks now bright red.\n\n\"No fair!\" She shrieked. \"Husband make babies with Tink first, not with stupid horny kitty cat!\"\n\n\"Ain't nobody making babies,\" Kisa cried, her hands now on her belly. \"Absolutely not, no way!\"\n\nMike felt a chill go up and down his spine. Pregnancy was something he hadn't worried about with the others, but they also hadn't started life as a human. \"I couldn't agree more. You wait here in case the moon makes you...um...I'll go find Zel. If she can't help, I know Naia can, just wait here. And Tink, stop crying, nobody is having babies, I promise.\" He didn't bother waiting for her response as he flung himself through the flap and into the night.\n\n<center>\ud83c\udfe1\ud83d\ude3b\ud83c\udfe1</center>\n\nI really hope you liked that! It was a struggle to write a scene with dancing because, honestly, I have absolutely no rhythm of my own, but I did watch a lot of clips about dancing to try and nail the scene with Kisa and the centaurs.\n\nAlso, I wanted to say a very special thanks to those of you who have stuck with this story. I know that there are plenty of much shorter tales out there that are very enjoyable, and I absolutely love seeing familiar faces in the comments and knowing that I have captivated you across such a long tale. The rewards are rarely immediate, but i do my best to make sure that every chapter has something in it to satisfy your thirst for the story.\n\nBe good, take care, and I will see you next chapter!"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "this is going on the fridge",
        "catgirl",
        "centaurs",
        "going into heat",
        "harem",
        "monster dance off",
        "oral from a catgirls rough tongue",
        "sexual electrical field",
        "threesome with a goblin",
        "succubus"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/home-for-horny-monsters-ch-56"
}