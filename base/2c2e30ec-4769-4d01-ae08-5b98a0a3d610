{
    "title": "A How-To Guide for the Aging Male",
    "pages": [
        "So there you are guys, climbing through your fifties. Every time you go to the garden center, that great little market with the fantastic meat and produce, the home improvement center, your favorite wine store, your fitness club, around the neighborhood or even, heaven forbid, the mall, you see them. Attractive, often surprisingly friendly young women---young by your standards being any woman under forty. \n\nYou feel that familiar twitch. Admit it, you've followed more than one tight young ass down the supermarket aisle that you've already been down. So what's the difference between being just another dirty old man and getting lucky? Luck has nothing to do with it. Let's examine the ground rules.\n\nForget the little cutties under twenty-one; the reasons they are not for you might be the subject of another article, not this one. Nineteen year old cuties who want to fuck fifty-seven year old men generally have some serious psychological problems rooted in incest and I just never got off on that kind of stuff. Then again, if your idea of a good time is some nubile little slut whose just invited you to fuck her in the ass while she screams, \"oh yes, daddy, fuck your little girl's tight little butt\", well, to each his own but I can't really help you. Back to the guidelines.\n\nFirst, get rid of the beer belly, the love handles and/or the fat ass. You need to get in shape. It just makes good health sense. You don't need to be Mr. America but you need a little muscle tone and good cardiovascular health.\n\nIf you are losing or have lost your hair, eschew the comb over or the old man's side fringe with the shiny dome. You're one step ahead if you still have good hair but if you don't, live with it, embrace it and accept it---and consider going for shaved bald as opposed to trying to kid yourself.\n\nIf you have good hair, for God's sake don't try a cheap dye job in the home shower. There's nothing wrong with gray; at the most, consider having a professional hair stylist do a first rate, \"pull through\" highlighting. Get your hair cut regularly, every two weeks or so and stop going to Larry the barber; find a good stylist. Avoid growing it unfashionably---unfashionable for a mature man---long and stay away from poofy styles that come across as an old man trying to say, \"look at me, I still have lots of hair!\" Consider what I like to call an, \"executive\" cut. Most good stylists will know what you mean.\n\nClothes make the man...sort of. Don't try to dress as if you are twenty-five; you will look silly. At the same time, stay away from old man clothes. Avoid polyester of any type. Once you lose that lard ass and those love handles, consider, jeans, Kakis or slacks which accentuate your trimness without looking as if you were poured into them. Brand name Polo shirts are classic and ageless in warm weather. I wear them as does my twenty-five year old, buff, surfer son. \n\nThe LL Bean look in flannel shirts when the temperature drops is always good. Sweaters---good ones with some color and an interesting design---are always good choices. White Nikes are not. Slip on boat shoes are good in the summer. Classic loafers work well when you decide to be a little more dressy. Thet need to be brown or black and leather, not white and plastic. A nice pair of leather hiking shoes---Orvis, Land's End, Bean---for cooler weather. Stay away from bling; a conservative dress watch and an understated sports watch should be part of your wardrobe. Nothing wrong with a class ring from a top university. No earring---please!\n\nIf you've got liver spots, funny moles or warts, go see a dermatologist and get them taken care of. First, they may be cancerous and second they scream, \"I am old!\" Get your teeth cleaned regularly, at least twice a year. If you've got gum problems, get them attended to. Learn to floss. Use a whitening tooth paste. Throw out any cologne in your medicine cabinet.\n\nFacial hair is a mixed bag; a fifty six year old man with a soul patch looks silly. If you look good with a beard---and I don't mean you look like Santa---then go with it, but have that same stylist keep it neatly trimmed on a regular basis. A well maintained, day's growth, on the face but not on the neck, which says, I didn't shave on purpose, can make you look rugged as opposed to, \"hell I just didn't feel like shaving today.\" While you've got the electric clippers out, a little careful public hair shaping---don't shave it all off---might be in order. If you can get your---preferably, young and female---hair stylist to handle this chore also, you really don't need to read any farther along.\n\nUnfortunately, your vehicle says a lot about you. Men over fifty in sports cars look desperate, as in, I'm desperately trying to recapture my youth. I won't even comment on min-vans. Classic luxury sedans of foreign origin are good if they fit your persona. SUVs are fine but for heaven's sake pick one that has a distinctly rugged, male look, as if to say, yes, I actually drive this off road. The, I haven't bothered to wash my vehicle in a month, look is not good but a little fresh mud from a recent off road adventure is okay. Keep the inside clean and tidy. Pickups are great and they don't have to be new since truck manufacturers don't change styles that often---but they should be well maintained. As Joe Diffie once said. \"Every Girl Loves a Pickup Man\" or something like that.\n\nMusic says a lot about a person. Occasionally read the style section in the local paper and see what's hot. Go to a good record store and listen to an eclectic mix of recently release albums for free. You might well find something new that you like; if you have kids, talk to them about what they like. \n\nI'm fifty seven and I still love Hendrix, the Doors and Tommy James, but I also like Maroon Five, Gwen Stefani and a number of the newer rockers with a distinctly jazz bent. Don't pretend you love rap, dance pop or hip-hop...unless, heaven forbid, you really do. Ipods are fun, but a well chosen selection of music which demonstrates eclectic taste in CD allows a visitor to your home or vehicle to get a sense of who you are musically. Please stay away from fifties doo-wop and anything by Abba or Seals and Croft.\n\nNow you don't need to thump up to every stop sign, but at least put in a decent auto sound system. Burn your cassette player. If you looked at the CDs in my ten year old pickup truck, you'd find jazz, Coltrane in fact, a little classical, Mozart always, some classic and modern country, George Straight, Toby Keith, Miranda Lambert, Hank and Patsy---and Maroon Five. My radio is usually tuned to a local progressive, pop/country station. No easy listening allowed!\n\nCarriage is defined as how you carry yourself. For God's sake, don't shuffle. Walk with purpose and stand up straight. Be conscious and aware of what is going on around you. Keep your head on a swivel and your eyes moving. Smile easily but maintain that overall look that says you can take care of yourself. It will not only make you seem younger but it also will help you avoid being mugged. \n\nWhen you acknowledge another person and greet them, make eye contact---particularly if they are female and interesting. When you stop to examine something or read a label in a store, don't get that glazed look that makes it appear that you are having a senior moment. Be purposeful.\n\nLet me relate a quick anecdote. A very dear friend of mine had a very sudden and unexpected heart attack and died a couple of years ago. He was seventy-four; I thought he might have been in his early sixties but wouldn't have guessed his age. I met him at a private shooting club I used to belong to. We both shot pistols competitively; he was really, really good. I used to watch him practice. He'd set up realistic scenarios, fire on the move, hot reload, engage moving targets---he was phenomenal. \n\nHe had a custom made, short style combat pistol with a beaver tail grip that had been designed for his small hands. He had a concealed carry license and had done a short stint in law enforcement after he retired from the military. In practice and competition, he always worked from a holster; he was fast and first shot certain.\n\nWe had a lot of law enforcement people in the club. Immediately following 911, the government tried to reconstitute the air marshal program and were asking people from other agencies to apply. The problem was, most of them couldn't pass the outrageously difficult shooting qualification. Sadly, they ended up watering down the requirement in desperation.\n\nGetting back to the story, one of the guys in the club who was an air marshal set up a couple of ranges to duplicate the qualification requirements. Our club had a number of nationally ranked competitive pistol shooters, including two of the best female shooters in the world. The long and the short of it was, that only one person successfully qualified on the first attempt, our dear seventy-four year old friend, and he damned near shot a perfect score.\n\nThere is a moral here. That old man, through a thirty year military career and twenty years which followed, had carried a gun almost every day of his life. Other than in war time, he'd never had to draw it, show it or fire it in response to a real life threat. He wasn't a millimeter over five foot eight and not over 150 pounds dripping wet. If some gang bangers had decided that they wanted to hurt him, they would have lost---none of us ever had any doubt about it. \n\nIt was the way he carried himself; it was that look which said, \"this smile means, don't even think about it,\" It was those years of practice which gave him the confident air of a man who is just not afraid. He was one of the kindest, most generous, nonjudgmental and friendly human beings I've ever had the honor of knowing. It's about carriage, bearing, purpose and that air of confidence.\n\nOkay, let's get back to the, \"how-to\". Flirt! Flirt with you eyes and your smile. None of that, \"what's a nice girl like you...\" Notice a name tag; when you get that banal, \"thank you for shopping at...\" respond with, \"thank you, Carol, thank you for handling that price check so efficiently. It's folks like you that make me come back here to shop.\" If someone does something really extraordinary, tell a manager. If you've got a yearning for that particular young lady, shop at the same time a few times and find a way to go through her lane. Use a credit card; in some stores they're trained to look at the name and say, \"thank you, Mr. Ah, Jones\". Around the third time, smile, I didn't say leer, and introduce yourself as, Jack or whoever.\n\nPatience, patience, patience. \"Hey Carol, you've waited on me three times, how about coming back to my house and fucking my brains out?\" I don't think so. Think about every attractive woman you meet as a work in progress. You may never get in Carol's pants but she may introduce you to one of her friends, or that hot thirty something MILF behind you in line may be so impressed by how, \"nice\" you were that she'll strike up a conversation. \n\nAlways strike up a conversation with that hot MILF in front of or behind you. Look in her cart. \"Are those really good? I've almost picked them up a couple of times, or how exactly are you planning to cook that beef heart you have there?\" Always be on the lookout and always smile and don't be afraid to say hello. It's doubtful that your quarry is going to look at a reasonably attractive, neatly dressed, mature man and say, \"fuck off, loser.\"\n\nStake out your favorite market, garden center or whatever and figure out when women shop and don't even think about ignoring the ones with little children. Old people grocery shop at 10:00 in the morning. Women who work shop later in the afternoon. Even mothers and housewives often look at the clock around four in the PM and say, \"fuck, I don't have anything for dinner.\"\n\nBanks can be fun. I don't know why but I've met some of the cutest women you could imagine in banks. Go to the same branch. If you find a target of opportunity, always go to her window. If there is a woman of interest in the IRA department, open an IRA. Do not do this if you have twenty-five dollars in your account and routinely bounce checks or your social security check is your only visible source of funds. Unlike the other younger women you are going to meet, those who work in banks have a pretty good idea of your financial situation.\n\nAnother short story is in order. I buy a lot of stuff on line and always use the same credit card; locally I use a debit card exclusively. As Christmas approaches each year, depending on the market, I cash in some stock options and make a large deposit to my checking account. I pay off my low interest credit card, several insurance policies come due in the fourth quarter, my property taxes and home owners insurance are due, I escrow a little for income tax time and pay for Christmas with cash.\n\nA while back I went into my favorite branch to get a new debit card since my little magnetic strip was getting unreliable. I could have done it over the phone but there is a particularly enticing long legged brunette who is an assistant manager there. I conducted bank business with her four times over a number of weeks.I even asked her, after the first time, when she normally worked, since she had been so damned helpful and I wanted her to handle my banking needs in the future. \n\nAs time went on, I wrote a nice letter to the president of the bank complementing her expertise. Patience...she was always on the back burner. She got promoted to branch manager at another branch; I drove out of my way to go to that branch. We were soon on a first name basis and she even started to flirt a little.\n\nOne day I went to see her about something mundane and she noted the rather large balance in my checking account and suggested a CD. I demurred, telling her where the money had come from, why it was there and also indicated that as far as investments were concerned, I already had a more than adequate portfolio. \n\nFor the first time, she asked me what I did for a living. I told her I had retired early from corporate America, received a pension, had a big pile of stock options, had earnings from my stock portfolio and had not yet taken out any of my 401-K since I was not yet old enough to do so without tax penalties. I told her I also did some consulting but was, essentially retired. \n\nNow, I knew she took a lunch break, generally eating at one of the local eateries in the attached strip mall. I knew when she went to lunch...I'd paid attention. I asked her to recommend a good place to eat nearby. I asked her when she was going to lunch---already knowing that it would be in about five minutes---and invited her to join me. She could have said no and mumbled something about bank policy, but she didn't. And so what if she had said no? Would I have stopped going to see her? Hell no, it's all about patience.\n\nShe was forty, albeit a very well maintained forty. She was divorced and not particularly looking for another husband at the time. She'd recently bought her first home on her own, an older fixer upper, taking great satisfaction in doing much of the work herself in her spare time. She was a delightful lunch companion and somewhere during lunch I told her that I had some skills in carpentry, electricity and such and enjoyed that kind of stuff. \n\nShe offered to pay me; I said not a chance, I'm not in that business and just do it for fun for special friends. She turned out to be a delightfully adventuresome fuck and we're still good friends even though she is now seriously involved with someone with a wedding on the horizon. But, then, she introduced me to Tina, who introduced me to Maria...\n\nHome improvement stores are great! \"You look deep in thought as you are studying all of the sump pump choices. I just replaced mine a few months ago. Would you be offended if I made some recommendations?\" Once again, \"fuck off, you old loser\" is unlikely.\n\n\"Well, you're also going to need this, and this and this. Do you know if your existing setup has an anti back flow valve? Well, you can always bring it back. Better to have everything you need and not have to run back to the store. Is your husband handy with tools and such? Oh, I see, he's at a conference in LA and the water is already seeping out of the sump. Maybe a plumber? None of them could come out today and they all quoted five times the cost of the materials and you were saving that money for a new riding lawn mower for you husband's birthday? I don't mean to pry, but where exactly do you live? Heck, I have to go right by there on my way home; I live on the other side of the river, well, actually on the river. I'd be glad to follow you home and help you get started. Actually the whole thing shouldn't take over an hour.\" She's desperate and on the verge of panic. You look nice. She says okay.\n\nSo, you go back to her house, you replace her damned sump pump, you don't treat her like a stupid woman. Do you go for it right then and there? Probably not. Now obviously if she sidles up to you, grabs your cock and says, \"oh, my you've gotten all dirty, let me take you to the shower and get you all washed up and then I'd like to suck your big cock\", well yes, you go for it. Otherwise, you take the proffered beer or glass of wine, ask her lots of questions, show genuine interest, ask her for a tour of the house, probe to find out what other things she might need some help with, flatter her judiciously, find out what interests her, maybe invite her to come over some time to see the deck you built but you neither overstay your welcome nor come on too strong. \n\nTrust me. If she has the slightest inclination to cheat on her inattentive husband it isn't going to be with one of her friend's young equally inattentive husbands or some guy she meets in a bar. You're safe, no complications, might even have had your tubes tied and you became friends before you did the nasty. And her husband always seems to be away at a conference.\n\nLook, you're old and you have time on your hands. Very few of the women you strike up a conversation with are going to be rude. If they are, well, fuck 'em. Stay away from the seemingly easy targets, the desperate, nervous, mousy ones. Watch out for obvious gold diggers. Don't date anyone who actually works at a topless bar. Find some excuse to at least exchange a, \"hi, how are you\" with every reasonably attractive woman you see. That little mother of two screamers at the meat counter in baggy sweats, dirty hair and no makeup may just clean up a lot better than you could imagine.\n\nGarden centers and nurseries are fun, but be damned sure you actually know something about plants. \"I bought a dozen of those last year to build a wind break and they've really worked out well. They are prone to a couple of insects that you have to watch out for; what are you thinking about doing with them? Well, is it going to be right up next to the house? They don't do well at all there; the lime leaches out of the concrete, makes the soil too sweet and they get chlorosis---yellow leaves. You'd be better off to go with Lilacs, they thrive in that kind of soil. Unfortunately, this nursery doesn't have any really decent ones, but Jone's Nursery always has good stock. Oh, it's not ten minutes from here. I really didn't find what I was looking for here, so I'm going over there. Would you like to follow me?\" \n\n\"Didn't I tell you they have great shrubs here? Yep, those will do perfectly. I hope you're husband realizes that he's going to have to dig some pretty big holes for these to thrive. Oh, he's not much into landscaping things? Well, you'll kill yourself digging the holes---and you want to plant how long a run? Wow! That's going to take at least eighteen, you might want to consider renting a digging auger, you can rent them anywhere, around sixty-five bucks for four hours and it won't take any longer than that, but it is a two man or woman operation. Where do you live again? Oh I know where that is, we're almost neighbors, give or take a couple of miles. I'm sorry, I'm George, George Jones...and you are? Megan! What a pretty name.\"",
        "\"Look, here's a card for the manager of a rental place that's not five minutes from you; I'm going to write on the back exactly what you need to ask for. He's a real decent guy to deal with. They'll load the unit in the SUV for you. Secondly, Jone's delivers in your area for a flat fifty bucks and it's well worth it; they'll even wheel then around to where you need them. You really don't want to try to get them into the back of an SUV. You need to call this number to have them mark the utilities; it's free and they usually come out within twenty four hours.\"\n\n\"Look, Megan, here's my home number and my cell. I'd be glad to help you operate the digger and get the shrubs off to a healthy start. Why don't you get everything set up, get the plants delivered, check on when the digger is available and give me a call and I'll see if I can break free to come over and help you. No, I couldn't accept any sort of payment; I enjoy landscaping projects; I'm not in the business but enjoy helping my friends. Why don't you give me your number and I'll check my schedule when I get home and see when I'm free? Great! It was great to meet you, I need to run.\"\n\nAre you always going to get laid? Of course not! But you'll spend a few hours with an attractive young woman and you'll make a new friend. You may discover that you really like her husband you have the young couple over for dinner and you just become good friends. That's fine too.\n\nSo, you've met her, become friends, there's no chance of being disturbed by kids or husbands, she's gotten comfortable with you, maybe even a hug and a peck on the cheek once or twice and today the buy signs say she is beginning to view you as someone she might like to get naked with. It always starts with a kiss. If you don't like kissing or you're not very good at it, I can't help you. \n\nMake the kiss last. Do not go immediately for her luscious little tits or heaven forbid, her pussy. If she doesn't break away in revulsion after the first kiss, remember those teen aged years when all you ever did was make out---and it was damned exciting. Unless she unzips your fly and starts blowing you, asks you if you're into anal or just says, fuck me, be prepared to walk away from it, albeit after an increasingly heated make out session. \n\nIf the two of you made out for more than five minutes and mutually enjoyed it, then the chances are excellent that she will fuck you. Treat her with tenderness; become the master of the slow burn and then have the balls to, nicely, gently, find a reason not to bend her over the sofa arm and fuck her brains out...this time. \n\nAbsolutely do not go one step beyond a little through the clothes cock and cunt fondling. Find that excuse to walk away which says I absolutely find you attractive, but my house is on fire, or whatever. Then invite her to your turf---lunch, dinner, to look at your etchings---and leave no doubt in your mind or hers that you two are going to get it on.\n\nRomance...make her feel like the most special woman in the world. Most women like cock but all women love romance, tenderness and lots of foreplay. By this stage, when lunch, dinner or the etching viewing is over, you're going to fuck. More kissing and more making out. Then for God's sake, don't push her head down into your crotch but go down on her and make her cum with your talented mouth not once but twice. Lot's of snuggle and cuddle to follow. Maybe a quick trip to the bathroom for the Cialis. Hopefully she will want to reciprocate and blow you. Fine! Don't hold back, don't wear out her pretty little mouth. If you cum in her mouth, kiss her, deeply, meaningfully and romantically. If she decides to jerk you off all over her tits or cunt, well that's fun too.\n\nBy this time, you're both pretty pleased at how things have progressed. Thanks to the Cialis and your healthy life style, you'll be hard in under thirty minutes, usually less. That first time, make love to the damned woman, face to face, nice and slow, lots of attention to the rest of her body and use the one thing that 99% of all older men have to make up for the fact that they don't always get it up as quick or as often---staying power. Fuck her for a long time and if she doesn't cum again, go down on her after you cum and get her off one more time. Check out her bedside table and offer to use the vibrator she has there on her.\n\nFrom here on out, you're on your own. If you ever want to fuck her again, keep treating her like a friend, not some little slut. Find opportunities to do things with her or for her that don't always end with a roll in the hay. Be that special friend who also happens to be a man that she enjoys going to bed with. A little gift, not roses, candy or Victoria Secret, but maybe that set of Felco pruners that she covets. Good friend first, great fuck second. Never forget it.\n\nI have one final and extremely important caution. Watch out for falling in love---in either direction. I had a nasty incident with a twenty-eight year old---I was fifty-five---who wanted to divorce her husband and...well, fortunately I talked her down off of that ledge. \n\nNow, if you're fifty-seven and she is forty and you find that in addition to being great in bed together, you genuinely like each other, she doesn't want to have kids, has her own job, well, hell, go for it. If it works out for you, and you end up getting hitched, you'll still have the honor of fucking an attractive woman young enough to be your daughter every day until you can't get it up anymore or become senile and you won't have to waste all that time at the garden center."
    ],
    "authorname": "Dinsmore",
    "tags": [
        "advice",
        "older men",
        "self-help"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/a-how-to-guide-for-the-aging-male"
}