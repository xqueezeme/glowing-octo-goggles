{
    "title": "Getting Over Edie Ch. 05",
    "pages": [
        "The acrid taste of the cheap whiskey burned his throat as he tossed his head back, letting the alcohol slide down, leaving a sloppy trail of fire in its wake. Grady hissed sharply before pounding his chest. The pain was divine. \n\nHe needed this. \n\nLifting the bottle to his lips, he drank deeply yet again. It was a fairly large handle but he was determined to finish every last drop. He was going to drink so much and so fast the dark thoughts whirling through his head would slow down and turn to sludge, congealing in his cranium while forcing him to think about what was currently torturing him.\n\nShe was late. \n\nHis eyes scanned the room before landing on the digital clock perched precariously atop a makeshift tower of file folders and way overdue library books. It was two a.m. and she was FUCKING LATE. \n\nAnother large swig of the alcohol temporarily soothed the anger bubbling under his skin, threatening to break free. Grady tried to calm himself down. He tried not to be the angry and jealous boyfriend. They were moving forward. They were supposed to be in a circle of trust. \n\nWell fuck the circle; Edie was a lying bitch. She was out giving HIS pussy away and he was just supposed to sit there and practice deep breathing or some shit like that. How was that supposed to help him fix his broken life?\n\nHe wasn't drunk at all; in fact, he'd only had two swigs from the bottle. It was only forty-five minutes ago he was fast asleep when his hand reached out for her. His blue eyes opened in confusion as he glanced at the clock on his nightstand. \n\nShe was supposed to be home hours ago. Instead of her lithe frame wrapped sensuously around him, Grady was left with cold sheets and an empty heart. \n\nGrady dragged himself from the bed and padded down the hallway, in the vain hope she was just sleeping on the couch. It was her new habit, bunking on the sofa. The sight of her lying serenely on that damn thing, her back to him...it was a visual manifestation of what his head already knew: she was pulling away. \n\nBut she was not there. The sofa was as empty as their recent conversations. There was a time when he would tell her everything. Now he was living with a stranger. \n\nHe didn't want to think. He wanted to drown out the voice in his head that taunted him, whispered black thoughts, coaxed dark images in his head of Edie fucking someone else. It's happened before, the voice hissed nastily. She's done it before. The model; he should have known. The fucker who thought he was God's gift to women everywhere. \n\nFucking pansy with his light skin, light eyes and that goddamn pretty-boy smile. The fucker was forever touching Edie, even in front of Grady. He was an absolute fool; he should have seen the signs. \n\nWell he wasn't going to play the cuckold any more tonight. \n\nTipping the whiskey bottle, Grady drank deeply before setting it down on the coffee table. He was finished with the bottle. He was going to wait, as long as he had to, for her to bring her ass back to this apartment. She wasn't going to play with him any longer. \n\nIt felt like hours before he heard the keys opening the various locks. The door slowly creaked open, as if she were trying to keep quiet. How generous of her to not wake him up after fucking around on him. \n\nHe was so lucky to have such a considerate girlfriend. \n\nGrady watched as she tiptoed into the house, slipping out of her stilettos. He knew she was going to leave them in the hall; she always did. He was forever tripping over her goddamn shoes because of her habit of kicking them off whenever she stepped inside the apartment. \n\nHe knew she'd head for the bathroom first. Gotta wash of the scent of pretty boy so your dipshit of a boyfriend won't suspect a fucking thing, he thought bitterly. Without thinking, his hand reached out and turned on the lamp perched on the end table next to the couch. \n\nThe illumination stopped her in her tracks and she turned. \"Grady?\" she called out. \n\nA short moan nearly escaped, but he pressed his lips tightly together. She had the voice, and he knew right away what she'd been up to. He could hear the syllables of shameless sex ringing heavily through the room. \n\nGrady tensed as her footsteps drew closer and when she stepped into the living room, his eyes locked on her. \n\n\"What are you still doing up?\" She really had the goddamn nerve to ask him that. \n\n\"Trying to diffuse a bomb,\" he muttered, the bitterness in his voice so heavy he flinched at the sound. \"Where have you been?\"\n\n\"Shooting ran longer than intended. I had to stay late.\" Her golden skin shimmered in the warm light from the lamp. He could practically feel the glow from the post-sex euphoria radiating from her pores. \n\n\"Yeah,\" was all he said. His reddened eyes stared back at her, refusing to look away. Her gaze was sharp, searching his with such intensity it almost made him uneasy. Anger bubbled deep inside, hot and hostile. Who was she to look at him so accusingly? HE wasn't the one who'd just crept into the house like a goddamn thief. \n\nGrady's fingers itched to curve around the bottle of whiskey but he knew it was a bad idea. His head was already throbbing, partly from the alcohol and mostly due to frustration. It would only exacerbate an already intense situation. \n\n\"Why are you still awake? Don't you have an early meeting tomorrow?\"\n\n\"No. That was today. If you'd been paying attention you would have realized that.\" He knew he was being an \u00fcber-dick, but he didn't care. If she was going to traipse around and flaunt her infidelity in his face, then he had to do something. \n\nEdie sighed. \"Whatever, Grady. It's late and I don't feel like getting into it. I'm going to take a shower.\" \n\n\"What's the rush? Come here; sit down and talk to me.\" He patted the empty space next to him. \n\n\"Grady, I don't have time for this. I'm tired and I just want to take a hot shower and go to bed...\"\n\n\"And I said sit down,\" he countered. It was a struggle to keep the snarl from his voice. \n\n\"Unless of course you don't want to talk to me.\"\n\nShe rolled her eyes, which added fuel to his barely contained anger. \"Why wouldn't I want to talk to you?\" She still hovered in the doorway. \n\nHis laugh was gruff and sardonic. \"I can't remember the last time we said more than ten words to one another. This is the most I've heard from you in weeks.\"\n\n\"What do you want from me?\" Her tone was snippy. \n\nShe was getting defensive. Good, he thought. He wanted the argument; he craved that fire, that heat of flaring emotion. Grady missed those feelings. They had so much intensity, so much passion for one another. What the hell happened? When did the spark fizzle out?\n\nGrady no longer saw the light in her eyes when she glanced up at him. No, that light was gone, snuffed out and replaced by a glazed look of darkness. Somewhere along the way she stopped loving him. \"I guess I just want to know when you stopped giving a damn about me.\"\n\n\"Fuck,\" she swore softly. \"Not tonight, Grady. I seriously cannot deal with this shit tonight.\"\n\n\"Well then WHEN?\" he shouted. There was no containing the rage now. It was all out in the open, spilling into every part of the apartment, invading the once pleasant home and twisting sweet memories into snarling black reminders of what was lost. The pain choked him deep, so rough and harsh in his chest it took everything in him to breathe. \n\nHe watched as she stared at him, and for the first time her eyes widened in fear. \"Grady, I...\" she began, but he silenced her words. A flick of his wrist sent the whiskey bottle sailing through the air, whizzing swiftly past her before smashing against the wall. \n\nThe destruction was poetic, the bottle slamming gracefully into a framed black and white picture of the two of them, hanging so serenely on the wall. The picture fell to the ground, large shards of glass scattering to the floor. \n\nThe fear in her face quickly morphed into anger. When he threw the bottle she'd flinched away. He hadn't thrown it at her; it wasn't anywhere near her. But he knew she felt the stab of his anger just the same. \n\n\"What the FUCK is wrong with you!\" she screamed. Her dark tresses swished angrily as she swung into the kitchen. She returned with the broom and the dustpan and began to sweep up the remnants of his rage. \n\n\"Go right ahead,\" he spat. \"But this is one thing that can't be cleaned up.\"\n\n\"Grady, what are you talking about\u2014\"\n\n\"YOU BROKE US!\" he shouted. \"You fucking broke us. Are you honestly going to sit there and tell me you did fuck someone else tonight?\" His hands began to tremble and he balled them tightly into fists to mask his weakness. \n\nEdie finished sweeping the glass up and quickly discarded the shards. When she re-emerged Grady was still watching her, waiting for the lie to spill from her lips. It hurt to look at her; she was so fucking beautiful, even when she was pulling away from him. \n\n\"What do you want me to say?\" she whispered. He could hear the vulnerability in her voice and for the first time in God knows how long, she reminded him of the girl he first fell in love with. \n\nSomewhere inside this cold, bitchy exterior was that wildly beautiful, darkly dangerous Valkyrie who kept him guessing still but allowed him brief glimpses of her sweet and tender side. \n\nNo, he couldn't get pulled in again. He had to be strong. They weren't the same people anymore. She made sure of that when she gave away the love he'd won. \"What can you say, baby? You can tell me the truth. You owe me that.\"\n\n\"I love you, Grady. Isn't that enough?\"\n\n\"Don't. Don't do that. Don't say things you think I want to hear. I want you to tell me the fucking truth. I want you to look me in the eyes and tell me that you let this guy ruin what we had.\" Grady rose from the couch, his feet carrying him over to where she stood against the wall. \"You owe me, Edie. If you ever loved me, just tell me the fucking truth.\"\n\n\"Alright fine!\" she exploded. She moved him away with one hard shove. \"Yes, I did it. I fucked Quentin. And it felt good. Are you happy? Does this please you? Are you fucking satisfied?\" She wiped the moisture from her eyes as she took in his stony glare. \n\n\"Don't you dare cry,\" he hissed. \"You don't get to cry. You're the one who did this. You're the one who opened your legs for another man and threw away everything we had like it was FUCKING NOTHING!\" \n\nHis hand hit the wall and he felt the satisfying crunch of the plaster. \"I trusted you. We were supposed to be moving on.\" Grady was quiet for a moment as he withdrew his hand from the hole in the wall. \n\nSmall cuts and bruises were already starting to form, but he could barely feel a thing. The pain in his hand didn't compare to the sheer agony in his heart. \n\n\"How long?\" he asked, his voice hoarse. \n\nShe watched him as he slowly turned, his stormy blue eyes glazed over in hurt. \"Grady please,\" she begged. \"What's the point of this? I admitted I was wrong. Can't we just move forward? There's no point in looking back...\"\n\n\"How. Long.\" He repeated. \n\nHer sigh was long and loud before she whispered. \"Since that night.\" \n\nGrady felt his heart completely crumble at her words. He knew which night she was referring to. \n\nIt was after her first revelation she'd cheated on him after the random fashion show. Their first fight over the incident. She had stormed from the apartment and didn't return until hours later, claiming she \"needed some air\". \n\nShe had returned, fresh and determined to make things work and the whole time she'd been fucking around on him. Through the couples' therapy sessions he went to alone or canceled \"date nights\", she was secretly still seeing the man. \n\nThat fucking pretty boy model. \n\n\"So you never stopped seeing him. Even after you were admitted to it the first time. Even after you cried, and you begged for us to start over, you were still sleeping with this dude.\"\n\n\"Grady, I\u2014\"\n\nHis head jerked in her direction. \"What?\" he snarled, his normally ocean blue eyes were frosty and she flinched. \"What can you possibly say to make this better? You had the opportunity to leave back then, when I first found out. Why not take it? Why pretend to want what I wanted when clearly fucking him was more important than staying faithful to me!\"\n\n\"It wasn't about you!\" she shouted. \"It was about me!\"\n\n\"Of course\" he hissed venomously. \"It's always about you. Everything revolves around your wants and needs. Newsflash, princess: if you wanted him so badly why not break up with me? But no, you sat there and pretended like you wanted to work things out all the while spreading your legs for some douchey pretty-boy! You are so goddamned selfish. You're throwing away everything we had on some fucking affair. I can't live like this anymore,\" he said. \"I won't fucking do it.\"\n\n\"Well you won't have to,\" she said hotly. \n\n\"Quentin wants me to move in with him.\"\n\nGrady felt like he'd been slapped. \"What the hell did you say?\"\n\nShe folded her arms across her chest defensively. If he didn't know any better he could have sworn she was bracing herself just in case he decided to swing. The idea that she would even consider that he'd put his hands on her in that manner irritated him. He was angry, but he would never hit her. \n\nHe took in her appearance, the tight black dress with the quarter sleeves and the scoop neck. It was one of his favorites, short enough to show off her mile-long legs and the silhouette of her perfectly sculpted ass. \n\nHer breasts were on the small side, but the neckline was low enough to highlight her cleavage. She was gorgeous: golden caramel skin, wavy dark brown hair and eyes the color of melted chocolate. \n\nGrady was so in love with her, but looking at her face and the contempt she held for him...it was just painful. \n\n\"Quentin wants me to move in,\" she repeated. \n\n\"Really? So that's it? You're leaving me. 'Thanks for the last year and a half, it's been fun'? Is that really all you can say?\"\n\nShe sighed before turning. Grady followed her down the hallway and into the bedroom. His chuckle was incredulous when he saw her reach into her walk-in closet and pull out a large suitcase. \n\n\"Are you fucking kidding me? You've already packed?\" He stood next to her, completely at a loss for words. \"How long have you been planning this?\"\n\n\"Why is that important,\" she said with a sigh. \n\n\"Let's not do this. Let's just make a clean break.\"\n\n\"You call this clean? For fuck's sake, Edie you were planning to sneak out in the middle of the night like a damn thief!\" \n\nShe shifted on her toes. He knew she was uncomfortable, but he couldn't care less. \"I figured this would be easier,\" she stated plainly. \n\n\"Easier?\" He chuckled bitterly. \"Easier for you. Once again, you make everything about what you want. You owe me an explanation.\"\n\n\"I just can't with you right now Grady\" she said. \"I just want to leave.\"\n\n\"Might as well leave then,\" he spat. \"Don't forget to step on the remnants of my shredded heart when you go.\"\n\nEdie rolled her eyes. \"Jesus Christ, Grady!\" she exclaimed, her accent thick with irritation. \"Always thinking like a writer, so dramatic.\"\n\n\"Better than thinking solely with my cunt, like a model.\" Grady knew he'd crossed the line, but he didn't care. He needed her to hurt. He wanted to humiliate her, just so she could feel a smidgen of what he was going through. \n\nHe wasn't surprised when she reached out and slapped him. In fact, he'd already braced himself for it. The sound strike against his cheek was still sharp and stinging. His eyes burned into hers as they glared wordlessly at each other. \n\n\"Fuck you,\" she hissed. \n\n\"Yeah? Well if you would have stuck to fucking just me then we wouldn't be in this situation now, would we\" he shot back. \"You wanna leave? Go. Get the fuck out. I'm done, you hear me? I'm fucking done with you.\"\n\n\"You're pathetic,\" she snarled. \"Quentin was right about you.\" She wrenched her suitcase behind her as she practically fled the bedroom. \n\n\"Yeah, well you're his problem now\" Grady yelled. He could hear the wheels of the suitcase clicking softly against the hardwood floor as she tried to maneuver the handle while slipping into her stilettos. \n\nHis head and heart waged a silent battle. Follow or fight. Follow after her, make her see sense or fight the urge and keep his pride. \n\nHe couldn't help it; he'd always been a fool for love. \"Edie, wait\" he shouted. Grady sprinted to the door. She was standing at the entrance, fingers clutching the doorknob. \"Edie...baby. Please don't do this. Don't leave like this. We can...we should talk.\"\n\nShe glanced at him, her face steely. \"There's nothing left to talk about.\"\n\nGrady shook his head violently, his fingers grasping her arm. \"That's not true. Do you love him?\"\n\n\"Grady, I...\" She moved to pull away from him but he held on tighter. \n\n\"No!\" he interrupted. \"No. You look me in the eyes. Do you love him?\"\n\nShe was silent for so long, just staring at him while he agonized over her impending response. Finally she whispered, \"Yes. Yes I do.\"\n\nGrady felt the stabbing shard of betrayal pierce what was left of his heart. The pain was sharp, nearly crippling him, but he had to make it worse by asking the next question. \"Do you still love me?\" \n\nThe hope was so obvious in his voice, but he didn't care. He knew he looked desperate and weak. Love emasculated him, made him vulnerable and pliant but he couldn't help the desire to still mean something, anything to her. Surely the last year and a half wasn't for naught? \n\n\"Do you?\" he whispered again. \"Do you still love me, Edie?\"\n\nHer brown eyes focused on anywhere but him. He could see the moisture welling in her eyes and his resolved softened just a little. \"Please, baby. Please just answer me.\"\n\nThe tears began to fall in earnest as she tried to free herself. \"Let me go,\" she sobbed. \"\n\n\"Do you still love me?\" he repeated. \n\nEdie gazed up at him, her eyes steely once more. \n\n\"No,\" she said firmly. \"I don't love you.\"\n\n\"Liar,\" he said, his voice cracking slightly. \"I don't believe you.\"\n\n\"Well believe what you want, but it's the truth. I don't love you. Not anymore.\" She wrenched her arm from his grasp and opened the door. \"Are you satisfied now? Does hearing that make you happy?\" she spat. \n\n\"Believe me, I'm far from happy right now. Not that you give a damn,\" he hissed. \"Just leave me alone. And leave your fucking key when you go.\" \n\nWith that, he turned and walked down the hallway and into his bedroom, closing the door behind him. Grady stared around the room. \n\nEverything seemed the same, and yet nothing was the way it was supposed to be. \n\nIt was the little things: her body lotion and deodorant gone from the top of the dresser, her stack of couture magazines that sat on her side of the bed. And more than half the closet was emptied out. \n\nGrady leaned against the wall, totally at a loss for words. It was only when he heard the loud slam of the front door did he remember to breathe. The nerve of her, getting offended when HE was the one getting dumped. Grady was having a hard time processing everything. \n\nHe was emotionally skull-fucked, a little drunk, and completely exhausted. In short: he was a disaster, and was slowly spiraling into a dark place. He couldn't think.\n\nHe felt the hot tears pricking his eyes and this time he didn't bother to stop himself. Crying wasn't manly, but damn the antiquated gender norms. In less than thirty minutes his whole world had completely imploded all around him and he was helpless to stop it. \n\n\"Fuck,\" he swore loudly. His chest was heaving as he fought to breathe. The sobs threatened to break his body and he began to shake from the force. \n\nHis body was in self-destruct mode and he couldn't find the 'OFF' switch. \"I can't...I can't,\" words were hard to come by as he struggled, the weight of all this sadness finally breaking him. ",
        "Grady sank to the floor, cradling his head in his hands. \"Why baby,\" he gasped. \"Why did you do this?\"\n\nHe was never an emotional person; his range varied between \"super chill\" to \"mildly irritated\". But she'd managed to utterly fuck his world up and his mind and body did not know how to bounce back. \n\nSo he shut down.\n\n********\n\nGrady groaned in satisfaction when the steaming spray of water hit him. A hot shower was exactly what he needed. He'd just returned from another grueling gym session with Benny. They both seemed to be working out some demons as they ran on the elliptical and lifted weights. \n\nBy the time he finished he was sore and his mind was racing. \n\nHis dream last night still taunted him; it had been vivid as his mind recalled the night of his breakup with Edie. He woke up gasping, clutching his chest, his heart thumping wildly. The pain, the humiliation, the anger\u2014it all felt so fresh. \n\nIt freaked him out. \n\nAs he lathered up, his mind wandered; what brought on that dream? He was doing so well before. The past month made him feel brand new. This wasn't exactly a step back, but thinking about Edie just seemed so out of the blue. \n\nAlthough it could have been residual leftovers from the last time he ran into her, the night of Tony's party. \n\nFuck. Tony's party. That phrase opened up a floodgate of \"whatthefuck\". Grady shampooed his hair and tried not to think about his little after-party with a certain wide-eyed dancer. He hadn't spoken to Arden since that night, and it was almost a week ago to the day. \n\nGrady wasn't sure what to say. This was supposed to be the girl who annoyed the ever-loving holy hell out of him. But something was different between them; he couldn't deny that. She seemed kind. Not in a pitying way, but truly kind, as if she really understood what he was going through. \n\nHer obnoxious tendency to correctly read his behavior irked him, but he was secretly impressed by her ability to call him on his bullshit. He couldn't help it; he was curious. \n\nAnd yeah, okay she was kind of hot. Grady still couldn't get the image of her dancing out of his head, her long and fluid form leaping gracefully on her toes, pirouetting around the room in a flash of dark limbs and purple. \n\nHer skin glowed with a sheen of sweat, the bitter chocolate color flushed with excitement. And when she looked up at him with those big brown eyes, he couldn't help it. He kissed her. \n\nAnd goddamn, she was sweet. The little sounds she made were incredibly sexy and he wasn't surprised when his body reacted. In fact, his body had been reacting all week. Every night, those breathy whimpers and sighs taunted him. Every night, he went to sleep and woke up hard as hell and confused as fuck. \n\nIt was thoroughly annoying. \n\nGrady sighed. So the best course of action was to take some time away from the matter. He did his best not to contact her (he didn't have her number anyway, so that was easy). Through phone calls with Tony he discovered she'd been asking about him. \n\nTonight was the night of her dance showcase. Tony and Gemma were going, and he was sure Stevie was as well. He promised her last week he would go, and for some strange reason he didn't want to disappoint her. \n\nThe thought of seeing her dance again made his stomach flip with excitement. Grady rolled his eyes as he exited the shower. \"Get a damn grip, Kade\" he said aloud. Once again he found himself in front of his closet, pondering various outfit possibilities.  \n\nThe action was not lost on him, the amount of care he was taking with choosing what to wear. It was an anxious, yet familiar feeling. For some reason it felt like a first date. That's ridiculous, he thought to himself. \n\nHe was zipping up his jeans when his phone rang. Grabbing it from the dresser he answered it. \n\n\"What's up, Tone?\"\n\n\"Hey man. Just checking to see if you're coming tonight.\"\n\n\"Well, I made her a promise. So I guess so.\"\n\nTony laughed. \"Stop acting like you're being forced to go. You know you want to. You like Arden, Grady\" he said in his smug 'I know I'm Right' voice. \n\nGrady fought the urge to curse him out. \"I refuse to answer that question on the grounds that it may incriminate me later on.\"\n\n\"Yeah, yeah, yeah. I know what's going on. You can deny it all you want. Plus Arden already told Gemma what happened. You smooth bastard, I didn't know you had it in you.\"\n\nHe scoffed. \"It figures she would tell her friend about the kiss. Girls can't keep secrets for shit.\"\n\n\"Neither can guys, apparently. Arden never said anything, but you just did.\"\n\nGrady groaned. \"Are you fucking kidding me? Did I just really fall for that third grade shit?\"\n\n\"Yeah, you did.\" Tony was laughing hard now. \"You are way too easy, man.\"\n\n\"You're an asshole,\" he muttered. \n\n\"And you're too tense. You need to get laid, man.\"\n\n\"Oh jeez, now you're the one who sounds like Benny. I'm FINE right where I am. I don't need pussy fucking up my plans.\"\n\nTony scoffed. \"But it wouldn't be just any pussy. What if it's some golden, 'I'm a hot dancer' pussy? Come on man, she's a DANCER. Can you imagine all those tight leg muscles?\"\n\nGrady bit his lip in frustration. Oh course he could imagine her legs. It was all he could think about for a fucking week. \"There's a special spot in hell for you, man.\" \n\n\"Calm down dude. I just like bustin' your balls. Truth be told, I'm kind of glad to see you interested in someone else. And I know Arden can drive you batshit but she's a good girl. Gemma told me some stuff; she's been through some rough shit.\"\n\nHe was intrigued. \"Really,\" he inquired as he slipped into a pair of dark blue jeans. \"What do you mean?\"\n\n\"That's something you'll have to ask Arden, bro\" Tony replied. \"I will say, you two have a lot more in common than you think. So will I see you tonight?\"\n\n\"Yeah. I'm getting dressed now.\"\n\n\"Good. Don't be late man. I mean it dude. Don't run on Princess Time tonight.\"\n\n\"Alright Mom. I hear you. The show starts at eight, right? It's six-thirty right now. I promise to be ready at seven on the dot.\" He smiled at Tony's laughter. \n\n\"I'll believe that when I see it,\" Tony said. \n\n\"I'm gonna hang up so you can't use me as an excuse for your lateness later on.\"\n\nGrady ended the call and shoved the phone into his pockets. As he dressed, Tony's words played repeatedly in his head. \"You two have a lot more in common than you think.\" What the hell did he mean by that?\n\nIt was a cool evening for spring, so Grady threw on a blue blazer over his long-sleeved fitted grey Henley. Grabbing his keys, he locked up and headed out with twenty minutes to spare. \n\nThe night air was pleasant and since he only lived a few blocks away from Madam Dauphin's he decided to walk. He tried to calm the mild case of the butterflies that seemed to occupy the lower half of his stomach. \n\nIt was so weird, to be so affected by someone who, just months ago he couldn't stand to be around. But he had to admit he wasn't the easiest person to get along with at the time. \n\nHe was man enough to admit that he'd been wrong about Arden Finch. \n\nGrady reached Madame Dauphin's Dance Studio just as a yellow cab pulled up out front. \"Right on time,\" Tony said as he scrambled out of the cab. He held out his hand for Gemma and turned to grin at his best friend. \"This might be the first time in the history of our friendship where you are actually on time for once.\"\n\n\"Don't get used to it,\" he said as he jostled his shoulder. \"Hey beautiful,\" he remarked to Gemma, giving her a friendly peck on the cheek. She was slight and delicate; Gemma was tiny, barely breaking 5'5 but what she lacked in height, she totally made up for by being an absolute stunner. \n\nShe was all softness and played the part of a trendy interior decorator, from her retro A-line cocktail dress in a deep shade of merlot to her artful silver glitter Louboutins. \n\n\"Hi Grady,\" she said sweetly, her Aussie accent high and clear. Her cerulean eyes practically glowed against the warm sienna color of her skin. \n\n\"Wow. Working out with Benny has really helped. You look fantastic.\"\n\n\"Thanks, Gem. If only Tony here wasn't scared to lift weights he could join us. He's been looking rather scrawny lately.\"\n\n\"Shut up, dick\" Tony shot back playfully. \"Just because you can finally fit your hefty ass into your skinny jeans doesn't mean you can run my life. My weight is just fine. Take your Richard Simmons 'Yes I Can' attitude somewhere else.\"\n\n\"You see how he treats me? He's just angry because he's hungry. Eat a cheeseburger and quit your bitchin'.\" \n\nThe guys laughed as Gemma shook her head, a large smile on her pretty face. \"You two are ridiculous. Is Benny joining us tonight or is he pretending to have another engagement?\"\n\n\"That depends. Is Stevie going to be here?\" Grady asked. \n\nGemma shrugged. \"I'm not sure. She knows it's Arden's big night. I doubt she'd miss it.\"\n\nAs if on cue, another cab pulled up and out stepped Stevie Knox, looking as if she'd just rolled out of bed: impossibly tight jeans, mid-calf biker boots, and Dead Boys band shirt under a bright red leather jacket. \n\nHer onyx hair was artfully tossed and teased, but Grady could definitely spot genuine bed head. Frankly speaking, she looked like she had a good, hard fucking. \n\nWay to go Benny, he silently cheered. \n\n\"Hey,\" she rasped, her voice heavy from cigarette smoke. \"Sorry I'm late.\"\n\n\"Actually you're right on time,\" Gemma said. \"We were just about to head in.\"\n\n\"Is Benny going to show up?\" Tony asked carefully. \n\nStevie shot him a weird look. \"Why the hell would I know what he's doing?\" \n\n\"Really?\" Gemma said. \"Really?\" The collectively shot her variations of the 'gurl stop lying' look before she huffed loudly. \n\n\"Alright Jesus, you fucking nosey ass old ladies!\" she yelled. \"Yes goddammit! The guido and I are...well whatever. Are you guys happy?\"\n\n\"Sure. But you really didn't have to shout it out to all of Brooklyn, though.\" Grady said with a grin. \n\nStevie glared at him. \"Whatever. Can we just go inside and get this over with?\" She marched into the building, the three of them following after her. \n\n\"She's going to be in a stellar mood,\" Gemma whispered. \n\nGrady felt his stomach lurch as he stepped inside; returning to the scene of THE INCIDENT, he thought silently. Thankfully they followed the small crowd of people into the auditorium. It was a medium-sized venue, but boasted a rather impressive stage and killer lighting. \n\nThey chose seats relatively close to the front. Grady was about to thumb through the program given to him by the usher when he heard a loud voice screech his name. \n\n\"GRADY KADE? IS THAT YOU?\" \n\nHe cringed. He knew that voice anywhere. Grady turned to the offending creature who was making her way through the crowd at an alarming speed, flame-red hair billowing behind her. \"Hey Gia,\" he said tightly.\n\n\"What are you doing here?\" she asked, hands on hips. As usual her curves were poured into another signature Gia outfit: skinny jeans that looked practically painted on, and a form-fitting white sweater. On her feet were a pair of hideous Ugg boots in blinding white. \n\n\"Uh, I'm here supporting a friend of mine. This is her showcase.\"\n\nGia's blue eyes lit up. \"Oh you know Arden? What a small world. My niece Maria is in her beginner's class. I'm here for her performance.\" \n\n\"Oh. Well that's cool.\" He turned back to his friends, who were watching the exchange curiously. \"Guys, this is Gia Amato. We work together at EDGE.\" \n\n\"Hey,\" she said brightly. \"Well I guess I should be getting back to my family. We'll be the loud ass Italians in the front row.\" \n\n\"Speaking of loud ass Italians, our own resident guido has arrived,\" Tony called out. They turned to see Benny heading toward them, looking uncharacteristically subdued. \n\nShit, Grady thought. This is not going to be good. \n\nAs Benny approached he was accosted by Gia, who threw her arms around him. \"You jerk,\" she said playfully as she gave him a chaste kiss on the lips. \"You never called.\"\n\n\"Oh uh,\" Benny started. He was clearly caught off guard. Grady wondered how he was going to get himself out of this on. \n\nGrady's eyes traveled to Tony who was assessing the scene carefully. Gemma look confused, but the look on Stevie's face was absolutely priceless. She was throwing so many icy looks in Gia's direction it was a wonder that the tiny girl didn't have frostbite. \n\nThis was going to end in a visit to the precinct if someone didn't step in. \"We should probably sit down, the show's about to start,\" Grady remarked. \n\nThat seemed to snap Benny out of his stupor. \"Yeah. Well it was nice seeing you, Gia\" he said, removing her grip on him. \"I'll be in touch.\"\n\nGia giggled, clearly oblivious to the tension. \"You'd better. I've got something for you.\" She gave Grady a quick wave before sauntering back to her seat, the sexy wiggle in her walk purely for Benny's benefit.\n\nBenny shot him a gracious look. \"Thanks man. I owe you for that.\"\n\nGrady shrugged. \"I just want to see what happens when you try to explain yourself to Stevie. That will be all the thanks I need.\"\n\nThe lights in the auditorium began to flicker, signaling the start of the show. The group took their seats just as the curtains started to open. \n\nA pale petite woman wearing a black leotard breezed onto the stage. She was older, but Grady could tell she was still quite spry. \"Good evening ladies and gentlemen. I am Madame Dauphin,\" she said, her native French tongue tumbling almost melodically over the syllables. \n\n\"Welcome to our annual Spring Showcase. Every year we highlight the particular achievements of our gifted instructors and their diligent pupils. This spring, I am pleased to feature Madamoiselle Finch and her little birdies. So without further ado, I present for your viewing pleasure our program: Springtime Revolution.\"\n\nThe audience applauded as the lights dimmed. There was a chorus of 'awws' when the lights came up and ten little children, who couldn't have been more than seven emerged clad in green leotards and tutus with giant petals of various colors atop their heads. The music started, a jaunty ballet number that reminded Grady of springtime. He watched as the kids executed their moves with precision beyond their years. \n\nThe flower number was brief, moving seamlessly into a nighttime garden scene, where the older children dressed as sprites, did a mischievous number in a modern ode to 'A Midsummers' Night Dream'. \n\nHis stomach was tight with anticipation; he couldn't wait to see Arden, but watching her students perform her pieces, he was in awe. Finally, as the music ended for a group of teenagers dancing to a modern medley the lights went out completely. \n\nA lone spotlight shone onstage, the whitish blue giving off a cold tone. Grady felt his breath hitch when he saw her, crouched low, the spotlight trained on her frame. \n\nThe music started and he was mesmerized. The song was vaguely familiar (Bj\u00f6rk mayhaps?), but she was flawless. It was a sparse, haunting melody. There was a feeling of pure loneliness in her piece, a feeling so beautiful and exquisite, it moved him to his very core. \n\nHer makeup was minimal, her dark hair swept into a tight chignon high atop her head. She wore a black leotard, black tights, and a simple white dance skirt. Her feet glided effortlessly onstage in nude ballet slippers. It was a contemporary piece, a blend of classical ballet and modern moves. \n\nGrady's heart quickened at her dramatic leaps and tumbles. The song (it definitely was Bj\u00f6rk) spoke of emotional confusion and the concept of new love. The hurt and loneliness too overwhelming but somehow healed through new beginnings. Every step, every twirl evoked raw, energetic emotion. \n\nHe felt her leaps in his bones, the pain written in her curve of her wrists and lean arms. All of it moving seamlessly together to culminate in a dance that was both gorgeous and heartbreaking, speaking of the death of one love and the possibility of another. \n\nIt spoke to him. \n\nShe was so beautiful; there was no fragility about her. She was sure about her movements but possessed such grace, such force...it just blew him away. He wasn't big on dancing, but he realized it wasn't about dancing per se, just her. \n\nShe moved him. \n\nThe piece ended as Arden perfectly executed a series of pirouettes and leaps, her hands falling gracefully. The audience went wild. She smiled serenely before bowing slightly and prancing offstage. There were a few more numbers after that; Arden had a duet with a male pupil and it was a high energy number full of flounce and fun. \n\nShe was utterly adorable, but Grady still couldn't get the first piece out of his head. \n\nWhen the curtain finally fell and the lights came up in the theater, the audience eagerly showed their praise. Grady stood, clapping loudly along with Tony, Benny, and the rest of his friends. \n\nThe various dancers emerged onstage amid raucous applause. When Arden stepped out, the din was deafening. One of her pupils handed her a bouquet of roses and she smiled widely before taking a bow. \n\nThe dancers rushed backstage as the applause died down. Grady led the way up the aisle and out of the auditorium. They stood in the lobby, chatting aimlessly as they waited for Arden to appear. \n\nGrady noticed Benny looking out for Gia; he didn't want to tell his best friend that he saw the clingy red-head leave with her family. He figured Benny could sweat it out, constantly looking over his shoulder. \n\n\"There she is, our little star!\" Gemma called out happily. She snatched up an embarrassed Arden, gripping her in a vice-like hug. \n\n\"Congratulations, sweetheart! You were wonderful!\"\n\n\"Thanks,\" Arden managed to gasp out. \"Gem...I can't breathe.\"\n\n\"Sorry!\" Gemma squeaked. \"I just get so excited. You were really something else.\"\n\n\"Yeah,\" Tony agreed. \"I was really impressed with the whole thing. Great job.\"\n\nA slight flush to her skin was the only sign she was uncomfortable with all the praise. Grady had never seen her so humble before. She was so damn adorable in her little post-dance outfit. \n\nHer dark hair was pulled back in a sloppy bun, the stage makeup scrubbed from her face. She was glowing, a hint of sunshine underneath her mahogany skin. \n\n\"I really do appreciate you guys coming. It really makes me smile.\"\n\nStevie shot her a rare grin. \"I had a great time, but I have to go. We're doing some studio time tonight. Our schedule is extra tight and we have to lay down these last three tracks if the EP is going to be ready for an early summer release. I hate to dip out on you like that.\"\n\n\"No, no. I totally understand.\"\n\n\"I have to get home too,\" Gemma said. \"Milo's dad is dropping him back, and you know how he is. Plus Tony's got some work to do.\"\n\n\"Sorry Arden.\" Tony shot her an earnest smile. \n\n\"We hate to leave you alone on your big night. But I'm sure Grady would be happy to hang out with you. You don't mind, do you, big guy?\"\n\nEveryone turned to stare at Grady, who'd been unusually quiet throughout the conversation. Did he mind? Well there was that early morning staff meeting at EDGE. He had to discuss his column and its direction in front of everyone. But presentation be damned. He was used to running on three hours of sleep. \n\nHe ignored Tony's overdramatic, overly suggestive eyebrow raising and instead focused on Arden. \n\n\"Sure,\" he said with a shy smile. \"I'm sure we can chill for a bit.\"\n\n\"Excellent!\" Gemma said. She gave Arden another hug. \"Are you sure you're cool with this?\"\n\n\"I'm fine,\" Arden replied. \"Give Milo a kiss for me. We'll hang out another time. No biggie.\"\n\nThe group exchanged hugs once more before parting ways. Benny remained, staring after Stevie wistfully. Grady rolled his eyes. \"Dude, just fucking go after her\" he huffed. \"We all know already.\"",
        "Benny looked at Arden, who nodded. He grinned nervously. \"Well, I'm off then.\" He chucked Arden gently under the chin before punching Grady in his arm. Before Grady could retaliate, he was already sprinting across the lobby and out the door. \n\n\"Well,\" Arden said, trying to keep her voice bubbly. \"It almost feels like we were set up.\"\n\nGrady nodded. \"Oh most definitely. You sure you want to do this?\"\n\n\"Absolutely. Where do you want to go?\"\n\n\"You pick. After all, it is your night we're celebrating.\"\n\nGrady watched as her mind seemed to be working overtime. He wondered exactly what she was thinking. When she finally responded, he was taken aback. \n\n\"You know, I'm really not even feeling the whole 'going out' thing. How about we go back to my place and just chill? I can whip something up for us, and we can watch a movie or something.\"\n\n\"Oh...\" he started. \n\nThe look on her face morphed again into embarrassment. \"I don't...what I mean is...I'm just...fuck\" she huffed. \n\nHe had to stop this. They were behaving like a couple of teenagers. Without thinking, Grady stepped forward, closing the gap between them. \n\n\"That sounds like a good time,\" he husked, his eyes taking in every inch of her lovely face. \n\n\"I'd love to.\"\n\n********\n\nGrady wasn't sure what to expect when he stepped inside Arden's apartment. He certainly wasn't ready for the extreme burst of color EVERYWHERE. \n\nThe main room was a radiant purple with teal and black accents, complete with a delightfully hideous teal couch. One wall was completely devoted to a tasteful collage of photos, many of them including Stevie and Gemma. \n\nA giant mirror and practice ballet barre covered another wall opposite a bank of large windows. The place was open and airy; Grady could only imagine how gorgeous it looked in the daytime, the lazy sun streaming golden rays inside. \n\n\"Wow,\" he remarked. \"This is just...wow.\"\n\nArden giggled. \"Yeah. I'm a little color obsessed.\"\n\n\"Just a bit,\" he teased. \"But it really fits you. I feel like I've stepped inside your head, which is a terrifying thought by the way.\" \n\n\"Shut up.\" She tossed her dance bag by the front door. \"Come on, we'll take the tour.\" \n\nGrady was highly amused as she showed the rest of her apartment: a retro kitchen in a shocking fire-engine red, a nice-sized bathroom colored a vibrant cilantro green. His heart inexplicably pounded just a little bit harder when they reached her bedroom.  \n\n\"Well this is where the magic happens\" she quipped. \n\n\"Whoa,\" Grady remarked as they stepped inside. \"This is just...whoa.\"\n\n\"Yeah. It took me a while to figure this room out, but now I absolutely love it.\" \n\nGrady was impressed; the room was a gorgeously sensuous midnight blue. Soft lighting, courtesy of pale paper lanterns and tea lights in decorative wall sconces gave the room a romantic glow. The bed was in the center, large pieces of treated and sanded wood served as the headboard and bedframe while four tall bedposts carved to look like trees gave the bed a stately appearance. Gauzy cream colored cloth draped around the posts and through the branches, wrapping it in semi-privacy. Strings of lights tinkled softly underneath the makeshift canopy of the bed. \n\nIt was dream-like, as if someone had imagined and engineered a fairy wonderland and brought it to life indoors, a lighted forest blessed with eternal midnight. \n\n\"This is just beautiful,\" he said. \"You did this yourself?\"\n\n\"Gemma helped. She's incredibly handy.\" Arden turned to him, a small smile on her lips. \"I'm gonna take a quick shower. There's some juice and stuff in the fridge and you can pick out a movie or whatever.\"\n\n\"Oh okay.\" He made his way to the kitchen. Grady stared at the contents of her fridge and tried to ignore the water running in the shower. That sound was giving him dirty thoughts, vivid wonderings about how good she would look naked. \n\nHe shook his head hard before grabbing a bottle of cranberry juice. \n\nAs he entered the main room, his eyes immediately zeroed in on the collage. He felt himself drawn to the expansive work of art, sipping his juice and taking it all in. \n\nThe pictures weren't arranged in any kind of chronological order, but he could see the progression. The long wall was completely covered with pictures of all shapes and sizes. \n\nHe chuckled at a picture that was no doubt a pre-teen Arden dressed in the most hideous of 90s fashion. Countless dance recitals, homecomings, graduations, and everything in between. It was all here, a non-linear timeline highlighting the highs, lows, and the mundane of Arden Finch's life. \n\nAmidst all those pictures of smiling, happy Arden there was a small gap. It wasn't that noticeable, just a small patch of the purple pain peeking through the wall of memories, as if someone ripped the pictures off in a hurry. Grady looked closer only to discover that there were patches all over the collage. He wondered what happened to those photos. \n\n\"Are you hungry?\" she asked, her clear voice in the quiet of the apartment, making him jump. \"Sorry,\" she said sheepishly, grinning at his fright. \"I didn't mean to sneak up on you.\"\n\n\"It's cool,\" he replied. \"Guess I was just really absorbed with your masterpiece over here. It's really awesome.\"\n\n\"Thanks. It took forever, but it's finally at a good stopping point for now. Who knows, I'll probably add more to it. And you never answered my question: are you hungry?\"\n\n\"I'm good, actually. Do you want to watch a movie?\"\n\n\"Sure,\" she said. \"There's a bunch of movies on the shelf. I'll go make us some popcorn.\" Grady's eyes instantly zeroed on her ass as she turned and headed into the kitchen. Get it together, he silently scolded. But damn, those tiny shorts were killing him. \n\nThey were heather grey and looked incredibly soft, the snug material stretching tightly over her more than generous backside. Her dark blue t-shirt was just as tight, the cotton material providing a lovely silhouette to her cleavage. \n\nBut those damn socks were the killer. Navy blue socks that stretched up her mile-long legs, molded tightly to her strong, shapely dancer's limbs before stopping a little above her knees. Tiny gold stars sprinkled all over enhanced their sexy factor. She looked so cute and innocent. It was definitely doing something to him. \n\nIt was getting too hot for him. Grady removed his blazer, tossing it on the couch before heading to the DVD rack. He hemmed and hawed over his choice and by the time Arden returned with a large bowl, he'd already popped in the movie. \n\n\"What are we watching?\" she asked, plopping down gracefully on the couch. She nestled the bowl between them. \n\n\"It's a surprise,\" he said. \n\n\"I don't know how I feel about this.\" Grady chuckled. \"No worries. After all, it's your movie. You have great taste, by the way.\"\n\nShe smiled as she slipped on a purple cardigan. \"Don't sound so surprised.\"\n\n\"Shut up and take the compliment, Finch.\" Her doe eyes widened in mock surprise. \"Oh was that a compliment from THE Grady Kade, the famous writer? Oh god, I can die happy now.\"\n\nThey laughed. It was nice to see they were back to taking shots at each other. That kiss last week made things really tense. It was all he could think about, and he wondered if it was on her mind as well. \n\nArden chuckled as the opening credits appeared on the large flat screen. \"Death at a Funeral? Nice choice.\"\n\n\"Thanks,\" he replied. \"I was hoping you had the Brit version. Nothing personal against Chris Rock, but the original is much funnier.\"\n\n\"Definitely. I blame Alan Tudyk. His character made the movie.\"\n\n\"Yes!\" Grady peered into the bowl of popcorn. \"Are those Reese's Pieces?\" \n\n\"Do you not like them? I always add some to my popcorn.\"\n\nGrady shook his head. \"No it's cool. Actually I love it. I've been eating Reese's Pieces with popcorn for as long as I can remember.\"\n\nHe glanced up at Arden and was puzzled by the strange look on her face. She seemed to be studying him intensely. Grady wasn't freaked out; on the contrary, it made him curious. She was so damn hard to read. \n\nGrady prided himself on his uncanny ability to correctly assess others, but this girl was like the Fort Knox of emotions. No matter what, he could never get an accurate gauge on her feelings. \n\nIt was frustrating and kind of liberating at the same time. He was constantly intrigued. After an awkward beat, she flashed him a minute smile before tossing some popcorn into her mouth. \"Small world,\" she finally said. \n\n\"Indeed.\"\n\nOver the course of the movie, Grady couldn't help but notice small things about Arden. She would wrinkle her nose at a gross scene but when something was absolutely funny she'd burst out laughing. It was a high and clear sound that was altogether pleasing. When she started to snort, it made him laugh too. \n\n\"Shut up,\" she said in between giggles. \"I can't help it.\"\n\nGrady grinned at her. \"I think it's cute. You sound adorable.\"\n\nArden set the now-empty bowl of popcorn on the coffee table. \"Yeah?\"\n\n\"Yeah,\" he nodded. \"I think that's the first time I've ever seen you show an actual range of emotion. Except of course when you dance. I think that's why I like it so much.\"\n\nHer coffee colored eyes widened at his revelation. \"You like my dancing?\"\n\n\"I really do. You're so talented, and when you dance...it's like I can read all of your emotions. You ooze passion with every step and when you're in motion, I can feel pretty much everything you feel. Sounds weird right?\" He looked up, only to find she was staring at him strangely again. \"Are you okay?\"\n\n\"I...I just...why do you do that?\"\n\nOkay, now he was confused. \"Do what?\"\n\nShe sighed, her body inching closer towards his. \"Sometimes the things you say...you seriously have no idea how effective your words can be.\"\n\n\"Oh,\" he said. \"Is that a bad thing?\"\n\nArden released another weighted sigh, as if it pained her to discuss these things with him. \"No. It just confuses me, is all.\"\n\n\"Confuses you? Like how?\"\n\nShe didn't respond. Her head was down and she busied her fingers with the hem of her cardigan. Grady was absolutely puzzled. He'd never seen her so subdued. Normally he couldn't get her to shut up, and now she could barely look at him. \n\n\"Arden?\" he said softly. His finger reached out, tilting her face so that her eyes were level with his. \"What's confusing you?\"\n\n\"You!\" she said suddenly. \"You are driving me crazy. All I've been doing for the past week is thinking about you, and that kiss. I've been agonizing over it, dissecting everything about that moment down to the very last detail. My brain has been working overtime, wondering if it was all in my head, and I'm irritated because it's affecting me so much, because it's YOU. \n\nBut I can't help it because that kiss was so hot, and I'm so worried you didn't like it, and then you show up here, and the way you look at me, I wondered if you felt something but you never brought up the kiss, so I never did but it's been sheer torture. And then you say those things about my dancing, and I'm right back to where I started: confused as fuck.\"\n\nShe exhaled loudly, a nervous chuckle escaping as she glanced at him. \"Sorry. I've been holding that in for a while.\"\n\n\"I can tell,\" he remarked. \"I'm sorry. I didn't mention anything about the kiss because I didn't want things to be awkward between us. I guess by ignoring it, I made it worse.\"\n\nHe turned to her, his blue eyes meeting her gaze. Grady saw the uncertainty and it urged him on. \n\n\"Arden, that kiss was on my mind too. I was so fixated on what happened between us, I couldn't focus on much of anything. I don't know; I guess I got freaked out.\"\n\nGrady heard her breathe a sigh of relief. \"I'm sorry. I didn't mean to spring this on you.\"\n\n\"Don't apologize,\" he said. \"I was an ass. You've been a really great friend to me, Arden. More than you'll know.\"\n\nArden grinned. \"Let's face it; I've been an absolute nightmare to you.\"\n\nGrady laughed. \"True. But in the end, I think that's what I needed. Everyone was walking on eggshells around me, placating me, letting me wallow in my filth and fatness. But you? You came in and threw me for a loop with your nosy ass questions and persistence. And I wanted to strangle you.\"\n\n\"Aww, that's such a lovely sentiment.\"\n\n\"I'm serious,\" he said. \"Thanks for that. You gave me a good kick in the ass and I'm grateful for it.\"\n\nImpulsively, Grady reached out for her hand. A sharp jolt of current passed through their fingers, making them both jump. \"Thank you,\" he said. His fingers stroked hers idly, but stilled when he heard her breath catch. \n\nThis was getting weird, he thought. He knew that things were taking a different turn, but for some reason he didn't want to stop. Maybe it was because for the first time since his breakup Grady Kade was actually attracted to another woman besides Edie. Not just attracted to...he was straight up lusting at this point. \n\nThere was a reason why Arden was in his dreams every night for a week, and it wasn't because he wanted her to join him in a knitting circle. He wanted her. There was no getting around it. He absolutely wanted her. \n\nBefore he could express any of this to her, however, Arden shocked the hell out of him. Her lips crushed against his in a kiss that nearly scorched his skin.\n\nGrady groaned, the taste of her tongue was both sweet and salty from the popcorn mix. \"Fuck,\" he growled. Cupping her face in his hands, he urged his tongue to explore deeper, eager for more of her honeyed taste. \n\nThose sweet little noises rumbling from her throat threatened to be his undoing. Her full lips pressed against his, her slick tongue teasing his playfully...it was all evidence of a woman who knew exactly what she was doing. \n\nHe pulled her closer, deepening the kiss, his body practically begging to surge forward. Grady was a little nervous, the faint flutter in his stomach telling him that it'd been awhile since holding a woman like this. Oddly enough, he didn't mind. But the nervous feeling was persistent. \n\nIn a gracefully swift motion Arden straddled his lap. The weight of those powerful yet incredibly soft thighs gripping his legs threatened to unravel his self-control. \n\nCareful Kade, he warned silently. This is strictly a makeout session. He beat that reminder into his head, even as her lips dominated his.\n\n\"Touch me,\" she whispered urgently. Her lips sought his once more before traveling to his earlobe. \n\n\"W-wh-what?\" he mumbled. He was thisclose to losing his ability for reasoning, especially with her tongue promising naughty things he was sure her body could deliver. \n\n\"Touch me, Grady\" she said again. Her teeth nibbled his earlobe and he shuddered. His ears were always extra-sensitive and led a direct pipeline down to his cock, already stiffening and begging for attention. \n\nArden glanced at him, big doe eyes wide with concern. \"Are you okay? Do you want to stop?\"\n\n\"No,\" he replied, shaking his head. \"I'm just. I'm a little rusty here.\" He felt his cheeks flush with embarrassment. It was just pathetic; there was an insanely beautiful girl on his lap and he was incredibly stiff, in more ways than one. \n\nShe smiled at him, her fingers brushing his thick honey blond curls from his eyes. \"It's okay, Grady.\" She kissed him, her lips so tender and soft. \"I completely understand. You don't feel rusty at all.\" \n\nArden reached between them, her hand cupping his growing erection through his jeans. \"Seems like everything is in working order.\"\n\nGrady uttered a sound that was a cross between a chuckle and a groan. \"It would seem so.\" He was growing harder by the second, his cock pressing tightly against the seam of his jeans. \n\n\"Don't worry, Grady. We don't have to do anything but this.\" She rubbed her flattened palm against his hardness before kissing and sucking on his earlobe again. \"Is this what you want, Grady? Is this okay?\"\n\nHis head tilted back against the couch. He was in absolute agony, and loving every minute of it. It'd been far too long since he felt this way, the delicious teasing torture. He missed that feeling. \n\n\"It's more than okay,\" he said. The weight of her body against his felt incredibly real. She was so warm, the heat of her sex pressed tightly to him. He could feel her kitty throbbing through her shorts, and the fact that she was so turned on already was a thrilling notion to him. \n\nHe hadn't touched her yet, which in his mind was just unacceptable. Grady's hands drifted up, stroking her thighs. A small moan was the reward for his efforts. Her hips began a gentle bucking motion, the soaked crotch of her shorts rubbing against the hardened bulge in his pants. With a groan, his hands immediately went to her hips, squeezing them gently before sliding to her ass. \n\nGrady gripped her cheeks; the friction between their bodies created a series of sensations that were nothing short of amazing.\n\nThe way she was grinding on him, the sensuous sway of her hips, the wiggle of her ass...it was all a preview of what she could give him. Grady was dying for a taste of her, but he knew the time wasn't right. This, this felt good. This was what he could handle. Anything else...well he wasn't sure. \n\nGrady pulled her close, kissing her deeply. They were silent as their bodies moved in unison; there was no need for words. Words would highlight the blinding realness of their situation and he wasn't ready to face up to that. \n\nThings were changing, with every fissure of pleasure from her pussy rubbing against him, from the little moans and groans he made when her teeth nibbled at his lip...these actions were catapulting their relationship into a realm that neither one seemed prepared to enter. But it felt inevitable; despite several parts of him that frowned upon the scene, the majority of him surged forward. \n\nShe felt so strong, yet incredibly soft and feminine in his arms. Her fingers grasped at his curls as her hips began to move in earnest. Before he could even warn her, he came hard, gripping her ass tightly, his body stiffening. He could feel the sticky wetness already cooling in his jeans and he groaned softly. \n\nArden stopped moving, her gaze connecting with his. He was trying to avert her gaze, his cheeks flushed with embarrassment. Grady forced out a nervous chuckle.\n\n\"Would you believe that's never happened before?\" he said, trying to relieve some of the awkward tension. \n\n\"Oh...it's okay\u2014\"\n\n\"It's just been awhile since...you know, and I'm a little out of practice, and you feel so fucking good, I just couldn't help\u2014\"\n\n\"Grady,\" Arden cupped his face in her hands as her lips silenced him. He wrapped his arms around her, his tongue sliding seamlessly into her warm mouth. \"Mmm, it's okay. \"\n\nHe smiled at her. He wasn't used to situations like this at all. \"Okay. Just to let you know, I don't usually have the stamina of a seventeen year old on prom night.\"\n\nArden chuckled softly. \"Thank goodness. That would totally ruin my plans for you.\"\n\nA single eyebrow rose in shock. \"Oh really?\" he asked. \"And exactly what do you have planned?\"\n\n\"I can't tell you, dummy. It wouldn't be a surprise.\"\n\n\"Fair enough,\" he said with a nod. He accepted her lips once more, reveling in her taste. While he was enjoying their little session, a small part of him wondered where the hell all of this was going. \n\nWhen he imagined his night, this definitely wasn't in the picture. Grady tried to force the feelings of doubt way down and turned his attention back to woman still straddling his lap. \n\n\"Grady, we don't...we don't have to do anything more than this.\"\n\n\"What are you saying?\"\n\n\"I'm saying that despite how rough we started out, I find myself attracted to you...\"\n\n\"Obviously, since you're on my lap\" he interrupted. \n\nShe grinned. \"Shut up. I like you, but I won't kid myself. I know you're going through some shit. I totally understand. All I'm saying is, we can take it slow. That is, if you want to take it at all.\" ",
        "Grady was silent, his brain trying to process what she'd just said. He wasn't used to dealing with someone who was so hot and cold emotionally. Just when he'd think her feelings were guarded tighter than the Hope Diamond, she'd burst out with just a tidbit of information that sent him reeling. \n\nWhat was he supposed to say to her? Their little session was fun; he'd obviously enjoyed himself, if the stickiness in his pants was any indication. But liking her? Grady wasn't sure about that. \n\nOkay, maybe he did like her. But he damn sure wasn't ready to figure out just what \"liking her\" really meant. \n\n\"You are totally in your head right now.\" \n\nHe glanced up; she was still comfortably straddling him, those large doe eyes studying him with care. \"What?\"\n\nArden smiled shyly. \"Well...it's just something I noticed about you. You constantly live inside your head. Each thought is carefully examined and planned before you say it.\"\n\nIt was a little scary how well she could read him. \"You're really creepy when you do things like that,\" he said. \n\n\"Like what?\"\n\n\"Reading people. The way you read me is a little scary.\"\n\n\"Oh.\" She shot him an apologetic smile. \"Sorry.\" \n\n\"Don't be. I won't lie to you, Arden. I'm still in the process of getting back to some state of normal. But I won't deny that I do like when you're around. I'm not ready to throw myself into something serious, but I think we should continue to be around each other. Let's just see how this goes, okay?\"\n\nHe waited for her answer. She was silent for a good bit before kissing him soundly. \"Okay,\" she whispered. \"I think I can handle that.\" \n\n\"Cool. We should do something this weekend.\"\n\nShe shot him a smile. \"Are you asking me out on a date?\"\n\n\"Yes, Captain Obvious. What do you say?\"\n\n\"I don't know. I don't really know you like that...\"\n\nHe glanced between them, taking in their intimate position. \"Really?\" he said, his brow raised in question. \"Really? You don't know me like that?\"\n\nArden grinned. \"Kidding. Of course we can do something. I work until 7PM tomorrow, but after that, I'll be free.\"\n\n\"Sounds like a plan.\" He slapped her ass playfully. \"Speaking of work, I have to be up super early for a meeting. I'm presenting the next phase of my article and blog series.\"\n\n\"Next phase? Are you taking things in a new direction?\" she asked. \n\nGrady studied her for a minute before responding. \n\n\"I hope so,\" he said with a smile. \n\nArden chuckled, her lips descending on his; the kiss was slow and tortuous, with just a hint of playfulness. Grady gripped her hips tightly as he felt his body responding to her lips. \n\n\"Arden,\" he groaned. \"Fuck. I really need to get out of here before I do something reckless.\" Her tongue trailed to his earlobe once more, taking the meaty flesh between her teeth and tugging gently. \"Mmm, like what\" she whispered hotly against his ear. \n\nHis blue eyes rolled with pleasure, his whole body shivering with need. It would be so easy, so fucking easy to do this. In one quick motion, he would have his pants undone, his dick out, and those damn tiny grey shorts of hers pushed to the side. He would revel in her wetness and enjoy the sensation of his cock slipping in and out of her sweet wetness, her breath coming out in short, hot moans of pleasure against his neck, her fingers wrapped tight in his curls, those smooth thighs the color of bitter dark chocolate gripping his hips...Jesus. \n\nGrady wanted all of that. \n\nBut not yet. \n\nWith one final kiss, he lifted her off his lap. \n\n\"I'll save that story for a later date,\" he said. \n\nHe watched as she pretended to pout, but Grady could have sworn he saw something else in her eyes: relief. Well that's confusing, he thought. \n\n\"Fair enough,\" she said. She tried to cover up the obvious wet spot on her tiny shorts, but Grady saw, and once again his resolve was tested. \n\n\"Call you tomorrow?\"\n\n\"You might need my number for that.\"\n\nShe chuckled. \"Oh yeah. That would be kind of helpful.\"\n\nThey exchanged numbers and Grady headed for the door. \"This wasn't how I saw my night going at all. But I'm glad nonetheless.\"\n\nArden's smile was slow and shy, something he wasn't used to seeing on her. \"I know. I feel the same way. Thanks for coming tonight.\" \n\nThey both laughed at her innuendo. \"Dammit! That's not what I meant,\" she said, shaking her head between giggles. \"Thanks for being there at my show. I really appreciate it. And thank you for tonight. And our talk.\"\n\n\"No problem. I enjoyed myself.\" They laughed again. \"Jesus, is everything we say going to involve a dick joke of some sort?\"\n\nShe let out one of her trademark snorts. \"I hope so. It makes things interesting.\" Arden handed Grady his blazer. \"See you tomorrow?\" \n\nHe kissed her cheek. \"Absolutely. I'll just change around my plans. I think Benny wanted to work out, but something tells me he'll be getting plenty of exercise tonight.\"\n\n\"Oh eww.\" Arden made a face. \"Can we not?\" She punched him on the arm. \"Goodnight, sir.\"\n\nGrady chuckled as she practically shoved him out the door. \"Goodnight.\" Shrugging on his jacket, Grady couldn't help the wide grin on his face. \n\nFor the first time in months, a woman other than Edie made him smile. He felt on top of the world. He couldn't wait to get home and piece together his presentation. Nell was really going to like the new direction of his project. \n\nThings were definitely on the upswing. \n\n*******\n\nLife is so weird. I know I sound like a pre-teen popstar, but it's true. When you really stop to think about it, our lives, who we are to the core, are just made up of these random little moments that separately don't amount to much, but put them together and it's the tapestry of a human being. \n\nI might be babbling, but there is a point in all of this. As I've previously stated, the mantra of \"everything happens for a reason\" used to make me want to rage out and punch a wall. That phrase is totally overused, a cheap blanket statement that supposedly conveys the mystery of life. \n\nBut the thing is, even tired life-cliches have a basis in truth. The thing is, there IS a reason behind everything that happens; there is a lesson we learn when things occur in our lives. \n\n\"Everything happens\" is just a nice, vanilla way of saying \"Some bad shit is gonna go down, but be patient, dammit. You'll find out the details soon enough.\"\n\nI was so lost in the beginning, my vision impaired by E-shaped rose-colored glasses. Had I been wiser, I would have known that my ass needed to get my vision checked out because the path I was headed down was not the right one for me. I know that now. \n\nE and I...it just wasn't right. Deep down, I think I knew it. But try convincing your heart with sound logic. It just doesn't work. Logic and Love are not best friends and there's a reason for that. \n\nIt's taken some time, but I think I'm finally ready to move on. There's someone new, someone completely unexpected, but welcomed at the same time. I'm not sure where this is headed, but I would like to find out. \n\nI just have to convince myself to take that first step. "
    ],
    "authorname": "nerd4music",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/getting-over-edie-ch-05"
}