{
    "title": "The Perfect Game Ch. 03",
    "pages": [
        "Chapter 3 - Girl's Night In\n\n* * *\n\nPart 3 of the perfect game - Playing the game under conditions I'd never quite planned for. Time to see how it adapted to very uneven odds.\n\n* * *\n\nThe last week had been a bit awkward. Cheryl couldn't make up her mind whether she should be pissed at me, or to screw my brains out. Denise had called me at work twice to tell me what an incredible time she'd had, and we'd engaged in phone sex the second time. It was a good thing I had my own office, and had moved out of the cubicle farm a couple of years earlier.\n\nDenise was pressuring me to get us all together again, and if not all of us, then a one-on-one revisit wouldn't be so bad. Dave's job involved travel at least a week out of every month, and in her mind, she could hang out with Cheryl and I the next time that he had to leave town. It wasn't what I had in mind originally, and though the temptation was huge, I was really worried about what might happen between Cheryl and me if Denise got her way. Things were happening fast, and I was still astounded by the results of my initial foray into game design.\n\nWe were still working on getting together with Frank and Delara, but the schedules weren't helping. Dave and Frank both were traveling, and then Frank and Delara were going on a vacation for two weeks at the end of the month. We were still working on it.\n\nYoung Beth, on the other hand, I hadn't heard from in weeks. I guessed that she and Cheryl were staying in touch, and I suspected we'd see her before long. She had come over for at least one evening every week since she'd moved to town, for a free meal and so the girls could call their parents. \n\nDuring breakfast on Friday, Cheryl had a request.\n\n\"After work can you pick-up Beth? She's coming over for dinner, and spending the night.\" She looked at me expectantly, waiting, I thought, to see if I'd jump to any conclusions. She HAD promised that we would 'party' with Beth, during our last escapade with Dave and Denise, but I was just barely out of the dog-house, and wasn't about to press things.\n\n\"No problem. I should be able to break free by 5:00, we should be home before 6:00.\" I answered, between bites of oatmeal. (I know, I know, how boring.)\n\n\"And don't screw around, come straight home, alright?\" She pestered.\n\nOk, so I had a rep for taking my time on all errands. Heck, going to Lowes for a hinge might take an hour. I was assuming her warning not to screw around wasn't the carnal screwing I might be tempted into upon seeing her voluptuous little sister, but my typical dilly-dallying.\n\n\"Straight home, I promise.\" I even crossed my heart for her.\n\n\"Good.\" She had put her dishes in the dishwasher, and bestowed a kiss on me before heading out the door. \n\nI followed suit shortly after, but couldn't get the picture of the two sister's going down on me out of my head. I drove to work hard, but was proud of myself for not doing anything about it.\n\n* * *\n\nBeth lived in an all-girl dorm. Supposedly better for studying - less distractions. I'd only been there once before, but I did enjoy walking down the hall to her room, surrounded by the young girls all about. She lived on a freshman hall, and the place was pretty active; not surprising for 5:00pm on a Friday. I was passed by a girl in a towel, and nothing else, heading back from the showers. Passing another room, the door cracked, I saw a cute little brunette in her underwear primping in front of a mirror. Damn, I missed those days.\n\nBeth met me at her door, and threw herself into my arms, delivering a huge kiss that curled my toes. \n\n\"I've missed you.\" She told me with a smile, when I finally broke free. \n\n\"Ditto, beautiful.\" I told her smiling beyond my control. I had to look over her young, taut, curvaceous figure. Nothing like her statuesque, tall blond sister, who warmed my bed by night, and fed my fantasies by day.\n\n\"ANNE - YOU READY?\" She called out leaning past me down the hall. If you'd seen her figure you could forgive my casting another quick glance down to her full round, still virgin ass.\n\n\"Just a sec,\" I heard from further up the hall. The accent sounded distinctly southern.\n\n\"Who's Anne?\" I asked.\n\n\"My roommate. She's coming with us.\" She answered, before stepping forward and giving me a big hug, \"Damn, I really have missed you.\"\n\nMy hands caressed the back of her head, as I asked, \"And Cheryl knows about Anne coming over?\"\n\n\"Yep, I called her at work, and she said it was no problem. Anne has no family in the area, and is jealous of all the real meals I get to eat. Plus, I think it would be good for her to have a little getaway.\"\n\n\"Does she know about, you know...\" I asked, my hands having found their way down her back to cup her round, tight butt-cheeks.\n\n\"Know what?\" I heard a definitely southern accent dragging the 'what' out into two syllables. \n\nBeth pulled away, grabbed a small gym bag and tossed it to me. I nearly dropped it as I turned and let her roommate Anne slide past me into the room.\n\nAnne was a real cutie, with an impossible to ignore rack. She had big platinum blonde hair with dark roots. She was as short as Beth, but slender, except for those huge mounds on her chest. Sparkling brown eyes looked toward me, still waiting for an answer. \n\n\"She knows my sister is the best damn cook in our family, and her lasagna is a good bit better than the slop we get here,\" Beth answered for us, deflecting the question. I had to guess that meant she didn't know about our previous party actions.\n\nI was the porter, lugging their bags down to the truck, while the girls chatted. If they were roommates you'd figure that they'd have plenty of time to talk together, but they gabbed like they hadn't seen each other in ages. I sat back, only rarely dragged into the conversation, sulking just a bit. I had really hoped that Beth coming up meant a full bed for the night, but I didn't think that likely with Anne along.\n\nI was driving the F-150, and that meant the three of us were sitting in front. I didn't have one of those big four door trucks. My hip was pressed against Beth's and I could feel the warmth of her pressed against me.\n\nDamn it!\n\n* * * \n\nIt was a day for surprises. \n\nWhen we got home, I brought up the rear, carrying the bags again, and watching the two 18 year-old jean-encased butts precede me up the stairs. Anne was fun to watch, a little shorter than Beth, with a kind of odd figure. Narrow waist and small hips, flaring out to very large breasts on her skinny little frame. I'd have guessed they were fake, they were so large on such a tiny figure. I swear she looked like she was ready to tip over at any time. If it wasn't for the tits, I'd figure she couldn't weigh 100 pounds soaking wet.\n\nAs I entered the apartment, I was greeted at the door by my lovely live-in, and as I gave her a hug after dumping the bags by the door, I saw her clone in the kitchen, an apron wrapped around a form-fitting sheath dress, while she was working on some dish. Denise? That, I really hadn't expected.\n\nOver the home-made lasagna dinner, I got more of the story. Denise had dropped off Dave at the airport, and Cheryl suggested that she stop by for dinner, rather than dine alone. We were only fifteen minutes from the airport, and she'd have had to face rush-hour traffic to get home otherwise. \n\nThe only downside was that there wouldn't be much left-over lasagna, my favorite, with all these guests. Cheryl usually made enough for left-overs for a couple of days, and her lasagna was one of those dishes that was even better reheated. \n\nWe were just finishing up. I was helping with some of the dishes, while the coffee was made, and Beth and Anne were dumping their gear, which had never made it any further than the front door, in the guest room. I dried my hands and nodded to Denise who was waving the Bailey's over my coffee, offering to spike it. I took it to the living room and sat in my chair, relaxing after the feast, and enjoying the view.\n\n\"Why don't we play a game?\" Beth asked from the kitchen, foregoing the coffee for a beer from the fridge.\n\nI almost did a spit-take, and burned my lip on the hot coffee.\n\n\"Like what?\" Denise asked, pleasantly.\n\n\"Oh I don't know. Alex didn't you say you had some new game you wanted to try out?\" Beth replied, looking at me teasingly.\n\n\"I'm not sure if I even have it here,\" I said, wondering what she was thinking. Her sister was going to kill her. And probably me too.\n\nCheryl was gazing at her sister with a very strange look on her face. I was ready for the fireworks to go off. Denise was standing next to Cheryl, just watching the whole thing unfold.\n\n\"I guess we could play Trivial Pursuit,\" Beth answered slowly.\n\n\"We could play quarters,\" Anne offered. She was looking at Beth's beer, and I realized I had never offered her a drink.\n\n\"Anne, would you rather have a beer or a drink, instead of that coffee?\" I asked, trying to be the good host.\n\n\"I don't know. I really shouldn't drink much. I'm not all that good at holding my liquor,\" she answered with that sexy southern drawl. \"What do y'all have?\"\n\n\"Pretty well stocked bar, and a few types of beer in the fridge,\" I said.\n\n\"Why don't we have strawberry margaritas? I saw frozen strawberries in the freezer,\" Denise offered.\n\n\"That sounds nice,\" Anne answered, \"I guess one wouldn't hurt, please.\" \n\n\"I'll have one too,\" Cheryl chimed in.\n\nBeth got up from her seat and joined her sister and Denise in the kitchen, and they were speaking softly. I thought hostilities might be in order, but a couple of giggles and snorts allayed my fears.\n\n\"What are you studying?\" I asked Anne who was the only one in the living room with me. She was seated in the center of the couch, a few feet away, speaking in bursts between the loud grinding noise of the blender in the kitchen.\n\n\"Undeclared yet,\" she confessed. \"I'm not sure what I want to study. I was leaning toward sociology, but it's not a great field for jobs, and Daddy wants me to study Political Science, sort of the family trade.\"\n\n\"Family trade?\"\n\n\"He's a state senator. I've worked in politics since I was old enough to pass out a flier. But I'm kind of looking for a break.\" She leaned back in the couch, stretching, her arms reaching out across the back of the couch.\n\nShe was easy on the eyes, and her shirt was so tight it created a delightful little tug across the front. I could easily see the outline of her bra underneath it. I'd dated a lot, but never a girl with such large boobs, at least not in proportion to her body. \n\nI realized I was staring, and I looked up enough to catch her eyes. \n\n\"That was pretty good, really. Most guys would never have made it through dinner without getting lost down there for a bit.\" She teased, letting her eyes dip down to her own rack for just a second, giving a hint of a shimmy. \"Then again, I guess I have a lot of competition here.\"\n\nJust then a tall glass full of frozen margarita was placed in front of her, and I looked up to find Cheryl eyeing me.\n\nDamn! Damn, Damn, Damn.\n\n\"Why don't you go and see if maybe you do have that game you were talking about back there somewhere. I figure it's as good a time as any to give it a try. What did you say it was called?\" Cheryl asked me, a smirk on her face.\n\n\"Uh...\" I couldn't even speak. Was she serious?\n\n\"Incremental?\" Beth asked, once again pushing her favorite choice for the name of the game. \n\nI suddenly realized that I didn't even know if Beth was up-to-date about the last time the game was played, and the resulting revelation that I'd actually created it.\n\nDenise sat down on the far side of Anne, drink in hand. \"New game? What the heck, count me in. I've got nowhere I've got to be anytime soon.\" She crossed her legs, and my eyes were drawn to the gap between her thighs, where her mid-thigh dress ended.\n\nI got up and headed back to the bedroom to bring out \"The Game\". \n\nHot Damn!\n\n* * *\n\nGame Time\n\n---------\n\nI brought the shoe-box of pieces out and placed the spinner in the middle of the table. The girls were asking about the game, all three of the vixens acting as if they'd never heard of it before. I felt a little dastardly, like we were all ganging up on the little cutie seated between my live-in girlfriend, and my new 'occasional' girlfriend.\n\n\"It's pretty simple. The object of the game is to collect seven different colored 'Reward' cards for successfully completing a variety of challenges.\" I started explaining, showing the colors on the front of the Reward cards from the pile on my right.\n\nI held up the cards from the pile on my left. \"Each card in the 'Challenge' deck has a variety of challenges on them. Six to be precise. Before selecting your card, you choose which type you are going to do. \n\n\"The choices are: trivia question, a tough true/false, a 'word definition', charades, a 'Pictionary' type, and finally Potpourri. The challenge types are listed on the outermost edge of the spinner.\" I pointed out the choices on the spinner, as I passed around a few of the cards. I felt kind of silly giving cards to Cheryl, Denise and Beth, but was willing to play along.\n\n\"After picking your challenge type, you draw a card and find out what your actual challenge is. The answers to the questions are on the back of the card. The challenge cards are kept in this box, like Trivial Pursuit, so nobody can see the answers.\n\n\"Once the challenge is over, you pull a card from this pile, the Rewards. If you failed your challenge you have to perform the penalty on the card. The penalty may require you to spin the dial to select how it's done. If you pass the challenge, you get to keep the card. On the bottom of the card is a color. Collect all 7 different colors and win.\"\n\n\"There are a few little extras. There are some 'SPECIALS' in the deck. You can tell because it has a black border. It can be used to change how you play challenges and stuff. Everybody starts with one Special, a Chicken-out, that can be used instead of doing a challenge. When you draw a Special, you keep it and draw again.\"\n\n\"So it should be pretty simple. First, pick the type of challenge; the spinner has the six challenge types listed around the edge in case you forget. Draw a card from the 'Challenge' deck. Perform the challenge. Draw a 'Reward' card. If you failed the challenge perform the penalty on that card, otherwise you can collect the Reward Colors. Collect all 7 different colors and win.\" \n\n\"What if I don't want to do a challenge?\" Anne asked. Everybody's favorite question.\n\n\"Well, you have your Chicken-out, that will get you out once, and you might draw another one. Also, you can try for a second, hopefully better challenge, by chugging your drink, and answering a question from the little pile that has question marks on the back. If you still won't do the challenge you lose, and are out of the game.\" \n\nBeth was reading one of the cards I'd passed out. \"Mine says to do something for two minutes, do we have a timer?\"\n\nI opened the blue \"Crown Royal\" bag I was using to hold the rubber-banded decks, and pulled out a little wind-up egg timer - an improvement on the one-minute hourglass timer we'd been using. Too much maintenance remembering to flip it on two and three minute challenges. \"Yep, here we are.\"\n\n\"Sounds like fun to me,\" Denise offered, tossing the card she'd been looking at back into the pile. \"I'm ready for something different.\"\n\n\"Me too,\" Beth piped in, pulling the sample Reward cards into a neat pile.\n\n\"Why not,\" Anne finally answered, \"how bad can it be? If it gets too boring we can always try something else.\"\n\nBoring was not in the cards. At least not in THESE cards.\n\n* * *\n\nDeck 1:\n\n-------\n\nWe turned my chair so it was facing the couch across the coffee table, and added another chair from the dining room. Beth was perched on the chair to my left, while I was facing the three blonds on the couch. Cheryl was across from me, with Anne in the middle, and Denise to my far left, across from Beth.\n\nI spun the spinner dial to see who would go first, and realized I was getting hard already from the memory of what had happened the last time I'd played this game. Or should I say the previous times?\n\nWe started out smoothly, with everyone testing the different types of challenges, and going through a few silly dares and a bit of drinking, while we also gained a color or two. \n\nI recalled how Denise's had been a 'puppy' the first game, and smiled when Anne got her first 'active' challenge. She had to do 5 jumping jacks. She was game enough, and the girls teased her as her melons 'rose' to the occasion, bouncing up and down enough to hurt somebody.\n\nWe had our first 'declined' challenge shortly after. It was Beth surprisingly enough. A partner was supposed to feed her something from the refrigerator, while she was blindfolded. It could be anything. She wasn't feeling that adventurous. Beth chugged her drink, which was almost empty anyway, then answered the question \"Have you ever stolen anything worth more than $20?\" \n\n\"Nope.\" \n\n\"Beth!\" Cheryl interrupted.\n\n\"What?\" Beth replied cautiously.\n\n\"How about my clothing?\" Cheryl said firmly.\n\n\"That was borrowed.\" Beth said.\n\n\"Borrowed! I've never seen any of it again.\" Cheryl exclaimed.\n\n\"Ok. I stole my sister's hand-me-downs.\"\n\n\"Hand-me-downs? My new Christmas sweater was hardly a hand-me-down.\"\n\n\"Ok, ladies.\" I finally butted in, with some trepidation. \"Missing clothing. We get it. Let's move on.\"\n\nBeth's challenge was to do the \"Hokey Pokey\" and we found that her singing definitely left something to be desired.\n\nI got slammed by Denise on the next challenge. After her failed Pictionary attempt at drawing \"Lazy\", she had to describe someone using words that began with the letters of that person's name. She spun and landed on me.\n\n\"Let's see. Alex. A-L-E-X. A is for ...\" \n\nAt this point she got a lot of suggestions from the peanut-gallery. \"Arrogant\", \"Asshole\", \"Archaic\", \"Antagonistic\", \"Attitude.\"\n\n\"A is for Athletic, L is for Liar, E is for Egotistic, and X, X is for...\" she seemed stuck again.\n\n\"X-rated,\" Cheryl chuckled, and Denise laughed and repeated the suggestion \"X is for X-rated; or so we're lead to believe.\" \n\nOuch. The \"Liar\" and \"Egotistic\" hurt. I really was a pretty honest guy, or so I liked to think, but I guess I was still suffering the fallout from lying about the origins of the game.\n\nThere was a lot of joking, teasing and drinking going around, and at times I would almost forget where this was supposed to be going. Everyone still was eagerly tracking the rewards progress.\n\nI got the only even somewhat risque challenge for that first round. \"Go into the bathroom and come out with your underwear on the outside of your clothes. Wear them that way for the rest of the round.\"\n\nI came out a short while later with my boxers, on the outside of my Dockers, to hoots and catcalls. As soon as Cheryl answered her Trivia correctly, I was happy to go change back. \n\nFive people, four turns each, and the pile was dwindling. Denise had pulled one of the Specials, the Twin, which we explained allowed her to make someone else do her part if she was chosen to participate in a penalty. Nobody had used any of their \"Chicken-Outs\". Time to add the next decks.\n\n* * *\n\nDeck 2:\n\n-------\n\nI explained the concept of incrementally harder challenges and new rewards, and shuffled in the next set with a couple of new Specials. \n\nBeth and I got off easy with the next set of challenges, but Denise got the first new interesting one.\n\n\"Show us how you flirt by demonstrating on (any-spin)\". She spun and hit Beth. She didn't hesitate, and got up and stood next to her. \n\n\"Gee, Beth, you look nice tonight.\" She reached out and let her fingers caress Beth's arm a bit before tugging on her shirt, \"Is this new? I really like it.\" She was speaking softly, head canted a bit to one side. She stood very close, \"Are you enjoying the game? I know I am.\" I saw her lick her lips slightly, and then she picked up Beth's drink, \"What's this?\" She tasted it, her teasing tongue darting out, \"Mmm, that's nice but you better be careful. You don't want to get too drunk, someone might try to take advantage of you.\" She brushed her arm down Beth's arm, and now Beth was blushing. With the blush, I guess Denise figured she'd won. She turned, gave a small bow, and retook her seat.",
        "And just like that, I was fully hard. I shouldn't have worn dockers; they didn't do a thing to hide my new status.\n\nAnne was next, and she missed her word definition. Who knows what a 'Jodhpurs' is anyway? She decided she didn't want to demonstrate a severe constipation problem, so she did the chug & question. \"What is one talent most people here don't know that you have?\"\n\n\"I'm double jointed. I can do full Chinese splits, or even put my feet behind my head.\" She answered with a laugh, after finishing the dregs of her Margarita, not a great drink for chugging. \n\nDamn! Getting harder!\n\nHer new challenge was better. \"Give a foot massage to the first willing person to your left. 1 min.\" She looked to Cheryl who just kicked off her slippers, and smiled. It was a nice, simple, thorough foot massage, and I was feeling slightly envious again. The new timer showed its value, as the loud 'DING' indicated the end of the one-minute turn. Nobody had to keep a close eye on the timer now.\n\nI noted appreciatively that Cheryl left her slippers off. Thinking about later in the game, I looked her over and mentally counted her clothing items. T-shirt, sweat-pants, bra, panties. Four.\n\nCheryl passed her challenge, and bragged about getting her third color.\n\nOn my turn, I didn't make much of an effort on my Trivia question (which once again turned out to get picked almost 1/2 the time) and I got an interesting one. \"Give (any-spin) a hug.\" I landed on Denise and realized that because of the way we were sitting, Anne was the least likely to ever get chosen on a spin. Because nobody was sitting at the ends of the table, one end was split between me and Cheryl, while the other end was split between Denise and Beth. You had to point almost directly as Anne to select her. Too bad, I would have liked to have felt her chest pressed against mine. \n\nDenise was a nice alternative, and she stood up and went to my arms when I had to hug her. I held her warmly, not too tight, and she whispered in my ear, \"You might be getting REAL lucky tonight, huh?\"\n\nNow it was my turn to get a little red in the face.\n\n\"I can't imagine luckier than being with you, if it's in the cards,\" I told her.\n\nShe rolled her eyes at me as she pulled away.\n\nWhile I was standing, I offered to refill the drinks, and replaced the Margaritas with wine coolers for all but Beth, who stuck with Corona. I was still working on Guinness. The alcohol was starting to hit the girls, especially Anne and Beth. Anne was already giggly. \n\nBeth had to let someone pour a shot of drink in her mouth, while she laid in their lap. Anne won the honors, and did well, even using her finger tip to retrieve a few stray drops from the side of Beth's mouth, then licking that fingertip. \n\nWe went through a few made challenges, with Denise getting her fourth color, then Cheryl got the first kiss card. I knew there were 4 kissing cards in this deck. Two that said kiss the opposite sex (spin), one said kiss the opposite sex (choice) and one kiss any. She got the kiss opposite sex - your choice. It was a nice little kiss, almost chaste. \n\nI followed that immediately on my turn with the kiss opposite sex (spin). When I spun, I landed on Denise, just missing Anne. Anne actually spoke up, complaining that the spins never landed on her. Cheryl made the observation I had noticed earlier, that Anne's chance was much less because of the way we were seated. She suggested we just use the spinner sections.\n\nWhat a great idea. In order to make the spinner multi-purpose, it consisted of several concentric rings. The inner-most ring was split in half, white/black. The second ring from the middle was in thirds, Red/Blue/Green. The ring layers continued, divided in fourths, fifths, sixths, sevenths and eighths, as each ring got larger. Each ring was only about half an inch wide.\n\nCheryl pointed out that if we turned the spinner so that one of the fifths was centered in front of Anne, we'd all have our own section, and there'd be no question about who the spin landed on.\n\nWe agreed that I would spin again, and this time it landed on Beth. I knelt in front of her, while Denise pouted, and leaned in for my kiss. She gave me a warm one, with a little tongue. But it all went mostly unnoticed, since my back was to everyone else, and we didn't make it that long. Unnoticed, except for maybe the partner in my pants, who was definitely into this game.\n\nDenise was the next to fail a challenge, and she got the 'lap-shot' that Beth had hit earlier. She spun, and mine was the selected lap. My chair made the challenge too awkward, so I sat on the floor, and Denise stretched out carefully on the floor, her head in my lap. While we got comfortable, Cheryl retrieved some bottles from our bar, and insisted that Denise get a 'buttery nipple'. We poured a little butterscotch schnapps, and some Baileys in her mouth, which she accepted graciously.\n\nAnne failed her challenge, willingly I would have guessed, and drew a kiss card. The kiss (spin-any). \n\n\"Does it really mean, any?\" She asked shyly.\n\nI explained. \"The selections are \"choice\" where you choose, \"spin opposite\" where you spin for someone of the opposite sex, \"spin female\" or \"spin male\", where you spin for the sex listed, or \"spin any\" where you spin and everyone is game.\n\n\"Of course you don't have to,\" Beth spoke up. \"You could just chug and try for a new challenge, or even use your chicken-out.\"\n\nAnne looked thoughtful. \"No, I'll spin and take my chances.\" She leaned over, and once again I thought she might tip over, then gave the spinner a twirl. The pointer landed right on Cheryl, no doubt about it.\n\nCheryl, fingered her cards, pondering, I assumed, her own chicken-out, and then she put her cards down, and waited. Anne leaned in and gave her a short sweet kiss on her lips, and my blood pressure continued to soar. It only lasted a few seconds, but it was devastating to see Cheryl kissing this teen hottie.\n\nI got a 'play footsie for a round' dare, and ended up with Cheryl as my partner. I kicked off my shoes, and we rubbed our feet together. I thought it would be a pretty blase dare, but in front of everyone else, and with the undercurrents of our bad influence on the guest, and the possible direction the whole night was going, it was pretty hot.\n\nThe only other interesting dare was a back-rub that Denise had to give to Beth, another one of those 'any' spins.\n\nWe had a couple of interesting questions, on dares and on a declined dare, when Denise decided she didn't want to do a hula dance. \n\nDenise read her question aloud. \"Would you rather tongue kiss someone of the same sex (anyone, your choice) or kiss the most revolting person that you know, who is of the opposite sex?\"\n\n\"That's the stupidest question. I'd lip-lock any girl here, before I'd kiss a random guy, never mind a revolting one.\" She answered. \n\nCheryl had an interesting one as well. \"Describe your first slow dance.\"\n\n\"Oh God,\" she laughed. \"It was sixth grade, my first real boy-girl party. We were playing a stupid game, I can't remember what it was called, but the boys and girls paired up and slow-danced. I was with John Delaney. I was so jealous of Mary Thomas. She was with Bob Leyton and I was just crazy about him. The couples had to pass around an empty pop bottle, and when the music stopped, if you had the bottle, you had to kiss the person you were with. Then you changed partners and danced again. I remember I got to dance with Bob, and tried to hang onto the bottle on my turn, and Sheri said I was hogging it. I was so embarrassed.\"\n\nWe all laughed at her childhood memory, and play continued.\n\nThe liquor was going down easy, and the cards were slowly disappearing. When Denise observed our card stack was getting low, we took a much needed potty break, refilled a few drinks, and I shuffled in the cards that would escalate the game. I had to wonder, just how far Anne would go? She seemed to be taking everything in stride. \n\n* * * \n\nDeck 3\n\n------\n\nI had purposely waited until Cheryl had her turn before I reloaded the decks. I could at least ensure that a couple of us went before Anne had to draw a potentially game halting card. I had 30 new cards folded in, with several left from the previous round. Add another three 'specials' to that, to fill out our new deck.\n\nWith the third deck, the cards changed dramatically. After the last 'test play' it worked out that almost half of the cards involved removing an item of clothing in one way or another. There still was drinking of course, more kissing, and lots of opportunities for physical contact.\n\nI missed my Trivia question (what a surprise!) and I drew my card. \"Give someone of the opposite sex a hot back rub. Spin for who.\" Ok. I'll admit I cheated. I knew that card was a fairly tame entry into this part of the game, so I maneuvered to make it the first. \n\nSpinning, I landed on Denise. I got up to go to her, and she got off the couch, letting me take her place. Once I was seated, she sat on my legs and I massaged her easily and sexily. I would have liked to massage her skin directly, but she was still wearing a dress, so I had to be satisfied with rubbing her through the silky material. I was also feeling the closeness of Anne, who watched what was going on with unabashed interest.\n\nWhile I was giving Denise her massage, Beth started her turn. She drew her card, and read it aloud.\n\n\"Share a hot kiss with someone of the opposite sex. Someone (spin - ANY) kiss the back of your neck.\" She smiled, pulling the spinner over in front of her. \"That sounds like fun.\" She gave the spinner a twirl, and it landed on Anne.\n\nIf I had been worried about the new girl's involvement, I needn't have. As the DING sounded from the previous penalty, I extricated myself from behind Denise and stood to take Beth in my arms, bending down for my kiss, I could see Anne quickly climbing around the table not to be left out. I settled my lips over Beth's, her tongue quickly searching out mine. I kept my eyes open and looked into Anne's as she nibbled on Beth's neck, pulling her T-shirt to the side so she could work on her shoulder as well. Her head tucked in next to mine, the edge of her forehead pressing against mine, I saw her tiny tongue darting out and tasting her roommate's skin.\n\n\"TIME!\" \n\nThe voice dragged me out of my trance and I slowly pulled away, sad to go. I hadn't even heard the timer go off. Anne seemed just as reluctant.\n\nAs we sat down, Denise was already pulling her own card.\n\nThings settled down for a bit, with a couple of challenges completed by both Denise and Anne. Cheryl got off pretty easy with a dare to blow in somebody's ear. To my surprise, she leaned in to Anne, and nibbled her earlobe and teased her ear a bit. When it was over, her hand was casually resting on Anne's leg. Yowza.\n\nI didn't want to make it too obvious, and I actually completed a challenge myself. Then Beth started things rolling again. \"Remove an item of clothing from the player of your choice.\" The sweet young thing knelt before me and took my shoes off.\n\nDenise got another fun one, after botching her challenge. \"Whisper to (any-spin) what you have dreamed of doing to them.\" I wondered what would happen if her spin landed on Anne. She'd just met the girl, what could she have possibly dreamed? Instead her spin landed on Cheryl. She squeezed between Cheryl and Anne on the couch and spent what seemed like a pretty long time whispering to her. How I would have loved to have heard that one. She left Cheryl blushing.\n\nAnne made a brave attempt at her challenge, but failed to have anyone figure out \"Riding on a subway\" when she tried to act it out. She pulled a special, the Time Warp, which would let her adjust the time of a penalty, longer or shorter, then hit a fun one. \"Have someone of your choice take a drink, then remove one article of your clothing.\" \n\n\"Cheryl, you need a drink,\" she said, then reached down and slipped off her sandals. Again, I took a mental inventory of her clothing - jeans, shirt, bra and panties, 4 here as well.\n\nPoor Cheryl followed that one with \"Take a drink, and remove an item of clothing.\" As she read the card, I think she finally realized that she'd left her slippers off. She hadn't worn socks, so it was the first interesting item of clothing to be lost. She was wearing sweat-pants and a t-shirt, and one would have to go.\n\nShe finished her back-to-back drinks, stood and removed her shirt. Now we were getting somewhere.\n\nI looked around, noticing how the rest of the group was dressed. I still had on my pants and shirt, boxers and socks. No shoes, thanks to Beth. Now she was fully dressed, jeans, shirt, shoes and socks, and underwear. My hugs and kisses led me to believe she wasn't wearing a bra. Denise of course, was the wild card. She had on a dress, and pantyhose. It looked like panties and bra as well. \n\nOn my turn, I hit one that was a little over the top. \"You are the star of a short movie (2 min) on how to perform a sexy strip-tease. Remove 2 items you can put back on when you are done. (any-spin) is the Director, (opposite-spin) is the camera operator. Have fun!\" I was set to trade it in, but the heat I got from the girls made me go ahead with it.\n\n\"Fine.\" I finally grouched. \"But you guys are just mean!\" My spins landed on Cheryl as director, and young Anne as the camera operator.\n\nThey had to make a big deal about it, moving the table, re-seating Beth on the couch so that she and Denise could be my audience, and Cheryl moving to her \"Director's chair.\" \n\nAll the movement gave me some indication of just how drunk the girls were getting. Denise seemed the only sober one. Cheryl's drink penalties had now pulled her into a three-way tie with Beth and Anne, to see who could stumble, slur their words, and just wear a silly smile the best. \n\n\"Alright. First, give me those silly socks. You're not going to strip off those, and you'll just look silly with them on.\" I obediently passed them to her. \"Let's lose that shirt, Alex. Amateur Strip, Scene I, take 1,\" she barked out, \"Action!\"\n\nAnne positioned herself to my right front, and held my beer mug up like a camera, sighting through the end. It wasn't empty, and she ended up pouring bear down her front, which put the whole act on hold for a minute while we got things cleaned up. \n\nBeth took her back to my room to get a spare shirt, and I cleaned up the beer off the table, refilling my glass. Cheryl got a wild idea, and when Anne returned, embarrassed but none the worse for wear, Cheryl gave her our video camera to use. Denise had turned on the stereo, looking for an appropriate song. What had started as a stupid little dare was evolving into a big production.\n\nDamn!\n\nI don't know why I found it so embarrassing, but I did. In spite of my qualms, I did my best, while the girls on the couch whistled and called out to me to 'take it off'. Cheryl called out directions now and then, telling me to turn, or to slow down, and when I finally tossed the shirt to the side, she spoke up again, \"Now the pants, big boy.\" She was also giving Anne camera directions, moving her around a lot.\n\nI was blushing as I slipped the pants down, and was happy to see that the ordeal had left me only semi-hard, and I wasn't likely to pop out of my boxers. Anne circled me with her camera, and on Cheryl's direction 'zooming' in on my crotch, until the audience on the couch shouted \"Down in Front!\" I was hoping they were referring to Anne blocking the view, and not the fellow in my pants, who wasn't going to be going down any time soon.\n\nAfter an eternity, the timer expired and I quickly slipped my pants and shirt back on, while the girls giggled at my expense.\n\nBeth hit another \"Kiss (opposite-spin) deeply - have fun!\" card and almost leaped into my lap. While we shared another passionate kiss, Denise complained that Beth was getting all the good cards. \n\nIt was clear everyone was pretty drunk at this point, and most of us were not making very good attempts at completing our challenges. We were chewing through the Dare cards at a pretty good pace. Denise was stuck on five colors, Anne had four, and the rest of us were on three. Denise made another half-hearted attempt at a Trivia question, then pulled \"(opposite-spin) is going to fill your belly button with a drink. They will lick it dry when done.\"\n\nBeing the only guy in the game was keeping me busy.\n\nThen I realized - she was wearing a dress. There was only one way she was going to expose her belly-button. \n\nDenise took it in stride, and slipped her dress over her head, while Cheryl hit the kitchen. Her underwear were sexy as hell, matching red lace panties and bra, with the panties not much more than a thong. Only the panty-hose interfered with the nearly perfect view. Cheryl came back loaded for bear. She had Denise stretch out on the end-table, then placed a lemon slice between her lips, scattered some salt between her breasts, and filled her cute little belly-button with tequila.\n\nI took my shot, taking my time making sure that I left no stray salt grains behind. I then cleared out the gorgeous blonde's belly-button, finally settling my lips over hers to retrieve the lemon slice. \n\nI heard Beth whisper to Anne, \"Pretty wild game, huh?\"\n\nAnne answered, \"Oh my God, are you kidding me!\" She didn't seem in the least bit disappointed.\n\nAs Denise slipped her dress back on, she also took her pantyhose off. \"These damn things are driving me nuts,\" she laughed, tossing them to the side.\n\nAnne hit the jackpot on her dare. \"Remove at least 1 piece of clothing from (opposite-spin), and they will remove at least one from you. At the end of the turn you have to be wearing the same amount of items.\"\n\nIt was then that I realized I'd never put my socks back on. I was only wearing three things.\n\nAnne seemed to stagger a bit as she stood up, but she was slow and deliberate as she rubbed her hands all over my upper body, before slowly taking off my shirt. Two items left now.\n\nDamn! Anne was going to go from almost fully dressed down to her underwear in one turn!\n\nShe stood in front of me, waiting. Since she wasn't wearing socks, I started with her shirt, which after the beer fiasco, was actually my shirt. When I grasped the bottom of her t-shirt, she lifted her hands over her head. I slipped the shirt up over her massive breasts, and looked down to take in what I'd uncovered. She wore a simple white bra that was overflowing with her bounty. \n\n\"That's one,\" Beth said. \n\n\"That's all,\" Anne answered with a smile. \n\n\"No, you have to both be wearing the same amount of clothes.\"\n\n\"Well, he's wearing his pants and boxers.\" Anne replied.\n\n\"Yeah,\" I said.\n\n\"I'm down to two as well,\" she said teasingly, then opened up the top of her jeans, and gave us a flash of her pubic hair. \"I need to do laundry,\" she giggled. The damn girl didn't even have the decency to button up again afterwards.\n\nCheryl pulled her card. \"Whisper something to (opposite) that will make them blush.\" She sauntered over next to me, and rubbed her hands on my exposed chest.\n\n\"I want to see you fuck those huge jugs tonight.\" She whispered, while teasing my ear. \"I want Denise sitting on her face, and Beth licking her.\" \n\n\"That worked,\" Denise laughed, as I turned a couple of shades of red.\n\n\"What about you?\" I said softly.\n\n\"I'll be taking the pictures.\" \n\nAs she took her seat, I finished my beer, then went and got another, needing the breather. I asked around and topped off some drinks before I settled in again.\n\n* * *\n\nDeck 4:\n\n------\n\nAs I took my seat, Beth was shuffling the cards. \"The deck was getting kind of low, I thought we could use a few more.\" \n\nI don't know why I even made the effort, I gave the trivia question a throw-away answer.\n\nMy dare was a simple one. \"Kiss (opposite-spin) deeply, your hands may wander. 2 minutes.\"",
        "The spinner had barely stopped moving before Anne was out of her seat, and plopping herself in my lap. \"It's about time,\" she laughed tipsily. She dropped her time warp Special from early in the game onto the table. \"Double it.\"\n\nThen she leaned forward and whispered in my ear, \"Don't hold back.\" \n\nI stopped and reached for my own pile. \"Privacy: Move any challenge into the bedroom.\"\n\nI stood and took her hand in mine leading her to the bedroom. \"You've got four minutes,\" Denise called out. \n\nAs soon as I shut the door she was in my arms. Our kiss started out nice and easy, slowly developing into more. My hands caressed her back and sides, and as our kiss grew more heated, my hands grew more daring. Before long I was squeezing and massaging those incredible tits of hers, wanting to rip that damned bra off of her. She tugged me over to the bed and pushed me to sit down. Then she reached behind herself and unsnapped her bra, leaving it hanging loosely. I accepted the implicit invitation took her into my lap, and reached under the material, cupping her warm tit and squeezing her nipple. She moaned into my mouth and wiggled her hips against my lap. \n\nI rolled to the side, pulling her down with me. She followed easily, and my lips left hers, as I lifted her bra out of the way and tongued her nipple. My hand wandered down her belly, reaching between her legs, and cupping her tightly through her jeans.\n\n\"God, this is incredible,\" she said softly, pulling my head into her tit.\n\nThen she pushed me away, rolling me onto my back, and straddled my hips. \"How far does this whole thing go?\" She asked while she ground her hips down against my hard-on.\n\n\"Until you stop it.\" I told her, before leaning forward to suckle on one of her tits again.\n\n\"And Cheryl won't mind?\" she asked her hips still grinding away.\n\n\"She suggested it.\"\n\nThe teen hottie leaned down and covered my lips with her again. The kiss was wild and passionate.\n\nMy hands cupped her ass, squeezing, when I heard the damnable cry from outside the door. \"TIME!\"\n\nAnne slowly eased off of me, and stood, straightening herself out. Her bra remained loose, only partially covering her wonderful assets. I led her back into the living room, with Beth, our timekeeper, in tow.\n\nOnce at the table, Beth didn't even make the effort to pretend to play. She went straight for the Challenge card. \"Kiss and lick (female-spin)'s neck. Make her hot!\" She leaned over and gave it a spin. Right at her sister.\n\n\"Fun is fun,\" she laughed, drinking her drink. \"But I think I'll try again.\" She read the question she had to answer before going on. \"Have you ever slept with two (M:women)(W:men)?\"\n\nShe answered pretty quickly, \"Same night, yes; same time, not yet.\" \n\n\"You little slut!\" Anne teased.\n\n\"Hey, don't knock it 'til you've tried it,\" Beth argued.\n\n\"Oh, don't worry, I'm a slut too!\" Anne laughed.\n\nThat got a laugh from most of us, and another jump in my pants.\n\nBeth pulled her second card. \"Take (opposite) into a dark room, give them a tour of your body, leaving your clothing on. 3 min.\" She looked over at her sister, \"That Ok?\"\n\n\"It's what the card said, right?\" Cheryl answered.\n\nSo I took my girlfriend's teenage sister back to our bedroom.\n\nI closed the door behind us, and when I turned around Beth had lowered her pants and panties to her ankles.\n\n\"Technically, they're still on. See anything you'd like to tour?\" she asked, bending over from the waist and offering me her rear.\n\nI dropped to my knees and licked her slowly, wringing a shriek out of her. I only had time to taste her for a few seconds, I badly wanted to bury my cock back in that sweet young twat.\n\nI dropped my pants and pressed my hard cock against her once furry little lips. With a nudge and push I entered her, and finally breathed again.\n\n\"God, I love that feeling,\" she sighed, giving a little wiggle.\n\n\"You used to be a little furrier down there,\" I teased. \n\n\"I took Denise's advice,\" she answered.\n\n\"You should have taken her up on the offer to help,\" I told her.\n\nI held her hips and slowly fucked her with long slow strokes. I was in heaven. I didn't want to come, and even though I was really worked up, I figured I could probably last the two minutes we probably had left.\n\nIt was just a tease. I screwed her for the short amount of time we had, until I heard the knocking at the door. Regretfully I pulled out, and got dressed. But I was pretty certain I didn't have to worry. I'd be buried back in her steamy snatch before too long.\n\nDenise was at the door when we came out. \"I am so fucking jealous. Let's hurry and finish,\" she told us.\n\n\"Ditto,\" Beth answered.\n\nDenise made a beeline for the cards and pulled her dare card. The challenges were all but forgotten.\n\n\"(any-spin) has 1 minute to make you laugh. If you do remove an article of clothing, if not they drink. If you're already naked drink and draw again.\"\n\nHer spin landed on me. I just looked at her. \"Laugh.\"\n\nShe giggled, and then blushed. \"You bastard,\" she laughed, then slipped her dress off, sitting back down in her frilly undergarments. And no pantyhose now. Just two, wispy little items left. She looked incredible. My mind was almost short-circuiting. I wanted her. I wanted Beth. I wanted Anne. I wanted them all.\n\nShe handed Anne the dare cards, and she pulled off the top one. \"(any-spin) gets to spread chocolate syrup on your stomach. (opposite-spin) will lick it clean.\"\n\nThe spinner landed on Beth, while I fetched the chocolate syrup. I was glad we had some handy.\n\nWhen I returned from the kitchen, Anne was stretched out on the end-table. Beth took the bottle from my hands, and then hesitated. \"I wouldn't want to mess up your clothes,\" she said softly, then slid Anne's loose bra off of her arms, leaving her topless before us. Anne just smiled.\n\nBeth raised the syrup bottle high, and started painting little circles on Anne's stomach, which eventually made their way up to her breasts. Seeming to think about it a second she gave a strong squeeze on the bottle and painted her breasts in chocolate as well. \"Oops!\" she laughed. \n\n\"Beth!\" Anne cried out, \"That's cold!\" Then she reached down and using her fingertips made sure the chocolate syrup covered her nipples which became hard as rocks.\n\nI leaned over and started licking her clean, working my way up from her lower belly. I was only half-way done when I took a breather. \"That's a lot of chocolate. I could sure use some help.\" Then I started on my way up her near breast, quickly zeroing in on her nipple and sucking it deeply. A motion next to me got my attention, and I groaned as I watched Denise's talented tongue start up on the opposite breast. Then Beth was pushing me over, and cleaning up any remains I might have left on her belly.\n\n\"God, you guys are making me so fucking hot!\" Anne gasped, reaching out and pressing Denise's face firmly into her breast. \n\nIt must have taken us five minutes to get her really cleaned up. A wonderful, incredible, five minutes. At one point Denise and I had a tongue fight over who'd get access to Anne's sticky nipple. We shared it. Afterwards, Cheryl showed up with a moist kitchen towel, and she carefully wiped the teen heart-throb down, paying careful attention to those wondrous breasts.\n\nWhen Anne took her seat again, she didn't bother with the bra. Just jeans left. One item.\n\nCheryl pulled her card. \"Moon the others briefly. Women, you may choose to flash them instead.\" She just sat there for a second. \"Oh the hell with this, Beth, pass me the next deck of cards.\"\n\n* * *\n\nDeck 5:\n\n-------\n\nBeth, didn't hesitate, passing her the next deck. Cheryl gave them a quick shuffle, and then picked one. \n\n\"Rub two ice cubes on your exposed nipples until they are very hard. (opposite) and (female) will lick them warm again.\"\n\n\"Denise, I'll need your help with this one,\" she said with a smug grin, \"Beth, get me an ice cube, please.\" Then while Beth retreated to the kitchen, she took off her bra and stretched out on the table.\n\nWhen Beth returned, Cheryl just held her tits, \"Go ahead, Sissy, do the honors.\" Beth took the ice cube and rubbed them on her sisters nipples, back and forth, long after they were hard as diamonds. When the ice cube was all but gone, she popped the remnants in her mouth. \"She's ready.\"\n\nSo for the second time, Denise and I shared a delightful pair of tits, while our designated victim moaned her appreciation. Finally Beth dragged us away, passing me the deck.\n\nI pulled off the top card. \"Spin for a number from 1 to 6, you can remove that many items of clothing total from those present.\"\n\n\"Wow,\" Beth said softly.\n\nAs I gave the spinner a good spin, I heard Denise say, \"Come on six\".\n\nClose. I did get a five. \"The great equalizer.\" I said with a grin. I turned to Cheryl first, \"Please stand, dear.\" She stood before me. I eased her sweat-pants off, leaving her in her panties. I placed a small kiss at the junction of her legs before turning to her sister.\n\n\"That was one.\" Beth stood before me, and raised her hands so I could slip her shirt off. Sure enough. No bra. \"That's two.\" Then I knelt before her, and with a little work took off her tight jeans. \"And that's three.\" She stood before me in her panties and socks.\n\n\"Denise?\" I said softly, and she approached me. I reached around her and unsnapped her bra, exposing the last pair of covered breasts. \"Four.\"\n\n\"The next one should prove most interesting,\" I told them. \"I think I'll spin for it.\" They all leaned over to see where the spinner would land. It was close, between Anne and Denise, but it looked to be just slightly on Denise's side. \n\n\"Do you mind,\" I asked her, standing close.\n\n\"Don't make me beg,\" she answered huskily. \n\nI reached out and slowly slid the panties off of her, leaving her completely naked. Deliciously so.\n\nBeth took her card, her hand shaking slightly. \"Whisper to (opposite) what you want them to do to you now, in front of everyone. They must do it or drink. Repeat until someone is willing. 1 min.\"\n\nShe leaned over to me, not whispering at all. \"Lick me.\" Then she laid down on the table.\n\nThe hell with it. I was up for anything. I settled in between her legs, lowered her panties enough to get them loose in the crotch, then pulled them to the side. I peeked up to see Anne rubbing Beth's breast, and tweaking her nipple. I let my tongue trace Beth's smooth nether lips before I did my best to suck and lick her sweet young pussy for the full minute allotted while she moaned her appreciation. I hated hearing that little \"DING!\"\n\nThings had gotten awfully quiet. It had to be pretty obvious even to our new playmate, just where everything was going. Nobody was going to put on the brakes unless she did. I had warned her already, but this should have made it clear. I was going down on her roommate, my girlfriend's younger sister, in front of everybody. This was pretty brazen.\n\nDenise already had her card in her hand. \"You are to suck and kiss (any-spin)'s neck while rubbing them from behind. You may touch their entire body. One minute.\"\n\nThe spinner landed on Cheryl. Both girls stood up, and met in the middle of us all. Cheryl turned around, facing Anne, and flipped her long hair to the side, exposing her neck to her best friend. Denise scooted up behind her, and her lips pressed against that flawless skin, as her hands cupped my girlfriend's breasts. She squeezed and massaged them for most of the minute. Near the very end she let her hand wander below, and slid it inside Cheryl's panties. We watched as she reached lower and lower, until Cheryl gasped. Then she pulled out her hand, and teasingly sucked on her finger.\n\nAs the timer went off, Anne reached for the pile. She almost seemed hesitant. Things were definitely getting out of control. Cheryl and Denise settled down on each side of her again. They both were flushed. The entire couch looked unbelievable, three beautiful girls, one naked, two dressed only in panties. One I slept with every night. One I could sleep with anytime. The other? God willing, I'd be drilling within the hour.\n\nAnne's hand had stopped on top of the pile. She must have felt like a rabbit in a wolf's den. Everyone there was leaning over the table in anticipation, eager to eat this tasty morsel, who had entered the wrong cave. Was she even aware?\n\n\"Y'all play some pretty wild games,\" she laughed, her chest heaving. \"I've never done anything like this before.\"\n\nDenise leaned into her, putting her arm around Anne's shoulders. \"You don't have to do anything you don't want to, here, honey.\"\n\n\"It's not that I don't want to,\" Anne confessed. Then she leaned in and kissed Denise on the lips. \"It's just that I never really expected so many fantasies to become reality.\"\n\nCheryl's hand reached out and stopped Anne's before she could pull the card. \"What is your fantasy?\"\n\nAnne flushed. She looked around at all of us.\n\nDenise leaned in and kissed the teen's shoulder. \"No judgement here, what happens in the game, stays in the game.\"\n\n\"I want to be,\" she hesitated, closing her eyes. \"I want to be the center of it all. Hands and mouths all over me. Touching me, penetrating me, pleasuring me.\"\n\nCheryl looked at me and nodded. I pushed the table to the side and picked up Anne in my arms.\n\n\"What... what are you going to do with me?\" She asked, her eyes wide.\n\n\"Everything. Over and over again.\" I warned her, as her roommate led the way, opening the door to my bedroom. \"Until all your fantasies come true.\"\n\n* * * \n\nGame Over:\n\n----------\n\nAs I placed her on the bed, I looked around to see Cheryl and Beth removing their panties, joining Denise in her nakedness. I guess the game was officially over. I dropped my shorts, leaving the object of our attention as the only person wearing anything. She seemed so out-of-place, still dressed in her jeans, surrounded by four naked people.\n\nCheryl and Denise were crawling on the bed, bracketing the pretty platinum blonde, just as they had on the couch. They were talking to her softly, their hands wandering over her body, their lips touching her occasionally, about the shoulder, neck, cheek.\n\n\"I think I'm jealous,\" Beth told me softly as she sat on the edge of the bed, near the end, and pulled me over by my rod until I was in range of her talented little mouth.\n\n\"Me too.\" I laughed as I watched the two Amazons caressing the tiny teen's breasts, each in full control of one. Cheryl's lips were locked on Anne's, with Denise waiting patiently for her turn.\n\nBeth on the other hand, had her mouth put to excellent use, sucking my cock. I was a little concerned that I'd come too soon. I tried to put it out of my mind, but watching the action in the middle of the bed was too much. \n\n\"Beth, I'm going to come if you keep that up.\" I warned her softly, not wanting to distract the others.\n\nShe quickly pulled her mouth away, holding my cock. \"Where do you want to come? My mouth? Inside me? With her?\" She asked with a nod to the middle of the bed. She gave the head of my cock a little tweak, which eased the urge to come.\n\nI smiled. \"In you would be nice.\"\n\nShe eagerly spun around and leaned over the bed, \"All yours.\"\n\nLeaning over the bed, she reached up about as far as Anne's knees, which were still mostly together. She spread them enough to lean between them, her chest almost to Anne's shins, her mouth just above her roommate's knees. She held still while I rubbed my over excited cock between her legs, opening her up. Shaft in hand, I nudged the head between her lips, and entered her about halfway. God, I was a lucky man! With one small shove I was balls deep in my girlfriend's beautiful 18 year old sister, while I watched the ravishing of a pretty teen, by two of the sexiest women I knew.\n\nOnce I was pumping Beth, holding her hips firmly and sliding my cock in and out smoothly of her tight little twat, she reached her hands up and started tugging on Anne's tight jeans. Slowly they responded to the constant tugging, inching around her hips and ass, until they suddenly were free, and easily slid down her legs.\n\nBeth's actions were a little distracting, but watching Cheryl gnaw on Anne's huge tit, while Denise had her tongue half-way down the kid's throat was almost ready to put me over the edge again. Then Cheryl looked up at me and smiled, giving me a wave to come over and play. I suspected that I knew what she had in mind.\n\nI slid out of Beth, who didn't seem overly concerned with the loss. She was crawling between her roommate's legs, licking and kissing her smooth thighs along the way.\n\nCheryl whispered to Denise who got up and met me half-way around the bed.\n\n\"God, I feel so nasty and depraved,\" Denise confessed with a giggle.\n\n\"I wonder why?\" I asked, taking her in my arms and nuzzling her neck.\n\n\"At least I didn't invent the damn game, you horn dog.\" \n\n\"No, but you inspired it.\"\n\n\"Aw. That was sweet. I think I'll give you a treat for that,\" she told me before sliding down my body and going straight for my cock.\n\nShe gave me a few wonderful licks and sucks, then pulled back a bit. \"Whoa, this guy feels like he's ready to blow at any moment.\" She sucked me all the way down, then bobbed her head a few times over the crown, making me dizzy.\n\n\"Cheryl says you're going to fuck those titties. Guess I shouldn't interfere with that, but you owe me.\" She said with a smile.\n\n\"Should be interesting, playing with those, but you know I'll always find time for you.\"\n\n\"Big talk. You need to stop by sometime and back it up.\" She dug into the end table next to the bed, coming up with a couple of bottles of lube. Cheryl and I had experimented at one time with different types of lube, and we had a drawer with half-a-dozen bottles there. Denise remembered many of them from our last experience after the game. Denise was waving the WET, and ID Millennium. Both good stuff, but I thought the ID would be ideal here. It didn't get sticky, didn't taste bad, and lasted a long time. I nodded to her right hand, and she tossed the other bottle back.\n\nShe turned to Cheryl, who was still playing with those incredible orbs while watching Anne's reaction to having her roommate go down on her. It was nice to watch. Denise waved the bottle under Cheryl's face. \n\n\"Here, lube those babies up.\" She told her, and Cheryl took the bottle with a smile.\n\nA couple of spritzes from that bottle, and Anne's tits were slipperier than an eel.\n\nI straddled the young co-ed, just above her waist, and laid my steaming cock between those nearly perfect globes. So large, so smooth, so round. So real. Even lying on her back, as they settled to the sides, they were incredible.\n\nAnne looked down and smiled. She cupped her hands around her own tits, squeezing them together, as I slid forward within the slippery channel formed. My cock head peeked out the other side, and inched forward, before sliding it back where it completely disappeared in the valley of her tits. \n\nCheryl was whispering to her, and I found that Beth had retreated from her adventure and was watching with Denise, while I tit-fucked our new found friend.\n\nAnne was twisting her own nipples, and rolling her tits against each other while I stroked away, happy as a clam.\n\n\"This is so hot,\" she moaned, \"everyone watching while you fuck my tits.\" Then she leaned back, pulling on her nipples, and closing her eyes, almost panting.\n\nDenise had enough of the voyeurism, and wanted back in the game. She climbed on the bed, and straddled Anne's head, lowering her smooth pussy down onto the Freshman's open mouth. I watched in delight as her hips ground down onto Anne's face. Her back was to me, and only inches away. Anne was still doing the work of holding her tits together for me, so I was able to lean forward, wrapping my arms around Denise and squeezing her breasts while I fucked the mammoth pair below me.",
        "Then I felt movement behind me, and Beth was taking up residency between her roommate's legs again, sucking away at her with total abandon. I looked for Cheryl, and found her returning from the living room with our cameras in hand. What a slutty picture we must have made, just using the sweet young girl who'd wandered into our home, for our own enjoyment. I watched in amazement as she circled the bed, the same camera used for my strip-tease act, now taking in this amazing tit-fuck, while she gripped our digital still camera in her other hand.\n\nDenise turned to kiss me, and as our lips settled onto each other, tongues tangling, I felt the flash from the digital camera go off. I went off with it, cumming all over Anne's breasts and neck, and on the back of Denise's sweet ass.\n\nDenise quickly climbed off of Anne's face, and turned to help Cheryl clean up the mess I'd created. Even Beth climbed up Anne's body and all three girls were licking and sucking every inch of Anne that was exposed from just under her tits to her turned up little nose. It was a devastating sight, watching these three beauties gobble up my cum from the tiny teen's huge tits.\n\nI moved up to the headboard, and leaned back, straddling Anne's head, but higher now. I reached down and grabbed Denise by the back of the head, guiding her mouth to my soft, sticky cock. She went along willingly, licking and sucking for a bit before going back to sucking on Anne's delightful fun-bags. Cheryl tugged me forward a bit by the root, settling my balls directly above Anne's mouth, and as I lowered myself, I felt her tongue teasing and tickling me. Cheryl, on the other hand sucked me easily, a nice smooth steady stroke designed to put the full steel back into my half-mast cock.\n\nBeth scooted forward and took her turn licking my now almost fully hardened cock while Denise was still playing with our new teen toy. Cheryl had changed places and was behind Denise, using her tongue to clean up any evidence that might have accidentally strayed onto her back while I was bathing Anne in cum.\n\nI looked down at the open space between Anne's legs, and knew I'd found myself a home. I gingerly moved off the bed, trying to avoid pulling anyone's hair, or kicking someone. Moving to the opposite end of the bed, I climbed back aboard, planting myself between Anne's slender legs. I leaned in to taste her. She had a nicely trimmed light brown bush. Easily the most pubic hair in the room. Beth was almost completely shaved now, emulating Denise's lead, and Cheryl always had a very short bikini cut. Anne trimmed but hadn't cut way back. I opened her with my fingers, and let my tongue explore her moist cleft.\n\nI was only down there a few moments before the urge to fuck the little beauty overwhelmed me. I sat up and spread her legs wide, guiding the head of my cock into that tight little hole.\n\n\"Wait,\" Anne cried out before I entered her.\n\nThat got everyone's attention, and they all shifted in place. Looking up at her, the head of my cock nestled in her open lips, Beth was on my left, and had been kissing her roommate. Denise was on my right, having just given up control of Anne's nearest breast. Cheryl was cuddled up behind Denise, her body stretched the full length of her best friends. Her top hand was draped across Denise playing with her breast.\n\n\"Is something wrong?\" I asked, wondering what could be the problem.\n\n\"No, it's just that, well, I thought you should know... well, I'm a virgin,\" she said softly.\n\nFor just a second you could have heard a pin drop.\n\n\"A virgin,\", \"Are you kidding me?\", \"Oh come on,\" the statements flew fast and furious. \n\n\"No really. I mean we did a lot in high school. Everybody gave head, and I did a bunch of hand-jobs, and you can probably guess they were lining up to play with these girls,\" she said indicating her swollen mammaries. \"But there was a lot of pressure to be good from the parental units, you know, the whole 'public eye' thing, and I just never went all the way. I'm sure my cherry's long gone, my collection of vibrators has taken care of that, but I've never been with a man. Not like that.\"\n\nBeth leaned in and said softly, \"You never told me that; we've always talked about doing guys.\"\n\n\"I didn't want you to think I was a prude.\" She said. \n\nBeth chuckled, looking her over and raising her eyebrows. \"Nobody here thinks you're a prude.\"\n\nDenise crept in closer. \"If you don't want to, we don't have to do that. I'm sure Alex can find someone else willing to harbor that trouser monster of his.\"\n\n\"Oh NO!\" Anne cried out. \"I want it. I want it ALL. I just thought you should know.\"\n\nCheryl giggled. \"I bet it's been a while since you could say you had a virgin, huh Alex?\" \n\n\"Longer than I can remember,\" I confessed. \"But I'm willing to make the sacrifice.\"\n\n\"Oh, I bet you are,\" Denise chimed in as quick as a flash.\n\nBeth was lying down now, cuddling up to her roommate. \"You're going to love this,\" she told her.\n\nDenise turned her face and kissed the platinum tressed teenage hottie. \"We'll make sure he takes care of you right,\" she told her, reaching out and fondling her nearest breast. \"God, I still can't get over these things. You're sure they're real?\"\n\nAnne giggled. \"As real as they get.\"\n\nCheryl came to my side and scooted me over a bit. Then she took my cock in her mouth, and sucked me, getting me good and hard. When she was content with my state, she pulled away from me. She faced Denise. \"Lube him. Just in case.\" Then she settled down between Anne's legs, helping ensure she was good and ready.\n\n\"Oh GOD, that feels good,\" Anne moaned as Cheryl fingered and licked her. \n\nI, on the other hand, was being taken very good care of by my loving friend Denise, who had the lube out, and ensured I was thoroughly taken care of in that direction.\n\n\"He's good,\" she finally announced, her hand stroking me nicely.\n\nCheryl pulled away with a glistening smile, \"This one too.\"\n\nWith that she pulled away, leaving the space between the virgin's legs to me. Denise took up her position opposite Beth, and as I guided my cock between Anne's swollen lips, I looked over to see Cheryl zooming in with the camera on where my prick was about to take our new playmate.\n\nThe lube did it's job, and I was able to set the head in place and with one long, firm push, bury almost my entire cock inside the hottie, before I hit bottom. \n\n\"Oooh,\" she gasped, as I plundered her depths for the first time.\n\nI leaned over her, carefully placing my hands so they wouldn't hurt any of the three laying there. I lowered my face to hers. \"It is Ok?\" I asked.\n\n\"God, I feel so full,\" she gasped, wiggling just a bit below the hips.\n\n\"But it doesn't hurt, does it?\" I asked.\n\nI eased my cock out about halfway, then slid it back in.\n\n\"That Ok?\" I asked.\n\n\"More than Ok,\" she told me with a smile, presenting her lips for a kiss. Which I was more than happy to oblige her with.\n\nI gave her a few more short strokes, watching her reaction. She didn't seem the least bit uncomfortable, which encouraged me to give it a little more action. Long full strokes of my cock only seemed to make her happier, and all concerns for her ability to take what I was offering disappeared.\n\nDenise smiled. She leaned over and told Anne, \"I think he's really going to fuck you now,\" then her hand wandered down to feel where I was entering the teen.\n\nI tilted Anne's legs back, and my lovely female helpers each took hold of one. I took a grip of her thighs and started to really drive my cock deep into her. I could tell I was bottoming out occasionally, but it didn't seem to bother her like it did some. \n\n\"Is that uncomfortable?\" I asked after slowing down and pushing my cock in to it's fullest, bumping the back.\n\n\"God, no, it feels wild,\" she answered, and her heavy breathing seemed to confirm it. \n\nThat was great, the only other girl who I used to bottom out in regularly, was usually doggy style, and it made her uncomfortable, giving her cramps. This one had no issues at all with it.\n\nI fucked her fast and hard, while Denise and Beth played with her nipples. My nasty live-in, Cheryl, was wandering the room, capturing the entire deflowering on tape. I reached down and started rubbing Anne's swollen clit, while I hammered her tight pussy. I shifted a bit, and encouraged my assistants to pull Anne's legs farther down, to where she was almost broken in half, her shins by her ears. She seemed to have no problems with it, and I remembered her comments about being double-jointed.\n\nI lowered my hips and fucked upward more, looking to get her G-spot. When I felt her jump and groan, I knew I was on target, and long stroked her there, watching that tiny teen tense up for her first big cock-induced orgasm.\n\n\"Oh, that's good, that's good, that's good,\" she was muttering, breathing hard while I stroked that pussy. I rubbed her clit some more, and watched while Denise and Beth leaned over Anne's outstretched legs, and went to town on her swollen hard nipples.\n\n\"Shit. Shit, I'm going to come, shit, shit, I'm going to come,\" was my platinum blonde temptress' new mantra, which was the encouragement I was seeking to pick up the pace.\n\nCheryl leaned over my shoulder, capturing the shot straight down where my cock was disappearing into the young girl. \"Fuck her hard now, Alex.\"\n\nI obeyed willingly enough, still aiming up into that extra sensitive region, while my thumb was going crazy over her clit. She was crying out now, all kinds of filthy things blurting from her mouth, until she exploded over my cock, her body trembling, her tight 18 year old pussy clamping down on me like a fist. Her entire shoulders and breasts turned bright red as she came, and I eased up on her clit, not wanting to over sensitize her. I was nowhere near done with her.\n\nCheryl was filming her face now. \"She's so pretty when she comes.\"\n\nThe girls let her legs free, and they slowly came forward, until I held them while I slowly continued the screwing.\n\nShe was looking at me with something akin to worship in those eyes. I felt incredible. My already over-sized ego probably grew to double its size.\n\n\"My God, that was the most incredible feeling,\" she confessed, then I watched her eyes fill with tears, and she was tucking her head into Beth's shoulder while crying.\n\nDenise got up and hit me. \"You BASTARD. What did you do!\" I was half in shock.\n\nAnne sat up quickly pulling away from my still rampant hard-on. \"Oh no. Don't. He was great. I was so afraid it was going to be bad, I'd heard so many stories, but it was so incredible. So fucking incredible.\" She crawled to me and wrapped her arms around my body, hugging me tight. \"That was so wonderful, thank you.\"\n\nI pulled her chin up and kissed her on the lips. \"You were wonderful.\"\n\nDenise was suitably sorry for smacking me. \"Sorry about that. I guess I owe you one.\"\n\nLaughingly I took her into my arms, and kissed her deeply. \"You can never owe me one; I'm so far in your debt it's disgusting.\" Then I eased her to her back, and turned her in the bed, so her head was just below my cock. Then I turned to Beth, and with a nod to Anne, I told her \"time for a little different position for our cock novice.\"\n\nShe guided Anne over Denise's body, on her hands and knees, with her pussy poised over Denise's willing mouth, and open to my amorous attentions. Anne's face hovered over Denise's open crotch, and she dropped in willingly, her head bobbing delightfully over Denise's treasures.\n\nCheryl was right beside me. \"Don't you want to play?\" I asked her.\n\nShe whispered to me, \"I can't believe it but I am SO getting off on filming this. I already came once, can you believe it? I think I'll sit this one out, if it's Ok with you. I think three should be enough for you.\"\n\nI leaned over and gave her a kiss before returning to the task at hand.\n\nI guided my cock down to Denise's open mouth, letting her suck me a couple of times, before entering sweet Anne from behind. The fit was tight and delightful. It was a wonderful fuck, a steady stroking for many long minutes, broken up intermittently with a quick dip into Denise's hot willing mouth. Beth kept us company, stroking, touching, kissing the two girls beneath me. Then she got up on the bed, sitting between Denise's legs, and rubbed herself right in front of Anne. I watched her scoot down, and Anne suddenly had her choice of pussies to pleasure. Cheryl seemed to like that idea, and positioned herself there, capturing the shots of Anne working over first one, then the other of the two pussies offered up.\n\nTwice I watched Denise enter the throes of orgasm due to Anne's loving attention. Then Beth was coming on the end of Anne's tongue, and I was starting to wonder if I'd be able to hold out until Anne came. With Denise's mouth working over Anne where I entered her, it took a good long while but eventually I saw her riding that tide to her own peak once again. Beth crawled off the bed and came to watch where the action was. Our wandering camera woman followed her over. Beth leaned over Anne's round butt, kissing those porcelain ass cheeks, and squeezing them, massaging them with her hands.\n\n\"God, I'm there Alex, I'm there, fuck me, fuck me, FUCK ME!\" Anne cried out, slamming her hips backward into me. I held her hips and fucked her as hard as I could. Beth upped the ante by licking her finger and sliding it gently into Anne's tight ass.\n\n\"Oh FUCK!\" Anne cried out, and I could feel her whole body tremble as she came on my cock again. It was more than enough to put me over the edge. I'd been struggling to keep from coming, and now I let loose, slamming my cock into her and coming over and over again. \n\n\"Oh my god, my god, I can feel that. I can feel the heat where he's filling me. I can feel his cock throbbing inside me.\" Anne announced, gasping, while the naughty Beth continued to finger her ass and I vacated my balls deep, deep inside of our new playmate.\n\nAnne rolled onto her side, gasping. Denise gazed up at me, looking exhausted. She made an elaborate gesture of wiping her arm across her soaking wet mouth. Beth on the other hand was raring to go. She slipped down to her knees and went to work on my cock immediately, licking and sucking me clean. I jumped a bit, still sensitive after coming, but soon grew accustomed to her sweet mouth. I looked over to find Anne stretched out on the bed, and sweet Cheryl doing her best to clean up the creampie I'd left her, inside of that delightful 18 year-old recently virginal pussy.\n\nDenise got to her knees, and leaned into me.\n\n\"Are you done with the new girl? Gonna find time for your old friends?\" she asked in a teasing tone that was bordering on scolding.\n\n\"You should know me by now. I gotta get those quick ones out of the way. I'm gonna need some real stamina to take care of you two.\" I reached down with one hand and stroked pretty Beth's hair as she went down on me. The other hand slid down Denise's back and cupped her delightful ass.\n\n\"Oh really? And how exactly are you planning on taking care of us?\" Denise asked.\n\n\"To be honest, I've been having some very naughty thoughts about this one.\" I said, indicating the sweet brunette whose lips surrounded my cock. \"I'm thinking it's time to break in her back door, and was hoping you could help me.\"\n\n\"Help with Anne, help with Beth, I'm kind of feeling taken advantage of here, Alex.\" \n\n\"We break in Beth, and I'm yours from then on.\" I told her, pulling her over to give her a warm kiss.\n\n\"Hey, don't I get any say in this? It is my butt we're talking about!\" Beth griped.\n\n\"Nope,\" Denise said with a laugh. \"But if you don't want it, I'll take it.\"\n\nShe stood and came into my arms. \"I'm really kind of scared. It looked like you were killing this one last time,\" she said, with a nod to Denise.\n\n\"I'll be gentle with you. And we can stop anytime you want. I'm sure Denise will take over for you if there's any problems.\"\n\n\"Mmmhmm!\" Denise agreed.\n\n\"C'mon,\" I told the teen, tugging her down with me, \"let's just start with some old fashioned fun, and see where it goes.\" I laid back fully, my cock standing tall, encouraging the kid to take a ride.\n\nBeth couldn't find fault with that idea, and she mounted me, looking so good sitting there on my cock. She was an active cowgirl, and pumped herself thoroughly on my stiff meat.\n\nDenise cuddled up next to me. \"She's fun to watch, isn't she? A complete no-holds-barred fucking machine when she's on top.\"\n\nI giggled. \"She knows how to have fun, that's for sure.\"\n\n\"Hey! I'm right here. I can hear you guys.\" Beth reminded us as she turned sideways, trying a different position for kicks.\n\n\"Can I have a ride too?\" Denise asked softly. \"I'm going nuts here watching you stick that in everyone but me.\"\n\nI leaned over and kissed her, stretching the kiss out. \"I'd love to have you ride me a while.\" \n\nBeth in the meantime, was still bouncing away with wild abandon. I don't know how her legs could take it. I reached up for her, and pulled her down to my chest, so I could reach down, grab her hips, and fuck up into her for a bit, giving her a little rest.\n\n\"I love this feeling,\" she told me.\n\n\"Me too,\" I said. \"Let's let Denise have a turn.\"\n\n\"M'kay,\" she murmured contentedly, rolling off opposite Denise. I only then noticed that our other two participants were missing. \n\nI leaned up and looked around.\n\n\"Sounds like Cheryl's running a bath.\" Denise said. Then she got up and straddled me, slowly sinking my slippery cock into her wonderful slice.\n\nI watched as she closed her eyes, smiling, and ground her hips around in small circles, settling down even further. \"Mmmm,\" she moaned softly. Then she leaned over me, and started rocking back and forth. \"Finally,\" she muttered.\n\nBeth was clinging to me, cuddled in tight. \"What's it like?\" she said just barely above a whisper.\n\n\"You know,\" Denise said with a smile. \n\n\"Not that, I mean the other. In the back.\" She said.\n\n\"It's nice. I mean it's uncomfortable to start, and it feels odd, but it's a real power trip, to see how bad he wants it and how worked up he gets. And you feel so sexy - I mean dirty, nasty, just plain sex, sexy.\" Denise stop her rocking and leaned over to lick Beth's nipple. \"Like that. That's just naughty. I'm here with his cock in me, fresh off of coming out of you, and I can lean over and lick my best friend's little sister's tit.\" She laughed out loud. \"Just a few weeks ago I'd never done anything more than kiss another girl. Today I came on a girl's tongue twice, who I'd only met today. Sexy, naughty, crazy.\" She was rocking back and forth now, with a nice long stroke, doing a great job of fucking me.\n\n\"But what does it FEEL like,\" Beth asked, frustrated by the answer.\n\n\"It would be silly to try to explain it.\" Denise said. \"When you can feel it for yourself. I promise you, you'll love it. After tonight you'll dream about it.\"\n\n\"How can you know that?\" Beth asked.\n\n\"Because while his cock is in your tight little butt, I'm gonna make you come so many times you're going to beg for mercy.\" Denise said, as serious as can be.\n\nDenise climbed off of me then, and reached for the lube we'd gotten out earlier. \"Sweetie, I think it's time.\"\n\nI could almost feel the teen shudder against me.\n\n\"It's Ok. I'll make sure you're good and ready, and then we'll let you control the show.\" Denise told her. \"Now get back on top of him and keep him hard.\"\n\n\"Like that's going to be a problem,\" I laughed.\n\nBeth mounted me once again, then slowly leaned down, until her full body weight was on me. Her head was just below mine. I turned her chin up so I could kiss her.\n\nDenise got behind her, and starting greasing up my plaything.\n\n\"Oh! That feels weird,\" Beth whispered to me. \n\n\"What does.\" \n\n\"Her finger in me.\"\n\n\"Hurt?\"\n\n\"Not at all, it just slid in real easy. Oooh, another one!\" she gasped, giving a little wiggle.",
        "I lifted her hips a little with my hands, so I could fuck up into her just a bit while she was made ready.\n\n\"How's that,\" Denise asked.\n\n\"Wild.\" Beth admitted.\n\n\"Not scary?\"\n\n\"No, just kind of weird.\"\n\n\"And this,\" she asked.\n\nBeth groaned, \"God, that feels so nasty, your fingers in my butt, while he's doing that.\"\n\n\"Three fingers,\" Denise confirmed.\n\nI continued to screw sweet Beth, while Denise loosened up that virgin ass.\n\nBeth's breath was coming heavier, in little gasps. \"Oh fuck, that's wild,\" she moaned, and then she kissed me deeply, her tongue driving into my mouth. When I returned the favor, she moaned deeply.\n\n\"Sit up, sweetness,\" Denise said, \"it's time.\"\n\nBeth sat up and shifted her legs under herself, rising up and pulling off my cock. Denise slid her fingers out of the teens rear, \"Just a sec,\" she said, then applied more of that slippery stuff to my cock. \"Ok, go for it.\"\n\nBeth bit her bottom lip as she lined up the pole and the hole. I watched her slowly ease down, and felt just a momentary pressure as I passed her tight anal ring, then she slid down my cock, easily taking most of it in one smooth motion.\n\n\"Oh my God. I can feel all of it, so fat and hard.\" Beth gasped. Then I watched as she leaned over, put her hands on my chest, then raised and lowered her hips a few inches at a time, fucking herself. \n\n\"Ok?\" Denise asked.\n\nBeth groaned, \"It feels like it's too much, so much, stretching me.\"\n\nDenise was running her hands across Beth's smooth ass, \"Take your time.\"\n\nBut Beth was Beth. And on top, she was crazy aggressive, even now. I watched in amazement as she forced herself further and further down my shaft, taking longer strokes, determined. She was grunting, then she pulled about halfway up, closed her eyes, and pushed down hard, sinking all the way down with a moan. \"Fuck!\" she groaned, sitting there, full.\n\n\"God you're tight,\" I told her, feeling her crush my cock.\n\n\"And you're fucking huge in my ass,\" she murmured, and then smiled.\n\nShe raised up again, and Denise leaned in and applied another squirt of lube to my cock. \"That should be enough,\" she said, getting up and putting the lube back on the end table. As Beth reamed herself a couple of more times, Denise took up position between my legs again. She leaned into Beth, her hands wrapping around and holding the teen's full breasts. \"Turn around and face me, sweetie.\"\n\nBeth lifted all the way up and off of me, then turned and face the gorgeous blonde. I held my cock for her as she once again settled onto it.\n\n\"Take it all, as far as it will go,\" Denise told her, moving forward on her knees, until she was face to face with the teen, their breasts touching.\n\nBeth did as told, squirming a bit to get every last bit of my cock buried in her ass.\n\n\"Good, now lay back,\" she ordered, giving a push. I reached up and took Beth's weight as I lowered her onto my chest. She was fully reclined. I reached around and took her sweet tits into my hands. We both watched as Denise leaned over and started keeping her promise.\n\nI could see almost nothing, but I could feel it all, as Denise used her mouth to get Beth off. The first orgasm only took a couple of minutes to achieve, and I felt the shock of it around my cock. I was trying to work my hips enough to get a little motion in her sweet, tight butt, but I was limited in what I could achieve. Denise didn't let up, however, and within a few more minutes she had Beth crying out again. I was loving the feeling, playing with her hard little nipples, and chewing on her neck and ears, as my cock quivered in her ass while she came on Denise's talented tongue. After the second orgasm, Denise allowed her to relax a bit.\n\n\"Now for the real thing,\" Denise announced, \"roll over.\"\n\nWe tried to roll together, but that wasn't happening. Beth rolled away, my cock slowly easing out of her butt. Then Denise was getting back in the game, getting Beth on her hands and knees, while Denise laid beneath her in the classic 69.\n\nWith the girls in place, I got behind my favorite teen, and spread her cheeks. Looking down into Denise's pretty eyes, I eased my cock head up to Beth's ass, and pushed. Again, I slid in without too much difficulty.\n\n\"Slow,\" Denise said.\n\nI slowly worked my cock into her, inch my inch, each stroke gaining a little more ground.\n\n\"It feels tighter this way,\" Beth said softly.\n\n\"It's Ok?\" Denise asked.\n\n\"It's great.\" \n\nThat's what I wanted to hear. With just a few more strokes I was finally completely buried. \"That's it,\" I announced.\n\n\"God, I wish Cheryl could see this,\" Beth said.\n\n\"She will, if not now, soon,\" Denise said. Then she reached up and tapped my leg. \"Bring her down.\"\n\nI tugged Beth's hips back, bringing her lower to the bed, as I spread my own knees further apart to stay at the level. Then Denise tapped me again, and I stopped. I could feel the immediate change in Beth as once again Denise applied her magic.\n\n\"Oh, that's so nice,\" Beth moaned, then I watched her lean down, her face lowering, returning the favor.\n\nFor me, it was time for action. I started my fucking again, looking to make some progress toward filling her ass. The changes, lack of motion, and tightness had really kept me from getting overly excited, even at the prospect of fucking my girlfriend's teenage sister's virgin ass. But now I was back in control, and within a few strokes knew that I'd have to be careful to pace myself, or I'd blow right away.\n\nI held those sweet pale cheeks, spreading her wide, so I could watch the spectacle of my rock hard cock splitting her open. Her ass clung to me on each out stroke, even with all the lube we'd used. But she was becoming less tight, and the going was easier.\n\n\"Beth, I've got to tell you, you've got the sweetest little ass,\" I gasped as I fucked her harder.\n\nShe pulled her head up, \"Fuck it, fuck it hard, fuck my ass Alex, fuck my dirty little ass.\"\n\nI raised up a bit, fucking down a little more, and getting enough leverage so I could fuck her with longer, full strokes. She was moaning constantly, and I could feel her grinding her pussy down onto Denise's generous and willing mouth. It only took a few more minutes for her butt-hole to completely relax. I could pull out and see her gape open for a few seconds before slowly closing. What an incredible view.\n\nThe enjoyment was threefold. The feeling of penetrating her tight, virgin ass. The view of my thickly swollen cock stretching her wide as I pierced her over and over again. The knowledge that I was fucking the living daylights out of my girlfriend's little sister, while the incredible Denise licked her satiny smooth twat. \n\nIf that wasn't enough, I watched as my girlfriend brought my recent conquest back into the room, and they sat on the bed and cuddled as I plundered her sister's tight little butt. It was only a few moments later that, Cheryl got off her rear and started in with the camera work. \"Beth's first anal, courtesy of the insatiable Alex,\" she dictated for the camera.\n\nI heard Beth crying out as Denise once again took her to the heights, while I pumped her tight ass like there was no tomorrow. I wanted to bathe her bowels with my cum while she reached her peak. I wanted to make her cum for me with my cock buried in her ass, in front of her sister and roommate. I squeezed those beautiful, full butt-cheeks while I long stroked her asshole.\n\n\"I'm going to come in your ass, Beth,\" I told her. \"I'm going to come in your sweet, young, virgin ass.\"\n\n\"Yes, yes,\" she cried out, \"fill my dirty ass.\" \n\n\"Do it,\" Cheryl added, bringing her camera in for a close-up of her sister's first ass-reaming.\n\nI wanted so badly to hold out until she came again, but it was too much. It all felt too good. I looked over to see Anne watching me intently. I locked my eyes on hers, smiling. I never let my eyes wander as I finally was able to hold back no longer. I slammed into Beth and shot off like a rocket. It felt like my cum would come out the other end, I shot so hard. As I pumped her full of my cum, she finally reached her own orgasm, crying out as she quivered in pleasure.\n\n\"It's about time you nailed that ass,\" Cheryl laughed, reaching out to smack her sister's bubbly butt.\n\n\"Christ, I've never felt so FUCKED!\" Beth moaned, rolling onto her back gasping. I watched as her hands slid under her butt, caressing her well used rear. \n\n\"Welcome to the club,\" Denise teased. Then she turned to me, \"You. How about you go in and clean up a bit before I finally get to try that thing on for size.\"\n\nAll this time, Cheryl was rolling her dear sister onto her belly, checking out her abused hole. \"Poor baby, should I kiss it and make it feel better?\" She leaned in and dragged her tongue across Beth's reddened rear opening. \n\n\"Oh God, sis, that was so wild,\" Beth sighed.\n\nCheryl's only response was to spread Beth's legs and bury her tongue in her sister's butt. \n\nI headed to the bathroom for a quick cleanup. A clean cock is a happy, well-used cock. The door creaked closed behind me as Anne, precious, beautiful, naked Anne, joined me in the restroom. \n\nI turned to her, my hand still rubbing the warm facecloth across my tender prick. \n\nShe came to me, slowly, then wrapped her arms around me and pressed her head against my chest. I reached down and held her, while she clung to me. \n\n\"That was so nice,\" Anne said softly. \"Thank you.\"\n\n\"It was amazing,\" I told her, \"I hope we can do it again some time.\"\n\n\"Tonight?\" she asked.\n\n\"I think I owe Denise a little attention,\" I told her, \"but I hope you're spending the night. I'd love to see you riding my cock in the daylight. I'm dying to see those amazing tits in action while you ride me into oblivion.\"\n\n\"Gee, Alex, you say the sweetest things,\" she giggled. \"You can bet I'll be staying until your generous roomy kicks me out.\" \n\nShe dropped to her knees, her eyes locked on mine, as she grasped my cock. \"I think I better check your cleaning job.\" She took my flaccid cock in her mouth, her tongue, lips and perfect teeth urging me back to hardness.\n\nWhat a wonderful evening. I had taken this teen beauty's virginity within the hour, butt-fucked her roommate, and was about to plug every hole in the gorgeous Denise. And the incredibly sexy Anne was sucking me wonderfully, preparing me for my upcoming bout.\n\nEven fully hard, I let her continue her actions, enjoying the benefit of her expertise. She was good, not in the league of Cheryl or Denise, but damned good.\n\nI was a little disappointed to see her pull back and stand up. \n\n\"I'm dying to feel that inside me again,\" she confessed.\n\n\"A little taste wouldn't hurt,\" I told her. I turned her around and bent her over at the waist. She spread her legs wider and rested her hands on the closed toilet seat. I rubbed my cock up against her warm slash. With a nudge I entered her. She sighed as I pushed deeper. \"Oh God, that's good.\"\n\nGrabbing her hips I fucked her for a few seconds, just a tease. It was delightful, looking down on her, and I was tempted to pick her up and take her back into the room to fuck her pretty little brains out, but I had other fish to fry. I pulled out of her, and turned her back around. I held my cock out for her to devour again, leaving me clean as a whistle for dear, deserving Denise.\n\nBack in the bedroom, the fabulous Denise was waiting for me. Beth looked to be resting, watching while Cheryl and Denise were intertwined, arms wrapped around each other, legs scissored together. They didn't take long to detect my presence. Cheryl rolled over onto her back, pulling Denise with her. Denise puller her legs in, raising her ass up, beckoning me.\n\nI entered her from behind, while she and Cheryl continued for a bit longer, then Cheryl pulled away and went after young Anne, while I worked over her best friend.\n\nDenise was a fuck-fest. God, I loved doing her. While the other two, then three played together, giving me an incredible amount of eye candy and inspiration, I did my best to satisfy the nearly insatiable beauty. \n\nFucking Denise was a joy. I screwed her forever, in every position, from every angle. I used her mouth aggressively and banged her sweet pussy for all I was worth. I never tired of sliding my cock in and out of her, and she responded so wonderfully. \n\nI was enthralled with how deeply Cheryl was getting into playing with Anne and her sister. It was more than I had ever expected, and incredibly sexy to watch. A couple of times, I had to take a break from working Denise over to poke an opening in one of the threesome, but just for fun. Never for too long, not long enough to let Denise cool down. \n\nIn the end, I finished her from behind, while she laid there, well used and relaxed, satiated for the moment. I held her by those sweet hips, watching her sweet ass-cheeks, and perfect back. I looked over at the spent and worn-out girls scattered across my bed, and finally achieved my release within the warmth of my long-time fantasy girl.\n\nI collapsed in exhaustion, reaching my arm around Denise and pulling her close. I closed my eyes and wondered what the morning would bring.\n\n---\n\nI awoke to the urgent need to pee, and untangled my legs from the bodies around me, blindly making for the bathroom. With that taken care of, I decided to survey the damage, but it looked like my little soldier had survived the onslaught none the worse for wear, although a little tender.\n\nLight was coming in the windows, just barely. Must have been right around dawn. I cleaned up a bit and decided to head into the kitchen to make some coffee for anybody who wanted some. That plan kind of fell short.\n\nWalking by the guest room, I peeked in to find Beth and Anne sprawled naked on the bed, tangled in a single sheet. I went in with only the noblest of intentions, looking to cover them up. Things went Ok with Beth, as I extracted her arms and legs from the mussed sheets and got her covered. She rolled over and settled back into slumber. \n\nIt was on the other side of the bed that I fell victim to circumstances. As I loosened the sheets from Anne, she rolled onto her back, cracked her eyes open and smiled at me. Then she scooted over, making room for me. I held the sheet up, looking down on her incredibly sexy body, while her hand slid across the sheet next to her in invitation. \n\nI'm just a man, with a man's normal weaknesses. I slid into the bed next to her letting my hands wander her delicious taut teen body. I reached between her legs, careful to be gentle. She'd been licked, poked and rubbed continuously for hours, I could only imagine how tender she must be. My fingers slowly, cautiously opened her up, gently parting the sticky hairs, caressing her lips, teasing her open. She parted her legs wider, throwing the near leg over my hip, presenting herself to me. All the play had restored the iron to my rod, and I adjusted myself in the bed, sliding my hips down, until my cock was in position. I entered her with care, slowly working my way in, until I was fully sheathed. Heaven. She twisted her upper torso toward me, and purred in delight while I gently fucked her. I was able to play with her beautiful boobs, teasing her hardened nipples, while I slid in and out of her with a comfortable ease.\n\n\"Good morning to you, too,\" she said with a smile, turning to me for a kiss. My lips had only just left hers, when she pulled off of me. Then she was crawling on top of me, settling over my staff, until I was once more buried in her personal slice of heaven. She slowly bounced up and down, her massive tits moving in counterpoint. It was utterly mesmerizing. I reached up to take them in my hands, feeling their weight, twisting the nipples as she rode me carefully, trying to avoid disturbing our sleeping bed partner too much.\n\n\"It this what you wanted to see?\" She asked with a sleepy smile. \n\n\"Incredible,\" I told her.\n\n\"Mmmm, thanks.\"\n\nThen she yawned hugely, stretching her arms out. She looked so petite, perched on my cock, and so young. \n\nSlowly she eased herself down to my chest. She stretched out across my body, her tight little twat stuffed full of my throbbing cock. She cuddled in tight, wrapping her arms around me. I reached down for the sheet and covered us both, holding this delightful little angel in my arms as she slowly descended back into sleep, content to be had.\n\nI reached down, holding her sweet, tight ass in my hands, as I screwed her. Between my hands moving her back and forth, and my hips driving in and out, I was able to put nearly half my length to use. She was only half-asleep, moaning and sighing occasionally, but utterly relaxed other than that. I closed my eyes, settled back, and developed a slow rhythm while I used her. I would rest every few minutes, letting my cock desensitize, fondling her soft smooth body. Then I would start up again, enjoying the feeling of tightness. I wondered if she'd dry up on me, but it never happened, she stayed moist and open, and incredibly hot.\n\nMy need to come snuck up on me, and all of a sudden I was just a few quick strokes from my release. I grabbed her butt-cheeks firmly and pounded into her with a series of firm, deep thrusts. Her head suddenly reared back, her eyes wide open, as she popped out of her sleep to feel me cumming deep inside her. She looked scared for a second, lost, and then her eyes focused and a smile slid back onto her face. She tilted her face back in an invitation to kiss her. I responded gently, while my cock twitched within her, doing it's best to complete it's mission, depositing as much cum as deep as possible inside the tiny co-ed.\n\nI felt her pussy throbbing around my cock, pulsing, as I enveloped her in my arms, my cock fighting to stay hard. I kissed the top of her head, settled into the bed, and adjusted the covers around us once again. I nudged my cock back and forth within her. If I could keep it semi-hard, I could stay inside her. Caressing her sweet little butt, and sliding my hands across her soft skin helped, and then I felt her pussy once again massaging my cock. It was perfect, I was no longer getting soft, but getting firmer again, able to pull out just a little further, and push in a little deeper. Back and forth concentrating on how deep I could get.\n\nI was sliding in and out of sleep. When I was aware enough, I'd push my cock into her, reveling in the feeling. Then I'd find myself calming, slowing, and resting while holding her against me. I awoke to find myself fucking her again, holding her tight, while my cock penetrated her eagerly. Then I slowly relaxed once more, and fell deeply to sleep, my cock still buried in my new plaything.\n\n---\n\nBeth was a breakfast treat. We were alone in bed, and a little early cuddling lead to an easy screwing. I made the mistake of fondling her ass a little too intimately, and she let me know that particular aperture was off limits for the near future. Which was fine by me, my cock was a little too tender for that kind of energetic action.\n\nBrunch was interesting. Denise had left early, and eating a meal with three gorgeous girls dressed only in t-shirts was a great start to the day. All the girls wanted to do was discuss last night's evening activity, and it wasn't long before the co-eds both found out that I was the author of our new favorite game.\n\n\"Can we play again some time?\" Anne asked.\n\n\"I don't know if I can survive odds like last night again,\" I advised my conquests.\n\n\"I think Dave deserves some play-time as well,\" Cheryl pointed out. \"The least we can do after his letting Denise play along.\"\n\n\"Maybe a campus game?\" Beth offered. \"I can think of a few young men who'd kill to play along. You should come down sis, maybe even give studly a break.\"\n\n\"Now that's just mean!\" I interjected.\n\nCheryl laughed. She reached out and caressed Anne's cheek. \"Don't worry sweetness. We'll play again some time. And I'll see if we can't even out the odds. I think you'd be beautiful skewered.\"",
        "\"Oh! I better get a towel to sit on if you're going to talk like that.\" Anne laughed.\n\n\"Why don't you two get better acquainted?\" Beth told her roomy, then glancing over at me. \"I think sis and I are going to clean up then do a little shopping.\"\n\n\"I can leave you two alone, can't I?\" Cheryl teased. \"I'm sure I can count on you both to misbehave.\"\n\nAnne wiggled in her seat. \"Mmmm. You guys are too good to me.\"\n\nBeth got up and leaned over her from behind, giving her a kiss on the cheek. \"Get your fill, Annie, it could be a while before your next.\" \n\nWith my girlfriend's blessing, Anne and I played around with the game, discussing tweaks and new challenges appropriate to games with uneven odds, and came up with some ideas for special \"Booster\" decks that would cater to unbalanced groups. She even made suggestions about player challenges for those who might prefer more same-sex interaction - more \"Booster\" packs.\n\nWhen the sisters finally left, Anne and I didn't waste much time retiring back to my bedroom. We whiled away a few delightful hours and by the time we retired to the shower, I knew every inch of her young body like the back of my hand. And every inch of her magnificent chest even better.\n\nThe sisters showed up a short while later, and I was given directions to take the co-eds home, but no lingering. I didn't have the strength to argue or linger. \n\nBy the time I got home again, I was ready for rest, but Cheryl had other ideas. She met me dressed in new lingerie, part of the day's shopping, I'd guess. She led me into our bedroom where she had the videos from the previous evening setup for review.\n\nWe spent the next few hours in a variety of positions that would allow her to watch the TV while either reminiscing on our recent randiness, or proposing further acts of debauchery and wildness with either old friends, or friends yet to be discovered.\n\nShe spent nearly half that time with my cock in her mouth, whenever she was content to just watch. When she wanted to talk, she'd typically just get up and mount me, or present herself on her hands and knees for another bout of doggy style.\n\nIt was delicious and wild, especially watching the working over we gave Anne. Cheryl seemed to enjoy her sister's anal deflowering an awful lot, but then again so did I, both then, and in review.\n\nAny concerns I had with Cheryl's willingness to continue to play this game were well put to rest long before I was.\n\n-----------------------\n\nI hope you enjoyed this chapter. Let's see if the next chapter doesn't even up the odds, and then some. And as always - all votes and comments are welcomed and even treasured!"
    ],
    "authorname": "Tx Tall Tales",
    "tags": [
        "game",
        "fffm",
        "18-year-old",
        "sis-in-law",
        "anal",
        "oral",
        "dares"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-perfect-game-ch-03"
}