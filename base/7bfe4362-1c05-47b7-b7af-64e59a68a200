{
    "title": "Wheels In Motion Ch. 04",
    "pages": [
        "*** This series was awarded the Most Literary/Genre Transcending award in the 2020 Reader's Choice Awards. Thank you to all my readers and all who voted. ***\n\nHello again friend, and welcome to Chapter Four of my Wheels In Motion series.\n\nIf you haven't read chapters One through Three, you are going to be very confused. Really friend, I don't want you to get a headache from the furrowed brows you'll be sporting trying to understand what's going on. So, do yourself a favor and read those first.\n\nIf you haven't read Chapters One and Two of 'Twas the Night Before... then you won't get what's going on in the first scene here, but it's not a deal breaker. More like... skipping the cheese on your cheeseburger or the vanilla ice cream with your apple pie. You can still eat it, but it won't be as good, so why would you do that?\n\nAs always, thank you to my ArmyGal33 for her beta-reading and letting me bounce ideas off her, and AwkwardMD, for her outstanding editing work. I look so much smarter with her help.\n\n~~ Foggy Bottom, Washington, DC, May ~~\n\nLIZ\n\n\"So that's it, that's my story,\" Kat said. She picked up her margarita and gulped down the last of it, her third of the night. She caught our waitress's eye and held up her empty glass.\n\n\"I can't believe you wouldn't want to tell that story to anyone who would listen,\" I said, \"Why does it embarrass you so much?\"\n\n\"Because I hurt Megan, pretty badly, and for no other reason than my own ingrained prejudices. Thinking of myself as gay made me uncomfortable, even though I was completely in love with her and totally, one hundred percent, into her body. I let my own fear shove her away from me when I needed her support the most. I thought that me being with her gave Amanda a legitimate reason to take Cait away from me. In hindsight I see that was bullshit. Thank god she gave me a second chance. I could have deprived my daughter of the best parental-figure I could have asked for.\"\n\nI rolled my empty beer glass between my hands, thinking over everything she'd told me.\n\n\"So, does that help?\" she asked.\n\n\"A little? I guess? I mean, I've grown a pretty thick skin. People can be incredibly cruel or insensitive to handicapped people. I don't know that I'd let people's perceptions of me being with a woman be the thing that holds me back.\"\n\n\"But...?\"\n\n\"It's just the... actual... nuts and bolts of it I guess? You spent your whole life until you were twenty-five, being into men, being attracted to men, sleeping with men. Then one day you jump into bed with Megan and have sex with her and then you're into women. I mean... what made you want to do that?\"\n\n\"It's not like Megan was the best of a bunch of bad choices. I was desperate for any attention. Remember I hadn't been with a man for almost five years. The last man I've ever been with was Steve, who got me pregnant when I was twenty, then he ghosted me. I wasn't with anyone, for like five years after that until Megan. Secondly, I'd had that drunken three-way back in my party days with one of my boy-toys who came before Steve and some girl whose name I never knew. I was plastered and he talked me into it. It's not something I was wanting at the time, but I thought being a freak in bed to make my man happy was what I was supposed to do, so I did it.\"\n\nKat looked down for a moment, staring into her empty glass, and I impatiently asked, \"And...?\"\n\n\"And I never told him, or anyone else, but she rang my bell harder than any of my boy-toys ever could. I tried to forget that night out of embarrassment, but I always remembered how good she was. So, there I am, a twenty-five-year-old single mom with five years of no romantic companionship of any kind under my belt. This super cute girl ends up in my bed through the most fantastic chain of events I could imagine and then she puts the moves on me, more or less in her sleep. And, well, I just wanted someone to touch me. Anyone. So, I let her. And when she did, I liked it. I really, really, liked it.\"\n\n\"Hmmm,\" I mused. Wheels were spinning in my head.\n\n\"What?\"\n\n\"I don't know. There's some parallels. I haven't been with anyone in... geez, almost eighteen months? And--\"\n\n\"Hang on, Liz,\" Kat interrupted me. \"I can admit now that I'm gay. Or bisexual with a seriously heavy lean towards girls--\"\n\n\"You're Megan-sexual,\" I interjected with a grin.\n\n\"Hashtag facts, as Cait would say,\" she said with a grin of her own, \"But, I'd been in denial for years. You said you've never been interested in girls, right? You said that you even tried to think about what it would be like to be with Addison and just came up blank, right?\"\n\n\"Yeah.\"\n\n\"Okay. So, my opinion, for what it's worth, is that if you're contemplating making a move on Addison just because you miss your friend and because you're lonely because you haven't had a guy ask you out in forever, those are two separate things and it would be a big mistake to conflate the two. All you're going to do is hurt Addison even more in the long run, and still lose her as a friend.\"\n\nThe waitress showed up to deliver Kat's fresh margarita while I sat lost in thought.\n\n\"So, what are you thinking?\" Kat said after she'd taken a long sip.\n\nI hesitated, then said, \"I... you're right, I can't picture the idea of sleeping with Addison. But...\"\n\n\"But what?\" she prompted me.\n\nI looked up to meet her gaze. \"I can't stop thinking about that kiss.\"\n\nShe raised her eyebrows. \"That good, huh?\"\n\n\"It really... I mean I've never felt a shock go through me like that. It was almost electric. I almost imagined I felt it in my toes, and I can't feel anything in my toes. What does that mean?\"\n\n\"Maybe it just means Addison is a good kisser.\"\n\n\"Maybe. But when that new lawyer from LWLS came in tonight, the pit of my stomach ached that it wasn't her. Every time I have a free day and I'm trying to think of something to do, my first instinct is to text her and see what she's up to. When I'm trying to go to sleep, all I can think about is the whole messed up situation and how she ghosted me.\"\n\n\"So, what do you think that means?\"\n\n\"If I were looking at it from the outside, I'd think maybe I was falling for her.\"\n\n\"I mean, it kinda sounds that way,\" she said. \"But what about the sex part of it? If you aren't gay, you aren't gay, Liz. Don't try and force something that isn't there. You'll only mess yourself up and hurt Addison.\"\n\nI sighed. \"I know. I'm wondering if part of the reason I can't picture sleeping with her is that my body is just too messed up for sex, period. I haven't had satisfying sex with anyone since I broke my back. I mean, I've had boyfriends, but no one has even come close to getting me off. I can only manage that myself and it takes forever. So really, I don't picture myself having sex with anyone, male or female.\"\n\nKat made a sad face into her drink. I understood. It can be difficult to be positive with someone who has an irreversible disability. Life is what it is.\n\nOur waitress arrived at our table. \"Sorry to interrupt ladies, but it's last call. Can I get you anything else?\"\n\nI looked at my watch in surprise. It was nearly eleven, and we'd been talking for over three hours.\n\n\"No thank you, just our check please,\" Kat said. \"We're sorry we kept you so late.\"\n\n\"No worries. I had the closing shift. I'll be right back with your check.\"\n\nI stopped her before she turned to go. \"Can you add a shot of bourbon before you close us out?\" I asked.\n\n\"Yes, of course. What brand would you like?\" she asked, while Kat eyed me with pursed lips.\n\n\"Whatever top shelf your bartender likes the most. Make it a double, thanks.\"\n\nI twisted my body to pull my wallet out of the backpack that hung on the back of my chair, then turned back to find Kat's disapproving gaze unabated.\n\n\"What?\" I asked. \"All I've had is two beers over the last three hours and I'm off tomorrow. And that's your fourth.\"\n\n\"I know, I've got no room to talk. I've had more tonight than I do on most nights out with Megs. I'll probably catch hell for it at home and I'm sure I'll regret it tomorrow. Will you be able to get home okay?\"\n\nI pulled out my phone. \"Yeah I'll be fine. I'll order Lyfts for both of us after I pay. Hey, tell Megan I said not to give you any shit tonight. I needed to unload and I really appreciate you making the time.\"\n\n\"I was being a little over-dramatic. When I called her and said you wanted to hang out and get a drink she said 'I bet it's about Addison'.\"\n\n\"Are you serious?\" I exclaimed. \"I'm that transparent?\"\n\n\"Only to Megan. I wouldn't have guessed. She's seen the fallout from both sides though. She mentioned to me that Addison made a fuss at work, but I didn't realize how big a fuss it was.\"\n\n\"Huh. Well, Megan is clearly more perceptive than I give her credit for I guess. So, what happened with Steve anyway?\"\n\n\"What?\" She asked, blinking at the non-sequitur.\n\n\"Cait's dad. Did he get his shit together?\"\n\nThe waitress dropped off my drink and offered me the bill. I didn't look at it, just handed her my credit card.\n\n\"Oh. Yeah, he did, in fact. He started going to A.A. not long after our hearing. He's sober now, and started his own business. Cait has a really good relationship with him and the woman he's married to now. Cait stays with them every other weekend. He still pays child support every month, but Megan and I are doing well enough that we're just putting all of it into her education fund.\"\n\n\"That's really great, Kat. I'm happy for Cait.\" I took a long, slow sip of my bourbon. Top shelf indeed.\n\n\"He's taking Cait to Costa Rica this summer on an ecological tour for ten days, something she's been dying to do.\" She grinned. \"Megan wants to take me to an all-inclusive beach resort in the Caribbean while she's gone. We've never had a real honeymoon with just the two of us. We're debating which resort to pick. She's lobbying for the one with the nude beach.\"\n\nI coughed and quickly set down my drink, reaching for my napkin.\n\n\"TMI?\" She asked, laughing at me.\n\n\"Listen, I love you and Megs like sisters, but yeah, maybe TMI.\"\n\nShe grinned ferociously \"You know, the whole time Megs and I have been together, I don't think we've been alone for more than three straight nights. I'm looking forward to a week on a tropical island getting my freak on with my smoking hot wife.\"\n\nI winced and laughed at the same time. \"Well, good luck and I hope two enjoy, but I don't need to be imagining you guys throwing each other up against the wall. Especially since it's been so long since I've been thrown up against a wall by anyone.\n\n~~ Tenleytown, Washington DC, June ~~\n\nADDISON\n\nViv somehow managed to keep her strap-on from slipping out of me as she pulled me to my feet from where I was kneeling on the edge of my bed, spun us around and pressed me up against the second-floor window in my bedroom. I gasped, my palms against the glass, frantically looking to see if there were any people out for a late-night stroll who might look up and get the show of their life. Of my life, anyway.\n\nThere was no one on the darkened Tenleytown street below me, thank god, and the only streetlight in sight was a hundred feet down the block. I felt totally exposed. I thought it would have been a bucket of cold water on my libido, as I wasn't much of an exhibitionist normally. But I found myself crying out even louder as she hammered her hips against my backside, thrusting deeply into me, her fist curled tightly into my hair.\n\nViv and I had fallen into a routine of getting together about once a week, usually going out somewhere for dinner or drinks or some kind of activity, then coming back to my place. Once I'd bought us box seats to see the Nationals play the Brewers. She'd rolled her eyes at me when I'd shown up wearing my Milwaukee jersey, but she had the last laugh when Max Scherzer threw a two-hit complete game shutout to beat my Brew Crew.\n\nTonight, I'd let her pick the activity and she'd taken us to the Lucky Strike bowling alley in Chinatown. Bowling had definitely been a thing when I'd been a teenager growing up in Wisconsin, but I hadn't bowled since I was an undergrad.\n\nViv, it turned out, was on a weekly bowling team with some of her Metro coworkers. After demolishing me in the first game 175 to 87, she decided she needed to give me lessons. Feeling her body pressing into me from behind while she supported my arms and whispered in my ear, showing me the finer points of throwing a hook into the pocket quickly had me all a-flutter. Add that to the Hendrick's martinis she kept ordering me from the full bar service, by the time we got back to my apartment I was ready to let her do whatever she wanted to me.\n\nShe'd dragged me straight into my bedroom, then torn off my clothes, leaving me naked. She'd pushed me to lay back on my bed, then stepped back and slowly and deliberately stripped off her own clothes, her eyes never leaving mine.\n\nShe stood, naked, in front of me stroking her hand over her stomach as she looked up and down my body, then asked, \"How nasty do you feel tonight Addie?\"\n\nI didn't feel all that nasty. Sex with Viv was always more raw, more just fucking than I cared for. It wasn't ever what one would call 'making love' which was more my style. A couple of times I'd tried to slow us down, introduce some tenderness into it, but Viv always ended up ramping things up. I probably didn't have room to complain; she always got me off. Multiple times. And I tried my best to keep up with her, but somehow, I always ended up feeling the age difference when we lay together afterward. And feeling... cheap, I guess. I supposed I could get away with sleeping with a twenty-four-year-old at twenty-nine. Might as well enjoy it now, since I was sure I would never let myself do something like this when I was forty. Or maybe even thirty-five. But I definitely felt I was more of a relationship-girl while Viv was a get-down-and-nasty girl.\n\n\"As nasty as you want, Viv,\" I said.\n\nShe grinned at me, then turned and slowly and deliberately leaned over from the waist to dig into her backpack which she'd dropped by my bedroom door. The view was really nice.\n\nShe straightened up and turned, holding a flesh covered dildo with a web of black straps dangling from the base. My eyes widened.\n\n\"Are you serious?\" I asked her. I could hear the hesitancy in my voice, \"That thing must be ten inches long!\"\n\nShe chuckled while she stepped into the straps and buckled it tightly around her hips. \"It's not even eight,\" she assured me. She turned and grabbed a tiny bottle of lube from her bag and squirted a little into her palm. She walked towards me, stroking the dildo like it was her own dick, making it gleam with slickness in the dim light from the window. \"What's the matter, never done this before?\" she asked in a husky voice.\n\n\"Just... not in a while. Or one that big.\"\n\nShe knelt in front of me. \"Don't worry, I won't hurt you,\" she said, then immediately started licking me.\n\nShe might be young but she really knew how to use her tongue. I was already wet, but after a few minutes of her attentions I seriously began to think the lube wasn't strictly necessary. She stood between my legs and pushed them further apart.\n\n\"Still feeling nasty?\" she asked me.\n\n\"Yes,\" I panted, leaning up on my elbows to watch.\n\nShe grasped the shaft of her silicone cock and rubbed the head up and down my slit, parting my lips. I gasped as she brushed the head of it over my clit several times, then she placed the tip at my entrance and slowly pushed her hips forward.\n\n\"Jesus, go slow Viv! That thing's fucking thick!\" I groaned.\n\n\"Don't worry baby, I won't hurt you... unless you ask me to,\" she said with a grin.\n\nShe looked down, watching while she rocked it in and out of me, going a fraction of an inch deeper each time. Finally, after a few minutes of me adjusting she was able to sink fully into me as I whimpered. She rested her hands on my knees, spreading them out wide and started to slowly stroke in and out. It felt like she was going to split me in half each stroke as I tried to rock my hips forward to meet her thrusts. It took a while before I started actually feeling good instead of just feeling full. As I started to relax and enjoy the sensation, Viv reached down and started stroking my clit in time with the motions of her hips. That's when I started to get really vocal, making involuntary animal-like sounds.\n\nJust as I was midway up the hill of my climax, she stepped back and pulled out of me with an obscene, wet sound.\n\n\"Oh my god, why did you stop?\" I complained.\n\n\"Your bed's too low,\" she said breathlessly, \"My knees can't take it. Turn over!\" She grabbed one of my legs and urged me to flip over. I did, then rose to my hands and knees on the edge of the bed. This had the unexpected effect of finding myself staring at our reflection in the mirror over my dresser. I stared into Viv's eyes as she guided the head of the dildo back inside of me. It sank easily into me up to the hilt and I groaned, watching us. We looked so wanton and primal. \"Yeah, baby, that's better,\" she breathed. She grasped my hips with both hands and started fucking me in earnest.\n\nAs she pounded into me, I was missing her fingers on my clit. I took care of it myself, reaching between my legs and stroking myself with one hand. I wanted to keep watching her in the mirror, watching her breasts jiggle each time her hips impacted against my ass, watching the fringe of her spiky hair shake each time she thrust into me, but I was quickly overcome with sensations. I dropped my face to the mattress as guttural sounds of pleasure forced their way out of me.\n\n\"No you don't!\" She half-snarled, as she grabbed a fistful of my hair and pulled my head back up to watch us. \"Look at me! Look at me when you come!\" It was enough to send me over the edge.\n\n\"Yes! Yes, yes, yes, yes, y-e-s-s-s-s!\" I cried out as I came. It rolled on and on, my thighs shaking as my climax seemed to never end. Just when I thought I was ready to pull away from her and collapse onto my stomach, she grabbed both of my arms, pulled me to my feet and spun me toward the window.\n\n\"Oh my god Viv!\" I cried out in protest. Somehow, she kept me impaled from behind during the entire maneuver, and immediately started thrusting into me again. The cold shock of the glass against my nipples added to being put on display for anyone who happened to be walking by somehow kept my orgasm rolling through me. She reached around to stroke my clit again and I very nearly screamed.\n\n\"Jesus! Oh god! Oh God! Oh GOD! A-a-a-a-a-h!\"\n\nFinally, as the pitch of my voice neared the limits of my vocal chords, she slammed the cock into me once more and held it tightly there, stroking my clit through the end of my orgasm while wrapping her free hand around my chest to help me keep upright.\n\nAs I quivered and shook, I reached up with my hands and pushed us away from the window. We collapsed back onto the bed together. I gasped and panted as I slowly came down. Finally, as my breathing approached something close to normal, I looked over at Viv. She was lying next to me on her back, eyes closed, a satisfied grin on her face; a light sheen of sweat covered her breasts, making them glisten in the light from the window.\n\n\"Holy shit, Viv,\" I said. She opened her eyes and smiled at me.\n\n\"Yeah?\"\n\n\"Yeah... that was... that was wild. Gonna take me a few minutes before I can return the favor.\"\n\nShe reached down and unbuckled the straps around her hips, then tossed the dildo towards her backpack. \"No need, babe. Tonight, I just wanted to hear you make those noises I knew you had in you. Mission accomplished.\"\n\nShe scooched up to lay her head on the pillows. I followed her, laying my head on her chest and looking into her eyes. She wrapped an arm around me and closed her eyes with a satisfied look on her face. I leaned up and kissed her softly on the lips. She jerked, surprised, then opened her eyes and kissed me back. I kept kissing her but it was soon apparent that she wasn't into a long make out session.",
        "\"What's wrong?\" I asked.\n\n\"Nothing babe, that just took a lot out of me and we're both drunk. Feels like time for sleep is all.\" She gave me one final kiss then laid her head back and closed her eyes again.\n\nI watched her for a while, disappointed. After an orgasm like that I wanted nothing more than to kiss her for as long as we could stand it before we built back up to lovemaking again. I wanted to make her feel cared for, wanted. I wanted her to make me feel the same. Real lovemaking, not fucking. But I worried that might not be what Viv wanted. I laid my cheek on her soft breast. She raised a hand to stroke my hair, but stopped a few minutes later when she started softly snoring.\n\nSleep didn't claim me for a long time.\n\nWhen I woke the next morning, Viv was already in the bathroom. She was washing her short hair when I stepped into the shower behind her and took over massaging soap into her scalp. She made a sound of pleasure and leaned back against me.\n\n\"Want to go have brunch?\" I asked, running one soapy hand down around her breasts. She sucked in a breath when I pinched her nipple.\n\n\"Can't. I have to get home and get my laundry done. I've got a shift starting at four tonight and I don't have any clean uniforms.\"\n\n\"Okay,\" I said, disappointed. I kept reaching around her, stroking her body. \"Maybe next time we go out we can do it when you have a day off the next day. You know... so we can spend the day together?\" She turned and faced me, her expression a mask. \"I just... Viv, I want to move past this 'friends with benefits' thing we have going on. I'm tired of just hooking up. I want more.\"\n\nI leaned in to kiss her, but she shied away from me.\n\n\"Whoa, Addie. Slow down. What happened to you being too hurt for a relationship? What happened to us both understanding we probably aren't right for each other long term?\"\n\n\"I'm ready to move past my Liz thing. And you and I have been... I think we're good together. I told you, I don't care about how much school either of us have or how different our jobs are. We have fun together. Let's see where it goes.\"\n\nShe stared at me doubtfully.\n\n\"What?\" I asked.\n\n\"You didn't say you're over your Liz thing. You said you're ready to be over your Liz thing. Those are two entirely different statements.\"\n\n\"I meant I'm over my Liz thing.\"\n\n\"Uh huh.\"\n\n\"I am. Viv, I am! Promise.\"\n\n\"Okay... we'll see how it goes,\" she said, still dubious. I leaned into her and this time she let me kiss her. I ran my hands over her body, caressing her breasts, her hips, and running my hand between her legs. Then I knelt down in front of her and returned the favor from the night before.\n\n\"Not sure what you're complaining about\" Amber said to me later that morning.\n\nAfter our shower, Viv had headed home to laundry and work so I'd called Amber to see if she wanted to meet for brunch. We were sitting at one of the tiny tables on the sidewalk outside Kramer Books in DuPont Circle drinking mimosas.\n\n\"I'm complaining because I don't want to be just a booty call,\" I said grumpily.\n\n\"When I was single, I'd love to be a booty call like that,\" my friend said, \"but then I think I'd be the one on the giving end, throwing you against the window. Nora likes that, you know.\" She grinned at me while I turned pink and looked around to see if anyone had overheard us.\n\n\"It was fine at first,\" I said. \"I just want us to be more...\" I trailed off, looking off into the distance.\n\n\"I get it, you're a relationship girl. Viv is your rebound from Liz, but now you're feeling cheap since all you two do is go out for a bit then go back to your place and hmm-hmm.\" She lowered her voice in deference to my obvious uncomfortableness about talking about the subject in public.\n\n\"Every time we're together it goes the same,\" I complained, \"A night out followed by a night in. She leaves first thing in the morning. Last week she didn't even spend the night, she left right afterwards. She said she had an early morning shift on the Metro and had forgotten to bring her uniform. I don't think she forgot really. I think she didn't bring one so she'd have an excuse to leave. I just want her to hang out the next day sometimes, and... I don't know.\"\n\n\"Do relationship things?\" Amber asked.\n\n\"Yes,\" I admitted. \"I want us to move to the next step.\"\n\n\"Look, I think you need to face up to reality. She's clearly not looking for something serious right now. Plus, she's not the right girl for you anyway.\"\n\n\"You don't know that!\" I protested.\n\nShe rolled her eyes at me. \"If you want to be in a relationship, option one is you need to break it off with her and look for someone else. If you don't think you're ready for a relationship because of the whole Liz thing, then option two is to just enjoy what you have going on with Viv. Because the third option is to be a hermit and never get laid until you're over her, whenever that might be.\"\n\nI sighed. \"Amber, I--\" I interrupted myself as a woman in a wheelchair sped past on the sidewalk and I turned completely around in my seat to follow her. It wasn't Liz. When I turned back, Amber was eying me.\n\n\"Oh yeah, option one is right out the fucking window,\" she said, flatly. \"You're still totally hung up on Liz.\"\n\n\"Am not!\"\n\n\"If you'd spun around in your chair any faster, you'd have screwed yourself into the ground, my friend.\"\n\n\"How often do you see a woman in this neighborhood in a wheelchair? She lives like three blocks from here. I just thought it might be her and it would be rude to ignore her if she saw me.\"\n\n\"Addison, that woman was at least forty. And she was Asian.\"\n\nI found myself at a loss for words. \"I... look... whatever!\"\n\n\"Listen, I can't believe I'm the one who is going to suggest this, but do you think maybe you need to sit down and talk with Liz?\"\n\n\"What? No, why would I do that?\" I said, shocked. \"I'm with Viv now.\" Amber had been the earliest skeptic of my relationship with Liz.\n\n\"No. You aren't really with Viv, you just won't admit it. Besides, maybe it would get you some closure.\"\n\n\"Closure? How would hanging out with Liz again bring me closure?\"\n\n\"I didn't say you should hang out with her, just talk to her. I've never seen you as hung up on someone as you are now. I have to wonder if it's because of how you ended it, just walking out on her and blocking her on every communication channel you could think of. It's been two months and you're still clearly not over her. Meanwhile you're in this booty call situation with someone who you really shouldn't be dating--hang on, let me finish!\" she interrupted as I opened my mouth to protest. \"You and I both know you don't have a future with Viv. You're from different worlds. You have different goals in life right now. You want a relationship while she just wants a fuck buddy. If all you were doing was hooking up for wild sex now and then it'd be fine, but you're pushing her to act like your girlfriend when neither she nor you are ready for it! Shit, if she did suddenly latch onto you, I'd bet my next paycheck you'd run screaming. And it'd be because she's not Liz.\"\n\n\"You don't know what you're talking about. Viv and I agreed this morning to give things a try.\" I said.\n\n\"Okay, sure thing Addie,\" she said, rolling her eyes. She leaned back in her chair and picked up her mimosa. \"You keep on pretending I'm not right. We'll see how that works out for you. I'll be here to take you out drinking when you crash and burn.\"\n\n~~ GW Hospital, Washington, DC, June ~~\n\nLIZ\n\nThe monotone buzz of the Life Flight helicopter was a familiar, almost comforting sound to me as it approached. It wasn't the mid-range staccato rumble of a Blackhawk or the basso thunder of a Chinook, but it had grown just as familiar to me during the last eighteen months at GW.\n\nA group of us waited for the arriving patient on the roof, with Doctor Chandra and myself standing patiently next to the double doors leading to where the elevator down to the E.R. was being held for us by a nurse. Two other trauma nurses waited with us. Angel was one of them, bouncing on his toes in anticipation while we watched the blue and white Euro-Copter circle the rooftop landing pad to line up with the wind.\n\n\"What are you smiling at?\" Doctor Chandra shouted over the noise to me.\n\n\"My friend Jo is the pilot,\" I yelled back, nodding towards the chopper.\n\nShe looked back at the helicopter. The sun was reflecting brilliantly off the canopy, making it painful to look at. \"How on earth can you see her from here?\"\n\n\"She dipped the main rotor twice on her bank. Trust me, it's Jo...\" Jo had a very distinctive style behind the controls.\n\nThe aircraft came in and settled quickly and smoothly onto the pad. The side door slid open, then two flight medics jumped out and started unloading a gurney which carried a man strapped onto a backboard. They dropped the folding wheels down as Angel and the other nurse rushed forward to help.\n\nI took a moment to look through the canopy and sure enough, Jo was in the left seat. She waved at me, then held up one hand spinning her index finger in a circle in the air, pointed at her head with her thumb then held up her hand showing her fingers with her thumb holding her pinky-finger down. I gave her a thumbs up, then we both threw salutes at each other with matching grins.\n\nThe medics and nurses arrived back at the elevator with the patient, one of the medics shouting over the sound of the rotors, \"Thirty-five-year-old male, rollover MVA! Semi-responsive to stimuli, BP one-fifteen over seventy, pulse eighty, O2 is ninety-six!\" We all crowded into the elevator next to the gurney and the door closed, mercifully cutting off the noise and wind of the rotor wash.\n\nDoctor Chandra began our initial evaluation on the way down to the E.R., and once in the triage theater, determined that the unconscious patient wasn't in imminent danger of expiring. She ordered a CT scan as well as a full blood panel. The nurses rolled the patient out to get the requested tests. We'd have to wait for the tests for the next stage of assessment.\n\n\"You okay, Liz?\" she asked me.\n\nI knew what was coming next. As part of our assessment, I'd run an instrument along the man's feet and hands. There'd been no response to painful stimuli when I'd poked at the soles of his feet, while he'd flinched from the pain in his hands. Apart from a pretty bad concussion, he likely had a serious spinal injury from the crash.\n\n\"I'm fine, thanks,\" I said, hoping to head off the discussion. No dice.\n\n\"I'm always worried about you when we get a case like that in. I don't know how you don't get stressed out seeing spinal cases.\"\n\nI sighed. \"It's just part of life, Doctor Chandra. If seeing people in vehicle crashes triggered flashbacks for me I'd never have made it as an E.R. resident. For some reason, it's just never been a problem for me.\"\n\n\"Okay,\" she said as we entered the doctor's lounge. I poured a cup of coffee as she made herself some tea. \"Is there anything else bothering you? For the last few weeks you've been less... I don't know... you, I guess is the best way to put it.\"\n\n\"Just personal stuff is all. You know how awesome the social lives of us residents can be, right?\"\n\nThat earned me a chuckle. \"Yes, I remember my residency well. What were those hand signals you and your friend the pilot were making upstairs?\"\n\nI laughed. \"Oh, that was just something left over from the Army. Jo was saying 'Rally on me at six'. She was reminding me I'm having dinner with her and her wife tonight.\"\n\n\"Going somewhere nice I hope,\" she said before cautiously sipping her steaming mug.\n\n\"I'm meeting them at Jaleo's. It's their favorite restaurant in DC. Something about their first date in the city after Jo came back from Afghanistan.\"\n\n\"Well I hope you enjoy it. Are you on tomorrow?\"\n\n\"Nope, my one day off this week.\"\n\n\"Excellent. Have a drink for me while you're out,\" she said with a smile.\n\nI cocked my head at her. \"You don't drink,\" I observed.\n\n\"Well then, you'd better have two drinks for me,\" she said, causing me to laugh.\n\nI was late leaving the hospital and didn't roll up to Jaleo's until six fifteen. Jo and Jill were at an outdoor sidewalk table and already had a pitcher of white sangria and an extra glass waiting for me. Jo had their stroller parked next to her on the sidewalk and was bouncing their son, little Eric, on her knee.\n\n\"How's it going J-Squared?\" I said as I rolled to a stop and locked my wheels. They'd already had a chair removed so I could fit at the table.\n\n\"Couldn't be better,\" Jill said. \"We're finally getting to the stage where we can go out to dinner with this little guy. We can't stay too late, though. Gotta get him back and in bed by, like, eight thirty, but it's a big improvement from a couple months ago. I'd almost forgotten what eating out was like.\"\n\n\"I can imagine,\" I said and reached out my hands. \"Hand him over Jo, Aunt Liz needs some Eric time.\" Jo gave him to me and I set him on my lap. He immediately started reaching for my pony tail draped over my shoulder and made happy baby sounds.\n\n\"I was sorry Addison couldn't come,\" Jo said. \"We still haven't gotten to hang out with her outside a show. She hung up at work tonight?\"\n\nI pretended I didn't hear the question and kept making funny faces at Eric.\n\n\"Uh oh,\" Jill said to Jo, \"I think you were right babe.\"\n\nI looked up. \"What the hell is that supposed to mean?\" I said.\n\n\"Jo said she got a feeling that Addison was, um, into you at the last show, and that it probably wasn't going to end well for her.\"\n\n\"Goddamnit, did everyone see this coming except me?\" I asked, exasperated. \"Yes, we left your show because she flipped out and decided she loved me and had to ghost or some stupid shit like that.\"\n\n\"Easy Liz,\" Jo said. \"I'm not calling you out or anything. Just the way you answered last time I asked about her told me something went down is all.\"\n\nI was ready to snap a retort but our waiter arrived to take our order. I'd been here enough times I didn't need to look at the menu, ordering an olive plate, bacon-wrapped dates and cod fritters. Jill and Jo each ordered twice as many tapas plates as I did. The interruption gave me the moment I needed to cool down.\n\n\"So, yes, Addison is... not my friend anymore, I guess. She said she tried to be friends but she ended up falling for me and realized she was headed towards a crash and... I guess the only way she saw to deal with it was to totally cut me off.\"\n\n\"That sucks, Liz. We're really sorry. Are you doing okay?\" Jill asked.\n\nFor some reason the question had me on the verge of tearing up. I stalled for time by taking a piece of bread from the table and holding it out for Eric. He played with it like a new toy.\n\nJo looked uncomfortable, but surprised me by saying \"Look, Liz, if you want to talk about it or not talk about it, whatever you need, Blue and I are here for you, okay?\" Jo had never been one to talk about anything to touchy-feely when we'd served together in the Army. Four years of being married to Jill had changed her a lot.\n\nIt took me a moment to collect myself and then I was spilling the whole story to them. How Addison had become what I thought was my best friend. How it had crashed down around me. My feelings of loss. The kiss. How I couldn't stop thinking about our kiss. My conversation with Kat. Everything. By the time I'd finished we'd left the table littered with the empty plates. Eric had fallen asleep in my lap after I'd fed him his bottle.\n\n\"So anyway... sorry I vented for so long,\" I said.\n\n\"Liz, don't apologize. I meant it, we're here for you,\" Jo said.\n\nWe sat in silence for a moment, until I wrinkled my nose. \"I think Eric dropped a payload.\"\n\nJo laughed, reaching for the diaper bag. \"Yeah, he usually does after dinner. I'll go change him.\" She took her sleeping son from me and carried him into the restaurant. Jill and I sat in silence for a while, enjoying the warm summer evening.\n\n\"So, you keep thinking about your kiss, huh?\" Jill finally asked me.\n\nI blushed and sipped at the last of my sangria. \"Yeah, I don't know what to make of that. When did you know you liked girls?\"\n\n\"As soon as I realized what sex was,\" she replied immediately. \"I didn't admit to anyone I was bisexual until college, but I've always known. If I'm attracted to someone I don't really care if they are male or female. Well, sexually that is... I only ever seemed to have romantic feelings about women. And of course, now I only have eyes for Jo,\" she finished in a theatrical voice looking behind me.\n\n\"You'd better only have eyes for me, Blue,\" Jo said in a light tone, as she arrived back at the table. She carefully laid Eric down in his stroller, still asleep. She covered him with a light blanket and pulled the cover of the stroller down low over him. The tenderness she showed him would shock anyone who knew her five years ago. \"What are we talking about?\" she asked, sitting back down.\n\n\"When I knew I liked girls,\" Jill said.\n\nJo laughed quietly. \"You mean when you realized the righteous truth?\" she joked.\n\n\"What truth?\" I asked.\n\n\"Don't even get her started, Liz. Jo thinks all women should be gay. She doesn't even get Sara being with her brother, or Suzanne and Larry. She amusedly tolerates their choice, but finds it quixotic.\"\n\n\"I get it. I just think they're missing out. Guys are gross. The ladies are where it's at.\"\n\nI laughed along with them.\n\n\"Wait, does this mean... I mean are we talking about this because you're thinking of Addison like...\" Jo filled in the rest of the question with raised eyebrows.\n\n\"Sweetie, dial it back. We're just taking,\" Jill said.\n\n\"I don't know, Chief,\" I said. Whenever I wanted advice from Jo, I tended to fall back on calling her by her rank from when we'd served together. \"I mean... I'm pretty sure I have... feelings for her. I'm not sure if they're romantic or if I'm just missing my friend.\"\n\n\"Well, let's break the problem down,\" Jo said thoughtfully. I smiled. Ever pragmatic, the Chief was. \"What's the difference between romantic and platonic feelings?\"\n\n\"Sexual desire,\" I said. I knew all this. \"My problem is I'm not sure I can have sexual feelings anymore.\"\n\n\"What? Liz, that's crazy talk, why would you say that?\" Jill asked me.\n\nI looked around uncomfortably. \"Because Jill, I can't... I...\" I took a sip of my sangria, cleared my throat and leaned closer so I could speak quietly. \"Because since my injury I don't think I've been turned on physically one time by another person.\n\n\"Really?\" Jo asked, surprised. \"What about that guy you dated, was it a year ago? John? You guys went out for a while, didn't you?\"\n\n\"Josh,\" I corrected her, \"He was almost two years ago now. He was nice enough and I liked dating him. But we were... unsuccessful in bed. At least, he was. He never got me off. Since the crash, no one has. I mean, I wanted to get hot and bothered for him, but we'd get started, he'd start touching me, and as soon as I realized I wasn't going to feel what I wanted it turned into a negative feedback loop. I'd get in my head, pulled out of the moment, I'd start thinking about it instead of being in the moment, and eventually I'd just give up and finish him off to get it over with.\"\n\n\"Wow, that sucks...\" Jo trailed off. There wasn't a lot you could say to that.\n\n\"Has anyone made you feel the way you felt when Addison kissed you since the crash?\" Jill asked.\n\nI stopped and thought about it. \"N-o-o-o... no, Josh was a good kisser, but... no, no I never reacted to him like that.\"\n\n\"Well, that isn't the whole answer, but that's definitely a data point,\" Jo said. \"You say you have trouble feeling sexual. But you say that when Addison kissed you, you felt something.\"",
        "\"I did,\" I admitted.\n\n\"So maybe that tells you something,\" Jo said.\n\n\"Maybe. Kat said that she was worried I was conflating missing my friend and not getting laid, and if I made a move on Addison I'd just hurt her because I was craving intimacy, just not really with her.\"\n\n\"That's something you can only decide for yourself Liz,\" Jill said.\n\nJo nodded in agreement. \"Yeah. I mean, both Blue and I knew we were gay right off the bat, but I know lots of women who have found the light later in life.\"\n\nJill slapped Jo on the arm. \"Sweetie! Not every woman is meant to be gay!\"\n\nJo grinned at her wife. \"Agree to disagree, babe.\"\n\nI had to laugh. \"Well, you've given me some stuff to think about. When is your next show by the way?\"\n\n\"We're going to play at Reston's Independence Day Festival, then the next one after that is the kick-off show for the beach tour.\"\n\n\"I'll have to come to both then. Be sure and send me the date of the kick-off show early so I can ask off. I wish I could travel to some of your beach shows, but... residency, you know?\"\n\nWe settled the check and headed out, Jo and Jill to their car to take Eric back to their Adams Morgan condo and me to Gallery Place Metro to head back home. I was sitting in my chair next to the door of the Metro car as we rattled through the tunnels towards DuPont Circle when I looked up and saw the Metro map on the wall of the train. My eye was drawn to the Tenleytown stop, four stations north of mine.\n\nI resolved that the next time I had a free Saturday I'd go to Addison's apartment and talk to her. Whether she wanted to or not. I was not okay with how our friendship ended. And I wasn't even sure I was okay with us ending at all.\n\nTwo days later, I was in hour eight of another twenty-four-hour shift when Doctor Chandra gathered the E.R. staff in the main area all the exam rooms branched off from. Everyone was thoughtful enough to let me get in the front row of the crowd so I could see.\n\nShe clapped her hands to get everyone's attention. \"Okay team... Let's quiet down... Listen up! We just got word from D.C. dispatch, there was a collision between two metro trains in the tunnel between Farragut West and McPherson Square, and we're activating the Mass Casualty Plan. We don't know how many injuries or how serious it is yet, but it's right down the street from us and they're going to be bringing most of the injured here. I want non-urgent cases currently in the waiting room to be told they have a wait ahead of them. I want all exam rooms cleared ASAP. Let's get O.R.s One and Two staffed and ready. Notify Surgical that we may be sending cases to them upstairs. We've drilled on mass-cas events and everyone knows their job, so I want this to go smooth and easy. Let's get busy!\"\n\nEveryone dispersed to their appointed stations to prepare for arriving ambulances. I did surgery from time to time, but the logistics of having to have the platform for my chair made it cumbersome, so my duty station for a mass-cas event was doing triage during intake in the ambulance bay. I was pretty good at triage, a skill I'd honed during my days in the Army. I sat in the ambulance bay with Doctor Andrews and several nurses waiting for the first arrivals.\n\n\"Have you had an actual mass-cas event since you've been a resident?\" Jimmy asked me.\n\nI smiled. \"Not here at GW, but I've been through a few,\" I said.\n\nHe blinked. \"Right. Afghanistan.\"\n\n\"Yeah. At least we're pretty sure there won't be any bullet wounds coming in on this one.\"\n\nHe shifted his weight nervously from one foot to the other as we heard the first siren approaching. I looked up at him.\n\n\"Jimmy, you got this, just like we've trained. Work the patient in front of you. Listen to the EMT run down the vitals and observations for you. The nurse with you will tag the patients based on your call. If you have a question, yell and I'll help. Just stay calm, work the patient in front of you, then move on to the next. Red tags go straight back, yellow and green to the staging area. If we have any breathing Black tags, god forbid, we'll try to manage their pain as best we can.\"\n\n\"Right. Work the patient in front of me. Got it.\" He blew out a loud breath, then settled his shoulders and looked much calmer. Jimmy was well on his way to being a good doctor.\n\nIt turned out the mass-casualty event wasn't much of an event, as the train collision wasn't as severe as first thought. We ended up getting nine cases, none of them critical: only yellow and green tags. We had a couple suspected broken bones, some smoke inhalation cases and several concussions. Once I was sure we were done with triage, I went back into the E.R. where I was met by Kat.\n\n\"What's on deck?\" I asked her.\n\nShe handed me a chart. \"Everything's in progress except a possible concussion with a nasty scalp laceration. Want it?\"\n\n\"Sure.\" I looked at the chart. \"Exam Three?\"\n\nI rolled my chair into Exam Three to find a young woman in a Metro uniform lying on the bed holding a bloodied gauze pad to her forehead with one hand and her phone in the other.\n\n\"Hello, I'm Dr. Charles,\" I said to her. \"How are we doing?\"\n\nShe looked at me dazedly, eyes coming in and out of focus. I started my assessment protocol, looking into her eyes with my penlight.\n\n\"Can you tell me your name?\" I asked, as I gently took the gauze pad away from her head to get a look.\n\n\"Viv.\"\n\n\"What's your last name, Viv?\"\n\nShe paused, then slurred, \"Esparza. Vivian Esparza.\" She had a two-inch gash on her forehead, starting a few inches above her left eye and running up into her short, spiky black hair.\n\n\"Can you tell me what day it is?\"\n\nShe paused even longer, then said, \"Uh... Tuesday?\"\n\n\"Close, only off by one. It's Wednesday. Can you tell me what happened?\"\n\nHer face clouded up as she struggled to remember. \"I was... we... we were sitting in the tunnel waiting for a train to clear the station so I could pull us in. Something slammed into us... from behind I think. It... It threw me into the control panel. I think... I think I hit my head.\"\n\n\"You sure did Vivian. Does it hurt anywhere else?\"\n\nShe cautiously shook her head no.\n\n\"Okay, you're going to need some stitches, alright?\"\n\nShe nodded.\n\n\"Is there someone you can call? You're going to need a ride home too.\" I gestured at her phone.\n\nShe looked at the phone, then held it up towards me like a proud child showing a parent an A+ score on a test. \"I did! I already called my girl.\" She must have really taken a knock as woozy as she was.\n\n\"Okay good. I'll be right back and then I'll get that cut closed up. We need to get a head CT to make sure everything's still where it should be, then you can probably go home. Okay?\"\n\n\"Okay.\" She lay back and closed her eyes.\n\nI beckoned to Kat. \"Keep her talking,\" I said in a low voice, \"Don't let her drift off.\"\n\n\"You got it.\"\n\nI went out to check the status board to make sure we had nothing urgent waiting, checked on Doctor Andrews in Exam Four, and then rolled back into Exam Three, got a suture kit from the cabinet, and got to work.\n\n\"This is going to pinch a bit, Vivian,\" I said, then started injecting a local anesthetic into the cut on her head. She hissed in pain. \"I know, it sucks, just hang on... and... done. Okay, you shouldn't feel anything else. I'm going to close this cut for you. Hold as still as you can so I can make these as even as possible. The scar will be less noticeable that way.\"\n\nI worked slowly and carefully, closing the gash with tiny stitches. I was just finishing up when Kat came back into the room looking very uncomfortable. \"Hey Liz, uh...\"\n\n\"Nurse Hayden, we need to get Miss Esparza here back to CT. I don't think it'll show anything but she got her bell rung pretty good so I want to cover all the bases.\"\n\n\"Uh, okay. Her, uh, her ride just showed up. It's, uh, it's...\"\n\n\"You can bring them back I'm pretty much--\"\n\nI trailed off mid-sentence as Addison walked in the room.\n\nShe glanced at me uncomfortably as I stared with my mouth open. I almost didn't recognize her. Her dreadlocks were gone and her hair was shorter, just down to the tops of her shoulders. It was so pale and fine, it was almost white\n\n\"Addison! What...? What are you--\"\n\n\"Hey babe, I had to get stitches!\" Viv blurted out, then started to get off of the bed. Both Kat and I moved quickly to stop her.\n\n\"Whoa, Miss Esparza, sit tight. We don't want you walking around just yet,\" I said, my brain going a thousand miles an hour. I turned back to Addison but she'd turned her attention to my patient.\n\n\"Viv, are you okay?\" she said worriedly. She reached out and took Vivian's hand.\n\nMy heart dropped into my stomach. The way Vivian pulled Addison close to the bed and leaned her head against Addison's chest... They were clearly more than just... 'friends'.\n\n\"M'okay babe. This nice lady stitched up my head! Look!\" She reached up to hold her hair back from the top of her cut. \"She said I can go home soon.\"\n\nAddison reached up and gently touched the skin next to the cut. \"She's a great doctor, Viv. If she says you're going to be okay, then you'll be fine.\" She looked over at me, a little sadly I thought.\n\nMy mouth wanted to stammer and sputter, and the rest of me wanted to fall apart. I summoned all the focus I'd learned treating wounded soldiers in the back of a helicopter to keep my shit together.\n\n\"Okay... alright... Nurse Hayden, let's get Miss Esparza back to CT. Have radiology read her films then we can discharge her if they're clear. Miss Esparza, good luck to you. I'll have the nurse bring in some aftercare instructions before you're discharged.\"\n\n\"Liz, I've been meaning to...\" Addison stammered. \"I-I-I wanted, I-I-I...\"\n\n\"Now isn't the time for this, Miss Wagner. You're taking her home, right?\" I said, sharper than I wanted to. She nodded. \"Okay, she has a concussion. You're going to need to wake her up every hour. Make her answer a few questions to show you she's lucid and speaking without difficulty. Check her pupils to see that they are equal sized and reacting to light. Do that every hour until morning, then have her follow up with her primary care physician. If anything goes south tonight, bring her back here right away. Got all that?\"\n\n\"I, yes I can do that, I--\"\n\n\"Good. Radiology will be in shortly to take her for a head CT. After that, Kat will bring you a sheet with care instructions. Your... Miss Esparza's going to be fine, barring anything unexpected on her scan.\"\n\n\"Oh, wait!\" Viv almost shouted, looking back and forth between us. \"You're that doctor chick Addie was in love with, right?! The straight girl?\"\n\nI felt myself flush. With anger. With embarrassment. With... jealousy.\n\n\"Good luck, Miss Esparza,\" I said, then I turned my chair and shot out into the hallway. My eyes started burning with tears as I slammed my fist into the button on the wall to swing open the doors to the operating rooms.\n\nADDISON\n\nI watched as Liz rolled out of the room. Every detail of her was exactly as I remembered. The line of her jaw. The soft grey of her eyes. Her cute, practical ponytail. Her devastating air of competence. My heart ached all over again as she left. I stood looking at the door for a moment, then I turned back to Viv.\n\nShe looked up at me and said, \"Wow.\"\n\nI took her hand. \"Are you okay? Does it hurt much?\"\n\nShe stared at me with an uncomfortable grin on her face. \"You are totally still in love with her, aren't you?\"\n\n\"What? No. Viv, that's nuts.\"\n\n\"No, it's not. You're totally still into her.\"\n\n\"You smacked your head. You don't know what you're talking about.\"\n\nThe night was a long one. I took Viv to my apartment and got her cleaned up. I put one of my sleep shirts on her and got her into my bed where she promptly fell asleep. Her clothes stank of acrid smoke, so I took them to the basement to wash them in my building's laundry room.\n\nI set my phone to wake me every hour. Each time I gently shook Viv awake, I made her tell me her name, my name or some recall some random factoid to show me her brain was working and checked her eyes. Each time I woke her, she got a little crankier, but I was persistent.\n\nMeanwhile, I couldn't sleep. I kept picturing Liz's face, and the hurt and anger on it when I'd walked into the exam room. Her voice sounded so... cold... while she'd told me how to care for Viv. I kept turning the scene over and over in my mind. Each time I'd start to finally nod off, my phone would buzz me to wake up Viv and check on her again.\n\nBy five in the morning, I had to admit to myself that I did still have feelings for Liz. I gently thumped my fist on my forehead in the dark as I reminded myself over and over, she's straight, she's straight, she's straight. Besides... Viv and I were together now. I needed to move on.\n\nBy the time the sky started to lighten outside, I was exhausted.\n\nI figured once the sun was up I could stop checking on her every hour. My brain finally let me rest, and we both slept until almost noon. I woke when she sat up in bed.\n\n\"Hey baby,\" I said, sitting up with her. \"How do you feel?\"\n\n\"My head hurts. Not like a headache, but this cut really hurts,\" she said, touching it gingerly.\n\nI rubbed her back. \"The aftercare instructions say Tylenol is okay. Can I get you a couple?\"\n\n\"Please,\" she said, as she slumped back down on the bed.\n\nI padded into the bathroom for the pills and came back with a glass of water. She sat up again, gratefully swallowed them and laid back down. I sat next to her on the edge of the bed.\n\n\"Thank you, Addie. For coming to get me. For taking care of me. You were fifteen minutes away. My roommates would have taken over an hour to get there.\" she said.\n\n\"You'd do it for me,\" I said. I was a little sad that she looked uncertain. \"You would, Viv. You're a good person. I wouldn't be with someone who wasn't.\"\n\nI leaned down and gently kissed her, but she still looked doubtful. \"What about Liz?\"\n\n\"I'm over Liz,\" I said and tried to kiss her again, but she shied away from me.\n\n\"You aren't, Addie. Anyone could see that at the hospital. I have a head injury and I could see it.\"\n\n\"Viv, I'm not into her, I'm into you. I'm with you.\" I tried to make myself believe it.\n\nShe nodded, but I saw in her eyes she wasn't sure.\n\nI knew I wasn't sure either.\n\n~~ Arlington, Virginia, July ~~\n\nADDISON\n\n\"Traveling!\" Amber yelled towards the court.\n\n\"No way, that was a legit drop-step,\" I said.\n\n\"Your loyalty has blinded you,\" Amber scoffed at me.\n\nWe were at the Capitol One Center for a WNBA game between the Washington Mystics and the Minnesota Lynx. I didn't have a Lynx jersey so I'd settled for wearing a t-shirt with the appropriate colors.\n\n\"I thought Wisconsinites had an automatic dislike of all things Minnesota?\" Nora asked me.\n\n\"We do, but the closest WNBA team was the Lynx when I was in high school so that's my team. You guys are just mad we're winning.\"\n\n\"It's early yet,\" Amber said, and then took a sip of her beer.\n\n\"By the way, thanks again for the last second invite.\" Viv had canceled our date that night at the last second, saying she had to cover a shift on the Metro for her supervisor. \"I was bummed to get stood-up. We were going to go dancing and I would have been all kinds of out of sorts sitting at home by myself instead.\"\n\n\"Were glad you could come,\" Nora said, \"When our friends bailed I didn't really want to sell the other two tickets and have strangers sitting with us.\"\n\nAmber and Nora had been season ticket holders to the Mystics for years. I attended several games every season with them.\n\n\"How's it going with Viv, anyway?\" Nora asked. Amber stared straight at the court. She clearly wasn't a fan of the topic.\n\n\"Good, I think. It's been over a month since we've started to take things more seriously. Anytime she has a weekend off we've been spending a lot more time together.\"\n\n\"Exactly how many weekends has that been?\" Amber asked, acerbically.\n\n\"Well, only one,\" I admitted.\n\n\"In a month. Wow, you guys are going to be ring shopping soon,\" Amber quipped.\n\n\"Amber!\" Nora admonished her.\n\n\"But we had a really good time last weekend. We went to the Air and Space museum, then caught a movie and dinner. It was nice.\"\n\n\"So, things are progressing?\" Nora asked.\n\n\"They're... well, yes. Progressing is a good term for it, I guess. She's still worried I'm hung up on Liz, I think. Hopefully time will cure her of that,\" I said.\n\n\"Oh shit... maybe it won't,\" Amber said. I looked at her and saw her face had gone pale.\n\n\"What? What the hell is that supposed to mean?\" I demanded.\n\nShe didn't say anything. She just lifted her arm and pointed.\n\nI followed her gaze. It took me a moment or two but then I saw. My stomach lurched and I thought I was going to throw up.\n\nI got up and my feet moved as if on their own accord, shuffling me up the steps and around the circle of the lower box seats. Three sections over from our seats I descended down the steps and stopped a third of the way down.\n\nViv didn't notice me at first. This section was sparsely filled. She and the woman she was with had their feet up on the seat backs in front of them, and they were giggling together. The woman was close to Viv's age, maybe younger, with a nose ring, at least six little golden hoop earrings up the side of her ear and prominent tattoos on her arms. Viv's hand caressed the inside of her thigh as she was leaned over, murmuring in her ear.\n\nThe woman noticed me first, and sneered at me. \"What are you lookin' at, blondie?\"\n\nViv turned her head and her eyes widened in shock, her face turning ashen. \"Addison!\" she blurted, \"What are you doing here?!\" How fucking clich\u00e9.\n\nI tried to think of something to say. A snappy quip. A cutting remark. Nothing came except tears. I shook my head a few times, then started running up the steps. Nora and Amber were standing at the top of the steps watching, and I shoved past them out onto the concourse.\n\nI was almost to the escalator down to the Metro station when I felt her catch my arm and spin me around.\n\n\"Addison, stop!\" Viv panted.\n\n\"What the fuck?\" I said, also out of breath.\n\n\"Addie I... I...\"\n\n\"What, Viv?! You're sorry? You didn't think I'd find out? What stupid-ass excuse are you going to give me!!\"\n\n\"Addie, we never said we were exclusive!\" she said. With the way she couldn't meet me eyes, I could tell she knew how stupid that sounded.\n\n\"You have got to be fucking kidding me!\" I screamed at her. \"We said we were going to try and see where this went! Do you think that means we can still screw around whenever we want?!\"\n\n\"No, it doesn't, but your fucking fooling yourself with this and I don't think it's fair to me!\" she yelled back. Every eye on the concourse turned towards us.\n\n\"What?\" I yelped. \"What the fuck does that mean? You're here with another woman!\"\n\n\"You're in love with another woman, and trying to make yourself settle for me!\"\n\n\"Are you kidding! I told you, I'm ready to be... I mean I'm over Liz!\"\n\n\"Right there!\" she snarled at me. \"Jesus Christ, Addie, you can't even skip over saying you're 'ready' to be over her, which means you aren't over her!\"\n\nMy voice dropped to a whisper. \"That's not true.\" It was completely true.\n\n\"Bullshit! You're totally hung up on her, and I'll never be able to compete with her. She's pretty. She's as smart as you are, unlike me. She's a fucking doctor, for Christ's sake. I drive a fucking train.\"\n\n\"I don't... Viv, that doesn't... I don't think that about y--\"\n\n\"You might not,\" she cut me off. \"You might even believe it. You might have fooled yourself into thinking that it doesn't matter. You might think, 'Hey, I'm a blue-collar lawyer, working at a non-profit doing all this charitable work' but you and I both know you could probably take a different job and make a half-million dollars a year. Meanwhile I'm stuck underground making twenty bucks an hour. And if you think that won't make a difference in the long run, you're fooling yourself.\"",
        "I stared at her, and for a moment, felt that I had to make her understand that I didn't think less of her because of her job, that I didn't feel she was beneath me. I opened my mouth to do just that, but then a bell rang in my head, a crystal-clear note that brought me back to reality and I gave myself a shake.\n\n\"No, you know what? Fuck you! If you really felt all this, the right thing to do was to tell me, not cheat on me! You can't turn this around and make me the bad guy here!\"\n\nHer face went pale as she realized no matter how valid her points, she was the one in the wrong, right here and now.\n\n\"I... look, Addie, I'm... I'm...\"\n\n\"What?!\" I snapped impatiently.\n\n\"I'm sorry I hurt you.\"\n\n\"Forget it, Viv. You thought we wouldn't work out? Well, you've made sure of that tonight. Don't ever call me again!\" I turned on my heel and stalked away from her.\n\n~~ Tenleytown, Washington DC, August ~~\n\nADDISON\n\nThe buzz from the building intercom surprised me. I looked up from my jigsaw puzzle and saw it was after nine o'clock. Who could be at my door at this time of night on a Tuesday? I reluctantly got up and walked to the panel by my door.\n\nI pushed the button. \"Yes?\" I said.\n\n\"It's Amber, let me in.\" I heard through the intercom.\n\nI blinked, and suppressed the urge to snap at her. Instead, I held down the button to let her in the building, unlocked my door and pulled it open a fraction of an inch, then sat back down and resumed searching the pile for the last two edge pieces I needed.\n\nI didn't look up when I heard her open the door.\n\n\"Hey,\" she said, closing the door behind her.\n\n\"Want some wine?\" I asked, then made a small exclamation of pleasure as I found an edge piece and snapped it into place.\n\n\"No, thanks,\" she said, walking around my breakfast bar and standing in my kitchen across from me. She looked down and kicked the recycle bin with her foot. It gave a loud collection of glass clinks. \"I'd be amazed if you had any left,\" she said, \"Are you buying in bulk now?\"\n\n\"Look, if you're here to get all up in my face, can we just assume you did and that I'm properly chastised so we can call it a night? I'm busy.\"\n\n\"I can see that,\" she said, sourly. \"Big happenings in the puzzle world.\" She picked up the box cover and looked at the picture of a pile of sleeping kittens in a basket. \"Five hundred pieces. Pretty ambitious.\"\n\n\"It keeps my mind busy. Something I need right now.\" I took a drink of my Shiraz and was surprised it was the last swallow in the glass. I sighed and got up to walk around into my kitchen, but when I reached for the half empty bottle, Amber snatched it off the counter before I could pick it up and held it away from me.\n\n\"We're a little old for keep-away,\" I said wearily.\n\n\"Is this all you do now? Go to work, come home, get blasted on cheap Trader Joe's wine, and do kitten puzzles?\"\n\n\"No, in fact, I'm planning on watching some TV before bed. How is this any of your business?\"\n\n\"When was the last time you left your apartment for anything but work? You've turned down invitations from Nora and me at least four times in the last month!\"\n\n\"Why would you...\" I grumbled and shook my head. \"You know all I'd do is sit around moping and ruining your good time, right?\"\n\n\"We're worried about you, dummy! Since the whole shit show with Viv, you just sit in your apartment by yourself. It's not good for you!\"\n\nI sighed again. She was right. Other than work, and trips to the grocery I hadn't gone out in over a month. I'd spent a lot of time browsing new apartments online, thinking maybe I should get away from the memories of me and Viv, but that would just be running away again and that hadn't worked out so well for me when things had blown up with Liz.\n\n\"I'm just... not ready, okay?\"\n\n\"Not ready for what? We're not asking you to go on a blind date or sign up for Tinder or Her. We just want you to go to dinner with us and maybe talk! You have to stop just stewing and start getting your life back together!\"\n\n\"I said I'm not ready and I'm not, okay? It's the first time I've ever been cheated on and Liz really hurt me!\" Amber stared at me for so long that I snapped, \"What?!\"\n\n\"You mean Viv. Viv really hurt you.\"\n\n\"That's what I said.\" I leaned forward and grabbed the wine bottle out of her hand to refill my glass.\n\n\"No, it isn't. You said 'Liz really hurt me'.\"\n\n\"That's ridiculous. Why would I say Liz hurt me?\"\n\n\"Jesus Christ, you are still hung up on her. You're not hiding out in your apartment because Viv cheated on you. You're hanging out here because you're still in love with Liz and your distraction broke up with you.\n\n\"That's the dumbest thing I've ever heard. What are you, a fucking armchair psychologist now?\" I took a big gulp of wine.\n\n\"I'm in law enforcement. Reading people is part of what I do.\"\n\n\"Well then, I'd appreciate it if you'd go read someone else besides me. I'm not up for this right now.\"\n\n\"You need help. I think you need to see someone.\n\n\"I'm not ready to date!\" I snorted.\n\n\"Not a date, you drunk nitwit! You need to see a therapist! You're losing it. You can't go on like this much longer before it's going to start affecting your job or your health. Or both. If it hasn't already.\"\n\nI looked down at the floor, but said nothing.\n\n\"I'm really worried about you,\" she said, quietly.\n\n\"I'll be fine.\" My voice was a hoarse rasp. I felt a tear drip off the end of my nose and I turned away from her. \"Can you please just go? I can't do this tonight.\"\n\n\"Addie, I-\"\n\n\"Please... Please go,\" I whispered.\n\n\"Okay. I'll go tonight, but we're not done. I'm going to keep coming back and keep asking you to go out with us. I'm going to stay on your shit, girl, because this isn't healthy. Okay?\"\n\n\"Fine.\"\n\nShe hugged me from behind then walked around the counter towards the door.\n\n\"I love you, Addison. You're my friend and I miss you,\" she said. Then she slipped out and shut the door behind her.\n\nI started to take a drink but stopped with the glass halfway to my mouth. I looked down at it for a moment, then threw the whole glass into the sink, shattering it and splashing dark red wine all over the counter. Then I slid down to the floor, my back against the cabinet.\n\nI have no idea how long I sat there crying.\n\n~~ George Washington Hospital, Washington DC, August ~~\n\nLIZ\n\n\"Hey Liz, there's someone up front who wants to talk to you.\"\n\nI looked up from the computer where I was typing patient notes next to the nurse's station.\n\n\"Who is it? Family of a patient?\" I asked Angel.\n\n\"No, some lady. Says her name's McLeod. Looks like a fed to me.\"\n\n\"A G-Woman? The fuzz? A secret agent?\" I joked.\n\n\"Well I think she's wearing a gun, so I hope so,\" he answered, not laughing with me.\n\nThat stopped me cold. Firearms were expressly prohibited in the hospital. You could only carry them if you were law enforcement.\n\n\"Okay, I'll handle it. Cover for me for a bit?\"\n\n\"You got it, Doc.\"\n\nI headed to the reception area to see a tall woman dressed very much like a fed. She had on a black pantsuit, with a white dress shirt under it and sensible, flat leather shoes. She was standing in the middle of the waiting room, watching CNN on the TV mounted to the wall of the lounge. She had curly, red hair. I looked her over as she reached up to tighten her ponytail, and her suit jacket opened wider. I saw she was wearing a pistol on her hip.\n\n\"Can I help you?\" I asked, as I rolled up to her.\n\nShe turned and looked down at me. \"Liz Charles?\"\n\n\"Before I answer that I'd like to see some official ID. We don't allow firearms in here,\" I said, in a quiet but serious voice.\n\nShe glanced down at her holster, then pulled her jacket over her gun with one hand while reaching into her breast pocket and pulling out a small leather folder with the other. She flipped it open and handed it to me. Amber McLeod, Special Agent of the Bureau of Alcohol, Tobacco and Firearms. The ID and badge looked real enough to my untrained eyes. I handed it back to her.\n\n\"Okay, yes, I'm Dr. Charles. What can I do for you?\"\n\n\"Well, it's, um... not official business, it's personal.\" She looked around, suddenly and obviously uncomfortable.\n\nMy eyes widened as I suddenly made the connection. Amber. Red hair. ATF agent.\n\n\"You're Addison's friend, aren't you!\" I said, loudly. Addison had told me a few stories about her, but I hadn't met her.\n\n\"Yes,\" she made a shushing motion with her hand. \"Yes, I am. She doesn't know I'm here. Can we, like, go somewhere and talk?\n\n\"S-u-u-u-r-e,\" I said, drawing out the word. \"Let me tell the staff I'm taking a break,\" I turned my chair around and saw Angel, Kat and Jimmy all clumped together at reception, pretending (poorly) to be looking at something on the receptionist's computer.\n\nI rolled over to them. \"You guys are about as subtle as a car crash,\" I said.\n\n\"What does she want?\" Kat asked, breathless with curiosity.\n\n\"She's investigating nunya,\" I said. \"Angel do I have time to step out for ten minutes?\"\n\n\"Sure thing, Doc. I'll cover for you.\"\n\nI made a finger gun at him. \"I'll bring you a caramel latte when I come back. It's your turn after all.\"\n\nKat made a jealous face.\n\nAs I turned to go, Jimmy asked \"What's nunya?\"\n\n\"Nunya bidness!\" Kat and Angel said in unison. They laughed as I wheeled past Agent Amber and said, \"Well c'mon, let's roll.\"\n\nWe found a table at the Starbucks out in front of the hospital. I'd ordered my usual venti flat white, extra shot, and Angel's latte.\n\n\"Okay, let's have it,\" I said, diving right in, \"why is Addison's gun-toting Special Agent friend coming to see me?\"\n\nShe toyed with the straw in her large iced coffee with cream, extra sugar. I waited patiently for her to start.\n\n\"I'm not sure talking to you is the best idea, to tell you the truth, but Addison isn't doing very well lately. I think it's because of you, and I wanted you to know.\"\n\nI stared at her, then let out a short bark of laughter. \"She's not doing well? Why is that my problem? She bailed out of our friendship, not me.\"\n\n\"I know, I know, but Addison is five kinds of messed up right now. She never leaves her apartment except for work anymore. I think she's drinking alone most nights. I've asked her to see a therapist or do something, but I can't get through to her.\"\n\n\"What about her girlfriend? Viv, isn't it?\" I knew very well the woman's name was Vivian Esparza. I hadn't been able to forget a single detail of seeing them together in the E.R.\n\nAmber's mouth twisted in displeasure. \"They've been history for over a month.\"\n\nI blinked. \"They broke up?\"\n\n\"They were never together,\" she said. \"Not really. They started off as friends with benefits. Addison was using her to try and get over you, but she would never admit that, not even to herself. Then around the time of the Metro crash, Addison started trying to push Viv into a serious relationship.\" She looked at my face and quickly added, \"No one who knew them both thought it was a good idea. Addison was in denial that they were a bad match, and it blew up in her face. She was out with me and my partner, and we saw Viv with another woman.\"\n\n\"Ouch...\" I winced\n\n\"Yeah, no shit. Viv tried to point out they had never agreed to be exclusive, which was a weasley little cop-out, but whatever. Addison told her to never call her again and since then she's been sitting under a black cloud in her apartment.\"\n\nWe sat in silence for a moment.\n\n\"Well, that sucks for Addison but, again, this isn't my problem. Why are you here?\" I finally said.\n\n\"I'm not sure, to tell the truth. Addison told me you're straight, so I'm not here to try and, I don't know... fix you up with her or anything.\"\n\n\"Okay... so why are you here?\" I asked again.\n\n\"I just... I think she needs to talk to you, to work through what happened between you two. I don't think she's going to be able to let it go as things stand. You two got so close, so fast. I've known her for years, but she came to depend on you as a friend more than she ever has with me and it only took you a couple months.\"\n\n\"If she needs to talk to me then she should reach out. It's not like I blocked her.\"\n\nAmber sighed and stood up. \"You're right. It should be her problem and her responsibility to reach out, but she won't. She's in a downward spiral. I think maybe she needs to at least talk to you, but she's too fucking terrified to do it. Honestly, I don't know what's what. I'm just here because I hoped you still cared about her as a friend and thought you'd want to know she's not doing well. At all.\"\n\n\"Well... okay. Thanks, I guess...\"\n\n\"No problem. Just so you know, if you tell her I came to talk to you she might never speak to me again. I don't care, though, because I don't think I'm going to get through to her any other way.\" After a pause, she added, \"It was nice to meet you.\"\n\n\"It was nice to...\" I started to say, but she'd already walked out the door without looking back.\n\nI sat lost in thought. She'd broken up with Vivian. She was still hung up on me. She was terrified to talk to me. She was hurting.\n\nI was still hurting. But was I hurting just because I was mad at how she ditched me, or because I was hung up on her?\n\nI didn't know, but goddamnit I was going to find out.\n\n~~ Tenleytown, Washington DC, September ~~\n\nMy stomach was churning with butterflies as if I was at the starting line of my first Army Ten-Miler again. It had taken me two weeks after talking to Amber to screw up my courage for this. I was sitting in front of Addison's apartment building. It was hot and I was grateful for the two large shade trees in the front yard sheltering me from the cruelly blazing late summer sun.\n\nI had known where she lived since we'd first started hanging out. When she'd first texted me her personal contact info it had included her street address and apartment number, but I'd never been inside her place.\n\nHer apartment was an older building, one of the squat brick two-story models with four apartments on each floor that had sprung up all over DC during the Cold War and the buildup of the infamous industrial-military complex. She lived on the second floor, and since her building had no elevator we'd always just hung out at my condo instead.\n\nI'd done a little covert work to set up this confrontation. Through Kat, I'd had Megan ask a friend of hers in Lampedo's DC office to text her when Addison left work, and then Megan had called to let me know that she was on her way home. She'd left the office a half-hour ago. If my toes could tap, my knee would have been bouncing.\n\nJust when I was about to decide she'd gone out somewhere, rather than coming straight home, I spotted her slowly walking down the sidewalk from the direction of the Metro. She was lost in thought, her head down, looking at the sidewalk under her feet.\n\nShe was dressed as I always pictured her in my mind, like the night we'd met. She wore a smart looking, light wool business pants suit and silk blouse. She was carrying her suit jacket over one arm and her briefcase and a cloth Trader Joe's shopping bag in her other hand. I said nothing to draw her attention, simply waited in my wheelchair, blocking the sidewalk up to her building's door. It was so jarring to see her dreadlocks gone. Her fine, straight hair made her look like a Valkyrie in a suit. Had her eyebrows always been such a pale blonde and I just hadn't noticed? Her eyes had dark circles under them. It also looked like she hadn't slept in a week.\n\nShe nearly ran into me before her peripheral vision told her someone was blocking her path and her head jerked up.\n\n\"Liz! What the f--... What are you doing here?\"\n\nI wanted to smile. I didn't. Instead I just evenly met her gaze. \"I thought it was time we talked... about what happened between us. Don't you?\"\n\n\"No, Liz, I don't want to talk about it.\" She hadn't moved an inch from where she'd stopped.\n\n\"'Well, it kind of seems to me like you left a whole lotta shit unresolved between us when you just walked away from me like that. Seems to me we both probably have some issues because of it.\"\n\n\"I've fucked up enough already. Go home, Liz.\" She finally shook herself out of her daze and stepped on the grass to walk around me to the front step.\n\n\"Are you fucking serious?\" I said, spinning my chair to follow her. \"You can't stop for one minute and tell me what's going on in your head? How can you just--\"\n\n\"I can't,\" she said as she opened the door with her keys. \"I'm sorry. Goodbye.\"\n\n\"Addison!\" She let the door swing shut behind her. The click of the lock sounded like a gun being cocked and pointed at me. I watched her through the glass of the door as she started up the stairs. \"Addison! Goddamnit, Addison!\" She vanished out of sight.\n\nI couldn't believe she was being so stubborn...\n\nI rolled my chair forward, popped a wheelie and landed my front wheels up onto the low patio in front of the door. Giving my back wheels a powerful shove forward, I levered my chair all the way onto the stoop. There was a small panel with eight buttons. The button marked 203 had a label that said Wagner next to it.\n\nI reached up and pressed the button, hearing the accompanying faint buzz through the brick wall. No answer. I pressed it over and over, then leaned on it for a solid minute.\n\nNothing.\n\nI couldn't have made myself leave if I wanted to. I just sat there, fuming and staring at the door, willing her to come back down. Five minutes passed. Then ten.\n\nI was looking around on the ground for pebbles I could throw at the windows above me when I caught movement inside the building out of the corner of my eye. I eagerly sat up in my chair, but it turned out not to be her. Instead it was a man pushing a bicycle. He got a little tangled up trying to hold the door and guide his bike at the same time, so when he pushed the door open, I grabbed the handle and held it open for him while he got his bike outside.\n\n\"Thanks,\" was all he said. He clearly didn't care much about security, as he jumped on his bike and pedaled away without so much as a look back.\n\nI wheeled inside and looked up the stairs. They were old. The well-worn, wooden treads looked slick with age\n\nFuck it, I thought. I rolled my chair next to the steps, locked the brakes on my wheels and slid off onto the first step. I held onto the railing with one hand and put my other palm flat on the step, then levered myself up onto the next one. Then I reached up higher on the railing and repeated the motion. Then again. And again. My heels were banging limply against the wood with each step I ascended and I was sure I'd have some pretty good bruises there tomorrow, not that I'd feel them. By the time I reached the top and looked down the steep stairway at my chair sitting empty by itself below me, I decided this was just about the stupidest thing I'd ever done. But I wasn't about to turn back now.\n\nThe two doors at the top of the steps were 201 and 202. Of course. I could see two other doors down the hall toward the front of the building. I flopped onto my stomach and started high-crawling down the hallway. The motion came easily to me after all the practice I had during basic training. I'd been able to use my legs to help push then, but it had been in loose sand; on the hardwood of the floor I didn't need my legs. It was trivial to crawl with my elbows the length of the hallway. 203 was on the left and I propped myself up into a sitting position against the near wall and pounded on the door with my fist. I waited maybe five seconds then pounded again. Another five seconds. Then I just kept pounding until the door flew open.\n\n\"What?!\" Then she did the most satisfying doubletake in history. \"Liz, what the hell?! What are you doing?! How did you--\"",
        "\"How I got up here isn't what we're going to talk about, Addison!\" I shouted over her. \"We were both part of this and you don't get to make the command decision about what we will and won't talk about!\"\n\n\"I already told you I don't want--\"\n\n\"I know, you've said, you don't want to talk! You fell for me! You're gay, I'm straight! You can't deal, so you get to cut me off and never talk to me because that's what's best for Addie! You even get to kiss me before you walk out of my life! But you don't get to decide how you made me feel with all that shit and I need us to talk about it!\"\n\nShe looked anguished. \"I am so sorry if I hurt you, but I had to. I can't--\"\n\n\"You can't what?\" I snapped. \"You get to just fuck off forever, leaving me to wonder what I did wrong or what I could have done differently to--\"\n\n\"Liz, stop! We're not doing this! God! Come on, I'll help you back down the stairs.\" She leaned down to take my hand to try to move me.\n\n\"No!\" I snarled and grabbed her wrist. She flinched in surprise at the strength of my grip as I pulled her towards me and reached up with my other hand. Two can play her game, I thought. I grabbed her behind her neck, pulling her face down. She stumbled down to her knees as I locked my lips onto hers.\n\nThe ZING that went through me was just as strong as when she'd kissed me at the top of the Metro escalator all those weeks ago, like a lightning bolt. I swear, I could feel it in my nerveless toes. At that moment, all my questions about whether or not I really wanted her fled my mind. I wanted her. She struggled against me for a moment or two until her brain registered what was happening.\n\nI saw her eyes widen in surprise, then close. I closed mine as well as I felt her mouth open. My tongue moved gently past her lips and she tasted sweeter than I would have believed. After what seemed like an eternity, I let her go.\n\nShe leaned back away from me. An inch. Maybe two. Her eyes slowly opened, staring into mine.\n\n\"Liz?\" she whispered.\n\n\"I don't need you to help me down the stairs. I need you to go bring my chair up so someone doesn't steal it while I'm here.\"\n\nTo be continued..."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "broken heart",
        "disabled",
        "gay",
        "gay romance",
        "heartbreak",
        "lesbian",
        "lesbian romance",
        "lesbian sex",
        "wheelchair"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/wheels-in-motion-ch-04"
}