{
    "title": "Going Rogue Ch. 04",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\n Feedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\n This story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\n \n\n Part 14 - Static On The Line \n\n \"What?!\" Cindy gasped.\n\n \"That means,\" said Tanya Perlman, \"they knew it was you following Bryce.\"\n\n \"Yes.\" I said. \"And I have a feeling they were listening in on encrypted Channel 5 radio, as well. They used the encryption code right next ours: 'QB' instead of 'QA'... they could just switch one letter over, and listen to us, then switch back to talk amongst themselves.\"\n\n I continued: \"So Bryce drove that route down County Road 5, stopped at the Farmer's Market to see if I came up on him. McCombs and Hendricks were ready in case I took Riverside Drive instead of County Road 5. That shows some... thoughtfulness and anticipation.\"\n\n \"It shows one hell of a lot more than that.\" said Cindy. \"I didn't even remember that exact route you took that night to Ward Harvester... but someone sure as hell did.\"\n\n \"Think we have a leak?\" asked Tanya, missing Cindy's point. \"Who else knew of your plan to follow Bryce as a Uniformed patrolman?\"\n\n I said \"You two, Teresa, Myron and Mary, since they showed you how to work the tracking system downstairs, the Duty Desk persons down there with you, and also the second shift personnel at the helm. The Duty Desk people I got the keys to the Police cruiser from would've known I had the car. Laura knew, since I called and said I wouldn't be home tonight.\"\n\n \"Someone had to have overheard someone, somewhere.\" Tanya said. \"So what are you planning to do now?\"\n\n \"I'm planning to go get a shower and clean up,\" I said, \"and then join y'all in MCD for the coffee klatch.\"\n\n * * * * * * * * * * * * * * * *\n\n \"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette at 7:00am this same Thursday, October 8th, from in front of the State Office Building on the north side of Courthouse Square. \"Channel Two News has learned that the College Republicans plan to stage a 'Draft Val!' rally on Campus today. Their goal is to ask Governor Valnius Jared to reconsider his one-term pledge, and run to defeat SBI Director Jack Lewis in the General Election next year!\"\n\n \"The College Republicans say the rally is spontaneous, but Channel Two News has learned that College Republicans on the campuses of City University and State Tech are also planning rallies for today, and that a rally by a group called 'Concerned Citizens of Midtown' are going to hold their own rally to draft the Governor into running again. Political experts are questioning if this is really spontaneous, or a calculated plan by State Republicans.\"\n\n \"Who are these 'experts' ov vich shee speeks?\" asked Cindy Ross, mimicking my asking that many times while listening to media reports.\n\n \"Geez, they're so fucking obvious about it.\" I said. \"They're too stupid to make it look spontaneous like I told them to...\"\n\n \"They're Republicans. What else did you expect?\" asked Jenna Stiles, her voice acid.\n\n \"Jenna!\" Cindy spat, trying to keep her voice to a whisper.\n\n \"She's right, Captain.\" I said agreeably, noticing that Joanne Cummings had glared at Jenna, and was now glaring at me. So I said \"I'm going to send Detective Cummings to their next meeting, and let her borrow my crowbar so she can beat some sense into them.\" Joanne smiled brightly at that as we turned back to the TV.\n\n Bettina was wrapping up: \"Asked for comment, Governor Jared stated last evening that he has no plans to run again, and that his family would be the most important consideration in any future plans.\" Bettina said. \"Let's go to Nick Eastwood for the Sports report. Nick!\"\n\n \"Thanks Bettina!\" said Nick Eastwood, reporting from outside the University Stadium. \"The University has suffered a 1-4 start to their football season this year, and Coach Bronson is feeling the pressure to turn things around. Upcoming conference games will be key-----\" The feed suddenly started getting staticky, then faded out, before coming back in again. \"Let's go to the tape.\" said Nick.\n\n A couple of pre-recorded interviews had Coach Bronson discussing with Nick Eastwood about the season. Nick said \"Coach, if you can win the next two conference games and get back in it, the game against the currently undefeated Wildcats on Hallowe'en could be very important. What will you do to get your team ready?\"\n\n \"We just have to play hard, execute the fundamentals, and have our game plan ready for every opponent.\" said Coach Bronson. I could see the stress on his face, however, and knew there were problems in the University locker room.\n\n Then a tape of Eastwood interviewing the Athletic Director was shown. \"Sir,\" said Nick, \"how important are the next three games for the University's football program?\"\n\n \"We need to win all of them, of course.\" said the Athletic Director. \"But the Wildcat game is a 'must-win' for our program. Our alumni and season ticket holders just won't tolerate continued humiliation at the hands of the Wildcats.\" \n\n Ouch, I thought. That does not bode well for Coach Bronson, what with the A.D. being so direct. It was the football equivalent of State Senator Sean Stockton saying voters had nowhere else to go...\n\n Nick Eastwood came back on live. \"As you can see, the Wildcats game on Hallowe'en night is crucial to Coach Bronson's----\" the feed began being interrupted again, going in and out, as if it were being jammed.\n\n \"Commander,\" said Martin Nash, \"what do you think about the continued humiliation of the Bulldogs by the Wildcats?\" He was trying to start trouble... and he was succeeding.\n\n \"Mr. Eastwood was admirably exact: 'continued humiliation' is what I expect to occur.\" I said with a big grin. \"It's going to be one scary-as-hell Hallowe'en for our opponent that day.\"\n\n \"Detective Nash,\" said an irked Cindy Ross, \"isn't your evaluation coming up soon?\"\n\n \"I hope so.\" I replied. \"If the Wildcats win, I'll have some glowing comments to make.\"\n\n \"In that case: Go Wildcats!\" said Theo Washington, who had no skin in that game. But the look Cindy Ross gave him might have dampened his enthusiasm.\n\n \"We'll just have to bribe the Commander with doughnuts, Theo.\" said Joanne Cummings, rescuing Theo. \"Captain Ross, too.\"\n\n \"Three boxes, Joanne.\" I said. \"Three boxes...\"\n\n * * * * * * * * * * * * * * * *\n\n \"Hi Bettina,\" I said into my personal cellphone as I sat in my office.\n\n \"Hello yourself, Don.\" Bettina said huskily. \"I hope you're calling to ask me for a date.\"\n\n \"Not this time, but we'll get together soon.\" I said. \"And that's off the record, by the way, as is this question: why was Nick Eastwood's feed going in and out this morning?\"\n\n \"Er, I'll have to check with the engineers.\" said Bettina. \"We do get that on our satellite linkups from time to time.\"\n\n \"I'd appreciate it if you check and find out.\" I said. \"It could be professionally important... meaning my profession, not yours.\"\n\n \"Oooh, is there a story here for me?\" asked Bettina, her voice picking up noticeably.\n\n \"There might be.\" I said. \"I'll certainly give you the scoop if I find something.\" After goodbyes, I hung up, then made another phone call...\n\n Part 15 - Planning Stages \n\n At 8:00am, David Krueger reported for duty as a Consultant. I had Mary take him through in-processing, and told her to tell the Armorer to give him practice time on the range using my allotment of practice ammunition.\n\n \"With all due respect, sir,\" said Cindy Ross, \"you need that practice more than he does.\"\n\n \"Are you trying to tell me something, Captain?\" I asked with a grin. \"Besides, I can always buy more ammunition.\"\n\n He was then taken through MCD, where he was assigned a desk. After talking with the Detectives a while, Lt. Teresa Croyle came and got him and took him through Vice. In introducing David to Julie Newton, Teresa made sure to tell Julie that David was here to help reduce Julie's overload, and that she wanted Julie to help David get up to speed with some of the white-collar financial crimes that Julie was investigating.\n\n * * * * * * * * * * * * * * * *\n\n \"So how did Julie take David's hiring?\" I asked at the 'Angels' meeting at 8:30am.\n\n \"She pretended to be okay with it.\" Teresa said. \"But if there is one thing I've learned from the Iron Crowbar, it's to watch someone's eyes. I could see that she wasn't happy about it.\"\n\n \"I saw that, too.\" said Cindy, who'd been in the room at my request, and told to watch Julie's reaction. \"And I'm wondering if David's training should be left to Julie, or if Myron should do it.\"\n\n \"Commander,\" said Tanya Perlman, \"is there something going on with Detective Newton that we should be aware of?\"\n\n \"Ah yes, I should address that very fully.\" I said, leaning back in my comfortable Command Chair. \"First, some of you may or may not be aware that Julie Newton was having a sexual affair with Captain Harold Malone while he was here with the TCPD. It does not take my mother's abilities to observe, as well as gather gossip, to see what had been going on there. So I've never had any illusions about where her loyalties lay.\"\n\n \"Second,\" I continued, \"She has been doing excellent work, but I am somewhat surprised she has not moved on from here, what with Malone's death and all that's been going on around here since. And one day she may indeed decide to leave, so I've been looking for someone that could do the things she does, and I think we all agree that David Krueger is capable of that.\" They all nodded.\n\n \"Commander,\" said Teresa Croyle, peering intently at me, \"do you trust Julie Newton?\"\n\n \"As much as I trust anyone, Lieutenant.\" I said. \"As much as I trust anyone. Okay, let's plan tonight's stakeout of Patrolman Bryce.\"\n\n \"What?!\" gasped Tanya Perlman. \"You said he was onto you, or us, last night!\"\n\n \"That's right.\" I said. \"But they may not realize we know they were onto us.\"\n\n \"So what are we going to do?\" asked Teresa.\n\n \"I'm going to follow him again.\" I said. \"But this time, I think he's going to confront me. And if I'm right...\" I told them what I expected to happen.\n\n * * * * * * * * * * * * * * * *\n\n \"Who's up for a double cheeseburger?\" called out the voice in my door. It could only be one person.\n\n \"Hi Jack.\" I said. \"Come on in.\" Indeed, it was FBI Special Agent in Charge Jack Muscone. What surprised me was who came in behind him: Chief Griswold.\n\n \"Hi Chief!\" I said. \"Back from Midtown, I perceive.\"\n\n \"Not much gets by you, Crowbar.\" growled the Chief with a merry grin under his mustaches. \"And I'm hungry after two days of eating Governor's Mansion swill. Let's go!\" I did not need to be told twice, and soon we were in my Police SUV headed for lunch.\n\n Arriving at the Irish Pub, a.k.a. the Cop Bar, we were given a table in the private back area so that we could talk.\n\n \"So, Chief,\" I said, \"is the Governor hating me for taking Krueger from him?\"\n\n \"No, but some of Krueger's co-workers were disappointed.\" replied Griswold. \"They were happy for him to get the opportunity, but he really made their lives easier with his abilities.\"\n\n \"So, Chief,\" I said, \"Jack is here because I've asked him to be here for a very important mission tonight. So that means you are here for another reason. And you just spent not one but two nights at the Governor's Mansion. I would say you've convinced him to bring up some National Guard assets.\"\n\n Jack Muscone groaned and the Chief's eyes glowed. \"What did you win this time, Chief?\" I asked.\n\n \"I've got to pay for lunch for all of us.\" said Jack.\n\n \"Which you're going to expense.\" I replied. \"What else did the Chief win?\"\n\n \"Ferchristssake!\" gasped Jack. He took out his wallet and handed the Chief a $20 bill.\n\n \"Four hundred years ago, Agent Muscone...\" said the Chief with a smile.\n\n \"Which is why I wouldn't bet you a hundred.\" replied Jack.\n\n \"Smart Federal\u00e9, he is.\" I said. \"How come y'all aren't betting me directly?\"\n\n \"Like you told Sean Stockton,\" said the Chief, \"we'd go broke if we did.\"\n\n * * * * * * * * * * * * * * * *\n\n Julie Newton and her sister Yvonne sat down for lunch at the Soup & Salad place. Yvonne was Paulina Patterson's assistant. As Julie looked around, she saw several older ladies in the room, and she felt as if every one of their eyes were upon her.\n\n \"Did Helena say anything about why they hired this guy?\" Julie asked.\n\n \"Not until I asked.\" said Yvonne. \"But when I asked her who the new guy was, she said he'd been in the Commander's Police Academy class, and the Commander offered him a job when he saw him in Midtown. She also said the Commander was happy because it would take some of the workload off of you.\"\n\n \"It's not like I was overloaded in the first place.\" said Julie. \"And it was weird... when 'Teresa Cunt' brought him in to meet everyone, Captain Lezbo was in there and I'm sure she was watching me.\"\n\n \"You are really not acting like yourself today, Julie.\" said Yvonne. \"If I didn't know better, I'd say you're acting paranoid. It's not like they're going to fire you and replace you with this guy. You're way too valuable to them. I heard Lt. Croyle tell Paulina that just the other day.\"\n\n \"Maybe.\" said Julie, seeming from a million miles away.\n\n \"Okay, what is it?\" Yvonne asked.\n\n \"It just got me to thinking.\" said Julie. \"Ever since Harold Malone was run out of Town and then murdered in Alabama, I've been wondering if it was time to just... move on. Find an accounting job in some big corporation in the City and move over there.\"\n\n \"And give up being a police officer?\" gasped Yvonne. \"You're a full Detective, and you do tax preparation work on the side, as well as making some good money for Thomas P. Cook keeping some of his books. Why would you leave?\"\n\n \"I know.\" said Julie. \"And you're here, too, which helps a lot. But I don't know about Commander Troy. He gave that speech about dogs being like humans, and that didn't go over well with a lot of Officers. He's beyond-the-pale arrogant, and carries that crowbar around like he's some kind of hot shit.\"\n\n \"Don't say that out loud in front of anyone else.\" Yvonne warned. \"Most of the people at Headquarters think he's the greatest thing since sliced bread. A lot of them say he's cleaned up a lot of corruption.\"\n\n \"Yeah... by saying that good people like Harold were bad.\" spat Julie. \"He comes in, says 'This guy is bad, this guy is corrupt.' and everyone just eats out of his hand because he solved a few crimes. And I really do wonder how he's able to 'solve' those crimes. Lezbo and Cunt say because he observes and deduces things, like Sherlock Holmes. Well, I say that Sherlock Holmes is one for the story books, not reality. I think there's a lot more to what Troy knows than everyone realizes.\"\n\n \"You think he's dirty?\" asked Yvonne, her eyes wide with shock.\n\n \"Like you said,\" Julie replied, \"I'll just not say some things out loud.\"\n\n \"Tell you what.\" said Yvonne. \"Why don't you put in for a couple days vacation, and you and I go up to Lake Amengi-Nunagen. The leaves have turned, it's really pretty up there, and you can get some rest, have a few drinks, see if we can find some young dumb studs to fuck...\"\n\n Julie smiled at the mention of the young dumb studs. \"Well, I guess we can go up there for a couple of days. I want to check the properties around Lake Watchacoochie, too...\"\n\n * * * * * * * * * * * * * * * *\n\n Okay, I usually don't have any particular fascination watching other people eat. It might can tell me some things about their personalities, but it's not the most pleasant thing. But I have to admit that it is fascinating to watch Jack Muscone eating a double cheeseburger. I truly believe that it is the nearest thing for him to Heaven on earth.\n\n As we finished our lunch, I got a text message on my personal cellphone. \"Guys, I'll have to drop you off at Headquarters. I need to go meet someone on Campus... and not my wife.\"\n\n After dropping off the Chief and Jack at Headquarters, where their cars were parked, I headed to the University Campus. My destination was the Army ROTC building. I parked next to Laura's car at the Psychology Building. She kept that extra space for clients or other visitors, a perk of being the Head of the Department. I knew she would not object to me parking there, though I might have to eat her pussy for an extra half hour to make up for it. Such hard duty, I thought to myself. The sacrifices I have to make...\n\n Walking to the Army ROTC building, I went inside. It was one of the oldest buildings on Campus, and it smelled a little musty. The basement area where a lot of military equipment and clothing was stored smelled even more musty. I heard some very light *pop* *pop* sounds, and realized that this ROTC building had a .22LR range in the basement... just as my ROTC building at my University had.\n\n I went to the Office of the ROTC Professor of Military Science, a Lieutenant Colonel. He happened to be in the Military Police Corps, which meant that he and I had some good things in common to talk about at Dr. Wellman's receptions.\n\n \"Ah, Commander.\" he said as his secretary ushered me in. \"Thanks for coming. I hope I'm not taking you away from important duties.\"\n\n \"No sir.\" I said. \"What can I help you with?\"\n\n \"Let's go upstairs.\" he said. \"There are some people I want you to meet.\" We went upstairs to a conference room. As we entered the room, I worked hard to keep the shock off my face. One of the persons in the room was the Commander of the ROTC unit at my School, the Colonel who'd been on Airborne jump status for so long before being injured, and who'd alerted Coach Marshall to me being investigated.\n\n \"Good to see you again, Commander.\" said the Colonel, shaking my hand. \"This is Sergeant First Class Tate.\" I shook hands with the tall, slender black-haired man, observing that his beret on the table was green. This man was Special Forces.\n\n We sat down, and the Colonel explained the mission. \"I was in Special Forces for a few years before going back to the 82d Airborne to be a battalion commander. Sergeant Tate was in Seventh Group with me.\" I nodded.\n\n \"Don, we've know that you've had some martial arts training as well as some basic personal combat training, and that you're working with Captain Ross.\" said the Colonel. \"But we also know from mutual friends that you are working against some pretty bad people. That rogue CIA ring you broke up had some mean bastards working with them, and I've asked Sergeant Tate to step up your training, if you're willing to do it.\"\n\n \"That does sound like a good opportunity, sir.\" I said.\n\n \"Tate is going to teach you standard Special Forces personal combat tactics.\" said the Colonel. \"If you think you're good with a crowbar now, you'll be devastating with it or anything else after he's done. He's one of the best in all the Army. And then he'll take you even farther with mixed martial arts to go along with your Aikido.\"\n\n \"I appreciate that.\" I said.\n\n \"Good.\" said the Colonel. \"Oh, and if you want to work out with the ROTC MS-IIIs up here, they'll get you back into the shape of a 21-year-old. I work out with the guys at my-- er, our School, and it's the best part of the day for me.\"\n\n \"I'll be there, sir.\" I said, more to the local Commander. I knew that I needed to do this for the upcoming battles. But I also had another reason, one that none of these guys could ever guess...",
        "Part 16 - Rulers Of The Night \n\n At midnight, I pulled out in the standard Police cruiser. I was again wearing a standard Police dark blue uniform, but this time simply with no rank on, and with my own nametag. My badge was generic, with no rank or position listed across the top. I had to be careful at this point to not misrepresent who I was, lest any legal case I might have on Bryce could be compromised.\n\n As I drove, I had Patrolman Bryce's ID chip and his car's GPS showing where he was on my laptop monitor that was mounted on the dashboard. He was driving around the area of the Downtown District just north of Courthouse Square, going slowly past the backsides of the Federal and State Buildings several times.\n\n Sergeant McCombs and Officer Hendricks were nowhere to be seen. Myron and Mary, and David Krueger getting some very fast and shocking on-the-job training, were in the Command Post, monitoring.\n\n As expected, I did not have to wait very long to find out what was going to go down. There is a copse of trees just east of the Courthouse Building, which dominates the east side of Courthouse Square. Cindy and I had walked through it on the way to confront Parole Officer Ryan Frost in his office.\n\n In the night-time, this copse of trees was pretty dark, despite the street lighting in the area. And Patrolman Bryce had just pulled into it.\n\n * * * * * * * * * * * * * * * *\n\n Meanwhile...\n\n The two trucks painted in brown military camouflage were fairly well concealed under the north side of the structure of the University's Memorial Stadium. Inside were National Guardsmen from the 3457th Signal Intelligence Battalion, using an impressive array of electronic equipment that had been 'hardened' for combat field use.\n\n \"Agent Muscone,\" said the Captain of the unit, \"we're picking up the signatures. Patrolman Bryce rode by the Federal Building, then his vehicle transmitted a 'blurp' signal.\"\n\n \"His car may have equipment that reads the frequencies coming from the antenna on top of the Federal Building.\" Muscone said. \"God, how did the Iron Crowbar know that?\"\n\n \"Sir, the other signatures may be the receiving station monitoring not only Federal and State radio signals, but the Town & County Police Department's traffic.\" said a Sergeant at one of the stations.\"\n\n \"I'm sure it is.\" said Muscone. He took out his cellphone and dialed a number. \"Do you have the warrant? We're going to make the raid...\"\n\n * * * * * * * * * * * * * * * *\n\n I stopped my car some 100 feet behind Bryce's. I could see him outside the car, leaning against the hood. He was obviously waiting for me.\n\n Before getting out, I looked around, including peering past him and out onto Courthouse Square. I had noticed pairs of old people sitting on benches on College Avenue along the way. Why were they out so late? I wondered.\n\n But I had something far more important, and dangerous, to consider. I texted on my cellphone that I was confronting Bryce. I knew Cindy, Theo, and several Uniformed officers were in the area, and I hoped they'd be ready.\n\n I got out of my car and approached Bryce, red crowbar in hand and at the ready. He just turned his head and peered at me, still acting casual, laconic even. But I noticed he was right at the front edge of the car, well forward of the front tire as he leaned against the side.\n\n \"Well, if it isn't Commander Troy.\" said Bryce. \"Or Corporal Feeley, or Irons, or whatever you're calling yourself tonight.\"\n\n \"Funny how you would know that.\" I said.\n\n \"While you were following me, I had you on my computer screen.\" said Bryce. \"It was weird seeing the name 'Feeley' there... like a ghost following me.\"\n\n \"And an interesting route you took last night.\" I said. \"So who are you working for?\"\n\n Bryce just smiled. \"The Town & County Police Department.\" he said. \"So, Commander... you here to arrest me?\"\n\n \"And what would I be arresting you for?\" I asked, my senses on high alert. Something was not right here... most very not right...\n\n \"You think I killed some dogs.\" said Bryce. \"Of course, you have no proof.\"\n\n \"Some witnesses might recognize you in a lineup.\" I said. Bryce laughed sardonically.\n\n I then said \"No, I'm not here to arrest you. I'm here to find out why you're being such a stupid fuck.\"\n\n Bryce's eyes flashed anger, which I could see even in the darkness. But he recovered and said \"Maybe you think you'll beat me down like you did Thatcher. I'd love for you to try. I'm not some dumb shit, I'll whip your ass up one side and down the other. You pick on shits that don't know how to fight back, but I sure as hell do.\"\n\n \"I'm sure you do, being a former Green Beret----\" I said. As I said it, I realized that Bryce was pretending to be casual, but his body was actually tense, ready to move. At first I thought he was preparing to either attack me or defend himself if I attacked him... but then I realized that he was near the edge of the car, and ready to dive around the front of his vehicle to the other side.\n\n I was being set up, I realized. Set up for an assassination attempt.\n\n \"Dear me, Mr. Holmes, dear me.\" said Bryce. He must've realized that I was seeing through the ruse. His words shocked me, but I made sure to concentrate on my surroundings rather than succumb to his obvious distraction. I let my senses flow, staying in shadow near my car so that I couldn't be easily seen in the darkness.\n\n \"Ah, I understand.\" I said. \"And I'm sure you think you just recorded that about Thatcher.\" I didn't have my little anti-bugging device... I had a far more powerful unit in the car... that was shutting down whatever was in Bryce's car.\n\n \"So, Bryce,\" I said, \"what's in the back of your car? In the trunk?\"\n\n \"You'll be dead before you find out.\" Bryce answered.\n\n \"Oh really?\" I asked, ready to signal for the reinforcements to come in. \"We'll see----\"\n\n *WHEE!!!!* *WHEE!!!!* *WHEE!!!!* *WHEE!!!!*\n\n WTF? The sounds of whistles blowing started somewhere behind me, to the east, then suddenly it was like the whole area was full of whistles. Bryce and I both looked around. He'd jumped to the front of the car, so I knew in that split-instant that I'd been right that he was ready to duck for cover.\n\n And then I heard it...\n\n The high-pitched whine of a small motor... a motorcycle motor. It was coming from the east, behind me.\n\n As the whistles had gone off, the Police in the area had jumped out of their hiding places. Police cruisers were beginning to pull up... and the motorcycle was approaching!\n\n \"GET DOWN!!!\" I yelled out, into my radio as well as into the air. \"EVERYONE GET DOWN! COVER YOURSELVES!!!\n\n And just in time! I saw the motorcycle suddenly appear out of the darkness, coming up the sidewalk alongside College Avenue. As I ran around to the other side of my cruiser, I could see the rider in black leather and a black motorcycle helmet... and that she had breasts. It was a woman... the woman...\n\n She pulled up and I saw her reach into her leather jacket and pull out a pistol... semi-auto with a silencer. She extended her arm and the driver side window of my cruiser exploded.\n\n \"Get him!\" I heard a voice yell. It was Captain Ross's voice. \"Shoot him!\"\n\n \"NO! DON'T SHOOT!\" I ordered into the radio and out loud again, seeing Bryce scrambling around as the motorcyclist revved up and took off into Courthouse Square.\n\n *BANG!!!!*\n\n It was one shot, from somewhere south of College Avenue, but I saw smoke being to billow from the motorcycle as it reached the west end of Courthouse Square, in front of City Hall. The driver turned north, then disappeared up the road out of sight.\n\n \"Follow that motorcycle!\" I yelled into the radio. \"Follow the smoke trail!\" Two Police cruisers sped off, blue lights flashing and sirens wailing. \n\n Police began to gather at the southeastern corner of Courthouse Square. Cindy ran up, asking \"Are you all right, Commander?\"\n\n \"Yes, I'm fine.\" I said. \"Who fired the shot?\" Everyone looked at each other.\n\n \"Come on,\" I said. \"It's better if you tell me now.\"\n\n Everyone looked around, then Cindy said \"Sir, I'm not sure that any police officer shot at that motorcycle.\"\n\n \"Sergeant Rudistan,\" I said, \"take charge of this scene. Captain Ross, call Internal Affairs, have them send a team. Have them affirm that no officer here fired his or her weapon. No officer is to leave until their weapon is checked. That includes me, and that includes you, Captain.\"\n\n \"Roger that, sir.\" said Cindy.\n\n Part 17 - Burning Cycle \n\n The I.A. team had ways to quickly check to see if a gun had been fired. Heat in the barrel showing up was one way; another was a kind of blacklight that would show recently expended powder. It wasn't foolproof, but it was enough to exonerate everyone... including Patrolman Bryce.\n\n After letting them check my gun, I began looking around. All the old people that had been sitting around were gone. There were some college-age kids that had been walking in the area that had come to see what was going on. I knew that News vans would also be coming up.\n\n Then we got a call, saying the cycle had been found, burning. I said \"Captain Ross, are you driving my SUV?\"\n\n \"Yes sir.\" Cindy said.\n\n \"Let's go. Rudistan, stay here, secure the scene, look for the shells from the shots fired by the motorcyclist, and by whoever hit the motorcycle.\n\n As Cindy drove me in my SUV, I said \"Damn good shot to hit a fast-moving motorcycle like that.\"\n\n \"They missed.\" Cindy said. \"Hit the cycle instead of the driver.\"\n\n \"Nooooo.\" I said. \"That shot was intended to miss the driver and hit the cycle, if I don't miss my guess.\"\n\n \"And you never do.\" said Cindy. \"But why would someone want to hit the cycle and not the driver?\"\n\n \"That,\" I said, as we arrived at the scene, \"is the $64,000 question.\" We got out of the SUV and came up to the patrol cruiser and two officers. Next to them was a motorcycle lying on the ground, burning fiercely.\"\n\n \"Shit, this thing will be consumed by the fire before it can be put out.\" I said. \"Guys, get back from it; the gas tank could blow.\"\n\n \"It already did, Commander.\" said one of the officers. I told them to get on the other side of their patrol car anyway. I then called on my radio for every officer possible to get down to this location and start looking for a leather-clad motorcyclist, slender in build, possibly a woman...\n\n But all of their efforts would be fruitless. The motorcyclist would get away this night.\n\n * * * * * * * * * * * * * * * *\n\n An hour later, about 2:00am, Friday October 9th, I got an expected cellphone call. \"Okay Cindy,\" I said, \"let's go to the construction area of the State Crime Lab.\"\n\n When we arrived, there were a number of cars there, most of them black with Federal Government license plates, and a couple of military vehicles as well. Cindy and I headed to the trailer. I noticed that three men were handcuffed and being held off to one side. One of them was a very angry Bert Jones.\n\n \"Hi Jack.\" I said as I entered the trailer. \"A successful bust, I perceive?\"\n\n \"Not much gets by you, Don.\" said Jack Muscone.\n\n \"Hello, Dr. Fredricson.\" I said, as if I barely knew my own wife. Laura was also here, dressed in black pants, a black sweater and black boots, and looking mighty fine.\n\n \"Hello, Commander.\" Laura replied, not quite hiding the gleam in her lovely eyes. \"Captain Martin, this is Police Commander Donald Troy, who gave the FBI the tip to this, and Police Captain Cindy Ross. They're both FBI Consultants with Top Secret clearances, so you can speak freely to them.\"\n\n \"Good to meet you both.\" said Captain Martin, shaking our hands. He was a handsome man with a full head of brown hair and an air of authority. \"I'm in command of Company Alpha, 3457th Signal Intelligence Battalion, with the National Guard. I don't know how you figured it out, Commander Troy, but there were two trucks full of signal equipment. They were monitoring Town & County Police radio traffic, as well as signals from the University, the Federal Building in Town, and doing it from this trailer at night.\"\n\n \"Relative to what you have in the military,\" I asked, \"how sophisticated is this equipment? And do you know where it came from?\"\n\n \"It's not the really high-grade stuff the military has.\" said Captain Martin. \"But it's pretty good. Definitely not what a construction company would ever have nor need.\"\n\n \"Don,\" said Jack Muscone, \"they've really been tracking the Police, and especially you. We've got several logbooks of notes they made. They recorded the frequencies of our transmissions from the Federal Building; that will be enough to arrest them on Federal warrants.\"\n\n \"So why were they doing this?\" asked Cindy Ross.\n\n \"We're working on that.\" said Muscone. \"We're going to go back and check out Jones as well as this company. I get the feeling they've done this before.\"\n\n \"It may be a crime of opportunity.\" I said. \"New construction site right next to the State's University, and near a Federal Building and Federal Courthouse in Town. The question is whether the TCPD, the Feds, or the University is the primary target of interest to them.\"\n\n \"We'll find out.\" said Muscone. \"Don, you want to talk to Jones before we take him to the City?\"\n\n \"Sure.\" I said. I went with Jack, Cindy following, to where the three men were being held.\n\n \"Ah, Mr. Jones.\" I said. \"I believe you told the County Sheriff that you were going to have me gang-raped and then murdered. Looks like you are the one that's going to be sodomized... in prison. So spare yourself the trouble, tell us who put you up to this, and maybe you'll get protective custody.\"\n\n \"Go shove that crowbar up your ass, buddy.\" Jones said, practically under his breath. I nodded to Jack, who silently signaled for the FBI agents and military people to take the other two criminals around the corner of the nearby truck, out of sight.\n\n \"Okay, Captain,\" I said to Cindy, \"want to help me shove this crowbar up Bert's ass?\"\n\n \"Sounds like fun.\" Cindy said. She grabbed Jones and whirled him around so that his stomach was pressed against the back platform of the truck. I began tapping Jones's asscheeks with my crowbar, not all that hard.\n\n \"Damn, he shit his pants.\" said Cindy, smelling the odor before I did.\n\n \"One more time, Bert.\" I said. \"It's going to be a long, long night.\"\n\n \"Go fuck yourself.\" said Jones. \"HEY!!! HELP!!! I'M BEING ASSAULTED!!!\"\n\n \"Come on back over, Jack.\" I said. When they came around I said \"I didn't touch the bastard, but he's not going to talk. Maybe the FBI or CIA can use better methods and get something out of this stinker.\"\n\n \"Yeah, 'stinker' is right. You shit your pants, Jones!\" Jack said with a sardonic laugh. \"All right guys, take 'em away, but put a diaper on Jones before putting him in the car...\"\n\n * * * * * * * * * * * * * * * *\n\n \"Okay, I have to go.\" said Laura to Captain Martin. \"Jack Muscone will be your liaison if you find out anything more.\"\n\n \"Sure.\" said Captain Martin. \"It's very nice meeting you, Doctor.\" he said. \n\n \"Call me Laura.\" she said as they shook hands. He held hers for a moment.\n\n \"I may be in Town all weekend.\" he said. \"Maybe we could get coffee or a drink?\"\n\n \"Maybe.\" Laura said. \"Here's my card. Give me a call. If not this weekend, the next time you're in Town.\" It was her card as a University professor. He took it slipped it into his pocket with a charming smile. They left the trailer and walked up to me and Jack Muscone.\n\n Laura made her goodbyes to all of us, then left to go back home. Jack Muscone told us that he would give us a call if and when he learned anything new, so Cindy and I left and drove back to Headquarters.\n\n \"Want a drink?\" I asked as we entered my office.\n\n \"Sure.\" Cindy said. \"What I really want is some answers. What just happened tonight?\"\n\n \"I will tell you all of that,\" I said as I poured Cindy a Canadian Whisky and myself a Scotch from the secret stash in my desk drawer, \"tomorrow, when I have some answers myself. Right now, we should just go home and get a few hours of sleep.\"\n\n \"Can I just ride to the Mountain Nest with you? Jenna texted me; she was babysitting the kids while Laura wasn't there, and she's sleeping in the guest room.\"\n\n \"Sure...\" I said, then fell into thought. \"So where was my mom? I would think Laura would just ask her to come upstairs instead of calling Jenna...\"\n\n \"Maybe she's not there.\" Cindy said. \"Maybe she's with some stud that gave her a look like that Captain Martin was giving your wife.\"\n\n \"Ah, your powers of observation are increasing.\" I said with a grin. \"She had eyes for him, too. All right, let's go.\" We left, but my mind was still wondering why my mother was not spending the night at home... and why did I have the feeling that Cindy's answer was a distraction?\n\n Part 18 - Solution \n\n Friday, October 9th, was a a busy day. The Crime Lab's report of the burned out motorcycle revealed practically nothing of good use to us. Ballistics were being run on the bullets that killed the dogs, and I was expecting those reports to show the same gun killed all the dogs that had been shot.\n\n As for Patrolman Bryce, Lt. Masters reassigned him to first shift duty in the 3d Precinct only. Masters also ended the cross-precinct experiment with the six officers, and Jeremy Hatch was sent back to Courthouse courier duty.\n\n * * * * * * * * * * * * * * * *\n\n We went to the Cop Bar for lunch, 'we' being Jack Muscone, Cindy Ross, Sheriff Daniel Allgood, and myself.\n\n \"All three of those guys lawyered up.\" said Muscone to me as we ate. \"Bert Jones's lawyer is whining about his client being kept in shit-infested pants all night, but that's no big deal. As of right now, we don't think the construction company is fully involved; they picked up Bert Jones for this specific contract, and he hired the other two. We're working to find out just who recommended Jones for the job, and you know how that goes: Person A says 'I think Person B recommended him.' and Person B says 'No, Person A or C recommended him.' and so on. Government bureaucracy there.\"\n\n \"Who are their lawyers?\" I asked.\n\n \"Firm out of Southport.\" said Muscone. \"Ramon, Castro, and Partners, P.C. We're looking for Gresham & Mason connections, but so far all we're finding is some fringe connections to the Mob down there.\"\n\n \"Cool beans.\" I said. \"Sorry to interrupt. You were saying?\"\n\n \"Sure.\" Jack continued, \" So we're working through Jones's whereabouts since he left Crown Chemicals after the PCGW disaster all those years ago. We had done that before, when your mom and Cindy here solved that cold case, as we were trying to trace the movements of those radioactive chemicals. Not a lot has come up, though.\"\n\n \"What do you want to bet you get pulled off this case, and told to not ask about it nor Bert Jones again?\" I said.\n\n \"No way in hell I'm betting against you, ever.\" said Jack. Daniel laughed out loud as Jack asked \"Why do you think that?\"\n\n \"The sophistication of the equipment his guys were using.\" I replied. \"Either someone is going to be embarrassed over losing that stuff, or someone is behind these guys and gave them that stuff. Either way, they're going to want this thing shut down.\"\n\n \"So, as you asked,\" said Jack, \"who was their primary target? TCPD? Us? The School?\"\n\n \"Let's put that off for a second,\" I said, \"and talk about the entire case. I can see that Captain Ross's patience is on a thin 'leash', pun fully intended.\" Cindy gave a brief smile as I said that.\n\n I started in: \"I believe we will have no more dog killings, unless some idiot does some kind of copycat crime.\"\n\n \"So was Brett Bryce behind the dog killings?\" asked Cindy.\n\n \"Probably,\" I said, \"but we have no solid proof. We also likely have multiple perps involved. But the dog crimes were actually done for one reason: to distract us. Someone wanted us running around all over the County, looking for dog killers, and they did that so that we would not notice something else going on. Alas, by some fortuitous circumstances, that 'something else' was discovered and has netted the FBI some perps.\"",
        "\"Bert Jones?\" asked Daniel.\n\n \"Yes, Bert Jones.\" I replied. \"So, let me start at the beginning: the other morning I saw the new construction and went to the site to see what was going on. Pretty routine, one would think, but I was met with an exceptionally hostile reaction from Jones. I didn't have jurisdiction there, but Sheriff Allgood does, so I asked him to pay a friendly visit.\n\n \"That visit turned hostile, and quickly. Sheriff Allgood found nothing in the trailer, but that was because some of the equipment was removed and stored in a couple of trucks on the property during the daytime. The construction company may have known nothing about what Jones and a few of his guys were doing at night.\"\n\n \"Anyway, after that, everything went to the dogs. Literally. I get to Headquarters that morning and we're confronted with dog killings.\" I continued. \"As we investigated, I kept looking for a motive. It was clear that there was no pattern, and Theo and Cindy both astutely realized that.\n\n \"So I'm left wondering why these killings were occurring. There were three possibilities: one, some serial dog killer suddenly sprang up; two, there was a connected, underlying pattern and we hadn't found that pattern yet; and three, it was being done to distract us from something else.\n\n \"I saw no pattern, even with a couple of teachers or former teachers involved.\" I said. \"The four killings on the Southside truly made no sense, and someone even used a police car that looks like it was Coltrane County surplus. They have black and white Sheriff vehicles down there, and recently bought a couple of new ones and sold off the old ones.\"\n\n \"Why do that?\" asked Daniel, who barely beat Jack to the punch with the question. I looked at Cindy.\n\n \"Ah, to mix up the pattern.\" Cindy said.\n\n \"See Jack, she's definitely worthy of a Blue Crowbar.\" I said. Cindy merely waved the mentioned device in my general direction in warning.\n\n \"So, I'm spending my time looking into dog killings, and then we have a second set of them on the northside. And these two, while very likely the same person or persons, were different.\"\n\n I continued: \"They tried to make it look like they were mixing patterns, but there was a bit more purpose in these killings. They actually imported a dog that had been abused for some time into the yard behind the empty house, then killed it and the White's dog Charlie at the same time.\n\n \"I at first thought someone wanted to break into the White's home, but they have nothing of real value to burgle, and they were now on alert, having been forewarned by us Police Officers. You can also believe that while I was following Bryce around, other patrols were constantly riding up and down that neighborhood.\"\n\n \"And they say you can't find a cop when you need one.\" said Jack.\n\n \"Well, the Whites sure had no problem the last two nights.\" I said. \"But back to the story. Thanks to some descriptions and some good old fashioned Myron-and-Mary police work, the name of Patrolman Brett Bryce came up. He is known for shooting dogs on Vice raids, which was one reason Malone had him removed from Vice raids.\n\n \"I do believe he was one of the 'Siths' like Gunn and Brody, and never was activated by the Black Badge gang. But he was being expertly and profitably used by someone else... a certain Consultant of Crime that also deeply hates dogs. I believe that poor malnourished dog spent his unfortunate life, or the last part of it, in the clutches of that vile son of a bitch.\"\n\n \"Let me ask this.\" said Daniel. \"You said you think the same perp or perps did the southside and northside crimes. What's leading you to that conclusion?\"\n\n \"The firearm or firearms used.\" I said. \"Silencers were used in all of the shootings. No one heard loud gunshots, or even the noticeable pops of a .22 auto pistol. There were some reports of muffled noises, so I'm surmising that a silencer was used, and one that was not perfectly effective. And that suggests that all the shootings were done by the same gun or guns. Ballistics will likely show that to be true, as well.\"\n\n As Daniel nodded at that explanation, I went on: \"So I was curious about Bryce, but I also was looking around Town for something, anything, that criminals would want to distract me from by doing this. The duty logs were about as exciting as watching fresh paint dry. The only thing out of the norm in our Town and County... was a new construction site going up with an extremely belligerent foreman.\"\n\n \"And I'll add this.\" I said. \"My suspicions of this radio activity increased when reporter Nick Eastwood's transmissions to KXTC were going in and out. He was reporting from a mobile news van near the stadium, and Jones was transmitting data to somewhere, which interfered with the KXTC signal. I asked someone in KXTC to check it out for me, and was assured the KXTC equipment was fine but that it looked almost as if someone was jamming the signal. Not intentionally, but it was being jammed.\"\n\n \"And you are the only person in the world, much less the County, that would've noticed that.\" said Jack Muscone. \"And you want me to bet money with you?!?!\"\n\n I grinned, then continued: \"Now guys, if Bert Jones had not been so hostile that morning when I stopped by,\" I said, \"they're probably still sitting there at night monitoring our radio frequencies and communications. But I suspect Jones panicked when I drove up the first morning. He knew damn well who I was, and was probably thinking to himself that I somehow had gotten wind of the operation going on there. He gets huffy and puffy when all I wanted to know was what the construction was about.\"\n\n \"But his overreaction made you realize something else was wrong.\" said Daniel. \"And then when I showed up with the Deputies, he must've really believed you knew all about it. He got hostile with me just long enough to give his guys time to cover up anything needing it, then relented and of course we found nothing.\"\n\n \"Wait a minute.\" Cindy said. \"The first dog killings had already happened... even before you pulled into that lot, from what I remember of the timeline of this.\"\n\n \"No Jack, you cannot steal her from me, despite this demonstration of brilliance.\" I said to Jack.\n\n \"I'm still going to try.\" said Jack. Cindy smiled at the compliments.\n\n \"You're right, Cindy.\" I said. \"Which is why I know that there is yet something else going on. But I'll come back to that in just a second. First, let's talk about Bryce.\"\n\n I began this phase of the story: \"Since I had Bryce in my sights, I decided to follow him and see if anything of interest popped up. His getting himself on 3d shift was a good plan if he had some 'Black Badge'-like things to accomplish. At first I thought he might be doing some drug dealings like Sergeant Carroll did, and then I thought he might be setting up some smuggling pipeline. In case you guys haven't noticed, in the last few months we have run into a lot of non-drug smuggling: diamonds, contraband, stolen goods from wealthy homes, and such.\"\n\n \"But the Bad Boys somehow got wind of our plan.\" I continued. \"And so their Consultant had Bryce drive the same route I drove on that night I rescued the kids from Ned, and McCombs and Hendricks were watching to catch a glimpse of me to confirm what I was doing. Cat and mouse games, if you will.\"\n\n \"I figured that the next night there would be a confrontation.\" I said. \"I realized that Bryce was driving around the Federal and State buildings with some kind of signal-reading device in his car, helping Jones get signal intelligence information. I was hoping to catch him doing that, but he and his cronies were setting up an assassination attempt upon me. I was going to let that play out, and we damn near got that Motorcyclist...\"\n\n I sighed as I continued: \"... and then all hell broke loose, and someone started blowing whistles all over the place. Enough noise to raise the damned from their graves. The Motorcyclist still came along, tried to shoot me though I'd taken cover, and then was driving away...\"\n\n I sighed as I continued: \"... and then someone fired a shot at the motorcyclist... someone who was not one of our Police Officers. Hit the cycle, which caught fire and was abandoned. Bryce apparently had stopped and dumped the signal-tracking device, and I never could find it. Overall, an entirely unsatisfactory conclusion to this case.\"\n\n \"Oh, I wouldn't say that.\" said Jack. \"I acted on your tip, convinced the Governor to let us have some National Guard SIGINT assets, and we caught Jones and his cronies committing acts which can get them charged with terrorist activities. So let me ask my original question, Don? Who was the primary target? Us? You?\"\n\n \"All of us.\" I said. \"The Consultant of Crime wanted that SIGINT information on the Feds and State, to sell to our enemies on several levels. But he was also gathering info on TCPD communications and operations... that's personal, and he has me in mind if he's doing that.\"\n\n \"Don, if I didn't know better,\" Cindy said, \"I'd think you're paranoid as hell about that bastard. But I also know what Chief Griswold says about being paranoid, so I will excuse it.\"\n\n \"Spoken like a true Klingon, Crowbar 2.\" I replied, knowing Cindy would understand the comment about Chief Griswold's love of all things Klingon.\n\n \"What about the seventh dog?\" asked Daniel. \"The one that was so brutally killed by that bear trap? It doesn't seem to fit the other killings.\"\n\n \"Yep, another pattern-scrambling dog killing.\" I said. \"Keeping us distracted.\"\n\n \"And speaking of that... you said there was another reason they were trying to distract you.\" Daniel said. \"What was that?\"\n\n \"It needs confirmation.\" I said. \"Which is what Captain Ross and I will be doing after we finish this excellent lunch... more double cheeseburgers meeting their intended destiny at the hands of the FBI...\"\n\n * * * * * * * * * * * * * * * *\n\n As we got into my silver Police SUV and drove off, Cindy said \"Spill it, Crowbar 1.\"\n\n \"What do you mean?\" I asked, with mock innocence in my voice.\n\n \"You didn't just forget to check Bryce's car for that signal device.\" she said. \"That means that there never was one, or you have it.\"\n\n \"That's Iron Crowbar paranoid thinking, there.\" I said with a grin. \"But I don't have it. Let's just say I owed someone a gift, big-time, for past and future favors.\"\n\n \"And the seventh dog?\" Cindy asked.\n\n \"I was going to ask you if you wanted to handle it.\" I said. \"You do realized what happened there, don't you?\"\n\n \"Yep.\" Cindy said. \"And the Blue Crowbar is crying for Justice...\"\n\n Part 19 - Righting Wrongs \n\n We picked up Detective Joanne Cummings from Headquarters, and drove to the Animal Control shelter. They had a dog ready for us.\n\n \"Not quite a year old, had all his shots.\" said the Animal Control officer. \"He belonged to the Andersons, who died in that horrible car crash on the Bypass a couple of weeks ago. Their family turned him in, didn't want him.\"\n\n \"I have a perfect home for him.\" I said. \"What's his name?\"\n\n \"Charlie.\"\n\n * * * * * * * * * * * * * * * *\n\n The three of us pulled up to the home of George and Beverly White. He was at home, having been asked by me to come home and attend this little gathering. Once inside, we presented Mrs. White with the new dog.\n\n \"Aw, he's so precious!\" she said.\n\n \"His name is Charlie, also.\" I said. Beverly White looked sad at the name, so I said \"When I was a little boy, I had a dog. I called him 'Tag' because he was always tagging along behind me. Tag and I explored every trail in the woods in the County, got in lots of trouble together. Then he got heartworms, and even after we had him treated at the vet, his great little heart couldn't keep up, and he passed on.\"\n\n I continued: \"About a month later, I found a little stray dog, and yes, it was the story of 'Mom, he followed me home.', even though I picked him up and carried him.\"\n\n \"That's true.\" Cindy said. \"His mom told me this story from her end of it.\"\n\n I said, \"I always believed that the spirit of Tag sent that new dog to me, to watch over me. And I think the spirit of your dog Charlie has sent you a new Charlie to keep you company.\"\n\n \"Aw, that's a sweet story.\" said Joanne Cummings, who had given the dog to Beverly only with reluctance.\n\n \"I think you're right about that, Commander.\" said Beverly, petting her new dog. \"Thank you for bringing him.\"\n\n \"Tell you what.\" I said, \"Detective Cummings, if you'll stay with Beverly here and keep Charlie company, Captain Ross and I will talk to Mr. White about home security. Mr. White, can you give us a moment in the backyard?\"\n\n \"Uh sure.\" said George White. We went into the backyard and sat down on the edge of the patio.\n\n \"Mr. White,\" I said, \"your original Charlie was killed as a warning to you. I believe that someone wants you to use your position as a regional manager of the Kroger chain to help smuggle things amongst the pallets and trucks of food that come in and out of your warehouses. Am I right?\" The look on his face had already answered me that I was right, but I still asked for Cindy's sake. Her eyes were wide as the information was absorbed into her brain.\n\n \"Uh...\" George said, then admitted \"Yeah, that's basically true. A guy came to see me in my office, pretending to be a new trucking firm sales rep. Once in my office, though, he said very bluntly that he wanted me to help arrange shipments of an extra pallet or two of wrapped goods from my distribution center to the City and back. I told him to get the hell out my office, and he said I had a wife and dog at home. I told him I was going to call the Police, and he said if I did I would regret it, but he left.\"\n\n \"What did he look like?\"\n\n \"White man, medium height, not fat, not thin either.\" said Mr. White. \"He was wearing an obvious brown wig, bushy eyebrows and a big brown mustache, obviously a disguise. Eyes were dull brown and his pupils were a bit dilated; he might have been a drug addict. He was wearing a suit, but it didn't fit him well.\"\n\n \"So did he contact you again?\" Cindy asked.\n\n \"No.\" said White. \"I didn't call the Police then, but I did start carrying my gun, for which I have a permit. I told my wife that I'd heard there had been some burglaries in the neighborhood, so to watch out for strangers. So when Charlie was shot, she thought it was a potential burglar, and she understood when we barricaded the doors at the Police's suggestion.\"\n\n \"I was halfway expecting for them to contact me again, and pressure me.\" said White. \"I had contacted my superiors in the management chain, and they contacted the SBI about it. They told me and my assistant to immediately call a number if the guy showed up again... but he never did.\"\n\n \"That's too bad.\" I said. \"I was going to ask you to help me set up a sting to catch him. Please do call me, even before calling the SBI, if you're contacted about this again, though I doubt you will be.\"\n\n \"I will. And thanks for the new dog. I don't know if you noticed, but Beverly has been devastated by Charlie's death, and her eyes really lit up when you guys brought that puppy inside.\" Of course I had noticed, but politely said nothing.\n\n \"Damn!\" I spat as we got back into my SUV. \"That was one hell of an opportunity that slipped by us!\"\n\n \"Why didn't they contact him again?\" Cindy asked as Joanne came outside to leave with us.\n\n \"A Red Crowbar would say that someone within the SBI heard that Kroger contacted the SBI, and had the criminals back off.\" I said. \"I might also add that this master of disguises might have been the one who gave Girl Scout Margaret the cyanide-laced cup of pink lemonade to give to SBI Agent Reubens. That guy has been getting around.\"\n\n \"The Blue Crowbar agrees with the Red one.\" said Cindy.\n\n * * * * * * * * * * * * * * * *\n\n The group was practicing putting at the Practice Basket near the first hole of the Disc Golf course at Ronald Reagan Park, when a platinum blonde policewoman in a dark blue Police uniform came up, the Captain bars on her shoulders sparkling in the sunlight.\n\n \"Hey Nikko,\" said Captain Cindy Ross, \"can I talk to you for a minute?\"\n\n \"Uh sure.\" said Nikko. His wife Jessica was about to come over with him, but Cindy said \"Ma'am let me have a word with your husband for a moment.\" Jessica was non-plussed, but went back to the others and continued putting discs into the practice basket, the chains making musical quality sounds.\n\n \"What's up, Captain er... Ross?\" asked Nikko.\n\n \"I just wanted to give you a message.\" said Cindy. \"My boss, you know who he is?\"\n\n \"He's that 'Iron Crowbar' guy, isn't he?\" asked Nikko. \"He was carrying that red crowbar the other day.\"\n\n \"Yes.\" said Cindy Ross. \"And I don't know if you've heard of his reputation, but he was kind enough to send me to talk to you today instead of coming here himself... and beating the living shit out of you with that crowbar.\"\n\n \"Why would he do that?\" asked Nikko, trying to keep his composure.\n\n \"Because he loves dogs.\" Cindy said. \"And he knows full well that you put that trap there and had Frizz walk into it.\"\n\n \"What are you talking about?\" bluffed Nikko, his face showing far more fear than his voice.\n\n \"Don't fuck with me.\" Cindy said, keeping her voice quiet and level. \"He knows you did it, he knows it's the only explanation. I don't know if he has video proof it, but he's being very generous and giving you a chance to get out of this County and never come back. And I suggest that you never let him see you, ever again.\"\n\n \"And if I don't?\" Nikko asked quietly. \"What, is police brutality okay with you and the cops in this County?\"\n\n \"Oh, he won't touch you.\" Cindy said. \"Me, I'm just telling you to get out while the getting is good. Him? He'll arrest you, and then show your wife, prove to her that you killed her dog. You hated that dog, and when you heard of the dog killings, you took your opportunity to get rid of it. You got that bear trap from the outdoor company for whom you've been making and selling bags, and you took Frizz for a walk, put the trap on the ground then had Frizz go smell the dogfood, and the trap snapped shut around that poor dog's neck.\"\n\n \"If your wife finds out,\" said Cindy, \"there's no telling how she'll react, but your marriage will probably be over. Me, I'm not willing to fuck up your life like that for killing a dog, however brutally. But the Iron Crowbar? He is as bad-ass as they get. So maybe you'll sell your bags from the City, or Midtown, eh?\"\n\n \"I'll take that into consideration.\" said Nikko. He walked back to the group as Cindy Ross left for Headquarters.\n\n \"What did she want?\" asked Jessica.\n\n \"She was just updating me on the dog killings.\" said Nikko. \"So, let's go play disc golf. By the way, Jessica, you know how we talked about moving to Midtown?...\"\n\n Part 20 - Epilogue \n\n \"So,\" said Cindy as they ate popcorn and watched the movie, \"why did you have all the old people blowing those whistles? The Iron Crowbar was irritated; it messed up his plans.\"\n\n \"It kept your Commander from being killed.\" said the Widow Athena Jones, her voice scratchy as she wrapped herself up in her shawl more tightly. \"That nasty Patrolman Bryce, who was the man who shot Mrs. Veasley's neighbor's dog, was going to shoot the Commander if that motorcycle woman did not succeed.\"\n\n \"Yes, but Don had that under control.\" said Cindy.\n\n \"He did not have the third person under control, my dear.\" said Athena Jones. \"That third person is the one who my friends and I were watching for. He was in the trees, in the shadows, coming up behind your Commander and Patrolman Bryce. And I would not be surprised if his firearm carried armor-piercing bullets. Do you know what those can do, even to a police officer in a bulletproof vest?\"",
        "\"Yes, and I know firsthand.\" Cindy replied, knowing what she herself had endured from such bullets. \"So who fired at that motorcyclist?\"\n\n \"I don't know.\" said Athena Jones. \"And to be honest, none of us, my friends and I, can understand that one. We thought a police officer had fired the shot, but since you said that is not the case, it must've been someone else.\"\n\n \"The Commander thinks the shooter missed, and hit the bike instead of the rider... on purpose.\"\n\n \"He's a very smart man, my dear.\" said the Widow Jones. \"A very smart man. Most of the time...\" Cindy peered at the old woman, whose face gave away nothing. They turned back to the movie...\n\n * * * * * * * * * * * * * * * *\n\n \"Ah, my lovely Sinon.\" he said as she entered the room. There was a stillness in the air, the room seemed stuffy to her. \"Have a drink with me.\"\n\n \"Where's the wife?\" she asked as she watched him pour two glasses of sherry.\n\n \"Visiting... relatives.\" he said, handing her one of the glasses. They clinked them and drank.\n\n \"This is very good.\" she said. \"You always have the very best.\"\n\n \"Yes.\" he said. \"It's a rare and expensive brand of sherry, but what's the point of having all my money if I don't spend it on the very best... such as gifts for you, my dear. You are in need of a new motorcycle, no?\"\n\n \"That's right.\" she said bitterly. \"My last one is a melted blob in the Police Department's Crime Lab now.\"\n\n \"Unfortunate.\" he said. \"But fortunate that the motorcycle was struck by gunfire, and not you. Which is what the shooter intended, of course.\"\n\n \"Really?\" she gasped.\n\n \"Of course.\" he said. \"You were wanted alive. But you managed to elude your pursuers.\"\n\n \"That wasn't hard to do.\" she said. \"They're idiots, especially that redheaded dog-loving bastard at the top.\"\n\n He laughed, the chuckle sounding sinister in the stuffy quietness of the room. \"Yes, Commander Troy is not as smart as he thinks he is. I was close... very close... to getting him, as were you. But we failed. All those whistles going off... now that, I don't understand... yet.\"\n\n \"With your great mind, it will come to you.\" she said. \"And then someone is going to be in a great deal of pain.\"\n\n \"Yes.\" he said. \"But when I said you avoided your pursuers, I did not mean the Police. Do be careful, my lovely Sinon. Do be careful...\"\n\n * * * * * * * * * * * * * * * *\n\n They were sitting in the office of the Sir Isaac Newton Professor of Advanced Mathematics at the University. Professor Marvin Milton poured three drinks, handing one to his son and the other to his daughter-in-law, Myron and Mary Mahoney Milton.\n\n \"I'm glad you came to dinner with us, sir.\" said Mary, dressed in leather but looking elegant and classy. Myron was channeling his mentor and hero, the Iron Crowbar, by wearing a jacket and pants and a mock turtleneck shirt. Professor Milton was dressed in his normal professorial clothes: button down shirt, brown plaid-like jacket, and a heavier overcoat for the outdoors.\n\n \"Ah yes, it was a good evening.\" said the Professor. \"I appreciate you asking me.\"\n\n\"We should do it more often, Dad.\" said Myron.\n\n\"And we will, I'm sure.\" said Marvin. \"So how is the police work going? I saw where the FBI took out that espionage ring at the construction site, but the FBI is too stupid to have figured it out themselves. I suspect your boss the Iron Crowbar has been using his brains again.\"\n\n\"Yes sir.\" said Mary, aware of her father-in-law's hatred of the Federal Government. \"Not much in this County gets by him.\"\n\n\"Yes, of course.\" said the Professor. He steered the conversation into other, more innocuous channels. After a while, Myron and Mary excused themselves and left.\n\nThe Professor indeed had reason to be happy tonight, he thought to himself as he went into his personal work lab behind his office. The room was very similar to the room behind Laura Fredricson's office, that she had turned into a nursery for her children.\n\nThe professor's eyes lit up as he saw the device on the table. It was a very sophisticated, high-tech piece of signal intelligence equipment. The CIA was very wrongly using this and other equipment to keep tabs on American Citizens. The Professor was not fooled; that signal-intel-gathering operation had not just been to watch over TCPD operations, but to see what he, Professor Marvin Milton, and other University professors were doing!\n\nAs he began examining the device, he thought of the man who had brought it to him. The Iron Crowbar is indeed a very, very smart man, the Professor thought. Yes, his wife is loyal to him, she loves him as deeply as he loves her... but he and maybe even she has no earthly idea of how deeply some elements of the Central Intelligence Agency hate him.\n\nThey'd called the Corrigan Cell 'rogue', but he, Professor Marvin Milton, knew better. He knew there were other 'Corrigan Cells', just as dangerous, just as willing to subvert the Constitution and kill American Citizens. They were not 'rogue'; they were the norm!\n\nAnd they knew how dangerous the Iron Crowbar really was to them... and how dangerous the FBI was. Special Agent Muscone is an honest and decent man, as is his boss, thought the Professor... but they may have no idea what they are up against.\n\nBut the Iron Crowbar does, the Professor though. He knows. And he brought me this little gift, purloined from that rogue cop Bryce, to help in the fight. And we're going to need all the help we can get... all the help we can get...\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "mystery",
        "police drama",
        "crime drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/going-rogue-ch-04"
}