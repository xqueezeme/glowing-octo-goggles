{
    "title": "How to Tame a Brat Pt. 10",
    "pages": [
        "<p align=\"center\">Chapter 27</p>\n\n<p align=\"center\">Reuben</p>\n\nIt didn't take long for news to travel around my close group of friends about what had happened between me, Jeffrey, and Becca. That news spread to a married couple who worked in the police force, and they confronted me one day.\n\n\"There's an epidemic, Reuben. Yesterday there were twelve young women between the ages of fourteen and twenty-five who were dropped off at our station by an anonymous source.\" His name was Sam Bronson, and his wife Janette stood beside him as they explained.\n\n\"From the little we could gather from them, they were all former sex slaves, sold at an auction, and someone rescued them. We've done what we could for them, but most of them are back on the street. Most of them are so traumatized they can't even speak. Can you help?\"\n\nAt that point, I stepped away from cooking. I spent the next six months talking to Becca and Jeff, and Mike Black, and a few of my other new friends about how we could make a difference. Becca opened up about her experience as a slave, and how learning to trust me, and learning to consent and say no to me had been what turned the tables for her. We developed a quiet plan with only those we trusted, and began to set it in motion. All the while, I hired managers, trained chefs, and handed off most of the work of my restaurants to other people so I could step back.\n\nBecause although I enjoyed cooking, I was finding I was not cut out for the restaurant industry. It was monotonous, boring, and routine. I made the same things every day, and felt stunted in my creativity. I wanted to grow, create new things, and do something that mattered. These girls mattered.\n\nEventually, we established a place. There was an old house out in a more secluded area, and I purchased the place, turning it into a sort of group home. Becca and I, and some of our other friends, began bringing in some of the girls that were too traumatized or broken to survive a battered women's shelter or a rehab center. These girls were the most broken I'd ever seen. Becca had been an anomaly, being able to survive on the streets.\n\nAs we helped them, gained their trust, and taught them to speak again, I began to see what Becca was going to turn into, and I loved it. I began to see what I wanted, and I felt proud and fulfilled in my care for the girls. Maybe it was a way I could ease the guilt for what I'd done to Savannah, but I liked to believe it was because I had become a more decent person than I had when I was eighteen and drowning in hormones and betrayal.\n\nI continued my education and my practice of BDSM on the side, learning what I could and playing as I needed with consenting playmates to satiate the Beast. I learned about consensual nonconsent, and how beneficial it was for the trauma victims I was working with, and Becca, Simon and I began to build a place where we could facilitate those scenes without the eye of the Underground members gawking. Becca became a doctor in psychology and sexual trauma, and made our private dungeon, AnchorX, her fulltime job.\n\nThere just wasn't enough money to care for all of the girls indefinitely, though, and although I could keep them all alive and safe, it wasn't much of a future. I began to find people who could adopt them as guardians and give them a real future. Sam and Janette worked as our undercover police contacts, continuing to bring us new girls they thought we could help. One of the other cops got involved as well, and took fingerprints and found the missing IDs of the kidnapped girls, helping to coordinate sending them home.\n\nThose without homes or families to return to were sent to other masters and caregivers who I trusted. Sam and Janette took two sisters who had both gone deaf from their beatings, and taught them sign language. Mike Black took a few girls as well, and taught one English and sent her home to her home country, and sent the other one to college when she was ready. Slowly, one at a time, painstakingly, I found homes for the broken girls with people who had their best interest in mind. Doms who needed to be needed, who needed to have someone to love and pour into were matched with the girls who had no hope, and slowly, they learned to trust again. They learned to say No.\n\nMy playtime in the dungeon changed as well. I was slowly coming to terms with my desires, and not hating myself for it or feeling guilty about it. I met several submissives who I developed close relationships with, and became recognized at The Underground as a trusted player. I was enjoying my life. I felt like I had everything figured out.\n\nThen I met Robin.\n\nShe was one of the slaves who was so broken and so locked up inside her own head, she didn't even recognize that she'd been rescued. Her brokenness destroyed me, and I took her into my home to care for her myself.\n\nIt took almost a year before Robin would speak to me. She was a silent servant, anticipatory in her labor, and following her own rituals in exacting detail. It was a long road to bring her out of herself, but we became attached to each other in the process. She called me Daddy and she was my princess, and she had me wrapped around her little finger.\n\nShe had a lot of needs, though, and despite my travel schedule, didn't want to give her up. I adored her. She didn't want to leave me, she was still so hurt and so betrayed from being handed off so many times. She was finally happy, and finally felt safe. I didn't want to risk breaking her again.\n\nSo I began looking for someone to serve me and her together. That's when I met Megan.\n\nAll she did, in the end, was hand over her book with a silent request for me to sign it. But my God did I recognize that look. It was the same bright strength but timid need that I'd seen in Savannah. She looked at me like she wanted my torture, and would stand through it with her chin high. I hadn't honestly been attracted to a woman in so long, it surprised me.\n\nI put my phone number in her book instead of my signature, and I got a call from her a day later.\n\nWe began a long distance relationship. A year later, she moved from New Jersey to DC to live with me and become my submissive, to care for Robin, and to satisfy my urges so I could keep the Beast at bay. A year after that, she asked me for slavery.\n\nI foresaw my life, in my mind's eye, and I thought everything would continue as it was. Robin would grow up to be a big strong girl, and be my sweet little daughter forever. Megan would be my rock and my trusted friend, my plaything when I needed it, and I didn't have to worry about leaving Robin alone. I had other playmates and part-time submissives who allowed me to indulge in the things that Megan was uncomfortable with, though I much preferred her.\n\nBut there was a day that changed everything. And if I could go back in time and change one thing in my life, that's the day I would change.\n\nI would have paid attention and listened to my Master. The one I shunned and avoided, and turned my back on so long ago. The one who had been trying to get my attention for years, dropping hints and giving me guidance, even though most of the time I ignored it.\n\n***\n\nBack in Cullowhee, when I was sixteen and living under my father's thumb, there had been a day that I'd stared up into the sky, silently praying for the first time in my life. My mother had just fallen for the first time and was now in a wheelchair, and I knew my life was about to change. I didn't know what I was asking for, but I knew if there was a God, he'd hear me.\n\nThat evening, the visions started. The very first one I saw was nothing more than a set of eyes, and a few words that meant nothing to me at the time. I wrote it off as a coincidence.\n\nA few nights later, I had a dream that my mother would miss a phone call because her phone was too far away for her to reach, and would result in her falling again. So before I left for work that night, I'd made sure to plug in her phone, leaving it close by so she could reach it.\n\nMonths later, I saw a vision of a mudslide on the mountain. I skipped going to school that day, and when I heard there had indeed been a mudslide that would have gotten me stuck and unable to reach home, I stopped writing off the dreams.\n\nI didn't get them often, but when I did, I tried to listen. I wasn't sure that I believed they were God, but it didn't matter. I listened to the visions because they were almost never wrong.\n\nI stopped paying attention to them when my mom slipped and fell in the shower and died. I was livid with God, angry because He hadn't warned me, hadn't given me a way to stop it or fix it. And if that was the case, that meant that it was His will that my mother die a humiliating death, drowning in the bathtub for her son to find her. And I couldn't stand for that.\n\nFrom that point on, I ignored the visions. I still got one or two very occasionally, but I rejected the information and refused to acknowledge them. The things I saw happen never ended up actually happening. Either God had moved on to warning someone else, or it was never God to begin with, and either way, I didn't care. After a while, I stopped having them. All except that one, that face and the few words that I didn't understand.\n\nOne night, I woke up in a cold sweat screaming. Megan was trying to calm me down, and I was on the verge of a panic attack. I'd seen something horrendous, and had a vision for the first time in years.\n\nI'd been in the car with Robin on our way to the park, and there'd been a huge twelve-car pileup on the highway. A rod had come loose from a construction truck and gone through our window, and through her, killing her instantly.\n\nI couldn't sleep the rest of the night. I paced, took a shower, drank coffee, ran, and paced some more. I hated that I'd had such a horrible vision thrown on me. Or was it just a dream?\n\nIt had to be a dream. Those visions stopped years ago, and even the last few I'd seen hadn't come true.\n\nAs a final middle finger towards God, I'd decided to ignore it.\n\nThat afternoon, as per usual, Robin wanted to go to the park. I'd initially said no, but eventually caved to her big blue puppy dog eyes.\n\nWe got in a car accident in a twelve car pileup. A loose rod broke through the window, spearing Robin through her chest. She looked at me in horror, blood gushing from the wound and filling up her lungs as she whimpered quietly, \"Daddy, daddy please, help me daddy.\"\n\nThe EMTs took thirteen minutes to arrive. She died in my arms in ten.\n\n<p align=\"center\">Chapter 28</p>\n\n<p align=\"center\">Alice\n\nPresent day</p>\n\nI need to go. I need to leave. I can't do this. \n\nI stood up from the couch and stared out the window as Reuben finished telling me his story. The familiar taste of panic rose in the back of my mouth.\n\nOh, this is so wrong. This was such a bad idea. I knew this was a bad idea. How could I be so stupid?\n\nReuben looked unhappy that I wasn't sitting beside him anymore, but I didn't care. I felt the tentative trust and attachment I'd developed for him sever like a tiny thread, snapping under the first pull of pressure.\n\n\"Thank you, Reuben,\" I whispered. \"Thank you for being honest with me.\"\n\n\"I--\"\n\n\"I'm sorry, but I have to go.\" I collected my notebook and went to the door to pull on my coat, but he stopped me, standing up and blocking my path.\n\n\"Please, Alice, let me finish.\"\n\n\"No, Reuben, I can't.\"\n\n\"Alice please. Just... tell me what part upset you.\"\n\nAt his words, my panic increased and my rage built. Don't do anything stupid, I warned myself. Reuben had already proven to me that he was willing to make a move against me if he felt compelled, and I didn't want to say anything to set him off. But... myself doesn't listen very well.\n\n\"There are a lot of things actually, and I'd like to leave so I can think about them.\"\n\n\"Alice... there's more,\" he whispered.\n\n\"Oh. Okay. Sure,\" I snapped. \"More than you basically doing the exact same thing to Megan that my Daddy did to me?\"\n\nHis face contorted in shock and confusion, but I continued. \"Did you hand off your other subs too? Or did you just leave them high and dry? Yeah, telling me the rest will definitely put you back in my good graces. Move before I call Alex to come and kill you for me.\"\n\nThe concern on his face evaporated. \"Oh... sweetheart... I didn't send Megan away.\"\n\n\"You just said you did! You got in a car accident, Robin died, you threw a pity party, and--\"\n\n\"Megan left, Alice.\"\n\nI snapped my mouth shut and held my breath. \"I released some of my other submissives because I knew I needed to take a step back and focus on healing myself. None of them were collared; they were just playmates and part-time dynamics. But Megan left of her own accord because without Robin, she felt unneeded. And she was right; without Robin, Megan was left with very little to do other than take my bullying and my sadism... and she's not a masochist. She didn't like the same things I did, and even when she became my slave and she gave up her limits for me, I still never broke them. But she felt like I was settling for her, like I was keeping her around only because I had made a promise and signed a piece of paper.\n\n\"Megan also had a very angry perspective on religion as a result of some of her own upbringing. After the accident, I felt like I had no choice but to go back to church, because He would continue to take things away from me until I returned to His feet. Part of that was giving up sex outside of marriage, and Megan had a hard limit against marriage. My refocus on a God that offended her, and the drastic change in our lifestyle and our dynamic bothered her. My depression didn't make things any better. She had a safeword I'd given her for the purpose of renegotiating if absolutely necessary... and she used it.\n\n\"We tried to renegotiate, to find something that would work for both of us, but in the end, she was unhappy, I was depressed and I felt like I'd failed her, and we decided to separate.\"\n\nI dropped my head. That was a totally different outcome than I expected. He hadn't had a harem of girls that he'd sent away. He'd had two, and... he'd lost both.\n\n\"I had to take her to a metalworker to remove her collar, Alice. I'd welded it shut. I planned to keep Megan until the day I died. I would never, ever send her away. But I failed her, and she was hurt. So she left.\"\n\nGreat. That's just great. Now I'm crying again. \n\nI covered my mouth with my hands and tried to calm down. Reuben extended a hand to me but I backed up, not wanting his hands on me yet.\n\n\"You didn't... you didn't send her away?\" I felt like I was grasping at that tiny string, trying to salvage it.\n\n\"No. It was her choice to leave. Ultimately, she made the right decision. As much as I loved her and loved the role she filled for me, she was right. Things changed when Robin died, and I was miserable, and she felt useless. A service sub who feels useless is a service sub neglected. It just... didn't work out. She's happy now. She's seeing a friend of mine.\"\n\nI still held my notebook to my chest, wiping my tears away, trying to keep my breathing even and my hands from shaking too bad. \"So you treated her just like all your other girls in the end. You say you loved her, but really, you trained her until you didn't need her anymore, and handed her off. That's not my kink, Reuben. I don't want to be with someone for two years, or five years, or ten years, and then be given away because I'm not convenient.\"\n\n\"What are you talking about? Why would I... Alice. You're mine, I'm not going to hand you off!\"\n\n\"Obviously,\" I said, stomping my foot. \"Cause you can't! Now move and let me go home!\"\n\nSomething hardened in Reuben's eyes, and I saw that beast he referred to. Terrified, I slunk back. Oh my god, it's happening again. He's going to lock me in the basement, or in his dungeon, or in the trunk of his car, and make me into his slave. \n\nLet me go. Don't send me away. Both thoughts were rattling around my head and my heart.\n\n\"Alice... I can't. Not when you're finally here. Not when I've finally found you.\" He took slow, measured steps towards me, and I heard him change his voice to that quiet, low growl he used when he wanted control. \"Not when everything in my life has been leading me to you.\"\n\n\"You're crazy.\"\n\n\"I will destroy you.\"\n\n\"I'm beginning to believe that.\"\n\n\"Over and over again, Alice. I will destroy you. I will take everything you know and love. I will be ruthless. I will put you in the ground. There won't be anything left by the time I'm done. Only ashes.\" He said it like a mantra, not like he was threatening me. \"You don't even remember saying that, do you?\"\n\nI swallowed and took a few more steps back, but he followed me. Pressed against the wall, I tried to breathe, but I was starting to feel lightheaded.\n\nMaybe Alex could feel my panic from that far away? Maybe if I prayed to God, He'd send a chariot of fire to come and rescue me?\n\nExcept I also desperately wanted him to keep me here and not let me run. What the hell is wrong with me? My voice shook. \"What are you talking about?\"\n\n\"Those were the words, Alice. Those were the words I heard in my head when I was sixteen, the same ones I heard every night since then.\" He stopped in front of me lifting my chin with one finger, and staring down at me in wonder and fascination. \"It's your face I saw that night, and every night after that. I rescued Becca because I thought she was you. I was wrong, but I continued to look for you. Every new shipment of girls I arrive and wait on the edge of my seat, praying I'll find you. Every time I go to the Lounge, to The Underground, the fucking coffee shop... Sweetheart. I've been looking for you for twenty-four years.\" \n\nA whole lot of shit made sense really damn fast.\n\nHim not wanting to explain his fascination with me yesterday. Him not being able to ignore my antics. Alex saying she knew I had a place here and that I could trust him. And...\n\n\"Oh. My. God.\"\n\n\"I know. I don't have an explanation, and I know it's crazy, but--\"\n\nCall me Borderline or call me crazy, but I burst out laughing, and I could. not. stop. I think at first Reuben was worried I was crying or screaming, but after I sat back down on the couch and belly laughed myself into a headache, he sat beside me, trying to calm me down.\n\n\"I'm not sure why you're laughing, but I hope it's for a better reason than the tears.\"\n\n\"Holy shit, that's why you were so damn mad!\" I laughed again, barely able to speak. Tears were rolling dow my face and I was sure I looked like a fucking racoon from my eye makeup being ruined. I tried to breathe and get my head back on straight.\n\nHe pursed his lips, and the concern evaporated from his face. No longer worried about me, he sat down in the arm chair beside the fireplace, glaring and looking a little exasperated. He kicked his feet up on the ottoman in front of it and put his chin in one hand, watching me silently. Don't worry old man, I can't keep up with my yo-yo moodswings either. \n\n\"That's why you said you would have recognized me if we ran into each other at The Underground.\" I smiled as I walked his way. Placing one knee between his leg and the arm of the chair, I climbed onto his lap to straddle him. His eyes widened every so subtly and his nostrils flared, but he was doing his damndest to keep control over his reactions.\n\n\"That's why you couldn't just ignore me,\" I whispered. I draped my wrists over the back of the armchair behind him, bringing our faces close together. His Adam's apple bobbed. \"That's why I catch you staring at me all the time.\"\n\n\"I did not stare at you all the time.\"\n\n\"You do so. That's why it was so much fun to annoy you. Because you couldn't get me out of your head...\"",
        "I settled myself down on his lap. Oh yeah, he was happy to have me there, that was for sure.\n\n\"That's why you were so angry. When we first met, you ran out of the room like a bat out of hell. Because you finally found the girl of your dreams, and I'm a brat, and it pissed you off.\" I bit my lip to contain my laughter again.\n\n\"Oh I bet you thought about it for years, too. Imagining I was some sweet service sub masochist who would just drop to my knees as soon as I saw you.\" He tore his eyes away from mine and I knew I'd hit the nail on the head. \"Maybe you even hoped I'd had my own dreams, and we'd run into each other's arms like star-crossed lovers.\"\n\n\"Okay, that's enough. Very funny. Get up.\"\n\n\"But I like it here.\" I wiggled my ass against his lap a little.\n\n\"Alice,\" he growled, and I could feel the vibration of his voice in my chest, and all the way down. His voice was nothing more than a quiet whisper. \"Don't push me, little girl.\"\n\n\"Or what?\" I asked with as much innocence as I could muster.\n\nHe set one finger on my bottom lip, and then pulled at it slightly as he traced a line down my chin, my neck, and right between my breasts. I thought he would continue, but he slid his fingers into my cleavage. He moved slow enough that I could stop him if I was inclined to, but he knew I wouldn't. I shivered under the feeling of his fingers on my skin, waiting for a squeeze or a pinch, but he fished out the brat coupon he'd presented me with earlier.\n\n\"I believe this still applies. You're going to be good for me and honor it, aren't you?\"\n\nYes of course I'll be good for you, if you keep looking at me like that. \"Maybe,\" I said. \"What's in it for me?\"\n\nHis eyes narrowed. \"Good girls get what they want. Bad girls get punished.\"\n\nI bit my lip. It's so much more fun to be bad, though. \"What if being punished is what you want?\"\n\n\"Oh, Alice.\" A smirk pulled at his lips. \"I didn't say you'd get spanked.\"\n\n\"There ain't shit you can do to me that I won't like, old man.\"\n\n\"Well, I guess we'll see about that.\" And there was a very scary look in his eye that actually made me think he might be right.\n\nHe set his hands on my hips like he was going to grind me against himself, but instead, he slid me backwards off his lap. Opening his legs, I ended up kneeling on the ottoman in front of him. He set one leg on the ground and bent the other one, his foot beside me, creating a sort of nest between his legs for me to sit.\n\nI leaned against his leg like it was the back of my own personal chair, and he folded his hands, setting them in his lap, probably to protect himself from any further assault on his erection.\n\n\"Are you ok? You going to make a run for the door again?\"\n\nI shook my head. \"Not unless you have some other deep dark secret I need to know about.\"\n\n\"Only my unending desire to watch you cry. Now. I know there has to be more questions in that clever brain of yours.\"\n\nI blushed. \"You're trying to distract me.\"\n\n\"Redirect. I'm trying to redirect you. We can revisit you sitting on my lap after we finish discussing other important topics. No games until we conclude negotiations.\"\n\nI snapped my mouth shut before I called him Mr. Darcy again and tried to actually think of some questions to ask him.\n\n\"Um... how'd you get my stuff back?\"\n\n\"Ah... that was something I neglected to tell you about.\" His face fell. \"Alice... Peter Woodrow and I are not great friends, but I've known him for years and I thought I could trust him. Recently, he had mentioned to me that he lost his slave...\" he grimmaced slightly and tentitively continued. \"I sent one of my girls to stay with him over the holidays.\"\n\n\"Oh, no, is she--\"\n\n\"She's... alright. But it wasn't good.\"\n\n\"That's why you wrote me that note and asked me to talk to you about my side of the story.\"\n\nHe nodded.\n\n\"I hope she's okay.\"\n\n\"She's back at the Weston House now. She's doing alright. A bit shaken up. I've told her I won't place her anywhere else unless she's ready, and I plan to do a full audit of all the caregivers and guardians involved in the organization. Some of them are trusted friends, like the Black brothers and Sam Bronson. But some, I don't know as well. It's going to add a tremendous amount of work to my workload... but it needs to be done.\n\n\"As far as Woodrow, I have someone keeping an eye on him, and I had planned to ask you if you would be willing to testify in court if we pressed charges of her assault.\"\n\n\"Um...\" I tried to think about that scenario. I didn't even want to run into him in a coffee shop, let alone get up on a stand and talk about what he did to me. But I also knew it was the right thing to do. Still, I'd been in court during cases like that. I wasn't sure if I could be on the receiving end of that kind of judgement.\n\nReuben seemed to recognize my internal struggle, and brushed a bit of my hair out of my face. \"We can revisit that question later, okay?\"\n\nEager to switch topics, I blurted out, \"How do you run all those restaurants and businesses and stuff, and still have time to run your center?\"\n\n\"Most of my restaurants run themselves. Most of my work relates to the center, and I work between ten and fourteen hours a day.\"\n\n\"Reuben...\" I shook my head. \"You don't have time for a girlfriend.\"\n\nHe pursed his lips.\n\n\"Look, the thing is, I'm a needy bitch. I know I am. I need tons of attention and I'm annoying as fuck. How are we going to... you don't...\" I felt my shoulders droop.\n\n\"Actually, Alice, that's something I wanted to discuss with you. You said you were bored and underworked at the church. I have more work than I know what to do with. Maybe...\"\n\n\"Hey, maybe I can help you!\" I grinned. \"And that would be so much less monotonous and boring than entering email addresses and sharing photos on Facebook.\"\n\n\"I think based on your work experience you may also be able to clean up some of my processes. The restaurants are pretty simple, they pretty much run themselves with the staff I've hired. I go to board meetings and come up with new menus once every few months but there isn't a lot to do there. But the Weston House... there's a lot more to do.\"\n\n\"I want to help,\" I said. \"Even if we... even if this doesn't... I want to help. I think it's amazing that you rescue those girls.\"\n\nThere was a little bit of relief in his eyes. He'd hoped that I would appreciate his work, that I wouldn't judge him for it.\n\n\"How do you legally go about setting trafficked women with strangers, though?\" I asked. \"Isn't that just technically trafficking them?\"\n\n\"I have a lawyer on the books. We get them set up with new legal documents, and their new guardians adopt them. Keep in mind, some of these girls are as young as twelve. Some are in their forties. But none of them are competent enough to even hold down a conversation without being triggered. They're unable to care for themselves.\"\n\n\"Seems like a lot of gray areas... is it a legal entity? Or something you keep a secret?\"\n\n\"It's a legally sound non profit organization. It's not a secret, but we don't do a lot of advertising because I don't want to attract too much attention. Many of these girls are terrified of being found by their past abusers. On paper, all I do is rescue the girls and dismiss them when I believe they are independent enough to be on their own. I set them up with new identities and they disappear. But in reality...\"\n\n\"In reality they're placed with caregivers.\"\n\n\"Right. No money is exchanged, but the caregivers essentially adopt them.\"\n\n\"How long do they stay with their caregivers? Is it forever?\"\n\n\"Until they decide to leave.\"\n\nI thought about that for a while. Reuben essentially did for those girls what Augustus Quinn did for me all those years back. Although I hadn't been trafficked, and I'd been more independent, I knew what a huge difference a kind caregiver made.\n\n\"When the girls go to their new Doms... do they have sex with them?\"\n\n\"God, no,\" Reuben said. \"We have a very strict policy on that. They're all rape victims. Some of the girls do CNC scenes at AnchorX after years of therapy with Becca and the other psychologists. But it's on them to request that. We don't even mention that we provide that unless they specifically ask. And rarely does it include sex.\"\n\n\"How many girls have you rescued over the years?\"\n\n\"Three hundred and seven... no. Three hundred and four.\" His voice changed, and his face went blank, like he was trying not to feel something.\n\nSomething itched at the back of my mind. When I'd read those texts between him and the mystery \"little brat\" yesterday, he'd said he'd had an emergency. \"Reuben... what happened last week that you had to run to DC and stay there all week?\"\n\nHe stared out into space for a few moments, not wanting to answer. He finally forced himself. \"Last Tuesday we got a new batch of girls. Most of them are non-English speakers. Russian, Ukrainian, and I think some are from Pakistan. It's hard to tell. Lindsay warned me they were a difficult group...\"\n\nHe ran a hand through his hair in frustration. \"Someone left a pencil out. It must have fallen on the floor and it was never collected.\"\n\nI felt my stomach turn over. He finally met my eyes. \"We lost two. A few more attempted, but we got to them soon enough. It's been... a very long time since we've lost anyone. The program works, Alice... except when something as small as a sharp pencil falls through the cracks.\"\n\n\"Reuben, I'm so sorry.\"\n\nHe sighed deeply, still staring at the invisible entity over my shoulder. Then he met my eyes. \"Suffice to say it was a long week. And then I... dropped my phone in some water, and lost my contact list.\n\n\"You know you can set up your phone to automatically back everything up to your account, right?\"\n\nHe stared at me like he didn't believe me.\n\n\"No really.\"\n\n\"I'll believe it when I see it.\"\n\n\"Where do you get the girls? And who is Lindsay?\"\n\nHe looked like he didn't want to answer that. \"Well,\" he started. \"We stumbled across a group of people who track and rescue sex slaves full time. They're a private military group running under the table and out of the eyes of the government. Honestly, we don't ask questions and hope for the best.\"\n\n\"Sounds sketch.\"\n\n\"It is, but... the alternative is those girls being turned into law enforcement and being arrested two months later for prositution, or scraped off the side of the road when they die. So we take them and do what we can.\"\n\n\"Am I going to get into legal trouble working with you?\"\n\n\"No. The FBI knows what we do, and there's nothing illegal about it. Literally all we do is take victims and provide care.\"\n\nI nodded. Seemed sensible enough. \"How much government funding do you get?\"\n\n\"They provide about thirty percent of what we need to stay open. I use most of the income from my businesses to run it.\"\n\nI felt my eyebrows shoot up. \"Tell me you at least write it off your taxes.\"\n\n\"I'm generous, Alice, not stupid. Of course I do.\"\n\nI knew Reuben probably wasn't out to become a billionaire. He was the one who said before that he wanted to make a difference and do work that mattered. But funding helped a lot. I decided I would make it a point to research as much as I could about grant writing and acquiring funding, and find a way to help Reuben with his center.\n\nBefore my ADHD brain spun out of control, Reuben went back to my original question.\n\n\"All of this is to say... Right before Christmas, Rachel managed to get her hands on a cell phone and text me her safeword, and I drove over and picked her up. While I was there, I noticed a glitter-encrusted room and a certain telescope...\"\n\n\"That's how you knew I was involved with Woodrow.\" I swallowed.\n\nHe nodded. \"A few weeks later, I took Pete out for drinks one night and pretended to smooth things over, get his side of the story, and I had a friend break into his house and collect the rest of your belongings.\"\n\n\"Sorry you had to sit through a conversation with him.\"\n\n\"He's not bad when he's drunk.\" But his eyes flashed.\n\n\"Yes, he is. And I bet he said all kinds of shit about how much he loved to fuck me.\" A small trickle of satisfaction went through me as I watched his face. \"Oh I bet that made you mad, didn't it. And I bet you hated hearing me talk about Michael Lewis and Simon Pierce yesterday.\"\n\n\"What did I say about not pushing me?\"\n\nI wanted so bad to brat him back, to see what would happen if I poked the bear a little harder, but... I had promised, and I didn't know how much bratting he could really take yet. So I swallowed and squared my shoulders. \"Sorry.\" He gave me a noncommittal grunt as a response.\n\n\"How do you know Michael Lewis, anyway? Is it from The Underground?\"\n\n\"We're... work associates.\"\n\n\"You know he's a serial killer, right?\"\n\n\"He was wanted for being a serial killer.\"\n\n\"No, Reuben... he killed fifteen girls in the late nineties and early two thousands. He was tried and convicted and sent to prison and he escaped.\"\n\nReuben's whole body stilled.\n\n\"Ok, this is classified so you can't talk about it. But that's why he went on the run when the CIA started investigating Agent Smith Smith. Because apparently, they work together. I think they were kidnapping people and torturing them. There's a video online of Michael and Agent Smith Smith torturing and killing this drug lord. It's so bad it's been censored and removed off the internet, you can only get it on the dark web.\"\n\nHe stared at me in shock for a few moments. \"And you scened with him?\" He looked furious.\n\n\"Well I didn't know at the time! As soon as I found out, he had already ghosted me!\"\n\nHe covered his mouth with his hand like he was trying to keep his muffled words from coming out. \"Mother fucker... I'm going to kill him. I'm going to kill him, Alice. Next time I see him, he's dead.\"\n\nI winced. \"You... should probably not say stuff like that out loud when there are electronic devices in the room.\" I didn't know a lot about the illegal hacking software they had, but I knew it was dangerous. \"And also maybe follow that up with, 'haha, I was just kidding, Michael!'\"\n\nReuben glared even harder, if that was even possible.\n\nOkay, distraction-slash-redirection time. \"When you were Anthony Mack's sub, did you guys have sex?\"\n\n\"No,\" he said, pulling his head back and looking a little offended. \"I have absolutely no inclination towards men.\"\n\n\"So you had a nonsexual relationship.\"\n\n\"He still dominated me sexually, although we didn't have sex. He was in charge of when and who I was allowed to sleep with, and if and when I was allowed release.\"\n\nI fought a grin. Oh my god, ask him. I bet he did. I bet... \n\n\"Did you have to wear a cock cage?\"\n\nReuben didn't look as embarrassed as I thought he would. \"Yes, for a while. If I was going to enforce chastity on my subs, I needed to know what it was like.\"\n\n\"Uh... before we go any further,\" I said, scooting a little closer to him in the open space between his legs. \"I'm not okay with extended chastity and denial. You think I'm annoying now, you don't even want to know what I'm like without an orgasm every few days.\"\n\n\"We can discuss kinks and punishments tomorrow. For now... I'd like to know if you have any other questions about the things I told you.\"\n\nI thought through everything he'd said; about Savannah, the demons he battled, his experiences training and learning to be a good Dom. About Robin and Megan and the other girls.\n\n\"Reuben... I'm strictly monogamous. I don't share well. I know you used to have lots of playmates, but...\" he knew what I was saying, but allowed me to finish my statement. \"Having to share my partner is a hard limit for me.\"\n\n\"That's not on the table, Alice. I don't need anyone else but you.\"\n\nI loved hearing those words. I loved the way he looked at me, like he wanted to swallow me whole, or tie me down and just revel in the fact that I was here in front of him. He looked at me like he wanted to peek inside me, to find every single secret, study it, taste it. And it scared me, because he made me feel wanted, and special, and valuable, when my brain constantly told me I was a hot mess and a piece of trash.\n\n\"You don't know that,\" I whispered, hating that truth. \"You might decide five years from now that you want another slave. You're a collector, Reuben. That's not me.\"\n\n\"I'm not a collector; I'm a teacher. But I haven't done a scene with anyone except Becca in the past six years. I am not ruled by the beast; I rule him.\n\n\"So yes, I do know. Five years from now, ten years from now, when I see a pretty slave girl that I like, I will not approach her. When I see a kitten in need of a master, I will not pursue her. When a man comes to me and asks me to take him as my submissive to train him, I will send him to a trusted friend. Because when it comes down to it, if that's a hard limit of yours, I'll respect it. You draw the lines, Alice. Your needs before my wants. My needs before your wants. That's why it's called a power exchange, sweetheart. You aren't powerless here. This is our dynamic. Not mine that you have to try to fit into. We follow the rules... but we make them ourselves.\"\n\nI felt the heaviness in my heart lift a little. \"So... I follow your rules and you follow mine?\" I felt myself smile.\n\nHe hesitated, looking at me as if I were trying to trap him. Which, okay, I was a little. \"Well... yes... but we both agree to them in advance. You can't just throw a rule at me that I have to follow if we haven't agreed on it. But the same goes for me. I can't just decide one day that you're on permanent chastity and that you're not allowed to talk.\"\n\n\"What if I change my mind about something? What if we try this and it doesn't work? What if--\"\n\nHe lowered his head and stared at me intently. \"Then we sit down, just like this, and decide what to do instead.\"\n\n\"And if I break rules?\"\n\n\"You get punished.\" He shrugged, like it was the most simple thing. And I guess in a way, it was.\n\n\"And if I find loopholes?\"\n\nHe paused, and I continued. \"Cause I feel like if I did exactly what you said, but you weren't specific enough to get what you want, that's on you, not me.\"\n\n\"I bet you feel that way,\" he muttered, and his expression changed to something dark that sent shivers down my spine. \"Just know if you decide to play this game, I'm going to play right back.\"\n\nI grinned. \"Of course... That's what makes it fun.\"\n\n*************\n\nI hope you are enjoying Alice and Reuben as much as I am! please remember to leave a rating and a comment if you feel so inclined."
    ],
    "authorname": "LindsayMurray",
    "tags": [
        "male dom",
        "sadism",
        "masochism",
        "noncon",
        "non-consent",
        "rescue"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/how-to-tame-a-brat-pt-10"
}