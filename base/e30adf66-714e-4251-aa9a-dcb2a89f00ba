{
    "title": "The Achen Enforcer Ch. 05",
    "pages": [
        "Harp here. Someone--Hey, nthusiastic--said they would like larger posts. I'll be doubling up chapters, so next post will be 6 and 7 together, etc. I appreciate the comments. Thanks for reading.\n\nChapter 5\n\nBode was gone the next day to the Enforcer's Division, performing punishments, coming in at night and going into his office, avoiding Lyric. He got into bed with her late, after she'd gone to sleep.\n\nHe did the same the next night, working in his office all day.\n\nThe next day, he continued working, keeping his head clear and staying away from her, figuring what he was going to need to do to keep her safe. He had to decide by the end of the week.\n\nIt was late when he came out of his office to find Lyric already in bed, on her back, her wrist over her head on the restraint. Her lips were parted, asleep. He stripped and got in, turning toward her, up on his elbow, watching her sleep. He rolled onto his back. He did have some self-control.\n\nHis eyes returned to her, his belly tense. Not enough, evidently. His hand slipped under the covers, finding a warm round hip, her belly, cupping her breast.\n\nShe stirred and he moved quietly, slowly, putting her other wrist on the restraint. He turned her away from him, fitting his body to her back, getting his arm under her. That hand went on her round tits, her nipples. His other hand came and lifted her knee, moving between her legs.\n\nHe had some time to work on her before she was truly awake. She was already making encouraging noises, her pussy beginning to get wet. He felt her give in to it, hardly putting up a fight at all. He was stroking that way she liked and now she was rubbing herself on him, arching, trying to get high enough to take his cock. He held her there, not stopping. When she was close, he lifted his hands, her thighs shaking. He started again. And again. He wanted her ready.\n\n\"Please,\" she breathed, rubbing herself on him, that round ass that made him crazy, Lyric giving him long strokes of her pussy up and down his cock.\n\nHe didn't move, letting her do it, looking down, deliciously difficult. It was what he wanted anyway, Bode gathering her slick around the head of his cock with his hand. He waited until he was slippery with her, looking. Her eyes were closed, Lyric jutting, offering her pussy.\n\nHe got hold of her, slipping beautifully between her fat ass cheeks. Coming up on one arm, he angled, watching her face. Her eyes flew open as he pressed into a place she didn't anticipate.\n\n\"No,\" she said, tensing, arching the other way now, bringing her with him.\n\n\"Yes,\" he said, closing her legs, holding her still and pressing, rocking. \"I know you saw Gram do it in the arena.\"\n\n\"You can't. No,\" she said, wiggling all over him, forcing him to go deeper to keep her there, a light grunt escaping him.\n\nHe held on to her tightly. Her hands were above her head, restraining her movements. He pressed, finally slipping in past the ring. Fuck, she was tight. He grunted again. She gave a high cry and tried to get away, impaled.\n\nHis arms tightened, following, pressing more. \"I'm going to do it,\" he said, breathing heavily, licking her ear, excited. \"I'll enjoy it either way, but you'll be happier if you relax.\"\n\nShe exploded into motion in front of him as his hips moving in small thrusts. He grunted again with pleasure. Her struggles intensified, all of her in motion in his arms as he slowly penetrated her, waiting for her to adjust and pressing in more. She was still tense, hot, those cheeks caressing his cock as she moved.\n\nLyric cried out and then she was begging, arousing him more. \"Enforcer, don't. Don't, please.\" Her hand had gone to his leg, trying to push him away as he began to thrust. She cried out again.\n\n\"You have the roundest, tightest butt, pretty companion,\" he said, thrusting harder. \"I have wanted to fuck your ass since I first saw it.\"\n\n\"It hurts,\" she said, a wave going through him, his thrusts increasing.\n\n\"I know,\" he said, grunting again. He drew her leg up again, trapping her as she struggled, pressing, not fully inside her.\n\nShe was still tense, his cock aching with pressure. His left hand went between her legs, his other to her tits. He alternated between her nipples, hard pinches. Two fingers of his other hand went deep into her pussy, and then a third into her squirming heat, his thumb settling on her clit. She went still, her body locked, shivering.\n\nShe hitched and strained a little against him, his cock slipping deeper. He swept his thumb across her clit, the small bud hard and slick from earlier, his fingers curling. She whimpered as he lifted her clitoris, fast and firm strokes.\n\nHe kept at it, not moving now, and she finally made a deep, satisfied sound and her ass relaxed. He slipped all the way in, his cock buried in her heat. She tensed again, but she relaxed almost immediately after. She met his gentle thrust, and the next one.\n\n\"There you go,\" he said, his fingers busy.\n\nShe was pushing back on him now, those small encouraging sounds from her throat returning, her hips moving. Bode released his breath as she jutted, allowing himself to thrust faster, going deep. He pulled his fingers from her pussy, pushing slick to her ass, giving him more to work with, the way easier now. He let himself go, fucking her, getting under her for the angle. His own leg came up, pulling her onto him a little, thrusting deeply.\n\nLyric was meeting him, making those noises she did. She was going to be sore tomorrow.\n\nHe enjoyed himself, varying his strokes, quick and hot and then deep, long and slow. He waited until his pleasure was coming, returning his fingers to her. \"Come on my hand, on my cock in your ass,\" he panted, his fingers fucking her pussy. Twisting her nipple, his thumb rubbed her clit roughly.\n\nShe tensed, such pleasure, and then she strained, making a high, helpless sound.\n\n\"Fuck,\" he said. It was on him, Bode giving a series of harsh, deep thrusts, grunting, holding in her.\n\nShe was still straining, her ass milking him as he came. He buried his face in her hair and cried out with her, convulsing, the release intense, her little pussy pulsing around his fingers. He gave her the last of it, another deep thrust.\n\nHe didn't move, Lyric in his arms, his fingers still deep in her, his cock, his face buried in her curls. He was wrapped around her entirely. He nuzzled her. \"I love fucking you, dahlia,\" he breathed, telling her that, nothing the audio could pick up.\n\nHe slapped the button and slowly withdrew from her, Lyric breathing slowly and deeply, shivering. He gestured. She got out of bed and ran lightly to the bathroom, Bode watching her. After a few moments, he followed her, pulling her into the shower with him.\n\n#\n\nTwo more days passed, and Bode still hadn't decided. It was almost the end of the week. When he returned to his rooms that day, it was to find her at the door, her cheeks flushed. \"There was a message that came for me on the panel, Enforcer. I waited for you, as you said.\"\n\nBode walked to his slate, linking to the panel, the message gone a moment later. He grinned. Em\u00ecl had sent the message to terminate upon receipt, but Bode captured it. He sent a copy to the magistrate with no accompanying information. Their father wasn't going to be happy that Em\u00ecl had tried to summon Lyric to his rooms. She was still Bode's companion and Tibrus hadn't informed them of his decision yet. The magistrate didn't like those who tried to bypass his authority. It might sway the magistrate against Bode's half-brother.\n\n\"You did well,\" he said, going into his office.\n\n#\n\nReturning the next day from the Enforcer's Division at dusk, he found Lyric sitting, watching the view out of the window. She was barefoot, in her companion dress. Bode walked and got himself a drink. He turned around, his eyes on her. He had to choose now. He was out of time.\n\nIf he didn't fix this, he predicted Tibrus would have Lyric arrested on some charge in order to watch Bode react. Once Tibrus arrested her, he would order Bode to punish her. If Bode refused, Tibrus would bring Stoor in to hurt her.\n\nThere was only one way to avoid that altogether.\n\nIn the morning, Bode would take her to the Achen Square. He would bring her to the whipping post, strip her naked, put her marchettes on the post above her head, and flog her. A wave went through his belly, seeing it in his mind, seeing her arching, Lyric trying to escape the lash, her body crossed with raised red lines.\n\nWhen he was done whipping her, he would position her with her legs spread and use the punishment rod on her for the entertainment of the Achens watching. When he was satisfied, they could listen to her come screaming. Then he would fuck her. They would like that.\n\nBode would like it. His cock was stiff whenever he thought about it, images in his mind. Her reaction when she felt the lash, her realization that it was just the first one. The sound of her voice as she begged. Imagining Lyric with her legs tied open, imagining touching her nipples with the punishment rod, her pussy pulsing against it as she climaxed. His cock moved in his pants. Achens gathering to watch. Fucking her at the end of all that pleasure. It was still far more merciful than what his father would order done to her on the enforcer's table.\n\nBecause he had lost clarity, this was where they were. Because he hadn't claimed her in the arena sands. Because he hadn't wanted to sustain his indifference and his lesser cruelties. Taking Lyric to the square and doing those things to her was now the price for her safety in Achen.\n\nAfter he did that, his father wouldn't challenge his right to keep her as a companion. He would have more time with her. Years, maybe. Bode could put everything off. He would, for her.\n\nLyric looked up at him. There was only one problem with that plan. If Lyric told him her foot hurt, Bode wouldn't be able to take her out of that. He would be forced to ignore her.\n\nAnd he'd promised her.\n\nHe had one other choice. If he didn't take her into the square tomorrow, Bode would have to get her out of Achen as soon as possible. She was in immediate danger from the magistrate. That meant Bode would have to move forward with his plans right away. He would have no time with her. And since he'd seen her on the sands, he'd never wanted so badly to have more of it.\n\nHe realized he was staring at Lyric and that she was staring back at him. He focused on her, meeting her eyes, that liquor color. Bode slowly smiled at her. Lyric's brows went up and then, for the first time, her face lighted in a small return smile, so sweet it almost hurt to look at her. Then she looked down.\n\nAs much as it would pleasure him, he didn't think she would smile at him like that after he took her to the square. He didn't think he'd ever see that smile again if he did that to her.\n\nIt decided him. Everything in Achen came with a price. Bode would pay this for her.\n\nIf that was his choice, the first thing to do was to take care of Em\u00ecl's counterclaim. She wouldn't be safe for long, but it would give them time. Enough time, he hoped. And give him something he wanted, as well. \"Come here,\" he said, holding out his hand.\n\nShe got up and came to him, taking it.\n\n\"You won't need your shoes,\" he said.\n\nShe slipped them off, eyeing him. He walked to the doors that led onto the balcony, letting it read his handscan. When the doors were closed, the glass was darkened, opaque. That changed when you opened the doors.\n\nThey peeled away and he and Lyric were released onto a small balcony that jutted out, a sturdy table with a self-contained glowing solar lamp and two chairs, a heater. It was fully dark now, but all around them were lights, hundreds of Achens perched, above and below, beside them, balconies crawling up the sides of the tall buildings in the very center of the city. Blocks of tall buildings.\n\nSound buffers ensured none of them heard the conversation of others. There were more balconies across on the building facing them, not far. None of the people were looking at any of others--or, at least, they didn't seem to be. He saw several people giving fast glances, the young Achen enforcer and his new companion, many of them curious after the scandal of Bode's behavior at the games.\n\nLyric went and put her hands on the rail. She wasn't gazing at them directly either, her head ducking, but she was looking. He came to the rail next to her.\n\n\"What are they doing, Enforcer?\" she leaned in to say.\n\n\"Enjoying the evening. You don't have to whisper. They can't hear us any more than we can hear them. And there is enough scrambling equipment active to make the balconies one of the most secure places in Achen, at least from audio surveillance. They can still see us, just as we can see them.\"\n\nHer eyes darted. \"I've never seen anything so strange,\" she said in a normal tone.\n\nHe laughed and saw more than a few stares directed his way. She noticed them.\n\nHe ignored them. \"They weren't sure I was capable of laughing,\" Bode said when she turned and looked at him, curious.\n\n\"Why are you being kind to me where others can see?\" she said, frowning lightly.\n\nBode reached out and touched her cheek, his smile fading. \"There's no point now. I know you thought I was cruel to you, dahlia, but I wasn't as cruel as I needed to be, and nowhere near as cruel as Tibrus expected. I failed to claim you in the arena, and that drew his attention. I failed to hurt you enough to convince my father that I am indifferent to you, and now he suspects that he has misjudged me. He didn't think I was capable of any other feelings except pleasure in the pain of others. To reassure him and to ensure your safety in Achen, I would have to do things I don't think you would forgive me for.\"\n\nShe was staring at him. \"What things?\"\n\nA wave went through his belly, his eyes going to her body. \"Does it matter? They would frighten you.\"\n\nShe shivered, his eyes going to her nipples now, which had hardened. \"You're not going to be a prick anymore?\" she said softly.\n\nBode laughed again, more glances from the balconies around them. \"I imagine I'm one anyway, Lyric. But we have a more immediate concern. Em\u00ecl is trying to persuade Tibrus to allow him to take you as his companion. That is what the dinner was about.\"\n\n\"I was there. I did understand that part,\" she said under her breath.\n\n\"Do you want me to stop it?\"\n\n\"I don't want to go to your brother, if that's what you're asking,\" Lyric said, staring at him.\n\n\"Half-brother. Are you sure?\"\n\n\"Yes, I'm sure. If there is a way you could prevent that, Enforcer, I would be grateful.\"\n\nHe drew back from the rail and held his hand out to her. When she turned and took it, he pulled her to himself gently. \"Then kiss me, dahlia,\" he said. \"Kiss me like you did in my office.\"\n\nHer eyes darted around and she swallowed. Slowly, her hand came up and around his neck. She looked up at him and came up on her tiptoes. Bode bent and then he was kissing her as he hadn't before, not like this, Lyric responding to him. Her taste went through him, a wave in his gut. His heart began to pound.\n\nHe had wanted this more. He wanted her willing.\n\nYes, this was worth the price, he decided, one hand moving down her back and over her round butt, cupping a fat cheek, pulling her closer. He knew she could feel him, a pleasant friction when he tilted his hips, pressing.\n\nWhen he did that, she reversed, struggling and squirming. She broke the kiss, pulling away from him and backing away. He let her, dropping his hands, and then followed her, grinning.\n\n\"People can see, Enforcer,\" Lyric said.\n\n\"You said you were sure,\" he said, crowding her, turning her and trapping her against the rail.\n\n\"I am.\"\n\n\"Then come here,\" he said, grabbing her hand and pulling her toward him. \"And don't look so reluctant.\" He pulled her closer, his fingers going to the dress.\n\n\"No,\" she said, backing away again. \"I'm not doing that in front of people.\"\n\n\"You're worried about the Achens on the balconies? Some of them will be doing the same before we're done,\" he said, advancing. \"It's common. Although with you, I imagine most of them will be watching.\"\n\n\"No,\" she said adamantly.\n\n\"This is how I keep you out of Em\u00ecl's hands, Lyric. All these people will witness.\"\n\nShe was breathing fast, flushed.\n\nWhen she didn't move, he approached her, reaching for her, slipping his arm around her waist. \"If you just forget they are there, I swear it's no different,\" he said. \"People watch you all the time inside, through the cameras. You just can't see them.\"\n\n\"That doesn't help, Enforcer,\" she said. Her hands went to his chest as he backed up with her, Bode regaining the ground he'd lost.\n\nHe turned her when they arrived, facing her away from him, putting her hands on the railing and standing behind her.\n\n\"I can't,\" she said in a low voice.\n\nBode leaned in to speak in her ear. \"Do you want me to spank you in front of the Achens? They would like it, Lyric.\"\n\n\"Please, don't,\" she said, pulling her hands off the railing, turning to him in profile. Her cheeks were red.\n\n\"Then when I put your hands on the railing,\" he said, doing so, \"you keep them there like they are magnetized. Because the moment your hands leave this railing even a little bit, I'm going to sit at the table and bend you over my lap and lift your dress. I'll smack your bare ass in front of all of them, and I'll still fuck you after while they watch.\"\n\n\"Enforcer,\" she appealed, her voice high.\n\n\"Or, I could simply begin that way now.\"\n\nShe left her hands on the rail. He leaned, looking at her face. Her eyes were closed and she was biting her lip. He laughed softly.\n\nBringing his hands up, he pulled the pins that kept the thick coil of hair at her neck, releasing it. Her hair tumbled around her, silky curls everywhere, so much of it, Bode sweeping her hair behind her. He brought his fingers to her companion dress, beginning to unlace it slowly, drawing the ribbon from the eyelets. She was breathing in long stuttering bursts.\n\nThe side parted. He tugged on the other side, loosening it, his hands going to the clasp at her neck. Her breasts became visible a bit at a time, her nipples flushed with color, tightening in the cool air, rising. Her hands twitched on the rail, beginning to leave them because she wanted to cover herself.\n\nBode put his own hands over hers. \"I would like it, Lyric, and I will do it,\" he breathed in her ear, a beautiful view of the round swells of her tits, jutting nipples. \"I won't give you another warning.\"\n\nShe nodded. Her hands grasped the rail again, her knuckles white. He loosened the rest of the dress, tugging lightly, and then he stopped when she spoke.\n\n\"Enforcer,\" she whispered.\n\nHe put his hands outside hers on the rail, the dress still around her waist, close behind her. \"Say my name,\" he said, nuzzling her.\n\n\"What?\"\n\n\"Call me by my name, Lyric,\" he said as low. \"I want to hear it.\"\n\n\"I--\" she began, and then stopped.\n\n\"I know your mouth works,\" he said, grinning behind her.\n\n\"That's not funny,\" she said.\n\n\"That's not funny, Bode,\" he prompted her, waiting.\n\n\"Are you really going to do that to me in front of everyone, Bode?\" she said, her voice shaking, her hands still on the rail.\n\nHe did like hearing his name from her. \"Yes, Lyric,\" he said. He leaned, looking at her face, which was still red. He returned behind her, pulling the dress, pushing it off her hips. It dropped. He touched her ankle with his foot and she stepped out of it. He slid her dress aside.\n\nPutting his hands on the outside of hers again, close behind her, he put his face her hair. \"You are beautiful,\" he said, one of his hands leaving the rail and landing on the deep indent of her waist.\n\nShe startled. He took his time, getting her used to the idea, his hand roaming. He touched her belly, slipping low between her thighs and up the side of her hip to her back, and then circling her neck in front, squeezing a little. She jerked lightly.",
        "He brought his head down, speaking in her ear. \"Arch your back,\" he said.\n\n\"No,\" she whispered back.\n\n\"No, Bode.\"\n\n\"Don't, Bode,\" she said.\n\n\"I can spank you from this position as well,\" he gave back.\n\nShe made a small sound and arched her back, her tits coming up, her round butt bumping his crotch. His breath caught, pressing on her, his hand sweeping her hair to the side and running down the deep curve of her back, following its arc slowly and then around her ass, cupping it. He saw several in their audience had given up any pretense, watching outright. Lyric saw it too, tensing.\n\n\"Close your eyes, dahlia,\" he murmured. \"Pretend it's only me and you. They don't matter anyway.\"\n\n\"I can't, Bode,\" she said low, her knuckles still white. \"I can feel them looking at me.\"\n\n\"Then just close your eyes. I can help with the other,\" he said, touching her breast, brushing his thumb on her nipple.\n\nShe jumped and the fingers of her hands opened on the railing. His cock surged, his eyes going down to her ass. She remembered in time and grasped it again. He went to the other nipple, light touches with just his fingertips, and then tugging and pinching. He leaned to look. Her eyes were closed, her breathing faster.\n\nHe continued, speaking low. His fingers were still on her nipples, which were hard from more than cold now. He nuzzled her, things he couldn't say to her in there. His breathing was slow and heavy. \"I think about you when I'm in my office until it's a torment to me, Lyric. I think about calling your pleasure. There's nothing I've done to you I don't want to do again and again, and other things. Things I know you haven't thought about yet. Things that would feel so good.\"\n\nHer breath was hitching now, offering her nipples to his fingers, arching more. He pressed on her below, behind her, wedging her little ass against his crotch, letting her feel him. His other hand was still planted on the rail beside hers. She adjusted for balance, widening her stance a little.\n\nMolding his body behind hers, his hand came off the rail and went to her waist, slipping between her legs and cupping her. He pressed, the fingers of his other hand still tugging her nipples, alternating.\n\nShe squirmed. He waited, wedging a finger below between her pussy lips, returning his attention to her nipples.\n\nSlowly, she began asking for what she wanted. He stroked her outer lips lightly and she widened more, jutting. He rewarded her for it, his fingers running lightly over her slit, touching her inner lips, down to her passage, the way she liked it. He pressed in there, fingering her, no difficulty, the way becoming slick. He grunted lightly, a wave going through him, almost painful. He brought his finger out, circling her clit lightly and then pushing two fingers in.\n\nThat made her squirm, small sounds from her throat. \"Keep your eyes closed,\" he said softly. \"Let go of the railing.\"\n\nShe let go as he withdrew his hand and turned her around to face him. He put one arm around her waist to steady her, his hand under her knee, and lifted her onto the rail.\n\nLyric gave a small cry of fear and her arms came around his neck, holding on as he sat her on it, his arm still around her waist. He pulled himself between her legs.\n\nBode looked at her face, smiling a little, his arm securely around her. Her eyes were still closed tight, stubborn about it now, her mouth parted, her breasts rising and falling with her breathing. He brought one hand down, undoing his pants, his heart pounding.\n\nHer hands were still at his neck as he pulled her gently off the railing, angling. Her knees were up, clinging to him. She stiffened when she felt his cock nudge her passage, and then she relaxed as he let her slowly sink onto him.\n\nShe was hitching as he brought her all the way down, fitting himself in her tightness. He stepped back from the rail, deep in her. Reaching behind her with his finger, finding where they were meeting, he found plenty of slick. He swirled his center finger in it and returned, pressing his finger into her ass.\n\nShe yelped, going rigid and then squirming. Bode grinned. Slick or not, rocking his finger in and out of her ass was tight, she was so tense. She was wiggling all over the place, but she didn't open her eyes.\n\n\"Bode,\" she objected, saying his name, pleasing him, his finger going faster as he thrust from below.\n\nHer eyes were still closed. She had decided he was right, that it was her best option. She shivered and her ass relaxed and she went still. He thrust again from below, small motions with his finger buried past the second knuckle. That worked. She pulsed around his finger, around his cock. Bode grunted again. She shivered and began rocking her hips, meeting him.\n\nHe turned her to the table, pulling his finger from her ass gently and supporting her back, still deep in her. He swept the light aside where it thudded onto the deck and rolled briefly. She didn't even startle, didn't tense as he lay her back, her eyes still closed. It was gratifying to know she didn't worry he would drop her.\n\nWhen she felt the table under her, her knees came up around his hips as she relaxed onto it. Yes, he was going to blindfold her soon. She'd let him do awful things to her.\n\nBode stood, breathing deeply, his cock buried in her. He began touching her, shoulders and belly, hips and knees. He didn't thrust. Lyric arched and met his hands wherever they went, her hair spread all around her on the table.\n\nThen she began to move, because Lyric wanted her pleasure, and taking her willing was as enjoyable as he'd thought it would be. He cupped her breasts, squeezing her nipples sharply. She cried out and arched, her knees higher. She began that wiggling she did, those hips, trying to urge him, moving herself on and off his cock in small motions. Bode looked down where she was meeting him and reached to spread her pussy lips, wedging his thumb there and rubbing.\n\nHe did it slowly to watch her. Her eyes were still closed. She arched, coming straight up, tits first, pulsing on his cock, against his thumb. She was panting. He pulled back and thrust into her, Lyric making a satisfied sound that went through him.\n\nHis fingers left her, grabbing her hips and beginning to go deep, taking his pleasure. She went still to feel it, biting her lip again. He couldn't resist, bringing himself down and kissing her slowly, at odds with his thrusting hips. Breaking the kiss, he straightened, trapping her knees and pushing them, spreading her, getting where he could go deeper. He released her knees and his hands found her wrists, pinning them to the table, her arms spread as he humped into her.\n\nThat was what he wanted. He did that, chasing the sensations in and out, slick pressure dragging his length. Lyric was making those noises she did, encouraging him. He didn't think she knew she did that. He felt himself reaching a peak, looking down at her, panting. He released her wrist, bringing his hand down between them, finding her. Lyric was getting out of his way, making it easier. His thumb was rubbing. The whole area was slippery.\n\n\"Come for me, companion,\" he grunted, holding out for it. \"Fuck.\"\n\nLyric cried out and arched, going rigid, straining. He came down on her, his elbows on the surface of the table. His hips were thrusting. It was on him fast, rising up his spine. He cried out as well, two sharp thrusts, and held in her, releasing, his cock pulsing. Her eyes opened and met his as he'd taught her, hers helpless with pleasure, cresting. He grunted, the last of it, pressing deep in her as she pulsed around him.\n\nBode was over her. He relaxed, his heart still pounding, his breath coming fast. He took his weight on his arms, straightening, bringing her knees down. He pressed in once more, waiting for his breathing to slow.\n\nWhen he could think again, he pulled out of her and put himself away, still fully clothed. She brought her knees together, her eyes already closed again. He reached, his hands shaping her upper back behind and under her. Lifting her, he slid them slowly down to her waist and then her hips, rounding them, touching her the way she liked, doing it all again until she relaxed in his hands. She never opened her eyes.\n\nHe drew her up gently. Her arms crossed in front of herself and she shook her hair, the fall hiding her face, sitting on the edge of the table. He dipped, looking for her. She opened her eyes and met his, such beautiful eyes. They darted to where the Achens were and she looked down.\n\nBode reached and stroked her head, the springy curls. He brought one arm around her back, the other behind her knees. When he lifted her off the table, Lyric outright hid in her hair.\n\nBefore he brought her into the house, Bode stopped and turned his head, looking up at the balcony on the building they faced, high and to the right, Em\u00ecl standing there with Gram. Bode met Em\u00ecl's eyes and grinned, turning and bringing her into his rooms.\n\n#\n\nBode was sitting in his office in his rooms when he received the notice in the morning, sent to his slate, addressed to both himself and Em\u00ecl.\n\n\"The counterclaim of sponsorship of the companion named Lyric based on the failure to publicly claim a companion is denied. Signed, Tibrus, Fifth Magistrate of Achen.\"\n\nEm\u00ecl was cursing somewhere. Several other messages had come in. Bode frowned lightly. One from Corine. He deleted it. Stanza from seventh block, an invitation to lunch at her rooms. He'd met her once. Arbra from sixth block. He'd fucked her before. Genea from seventh. He made a face and deleted them.\n\nHe'd managed to keep Lyric out of Em\u00ecl's hands for now. It wouldn't matter soon. The exile New Year was coming in less than a week. He'd made his choice and it was time.\n\nBode leaned forward, composing the message. It would go on relays, secure channels he'd worked out long ago. He asked the Council of Ten for a meeting, also requesting that Devos from Tr\u00edafarm be present.\n\nWhen it was written, Bode looked down at his slate for a long moment. He watched his hand reach out and send it. He sat back when it was done. He'd wanted an end to it for so long. And all of that had changed the moment he'd seen Lyric on the sands of the arena.\n\nEverything in Achen had a price. Since he was going to pay it anyway, he might as well enjoy what he'd bought while he still had it.\n\nHe walked out of his office, seeing her sitting in the chair she liked, curled up with a book. Bode walked and stood over her. She looked up, her expression open. He studied her face. No disgust. No fear of him. She set the book aside as he reached for her, picking her up. He sat, putting her on his lap and turning her side-on to him. His hand went to her bare foot, the hurt one, circling her ankle. He stayed there as she gradually relaxed into him, her head on his chest."
    ],
    "authorname": "semiosis50",
    "tags": [
        "noncon",
        "bdsm",
        "anal",
        "public sex",
        "sci fi",
        "forced"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-achen-enforcer-ch-05"
}