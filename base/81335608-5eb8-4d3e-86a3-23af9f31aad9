{
    "title": "Modified Ch. 14",
    "pages": [
        "*Friday*\n\nJack wasn't entirely sure when he woke up, but he knew it was due to a monstrous clap of thunder, which startled him from his slumbers. Whilst Florida is infamous for its rainy storms, and copious amounts of thunder and lightning, they hadn't been bothered that much on their trip thus far.\n\nApparently Florida was making up for lost time, as the room lit up like a bright neon sign, then plunged into darkness with a few seconds passing before the entire room seemed to rumble with a lengthy peal of thunder that even the Norse god himself would have been pleased with. He was aware that Angela was beside him shaking, and pulled her close to him. \n\n\"Hate bloody lighting. Had a friend who was struck by a bolt in his garden back home, ended up with burns over a third of his upper body. Hate it.\" She sobbed into his chest and Jack made soothing noises to comfort her. He held her close, but she jumped with each flash of light and shivered through the thunderous rumble. The rain was also intense now, thrashing off the windows. Jack went to check the weather on his phone and realised he had no WiFi or mobile service.\n\n\"I think the power might be out. Just going to check and make sure everyone is okay, and that the windows are all shut.\"\n\n\"Don't leave me on my own! Please no...\"\n\nJack took her hand and they stepped out onto the landing, when the door to the room furthest along opened, and Jack spotted Laura peeking out. They stepped over, and Jack explained what he was doing, but Laura recognised the fear in Angela's face and pulled her close for a hug. Andi appeared, and offered to join Jack in checking downstairs, so Laura and Angela went inside and hid under the covers.\n\n\"I'm sure this is routine to a local, but that's a big storm where I come from.\"\n\n\"Oh it's a good one Jack. Let's check the breakers in case it's just us. It'll be in the garage.\"\n\nSo off they went and wandered onto the cold concrete floor, and using a phone light they confirmed that it was not just them. Nothing to do but wait it out. Suddenly Jack was aware they were both very naked, causing his cock to twitch in appreciation of Andi's body, which was suddenly on full display as a brilliantly bright flash lit up the room through the tiny windows. \n\nAfter checking the remaining doors and windows, they returned to the living room, and a flash followed by a massive rumble had Andi lunging towards him, and he protectively pulled her close. What was unavoidable was Jack's burgeoning erection, which Andi had to feel pressed against her stomach. Andi looked up, smiled and kissed him. They might have gone further but were interrupted by Laura loudly whispering if they were okay from upstairs. Andi unfurled herself from his grasp, and gave a friendly tug on his cock, which was well on its way to full mast.\n\n\"Everything's okay, and the power seems to be out in the district not just us. Guess we have to wait it out. I seem to have better blinds in my room, do you guys want to come snuggle up?\" Laura eagerly nodded, with a still anxious looking Angela in tow. So the four of them returned to Jack's admittedly huge bed, and they were polite not to mention his swaying cock even if they had seen it. \n\nJack ended up on the left side, while Angela was sandwiched between Laura and Andi. Both acutely aware of her terror at the storm, and were gently stroking her hair and her body making soothing sounds. This continued as the storm began to fade, and the noises became less soothing and more appreciative, until Angela gave a moan that Jack recognised as one of arousal. Andi slid down the bed, and slowly kissed her way up Angela's long legs until she reached her thighs, when she turned her attention to what was between her legs. Laura was engaged in a languorous French kiss, her hands touching Angela's neck and playing lazily with a nipple. \n\nJack's view was improved further when the power was restored as the lamps in the room came on, the switch having been checked earlier and left in the on position, and he got to see the three woman engaged in acts of total pleasure, any pretence of the redheaded woman being comforted having been discarded some time ago. Andi's ministrations were having the desired effect, with Angela noisily appreciating her efforts, while Laura started to moan as she was fingered rather expertly by the woman in the middle. \n\nJack's cock was relentlessly firm, but he recognised this was their moment, but clearly sensing their arousal, he helped all three woman with their pleasure. Angela came first unsurprisingly, her back arching upwards as her orgasm ripped through her. Laura followed short after, and Jack contributed to Andi's furious pleasuring of herself and tipped her into a loud and surprised orgasm. The three woman panted and heaved as they regained their calm, but one by one they turned to Jack, and all but drooled over his cock.\n\nAndi pounced, pushing him onto his back and mounted his cock, sliding slowly to the hilt. Laura offered her breasts to Jack then Andi, and was rewarded with nibbling and sucking on her sensitive nipples. Andi started to fuck Jack while Angela passionately kissed the young American and moved over Jack's chest, offering her wet and flushed pussy lips to his mouth, which he eagerly attacked. Laura unwilling to be left out, pressed in behind Andi, slipping a finger into her ass which Jack could feel pressing through her membranes as she slipped up and down on his member.\n\nUnder this extreme stimulation no one was going to last long, but Jack thrust up his hips as he pumped his cum into Andi, who spontaneously orgasmed shortly after. Angela took another 30 seconds or so and might have been the loudest of all of them. Laura seemed utterly content, and hugged close to her lover while she came down from her pleasure high.a quick glance at the clock showed it was a little after 2am, and after a round of bathroom visits, the lights went out and they remained snuggled together, falling asleep soon after.\n\nIt was still dark in the room when Jack woke. It wasn't like earlier with the fury of the story rousing him, but instead the gentle sounds of passion carrying through the house. Normally the rooms provided adequate privacy when it's residents were engaged in pleasure, but it was probably that the words were not in English that clued him in that he was listening to Audrey. He glanced over his bed, and saw his friends sound asleep, limbs draped over one another and looking utterly peaceful. \n\nThe sounds continued, and Jack's curiosity got the better of him, so he slipped out of the bed and quietly padded to his door, which was slightly ajar. He stepped out of the bedroom and the noises continued. He could hear the steady tempo of flesh pressing into flesh, interspersed with moans and gasps, as well as the bilingual commentary that he had grown to understand quite well when he and Audrey fucked. She was undoubtedly on the receiving end of things, and with the sounds coming from the nurses room, which also had its door cracked open, he couldn't resist peering in.\n\nIt was pretty much what he expected. Audrey was on all fours, her body facing the doorway while Debbie was busy pounding away with a strap on. The blonde nurse was enthusiastically giving her friend a very good seeing to, yet while Jack was almost completely absorbed by Audrey's body in the the throes of passion, nothing quite topped Debbie's tits bouncing in rhythm to the fucking she was delivering.\n\nJack's cock took no time in responding the erotic scene in front of him, and he stepped into the room. Audrey saw him and smiled in between her facing contorting in passion. Whether her orgasm was due or the discovery of being observed was a tipping point, or maybe it was just Jack's rigid cock twitching while he observed the scene, it didn't matter. Audrey came, and Debbie grabbed her hair and pulled her up towards her while her hands mauled her breasts and she kissed the woman in her embrace. \n\n\"Took you long enough. I told Audrey you're like a sex Geiger counter, you can tell when there's fucking going on.\" She grinned, happy to see him but also to see Audrey collapsed panting into the bed.\n\n\"I suppose the doors being open in both rooms was a coincidence?\" Jack smiled, but correctly guessed they'd set this up to rouse him and bring him to their room. \n\nDebbie shrugged her shoulders. \"Does it matter? You just got to watch me give this gorgeous woman a world class fucking...and your cock reckons it was epic too. How about you reward yourself by lying on your back and letting Debbie give you a world class ride?\" They both laughed, but Jack got on the bed alongside Audrey, who was still recovering from her orgasm. Debbie slipped off her harness and crawled up the bed towards him, her breasts swaying with each movement. They momentarily passed around Jack's cock, the brief touch eliciting a shuddering breath from him, which in turn had Debbie smiling.\n\nShe mounted him, her pussy obviously wet from her fun with Audrey, and she glided down until her body body rested snugly against his. She paused, as if wrestling briefly with a question but started by leaning forward so that her nipples grazed Jack's chest, while she slipped up and down his length. Jack had no way of knowing how long Debbie and Audrey had pleasuring each other, but the blonde on top of him seemed to have limitless energy and was now enthusiastically riding his cock. He was mesmerised by the movement of what was now recognised as the best tits in the house, and fondled them with care while teasing the nipples. \n\nDebbie was never exactly quiet, but whether it was the cumulative effect of the night with Audrey, or Jack perfectly matching her thrusts up and down as well as using his gift to enhance her experience, her orgasm and the accompanying noises were particularly loud. Jack pumped his cum up inside her while Debbie's body shook with pleasure and she collapsed onto him. He held her close for a few minutes while she came down from her pleasure, Audrey smiling beside them and gently stroking Debbie's back. \n\nDebbie rolled off onto her back, now utterly spent, a satisfied grin on her face. \"That never gets old. I don't know if it's the sunshine, the heat, the house full of beautiful sexy women and the guy who always makes me feel great about myself, before, during and after sex, but I don't think I've ever felt so horny or better satisfied in my life. Thank you gorgeous.\"\n\nShe kissed Jack, then turned and kissed Audrey, who smiled through all this. The women cuddled each other and settled down to rest for the remainder of the night, so Jack slipped off the bed and out the room. He closed the door and turned only to be startled by a smiling Angela. \n\n\"I saw the whole thing. After you got up I missed you and heard Audrey...well I heard Audrey.\" She giggled at this, nothing more needed to be said about the symphony of pleasure that Audrey had provided earlier.\n\n\"I found that quite arousing, but then I get to watch you and Debbie, and I have to say it was pretty fucking hot. I'm standing in the doorway, nobody sees me and I'm fingering away. My boyfriend is busy fucking a woman in the next bedroom and damn if it isn't sexy.\" \n\nJack wasn't entirely sure what to say. He loved that Angela referred to him as her boyfriend...well he wasn't 16 but it still felt rather nice. But she had just watched him fuck another woman, and told him she was turned on by it.\n\nHis cock knew the answer, swelling in appreciation of the obvious arousal of the gorgeous redhead, but Angela interrupted his thought process with a kiss.\n\n\"I told you there would be no rules, so I'm not in any way jealous. But I want you to make love to me Jack while the sun comes up.\" Audrey took his hand and they walked to her room, stepped in and closed the door. He pulled her close to him and they kissed a tender, slow dance of tongues. Jack scooped her up in his arms which brought a surprised yelp from Audrey, then he carefully laid her down on the bed. \n\nJack slowly stroked her legs, kissing up her calves then her thighs. Audrey's long red hair cascaded onto her shoulders, perfectly framing her face. Jack then set about deliberately and carefully pleasuring her, with the first orgasm taking only a couple of minutes as she'd already been pleasuring herself for some time. The next took much longer, but with Jack relishing his role as inflictor of pleasure, he enjoyed every gasp and moan as his fingers and tongue probed and touched Angela in every way she enjoyed. \n\n\"I need you inside me now.\"\n\nJack obliged, his cock raging hard and easily parting the redheads lips as it glided into her. \n\n\"You're a genius with your tongue, but right now I want the full Jack Spencer experience.\" \n\nThey both laughed, but Jack started to slowly fuck his girlfriend, every touch enhanced by the hours of sex they'd both already had that night, with others and each other. Jack moved into a steady rhythm and Angela punctuated each thrust with a series of tiny gasps or moans of lust, while Jack used his enhanced skills to tease and toy with her lust. It built unto an energetic series of thrusts that culminated with Angela thrusting up onto him through her orgasm while he pulsed into her. Jack was aware he might have roared with pleasure as he came, though it was almost an out of body experience, such was the erotic pleasure of their love making. \n\nHe rolled off her, panting and feeling every muscle in his body spasm with the pleasure of the orgasm he'd just experienced. Angela was almost crying with the intensity of her orgasm, so they held each other until they're recovered enough to speak.\n\n\"That was incredible. So intense, so wonderful, so peaceful...\" Jack struggled to articulate the wave of well being he felt there and then.\n\nAngela put her finger to his lips to shush him as if he were a tiny child.\n\n\"You don't need to say anything. As...remarkable as that was, I'm just happy here in your arms.\"\n\nNothing more needed to be said, though Jack's brain was racing at a million miles an hour, wondering what exactly what his feelings for Angels meant. Was he in love with her? Did he even know what that meant now? He'd promised himself long ago that he could never love another woman after losing Susan, but perhaps he could?\n\nThat train of thought saw him drift off to sleep, however briefly, which was interrupted by Laura gently shaking his arm in what felt like only seconds, but in reality was a couple of hours later.\n\n\"Sorry to wake you Jack, but Debbie and I got messages from the lab. They had some storm damage last night, so we're not to go in until noon. You might want to check your messages too.\" Laura handed him his phone, so Jack unlocked it and sure enough he wouldn't be picked up until midday. \n\nHe smiled at Laura, who leaned in for a hug, and then left the couple alone. He thought that Angela looked peaceful and even more beautiful, if that was indeed possible, than she did when she was awake. She partially woke, and Jack suggested she go back to sleep. However he was now awake and with a nagging sore head, which he thought a shower and some coffee would help fix. So he carefully tugged the covers over his girlfriend and left her room. \n\nBack inside his own bedroom, Jack noted the absence of his bedmates from last night and turned into the bathroom. His shower however was already running, and despite the steam he could make out 2 figures inside busy lathering each other's body. He knocked the door and loudly asked if they had room for one more?\n\nLaura's face appeared, flushed and she grinned then had a shocked look as the sound of her ass being slapped resonated around the bathroom. She grabbed Jack's arm and pulled him inside where Andi was waiting. Whilst the sight of his friends naked was not unusual, in the shower with their skin glistening was another matter, and Jack's cock responded accordingly. Laura and Andi both started to lather soap on his body, and the touch of four hands from the two gorgeous women had him fully erect in no time. \n\n\"My turn.\" announced Laura, which Andi seemed content with. She knelt in front of him, soaping her breasts and rubbing them up and down his cock. Whilst not as large as Debbie's, they were still quite perfect and beautifully formed, and Jack was soon lost in the pleasure she was inflicting on him. After a couple of minutes of this, she stood up, turned around and placed her hands on the shower wall, spreading her legs and presenting her pink pussy to him. Jack needed no second invitation and slotted himself inside, Laura moaning as he filled her.\n\nHe started at a good tempo, and quickly Laura's ass was rippling as Jack thrust himself hard against her. Andi was watching with intense interest, playing with her body as the scene unfolded in front of her. From her gaze, Jack guessed that Laura's breasts were swaying in time to their fucking, and that was added to the long list of things that were turning him on that morning. Before long, he felt his balls tighten in anticipation of him cumming, and he withdrew, spun Laura around, and masturbated until he ejaculated all over her tits. Andi pounced on them, licking them clean and enjoying her early breakfast. \n\nLaura was busy rubbing her clit while Andi assaulted her breasts and came soon after, which greatly pleased them both. They indulged in long sensual kisses while the water cascaded over them, but Jack elected to leave them in peace, stepping out and towelling himself back in his bedroom. He was contemplating breakfast when his phone chirped a notification, with a message from Scarlett asking if he could come to her hotel for their planned chat, as they were experiencing electrical problems at the lab. Jack briefly entertained images of him finally fucking Scarlett, and whilst his cock enjoyed that by continuing to remain stiff, he knew that Natalie would not allow him to go alone. \n\nHe decided to ask what she thought so went to her bedroom, opened the door to see Natalie in a Wonder Woman outfit tied to the bed, while Julia in what he thought was a slutty Catwoman costume consisting of a mask and tiny skirt was busy lapping away at her cunt. Natalie turned a funny shade of pink, but the silk scarf gagging her meant all she could do was moan unintelligible sounds. Julia looked up, saw Jack, saw his stiff cock and motioned him over. He stood behind her, lifted the tiny skirt and placed his cock at her pussy, and was about to slide in when she stopped him.\n\n\"Time to try this thing in my ass, Superman!\" So they were all role playing, and Julia picked up a bottle of lubricant, and started to rub it around her anus and just inside. Then she stroked it onto Jack's cock, the sensation being new for Jack and wonderfully pleasant. Julia replaced herself, and using one hand to pull wide her bum, the other to guide him, she pressed back against his cock. He was terrified to do anything in case he hurt her, but a few moments and a couple of attempts later, his cock slid inside to a cacophony of expletives and moans.\n\nJulia worked him into her inch by inch. Eventually she had 6 or 7 inches inside, and she turned and nodded to Jack, his signal to very carefully start fucking. Whilst he'd been in a broad selection of pussy over the last month, nothing felt anything as tight as this, and his brain was slowly processing a bunch of new sensations. Natalie, having relaxed now at his presence and having seen her fianc\u00e9s ass devour Jack's cock, was enjoying the oral ministrations interspersed with groans as Jack ploughed her ass. \n\nHe was stimulated beyond belief, and the only thing that prevented him from cumming in seconds was that he'd already cum 4 times in the last 8 hours or so, but as he seemed to be able to continue to prove, he had physical talents way beyond any normal man. He felt Julia's body shake as she came on his cock, and that was all he could stand, and so pumped the shapely ass of Catwonan with his jism. He drew out, Julia's ass still in the air, but her body racked with pleasure. Jack went up to Natalie and untied her gag.",
        "She smiled slyly at him. \"Thank you for rescuing me Superman, how can I ever repay you?\" Natalie fluttered her eyelids and looked quite sexy in the black wig. That plus Jack's teenage infatuation with Lynda Carter in the tv series had him briefly visualising how much fun dressing up could be\n\n\"Damn you Superman and your super cock. Foiled again. I'll have my revenge on you Wonder Woman...just as soon as my ass closes up again.\" She winced but smiled, collapsing onto the bed. \n\n\"I need to go clean up, but maybe you can play Wonder Woman for me again?\" The smile told Jack all he needed, and he untied Natalie who stood up and hugged him.\n\n\"She's been wanting to try that for a while Jack, just wasn't sure if you were up for it. Assuming you didn't get a premonition of us role playing, did you want something?\" Jack chuckled and explained what was happening, and Scarlett's request. She smiled, thought for a moment and then told him to go see her, but to sign nothing. He promised absolutely that he would not sign anything, but Jack knew from Natalie's thoughtful look that she figured that inevitably he and Scarlett would fuck, and that she was okay with that.\n\nJack headed back to his room, finally emptied so he jumped in for another quick shower, taking particular care to soap his cock clean after the anal initiation he'd just had. Stroking the cock with soap didn't help keep it down either, but thankfully after having been so busy from the last night until then, it eventually subsided.\n\nJack dressed and went downstairs where he found Audrey busy over the grill making bacon sandwiches and coffee. She was sporting only an apron, and he was transported back to the morning after they'd first had sex with the insatiable Julia, and so cuddled in behind her, which got a moan of appreciation and being told to sit down. \n\nHe soon found himself flanked by Angela, who had surfaced and was wearing her tiny silk kimono, and Debbie who was in a tiny vest and shorts set. He kissed both women a good morning, then Audrey served the breakfast, while they quietly sipped on coffee. Andi and Laura came downstairs holding hands as happy as can be, which brought a sigh and a smile from Debbie, delighted to see her friend, confidant and lover so content. Andi was trying to go out, but Laura insisted she stay and have breakfast with them, trying to squeeze every last moment together that they could. \n\nAndi confirmed the plans to attend the rocket launch, and asked if she could perhaps bring a friend or two along, as a number of them had been talking about going out to see it. Jack was relaxed about it, and told her to just text Laura with details so they could organise transport. He took Laura aside for a second just before Andi left. He was about to say something, but Laura beat him to the punch.\n\n\"Andi and I are going shopping later. Time for some new swimwear, even if we're at a nudist beach, and I want to treat her. If you were about to offer to pay for it or suggest something similar, then don't bother. You've been massively generous to me, but let me treat her.\" \n\nJack gave her a quick hug and conceded, knowing that sometimes he had to let the people in his life do things their own way. He was about to wave at Andi as she left when she came over, and they stepped aside. \n\n\"I'm going to ask Fiona, and maybe another friend to join us if that's okay. Also would it be alright if we crashed here after, reckon it will be a long day in the sun on Saturday.\"\n\n\"Bring whoever you like honey, you know how things work here. Just make sure they know that before spending time with us, like I know you have with Fiona. Do me a favour? Let Laura treat you today, as I think she is going to offer to do. I saw the look on your face when we went to the water park, i don't want you to feel uncomfortable in our company, so let her fix that. But why don't you offer to take her to dinner after?\" Jack surreptitiously pressed a couple of large bills in her hand.\n\nAndi shook her head, but he gently but firmly pressed her hand closed.\n\n\"Andi every day I'm here they pay me for the privilege of that. Please let me share some of that every now and then. Besides, you're taking one of my favourite people out to dinner, I want to make sure you both have a good time.\" \n\nAndi gave up her protests, instead hugged him tightly and whispered thank you. She kissed Laura and then trotted out the door. Jack filled a large mug with coffee and stepped outside onto their pool area. He could see some of the debris from last nights storm in the area beyond the villa, but fortunately no real damage. He heard the pool door slide open and shut, then recognised Angela's perfume followed by her wrapping her arms around him from behind.\n\n\"Nat tells me you're going to see Scarlett today. On your own?\"\n\nJack turned, took a breath and wondered if Angela was worried. \"It's a lab day, but they're dealing with electrical problems. She's asked me to go to her hotel, not her room...\"\n\n\"We all know she's gagging for it Jack. From what I can gather she almost jumped on you when she visited a few days ago, so I fully expect her to seduce you. And I want you to allow her.\"\n\nJack was startled by this, but looking into Angela's eyes he knew she was sincere. \n\n\"I know what it's like to need you and not have you. Believe it or not I think Scarlett's suffering with all this. You could be cruel and deny her, but I don't think you have a cruel bone in your body, so if it happens, and I think it will, satisfy her. It will calm her and let her do her job, but she'll achieve a kind of peace that she needs.\"\n\n\"Are you sure you're okay with this. I can totally go take the meeting and leave.\" She nodded, calmly and with a look in her eye that told Jack this was a considered decision.\n\n\"So last night and this morning, you fucked Andi while I sat on your face, you fucked Debbie while I watched, you made beautiful love to me for goodness knows how long, pumped Laura in the shower before spraying her tits, and finally you fucked Julia in the ass. And I can tell you're getting hard while I replay all this to you. If I was going to be upset about you with other women, it would've happened earlier today. Oh and case you were wondering, girls talk.\"\n\nJack pulled her closer and tenderly kissed Angela. \n\n\"You're a remarkable woman.\" She shrugged her shoulders and mildly blushed.\n\n\"You're an exceptional man. You didn't ask for this, but while you have so many horny women under one roof, there's going to be a lot of sex. Debbie's pretty sure that your pheromones are what's driving all of this, and it's not like you're trying to make that happen. It would be unreasonable and unfair to expect you to not respond to what's around you.\" \n\nJack was stunned, but happy. His girlfriend essentially was giving him carte blanche to have sex with anyone he wanted, and she would not be jealous about it. Damn was he lucky. And horny once again, with his cock responding to Angela's touch on him, as well as being intoxicated with her aroma next to him.\n\n\"Better save some for later. I don't want to hear about performance anxiety Jack.\" She groped his bum, then spun around and went inside, leaving him nursing a very full erection, but sporting a huge smile. \n\nA couple of hours later, Jack's lift arrived, and after a kiss from Angela, and a stern warning on not to sign anything from Natalie he got into the vehicle and left. It'd been some time since he'd done anything alone, and the driver had the partition inside the vehicle fully raised and the air con turned up. Scarlett was taking no chances.\n\nThe car pulled up to a very expensive looking hotel. The Orlando area is littered with budget and mid price accommodations, but the upper end hotels tend to be near to the convention centre. He had instructions to make his way to the penthouse level, and as he stepped out the lift Scarlett greeted him from a doorway just along the corridor. He stepped inside, and she gave him a warm hug, something quite out of character, at least to date. Jack responded, and she pointed to a comfortable seating area.\n\n\"You know I wasn't sure you would come here. Or at least not unaccompanied.\"\n\n\"Natalie and I have had a chat, and I'm well warned to avoid signing anything. So can I ask, have you thought about what we discussed when you visited?\"\n\nScarlett seemed to slightly blush, as if vividly recalling her visit to the home where she'd masturbated and somehow he'd helped give her a gorgeous orgasm without touching her.\n\n\"I've given considerable thought to what we discussed. Bluntly, we're at an impasse right now. I could repeat our first lab session, but as you rightly said, it's not in your nature to be overtly sexual and trigger whatever physical responses happen. So I could continue like this and we would fail. I don't like failing. At anything.\"\n\nThere was a firm edge and no small innuendo in her last statement, but Jack admired her for her courage and determination in a world of business utterly dominated by men.\n\n\"I have no wish to be the cause of that. But I could be more cooperative and support the tests as a partner rather than a subject.\"\n\n\"Jack, I can't promise anything specific right now, but I've discussed in principle a means of compensating you appropriately if we are successful. I'll let the lawyers figure out the details, if your interested. What I want to do is see if we could get an environment where you would be comfortable and relax, but also let us measure what's going on around you.\"\n\nThus was taking an interesting turn, and Jack was a little more than interested, as was his cock.\n\n\"The problem as I see it, is having a subject that would be...appropriately stimulating for you to interact with. Someone that would also fully consent to any physical activity and the relevant monitoring.\"\n\n\"I'm not going to ask anyone I know to consent to that Scarlett. That's more than a favour for a friend.\"\n\n\"Quite so, and to be honest that was our thinking too. We're thinking along the lines of a surrogate, someone who will have consensual sex on a professional basis. We set up an environment that isn't a lab but allows us to take our measurements. Strictly controlled, and discreet. Will you consider it?\"\n\nJack paused and understood that either it was this or go home none the wiser. He paused, while Scarlett scrutinised his face for a clue.\n\n\"I'll think about it. Give me the weekend as it's a lot to mull over. Fortunately I have my principal adviser on hand and she can provide relevant counsel.\" Scarlett's face beamed, obviously worried he might just have said no, and that her project would be doomed.\n\n\"Would you like some lunch Jack? I can have something sent up and we could relax over a glass of wine.\" Jack was seeing a different side to Scarlett, and was reminded of how gorgeous she actually was. Lunch with a beautiful woman and a glass of wine sounded fine.\n\nThey chatted about last nights storm after lunch was ordered, and before they knew it, the door was chapped and a young woman in a maids uniform pushed in a trolley and set up the meals on the dining table, which was beside a window with a panoramic view of the area.\n\nHe noted Scarlett paying particular attention to the beautiful Latino maid, and could even detect a degree of arousal in both women. She asked if they needed anything further and Jack asked if she had a particular brand of salad dressing, which she smiled and offered to return with it.\n\nScarlett watched her shapely ass wiggle it's way out of the room. Jack smiled.\n\n\"You should know that woman has the hots for you.\"\n\n\"Don't be silly Jack.\"\n\n\"Scarlett, my spidey sense tells me these things. I know when women are interested and aroused, and she certainly is. As are you, which I'd foolishly initially thought might be for me, but I think I might be mistaken.\"\n\nScarlett was stunned. She was busted, and though she still would happily drop her panties for Jack on request, she was undoubtedly lusting after the woman who had been in her room repeatedly over the last few days.\n\n\"Damn. It's not enough that you've got an incredible cock, which incidentally is the considered opinion of every female member of my team. And one or two of the men. But you don't even have to guess if someone is interested in you, because you already know.\"\n\n\"True, and I won't give you the 'with great power comes great responsibility' speech. I knew that day in the villa that you were incredibly turned on. I know you are now, but I know I'm not the focus of that.\"\n\nThe doorbell rang, but before Scarlett could move, he sprang to his feet and invited the young woman, whose name tag told him her name in to deliver the item he'd requested. They had a quick conversation in Spanish, which Jack had acquired a conversational level with through his years of travel through work and pleasure. \n\n\"Maria, thank you so much for bringing this for me. So you're finishing your shift just shortly?\" She smiled and nodded.\n\n\"Scarlett and I wondered if you weren't too busy, if you'd like to join us for a glass of wine? She was just telling me what a wonderful job you've been doing looking after her, and I thought that it might be a nice way to thank you.\"\n\nMaria paused, and whilst socialising with guests was frowned upon, it was just one glass of wine, and the hot chica and the handsome hombre seemed to be very nice. \n\n\"That would be very kind of you. I'll be back in a little while.\"\n\nMaria left with Jack smiling and Scarlett's jaw was almost hitting the table. Jack returned to the table. \n\n\"Oh my god...it's a superpower, or hypnosis or something...\" Scarlett had not seen Jack's charm in action before, and suddenly she understood why the women wanted to be with him. Yes the aura he emitted undoubtedly had women aroused in response, but here he was sensing the moment and doing something with it.\n\n\"I could tell your arousal stepped up when Maria walked in, that plus your eyes didn't leave her while she was in the room. But I knew she was interested, even if just subconsciously as her body was reacting accordingly. The rest is up to you. I can leave if you want me to...\"\n\n\"No. Stay, let's just say we have unfinished business regardless of what happens next.\" Scarlett took a long sip of her wine, and noticed that the bottle was only a third full.\n\n\"I've taken the liberty of ordering another bottle. Not trying to get anyone drunk. But it doesn't look like it would last long with three of us.\"\n\nBefore Scarlett could reply, the door chimed and Jack answered it. Maria, carrying another bottle of red, walked through the door. She was wearing a casual pair of shorts and a form fitting tee shirt. Her uniform had effectively hid her curves, but her breasts were now on show, with a helping of cleavage and a hint of nipple stiffness to add into the mix. Jack and Maria kissed in the Latin way, once on either cheek and her smile suddenly lit up the room. \n\nScarlett responded roused from her fugue and also greeted Maria, though her hands lingered just a little on her hips. Jack busied himself pouring the last of the first bottle into their glasses, and he raised his glass and called for a toast to new friends. They chatted, with Maria enquiring about her visit to the city and he understood that the pair had not really conversed before today. Scarlett was suitably vague about being in town for business, with Jack indicating his visit was mostly for pleasure.\n\n\"Se\u00f1or Jack, you must get out and see what Florida has to offer. It's a beautiful part of the world to enjoy.\"\n\n\"Please call me Jack, but you're right. I'm trying to make the most of my visit as it's my first time here. I've been very fortunate and have met some lovely people. You should really be encouraging my friend to get out more, I think she works too hard.\"\n\n\"Oh se\u00f1orita Scarlett, too much work is not good for you. It's important to live a little too.\"\n\nScarlett nodded and sipped at her wine, the scene suddenly stalling unexpectedly. \n\n\"Maria, what exactly does a woman do for fun here in Orlando. A woman of elegance and taste, but who likes to sometimes let her hair down.\"\n\n\"Well of course that depends on the lady. We have so much more than the parks and the shopping, though of course they're great. We have art, we have music and we most certainly have dancing.\" Jack grinned and saw his opening. He went to the entertainment centre in the room, hooked up his phone through Bluetooth and started to play some salsa tunes. It was a guess, but he saw Maria smile and gently move her hips to the beat.\n\n\"I've always wanted to go salsa dancing, it looks so much fun.\" Maria's hips were now swaying and moving to the music, and she put down her glass and walked to Jack, putting his hands in a traditional dance pose, while she started to show him some simple steps, while they laughed and shuffled around, Jack even twirling the Maria a couple of times. \n\nScarlett watched, her head a mixture of being in awe at the easy manner and charm of the man, whom she had no doubt could have the Latino he was holding any time he wanted, but she was also a little jealous as she wanted the beautiful woman for herself. She stepped up and Jack on the shoulder. \n\n\"Mind if I cut in?\" Jack smiled and relinquished his grasp and sat back in a comfortable chair with his glass of wine. Scarlett surprised him as she clearly was no novice to salsa, and she was obviously enjoying the close contact and attention of Maria. They laughed and enjoyed the moment, their bodies grinding against each other. Jack had lit the blue touch paper and now he would enjoy the fireworks.\n\nMaria suddenly was the aggressor, taking Scarlett's head in her hands and kissing her with passion, while the blonde woman's hands roamed all over the Latina's body, squeezing her ass in particular. They paused only briefly to start to remove clothing, Maria reduced to only her panties in seconds while she carefully stripped down Scarlett. Now hands roamed to nipples and squeezed breasts, both caught up in the passion of the moment. They stumbled to the couch opposite Jack, and Maria worked her way down Scarlett's body until she pulled down the undoubtedly expensive lingerie and got access to what she really wanted. \n\nScarlett's legs parted as the head of the younger woman buried itself into her pussy, and in no time at all it was obvious she was no novice either, with the blonde's moans and sighs of pleasure telling the room how much she was into it. Jack was thoroughly enjoying the show, with his cock responding as expected, however whilst he was certain he could walk over there and fuck them both if he wanted, he decided to let them play for as long as they wanted. Delayed pleasure, is after all often the most gratifying.\n\nScarlett came loudly after a few more minutes of Maria's attention, the young woman eagerly lapping her pussy while the blond's body shook with pleasure. They soon embraced, cuddling closely and sharing an intimate moment together. Touches of affection soon turned into passion once more, with Maria straddling Scarlett's face and pulling aside her panties, while the woman below eagerly licked and fingered. Maria let loose with a selection of words expressing her pleasure, only a few of which Jack actually understood but he had no doubt as to their meaning. It was clear that this was not Scarlett's first pussy, and she had the young woman screaming her pleasure over two very good orgasms which had her shaking like a leaf and collapsing on top, her juices gushing all over the blonde's face. \n\nMaria lay down beside Scarlett and they resumed their gentle touches while relaxing. Jack politely coughed to get their attention.\n\n\"I think you need to go dancing more often.\" That brought smiles from them both. \n\n\"I'll see you on Monday Scarlett?\" She nodded, for the moment contented having uncorked some of her frustrations and energy in the last hour, and was pretty sure that Jack was of a mind to get involved in the new tests. All it would take would be to find the right women.",
        "Jack stood, smiled and left the suite as the pair had made to head to the bedroom. He messaged the driver who was waiting as he stepped outside and whisked him back to the villa. \n\nJack stepped out onto the poolside where as expected, the group were relaxing, apart from Debbie and Laura who had gone to work. As was their habit now amongst themselves, they were all naked, glistening in the bright light from their sunscreen. He imagined Audrey would have taken little persuading to relax that way, but it was still fun to see her. He indicated to Natalie he wanted to speak to her so she grabbed a loose fitting top and draped it over herself and stepped inside. He spent a few moments with Angela explaining the meeting, then he joined his lawyer in the lounge.\n\nHe explained the context of the discussion and the ideas that Scarlett had proposed.\n\n\"I'm leaning towards doing it. Not because she's asked me to, or because I feel some obligation. I'd like to understand my...condition, for want of a better word, more fully. There also some form of additional compensation to be explored, though she wasn't specific on that.\"\n\nNatalie paused, contemplating and processing what he had just told her. She had expected this and already been thinking about how best to protect Jack and make sure he was looked after and not taken for a ride by Pharma.\n\n\"Lot to think about Jack, and I'll be honest, I don't do my best legal thinking in a kaftan and a smile.\" They both chuckled at that.\n\n\"I'll spend a little time this afternoon, plus I can see what Scarlett has in mind on the compensation side.\"\n\n\"You're so sexy when you're showing your smart side, you know that?\" Jack's comment had Natalie blushing, but in truth he was only saying what his cock was already telling him. But although both were quite aroused, the return inside of Julia, Audrey and Angela put on hold any ideas that might have been forming. Jack was suddenly aware that although he'd ordered lunch while at the penthouse, he never got around to eating any, and so suggested that they go out for a bite to eat, which got an enthusiastic reception. \n\nThey found a steak house not too far from the villa, and settled down to a nice meal in a quiet booth, though their host cast curious glances at the man with 4 women in tow. Jack shared the story of his morning, though in polite form in case of wagging ears.\n\n\"I'm thoroughly impressed you let them have their fun.\" Julia announced to the group, though perhaps more than one of them were thinking it.\n\n\"It was obvious there was a spark between them, so I just got out the way. Apart from ordering the salad dressing, the wine and doing a bit of salsa dancing, I hardly did a thing.\" Jack barely managed to finish this as his group were giving him good natured abuse and laughing at his tale.\n\n\"Do you do dating assistance as well Jack?\" Audrey mocked him with a raised eyebrow, while he assured her that she needed absolutely no assistance from him. Their lunch ended with Jack on the receiving end of a host of good natured ribbing, and the return to the villa continued in similar style. \n\nIt was late in the afternoon when they returned to the villa, and Jack was feeling pretty worn out after having little sleep the night before. He headed to his room, while the others debated a return to the pool or sneaking in a siesta. Jack was in no doubt he wanted to grab some snooze time, and hopped into bed and dozed off in no time.\n\nHe woke up a good while later, and was aware he was no longer alone in the bed. He was on his side facing the doorway, and felt the warm body pressed back against him, the ass snuggled into his crotch while his arm was lazily draped over the chest of his companion. One of the benefits of Jack's enhanced olfactory senses was he could recognise the unique scent of each woman, and was starting to learn them from his housemates. \n\nHe was very familiar with Angela's by now, and indeed could sense her presence in the bed. But he also was aware of another in the bed with him, and he was quite sure it was the body in front of him. He was sure the woman was naked as he and Angela were and he was also sure that he recognised the round firm ass pressing against his swelling cock and the nipples that were swiftly perking up under his palm.\n\nHe dared to open his eyes, and it was early evening now judging by the warm tone of the sunset peeking through his blinds, but it also allowed him to recognise the gorgeous form of Gemma, the beautiful young black cabin crew from Virgin that he met at the now legendary pool party. Met, as in spent several hours fucking her repeatedly. The memory of that got him hard very quickly, but she was still sleeping, and he was briefly panicking that he had Angela beside him that had never met the woman he was pressed up against.\n\n\"Don't panic Jack...Gemma and I were introduced when she turned up with Felicity. Lovely girls, I can see why you spent so much time with them. Also we got... acquainted earlier on, so we've seen each other naked. She has a wicked tongue you know, very skilful.\"\n\nJack's cock virtually exploded as he listed to Angela describe a ridiculously hot encounter that he was very disappointed to have missed. \n\n\"The girls were knackered after their flight...and their welcome.\" Angela giggled, and Jack could relax again. \n\n\"Jack, are you going to do something with that or are you just leaving it wedged between my cheeks?\" Gemma sleepily joined the conversation, and he responded by nuzzling in to her neck and playing more forcefully with her breasts. \n\n\"Gemma flew 4,000 miles to be here Jack, the leat you can do is show her your appreciation.\" That was it. He rolled Gemma onto her back, and they kissed with a ferocity that said more than just 'nice to see you'. Angela moved in close, kissed Jack, then lazily snogged Gemma as Jack moved down between her willingly parting thighs, and started to lick her pussy with enthusiasm. He felt Gemma's back arch as either he or Angela did something particularly arousing, and quick peek up showed the redhead devouring one nipple while her hand twisted and tweaked the other. \n\nJack licked outside, he kissed her thighs, he darted his tongue inside and all of it combined with Angela's ministrations meant that the Virgin cabin crew girl was cumming first, and pretty loudly, with her juice splashing onto Jack's face which he greedily wooed and licked. Angela deftly moved her body so she was sitting astride Gemma, and placed her pussy to allow her to receive the already stated talented tongue. Jack shifted up and placed his cock, which was pulsing at the scene in front of him, at her lips and glided inside. The orgasm she had just had, or the earlier fun ensured that she was moist and receptive and he had no difficulty in sliding in to the hilt, their bodies meshed against each other.\n\nHe heard a muffled moan of delight as he did this, which cause Angela's head to throw back with passion that she practically growled at. Jack started to fuck Gemma, carefully and deliberately at first, but the sight of the two woman in front of him meant he would not last long before he came. The thrusting got quicker and more robust, and all three moved in time to his thrusts, the muffled sounds getting louder and Angela raising the roof with her commentary of how she was going to cum. It was the redhead first, the orgasm causing a splash of her juices onto Gemma's face, while she gamely tried to lick it all up through the redheads orgasm. Angela moved off to let Jack get proper access, so he lifted Gemma's legs and placed his hands on her wonderful breasts, tweaking and fondling them as his thrusts became quicker and his own noises louder. \n\nGemma came, her body thrusting skywards into Jack as she let loose a howl of pleasure. Her legs were shaking as the orgasm ripped through her, and Jack withdrew and sat over her stomach. Angela grabbed his cock and pointing at the black woman's breasts, wanked him quickly and fiercely until he pulsed out 5 large globs of cum, the white fluid a stark contrast on her skin. Gemma beamed back at him, then Angela kissed her with some passion and started to lick up the cum from her body. Gemma scooped some up in her fingers and licked them provocatively as she and Angela cleaned her body. \n\nThe three of them lay in their backs, hands lazily stroking each other's bodies as they recovered from the vigorous session. Jack's cock was still showing at half mast, and he was contemplating what he might do when the door to the bedroom opened, and in walked a very naked Felicity who was completely unfazed by the scene in front of her. \n\n\"You finished? Debbie wants to order pizza and said to ask if you wanted any.\" \n\nShe walked to the bed and cuddled Gemma, then Angela and then finally Jack. She shouted out that pizza was indeed wanted, then sat astride him and slid his now erect cock inside. Jack wondered what the response of the other women would be, but they smiled, and took turns at touching and pleasuring Felicity then Jack, stroking, kissing and sucking as required. \n\n\"I've been dying to see what all the fuss is about, but fuck me you were right Gem, it's the best cock I've ever had inside me.\"\n\nJack smiled while busying himself playing with Felicity's nipples when they weren't being attacked by Angela or Gemma, so it was no surprise after a few minutes that she came, loudly and her pussy rippling on Jack's cock which duly exploded inside her. She looked as though she might almost pass out, but the other women took hold of her and gently laid her down. \n\nJack went to get a towel, and returned to see Felicity gently snoring in Gemma's arms, while Angela passed him to go to the bathroom. He pulled the covers over the women, then pulled on a tee shirt and shorts as he figured whilst everyone else was very comfortable naked, the pizza delivery person might not be. He'd just reached downstairs when the doorbell rang. He answered, and a young man opened the thermal bag to remove a pile of pizza boxes, whilst straining his neck to see past Jack. He took the boxes and turned to place them but they were taken out of his hands by Debbie and Audrey, both very naked and comfortable while their delivery boy practically had a stroke! Jack gave him a sizeable tip and could not avoid seeing the prominent tent in the young man's shorts. \n\nHe closed the door expecting there to be roars of laughter, but the reality was that people wandered around wearing as little or as much as they liked in this house, and he was okay with that. He grabbed a box and wandered back up to his room, and was pounced upon by a now revived Felicity, who had apparently a ravenous appetite for food as well. He sat on the bed with the women, and they enjoyed the food and the company. He suggested that his new guests join the crowd downstairs, and so they all went back to the dining and lounge area. Angela pulled on her kimono, while Gemma had brought shorts and a vest top. Felicity, as before, couldn't quite remember where she'd left her clothes, so Angela sorted her out with a set of pjs, which she looked adorable in. \n\nThere was a genuine warmth to the group, and the conversation flowed with the women from Virgin fitting right in. Gemma pulled him aside.\n\n\"We were pulled on to a flight at the last minute, so had no chance to let you know much in advance. I messaged you but didn't get an answer until we had landed. Only it wasn't you, it was Angela telling us to come here.\" The redhead just smiled at him. \n\n\"Well I'd heard some of the stories about the pool party, and I was looking forward to meeting these ladies. Plus as soon as I'd mentioned it, the girls insisted that they come and stay.\"\n\n\"That's lovely. So how did you go from 'Welcome to Florida' to naked in my bed?\" Angela and Gemma smiled.\n\n\"You telling me you've never fantasised about having sex with a woman in uniform?\" Angela slightly blushed as she said this.\n\n\"Yeah that happens. People want to strip away the professional veneer and see what's underneath. Angela showed us to our room and we started to get changed out of our uniforms. Only she asked if she could do it for us and I have a policy of not refusing gorgeous redheads.\" That caused a giggle around the table and for Angela to turn even more pink.\n\nThe conversation switched to more mundane matters and the trip to the coast the following day. Both flight attendants were keen to come with them, and Jack was starting to wonder how many cars they might need to take, when the front door opened and in came Laura and Andi, with Fiona her lifeguard friend in tow. Introductions were made and they settled into the lounge watching some tv, but mostly just enjoying the company of each other.\n\nLaura had invited Andi & Fiona to stay over so they could get an early start on their journey the following day, so it was pretty much a full house that evening. At this point they had 11 bodies in their travelling party, so Jack phoned the car rental company and they were able to provide a large van which could carry them all in one go, so he arranged to have them drop that off the following morning. He announced the travel arrangements to the group, and suggested an early night.\n\nJack and Angela were amongst the first to retire that evening, but the noise in the house soon died down, as one by one they prepared for an epic Saturday."
    ],
    "authorname": "Eloquentman",
    "tags": [
        "exhibitionism",
        "voyeurism",
        "threesome",
        "anal",
        "costume play",
        "strap-on",
        "lesbian"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/modified-ch-14"
}