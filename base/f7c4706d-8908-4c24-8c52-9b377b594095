{
    "title": "Louise Ch. 05",
    "pages": [
        "Nathan was the first to move catching Louise before she hit the floor. Patrick was next and then Kevyn all of them seeming to forget about Barb for the moment. Nathan sat in a chair with an unconscious Louise in his lap and began to talk to her.\n\n\"Come on sweetheart, wake up.,\" he said as Kevyn wiped her face with a napkin that she had moistened with cold water. Nathan took the napkin and continued trying to rouse Louise while Kevyn went to find Jonesy to get a cloth.\n\n\"What's wrong with her?\" Barb asked drawing attention herself and trying to ignore the massive headache that had suddenly appeared right behind her eyes.\n\nPatrick stared at her with flashing blue eyes but said nothing; she was for Nathan to deal with. Nathan stopped talking to Louise and gave Barb a look that made her blood run cold. She had the feeling that if it were not for the fact that he was holding Louise in his lap that he would have been her face.\n\n\"Is she alright?\" she asked.\n\n\"Shut up!\" Kevyn said in response to the question as she applied a bag of ice wrapped in a towel to Louise's forehead.\n\n\"Lou honey wake up.\" Nathan said again as he readjusted her in his lap.\n\n\"I have a right....\"\n\n\"Shut the hell up!\" Nathan snarled at her.\n\nBarb's headache seemed to increase and the room began to spin. She lay her head down on the table and wondered if anyone would notice that she wasn't doing so well. To her disgust, no one seemed to notice and continued fawning over Louise.\n\nTen minutes later, Louise was awake and embarrassed not only because she fainted but also because she was sitting in Nathan's lap.\n\n\"Oh my god! I'm sorry, I'm alright now, you can let me up\" she said as she tried to get out of Nathan's lap.\n\nAll of them with the exception of Barb noticed how pale she looked and how shaky and thin her voice sounded when she spoke.\n\n\"Are you thirsty?\" Nathan asked as he held her in place.\n\n\"Yes... very.\" Louise replied.\n\nNathan handed her his glass of iced tea and asked Kevyn to get several large glasses of soda. By the time Kevyn got back, Louise had downed her glass of iced tea as well as Nathan's and most of a pitcher of water.\n\n\"Here, drink this.\" Nathan said as he put a glass of cola to her lips. \n\nThree glasses of soda later, Louise looked much better and her voice was stronger.\n\n\"What happened?\" she asked as she climbed out of Nathan's lap.\n\n\"You fainted.\" Nathan replied as he helped her from his lap to her chair.\n\nBarb moved without being told to even though her head pounded and she felt nauseated. Louise had asked a good question, what in the hell had happened? She was talking to Nathan and then wham! Louise was yelling at her and the next thing she knew, Nathan had Louise in his lap.\n\n\"I think its time to call this evening over.\" Patrick said dryly as she looked at Barb.\n\n\"Why? She said that she's alright.\" Barb said.\n\n\"Are you ready to go?\" Patrick asked Kevyn completely ignoring Barb.\n\n\"Yes, let's go, I think that Lou needs her bed. Nathan, we'll meet you at the house after we drop Barb off.\" Kevyn said.\n\n\"Come on! It's only nine and she's fine! She only fainted. Ask her if she wants to go.\" Barb said her headache still there but she still wasn't ready for the night to end.\n\n\"What about it sweetheart?\" Nathan asked, \"Would you like to stay?\n\n\"No, I'm really tired.\" Louise replied, \"I'm sorry Barb but I need to go home\"\n\n\"Are you serious?\" Barb asked.\n\n\"So we'll meet you at home then.\" Kevyn said.\n\n\"That sounds like a plan.\" Nathan said not replying to Barb.\n\n\"Hey! I'm still here!\" Barb said loud enough that everyone looked at her.\n\n\"I see that and I wish that you weren't.\" Nathan said softly as he stood up and held out his hand to Louise, \"come on sweetheart let's go.\"\n\nBarb watched as Louise took Nathan's hand and allowed herself to be led away. Patrick left to pay the bill and to get the car leaving Kevyn and Barb alone for a few minutes.\n\n\"So is she sick or something?\" Barb asked.\n\n\"No.\"\n\n\"Then why did she faint like that?\"\n\n\"What in the hell is wrong with you?\" Kevyn asked.\n\n\"What are you talking about?\" Barb asked, \"I was just having fun.\"\n\n\"At Lou's expense.\" Kevyn snapped. \"And don't sit there and tell me that you were just having fun! I've seen you at work remember? I'm going to say this once, stay away from Nathan Sinclaire.\"\n\nBarb was momentarily taken aback but quickly recovered.\n\n\"Tell me something,\" she said. \"Do you really think that someone like him is seriously interested in someone like her? I mean she's my sister and I love her but come on Kev, really?\"\n\nIt was Kevyn's turn to be shocked. She had always known that Barb was shallow and self-absorbed but to say what she just said was unbelievable.\n\n\"I have to admit that you caught me off guard with your feelings about Louise.\" Kevyn said. \"But in answer to your question, my reply is yes. It is very possible that someone like Nathan Sinclaire could be interested in Louise. Because she's special, always has been, and contrary to what you believe, she's beautiful and she's strong. I made the mistake of thinking that she needed protection but as Nathan pointed out to me, she didn't. I'm also realizing just how petty and miserable you must be in order to do what you did tonight. Enjoy the rest of your stay and if I were you, I'd start begging for my job back and I'd call Gene to ask if you can stay at the house with him.\"\n\n\"What? You can't be serious!\"\n\n\"I am and you know what? I should have left your ass at the airport and bought you a one way ticket back home but I didn't because you are my sister for better or worse and I love you but I don't have to like you.\"\n\n\"All of this because I played footsie with a single man?\"\n\n\"Who you knew was and is interested in our sister!\" Kevyn snapped. \"This isn't fucking grade school or high school! This is Lou's life that we're talking about and I won't have you or anyone else screwing with it and that includes me.\"\n\nKevyn's eyes never left Barb's face as she heard Patrick speak to her.\n\n\"I'm out front with the car.\"\n\nShe stood up and walked away not caring if Barb was following her or not. Jonesy nodded and smiled at her as she passed him and she realized that he wasn't human but he wasn't vampire either. She heard him speak to Barb but didn't hear the reply that she imagined would have been a sarcastic one if she answered at all.\n\nPatrick was leaning against the car waiting for them to come out. Kevyn walked into his arms and laid her head on his chest. She was worried about Louise and Nathan had nothing to do with it. Barb came out a minute later, stopped at a trashcan and threw something in it. \n\nNeither Patrick nor Kevyn spoke as she opened the car door and got in. The drive back to the hotel was quiet, when they arrived; Patrick got out of the car and helped Barb out without speaking to her. When she tried to say something, he silenced her with a look and walked away.\n\n**********\n\nLouise laid her head against the headrest of the car and closed her eyes. She had never fainted before in her life. Her face burned when she remembered coming to sitting in Nathan's lap and in a public place no less.\n\n\"I'm sorry that I ruined the evening.\" she said.\n\n\"You didn't do anything wrong.\" Nathan assured her, \"You fainted, it could have happened to anyone.\"\n\n\"But I've never fainted before! I felt fine and then....\"\n\n\"Louise, what happened before you fainted?\" Nathan asked.\n\n\"I don't remember.\" Louise replied.\n\n\"It's alright.\" Nathan said as he reached over and held her hand. \"Close your eyes and rest, we'll talk later.\"\n\nSuddenly, she was so tired and the idea of sleep sounded good. When she woke up, Nathan was parking the car in front of the house. She waited until Nathan came to help her out of the car, she was feeling a little woozy and all she wanted to do was lie down.\n\nNathan scooped her up in his arms shushing her when she started to object. He carried her up to her suite, laid her on the bed and took off her shoes.\n\nLouise stared at him not sure of what to think. The only males that had ever been in her room were her brothers or her dad. She watched him disappear into the bathroom and heard the tub running. Surely, he didn't think that she was going to take a bath with him in the room with her!\n\n\"I ran a bath for you.\" Nathan said when he came out of the bathroom. \"Take your time and if you feel up to it, we'll talk. I'll be downstairs.\"\n\nHe bent down, kissed her temple, and left the room.\n\nLouise lay on the bed for another few minutes before getting up and heading to the bathroom undressing once she got there. She got into the tub amazed that it was at the perfect temperature and that the right amount of oil had been put in. She slid down, let the hot water cover her shoulders and turned on the jets. She closed her eyes and replayed the evening in her head trying to pinpoint what happened that she fainted. She remembered getting irate... no angry when Barb kept after Nathan about taking her on a tour of the city. She blushed when she recalled the tone that she had used with her, it was just so unlike her and there was what happened after the bathroom... seeing Barb trying to snuggle up against Nathan was simply too much.\n\nShe remembered thinking but not saying \"Get away from him.\" but she must have said it if the way they all looked at her was anything to go by and then she woke up in Nathan's lap and he was very angry but not at her. \n\nShe turned off the jets, climbed out of the tub and lotioned her skin before putting on clean underclothes and a sweat suit; she was not going to talk to Nathan in her pajamas. She opened her bedroom door and sniffed the air. Someone was cooking.\n\nWhile he waited for Louise, Nathan whipped eggs for an omelet and lined the ingredients on the counter. He revamped his plan a bit; he wanted to know all about her before he told her the unpleasant truth about his family.\n\nAs soon as he heard the tub shut off, he waited ten minutes and began to prepare the omelets. He was just adding the bacon, cooked onions and cheese when she walked in.\n\n\"It smells good but how can you be hungry again?\" she asked.\n\n\"All of us eat a lot.\" Nathan replied, \"I took the liberty of slicing some of the bread you made, I hope that you don't mind it's delicious.\"\n\n\"Nope, it's what it's there for... how do you guys not get fat?\"\n\nNathan shrugged and changed the subject.\n\n\"Tell me about your life.\"\n\n***********\n\nBarb stomped around the room furious at how the evening had turned out. Not only did Kevyn have a rich man eating out of her hand, so did Louise and she didn't understand that any more than she understood why Kevyn was so pissed off. However, Kevyn wasn't the only one, Patrick and Nathan were just as angry at her and she hadn't done anything wrong. \n\nHer headache had gone down to a dull throb that would be gone by morning. She never had headaches although her mother, Juliette and Louise were sometimes plagued with them. It was the suddenness and the intensity of the headache and the words that Louise shouted at her that alarmed her \"Get away from him!\" flashed across Barb's mind. She had never heard Louise speak with such force, it surprised but hadn't frightened her, after all, it was only Louise.\n\nWhat did frighten her was the look in Nathan's eyes when Louise fainted, he was holding her responsible but from her point of view, it wasn't her fault. Lou needed to learn that there were women in the world that could snatch Nathan from her without batting an eye and the fact that she was her sister wouldn't stop her from doing exactly that.\n\nShe really did love shy, sweet Louise but she loved money more. Barb undressed, hung up her clothes and ran the bathtub already making the decision not to take Kevyn's advice. She wasn't going back to Pittsburgh with its cold winters. There was nothing left for her there other than family and she still had three weeks to land either Nathan Sinclaire or another man who would be capable of supporting her in the lifestyle in which she craved and felt that she deserved.\n\nWhen the tub was ready, Barb poured in a capful of baby oil and got in. She thought about her next move and knew that it would be in her best interest to leave Kevyn and Louise alone for a day or two, which meant that she couldn't work on Nathan but there was no help for it.\n\nShe stayed in the tub until the water was luke warm and oiled her skin that was a few shades lighter than Kevyn's taking time to examine it for flaws. She mentally compared her looks with Louise and her other sisters and came to the same conclusion that she always did, she-Barb was the best looking of all of the sisters everyone said so. What she conveniently omitted that following that statement came the words \"stuck up bitch\".\n\nAs she got ready to settle in for the night, she remembered the bread in the trunk of Patrick's car and cursed. She could almost taste the slice of bread warmed in the microwave and wished that she had some way to get it. Then she remembered Hans who was supposed to be at her disposal at night. He could go get the bread for her while she called down to the kitchen for a container of real butter and not the cheap stuff that they had grown up with. She picked up the phone and called Hans.\n\n\"Yes Madame?\" he asked answering on the first ring.\n\n\"I need you to do something for me.\" Barb said.\n\n\"I am at your disposal.\"\n\n\"I want you to go to Mr. Sinclaire's house and get me a loaf of bread.\"\n\nThere was a second of surprised silence.\n\n\"Excuse me?\" Hans asked not sure if he had heard her correctly.\n\n\"You heard me!\" Barb snapped feeling that it was well within her rights to talk to him however she wished.\n\n\"Yes I heard you.\" Hans confirmed, \"But we have bread here, what kind would you like?\"\n\n\"I want the bread that my sister made and it's at Patrick's house now go get it!\" Barb screamed into the phone.\n\nThere was a moment of silence and then a soft but angry growl. Barb pulled the phone away from her ear and looked at it for a few seconds. When she put it back to her ear, Hans was talking.\n\n\"I understand what you want but I cannot comply.\"\n\n\"Why not? You just said that you were at my disposal!\" Barb snapped.\n\n\"That is true for anything except for that.\" Hans replied rapidly losing patience.\n\n\"I demand that you do it now and as a matter of fact, take me over there. I want to see where he lives.\"\n\nHans rolled his eyes, took a deep breath and continued speaking to Barb in what he hoped was a patient tone.\n\n\"I can't do that, Mr. Sinclaire is very private and does not like uninvited guests just appearing on his doorstep.\"\n\n\"Uninvited... I am not an uninvited guest! He's going to marry my sister!\"\n\n\"Has he invited you to his home?\" Hans asked.\n\n\"No....\"\n\n\"Then you would be an uninvited guest. Is there anything else that I can help you with?\" he asked.\n\n\"NO!\" Barb screamed and slammed the phone into the cradle.\n\nHans looked at the calendar and crossed off another day as he murmured, \"two days down, and nineteen to go.\" After he did that, he called everyone in the hotel and alerted him or her not to take Barb to Patrick's house for any reason unless otherwise instructed.\n\n\"And for god's sake don't even hint about where they live.\" he added as an after thought.\n\n********\n\nKevyn and Patrick saw Nathan's car parked in the front of the house and slipped in through the back. Kevyn had the feeling that they were probably in the kitchen and didn't want to disturb them. The other thing was she was so angry that there was no way that she could have kept it from Louise. \n\nShe still couldn't get over the way Barb had acted and the blatant show of disrespect that she showed not just Louise but all of them. Part of her wanted to go back to the hotel and beat some sense into Barb. However, a part of her felt sorry for her as well. \n\n\"Are you alright?\" Patrick asked.\n\n\"I will be.\" Kevyn replied. \"What was that thing that Louise did and was that why she fainted?\"\n\nPatrick told Kevyn about what happened at the movie theater, which only made her angry all over again.\n\n\"It's one thing to tell me that that I can't interfere with her and Nathan; I understand and agree that whatever happens between them should remain between them but this you should have told me about! It has absolutely nothing to do with their relationship! Why didn't you say something?\"\n\n\"I didn't say anything because I wasn't sure until tonight. I thought that maybe it was a fluke of some kind and now I know that it isn't. You're right, I should have said something and I'm sorry.\"\n\nKevyn took a deep breath and forced herself to calm down.\n\n\"Tell me what you're thinking and I mean everything.\" she said as she sat down on the bed.\n\nShe noticed the glitter in Patrick's eyes as he moved toward her.\n\n\"Stop right there.\" she said firmly, \"You don't get off that easy so talk.\"\n\nPatrick grinned at her, sat next to her on the bed and explained his theory.\n\n\"We know that Louise is an empath, a strong one at that but I think that there's more to it. I think that she can make people feel whatever she's thinking and some of us can hear her. The men at the theater and what happened tonight supports that theory.\" Patrick said. \"Let's start with the movie. There was no way that Louise could physically move those men so in a panic she did something to make the man move. What it was I don't know but it was painful. At first, I thought that Nathan had done something but the man was already in pain when we go there. You were on the phone and didn't realize that there was a problem not long before we did so that left Louise who by the way seemed oblivious to the fact that she had done anything to the man.\n\nNow let's look at tonight, Barb kept insisting that Nathan take her for a tour even though he repeatedly and in any number of ways told her no. Barb openly flirted with Nathan and it doesn't take a rocket scientist to know what she wanted. Then we have Louise who is feeling the pull toward Nathan but doesn't understand it....\"\n\n\"She felt threatened.\" Kevyn said not objecting as Patrick stroked a breast through her shirt.\n\n\"Exactly but to be more exact, she thought that Nathan was being threatened but not in a physical sense.\" Patrick replied. \"She tried to warn Barb away by snapping at her but then felt contrite, goes to the bathroom comes back and see her sister all but in the lap of her mate. She did the same thing she did at the movie theater; she reacted and pushed back. We all heard her including Barb who thinks that Louise actually spoke the words.\"\n\nKevyn was beginning to understand.\n\n\"She fainted because she expended a lot of psychic energy, that's why she needed the sugar from the soda.\"\n\n\"Louise is always using psychic energy even if she doesn't know it which explains why she doesn't see what she does as anything unusual; it's a natural extension of who she is as a person.\" Patrick said, \"she is so used to it that it doesn't bother her but to do what she did the in the past two days used more energy than she has ever used before. I think that she was always able to do what she did but has never been in a situation where she or someone she cared about was threatened.\"\n\n\"What does this mean for her and will Barb have any long term effects from what happened?\" Kevyn asked.\n\n\"Now that we're sure of what's happening, Nathan will teach her how to manage it. The older she gets the stronger the gift will become but her endurance will grow along with it. As far as Barb goes, she probably has one hell of a headache. That was quite a psychic slap upside the head that Lou gave her. The question that I have is why Barb was able to hear her. Is your family psychically sensitive? Patrick asked, as his hand made its way under Kevyn's shirt and skimmed across the bare skin of her stomach.",
        "\"I don't know... mom sometimes knew things and she talked about her grandmother, our great- grandmother who was supposed to have been able to tell the future.\" Kevyn replied sighing as a hand covered her bra-covered breast. \"Why do you ask?\"\n\n\"I'm just curious.\" Patrick replied. \"You were gifted when I found you and so was Louise. It wouldn't surprise me if other members of your family are gifted as well which is why Barb could hear Louise.\"\n\n\"So what do we do?\" Kevyn asked as she moved closer to Patrick.\n\n\"Nothing for the time being. Nathan will look after Lou and I'll look after you.\" Patrick said as he lifted Kevyn's shirt, bent down and kissed her belly making her giggle.\n\n\"Fine but no more keeping things from me, are we agreed?\"\n\n\"I agree and sweetheart, I am sorry.\" Patrick replied kissing her belly again and then laying his head on her breast. \n\nSeconds later, they were naked and a nipple was in his mouth. He gently chewed on it careful not to cause pain as his hand trailed down her stomach not stopping until it rested on her mound. He loved the fact that she was already wet for him, slipped a finger between her lips, and pressed against her clit knowing that she was going to come.\n\nThe first orgasm of the day was always quick for the both of them and then they took their times until one of them, usually Kevyn, fell asleep from exhaustion. The other part of their lovemaking was Patrick taking a time out to tell thank her for accepting him and his family as flawed as they were and always ending with how much he loved her. At first, Kevyn tried to stop him but soon gave up when she realized how important the ritual as she called it was to him.\n\nAs Patrick rubbed and sucked her to orgasm, she stroked his cock with long, slow but firm strokes listening to his moans to tell her how close he was. When he took a sharp intake of breath, she began to stroke harder and faster. At the very last minute, Patrick would move away, climb on top of her and be inside of her just before he came.\n\nAs usual, Kevyn fell asleep first leaving Patrick awake to think about what they were going to do about Barb. He knew that as angry as Kevyn and Louise were with her they wouldn't send her back to Pittsburgh knowing that she had no job but they didn't want her staying here permanently any more than he did. \n\nShe had only been in town for two days and was already wearing on everyone's nerves. He had already gotten several calls from the hotel full of complaints about her treatment of the staff. The time for a talk was drawing near but in the meantime, he snuggled tight against Kevyn and fell asleep.\n\n********\n\nLouise watched as Nathan finished cooking the biggest omelet that she had ever seen. She knew without being told that it would take several minutes for it to cook simply because of its size. She hadn't responded to his request that she tell him about her life and as far as she was concerned, there was really nothing to say about it.\n\nNathan sensing her reticence put her to work.\n\n\"Why don't you start slicing some more bread?\" he asked.\n\n\"What kind?\" Louise asked grateful for something to do.\n\n\"How about some of each? The omelet should be ready in a few more minutes.\"\n\n\"So you're the youngest.\" Nathan said when she started cutting the bread.\n\n\"I wasn't until my brother died.\" \n\n\"If I may ask, how did he die?\" \n\n\"The complications of diabetes, he was on the list but you know how that goes.\"\n\n\"I'm sorry.\" Nathan said meaning it.\n\n\"It's alright, I still miss him though.\"\n\n\"You've had a difficult life, who cared for you?\" Nathan asked watching her out of the corner of his eye.\n\n\"What do you mean?\" she asked, \"I took care of myself and mom with Kevyn's help.\"\n\n\"I understand but who helped you? Kevyn was here in California.\"\n\nLouise hesitated and changed the subject, she didn't want to talk about them or Pittsburgh, and it was bad enough that Barb was here. Nathan noticed and let it drop; she didn't trust him enough yet. The cooking helped to relax her but it wasn't quite enough. She needed to see what he was feeling for her and he was just going to have to have faith that she wouldn't go running off.\n\n\"The omelets ready.\" he said as he slid it onto a large serving platter. \"Can you grab the forks?\"\n\nLouise took two forks out of the drawer, grabbed the plate of sliced bread and brought it to the counter where Nathan was waiting with the food. He pulled a stool out for her and sat only after she was sitting and put the plate between them and took a fork.\n\n\"Eat up.\" he said digging in.\n\nLouise ate less than a quarter of the huge omelet and watched Nathan finish it off as well as the last slice of bread. She got up to clean up the dirty dishes and he stopped her.\n\n\"Let me, it's about time you allow someone to care for you.\" As he said it, he let his shields drop just a little and he touched her hand in a manner that wasn't in any way platonic.\n\nLouise's mouth went dry and her heart rate picked up. That annoying but pleasant throbbing was back and she squirmed on the stool. She watched Nathan as he cleaned up the kitchen and wanted to know why he was being so nice to her.\n\n\"Can I ask you a question?\"\n\nNathan stopped working and gave her his complete attention.\n\n\"You can ask or tell me anything you want, I will never lie to you nor will I ridicule you .\" he replied.\n\n\"Why are you being so nice to me? You hardly know me and I'm hardly your type.\"\n\nWhether she was aware of it or not, she just told Nathan that on some level she had been thinking about him in terms other than friendship, her mental outburst at dinner confirmed it.\n\n\"And what is my type?\" he asked lightly interested in her answer.\n\n\"I don't know... that woman at the restaurant and....\"\n\nShe couldn't bring herself to say Barb's name. Even thinking about how she had acted at dinner made her angry.\n\nNathan noticed but didn't address it but he would address her concept of what she thought his type was. He put the last dish in the dishwasher and sat beside her at the counter.\n\n\"Aside from the fact that I had a brief relationship with that woman, why do you think that she's my type?\"\n\nLouise blushed, wishing that she hadn't asked the question and tried to back out of it.\n\n\"Never mind, what I should have said is thank you.\"\n\nNathan wasn't about to let it go.\n\n\"You're welcome but you asked a question that I would like to answer if you would let me.\"\n\n\"Okay... but you don't have to.\" she replied.\n\n\"I want to.\" Nathan replied taking her hand in his and stroking the knuckles slowly. Then he had a thought, \"Louise, how honest do you want me to be?\"\n\n\"Honest.\" she replied her heart pounding.\n\n\"Are you sure?\" Nathan asked still stroking her knuckles.\n\nLouise nodded her head not trusting herself to speak.\n\n\"I'm not just being nice to you and I think that you know that. You're right in that the woman at the restaurant is beautiful and so are your sisters for that matter but you are more beautiful than all of them put together. There is a gentleness and kindness about you that I have rarely seen. Your concern about that elderly woman in Pittsburgh bears that out. The fact that you made bread and made a kind that you knew your sister Barb likes is another case in point.\n\nIn spite of how she has treated you, you are still kind to her. As I told you before, I don't think that anyone other than Kevyn and then my uncle realized what a jewel you are. You also have a strength about you that you don't realize is there and it shows itself when needed, like tonight with Barb.\"\n\nLouise listened to how Nathan saw her and didn't see herself in the same light, she wasn't beautiful... she was just her.\n\n\"I like being with you and watching the excitement and energy that you show when you cook. Louise, I like you. Women like your sister Barb are only looking for someone to care for them and they don't want to give anything in return. You aren't like that and neither is Kevyn who by the way loves you very much, talk to her about anything that you wish, me included.\"\n\nNathan slowly brought her hand up to his lips and kissed the back of it before turning it over to kiss the palm while watching her reaction. He paused when he saw that she was holding her breath.\n\n\"Breathe sweetheart.\" He said and then repeated the command when she didn't immediately comply. He was about to repeat the command when she let out the breath that she had been holding with a whoosh. Realizing that she was overwhelmed Nathan abandoned the idea of kissing her that night. \"You're tired, go to bed and I'll call you later.\" \n\nLouise nodded, she was tired and the vibes that she was getting from Nathan were unsettling. She needed some time alone to sort through her thoughts; she needed to talk to someone with a lot more experience with men than she had. She needed her sister.\n\nNathan walked her to her room still holding her hand; he wanted to kiss her so badly that he almost did. Instead, he gave her hand a gentle squeeze, wished her a good rest and walked away already missing her.\n\n**********\n\nAfter hanging up, Barb said a string of curses that would have done her Uncle Wesley proud. Not once, since she thought about the bread did she think about Louise and how she was but what she did think about was Nathan Sinclaire. She had already forgotten the anger in his eyes when he looked he looked at her or the angry tone in his voice when he spoke to her and she had forgotten the strong way in which Louise had commanded her away from him.\n\nShe wasn't taking any of it seriously including Kevyn's threat to send her back to Pittsburgh. She convinced herself by later in the day, everyone would have cooled off. Feeling better, she turned on the television, took a snack out of the fridge and lay on the bed with no intentions of falling asleep.\n\nShe woke up two hours later, her face wet with tears. She had dreamt the dream that she hadn't dreamt in months and wondered what had precipitated it. She went to the bathroom, washed her face without looking in the mirror and went back to bed.\n\nShe began to think about their childhood. She still rememembered each first day of school with clarity, the being teased because she was wearing the hand me downs from Kevyn and on occasion her brothers. She remembered paging through the catalogues and marking the outfits that she wanted for the new school year and becoming angry when she was told that she couldn't have any of them.\n\nThe reasons for the denial didn't matter but what did was that she would face another year of teasing. It had never occurred to her that all of them were going through the same thing and that even Kevyn was wearing the hand me downs that were given to her by their cousins or that their parents did without so that they could have a roof over their heads and food to eat.\n\nShe didn't remember their father working two jobs and coming home from work so exhausted that he practically dropped but he always spent time with them even if it was an hour. Victor Yancy believed in family and caring for them to the best of his ability. Welfare or any kind of public assistance was out of the question and in Barb's estimation would have been worse than having to wear hand me downs.\n\nShe spent her entire school career trying to fit in with a group that she had no hope of fitting in with simply because of the way that she dressed although it was no fault of her own. By the time she was in sixth grade, she had made up her mind that she would have everything that she ever wanted no matter what she had to do to get it.\n\nBarb turned on her side and tried to block out the memories that wouldn't stop coming. The most painful one of all was the senior prom. She could still feel the excitement of being asked by Norman Boothe one of the second string football players. She didn't care that he was second string or that had never played in a game for more than a few minutes, what she did care about was that he was good looking and that his family was wealthy. That he asked her only because he was looking for what he thought was an easy lay for after the prom didn't matter, she saw the prom as a way of getting where she needed to be. In with the right group.\n\nShe remembered the day that Norman asked her to the prom, she rushed home and ran into the house,\n\n\"Mama! Where are you?\" she yelled.\n\nShe found her mother in the back yard hanging up the uniforms that Victor wore for his security guard job.\n\n\"What are you so excited about?\" Wanda asked when Barb hugged her.\n\n\"I got asked to the prom! When can we go looking for a dress? It's in two months.\"\n\nWanda blinked back tears, as much as she wanted to be able to buy a prom dress for Barb, she couldn't. The money simply wasn't there and there were other children to consider. She didn't tell Barb that right away, she had an idea that could give Barb what she wanted but she had to talk to Victor first. Before she could say anything, Barb had run off eager to share the good news.\n\nBy dinnertime, everyone in the neighborhood knew that she had been asked to the prom and it was the topic of excited conversation at the dinner table. She was chattering so much that she missed the look that passed between her parents. \n\n\"Barbie doll...\" Victor said softly interrupting her.\n\nBarb stopped mid sentence. He only called her that when he was going to tell her that she couldn't have something that she wanted.\n\n\"Daddy please! Don't say no... I won't ask for another thing! I promise!\"\n\n\"Barbie....\"\n\n\"Don't call me that!\" she screamed, \"Don't call me that! You don't care about me! You don't care that everyone laughs at us because we live in this dump and because we pass our clothes down.\"\n\n\"That's enough.\" Victor said softly trying to control his own anger.\n\nEven though she saw her mother's tears, Barb kept going ignoring her father's warning.\n\n\"It's not enough! I hate this house! I hate this city and .... And I hate you!\"\n\nVictor stood up and looked Barb in the face his own anger evident.\n\n\"Do you think that I don't want to be able to go to the store and buy any of you what you want and need? Do you think that I want people laughing at you? I don't! Do you think that I feel good about not buying your mother anything that she wants? Do you? Do you think for one god damned minute that I like spending so much time away from home? I don't but you know why I do it? I do it because I love all of you and to me loving you is more important than any material thing that I can give you. I'm sorry that I can't buy you a brand new dress and send you to that prom, but I can't, the money isn't there.\"\n\nVictor sat down, his chest heaving and wondered where the selfish streak that was in his fourth child had come from.\n\nBarb ran from the table and up to the room that she shared with Juliet and Louise slamming the door behind her. Once she was inside, hot tears ran down her face as she once again resolved that she was going to have a life where she would want for nothing. \n\nThe next week was a tense one in the Yancy household. All of them stayed out of Barb's way and the word prom was taboo. Victor and Barb didn't speak even though Wanda tried to make the peace between them. She even went so far as to try to talk to Barb again but no matter what she said, she couldn't get Barb to see reason or at least make an attempt to understand that they weren't trying to deny her what she wanted but that it was just the way it was. Eventually, she gave up; Barb either couldn't or wouldn't understand that all of them had to make sacrifices. For the entire week, the remaining children made a point of not arguing or complaining about being teased at school.\n\nJust past the one week mark of the blow up, Victor Yancy came home with a huge box. He took off work early so that he could give the gift to Barb in the hopes that she would be happy. He showed the gift to Wanda who hugged him and told him what a good husband and father he was. \n\nFinally, Barb came home and was surprised to see her father sitting on the couch. She had no choice but to speak to him.\n\n\"Hi daddy.\"\n\n\"Hiya baby girl.\" Victor said softly, \"can you sit a minute?\"\n\nReluctantly, Barb sat down in a chair across from her father noticing for the first time the large box on the sofa next to him. Her heart began to pound; he had bought her a dress for the prom! He had found a way to make it happen.\n\n\"Daddy thank you!\" she gushed as she moved to sit next to him on the couch.\n\n\"Barb, I want you to understand something.\" Victor Yancy said. \"I don't appreciate the way that you acted last week. You thought of no one but yourself and that isn't what we taught you. I want you to know how this dress came to be. Each of your siblings down to the youngest contributed to the purchase of this dress. When you go to the prom, remember the sacrifices that were made so that you could go.\"\n\nShe wasn't listening; she only wanted to see the dress in the box. Victor handed her the box and called everyone who was home to the living room. He thought it only fair that they see the dress along with her.\n\nBarb waited until they were all sitting and with shaking hands opened the box. The living room was silent in anticipation of Barb's shrieks of excitement. Victor leaned forward on the couch; Wanda's hand was on his shoulder squeezing it. He could feel her excitement as well as the excitement of the other kids as Barb opened the box.\n\nShe closed her eyes, took the lid of the box off and then slowly opened them. She blinked and looked at the dress again. Her first thought was that it was a joke. The dress in the box was older than she was, the box was new, the manager of the store that her father guarded gave it to him. It was a pale yellow that would look good against her skin and all she would need were shoes to go with it. She looked at the large flowers that were attached to the sides of the dress and inwardly groaned.\n\nEveryone waited for her reaction so she gave them all a false smile and thanked them profusely but her mother wasn't fooled.\n\n\"I called your grandmother, you know how she is with a sewing machine, it won't look like the same dress.\"\n\nBarb wasn't listening; all she knew was that she couldn't possibly go to the prom wearing this dress no matter what her grandmother could do with it.\n\nIn the end, she did go to the prom wearing the dress and her mother was right, it didn't look like the same dress. In fact, it was even more beautiful than many of the dresses there. Her grandmother solved the shoe problem by taking the huge flowers from the dress and using the fabric to cover a pair of existing shoes. The outfit was stunning and she got a little of what she wanted, she was looked at with envy. That night, even the whispered comments about the dress being a hand me down didn't matter as much... she was in the spot light.\n\nAfter the prom, Norman took her out for a snack and then to the after prom party where in short order; she lost her virginity. In her mind, she thought that she and Norm were a couple but found out the hard way that they weren't; she was nothing more than an easy, virgin fuck. Even though she knew that this was his intent in asking her, she was still hurt by it, she really thought that he would change his mind and decide that he really did like her. His rejection just reinforced the feeling that money would make all the difference in the world.\n\nWhat really got her was as the older ones left home the supply of hand me downs diminished meaning that by the time Louise and the youngest one were in school, they got new clothes. That they weren't designer clothes didn't matter, that they still wore some hand me downs didn't matter. What mattered is that they got new clothes. The thing was that as irrational as it was, Barb wasn't angry with her brother but at Louise. In her mind if her parents could afford clothes for Louise, then they could have afforded clothes for her. ",
        "It was that argument that caused the final rift between her and her parents who still didn't understand where Barb's attitude had come from. As far as they were concerned, they loved all of them equally and what was they supposed to do? Let Louise and her brother go naked? They asked Barb that question and she did not answer them but continued to tell them that she had been abused.\n\n\"Abused?\" Wanda asked horrified, \"We didn't punish any of you without making sure that you understood why.\"\n\n\"There's more than one way to abuse someone.\" Barb replied ignoring the dark, angry looks that her father was giving her.\n\n\"Just how did we abuse you?\" he asked.\n\n\"I spent everyday at school being picked on because of my clothes and where we lived! I had no friends and it's because of the way I looked so you may not have hit me but I was emotionally abused.\"\n\nVictor and Wanda looked at her shocked and speechless. They looked at each other and then back at Barb but it was Wanda who spoke.\n\n\"Are you saying that this is about some clothes?\"\n\nBarb didn't answer but gave her a defiant look.\n\n\"Is this about some damned clothes?\" Wanda asked again, her face dark with rarely seen anger, \"You're jealous because we bought the two babies a few new clothes? What were we supposed to do? Let them go to school naked? And are you forgetting that three of you were gone? That meant that there weren't as many mouths to feed...\"\n\n\"Wanda, stop.\" Victor said, \"We don't owe her any explanations. She has it in her mind that we abused her then let her think that we did but we know different.\"\n\nVictor looked at Barb with tears in his eyes and said nothing for several long minutes.\n\n\"I'm sorry that you feel as you do.\" he said softly. \"But I think that you know that we love you as much as we love the others but you have got to be one of the most self centered people I have ever known and I don't understand where it came from. I'm going to say this but once, I hope that you get everything that you want out of life but be careful of what you wish for. Sometimes things look good when in reality it's poison. You want money so that you can flaunt and brag about it to your friends and buy all kinds of beautiful things and I guess in and of itself that isn't wrong but Barbie doll, you're already infected with greed and you don't even have money yet. I hope that it turns out well for you.\"\n\nThat was the last real conversation that she had with her parents. After that, they talked but it was superficial and not once did Barb apologize for her behavior. She felt no need to, she had been the one wronged and the one what was entitled to the apology.\n\nAfter that, she set her sights on Clay Robinson who could have cared less about her, he was still pining over Kevyn who had moved to California and could have cared less about him. Over the years, she was in many meaningless relationships jumping right in if the man looked and acted as if he had money, dropping them if they didn't. It didn't take her long to become more observant about the men who were interested in her, she became adept in picking out the phonies, and Nathan Sinclaire was no phony. He like his uncle exuded money and the one thing that came in second place.... Sex.\n\nShe replayed the evening in her mind trying to pinpoint her mistake and realized that the whole trip had been a big mistake and that she had come on much, much too strong. She shouldn't have shown up early and unexpectedly as she had and she should have known that Kevyn wouldn't have changed her plans to accommodate her early arrival. She also had to do some major damage control. She could see that Nathan Sinclaire had some interest in Louise and that Louise must have felt something for him if the way that she snapped at and then screamed at her meant anything.\n\nBarb didn't think for one second that Nathan was or could be serious about Louise; she was such a mouse. Barb washed her face again and began to plan how she was going to repair the damage that she had already done and decided to begin with an apology and she would start with Louise.\n\n**********\n\nLouise changed into her pajamas, turned the television on and got into bed. Her mind was in turmoil about the evening in general but more specifically about Nathan Sinclaire. He had just made it clear that he was interested in her for more than friendship although she didn't understand why. The question was what did she want? She stopped herself realizing that she was thinking about him in the same way and more than likely had been the entire time but was only just admitting it to herself.\n\nUp until she came to California and met Nathan she had never thought that she would be the position that she now found herself, she really needed to talk to Kevyn. As she closed her eyes to sleep, her prepaid cell phone rang. She knew that it wouldn't be Nathan, he called either the room phone or the new cell phone number meaning that it had to be one of her siblings.\n\nReluctantly she answered the phone.\n\n\"Hey Barb.... No was getting ready to fall asleep. Yes... yes... I know, it's here at Patrick and Kevyn's house...we'll bring it the next time we see you... no I don't know when that will be... dinner? I don't know; I'll talk to Kevyn... I don't know...I'll call you later.\"\n\nLouise hung up and realized that she made a mistake, Barb was under the impression that she and Kevyn were staying at Kevyn's apartment. She heard the disbelief, surprise and jealousy in her voice in her response. She also realized something else, Barb was lying when she apologized, she didn't mean it. She was planning to take Nathan away from her. The dinner invitation was damage control and an attempt to make Nathan, Kevyn and Patrick believe that she was honestly sorry for her behavior when the only thing that she was sorry about was that she hadn't succeeded. \n\nWith thoughts of Barb and then Nathan in her head Louise fell asleep unaware that she had begun to accept Nathan for what he was... hers. Her last waking thought was that she had to talk to Kevyn, she would understand.\n\nThe opportunity to talk with Kevyn didn't come until later in the afternoon. Kevyn was in the kitchen eating a slice of bread when Louise found her.\n\n\"You're going to get as big as a house if you aren't careful.\" Louise teased.\n\n\"Not going to happen.\" Kevyn replied as she took another bite of bread and then asked, \"Are you ok?\"\n\n\"I'm fine... Kev do you have time to talk?\"\n\n\"Sure I do, what's up besides that sister of ours?\"\n\nLouise began with the conversation with Nathan.\n\n\"He told me that I should talk to you... Kev, this is so out of my element I don't know what to do.\"\n\n\"Lou, do you like him?\"\n\n\"Yes.\"\n\n\"Does he make you feel good? And do you feel safe with him?\"\n\n\"Yes but Kev I'm not like you, Barb and Juliet... I'm just me.\"\n\n\"Lou if you ask me, you're the best of us and I can understand why Nathan likes you. It's because of the reason that you just stated, you're you.\"\n\n\"He asked me who took care of me.\"\n\nKevyn looked at her, weighing her words carefully.\n\n\"The people of this family care deeply for each other as I'm sure you know. It can be a bit overwhelming at first but you get used to it. I know that you've been taking care of yourself and well... try to relax and let someone else care for you; god knows that you deserve it. But I think that there's something else that has you worried.\"\n\n\"Barb called.\"\n\n\"She called me too, something about an apology dinner. What do you think?\" Kevyn asked.\n\n\"I think that she's lying... I think that she wants to see if she can take Nathan away from me.\"\n\nKevyn hid her surprise at the statement. She agreed with Louise's assessment but she was surprised to hear the claim in Louise's voice.\n\n\"Do you think that we should go?\"\n\n\"I don't want to.\" Louise replied, \"But she's going to be here for another couple of weeks and we can't avoid her so I guess that we should go. What do you think?\"\n\n\"As much as I hate to admit it, I think that you're right.\" Kevyn replied. \"And there is the chance that she means it.\"\n\nLouise looked at Kevyn, started to say that while it was a nice thought, that wasn't the case and then she realized that Kevyn knew it too.\n\n\"Lou, can I give a little advice?\"\n\n\"Sure.\"\n\n\"I don't know why Barb is the way she is but don't let her rattle you, its part of what she does. But you need to be secure in what you know and trust your instincts.\" Kevyn said.\n\n\"I know and you're right.\" Louise conceded, \"But this is so new to me, the Nathan part I mean.\"\n\n\"But you like it right?\" Kevyn asked.\n\n\"Yeah, I do.\" Louise admitted after a brief hesitation.\n\n\"Good!\" Kevyn exclaimed relieved, \"now relax, enjoy, and remember that people will do only what you allow them to.\"\n\n\"Kev? Do you like him?\"\n\nThe question caught Kevyn off guard but she recovered quickly.\n\n\"Yes, I like him. I like the way that he looks after you but even if I didn't like him, he would have my respect and gratitude for the reasons that I just stated.\"\n\n\"Thank you.\" Louise said and then handed Kevyn a notebook. \"There's a hot wing recipe in one of these notebooks but I don't remember which one, want to help me look for it?\"\n\nKevyn took the notebook with a smile; her baby sister was definitely feeling the pull toward Nathan. Once again, she was glad that she hadn't said anything; Nathan had the right idea in letting her slowly come to her own conclusions.\n\n\"Are you planning a meal?\" Kevyn asked.\n\n\"I thought that we could cook a meal together.\" Louise replied.\n\nKevyn was thrilled. While she liked to cook, it wasn't a passion for her as it was for Louise and the fact that she was planning a meal for Nathan was definitely a step in the right direction.\n\n\"Sounds good.\" Kevyn replied as she started looking though the notebook whose pages were filled front to back.\n\n***********\n\nNathan spent a restless day determined not to call Louise. He wanted her to have time to think about what she knew to be true and to talk to Kevyn if she needed to. To keep himself busy, he worked on the plans for their house, called the contractor and left a message when the vampire didn't answer. He still needed to go see the vampire who had sold them inferior supplies, he would do that in the evening, and it would give him something to do.\n\nHis cell phone rang a few minutes later, without looking; he knew that it was Louise.\n\n\"Hello sweetheart.\" Nathan said softly.\n\n\"How did you know it was me?\" Louise asked.\n\n\"I just did, how are you?\"\n\n\"I'm ok... listen; Barb called and wants to take everyone out for an apology dinner.\"\n\n\"Do you believe her?\"\n\n\"No but I think that we should go anyway.\" Louise replied.\n\n\"What does Kevyn say?\"\n\n\"She agrees, what do you think?\"\n\n\"I think that I don't trust her but I also agree that we should go, what time shall I pick you up?\"\n\n\"I don't know yet, I'll call you back.\" Louise replied.\n\nAfter they hung up, Nathan sat back in his chair. Barb was up to no good, he could feel it and came to a decision, he would shield her from Louise. As much as he disliked her, he couldn't allow anything to happen to her. If he didn't and something happened, Louise would never forgive herself.\n\nIt was dark enough that he could go pay that vampire a visit but early enough that he would be back in plenty of time to get ready for dinner and get over to Patrick's to pick Louise up. It was going to be an interesting evening.\n\n*********\n\nBarb called the credit card company to verify her balance. Satisfied with the answer, she called Hans and asked him for the name of a nice restaurant.\n\n\"The Chateau is close and the food is very good, would you like me call and make reservations? If I do it they will give you a nice discount.\"\n\nShe wanted to say no but she was a realist, she had to save money if she was going to live here and she needed to start thinking about a job until she landed Nathan or someone else with money.\n\n\"Sure, thanks.\" she replied hating the fact that she was going to take advantage of a discount.\n\n\"What time shall I give them?\" Hans asked.\n\n\"Seven... Hans, are you free tonight?\" Barb asked.\n\n\"Yes Madame, I am, did you need something?\"\n\nBarb had an idea. What better way to make them think that she was sincere than to show up with a date? She thought wishing that she hadn't thrown away the card that had Jonesy's number on it. Between him and Hans, Jonesy was the better choice but it couldn't be helped.\n\n\"Madame? Did you need something?\" Hans asked again.\n\n\"Yes, I need an escort for dinner and you're it.\"\n\nHans didn't immediately reply. He was tired of this woman telling him what to do and talking to people as if they were no more than animals meant to serve her. It wasn't in his nature to be subservient and he was sick off it and her. It was time to end this.\n\n\"Excuse me,\" he said politely, \"but I don't like to be told what to do as you have been doing since your arrival. Nor do I care for how you have been speaking to and treating my staff. From this moment on, I expect my staff and myself to be treated with the utmost respect and not as if we were your own personal servants. Now, if you wish me to escort you to dinner I would suggest that you take back the command and ask me.... Nicely. And one more thing, I expect to hear from Nadine that you apologized to her for the way that you spoke to her this morning.\"\n\n\"Now you wait a min....\"\n\n\"No, you wait.\" Hans interrupted. \"Ever since you arrived you've acted as though we and the world owe you something. Let me inform you in case no one else has that other than the respect that one being has for another, we don't owe you a damned thing. In the three days that you have been here there hasn't been a single thank you even when something that wasn't part of your stay here was done for you. Nadine went to the store for you on her own time. She left home early in order to get you the bath oil that you wanted just to be nice. You didn't give her a price range, you only told her to buy it which is what she did. It was your fault that you didn't set the parameters for the purchase, not hers. The name-calling was completely uncalled for and when she comes back to work, I expect you to seek her out and apologize.\n\nFrom now on, no one will do those little extras for you. If we don't have what you want or need here, you will either have to do without or go get it yourself. Going to dinner with you as your escort qualifies as one of those extras so I must decline.\"\n\nBarb was flabbergasted, no one had ever talked to her the way that a lowly hotel clerk had just done.\n\n\"You are employed by Patrick Sinclaire, are you not?\" she snapped, \"And you told me yourself that you are here to take care of any needs that I may have and this is a need, be here by six-thirty!\"\n\n\"Have a pleasant evening.\" Hans said and hung up.\n\nBarb stared at the phone... another first; no one had ever hung up on her before.\n\n*******\n\nHans sat back and looked at the phone, the woman was a money hungry bitch but he admired her drive. Even so, he wasn't about to give her what she wanted simply because she demanded it. As he saw it, that was part of her problem, everyone just gave in to her because it was the easiest thing to do and she was never confronted or held accountable for her actions whether they be word or deed. Until that happened, there would be no change.\n\nA few seconds later, Hans swore.\n\n\"Oh fuck...\"\n\n**********\n\nLouise showered and then looked through her closet for something appropriate to wear to a nice restaurant. The only thing close to suitable was the outfit that she had worn to her mother's funeral, black slacks and a peach colored top. Her throat tightened at the memory of her mother and the funeral, she still missed her and expected to for a long time. She closed her eyes and whispered a prayer for both of her parents, Kevyn and her new family and finally for herself.\n\nShe took the outfit down, looked at it wishing that she had something else to wear. It was too late to think about going to the nearest 'Wal-Mart' but decided as soon as it could be arranged that she was going shopping. She finished dressing, looked at herself and for once liked what she saw. Her eyes had a sparkle to them that they had never had before and the lines of worry that had always been a part of her facial features was gone. Her skin, which had never really suffered from blemishes, seemed even clearer and she felt better.\n\nShe covered her lips, smiled and then moved her hand. She had a nice smile and wondered why she kept it hidden. She picked the habit up from her mother who like her always covered her mouth when she laughed or smiled. It was a habit that she decided to try and break. As she finished getting ready for dinner, she realized that she felt good.\n\n********\n\nBarb called Ollie and asked him to take her to the restaurant and of desperation told him to come dressed for dinner.\n\n\"I'm sorry ma'am but this is my night off.\" he replied.\n\n\"Hans is busy; he said that you could take me.\" Barb lied.\n\n\"That's funny, I just spoke to him.\" Ollie replied, \"He said that we weren't to do any more extras for you but if I were you, I'd order a taxi so you won't be late. Goodnight ma'am.\"\n\n\"Wait!\" Barb said but the line was already dead.\n\nNow angry, she dialed Kevyn's number but wasn't surprised when she didn't answer. She was going to call Louise but changed her mind; it would have been pointless. She looked at the clock, took Ollie's advice, and ordered a cab for six-thirty pick up. She made herself calm down and began to get ready for dinner talking to herself as she did it.\n\n\"Remember, low key, sincere apology, slow and steady wins the race, all I have to do is to get him to look at me just once without him realizing it and the battle is over.\"\n\nThe self-chat made her feel better and she began to hum as she took a shower and then used the bath oil that she had yelled at Nadine for buying. She grimaced, but not at the memory of how she had treated the woman who had been kind enough to make a stop on the way to work to get the oil but at the forty dollar price tag. One thing was for certain, not a single drop of it was going to be wasted and it wouldn't be for everyday use.\n\nShe took out a pair of dark dress slacks and a dove gray shirt to wear for the evening and glanced at the little black dress wistfully. Of all of the sisters, she was the only one slender enough to wear something as form fitting as the dress and she knew that if she wore it, Nathan nor any other man wouldn't be able to keep their eyes off of her and that included Patrick.\n\n\"Stick to the plan.\" she muttered as she closed the closet door.\n\nThe room phone rang at six-twenty five.\n\n\"Your cab is waiting.\" Hans said and then hung up.\n\nFive minutes later, Barb was walking past the front desk but didn't look at Hans but he was watching her, his eyes glittering with anger but not just at her but also at the fates. How could they have given him such a bitch? He wondered as she walked out of the door. He had anticipated and hoped for an easy mating with a woman who could and would appreciate the concept of working for what one wanted and what does he get? A money hungry bitch that was planning to steal the mate of her own sister.\n\nEven if they had all been human, he would have felt the same way and if they were human, he could and would have walked away from her. As it stood now, the only way that he could get out of mating with her was if she rejected him, which was likely, as he couldn't support her in the lifestyle that she craved and felt that she was entitled to. He wasn't poor but was what would be considered middle class. He had a modest home that he took care of himself and had no servants. He spent very little money and when he did, it was for something that he needed as opposed to something that he wanted. It was a lifestyle that Barbara Yancy Simpson would abhor and would never come to accept.",
        "Hans watched the cab pull away and shook his head. It was well within his rights to stop her from going but a right he chose not to exercise. He wasn't worried that she would succeed in her plans, he knew the Sinclaires well. Nathan's eyes would only be for his mate. Barb could dance naked on the table and neither Nathan Sinclaire nor any other mated male would look at her twice.\n\nHe shook his head, cursed and went back to his paperwork.\n\n*******\n\nBarb was at the restaurant fifteen minutes early and was already having her first drink when Kevyn and Patrick arrived a few minutes later. She watched with what she hoped was a neutral expression as Patrick held Kevyn's chair out for her and kissed her temple before she sat down. \n\n\"Where's Louise?\" Barb asked when they were both sitting.\n\n\"She'll be here soon, Nathan is bringing her.\" Kevyn replied.\n\n\"Then we'll wait so that I can make my apologies once.\" Barb replied, \"Would you like a drink while we wait?\"\n\nPatrick ordered a glass of red wine and Kevyn her usual daiquiri. She wanted to ask Barb what she was really up to but this was Louise's fight and she would step in only if necessary. \n\nLouise and Nathan arrived at seven on the nose. Barb noticed once again that although Louise looked the same, she was different. She had a sparkle about her that was even more evident than the previous evening and her confidence had grown as well but Barb didn't let that deter her. She also noticed the protective way that Nathan was touching Louise and like Patrick, he held her chair out for her, kissing her temple before she sat down.\n\nThe curiosity was killing her; she wanted to know what the kiss on the temple meant but the apology had to come first. After Patrick and Louise ordered their drinks, Barb began what she hoped sounded like a sincere apology.\n\n\"First, I would like to apologize for showing up like I did; it was both rude and wrong. My second apology is for last evening. Again, I was rude and overbearing. I hope that tonight we can start over.\"\n\nNo one said anything for several minutes. All of them, especially Louise tasted the lie. She realized that they were waiting for her to respond first.\n\n\"Ummm, it's okay.\" she said when she really wanted to call her on the lie but this wasn't the time nor the place for a confrontation.\n\n\"Thanks Lou, I appreciate it and Kevyn? I really am sorry.\"\n\nKevyn followed Louise's lead and accepted the insincere apology. Nathan and Ethan looked at each other and nodded letting the other know that they saw through the lie. The dinner was progressing fairly well until the women decided that they needed the rest room. \n\nKevyn was still in a stall when Louise and Barb were at the sink washing their hands. Barb looked behind her, turned the water on to cover her voice and asked Louise the question that had been nagging at her since she met Nathan.\n\n\"How did you do it?\"\n\n\"How did I do what?\" Louise asked confused.\n\n\"How did someone like you get someone like that?\"\n\nKevyn heard the question and stayed in the stall, she wanted to hear Louise's response.\n\n\"I don't ....\"\n\n\"Come on Lou.\" Barb said insistently, \"seriously, until him no man other than Lombardi has looked at you twice, so what is it? What did you do?\"\n\nLouise started to retreat, remembered what Kevyn said about not letting people push her around and replied honestly.\n\n\"Maybe he knows that I'm not after his money.\"\n\nBarb laughed, \"Sure you are! You just hide it behind that sweet, shy personality of yours. He won't see it until its too late.\"\n\nLouise was horrified that her sister would think that she was like that, like her.\n\n\"I'm not like you.\" she said softly, \"I don't use people and lie to them like you lied to us tonight and I don't expect to be handed things just because I think that I'm entitled to them, but there's more to this than that.\" Louise said softly, \"you don't like me. You love me because I'm your sister but you don't like me and I don't know what I did or didn't do to earn that dislike.\"\n\nBarb couldn't say anything. While she had seen the changes in Louise, she thought them superficial and if she had seen through her lies, then so had the others. She also knew that the accusations that she leveled at Louise were false. Louise would never even think of doing something like being with a man for his money but what had surprised her was that Louise knew that she disliked her.\n\nDeciding that the conversation had gone on long enough, Kevyn made a show of flushing the toilet and rearranging her clothes. She was proud of Louise and the way in which she had handled Barb and reminded herself to tell her later. \n\n\"Sweetheart?\" she heard Patrick say telepathically, \"is everything alright?\"\n\n\"We're fine.\" Kevyn replied, \"We'll be out soon.\" she replied as she washed her hands.\n\nShe pretended not to notice the odd look on Barbara's face and asked Louise if she was ready to go. She didn't say anything to Barb until she realized that she was still standing by the sink.\n\n\"Barb? You coming?\"\n\n\"What? Yeah, I'm coming.\" she replied.\n\nBoth men stood up when they came out of the bathroom and held the chairs for Kevyn and Louise. Patrick held the chair out for Barb and sat only when she was sitting.\n\n\"Thanks.\" she said absently as she watched Louise. The conversation had done nothing to shake her but instead seemed to make her stronger. Her gaze went from Louise to Nathan taking in how he treated Louise like a queen seeing to her every comfort. It was then that she realized that Nathan Sinclaire was a lost cause but it didn't stop her from making one more try.\n\n\"So Nathan, has Louise told you about her boss Mr. Lombardi?\"\n\n\"No she hasn't but I'm sure that she will.\" Nathan replied already seeing what she was doing.\n\n\"Well, apparently, they had a little thing at work...\"\n\n\"Are you referring to the mutual care of an elderly woman?\" Nathan asked as he put an arm around Louise. \"I am very aware of it as well as the fact that he had ulterior motives for helping her. If I were in his place, I would have done the same thing.\"\n\n\"But did she tell you that he was married?\" Barb pressed.\n\n\"What of it?\" Nathan asked, \"Your sister is a beautiful woman and married men are not immune to beautiful women. But I believe that you are trying to tell me something.\" he added.\n\n\"I.... nothing.\" Barb said and took a drink of water. It was clear to her that Nathan Sinclaire was in love with Louise and that she was falling in love with him too if she wasn't already in love with him. The thought that it wasn't fair crossed her mind but there was nothing that could be done about it.\n\nDinner finished quietly with no more attempts by Barb to displace Louise but Louise wasn't through yet. After the bill had been paid, and the men went to get the cars, Louise pulled Barb aside leaving Kevyn to watch for the cars.\n\n\"I want the three of us, you, Kevyn and me to talk.\"\n\n\"Why?\" Barb snapped, \"so you can gloat over the fact that both of you have rich men?\"\n\nLouise sighed, \"No Barb, because you're our sister and we want to understand why you're so unhappy.\"\n\n\"An intervention?\" Barb asked sharply, \"Is Dr. Phil going to be there too?\"\n\n\"It's not like that.\" Louise protested, \"I want to know what the problem is between us.\"\n\n\"Goodnight Lou,\" Barb said, \"have a nice life.\" she added as she walked away.\n\nLouise watched Barb walk away trying to figure out what it was that she did that had Barb so angry. Nathan pulled up in the car, got out and walked over to her. He glared at the cab that was just pulling away with Barb in it; she had said or done something to upset Louise.\n\nHe didn't speak as he for the first time since they met hugged her tightly against him. When she tried to pull back, he wouldn't let her.\n\n\"Let me care for you.\" he whispered against the top of her head.\n\nLouise slowly relaxed into his embrace and slowly wrapped her arms around his waist oblivious to the fact that they were in a public place and that people were giving them curious glances as they passed by. The only regret that he had was that he had to let her go because he had to take her home. \n\nHe kissed the top of her head and gently but reluctantly released her. Even though the night was warm, Louise shivered once she had been released.\n\n\"Let's get you home.\" Patrick said and led her to the car.\n\n********\n\nHans watched Barb stomp by and knew that she had failed in her attempts to take her sister's mate. To say that she was angry was an understatement. He watched her stab the elevator button several times before the doors finally opened. As she turned to face forward, he saw a myriad of emotions on her face, anger, hatred, disappointment and sadness with the predominate emotion being anger. He cursed the fates again, sighed and went back to his paperwork; he would call and check on her later. \n\n*******\n\nBarb rushed into her room, slammed the door shut not caring whether she was disturbing anyone or not. She hadn't been this angry since the day she thought that she couldn't go to the prom. She threw her purse in a corner and stalked into the bathroom to look at her face in the mirror.\n\nShe just didn't understand what it was that Nathan saw in Louise.\n\n********* On the drive home, Kevyn told Patrick about the conversation between Louise and Barb.\n\n\"You should have heard her!\" Kevyn exclaimed. \"She didn't lose her cool like she did last night and she handled Barb better than I ever could have.\"\n\n\"Nathan was shielding Barb.\" Patrick said after a moment. \"He didn't want Louise to accidentally hurt her but that doesn't negate what Louise did. But I would like to make a suggestion.\"\n\n\"I'm listening.\" Kevyn said already having an idea of what he was going to say.\n\n\"The three of you need to talk. There's an issue or maybe more than one issue between you. That doesn't excuse her behavior but it might explain some things and maybe you might salvage your relationships.\"\n\n\"Since when are you pro Barb?\" Kevyn asked.\n\n\"I'm not.\" Patrick replied. \"But I know better than anyone that people can change and so do you. If you didn't you wouldn't be here. Talk to her, give her a shot and if she turns you away that's her choice but you can say that you tried.\n\nKevyn didn't reply, she was thinking about Patrick's suggestion and realized that he was right. \n\n\"So where do you propose we do this? If we do it at the house she'll thing that we're rubbing her face in the fact that we have what she thinks she wants and needs.\" Kevyn said.\n\n\"What about your apartment?\" Patrick suggested. \"The rent is paid up for a few months, we can stock it and if things take awhile, you can sleep there\"\n\n\"Yeah right, like you're going to let me stay away for more than a day.\" Kevyn said half teasing him.\n\n\"I didn't say that I would like it but I would live... sweetheart you need to do this.\"\n\n\"I know...it's just that I'm so tired of dealing with my family,\" Kevyn replied, \" Was it too much to ask for just a few weeks of peace? I'll talk to Lou about it later but right now all I want is to go home and crawl into bed...\"\n\n\"Not to sleep I hope.\" Patrick interrupted.\n\n*******\n\nLouise didn't say much during the drive back to Patrick's house, what was there to say? Her sister loved but hated her. Soon after they left the restaurant, she realized that what Barb felt for her was more than dislike, it was hate and she had hated her for years. The only explanation that she could come up with for not realizing it earlier was that she had been so wrapped up in caring for their mother and trying to stay emotionally afloat herself that she didn't notice and now that the dust had settled she was seeing what had always been there.\n\nNathan reached over and took her hand in his but didn't speak leaving her to her thoughts. He wondered what was said in the bathroom although he could guess. What he was relieved to sense was that whatever Barb said to her, it hadn't made her doubt herself or him.\n\nAnother thing was clear; they had to start spending more time alone together. The twins wedding was less than three weeks away and he hadn't even begun to tell her all that she needed to know but Barb was now in the way and had to be dealt with first. \n\nHe also came to another decision; he wasn't leaving her again. Each time he was with her, it was more difficult to leave. He would stay in one of the spare bedrooms if he had to but he wasn't leaving. How Louise would feel about it, he didn't know but he was about to find out.\n\nNathan pulled in front of the house, got out and went to the passenger side of the car to help Louise out. By the time he got there, Louise was in tears. Anger at Barb resurfaced and was pushed away; she wasn't worth thinking about.\n\n\"Come on sweetheart.\" Nathan said gently as he held out his hand to her.\n\n\"My sister hates me.\" she said softly as if she were talking to herself.\n\nNathan didn't reply but led her into the house, up to her room and laid her on the bed. He took of her shoes and began to rub her feet, a few minutes later; Louise was asleep. Nathan covered her with a light blanket and lay on the bed next to her; they really needed to talk.\n\nLouise mumbled in her sleep, turned on her side facing him, in her sleep reached for his hand and said one word.\n\n\"Nathan.\""
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "louise",
        "barb",
        "patrick",
        "nathan",
        "kevyn"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-05"
}