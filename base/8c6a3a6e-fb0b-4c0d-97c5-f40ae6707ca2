{
    "title": "Everybody Needs a Hobby Ch. 24",
    "pages": [
        "** Mid-week, early evening **\n\nI was finally on my way home. I finished the day at the office and my boss and I tossed back a few while we talked about how the jobs were going and such. Mark's a hell of a nice guy and he's taught me a lot, but I could tell he was getting tired of the business for the last couple of years. Between insurance, lawyers and all the regulations, he had just about had it, so our conversations kind of melded. He talked about getting out of the business and opening a combination bait and doughnut shop on some tropical island and I talked about doing the photography bit full time. In the end, we'd decided that we'd finish up the jobs we had underway and then go our separate ways. With a handshake and that half-hug, backslapping thing that guys do, we locked up and headed out. Mark was whistling and stepping lighter than I'd seen him in years; it seemed like a big weight had been lifted off his shoulders as he headed for his Mercedes. Me, I damn near threw up before I got to my truck; \"What the hell did I just do?\" I asked myself out loud as I climbed behind the wheel.\n\nReality set in as I mindlessly made my way home. I'd always wanted to make photography my career and in the last few months we had made some great strides in that direction, we being Britt and I. If I was really being honest, it was Britt that really made the whole thing happen. Before she came along, I had the physical elements put together. I had my home/studio/warehouse that I'd been building on for years. In my head, I had the business laid out and had done a couple little things, but with Britt's help, the business was really established and the work was beginning to come in. I'd never had any doubt that I could make the business work, but now that it was really going to happen, well leave it said that my mind was going every which way and I was scared shitless.\n\nI soon found myself idling in front of my warehouse door, just sitting there. My mind had slipped into neutral and I really couldn't recall driving from work to home. I shook it off and mashed the remote control button that opened the massive door and pulled inside and up to the house. Three other cars were parked out front and I could see the pick-up and big classic car that had been delivered earlier sitting in the shadows of the cavernous space. I shut it down and stepped out of the truck and stood there a minute, just looking around. This would soon be my entire world, at least where I would work and live for the foreseeable future. Oh yeah, and play, as the laughter and bantering of the love of my life and her two best friends filtered from inside our home. \n\nI really am happy with how my life is going and the three gorgeous creatures inside were the frosting on the cake. I ran my fingers through my hair, straightened up my shirt and stepped inside. \"George!\" came the chorus, kind of like when Norm would walk into that bar on T.V. They were sitting at the island in the kitchen, an open bottle of wine and four glasses in front of them. \"We were wondering where you were baby,\" Britt said as she poured a little of the red in the remaining empty glass and slid off the stool and sauntered over to me. Like a sexy cat on the prowl, she approached with a gleam in her blue eyes and a smile on her face. Her long blonde hair cascaded over her shoulders and the little crop top she wore hung loose, partly on her nipples, which stood proud. Her taut belly showed and a skimpy pair of red panties did little to conceal the remainder of her perfect form. Her smile got bigger, coinciding with the obvious approval of her that now showed in my pants. Handing me my glass, she stretched up on bare tippy-toes and gathered her kiss while her hand gave my bulge a welcoming caress. Our tongues dueled until we were out of breath. \n\n\"Get a room,\" Kate and Gina giggled as they watched their housemate's 'welcome home' tradition. Britt moaned into my kiss as I let my unoccupied hand stray to her luscious ass and lovingly squeeze one of those firm hemispheres. Reluctantly, we released one another and we made our way into the kitchen.\n\n\"Hi babe,\" Gina said as she stood up from the bar seat. We were eye-to-eye when the leggy brunette approached. I sat my wine glass on the counter behind her and we pulled each other in and I received my second dick-straightening kiss of the evening. Gina's firm 'D's' mashed against my chest as she ground her crotch against mine. My hands automatically zeroed in on her tight pumpkin ass and held on tight. \"Oh god,\" she groaned in our kiss as one middle finger grazed the pink star left unprotected by the g-string she wore.\n\nThere was another awaiting her kiss and Gina stole one more before letting me go. I turned to Kate who was on her knees on the bar stool, impatiently fidgeting, her arms outstretched. Her long black hair hung to the bottom rung of the stool. She too wore a little cropped top, but hers was ripped down the front to show off the bit of cleavage her pert little tits provided. She also had on a tiny g-string that virtually disappeared when she had her legs together. I still had to lean down to kiss her and she immediately wrapped her arms around my neck, nearly pulling me over. I reacted by putting my arms around her and straightening back up, pulling her off the stool. I'm sure this is what she had in mind in the first place as her legs came around and wrapped around my waist. Britt and Gina laughed at Kate's antics, but the little one was oblivious as she tried to swallow my tongue. My hands had slipped under her butt to get a better purchase and she gyrated her hips. My back was to the others so I took the opportunity to covertly give her a little extra thrill. Again, the bit of thread that made up the majority of her panties offered little protection from wandering fingers. I grazed a fingertip over her tight pink pucker, just long enough to make her squeak a little as we continued to kiss. Moving on, I encountered the tightest little snatch I had ever known, wet and wanting. Like quicksand, my finger was instantly sucked in as was my tongue. Like a practiced veteran, she worked my tongue like it was my cock, growling in her throat as she simultaneously rocked her pelvis in my hand, my finger stirring her pussy juices. Another chorus of \"Get a room\" got our attention and Kate groaned her disappointment as I sat her bare butt on the cold granite countertop and fought her to retrieve my finger. She quickly grabbed my hand and drew my wet digit into her mouth and sampled herself. Fingers, tongues, cocks, the girl's oral skills were impressive. \"That'll be your dick next time,\" she whispered as she gave me back my hand which I quickly used to rearrange the contents of my pants.\n\n\"So what's for dinner?\" I asked nonchalantly. The girls all laughed as I was obviously playing down their welcoming, but to be honest, a simple 'How was your day?' kind of greeting was a rarity here. Any time apart was made up for with some sort of passionate countermeasure. \n\n\"Well we thought since you were late, that you were probably picking up some sort of epicurean treat for us,\" Britt exclaimed with a questioning look.\n\n\"No,\" I answered. \"I ended the day at the office and Mark and I talked about things.\" My voice and body language evidently changed and Britt picked up on it right away.\n\n\"Well, we'll just order a pizza and make salads,\" Britt decided; \"can you girls take care of that?\" \n\n\"You got it,\" Gina answered and nodded 'message received' and turned Kate toward the kitchen and the phone. \n\nBritt grabbed my wine and handed it to me and then guided me to the living room. She sat us on the couch and turned to me, \"So what's up?\" trying not to show any worry on her face.\n\n'God I love this girl' I said to myself as I bucked up and took a sip of wine. \"Well, I guess I kinda gave notice today,\" pausing for questions. None came, so I continued; \"Like I said, I finished the day at the office and Mark was there so we talked about the jobs and things and had a couple drinks and before you know it, we were both talking about the future and our dreams and that kind of shit, you know, the stuff that guys never talk about with each other. Anyway, I knew that he was getting tired of the business because it's changed so much over the last few years. It's just not as fun as it once was and he spends more time worrying about the business end than the actual building itself. I guess he knows another guy that lives on some island in the Caribbean or somewhere who keeps bugging him to move down there and start a business. He mentioned something about a bait shop or donuts or some combination; didn't make any sense to me, but anyway he thinks he can make enough to live happily selling stuff to the tourists there.\" I took another sip, giving time for Britt to interject but she just sat there and waited for me to continue. \"So after his little confession, I guess I talked to him about you and our little business here and well, when it was all said and done, we'd agreed that we would finish up the work he has going now and then we'd each go off and pursue our dreams.\"\n\nI shivered a little when I said it and Britt threw her arm over my shoulder and snuggled up to me. \"Well that's great,\" she said with just the right degree of encouragement. \"It's what you've always wanted, but it sounds like it may have happened kind of suddenly?\" God she was good; she should be studying psychology. \n\n\"Yeah,\" I replied as I snaked my arm around her and held her tighter. I kissed the top of her head and the aroma and her mere presence calmed me. \"It's gonna take a couple months to finish the jobs we have started and it'll sort of taper off slowly, so I'll have to shorten my hours there and build them up here; scheduling is gonna be a bitch.\"\n\n\"Well that's what I'm here for,\" she said as she put her hand on my thigh and gave it a little squeeze.\n\n\"Yeah, but you start back to school in what, a couple weeks?\"\n\n\"Yeah, we'll probably get our schedules next week and then if need be, I can look at re-arranging some classes,\" her hand massaging my thigh.\n\nI put my hand on hers and looked her in the eye; \"Okay, but like John, I'm going to insist that your classes come first. If things really pick up, we can hire a bookkeeper or someone to help out. If need be, I guess I could learn some of the other office stuff too.\"\n\n\"Oh no!\" she said mockingly, \"you stick to shooting the pretty pictures and stay away from my books!\" She smiled and leaned up to kiss me on the cheek, \"Really baby, it's all going to work out fine. I may have to do my part in bits and pieces and at odd times, but that's okay.\" Britt paused and placed her index finger under her chin and tilted her head in that classic 'thinking' pose; \"Only problem I see is it may cut into our sex time.\" I stared at her, evidently with a look of disbelief and she managed to keep a straight face for a few seconds before busting up laughing. \n\nI turned on her and started the tickle attack. She squealed and squirmed as my hands went after her ribs and the insides of her thighs, her most vulnerable ticklish regions. Timing being everything, the loud raucous bell in the warehouse went off; \"Pizza's here,\" one of the others shouted. I gave Britt a reprieve and let her up from the couch as Gina sprinted by; trying to slip into a pair of shorts a she made her way out the door. \n\n\"C'mon Mr. Photographer,\" Britt laughed as she skipped out of the living room, \"let's help them get dinner on the table.\" I followed her in after glancing out the front door to make sure Gina was okay with getting the pizza. We live in a half abandoned commercial district and had the occasional vagrant problem, so I was always cautious and protective. Gina was just waving goodbye to the undoubtedly flustered high school boy who had the good luck of delivering to one of the most beautiful and under-dressed women he'd see on any of his deliveries. The shorts that she'd struggled to put on as she ran to the front of the warehouse proved to be just a tad bigger than the skimpy panties she was covering up. They were cut so that as much leg as possible showed and there was a lot of leg to show on this one. They also hung low on her hips, showing off as much belly as possible and the cropped shirt she wore stopped just below those magnificent D's that we all loved so much. \n\nI waited at the door as Gina pranced back into the house. She paused just long enough to tease me by opening the box and letting me get a good whiff of the intoxicating aroma and then giving me a quick kiss, she moved on into the kitchen. I followed the bouncing butt; \"What do you want to drink lover?\" Kate asked, her head in the fridge.\n\n\"Who ya' talkin' to?\" Gina asked as she put the pie on the counter.\n\nKate leaned out and giggled, \"All of you, I guess.\" \n\nWe all laughed and placed our orders as Britt retrieved some glasses from the cabinet, stretching for effect. Gina glanced at me and licked her lips before looking back at the long blonde whose tits now resided below the bottom her shirt. \"Nice tits girl,\" Gina said as she grabbed one while reaching around her to get to the silverware drawer. Britt just purred and stood there while she was groped and then finished getting the glassware down when Gina was done. Meanwhile, the little one sat the various drinks on the counter and Gina took the opportunity to tweak one of her erect nipples, evidence of how cold the fridge is. \n\n\"Got a little tit fetish tonight babe?\" Britt asked as she heard Kate squeak from the nipple grab. \n\n\"Hey, can you blame a girl?\" she replied, looking from Britt to Kate. \"If George would take his shirt off, I'd play with his too,\" giving me a wink.\n\n\"Alright, enough playtime girls; let's eat, I'm suddenly very hungry,\" I said as I pulled up a stool.\n\nI cleverly steered the conversation at dinner to what the girls had done with their day. \"Well,\" started Gina,\" we have everything boxed up and about half of it here and we'll get the rest of it moved tomorrow. We've gotten some orders that we need to fill by the weekend, so we'll scramble around here on Friday and try to find what we need to ship out.\"\n\n\"It shouldn't be that bad,\" Kate said with her mouth half full of salad. \"We've worn out half a dozen markers labeling boxes, so it should be fairly easy to find what we need.\" Gina reached over and fingered a bit of errant salad dressing at the corner of Kate's mouth and fed it to her. Kate made an affair of sucking the stray dressing off her roomies finger and my cock responded accordingly and I may have let out a soft groan. Britt hand was in my lap and gave me a little covert caress.\n\n\"So,\" I said, clearing my throat,\" We ought to be able to look at all these boxes and get some idea of how much shelving you girls will need?\"\n\n\"Yeah, pretty much,\" Gina continued as though she hadn't just done something terribly erotic...little minx. \"We'll have to do a little head scratching to figure out what we would need for shipping supplies and maybe some extra space if we want to increase the product line.\"\n\n\"Oh, and don't forget a work counter or table and we'll need room for a couch,\" the little one said as she concentrated on chasing a cherry tomato around her salad bowl.\n\n\"A couch?\" I asked.\n\n\"Yes,\" she announced triumphantly as she speared the red globe with her fork. \"When we take breaks, a hard surface like a table is hell on your back when you're getting your pussy eaten,\" she said matter-of-factly as she looked me in the eye and sucked the tomato off the end of her fork.\n\nGina snorted back a laugh and Britt laughed as she gave my burgeoning cock another squeeze.\n\n\"Alrighty then,\" turning to the one who had me firmly in her grasp under the counter; \"So babe, what did you get done today?\"\n\n\"Well,\" she said as she moved her hand along my length. I could have put mine over hers and held her at bay, but why? \"You saw that we got the next two cars in. Or I should say, we got in one truck and one car. The truck is a truck; I guess it's pretty and all, but it's just a truck.\"\n\n\"Yeah, but it's comes with its own bed, \"Kate giggled and gave the international sign for intercourse, you know, the finger of one hand slipping through the circle made up of your thumb and forefinger on the other hand.\n\nThe rest of us rolled our eyes, but my cock thought it was pretty fucking funny and Britt responded accordingly, giving another hand-hug. Continuing, \"And we got the Hornet...what is it? Uh...oh yeah, Hudson Hornet.\"\n\n\"So how does it look?\" I asked, still enjoying my massage.\n\n\"It's a pretty car if you like red. I mean it's red on the outside and red on the inside. I mean, it's nicely done and boy, does it have a back seat you could have fun in,\" giving an explanatory erection embrace.\n\n\"Well that sounds good,\" trying to laugh instead of moan. \"So anything else exciting happen?\"\n\n\"Well you know Becky came over,\" she said offhandedly, pausing, and then said,\" and then we fucked the shit out of each other with that big double-ended dildo.\"\n\nThere was a slight staining of the ol' denims as my cock lurched at her casual comment. Kate snorted iced tea out of her nose and Gina nearly choked on a bite of pepperoni.\n\n\"What was that?\" Gina inquired, still hacking.\n\n\"Well, Becky came over to talk about the shoot at the ranch and she brought lunch, but it turned out we were more interested in eating each other than the lunch she'd brought.\"\n\n\"Well crap,\" Gina said as she gave Kate a slap on the arm. \"I told you we should have come home for lunch, but nooo... you wanted sushi for lunch when we could have had some fresh redheaded pussy instead.\"\n\n\"Ouch,\" she said, rubbing her arm. \"If I'd have known that that was an option;\"now giving Britt the stink-eye, \"I'd have had some of that.\"\n\n\"Yeah, well I guess I might have shared,\" Britt smiled, her hand still abusing my cock; \"Maybe next time.\"\n\n\"So,\" Gina continued the interrogation, \"you used the big double flesh colored one?\"\n\n\"Yeah, I gave her the option of that or George Jr.\" Britt answered.\n\nI was about to ask about Junior but Kate read my mind, \"Yeah, you remember Jr. The one we had made of your cock.\" I could only nod.\n\n\"So the double, huh?\" Gina asked once more, rather clinically. \n\n\"Yeah, we were able to take it all and we rubbed our pussies against each other with that big fucker inside us. Holy shit, we both came like crazy...oh that reminds me, the sheets from upstairs need to go in the dryer.\" Her hand continued to keep me aroused, like it needed help.\n\n\"There is no way I could do that,\" Kate squeaked at the thought. \"That thing is too big for me.\"\n\n\"Well you can take all of George here,\" Britt smiled at me as she stroked me some more and just smiled knowingly. \"George is bigger than that.\"\n\n\"Yeah well, maybe because it's him, you know the real deal and maybe I get wetter or something; I don't know, but shit, I'm so wet now, I could probably take a baseball bat,\" bringing her hand out from under the table and displaying two wet fingers. It was Gina's turn to taste-test the little vixen as she sucked the little ones fingers clean. My cock was in serious danger of letting loose and Britt knew it.\n\n\"Anyway, that and some more paperwork and computer stuff and that was about it.\" Her other hand had mysteriously reappeared above the table top and she put her bowl on her plate; \"I didn't realize it was getting so late,\" she said as she looked over at the clock. It was later than it seemed it should be. \"Babe, why don't you go get your shower and we'll clean up in here, okay?\"\n\nI'm no fool and I quickly stood up,\" Yeah, that works for me, I am feeling pretty beat.\" I gave each girl their good-night kiss without all the gyrations that the welcome-home kiss seemed to come with and headed for the bedroom. Out of my earshot, the girls huddled up and talked while they cleaned. \"So what's up?\" Gina asked Britt.",
        "\"Well I should probably let him tell you, so if you promise not to say anything, I'll tell you,\" Britt said under her breath.\n\n\"I just noticed that he wasn't himself when he came through the door, \"Gina continued, \"I was just concerned.\"\n\n\"You noticed that too,\" Britt said.\n\n\"I didn't notice anything different,\" Kate whispered with the others.\n\n\"Of course not,\" Gina snarked, \"You were so horny when you saw him you wouldn't have noticed if he'd grown a horn out of his forehead.\"\n\n\"Would too,\" she said adamantly, \"I love unicorns.\"\n\n\"Ah Jeez Katie,\" Gina sighed and turned back to Britt; \"So what is it?\"\n\n\"You have to promise you won't tell him I told you,\" she repeated, getting an affirmative nod from each of them. \"Well George gave his boss his notice today. He's really going to do the photography business full-time.\"\n\n\"That's great,\" both girls announced and bounced and hugged Britt. \"So what was the long talk about?\"\n\n\"Well,\" Britt continued, \"It just happened today, like all of a sudden and it sort of took him by surprise I think.\" The girls said nothing; \"Anyway, Mark, his boss was thinking about shutting down anyway and they got to talking and before George knew it, they'd agreed to work together to finish up what work they have going right now and then close it down. George figures he's got a month or two before this is his full time job.\"\n\n\"Well I think it's great, \"Gina hugged Britt once more, \"and you know we'll do whatever we can to help out.\" \n\n\"Hell yes,\" Kate chimed in; \"with everything he has done for us, I'd do anything for him,\" and then pausing to give an exaggerated wink, \"and I do mean anything.\"\n\n\"Yeah, yeah, we'd all do that,\" Gina replied, giving her version of a cheesy wink, \"but seriously, anything that we can do to help, you know we're there.\"\n\n\"Thanks guys\" Britt said as she initiated a group hug, \"I know we're all in this together and deep down, he knows it too, but you know him; it's that macho, be the guy, be the provider kinda thing. Anyway, I know everything will work out just fine. He did bring up the fact that we'll being adding school back into our schedule in a couple weeks, so that'll complicate matters, but hey, if we can't figure it out, then no one can, right?\"\n\n\"Right!\" the others replied and a high-five and another hug and they went about cleaning up the kitchen.\n\n\"Hey, I almost forgot,\" Britt said as she was loading the dishwasher; \"You guys remember the woman that called awhile back and wanted to do some boudoir pics for her boyfriend who was deployed overseas somewhere?\"\n\n\"Yeah, she was the real shy one that wanted to know if we had a female photographer on staff,\" Kate replied as she wiped down the counter.\n\n\"That's the one. Anyway, she called today and still wants to do it, but now she has a friend that wants to do it too, so if you want Katie, I can call her back and we can set it up. I'm thinking that with school coming up, we should probably try for next week sometime.\"\n\n\"Heck yes,\" Kate said, wringing the washcloth off in the sink. \"I take it George is still okay for me to do it?\"\n\n\"I haven't mentioned to him yet, but I don't see why not. He was okay with it then and if anything, you're more qualified now.\" \n\n\"Alright then,\" looking over at Gina for confirmation; \"I guess almost anytime next week. We'll be out of the store on Saturday, so....yeah, anytime.\"\n\n\"Okay, I'll call her tomorrow. I'll try to make it during the day cuz' it looks like we'll be shooting at the ranch next Saturday and I have two cars in the studio to shoot, so maybe we'll take a couple evenings next week to shoot those.\"\n\n\"Ooo,\" Kate cooed, \"Do you suppose George will let me shoot the private,\" throwing up the air quotes,\" calendar shots on the two cars?\" The horny little one was referring to the X-rated calendar shots that Britt and I had starting doing from the beginning of the car calendar shoot. It started as a private deal, but that didn't last long. In fact Kate had to fill in on the shoot of the Hearse because Britt wouldn't get near the car.\n\n\"I would suppose,\" Britt said, \"particularly since they aren't private anymore,\" matching Kate air quote for air quote.\n\nGina had been quiet throughout this exchange until, \"How big did you say the backseat of the Hornet was?\"\n\n\"Why? What have you got in mind?\" Britt asked as she walked up to her tall friend and wrapped her arms around her waist.\"\n\n\"Well,\" as she wrapped hers around Britt and grabbed a butt cheek with each hand; \"a little orgy in the back of a classic car sounds kind of fun.\" \n\n\"Uh huh,\" Britt responded as Gina kissed Britt hard. They moaned into their kiss and not to be left out, Kate moved up beside them and soon had one hand on each of their wet pussies; the tiny threads of the g-strings being no obstacle. \n\nBefore things got out of hand as it were, Britt broke away and spun Kate into Gina's grasp and the two of them groped and kissed one another. \"Well, I better go check on George,\" Britt said as she gave each girl a parting butt pat; \"and, oh by the way,\" she said over her shoulder as she walked toward the bedroom, \"I put the double dildo back in the toy box,\" and she walked into the bedroom, closing the door behind her.\n\nI was just dragging my razor over my face when I heard the bedroom door close. Standing there naked in front of the mirror, I waited for a failed sneak attack from behind or a loud wolf-whistle from the doorway. Not to disappoint, I looked in the mirror and saw Britt leaning against the door jamb, taking in the view of my backside before she let out an appreciative whistle. I gave a little hip check as I smiled at her in the mirror; \"Shake that money maker!\" she half shouted, clapping as she walked up behind me. I couldn't help myself and lost it, busted up laughing.\n\nShe wrapped her arms around me and hugged me tight; \"I love your laugh,\" as she kissed my shoulder blades; \"but I love this more,\" as both her hands found my cock which grew quickly in her grasp. Shifting, Britt looked around from behind me in the mirror and stared at my growing member as she expertly manipulated it. \"How about taking me to bed and making love to me,\" she said to either me or my cock; not sure which and it didn't matter.\n\nI took an arm and pulled her around in front of me, grabbed her by the waist and sat her on the counter in front of me. Her eyes darkened as I leaned in to kiss her. Her legs wrapped around me, like I was going to try and escape; fat chance. I ran my hands up her sides and slipped under the skimpy top and raised it up. Our lips parted just long enough to let the garment pass and then we locked lips again. She moaned into our kiss as I now had a breast in each hand, my fingers strumming her nipples. \n\nOur lips parted when we ran out of air and our eyes locked, my fingers still playing. Britt's beautiful blue eyes were now nearly black and she chewed on her lower lip. \"I love you,\" I whispered and then I felt myself in her hands once more.\n\n\"I know,\" she said as she slowly stroked my cock, the end kissing her belly button.\n\nI wrapped her in my arms once more and lifted her off the cool granite. She wrapped her legs around me, never losing her grip on my cock which was now wedged uncomfortably between us. I slid my hands under her ass and walked us into the bedroom. \"I love you so much,\" she whispered as she nibbled on my collar bone. I made it to the end of the bed and gently set her down. With little protest, she released her numerous holds on me and sat, conveniently for me, face to face with my cock that now pointed skyward. Britt looked up at me and smiled as she took me in one hand and pointed it at her open lips. Her tongue reached out and flicked at the droplet that hung on the tip before she kissed the crown of my cock and then proceeded to consume me. Never losing eye contact, she inched her way down to the root until my dick had disappeared. Her hands played with my balls as her tongue massaged the bottom of my cock. \n\nI had to close my eyes and moaned out loud as she tried to swallow me whole before moving back up my length, her soft lips and tongue massaging me. I knew I couldn't take much of this and I put my hand on her shoulder and pushed her back. \"I want your cum,\" she whined, grabbing hold of my wet cock when it was out of reach of her mouth. \n\n\"Oh, you'll get your cum,\" I said as I kissed her wet lips, tasting myself on her tongue; \"But first, I want your pussy.\" Not seeing any sense in arguing, Britt let me push her back until she lay on the bed, her knees still bent over the edge of the mattress. I leaned over her and kissed her on the lips once more before moving to her chin, down her neck and onto her chest. A couple detours were required as I visited each tit, nuzzling each one before taking her rigid nipple between my lips and suckling for a couple seconds. I could smell her arousal as I ventured to her belly button and played there for a bit before continuing on. Her hips fairly bucked now as I approached my final destination. Her hands were tangled in my hair as she tried to guide me. \n\nNow on my knees on the carpeted floor, I nibbled my way around her sweet, shaven sex. In self-defense, I had to reach up and hold onto her legs as she tried to pin my head between her strong thighs and force me to her wanton pussy. No force was needed as I was going to eat her sweet snatch whether she wanted me to or not, I just chose to do it on my own schedule; Britt hated to wait. Satisfied that I was now ready to feast, I spread her legs out further and looked at the beautiful sight before me. Her pussy lips parted, her pink interior shined with her juices. Her clit stood proud and beckoned my tongue. I gave it a quick lick and my lover shook with elation. Happy with her response, I backed up and started a bit lower this time. Her tight puckered ass winked at me as I swiped at it with my tongue. Britt groaned and tried to force her butt onto my tongue. I held her legs tight, spreading them a bit more and with a stiffened tongue I stabbed at her asshole, probing it slightly.\n\n\"Oh baby,\" she moaned as she pulled on my hair. I let her guide me and she moaned louder as my tongue slipped into her open pussy. She pulled me tighter and my tongue danced inside her pussy as my upper lip mashed her clit. \"Unh...fuuucc...\" as she rocked her hips and her pussy danced on my face. Wishing I had Gene Simmons tongue, I nearly dislocated my jaw as my tongue searched out for her g-spot. I regained a bit of control and eased up on the tonguing, switching to licking and sucking. Her clit begged for attention and I drew it between my lips and sucked on it gently, tickling it with the tip of my tongue. Giving up control of one leg, I found my way with one hand and eased a finger into her pussy. \"Make me cum baby,\" she groaned as she felt my intruding digit. I worked the finger around until I found the familiar spongy spot in her pussy, backed smack up to the back of her clit. Britt tensed when she felt me there, knowing what was coming next. \"Do it, do it baby, make me cum....\" and we had lift-off. \n\n\"Yeeessss!!\" she cried quietly as her body gave in to my manipulations. Her pussy contracted, pulling my finger inward and I could feel her pussy juices running down the back of my hand. She was breathing haltingly as she ran her hands through my hair, tugging with each ripple of pleasure that ran through her. I rained little kisses on her sex as she slowly recovered. She purred softly as she massaged my scalp and jumped and giggled at my occasional lap at the juices that continued to seep from deep inside.\n\n\"C'mere,\" she whispered, tugging at my hair. I dutifully crawled up, kissing those areas I'd visited earlier. \"You're a mess,\" she said as she licked her excesses off my face. We kissed and the flames burned higher once more. Britt pulled me tight as we did a bit of horizontal dirty dancing; \"I love feeling you on top of me,\" she moaned as her pussy lips kissed my balls. She wrapped her legs around me and spurred me like a horse; \"I need you inside me baby,\" her pussy sliding over the underside of my cock. \n\nI worked my way back, her legs giving me just enough rein to slip along her pussy lips until the tip of my cock found her waiting portal. We moaned in unison as the head slipped inside her. I paused and we kissed as I felt her spur me once more, her legs pulling upward, pushing me deeper inside her anxious sex. \"Fuck, you feel good,\" she gasped as she continued until she bottomed me out. Her pussy walls massaged me as I held station, letting her enjoy herself. \"Fuck me now,\" she moaned as she began a rocking motion and we continued to kiss. I was resting on my forearms, supporting the majority of my upper body, but from the hips down, full contact was the name of the game. Britt hands reached down, trying to get a purchase on my ass as she panted into our kiss.\n\nWe continued to grind away, moaning and groaning. Britt chewed on my ear as she raked her nails up my side; \"Grab my ass baby, pound that pussy...Fuck me hard!\" \n\n\"You want this?\" I asked, breathing in her ear, my chest against hers, her ass cheeks clinched tight in my hands. \"Is this what you want?\" as I pulled held her tight and drove my cock deep, over and over; short, rapid strokes.\n\n\"Fuck Yeah,\" she moaned as she gnawed on my shoulder. \"Gimme, gimme, gimme,\" as I squeezed her ass tighter and spread her cheeks; like I could get my cock deeper yet. \n\n\"I'm gonna cum baby,\" I grunted as I felt my balls tighten.\n\n\"Uh huh,\" she huffed as her nails dug deeper into my sides. \"Me, me...unhhh...cum with me...cum...cum..wanna feel...AhhhFuuccckkk!!!\"\n\nMy cock didn't stand a chance; Britt fucked the life right out of me. My cock was buried as deep as it could go and it felt like it would swell and burst before I unloaded a copious amount of seed inside her. My asshole puckered and my ass cheeks clinched as my cock convulsed over and over until the tank was dry. Once I found the strength, I pushed myself back up on my hands and looked down at her. Her eyes were closed tight and her forehead wrinkled and her face reddened. The exertion of her orgasm showed and my cock felt it. Her pussy walls still undulated along my length, contracting, trying to pull me even deeper. I wanted to help, so I blew lightly on her face. That just annoyed her or tickled and she moved her head back and forth, trying to dodge the unwanted breeze.\n\nThat failing, I bent down and kissed her forehead, her nose, her cheeks, until her heart rate slowed and her pussy relaxed. Again; thinking of her comfort, I moved to slowly remove myself. \"Don't even,\" she growled, digging in her nails and constricting her inner walls; \"Stay.\" She smiled up at me; \"I love you so much,\" drawing me down for a kiss.\n\n\"I love you too,\" returning with another kiss. \"Aren't I getting a little heavy on you?\" I asked with deliberate concern on my face.\n\n\"Yeah, but I love it,\" as she drew her legs back up and wrapped them under my butt and planted me back inside her. \"Mmmm...that's where you belong,\" her pussy rippling once more.\n\nI gave her another soft kiss, only to be rewarded with her soft snoring. 'God I love this girl,' I said to myself. Slowly and as gently as possible, I rolled us to our sides and I pulled her back into my arms. Still connected, I quickly followed her lead and we lay on the bed, fast asleep, arms and legs entangled.\n\n** The next morning **\n\n\"Morning lover,\" Britt whispered. I was on my back, Britt was snuggled against my side, her head on my chest and my cock in her hand...and my ass was freezing!\n\n\"Hey baby,\" as I turned my head to give her a cautious kiss; you know, morning breath and all. I shifted, trying to move my butt to warmer climes and Britt giggled.\n\n\"Looks like you got the wet spot this time,\" giving my cock a loving caress.\n\n\"It was worth it,\" giving her a deeper kiss; to hell with the breath. I lay back and looked up to the ceiling and let out a big, involuntary sigh. Britt picked up her head and looked at me, questioning.\n\n\"What was that for?\" she asked, kissing my chest and massaging my dick.\n\n\"I don't know,\" I answered. I paused and let my brain catch up; \"I expected that I would wake up this morning and start worrying again about the decision I made yesterday, but oddly enough,\" working my arm under her back and drawing her closer; \"I think I'm actually relieved.\" My hand drifted to her butt and she threw her leg over mine; I could feel her warm pussy on my thigh. \"I think I did the right thing,\" my hand on her ass, a couple fingers wedged in the crack; \"And I think what makes it all work is right here,\" giving her butt another loving squeeze.\n\n\"My ass is what makes it work?\" she giggled, clinching my cock in warning.\n\n\"Yeah,\" I laughed; \"Your ass and everything that comes with it...but mostly your ass.\" \n\n\"Wise guy,\" she laughed as she crawled up on me, released her hold and gave me a smothering kiss. I was now afforded full access to both cheeks and I held on tight as we made out. Our tongues wrestled as her hips squirmed, determined to regain some control of my burgeoning dick. \n\nI happened to glance over at the clock on the bed stand as we pawed at one another. \"Sweetie,\" I mumbled in our kiss; \"I need to get up...and I need to pee;\" as the sensation just hit me. Britt stopped kissing and twisted around to look at my erection slapping at her thigh.\n\n\"You sure that's not for me?\" she asked playfully as she nudged my hard-on.\n\n\"Oh, it's all yours,\" I said, as I took the opportunity to roll her off me and swing my legs toward the edge of the bed; \"but if you don't let me pee, your dick is going to make mess.\" I stood up and pointed myself toward the bathroom.\n\n\"More than it already has?\" Britt inquired and I turned and looked back just long enough to see her holding up the sheets with the rather large dark spot in the middle of it. \n\nI made it to the commode and almost made it through unmolested. I felt her warm form against my backside and her arm snaked around me to take control. My cock jerked at the change of command and she giggled; \"all done?\" I grunted yes and she giggled once more as she gave it the customary triple-shake. \n\nNot letting go, my lover pointed my dick to the right like she was giving directions or moving the rudder on a boat; \"To the showers,\" she commanded and I dutifully proceeded with her literally on my tail. It took all my presidential powers to get through the shower in a timely fashion and I had to promise to make time and give her and the girls the 'full treatment' in the shower sometime soon. The 'full treatment' is a personalized leg and pussy shaving given by yours truly and whatever follow-up procedures the girls want after that. I'll admit that if I had to pick a fetish or two, shaving a woman's legs and private parts and just washing a woman's hair are probably at the top of my list. Many an orgy has started in my custom shower, making it one of my better extravagant investments.\n\nRegardless of the concessions, I had a hard-on throughout the shower and until I finally stuffed myself inside my jeans. \"Are you sure you don't have time,\" the still-naked blonde teased me until we were standing in the kitchen scrounging for breakfast. \n\n\"You know I'd love nothing more than to stay here all day and play, but now that the end is in sight,\" rolling my eyes,\" I need to knuckle down at work and also here.\"\n\n\"You're right,\" Britt pouted as she sat on the kitchen counter, bare-assed and swinging her lovely long legs. \"Once you're here under foot all the time, we'll have to set some ground rules so that I can get my work done. I can't just bend over or give you a b.j. anytime you want me to.\"\n\nI looked over at her, expecting her to break out in laughter at her own humor, but she remained straight faced. All she got out of me was a little head shake and a rolling of the eyes. \"Okay babe,\" as I walked over and gave her a quick kiss, avoiding any of the other enticements before me, \"I'll call you later; get lots done today.\" I turned and headed to the door with a big smile she couldn't see, 'Well I won that one,' I told myself; silly me.",
        "** Late afternoon **\n\nIt had been a fairly productive day and I had a nice long lunch with Mark, and we kind of laid out the ground work for closing up shop. We weren't going to advertise that we were going out of business and there were only a couple of other employees and they were young and there was a lot of work in town, so we didn't sweat them being unemployed. Size-wise, we were a relatively small outfit, so even subcontractors probably wouldn't miss us much. \n\nThat was the easy stuff. More difficult was how to handle any warranty work that the state requires us to do for two years after the completion of a job. Mark had also accumulated some equipment that wasn't worth much more than scrap prices because it was old, but it still did the job. I had the feeling that Mark was sort of feeling me out to see if I would be open at all to covering for him on the warranty work if any was needed while he was lollygagging on some tropical beach. He didn't come right out and ask; I think he was just trying to formulate a solution. There would be more meetings like this in the future and so far, we still felt good about what we were doing.\n\n** Late Afternoon **\n\n\"Red Brick Photography, Britt speaking.\" I looked forward to sitting at a desk in the same office and hearing her answer 'our' phone.\n\n\"Hey babe, on my way home and just checking in,\" I said.\n\n\"Hey lover, did you have a good day?\" she cooed.\n\n\"Yeah, pretty good actually. Mark and I met again and talked some more and I feel much better about our decision than I did yesterday. So how about your day; have any orgies or anything?\" I asked kidding; well sorta kidding.\n\n\"No, I behaved all day long but I'm so horny right now, no one is safe.\" she said in her Mae West voice.\n\n\"Duly noted,\" I replied; \"Anything else of interest?\"\n\n\"Uh, oh yeah, I forgot to tell you yesterday, but do you remember the woman who called awhile back about some boudoir pics for her deployed boyfriend?\"\n\n\"Yeah, sure, the real shy one who wanted a female photographer. We decided that Kate could probably handle it back then and she can surely handle it now; why, did she call back?\n\n\"Yep,\" Britt replied; \"she still wants to do it, except now she has another woman who wants to do it too.\"\n\n\"I assume that they will be doing it separately?\" I asked.\n\n\"If you mean will they be in separate photos, or together, then yes, they will be doing separate shoots but at the same time and in the same location. So I told her that since there would be roughly double the shots and time, then it would cost more than we originally quoted. I even found the original quote,\" she said proudly.\n\n\"Well that's great, and I take it Kate's good to go on it?\" I inquired.\n\n\"Oh yeah, she's pumped. I've got it set for next Tuesday.\"\n\n\"Well that sounds good. So did the girls get the rest of their stuff moved?\" I asked.\n\n\"Yeah, they came in with the last load a few minutes ago. They have a mountain of boxes stacked up. All that's left to do is go there on Saturday and get the fixtures loaded up and give the place a once over,\" she said.\n\n\"Well I feel kind of bad not helping,\" I said. \"We can put off visiting the ranch, maybe even just do it Sunday and then you could come along.\"\n\n\"Aww baby, that's so nice of you, but we already have the movers lined up and there really won't be much cleaning to do, just vacuuming I think. Anyway,\" she said, lowering her voice like she was telling me a secret; \"I kind of promised Becky a little one-on-one time with you,\" followed by her naughty little-girl giggle.\n\nMy mind slipped into neutral and I had to poke around for reverse; had I just heard that right? Britt is an incredible woman and I love her more than I think I even realize. She is loving and giving and obviously quite comfortable with herself. She doesn't hide who she is, but she doesn't flaunt it either. She's obviously bi-sexual but she is a one-man woman and I happen to be that lucky man. Except for the few times that I have been alone with Kate and Gina, any sexual dealings I've had have generally included Britt. Those times I was one-on-one with either of our two roommates, well Britt instigated the interlude; so in retrospect, I guess hooking up with Becky was really no different. \n\nI found first gear again; \"So what, you're pimping me out now?\" I said, sounding unconvincingly indignant.\n\nBritt laughed; \"Yeah, like you're gonna complain. No, I love you and I really, really, really like Becky and my parents always told me to share with the ones I love, so... anyway, it'll get you out of our hair for the day,\" she laughed again.\n\n\"Well okay, if you insist, I guess it's the least I can do,\" I replied stoically.\n\n\"Yeah, okay...anyway, how long before you get home?\"\n\n\"Half hour or so; anything I can pick up on the way, dinner maybe?\"\n\n\"No, oh, that's right,\" and I heard a little head-slap, \"I forgot, I also found time to make a lasagna, and Caesar salad and garlic bread.\"\n\nI could hear the pride in her voice and I was impressed but I couldn't leave it alone; \"What, no dessert?\"\n\n\"Wise ass,\" she scoffed and then came right back, \"Yeah, I ran out of heavy cream and didn't have time to milk the cow, so if you want to stop and pick up some gelato on your way, that would be sweet of you.\"\n\nChallenge accepted; \"Gelato it is; see you in a bit. Love you.\"\n\n\"Love you more,\" she giggled and the line went dead.\n\n\"Shit,\" I said to myself as I pulled over to the side of the road. I Googled 'Gelato' and guess what, not a bloody gelato store within driving distance. I scrolled and scrolled until I found an Italian restaurant listed that bragged about their homemade gelato and thankfully it wasn't too far out of the way. I got there before the dinner rush and was able to sweet-talk the Italian grandmother that owned the place into selling me a couple quarts of her famous Straciatella Gelato, which is like an Italian version of chocolate chip ice cream.\n\nI finally got home and was greeted by the aroma of lasagna and bread. \"I'm home,\" I announced as I made my way, following my nose. \n\n\"Hi lover,\" came Britt's muted reply. I moved further into the kitchen and found her bent over the open oven door. \"Damn it,\" I said as I took in the view; \"I have got to start just carrying a camera with me.\" A giggle echoed from the oven. Presumably, but not guaranteed, I caught Britt checking on her lasagna. Bent at the waist, her long legs descended into a pair of black stilettos; must have had five inch heels. Retracing my steps back up her toned calves and thighs, her bountiful ass was almost clad in a tiny leopard print thong that rode high on her hips. \n\nI sat my gelato on the counter and moved in for a closer view. Her long backside, muscular and curvy seemed to run forever. Her long blonde hair was pulled back in a pony-tail and hung to one side over her shoulder. It's then that I notice that the only thing she wore on top was a lacey apron that tied at her waist and around her neck. Allowing me a minute to take it all in, Britt slowly straightened and turned to me, proudly holding her finished lasagna. She smiled and posed, one stiletto clad foot slightly forward, long legs going on forever. The apron finished smartly at the top of her panties and sculpted inward, matching her curve for curve. At the top, her boobs peaked out the top and sides of the lace fringe.\n\nAgain, I grabbed the only camera I had handy, my damn cell phone and Britt held the pose while I got my shot. Like any good model, she turned and I got a shot of an incredible profile and finally, a shot of her gorgeous backside. \"So what's with the outfit?\" I asked, quickly adding, \"not that I'm complaining or anything.\"\n\n\"I don't know,\" she answered as she carefully sat the bubbling hot concoction on the counter. \"I found this,\" tugging at the skimpy apron, \"in a drawer here while I was looking for a regular apron. I thought it was kinda sexy and figured I'd go ahead and complete the look.\" She posed again without the lasagna prop and I drank it all in; she looked amazing, as usual. She sauntered up to me and we shared a deep kiss as my hands wandered over her bare back, settling on her minimally covered derriere.\n\n\"So where are the girls?\" I asked as we continued to hold one another close. \n\n\"They were in the shower when you came in,\" she said, giving me another soft kiss. \"They should be out in a minute. You want to help me set the table?\"\n\n\"Nah, I just want to stay like this for awhile,\" stealing another kiss as I ran my hands over her butt, stealing my fingers under the animal print. \n\nBritt moaned into our kiss with renewed enthusiasm, her fingers entangled in my hair; \"Mmmm, smells good!\" broke the moment. Gina and Kate followed their noses into the kitchen as Britt and I reluctantly released one another's lips. \"Oh good, George is home, we can eat now, \"Kate, the diminutive one giggled. She and Gina entered the kitchen wearing t-shirts, my t-shirts mind you, and little else if I had to guess. Barefoot, Gina's long sculpted legs went on forever, my shirt just covering her bubble butt; her generous breasts stretching the fabric. The same size shirt came almost to Kate's knees while the v-neck left her little tits nearly exposed. Their long hair hung straight, still damp from the shower.\n\nGina headed for the cupboard to retrieve some plates while Kate opened the silverware drawer. Still in Britt's arms I asked indignantly,\" What, no 'welcome home' kiss?\" Britt gave me one more and released me, giggling as she went back to check the lasagna.\n\n\"God, so needy,\" Gina said as she set the plates on the counter next to me. She stood before me with a perturbed look and then took my head in her hands and kissed me hard, her tongue searching for mine. My hands went instinctively, yeah, you've got it, to her butt and I pulled her tight. She wrapped one long leg around mine and we ground against one another, my hands now on bare butt, kneading her tight buns. As quickly as she had initiated the kiss, she stopped and looked me in the eye, my head still in her grasp; \"All better now?\" Her face held a serious expression until I gave her butt another squeeze and she broke out in a smile.\n\n\"Yeah, all better,\" I replied, giving her a parting buss before I let her go.\n\n\"I suppose you want one from me too?\" little Kate asked from the other side of the kitchen. She too tried to give the impression that it was some kind of inconvenience or something. \n\n\"Nah,\" I said dismissively as I turned my back to her; \"I'm okay.\" I grinned at Britt who was facing me and her expression and the sound of little bare feet running the length of the kitchen told me I'd gotten the reaction I was looking for. I turned just in time to catch Kate in mid-air as she launched herself at me.\n\n\"Why you...\" she snarled as I gathered her up in my arms. Hers surrounded my neck as her legs clamped my torso. My hands were free then to, yeah, yeah, you know, grab her by the butt. Her cheeks were just a bit more than a hand full and firm as can be. Her lips and tongue sought out mine as my fingers met in that sweet divide and Kate moaned in my mouth as a stray finger rested on her rosebud. \n\nBefore either of us got carried away, Britt called out, \"Dinner is served.\" Kate ground her lips on mine one more time; \"You can let me down now,\" she whispered. I pressed the pad of my finger against her asshole once more, eliciting a soft whimper before I sat her back on her feet.\n\nWe all sat down and before we started eating Britt tapped the side of her glass with her fork; \"I'd like to make a toast,\" she said. We all grabbed our glasses and waited for what I think was our first formal salutation since we'd all been together. \"To George for taking the big step and following his dream and to Gina and Kate for their new-found adventure into the business world.\"\n\n\"Cheers,\" came the chorus and the clinking of fake crystal. \"And if I may,\" I interjected, \"To Britt for bringing us all together and making it all possible.\" \n\nMore 'Cheers' followed by the lovely blonde blushing and her eyes glistening; \"And I should add, I love your outfit,\" referring to the tiny lace apron she wore; \"and I think whoever is in charge of dinner should be required to wear it.\" Of course I was thinking about the other two roomies wearing stilettos and panties with the apron as they took charge of an evening meal, not thinking of who really did most of the cooking here; moi.\n\n\"All in favor say 'Aye',\" Britt whooped as the other two joined in, laughing loudly. \"The 'ayes' have it. Baby, I think you'll look great in the apron, but we may have to give you a pass on the heels. We don't want you to hurt yourself,\" she giggled. \n\n\"Okay, okay,\" I huffed, giving into my faux pas; \"Let's eat before it gets cold.\" The girls giggled and let it pass as we all dug in and moaned our appreciation as we attacked Britt's sumptuous offering. The dinner conversation continued between bites and burps. We talked about the girl's final push to move their online business here to the warehouse and we finalized in our heads what they really needed as far as the building was concerned. Tomorrow they would spread out everything as though it was on shelves and determine how much room they needed. I reassured them that size didn't matter, which got me the laugh I'd hoped for, but when I questioned again the need for a couch, I was quickly over-ruled.\n\nDone with dinner, we all pitched in with the clean-up, all of us at one point or another giving the cook a loving caress of the butt. When it was all squared away, I took orders for coffee and was given the so richly deserved kudos I deserved for coming up with the gelato. We took the coffee and dessert into the living room; \"So Katie,\" I said, \"I hear you're finally going to shoot the boudoir job.\"\n\n\"Yeah,\" Kate bubbled, excited for her first real solo shoot. \"It got bigger too. There is another woman that wants to do the same thing for her boyfriend, so that'll be fun.\"\n\n\"I take it you're still doing it on location?\" I asked.\n\n\"Yes, so if it's okay with you, I might borrow a couple lights and a reflector or two; I'm not really sure what I'm getting into,\" she replied.\n\n\"That'd be fine, and make sure you have a couple different wide angles with you and if you want, take the transmitter and a laptop too.\"\n\n\"Oh god, that would be great. I can't tell you how much it means to be able to do this. In fact, I got my schedule in the mail today for school and I'm kind of thinking about changing to an art major or something that involves photography or maybe even a marketing major; something like that. Between the studio and the swimwear business, I'm starting to re-think a lot of things.\"\n\n\"Well that's cool,\" I said. \"I've always said that even if you don't know what you want to do when you get out of school, you should try to get into a major that you enjoy and then if everything works out, you'll be able to apply that to whatever you do for a living afterwards.\"\n\nThere was an intermission while we concentrated on the gelato before it melted in our bowls. \"Mmm, that is really good,\" Gina licked her lips in approval; \"Now don't ever buy it again!\"\n\n\"Yeah,\" giggled Britt as she stretched her tongue out to try to lick out the bowl. \"This stuff is contagious. If they sold it next door, I'd have a butt so big I couldn't get it through the front door.\"\n\n\"Yeah, we don't want that,\" Kate said as she ran her finger around in the bowl, wiping up the dregs before making a scene of sucking the chocolaty bit of heaven off her digit; \"Your ass is perfect now.\"\n\n\"Aww thanks Katie, I think you have the perfect butt; just enough to get a good grip on,\" Britt countered as she sat her bowl on the coffee table. \n\n\"Well as the resident authority on the female bum, I think you all have 'perfect' butts,\" throwing out the air quotes. Then I quickly decided I needed to change the subject before I got in trouble on not picking one particular butt as the perfect one. \"So all you have left to do is move clothes racks and that kind of thing;\" pondering the best way to clean out my bowl without embarrassing myself.\n\n\"Yeah,\" said Gina who sat her bowl on the table. \"We have some of the display racks that we really don't need, but they're too nice to leave behind and a couple of tables and chairs and I guess we'll take the sales counter too. I'm not sure what we'll do with it; maybe we can sell it.\"\n\n\"Did you offer to leave it in case the new tenant can use it?\"\n\n\"Yeah, but the building owner doesn't want to screw with it if the new people don't want it. He doesn't have it rented yet, so we have no one else to offer it to. If it's okay, since we're moving the rest of the stuff here, we'll just throw that on and maybe you can look at it and see if you think it's even worth trying to sell.\"\n\n\"That'll work,\" I said, leaning back and adjusting my waistband. \"Odd that I can't even visualize what it looks like; I've obviously seen it before.\"\n\n\"Yeah,\" giggled Kate, pulling up her legs to sit cross-legged on the couch, flashing her little slit at me; \"you were leaning on it when Gina and I sucked your cock the other day.\" Gina and Britt laughed at Kate's matter-of-fact comment.\n\n\"I do remember that damn thing digging into my back,\" I said, joining in with a chuckle.\n\n\"And that is just the reason we need a couch,\" Kate said with authority. Gina and Britt really busted up and I just threw my hands up in defeat.\n\n\"So back to the original topic; you're sure you don't need any help on Saturday, you know, disassembling things or whatever?\"\n\n\"No baby,\" Britt said as she stood up and started gathering the dirty bowls; \"they have everything under control, don't worry about it. Becky has already arranged to take Saturday off to go with you out to the ranch; you'll have a good time.\" And she gave a knowing wink and turned and we all three watched with admiration as her almost leopard-clad butt bounced out of the room.\n\n** Saturday morning **\n\nSomebody must have slipped me a mickey. I awoke alone and there was nothing but dead silence, a rarity here. I wandered into the bathroom and did my thing and then into the kitchen. \"Odd,\" I said to no one and stuck my head in Gina and Kate's room; also vacant. I went to look out the front door and there hung the note.\n\n'Good morning sleepy-head. Kate and Gina were anxious to get started so they snuck in and woke me up. In case you've forgotten, you're to pick up Becky at her store around nine. \n\nLove you and have a good time...wink, wink.'\n\nXXXXXX Britt\n\nA quick glance at the clock told me I had plenty of time to get ready so I wandered back into the kitchen, fired up the coffee maker and back into the bathroom for a lonely shower. I threw on a pair of jeans and an old pair of Justin boots and a button down shirt and after a quick breakfast, I headed out the door. Taking a quick mental inventory of the day ahead, I made a quick detour upstairs and grabbed a camera in case I wanted to take some preliminary shots of the area.\n\nI pulled into the western store's parking lot right at 9 o'clock. Figuring that Becky was probably waiting inside, I tried the front door only to find it locked. The sign said they opened at 10 on Saturdays so I knocked on the door. After a couple minutes a cute blonde with a short pixie haircut, tight jeans tucked inside her boots and a pink long-sleeve western shirt with fringe glanced through the glass door. She smiled and fumbled with the door lock.\n\n\"Hi, I'm Ge...\"\n\n\"Becky, your boyfriend's here,\" the petite cowgirl shouted over her shoulder as she opened the door. \"Hi, I'm Kayla,\" she said as she grabbed my hand and pulled me inside, locking the door behind us.\n\n\"Hi Kayla, I'm Geo...\" I started to say once again.\n\n\"Hi George, I knew who you were just by Becky's description of you,\" as she gave me a quick head to toe perusal. Her cheeks reddened slightly as I caught her pausing around the belt buckle area. We were both saved from the awkward moment as a familiar voice came up behind me.",
        "\"Good morning George, good to see you again.\" I turned just in time to meet Ginny as she reached out to hug me and pulled my head down for a quick kiss on the cheek. She was adorned much like I last saw her except for the couple extra undone buttons that offered an abundant amount of cleavage. Ginny took me by the hand and led me into the store; \"Becky's in back; she'll be out in a minute. Can I get you some coffee or anything?\"\n\n\"No thanks,\" I said as I sat in a seat she offered me. Surrounded by boots I flashed back to the shoe store where Becky and Britt ambushed me, leading to an evening I won't forget until I take my last breath. Ginny's voice bumped me off the path before my mind took me to the dressing room of that famous lingerie store.\n\n\"So feel free to wander around the ranch. Becky knows the place as well as anyone and if need be, she knows where I hide the spare key to the house.\" I felt her hand on my thigh before as she continued; \"If you decide to go in the old barn or the cabin, just be real careful; I'm not sure what condition they're in and I wouldn't want either of you to get hurt.\" Her hand had moved dangerously close to being out-of-bounds when Becky thankfully made her appearance. \n\nI stood to greet her as she walked into my arms and gave me big hug. \"Sorry about the boyfriend thing; Kayla has a big mouth,\" nibbling my ear before we ended the hug. \n\n\"Not a problem,\" I said as I held her at arm's length by both hands to take her in; \"I take all the good press I can get. You look very nice today.\" Becky released one hand and did a little pirouette. She wore a short jean skirt with a red-checked shirt that was tied under her breasts showing off her firm tummy. On her feet was a pair of short-shaft boots in red that complemented her hair color.\n\n\"Thank you kind sir, \"she said with a smile and a curtsy.\n\n\"So are we ready to go?\"\n\n\"Yep,\" she said as she skipped behind the counter and grabbed her purse. \"Bye Virginia,\" she said as she gave her aunt a kiss on the cheek. Ginny pulled her into a hug and I heard a whispered conversation that caused Becky's cheeks to match the color of her shirt. Becky gave me an embarrassed smile as she grabbed my hand and pulled me toward the store entrance. \n\nI just caught Ginny's parting \"Don't do anything I wouldn't do,\" followed by her and Kayla's laughter as Becky pulled me outside the door. \n\n\"Kids,\" Becky mumbled and shook her head as she pulled me to my truck. I wasn't sure whether it was safe to laugh or stoically agree, so I just let it pass. I opened the passenger door and helped her in. Her skirt rode high up her leg, nearly to her hip, as she slid into the seat. I got an eye full before I closed the door and walked around the front of the truck. \n\n\"I almost forgot,\" she said as I slid in behind the wheel; \"I packed us a picnic lunch and it's in my car. We can pull around back and get it.\"\n\n\"Okey Dokey,\" I said, awarded with a giggle as I fired up the V-8. We pulled around behind the building and alongside her car; \"I'll get it, \"before she could open her door.\n\n\"Thanks,\" heading me her keys. \"It's in the trunk and there's a blanket there too,\" giving me a wink.\n\nI popped open the trunk that was being fully utilized; in other words, it was packed. In the center was a good sized igloo cooler that I pointed to and gave her the quizzical 'Is this it?' look. She grinned and nodded her head. It weighed a ton as I grabbed it and managed to get it into the back seat and then was reminded not to forget the blanket. I found it amongst a collection of books and shoes and various mystery boxes and bags. I closed her trunk and threw the blanket into the backseat, ready to hit the road.\n\nBecky had moved into the 'girlfriend seat', the middle front and was buckled in and ready to go. \"Is this okay,\" she asked sheepishly.\n\n\"Sure, why wouldn't it be?\" I asked as I buckled up and turned the ignition.\n\n\"Well regardless of what Kayla says, Britt is your girlfriend, not me, and I didn't want to presume anything or...well you know,\" as her voice trailed off.\n\nI gave her bare knee a squeeze before putting it in gear and heading out. Becky got me pointed in the right direction and then fiddled with the radio until she found something to her liking and turning it down to where it was just background music. \"I love a full-size truck,\" she said as she stretched out her arms and legs. \"You just can't get comfortable in a little one.\" \n\nI answered with a \"uh-huh,\" as I was negotiating traffic. I was looking forward to getting out of town and away from all the knuckleheads I had to share the roads with everyday. Becky continued to squirm around next to me and about the time we cleared the last traffic light I was able to give a little attention to my passenger. The redhead now had her back to me, leaning against my side, her red hair draped on my shoulder. She had somehow managed to shuck her boots and had her bare feet propped up on the dash. She wiggled her delicate toes, enjoying the sun that filtered through the city-smudged windshield. My eyes followed down her long legs as they disappeared under the denim that rode up nearly to her, well you know where it stopped. It was a beautifully distracting sight and I was glad that we were on the road-less-traveled.\n\n\"So,\" she said, breaking the spell of her luscious legs; \"Gina and Kate will have their store all moved to your place today?\"\n\n\"That's the plan. They have some moving outfit that is going to load up the last of the bigger items. I offered to help, but they said that they had it covered. Britt's helping and she insisted that I keep our appointment for today.\"\n\nBecky shifted in her seat and drew my right arm around behind her neck and slouched down until she was snuggled under my arm. She held my forearm and my hand rested on her bare belly; \"There, that's better; are you okay?\"\n\nMy fingertips played at the waist band of her skirt and she snuggled closer. \"Yeah, this is nice,\" I said; \"I always enjoy a nice ride in the country.\"\n\nHer fingers played with mine as we ran down the road. The trees that lined the road cast shadows that flickered on her legs and feet. \"So can I ask you a personal question?\" she asked softly.\n\n\"Uh yeah, I guess,\" causing my fingers to halt.\n\nShe squeezed my hand, her fingers laced in mine over the top; \"So I know that Britt is what you would traditionally call your girlfriend, right?\"\n\n\"Uh yeah, I consider her my girlfriend.\"\n\n\"And Kate and Gina are...?\"\n\nI had to pause and think this through, so I straightened up a little, causing us to have to reposition ourselves. My hand moved up and Becky retained control of its placement, now firmly ensconced on her left breast. I could feel her nipple poking the palm of my hand through the multiple layers of red-checked fabric. \"Well I guess if I had to title them, they would be friends...good friends.\"\n\n\"Friends with benefits?\" she giggled as she squeezed my hand, thus squeezing her own tit. \n\n\"Yeah,\" I laughed as I did my own squeezing, capturing her firm nipple between two fingers. Becky squealed and kicked her feet as I teased her.\n\n\"So,\" pressing her hand down firmly on mine in an attempt to make me behave; \"am I a friend too?\"\n\n\"Well you're certainly more than a passing acquaintance; particularly after our time together in a certain dressing room,\" giving her another squeeze. \n\n\"Yeah,\" she sighed and relaxed her hold on my hand; \"that was the best sex I've ever had. I still can't quite believe what we did in that store. Just thinking about it gets me...well you know.\" I could feel her blush without seeing her.\n\nThere was a long pause as she held my hand to her breast, flexing her fingers laced in between mine; \"So I guess I've been wondering about how you felt about the situation you find yourself in?\"\n\n\"My situation?\" I asked.\n\n\"Yeah, you know, living with your girlfriend and her two friends, having sex with all three of them and then picking up the occasional stray?\" She whispered the last sentence, like she was unsure whether she should say it or not.\n\n\"Well first off,\" pulling her tighter to me; \"I don't know the Webster's definition of stray, but if you are referring to yourself, you are a beautiful woman that we happened to run into and everything that has happened after that, well you can call it fate or whatever, but we're all adults and no one is forcing anything on anyone. Trust me, in my wildest dreams; I could never imagine that my life would be like it is at this moment. I try not to think too hard on things that are out of my control.\"\n\nThere was another long pause; \"So did that make any sense?\" I asked.\n\n\"Yes and no,\" she replied as she slid my hand back down onto her bare belly and held it there. \"I'm probably just putting too much thought into it, you know. I guess I imagine myself in Britt's position and I'm not sure I could do it, you know, share you and all. I mean, I admire her for being so confident and free but at the same time I guess I worry about what could happen between her and you, and well all of us.\" \n\nShe paused again and rubbed the back of my hand with hers. \"Okay, I'm definitely over-thinking this, cuz that's what I do, but say another girl comes along, say the girl from the barbecue place, the one with the tattoo.\"\n\n\"Yeah, Addie,\" I said, maybe a little too quickly.\n\n\"Yes, Addie,\" Becky replied curtly; \"so Addie comes in for some pictures and before it's over she and Britt are all wrapped up in each other and Addie falls head over heels for her and tries to keep her for herself. What would you do, do you think?\"\n\n\"Well,\" as I shifted in my seat once more, my fingertips nudging at the waistband of her skirt; \"first off, I don't think anybody will ever keep Britt. As you may have noticed, the girl is pretty independent. If anything, she'd be the keeper, but I don't think that's in her nature either. Again, I guess I don't dwell on what-ifs and that kind of thing because in the end, I probably don't have much say in the matter. Now if you were to ask me how I would feel if Britt left me, of course, I would be hurt, but I have to assume that I would also understand why we were no longer together and that would have to make it easier to take...I think.\"\n\nBecky rubbed the back of my hand, silent in thought. \"Turn right at the next stop,\" she said, silent once more.\n\nI made the turn and asked, \"So did any of that answer any of your concerns?\"\n\nBecky pulled her feet off the dash and sat back next to me, her bare leg against my jeans. She retained control of my hand and once again I had tit in hand. \"I don't have real concerns, I guess. I just see what you and Britt have and I hope someday to have someone like you in my life...I mean to have something like Britt has with you. I can't tell you how happy I am to be a part of whatever this is, you know with Britt and you and maybe the others? Like I said, I tend to over-think things or maybe just think too much. Anyway, we're almost there; another mile or so and then we'll start seeing a white fence. That's the start of Virginia's ranch.\"\n\n\"Well,\" I said as I gave her breast a playful squeeze, \"We're pretty happy to have you as part of our lives now too. I know that Britt thinks the world of you and between you and me, Kate and Gina are definitely looking forward to getting to know you better, if you catch my drift.\" The white three-rail fence came into view and I felt Becky shiver at my mention of the other girls. We were quiet as we passed what seemed like miles and miles of fence until we came to a big double gate with stone pillars.\n\n\"Here it is,\" she said as I turned onto the entry road. A large banner-like sign spanned the gateway, 'Strait Shooter' spelled out in two-foot high letters.\n\n\"Strait Shooter?\" I inquired as we pulled up to the locked gate.\n\n\"Yeah,\" as she pulled on her boots and dug around in her purse for the key to the gate; \"Virginia's a big George Strait fan. I don't think her ex was too happy with her giving the ranch that name,\" she laughed as she slid over to the passenger door. \"I'll lock the gate behind us after you pull in.\" She gave me a wink and bailed out of the truck and skipped over to the big wooden gates.\n\nI pulled in and waited until she had us locked in. Jumping back in, she slid back beside me, but not before slipping in between me and the steering wheel and collecting a big kiss. \"I couldn't wait any longer,\" she said as she sat back down beside me. \"We're another half mile or so from the house,\" she said, pointing in the only direction we could go. I put the truck back in gear and rested my hand on her bare thigh. Shifting, Becky soon had my hand captured between her legs and I could feel the heat of excitement. She grabbed my wrist and held me there and sighed audibly.\n\nToo soon, the road widened and a big barn came into view. As we pulled into the clearing, I spotted the main house; a big two story with a front porch and a couple hitching rails out front. On the other side of the clearing was a myriad of fences that made up a small arena and corrals. Half a dozen horses made their way to the fence when they saw us arrive. \"You can park anywhere,\" Becky said as I found a shade tree I could tuck the cab of the truck under.\n\n\"A couple of local boys take care of the horses for Virginia when she's not here,\" she said as I got out of the truck and stretched the kinks out. Becky came around the truck and took my hand and led me to the corrals. She told me their names, which I quickly forgot as I watched her lovingly tend to each horse. I stood there, leaning against the fence when I felt a nudge at my crotch. I jumped back like I'd been snake bit and Becky giggled.\n\n\"That's Don,\" she informed me as I now looked down at the gray muzzle of a curious donkey. \"He was just saying 'Hi',\" she said as she walked over and squatted down to rub Don between his long ears. \"Don's my buddy,\" she said; \"Virginia rescued him from a defunct petting zoo. If I'm here for awhile, I'll let him out and he'll follow me around like a dog.\" She gave him a final scratch; \"Okay big boy, we have things to do, but I'll see you before I go.\" The donkey answered with a loud bray in protest as Becky led the way to the barn.\n\nJust inside the door, she stopped and washed her hands in a big sink and then opened a refrigerator sitting next to it. \"Oh good, remind me to give them some apples before we leave, okay?\"\n\nI didn't answer as my mind tried to take in the interior of huge structure. Not near as big as my own warehouse, but architecturally, it was more than a barn really should be. Giant timber trusses spanned the building. A large hayloft made up the upper level on the far end of the building with what I assumed were tack rooms and general storage below. Along one side were stalls that connected to the various corrals outside and there was enough space for the horses and Don and at least six more of their friends. \"Virginia figured she might board horses when she retires,\" Becky said, answering my un-asked query. The other side of the barn was evidently the motorized transportation area. There was a fairly new Dodge pick-up, an old flatbed truck, a newer looking John Deere 4-wheel rig called a Gator and a couple of older tractors. Once again keying on my interest, Becky chimed in, \"The Gator is my favorite; we'll be taking it out later,\" as she took me by the hand and led me toward a set of stairs that led up to the hay loft.\n\nA little bell went off in my head; \"Wait a sec,\" as I let go of her hand, \"I forgot my camera; I thought I might take some reference shots while we're here.\" I sprinted back to the truck and grabbed the Nikon from the backseat. Back in the barn, I looked around but Becky was nowhere in sight. \"Becky?\" I yelled.\n\n\"Up here,\" she yelled back. I followed the sound of her voice upward and spied her standing against the rail at edge of the loft. Light filtered in through small skylights, lighting the golden bales of hay stacked high behind her. I brought the camera to my eye and she instantly began to pose, changing it up every few seconds. A dozen shots later, I lowered the camera; \"One more,\"\" she said. I looked up and watched as she untied and unbuttoned the shirt and dropped it beside her. Carefully, she stepped up on the middle board of the guard rail and leaning on the top rail, she spread her arms wide like she was going to fly. Artistically, it was an okay shot. The subject matter was great, but the denim skirt and the boots were kind of distracting.\n\nI took a couple shots, but she couldn't move around much, balanced on the rail as she was. I lowered the camera once more, ready to move on with the tour; \"Hold on, one more,\" she said as she stepped down from the rail. I took the moment to check the shots on the back of the camera; \"Okay,\" she said and I looked up to see her in all her glory, standing on the top rail, naked as a jay while she held onto a rope connected to an overhead pulley.\n\n\"Jesus, be careful,\" I shouted, torn between taking the shot or running up the stairs to get her off her precarious perch. \n\n\"I'm okay,\" she said from high above; \"If I fall, you can just catch me. So how does this look?\"\n\nI now concentrated on the shot and it was hot. The light behind her glowed and enough light fell on her front to cast small shadows under her breasts and her pussy was seductively shrouded but for a glimmer reflecting off the nectar that seeped out her girlish slit. \"Can you safely sweep your hair over your shoulders,\" I asked as I snapped shot after shot. Before I knew it I'd taken another twenty or more shots, but still worried, I shot up the stairs, three steps at a time. Becky awaited my help, still holding the rope but now facing the wall of hay and straw. I couldn't resist a couple more shots before setting the camera down and rescuing her. Her pussy was conveniently situated at tongue level and I had no option but to sample the redheads offering. I lapped the length of her lips, finishing at the tip of the arrow-shaped landing strip she so artfully maintained above her sex while my hands reached around and grabbed an ass cheek each. Becky squealed as the tip of my tongue parted her pussy. Holding tight to the rope, she swung her legs over my shoulders and then leaned in and grabbed the back of my head. Her confidence in my sense of balance strengthened me and I stepped back from the rail and turned, heading toward a pallet of bags of grain I'd spotted as I'd rushed onto the loft. \n\nFlying blind, I bumped into the pallet with my knees. I leaned in a bit and feeling the top of the stack at about my belt line, I felt confident enough to lean in further and deposit my prize on her back. Lucky for her, the bags were a fairly forgiving fabric as opposed to a scratchy old burlap bag. Her chest heaved as she fairly panted with anticipation. Her upper chest flushed red and her nipples looked painfully stiff. The look on her face was a cross between fear and elation, not knowing what was going to happen next but knowing she would love it, whatever was coming her way. \n\nI threw her a curve she didn't see coming; \"Don't ever do anything like that again, \"I barked; a flash of genuine panic shown in her eyes. \"I should spank you good; you scared the shit out of me!\" \n\n\"I'm sorry,\" she squeaked, but I caught a glimmer of passion in her eyes this time as she obediently rolled over and assumed the position, on her knees, butt in the air and shoulders on the sacks of feed. My cock throbbed at her offering. I massaged each round globe for a second and without warning gave her right cheek a pop which sounded worse than it really was. Becky yelped and then moaned as I kissed the reddening area. I repeated the process three or four times until each side had a rosy glow. The moaning was continuous now as I caressed and kissed. Her tight pucker winked at me and her inner lips peaked out as I spread her ass cheeks. ",
        "I'd waited long enough, spreading her cheeks wide and burying my face in her ass. \"Ah jeez...\" she moaned as I lapped at her asshole. I slid my tongue down and slurped up her juices. I teased her clit before moving back up and slipping my tongue as deep inside her delicious cunt as I could. I burrowed in, lapping at her inner walls as my nose probed at her sweet pucker. She was doing a lap dance on my face, squirming as I consumed her. Her pussy spasmed on my tongue as her first orgasm struck. \"Yes, yes, yes,\" she groaned as she bucked my face. I backed off before she knocked me over and she thrust back again, trying to reacquire my tongue. \n\nI gave her another slap on the ass, which only intensified the gyrations. Time for another approach; I grabbed her by the hips and unceremoniously flipped her onto her back. Before she could protest I spread her legs wide and once again buried myself in my work. Driving my tongue inside her pussy, my nose niggling her clit, I slowly introduced a set middle finger to her tight ass. With tongue and finger synced, I worked her until she was babbling, groaning and trying to curse, but the words wouldn't come. In a constant state of climax, I searched for the final trigger that would cause her ultimate collapse. With a mental head-slap, I realized the missing element and let my one unoccupied hand stray up her side and then like a cat pouncing on an unsuspecting bird, I pinched an unsuspecting nipple. \n\n\"Oh you fuck.......\" She cried before she lost her voice to the orgasm that overtook her. I held my place, fingers and tongue dead-still as slowly came back to earth. I finally stood back up and with my hands still on her knees; I stretched my back and neck back into alignment. Her hands grabbed at mine to help her sit back up, her butt still perched on the bags of grain. \"C'mere,\" she said softly, pulling me to her. She pulled my face to hers and gently kissed me, the tip of her tongue tracing my lips. She worked her way outward, licking up her residual juices. \"I thought Britt was about the best pussy-eater I've ever met, but I think you just took the blue ribbon,\" smiling and then kissing me once more. My hands wandered down her back until they rested at the crease between butt and sack. I wedged my way in until she was sitting on my hands. Becky giggled as she rocked in my palms, \"You really are a butt man, aren't you?\"\n\n\"Guilty,\" I replied, giving her cheeks a parting squeeze. \"Well can we see the rest of the place now?\"\n\n\"I guess,\" she said with mock dejection. \"You wanna grab my clothes for me?\"\n\nI took the couple steps back to the pile of clothes next to the rail and picked up those and my camera. Turning back to her, she looked so cute, almost innocent, sitting there naked on the pallet of white sacks. Her legs hung down and were spread just enough to give a teasing glance at her wet sex. Her taut tummy and firm c-cups led my eyes up to her angelic face, bracketed by her long red locks. I tucked her clothes under my arm and took a couple more shots.\n\nI helped Becky get dressed, slipping her boots back on as she stuck her legs straight out. Jumping off the pallet, she stood there naked but for the boots and I couldn't hesitate taking a couple more shots as she struck numerous poses, some seductive and the remainder just plain silly. \"So what are you going to do with those pictures?\" she asked as she shimmied back into her skirt and slipped her arms into her shirt.\n\n\"Just add them to my private collection I guess. Do you want copies?\"\n\n\"Sure,\" she said, tying her shirt under her tits, neglecting the couple of available buttons. \"So you suppose I could help you edit them?\" as she picked up her panties, contemplating them before stepping forward and tucking them in the front pocket of my jeans. \"Here, would you keep these for me; I won't need them for awhile,\" she smiled and then leaned up and gave me another kiss.\n\nTaking my hand once more, she led the way back down the stairs and walked over to the John Deere rig; \"Here, let's take this,\" sliding into the passenger seat. \"Ohh,\" she squealed, \"the seats cold,\" wiggling her naked ass on the vinyl to warm it up...lucky seat.\n\nI slid into the driver's seat and it fired right up. I pulled it out of the barn and stopped, awaiting directions. \"First, let's grab the cooler out of the truck and then we'll continue the tour. There's some bottled water in there too; I need to replace all the liquid you licked out of me,\" she giggled once more.\n\nI just shook my head as I loaded up the cooler and handed her a water; \"So where to next?\"\n\n\"Well, you've seen the inside of the barn and the corrals, so maybe we should look at the back of the barn; there's some nice trees back there and then we can check out the house. After we've looked over this area, we'll take that road,\" pointing to the south,\" and that'll take us to the original barn and farm house. There's also a nice pasture that should still be pretty green and then there's the lake.\"\n\n\"A lake?\" I asked as I maneuvered the four-wheeler around the barn.\n\n\"Yeah, I call it a lake; maybe it's just a pond. I wonder what the difference is between a lake and a pond?\" she asked as I stopped the Gator and took in the landscape. There was a beautiful stand of native oaks that let filtered light through, casting shadows on the leaf litter below. A pair of squirrels played on the ground, chasing one another from tree to tree.\n\n\"This will be a nice area if we catch the light just right,\" I said, as I picked up the camera and snapped a couple shots. Handing Becky the camera, I fired the rig back up and turned toward the main house. It was a nice two story place with the big front porch and a deck out back that reached out toward a stream bed that probably ran pretty wide when it rained. For now, a soft trickle made a pleasant sound. \"Go ahead and take a couple shots here, will you?\" Becky smiled at me and then held the big camera to her eye and squeezed off a couple of shots.\n\n\"How are they?\" she asked, handing me the camera.\n\n\"Here,\" I said; \"you just push this and then these arrows let you toggle back and forth.\"\n\n\"Cool,\" she said. \"I think that's in focus; the screen is kind of small.\"\n\n\"They're just reference shots, so it's not that critical. See the button with the magnifying glass? You can zoom in and move the picture around with the arrows if you want to check focus. So where next?\"\n\n\"Oh,\" she said, interrupting her studies of the back of the camera. \"Just down that road; we'll go see the old barn and house,\" still studying the camera.\n\n\"Okay,\" turning the Gator around and heading toward the old homestead. The 4-wheeler road pretty smoothly and the dirt road was in pretty good shape. I took my time, looking right and left, envisioning shots.\n\n\"Oh my,\" Becky gasped and I looked around to see what I had missed seeing. Not seeing anything except more of the same, I glanced over at her to see her fingers flying over the zoom button and the directional arrows like she'd owned the camera for years. \n\n\"What?\" I asked, keeping one eye on the road.\n\n\"Oh, well...I was just looking at the pictures you took in the barn and well, uh, well, uh, I look...well...\"\n\n\"You look what? Hot, sexy, beautiful, cute, innocent... what?\" I asked.\n\n\"Well all the above, I guess,\" she said softly as she continued to scroll back and forth. \"How do you do it?\" she asked. \"I mean, I just stood there, or whatever, but you made me look... well, so different.\"\n\n\"Well first off, it's not me, it's all you. I'll take some credit for the composition and the lighting, but the real beauty is all you babe.\"\n\n\"Yeah, well when I looked in the mirror this morning, this isn't who was staring back at me,\" she said, laying the camera in her lap and then reaching over and squeezing my thigh. \"Okay, around this next curve, you'll see the lake.\"\n\nSure enough, after the long sweeping turn, we were facing the small lake, or large pond, depending on the definition. Trees dotted the shore line and a large green pasture ran up to one edge of the water. A small dock also ran out into the lake with a rowboat tied up to the side of it. \"Beautiful,\" I said as I stopped and took it all in.\n\n\"Yeah, it's one of my favorite spots,\"\" she sighed, her hand still on my leg. \"I've only done it a couple times, but I love skinny-dipping in the lake. It's real private, so you don't have to worry about anyone seeing you,\" her hand working its way up my leg. She found what she was looking for and gave a little squeeze; \"Not much further,\" she said, so I fired it back up, her hand still hanging on. \n\nA few hundred yards more of winding and meandering and we found ourselves in a little valley. Tucked tightly in the crease sat an old barn, leaning heavily to the left. It seemed to be held up by a giant oak that refused to let the old structure die completely. Off to the right and more in the clear was the old cabin, not much bigger than a two-car garage. The top couple of feet of the cobblestone chimney had fallen off and the front door hung askew while the windows surprisingly still retained the bulk of their glass. Any paint that had been on the lap siding was long gone and the weathered gray blended nicely with the green backdrop of the tree covered hill that sat behind the old home. \n\nI killed the engine once more and stepped out onto the blanket of small grasses that had worked their way through the layer of compressed decomposed granite. Without asking, Becky came up beside me and handed me my camera. It was dead quiet except for the rustling of the leaves and the chatter of the squirrels and chirping of the birds. Added to the silence was the artificial sound of the shutter of the camera as I stood in one spot and shot a 360 degree panorama, capturing the stunning redhead in one of the shots. I lowered the camera and just stood there for a moment, studying my surroundings and Becky stood silent, watching me.\n\nI finally felt her stare and I turned to her. She had a hopeful look on her face, as though looking for approval or something. It finally sunk through my thick skull that she had suggested this as a possible shoot location and was probably waiting for my appraisal. I walked the couple of steps over to her and wrapped one arm around her bare waist and pulled her close. I stared straight ahead and she stood silent, staring in the same general direction; probably wondering what the hell I was looking at. \"It's perfect; I could live here,\" I said and I felt her body relax and a small sigh escape her lips. \n\nI turned and kissed her cheek before she turned and locked her lips on mine. \"I'm glad you like it, \"she said and then taking my hand; \"shall we see if the house is move-in ready?\"\n\nI laughed as we walked hand-in-hand toward the little shanty; \"Well, it's going to need a little work I think.\" I cautiously stuck my head in around the front door. Dark and dank, it looked to be completely empty. \"I think the bathroom may need a little work,\" I kidded; also testing her a little, but she was quick.\n\n\"The outhouse was over there, I think;\" pointing to a pile of boards in an area between the house and the barn and the only patch of flourishing greenery other than the surrounding trees. \n\n\"Yeah,\" I agreed, \"It looks like that area is pretty well fertilized.\"\n\n\"Ewww,\" she said, wrinkling up her nose. \n\nWe waltzed over to the barn and I decided to heed Ginny's advice and simply admire it from the outside. \"I love this, \"I said; \"there are so many textures and shapes and the muted colors are beautiful. I can see a lot of shoots here other than those for your aunt. Do you suppose she'd let us come back and shoot other jobs here?\"\n\n\"Oh, I think that can be arranged,\" Becky said, squeezing my hand. \"I think Virginia has taken a shine to you, so I don't think it would take much convincing to let you come back.\n\n\"Well I'd definitely want to compensate her somehow,\" I said.\n\n\"Well, you better watch yourself,\" Becky said as she led us back toward the Gator, \"she's a pretty savvy businesswoman and has been known to enjoy bartering occasionally. I saw her checking out your butt the other night. I wouldn't be surprised if she came on to you.\"\n\nI started coughing; caught off-guard by her comment. \"Are you okay,\" patting my back, like that was supposed to help me get my breath back. I looked up at her and she read my mind; \"Unnhh?\" she gasped; \"she already did, didn't she? Virginia already hit on you. I told Britt that she'd probably go all 'cougar' on you, but I was just kidding. When did she do it? What did she say?\"\n\nI was still trying to get my act together and I grabbed the bottle of water from the Gator and took a big pull. Becky waited patiently until I was back to normal; \"So, did my aunt really make a move on you?\"\n\n\"Well, I don't know if you'd really call it a move or not, but there were some verbal cues if you will that might be interpreted that way; but then, maybe it was just all in jest.\" There, I thought, bullet dodged.\n\nBecky stared long and hard until her eyes suddenly grew big and she inhaled sharply; \"She was fitting you for jeans, wasn't she? Did she happen to need to measure your inseam?\" I didn't answer right away, but I knew she knew when she stepped up and placed her hand on the growing bulge in my jeans. \"I knew it,\" and then kissed me hard, her tongue dueling with mine as she ran her hand up and down my growing length. \n\nBy the time the kiss was done, Becky was laughing, but still held her hand in place; \"I'm gonna have to talk to her and set some ground rules I guess. I love my aunt and all but nooo...not gonna happen,\" and she gave a little shiver.\n\nEager to change the subject, I asked, \"So are there any other spots that you think would make nice backdrops for us?\"\n\nLetting me off the hook, she stepped around the Gator; \"Let's go check out the lake. I have a favorite picnic spot there where we can have lunch, okay?\"\n\n\"No arguments from me,\" I said, sliding back behind the wheel and turning back toward the water. We ran along the tree line until we came to a pasture-like clearing. At the water's edge was the old wooden dock. Long in need of repair, it had a similar character to the old barn and cabin. \"That's nice,\" I said, pointing in that direction.\n\n\"Yeah,\" she smiled, happy with my approval. \"There, that big oak up ahead, that's where we're going.\"\n\nBig oak indeed; one of the biggest trees I'd seen on the property. It had a massive canopy that provided shade and a home and market for a community of squirrels and birds. I pulled up under the fringe of the mighty tree and was consumed by the peace and tranquility that washed over us once I turned the ignition off. I just sat there for a minute and let it soak in. Becky gave me a minute and then slid out of her seat and grabbed the blanket out of the back. \n\nAs Becky was spreading out the blanket on the leaf cushioned ground, I got out and grabbed the weighty cooler once more. I stared up into the tree as I walked toward the blanket; \"I see why this would be one of your favorite places. I think everyone needs a place where they can feel at rest and take a little time to regenerate, ya' know, kind of re-group and get your head straight.\" I sat the cooler down on one corner of the blanket and turned to her,\" C'mere,\" I said, crooking my finger and beckoning her to me. With a sheepish grin, Becky kicked her boots of and walked barefoot across the blanket, into my arms. I hugged her tight; \"Thanks again for bringing me here,\" I whispered in her ear. My hands wandered her bare lower back and pulled her tighter yet.\n\n\"You're more than welcome,\" she whispered back, her hands in my back pockets, holding me in place. We turned our heads and our lips met for an extended kiss; not the voracious, tongue dueling kiss, but a more passionate, loving kind of kiss. Regardless of the type of kiss, my lower regions responded and Becky did to, grinding away. The sound of a couple squirrels chattering overhead broke our concentration. We both glance up and spotted the pair, looking down at us.\n\n\"Well,\" I said, \"they are either jealous or they're waiting to see what's for lunch.\"\n\nBecky laughed as she let go of me; \"Maybe we'll give them something to be jealous of later, but right now, I think we should have some lunch.\" I caught a little sparkle in her eye as she turned back to the cooler. Bending at the waist, her short skirt rose up till the bottom of her butt cheeks peaked out. I gave an appreciative whistle. \"You could help, you know,\" she giggled, holding a Tupperware container out to her side.\n\n\"Yes Ma'am,\" quickly moving up next to her. I gave her bare cheek a quick caress before taking the offered container. She let out a little moan before handing me yet another container, and then another. \"Who else are we feeding?\" I asked, now balancing four stories of food.\n\n\"Just us,\" she answered; \"sit those down and I'll get the rest. Do you want a beer or I have some iced tea?\"\n\nI sat the containers down and then sat down myself. From this level, her long shapely legs seemed longer yet and a bit more of her beautiful butt was in view and in the gap, her girlish slit shined. \"Uh,\" I stuttered, \"maybe I should stick to the tea. I've got a feeling it's going to be hard enough to pry myself away from this spot. If I have a beer, I'll probably be out like a light.\"\n\n\"You don't think I'm going to let you nap do you?\" she said suggestively. She glanced over and I caught the glint again; \"you could go ahead and relax a little and take your boots off.\" I obeyed as she brought out the drinks and some plates and napkins and sat them next to the food. \"There,\" she said, sitting down on her knees and opening the various containers. It was a finger-food feast of sliced meats and cheeses along with some French rolls and strawberries and grapes. \n\n\"Looks good,\" I said, taking the plate she handed me. \"Thank you for doing all this,\" gesturing to the food and the horizon; \"I can't think of where I'd rather be right now.\"\n\n\"Ah, well you're welcome and thank you,\" leaning over and taking a kiss. Rearranging herself, Becky laid on her side, propped up on one hand and elbow, her long legs pointing toward the water. Her skirt rode high, offering a view that rivaled the still waters beyond. We laid parallel, eating and talking about nothing in particular. A couple of the braver squirrels approached, inching closer as Becky lured them with scraps of bread. Lunch over, I lay on my back and gazed up at the labyrinth of limbs above. Becky gathered up the remains of our meal and put them back in the cooler and then joined me. Side by side, we stared up to watch the squirrels back overhead, scampering from branch to branch. I took her hand and brought it to my lips and kissed it. She snuggled closer until we gave in and I pulled her on top of me and we kissed. \n\nMy hands sought out her ass as we moaned into our kiss. My fingers parted her cheeks as a breeze came off the water, the coolness washing over her hot sex, causing her to jump in my hands. Becky pushed herself up, straddling my belly. I reached up and untied the knotted shirt, exposing her perfect breasts once more. I ran my hands up her sides, over her tits and then under her arms before lifting her up and setting her beside me. Jumping up, I pulled my shirt off as she worked to unbuckle my belt. I watched as the redhead concentrated on getting my jeans and boxers down around my ankles. My cock sprang free, bouncing in the cool breeze.\n\n\"Step out,\" she said softly as she held my jeans and boxers down on the blanket. I obeyed, stepping out of each leg, careful not to fall on my ass. Becky giggled as I stretched my arms out to balance myself. I stood there wearing nothing but my birthday suit, hard-on bobbing up and down as I watched with some impatience as Becky studiously folded my clothes and sat them to the side. Back to the subject at hand, on her knees, she took me in her right hand and held me firm as she studied my manhood closely. Lifting and shifting, left to right and then back again; running a fingertip up and down the length and then tracing a circle around the shaft where the crown started. My cock lurched as she stroked the bottom of my cock at the base of the mushroom-like cap. She smiled and then placed a soft kiss on the tip.",
        "Looking up with big doe eyes, still firmly holding my dick, she said softly and with a tone of reverence, \"It IS perfect!\" And with that she pressed it to her lips and took me in. Her lips were velvet-smooth and her tongue soft and playful. In minutes, I couldn't have been any harder and she slowly drew me out through tightly pursed lips as she looked up at me. Her green eyes spoke volumes which she affirmed vocally as the head of my cock regrettably slipped between her lips; \"Love me, please,\" she whispered hoarsely.\n\nI leaned over and kissed her as I slowly lowered her onto her back on the leaf litter cushioned blanket. Becky helped with her skirt as I drew it over her hips and up her long legs, her feet resting on my chest. Now properly naked, me upright on my knees, her on her back, legs up and resting on my torso. She playfully tried to catch my erection between her toned thighs, but was soon wrestling to escape as I had her by the ankles with my tongue tickling her feet and toes. The giggling stopped as I slowly spread her legs apart, shoulder wide. I caught her eye and hers followed mine as I took in the sights before me. Her breasts rose and fell with each breath, nipples erect. Her abs were tight and I swear her belly button gave me a teasing wink. She drew in her breath and held it as I gazed at her delicate flower, her inner petals peaking out in anticipation. In one fluid motion I was on my belly, her legs over my shoulders and my mouth firmly attached to her wet sex.\n\n\"Ah Jeez...\" she moaned to the squirrels peering down at her from the branches high above. For the second time that day I enjoyed her delectable pussy; a sweet peach for dessert. Becky allowed me to linger for a bit before reaching down to me. Her long fingers in my hair, she tugged; \"Come here;\" she insisted, spreading her lower limbs further to let me pass. I slowly made my way, kissing and nibbling as I went. Between her legs, on my knees and my hands beside her, she reached up around my neck and pulled me in for a deep kiss. Her legs wrapped around me and pulled me down on top of her, grinding her hips in hope of a connection. Frustrated, she pulled my head beside hers and growled in my ear; \"Fuck me George...I want to feel your cock inside me again...please,\" pleading. \n\nNow I felt kind of bad, I couldn't recall ever having had someone beg me to fuck them. By rights, it should probably have been the other way around, but I intended to make the best of it. I pushed myself back up on my knees and with her legs spread wide, I grabbed my cock and teased her pussy; \"Is this what you want baby?\" the tip of my cock slipping up and down between her slick inner lips.\n\n\"Yes,\" she hissed and then sucked in her breath as I nudged her slit with my slick sword. \"Please baby,\" she gasped as I let just the tip slip inside her tight portal. I held it there as she tried to plunge her hips downward. I held her at bay, as I stared down at the wondrous sight of her lips sucking on my cock head. A chattering above distracted me and I glanced up to see the pair of furry voyeurs.\n\n\"Someone's watching,\" I said jokingly. She wasn't laughing.\n\n\"Fuck 'em,\" she growled as she thrust her hips at me once more. \"Fuck them and fuck me...Give me your cock!\"\n\nHer insistence made my cock throb and I slowly I made my entrance, lowering my hips and advancing. \"Oh yeah,\"' she moaned at about the halfway point and I stalled just long enough to straighten up and prepare for the final push. Taking hold of her wonderful legs once more, I rocked her back until her butt was off the ground and her love tunnel and my cock were in perfect alignment. Looking up at me, she bit her lower lip and then looked down at our connection. I too looked down and watched as I slowly made my way. \"Ohhh...so big,\" she moaned as her pussy walls hugged me tight. Her hands held my hips as she coaxed me deeper inside her. Her tight pussy walls were slick and warm; \"So full,\" she moaned. I stalled briefly to let her acclimate, and myself for that matter. Her nails dug into my hips; \"All of it baby,\" she whispered. \"I want to feel you fill me completely.\" \n\nI obliged cautiously, inching my way until I was balls deep. \"Oh god,\" she shuddered as I gave it a little thrust to make sure I was parked completely inside her constricting cunt. I lowered myself downward until our lips met and we tongue-fucked each other's mouths as our dirty bits played. Her pussy undulated in response to my cock swelling as I clinched. \"Fuck me,\" she mumbled as we continued our oral lovemaking. I rocked my hips as she did the same, our groins parting just enough to let us slam back together. \n\nA layer of sweat formed between us and I pushed up and a chill washed over us as a cooling breeze slipped between her and I. I shivered, my cock joining in and she squealed and tried to pull me back to her. \"Un unh,\" I chastised her as I pushed myself up, arms and back straight, ready for some push-ups. Her eyes grew big as I buried my cock to the hilt in one smooth move and just as quickly withdrew. My cock was slick, just the head still hidden within.\n\n\"More,\" she said with a pleading look. \n\n\"Gladly,\" I answered and set a cadence. Becky moaned and gritted her teeth as she lifted and rocked her hips, testing a new spot with each cycle. After a dozen strokes, she found her spot and held it for just a few more; \"There...there...there,\" she panted until her pussy clinched and her orgasm rolled up through her pussy, ebbing into her tight belly, rippling to her belly button. I paused to let her recover; she smiled, eyes closed and hummed in satisfaction. Slowly she opened her eyes and mouthed 'wow'. \n\nI leaned down and kissed her once more as I slowly buried myself and reaching under her back, I rolled to mine. Becky squealed as she held on tight and found herself on top, still impaled. \"Your turn,\" I told her, my hands sliding up over her glistening torso until I had two hands full of firm tit.\n\n\"Oh yeah,\" she groaned, eyes closed once more and gyrating. My cock stirred her pussy as I mauled her breasts. \"Your cock feels so good in my pussy baby,\" she said out loud, her eyes still closed; her long red locks draped haphazardly over her shoulders and face. The pair of inquisitive rodents above chattered back and forth.\n\n\"I think they're talking about us now babe,\" as I brought my hands down to her waist, giving her a hint. \n\nShe was quick to catch on as she moved her legs until she was squatting on my cock. I offered my hands to her and she laced her fingers in mine, palm to palm; \"I'll give them something to talk about,\" she smiled as she lowered herself down and then back up. I watched as she made my stiff cock appear and disappear over and over. \"Where does it all go?\" she asked. I looked up to see her smiling at my raptured concentration.\n\n\"You little...\" I said as I grabbed her around the waist and pulled her down on top of me. She laughed and then moaned as I slipped out of her. I hugged her tight and kissed her as we rolled around on the blanket. I was glad for the reprieve because I don't think I could take much more before I popped my cork and I was enjoying myself too much to let it end that soon. On my back, I held her tight and ran my hands over her backside. She began to relax and dropped her head beside mine and purred in my ear. \n\n\"The sun feels good,\" as it found its way through the canopy above and warmed her back. \"Here,\" she said as she rolled off and lay beside me, the sun now warming both our fronts; \"Doesn't that feel good?\" she asked. Her question coincided with her hand finding my half-stiff and sticky cock, so I wasn't quite sure how to answer.\n\n\"Your hand or the sun?\" I asked as my own hand crept toward her pussy.\n\n\"Either,\" she answered in a low moan as my middle finger parted her moist slit. We lay there for a couple minutes, just teasing one another; testing to see who would break first. My cock was at full mast and drooling while her pussy lips panted as my fingers played amongst the petals. \n\nI finally won the battle; \"Enough!\" she barked as she rolled over onto all fours, facing the water. I just lay there, taking in the sights. Her perfect ass cheeks flanked an anxious pussy, lips wet and wanting. Dropping down to her rest her head on the blanket, she reached back with both hands and spread her cheeks while glaring back at me. Her pussy lips gaped and an inviting entrance magically opened. Perched just above was her puckered star, pulsating as her breathing became more labored. I watched, entranced as two long fingers on one hand slid between her distended pussy lips before plunging into her eager pussy. Becky moaned, still staring at me as she fingered herself slowly. The tone of her moan changed and I glanced up to see a finger from her other hand burrow itself into the sweet pucker that was her ass. Finding a rhythm, she closed her eyes and pleasured herself for me. I could feel my heartbeat in my cock; it was time to join in. \n\nOn my knees, I crawled up behind her and got a closer view. The only sound was a gentle rustling of the leaves above and the obscene slurping sound of her fingers working over her pussy and ass. I slowly leaned in and put a hand on each ass cheek and spread them wide enough to accommodate my face and tongue. The moaning increased as my tongue worked over any place it could get to. Licking fingers as they slipped in and out, tonguing her taint when I could sneak in. \n\nMy cock reminded me why we were there and I agreed; it was time. I straightened up, still on my knees and took hold of the wrist attached to the hand and fingers that were still hard at work in her perfect pussy. She groaned in protest as I snaked her arm out of under her and brought her fingers to my mouth. Her other fingers, two now, continued to rock her ass and I inched closer until my dick was aligned with her open snatch. With intentional precise timing, I took her two pussy soaked fingers in my mouth and sucked mightily at the same time I slipped my cock inside her, slipping effortlessly to the hilt. \n\n\"Fuuuckkk meee!\" she cried as her pussy clinched my invading cock and another orgasm rolled up and down my length. Pleased with the outcome, I released her hand and grabbed her hips and slowly withdrew, just leaving the tip in and then buried my cock once more. I could feel both fingers in her ass against my cock, and as she moved like she was going to withdraw them, I hurriedly grabbed her wrist to stall her move. She wiggled her fingers and I thought I'd bust my nut right there and she moaned as I pushed her hand tighter to her ass. \n\nMy cock throbbed as I continued to fuck her tight pussy, staring down at her fingers and my cock buried deep within her. Becky struggled to push herself up on one hand and twisted to look back over her shoulder. Looking through strands of sweat-soaked hair she glared at me; \"Bet you'd like to fuck that ass, wouldn't you?\" I replied by pushing my cock deeper; she winced as my cock pushed at her cervix. \"Britt said I should let you fuck my ass...says it feels fuckin' fantastic!\" My cock throbbed again as I continued to abuse her tight sex. \n\nBecky whipped her head, trying to get the hair off her face, moaning she kept stroking her fingers in and out of her ass, trying to pinch my cock through the thin inner walls. Her pussy rippled over my cock as another orgasm rolled though her. \"Oh God...\" she moaned as she rocked to stay upright on her one extended arm. On impulse I let go of her wrist and reached out and grabbed the only thing within reach; her hair. Becky did what she had to do and caught herself with her now freed hand, again now on all fours. We both paused a split second to adjust to the new arrangement. I had a hand full of red hair and a lonely cock. I stared down at her gaping asshole and debated on what to fill it with. As I was contemplating my dilemma, I pulled back on her hair and her pussy squeezed my cock and she moaned, pushing back; \"Fuck yeah, ride me cowboy!\"\n\nNow was not the time to get cute; my cock had taken about all the teasing it could handle and I was ready for the grand finale. I gave her a quick slap on the ass and reined her in, pulling back the handful of ginger hair, my balls slapping her clit. Becky bucked as she whimpered \"yes...yes...yes...fuck my pussy...fuck...fuck...fuck!\" I held on tight, pulling on her hair with one hand, the other grasping her hip. The cool breeze had stalled and the sweat rolled down my brow, dripping off my nose. My chest hair was soaked and I could feel the sweat running down my back into the crack of my ass. I had to cum soon or pass out. Becky was in a state of constant orgasm and she too was about at the end of the ride.\n\n\"Cum for me baby,\" she stuttered; \"Fill my pussy, I wanna feel your cock fill me...ahhh!\" as another orgasm took hold. I continued to plunge in and out of her slick snatch, the wet squelching sound echoed around us.\n\nFinally, I felt it deep inside; balls tightened and I pulled back once more. \"Oh baby,\" the redhead pleaded, looking over her shoulder. I happened to glance down just as I was ready to make my final drive and there was her asshole, crying out for attention. Becky's eyes grew large as she looked back and felt my thumb slip deep into her ass as I drove my cock one last time into her convulsing cunt.\n\n\"OH FUCK!!!\" was the chorus as our climaxes synced. I let go of her hair and wrapped my arm around her waist as my cock spewed time and again, filling her to the brim and I held tight as her pussy strangled my cock, wringing out every bit of cum I had to give. I'm not sure who was holding who up, but we managed to stay upright, catching our breath as the breeze picked back up once more. We shivered as we stayed locked together, the occasional aftershock making us jump and giggle. \n\n\"I don't think I can move,\" I said as I lay my head on her back and hugged her. I wiggled my thumb in her butt and she moaned, squeezing my cock in return.\n\n\"I wish Britt was here,\" Becky said, willing her pussy to suck at my overworked dick. I managed a questioning 'huh?' \"I'd have her suck your cum out of my pussy the way I did to her in the dressing room that night.\"\n\n\"Ah fuck,\" was my response as my cock lurched and unloaded one last round inside her.\n\n\"Oh yeah!\" she squealed with laughter as her pussy responded one more time.\n\nI was done, rung out, ridden hard and put away wet...whatever. Releasing my hold and with the grace of a drunken frat boy, I collapsed behind her, thumb and cock wrenched free and without forethought.\n\n\"Aww,\" she moaned, now feeling empty and cold. I mustered enough strength to reach out and coax her to lie down beside me and we wrapped our arms around each other and drifted off to sleep. \n\nThe nap was a short one, interrupted by the cooling breeze and the constant racket of the squirrel family above us. Becky shivered and pulled my arms tighter to her chest, wiggling her butt on my crotch. I threw one leg over hers and drew her in tight and she hummed happily. \"It's later than I thought,\" she said, noting the sun low above the surrounding hills.\n\n\"Yeah, we better get a move on,\" I replied, only hugging her tighter and nuzzling her neck. \n\nBecky giggled and rocked her hips some more, trying to get a rise out of me, but another cold gust came off the lake and I made the command decision that it was indeed time to leave. \"C'mon sweet cheeks,\" I said as I rolled back and gave her a little slap on that perfect butt; \"we need to head for the barn.\"\n\n\"Okay,\" she moaned as she stood up cautiously. I too took my time to get realigned as I stood, stretching for the limbs above. \"Eww,\" she said and I looked over to see what elicited that remark. My cock jumped as I watched her rake the inside of her thigh with two long fingers, gathering the mixed concoction that seeped out of her pussy. She brought it to her lips and licked her fingers clean as she looked me in the eye. My cock responded and she smiled as she took another swipe of our excesses; \"Want some?\" she offered, holding out her hand. I don't think she really thought I'd take her up on her offer, but her eyes grew large when I stepped up to her and sucked on her fingers one at a time, my eyes locked on hers.\n\n\"Oh god George,\" she shivered as she stared at her fingers in my mouth, \"my pussy's wet again.\" My hand dipped down for confirmation and sure enough her pussy juices had welled to the surface once more. I slipped on finger in to check the depth and she quickly grabbed my wrist with her available hand. \"No more,\" she whimpered; \"I don't think I can take another orgasm right now.\"\n\nI withdrew her digits from between my lips and pulled her tight to me. My nearly rigid cock poked at her belly as I took her lips to mine and we kissed long and hard, our tongues taking over the lovemaking. Her hand found my cock as my finger lingered in her cunt and we moaned in our kiss. Any longer and we were destined to a repeat performance, but another chilly gust brought us to our senses. \n\n\"Okay, okay,\" she said, releasing me. \"I so want to fuck you again,\" she said, her forehead against mine, eye to eye, \"but it's gonna be dark soon and I need to rinse off.\" And with that, she broke free and laughed as she sprinted toward the lake. I blindly followed, hard-on leading the way, not giving a thought as to the impending water temperature that awaited. \n\n\"Ah shit,\" I said as I tried to slow before my junk was submerged in the freezing waters. Becky turned and laughed as she squatted until she was shoulder deep in the frigid lake.\n\n\"Don't be a baby,\" she said, still laughing as I danced to stay above the waterline; \"just go ahead and get wet, it's not that cold.\"\n\nNot to be outdone by a girl, macho fool that I am, I moved deeper until I was standing chest deep. Becky joined me and gave me a hug; \"see, it's not that bad,\" splashing the freezing water onto my chest. Before I could retaliate, she wisely stopped and I felt her groping for my manhood. Latching on, she gave me a sympathetic look; \"Oh, maybe it is cold,\" and then laughing, she turned and made for the shore."
    ],
    "authorname": "GeorgeDaBuilder",
    "tags": [
        "redhead",
        "ass play",
        "outdoors",
        "girlfriends",
        "pussy"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/everybody-needs-a-hobby-ch-24"
}