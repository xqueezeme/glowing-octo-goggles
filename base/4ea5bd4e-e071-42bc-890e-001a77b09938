{
    "title": "The Senior Center",
    "pages": [
        "There is no sex in this story. It could go in Romance or Mature. It's a story about a young woman who became a nurse in a Senior Citizen Center and a friend she became very fond of. Thank you to Mr. Wolf for editing this story for me. \n\n*\n\nChapter 1:\n\nMy name is Nina and this story begins when I got the position of being a nurse at a senior living facility. I have to say I was very nervous at first but after awhile I loved my job. I had recently graduated from college with a nursing degree but I still took courses to improve my knowledge and update my skills.\n\nI usually worked the second shift so I helped my guests with dinner and getting ready for bed. I preferred to call them guests instead of patients. I believed they had earned that right.\n\nMost of our guests were here because they were elderly or were unable to live on their own. Their families were too busy and didn't have the time to help them properly. That is when they would move in to our facility.\n\nI loved those people. My story will mainly be about Ben Johnson, a man in his seventies. We became really good friends. He may have seemed grumpy to some people but I found him fascinating and a great story teller.\n\n****\n\nFirst, a little about myself; my name is Nina Moore, I'm twenty-three and recently broke up with my latest boyfriend after catching him cheating on me. To be honest we were friends for two years but only became more serious in the last six months. Before Jake I had dated a few men, but nothing serious.\n\nI spent my time studying and learning my nursing skills. I was an only child and raised by my grandparents. My parents were killed when I was just a child and my dad's parents raised me. I loved them so much. They were a bit more strict seeing they were from an older generation but I did my best to do as they asked.\n\nGrandma was a great cook and because of that I was considered on the heavy side. I didn't date much in school even though I was popular. I was said to have a very bubbly personality. I think that was how my friends told me that I was overweight. I was just a bit chubby and began working on my eating habits and working out when I could find the time.\n\nI needed to get out on my own and had recently got my own apartment. I still stopped by to see my grandparents regularly. To me they were my Mom and Dad. I didn't remember my parents since they died while I was at a young age. My grandparents kept their memories alive by telling me stories about them. I really wish I could have gotten to know them.\n\nUnlike most young people, I find talking to older people a delight. Sure there's the growling and talk of loneliness and pain but there's the other side where they can tell you so much about life and history. I found out all I had to do was listen to them. They really had so much to say and all they needed was an audience.\n\nWhen I first met Ben he seemed grumpy but as we got to know each other better I found out he was really intelligent; he remembered everything. Instead of Alzheimer's like some older people, I believe he had a photographic memory. He told me it wasn't as good as it once was but he seemed to know a little about everything.\n\nWe would talk and he would tell me things. Later I'd go on-line to see if what he told me was the truth or if he made it up. It was always the truth but some things were his opinions.\n\nHis daughter would stop in and see him twice a week. She never stayed very long. Ben said it was his choice to move into the senior center. At his home he felt he was just in the way. At least at the center he had a lot of friends around his age and most still had their sanity; those were Ben's words.\n\nWe would often talk when I wasn't busy with my other guests. Over time I had grown to love this old man. He was so real and was so smart. He had lived in the center for two years. \n\nIt all began when he had fallen and broke his leg. He came to the senior facility for rehab and said that he enjoyed having people around to talk with. When I asked him about his family he told me his daughter married the neighborhood banker. Eventually he became the president of the local bank.\n\nHe had one grandson, Rob, who was in the service and stationed near Iraq. He told me that he and Rob were best friends and did everything together. He taught him how to hunt, fish and took him everywhere with him.\n\nAfter Rob graduated from high school he chose to go in the Air Force and signed up for four years. He came home twice on leave to see his family. It was before I started at the center. He had less than a year to go before coming home for good or he could re-enlist, Ben was hoping he wouldn't re-enlist as he really missed his grandson. You could hear it in his voice when he talked about Rob.\n\nBen told me how proud he was of Rob and that he flew to San Antonio, Texas to see him graduate from basic training and spent a few days with him. Rob was the one really bright spot left in his life.\n\nI talked to some of the other nurses and they told me that Ben was a very rich man. He turned over much of his estate to his daughter and put some money away for his grandson. I found out that the mansion down the road belonged to the Parsons family. That would be Ben's daughter and her husband. It had been known as the Johnson mansion until Ben gave it to his daughter and her husband.\n\nWhen I asked Ben about the mansion, he just laughed. He said life wasn't all about money but what you get out of life. He said Barb, his daughter, and her husband John were good people but all they ever talked about was finances. They were worried a lot about their image in the community.\n\nRob on the other hand was more like Ben. At least that's what Ben said. Rob was intelligent and wanted to get away on his own for awhile. That's why he joined the Air Force. Ben showed me post cards that he received each month from his grandson.\n\nMany years ago Ben was a Marine and had fought in Vietnam. He told me, \"Once a Marine, always a Marine\". It was a part of his life that he preferred not to talk about. He did talk about his good times in the service but not Vietnam. He said he lost too many close friends and it was a low point in his life.\n\nAfter returning from the service, Ben said he attended college and studying seemed to come so easy to him. He received a degree in finance in three years and became a stock broker. He ended up marrying his high school sweetheart, Mary, and they had a daughter and a son. His son died in a car accident when he was a teenager. That was another low point in his life.\n\nHe believes that's why he took Rob under his wing. He treated Rob like his son. His wife Mary passed away from cancer four years ago. After that he kind of went downhill. If it wasn't for Rob, he couldn't care if he lived or died.\n\n****\n\nOn to brighter things. I would watch Jeopardy some nights with Ben and I swear he knew all the answers. The nurses told me he always seem to get the answers right. He gets along with most everyone who works at the senior center. What he doesn't like is if someone treats any of the patients like second class citizens.\n\nHe pays for his room and board himself. He doesn't use any social services. I later found out that he donates a quarter million dollars a year to our center. Needless to say if someone wasn't treated nicely, he had the clout to do something about it.\n\nWhat's funny is you wouldn't know his financial situation by looking at him or even talking to him. He is just a nice old guy that treats everyone with respect. He doesn't want to be treated special in anyway.\n\nThey often play cards or other board games at the center and if he wins, he wants his candy bar or other prize. He would say, \"I won it, I want it.\" He can't find anyone to play scrabble or other word games with him; they all know they don't stand a chance. Often times some of the nurses or even office staff will take a chance on playing a game of scrabble with him. He rarely loses, if ever.\n\nHe asked me to play and I told him only if we could use five letter words or less. He laughed and we did play a few games like that. I did go online and found a scrabble dictionary that if you put the letters into it it would tell you all the words you can spell out. Ben laughed when I told him about it and he let me use it.\n\nI've even won a few games. Now other people play scrabble with him also and Ben lets them all use the 'descrambler'. He doesn't use it but says it does make it a bigger challenge.\n\nThe holidays were approaching and he would tell me all these stories from past Christmas's and New Year's. He tells us all how Christmas began and how all the different religions celebrated the holidays. His personal stories of holidays were always interesting.\n\nHe left the center for two weeks and went home for the holidays. I had to say I really missed him. He was actually going with his daughter and her husband over to Germany to meet up with Rob, his grandson. He was so excited.\n\nBefore he left he took a picture of me. I asked him what for and he said he wanted to show it to Rob. I have to admit I was a bit embarrassed but it did make me feel good. He kept a picture of Rob on his nightstand and I do have to say he was a hunk in his uniform.\n\nWhen Ben returned from Germany he was so happy. He even bought me and the other center help gifts from Germany. Most were imported candy, trinkets, and things like that. He handed me a second small package. In it was a silver necklace with my birthstone on it. When I told him \"Thank you\", he said it wasn't from him and he handed me a sealed card with my name on it.\n\nHe said Rob told him to give it to me for taking care of his grandfather. I had to admit it brought tears to my eyes. I had never met Rob but had seen his picture that his grandfather showed me, he was a good looking man and had sent the card with the necklace.\n\n\"Dear Nina;\n\nThank you so much for being part of my grandfather's life. He really likes and respects you. He has had it rough since the death of his wife, my grandmother. It felt so good to see him smile again. He gives you the credit for that, saying you are a joy to be near.\n\nI'll be home for good hopefully in June and hope to meet you. Grandpa gave me a picture of you. I hope you don't mind.\n\nYour friend\n\nRob\"\n\nI didn't know what to say. Ben said he didn't read the card. He hoped Rob wrote something nice. \"It was very nice Ben. Please thank him for me when you write to him.\"\n\n\"Nina, you can tell me to mind my own business but do you go out on dates. You seem to be here most every evening?\" asked Ben.\n\n\"No, I've been bitten more than once and I'm not in a hurry to get bitten again. I like being here and learning so much from the older generation. I know it's silly but I feel more comfortable. During my time off I help my grandparents. Why do you ask?\"\n\n\"Valentine's Day is coming and I was wondering if you had someone special to celebrate it with,\" replied Ben.\n\nI smiled and told him I had nothing special planned. In fact I had to work that evening. I went about my chores and let my mind wander. I did think about Ben and his good looking grandson, Rob. No, it could never happen, Rob was just thanking me for taking care of his grandfather.\n\nOne evening I was sitting with a group of guests when Valentine's Day came up. I mentioned that every February 14, across the United States and in other places around the world, candy, flowers and gifts are exchanged between loved ones, all in the name of St. Valentine. I asked this mature group who is this mysterious saint, and where did these traditions come from? \n\nEllen a lady in her eighty's smile and told us a couple of stories about how she met her husband and how they celebrated Valentine's Day. A number of the guests told stories from Valentine's Day past. It was great listening to all the stories.\n\nEllen asked Ben how he celebrated Valentine's Day when he was younger and instead of telling about his experiences, he explained the legend of St. Valentine and the history of Valentine's Day.\n\nBen began, \"We do know that February has long been celebrated as a month of romance, and that St. Valentine's Day, as we know it today, contains vestiges of both Christian and ancient Roman tradition. But who was Saint Valentine, and how did he become associated with this ancient rite? \n\n\"The Catholic Church recognizes at least three different saints named Valentine or Valentinus, all of whom were martyred. One legend contends that Valentine was a priest who served during the third century in Rome. When Emperor Claudius II decided that single men made better soldiers than those with wives and families, he outlawed marriage for young men. Valentine, realizing the injustice of the decree, defied Claudius and continued to perform marriages for young lovers in secret. When Valentine's actions were discovered, Claudius ordered that he be put to death.\"\n\n\"Ben, we understand that you know a lot of history but we want to know any celebrations that you might remember from your past,\" said June, another guest. \"You must have some personal memories.\"\n\nBen continued, \"There are other stories that suggest Valentine may have been killed for attempting to help Christians escape harsh Roman prisons, where they were often beaten and tortured. According to one legend, an imprisoned Valentine actually sent the first 'Valentine' greeting himself after he fell in love with a young girl - possibly his jailor's daughter - who visited him during his confinement. Before his death, it is alleged that he wrote her a letter signed \"From your Valentine,\" an expression that is still in use today.\"\n\nJune and Ellen were getting aggravated with Ben. Ellen said, \"Ben, we all know some history. I know that Americans began exchanging hand-made valentines in the early 1700s. In the 1840s, you probably didn't even know that Esther A. Howland began selling the first mass-produced valentines in America. \n\n\"Howland was known as the 'Mother of the Valentine' made elaborate creations with real lace, ribbons and colorful pictures known as 'scrap.' Today, according to the Greeting Card Association, an estimated 1 billion Valentine's Day cards are sent each year, making Valentine's Day the second largest card-sending holiday of the year. Also, in case you didn't know, women purchase approximately 85 percent of all valentines.\"\n\nBen started laughing. \"I love you women. You're not afraid to speak up and tell it like it is. I'll tell you a couple of stories that I'll always remember.\"\n\nI looked around and everyone was waiting to hear Ben's story. Ben talks about a lot of things but never much about his past. There must have been ten of us sitting there telling stories.\n\nBen began his story. \"When I was in high school I had a crush on Mary. We did end up getting married.\" I could see a smile cross his face. You could tell he really loved her.\n\n\"Harold Andrews, also liked Mary. I was a bit more shy than Harold so it was hard for me to talk to Mary. I would often buy her chocolate candy and put it on the edge of her desk when we went outside at lunch time. When we would come back in, it was always gone. I knew it was Harold who always took it. He would either eat it or give it to Mary saying it was from him.\"\n\n\"So, what did you do?\" blurted out a smiling Ellen.\n\n\"Well, Valentine's Day was coming up so I bought her an extra large box of individually wrapped chocolate candy. I also bought a box of ex-lax. You know, the kind that helps give you the shits.\" Everyone was laughing, they knew what was coming up.\n\n\"I gently unwrapped each piece of chocolate and rewrapped a piece of ex-lax in each piece of foil and then placed them in the nice chocolates box. When everyone was leaving for lunch I noticed Harold was still in the room. So I acted like I didn't see him and placed the box of chocolates, really ex-lax, on Mary's desk and went outside.\" Ben started laughing.\n\n\"Come on Ben, what happened. Did Harold take the candy? What about Mary? What would have happened if she would have ate the candy?\" asked Ralph, one of the guests.\n\n\"I was in the cafeteria eating my lunch, and just watching Mary at the next table. She kept looking at me and smiling. Needless to say I smiled back; she knew I liked her. A couple of times in the past I asked her if she liked the chocolates I gave her and she told me she only received them from Harold. She asked if I was I sure I put them on her desk? I told her yes and she seemed a bit confused.\n\n\"As I looked at her Harold came in with the box of chocolates I put on Mary's desk. He had opened them and was eating them. He sat down next to Mary and offered her a piece of candy. She looked up at me and I started shaking my head, 'No!' and mouthing don't take any. Harold was playing the macho role and didn't even look at me.\n\n\"Mary started to take a piece and looked at me again. She stopped and told Harold maybe later. A couple of Harold's buddies came over and each took a couple of pieces. It was then that Harold looked up at me and laughed.\"\n\n\"What happened next Ben? Did Harold get the shits?\" laughed Larry.\n\n\"Let me finish the story for Pete's sake,\" replied Ben.\n\n\"When we got back to our classroom I had a heart shaped box of chocolates I gave to Mary. She smiled at me and said, 'Thank you'. She opened it and offered me a piece. I took a piece to let her know it was ok to eat. Harold looked over at us and looked surprised. He raised his hand and asked to go to the restroom. He was followed shortly by his two friends.\n\n\"His buddies made it there in time but Harold didn't. He shit himself and didn't come back to class and was even off the next day. After school I told Mary what I did and why I did it. After staring at me without saying anything, she leaned over and kissed me for the first time.\n\n\"I wasn't afraid of Harold and he never bothered me or Mary again. After graduation I went in the service but Mary and I corresponded all the time. Every Valentine's Day I made sure to give her a heart shaped box of candy. After returning from the service we got married.\n\n\"I still got her a heart shaped box of chocolates for Valentine's Day every year till the day she died. Whenever we ate a piece we were reminded of that one day at school that brought me my first kiss.\"\n\nWe women had tears in our eyes after hearing Ben's story. The guys all just laughed. I do believe that Ben had a tear in his eye also. He tried to blame it on allergies but I knew better.\n\nChapter 2\n\nI talked to my grandfather and told him about Ben at the senior center. My Grandpa, Neil, decided to go visit Ben. He liked to get out of the house once in awhile and away from grandma. I introduced him to Ben and they both hit it off even though they had completely different backgrounds.\n\nThey were both in the service but when Grandpa got out of the service he was a maintenance man at an auto company. He just retired a couple of years ago. One thing they both had in common was they liked to fish. Ben suggested after it warmed up that they could get together and go fishing.\n\nGrandpa told him he liked fishing even when it was cold as long as the lake wasn't frozen over. They agreed to go fishing the following Saturday. When I talked to Ben he said he really like my granddad. In fact granddad was going to stop by a couple of times a week to visit Ben and they were going to play chess and checkers. Granddad was good at both.\n\nAfter that when I would see Ben at work he just seemed happier. I was happy for both he and Grandpa. Grandma would often bake something for Grandpa to take with him to the senior center. I did let her know that Ben was diabetic and had to watch his sugar intake. He shared the baked goods with everyone.\n\nOn Valentine's Day Ben had his daughter pick up about a dozen boxes of candy to pass out to the nurses and a few of the other guests. He gave me a big heart shaped box and said it's what he used to give to his deceased wife Mary. I did ask him if the candy was ok to eat remembering his story. It made him laugh.",
        "Life went on and before I knew it, it was June. Granddad was still visiting Ben twice a week and they would go fishing at least once a week. They became really good friends.\n\nI came to work one day and Ben was really happy, a lot more than usual. When I asked him what put him in such a good mood he said he had a surprise for me. I looked up and saw a man in uniform. I knew it was Rob.\n\nI was a bit embarrassed. If I knew he would be there I would have at least done something to my hair or fixed my makeup.\n\n\"Isn't she every bit as pretty as I told you?\" said Ben to Rob.\n\n\"Yes she is Grandpa. Nina, it's very nice to meet you. Needless to say Grandpa always writes about you.\" I think we were both a bit lost for words.\n\n\"It's nice meeting you too Rob. I have to get back to work, I hope to see you again,\" I said as I walked away. I was a nervous wreck the rest of the evening.\n\nThat evening I stopped at my grandparents and I mentioned to Grandpa that Rob was home. He laughed and said he knew Rob was coming home. Ben had told him the last time he visited the center. I asked him why he didn't tell me and he said that he was under the impression that I didn't even know Rob.\n\n\"I don't but Ben talks about him a lot. How stupid can I be? I have a crush on a guy that I don't even know,\" I said to Gramps.\n\n\"Honey, I'm sorry. Ben told me not to tell you; he wanted to surprise you,\" replied Gramps. \"I think it worked\".\n\nI have to admit that I was a bit confused about Rob. Was he being nice to me because of Ben? What should I do or how should I act? I decided to just act natural around him and be myself. I'd wait to see if anything would come of my meeting Rob.\n\nThe following morning there was a knock on the door. I had just gotten out of the shower but did get dressed in a pair of jeans and a shirt. I wrapped a towel around my hair since I hadn't had time to brush it out. I looked out the window of the door and saw the back of a young man.\n\nI opened the door and stuck my head out. \"Yes, can I help you?\" I asked.\n\nI could have died when the man turned around and it was Rob. He was dressed in street clothes. I was at the peak of embarrassment when he spoke.\n\n\"Hi there! I was riding through your neighborhood and thought I'd stop by and say hi. I hope I didn't interrupt anything. I was wondering if you would like to go out for lunch with me before you go to work.\"\n\n\"Why are you here?\" I asked.\n\n\"I just told you. I wanted...\"\n\n\"No, why are you really here? Did Ben send you? You don't even know me and you come by unannounced and I look a mess. Why are you here?\" I asked again.\n\n\"I'm sorry. I really did want to take you to lunch and get to know you better. Grandpa always wrote to me about you and I started carrying your picture in my wallet. If you are half the woman Gramps says you are, you must be fabulous. Do you want me to leave?\"\n\nDecision time for me. \"No, I'm sorry, please come in.\" I couldn't believe I gave in so easily.\n\nI invited him in and offered him a soda. I told him I had to comb out my hair before it dried. He said he was used to seeing women with turbans on their head. We both laughed.\n\nI spoke up while I was brushing my hair from the bathroom. \"I have to tell you that I don't trust most young guys. I guess I spend too much time with the elderly. They don't lie to me like the young guys do.\"\n\n\"Ouch! Were you in a bad relationship?\" he asked me. \"Just so you know, I had a girlfriend when I left for the service. She wrote to me for three months before we broke up. A friend of mine wrote to me and told me she was dating other guys. When I asked her she lied at first and then told me she was bored and they didn't mean anything to her.\n\n\"She wrote a few more times and wanted my forgiveness but that wasn't going to happen. Once she lied to me I knew I couldn't trust her after that. The last I heard she was engaged to the mayor's son which is fine with me.\" I walked into the living room where he was sitting.\n\nHe stared at me. \"You know Grandpa is right. You really are beautiful.\"\n\n\"What? Are you blind? I'm overweight, I'm dressed in jeans and my hair is a mess.\"\n\n\"You don't understand. You have natural beauty; not all made up with a lot of makeup. You definitely are not overweight. I'm being serious here. Are you going out to lunch with me?\"\n\n\"Yes, but we need some ground rules. I'm not a pushover for a man in uniform. You need to know that.\" Why did I even say such a thing? Am I an idiot or what?\n\nHe laughed and said, \"Whatever you want\".\n\nWe went to lunch and talked for three hours. I was almost late for work. When Ben saw me he told me I looked really happy. I told him I had lunch with Rob and he really is a nice guy.\n\nI had a long talk with Ben about Rob. I wanted to know more about him. \"Ben, why did Rob enlist in the service? His family has money and he is really intelligent. Please tell me the truth.\"\n\nAfter looking at me for a few seconds Ben told me a little about Rob. \"Rob didn't know what he wanted in life. His parents wanted him to follow in their footsteps in the banking industry but Rob didn't want that. He enlisted to find himself. He believed the girls dated him for his name and financial situation and he wasn't happy.\n\n\"He likes fishing, hunting and helping others. He told me he wanted to be like me.\" I saw a tear in Ben's eyes. \"Damn allergies,\" he said.\n\n\"My daughter and her husband were furious with Rob when he enlisted. They were mad at me for encouraging him to do what he wanted. They couldn't stop him and eventually wished him the best. He's a great kid.\n\n\"He would write home to us and tell us how bad it was in Iraq and how the Air Force was helping people. He really felt good about it. He even thought of reenlisting but I mentioned that we missed him and I had a girl for him to meet.\"\n\n\"You didn't! Oh my God! I'm so embarrassed, I hope he knows I had nothing to do with it.\" Ben was laughing; it made me start laughing.\n\n\"You're a good person Nina. You're beautiful, intelligent, you have a heart of gold and would be a great catch for any man; don't let anyone tell you differently. It's why I sent your picture to Rob. I knew he would want to meet you.\"\n\nThe next day Rob came by in the morning and I was ready for him. I had my hair done and at least presentable. \"You cleanup pretty good,\" said Rob as he laughed. Did you do it for me?\"\n\n\"No,\" I said quickly and realized how stupid I sounded as I said it. Rob laughed and we headed out for lunch. It was the start of a great relationship. He would stop by and see Ben a few times a week. He even went fishing with my Granddad and Ben. We talked a couple of times a week and he would take me out on my days off.\n\nHe never tried anything flirty and always treated me like a lady. I liked that but I had to wonder how he really felt about me. Was I more like a sister or just a good friend? I knew I was falling for him.\n\nI asked Rob about his future and what his plans were. He told me he had signed up for a couple of Criminal Justice courses. He was going into law enforcement. The local police department explained that his military background as military police qualified him for a position but he needed to take the courses to understand local and state laws as they differed from military law. \n\nHe would spend time at the college during the day and three evenings a week he would ride with a police officer in a cruiser and learn the ropes. He said his parents weren't really happy with him going into law enforcement but understood his decision. They were just happy that he didn't reenlist. I guess it was hard on them knowing their only son was in a foreign country fighting a war.\n\nAfter us going out for a couple of months I asked him about our relationship. I took a chance and asked him straight out where he thought it was going. He smiled at me, leaned forward and gently kissed me. \"Does that answer your question?\"\n\nTwo dates later after he took me out for dinner and dancing for my birthday, he took me home and I invited him in. He kissed me but this time there was more passion in it. It led to us making love for the first time. I knew right then that I was in love with him.\n\n\"Rob, please don't lead me on. I've fallen for you or I wouldn't be here with you right now.\"\n\n\"Nina, I love you. You've told me your past relationships didn't fare well and I wanted ours to last. It's the only reason I haven't pressured you earlier.\"\n\nFrom that night forward we made love on a regular basis. When I told Ben that I loved Rob, he smiled. \"I knew you two were meant for each other.\"\n\nNow I hoped his parents were ok with it. They knew me from when they visited Ben but I didn't know if they were aware of Rob and I dating. I asked Rob the next time I saw him if his parents knew we were dating?\n\n\"Yes, they know. They are kind of coming around and realizing I'm a lot happier than I have ever been. In fact they are throwing a large Thanksgiving dinner and inviting friends and relatives. They asked me to invite you and your grandparents. I think my mom and dad are really trying.\"\n\nI stopped at my grandparents house and told them about the invitation. I told them that I was in love with Rob and really wanted them to come to the dinner. They smiled at me and said they would be there.\n\nGrandma called Rob's mom, Barb, and told her she would make a couple of pies. Mrs. Parsons' told her that the dinner was being catered but she heard from Ben what a good cook Grandma was and said it would be fine. She would let the caterers know that she was making the pies.\n\nBen was happy to see my grandparents at the dinner. By now it was like they were old friends. I felt a little out of place since I didn't know hardly anyone. Ben could see the slight worry in my face and told me everything would be fine.\n\nBefore dinner everyone was standing or sitting while talking to one another. I didn't do much mingling but sat with my grandparents and Ben. I hadn't seen Rob yet and wondered where he was. At least his mom and dad had said hi and were pleasant towards me.\n\nPeople would say hi to Ben and he would introduce my grandparents and \n\nme as friends of his and said I worked at the Senior Center. He didn't say anything about Rob and I but why would he. I guess I was just nervous.\n\nA butler stepped into the room and said, \"Excuse me please. Dinner will be served in a few minutes. Also, Mr. Robert Parsons has an announcement he would like to make.\"\n\nI had talked to him the day before and he seemed excited. He told me he had a surprise for everyone the next day before dinner. Now, I had to wonder what he was going to say.\n\nRob entered the room in a police uniform. He really looked handsome. Everyone began talking and saying hi to Rob.\n\n\"I would like to announce that starting Monday I will officially be a member of the local police department.\" Everyone began to clap but Ben and I clapped the loudest. I knew he was taking his exams but he never said anything about them. I actually stood up and clapped for him. I didn't care what anyone else thought, I was so proud of him.\n\n\"I have another announcement and then we can all sit down and eat this wonderful dinner,\" said Rob. He walked over to me and asked me to sit back down, but in a nice way.\n\nHe knelt on one knee and I already had tears in my eyes. \"Nina, I love you with all my heart and soul. I have never met a woman that is so beautiful and sweet both inside and out. I want you in my life as long as I live. Would you do me the honor of becoming my wife?\"\n\nThere was stone cold silence as he pulled out the most beautiful engagement ring. He continued; \"This ring belonged to my grandmother. Before she died she told me to only give it to the woman that I truly loved and that woman is you.\"\n\nWith tears running down my face I said, \"Yes! Yes, of course I'll marry you.\"\n\nHe slipped the ring on my finger, took my hand as I stood up and we sealed the deal with a loving kiss. The allergies were running pretty high as Ben and my grandparents all had tears in their eyes. Even Barb and John Parsons must have the allergy bug.\n\nIt was announced that dinner was being served and everyone headed to the dining area. I sat next to Rob and most of the talk at the tables was about us. Many asking who I was and how did we meet.\n\nWhen it was time for dessert Mrs. Parsons announced that the pies were made by my Grandma. She ended up making five pies to make sure there would be enough for everyone. Everyone told her how good they tasted. Grandma felt proud and Grandpa was proud of her.\n\nEpilogue:\n\nAfter dinner Rob and I went and sat alone in a side room of the house. I kissed him passionately and told him how much I loved him. Then we discussed when we would get married. We decided that we would get married on Valentine's Day, February 14. I honestly don't know why we chose that day. I suppose my reason was because it was a day for lovers and I truly loved Rob. For Rob I think it was a date that he wouldn't have to worry about forgetting.\n\nWe went back among the dinner guests and gave them our wedding date and told them they were all invited to the wedding which brought on cheers. Rob's parents came up to me and hugged me and welcomed me to the family. They hugged their son and told him how much they loved him.\n\nWhen I went to work on Monday, everyone already knew about my engagement. Ben sat there in his chair with a big smile on his face. \"You can start calling me Grandpa any time,\" said Ben.\n\nI hugged him and thanked him for introducing me to Rob. He told me we are all better off since Rob and I got together. His grandson is home and has never been happier. His daughter and son in law understand Rob much better and understand he needs to lead his own life, but most of all his grandson has met a woman who loves him for himself.\n\nI had tears in my eyes and said, \"I love you too Grandpa.\" Then gave him another hug.\n\n*\n\nHope you enjoyed this lighthearted story\n\nA happy Valentine's Day to all my readers\n\nComments are welcome and appreciated\n\nDG Hear "
    ],
    "authorname": "DG Hear",
    "tags": [
        "valentine's day",
        "friendship",
        "finding love",
        "new job",
        "senior center"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/the-senior-center"
}