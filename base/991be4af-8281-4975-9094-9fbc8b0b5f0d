{
    "title": "The Party House Pt. 01",
    "pages": [
        "The Party House: Part 1\n\nCopyright (c) 2021 James Miehoff, All Rights Reserved. \n\nThis work may not be published whether for fee or free without this copyright.\n\n------------------\n\nThe following is a work of fiction and as such all characters mentioned herein are fictional and any resemblance to any persons living, dead or fictional is coincidental. All characters mentioned herein that participate in sexual activities are adults (18 years of age or older).\n\n------------------\n\nHave you ever been so mad you could spit nails and pound them in with your dick? I was that way and more when I found out how my homeowner's association fucked me in the ass without any lubricant. \n\nI had bought a house on the outer edge of the subdivision I wanted to live in. I bought that particular lot because a) I liked the builder, b) I liked the house plans and c) because the next subdivision over (which was right behind where my new house was to be built) had platted the land as entrance way and there were to be no homes built there.\n\nFast forward three years. The master developer for my subdivision bought the subdivision behind my house. The original developer was having cash troubles and you know the story. So now the land belonged to my master developer. Since the roads were already in place (thanks previous developer) they said they had no plans to change the layout of the subdivision. \n\nOne day I drove through the new subdivision and one of the motherfucking builders was pouring two foundations. It took a couple of days to contact the county and I found out that the cock sucking HOA had let the builders replat the subdivision to allow houses on the strip of land right behind my house. So instead of having a nice entryway with utility easement behind my house I now had the potential for neighbors. And it was filed and approved by the county so it was now set in stone.\n\nTwo of the other builders each started building two model houses on that land the following week. Of course all six models were two story houses and the first three looked directly into my back yard. I had just finally convinced my wife that no one could see us and she had relaxed enough to let us have sex in the pool and the hot tub once in a while. As soon as the first boards went up on the models the sex outside dried right up. She wouldn't even try to tan topless out on the patio anymore. \n\nI was so pissed off.\n\nFast forward another year and a half. Two of the three builders went bankrupt and sold their models at fire sale prices. Karma is a bitch. The third decided to pull out of the development and sold their models at fire sale prices as well.\n\nIt was very strange though because nobody was living in the first three models or at least the two models behind our house were dark except on weekends. The one directly behind us put in a pool and I noticed that there were always people around on weekends but almost never during the week and it didn't make any sense.\n\nIt was a hot Saturday afternoon in early July, I just finished mowing the yard and I could hear the music booming from the house behind us. After putting the mower away, curiosity got the better of me and I got the binoculars and went up to the guest bedroom to see what I could see (the guest room was the only second story room with windows that faced the backyard and therefore the house behind us).\n\nAll I can say is wow! As I focused the binoculars, I saw a very hot blonde with a porn star body came out of the back door. She was wearing the skimpiest bikini I had ever seen. By bikini, I mean the bottoms only, she wasn't wearing a top and her breasts were the kind you only see in the finest of gentleman's magazines. \n\nI followed the blonde as she walked over to the hot tub. I could only see about half of it thanks to the fence but what I could see was a guy sitting on the edge of the hot tub with his legs in the water and his dick in the mouth of a young black lady. As I watched she shifted position and the rest of her came into view. That included the black dude with a huge dick that was fucking her from behind. From my angle I couldn't tell if he was in her pussy or her ass, but he was really rocking her.\n\nThe blonde bent down and kissed the guy that was getting blown and wiggled her fingers at the black guy before she walked away and jumped into the pool.\n\nLooking across the pool I could see two of the lounge chairs were now occupied. The first had a black guy lying back with a redhead on his lap in a reverse cowgirl position. As she lay back on him, her legs came up spread and I could clearly see that he was deep in her ass. The second lounger had a white dude getting his cock sucked by a young black lady. As I watched she lay back on the lounger and he climbed up between her legs and began to fuck her vigorously.\n\nAs I put the binoculars down, I kicked myself for not grabbing the camera. So off I went to find the camera and the big ass telephoto lens. \n\nAs I got back with the camera, the blonde was just coming back out the back door again so I zoomed in and started snapping pics. She was wiping something off her face and licking it off her finger. I would have been content to just follow her with the camera's eye but there was a guy that followed her out that came up alongside her and patted her on the butt. He was totally naked and his cock was at half-mast and dripping. I got some shots of all of that activity. One guess what they had been doing and the first guess doesn't count.\n\nI burned up two memory cards watching the various pairings split up and recombine as the partiers swapped partners and sometimes coalesced into larger groups. \n\nThe two girls on the lounge chairs each collected an additional suitor for a double fuck times two, both were getting stuffed in their pussies and asses. The threesome in the hot tub had swapped around and the white dude got to fuck the chick while she tried valiantly to suck on the black guy's cock. It was a monster and she could only get the head in her mouth and settled for using her hands to give him a handjob.\n\nI debated and finally decided to just go out and get a couple more memory cards. On my way out, I pulled around the block and checked the house out. Nothing looked out of the ordinary, so I just scribbled the house number down and headed off to the store and picked up two more high capacity memory cards.\n\nWhen I got back, everybody had apparently decided to go indoors except for a guy in board shorts and the blonde. I could stare at her all day. The guy was grilling and watching him made my stomach growl. I watched and got some shots of the blonde stroking his cock through the shorts and then she pulled them down and began to blow him. He had a very impressive member. She gave him an impressive blowjob and he came on her tits. Then he piled the burgers on a platter, the blonde pulled his shorts up and the two of them went inside.\n\nI went down and set up my laptop on the kitchen table and made myself a sandwich. I copied all the memory cards and set up the pictures and movies to back up to some Blu-ray data disks\n\nI was hard as a rock and had no idea where my wife was or when she would return. I was just about to go wank one off in the bathroom when I heard the front door open. \n\n\"Hi honey,\" I heard my wife call out.\n\n\"I'm in the kitchen,\" I called back.\n\nI got up and met her in the hall. She took one look at my shorts and said, \"Oh my. Have you been watching porn again?\"\n\nI looked down and said, \"Not exactly. But if you are offering to help a guy out...\"\n\nShe giggled and said, \"C'mon sailor and you can tell me all about it,\" as she pulled her shirt off and unsnapped her bra. \n\nMy wife is not quite in the same class as that blonde, but she is still quite a beauty. She stands 5 foot 9 or 10 inches tall in flats or nearly 6 foot when she wears those red fuck me pumps with the 3 inch stiletto heels. Gravity has begun its inevitable decline on her breasts, but they still hold up and I like the way the nipples still stand up and the areola crinkle when she is in the mood and I could see that they were standing up and crinkling now.\n\nShe grabbed my hand and led me off to the bedroom. I pulled her shorts down without unsnapping them and laid her down on the bed and buried my face between her legs. I unsnapped my shorts and slid them off as I tasted my lady. Her pussy was a little more pungent than normal, like she had been horny for a while. There was also a bit of saltiness that was normally not there.\n\nAfter she came, she pulled on my head and patted the bed next to her. I got the hint and climbed up alongside her. She kissed me and then thoroughly licked my face, cleaning her pussy juices off my lips and my cheeks. This was something new.\n\nWhen she was done, she held my face in her hands and looked at me with those sea blue eyes of hers. \"Don't be mad, but I went over to Alex and Gary's,\" she said then stopped as if groping for words.\n\nWhile she was groping for word, I should explain a few things.\n\nAlex was actually Alexandra, Gary's wife. They were our next door neighbors. I guess you could say they were neighbors with benefits. We had been doing some soft swapping with them over the last six months. Basically it was just heavy petting with each other's spouses while we all were in the same room. It started six months ago at the start of the lockdown from the pandemic. All of us were working from home and cabin fever was starting to set in. Since we were basically in the same sort of bubble (go nowhere except the grocery store and pharmacy) we decided to get together for dinner and movie night. The second one was at our house and we were going to watch the latest superhero team up movie but when I turned on the DVD player it started up with the disk that was still in there. Of course, it was a porno movie and we had turned it off just in the middle of a big beach orgy, so that's where it started back up.\n\nI thought I was going to die and quickly moved to shut it off but fumbled with the remote which gave Alex a chance to say, \"Leave it on. I don't think we have seen this one.\" \n\nSo we watched the orgy scene and the girls were squirming in their chairs and Gary and I were trying to hide our erections. Alex broke out laughing, \"We are quite a bunch here,\" she said, \"A bunch of adults embarrassed about watching a porn movie. Sandy, do you mind if I sit in Rob's lap and we start the movie from the beginning? I didn't catch some of the finer plot points.\"\n\nThat was the perfect thing to say to snap the tension and we all broke up laughing. \n\nGary looked at the two of us and exploded with, \"Plot points? Dear, it is pretty simple, he fucks her, that one fucks the blonde and the brunette gets a dick up her pussy and one in her ass and if she is a good girl she will have one in her mouth too.\"\n\nSandy got up and went to sit in Gary's lap. Turning to lick his ear, she stage whispered, \"I thought you said you haven't seen this one before?\"\n\nThat started a new round of laughter. Alex came over and sat in my lap and there was no way she was missing the boner that was squashed into my pants. That was a certainty when she adjusted herself to press the length of my cock into the crack of her ass. Thank god for yoga pants. Her ass cheeks molded themselves around my cock like a glove. \n\nI restarted the movie and pretty soon Alex and I were tongue deep in each other's mouths. I took things a little further by sliding my hand up her shirt and she moaned into my mouth when I cupped one of her breasts. \n\nThe movie was all but forgotten except for occasional comments by one of us. The one that got the biggest response was when Gary said, \"See I told you the brunette was going to get double fucked,\" when the brunette took a huge cock into her pussy and another in her ass.\n\nThat got Alex squirming in my lap and she whispered softly into my ear, \"I hope someday to be that brunette between you and Gary, but for now, just unsnap my bra and play with my tits.\"\n\nWhat can you say to an invitation like that? It didn't get too much farther that night. I slipped her shirt up and sucked on her nipples while I rubbed her pussy through her yoga pants until she came. Gary had Sandy's shirt unbuttoned and her bra off and had been sucking her nipples. Shortly after that the movie ended and the girls by unspoken consensus stood up and put their tits away and kissed their movie partner.\n\nAlex said with some regret in her voice, \"I think that is enough for tonight. I know it is hard on you guys. I would so love to take you to bed Rob and I am sure Gary feels the same about Sandy. But I think we need to talk this over with our partners and see how to proceed.\"\n\nI nodded acceptance. My dick certainly didn't. I could all but hear it screaming, \"Shove me into that hot wet pussy. You know you want to. Just do it. If you take Alex, Gary will take Sandy and it will be all even. Don't be a wussie. Look at that wet spot in her crotch. Fuck her you coward. FUCK HER!!!\"\n\nI stood up, kissed her and helped snap her bra back up. Gary following my lead did the same for Sandy. Both of us had circus tents pushing out our pants as Sandy and I walked Gary and Alex to the door. \n\nSandy gave as good as she got that night, but after I came for the third time we fell asleep in each other's arms exhausted.\n\nBack from wherever she had gone in her reverie, Sandy started talking again, \"I came back from dropping off the dry cleaning and I could hear the lawn mower so I knew you were in the back yard. I saw Alex out watering her flowers so I went over and talked to her. When she saw me she waved me over and said, 'Oh my god you have to see this.' I asked 'See what?' She just turned the sprayer off and dropped the hose, grabbed my hand and pulled me into their house. We went into their guest room, which is in the back of their house, so it looks into the backyard of the house behind us. \n\n\"Gary was already in the bedroom looking between the slats of the blinds with some binoculars. His shorts and boxers were around his ankles and he was stroking his dick. I started to ask if this was what she wanted me to see. She pressed a finger to her lips to tell me to be quiet. So I did. \n\n\"She carefully walked into the room, got down on her knees and put her lips around Gary's cock. He jumped about 6 feet in the air. 'Fucking hell babe, you scared the shit out of me,' he yelled. She laughed and said, 'Go back to your watching and I'll keep on blowing you.'\n\n\"She waved me over and pointed to Gary's dick. She whispered in my ear, 'I'll make it up to Rob tonight.' So I figured we have been blowing you guys for a month now so it wasn't really a violation, since Alex would blow you tonight. Before I wrapped my lips around him, Alex asked Gary, 'So paint me a picture, since I can't see what is going on.'\n\n\"Gary started talking and described the scene. There were three people in the hot tub, two guys and a chick, they were sucking on her tits and from the way her arms were moving, she was stroking their cocks. He said that when they were sitting on the side of the hot tub earlier, the black guy had the biggest dick he had ever seen. He went on to say that there was a guy lying back on one of the lounge chairs and a gal with big tits was sucking his cock. And the other lounge chair had a guy fucking a girl in the ass. Alex's ears definitely perked up when he said that. By then I was sucking on Gary's cock and getting really wet. I slid one hand down and started to rub myself. Alex noticed the movement and slid her hands up my shirt and unsnapped my bra. I heard saw her take her shirt off out of the corner of my eye. She wasn't wearing a bra so those big delicious looking tits of hers just popped out. \n\n\"She came back over to me and ran her hands around to my front and started stroking my tits and pulling on my nipples. It was driving me crazy. You know how I sometimes say my nipples are directly hot-wired to my clit. Well, this was one of those days. I could tell Gary was getting close and I think Alex knew it too. She pulled my shirt and bra up over my head and I pulled one arm loose and used it to stroke Gary's cock while she took the shirt and bra the rest of the way off. Then I went back to sucking on him.\"\n\nI should probably say at this point that neither of us had been idle while Sandy was talking. Sandy had been stroking my cock and I had been sucking her nipples and finger fucking her soaking wet pussy.\n\n\"At that point, Alex stood up with a big grin on her face and told Gary, 'Point out the lucky girl getting ass fucked.' He started to do it and then realized that his cock was still getting sucked. \n\n\"He looked down and exclaimed, 'Oh my god.' I smiled up at him and took his cock out of my mouth and said, 'Nope. Just Sandy,' then pulled him in as deep as I could go without gagging. Alex kissed him and pinched his nipples and he exploded in my mouth. I felt his cock start to swell up and I pulled back so his cum filled my mouth rather than choke me. When he was done, I stood up and pressed myself against Alex and kissed her and I slipped some of his come to her on my tongue. \n\n\"We kissed for a lot longer than I originally thought we would and while we were kissing Alex pushed my shorts down and I let her do it. I stepped out of them and stumbled a little and grabbed her tits for support. They felt so good in my hands. She reached down and slid a finger between my pussy lips and rubbed and I came. I was a little weak kneed so I sat on the bed. Alex came with me and before I knew it she had me on my back and she was straddling my face. I have never had any kind of sex with another woman so I froze and then she spread my thighs and slid her head in between them and began to lick me. I didn't know what to do, but I was getting so turned on I just tried to do what you do to me that makes me feel so good. Pretty soon we were both moaning and I came again and I was able to get Alex to come. \n\n\"Alex rolled off me and said, 'Whew. That was fun.' She kissed me again and licked her pussy juices off my face. I did the same and then Alex looked over at Gary, who was slowly stroking himself, 'So what's new next door?' He kind of blushed and said, 'I don't know. I wasn't watching them. I was watching my own private sex show staring my two favorite hot porno queens.' \n\n\"We all laughed at that. Alex stood up and put her hand out for the binoculars. When she got them, she started looking out the window and said to Gary in an offhanded way, 'See if you can find those compact birdwatching glasses for Sandy.' He replied, 'Got them right here,' as he handed them to me. I took his place at the window and began to scan the pool area. Wow, there were all kinds of things going on. The black chick in the hot tub was getting spit roasted. But before I could check anything else out, Gary said, 'Ok it's your turn to do commentary.'\n\n\"Both Alex and I started, since we didn't know who Gary was talking to. We both stopped and giggled and I told her to continue. 'I spy with my little eyes some really kinky shit,\" she started, 'There is a threeway in the hot tub and HOLY CRAP, the black guy just pulled out and he IS hung like a fucking HORSE!' \n\n\"I quickly swung back to the hot tub and holy shit he WAS hung like a horse. Since Alex was speechless I swung the binoculars back over to the lounge chairs and took over the commentary, 'There is a black guy on one of the loungers, he doesn't seem to be hung as well as the guy in the hot tub, but he is banging his dick into the girl riding him reverse cowgirl. Oh wait, a white guy just walked up and she is sucking on him. There is also a girl on the other lounger and a guy just walked up to her and he is eating her out. I think she likes it. She is running her fingers through her hair. Oh she just got another guy walk up and wave his dick in her face and she is now sucking him off.'",
        "\"As we watched, the first guy getting sucked off moved around and carefully climbed up on the lounger. He stuck his dick into the girl that had been sucking him off and we could now see that she had been getting it the ass by the black guy.\"\n\nSandy started to shake and arched her back and from the unfocused look in her eyes she was having a major climax from my fingers. She stopped stroking me and grabbed the bedsheets in a death grip another sure sign of a massive orgasm. I kept stroking her and sucked on her nipples and bit them gently and she yelped a little and then slumped down. She sucked in a lungful of air and slowly exhaled. I stopped playing with her and just wrapped her in my arms.\n\nAfter a little bit, she looked me in the eyes and said, \"Give me a minute before I continue, Please?\"\n\nI nodded and stoked her hair and she put her head on my chest.\n\nNow that I had a little break I went back to my reverie. \n\nOver the next few months the relationship had progressed. We had movie night a couple times a month. Sometimes it was at our house, sometimes at theirs. Last week it was back at ours and I pulled a long movie out. It was really two movies about a resort on an island and all the sex you can imagine in beautiful scenery. This time we started movie time after dinner and wine, so we were all feeling relaxed.\n\nAbout half way through the first movie, Sandy, who had at least four glasses of wine, got up and whispered to Alex and me, \"If it's ok with you two, I want to suck Gary's cock.\"\n\nAlex just looked at her and whispered back, \"I thought you'd never ask. I have been dying to get Rob's cock in my mouth.\"\n\nI nodded and Sandy went back and knelt in front of Gary and slowly unzipped him and reached in and pulled out his cock. \n\nAlex kissed my ear and whispered, \"No worries big guy. I am not going to leave you hanging.\"\n\nWith that she got off my lap and I stood up and pushed my pants to the floor and kicked them off. Alex gently tugged my underwear down and my cock sprung forth and hit her on the nose. She giggled and Sandy looked over. So far she was just stroking Gary but he was moaning softly. Alex winked at her and kissed the end of my cock before sliding her lips around it. Sandy did the same for Gary and both he and I let out simultaneous groans of pleasure. \n\nGary must have been a little more pent up because he came in Sandy's mouth in almost record time. When he finally came back to reality he lifted her head up and kissed her long and deeply. Then he stood up and pulled her up. Pulling her shirt off and unhooking her bra, he kissed my topless wife. Both Alex and I were watching to see what would happen next. Alex had stopped stroking my cock while we watched Gary turn Sandy around and hooking his thumbs into her yoga pants he pulled them down along with her panties in one smooth motion. She lifted a foot and he pulled her garments off that leg and then repeated it with the other leg. My wife was now standing naked in front of our next door neighbor. She was naked with his face mere inches from her naked pussy. I could hear him take a deep inhale of her fragrance and then he stood up. Oblivious of the two of us holding our breaths eight feet away, Gary stood up and had my wife sit on the edge of the recliner and then he knelt down and put his face in between her thighs and began to eat her pussy. \n\nAlex exhaled loudly and pulled herself up to my ear. Whispering, she said, \"I wasn't sure if he was going to put his cock in her or not. He knows we can't cross that line without your agreement and hers, but sometimes he gets so horny. I was worried.\"\n\nShe let her head down and began sucking on my cock again. This time she continued with more enthusiasm and faster strokes. I was starting to feel the pressure build in my balls and then she stopped. I looked down and she looked back as she started to slowly slide my cock into her mouth. I felt the head of my cock bump against the back of her tongue and she momentarily gagged. She tried a couple of times to get my cock into her throat but her gag reflex stopped her. I I ran my fingers through her hair and told her not to worry about it. She pulled off my cock for a moment and said, \"Thank you,\" before going back to sucking me. \n\nA few minutes later, it was my turn to speak. \"Oh god, I'm coming,\" I whispered hoarsely.\n\nAlex slid up my cock until the head was just in her lips and I exploded. It had been a busy week and Sandy and I hadn't manage to do much more than play cop-a-feel with each other so I had a week's worth of back pressure. Alex' eyes popped wide open as she tried unsuccessfully to contain my first blast. Some dribbled down her chin and feeling her swallow triggered my second blast followed by the third, fourth, fifth, sixth and seventh. Each one was smaller than the last but still sizeable enough to cause Alex to have to swallow. When she felt the last pulses in my cock subside, she ran her thumb up the underside of my cock and licked the last drops from the tip.\n\nI was feeling woozy but I did manage to say softly, \"Now it's your turn.\"\n\nShe nodded and stood up. She must have unhooked her bra while she was pleasuring my penis. Her bra came off with her shirt when she pulled it over her head. I stole a glance at Gary and Sandy and she was writhing and moaning as he licked her clit and was pistoning two fingers in and out of her cunt. I leaned forward and pulled her yoga pants down and she kicked them off. I slipped my thumbs in under the waistband of her panties and looked up into her eyes as I pulled the lacy fabric down. She bit her lip so erotically as I said, \"I like to unwrap my presents slowly,\" then kissed her naked shaved mound.\n\nAs I stood up to lower her into the chair my cock accidently slid between her thighs and I could feel her wetness all along the length of my dick. \"DO IT,\" my dick cried out. \"FOR THE LOVE OF GOD FUCK HER.\"\n\nI could see in her eyes she wanted it, but given what she had said earlier about not crossing the line, I pulled back instead. She grabbed my cock and I thought she was going to pull me in. A quick glance over at Sandy and Gary showed them watching us intently. Gary was nodding and his lips were moving. It looked like he was silently saying 'Fuck him' over and over again. Sandy was just watching.\n\nAlex took my cock and started slapping it on her clit and moaning. I pulled her in for a kiss and then whispered, \"It's time for me to eat you.\"\n\nReluctantly she nodded and turned to sit on the edge of the chair. She leaned back and pulled my head into her sex as I was kneeling to get into position. The smell was overpoweringly intoxicating. I buried my tongue into her and she started to moan. Out of the corner of my eye I saw Gary return to sucking my wife's clit and finger fucking her. We both continued to eat and finger fuck and play with their tits until the girls finally said, \"Stop,\" almost simultaneously. Sandy added, \"I can't take any more right now. \n\nThe movie was just into the second part, so we had been playing with each other's spouse for a little over an hour. Both Gary and I had recovered and our cocks were reaching for the sky. I know I wanted a return match in Alex's mouth but I didn't know how to ask for it politely. So I just kissed her. She didn't take the bait and instead, she reached down and pulled her shirt over those delicious breasts and then pulled on her yoga pants. I sighed and put my shorts back on. I saw Sandy and Greg had done the same.\n\nWhen we all got to the door, Alex kissed me and whispered softly into my ear, \"If you had said yes, I would have.\"\n\nShe grabbed Gary's hand and the two of them walked home. I looked at Sandy and she wouldn't look at me. I kissed her and asked, \"What's wrong?\"\n\n\"Don't be disappointed in me,\" Sandy said slowly and somewhat wistfully, \"but I really wanted Gary to fuck me. If you had shown any interest in fucking Alex, I would have thrown him to the floor and jumped his bones like a whore.\"\n\nI grabbed her head in my hands and tilted her head up until we were staring eyeball to eyeball across our noses. \"And I was waiting for you to take charge like you did with the blowjobs and tell me to fuck Alex. As she left she said that if I had wanted to she would have let me fuck her tonight.\"\n\n\"Oh, dammit!\" Sandy exclaimed, \"Do you think it's too late to go over and knock on their door and tell them we changed our minds?\"\n\nI nodded and said, \"I think so. It would be awkward.\"\n\nShe reached down and grabbed my cock and said with a grin, \"Well, at least I know a nice warm wet place for this guy to park for a while.\"\n\nJust then Sandy picked her head up and said, \"Oh dear, I fell asleep. How long was I out?\"\n\n\"Just a few minutes,\" I said.\n\n\"Ok. I'm sorry. I didn't mean to leave you hanging about what was going on,\" she said.\n\n\"It's ok,\" I said with a grin. \"I heard all the music and wondered what was going on so I went up to our guest room and watched. I even brought the camera and got some pretty good shots of the festivities. I saw the first girl get double penetrated and then the girl on the other lounger got a dick in the ass and one in her pussy too.\"\n\n\"It wasn't just what went on in the pool,\" Sandy said. \"When Alex told Gary about the what did you call that, double something--\"\n\n\"Double penetration,\" I supplied.\n\n\"Yea, that. He jumped up and tried to look out the window. When he did, he was right behind me and his cock was almost sliding between my thighs. I handed him the binoculars and bent down out of the way. And this is where you are going to get really mad at me.\"\n\nShe closed her eyes and shrank down like she was afraid I was going to hit her.\n\n\"That was when. That was. I,\" Sandy was having obvious trouble putting a sentence together she was so afraid.\n\n\"That was when Gary fucked you,\" I suppled helpfully.\n\n\"No,\" she said. \"That was when I broke the rules and I reached back and grabbed his cock and pulled him into me.\"\n\n\"What did he do?\" I asked. I was afraid that this was going to be like pulling teeth to get the rest of the story out.\n\n\"Nothing,\" she said softly, \"I started rocking back and forth and fucking him. He stayed still. I was the one that broke the rules and fucked him without your permission or Alex's.\"\n\nShe looked like she was going to cloud up and rain, big time. So I said, \"It's ok, Babydoll. It was going to happen sooner or later. Remember, the last time we got together if any of us had asked or squeaked or blinked our eyes, Gary and I would have been balls deep in you girls.\"\n\nShe sniffed and looked into my eyes, \"You are not mad that I cheated on you?\"\n\nI looked back and held her gaze, \"I can't say that I am not disappointed that I didn't get to sample Alex's very fine vagina at the same time, but I'll live.\"\n\nSandy sniffed again and then said, \"You won't have to wait long. Gary and Alex will be over in about,\" she looked at her watch, \"two hours. We will be ordering pizza. They are bringing some bottles of our favorite wine and for dessert, you get Alex, anyway you want her.\"\n\nI pulled back and blinked. \"You are serious,\" I said.\n\n\"Serious as divorce paperwork,\" she said, \"Which I hope you are not thinking about.\"\n\n\"Honeyyyyy,\" I said, \"You just jumped the gun a little. No big deal. Alex was there right?\"\n\nShe nodded.\n\nSo I said, \"Ok, then tell me what happened. Make it good and dirty and keep teasing my dick but don't let me come. I don't want to be one bullet shy tonight.\"\n\nShe nodded and said, \"Alex noticed what was going on about two minutes into my fucking Gary. She screamed at him and I had to scream back that it wasn't his fault and that he bumped into me trying to look out the window and I was so horny from watching all the fucking going on at the pool and blowing him that I pulled him into me before I had a chance to think about it,\" and then I wound down.\n\n\"Alex looked shocked for a second and then looked at me. I couldn't look at her so I put my head down and nodded. She put her hand under my chin and lifted my head so I had to look at her. 'Sandy,' she said, 'the first time you fuck a guy, you should make sure you are comfortable. Come up here on the bed and let him fuck you properly.'\n\n\"I blinked in surprise but did as she asked and lay down on my back with my butt on the edge of the bed. Gary came up and put his hands on my knees, the way you do sometimes. Alex was stroking his cock and she started to rub it on my slit. Oh it felt so good, just like when you do that to me. I started humping trying to capture his cock, but she kept sliding it up, until finally she left it at the door of my cunt and then she pushed his ass and he buried himself in me. I let out a long moan of pleasure and she smiled and came up on the bed and kissed me. Gary was playing with my tits and I felt like I was in heaven. After a minute or two of kissing, Alex swung her leg over my head and to use your phrase, sat on my face. I was so horny, I began to eat her. I've never done anything with another woman but with Alex, it just felt right.\n\n\"While I was eating Alex, she slipped a hand down and was playing with my pussy while Gary fucked me. I was getting out of control and I think it was transferring to Gary. He was alternating between long slow deep thrusts and short shallow ones, suddenly I felt him tense up and then I could feel his cum spraying into my cunt. I came so hard I think I blacked out for a moment. When I came to, Alex was quietly yelling at Gary. She was saying that he should have asked before he just came inside me like that. Plus she said that she wanted him to come in her mouth. He said he would make it up to her. \n\n\"I heard him looking for something in the nightstand drawer and then I felt the bed sag as he climbed up on it. He crawled between Alex's legs and laid his cock across my mouth. He was starting to deflate so it was pretty easy to get him into my mouth and start sucking on him. It wasn't long before I had him nice and hard again. \n\n\"I still didn't know what he was going to do, but while I was sucking on him I watched as he squirted some thick fluid on the crack of Alex's ass and then used his finger to rub it in. I was shocked when he took that finger and pushed it slowly inside her ass. I was waiting for her to say no or something but she just said, 'Mmmmm that's nice. Lube me up good baby.'\n\n\"Well I kept licking her pussy as Gary kept adding lube and fingers until her whole ass valley was shiny and he was working three fingers in and out of her ass. Finally, Alex called out, 'Oh baby stop teasing me and start pleasing me. He slid his cock into my mouth again and I sucked on him for a little bit and then he pulled out and wiping his greasy fingers on his cock he raised up on his knees and put the head of his cock right on her asshole and pushed. I could see her skin stretch to take his cock and I watched as the ridge of his cockhead squeezed into her tiny hole and she was telling him all sorts of things like 'give it to me baby' and 'oh that hurts so good' and 'yes, I can feel you are in, now go deep'.\n\n\"I was kind of shocked that I had a ringside seat like that. I mean it was even more close up then that one porno tape that was just all butt fucking clips and no story. I watched as he kept pushing until he was all the way in and then he backed out and began to ass fuck her. I finally remembered that I wasn't licking her and started sucking on her clit. It was so much bigger. It was like getting her ass filled inflated her clit. \n\n\"After coming twice already, I wasn't sure Gary was going to come, but a few minutes of getting butt fucked and Alex was coming like a train wreck. It must have set Gary off because he pulled out and pointed his cock at me and came all over my face. I managed to catch a little of it in my mouth, but most of it was all over my face.\n\n\"Gary rolled off and lay panting on the bed, finally he said, 'Sorry babe. When you can so hard, you tripped my trigger and the best I could do is shoot my load all over Sandy's face. If you want my cum, you'll have to lick it off her face.'\n\n\"With that Alex flipped over and began to clean my face just like that stupid cat you had when we were first married used to do to me in the morning. By then I was spent. She had been licking me and finger fucking me and I lost track of how many orgasms I had. I think I had more that night you tried to see how many orgasms you could give me and we stopped somewhere in the twenties, this afternoon had to be a close second.\n\n\"I got up and washed my face, got dressed and here we are. You are all caught up.\"\n\n\"You said they are going to be here about 8? That may give me enough time to whip up a surprise,\" I said. \"If you are sure Alex wants to fuck me tonight--\"\n\n\"Oh she wants to fuck you so bad,\" my little honey said, \"I'm afraid your cock will take a week to recover by the time she is done. Oh and she said she is bringing one of Gary's Viagra for you. She wants you in fighting shape, her words not mine.\"\n\n\"As long as it is alright with you that I fuck Alex,\" I said.\n\n\"Oh it is fine with me, as long as I get a return bout with Gary. I know I had him this afternoon, but --\"\n\n\"My horny little minx. Yes you can fuck Gary again. As many times as you would like,\" I said. \"But right now, I need a shower and I have to get that surprise put together.\"\n\n\"Mmmmm. A shower sound good to me too,\" she purred.\n\nTo make a long story short, it was not a quick shower and I just barely held off blowing my load given the way Sandy was teasing me. As we were drying off, she turned to me and asked, \"If I could get Alex to teach us, would you like to fuck my ass?\"\n\nI was so shocked that I dropped my towel. That was when I barely held off blowing my load for the second time. As I collected my towel, I carefully said, \"I have wanted to fuck your ass for years. But the last time we tried, I hurt you so bad that I gave up and relegated it to the realm of fantasy, like three-ways, double penetration and wife swapping.\"\n\nSandy giggled and held up her fingers and folded one down each time she made a point.\n\n\"One, we know that ass fucking is real for people like us. Alex does it. At least two girls this afternoon did it around the pool.\"\n\n\"Two, I had a three-way this afternoon and if you would like, I'd love to join you and Alex for a three-way tonight.\"\n\n\"Three, apparently we all saw two girls getting double penetrated this afternoon by the pool, so that is real.\"\n\n\"Four, and tonight we will be wife swapping.\"\n\nShe concluded with, \"So if all that is real, then I can get your big dick up my ass come hell or high water. We may just need some tutoring from Alex and Gary.\"\n\nI nodded, \"Your logic is inescapable. But I do need to run. I'll be in my office.\" \n\nI kissed Sandy and then ran to the bedroom and threw on a pair of silk boxers I kept for special occasions, a nice polo shirt and some clean shorts. Ones with a stretchy waistband that I wouldn't have to bother unsnapping, just pull down. After getting dressed, I headed to my office where I had already downloaded the contents of the memory cards. I had burned the pictures and movies to a couple of data Blu-ray disks for archival storage. \n\nI hurried and while I was not completely satisfied with the final product, I hoped it would be good enough for tonight. And I finished just in time. I pulled the disk out of the burner and slipped it into a sleeve and headed downstairs when I heard the doorbell ring. Sandy beat me to it and was welcoming Gary and Alex as I rumbled down the stairs and tossed the disk on the counter. \n\nSandy had already hugged Alex and Gary was standing nervously shifting from one foot to the other. Fight or flight instinct. To break the ice I held out my hand and then pulled him in for a big bear hug. I think I totally confused him because I'm pretty sure he had scripted out most of my possible reactions from snubbing him to taking a swing at him. But not hugging him. He was totally defenseless when I hit him with, \"Gary relax. It's ok. Sandy explained exactly what happened this afternoon. I'm ok with it. I was pissed at first that I wasn't invited, but then Sandy said you guys were buying pizza tonight and it's all better now.\"",
        "\"Seriously,\" Alex said, \"You are good with EVERYTHING?\" \n\n\"Yep,\" I said, \"C'mon in,\" as I turned and waved them in.\n\nAlex looked at Sandy and said softly, \"You told him everything that happened this afternoon?\"\n\nSandy nodded.\n\n\"Even you and me?\" Alex said incredulously.\n\nSandy nodded and said, \"In for a penny in for a pound. C'mon let's go crack one of those bottles of wine open and get this party started.\"\n\nWe headed for the kitchen and Gary said, \"We took the liberty of ordering three different kinds of pizza. A veggie, a meat lovers--\"\n\n\"Gary's favorite,\" Alex interjected.\n\nGary frowned at her and then finished with, \"and a three cheese. If you want anything else, just let me know and I can try and get them to bring it out on the same trip. \"\n\nI looked at Sandy and then said to Gary, \"No, I think that will work out perfectly. Sandy loves veggie pizzas, I can't stand them. I love meat lovers and she can't stand those, heartburn. And we both love cheese. You couldn't have gotten a better mix.\"\n\nGary beamed and Alex hit him on the shoulder as she said, \"Now he is going to have a big head all night.\"\n\nI saw her pass something to Sandy, who surreptitiously handed it to me. It was a Viagra.\n\nI cracked the first bottle open and poured out four glasses. I know total heresy, I didn't give it time to breathe. Well I wanted to get a couple of ladies drunk so I didn't have time for 'breathing'. We had a quick toast to friends and sipped it down with gusto. Before I took my first sip I popped the Viagra in my mouth and washed it down with a swig of wine.\n\nWhile we were gulping our first glass of wine, I had a chance to appraise the choice of attire. Gary and I were both in polo shirts and shorts with sandals. Real sandals with straps, not those foam things with the thing between the toes. \n\nSandy was in what I guess would be a thin white camisole but it only went down to just above her belly button and a white tennis skirt that was three sizes too short. It barely went past her hoohaw. I knew there was no bra. I could see right through to her nipples, but I couldn't swear to her panty status. The white skirt seemed too uniform unless it was the white of her tan lines. \n\nAlex was in a tight shimmering metallic I don't know what kind of shirt. It was mesmerizing. It had a low cut v neck that showed a lot of cleavage. Enough to know that there was no bra in the world that would work in that shirt. Plus it wobbled just like her naked breasts and it was skin tight. It also did something else cool, if she turned and caught the light just right, it went transparent. The first time that happened, there was no doubt, there was no bra. I'm no expert on women's apparel so I don't know what to call her skirt or were they shorts. They were white and from what I could tell, there were no panties on her either. But I couldn't tell if they were open below or not. \n\nJust as I opened the second bottle of wine, the doorbell rang and Gary looked at his watch and said, \"It's probably the pizza.\"\n\nThe girls said, \"I'll get it,\" simultaneously and then broke up laughing.\n\n\"Both of you go get it,\" I said. So they did. \n\nI am pretty sure the kid delivering the pizzas was not ready to be met by two hot women wearing almost nothing and what they were wearing was mostly translucent. His eyes bugged out. \n\n\"Three pizzas, one meat, one veggie and one cheese,\" he finally stammered out.\n\nSandy said, \"Let me get you a tip,\" and turned around and bent down for her purse. \n\nGary called out, \"Tip is already paid for.\"\n\nBased on the way the kid's eyes bugged out, Sandy was going commando. He got a tip anyway, even if it wasn't cash.\n\n\"Oh ok,\" said Sandy.\n\n\"Yeah, the tip was included in the order,\" the kid finally said holding out the pizzas.\n\nOnce the door was shut Alex turned to Sandy and said, \"Twenty?\"\n\nSandy replied, \"Maybe. I'd say he was probably more like 19 years old. He certainly popped a boner quick enough.\"\n\nThey were still laughing as they put the boxes on the counter. \n\nI put some plates and napkins on the table and we dove in. Chatting, as if by common consent we all skirted the events of this afternoon and chatted about what we all were now calling The Party House. Gary mentioned that the last HOA meeting there was a complaint about short term rental houses. I asked why he was there and he said that he was there to meet the head of the architecture committee to see about getting a pool permit. He looked over to see Alex looking at him funny.\n\n\"Ah, shit!\" Gary said under his breath, \"Sorry babe, that was supposed to be your birthday present. I fucked up. Happy Birthday! Early!\"\n\nAlex just walked around the table and patted his leg. He swung his leg out and she sat on it and leaned in and gave him a big wet kiss followed by standing up and lifting her shirt. She leaned in and then started rolling her shoulders and slapping his face with her tits.\n\nFinally Sandy piped up with, \"Hey birthday girl, if that is supposed to be punishment, it ain't working. Look at that shit eating grin on your husband and mine.\"\n\nAlex stopped and started to laugh and we all joined in. she pulled her shirt down and I booed. So she turned to me, lifted her shirt and again and shook her tits in my direction before wiggling her butt all the way back to her chair with a very self-satisfied grin on her face.\n\nGary finally spoke up, \"Where was I. Oh yeah, some neighbors are getting pissed that there are some houses that are not being leased. They are getting rented for weekends or weeks at a time over these internet rental websites. I wonder if that is what The Party House is. And we got a weekend rental by swingers this weekend.\"\n\nThat got us talking about what we had seen going on and I finally said, \"I think we are done with pizza for now. Grab a refill of wine and we can reconvene in the living room after I bag this pizza and put it in the fridge.\"\n\nGary opened the third bottle of wine to finish the refills then he, Sandy, Alex and the bottle walked a little unsteadily into the living room while I finished clean up.\n\nI snagged the fresh disk and announced that we were going to have something different tonight for the featured movie.\n\nGary called out, \"Bambi.\"\n\nThe girls giggled and then their eyes bugged out as the TV screen blossomed with a panoramic view of The Party House.\n\n\"No way,\" Alex said. \"Is that what you were doing all afternoon?\"\n\n\"Uh-huh,\" I replied as I sat next to Alex.\n\nSandy went to sit on Gary's lap, but he whispered, \"It's your husband's night tonight. Go sit with him.\"\n\nShe looked hurt, but she came over to sit on my other side.\n\nThe initial panorama was replaced by a slide show of the first round of still pictures and then a movie clip of the three-way in the hot tub. And then there was a slow zoom in on a picture of the blonde coming out of the house.\n\n\"Holy Fuck, she is hot,\" exclaimed Gary as he reached down and started rubbing his crotch.\n\n\"Wow,\" said Alex, \"She is like sexy men's magazine super model hot. Those can't be real tits. They are so perfect.\" With that, she pulled off her shirt and looked down at her tits.\n\nSandy just stared and didn't say a word. \n\nNext came a picture of the blonde using a finger to wipe something off her cheek, then one of her sucking that finger and finally the guy with cum still dripping out of his dick following her.\n\n\"Oh my god,\" Alex said, \"She sucked him off. Good for you, girl. You go hot woman.\"\n\nThe rest of the pictures flew by along with movie clips. Watching the girls get double fucked and then adding a guy for the mouth. Then pictures of more people coming out to the pool area displayed. They congregated in groups of two and three in various sexual combinations and finally a guy came out with a big platter of burgers and he stood grilling while the supermodel blonde slowly sucked him off. There were a few more pictures of various sex acts and then the final clip. Supermodel blonde started stroking the chef fast and at the last second she pointed his cock down and he pumped a huge load all over her chest. When he was done, she rubbed it into her breasts and then licked her fingers and the two of them took the platter of cooked burgers in and everyone left outside followed them in. \n\nBy this time, I had tilted Sandy's head back and started kissing her. I had pulled her camisole up to her neck and was fondling her breasts. Alex had unsnapped my shorts and pulled them down and was sucking my dick. I pushed Sandy's skirt down and she lifted her butt so I could get it down to where she kicked it off. \n\nGary was staring at the TV and rubbing his cock through his shorts. I bent down to Sandy and whispered, \"Gary looks lonely. Why don't you go keep him company?\" when she looked up at me with hopeful eyes, I continued, \"Yes. You can do anything you want with him.\" \n\nHer sad expression turned to joy in an instant and she bounded off the couch as if jet propelled. \n\nAlex looked up at me and asked, \"Why? Didn't you want both of us?\"\n\nI looked down and smiled and said, \"I do. But she looked unhappy and he looked unhappy so let them be happy. I have you. And if you keep that up, you are going to get the easy one out of the way and I will get to last a lot longer when we do finally get our first fuck.\"\n\nShe smiled at that thought and started really working on my cock. Less than a minute later, I was blasting spurt after spurt into her mouth. \n\nAs she came up and we kissed, I said, \"Wow. It's going to take a few minutes to recover from that. Do you mind if I spend the time eating your pussy?\"\n\nShe grinned and said, \"Fuck no,\" as she slid her skirt or shorts or whatever they were down and kicked them across the room.\n\nI kissed her again this time with some tongue, tasting my salty cum in her mouth. \"I'll be right back,\" I said. \n\nI crossed the room and put a new movie in. It was one of those pseudo historical porn movies that a European porn movie studio likes to do. This one had plenty of girl on girl action, cock sucking, ass fucking, double penetration and a couple of really hot orgy scenes. By the time I got it started, Alex was leaning back moaning as she was stroking her pussy with her fingers. I glanced over to see Gary and Sandy on the floor in a sixty nine position with Sandy on top. She likes that position because she can get a cock all the way back to the back of her mouth and sometimes if the stars align, she can actually slide it into her throat a little. Having been the beneficiary, I know how good that feels.\n\nI knelt down by Sandy and whispered, \"Keep him hard but don't let him come. When Alex rides me, bring him over to show you how he preps her ass. I have a surprise for Alex planned.\"\n\nSandy grinned as best she could with a dick in her mouth and nodded.\n\nSince I was on my knees I crawled on all fours over and inserted my tongue into Alex's pussy. She moaned a little and then started running her fingers into my hair. I had glanced at the TV on my way over and I knew a girl on girl pussy licking scene was coming up. Based on what Sandy told me, it sounded like Alex might like girls as well as boys so I thought this would be a good scene to get her off.\n\nAs I swirled my tongue around her clit, I inserted two fingers into her pussy. Wow, was she wet already. The two fingers and my tongue already had her muttering, \"oh god, oh god, ogod, ogooo, ooooo,\" so I knew it wouldn't be long. Given how fast my cock was inflating it wouldn't be long for me to be ready to explore those depths. \n\nPulling my fingers out, I rubbed them all over Alex's little butthole and her muttering changed to \"ohhhh\" and \"ooouuuuuu\". I slipped the tip of my index finger in and made little circles and Alex went \"mmmmmmmm\".\n\nOpening her eyes she looked down at me and smiling said, \"Does this mean that you want my ass tonight as well?\"\n\nI tried to reply but, \"Of course,\" it came out more as \"Urfph kooos\".\n\nShe grinned and then the TV caught her attention. From the sound, I gathered that the girl on girl scene had started. Alex started running one hand over her breasts and then began pulling on one nipple and then the other. While she was doing that, I changed things up. I ran my thumb around in her pussy juice and spit slick cunt and pressed my thumb against her sphincter. It resisted like a rubber seal that suddenly relaxed and my thumb penetrated her. \"Oh god whatever you are doing, keep it up,\" she moaned. \n\nI inserted my two middle fingers into her pussy and she groaned with pleasure. I started alternating directions with my tongue swirling on her clit. Two times around clockwise, then two times around counterclockwise then a lick straight up over the top and back down again as I was fucking her holes with my fingers. It was so cool to feel my fingers and thumb rubbing together through a piece of skin that only felt condom thick. I could start to feel her clench my thumb with her ass muscles so I knew she was close. So I tried something I had only done once to Sandy and she freaked out and had one of the biggest orgasms I had ever given her. I took the tip of my tongue and started at the base of Alex's clit and ran it up the front and then peeled the skin hood back and licked directly on her clit. \n\nA bunch of things happened almost simultaneously. First Alex shrieked. I was afraid I had hurt her, but the hand that was playing with my hair pushed my head down hard. After the shriek she started to babble, mostly, \"Oh fuck, oh fuck, oh fuck.\" Then I felt my thumb being squeezed very strongly and my fingers too. The muscles were pulsing in time to the ripples on her tummy. When she shoved my head down, my nose ended up rubbing her clit and my mouth was still open when she squirted. Most of it went on my chin and neck but a little went in my mouth and although it tasted a little funky, it wasn't pee. Somewhere in there, her hips began hump up and down off the couch and then finally she threw her head back, her legs and everything went rigid for a few seconds and then she crashed. Everything went limp.\n\nI pulled my head out from between her thighs and her hand made no resistance. As I got up on the couch next to her, her hear rolled around and she moaned from deep in her soul. It sounded like the contented purr of a 600 pound tigress. I started to check for a pulse and I noticed Sandy and Gary were right there. As I touched the side of her neck to find her pulse, her eyes opened and her hands snapped up and pulled me into a kiss that I swear tore at my soul. \n\nBy then, as if in slow motion Gary asked, \"Babe, are you all right,\" you know that deep slow motion sound they use when time slows down. Like that.\n\nAnd then, just like that, she released me and everything snapped back to normal. \n\n\"Oh. My. God,\" Alex said, \"That was such a beautiful place I went to. I haven't felt that loved and at peace in forever. Thank you. Oh my god thank you is not enough.\"\n\nWe were all staring at her as if she had lost her mind and I think she finally felt it. She reached out and touched Gary's face and said in a voice full of love, \"I love you so much Gary. Thank you.\" \n\nShe turned her head and looked at Sandy and said, \"Thank you Sandy for sharing Rob. I love you my sister.\" With that she leaned forward and gave Sandy the same sort of kiss she had given me. I could tell it was affecting Sandy and she started giving back.\n\nFinally, Alex broke the kiss and turned to me. She pulled me into a full body squeeze and kissed my neck leaving a damn good hickey. Then pulled back and said, \"Thank you Rob. I have never had an orgasm that intense.\" \n\nJust then she tasted something and looked at me and licked my neck lightly and finally said, \"Why does your neck taste funny?\"\n\nAt that point, I lost it and started laughing, I tried to control it, but I couldn't. I was laughing so hard tears were running down my cheeks. By now everybody was looking at me like I had lost my mind and maybe I had. The worry that something bad had happened to Alex and her emotional outburst of love and then the 'why does your neck taste funny' question. I lost it. I finally had to hold up my hand and then started to get control.\n\n\"You squirted,\" I finally choked out. \"All over my neck and chin and a little in my mouth.\"\n\n\"I didn't,\" she said huffily, \"That's just porn sluts peeing on each other.\"\n\n\"Not always,\" Gary said. \"Women can make a fluid very similar to the seminal fluid in guy's ejaculate.\"\n\n\"Really?\" asked Sandy. \"I mean I've heard of it and obviously all of us have seen it in porn movies. But it's real?\"\n\n\"Supposedly, it is and if Rob said Alex squirted on him I believe it. I mean, I am almost embarrassed to admit this, but I have actually researched this with the intention of trying to get Alex to squirt,\" said Rob sheepishly.\n\nSandy leaned over and licked my neck, smacked her lips and said, \"It does taste different. That is not a normal Rob taste. I mean I kiss and lick his neck all the time and it never tastes like that.\"\n\nI looked at Gary and said half seriously, \"Are you going to lick my neck next?\"\n\nHe looked like he might do it for a second and my mind was going, 'This is now in the realm of weird,' but he didn't. He leaned down and licked Alex just below the belly button and said, \"Hmmm. It does taste weird. Like pussy juice and semen and something else.\" \n\nI leaned down licked a wet spot on Alex and said, \"Yep. That's the stuff. It's definitely not pee and I haven't come on her, yet,\" and flashed her a smile, \"so that's not it either.\"\n\nSandy leaned down next and licked. \"Hmmmm,\" she said. \"I agree with them. I think you squirted. Congratulations!\"\n\n\"Well, if you guys are all done licking me, can I ask a big favor? Do you have any cake or cookies or ice cream or something sweet?\" Alex asked. \"I'm feeling a bit woozy after that humongous orgasm and I feel like I am craving sugar.\"\n\nI looked at Sandy and then said, \"We don't but can you wait about 25 minutes? We have these frozen apple tartlets that are amazing, but I'll have to bake some.\"\n\nAlex nodded and said, \"Those sound yummy. Please Daddy can your little girl have an apple tart?\"\n\nWe all giggled at the way she shifted her voice into little girl mode and I said, \"Of course you can, my sweet. Shall we adjourn to the kitchen or do you three want to watch the movie and mess around while I get these ready?\"\n\nThe girls said they would go with me, so Gary said he would go too.\n\nOnce we got into the kitchen, I cranked up the oven and pulled a couple boxes of the tartlets out of the freezer. Alex took a sip of wine and then said, \"I'm feeling a little sticky. Would it be alright if I got a shower real quick?\"\n\nWe all said it would be fine and Sandy said, \"Follow me.\"\n\nAs they were leaving the kitchen, a weird impulse flashed over me and I yelled out, \"Sandy, grab the camera and take some pictures.\"\n\nAlex whirled around and put her hand on her hips and said angrily, \"You want dirty pictures of me? In the shower?\"\n\nI replied instantly, \"Yes. But they will be clean pictures. You will be showering remember?\"\n\n\"Oh you dirty boy,\" she said laughing, \"C'mon girl let's see what we can do to humor your pervert husband.\"\n\nJust then the oven chimed and I tossed the tartlets in. Setting the timer I yelled at the departed girls, \"Twenty minutes and they come out of the oven.\"\n\nA very faint, \"Thank you,\" came back.\n\nAs I turned to take a sip of wine, Gary looked up and said, \"I want to thank you for not being mad about what happened this afternoon.\"\n\nI took a deep breath, exhaled and then said in all sincerity, \"Gary, it was inevitable. The last time we got together for movie night all it would have taken was a nod or somebody just saying yes and Sandy would have had your cock up her snatch so fast she would have broken your neck from the whiplash. And I'd have been right there with Alex. I mean there was so much sexual tension in the room that you couldn't have cut it with Excalibur. ",
        "\"We all wanted to fuck what society says we shouldn't have. And I'm ok with it. Sandy told me exactly what happened. We can argue finer details till the cows come home. But the bottom line is that Sandy wanted your cock. You wanted your cock inside Sandy. It happened. I know we had some unwritten bullshit 'rules' about not doing anything without full consent and everybody present. Well it didn't happen. Was anyone struck by lightning? No. And you had the balls to set this up tonight so that I could have both girls all night in compensation. I appreciate that. \n\n\"But you are beating yourself up unnecessarily. That's why I sent Sandy over to you. Call it a peace offering. We love our spouses more than anything in this world. I can see that the way you guys look at each other. We do the same. This is not going out looking for replacements. This is just a couple of old married couples looking to spice things up. Alex knows some tricks Sandy doesn't and vice versa. You do things differently than I do and vice versa.\"\n\n\"Speaking of that,\" Gary said. \"You have to teach me whatever you did to get Alex to squirt. I have never seen her pass out like that from sex before.\"\n\n\"I wish I could tell you that I had some great secret,\" I said. \"I was just trying things and if she moaned I kept doing it and if she didn't I moved on. I was just building up her orgasm by licking her pussy and focusing on her clit when it happened. Oh and I had my middle two fingers in her pussy and my thumb up her ass. I was rubbing my fingertips with the tip of my thumb like this,\" I showed him by demonstrating it.\n\n\"Hmmm,\" Gary said, \"I've Brunswicked her before and never gotten that kind of reaction, but then I never tried rubbing the fingers with the thumb.\"\n\n'Brunswicked' I thought, what an odd term and then it hit me. That is the classic way you hold a bowling ball, two middle fingers and a thumb into the holes in the bowling ball. 'Learn something new every day.'\n\n\"Hey speaking of trying something new,\" I said. \"I asked Sandy to keep you hard but not let you come. After I ate Alex, I was going to sit on the couch and have her climb up on me. When Sandy saw that, she was supposed to ask you to teach her how you prep to fuck Alex's ass and have you demonstrate it on her while I had my cock in her pussy. The end goal was both to teach Sandy so she can teach me how to fuck her ass and to have you fuck Alex's ass while I fuck her pussy. That way she gets to be the little brunette girl.\"\n\n\"Whoa, her double penetration fantasy,\" said Gary with a big grin.\n\n\"Yeah,\" I said, \"But I spoiled it by sending her into cardiac arrest or something. I have never seen somebody come that hard. Not even in movies.\"\n\nSo I outlined a new script and Gary nodded and added some details. It only took a couple minutes and Gary concluded, \"That sounds like a plan, Stan.\"\n\nJust then the girls arrived back. They had stopped and raided Sandy's lingerie cupboard and were seriously decked out. I didn't get a chance to drool too much because the oven dinged and I had to get the tartlets out. \n\n\"Oh my god, those things smell great,\" Alex exclaimed. \n\n\"And you guys look ... I'm out of words,\" I said. \n\nThe girls blushed and both did a little pirouette, which would have probably gotten them arrested had they done it in public. \n\nSandy was in a pink teddy that I only vaguely remember buying for her years ago. It had a lacy top that captured her ta-tas. And sheer semi-opaque material that went down to just above her pussy. The front was split right up the middle and it looked perfect for running your hands up to cup those breasts and tear the whole thing off.\n\nAlex was in what I would call a one piece crotchless onesie. It wasn't lace but looked more like a very tight crochet like your grandmother's doilies. It was curve hugging and just looked like it was perfect for exploring with your hands. \n\nI turned to Sandy, \"I remember the pink one, but I don't remember the white one.\"\n\nShe giggled and said, \"That's because I never got to wear it. One of the bridesmaids gave it to me as a shower present to wear on our wedding night and after you were so careful in helping me out of all that wedding gown without tearing anything, you picked me up and threw me on the bed just wearing the white stockings. I figured after the second time we fucked, that there was no point in wearing it.\"\n\nAlex got a horrified look on her face and said, \"Oh I am so sorry. I didn't know. You should have said no and made me wear something else.\"\n\nSandy went over and hugged her, \"It's ok. It's more your size than mine. I'm a little longer in the torso and you are longer in the legs. When I tried it on a couple of years ago, it was really tight in the crotch. It definitely fits you better than me. Besides, Jenna the girl that gave it to me was a bitch. About a year after we were married she tried to seduce Rob. So she got booted off the friend's list.\"\n\n\"Oh, am I going to get booted off the friend's list?\" asked Alex sounding worried.\n\nSandy laughed, \"No. You just want Rob for sex. You have Gary for love. Jenna wanted his body, his heart and probably his soul.\"\n\n\"Anyway,\" I said, \"tartlets are ready. They are best eaten when they are warm. We have some ice cream cups if you want to do yours ala mode.\"\n\nFor the next few minutes everybody was too busy snacking to converse. Finally Gary broke the silence, \"Damn Rob, where do you get these? These are delicious.\" \n\nI pulled one of the boxes out of the trash and showed him and said, \"Local grocery store in the frozen dessert section. Just pop 'em in the oven and they are ready to go. I don't recommend microwaving them, they get kind of mushy.\"\n\nAlex shoved the last bite in her mouth and then said, \"Well there goes my diet. If you go to the store and they are out, I think you may know why.\"\n\nWe all laughed and then Alex got serious, \"Do we want to go back into the living room or did I kill the mood?\"\n\n\"Hey,\" I said, \"You didn't kill the mood. We all got concerned about you is all. I mean it is not every day that I cause my partner to pass out.\"\n\nSandy stepped up and said, \"Actually, there is a big favor I wanted to ask you two,\" pointing at Alex and Gary, \"You seem to enjoy, um, um --\"\n\n\"Spit it out,\" Gary said. \"Ass fucking?\"\n\nBy this time Sandy was blushing pinker than the teddy. She nodded and said, \"Yes. Ass fucking. Rob and I haven't really explored that. I let him stick his finger in my ass once in a while but that is about it. The one time he put his cock in my ass, I screamed and made him take it out it hurt so much. What I was hoping was, if maybe, you two, could maybe teach us. You both seemed to enjoy it yesterday.\"\n\n\"Are you sure, Sandy,\" Alex asked.\n\nSandy nodded and Alex looked at me. I nodded. She looked at Gary, he nodded.\n\n\"Ok,\" she said, \"It looks like everyone is in agreement.\"\n\nSandy put her dishes in the sink and everyone followed suit and followed her into the living room. Gary flashed me a thumbs up and I grinned back.\n\nGary asked if we had any kind of personal lubricant. I headed into the bedroom and brought back the only bottle we had. \n\nAlex took over and picked up the bottle of lube and spread some on her fingers. \"This will do,\" she declared as she bent over the couch and handed the bottle to Gary.\n\nShe looked at me and asked, \"Do you have any antiseptic cream with benzocaine or lidocaine?\"\n\nI said, \"I bought some anal cream a few years ago that has something in it. I'll be right back.\"\n\nIt took a few minutes before I found it and I practically ran back. \n\nAlex was moaning as I got back. Gary was licking her ass as a warm up.\n\n\"Got it,\" I said. \"Hope it still works.\"\n\nAlex took the tube and put a small dot on her fingertip. She touched her tongue to it and shook her head. \"Thtill workth,\" she said. \"Just kidding. Wow. Half my tongue is numb. This is good stuff, Rob. Just make sure you put it on her ass AFTER you are done licking it.\n\n\"First you can put a little on your cock and it will slow you down by numbing you. Gary used to come too fast because anal feels different and it can be a bit exciting and dirty because it is forbidden. That can get you guys revved up and you'll blow your load quickly.\"\n\n\"Yeah,\" I said while looking at Sandy, \"Been there. Done that.\"\n\n\"For us,\" Alex continued, \"It has to last. Anal is always going to hurt, at least a little when we get our buttholes stretched out. BUT, it gets better and the longer your dick can last the better it will feel for us and the better chance we will have of having an orgasm as well as you guys.\"\n\nGary took the anal cream and spread a dime sized glop of it on his finger and then inserted that finger directly into the center of Alex's butthole. \"This will have to do, dear, the tube is just about out.\"\n\n\"Ooooohhhhhh, it's cold,\" said Alex, \"But I can feel it numbing.\"\n\nGary continued, \"You don't want to spread it around outside too much. If you do, she won't feel anything. Just that little bit on the inside. Then take a minute and kiss her butt and play with her tits or rub her back or whatever to kill a few minutes to let the cream work.\"\n\nI took the time to lean down and kiss Alex and tell her, \"Thanks for doing this.\"\n\nShe grinned and said, \"My pleasure, or it will be in a minute or two.\"\n\nThat broke the tension and everybody laughed. \n\nGary leaned towards me and whispered, \"I'll get her warmed up and pass her off to you.\"\n\nI nodded and Sandy gave me a quizzical look. I put my finger to my lips and she just shook her head.\n\n\"Ok. That should be good enough,\" Gary said. \"Now we will use the lube. Despite what you see in the pornos, lube, lube, lube. They use a special thin lube just before the shot. That's why you see the guy slapping his dick on her ass and then they cut to a close up or they just cut to his cock already being up the butt. It's not that they didn't lube, they just didn't show it very often.\n\n\"Start with a little, dribble it and then take your time. Don't just jam fingers in. Ladies take time to get warmed up when you fuck their pussies. They take twice as long when you fuck their asses. So give them time. Make it into playtime. Circle the hole like those 'Drop a coin' things at supermarkets where the coin circles round and round before they drop into the hole.\"\n\n\"Ohhhh baby, you are tickling me so much,\" Alex said with a moan. \"Mmmm, keep it up. I love it.\"\n\nGary continued another circle and then dipped the tip of his finger in. As he dipped it in he dribbled a little more lube dead center in the target. The finger took the new lube and pushed it in. He slowly worked that finger in and out adding lube periodically. Alex continued to moan.\n\nGary finally said softly, \"The next step up is either your thumb or two fingers--\"\n\n\"Two fingers, please,\" said Alex.\n\n\"Everyone has their favorite,\" Gary said with a grin and he slowly added his middle finger and more lube.\n\nWithin a minute he was sawing his two fingers in and out of Alex's ass quite rapidly when Alex squirmed and moaned under the invading digits.\n\n\"Please, now honey,\" whined Alex, \"Please give me your cock. Please.\"\n\nWith that Gary stood up, drizzled some lube onto the head of his cock, removed his fingers and inserted his cock into the twitching open space. He moaned and Alex cooed, \"Oh yeah baby. Take my ass. Fuck me baby. Fuck my ass.\"\n\nSandy and I just stared wide eyed and slack jawed at the exhibition in front of us. I flicked my eyes to Sandy just as she looked at me. All I could see was a look of unbridled lust. I flicked my eyes down in time to see three fingers disappear into Sandy's snatch. Maybe, just maybe there is a chance I will get my cock into her forbidden zone.\n\nWe turned our attention back to Alex and Gary as he gained control and continued to lecture, albeit with a somewhat shaky voice, \"Rob, one of the hardest things, especially in the beginning is to avoid the desire to just ram your cock balls deep right away. Give her a moment to get used to you. And Sandy, you can help out a lot by asking Rob to stop and stay put when you need a moment to get used to it. You are not a pro porn slut who takes horse cocks at a moment's notice. Baby yourself a little and make him take it easy. He may come too soon the first few times.\"\n\n\"Gary did,\" Alex chimed in. \"If you are done talking please get back to fucking my ass. I want you deep inside me, slowly.\"\n\n\"Your wish is my command, my love,\" he responded.\n\nSandy and I watched the magical disappearing dick trick from opposite sides of our friends in amazement. It was slow but steady until Gary was balls deep into Alex. At which point he reversed and pulled almost all the way out. All the while Alex was muttering, \"Oh god, oh god, oh god that feels so good.\"\n\nWithin a few strokes Alex had her hand rubbing her pussy furiously and moaning. Gary's breathing was deepening and he was closing his eyes. Then Alex arched her back and screamed out, \"Oh my god I'm coming,\" and she started pushing her ass back onto his dick with abandon.\n\nWhen her head dropped and her hand fell out of her pussy, Gary pushed in and pulled out one more time and with what should have been an audible pop noise, pulled his dick out of Alex's ass.\n\nTurning to me, Gary said, \"Are you ready to fuck Alex's ass?\"\n\nNot expecting that, I looked at Alex who was now looking at me, pleading with her eyes. Grasping for words, I finally said, \"No.\"\n\nThe three of them looked at me as if I had lost my mind.\n\nGathering what few wits my blood starved brain could muster, I said, \"I haven't had the chance to enjoy Alex in a normal cock in the pussy fuck yet. I think we should try that first. I kind of know the mechanics of how to do that fairly well. I don't want her to think I am a lousy lover because we start off in unfamiliar territory.\"\n\n\"Oh, that's so sweet,\" gushed Alex as she came off the couch and into my arms. \n\nGary stood up and held out his hand for Sandy. She stood up as well and the two of them headed for the recliner with Gary whispering something that caused Sandy to glance back and go, \"Really?\"\n\nIgnoring them, I turned my attention to Alex and said, \"Woudst my Lady be enjoyeth of climbing on top of her faithful admirers rampant member?\"\n\nRaiding an eyebrow she grinned and said, \"If you are asking me to jump your bones, then I accept. Top or bottom?\"\n\n\"Hmmm,\" I said, \"I will take bottom if you don't mind. Your little exhibition left me, how shall I say this delicately, harder than a fucking steel I-Beam and hornier than a bull in a herd of cows in heat. I usually last a little longer on the bottom.\"\n\n\"Oh dear, I guess you need to climb up on that couch right now then,\" Alex said still grinning, \"Cowgirl or reverse cowgirl?\"\n\n\"Definitely cowgirl,\" I said without hesitation, \"I want to see your tits bounce.\"\n\nShe laughed and waited until I settled down on the edge of the couch before she slipped my cock into her mouth.\n\n\"Awww,\" I said whining.\n\n\"Just wetting your whistle,\" she said as she kissed her way up my body. \n\nI found myself holding my breath as she straddled me and rubbed my cock along the length of her pussy twice before placing my cockhead at the opening to her love canal. \"I am going to go slow,\" she said sensuously, \"So I can enjoy this first fuck too.\"\n\nI watched as my cock slowly disappeared inside her and then closed my eyes to concentrate on the sensations from that tiny bit of skin. I felt her lips seeking mine and I kissed her back as I ran my hands down her body and cupped her ass. I could hear occasional clicks from the recliner so I knew one of them was memorializing this with pictures.\n\nIt was starting to feel really good and Alex was definitely climbing Orgasm Mountain. I looked over and gave Gary a thumbs up and he nodded and whispered to Sandy. The two of them quietly came over. Sandy positioned herself to get some great pictures and Gary positioned himself right behind Alex. I closed my eyes so I wouldn't give away the surprise.\n\nAlex froze for a moment and I grabbed her head to keep her from looking. \"Oh god Gary,\" she said in a high squeaky voice, \"you are not doing what I think you are? Are you?\n\n\"Oh yes you are. You are going to fuck my ass while Rob is in my pussy. Aren't you? Oh god, I feel your head pressing in. Please go slow, you didn't stretch me out. Oh god. Oh god. You are in. Oh, I feel so full. I have never felt this full with both of you in me. You are moving too. I can feel you pushing into me. Oh my god. I am going to explode. Oh don't stop I want you balls deep in me. Keep going. Did you guys have this planned? Oh thank you, thank you, thank you. I fell so full. Are you all the way in? You are. I can feel it. Oh my god. You're both fucking me.\"\n\nGary in his infinite wisdom chose that moment to pop off with, \"Now I know why they get a third cock for their mouth. Just shut up and enjoy it honey.\"\n\nAlex started laughing and I have to admit I have never been fucking Sandy or the couple of girls before her when they started to laugh. I never knew women's cunt muscles contract when they laugh. No wonder women like guys that can make them laugh. It makes them feel like they're coming.\n\nIn any case, Alex shut up and started moaning instead. Gary and I started a ragged in and out rhythm that got better with a little practice. Alex made up the ground she lost and was soon well on her way up Orgasm Mountain. I was trying desperately not to come as I was really enjoying this. Alex's pussy felt like I was fucking a silk lined kid glove (don't ask how I know that) when it was just me. The addition of Gary's dick up her ass made it twice as tight. I could imagine it was like this when she lost her virginity. \n\nBut all good things must come to an end, and when Alex began to come and her pussy began to spasm on my cock, I lost it. I could feel the fire in my balls unspool and come rushing out to flood her love box in huge throbs of my cock. Gary later said that it was the throbbing of my cock as well as the pulsing of her ass muscles that sent him over the edge and he began to pump what he said felt like gallons of cum into her bowels.\n\nThe three of us melted together, joined by our orgasms and then just as suddenly separated. Gary got the \"shaky leg\" syndrome and slipped out of Alex's ass and sat down heavily on the floor. Alex shuddered and leaned down to kiss me and then suddenly sat upright, pulled off me and bolted for the bathroom. As she ran she clapped one hand over her ass and one over her pussy. \n\n\"Wow,\" I said to no one in particular.\n\n\"Wow, indeed,\" Gary echoed.\n\n\"That was fucking amazing,\" said Sandy. \"I am so turned on and so want to do that and so fucking scared of doing that.\"\n\n\"Well, come here my love while I am still hard and ride the magic wand,\" I said half-heartedly.\n\nI heard the camera hit the table and I winced. A second later I felt something cold on my cock and I opened my eyes to see Sandy squeeze the last of the lube out over my dick and turn around. She reached back and aimed my cock at her backdoor and before I could say or do anything, she had backed up and started to sit down on me. I heard the click of the camera and saw that Gary was filming. As I said before the best we had managed in the past was getting my cockhead partway into her ass before either I came or she screamed in pain. This time, she drove herself down and I felt my cock pop into her. \n\n\"Ow,\" she said. \n\n\"Stop then,\" I said, as I unsuccessfully tried to pull back.\n\n\"No. I want this,\" she said and she continued to force my cock into her tight orifice. \"It hurt when you took my virginity, too. I can do this. I can do this.\"\n\nShocked I blurted out, \"You were a virgin when we fucked the first time under the blanket at the lake?\"\n\n\"Yes,\" came the strained reply. \"I had broken my hymen by playing with myself, but it still hurt a lot when your cock pushed into me the first time.\"",
        "\"You said you weren't a virgin,\" I persisted.\n\n\"I lied,\" she replied, then crowed in satisfaction, \"I have you. You are all the way into my butt. It feels so odd. It's like the biggest shit I've ever taken and it won't stop. But it doesn't hurt anymore. It kind of feels tingly. How does it feel to you?\"\n\n\"It feels so tight and warm,\" I said. \"Like when you jacked me off while you were wearing your gloves when we were driving home from the Christmas party. You were squeezing me so hard because you couldn't feel how hard you were holding me. It's a little like that.\"\n\n\"I'm going to try fucking your cock now,\" she said as she lifted up slowly and I could see my cock slowly emerge from her ass. Then it disappeared as she lowered herself.\n\nBy this time Alex had returned and passed Gary a washcloth and he passed her the camera as he washed his groin.\n\n\"You're doing it girl!\" Alex exclaimed her encouragement.\n\n\"I am aren't I?\" Sandy said as she picked up the pace of sliding me in and out.\n\nAlex handed Gary the camera back and moved in to lick Sandy's pussy and my balls. I actually welcomed the distraction because I was so close to blowing my load and I wanted Sandy to have a positive experience. I sat up a little straighter and was able to reach Sandy's tits and she leaned back a little more to give me better access. I cupped them, squeezed them, flicked my thumbs across the nipples and pulled her nipples between thumb and forefinger as she continued to fuck her ass on my cock.\n\nThe addition of Alex's tongue was all it took to push Sandy over the edge. A moment or two after Alex started I could feel Sandy's ass muscles pulse on my cock and my cock responded. It throbbed and then throbbed again and the third time the first spurt of my jiz blasted into her ass. I don't know if she was coming before but she definitely started coming as my cock throbbed in her ass and spit cum deep into her. She shuddered and moaned uncontrollably for almost a minute (we clocked her on the video later).\n\nFor myself, I was slumped back on the couch. I came so hard I saw black spots that eventually merged and I apparently passed out. I came to as Sandy got up on twitching legs and Gary and Sandy helped her to the couch to lie alongside me. After she was next to me and I had recovered enough to kiss her, Gary and Sandy high fived each other in celebration. \n\nI would like to say the shenanigans went on all night, but they didn't. We vaguely remember getting kissed good night and then Gary and Alex must have let themselves out. I woke up about 2 am and decided I needed a shower. I woke Sandy up and we took a quick shower together. Nothing but a little slap and tickle and some washing up happened and we rolled into bed and were back asleep by 2:45.\n\n******\n\nThis ends Part 1 of The Party House. I hope you enjoyed it. If you did, Please take a moment to rate the story and leave a comment. Then stay tuned for Part 2, where we have some more sexual shenanigans with the neighbors and we begin to solve the mystery of The Party House\n\n \n"
    ],
    "authorname": "JamesMiehoff",
    "tags": [
        "anal",
        "group"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/the-party-house-pt-01"
}