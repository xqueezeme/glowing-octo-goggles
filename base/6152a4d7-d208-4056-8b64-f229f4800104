{
    "title": "Thorne Ch. 10",
    "pages": [
        "Note: Thanks again to all of you for reading, commenting and voting! Thanks to Jean and Donalde for beta reading for me- I appreciate it!\n\n\n\nWilliam stopped and looked at Olivia. It was obvious that she had something to say.\n\n\"What is it?\" he asked trying to help her.\n\n\"Who-did you kill my father?\"\n\n\"Yes,\" he replied, \"but he didn't suffer. You wouldn't have wanted it that way.\"\n\n\"Thank you- I was hoping that you would be the one to kill him for that reason. Are you hurt?\"\n\n\"No I'm fine and relieved that you're safe,\" William replied.\n\n\"What happened to your family?\" Olivia asked not sure that she really cared.\n\n\"If they are smart-they are long gone. They were granted free passage out of the state and will live as long as they don't come back. Harry is dead.\"\n\n\"Harry is dead? How?\" she asked mildly surprised.\n\n\"Olivia, Harry killed the girl that was found behind the club. She wasn't the first one that he has killed. It was him that landed us in this mess which has turned out to be a blessing in disguise. I'm sure that you've figured out what your father's intentions for you were.\"\n\nOlivia was quiet. She was thinking about how much she could tell him.\n\n\"I'm sorry but I'm glad that he's dead. He and my father killed my mother. And yes- I figured out what my father was up to.\"\n\n\"There is no need for apologies,\" William said. \"I knew that Harry killed your mother and I've often wondered how your father didn't know -now I understand. Olivia, I am sorry for the pain that my family has caused you.\"\n\n\"Did you mean it when you offered your services?\" Olivia asked abruptly changing the subject.\n\n\"I meant it,\" William replied.\n\n\"Then I think that you should stick around and meet everyone else-if you aren't busy.\"\n\n\"I am at your disposal,\" William replied with a bow.\n\n\"William- you just apologized for the pain that your family caused mine,\" Olivia said softly. \"It is I that should be apologizing to you. We've killed, tortured and maimed so many of your kind out of ignorance and because we chose not to think for ourselves- I include me in that. I'm sorry.\"\n\nWilliam wanted to take her into his arms but didn't. She wasn't ready for that and might never be. For now it was enough that she accepted him as part of her security detail. He would think about the rest of it later. Her safety came before anything else. Once the others arrived, they needed to get Olivia somewhere safe until things settled down and she had a chance to regroup. She hadn't had time to mourn the death of her father and that needed to happen before she could focus on anything else. He knew that she was trying to convince herself that it didn't matter and that she had to appear strong. When she finally realized that it was alright to grieve; he would be there. He took a moment to think about what was left of his family. He sincerely hoped that they left the state and stayed out of trouble. Of the three of them, he would lay bets that his father would be the one to try to get Nell and his mother Involved with the hunters again. He hoped not. If they did he would have no choice but to treat them as enemies. There was the possibility that they could side with Olivia-he didn't think so, but then; one never knew.\n\nBy evening, the other two couples were there. The wolves had been able to break away early and were anxious to meet the hunter who had turned against her own. William stood behind Olivia and slightly to her right as she talked to the group.\n\n\"I want to get a few things straight,\" she said. \"I am not my father nor am I a puppet to the Blackwell's or the Sinclaires. I will admit to you that I don't want this, but I accepted because I want this senseless war to stop. I will also admit that I am ignorant about your race. I won't lay all of the blame on my father- I could have learned the truth. It was easier to accept what he said as gospel. My point is this, I'm going to be asking a lot of questions and I don't want you to be offended.\"\n\nThe small group looked at each other and then at Olivia.\n\n\"Olivia,\" Natasja said. \"We have much to learn from you as well. I'm sure that we will also be asking questions that may seem rude, but how else will we learn? I for one am anxious to learn more about your kind.\"\n\n\"As am I,\" Milo said taking Natasja's hand. \"We would be honored to serve you.\"\n\nThe other vampire couple, Hugh and Jackie Bates had been silent up until that point.\n\n\"How do we know that this isn't some elaborate trick to help you take over and continue what your father started?\" The Jackie asked. \"I mean, maybe you're just as bad as your father was.\"\n\n\"That's a valid question,\" Olivia said after a short pause. \"And I don't know if I can answer it. I wish that I could say that I'm one hundred percent sure that I'm not like my father or that I won't turn into him. I can however promise that I'll do my best not to. Part of this is about trust. I trust you to keep me safe and to tell me if you feel that I'm being unfair in a bad way. Am I nervous? Of course I am but that doesn't mean that I don't trust you. I'm asking that you trust me in return.\"\n\n\"What about him?\" Hugh asked looking at William. \"He's a traitor not only to his own kind, but to the people for whom he worked. How do we know that he won't switch sides again?\"\n\n\"You don't know that,\" William said. \"As Olivia said, this is a matter of trust. You don't trust me and that's understandable. Even so, I'm not going to justify why we did what we did. Our main objective here is to keep Olivia safe and to rebuild the hunters into what they were meant to be- part of the line of defense against creatures such as the rogue and hunters like her father had been. You can like me \u2013or not- it matters little to me. Olivia's wellbeing is all that I care about.\"\n\nThe husband/wife team looked at each other and then at Olivia.\n\n\"We are here to serve you and we will serve you even if it cost us our lives,\" the male said. \"But understand this- we do not like nor do we trust the traitor that stands behind you. We accept him because you have chosen him to stand with you.\"\n\nOlivia tapped her fingers against the table for several long minutes before she spoke.\n\n\"Thank you for your time, but I won't need your services.\"\n\nEveryone stared at her not sure that they heard her correctly.\n\n\"Things are going to be hard enough without the members of my security team not trusting each other. Not only will you need to have my back, we have to look out for each other. You came here with your mind already made up about William...\"\n\n\"You would choose a traitor over us?\" Jackie asked shocked.\n\n\"Let me tell you about that traitor,\" Olivia said as she leaned forward. \"That traitor risked his life for me. That traitor could be somewhere safe, but he's here. That traitor killed my psychopath father not only saving my life, but the lives of many others. Now, back to your services- as I said, I won't need them. I would rather do with less than have to worry about whether I can trust you to have all of our backs.\"\n\nWilliam and Benita's eyes met. They liked what they were seeing. Rufus Saunders had seriously underestimated his daughter.\n\n\"Wait,\" Hugh said alarmed by the turn of events. \"We meant no disrespect. We were simply being honest with you about our feelings. We had no idea that he was the one that ended the lead hunter's life.\"\n\nHe looked at William and bowed his head deferentially.\n\n\"On behalf of me and my mate, I beg your pardon. It seems that we have misjudged you. Olivia, would you please reconsider your decision? We give you our word that we will protect all of you as you would protect us. \"\n\nOlivia resumed her tapping on the table. They would eventually learn that it meant that she was thinking and was not to be disturbed. Thirty minutes passed before she spoke.\n\n\"Why are you so quick to trust me?\" She asked. \"Or don't you? And if not, why are you here?\"\n\n\"We heard about you,\" Jackie replied. \"We voiced our questions about you and you responded. The one behind you has yet to open his mouth in his defense. As far a trusting you, if Benita and Kenneth are here; then you are trustworthy. You also have the support of the Sinclaires and the Blackwell's behind you- that is all that I need to know. What does he have to offer?\"\n\n\"What do you wish to know?\" William asked quietly but firmly. \"Do you want to hear about those that I killed while under the employ of Rufus? Tell me- what do you want to know?\"\n\n\"William...\"\n\n\"Olivia, they are right. I can't expect them to trust me on sight. I would feel the same if I were in their position.\"\n\nA few minutes later, William had answered all questions with the main one being how did they know that he wouldn't turn against them.\n\n\"Our duty is to protect Olivia from all threats within our ranks as well as those on the outside,\" the male vampire said. \"That also means that you have the right to ask us about any motives that you see as suspicious as we have the right to question you. I apologize for misjudging you and I thank you for being willing to answer our questions. Olivia, I also owe you an apology. We should have withheld our thoughts until after we met with you. Once again, I ask that you rethink your decision regarding our service.\"\n\nOlivia had just learned her first lesson. William and the couple were right. Trust needed to be built and not taken for granted. Blind faith is what her father had demanded of those under him.\n\n\"I accept your apology and will make one of my own. I was wrong to expect you to blindly trust me-that is something that my father would have expected. I would like for you and your mate to stay. Before we continue, are there any other concerns?\"\n\nBenita and William exchanged another look. Olivia was going to be fine.\n\nThey spent the next several hours deciding on where to go. Wherever it was, they needed to leave soon while things were still in an upheaval. The only people other than them who would know where they were going would be Thorne and Ethan. All of them made suggestions with William making his last.\n\n\"I have a place,\" he said quietly. \"The problem is the same as the other options- getting her there. I would like to make a suggestion if I could.\"\n\n\"We're listening,\" Milo said. He liked William and had no qualms with him being on the security team and made it his personal business to ensure that William's back was watched.\n\n\"I would suggest that we travel at night when we are the strongest. Those of us who are vampire will take care of things at night while you who are wolf stand guard during the day.\n\n\"Where is this place?\" Kenneth asked. \"And are you sure that no one else knows about it?\"\n\n\"No one knows about it,\" William assured him, \"not even my family. It isn't a large place, but we will make do until we come up with something better.\"\n\n\"It will hold all of us?\" Benita asked.\n\n\"It will and since most of us are mated, it makes things easier. When all is said and done, there will be a room for Olivia and a room for me.\"\n\n\"That doesn't sound like a small house,\" Natasja said chuckling. \"So where is this place?\"\n\n\"Yukon-Koyukuk Census Area, Alaska,\" William replied.\n\nMilo's forehead creased in thought. \"That's one of the least populated areas in Alaska. According to the 2010 census, less than six thousand people lived there.\"\n\n\"I know,\" William replied. \"That's why I chose it. It will be easier to spot someone who is out of place. The largest city in the area is Galena which has a civilian airport. Flying, in my opinion is the quickest and safest way to get Olivia out of here.\" \n\nThey all agreed with him and asked about supplies.\n\n\"I have some provisions there but they won't last long,\" William replied. \"If we're going to go, I need to go ahead of you and set things up. I would appreciate it if one of the vampire males went with me.\"\n\nThe vampire that questioned William's loyalty raised his hand. \"My mate and I will go with you. What is it that the humans say? Many hands make light work. When do we leave?\"\n\n\"As soon as possible,\" William replied. \"Benita, why don't you and those remaining work on the transportation part of it while we're gone? Be ready to go as soon as we return.\"\n\n\"I'll call Thorne,\" Benita said wondering if anyone else noticed that William had slid into the role of team leader. She had no problem with it and hoped that no one else did either. She wondered if Olivia would do what needed to be done if someone objected.\n\n\"How long will you be gone?\" Olivia asked.\n\n\"A day at the most,\" William replied. \"We'll be back sooner if we can; we need to get you out of the state.\"\n\n\"That gives me time to close out my accounts and to open new ones,\" Olivia said. \"I also need to close out my father's accounts and transfer that money into mine. It will be done by the time you get back. One more thing- does your house have an electric tea kettle?\"\n\n\"I will get one,\" William replied understanding what was happening. She needed some sense of normalcy. Tea meant that to her. \"I will also get a variety of teas and hot chocolates. Are there any requests from anyone else?\"\n\nBy the time William and the vampire couple left, they had a long shopping list. Olivia watched William vanish with a mixture of confusion, nervousness and a touch of fear. Those of them left noticed but didn't comment. They all saw what Olivia couldn't or wouldn't see- she and William were mates. Benita realized that was why no one complained when William stepped into the role of leader.\n\nBenita called Thorne and told him what the plan was.\n\n\"William just left to get the place ready.\"\n\n\"I'll have my jet ready,\" Thorne replied. \"I'll also have a large industrial sized freezer on board stocked with blood and other things. Just call me as soon as William and the others get back.\"\n\n\"Will do,\" Benita replied. She was going to hang up when Thorne spoke again.\n\n\"I can't tell you how much Ethan and I appreciate what you and your mate are doing. Thank you doesn't seem to cover it.\"\n\n\"We're glad to help in any way that we can,\" Benita said mildly surprised. Thorne had never thanked her for anything. \"Oh could you also send several of those computer security systems?\"\n\n\"I can do that,\" Thorne replied. \"I'll also send any other electronics that might be helpful. I'll call Ethan and let him know what's happening.\"\n\n\"Thanks and I'll call you as soon as William and the others get back.\"\n\nBenita hung up, and looked at the remaining members of the security team and smiled. Olivia had chosen well.\n\n****\n\nThorne hung up and called Ethan to give updates. Ethan offered to send supplies as well as any electronic equipment that Thorne didn't have. They chatted for a few minutes and agreed to meet sometime in the future to discuss what happened between their families.\n\nAfter they hung up, Thorne sat at his desk thinking about his phone call to Eustace. He could tell by Eustace's voice that he was surprised to hear from him.\n\n\"Thorne? Is everything alright? Do you need Gretchen?\"\n\n\"No-it's actually you that I need. I-I would like to set up a time to talk with you.\"\n\n\"Of course, when would you like to meet?\" Eustace asked fully recovered from his surprise.\n\nThorne started to make the appointment for the next week and changed his mind. He knew that if he did, he would find a reason to postpone it.\n\n\"Is later tonight convenient for you?\"\n\n\"I'm free,\" Eustace replied. The fact was, he would have rearranged his schedule to accommodate Thorne. To his way of thinking Thorne was as fucked up as Ethan's family had been but in a very different way. The other reason that he would have changed his schedule was Gretchen. He knew that she had many concerns about Thorne's mate and the pregnancy. She hadn't reported anything because there was nothing to report and she knew that Thorne at least loved the baby. But he needed help. Unfortunately he couldn't tell her that he would be seeing Thorne on a professional basis. \"Where would you like to meet?\"\n\n\"Not here,\" Thorne replied. \"How about my club in three hours? I want to check it for damages anyway. We can talk while I work.\"\n\n\"I'll see you then,\" Eustace said and hung up.\n\nNow that the phone call had been made, Thorne breathed a little easier. He decided to find Noel and to tell him what he was doing in the hopes that Noel would see that he needed help too. He left his office and walked through the house noting how empty it felt now that almost everyone was gone. He found that he actually missed the activity and the quietness unnerved him. He knew that he needed to talk to Barb, but he wanted to talk to Noel first. He found Noel in his room painting and humming to himself. The portrait of the eyes was uncovered and in plain view. As always whenever he saw the eyes, Thorne thought them beautiful. He finally realized that whoever they belonged to- she was related to the Yancy's somehow. He tapped on the wall to let Noel know that he was there and watched as Noel quickly covered the portrait.\n\n\"Hey- come on in,\" Noel said with a smile. \"It's quiet around here isn't it?\"\n\n\"Yes-it's almost unsettling,\" Thorne replied. \"Noel, I want to talk to you about something.\"\n\n\"Good, because I need to talk to you too- I'm leaving.\"\n\n\"Leaving?\" Thorne asked surprised. \"Why? You know that you always have a home with me.\"\n\n\"Why don't you sit down?\" Noel asked and tapped the empty stool next to him. \"You can even paint.\"\n\n\"I'm good,\" Thorne said as he sat down. \"Why are you leaving?\"\n\nNoel painted a few moments before he replied. \"It's time,\" he replied. \"It's time for me to experience the world. I know that I always have a home with you as you will always have one with me, but Thorne I need time to grow so that when I finally meet her; I'll be ready. The other reason is you and Barb. You two need time and privacy to figure out what you're going to do.\"\n\n\"You don't have to leave in order for that to happen,\" Thorne said. \"What about our club?\"\n\n\"Thorne, I'm leaving,\" Noel said with a note of finality in his voice. \"I made the decision when this mess with the hunters started. As far as the club, I'm still in and we can talk on the phone or Skype. I plan to come back for visits- I have a nephew that will need to be spoiled.\"\n\n\"Where will you go?\" Thorne asked.\n\nNoel shrugged his shoulders and grinned. \"I think that I'll explore the United States first and then I'll move on to Europe. Before you say anything, I've asked Felix to travel with me for a while. It's been a long time since I've been out among humans.\"\n\n\"You've really thought about this haven't you?\" Thorne asked.\n\n\"I have,\" Noel replied. \"I've even decided where I'll live once I get to Europe; France- Paris- at least for a while. I've already bought a place that I plan to decorate myself. I was hoping that you'd come to visit with the baby.\"\n\n\"That goes without saying,\" Thorne replied. \"I'm going to miss you. It feels as if we haven't had enough time together as brothers. Something always got in the way. When are you leaving?\"\n\n\"Next week. Felix needs to take care of some personal things and I want to spend an evening with my big brother. May I ask a question?\"\n\n\"Shoot,\" Thorne replied.\n\n\"What are you going to do about Barb and the baby? It's obvious to me that you don't care for each other as mates should.\"\n\n\"That's part of what I wanted to talk to you about,\" Thorne said.\n\nNoel listened without interrupting and then didn't immediately say anything when Thorne was done. When he spoke it was to ask another question.\n\n\"Are you sure that you have no feelings for her?\"\n\n\"I'm sure,\" Thorne replied. \"That we're together is partly my fault. We were never meant to be together as mates and to be honest with you, I never wanted a mate. If it weren't for the child, I wouldn't have taken her in. I would have provided for her of course, but live in the same house?\"",
        "\"Do you realize that there will never be another for you?\" Noel asked. \"Can you live with that? And what about her?\"\n\n\"I know and understand what this means,\" Thorne replied. \"And yes I can live with it. As far as Barb goes, she is no more interested in being my mate than I am in having her as one. She will be protected and provided for and I won't deny her access to our son. What?\" Thorne asked when he saw the expression on Noel's face. \"Out with it.\"\n\n\"Never mind...\"\n\n\"Noel spit it out,\" Thorne snapped.\n\n\"I was wondering how much this has to do with mother,\" Noel said. \"I know that she doesn't know about Barb and the baby- she would have pumped me for information if she had.\"\n\nThorne blew out a breath. He didn't know how much to say as Noel still loved their mother in spite of how she had treated him.\n\n\"I know that you're afraid to be honest with me,\" Noel said, \"but don't be. I know exactly what mother is and how she felt about us. I even understand your anger at her even though I don't share it.\"\n\n\"Noel, I don't hate her,\" Thorne said after a few minutes. \"I don't like her and I sure as hell don't respect her. I wasn't graced with your capacity to forgive- that alone makes you a better man than I am. But to answer your question- she has a great deal to do with this. She never loved father, but loved what he could do for her. We were nothing more than inconveniences that she showed off when it suited her needs. Barb is like mother in every way except one- she doesn't pretend that she wants the baby. Like mother, she doesn't admit to what she is and what she wants- I could respect that even though I don't like it. Nor does she acknowledge her part in this \u2013it remains totally my fault.\"\n\n\"So you won't even try to reach a compromise with her?\" Noel asked. \"Maybe if you talked...\"\n\n\"There's nothing to talk about as far as our relationship as mates is concerned. I won't say that it can never change- that would be tempting the fucking fates, but for now; this is how things are. I also realize that I have some issues regarding our mother that I need to resolve before the baby comes. I need to make my peace with my feelings about mother and I need to have a working relationship with Barb if only because of the child.\"\n\n\"How are you going to do that?\" Noel asked as he surveyed the painting that he was working on.\n\n\"I'm going to start seeing Eustace Matthews,\" Thorne replied. \"I don't want my son to be as fucked up as we are- I say we because you're fucked up too. Father broke something inside of you that while its better, it's still broken.\"\n\nNoel was stunned. He remembered his father's views on psychiatry and therapy.\n\n\"I'm meeting Dr. Matthews later tonight,\" Thorne said. \"Both of us have someone that we need to fix ourselves for-for me it's my son and for you it's whoever those eyes belong to. I'm not telling you what to do- god only knows that I'm in no position to do that, but think about it.\"\n\n\"You're really going to do this?\" Noel asked.\n\n\"If I want to be a better father to my son than our father was to us, then yes,\" Thorne replied. \"I won't lie and tell you that I'm not nervous, but it helps to think of why I'm doing it.\"\n\n\"Will you tell mother about the baby?\"\n\n\"Eventually- after I meet with Eustace a few times. I have a question for you too,\" Thorne said. \"Why were you having those headaches whenever the Sinclaire name came up? When they were here, you didn't have any that I'm aware of.\"\n\n\"That's because I try not to think about it,\" Noel replied.\n\nNoel explained that as long as he didn't try to remember, there was no pain.\n\n\"Just like I'm not supposed to know who those lovely eyes belong to yet, I'm not supposed to remember what really happened between our families. All I can tell you is this- I don't believe for one minute that we were betrayed by them. Someone betrayed us-we know that, but the question is who.\"\n\n\"I think,\" Thorne mused, \"that you're right about the betrayal. The little girl-Celeste made me promise to talk to Ethan. I think she knows something even if she doesn't realize it. I also think that you know who betrayed us although why you can't or don't remember puzzles me.\"\n\nThey talked for a few minutes more with Noel not saying whether he would see Eustace or anyone else professionally. He did however, fully support Thorne. He knew that Thorne was right in that they were both screwed up, but he didn't feel the need to talk to anyone just yet. What he didn't tell Thorne was that it was the woman that he had yet to meet that would be the one to unlock the door to the elusive memory.\n\nThorne left Noel's room and walked around the house before going to see Barb. He really didn't have anything to say to her, but wanted to check on her and the baby. He found her in her room already packing although they hadn't talked about where they were going.\n\n****\n\nBarb both relished and didn't care for the quietness now that her family and the Sinclaires were gone. She definitely didn't miss Celeste and the way that she could talk to the baby. The voice in her head had also been blissfully quiet. Quiet enough that she wondered if she hadn't imagined the entire thing.\n\n\"I'm still here,\" it said quietly.\n\n\"Damn it,\" Barb hissed as she began to pack up her things. \n\nShe looked at the proposals from Thorne and threw the one about being his mate in the trash. It wasn't happening. She also threw away the one that gave her the option of signing off on her parental rights but only after rereading it three times. \"I'm not that heartless,\" she muttered as the papers floated into the trash can.\n\nShe reread the last option and decided that it was the best of the three. She would retain her parental rights, have money and she was free to go wherever she wished. The fact that she wouldn't be able to marry anyone else didn't bother her- the fact that she couldn't have sex with anyone else did. She wondered what would happen if she and Thorne agreed to have an open marriage of sorts. Realistically she knew that the bind between them wouldn't be broken simply because of the baby. She didn't know how she felt about that but understood that was why she chose the option that she did. If Thorne agreed to the open marriage thing, she would have the best of all worlds. She stopped what she was doing and waited for the voice to speak. She was surprised when it didn't and then became slightly alarmed. Had the voice abandoned her?\n\n\"Not yet,\" it whispered. \"You'll know when I'm gone.\"\n\nOddly relieved that the voice hadn't abandoned her, Barb continued packing turning her attention to where she was going to go after it-the baby was born. She had to stop thinking of the baby in terms of a nonentity especially if she was going to have anything to do with it-him. To some degree, she was surprised that she was even thinking about being involved with the baby since it meant that she would be in contact with Thorne. She decided that she was alright with it since she had control over how much contact she would have. \n\n\"Hawaii,\" she murmured under her breath. She had always wanted to go there, but now she could afford to live there. The more she thought about it, the more she liked the idea. There was nothing left for her in Pittsburgh and staying in California was out of the question. She wondered if Thorne would consent to let her go before the baby was born and decided that he wouldn't. He was comfortable with Gretchen-so was she for that matter and the idea of finding another doctor didn't appeal to her. \"It's only another eight months\" she said out loud not realizing that Thorne was standing outside of her door.\n\n*****\n\nThorne passed Adrianna who was on her way to the kitchen to make Barb something to eat. Barb was still going to need protection and he wondered if Adrianna was up to it. He knew that she had no love for his irritating mate, but she did her job well and wasn't intimidated by Barb. He took the advantage of the chance meeting to ask Adrianna if she would consider staying on.\n\n\"Under one-no two conditions,\" Adrianna said after thinking about it.\n\n\"I'm listening,\" Thorne replied already knowing what one of the conditions was.\n\n\"My mate joins me,\" Adrianna said. \"I understand that you have to investigate and interview him, but if he isn't acceptable to you; I can't and won't stay.\"\n\n\"What's the second condition?\" Thorne asked.\n\n\"We get a relief team plus a wolf team for the day and they have to meet my approval.\"\n\n\"Done,\" Thorne said. \"I've already had your mate investigated. He is very-talented. My guess is that you already have someone in mind for the wolf team. Give me their names and I'll have them checked out.\"\n\nAdrianna gave him the names of two wolf couples. Both were top notch and she knew that Thorne would more than likely end up hiring both couples which would be even better.\n\n\"I'll call Cheung and let him know,\" Adrianna said with a smile. She had missed the touch of her mate.\n\n\"Good, I would like to meet him before you introduce him to Barb and my son.\"\n\nAdrianna nodded, she had expected nothing less. She continued on her way to the kitchen to the kitchen. She felt much better now that Cheung would soon be with her.\n\n**\n\nThorne went to Barb's door and tapped on it before walking in. He wasn't surprised to see her already packing. Barb turned to look at him and without saying anything, moved the suitcase aside and laid on the bed. Thorne waited until she was settled before he approached her. He sat on the edge of the bed and placed his hands on Barb's rapidly growing belly. It wouldn't be too long before she would be as big as she was going to get and the true waiting would begin. She was past the point where she could or would lose the baby even if she tried to make it happen.\n\n\"Hello little one,\" Thorne said softly as he massaged her stomach. \"I am back as I have promised and for the time being, all is well. I wish that your cousin were here to tell me what you are saying, but at least I know that you can hear me. Rest well and we shall talk again soon. I need to speak with your mother, but be at ease- you are loved and cared for.\"\n\nThorne massaged Barb's belly for a few moments before removing his hands. \"We need...\"\n\n\"There's nothing to say,\" Barb rudely interrupted. 'I think that you already know what my decision is.\"\n\n\"Be that as it may,\" Thorne said his tone cool, \"I would still like to hear it.\"\n\nBarb sat up on the bed and scooted back so that he back rested against the headboard. She gave Thorne a long look before she spoke.\n\n\"You already know how I feel about you,\" she began. \"I wish to god that I had never met you and I know that the feeling is mutual. In light of those feelings, I can't and won't be a mate to you. I've decided to keep my parental rights and to move away.\"\n\n\"Interesting,\" Thorne mused. \"I won't ask why you chose that option- I already know the reason even if you won't admit to it. I'll have the papers drawn up and once again- I urge you to take them to someone of your choosing and have them looked over before you sign. There is an account set up in your name that you can begin to assess immediately. I will continue to take care of any expenses regarding our son. In fact, you need not worry about shopping for him- I'll take care of it.\"\n\nBarb felt a pang of trepidation that she quickly squashed. \"There's something else that we need to discuss.\"\n\nThorne pulled up a chair and sat down.\n\n\"I know that we can't be mated to anyone else,\" Barb said. \"I'm fine with that, but I'm not fine with not being able to have a physical relationship with anyone. I know that mates aren't supposed to be able to have sex with anyone else, but- what if we agreed that it was alright? Of course I wouldn't do anything until after it-he's born...\"\n\nBarb stopped talking and stared at Thorne who was laughing a full bellied laugh and clapping his hands.\n\n\"Very nicely played,\" he said still clapping.\n\n\"I want that added to the contract,\" Barb said ignoring the claps and laughter. \"I don't want you to come back later and say that I was unfaithful.\"\n\n\"Of course,\" Thorne replied still laughing. \"We are mates in name only so you are free to do whatever the hell you want-after the baby is born. Until then, you will follow Gretchen's instructions to the letter. Once he is born- bon voyage.\"\n\nBarb was caught off guard by Thorne's attitude although she shouldn't have been. He had been nothing except cold to her from the time he met her. That wasn't true, she amended. He had been sweet to her at first, but then he had been pretending. But he wasn't pretending now and hadn't been pretending since that initial meeting. He was glad to be rid of her.\n\n\"One more thing, the money in your account is more than enough to support the lifestyle that you crave. The money will be replaced once a month and no more. That will also be added to the contract. As I told you, if you choose to be a part of our child's life, I won't stop you. I only ask that you contact me instead of just appearing on my doorstep. If you will excuse me, I have an appointment.\"\n\nThorne put stood up, put the chair back where he got it and walked toward the door.\n\n\"What will you tell him?\" Barb asked.\n\nThorne turned around and looked at her.\n\n\"The truth,\" he replied. \"I plan to tell him exactly what happened and you won't be made out to be the fall guy. As I've said any number of times- I'm just as much at fault as you are if not more. We are here because of the choices that we made. I've come to realize- and the baby has made me realize this- that I'm fucked up. My feelings toward my mother have a lot to do with this. That in no way changes how I feel about you or women like you and my mother...\"\n\n\"Are we going hold hands and start singing?\" Barb asked sarcastically.\n\n\"No,\" Thorne replied. \"What I'm saying to you is this; I need to fix myself before the baby comes. Part of that is admitting to you that I was wrong to do what I did. Even though it's too late and means little, I apologize. The papers will be delivered to you tomorrow evening. I'm sure that by then you'll know where you want to go.\"\n\nBarb watched Thorne walk away shocked. He had actually apologized and he meant it. She didn't know how to react so she reacted with skepticism and anger.\n\n\"You are so fucking stupid,\" the voice said angrily. \"Don't you see what is happening? He is offering you a chance to actively participate in the life of your child; he's trying to make peace with you. Are you going to let that chance escape?\"\n\nBarb didn't reply and the voice said no more. She jumped when she felt the baby move. Instead of touching her belly, she looked down at it. When the baby moved a second time, she continued to watch to see if she could actually see it. She knew what Louise would have done. Barb could almost hear her calling out to Nathan in excitement. She could see Nathan appearing next to Louise and touching her belly the way that Thorne had just touched hers. Instead of talking about contracts and how fucked up they were-they would be talking about the baby. And Nathan- he would make Louise lay down to rest while he rubbed her feet or got her a snack. He would even make love to her without wanting anything in return.\n\nJealousy and anger flared and just as quickly died. She finally understood something- Thorne, her family and everyone else was right; she had to accept her decisions and what came of them. Acknowledging that didn't change her feelings about Thorne or the baby, but it did change how she should be thinking about her family. \n\n\"It's about time!\" the voice exclaimed.\n\nBarb ignored it and continued to examine her decisions. Her thoughts went back to the prom dress. As far as she could remember, that was when the word abuse first popped into her mind. The voice told her that the allegations were 'bull shit', but it sure had felt as though they had been abused.\n\n\"You are the only one that thinks that,\" the voice said quietly.\n\nAgain Barb ignored the voice and continued to think about the prom dress. She closed her eyes and could see the look of anticipation on everyone's face as her father handed her the box containing the dress. Her heart pounded as it did then as she saw herself opening the box that had come from a high end store. She felt the same disappointment as she felt then when she saw the old dress-she could even see the look on her face. Then she remembered something that she had forgotten or chose to forget- the hurt expression on her father's face. A tear trickled down her face at the memory. True to her word, her grandmother had redesigned the dress so that it resembled the old one very little. But still she didn't appreciate it. Nor did she appreciate the fact that everyone had contributed what little money they had to help buy that dress. It was then that money and affluence became the be all end all for her. It was then that she decided that love didn't matter as long as she wanted for nothing.\n\nSomething else came to mind. It was something that Gene and Leon said. \"Who was the real abuser?\" Gene admitted that he after a fashion had abused not just their parents, but them as well. Thorne had just admitted what he had done and apologized, so why couldn't she admit to her wrong doings? Accepting them was one thing, admitting to them was another horse of a different color. That brought something else that Gene had said to mind, \"It's hard to admit to others that you were wrong.\" But he had done it.\n\nShe felt the baby move again and wished that he would go back to sleep and leave her in peace. She felt a twinge of pain that was gone just as quickly as it came. Suddenly, the next few months couldn't pass quickly enough.\n\n***\n\nLouise was lying on the bed waiting to Nathan to join her. He was in the kitchen making grilled cheese sandwiches and insisted on serving her in bed. For once she didn't argue with him. She was exhausted. She closed her eyes and thought about the past few weeks. They had been difficult weeks for all of them but-Celeste- Celeste had already begun to come into her powers. By the time she was an adult, she would be formidable. It was going to be an exciting thing to watch.\n\nShe thought about Nadine. She worried for her even though Harry was now dead. She hoped that Leon could convince her to talk to either Katrina or Rachel. Finally, she thought about Barb and her heart hurt. As much as she wanted to do something, there was nothing to be done except wait. Her stomach rumbled when the odor of frying bacon wafted into the room. Nathan was going all out with putting bacon, a thin slice of tomato and onion on the sandwiches with just a touch of mayo.\n\nShe had just drifted off when she felt the baby move. It took her several seconds to understand what the light fluttery feeling was. As soon as it dawned on her what it was, she called out to Nathan as she rubbed her belly. Nathan was there within seconds worried that something was wrong although he knew better.\n\n\"She moved!\" Louise exclaimed. \"Nathan the baby moved!\"\n\nNathan did everything that Barb imagined he would. He sat on the bed, put his hands on Louise's stomach and waited.\n\n\"Come on sweetheart, move for papa,\" he urged. \"Come on, don't go to sleep yet.\"\n\nAs if the baby heard him, she moved and then settled. Nathan thanked the baby and then took Louise into his arms and kissed her.\n\n\"Have we decided on a name yet?\" he asked with a hand on her stomach.\n\n\"Ummm no, but Nathan did you turn the stove off?\"\n\n\"Wh... oh no!\" and he was gone.\n\nLouise sat up on the bed and thought about Barb again. Had she felt her baby move yet? If she did, would that be enough to make her begin to love her baby? Somehow Louise didn't think so. She also knew that Thorne and Barb would part ways. There was no love between them and for them to stay together would be a mistake. She was however glad that Thorne loved the baby and that he wasn't going to shut them out of his life.",
        "Nathan came back thirty minutes later with the sandwiches, juice and the hated multivitamins. Nathan ate with one hand on Louise's stomach. He didn't want to miss feeling another movement. When they were finished eating and the vitamins taken Nathan moved the tray off the bed and stretched out next to Louise. Louise settled into his arms and closed her eyes. She was determined to finally begin to enjoy her pregnancy.\n\nShe placed her hand on top of Nathan's as it made its way from her stomach to her breast. It felt good to be able to make love in their own bed and without the worry of being heard or disturbed. She looked up at Nathan and kissed him offering him her tongue as she pushed closer to him. With a thought he undressed them and pulled back so that he could look at her. He could have sworn that her aura was a hot white and pulsed with her heartbeat.\n\n\"What?\" Louise asked.\n\n\"Nothing- it's just that you're so damned beautiful and I'm proud of you,\" Nathan replied. \"Our daughter is going to be just as beautiful as you are.\"\n\nNathan bent his head down, kissed her the spot over her heart and then took a nipple into his mouth. He took his time and was gentle because she seemed to be more sensitive to his touch. That was confirmed when he flicked his stiffened tongue across the nipple and then gently sucked. Louise pulled back indicating that it was too much. He switched from sucking to licking and was rewarded with soft moans of pleasure. \n\n\"Nathan!\" was all she got out before she was crying out her release and he hadn't even touched any of her other erogenous zones. Her sudden orgasm caught Nathan completely off guard and he rolled from the bed onto the floor. It took Louise a moment to realize that he was on the floor and looking at her with a shocked expression on his face.\n\n\"Oh my god-Nathan! Are you alright?\"\n\n\"I'm fine, but wow... I barely touched you,\" he replied getting up. \"Are you alright? That was a pretty intense orgasm.\"\n\n\"I'm fine and... I want to do it again minus the you on the floor part.\"\n\n'I'm game of you are,\" Nathan said as he got back on the bed. \"I suppose tasting you is out of the question?\"\n\n\"I don't know about that...\"\n\n\"I'll stay away from your nub, but I want and need to taste you,\" Nathan said as he stroked her arms.\n\nA moment later, his head was between her legs and he was planting soft kisses on her thighs. He stopped when she began to tense signaling that she was going to come. He made a mental note to call Gretchen to ask about the increased sensitivity while making love. He couldn't remember hearing anything about it in school or from other mated males and he wasn't about to ask his father or uncles something so personal. \n\nHe waited until she she was relaxed and started again. His lips were barely touching her skin and she was once again on the brink of orgasm. Then he had an idea.\n\n\"Sweetheart, put up your shields and try to dull the sensations that you're feeling.\"\n\nLouise did as he asked and it helped- a lot. It would be something that they would have to do for the remainder of the pregnancy unless she wanted to come fast and hard. Nathan settled in to enjoy teasing her pussy with his nose, lips and tongue. He lapped up her juices as they ran from her and finally latched onto her clit tugging at it with his teeth and lips until she came with a scream that made his ears ring. Her orgasm was barely over before he was sliding into her slowly and gently. What he wasn't prepared for was the intensity of his orgasm when it hit. It reminded him of how intense the orgasms had been when he turned Louise. Even after the orgasm waned, he kept pumping into her until they came again. Finally sated, he lay by her side and pulled her into his arms. He was going to make a comment, but she had already fallen asleep.\n\nWhile she slept, he did some thinking about the past few weeks. It was far from over- they all knew that. But the question was how long before things started up again? The best case scenario was never, the worst case scenario was that the anti-Olivia, anti-vampire groups would quickly get their acts together before Olivia, Thorne and Ethan were ready. It was time to make emergency plans. He had been meaning to find an emergency get-away for them, but hadn't gotten around to it. There was always something happening. Now he had no choice. He owned land that he had done nothing with in several states and began to think about which state to go to. When Louise woke up, they would talk about it. He wondered if any of the others had places and decided to call them as well. The other thing that crossed his mind was that all of the female mates that weren't turned needed to be. It could make the difference between life and death of them or the children in the family.\n\nThe last person that crossed his mind before he drifted off to sleep was Joseph. They hadn't spoken since the twin's wedding and he was sure that he hadn't talked to anyone. He added calling Joseph to his growing list of things to do. But first things first- a safe place for Louise and the baby and then he could deal with the rest.\n\n****\n\nEthan hung up after talking with Thorne and made a few calls of his own. He could hear Katrina in the bathroom preparing for one of his favorite times of the day- their bath. While she was getting ready, he went to check on Victoria. When they got home, she had planted herself in his lap not moving until Ethan tucked her into bed.\n\n\"Papa?\"\n\n\"It's over for now- go back to sleep,\" Ethan said kissing her forehead. \"We'll check on you later.\"\n\n\"You don't have to, I'm okay now.\" Victoria replied sleepily.\n\n\"I know that we don't but we will just because we love you, sleep tight pumpkin.\"\n\nEthan kissed her again, turned off the light and left the room softly closing the door behind him. \n\n\"Is she alright?\" Katrina asked when he got back to the bedroom.\n\n\"For now she is,\" Ethan replied. \"I'm worried about her though. We barely get over the Bradford Jefferson thing and then this happens. I know that she's a strong little girl, but she's still just a little girl.\"\n\nEthan's worry increased when Katrina told him about Barb wanting to go into the kitchen.\n\n\"She still thinks that what happened to Veronica is her fault,\" Katrina said. \"I think that she'll always feel that way no matter what anyone says. I just wish that we could help her see that it wasn't her fault.\"\n\n\"I know-maybe time will help,\" Ethan said hugging Katrina close. \"We all need some time to take a deep breath. I would like to suggest a family vacation- you, me the twins, their mates and Victoria. I think it would do all of us a world of good.\"\n\n\"I agree, but why do I think that there's more to it than that?\" Katrina asked.\n\n\"Because you know me too well,\" Ethan replied kissing her neck and then her shoulder. \"We'll talk about it after we get up-let's enjoy our bath and get some rest.\"\n\n\"Rest?\" Katrina teased.\n\n\"Yes rest- well- after we make up for lost time,\" Ethan teased back. \"Go get started, I need to make one more quick phone call.\"\n\n\"Who are you calling?\" Katrina asked.\n\n\"Mason- maybe he'll have some ideas on how we can help Victoria.\"\n\n\"Are they in town? I thought they went to San Diego to stay with Toni's parents until she had the baby.\"\n\n\"That was the plan, but it may have changed,\" Ethan replied.\n\nInstead of going into the bathroom, Katrina stood next to Ethan with her arms around his waist. A moment later, Mason's deep voice was on the phone.\n\n\"How are things? I heard that that sick son of a bitch Rufus Saunders is dead.\"\n\n\"That's true,\" Ethan replied. \"It's far from over, but things are calm at the moment. How's Toni?\"\n\n\"She's fine- anxious for the baby to come.\"\n\n\"Still no baby?\" Ethan asked. \"She looked like she was about to deliver when we last saw you.\"\n\n\"Well- she wasn't as far along as we thought. This is going to be one big baby.\"\n\n\"When is the anticipated date of birth?\" \n\n\"Any day now, but we were thinking that a couple of weeks ago,\" Mason replied. \"We're trying not to stress about it too much. Neither of us are working- Eustace is seeing the few patients that I had. So how is everyone there?\"\n\nMason listened as Ethan told him about his and Katrina's concerns about Victoria.\n\n\"How can we help her?\" Ethan asked.\n\n\"Well,\" Mason mused, \"I think that you're already doing the right things. A vacation is a good idea and don't push her to talk about what she's feeling. If you can, try to avoid talking about the past few weeks unless she brings it up.\"\n\n\"Some of this sounds familiar,\" Ethan remarked.\n\n\"I'm sure that it does,\" Mason replied. \"Call me if you need anything.\"\n\n\"We will and give our love to Toni.\"\n\nEthan hung up and told Katrina what Mason said.\n\n\"We'll let her know that she can talk to us at any time about anything and let it go at that.\"\n\n\"Let's go check on her one more time,\" Katrina suggested.\n\nHolding hands they left their room and went to Victoria's. She was on her side, sound asleep with her mouth open- a sure indicator that she was out for the count. Relieved, they went back to their room, stripped and got into the large bathtub. They made love once before Katrina was fast asleep. Ethan lifted her out of the tub, wrapped her in a towel and tucked her in much like he had Victoria. While she slept, he logged on to his laptop and did some research on the best place to build a secret hide-away\n\n*\n\nThe various households were doing or thinking about the same thing even though they wanted nothing more than to take a break and enjoy the relative peace and quiet. Kevyn was the one who put it in perspective for Patrick.\n\n\"We need to take a breath,\" she said when he began talking about future plans. \"Even during wars everyone took a break to regroup. I think they call it rest and relaxation,\" she said as she rubbed the front of his shorts. \n\nPatrick pulled her close, nuzzled his nose in her hair and hugged her. She was right he decided. They hadn't had one moment of peace since they met. There was something else that he wanted to talk to her about, but not now- they deserved some quality time.\n\n\"Spit it out,\" Kevyn said kissing his neck. \"You won't relax until you do.\"\n\n\"It can wait,\" Patrick replied. \"Let's ...\"\n\n\"Patrick,\" Kevyn said firmly. \"I know you; now spit it out.\"\n\nPatrick sighed and told her what he was thinking.\n\n\"I don't know if you've given much thought into turning, but I think it may be for the best. I need to know that you'll be able to defend yourself...\"\n\n\"I've already thought about it,\" Kevyn interrupted. \"I've been thinking about it since Louise turned. I know that Juliette has been thinking about it too- this isn't over is it? That's why you want me to turn.\"\n\nPatrick's silence was her answer.\n\n\"When do we do it?\"\n\n*\n\nJuliette snuggled into Hans after they made love for the third time that night. The kids were tucked into bed and seemed none the worse for wear. The fact that Celeste wasn't overly upset went a long way to ease Juliette's anxiety. She knew that Hans had some things that he wanted to talk about and even knew what they were, but she wasn't ready for reality to intrude just yet.\n\n\"Julie....\"\n\n\"Not yet... please?\"\n\n\"It can wait,\" Hans said as he rubbed her back. \"But we must talk and soon.\"\n\n\"I know- we'll talk after we get up,\" Juliette replied. \"I just need a little more time. Hans- you could have been killed! Leon could have died! What would have happened to us? And I'm not talking about money. What would we have done without you? And what happens now? You and I both know that this isn't over. It's going to get even worse isn't it?\"\n\n\"Yes,\" Hans replied. He had learned that it was best not to sugar coat things for her. Once she heard the truth her anxiety level would spike, but then she would calm down and focus on what needed to be done. He also found that the best time to discuss things with her was when they were in bed- it was a place of safety for her. \n\nJuliette closed her eyes and snuggled even closer and let the anxiety wash over her. She shivered, closed her eyes and fell asleep.\n\n*\n\nNadine sat on the side of the bed watching Leon sleep. She had come much too close to losing him and would have if Nathan and Hans hadn't been there. The wound on his chest was just about healed, but he would have a small scar. With a start she realized that it was probably similar to the one that she had given Harry. She felt nauseated and looked away from the healing wound. Even though he was dead, Harry had managed to leave her a reminder of what he had done to her. \n\nShe began to cry as she forced herself to touch the wound. Leon was right, she realized. She needed to talk to someone about her time with Harry and his family. She also had to come to grips with the fact that William was now a part of the good guys. He had never really hurt her- he fed from her as the rest of them did and for the most part he was kind to her. But that didn't change the fact that he knew what Harry was doing to her and did nothing to stop him. She wasn't sure that she could ever forgive him for that. Then there was Nell who had pretended to be her friend- or had she? It had felt real, but then she had never had a real friend before.\n\n\"Dina? What's wrong baby?\" Leon asked as he reached for her.\n\n\"I'm fine- no I'm not,\" she finally confessed. \"You're right about me needing to talk to someone about what happened. I hope that you won't be offended if it isn't you- I just need to talk to someone who understands.\"\n\nLeon let out a sigh of relief. He didn't care who she talked to a long as she got help.\n\n\"I don't mind at all,\" he replied. \"I love you and I want you to be happy. Come lie next to me.\"\n\n\"Oh no you don't,\" Nadine said laughing. \"You're supposed to be resting and if I lay next to you, I know what's going to happen.\"\n\n\"I feel great,\" Leon replied, \"Now get over here.\"\n\n\"Leon...\"\n\n\"Dina, I'm fine but I'll be even better with you next to me.\"\n\n\"Fine,\" she replied after a few seconds hesitation. \"Let me cover that wound up first.\"\n\nLeon started to tell her that it was fine, but then understood what was happening. He watched her hands tremble as she picked up the 4x4 gauze that appeared on the bed. He made no comment as she applied the gauze to the wound and then taped it. He also noticed that once the wound was out of view, she relaxed and lay on the bed next to him. He knew that she would ask about the fight with Harry even though she really didn't want to hear about how close he had come to dying. She would however, want to hear about how Harry died. It would be the beginning of her healing.\n\n****\n\nThorne got to the club and looked around beginning with the outside. He was still amazed that it had been relatively untouched. There was some graffiti on the back wall and door, but was easily fixed. The front of the club was untouched. He released the wards and walked in. Things were as he had left them. He would call in the staff in another day or so to get the club ready for reopening. He thought better of it and decided to keep the club closed for an undetermined amount of time. He would do the cleanup himself and would put money enough money into each employee's account so that they wouldn't have to work.\n\nHe turned when he felt someone approach the front door.\n\n\"Thorne?\" Eustace's deep voice boomed.\n\nThorne met him at the door and let him in. \"Can I offer you a drink?\" he asked when Eustace was inside.\n\n\"Sure- you got any scotch?\"\n\nA few minutes later, they were sitting in Thorne's office drinks in hand. Eustace watched Thorne with a practiced eye and knew that it had been a hard thing for him to call him. It was always hard for vampires like Thorne. Like Ethan, something drastic had to happen in order for him to make the call. He wondered what it was. Thorne he knew was no rapist. He knew from the few times that he had spoken with him that he was cold to those he wasn't concerned with and that included his mate. It made him question the wisdom of the fates in not allowing mates' time to get to know each other before they took the plunge. Thorne and his mate were a case in point.\n\n\"My father used to say that therapy was for the weak,\" Thorne said after a few minutes had passed.\n\n\"What do you think?\" Eustace asked.\n\n\"For the most part I agreed with him,\" Thorne said. \"And to some small degree, I still do.\"\n\n\"Then why call me?\" Eustace asked sitting his glass down.\n\n\"Because I also believe that he was wrong thus making me wrong,\" Thorne replied. \"I have also come to realize that sometimes one must examine one's life and choices because of someone that they love.\"\n\n\"Who is it that led you to call me?\" Eustace asked.\n\n\"My son,\" Thorne replied.\n\n\"What about your mate?\" Eustace asked. \"Does she have anything to do with this?\"\n\n\"In a way she does,\" Thorne replied after thinking about it, \"but not in the way that you might think. I won't sit here and bull shit you-your time is valuable as is mine. I am primarily here because I want to be a good father to my son. As far as my mate goes- she will be provided for and protected, but I don't love her nor is that going to happen. We are together because of irrational and selfish decisions on my part. We are still together if you want to call it that- because of the child.\"\n\n\"Tell me how you met,\" Eustace said reaching for his drink.\n\nEustace didn't say anything for a long time after Thorne finished. When he spoke, it was to ask a question.\n\n\"You don't want a mate do you?\"\n\n\"No and I never have. The pregnancy hasn't changed that.\"\n\n\"Another question- if your mate wasn't so much like your mother, would you have made more of an effort to make it work?\"\n\nThe question shook Thorne. How many times had he wished that Barb was more like Louise who he had liked as soon as he saw her?\n\n\"Maybe,\" he finally admitted, \"but I believe that the end result would have been the same.\"\n\n\"Another question- if you could have chosen your mate; who would you have chosen and why?\"\n\n\"What does this have to do with anything?\" Thorne demanded not wanting to answer the question.\n\n\"It's a part of it,\" Eustace replied. \"Why won't you answer the question?\"\n\nThorne glared at Eustace but asked himself the same question. \n\n\"Thorne, you can't just pick the parts of you that you want to fix and ignore the rest,\" Eustace said. \"I understand why you don't want your mate. I understand that both of you made choices that brought you together and I will even concede that the fates are at times lunatics-but you still need to admit what it is you want in a mate if for no other reason than you can explain to your son why you and his mother aren't together.\"\n\n\"Shit,\" Thorne swore. This was much harder than he thought it would be. It was also something that wouldn't be resolved in one meeting.\n\n\"So tell me who your ideal mate would be and why,\" Eustace urged. \"And don't worry- I'm not here to judge, but to help.\"\n\n\"I don't give a rat's ass about being judged,\" Thorne said curtly. \"I'm going to answer your question and after I do, we move on; is that clear?\"\n\nEustace leaned forward in his chair and stared at Thorne with flashing dark eyes.\n\n\"Let me explain a few things to you,\" he said. \"You called me for help. I'm here to do that, but I don't cut corners nor do I avoid certain topics because it makes the client uncomfortable. I'm not here to make you feel good but I am here to help you with your issues. Now- you have to decide just what it is you want from me. If it's to pat you on the hand and tell you that it's going to be alright, you've called the wrong therapist. If you don't want to work to fix your problem, again; you've called the wrong therapist. I don't believe in fucking around-as you said, my time is as valuable as yours is so when you've decided what you want- call me.\"",
        "Eustace stood up to leave and Thorne stopped him.\n\n\"Please- sit down. I think that I've chosen the right man even if I don't like what he has to say.\"\n\nEustace sat down and waited.\n\n\"I'm not used to being questioned about my thoughts or motives,\" Thorne replied. \"I also have to admit that this is much more difficult than I thought it would be.\"\n\n\"I can appreciate that,\" Eustace replied, \"but you still have to decide how hard you are willing to work and if you want to be honest with yourself.\"\n\n\"You really are a hard ass aren't you?\" Thorne asked with a chuckle.\n\n\"I've been doing this for a long time,\" Eustace replied with a small smile. \"If you want time to think about it or if you prefer someone else- no hard feelings.\"\n\n\"I don't need to think about it,\" Thorne replied. \"Ask your questions.\"\n\nEustace asked the same question as he asked before.\n\n\"Who would you choose as a mate and why?\"\n\n\"Louise Sinclaire.\"\n\nEustace, who was rarely surprised, was surprised for the second time that night and didn't hide it.\n\n\"Louise Sinclaire? Why her? I'm not saying that there's anything wrong with her. She's beautiful and powerful, but your answer surprises me.\"\n\n\"Dr. Matthews...\"\n\n\"Please call me Eustace,\" Eustace interrupted.\n\n\"Eustace- if there's one thing that I know about myself it's that I can be a cold, unfeeling bastard. Women like Barb and my mother bring that out even more and I am fully aware that I allow it. Women like Louise Sinclaire are what men like me need in our lives to balance that coldness. Am I in love with Louise? No... at least not much, but the fact remains that if I were to choose a mate, it would be someone like her.\"\n\n\"Explain,\" Eustace said.\n\n\"I don't know if I can,\" Thorne replied. \"That night at the club- the night that she and the others came for Barb- you should have seen how she fought for her sister. She puked all over the floor, but she didn't care. I watched as she loved someone who didn't want to be loved. I know that on the face of it, many would consider her weak because she is by nature a shy, quiet woman. She is also innately kind and gentle. Those qualities would not only rub off on a man such as me; they would make me stronger. They're also a part of her strength.\"\n\n\"What about her sister- your mate?\" Eustace asked.\n\n\"What about her?\" Thorne asked. \"She is persistent but her only priority is herself. I suppose that somewhere there is a man who could appreciate that- that man isn't me.\"\n\n\"Tell me about more about your family,\" Eustace said.\n\nBy the end of the night, Eustace came to one conclusion- the fates had fucked up yet again. Barbara Yancy Simpson no more belonged with Thorne Blackwell than she did her original mate Hans. It reinforced his beliefs that the fates didn't always know what was best and sometimes acted out of vindictiveness or because they thought that it was funny. He also knew that Thorne wasn't really in love with Louise Sinclaire and breathed a prayer of thanks. If he were, could have complicated things a great deal.\n\n\"Bastards,\" he growled under his breath as he thought about the fates.\n\nThorne watched Eustace as he was thinking about the next step. He liked him he decided and would recommend him to Noel although Noel might need someone with a gentler touch.\n\n\"When did you last speak with your mother?\" Eustace asked.\n\n\"I haven't spoken to her since I took Noel from her home,\" Thorne replied not at all ashamed by his answer.\n\n\"Then she doesn't know about your mate or coming child,\" Eustace mused. \"Are you planning to let her be involved in your child's life?\"\n\n\"I hadn't given it much thought,\" Thorne replied again not feeling ashamed. \"There were other things going on.\"\n\n\"Understandable, but that's over for now.\" Eustace replied. \"I think that you need to start repairing that relationship. I'm not saying that you have to become the family that you never were, but I am saying that you need to have a relationship that is based on mutual respect. I don't know your mother, but I would guess that she would love her grandchild.\"\n\nThorne didn't agree that his mother would love her grandchild, but on the other hand; maybe she would. The child wouldn't be living with her and she wouldn't be responsible for him. He also reluctantly agreed that maybe it was time to make some kind of effort to reconcile with her. He was honest enough with himself to admit that he would never love her as a son loves his mother; but they could have some kind of relationship.\n\n\"I want you to call her,\" Eustace said. \"You don't have to tell her about your mate or the child unless you want to. The goal is for you to take the first step toward a healthier relationship with her so in turn; your son will develop a healthy relationship with her. As far as your relationship with your mate goes- it mirrors that of your mothers. Even if you don't live together as mates, you need to find a way to get along with her.\"\n\nThorne had a disquieting thought- Barb and his mother together. He could see it now- his mother teaching Barb the ropes and pointing out her mistakes. It didn't matter he decided. The two of them could sail the seven seas together for eternity if they wanted to; the only thing that mattered was his son. If he had to learn to play nice with them in order to be a good father; he would.\n\n\"We'll meet again next week,\" Eustace said. \"I expect to hear about the phone call with your mother.\"\n\nThorne stood up, offered his hand to Eustace and nodded. He had just completed his first therapy session.\n\n***\n\nBarb finished packing and checked her bank account. She gasped and sat on the bed sure that her bank account must have had a coronary. There had never been so much money in there at one time and this was for a month! She sat looking at the balance for several minutes not quite believing that it was there. She picked up the phone and called her bank.\n\n\"The balance available for use is...\"\n\nShe hung up feeling giddy with happiness. All she had to do was now was to get through the rest of the pregnancy. She logged off from her bank account and went to a Hawaii realtor's website. It would be months before she could move, but she could arrange to go look at places and then buy one if she liked it. There was more than enough money to buy a place plus hire a cook/housekeeper. She opened her word document and began to construct a list of things that she needed to do in order to get ready for her. When the time came, she just wanted to board the plane and be gone.\n\n\"Tsk tsk....\"\n\nThe voice interjected into her thoughts and said no more.\n\n\"Here's your food,\" Adrianna said by way of announcing herself.\n\nBarb looked at her wondering why the change in her mood.\n\n\"I talked to Thorne,\" Adrianna replied said. \"I guess I'm staying as your permanent security detail- in other words I go where you go. The best part is Cheung- he's my mate gets to come too.\"\n\n\"What?\" Barb exclaimed. \"You and whatever his name is aren't going anywhere with me!\"\n\n\"Of course we are,\" Adrianna replied. \"Just because Rufus Saunders is dead doesn't mean that the threat is gone. You will always need protection. In addition to me and Cheung, there will be a wolf couple. They're good friends of ours so no worries.\"\n\nBarb couldn't believe it. She still wasn't free.\n\n\"Don't worry, we won't be living with you- you won't even know that we're there, but the rules are the same. You go nowhere without us and when we tell you to move, you move.\"\n\n\"This is not happening,\" Barb muttered under her breath and then out loud. \"This is not happening! I'm having this baby and then I'm out of here-alone!\"\n\nAdrianna shrugged and walked away to call Cheung. There was no point in arguing with her. It wouldn't change anything. She was glad that Cheung was going with them- he had little tolerance for pettiness and wouldn't tolerate Barb's tantrums. Neither would the wolves for that matter. She listened to Barb muttering and called Cheung. He was thrilled and wanted to know how soon it would be before he could see her. It had been weeks.\n\n\"Come over later, Thorne isn't here and he wants to meet you before you meet his mate and child.\"\n\n\"Will we have a moment alone?\" Cheung asked. \"I have missed you.\"\n\n\"I miss you too and I think that a little conjugal visit can be arranged. I'll let you know when he's back.\"\n\nAdrianna turned to see Barb looking at her with something akin to intense dislike. She shrugged it off and said goodbye to Cheung. Barb didn't say anything but went back to her laptop to shop for a one bed room condo. She earmarked three of them and sent an email the realtor. After that she pulled up her virtual calendar and began the countdown for her delivery date and her departure date. What surprised her was the voice hadn't spoken. Instead, she spoke to it.\n\n\"Nothing to say?\" she asked.\n\nNo response.\n\n\"Look, I kept my parental rights when I could have signed off didn't I?\" she asked exasperated.\n\n\"True,\" the voice replied, \"but ask yourself why you did it. I think that you'll find that the choice wasn't made out of the goodness of your heart or because you want what's best for your child.\"\n\nThis time it was Barb who went silent.\n\n***\n\nSamantha Blackwell was relieved that her sons were safe. She only knew because Noel had been calling to keep her posted on events as they happened. It was on his advice that she hadn't gone back to California after her last trip and on his advice that she hired additional security. That Thorne hadn't called her told her just how little he thought of her and surprisingly; it had hurt. She was also relieved that the Sinclaires and Blackwell's were once again protecting each other. She had never believed that the Sinclaires had betrayed them- but her husband wouldn't listen to her. It hadn't made sense then and it didn't make sense now. The Sinclaires had nothing to gain by betraying them. They were wealthier and more powerful than the Blackwell family and that they were allies was nothing short of amazing. \n\nThe other question that she had was about Noel. Why did he think that he wasn't at the fight that killed her mate and his father? Granted he had always been a sensitive soul, but something was blocking that memory. Maybe the years of his father's abuse had taken its toll or maybe there was really something there. She pushed the question aside and thought about Thorne. He had asked her several valid questions with the main one being why she didn't tell him that she didn't want Noel living with her. She didn't give him an answer because she really didn't know or told herself that she didn't. It was because of all of her sons, Noel reminded her most of her husband. Whenever she looked at him, she felt as if it were her husband and that he could see every infidelity that she had committed and every wrong thought she had about her sons and mate.\n\nShe had never wanted children and had prayed that the fates wouldn't give them any. Her mate and the fates had other ideas. Before she knew it, she was a mother to four boys of which only two still lived. In a perfect world, she would be close to her remaining sons and bugging them about grandchildren. But this wasn't a perfect world. She would never be the woman who thought that the sun, moon and stars revolved around her children. She was content to continue as she was taking her trips with her lovers and answering to no one.\n\nSamantha knew that her attitude was a major issue for Thorne. Of all of her boys, he was the one that had the biggest issue with her lack of enthusiasm for the role of mother. He was also the one that she couldn't buy off. She consoled herself by reminding herself that the boys had the best of everything. Thorne apparently didn't see it that way.\n\n\"Oh well,\" she said out loud and proceeded to plan her next trip. There was nothing that she could do about it. She wasn't sure that she would do anything even if she could. Thorne unnerved her even more than Noel did and would accept no excuses for her lack of mothering. The fact was- there was no excuse. She couldn't even say that she had been abused in any way. Her mate had given her a free hand-perhaps too much of a free hand- to do as she pleased. She did admit to her role in making Thorne as he was. But it was too late to change that too. \"Let bygones be bygones,\" she thought as she booked a trip to the Netherlands.\n\n***\n\nThorne stayed at the club for a couple of hours after Eustace left making phone calls. He thought about calling his mother and decided that it could wait a few days. He needed a break. Instead of calling her or going to the house that he had shared with Ethan and the others; he went to the beach house. \n\n\"Who's out there?\" A voice called out when he appeared on the edge of his property.\n\nHe was impressed that someone remained on high alert, but where were the others?\n\n\"WHO IS OUT THERE?\" the voiced boomed clearly impatient and ready to challenge him.\n\n\"Stand down!\" Thorne called back. \"I'm Thorne Blackwell.\"\n\nThere were several seconds of silence before the vampire that was guarding the property appeared.\n\n\"Where...\"\n\nThorne looked at the vampire who was swaying on his feet and realized that he was seriously hurt.\n\n\"What happened to you and where are the others?\" Thorne asked as he moved to offer the vampire support.\n\n\"Many of them went home to their families as soon as we got word that the head hunter was dead. The others went to join those in opposition to making peace with the hunters. What you see is the result of me trying to talk sense to them.\"\n\n\"Let's get inside,\" Thorne said after assessing the vampire for deceit. \"You can tell me what you know after we get some blood in you.\"\n\nThorne took the vampire inside after extending his senses looking for any signs of trouble. He helped the injured vampire to the kitchen, took down a large glass and filled it with blood. The vampire grabbed it and drank it in one long gulp. By the time he was finished, Thorne had another glass filled and warmed in the microwave. He waited until the vampire had finished before asking questions. He started with the names of those who had joined those in favor of continuing the war with the hunters. He then asked about those who had gone home to their families and where they stood.\n\nThe vampire gave him the names albeit reluctantly. Many of those who joined the opposition were his friends.\n\n\"Why did you stay?\" Thorne asked as he rinsed the glasses out.\n\n\"I stayed because you hired me to do a job,\" the vampire replied. \"That has nothing to do with politics- it has to do with keeping my word. I also happen to believe that it's possible for the different species to get along. Joining the other side doesn't mesh with that.\"\n\n\"What's your name?\" Thorne asked.\n\n\"George Tomlinson,\" the vampire replied.\n\n\"Do you have a family?\"\n\n\"Yes,\" George replied, \"they are safe.\"\n\n\"Thank you for staying,\" Thorne said. \"And thank you for speaking up- you could have been killed.\"\n\n\"True, but then people die in wars don't they? Look, you and I both know that the defections are only the beginning. Soon the supernatural world is going to be involved in a civil war of sorts. The lines are already being drawn as we speak. I plan to fight and die for the right side- that means your side if you'll have me.\"\n\n\"I-we would be honored,\" Thorne replied offering his hand. \"Now go to your family and spend time with them. Let's hope that this civil war can be avoided.\"\n\nAfter the vampire left, Thorne walked around the house one more time. He stopped in his office, got online and put the house and property up for sale. He packed up the laptop, emptied his desk of anything that he deemed important and vanished. He would never return to the house again.\n\n***\n\nBarb fumed over the fact that she would still have guards, but realized that it would be pointless to argue about it with Thorne. Once she got over her initial anger, she logged on and began to shop for maternity clothes using the cards that Thorne had given her when she first moved in with him. After that was done, she began looking for furniture for her condo. She jumped when she heard a tap on the door. \n\n\"What?\" she snapped thinking that it was Thorne.\n\nNoel stuck his head in and asked to speak with her. Barb rolled her eyes, closed the laptop and told him in a curt tone to come in. Noel hesitated. He really didn't care for this woman who was carrying his nephew.\n\n\"What do you want?\" Barb asked impatiently.\n\n\"Do you know,\" Noel said softly, \"that physically you are a beautiful woman? I could paint you and make a lot of money from it. But then, all the Yancy women that I've met are that beautiful.\"\n\n\"Is there a point to this?\" Barb asked.\n\n\"Not really,\" Noel replied. \"It's just an observation. I came by to let you know that I'm moving away.\"\n\n\"Really?\" Barb asked surprised. \"Where is Thorne moving you to?\"\n\n\"Thorne isn't moving me anywhere,\" Noel replied. \"I'm moving myself. Contrary to what you believe, I do have money...\"\n\n\"Sure you do, just like you're some famous artist,\" Barb said sarcastically.\n\nNoel sighed, shook his head and laughed.\n\n\"I really don't care whether you believe me or not,\" Noel said between chuckles and ignoring the angry looks that he was getting from Barb. \"Here's the problem as I see it,\" he continued. \"You see everyone as you are. Not everyone is money hungry and not everyone is insecure enough in who they are that they have to namedrop to feel important. Isn't that part of the reason that you're mated to my brother?\"\n\nBarb was livid. How dare Thorne talk about her-but then she remembered that everyone knew about their initial meeting.\n\n\"At any rate, I'll be gone by the end of next week. I do plan to be back in time for the birth of my nephew...\"\n\n\"Tell me something,\" Barb interrupted. \"If you're so famous, why haven't I heard of you?\"\n\n\"Are you interested in art?\" Noel asked. \"Do you frequent art galleries and keep up on news from the art world?\"\n\n\"No, but if you're famous I still should know who you are. I still think that you're a wannabe who's taking advantage of your brother...\"\n\n\"Since when are you concerned about my brother?\" Noel shot back. \"From what I can see your first and only concern is yourself. If you can't be honest with others, be honest with yourself- the question has nothing to do with Thorne per se, but his money. But- I'll humor you. Go to this website and tell me what you see.\"\n\nBarb gave Noel a dubious look, but pulled up the website. Her eyes widened as she saw what was going on. It was a live auction website where Noel's paintings were being bought for amounts that boggled the mind. \n\n\"Seen enough?\" Noel asked amused. \"Now go to this one.\"\n\nBarb went to the next website and stared. It was a virtual tour of Noel's art galleries in New York City, Chicago and Los Angeles.\n\n\"So you see,\" he said coolly, \"I don't need nor do I want Thorne's money. I'm here because he's my brother and just as I will always have a home with him; he will always have a home with me. That is what families do, but then; you wouldn't know about that would you? You keep your family at arm's length unless you want something from them.\"\n\nBarb didn't know what to say. Once again she had seriously misjudged someone.\n\n\"I-I'm sorry...\"\n\nBut Noel was gone.\n\n\"You don't learn do you?\" Adrianna said from the small room off of the bedroom.\n\nWhen Barb didn't answer, Adrianna came to the bedroom and sat down but didn't say anything.\n\n\"What now?\" Barb snapped.\n\n\"Nothing; but I do have a question for you- do you want to be loved?\"\n\n\"What kind of question is that?\" Barb asked. \"Of course I do! Who doesn't?\"\n\n\"Do you believe that one has to also give love in order to receive it?\"\n\n\"I- no,\" Barb replied. \"Family is supposed to love each other no matter what...\"",
        "\"Are you saying that your family doesn't love you?\" Adrianna asked.\n\n\"I'm not saying that, but they want me to be something that I'm not. I am who I am and if they love me they have to accept that.\"\n\n\"So they're supposed to accept your behavior because they're family and it's alright for you to continue to act like a bitch? I don't know, but that doesn't sound right to me. At any rate, I have an observation for you- you don't like yourself. It's more than that- you don't love nor do you respect yourself. The way that you treat others is a projection of what you feel for yourself. I've also noticed that on several occasions, a nicer you appears and you're actually likable. Then something happens and it goes back into hiding... it's almost like you become afraid to be that person... why is that?\"\n\n\"Don't you have a paper or something to write?\" Barb interrupted uncomfortable with the conversation.\n\n\"Actually, I do,\" Adrianna said with a smile, \"but allow me to leave you with this one piece of advice- talk to someone. It doesn't matter whether they're human or vampire. What's important is that you begin to deal with your fear...\"\n\n\"I'm not afraid of anything,\" Barb said firmly.\n\n\"You should be,\" Adrianna said as she stood up. \"I'm going to take a shower- Cheung-my mate will be here shortly.\"\n\n\"Cheung?\" Barb asked. \"What kind of name is that?\n\n\"My mate happened to be Chinese,\" Adrianna replied. \"I'll be back shortly.\"\n\nAfter Adrianna left, Barb tried to go back to her online shopping. She gave up after a few minutes and opened her documents.\n\n\"Stupid,\" she muttered as she read through her plans for trapping Thorne. \"Stupid,\" she muttered again as she read the next document. For the first time since arriving in California; she began to accept her part in what happened in her life. It wasn't anything that anyone said exactly. It was the fact that Thorne had never laid the entire situation at her feet as she had tried to do with him. It was the fact that Gene accepted his part in the failure of his marriage and his life. Even Leon acknowledged that he had done wrong and had hurt their parents horribly. Then there were the Sinclaires. They were a family of rapists. That they were taught that it was their right and whatever other crap they were fed didn't change what they were but- but yet they announced it to the vampire world how wrong they were and took responsibility for it.\n\nThe question she asked herself was why she couldn't do the same. Why couldn't she say that much of what happened to her was of her own doing?\n\n\"Because it's much easier to blame others,\" the voice said softly and went silent.\n\nBarb deleted the documents without rereading them and looked at the phone. She stared at it for several minutes before she picked it up. When it rang for the first time, she hung up. Several minutes later, she picked the phone up and dialed. Once again she hung up. The third time, she let it ring and waited for it to be answered.\n\n****"
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "black woman",
        "white man"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-10"
}