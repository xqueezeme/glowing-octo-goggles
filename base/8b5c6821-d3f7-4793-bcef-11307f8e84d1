{
    "title": "Tomorrow is Another Day Ch. 02",
    "pages": [
        "I've had a number of requests to add another chapter to Tomorrow is Another Day, Ch 1, a Vietnam helicopter story. In celebration of the DC Circuit Court's 2-1 opinion upholding the Second Amendment as an individual right, I went out the other morning and punched a few hundred holes in some corrugated with a .45 ACP 1911 much like the one I carried in a leather, chest mounted, tanker's holster thirty-five plus years ago. Only pussies carried .38 cal revolvers.  \n\nOn the way to and from the range, I remembered that the single scariest thing that happened to me in two tours in the RVN started out with someone shooting at me---which they did on occasion. The events of a dark, inclement night somewhere between Quang Ngai and Chu Lai are indelibly etched on my consciousness---because I was absolutely, positively sure I wasn't going to get out of that one alive. A little history is in order; please bear with me. It's easy for me to forget that many people today know less than nothing about the Vietnam War, so a long preamble seems to be in order.\n\nWhile writing stories with this subject matter is cathartic for me---and I hope for others---they are not easy stories to write. After thirty-five plus years, memories fade; if you were there and I've gotten some facts wrong, feel free to contact me with a correction. On another level, remembering lost friends can be very painful but also, oddly, extremely rewarding. Military service throws people together who might never have crossed paths otherwise. Serving in combat together adds a unique level of closeness. \n\nA case in point: My first platoon leader in Vietnam, an African American Captain, was a prior enlisted product of Officer Candidate School from Texas. On first meeting I am sure that, yours truly, a not-yet-twenty-one-year-old warrant officer and college drop out, thought to himself, 'oh, brother, this is going to be unpleasant.' He was a no nonsense guy who ran a very tight platoon. He quickly became almost a father figure to me and taught me more about what being an officer meant in a few weeks than anyone I'd ever met.\n\nIt turns out he was a hell of a bridge player and we quickly settled in as bridge partners almost every night in the officers club while others watched the latest bad movie. He taught me a lot about the game of bridge. We were never on a first name basis...it just wouldn't have been right.\n\nBarely a month after my arrival in the unit, his helicopter was blown out of the sky during a combat assault that wasn't supposed to be hot; everyone on board died. At the last minute, he had scratched my name from that mission. When I asked why, since I was just dumb enough to want to, \"see some action\" he bluntly told me that I didn't have enough experience and wouldn't be an asset on the mission. I miss him to this day; he is someone I would have wanted to stay in touch with after the war. My first combat zone mentor, commander and father figure died at the ripe old age of twenty-nine.\n\nI went back to Vietnam for a second tour as an Army Aviator in 1972. I wasn't supposed to go back; I was supposed to go someplace else---Thailand had been mentioned---but not the RVN. I was fed some BS about an emergency requisition in view of my specific advanced training. When I got there I was not assigned based on those qualifications. The Army personnel system was always months behind the power curve.\n\nSo halfway through my tour, Nixon finally bombs the shit out of the North during Linebacker II and I'm thinking, 'hell, I'll be home in a month!' Wrong again. My \"experience in the area of operation\" and my \"maturity\" made me the perfect candidate to stay after almost everyone else went home. I was assigned to work with the ill-fated peace keeping group\u2014the International Control Commission---which accomplished absolutely nothing during their brief tenure---and simply walked off the job one day in frustration under the leadership of the Canadian contingent. \n\nOf course all R&R trips had long since ended so I didn't get to go anywhere cool and get laid. During the last three months I was the maintenance officer for a detachment of Hueys in support of the gaggle of Canadian, Hungarian, Indonesian and Polish members of the Commission, affectionately known as CHIPs. Most of my maintenance was performed by civilians who were nearly useless. I headed home with the last regular military folks on March 29, 1973. \n\nSome \"big picture\" history is in order. April of 1969 was the peak year and month with 542,000 uniformed Americans in country. I arrived in June of 1969. When I left the RVN at the end of my first tour in the middle of 1970, there were less than 300,000 troops in Vietnam. When I got back in 1972, there were fewer than 70,000 Americans left, primarily advisors and aviators, and that number dropped by a few thousand more each month as Nixon trickled us down. By the end of 1972 or the first two weeks of 1973 when the official hostilities supposedly ended (which is a crock because we still got shot at), it was less than 25,000 and by the end of the first quarter of 1973---when I flew home---no one remained other than embassy security---probably less than 100. \n\nThe first thing I heard from my new CO (a semi-pro water skier) at the beginning of my second tour was: \"don't be the last man to die or get someone killed in this shit hole.\"  There weren't any American units left on the ground to save your butt if you went down. Since I went right back to the exact same locale I had flown during my first tour, I was given a short check ride and re-designated an Aircraft Commander. \n\nThe NVA (North Vietnamese Army) had taken a significant portion of northern I Corps---all the way to the Thach Han River at Quang Tri. A Polish colonel I used to chat with---part of the peace keepers---commented that the city of Quang Tri looked like Dresden after WWII. There wasn't anything standing over three feet tall in what had once been a vibrant city of somewhere between a hundred and two hundred thousand. \n\nIn the central and southern portions of the northern-most military region, the enemy had taken over major portions of the real estate; the AO or Area of Operations---or at least the relatively safe part of it to over fly---was a lot smaller than I remembered. Once the cease fire occurred and we were obviously leaving for good, even the South Vietnamese shot at us.\n\nDuring my second tour, literally hours before the cease fire, on January 8, 1973 an Army Huey, serial number 69-15619, with a crew of four and two passengers aboard inexplicably miscounted their rivers and flew across the Thach Han river into what was by then, enemy territory. I knew the crew, albeit not that well; they were in my unit. The passengers included two Americans, an officer and a sergeant, both advisors. Paraphrasing from official accounts and what I was told at the time, here is what appears to have occurred.\n\nWhile the helicopter was northwest of the river, it was seen to circle twice with its door guns blazing at an unknown ground target. Enemy automatic weapons fire was heard by friendly ground troops. They also reported seeing three SA-7 ground-to-air missiles fired at the helicopter. The first missile missed the Huey, but the second struck the helicopter's tail boom causing it to lose rudder control. A third missile impacted the Huey's fuselage prior to its crash. \n\nA search and rescue (SAR) operation was initiated and continued through 9 January. As SAR aircraft approached the area in which the Huey was downed, they were repeatedly driven off by small arms and automatic weapons fire as well as multiple SA-7 launches. Because the area was under total enemy control, no ground team was able to reach the crash site. \n\nAlmost immediately US intelligence began receiving reports indicating that of the six men aboard the aircraft, four were seen alive on the ground. I heard this fact first hand from another pilot. The families of the men assumed their loved ones would be released with the other POWs, and some families were even so informed by their US military casualty officer.\n\nIt didn't happen. In the middle 1990s during several recovery operations, bones and teeth were discovered in multiple burial sites that ultimately identified all of the men. It took until late 1999 to positively identify all of the fragments and ascertain that they belonged to the crew and passengers on 69-15619. They were buried in various locations near Quang Tri. There was evidence that their bodies had been dismembered post mortem and one of the burial sites was fourteen feet deep. \n\nWhy were they killed when the war would be \"over\" in a day? They were too much trouble to deal with as live captives by a vicious, sadistic enemy that had no regard for human life. As I've already indicated, four of the six---according to eye witness accounts---survived the crash and were ambulatory. They were simply executed by the bastards---and then their body parts commingled to cause confusion in case they were ever exhumed---after attempting to smash their faces beyond recognition.\n\nBack to the story. My aviation unit provided support for the American advisors still on station. We flew the advisors around from place to place, often with their Vietnamese counterparts and kept them supplied with the basics. We had new rules of engagement (ROE). We couldn't shoot back if we were shot at---only if our aircraft actually took hits and we could get away without shooting. The Aircraft Commander (AC) had to personally sign off on how many rounds were on board when he left in the morning---and then count them again at the end of the day. Our quality of life---to include the complete lack of protective bunkers in case of mortar or 122mm rocket attacks---was dismal in comparison to what it had been a couple of years earlier. \n\nWhile my unit was based out of Danang, I was often living in Chu Lai about sixty miles south near the mouth of the Troung river. Chu Lai had once been the site of a massive American air base built by the US Navy which housed portions of the Americal Division, Marines, US Navy personnel and Marine air assets. It was a huge base with an 8,000 foot jet capable runway and a long parallel taxiway on one side. On my arrival in 1972, the Americans were all gone and the base was deserted except for a small contingent of American advisors. The forward element of the advisor group was still farther south in a provincial capital called Quang Ngai.\n\nIt wasn't bad duty; in addition to the four of us in the aircrew, there were maybe three officers and a handful of NCOs. They had a WATS line you could call home on. The booze was free and the food better than average. The full colonel who was the senior advisor was a bigger than life character---God love him. I seem to recall that I must have made a favorable impression on him. For whatever reason he requested me by name---again, after thirty-five years some of the details have faded. \n\nHe and I butted heads a few times but I would have followed that son of a bitch to hell and back---which is what damn near got me killed. I believe he went on to garner a couple of stars and command a division before his death in the eighties from non-hostile causes but don't quote me. He certainly deserved to be a general officer. He was absolutely fearless, that's for damn sure.\n\nI was sleeping on a cot covered with mosquito netting in a small room in the operations center along with my pilot. I wouldn't say he and we were close; I'm pretty sure I irritated him and vice versa but that's another story. He was a competent first tour pilot and a good officer.  The events of that night probably helped improve our relationship. I don't remember why we had elected to spend the night down there in Quang Ngai; we'd never done so before. \n\nThe colonel came in and woke us up. Evidently a large number of Vietnamese Army soldiers riding in a huge personnel carrier had hit a mine that by all estimates was the size of a 55 gallon drum. It blew the hell out of them. The Vietnamese never seemed to be in a rush to tend to their wounded. There were ambulances supposedly on the way but they were not expected to arrive in time to do much good. The Vietnamese Air Force---VNAF---had no intention of launching a Medivac mission at night in bad weather. There were brand new VNAF Hueys parked all over Vietnam; if they had a mechanical problem or ran low on fuel, they just parked their aircraft and left it there to rot.\n\nI knew that flying a Medivac for Vietnamese personnel was not something he could \"order\" me to do---and he knew it also but he was a persuasive SOB. He played on my compassion, indicated that he and the Major would man the door guns if I didn't want to ask my enlisted crew to go on the mission. I looked over at my pilot, a relatively new first tour aviator who outranked me but was not in command of the aircraft---I was---and somehow wordlessly we agreed to go do it. I gave my crew chief and gunner the option of saying no but they said yes. The Colonel grabbed an M16 and elected to go with us. He figured we'd need some help getting the wounded on---and keeping the walking wounded from rushing the aircraft.\n\nThe weather was shitty; the ceiling was less than 100 feet but under the cloud cover the visibility was decent. We headed North along Route One and in less than ten minutes found the site. It was bedlam and confusion. The colonel jumped out and started picking up wounded and tossing 'em in the door. We ended up with more bodies or \"souls\" than we were supposed to carry, but they were little and light compared to the average American soldier. Those who weren't seriously injured tried to get on but the colonel and the crew chief pushed 'em back. We came to a hover, made a power check, decided we could fly and headed back south along the highway.\n\nWe got to the Vietnamese hospital and it took them ten minutes to come out with stretchers and attend to the wounded. It looked like an episode of the Keystone Cops. I like the Vietnamese people; I've had several good friends from that country over the years. For the most part, however, their government, their bureaucrats and their military were all useless and incompetent. Most of their officers were corrupt and received their rank thanks to family status or politics. I trained their pilots back in the states and they were universally incapable of thinking strategically or planning and executing a mission. With few exceptions they would have lost every battle they fought without US support. Some more history is in order.\n\nIn 1971 there was a campaign known as Lam Son 719---30 Jan - 24 Mar 1971---in which the Vietnamese Army with the support of American air power and helicopters was supposed to take the battle to the NVA and show their mettle---proof that \"Vietnamization\" was a success. It was a crushing defeat and the South Vietnamese military never recovered from it. \n\nA very good friend of mine was a young Captain with the 101st Airborne Division and he has never recovered completely from his involvement in that cluster-fuck. If the battle in the Ia Drang valley immortalized in, We Were Soldiers Once and Young was the opening bookend of American military ground involvement in Vietnam, Lam Son 719 was the closing one. A number of guys who were just arriving in my first tour unit when I left in 1970 got caught up in Lam Son 719 and a lot of them got zapped.\n\nThe objective of Lam Son 719 was to disrupt an ongoing North Vietnamese Army supply buildup at Tchepone, Laos. American helicopter units supported and provided all transportation of ARVN troops/supplies into and out of Laos during this operation---because their own air force was unwilling and/or incapable of doing so in spite of the fact that they had ample equipment and sufficient pilots. Over 2,000 American aircraft were involved. The US helicopter crews went against the heaviest anti-aircraft barrage incurred in the War.\n\nThe US helicopters that supported Lam Son 719 received fire from rocket propelled grenades, enemy tanks, mortars and small arms fire. The US helicopters were regularly opposed by NVA 23mm, 37mm, and 57mm anti-aircraft weapons along with .51 caliber machine guns arranged to provide mutually supporting anti-aircraft fire. The enemy opposition comprised a permanent logistical force of engineers, transportation, and anti-aircraft troops, together with elements of five divisions that included 12 North Vietnamese infantry regiments, an NVA tank regiment, an NVA artillery regiment, and 19 NVA anti-aircraft battalions.\n\nThe South Vietnamese government claimed that 13,341 NVA had been killed against 5,000 ARVN KIA/WIA.  Total bullshit! American estimates put the ARVN losses at 10,000---an entire division---which amounted to half of ARVN forces committed to the operation. In general terms if you lose half your army, you are no longer combat effective---you lost. Sadly, during my first tour in Vietnam I worked extensively with the two Vietnamese ground divisions later deployed in Lam Son 719. They were probably the best two infantry divisions in the ARVN and they got their clocks cleaned.\n\nThe losses to US Helicopter Forces were 65 Helicopter Crewmen KIA (Killed in Action), 818 WIA(Wounded in Action), and 42 MIA(Missing in Action), 618 US Helicopters were damaged, including 106 totally destroyed, from 30 Jan - 24 Mar 1971.\n\nBack to the setup for the story. We finally got all the wounded off at the hospital in Quang Ngai. Our fuel was a little iffy but we figured we had enough to go make another run---round trip twenty minutes---and get to a refueling point with an adequate reserve. The ceiling was dropping; we figured we'd only be able to get in one more time and would need to take on as many as was humanly possible, so keeping our weight down made sense. We headed back up Route One low level---just as I had done countless times before. Quang Ngai province had always been an enemy stronghold but generally if you stayed low and fast over the highway you were okay. My Lai is just north of the city of Quang Ngai. Quang Ngai is about 100 miles south of Danang.\n\nWe had just crossed the Tra Khuc River estuary when we started taking heavy automatic weapons fire. Initially we figured we'd \"fly out of it.\" Then we heard the distinctive rumble of a .51 caliber heavy machine gun and saw green tracers all around us. I think I was at the controls. I also recall that we both---my first tour pilot and I---made the same decision simultaneously---climb into the soup to get away from the enemy fire. I had a standard instrument ticket and significantly more AI (Actual Instrument, or real weather) time than most of my peers and my pilot had a civilian license and a standard instrument ticket and was an accomplished instrument pilot in his own right.  Neither of us were afraid of flying in the clouds nor did we doubt our capability to do so.\n\nWe climbed through the cloud layer; I seem to recall that we broke out somewhere above three to five thousand feet. The reality quickly hit both of us that we were not in a good situation. The only air facility with a radar, ground controlled approach was 100 miles North---Danang. Chu Lai still had an old ADF beacon---notoriously inaccurate---and the minimums for that approach---if we'd had an approach chart---were well above the current ceiling. There was nothing South within range---nor had either of us flown very far south of Quang Ngai. The colonel had a headset on and listened in as the pilot and I chatted; he was mercifully silent.\n\nI don't remember every word we exchanged, so the fictional part of this story is the reconstruction of the dialogue as I recall it, based on events as I remember them. I've also changed the names. There are probably only a handful of people that remember exactly what happened that night, to include the five us on that UH-1H and some nameless U.S. Air Force air traffic controller that I never got to meet---but I'd like to. I'll begin the story after we climbed through the cloud cover. We probably didn't speak in complete sentences or with the level of detail I have portrayed but I felt it was necessary to give the reader a clearer picture of the events.",
        "\"Frank! I've got the aircraft. Grab your wiz wheel (sort of like a circular slide rule used by pilots for decades to navigate by dead reckoning) and see if you can calculate our ground speed, fuel consumption and ETA (Estimated time of Arrival) to Danang.\"\n\n\"I'll give it my best shot.\" The pilot replied, fumbling through his flight bag for the desired item. A couple of minutes later he responded.\n\n\"Rick, I can't really get enough of a fix on anything to be remotely accurate...a sextant would be nice since its clear as a fucking bell up here...if I knew how to use it.  We took off to the North with a ten to fifteen knot headwind. I punched the clock when we went in the soup---maybe a mile north of the river? Based on our current fuel consumption and the fact that it will increase when we descend and based on what we left Quang Ngai with...and assuming an approximate ground speed of...something less than 80 knots? Maybe not even that at an airspeed that is remotely economical fuel-wise. Danang is about an hour, give or take...and we don't have an hour of fuel left...maybe forty-five or fifty minutes tops.\"\n\n\"Chu Lai?\"\n\n\"Fifteen...twenty minutes more or less...but it's got no tower...no radar...an unreliable ADF for which we have no approach chart and it's well below minimums. I mean we can find it---or at least the ADF transmitter which is not actually on the runway but...I guess we could try calling an aircraft carrier on guard but they're probably a hell of a lot farther out over open water than I want to fly in a single engine aircraft.\"\n\n\"The tower at Danang is all Vietnamese personnel---can't even understand a word they say. What about approach control?\"\n\n\"Can't say I've chatted with them; let me look up the freq. What are you thinking?\"\n\n\"I'm not sure but a third head in this game seems to make some sense.\"\n\n\"You're up on VHF.\"\n\n\"Give me your best WAG (wild assed guess) of our distance from Danang and the approximate radial based on the VOR (another instrument landing aid, more reliable than ADF but nor remotely as reliable as TACAN or Tactical Air Navigation with DME or Distance Measuring Equipment or anything in commercial or military use today).\"\n\n\"You got it.\" The pilot said, rattling off the numbers.\n\n\"Take the aircraft.\"\n\n\"I've got the aircraft.\"\n\n\"You've got the aircraft.\"\n\n\"Danang approach control, Army helicopter 57789.\"\n\n\"Go ahead 789.\"\n\n\"We are an Army UH-1H approximately eighty nautical miles south of Danang on the 165 radial at four thousand feet, heading 350 squawking 5550, requesting assistance.\"\n\n\"Roger, Army 789; turn right to a heading 070 to confirm. Turn back now to a heading of 350. I have positive radar contact 82 miles south southeast of Danang. You will be first in line for a straight in GCA(Ground Controlled Approach using radar) runway 35 right. I have no other IFR traffic in your vicinity.\"\n\n\"We're low on fuel, Danang. Our estimate does not indicate that we have sufficient fuel to reach your facility.\"\n\n\"Are you declaring an emergency, Army 789?\"\n\nNo pilot in his right mind ever declares an emergency unless he absolutely has to in view of the mountains of paperwork and the embarrassment.\n\n\"Not at this time but we'll keep you advised. Danang, have you got some time to spend with us? We need a little help here.\"\n\n\"You are my only aircraft...the only one I've had since I started my shift.\"\n\n\"Danang, do you have a precise fix on your screen of the Chu Lai air base?\"\n\n\"Roger that.\" \n\n\"How precise?\" \n\n\"Wait one; let me ask someone.\" A minute later the controller came back on the radio.\n\n\"Plus or minus three to five hundred feet in terms of land area but be advised I can't give you any reliable altitude data at that distance.\"\n\n\"Standby.\"\n\n\"Frank! How big is Chu Lai in your estimation?\"\n\n\"There's 8,000 feet of runway plus overruns---two miles long give or take. Probably half a mile wide.\"\n\n\"So, 10,000 feet---double the margin of error to a thousand feet and we're still looking at 8,000 feet plus and then a 1,500 or so east to west. We're in a helicopter for Christ's sake! If he can put us over the airfield, vectors us---box us down---turn us on final somewhere between the runway and the taxiway...we'll have seven or eight thousand feet to find the ground. If we roll out on final at five hundred feet or less, slow it down to fifty knots or less...enough forward airspeed to keep it under control...ease it down at fifty feet per minute or less...\"\n\n\"Worse case we slam into the runway without too much forward ground speed, hopefully with our skids aligned and a minimal sink rate and walk away from it?\"\n\n\"If our altimeter is remotely accurate since the only barometric pressure reading we're going to get is Danang not Chu Lai. Best case we break out before we run into anything and hover back to our tie down area with no one the wiser?\"\n\n\"It's as good as anything I can come up with. Sell it to Danang. By my calculations we're less than two minutes from needing to turn on that crosswind leg. For the record, our ground speed is not as good as I thought. It's Chu Lai or nowhere.\"\n\nRick briefed the young Air Force controller on their plan. He had anticipated an argument or a request to check with a supervisor. He got neither. It was agreed that all turns would be inside a five-hundred foot margin for error. The ADF needle was fluctuating plus or minus fifteen degrees and would be of little value in finding the runway centerline. \n\n\"Army 789, turn right to a heading of 090, begin descent.\" The helicopter was quickly back inside the cloud layer. Not long after, the next vector was received.\n\n\"789, I show you approaching the eastern edge of the airfield, turn right to a heading of 180 and descend to one thousand.\"\n\n\"Frank, your call but I'd rather have you on the instruments.\"\n\n\"Yeah, me too. Assuming we break out in some unusual attitude you're the more experienced Huey pilot. We're just past the halfway mark on downwind.\"\n\n\"Army 789, your base leg turn will commence in fifteen seconds...turn right to a heading of 270 degrees and continue your descent at your discretion.\"\n\n\"Level off at 500.\"\n\n\"Roger.\"\n\n\"Slow to fifty knots, Frank.\"\n\n\"Wilco.\"\n\n\"789, begin a standard rate right turn now to a heading of 350...on final approach heading, approximately 1,000 feet from the landing threshold...coming up on the landing threshold.\"\n\n\"Three hundred feet, Frank...slow it down a little more...thirty knots. I'm going to follow you on the controls; when you feel me take control, release---there may not be time for the normal transfer protocol.\"\n\n\"Roger that.\"\n\nThe seconds ticked away with no indication of where the ground was....but it was definitely down there somewhere.\n\n\"789, you appear to be near the runway midpoint and I...I no longer have radar contact.\"\n\n\"Altimeter says we're at 200 feet...maybe less...fuck.\" A few more seconds ticked by.\n\n\"Altimeter says...nothing...where the fuck is that runway?\"\n\n\"I can't slow it down any more and keep it under control...it's starting to wobble on me.\"\n\nSuddenly in the swirling mist a red and white structure, probably a power junction container of some sort which Rick recalled was between the runway and the taxiway loomed in the windshield less than seventy-five feet in front of them. He grabbed the controls and his pilot quickly removed his hands and feet.\n\n\"Got it! Shit!\" Rick screamed, pulling the cyclic to the rear, flaring the aircraft and swinging the tail to his right. He felt the tail stinger scrape the ground. The aircraft came to a hover with the tips of its rotor over the roof of the low structure and the skid caps within ten feet of it.\n\n\"Clear me to the rear! I need to back up!\"\n\n\"You're clear sir!\"\n\nAfter backing up he slowly hovered over to the taxiway and set the fifty foot aircraft down.\n\n\"Tell him...approach control... we're okay...down safely.\"\n\n\"My pleasure.\" Frank replied, making the requested radio call.\n\n\"Glad to be of service, Army 789. Have a nice evening.\"\n\n\"Shall we go get some gas and put this mother to bed or do you just want to sit here and enjoy the scenery?\" Frank quipped.\n\n\"I'm just trying to rearranged the massive load in my pants for maximum comfort.\"\n\n\"I thought I smelled something.\" Frank replied. Another voice came on the intercom; it was the colonel.\n\n\"Hell, if you smell something it's probably me.\" \n\nThe other two members of the crew added their own bits of black humor. No one said anything as they refueled and repositioned next to the advisor compound. After they shut down and secured the aircraft, the colonel spoke first.\n\n\"Gentlemen, twenty-six years in this man's army, airborne, infantry, gung ho ranger and all that crap but that fucking scared the shit out of me.\"\n\n\"That's because you were riding in the back sir and there wasn't a damn thing you could do. I may fly these things but I'd never ride in one,\" Rick retorted.\n\n\"You're right...there wasn't a damn thing I could do.\" he paused. \"Rick, Frank---was this as close to a near death experience as I think it was?\"\n\n\"Yeah...it was. We're sure as hell not going to write it up---no harm, no foul---and will deny it if asked but...yeah... it was as close as I've ever come to...buying the farm. With all due respect, sir---damn you to hell for sucking me into the fucking Medivac...and damn me to hell for saying yes.\"\n\n\"I'll share in that...I didn't fight it...seemed like the right thing to do at the time.\"  Frank said.\n\n\"Did you ever learn---train for something like this---back in flight school?\"\n\n\"No, we were pretty much pulling it out of our ass as we went along. We thought about topping off in Quang Ngai but gross weight, declining weather, busted up ARVN soldiers and time dissuaded us from doing so. We'd already flown up that stretch of road and back down again once---just like we've done hundreds of times before. We thought we were one step ahead of the game...needed to have been two or three steps. We were damn lucky.\"\n\n\"Luck my ass! You got yourself into some shit and fought---or thought---your way out of it. I don't know about you gentlemen, but I need a drink.\"\n\n\"It's well after midnight. I think the bar is closed.\"\n\n\"It's my bar; it's open when I say it is.\"\n\n\"I knew there was something I liked about you colonel.\"\n\n\"At ease, young warrant officer.\"\n\n\"Yes, sir.\"\n\nEdited by Techsan\n"
    ],
    "authorname": "Dinsmore",
    "tags": [
        "vietnam",
        "helicopter"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/tomorrow-is-another-day-ch-02"
}