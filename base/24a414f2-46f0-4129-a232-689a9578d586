{
    "title": "Life Raft",
    "pages": [
        "Author's note: This story was a prizewinner in the Nude Day contest in 2014. I came upon it a couple of years later in my Old Stories folder and began to reread it. Being a compulsive editor, I couldn't stop myself from improving the story in certain minor ways, but I was much happier with the result. I've passed those changes along with this second edition.\n\nBe forewarned that, as before, there is a brief scene of extreme violence in the story, though I've now toned down the graphic intensity of it slightly. The tale begins by introducing the characters, settings and circumstances that lead to the scenes that we all come here for. Just like in real life, the sex is always much better when you're invested in the story.\n\n* * * * *\n\nI slept in until six that Saturday morning -- an act of indolence that would have scandalized my farming parents and grandparents -- then sat down to spend some quality time at my keyboard. I had no cows to milk or irrigation sets to change, though, so my level of guilt about it was low. Three hours later, I got up and stretched.\n\nMy next order of business was to hit the gym for an hour or so, then go to the office and spend the afternoon doing market research. My phone rang just as I snagged my workout bag.\n\n\"Sean! How's it goin'?\" a familiar voice said in my ear.\n\n\"Hey Alex. Long time no hear.\"\n\nAlex and I had hired on at Jensen Securities right out of college two years before and we'd been casual friends during his time there, but he'd left six months ago to join another investment firm, claiming they had better long term prospects. I had my doubts about that, and rumor had it that his departure hadn't been voluntary.\n\n\"Dude, I'm tubing through the canyon today,\" he said. \"Wanna come along?\"\n\n\"Uh, I've never been up there.\"\n\n\"Seriously? Then you gotta do it. The temperature's gonna be perfect and the river's always wall-to-wall with hot babes. They're ripe and it's time you started doing a little picking.\"\n\n\"Oh, I don't know that I'm ready to get back out there.\" It was my stock excuse.\n\n\"Come on, Sean. It's been like a year, right?\"\n\nI could have told him off the top of my head that it had actually been one year, six months, fourteen days and eleven hours, but who was counting? Still, while I had zero intention of ever getting back out on the dating scene, I knew I was spending too much time alone. It might actually be nice to get outside and be around some people who didn't obsess about derivatives and P/E ratios.\n\n\"Well, I suppose I could go into the office tomorrow. If I came, what would I need to bring?\"\n\n\"I've got a floating cooler, so you'd just need your suit and a tube. We can pick up some beer and ice on the way out of town.\"\n\n\"I don't have a tube, but I do have a small inflatable raft. Is that okay?\"\n\n\"Yeah, sure. I'll be in a tube, but you see a ton of rafts there too.\"\n\n\"Look, it's already after nine. I've heard that it's best to be on the river before the heat of the day.\"\n\n\"Well, I was at a party until pretty late last night, so I just dragged out. Not to worry, though. There are people going down the river all day long and it'll be cool enough since we'll be in the water.\"\n\n\"Oops, almost forgot. I've got a five-thirty tee time with some of the guys from work.\"\n\n\"No problem. It's ninety minutes on the road each way, and the trip down the river only takes two hours. You'd be back in plenty of time.\"\n\nI ran the numbers in my head. Assuming we could be out of town by ten, three total hours of driving and two hours on the river would have us back by three, leaving me time to get ready, plus a two hour cushion. Against my better judgment, I decided to do it.\n\n\"Okay Alex, I'm in. I should be able to round up my stuff by the time you get over here.\"\n\nThere was a pause. \"Look Sean, I'll, uh, buy the beer if you drive.\"\n\nWow, when he'd asked if I wanted to \"come along\" I'd just assumed he was driving. \"We'd have a lot more room for your tube and cooler in your Cherokee.\"\n\n\"True, but it's in the shop with a blown tranny.\"\n\nBig surprise. I'd advised him not to shoehorn that hot rod V8 into his ancient Jeep without beefing up the transmission, but he'd thought I was just being my usual over-cautious self. Of course I didn't remind him that I'd told him so. That wasn't the kind of guy I was.\n\n\"Gee, that stinks,\" I commiserated instead. I was already wishing I'd said no to the whole thing, but I didn't want to back out after having said yes. \"I guess I'll pack my stuff and swing by your place in a few.\"\n\n\"Thanks dude. Don't worry, it's gonna be great.\"\n\nWhen I arrived, Alex was only just starting to round up his gear and we had to try five different ways before we figured out how to wedge his fully inflated tube and cooler into my car. By the time we left the liquor store it was after ten-thirty. Kiss thirty minutes of my cushion goodbye.\n\nAlex damn near begged to drive, and while I didn't particularly relish the idea of being consigned to passenger status, I couldn't think of a reason to tell him no without being rude.\n\nWe were still in town when Alex reached into the back seat at a stoplight and grabbed a beer out of the cooler. \"There's an open container law in this state,\" I reminded him timidly.\n\n\"Sure, but you've got tinted windows. Who's gonna see?\"\n\nI gathered up my nerve and did my best to stand up for myself. \"Look, since I started driving this car, I've been pulled over four times. Cops see the logo and racing stripes and they look for any excuse to get a closer look. The last thing you need is to have them smell beer on your breath and find empties in the footwell.\" I halfheartedly gave him a look that tried to reinforce that I was serious.\n\n\"Look, Sean, I bought the beer, don't tell me when I can drink it.\" With that, he popped the top and took a long draught. I just stewed, more upset with myself for being such a weenie than at him for being a moron. Still, I was reminded again of why I hadn't associated with Alex much recently.\n\nTraffic wasn't terribly heavy on the winding two-lane road up to the dam, but there were a lot of slow-moving trucks, and passing opportunities were few. Finally we ended up behind the mother of all rolling roadblocks.\n\n\"Damn, I hate this shit!\" Alex muttered, pounding on the wheel.\n\n\"The sign says there's a passing lane coming up in half a mile,\" I said, trying to cool him down. He was a far more aggressive driver than I was.\n\n\"Yeah, but that's like forever. I can't stand it when... wait, I think there's a break.\"\n\nAlex stabbed my Ford into second and put the hammer down. Five hundred and forty supercharged ponies screamed their freedom as we darted across the centerline and began to pass the boat-towing motorhome and triple-trailer semi.\n\nWhen I saw the road ahead of us, I realized that Alex' idea of a break in traffic was a bit different than mine. My reaction was immediate and visceral.\n\n\"Oh shit!\" The distinctive grill of an oncoming Kenworth was approaching quickly. I didn't think there was any way we were going to make it.\n\nAlex' move was foolhardy, and in just about any other car would have gotten us killed, but we were picking up speed at a nearly ludicrous rate. He speed-shifted into third as the tachometer hit redline and the meaty rear tires chirped loudly.\n\nWe were doing better than a hundred and twenty when he whipped the Shelby back into our lane. Air horns were blasting at us from both trucks, but the Kenworth was still fifty yards away. Alex dumped the throttle and we eased back down a bit closer to the double nickel speed limit.\n\nI wanted to scream at him to pull over and let me drive, but I didn't. He'd made the pass successfully and despite my displeasure, I had to admit to myself that it was good to be moving at better-than-bicycle speeds again. \"Alex, could you please be a little more careful?\" was about the best I could manage.\n\n\"Take a pill, beanpole. That's the way a car like this should be driven every now and then. Besides, you're the one who's got his panties in a wad about getting back in time.\"\n\nHe did have a point, but I was regretting this whole deal more and more by the minute. And I hated it when he called me beanpole.\n\nAs we approached the base of the dam where the launch area was, Alex explained that the standard operating procedure upon arrival was to drop all the gear and passengers there, have someone drive the vehicle down to the landing area, and then hitch a ride back up to the top. That way the tubers could get straight into their vehicle and leave just as soon as they got out of the river.\n\nI hadn't factored that into my calculations. There went another thirty minutes of my cushion.\n\nNot wanting to let him drive my Mustang without adult supervision, I told him I'd take on the parking and hitchhiking duties.\n\nThe launch area wasn't exactly buzzing when we arrived. I began to suspect that Alex' assurances that there would be plenty of company later in the day may have been a bit exaggerated. There was a group of four girls ready to get in, though, looking like they were ready for their driver to return from the landing area. Then, as we got out, an Escalade pulled up and disgorged six girls and guys. I watched surreptitiously and was able to tell that they were here as couples.\n\nMy heart lurched a little and I wished I was there with Amanda instead of Alex. That wasn't ever going to happen, though, so I got back to work.\n\nWe quickly unloaded our gear. I unpacked my raft and threw the bag back in the hatch. Then I pulled out my big, double-action foot pump and handed it to Alex.\n\n\"Would you mind?\" I asked hesitantly.\n\n\"You want me to blow up your life raft?\" He was seemingly shocked at my presumptuousness.\n\nThat was Alex for you; always way quicker to ask a favor than to do one. It also bugged me that he called my vessel a 'life raft'. It was nothing of the sort, being an expedition-grade whitewater craft. I wanted to correct him, but instead I said \"well, it would mean that we could leave sooner when I get back.\"\n\n\"Well, uh...\" He glanced over at the girls. I noticed that they were really young, maybe not technically jail bait, but high school seniors or college freshmen at best. \"I'm gonna give those girls a hand hauling their stuff down to the water, but after that, sure, I can do the raft.\"\n\n\"Great. Just lay it out flat first and don't over inflate it. I'll top it off when I get back.\"\n\n\"Sure thing, beanpole. I'll just blow it up as hard as your dick gets, then, when you get back, you can get it as hard as mine.\"\n\nOuch. I was tired of his endless braggadocio. To hear him talk, he was hung like a porn star.\n\nI stacked everything in a neat pile at the edge of the parking area, then hopped back in the car. I was about to fire up the beast when I remembered the item in my pocket. I got back out and handed it to him.\n\n\"What's this?\" he asked.\n\n\"It's the adapter that lets the pump's hose hook up to the raft. You'll need it.\"\n\n\"Gotcha.\" He stuffed it into the pocket of his cutoffs and headed over to help the girls.\n\nThe driver of the Escalade took off just ahead of me. I was glad to follow him because I wasn't completely sure of where I was going. It turned out that the dirt road that led from the highway to the landing area was extremely dusty and bumpy. Again I wished we had brought Alex' Cherokee. I exercised extreme caution and never bottomed out, but the Mustang's suspension wasn't meant for off road work. The road went for 2.1 miles by my odometer, with the first half mile running parallel to the highway on the other side of a barb wire fence. I looked over at the pavement longingly. It was a much more suitable environment for my pony car.\n\nI parked on the outskirts of the lot, near the exit, hoping to avoid door dings. Droves of people were coming up out of the water, all carrying tubes. I didn't see another raft anywhere. Great.\n\nI walked over and stuck my thumb out. It was only a matter of seconds before I was picked up by a load of guys who'd already finished their trip. \"Dude, you sure are starting late,\" the driver said, after I'd wedged myself into the back with a couple of his friends.\n\n\"Yeah, my buddy told me there are groups coming down the river all day long, but it looks like morning must be the popular time.\"\n\n\"That's for sure. It was a total zoo when we got here. Tubes fuckin' wall-to-wall on the way down. Most of 'em are gone already, but it was a major party all morning.\"\n\nThe guys were in a hurry and we traversed the road at triple the speed I'd traveled on the way in. Four minutes later, they dropped me off at the highway, then headed back toward the city.\n\nI stuck my thumb out again, but the only traffic I saw for the first couple of minutes was coming from the river and heading down the highway the other direction. Then a pickup dropped off the driver of the Escalade right next to me.\n\n\"Looks like we may be here for a while,\" I warned.\n\n\"Yeah, my group likes to come later in the day to avoid the crowds. Having to wait for a ride is the downside.\"\n\n\"Most people seem to like the crowds.\"\n\n\"Well, we're all old married folk,\" he said with a grin. Old? He couldn't have been my senior by more than a couple of years.\n\nI stuck out a paw. \"Sean.\"\n\n\"Ethan,\" he said, shaking my hand with a firm grip. \"First time up here?\"\n\n\"Yeah, my friend talked me into this.\"\n\n\"You'll have fun.\"\n\nLike me, Ethan was wearing a hat and sunglasses, but he looked vaguely familiar. I would have sworn I knew him from somewhere, but I just couldn't place him. I hate it when that happens.\n\nA distant hum of tires on the asphalt alerted us to the fact that a vehicle was coming up the highway. We stuck our thumbs out and were rewarded when a Suburban with two tubes strapped to the roof rack rolled to a stop next to us. Its dark window came down.\n\nThere was a cute Asian girl behind the wheel and an equally attractive brunette riding shotgun. Both were slightly plump, but wearing agreeably brief bikinis and I figured Alex would be thrilled if we could find ourselves floating the river with them.\n\n\"Going to the top?\" asked the driver.\n\n\"Absolutely,\" I said.\n\n\"Then hop in, guys.\" She nodded toward the back.\n\nI opened the door to reveal two more girls sitting on the middle row bench. The far one was very tall, thin and dressed in one of those wrist-to-ankle swimsuits used by those trying to avoid too much sun exposure. Being quite fair skinned and a frequent outdoor swimmer, I actually owned stuff like that myself, but had left it at home, figuring it would probably look out of place in this crowd.\n\nThe nearer girl was clad in a conservative one-piece, but was actually the hottie of the group. She was vaguely Hispanic with a stunning face and a body made for sin. There was space enough for four on the bench and the thought of being tight up against her wasn't at all unpleasant, but she wordlessly directed me rearward, toward the third row.\n\nI hit the release lever for the split seatback and packed my six foot five frame into the way-back. There were three more tubes in the cargo area behind me. Ethan looked like he was about to follow me into the penalty box, but the dark-haired beauty reached out and flipped the seatback into its upright position and motioned for him to join her.\n\nPart of me was a bit hurt, but women had always tended to find me a bit gawky. I was used to it and it wasn't like I was in the market anyway. Still...\n\nShe scooted a little closer to Ethan, but then he covered his mouth with his left hand and gave a little cough. She immediately saw (as he'd obviously intended) his wide wedding band. Her shoulders slumped and she moved back to where she'd been. That made me feel a little better.\n\n\"Thanks for the ride, ladies,\" Ethan said. \"I don't know how long we'd have been stuck there if you hadn't stopped.\"\n\n\"Not a problem,\" said the driver. \"We got a late start because Kim had to work this morning,\" she said, indicating the girl in the shotgun seat. \"I'm Randi, that's Trish in the middle seat, and Jessica's in the wet suit.\"\n\n\"I'm Ethan.\"\n\n\"Sean.\"\n\nThere were murmurs of greeting all around, then Ethan turned to me. \"Did your friend tell you about the rapids and the jump spots?\"\n\n\"Nope.\"\n\n\"Well, the river runs through a canyon the whole way, but there are only three places where it's safe to jump.\"\n\nTrish was up on the edge of her seat, talking with Randi and Kim, but Jessica was listening to Ethan. I got the impression that she was a first-timer as well. Her face was vaguely Asian and looked intelligent and friendly, if not as cute as any of her shorter companions.\n\n\"The first set of rapids are right after the first jump spot. They're not particularly rough, but the water runs really fast and it's less than a foot deep so you have to keep your feet up. The big rapids are near the landing area. You need to make sure you're on the outside of the bend, because the inside is way too gnarly for tubes.\"\n\n\"How long does it take, top to bottom?\" I asked.\n\n\"If you float all the way without stopping, probably about four hours.\"\n\n\"Four hours? Alex told me it takes about two.\"\n\n\"Only if the reservoir gets too high and they release a lot of water. This summer's been pretty dry, so I'm guessing four would be a minimum.\"\n\n\"Damn,\" I muttered.\n\nI caught the driver's attention in the mirror. \"Randi, you're coming back down to leave your truck after you drop these guys off, right?\" She nodded. \"Could I talk you into giving me and a friend a ride back to my car? I could give you a lift back up to the top so you don't have to stand out there and thumb a ride.\"\n\n\"You're not going to tube?\"\n\n\"No. I have to be back in town by five. That's not going to happen if we're on the river for four hours.\"\n\nI'd turned twenty-four just the day before and the guys had scored a coveted tee time at the country club for my birthday. I'd be damned if Alex was going to make me miss it.\n\n\"Sure, I can bring you guys back if you want,\" Randi said.\n\nWhen we arrived at the launch area, Ethan's group was the only one there. I got the impression that Randi and her friends were going to be the last group of the day.\n\nA few seconds later, I realized that Alex was gone.\n\nI walked over to my pile of stuff. My raft and pump were still there, but the cooler and beer were gone, leaving just my two six-packs of water bottles sitting in the gravel next to my backpack. \"That jerk,\" I muttered.\n\n\"Your buddy took off with that bunch of girls just after you left,\" said one of the guys from Ethan's group. \"They didn't seem to be real excited about the idea of having him with them, but he told them he had a case of beer in his cooler. They were obviously under drinking age and only brought pop, so they were all over that offer. We gave him some crap about it, but he told us to fuck off.\" He shrugged. \"I hate to be rude about it, but that guy's an asshole.\"\n\n\"Yeah, I'm learning that.\" I hoped the girls would drown him when they found out his cooler only had a twelve pack in it. Correction, eleven. He'd had the one on the drive up. No, ten. There was an empty can of Alex' favorite lying on the ground next to the raft. I picked it up and tossed it into the recycling bin, three feet away.\n\nI stuffed the bottles of water into my backpack, then began to unroll my raft. Only then did it hit me. I did a quick search, but it wasn't there. Before I could even consider my next move, Ethan approached. \"You're welcome to float with us,\" he said. \"With a pump like that, it shouldn't take you long to get inflated.\"\n\n\"I really appreciate the offer,\" I said, \"but the adapter that lets me hook it to the raft is in Alex' pocket. It takes forty-five minutes minimum to inflate this thing with the crappy little hand pump that came with it. You guys had better just go ahead and take off.\"",
        "\"I feel for you, Sean. We're pretty leisurely, so maybe we'll see you along the way,\" Ethan said, shaking my hand. He walked back to his group, who already had their stuff down at the water.\n\nI quickly lathered up with sunscreen, then began to work the little pump. I hadn't been at it for more than a minute or two when I noticed that the girls were having their own troubles. There were four ratchet straps holding their tubes to the roof rack of the Suburban. Jessica was the only one tall enough to reach, but she didn't seem to know how they worked. I walked over to help.\n\nJessica was really tall, like maybe six foot two or three and had straight black hair in a ponytail down to the middle of her back. She towered over her friends. Her suit was a wildly colored and patterned affair, defying my casual attempts to assess the body underneath it.\n\n\"My boyfriend loaded the tubes last night when I rented them,\" Randi explained as I arrived. \"None of us have ever used this kind of strap, though.\"\n\nHaving grown up on a farm, I'd been using ratchet straps from the time of my weaning, so I walked up next to Jessica. It was a novel experience, standing nearly eye-to-eye with a girl, and I kind of liked that.\n\n\"May I show you?\" I asked, hoping that I wasn't coming off as the swaggering hero type.\n\n\"Please. I'm usually better than this with gadgets,\" she said with a chagrined smile from under a huge straw coolie hat. Despite having relatively dark skin, she was clearly taking the sun protection thing very seriously.\n\nI showed her how to squeeze the little slide to release the handle, then how to move the handle straight out to release the ratchet.\n\n\"Got it,\" she said.\n\n\"I'll get the two on the other side.\" By the time I'd released them, she'd done the other one on her side. Each of us lifted a tube off the roof.\n\n\"Our hero,\" Trish said, but I didn't miss the edge of sarcasm in her tone. I handed my two straps to Jessica who tossed them in the back with hers.\n\n\"Thanks, Sean,\" she said.\n\n\"My pleasure.\"\n\nIt looked like the girls had everything else unloaded, so I turned to walk back to my raft.\n\n\"Hang on a second,\" Jessica said softly to me. She turned to the other girls. \"Maybe Sean could go with us. We're not going to be ready for a while anyway.\"\n\n\"Jessica,\" Randi said, sounding a bit exasperated, \"this is a girls-day-out trip, remember?\"\n\n\"Yeah. Sorry.\" Jessica turned and gave me an apologetic look.\n\n\"That's okay,\" I said. \"I wouldn't want to intrude.\" I went back to my raft and resumed pumping.\n\nWhen the girls got done unloading, Randi walked up to me. \"I can still give you a ride back to the landing area if you don't want to blow that thing up. It would serve your friend right if he had to find his own way back to town.\"\n\nI thought about it for a moment. \"No thanks,\" I sighed, \"I just can't see myself doing that to him.\"\n\n\"Seriously? After the way he just screwed you over?\"\n\nRandi was right of course and Alex had it coming in a big way, but the very thought of him yelling at me later for leaving him was really unpleasant.\n\n\"Yeah, I'll just inflate the raft and see if I can catch up with him.\"\n\n\"Well, okay, if you're sure.\" Her expression said that she thought I was pathetic. I couldn't help but think she was right.\n\n\"I'll be back in a few,\" Randi said to her friends, hopping into the Suburban and rolling away.\n\nI went back to inflating the raft, but kept watching the three remaining girls out of the corner of my eye. \"Kim and I will take two tubes each,\" Trish said. \"You grab the last tube and the cooler, Jessica.\"\n\nThe two shouldered canvas ditty bags, then slung a tube over each elbow. They headed down the wide gravel path to the water. Jessica bent down to pick up the cooler.\n\nIt was tall and round and looked like it would ride perfectly in the middle of their fifth tube, but to have enough drinks and ice for four girls, it would have to be heavy. Jessica was able to pick it up, though. She headed for the river, a hundred yards distant.\n\nShe made it about a quarter of the way, then set it down heavily. Her body language said she wasn't sure she was going to make it. Kim and Trish were still walking away and didn't see her.\n\nI was on my feet immediately, ashamed that I hadn't offered to help right off the bat. Four years of college feminism had taken a heavy toll on the common courtesy I'd been brought up with. Trish's sarcastic comment when I'd helped with the straps would have been typical on campus.\n\n\"Mind if I give you a hand with that, Jessica?\" I said, almost hesitantly, as I walked up.\n\nShe looked at me gratefully. \"Yeah, I'd really appreciate it.\"\n\nI bent to pick it up, but she stopped me. \"I think it's too heavy to be carried by a single person,\" she said.\n\n\"Oh, okay.\" I grabbed one handle while she grabbed the other and we lifted it between us. I immediately realized that Jessica was a whole lot stronger than she looked. \"Gee, I hope you guys have enough in here to avoid getting thirsty on the way down,\" I said, almost grunting.\n\n\"Yeah, I think we may have overdone it a bit.\"\n\nWe carried it straight to the river, then walked back up the path so that she could snag her tube and bag.\n\n\"I really appreciate your help, Sean,\" she said, picking up her tube.\n\n\"Don't mention it.\"\n\nI was maybe a third of the way into the inflation job when a car dropped Randi off. The highway was right next to the parking lot and she walked by maybe thirty seconds later.\n\n\"You guys have fun,\" I offered. \"Maybe I'll see you on the way down.\"\n\nShe stopped and looked at me. \"How long is it going to take you to get that life raft blown up?\" I resisted the urge to correct her on my craft's designed purpose, because that might have been construed as rude. On the other hand, Randi was evidently not as concerned about such niceties, because her tone and expression plainly said that she hoped it would take me a long time.\n\n\"Uh, probably at least another half-hour.\"\n\nShe nodded, then turned abruptly and walked down to the river. They all pushed off, but I caught Jessica looking back at me. I waved at her and she waved back, though surreptitiously, like she didn't want the others to see her do it.\n\nI realized with a pang that I really hated seeing her go. She wasn't the prettiest girl I'd ever met -- hell, she wasn't even close to being among the top three prettiest girls I'd seen in the last thirty seconds -- but there was something about her that I really liked. And, of course, I wasn't exactly a Hollywood star myself.\n\nIf I was going to see Jessica again, I was going to need to hustle, so I returned to inflating the raft with renewed vigor. I worked the little pump until my hands started to cramp up, but kept right on going. I was soon sweating like crazy and already on my second bottle of rapidly warming water. I pulled off my T-shirt and floppy beach hat, sitting them on the recycling bin behind me and quickly smearing on more sunscreen. I had a reasonable tan for someone so light skinned, but if I was going to be out in the sun all day, I needed to take full precautions.\n\nThe raft was maybe two-thirds inflated when a warden pulled up next to the gate in a dull green pickup. He got out and walked toward me. I got to my feet to meet him.\n\n\"Son, you can't launch after one o'clock,\" he said to me, pointing at a large sign next to the gate, listing all of the park rules. With everything else going on, I hadn't read it. My divers watch said it was twelve fifty-seven. I wouldn't be ready in time.\n\n\"Sir, the rest of my party is already on the river. I need to catch up.\" That was kind of true, in a way.\n\n\"Sorry, but the rule's the rule. Look, why don't you deflate your raft and throw it in my truck. I'll give you a lift to the landing area where you can wait for them.\" He started walking back to his vehicle.\n\nI decided that it would have been nice if he'd stopped me before I'd put so much effort into the task, but I reached down for the deflation valve. I was just starting to work it loose when he called out to me.\n\n\"Hey, hang on just a second there.\" He was walking back over, a contemplative look on his face. \"Look, would you, um, be willing to do me a favor if I let you go down the river after all?\"\n\n\"Absolutely I would.\" Maybe the rule wasn't the rule after all.\n\n\"Well, see, you look to be a bit older and more responsible than a lot of the folks here, and I've got a bit of a situation. One of my duties is to run a Jet Ski up and back in the evening to make sure no one is stranded on the river, but I tweaked my back pretty good this morning. I won't be able to get to my chiropractor until Monday, and running the sweep tonight in my condition might just about kill me.\"\n\nI nodded in sympathy. I'd had to deal with some pretty serious back pain myself a while back.\n\n\"Here's the deal,\" he continued. \"If you can make sure you're the last one on the river when you get out, it'll save me a world of hurt.\"\n\n\"I'd be happy to do that, sir.\"\n\n\"Very good. Here's my card. I'll need to hear from you before seven so I can report that the river's clear.\"\n\n\"You can count on me, and I really appreciate this.\"\n\n\"Likewise. I'm going to go ahead and lock the gate behind you, but I'll swing by in a bit to make sure you got onto the river okay.\"\n\nHe shook my hand, then locked me in. Between the tall gate and the five foot barbed wire fence, it was a sure thing that no one else would get in the river behind me. He waved as he drove away.\n\nTen minutes later, I decided there was enough air in the raft to safely keep me afloat at least. The inflation stem was conveniently located on the top of the raft so I could finish inflating while I was on the river. I carried it down to the water, then made a second trip for the oars and my backpack. I'd beaten the estimate I'd given Randi by half.\n\nI was almost ready to push off when I saw a ziploc bag sitting on a small boulder next to the river. I stopped and picked it up, examining its contents. A smile slowly came over my face.\n\nI used the oars very judiciously to row out into the current. The raft was so soft that I had to be careful to avoid taking on water. Gaining the center of the river, I resumed pumping. There was a stiff breeze coming from downstream and I could tell that it was slowing my progress. Why not? Everything else was delaying me today. I tried to pay it no mind and kept working the pump.\n\nProgress was excruciatingly slow, and my hands felt like they were going to drop from my wrists, but at last the raft felt really firm and I could concentrate on catching up. Randi had made it plain that I wasn't welcome to float with them, but frankly, it hadn't seemed to me that Jessica was all that welcome either. I had a vague hope that she might decide to travel with me instead. I stuck the oars in the locks and began to row downstream.\n\nOver the next few minutes, the steep rock walls of the canyon rose up on both sides until it felt like I was traveling through a stone tunnel. It wasn't the Grand Canyon by any means, but it was still impressive as hell. Every now and then I turned to look down the river. At times I could see a long way, but to no avail.\n\nI had just about resigned myself to spending the whole trip on my own when I came around a bend and spotted the girls, kicking and paddling out into the center of the river. They were just heading into a set of rapids, so they must have been stopped at the first jump spot.\n\nSure enough, as I came around the bend a little further, I could see a small outcropping of rock sticking out from the canyon wall, and a good-sized gravel beach just upstream. I could imagine that earlier in the day it would have been swarming with tubers, drinking and cheering the jumpers, but now, other than the girls', there wasn't a tube in sight.\n\nThe river itself was smooth but very slow in this section, so I put my back into it, rowing downstream in long, smooth strokes. I still didn't have any real plan for what I'd do when I caught up to the girls, but I'd found it so easy and natural talking with Jessica that I had to hope it would just work out.\n\nI was almost to the rapids when a sudden shout over the sound of rushing water stopped me in mid-stroke. Huh? I whipped my head around toward the outcropping and saw a bare arm waving frantically from the water. Below it was a female face with dark hair. The lack of a sleeved suit told me that it had to be Randi, Kim or Trish. Whichever it was, if I didn't pick her up, she'd be stuck right where she was until I got to the bottom and called the warden. How on earth had she been left behind without her tube?\n\nI spun the raft around with the oars and started rowing upstream with a will. Unfortunately, I was close enough to the rapids that the water beneath me was running a lot faster. I quickly realized that I wasn't making any progress. I couldn't row any harder than I already was, so unless I figured out something else quickly, I was going to be swept downstream, leaving her behind.\n\nIn a last ditch effort, I aimed the raft toward the river bank a little, hoping that the water would be slower there. The immediate effect was to start moving me downstream and I nearly gave up, but as I got closer to shore, my plan started to pay off and I began to inch my way upstream a little. My shoulders and back were nearly on fire now, but I continued to give it everything I had.\n\nMy progress was infuriatingly slow, but little by little, I was getting there. I was gasping with each stroke now and had nearly reached the end of my endurance, but with a last burst of energy, I entered the deep, still pool of water under the outcropping.\n\nI glanced over my shoulder just long enough to locate the jumper, then slowly rowed over and turned myself to speak to her. The face that looked up at me wasn't one of those I'd been expecting, but it was the very picture of abject misery.\n\n\"Jessica,\" I exclaimed, \"are you okay?\" Despite her expression, she nodded. I got to my knees and reached out, ready to pull her into the raft. She shook her head.\n\n\"Look,\" I said, more gently now, \"you need to come with me. Take my hands and I'll help you climb aboard.\"\n\n\"I can't,\" she said, obviously on the verge of crying. \"When I was climbing the rocks, I slipped and wrapped both of my hands around a really nasty cactus. I'm so full of quills that I can't touch anything.\" She held up her hands, showing me her palms.\n\nOuch! She wasn't kidding, but as always, I'd come prepared. \"I've got tweezers.\"\n\n\"With you?\"\n\n\"Sure. I never go off into the wilderness without a decently equipped first aid kit. We can go over to the beach where we can get you aboard without using your hands, then I can pull those things out for you.\"\n\n\"That's awesome, but I've got another issue.\"\n\n\"What's that?\"\n\n\"I'm... well... naked.\"\n\nWow. Having seen her bare arms, though, I really should have anticipated that. \"Well, here, you can wear my...\" I was going to pull off my T-shirt and hand it to her, but only then realized that, much to my chagrin, I was already bare-chested. \"Jessica, I screwed up and left my shirt back at the launch area. I've got nothing for you to wear. I promise to behave, though.\"\n\n\"I believe you, Sean, but I wasn't just wearing that ridiculous suit to cover up what at pathetic body I have. I've got a really bad sun allergy. Even a mild sunburn can give me a truly painful rash and hives that go on for months.\"\n\n\"No problem. I've got a big bottle of 30 SPF.\"\n\n\"But I think you're forgetting my hands.\"\n\n\"Oops, forgot.\" She obviously couldn't apply the lotion herself. There was an obvious solution to that, of course, but I didn't want to be the one to suggest it. \"Jessica, it could take better than an hour to pull all those needles, but I guess you could stay where you are in the meantime if it makes you more comfortable.\"\n\nShe shook her head. \"The water's too cold. I'm already starting to shiver.\" I could see that she'd come to the same conclusion I had. She was probably weighing the cost of months of rashes and hives against losing some major dignity. I felt bad for her.\n\n\"Jessica, I--\"\n\n\"Sean,\" she said, the tension in her voice thick enough to cut with a knife, \"I hate to even ask, but would you be willing to put sunblock on me?\" I was glad to see that she could put logic ahead of emotion.\n\n\"Yeah, I could do that.\" Twist my arm, but I figured that making light of her predicament would be cruel, so I kept a straight face. \"Look, I'll row over to the beach. You can stay in the water until I'm ready for you. We don't want you in the sun any more than necessary until you've got some protection.\"\n\n\"Okay.\"\n\nI wanted to ask her how it was that she'd been left behind, but between the damaging UV rays and the cold water, time was of the essence. Rowing quickly, I got to the beach and pulled the raft up onto the sand. I'd hoped to find a shady spot, but the sun was almost directly overhead. Then I realized that there was a narrow space between two rocky outcroppings that might be just the perfect distance apart. I removed my backpack and picked up the raft, carrying it to the crevice and wedging it upside down between the rocks above my head. It fit perfectly and provided the only shade in the canyon.\n\nI pulled the sunblock out of my backpack. \"Okay, Jessica,\" I called out. \"Ready when you are.\" Trying to be a gentleman, but really only just delaying the inevitable, I turned my back to her.\n\nI heard the swishing of water as she approached, then a gasp as she came around the corner and saw the unexpected shade. \"Oh wow. Thank you, Sean. You're saving my life here.\"\n\n\"It was the least I could do. Tell me when you're ready.\"\n\nI heard her walk up behind me into the shade. \"Okay,\" she said, her voice cracking.\n\nI turned to her. She had her back to me and her forearms were up against the rock wall. I almost gasped.\n\n\"Jessica, what's this drivel about a 'pathetic body'? You're gorgeous,\" I blurted.\n\nJessica was, like me, very long and lean, but she was no stick figure. She had really nice muscle tone, from her rippling calves and thighs, to her strong shoulders and biceps. She'd handled that heavy cooler amazingly well, and now I could see how.\n\nJessica's neck was long and slender, her back sleekly feminine, and while she had only the slightest curve to her hips, her butt cheeks were beautifully rounded. She obviously spent no time outdoors in anything but a full cover up, because her skin was uniformly light brown, from head to toe.\n\n\"Please don't make fun of me,\" she pleaded, so low that I could barely make it out.\n\n\"But I'm serious, Jessica.\"\n\nShe didn't say anything, but gave a small shake of her head like my words were beyond the pale. It wasn't something I should probably argue with her about, so I decided to just go ahead and get down to business.\n\nJessica's long ponytail was in the way so I reached out to take it in my hand. I was intending to move it around to the front, but as soon as I touched it, she flinched. Hard.\n\n\"Jessica, I'm...\"\n\nBut she was dropping to her knees in the sand where she scrunched into a fetal position and covered herself with her hands. Then she began to cry in deep, wracking sobs that nearly broke my heart. Something told me that this was about a whole lot more than getting caught without her suit.\n\nI got down on my knees and reached out to her, thinking I would put a comforting hand on her shoulder. I hesitated, not sure how she would feel about a man touching her naked body at this point, but I amazed myself by doing it anyway. She flinched again, but after a long moment she tipped her head to place her cheek on the back of my hand. We stayed like that for a couple of minutes until she finally seemed to recover.",
        "\"I really need to apologize to you,\" she sniffled finally. \"This wasn't your doing and you didn't ask for any of it. You've been a perfect gentleman to me ever since we met, and here I am, acting like it's the end of the world if you touch me, even though I asked you to. The thing is, I've never been naked with a man and I'm really uncomfortable about that since I'm so ugly.\"\n\nThere it was again. Ugly? How could she possibly think that? Sure, I'd noted that her face wasn't as cute as her friends', yet she'd been the one I was attracted to. I decided to go out on a limb a little and tell her the truth.\n\n\"Jessica, the reason I was rowing so hard through the calm section was to see if I could catch up to you guys. I guess I had some kind of forlorn hope that I could split you off from your friends, since it seemed like they weren't being very nice to you anyway. I wanted the chance to talk to you some more.\"\n\n\"You wanted to talk to me?\" Her voice was a mixture of doubt, wonder and maybe a little bit of concern.\n\n\"Yeah, but don't worry, I'm absolutely not going to take advantage of you.\" I said it with as convincing a tone of voice as I could manage.\n\n\"Oh. Are you, like, gay?\"\n\nMaybe I'd been a little too emphatic. I couldn't quite tell from her inflection whether she'd be relieved or disappointed if I said I was.\n\n\"No, I'm definitely not gay. Not that there's anything wrong with that...\" I said, stealing the Seinfeld line and managing to get a smile from her. \"And it's not that I'm uptight or attached either. Let's just say that you're completely safe in my hands and leave it at that.\"\n\n\"Okay. If you say so.\" She took a deep breath. \"I'm ready if you're still willing.\"\n\n\"I am.\"\n\nWe stood up and she got back into position. I resisted the urge to start reciting her Miranda rights to her.\n\n\"Jessica, you lied to me.\"\n\n\"Huh?\"\n\n\"You're not completely naked.\"\n\nShe actually managed a little bit of a giggle. \"My sandals don't count. I'm not really all that embarrassed about my feet being seen naked in public.\"\n\n\"You little exhibitionist, you.\"\n\nThis time she held perfectly still as I took her hair into my hands. It was thick, soft, silky and amazingly weighty. I had to fight the urge to run my fingers through it. Instead, I hung her ponytail over her shoulder, out of the way.\n\nSqueezing a little lotion into my hand, I rubbed it in my palms, then started lightly working it into her shoulders. The feel of her body was electrifying. Even as amazingly baby soft and smooth as her skin was, the lotion didn't go far, though, so I picked up the bottle to get more.\n\n\"Sean,\" she said, \"why don't you just squirt a bunch on me and get after it. I think there will be a lot less embarrassment for both of us if you just do it quickly.\"\n\n\"That's true. I need to keep in mind that what I'm doing here is a preventative medical procedure.\"\n\n\"That's the spirit.\"\n\nI grabbed the bottle and squirted a line of lotion from her wrist, across her arm, and then in a spiral pattern down her back. I returned to the nape of her neck and ran a line from there to her other wrist. I could barely believe this was happening. While I felt bad for Jessica, I was massively turned on by the fact that I was about to run my hands all over her amazing body. This day was definitely looking up.\n\nStarting at her narrow waist, I quickly and efficiently spread and massaged the lotion into her skin. I worked it in well enough to get rid of the white smears, but I made sure it was thick and even. She wasn't going to burn if I could help it.\n\nI made sure I got her sides and gloried when I felt just the outer swelling of her breasts. Then I did her incredibly smooth armpits, firm shoulders and went clear up to her hairline under her ponytail. I covered both arms from fingertips to shoulders, only avoiding the quilled areas.\n\n\"Okay, let's do the bottom half,\" I said, now on a roll. Jessica paused for a long moment, but then leaned forward a little and spread her legs, giving me enough access to be able to coat them all the way up. I'm sure she knew she was also giving me a beautifully framed look at her privates as well, but that couldn't be helped.\n\nWhile I empathized with her situation, I couldn't help but look. The first thing that jumped out at me was that Jessica was defying modern convention by not being trimmed, let alone shaved. Some of her wispy, black strands hung down a couple of inches between her slim, but muscular thighs.\n\nHer maidenhood was very modest and discreet, with only the barest of slits visible. Everything was neatly contained with only her pubic hair outwardly differentiating her from a child. Still, she was beautiful and I felt a surge of desire for her.\n\nI dropped to my knees and squirted a thick line of lotion from her ankle, up her leg, across her buttocks a couple of times, then back down the other leg. I started at the bottom, temporarily removing her sandals so I could get the tops of her feet, then covering all around each leg and up to her hips. I was really impressed with her muscle development. She was obviously some kind of athlete.\n\nI rubbed the lotion into her butt cheeks and the sides of her hips, but avoided her privates by a couple of inches. I was going to need special dispensation to go there. A moment later, she gave it.\n\n\"Sean,\" she said, obviously fighting her embarrassment, \"I don't want to get burned there, either. It's okay to do those parts too, if you don't mind.\"\n\nI didn't trust myself to say anything, so I just squirted a little more lotion into my palm and began to rub it between her butt cheeks, spreading it efficiently, but thoroughly. Then I slipped my hand between her inner thighs.\n\nI felt her quick intake of breath as my palm rubbed her leg up to the top of her thigh. I just brushed her lovely lips with the back of my hand and nearly gasped as I felt her own moisture smear thickly across me. Neither of us said anything as I turned my palm upward and quickly coated her with sunblock using the same casual motions I'd used for her armpits. Though there was no physical manifestation of it, I was more sexually aroused than I'd been in a long time.\n\nNow fully in the spirit of things, I stood up and got in close behind her. Spreading a large dollop of lotion around on my hands, I reached around and began to slather her lower abdomen, making sure I'd left no gap by again quickly palming her maidenhood.\n\nJessica surprised me when she began a low moan, but she caught herself and cut it off abruptly. That brought me back to myself, though, and I continued up her torso as if I hadn't heard her, but this was obviously getting her aroused as well.\n\n\"Sean, I think you're going to need to see what you're doing,\" she said breathlessly. \"I'm going to turn around, but I'm keeping my eyes closed.\"\n\n\"Why?\"\n\n\"So I don't have to see your look of revulsion.\"\n\n\"Oh, I doubt you'd see anything like that.\"\n\nShe turned to face me, then leaned back against the rock wall. Indeed, her eyes were closed, but it really was nice to be able to look at all of her without feeling self-conscious about it.\n\nI decided I liked Jessica's full pubic hair. The fully shaved look had always just seemed a bit too child-like for my tastes and it would have been doubly so with her boyish physique. I found her thick bush womanly and amazingly sexy.\n\nDirecting my gaze upward, I noted that her breasts were small, especially on such a long frame, but they were high and nicely rounded, like I preferred. Her nipples were standing up hard and proud.\n\nI liked the delicate features of her collarbones and throat, and the hard muscles of her stomach and abdomen. She was absolutely firm, but emphatically sleek.\n\n\"You can open your eyes, Jessica. Lord knows you're very easy on mine.\"\n\n\"Brown-noser,\" she said, but her eyes popped open and she gave me a grateful smile.\n\nShe was blushing intensely as she watched me squirt lotion across her chest. I rubbed it in from stomach to neck with the same motions I'd used on her back.\n\nI'd figured that the safest way to handle her breasts was to treat them as a non-erogenous zone, but when my palms ran across her hard nipples, we both gasped. Her breasts were firmer than any I'd ever felt and her nipples were harder than I'd previously believed possible. I just plain couldn't help myself and gave them three or four swirls more than was probably necessary for Jessica's sun protection. She closed her eyes and held her breath, obviously trying (in vain) to conceal her arousal. Since there was only so much I could do with her in the end, I moved north, slathering her thickly up to her chin.\n\nI squirted a little more lotion on my hands and began to carefully coat her face. She closed her eyes again and I quickly realized that this felt even more intimate than when I'd palmed her.\n\n\"I'm really sorry about all of this,\" she said. \"You should be having a nice relaxing ride down the river, not be nursemaiding a helpless woman.\"\n\n\"Um, if I may be so bold, I think I'd rather go down the river with a beautiful girl than be alone -- or with Alex -- any day of the week.\"\n\nI was pleased to see that while Jessica's expression said she still wasn't sure if I was being serious about her beauty, she didn't actually question me on it this time. I'd decided that I really liked the friendly, wholesome look of Jessica's face. And to a guy like me, her body was absolute perfection.\n\n\"You're the one who should be having a hard time,\" I continued, \"having to look at this pale, scrawny body and big, honkin' nose.\"\n\n\"I think your face is quite noble-looking,\" she said, \"and scrawny? How tall are you?\"\n\n\"Six foot five, but I only weigh one ninety-five.\"\n\n\"It's all muscle though. What do you do to stay in shape?\"\n\n\"I swam all through high school and college. I've done a couple of triathlons and I'm training for the Ironman now, but I'm not in your kind of shape. You're obviously an athlete, Jessica. What's your sport?\"\n\n\"I was the captain of the volleyball team at the university.\"\n\nThat rang a bell. \"Wait, you're not Jessica Swenson, are you?\" That was the name of the girl who had captained the Pelicans to the NCAA championship the previous fall.\n\n\"What, surprised?\" She looked pleased that I'd heard of her and thankfully didn't seem to mind that I seemed a little doubtful about her name.\n\n\"Well, um, forgive me for being politically incorrect, but I guess I would have expected you to look a bit more, well, Scandinavian.\"\n\n\"Oh, you're quite forgiven. My grandpa Swenson is blond and blue-eyed, but my grandma is from Kenya. My mom is Vietnamese, though, and most people take me for full Asian.\"\n\n\"That's cool, having such a varied ancestry. Me, I'm just Irish.\"\n\n\"Yeah, at the risk of being a little non-PC myself, I'm guessing that there aren't a whole lot of Kenyan carrot tops out there.\"\n\n\"I'm sure you're right, but my genes mean that I can sympathize with your aversion to the sun. I've got long swim gear myself and if I'd known this was going to be a four-hour trip, I'd have worn it. This climate is brutal for someone like me.\"\n\n\"You've got that right. Living in the desert sucks,\" she said. \"So are you a fan of women's collegiate volleyball?\"\n\n\"I'm actually more of a baseball fan,\" I admitted, \"but I followed your team's tournament run in the sports pages. I also read that you tried out for the Olympic team. That must have been cool.\"\n\nHer face lit up. \"You have no idea. It was a totally awesome experience. I'm still waiting to find out if I'm going to Rio in '16.\"\n\nSomething in her voice told me that she didn't think so, but I decided to leave that topic alone for now. At least I was finally done with the sunblock.\n\n\"Well, Jessica Swenson, it's nice to meet you. I'm Sean Sullivan.\"\n\n\"Nice to meet you too, Sean Sullivan. I'd shake your hand, but...\"\n\n\"Yeah, do you want me to pull those needles out here, or would you like to start down the river first?\"\n\n\"Sunblock or not, the sooner we're indoors the better,\" Jessica said. \"Even in the shade of the raft, we're picking up a ton of reflected UV here.\"\n\n\"I'm with you.\" I lifted the raft up and away from the rocks and set it back down at the edge of the water. I held Jessica's arm to keep her steady while she stepped in and sat in the stern. I tossed my pack in, pushed the raft out a bit, then jumped in and rowed us toward the rapids.\n\nI was about to tell her to hang on, but realized that she couldn't. \"Uh, brace yourself. This could get a little rough.\"\n\nI turned the raft so that it was going down the river stern first, rowing against the current so I could see where we were going. Jessica turned and wrapped her arms across the stern of the raft, pressing her chest against it for stability. Fortunately, these rapids were mostly just fast water and a minute later we were back to cruising.\n\nJessica turned back to me. I was amazed at how quickly we were both getting comfortable with her nudity. She looked down at her hands. \"I figured I was going to have to stick it out with these things until the end of the river at least. They hurt.\"\n\nI snagged the tweezers out of the first aid kit in my backpack. \"Well, let's get started.\" She scooted closer so that the knees of her crossed legs were touching mine and presented her right hand. Her fingers were long but sturdy, with short, practical nails. They would have been perfect for a concert pianist, I figured. I went for a needle in the middle of her palm. It came out cleanly, but Jessica winced.\n\n\"Deep, huh?\" I said in sympathy.\n\n\"Yeah, but it feels good to have it out.\"\n\nJessica was a trooper, not flinching after the first couple and keeping her hand relaxed so I could go as quickly as possible. I did my best to concentrate on the job at hand and not be distracted by the pert breasts and adorable bush in front of me. Jessica's nipples seemed to have a mind of their own and stayed erect through the whole process. At least the cactus had been of a variety with needles that were stiff and strong. There was a good chance that I could get them all without leaving any broken off in her skin.\n\nIn the meantime, I wanted to know how she'd gotten stranded, but wasn't quite sure how to ask about what was surely a painful subject. \"You know,\" I said, \"I almost didn't manage to get my raft to you. Another couple of seconds and it would have been too late.\"\n\n\"My bad. Randi said you were at least half an hour behind us, so I had my face turned away from the sun. I didn't hear you going by and it was just dumb luck that I turned and checked when I did. That was really stupid on my part.\"\n\n\"Don't blame yourself. I shaved fifteen minutes off my estimate. It's a good thing you looked when you did, though. Otherwise you'd have been there until your friends reported that you were stranded.\"\n\nJessica shook her head. \"They won't report anything. They'll drive straight back to town, laughing their asses off because I got stranded, buck ass naked, in a raft with a guy I didn't even know. I'm really happy you managed to stop for me, but in a worst-case scenario, I would have snagged a ride with the next group.\"\n\n\"Jessica, there aren't going to be any more groups.\"\n\n\"Huh?\"\n\nI explained the one o'clock rule and the deal I'd struck with the warden. She went pale when she fully comprehended the situation.\n\n\"Sean, I didn't tell anyone where I was going,\" she said. \"I'd have been stuck there overnight if you hadn't seen me.\"\n\nIt almost didn't bear thinking about. \"It's still just late spring and it gets cold up here at night,\" I said. \"Hypothermia would have been a huge issue. Without any clothes or shelter, I don't know if you could have maintained enough body heat to make it until morning.\"\n\nJessica looked really spooked now. \"So to survive, I'd have had to swim eleven miles to the bottom, through two sets of rapids, or scale the canyon wall without gear and then hike to the highway? I don't know that I could have done either of those things.\"\n\nAs it happened, I actually knew that the chances she would have had to spend the night on the river were pretty small, but the reason I knew that was something I was planning to let her in on later. At the moment, I figured it was time to ask the obvious question. \"So why did your supposed friends want to do this to you?\"\n\n\"It's a long story.\"\n\n\"Oh. Well in that case I'll go back to the TV show I was watching.\"\n\nShe smiled, a welcome thing under the circumstances. \"Okay, it started when I was living in the dorms as a freshman and I became friends with Randi. We were both on the volleyball team. When I came back for my sophomore year we rented a house with Kim and Trish. I liked living there, even though Randi turned out to be a bit of a queen bee. But at the start of our senior year, she got cut from the team because of how much weight she'd put on in the off-season. Then, when I was named captain, she became a total bitch to me. I'd finally had enough and moved out, into a little studio apartment.\n\n\"Then, just a couple of weeks ago, Randi called and apologized. She seemed to be totally sincere, so when she suggested I come along on this trip, I agreed. Then on the drive up, all three of them told me it's a local tradition that the first time you go tubing here you get naked and jump at the first spot. They all swore they'd done it.\n\n\"When we got to the jump spot we were by ourselves and knew that no one else would be along for a while, but I still didn't want to do it, so they said they'd go first. One at a time, they stripped, climbed, and jumped, so I felt duty-bound.\n\n\"It's not easy to get up there, and the route is around the back where you can't see the water, but I was almost to the top when they started yelling that they'd gotten too close to the rapids and were being swept away. Our tubes were all tied together and my towel, hat and suit were in my bag, attached to my tube, so I kind of panicked and tried to climb too fast. I slipped and that's when I tangled with the cactus. By the time I got to the top and jumped in, they were already into the rapids.\"\n\n\"Jessica, their abandoning you was no accident. I witnessed them paddling out into the current.\"\n\nShe nodded grimly. \"I figured that. I like to think the best of people, but sometimes it can get you burned. I'm just glad you were there for me.\"\n\n\"It was my pleasure.\" And how.\n\nI'd finally finished and Jessica gingerly rubbed her hands together, feeling for any needles that I might have missed. \"Wow, you should be a doctor, Sean. You got them all and my hands are hardly even sore.\"\n\n\"Ah, it was nothing.\" I stayed where I was, cross-legged with my knees against hers. I'd been alone for so long that the skin-to-skin contact felt really good.\n\nJessica made no move to scoot away either. \"It's your turn now,\" she said. \"Tell me a little about yourself.\"\n\n\"Well, I graduated from the University of Pennsylvania two years ago, then went to Jensen Financial. Being a new hire, I spent my first year working as a stockbroker. I'm not really a \"sales\" kind of guy, but I did okay. I've been doing mock trades and market analysis since junior high, though, and last year I talked them into letting me try my hand professionally. They've got a small group of people that do only that.\"\n\n\"Ah yes, the 'engine room'.\"\n\n\"That's right,\" I said with a smile, pleased that Jessica knew the term we used. \"I immediately felt right at home there and we've been consistently beating the market. I like what I'm doing and, for now, it really suits me.\"\n\n\"Just for now?\"\n\n\"Well, I've always had a dream of being a concert pianist.\"",
        "She almost looked a little startled at my non sequitur. \"You play piano?\"\n\n\"Yeah, since I was four, banging away on the old upright in the parlor. My mom taught me at first, then got me progressively better teachers as I got older. I eventually got good enough to win a national youth competition.\n\n\"When I got to college, I did a double major in Music and Finance. Then my instructor wanted me to do the Master's program at CU Boulder with his old professor. He kept trying to tell me I had the talent to go to the top.\"\n\n\"So why aren't you pursuing it now?\"\n\nThat was kind of a touchy subject for me. I'd always planned on throwing myself headlong into the world of music, (with Finance serving strictly as a last ditch fallback) but personal obligations had changed all of those plans. What it had come down to was that I needed to get a regular paycheck -- fast.\n\nThat whole business was a bit personal, so I just shrugged. \"Making it in that racket is a long shot. I knew I could be successful in the finance field. Piano is still my first love, though. I practice every day.\" Including those three hours right after I'd woken that morning.\n\nJessica's face said she wanted to delve a little deeper into that, but I could see her restrain herself. Part of me was relieved.\n\nI knew I'd been doing a lot of talking and really wanted to hear more of her story. \"So what about you, Jessica? If this was your senior year, you probably graduated last Saturday?\"\n\n\"Yup. My folks flew home on Monday.\"\n\n\"What was your major?\"\n\n\"Accounting.\"\n\n\"Hey, that's a hot field. Do you have any offers?\"\n\n\"Yeah, but I was just interviewing for practice. I'm aiming to be a CPA and the family tradition is to get an MBA on the way. I'm set to start at Dartmouth in a few weeks if I don't go to Colorado Springs to train for the Olympics.\n\nI was glad for her, but I already wanted to have the opportunity to get to know her a lot better. It sucked that she wasn't going to be in town for long.\n\nI noticed that Jessica was looking downstream over my shoulder. \"Uh oh, we're catching up to some people,\" she warned.\n\nI looked and sure enough, there was a clump of tubes along the shore. We were a good quarter mile away, but I could see a couple of people on a rock outcropping about twenty feet up the canyon wall. As I watched, a guy jumped into the river.\n\nI looked over at Jessica. Her arm was across her breasts and that surprised me for a moment. During our conversation, I'd pretty much forgotten that she wasn't wearing anything.\n\n\"Sean, I don't want anyone but you to see me naked.\"\n\nThat was an interesting way to put it, but I'd already been thinking about this kind of situation. \"I have an idea,\" I said. I used the oars to put Jessica's back to the tubers, then started to untie the drawstring of my suit.\n\nShe put her hand on mine to stop me. \"What, do you think it'll make me feel better if you're naked too?\"\n\n\"Nope, I'm going to use my suit to make you some clothes.\"\n\n\"But then you'll be naked.\"\n\n\"We'll both be naked below the waist, but if we're sitting up and stay near the far bank, they won't know that. The only things we need to cover are your boobs, and seriously, how much fabric could that take?\"\n\nShe slapped my shoulder with her free hand, but grinned. \"Okay, show me what you have in mind.\"\n\n\"Oh, you can't fool me, Jessica. You just want to see my winky.\"\n\n\"Well, it would only be fair.\"\n\nI sighed. \"If I must.\" I began to slide my shorts down, for once glad that I wasn't going to have to deal with an embarrassing erection. I was right at the point of uncovering the goods when I noticed that Jessica was completely focused on my crotch. I stopped for a moment and she looked up to see me grinning at her. She blushed crimson and turned herself the other direction.\n\nI chuckled and pulled them off, then snagged my multitool out of my backpack. My shipmate still had her back to me. \"Jessica, it's okay.\"\n\n\"I was being rude.\"\n\n\"Nah, I actually would have been a bit miffed if you hadn't shown any interest.\"\n\n\"Still.\"\n\n\"Oh, come on. As much as I enjoy looking at the sleek lines of your back, I like ogling your bare breasts even more.\"\n\n\"You're awfully incorrigible for being such a gentleman.\" She turned back toward me, mostly recovered. She was obviously working hard to keep her eyes focused above my waist, though.\n\nI quickly decided that I didn't like us feeling uncomfortable around each other. \"I'm going to return the favor you did me and close my eyes, Jessica. Look all you like.\" I even put the suit over my face as I counted down from twenty aloud. I hoped she wouldn't realize that I'd done that in case I blushed. Her having gone first made it a little easier to expose myself, but this wasn't something I did every day.\n\nI found that she was still checking me out when I finished my count. \"Uh, do you like what you see, Jessica?\"\n\n\"You've got a nice package, Sean. Unlike my boobs, I'd say it's more than proportional to your height.\" She finally looked up at me. \"Sorry. I just decided that we should be past the point of any shame around each other.\"\n\n\"My thoughts exactly. Now let's get you dressed.\" I began to slice the fabric of my suit.\n\n\"What are you doing?\" Jessica asked, evidently concerned that I was destroying the only piece of clothing we had between us.\n\n\"You'll see in a second. I'm not exactly Oscar de la Renta, but I'm thinking I can come up with something serviceable.\"\n\nA minute later I was ready. I'd slit the inseam from leg to leg and what I had left was more of a skirt than shorts. \"Here, let's try this,\" I said, handing it to her. \"I'm thinking you'll want to pull it up from the bottom, drawstring to the back.\"\n\n\"Okay,\" she said doubtfully. She oriented it and slid her legs through it one at a time, then wiggled it upward. Jessica's hips had just enough flare that they were really tight there.\n\n\"Damn, my ass must be getting fat,\" she murmured as she worked them past the obstruction.\n\n\"Are you kidding? You've got really firm butt cheeks. Believe me, I've felt them.\"\n\n\"Pervert.\"\n\nShe slid the suit up over her breasts (alas) where it was now a bit loose.\n\n\"Here, turn around for a sec.\" She did and I tied off the drawstring behind her. The suit hung to her waist, not a good look as far as I was concerned. I went about tucking the fabric up underneath, but realized that it wasn't going to stay, so I pulled it right up under the drawstring and then let it drape down over the top, effectively folding the length of the suit into thirds. I would have expected her to take over the process when she realized what I was doing, but she seemed content to let me finish the job. Naturally, the tucking process involved my hands brushing across her breasts under the fabric. I couldn't help but notice that her nipples had gone rock hard again.\n\nAt last we were done. Jessica was now wearing a poofy black and red tube top and I was wearing my birthday suit. It was none too soon, as we were getting close to our fellow river runners. There were three jumpers up on the outcropping now, one male and two female. One of the girls jumped and executed a perfect cannonball.\n\n\"Sean,\" the guy on the ledge yelled, \"I see you've made a new friend.\"\n\n\"Hey, Ethan,\" I yelled back. \"You've met Jessica.\" He probably hadn't recognized her without her long suit.\n\n\"Hi, Jessica,\" they all yelled.\n\n\"Hi, guys,\" she returned.\n\n\"You folks having a good time?\" I yelled.\n\nThere was a chorus of whoops in response. We were drifting right out in front of them now, but closer to the far shore, so even the two up on the outcropping couldn't see that we were letting it all hang out.\n\n\"Maybe we'll see you guys at the last jump spot,\" Ethan said, stepping up to the edge of the cliff.\n\n\"You just might,\" I said, feeling a little guilty because I actually had no intention of making any stops the rest of the way. Sunblock or not, we needed to get Jessica indoors.\n\nEthan braced himself to jump, but just as he was committed, the girl up there with him slapped him on the butt. Hard. The sound echoed off the canyon walls.\n\nHe yelped on the way down, but the perp was bent over laughing, as were three of the four others.\n\n\"Lisa!\" the first jumper yelled as she waded up onto shore, \"you keep your hands off my husband's ass.\"\n\nLisa grinned down at her evilly. \"Sorry, Fiona, but he had it coming for pretending to pantz me in front of Jessica's friends when they went by.\"\n\n\"How long ago was that?\" Jessica asked.\n\n\"Maybe half an hour,\" Lisa said. \"I asked 'em where the girl in the long swimsuit was and they said you two paired off.\"\n\nWe were far enough away again that she was having to yell.\n\n\"See you guys,\" I called out.\n\nThey yelled their goodbyes and moments later we were around a bend in the river and all alone again. \"Thanks Sean. That worked brilliantly. Do you want your suit back?\"\n\nI shook my head. \"You're welcome to keep wearing it, if you like. I don't need to wear it again unless you really want me to.\"\n\n\"Oh, that's okay. I figure we might as well keep the playing field even.\" Jessica spun the suit around and untied it, then neatly slid it up over her shoulders and handed it to me. I laid the suit across the bow. I thought she looked a lot better without it.\n\n\"What are we going to do when we get to the landing area?\" she asked.\n\n\"If no one's there, we just make a beeline for my car. If there are still people at the landing area, I'll beach us a little ways up the river, don the suit, and snag the beach towel out of my car for you.\"\n\n\"Sounds like a plan.\"\n\n\"And of course I hope you'll ride back to town with me.\"\n\n\"Absolutely, but in the meantime, you'd probably better get some sunscreen on your newly exposed areas.\"\n\n\"Oops, I forgot about that.\" I pulled the bottle out of my backpack, but Jessica snagged it from my hands. I looked at her questioningly.\n\n\"Time for me to return the favor,\" she said with a sly grin.\n\n\"Uh, okay. How do you want to do this?\"\n\nShe motioned for me to spin around. \"On your knees, Mister.\"\n\nSo I turned and knelt with my elbows on the bow, pointing my bare backside at her. I felt the breeze from downriver as my package swung beneath me, completely exposed. I was experiencing a strange combination of thrill and embarrassment, mixed in with the dread of Jessica finding out the brutal truth about me.\n\nI heard the top pop off of the bottle and moments later, I felt Jessica's soft, smooth hands begin to caress my hips. I hadn't been touched by a woman in a long time and it felt really, really good.\n\n\"That okay?\" she asked.\n\n\"Yeah, you have all day to stop doing that.\"\n\nHer hands went away for a moment, then I felt a warm line of lotion being squirted from the back of one thigh, up across my butt, then down the other. Her hands were quick and firm. She worked the lotion in, all the way around my legs, from the knees up to my hip bone, only just avoiding my most erogenous areas.\n\n\"Up straight,\" she said, \"so I can get your back.\"\n\n\"I already got that part.\"\n\n\"Did you miss the fine print on the bottle that says you should reapply every two hours?\"\n\n\"Well, yeah, they always say that, but nobody actually does it.\"\n\n\"I do, and with your light skin, you should too.\"\n\n\"Yes, dear.\"\n\nShe giggled. \"Sorry, but us accountants are sticklers when it comes to documentation.\" She was already most of the way up my back and was soon rubbing my shoulders, her hands moving quickly and efficiently.\n\n\"You're really good at this,\" I said.\n\n\"I took an elective in therapeutic touch and I did a lot of massages for the other girls on the volleyball team.\"\n\n\"That would explain it.\"\n\n\"None of them had shoulders like yours, though.\" She moved on to my arms. They didn't take but a minute. \"Okay, turn around.\"\n\nStaying on my knees, I carefully turned to her. She had me sit back on my heels, then gently and thoroughly coated my face. Like when I'd done that for her, it was an amazingly intimate act.\n\nThen she hosed down my chest and stomach with the bottle, taking her time rubbing it in. It felt amazing and I gloried in the sensation of her hands on me. I didn't fail to notice that she spent more time than strictly necessary on my uncharacteristically hard nipples. My body was responding to her touch in every way that it was still capable of.\n\nHer hands paused for a moment as they worked the lotion into my abs. \"Wow, you've got some nice development here. Come on, give me a full flex.\"\n\nSo I firmed up my stomach muscles and let her run her hands across the ridges. I wasn't a bodybuilder and my muscles weren't huge, but I had very little fat and my six-pack really showed.\n\n\"Very nice,\" she said, \"now lie back.\"\n\nSo I laid down in the bow with my legs spread out to either side of her. The raft was long enough that my head and feet just barely touched the ends. She took one leg, and then the other, applying the sunblock. Now there was only one place left.\n\nI was willing to take care of that part myself, but her expression said she'd been looking forward to it. Her face asked for permission; mine granted it.\n\nHer smooth, moist hands on my abdomen and inner thighs were exquisite, but when she hesitantly took my cock in her hands, she finally let her puzzlement show. It really was time to confess, but I couldn't help teasing her just a little first. \"Come on girl, I need to see some results. I paid for this.\"\n\nHer face lit up with mock outrage. \"How dare you!\" she said, letting go of me like a hot potato and squeezing up against the stern.\n\n\"Well, since I...\" I came to a stop, realizing that there was no 'mock' to her outrage. I'd really managed to upset her. \"Whoa, Jessica, I'm sorry if I-\"\n\n\"I'm nobody's whore,\" she said, nearly choking on the words. Then she broke into deep, sobbing tears.\n\nHuman compassion made me instinctively want to take her in my arms and comfort her, but I figured being grabbed by the perpetrator probably wasn't what she'd want at the moment. I stayed where I was.\n\n\"Jessica, I was joking. I guess it was a pretty rude joke and I'm sorry, but I think you know I wouldn't intentionally hurt you.\"\n\nShe turned her head to look at me with wounded eyes, but I could see in them that she'd heard the honesty in my voice. I moved forward until I was kneeling right behind her and wrapped her in my arms. She stiffened at first, but then relaxed and leaned back against me. I took her with me as I lay back into the raft, then she turned and lay down across me, her head on my shoulder. I soothingly caressed her back. Our naked bodies were pressed together, gloriously, from head to toe. I marveled that it felt so natural.\n\n\"I guess I came on kind of strong there, huh?\" she murmured.\n\n\"You had every right to. I implied a nasty thing.\"\n\nI felt her shake her head slightly. \"No, you weren't out of bounds. Under normal circumstances it would have been funny. It's just that something happened to me that makes me a bit sensitive about that kind of thing.\"\n\n\"I'm willing to listen if you'd like to tell me about it.\"\n\nShe sighed. \"Okay, I guess it kind of started in middle school. The other girls started getting boobs and periods while all I did was get freakishly tall. By high school, I was half a head higher than anyone else in my freshman class, but my chest was just as flat as when I was ten. I started to get just the first hint of breast development about the time I got my driver's license, but I didn't get my first period until I was seventeen. I didn't go out on a date even once in high school.\"\n\n\"I'd have asked you.\"\n\n\"You say that, but even as boyish as I look now, I'm positively lush compared to back then. Still, when I arrived at the dorms and I'd actually managed to grow a set of A-cups over the summer, I hoped my love life would change. Unfortunately, the pool of guys that want to date a painfully shy, six foot three accounting geek with a very plain face was actually pretty limited. I still didn't date.\"\n\nI had no idea what I could say to something like that, so I just held her and let her continue.\n\n\"But then, last fall, at the beginning of my senior year, I became friends with this guy named Kevin. He sat next to me in one of my accounting classes. He was my height and we actually hit it off. He was cute and I knew from overhearing him talk to his friends that he hooked up a lot, but he also seemed to like me and I figured he was my only real shot at a little romance. I guess I was worried that I was the only actual virgin left on campus, and I didn't want that distinction anymore.\n\n\"He never asked me out, so finally I worked up the courage to ask him what he was doing after class. It was just a week after Randi had gotten cut from the team and I was still living in the house with her, Kim and Trish. He said he was free, so I asked him if he'd like to come over for a while. He looked a little uncertain about it, but then agreed.\n\n\"Because of how many hookups he'd had, I knew better than to expect any sort of romantic relationship. Still, I was determined to have sex for the first time and I figured he'd know how to deflower me.\n\n\"I was really nervous by the time we got to my place, but I had him come to my room with me. We sat on my bed, had a couple of beers and watched TV while we talked for like an hour. He didn't make any moves, so I figured he didn't think of me that way, but I decided to be a little bold and asked him if he wanted to fool around a little.\n\n\"To my amazement, that seemed to catch his fancy and he said 'how do you want it?' That seemed a bit abrupt to me and I had no idea, so I told him he could do whatever he wanted. Just like that, he had me bend over my desk.\n\n\"I guess I was thinking there might be some kissing and touching first, but he just reached around and undid my pants then slid them down to my knees. I'd worn some lacy panties, but he just pulled them to the side and tried to push into me. I wasn't ready by any means and I could sense his frustration. I looked behind me and saw that he was about as big as anything I'd seen in the porno clips that Randi sometimes watched on the living room TV, but he wasn't very hard. He was trying, but it just bent instead of going in. I was dry, and I'm sure I must have been clenched pretty tight, which wasn't helping at all.\n\n\"Then he saw me looking and got all embarrassed. He whipped his pants back up and turned to leave. I was sure we could make it work if we took our time at it, and I was about to beg him to stay, but then he said, 'Sorry, you just don't do anything for me.' I was about to cry when he grabbed his backpack and walked out. The next day he sat on the other side of the classroom and wouldn't even meet my eyes.\"\n\n\"What a jerk.\"\n\n\"Yeah, but that's not the part that set me off when I got mad at you just now.\"\n\n\"There's more?\"\n\n\"Yeah, it was a couple of days later. I was in the library and saw Kevin sitting around a table with a few of his frat brothers. They were supposedly studying, but I heard them talking about the girls they'd been with. I was really curious, so I got on the other side of a stack to listen in.\n\n\"They were bragging about their conquests like it was some kind of game. From the sound of it, all of them had counts in the double digits at the very least. Then they started to talk about the kind of girls they figured they'd eventually settle down with. The consensus was that none of them would marry one who had been with more than two guys.\"\n\n\"What a bunch of hypocrites.\"\n\n\"Yeah, especially since my girlfriends who slept with guys like that said they always claimed they were ultimately looking for a girl who had lots of experience.\"",
        "\"Did your girlfriends actually believe that?\"\n\n\"Well, yeah. As far as I could tell.\"\n\n\"Well, speaking as a guy who hangs around with other guys, there may be a few like that out there, but they're in the vast minority. It's completely unfair, granted, but most guys want to date sluts and marry virgins.\"\n\n\"So is that what you want?\"\n\nThat question would have been better phrased in the past tense. \"I suppose it's in my nature too, but to me being human means having the willpower to choose when to give in to my baser urges.\"\n\n\"Well, these guys had no such willpower that I could see, because they started taking turns bragging about the biggest sluts they'd ever been with. They hadn't mentioned names before, but they did now, and I knew most of the girls. I figured Kevin would name one of his many hookups, but when his turn came he named me.\"\n\n\"What? You guys never even did it.\"\n\n\"Yeah, but he told them we had. He said I was an 'ugly cunt' for sure, but that I would let a guy do whatever he wanted. He said I was one of the only girls that let him do it without a condom. Then he told them I loved to take it up the butt, then lick it off.\"\n\nAt that point, she got so choked up that she had to stop.\n\n\"Oh Jessica, I'm so sorry.\" I held her for a couple of minutes in silence, sensing that she wanted to say more about it, but needed a chance to gather herself. Finally, she was ready and went on.\n\n\"I'd heard enough at that point and I came around the end of the stack to confront him. I said it wasn't nice to lie about people and that as a matter of fact, I was still a virgin. He looked stricken for a moment, but he had too much pride to admit to lying about me to his friends. Instead he laughed and said, 'Yeah right. A virgin? Maybe in your left ear.'\n\n\"The other guys laughed at that too. If any of them believed me, they sure weren't willing to say so, but then it got a lot worse. I hadn't realized it because his back was to me, but one of the guys at the table was Randi's new boyfriend, Brandon. He looked at me, then turned back to Kevin and said, \"Brother, you don't know how right you are. Her own roommate told me that Jessica worked in Vegas for a year as a hooker to get the money to come to school here.\n\n\"They all laughed, like Brandon was kidding, but then he said 'I'm not shittin' you, guys. Randi showed me a copy of the arrest record.'\n\n\"I was totally speechless at that point, but another one of the guys looked me up and down like a piece of meat and said, 'Jesus, hooking must have been tough work for a girl who looks like her. She'd be saving for college five bucks at a time!'\"\n\nJessica clutched tighter to me.\n\n\"They all about fell out of their chairs laughing and people from all over the library were staring at me. I realized that the guys had been talking so loud that dozens of people must have heard what they'd said. I couldn't take it anymore and ran out of the library.\"\n\n\"What a bunch of jerks,\" I said. \"Kevin especially.\"\n\n\"Yeah, I wasn't looking forward to having to sit in the same classroom with him anymore, but after that day, he just disappeared. I never saw him again.\"\n\n\"Hopefully because he was so ashamed of what he'd done to you. Randi seems like a real piece of work too.\"\n\n\"Yeah, I confronted her about what Brandon had said. She got upset because he wasn't supposed to blab about who showed the fake arrest record to him, but she flat out told me that she was going to post copies of it everywhere. She dared me to do anything about it.\"\n\n\"She's brazen,\" I said. \"I'll give her that.\"\n\n\"Yeah, I moved out that weekend, but within days, the fake arrest record with my Photoshopped mug shots started to show up on social media all over the place. Randi must have spent some time on it because it looked quite official.\n\n\"After that, people around campus would give me strange looks, like I was indeed a prostitute. Guys I'd never met would walk up to me and seriously offer me money for sex. The frat guys nicknamed me 'Five' because of the 'five bucks' comment and it stuck. I pretty much withdrew into volleyball and my studies at that point and swore off the idea of ever dating again.\"\n\n\"That must have been hellish. I can completely understand why you got upset at me.\"\n\n\"I appreciate your understanding, Sean, but again, it wasn't your fault.\" She took a deep breath, then continued.\n\n\"But enough of that. Moving on to the here and now, I couldn't help noticing something about what happened when I, um, handled you.\"\n\n\"You mean about what didn't happen?\"\n\n\"Yeah, I'm not exactly experienced, but since you say you're not gay, I am kind of wondering. You didn't get, um, hard at all. Is it me?\"\n\n\"Jessica, it's most emphatically not you, it's me. I'm really sorry if it's seemed like I was leading you on, but the fact of the matter is that I'm profoundly impotent.\"\n\nShe slid her lotion-slicked body off of me and I expected her to go huddle in the stern, as far from me as she could get. There's just something that most people find instinctively icky about the idea of a man who can't get it up. Instead, and to my complete shock, she reached down and took my limp member in her hand.\n\nThat was the last thing I'd have expected, but I immediately understood her gesture. She was emphatically showing her acceptance of me as a person, despite my disability. It was probably the kindest thing a woman had ever done for me.\n\n\"Is it something you can discuss?\" she asked in a low, calm voice.\n\nI nodded. Unaccountably, I found myself willing to tell her about what had happened. \"I haven't always been this way,\" I began, \"but sex and I have had a strange relationship.\"\n\nHer eyebrows went up. \"How so?\"\n\n\"Well, I was a complete nerd in high school, preferring to read books about sex than to risk asking a girl for a date.\"\n\n\"I doubt you were alone there. What kind of books?\"\n\n\"Huh?\"\n\n\"Well, even knowing you for as short a time as I have, I'd guess they weren't just porn.\"\n\n\"Well, some of them were of course, but you're right. I became something of an expert on the Masters and Johnson book, then the Kinsey Studies. Then I really got in to the Tantric stuff and I taught myself how to control and channel my sexual energy.\"\n\n\"Which means?\"\n\n\"Well, I got to where I was in tune with my state of arousal and had really good control of it. Basically, I could maintain an erection almost indefinitely and consciously decide when to allow myself to climax. I hoped I'd be able to really satisfy a woman someday.\"\n\n\"Those sound like good skills to have.\"\n\nI shrugged. \"I was painfully shy, so I didn't get a chance to use them until early in my senior year of college. That's when I met Amanda. I was at a Saturday night party that a roommate of mine dragged me to. I thought she was really cute, but it took all the courage I could muster to ask her to dance. I'd never actually danced with a girl before, but fortunately, I'd taught myself from some instructional videos and didn't embarrass myself too badly.\"\n\n\"Let me make sure I've got this right,\" Jessica said. \"You learned how to dance and make love all on your own?\"\n\n\"Pretty nerdy, huh?\"\n\n\"Yeah, but it's what I did too.\"\n\n\"You studied Tantra?\"\n\n\"No,\" she said with a smile, \"but I did learn to dance from videos.\"\n\n\"What a nerd!\"\n\nJessica giggled. I loved that sound.\n\n\"Anyway,\" I continued, \"Amanda and I danced together for most of the night. That was like the most amazing thing that had ever happened to me. Then she totally blew me away when she said she wanted to be alone with me. I was aware that this could all be some kind of setup, but by then I didn't particularly care. Having a woman show that kind of interest in me was a completely life-changing deal.\n\n\"There was nowhere private at the party, so we went out to my car and drove to a nearby park. I'd hoped my first time would be more romantic, but she was in a hurry and I wasn't about to turn her down. We did it right there on the passenger seat.\n\n\"I managed to make a good enough impression that over the next month she visited my apartment every few days. Then it became every night and we moved in together.\n\n\"It seemed like we had a lot in common as far as our life goals, wanting kids, and a lot of other stuff, but we were different in some other ways. She was from a fairly rich family and liked to do crazy stuff like skydiving and rock climbing, and she even had her private pilot's license. She drove a sports car like she was at Le Mans, but I had read the consumer reviews and bought a used Camry because it was safe and reliable. My thrills tended to be a bit more cerebral, but we still got along well. We got married a week after we graduated, then moved here for my job.\"\n\n\"That actually sounds pretty nice.\"\n\n\"It wasn't perfect, but I figured we were doing pretty well. Then we drove to Pennsylvania to be with her folks in Philly for our first Christmas as a married couple. Amanda was six months pregnant.\"\n\n\"Wow, you guys didn't waste any time.\"\n\n\"We'd actually planned to wait a few years, but stuff happens. Still, we were pretty stoked about becoming parents. Unfortunately, we were stuck on the folding couch in the living room of her folk's house because her older brother and sister were home too with their spouses and kids. Out of desperation, we went out 'shopping' one night with the intention of getting a motel room for a quickie. Then I had the bright idea that we should revisit the place where we did it the first time.\n\n\"Amanda said she was scared because the park was in a pretty sketchy neighborhood, but I managed to talk her into it. Then, when we were almost done, some freak yanked the passenger door open, pointed a gun at us, and told us not to move.\n\n\"The guy seemed to be all business at first, demanding our wallets and phones. I was able to hand him our stuff, but then it got a little weird. He said he wanted to watch us finish up.\"\n\n\"Oh shit,\" Jessica murmured tensely, as if she were there and seeing it for herself.\n\n\"Well, he was the one with the gun and he looked dead serious about it, so Amanda started to move on me again. I was still hard enough that we were actually doing it, but I figured I'd fake coming and we'd get rid of him. But then he dropped his pants and demanded that Amanda jerk him off at the same time. Worse, I'd insisted that Amanda get topless for me so I could play with her breasts. He was squeezing them while he held the gun on her.\"\n\nI came to a stop for a long moment, then went on. \"Jessica, I never even told the police this next part. It was too horrible and what I did was so wrong.\" Somehow, having Jessica there with me, the two of us naked and totally exposed to each other, made me feel like it was something I might actually talk about. Jessica's willingness to tell the brutal truth about what had happened to her made me want to be just as honest.\n\n\"Sean, I'll keep it completely confidential if it's something you're willing to talk about.\"\n\nI nodded, then went on. \"Amanda was obviously scared, I'm sure as much for me and our baby as herself. I was scared to death for them too, but in some ugly, perverted way, I also found the situation highly erotic and I actually felt myself approaching climax. Amanda knew my signals well enough and faked an orgasm as I came.\n\n\"That put the thug over the top as well and he ejaculated all over her skirt. As soon as I came, I was ashamed of myself, but I figured the punk had gotten his loot and his thrills, so that would be the end of it. Instead, he took one step back and shot each of us in the head with his 9mm.\"\n\n\"Oh my God!\" Jessica exclaimed.\n\n\"Amanda was killed instantly, but mine was a glancing shot that just creased my skull and knocked me unconscious. He apparently emptied his gun into us at that point. He hit her six more times, but I was somewhat protected by the fact that she was lying on top of me. It was dark and he was wearing a mask, so he was never caught.\n\n\"One of the bullets lodged in my lower spine. After what had happened, I didn't particularly care. I thought being paralyzed wouldn't be nearly enough punishment for what I'd done. Still, the surgeons went in the next afternoon and removed the bullet. That relieved the pressure on my spinal cord, and while I was left impotent, it returned the full use of my legs. The bullet, though, it...\"\n\nI'd felt it building, but now the guilt and pain washed over me in an unstoppable wave and for long moments, I wasn't able to speak. Jessica instinctively scooted up and held my head to her chest. I was grateful that she didn't try and tell me that it was okay, or that it hadn't been my fault. Still, I had to get that one, last horrible thing out there in the open.\n\n\"That bullet,\" I eventually managed to say, \"had been slowed down just enough not to paralyze me for good.\" I willed myself to keep going. \"It was because it went through Amanda... and our baby girl. I'm the one that should have died, not them. I... I shot my wad because I thought it was so hot having some pervert have fun with Amanda while I fucked her. Jesus, how is it fair that they died and I lived?\"\n\nJessica held me until I got myself back under control. \"I'm sorry I just laid that on you,\" I murmured at last. \"With everything that's happened to you today, it was the last thing you needed.\"\n\n\"No Sean, I don't think you could have done me any greater honor than to have trusted me enough to let me be the one to hear it.\" We stayed still like that for another minute or two.\n\n\"When I woke in the hospital afterward,\" I finally continued, \"I didn't remember anything of what happened after we left the house. Amanda's father came to see me the next day in my hospital room. He's a psychiatrist and he helped step me through it little by little until I was finally able to put the story together and regain those memories.\"\n\n\"Her father, huh?\"\n\n\"Yeah, he was a big help.\"\n\n\"I'm sure he loved his daughter very much.\"\n\n\"Of course he did.\" I was starting to wonder where Jessica was going with this.\n\n\"Look, Sean, was Amanda's dad concerned about her risky behavior?\"\n\n\"Well, I suppose any father would worry for the safety of his child.\"\n\n\"But it sounds to me like Amanda really liked to live life on the edge. I'm guessing she had thrill issues.\"\n\nNow I saw where Jessica was going -- and I didn't like it.\n\n\"Then there's you, Sean. It didn't take me long to figure out that you're a very sober, thoughtful, polite and cautious kind of guy. You've always been that way, not just since the shooting, right?\"\n\n\"I suppose, but if you're saying that I--\"\n\n\"I'm saying that a guy who chose a Camry to drive in college, was a virgin until his senior year, and carries a first aid kit on a tubing trip is not a major risk taker. Even your choice in sports -- swimming -- tells me a lot about your risk-averse attitude toward life.\"\n\nShe could see the hurt look on my face, but it was true.\n\n\"Sean, all that may sound like a put down, but it's not. I'm the same way and I think being sober and cautious has a whole lot to recommend it. It's not that you're scared of risky activities, it's that you don't feel the need to do them.\"\n\n\"That's all very nice, Jessica, and I suppose it's true as far as it goes, but you're obviously going somewhere with this.\"\n\nShe nodded. \"Yeah, I think the story you just told me is total bullshit.\"\n\n\"What?\"\n\n\"Sean, I don't doubt that you actually believe things went down like that, but there's no way in hell you would have taken your pregnant wife into such a dangerous situation. You're just not that kind of man.\"\n\n\"What, you're suddenly an expert on what I would do? I was there. What makes you think you know better than I do what really happened?\"\n\nI was downright angry now, though not so angry as to pull out of her embrace.\n\n\"Look, Sean, do you think I would say something so hurtful to you just for the fun of it?\"\n\nI was silent for a good five or ten count. \"No,\" I sighed at last, \"you wouldn't intentionally hurt me. No more than I would intentionally hurt you.\"\n\n\"Then please trust me on this. I'm trying to help and I think I know how.\"\n\nI really didn't want to recall the horror of that night any more than I just had, but still, there was a small part of me that was interested in where this was leading. \"Okay, Jessica, just what is it that you have in mind?\"\n\n\"I want you to tell me the whole story. I need every detail you can remember, clear from the beginning. Close your eyes and try to put yourself back into that evening.\"\n\nI was torn, but did as she asked.\n\nIt was the Saturday before Christmas and we had just finished a casual dinner with Amanda's family. It was still relatively early and she said she wanted to do some Christmas shopping. I thought we'd bought everything already, but Amanda loved to shop. I didn't mind the idea that much actually, because I had a little mischief in mind.\n\nIt had been five days since we'd had the opportunity to make love and frankly, I was as horny as hell. I told her so when we got in my car. She smiled patiently, as always, ready to accommodate my desires.\n\n\"How about a motel room for an hour or so?\" she suggested.\n\n\"I was thinking of something a little more exciting,\" I said. \"What do you say we go back to that same spot at the park and recreate our first time?\"\n\n\"But Sean, we were drunk and what we did that night was crazy. The neighborhood's not good and it certainly hasn't gotten any better in the last year.\"\n\n\"Oh come on, it's not that bad. We'll be quick and we can keep the doors locked.\"\n\n\"Sean, you know how much I like making love with you, but now that the baby is on her way, I don't think it's a wise idea. Let's just get a room.\"\n\n\"Oh come on, hon,\" I said. \"I need a little more excitement. The last five days have been tough on me. Earlier I had to slip into the bathroom with my dildo and-\"\n\n\"Your what?\"\n\nI stopped and opened my eyes, now fully conscious of being back on the raft with Jessica.\n\n\"My...\" I realized what had just come out of my mouth.\n\n\"Sean, I'm going to go way out on a limb here and guess that you don't masturbate with a dildo.\"\n\nI hardly heard her through the hurricane of utter turmoil in my mind. I closed my eyes tight again as I tried to concentrate and dig down to the truth of what had really happened that night. The pieces of it were there, securely carved in the bedrock of my mind, but they'd been covered in the debris. Now at last, I could see a corner of that truth, but I wasn't sure I could stand the pain of scraping all of the detritus away.\n\nI barely felt it as Jessica's fingers ran soothingly through my hair. I vaguely felt my lower lip brushing against her soft nipple, but my mind was elsewhere.\n\n\"Please, Sean. Tell me what you're seeing.\"\n\nJessica's soothing voice was a cooling balm on my soul and I felt myself finally able to see what had happened with clarity. The memories had been there for a long time, but I'd been much more comfortable with the idea that it had been my fault than the reality that Amanda had actually done what she'd done.\n\nI dug deep and confronted the truth for the first time.\n\n\"You brought your dildo?\" I said to Amanda.\n\n\"Sure, I knew we wouldn't be able to do it as much as we like if we were stuck on the hide-a-bed.\"\n\n\"Look, we can even spend the night in the motel if you want. Let's call your folks and tell them we'll be back in the morning.\"",
        "\"Sean, I've been fantasizing about going back to that spot since the first time we did it. This is probably our last chance.\"\n\nWhether it was giving up my virginity in the front seat of a car, confessing to my scandalized parents who my college roommate actually was, or giving up my dream of becoming a concert pianist, Amanda had always been able to bend me to her will. \"Okay, Amanda,\" I said, realizing as always that resistance was futile, \"but we're going to get in and out of there quickly. The doors will be locked and the moment we're done, we're gone.\"\n\n\"You worry too much, Sean.\" She said that a lot.\n\nThe park appeared to be deserted when we pulled into our spot. \"Let's do it just like our first time,\" she said.\n\nSo I scooted over to the passenger seat and leaned it back a ways. Then I slid my pants down to my knees. The cautious part of my mind had a real problem with what we were doing, but the horny part was ready as always. That had been part of my draw to a girl who liked to have as much sex as Amanda did. I could be ready to go at a moment's notice, then continue for as long as she needed, which could be a long time.\n\nAmanda was ready too, and settled down over me, making the connection easily without having to use her hands. She'd evidently forgone any panties under her skirt and I was soon buried inside her. At only five foot one, she had plenty of headroom in the car for this. I reached down to hold her hips and began to thrust up into her, being careful as always not to go too deep and hurt her.\n\nI could sense Amanda's disappointment that I was trying to get this over as quickly as possible, but when I reached under her skirt and diddled her clit with the pad of my thumb, she was somewhat mollified. I moved both of us right along and it wasn't but just a couple of minutes until she cried out and I pushed myself over the hump as well. I spewed into her as she came. As always, it was good. Sex was the best thing we did.\n\nAmanda laid her head on my chest as we came down from our high. Her hips moved on me just a little as I began to soften. It was then that we heard the tap on the window.\n\nHe was medium all over. Medium height, medium weight, medium skin tone (from what I could see through the opening in his black balaclava), and a medium caliber handgun (though it looked a lot bigger at the time). He motioned for us to open the door.\n\nThe only thing on a car that can actually stop a bullet is the engine block, so I unlocked the door. The perp pulled it open and held the gun to Amanda's head.\n\n\"Wallets and phones,\" he said simply.\n\n\"Not a problem,\" I croaked, scared to death for my wife. I could barely reach my pants, but I pulled out my stuff and handed it to him. Amanda reached down behind her and gave him her purse.\n\nThe perp started to turn to leave and I thought we'd escaped the situation, but then Amanda began to move her hips on me again. The perp froze, watching her.\n\n\"What are you doing,\" I whispered. She just gave me a naughty smile and continued to grind. Then she moaned.\n\nAmanda had a voyeuristic streak and on several occasions had talked me into making love in places that I hadn't been at all comfortable with. We'd even been caught at it by the cops once, though not arrested. She was going way too far now, though, and I promised myself that I'd work up the courage to have some serious words with her later.\n\nThe perp leaned back against the open door. \"I wanna see you do it,\" he said. In response, Amanda began to move up and down on me, moaning and panting as she went. For the first few seconds she was faking it, but then I heard and saw the change. She was getting off on this.\n\n\"Come on, dude, get after it,\" he said, looking at me. I was in no way turned on, but began to thrust again. I wasn't terribly hard, but had enough residual stiffness to stay inside her for the moment.\n\nThen the perp reached down and undid his pants. The thought immediately went through my head that if rape was his intention, he would have to shoot me first. To my relief (but no small amount of disgust) he pulled his dick out and began to stroke himself as he watched.\n\nI hoped that would be as far as it went. If I could get Amanda to fake an orgasm quickly we could be done with this, but then the perp stepped up next to her. \"Jerk me off,\" he said.\n\nAmanda gave a show of reluctance, but I could see the eagerness with which she took him in her hand, squeezing and lightly stroking. A visible tremor ran through him, which wasn't good because his finger was on the trigger of his gun, which was waving all over at the moment.\n\nThen he looked at me. \"I wanna see her tits,\" he said. I reached up and began to unbutton Amanda's blouse. When I was done, she shrugged out of it, then unhooked her bra and let it fall away.\n\nAmanda was well endowed and her breasts hung heavily in the cold December air. The punk reached in with his free hand and grabbed a fist full. My inability to do anything about it was both infuriating and shaming.\n\nAt that point I went so soft that I slipped out of her. Tantric training or not, there was no way I was going to maintain an erection under those circumstances. Amanda continued to grind herself against me anyway.\n\nThe idea of grabbing for the gun went through my head. I figured my chances of getting my hand on it were pretty good, as distracted as he was, but with his finger on the trigger, it would almost certainly go off. I wasn't certain I could control his aim, so I just continued doing what I was doing and hoped that this would end soon.\n\nIndeed, it didn't take long. The kid gasped and began to shoot his wad. Amanda actually seemed to purposely aim it onto her breast. Thick gouts of semen dripped from her erect nipple and made a pool on my stomach as he recovered from his release. I figured that at least with him sated, he would finally leave.\n\nThen Amanda made the final mistake that would end two lives. \"Gee,\" she said, \"that didn't take long.\" Then she laughed.\n\nAmanda had said that to me exactly once. It had been about thirty seconds after she'd taken my virginity. The sheer, unbelievable intensity of finally being inside a woman had made me blow my load as soon as I was fully seated.\n\nHer derisive comment had stung, but her surprise and delight at the fact that I was able to stay hard enough to remain inside her, then begin to thrust again just a minute later had impressed her. Still, I remembered how much her comment had hurt.\n\nThis kid was no different, but he was holding a gun. I saw the look in his eyes when her words sank in and I cried out. \"No!\" It was far too late, though, and he angrily pressed the gun to her head and pulled the trigger.\n\nLike most young American adults, I'd seen thousands of people shot to death in the movies, but it could never have prepared me for the horror of watching my wife die. I belatedly reached up to try and take the gun away from him, but the muzzle was already coming around. I remembered no more.\n\nWhen I came back to myself, there in the raft, Jessica was clutching my head tightly to her chest. I realized that I was shaking and forced myself to relax. I was safe now.\n\n\"So your father-in-law somehow convinced you that what happened that night was your fault.\" It wasn't a question.\n\nI nodded. \"I woke in the dark the morning after the shooting. My tube was being removed by a man in a white coat. I realized that it was Dr. Reynolds, my father-in-law. A nurse came in about then, but Bob waved a badge at her and she went away. Through the door, I could see a cop sitting in a hard plastic chair out in the hall. Then the door closed and he began to ask me about what had happened.\"\n\nI stopped to think for a moment.\n\n\"Maybe I should have realized that what he was doing was unethical, and probably illegal, but I was still pretty loopy from the pain meds. Despite my concussion, the memories of what had happened were coming back to me. He asked me to start at the beginning, but each time I told him a part of it, he told me what had actually happened and how I needed to interpret my faulty memory. If I hadn't been doped up, I would have seen what he was doing, but he was so sympathetic and convincing that I believed him implicitly.\n\n\"By the time we got to the end, I was so ashamed of what I'd done that I was in tears. I begged him to help me forget, because what I had supposedly done to his daughter was just too painful to live with. He said I should tell the police, and anyone else that asked, that I had absolutely no memory of anything that happened after we left the house.\"\n\n\"Clever,\" Jessica murmured, \"because he probably knew that your false memories would have fallen apart under police questioning, just like they did when I questioned you.\"\n\n\"Yeah, and I think I subconsciously knew that, so I did as he suggested. He said he forgave me and promised to keep what I'd done to his daughter a secret too.\"\n\n\"It sounds to me like he didn't want her actions to bring shame on the family.\"\n\n\"There was probably some of that, yeah, but Amanda's mom was also fighting breast cancer at that point and the last thing she needed was to hear that her daughter's wild streak is what had led to her death. Judy's a really great lady and if any part of her survival was because she was able to believe that it was my fault, then it was worth it.\"\n\n\"So what are you going to do now? Should you go to the police?\"\n\n\"It wouldn't change anything. Amanda and little Katie would still be dead.\"\n\n\"But people probably think it was your fault.\"\n\n\"The people I care most about have either forgiven me, or decided to let bygones be bygones. I can't prove anything anyway, so I'm going to let Amanda's memory go unsullied.\"\n\nJessica leaned her head down and kissed me on the forehead. \"You may be too nice for your own good.\" The feel of her hand wrapped around me was nice as well.\n\n\"Maybe, but it doesn't appear to be hurting me at the moment.\"\n\nShe giggled, but then got serious again. \"So where did the bullet enter? I touched you everywhere when I put the sunblock on you and didn't notice any obvious scars.\"\n\nI guided her hand into my red curlies so she could feel the hard lump of scar tissue left by the entry of the tumbling chunk of copper and lead. Then I had her feel the ridge of scar tissue that ran along my skull a couple of inches above my ear.\n\nIt was then that I noticed that my lower lip was still brushing against her nipple, which was now very stiff. Without even consciously thinking about it, I sucked it in between my lips.\n\nJessica gasped, and I immediately let her go. That had been highly inappropriate, especially considering what we'd just been talking about. But then I felt her long, firm fingers guide me back to her in an unmistakable request to continue. I wasn't sure that was fair to her, because ultimately, I wouldn't be able to satisfy those kinds of needs, but now she knew that too, so I figured I wouldn't be leading her on. I sucked her nipple into my mouth again and began to run my tongue across it.\n\n\"Oh God,\" she moaned. \"That's so good.\"\n\nI placed my other hand on her flat belly, massaging her and moving northward little by little as I continued to suck and tease at her nipple. The bitter taste of sunblock was on her, so I knew that whatever we were about to do, it wasn't going to involve a lot of licking.\n\nMy hand approached her other breast and despite the heat, she shivered. I didn't make her wait, cupping it and gently massaging as my palm rubbed against the hard nub of her straining nipple.\n\nI was surprised at how much this was turning me on. While I couldn't get an erection, my body was responding in every other way and I realized that I wanted this woman. I wanted to be with her, wrapped around her, and though I knew the desire was futile, I knew I needed to be deep inside her.\n\nI lifted my face from her breast and scooted up until we were face to face. She was waiting for me.\n\n\"Sean, will you make love to me?\" she asked.\n\nI nodded, then leaned in to kiss her. Hesitantly, she met my lips. I remembered that with Jessica never having dated, she had literally never been kissed. Her lips were soft, yet firm, and I could feel her longing and desire.\n\nWe kissed with closed mouths for a minute while I continued to massage her breast, then I gently pinched her nipple, making her gasp. As her mouth came open, I slipped my tongue just inside her lips.\n\nIt seemed to take her by surprise, but then I felt her lips close around my tongue. She sucked it in deeply. Our mouths opened to each other and we were soon kissing with abandon.\n\nMy hand left her breast and moved downward. I could feel Jessica tense slightly. While I'd already run my hands over every part of her body, this time was different because I was moving with a purpose.\n\nBetween the thick coating of sunblock and the light sheen of sweat that had covered us for most of the trip, my hand glided easily across her taut, baby-soft skin. We continued to kiss, but our attention was on my hand.\n\nI didn't want to rush things, but I saw no benefit in teasing her at this point. I was moving in circular motions, each sweep coming closer and closer to the goal. At last I let my hand firmly cup her maidenhood. I liked the unaccustomed feel of her long, silky hair.\n\n\"Oh Sean, please,\" she murmured into my mouth. \"Don't make me wait.\"\n\nI returned to my circular motion, pressing firmly but uniformly across her whole sensitive region as she began to instinctively hump against my hand. I began to lower my middle finger below the others, and together we wiggled it into her slot.\n\nJessica was amazingly wet, bathing my finger in her slick fluids. I began to gently saw my digit through her folds. I wasn't touching her clit directly, but after only a few seconds of this I felt her shudder. Her climax wasn't huge, but I felt her stiffen as her body and mind went into that special place that men will never understand. I continued to massage her privates as I backed away from her face and watched her ecstasy. I surged with pride that I'd made her feel something that the only other man she'd been with, one who reputedly had physical attributes that I knew I would never again be able to approach, hadn't managed to. Eventually, I saw her come down the other side of her peak. When she was ready, I leaned back in. We continued kissing until she was done. I stilled, but didn't remove my finger from her luscious valley.\n\n\"Enjoy yourself?\" I asked softly as our lips separated.\n\n\"I seriously had no idea that sex could be like that,\" she said. \"I thought you were going to completely turn me inside out.\"\n\n\"You know, most people wouldn't even call what we just did 'sex'.\"\n\n\"Well I'd beg to differ, but I feel bad that I wasn't doing anything for you.\"\n\n\"There's really not all that much that you can do for me, physically.\"\n\n\"So are you getting anything out of this?\"\n\n\"Watching you climax turns me on in ways I'd completely forgotten about. If I can give you pleasure, it gives me pleasure.\"\n\nJessica reached down and took me in her hand again. \"Does this even feel good?\"\n\n\"It's a nice sensation, but the best part for me is that you seem to enjoy touching that part of me, even though it's broken.\"\n\n\"I enjoy it a lot. I love being with you, and what you can do with your hands is amazing.\"\n\nI sighed. \"I'm glad you like it, but please keep in mind that in the end, I can't be what you need.\"\n\n\"And what exactly is that?\"\n\n\"A real lover. A man who can give a woman all that she's supposed to have. To touch her deep inside, leave his seed and father her children.\" Wow, that was a bit deep, I belatedly realized. I barely knew Jessica and here I was talking about her future children.\n\nBut she didn't appear to think I'd been out of bounds at all. \"Sean, what I need is to have someone who treats me well, someone who knows how to touch me and turn me on. Someone who cares and makes sure my needs are met. You've shown that you can do that for me. Would you show me some more?\"\n\nHer words were wonderful and filled me with an inner peace and satisfaction I hadn't felt in a long time, even as I still knew that someone like me would never be enough for her in the long run.\n\n\"Sure, I'd love to,\" I said, kissing her. I began to move my finger in her folds again, but then I moved the tip to her opening.\n\n\"Is this okay?\"\n\nShe nodded. \"Please.\"\n\nI began to gently and patiently work my way into her. Jessica was incredibly tight, and I could understand now what had happened with her and Kevin. If his cock was big, but not particularly hard, and if Jessica wasn't properly prepared, there was no way it was going to happen. Even though I was just using a finger, I took it very slowly.\n\nJessica had closed her eyes and was totally concentrated on what I was doing. At last, I had my finger buried inside her to the hilt and began to slowly move it in and out. Jessica gasped and pulled my face down to hers, kissing me desperately. Now it was time to really get after it.\n\nI pulled my finger out just long enough to spread more of her moisture, both into her folds and onto my hand, then slid it back in and brought the meaty heel down to lightly make contact with her clit.\n\n\"Oh!\" she cried out, right into my mouth as I began to press down a little harder onto her slick little button. She began to unselfconsciously move against my hand as I fingered her.\n\nJessica reached up and grabbed onto my arm for dear life as I went faster and faster, applying more pressure to her most sensitive place as I went. Her rising passion was easy to gauge. \"Oh God, yes,\" she moaned.\n\nShe said nothing more, just panting, faster and faster. I kept after her and eventually she arched her back so far that it looked almost painful and exploded into a monstrous orgasm.\n\nThis time there were no words, just screams of ecstasy that were almost tinged with agony. Her voice echoed off the lonely canyon walls as she came. I showed her no mercy, still fingering her and bearing down on her clit. She began to shake.\n\nI kept her in that state for as long as I could, despite wondering if I was doing her permanent physical damage. She went for longer than I'd known a woman possibly could, but eventually she came down from her high, obviously shaken and exhausted. I withdrew my finger and gently covered her abused maidenhood with my palm as she regained her composure. At last, she sighed.\n\n\"Are you okay?\" I asked.\n\n\"I'm so okay that I... Well, I'm more okay than I could ever have conceived of being.\"\n\n\"I kind of enjoyed that myself.\"\n\n\"I'd swear that you're some kind of magician. I never knew that what you just did to me was even possible.\"\n\n\"Jessica, I frankly didn't know it either. It's like something about our chemistry together that makes it possible.\"\n\n\"Well here's to the power of chemistry.\"\n\nIt felt so right that we should be here like this. Her acceptance of me had totally changed my world. I'd never thought I would make love to a woman again, much less one as amazing as this one.\n\nThen, just when I was thinking that it couldn't get any better than this, something miraculous happened.\n\n\"Sean, what's that?\" Jessica asked.\n\n\"What's what?\"\n\nShe wiggled her hip against me and I felt it too. I reached down with my hand, not ready to believe what we'd felt, but there it was.\n\nI had an erection.\n\n\"I don't understand,\" I said. \"That's not supposed to be possible.\"\n\nExperimentally, Jessica reached down and wrapped her hand around me again, feeling the hardness. I wasn't just back; I was back with a vengeance.\n\n\"Did the doctors actually say that?\" she asked, still looking down at what she was holding in her hand."
    ],
    "authorname": "Michael_Butterfield",
    "tags": [
        "sex on a beach",
        "sex in a car",
        "losing virginity",
        "raft",
        "revenge",
        "caught naked",
        "river",
        "group nudity",
        "tubing",
        "swiming nude"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/life-raft"
}