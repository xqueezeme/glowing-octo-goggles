{
    "title": "Extending the MILF List Ch. 04",
    "pages": [
        "From the Author: Extending continues. There is no direct sister sex in this episode, but the series relies on taboos, just not in this episode, so be aware. Hope you enjoy it. As always, any feedback can be beneficial. Please vote and add comments as appropriate. Thanks for all your support. -C\n\n*****\n\nMy phone woke me. I was dazed and confused, to coin a phrase. It was bright, barely light, perhaps even dark. I was unsure and that uncertainty gained relevance when I found the squalling little irritant and tried to see who was calling and my eyes gave only a blurry clue. Whoever it was, it was early. I answered.\n\n\"Hello, what!\" I snarled, somewhat more vehemently than I intended. \n\n\"Mr. Duncan?\" \n\nI recognized Alissa's voice instantly and that reminded me of last night, of switching sisters, falling asleep in my own bed, waking when Georgia, nude, snuggled in beside me and waking again later when she un-snuggled to Dalia's prodding and urging her to rise and get showered so they could go to work. \n\n\"What?\" I said, still more harshly than I intended. \n\n\"Sonny?\" Alissa's voice stung my ear. \n\nDespite her best efforts I could hear the distance, the discontent, the blooming disgust or despair all of which may well have been projections of my own guilty conscience at not having fucked her recently, for more than a month now. Hell hath no fury like a woman spurned, the words throbbed in my mind. There was reproof in her voice, but still, she had called. I could talk to her but I had little idea about what to say so I stalled. \"What time is it?\" \n\n\"Seven.\" Her answering voice was a gray shade of neutral. \n\n\"Seven? Why are you calling so early? Is someone dead?\" \n\n\"No. No one's dead. You have paperwork for me.\" A statement, not a question I noticed. \n\n\"I do? Oh, right, I do. The cover letter said I had till uh, the end of next month, January.\" \n\n\"Well, technically, but...we need you to come into the office. Sid called and suggested we pay you a retainer, this year, before the end of the year so you could pin it on this years taxes. He said your earnings were negligible and this way, you would not lose so much next year, when you are paid for the uh, the work you will be doing for us.\" Alissa halted. \"Can you come in, right away?\" \n\nI rolled over and sat up. I was in my own bed, my sister was gone. I am sure she slept with me. I'd gone to bed after drinking wine with Dalia while...I remembered Tawny's voice ringing through the house while she orgasmed and the silences between the epic throes she called out to us. \n\n\"Right away? I am still in bed.\" \n\n\"Soon, right away.\"\n\n\"Its the holidays.\" I objected.\n\n\"Soon.\" Alissa said again. Her voice was brittle. She waited, not hanging up. I could hear traffic in the background. She was outside, near a downtown street on December 29. Still the city clattered to life before seven. \n\n\"Alissa, listen, I owe you an explanation...\" \n\nShe interrupted me. \"No. You don't. You own me. Use me. Don't use me. Isn't that how it works?\"\n\n\"You asking me? I never got an owner's manual.\" Boy. She sounded pissed. Then it occurred to me, she was hurt and the hurt came from neglect, so don't make it worse by neglecting her still. Remembering D. Debra Hamilton's taste made my mouth water and I sucked, slurping into the phone. I almost told Alissa she made my mouth water but declined that temptation. \"Are you wearing panties, Mrs. Honeywell?\" I asked. \n\nPause, a long pause, a long, long pause followed. \"Yes.\" \n\n\"Why?\" Dumb question. I had to recover. \"Keep them on. When I get there, to your office, I am going to ask you to take them off. Do you know why, Mrs. Honeywell.\" I heard her inhale, almost a gasp but just a bit too controlled to be a real, gasp. \n\n\"Yes.\" She answered. \"I do. I hope I do.\" \n\n\"I am going to bend you over your desk, Mrs. Honeywell and do you know what I'm going to do next?\" \n\nShe did suck air past the phone then, like someone was touching her between the legs with cold fingers or licking a cold nipple with a hot tongue. \"Tell me.\" She commanded.\n\n\"Is that an order?\" I chided.\n\n\"I...no...no, Mr. Duncan, I just...\" She exhaled, retreating from her brittle distance into the warm embrace of my attention. \"What will you do with me, if I am bent over my desk?\" She deflected. \n\n\"I'll lift your skirt, Mrs. Honeywell. What sort of skirt do you have on?\" My cock remembered Mrs. Honeywell, her rich black skin, her large sensitive breasts, her deep, dark pussy. The image was transfigured with D. Debra. I got really hard. \n\n\"It, it is a black pinstriped skirt.\"\n\n\"Tight?\" \n\nShe hesitated. \"Yes.\" Her voice was low, almost rough but dusky. \n\n\"Short?\"\n\n\"It...\" she inhaled and exhaled with a long sigh. \"It stops above the knees.\" \n\n\"So I have to take it off?\" I asked.\n\n\"Yes, yes, you must take it off.\" \n\n\"Would you like me to remove your skirt, Mrs. Honeywell?\" I breathed into the phone. \"Don't answer. Think of that question. I'll be down there as soon as I can.\"\n\nShe breathed in, a vibrato sound that became a shaky voice. \"Before noon or the notary will be gone.\" She said. \"I'll see you then.\" I ended the call with her voice reverberating in my brain. I remembered her through the haze of D. Debra Hamilton and m recent capture of my wild sisters. \n\nI went downstairs, my cock flagpoling through a gap in my robe. My blisters were just finishing up breakfast. They were all decked out in professional attire. I was so horny my chest hurt. I could barely breathe my cock was so hard, so insistent. I looked at Tawny. \"I thought you were taking the week off?\" My voice sounded tinny. \n\n\"Shopping. They are leaving at noon and we are all going to go shopping.\" Tawny said. \"I have some things to do on my own.\" \n\n\"Unless...you will be home this afternoon?\" Georgia made it a question. \"Do you want me...to uh come home? After work?\" \n\nHer eyes fixed on mine but then, as if the effort was to much, they lowered till I could feel them lock onto the rise in the robe and tendrils of her imagination were wrapping around my cock. \n\n\"No.\" I said and her eyes died, like realizing your family forgot your birthday. I recovered quickly. \"Stand up.\" I said. She did, slowly. \"Do you have on panties?\" I asked. She nodded. \"Pantyhose?\" She nodded again. \"Turn around. Tawny, get me some scissors.\" For a moment no one moved but then all three of my sisters were in motion. Dalia migrated deeper into the kitchen to a vantage point, Tawny headed into the sewing room under the stairs and Georgia turned around, shaking. She wore a floral print, well, it looked like a church-lady dress with lavish greens, like an impressionist painting of an Amazon forest replete with orchids and filtered sunlight. The dress was tight but not too tight. It hugged Georgia's ass but had plenty off room around the thighs so that I could lift it. When I did, she shuddered. \n\n\"Bend over, onto the table.\" She did. The table was mostly cleared. Dalia moved the butter dish and the two cups still there. I glanced at her. Her face was flushed, rapt. I lifted the skirt, pulling it up Georgia's legs till it bound around the broad swell of her ass and hips. I reached up under the skirt and found panties and pantyhose and pulled them down. They rolled into a tight band that turned into a snug cord around the tops of her thighs. I took the scissors from Tawny and clipped into the bunched fabric. Georgia, now bent onto the table, squeaked. She got awkwardly to her elbows and that allowed her to lift her ass. Her pussy appeared between the arch of her ass. A bead of clear liquid appeared out of her pussy and tricked down the inner plane of her pale, flexed thigh. I touched her pussy and she groaned and hitched her hips higher. Her pussy kissed my finger. \n\nI wanted to finger her but I did not want to keep Alissa waiting or Georgia for that matter. I opened my robe, pulled my briefs down and entered Georgia from behind. \n\nSliding into her electrified me. I had been here before and the circumstances washed over me and I had a twinge that I recognized that I missed my mother...that is, I missed fucking my mother. I shivered, rooted in my sister and wondered what mom would think, or feel, or say, or do if she were in the room now, at this moment, watching me fuck her daughter, my sister. I groaned, gripped Georgia by the hips and drilled into her, pumping her till my orgasm overflowed and poured cum into her. She was shaking, shivering and twitching. She squeaked in protest when I pulled my cock out of her. I patted her on the back. \n\n\"Dear sister, no more pantyhose. They are expensive, I expect. Garters or nothing. Nothing is best but thigh-highs if you need to keep your legs warm.\" I sauntered upstairs, through a shower and emerged into an empty and silent house. The ride downtown to Alissa's office building was easy, the traffic was holiday light. I took the elevator up to her floor and walked past the empty receptionist kiosk, back to where I thought her office was. That little cubbyhole was locked and a name plaque beside it that read, \"Randy Reading\" which I thought was a curious name. Reminded me of Medium McClusky and his excellent work on Amazon. \n\n\"Mr. Duncan?\" \n\nAlissa's voice seemed to echo in the dark corridors. Heavy clouds filled the sky, bringing it down so low it seemed to be just a ladder's height away. I could see it through the office windows. I turned around to find Mrs. Honeywell standing down the hall from me, dressed as she promised in a very tight, very stylish black pinstripe business suit that hugged her body. Were it not for the well-cut jacket, I would have been able to see her full form but it hid her narrow waist and disguised her bust and the flamboyant flare of her hips. \"Mrs. Honeywell. Merry Christmas and Happy New Year.\"\n\n\"Happy Holidays.\" She returned dryly.\n\n\"Oh for heaven's sake, don't be stuffy. Merry Christmas.\" I said, mocking her political correctness. \n\nShe smiled thinly. \"My office is this way.\" She gestured, opening her palm between us like a game show hostess showing of that new car!. I walked towards her, she turned and I followed, noting with satisfaction that her ass looked good in that skirt. It was short, well above the knees but tight, tight, tight. The switch of her hips made the plane of the skirt shift back and forth. In the dampened silence of the presumably empty office, I swore I could hear her thighs rasping together. Her ass rocked back and forth and then was gone as she turned. I had to lift my eyes to see she had opened a door and was letting me precede her into the room. \n\nIt was a big, plush corner office. \"Nice.\" I breathed, smelling the \"new\" that emanated from carpet and walls. \n\n\"Bickerstaff's old office. Since I represent 40% of the firm's income with the Kingston Industries and other accounts, Mr. Peppers had me move into this office.\" She closed the door behind me and began to lower the blinds on the glass walls till we were well and truly alone. Only the desk lamp was on so she strode past me, her thighs hissing as she walked and opened the blinds on her two walls, exposing the milky day beyond, all roiling clouds just about even with us. \n\n\"Nice view.\" I said, staring intently at her legs. \n\nAlissa allowed herself a little smile. \n\n\"I do you have panties on?\" I asked. \n\nShe sobered. \"Asked and answered. I have some business, other business first...that is, I have other business as well with you. Which would you care to deal with first?\" \n\nMy cock voted that she needed to bend over her desk but my brain wanted to stagger out of the office right after penetrating her pussy and filling her with cum. I wanted to look like I just fucked a partner in the firm not like I just signed papers. But then I figured, despite all my internal voting, I should make use of her expertise. \"You are my attorney, Mrs. Honeywell, why don't you decide how we proceed.\" \n\nShe smiled, almost warmly. She still had a veneer of \"scorned woman\" about her. Or, perhaps, it was her professional sheen. Either way she nodded. \"A good choice for you, Mr. Duncan, I think. Do you have your papers?\" \n\n\"Ah shit.\" I whacked my forehead. \"I completely forgot them!\" \n\nShe nodded. \"No matter. We can back date them if we need to. We may not need to.\" She took a seat behind the big, landing-field sized desk. She gestured. \"Sit, er, if you please, please sit, Mr. Duncan.\" \n\nOur mixed relationship was showing and confusing her. I decided to make things easy for her and sat down. The chair sank low and my eyes were just barely above the plane of her desk, which put me about even with her breasts. I wondered if she realized. Power poses work differently for men and women. It was not imposing to look up at a woman's tits, particularly when they dominated her figure as Alissa's did. \n\nShe opened a drawer and took out several things. She looked over at me and for a moment her eyes were hard and impassive. Then they softened and that softening appeared in her voice when she spoke. \"Sonny, here is a check for $10,000 made out to you. This is a private investigator's license, certified in your name back dated to October 12. This is the tax documents, 1099 and what not. There are tags where to sign.\" She dropped a leather folder, like a bill fold but flatter. \"This is your PI license.\" \n\nNeedless to say I was unnerved. \"Okay. Fascinating. What is all of this and what does it have to do with me?\" \n\n\"We, listen Sonny, this is pretty simple. We have a private detective who works for us but does not want to be on the books. Nor do we want him on the books. We want you to work for us but not in the capacity that you uh, are going to work in. You need to appear in our records but not in the way you will function for us, or for Mr. Kingston.\"\n\nI nodded. \"Okay.\" I was still in the dark. \"Why doesn't the PI want to be on your books?\" \n\n\"Because he does things he does not want other people to know he is doing or doing for us. He is unsavory and wants to be known to be so and working for us would diminish his reputation. This way, he does the work and you get the credit. We have a separate arrangement for how he is paid. We'll use you to account for the work he does for us and pay you using that avenue. Sometimes we will ask you to be at a place at a specified time to establish a logical and verifiable presence, just in case we or someone else requires it. It is just a conceit.\"\n\n\"And if anyone checks, they'll know I don't do that sort of work.\" \n\nAlissa nodded. She opened another drawer and pulled out a small black case and laid it carefully on the desk. \"This is your gun. You have a permit to carry, this gun. I would suggest you book some time at a firing range so you are familiar with your gun.\"\n\nI stood up. \"Whoa, Alissa, I have no need for a gun. That is crazy. I am not taking that. Not today. Not ever. I am fucking married women. If a jealous husband shoots me, I suppose I deserve it. I will never defend my actions with a gun.\" \n\nShe regarded me for a time and then finally nodded. \"Very well. We'll, uh, take care of that for you. But if anyone asks, you have one but it will be locked in a locker at the gun club. You need to go there a few times, just for the record. This is part of getting involved with people who care deeply about security and privacy. You'll have to get used to it.\" She put the case away. She stood up and went to the door. She looked down at me with a slight smile and opened the door. \"Please tell Ellen to come in, would you please? I am ready for her. We are ready for her.\" \n\nAlissa left the door ajar and resumed her seat, stacking the papers. \"Sonny, Sid is ready for you to start making good on some of his promises to this firm, specifically to Mr. Kline and Mr. Bickerstaff who have pissed him off.\" She was going to say more I could tell but the door of her office swung open and into it walked a little woman. She was so small, so slight I thought \"girl\" was the right term till I looked her in the eyes. Then I knew I was looking at a full-fledged woman, wise to the ways of the world and eager to practice what she preached, talk the talk, walk the walk and lay in the bed she made for herself. She looked like a pixie, with the helmet cut, her short, violet reddish brown hair was trimmed off the collar and short to frame her round face. Little ears I expected to have elven points disturbed her hair. \n\n\"Ellen, please sit down.\" \n\n\"What is this about, Mrs. Honeywell.\" \n\n\"We have a problem. That is, you have a problem, Miss Collier.\" \n\n\"A problem?\" The tiny woman stood beside me. \n\n\"Sit.\" Alissa said and I heard the sharp edge of her professional voice. \n\nI had not had time to process her comment about Sid Kingston and what I was supposed to do for him. I was catching up. My mind rejected the idea that this woman in any way fit into any of the salacious projects he had outlined for me. She looked so innocent, so delicate and small, my mind rejected any suggestion that she was even mature enough to...I could not even finish the thought. Her eyes said she was. The contrast was intriguing. \n\n\"Sit.\" Alissa said again, her voice was glassy, cold and hard. \n\nI scooted to the end of the uncomfortable couch and Miss Collier plunked down beside me, eying me like she would Aqualung if she had to share a bus seat with him. I confess I felt a little affronted. I had, after all, taken a good shower and put on deodorant. Shit, I forgot cologne. \n\nAlissa was speaking. \"Miss Collier, you have a problem. You are fucking Mr. Bickerstaff or more precisely, perhaps, he is fucking you. You should look at this.\" She flopped a picture on the desk. I just glimpsed it but when Ellen stood and picked it up, hiding it from Alissa, she showed it to me. It showed Raymond Bickerstaff bending over the elfin girl, kissing her. It was not a chaste kiss and his hands were unbuttoning her blouse. Her arms were looped around his thick, black neck. \n\nAlissa dropped another picture, which Miss Collier obligingly picked up and showed to me around her slight body as well. This showed her on her knees, standing high on her knees, Bickerstaff's trousers were at his knobby knees and his hard cock protruded from voluminous boxers, his gut arching above it. One of her tiny hands wrapped around his cock and she was just in the process of kissing it. The picture was perfect, her lips were pursed, with bright space between them and the bent head of his cock. The cock was long, straight but with a crook in the end that made the head point down rather than straight ahead. \n\n\"And this.\" Alissa slapped another picture on the desk which showed dear, tiny little Ellen blowing Mr. Bickerstaff, her cheeks puffed out like she was Dizzy Gillespie playing the trumpet. I was impressed. \n\n\"And this.\" Alissa said relentlessly. \n\nEllen's hands shook but the picture was clear enough. Her nose was deep in Mr. Bickerstaff's pubic hair, which meant that impressive if odd-shaped cock was completely contained by her mouth and throat, quite an accomplishment for such a small woman. Where there's a will, there's a way. \n\n\"And this.\" The next picture showed Ellen Collier, nude, bending over the end of a bed, Mr. Bickerstaff's cock protruding well over her bare back. She was even looking at the camera. There was literally no doubt this woman was the subject in the picture. Her eyes were so big, they seemed to dwarf her head, like the eyes in Anime cartoons. \n\n\"And this.\" Bickerstaff was on his knees, standing tall behind her with a good portion of his cock buried inside her little body. \n\n\"And this.\" This was an impressive shot over the top of them. She could barely be seen, covered as she was by Bickerstaff's large, swollen body. All that could be seen of her was her little hands on his dark shoulders, the top of her head above his shoulder, and her heels dimpling his sides. The rest of her was completely obscured. In fact, if this picture had been the only one, she could have claimed it was not her because nothing about her heels, head, or hands appeared distinctive, at least not in the picture. ",
        "Miss Collier gazed at the last picture and then tossed them on the desk. \"So? What's your point?\" I give her credit. Her voice was steely, no give in it. \n\nI expected crying and whatnot, not this edged tone, sharp and assured as a fillet knife. \n\n\"Please sit down, Miss Collier. I will be happy to explain my point.\" \n\nNow Miss Collier noticed me and she had the good grace to blush. She sat down, giving me the \"Aqualung\" look all over again, like she caught me eating a gob of snot off my little finger. Seemed a little disingenuous since she was the one in the picture with the cock stuffed down her throat...and elsewhere. \n\nShe sniffed at me.\n\nI sniffed back, giving her my best salacious Aqualung look. She grimaced and looked away, acting like she was ignoring me. \n\n\"Miss Collier, Mr. Duncan has been good enough to supply us with these photos of you and Mr. Bickerstaff. For reasons you do not need to know, you will not be fucking Mr. Bickerstaff any longer. Mr. Bickerstaff is a married man. His wife would not approve of these pictures or any of the others we have obtained. What is more, you are utilizing company property for your trysts and that has a penalty with it.\"\n\n\"You going to fire me?\" Miss Collier said, her little pixie voice made the question seem much more sweet than it was. \n\n\"Do you wish to quit? Or do you wish to keep your job?\"\n\n\"Yes.\" Miss Collier said too quickly. \n\n\"Which?\"\n\n\"I want to keep my job.\" \n\n\"So, then you will cease fucking Mr. Bickerstaff?\" \n\n\"He is a partner. How can I keep my job if he insists?\" \n\n\"If he insists, if he tries, you and I will sue him and throw him out of the firm. We, of course, prefer that that will not happen.\"\n\n\"You maybe. The man is a beast.\" \n\n\"We, Ellen. We prefer he not leave the firm for reasons that have little to do with you but then again, everything to do with you. May I remind you that you have already demonstrated that you are willing to fuck to keep a job? That will not change. Merely whom you fuck will change. You have made fucking part of your job description and we are loath to change that.\" \n\n\"What do I tell him? How can I prevent him from fucking me if that is what he wants? I am in no position to tell him no, you must know that.\"\n\nAlissa nodded. \"Mr. Bickerstaff is a shit. We do know that. That is why we are going to undermine his right to fuck you. I think we can raise your price to a point beyond his will to pay. Perhaps I should say the cost, the cost of accosting you? Yes, that is what I mean, it will cost him too much to fuck you any longer. In exchange you will fuck someone else. You, Miss Collier, will fuck Mr. Duncan, here. That way, when Mr. Bickerstaff attempts to insist that you fuck him, you can kindly refuse and cite your prior agreement to fuck, fuck Mr. Duncan here. If anyone fucks you, it will be Mr. Duncan.\" Alissa smiled, her red lips and white eyes in her dark face gave her a foreboding, rapacious look. \"And you will fuck Mr. Duncan. I can assure you of that.\" \n\nNow, Miss Collier turned to study me and the Aqualung look faded. \"Not bad.\" She said. \"But how is that going to help? Mr. Bickerstaff, why would he care if this kid is fucking me or not?\" \n\nAlissa smiled a chilly smile. \"He will care because I will tell him to care. Trust me.\"\n\n\"Why should I trust you? Everyone says you fucked your way into the corner office. I am just an associate and fucking Bickerstaff is my best hope. I don't have fancy credentials. I work here because I am cheap and, as it turns out, easy.\" \n\n\"As you say, but I fucked neither Kline nor Bickerstaff nor Peppers for that matter. This corner office is mine because Mr. Duncan, here, secured it for me. I fucked him to get it. In fact, he is here to fuck me again, I believe. Would you care to stay and watch? Oh, that's right, you have lunch scheduled with Mr. Bickerstaff, the partner's apartment, he and Kline are sure I do not know about or the million and a half dollars they have spent on acquiring it. Partnership money, by the way, that is essentially stealing from Peppers and now me. This is a betrayal I am seeking that has consequences I am seeking to shield you from. But such a service is certainly going to cost you.\"\n\nAlissa turned her gaze to me and all hint of the bitch attorney vanished. Her eyes softened, her voice turned to velvet. \"I am yours, Sonny.\" She purred. \"Care to take me with an audience or do you wish to send her on her merry way?\" \n\nMy choice? My mind was numb. I thought I was here to shag Alissa and sign some papers, not do my duty to god and my country. Country? My mind caught on the sound of that word and I giggled, yes, giggled. I was thinking \"Cuntry\" and it struck me as hilarious. I was so nervous by this time I could not control myself. \n\nAs soon as I giggled, I saw the doubt in the Ellen's green eyes and she sniffed again, turning back to Alissa. \"This must be some sort of joke, Mrs. Honeywell. This is just a kid. You expect me to believe...\"\n\nI cut her off. \"Stand up, Alissa.\" I realized they needed me to be at my best in this perfect moment. My voice snapped like a whip. In point of fact the little bitch pissed me off a little. Mostly I don't care to make issues of slights but this just struck me wrong and suddenly I wanted to put a little cock fear in her. My voice reflected this mercurial change in my disposition. \n\nAlissa stood immediately. I stood and went to the door and clicked the solid lock on it, securing our privacy. The room seemed warm and close. I turned to Alissa. \"Take off the jacket.\" I muttered. \n\nAlissa did so, hurrying so one sleeve caught on her hand and it came off inside out. She did not care but yanked if off her arm. She dropped it on the floor. Her breasts heaved under the white satin blouse, ghostly dark through the sheer material. A bunch of frilly lace under her neck hid her cleavage. I approached her. She chewed her lips, her full, black lip against her perfect white teeth in her serious, focused black face aroused me. \n\nI moved to stand beside the desk, around the corner of it from her. I picked up her jacket and looked at Miss Collier. \"Here, my dear, hold this, will you?\" I tossed it to her. The little woman immediately righted the jacket, pulling the sleeve back into proper form. \"Face the window.\" I said. Alissa did. I pulled the tails of the blouse out of the skirt and in doing so found the two zippers on either hip. I pulled both tabs down and the skirt waffled around her hips. I smoothed my hands down her hips, inside the skirt and it slid off their slopes and dropped down her legs. \n\n\"Oh my god, he's really going to fuck you.\" Miss Collier mumbled behind me. \n\nAlissa wore garters and panties over them, full panties that covered her ass, not the little dainty things with a triangle and a string or a thong. She widened her legs and I pulled the panties down her hips, over the top of the garter straps that ringed each leg, six straps for each leg. The black hose sheathed her fine legs. \n\nI gazed at her figure, shadowed against the glass. The day was so hazy and the clouds so low, no lucky bastard could have seen her against the glass of her office. Well, they might and the thought enthralled me, the picture of a woman pinned against a tall glass window in garters with her pussy bare and visible. I was considering my next move, considering having Alissa suck my cock but I was plenty hard. It occurred to me that Alissa needed me to make her subservient, to make her show this woman her willingness to submit to my merest whim. \n\n\"Are you wet, Mrs. Honeywell? If, if I enter you now, will you be comfortable? Will I slide right into your? Are you ready to be mounted?\"\n\n\"Oh god, yes.\" Alissa sighed. \n\nI nodded. I turned around, showing my tent to Miss Collier. I was on Sid's dime at the moment and I wanted him to get his money's worth. I unbuckled my belt, unbuttoned my pants and revealed my cock. Miss Collier's eyes fixed on my hard cock. She licked her lips. \n\n\"I am going to fuck her, now, Miss Collier. I am going to mount her. Do you want to see her tits? Or shall I just fuck her like she is? You know, from behind?\" \n\n\"Bend her over the desk.\" The woman said, swallowing around the words. \n\nI had expected her to be inarticulate but her immediate participation suggested more potential than the pliant employee Mr. Bickerstaff had been enjoying. I liked her willingness to engage this Zen moment and blend with it. I moved towards her and she sat back, craning her neck backwards as my cock approached her face. She looked past me at Alissa. \"Mrs. Honeywell, if he fucks me, are you sure Mr. Bickerstaff won't fire me?\" \n\n\"He can't, Ellen.\" Alissa said, her voice rounding her semi-nude body, bouncing off the glass so she sounded much more distant than she was. \n\nEllen Collier licked her lips. \"Why should I believe you?\" She asked, her eyes focused on the bobbing end of my hard cock.\n\n\"Because Mr. Duncan does not work for Mr. Bickerstaff. Now, neither do you. You work for me. Mr. Duncan owns me so, if my logic is correct, he owns you or at least, you work for him.\" \n\nI stood still before the little woman. Her eyes clicked between the cock before her face and my eyes. She swallowed several times. \n\n\"You heard the woman, Mrs. Honeywell,\" I should have used her given name but no matter. I'd get to that point soon enough. I had a sudden vision of D. Debra Hamilton and her likely reaction this situation, to the places my cock has been and was likely to go if not entering her. I hesitated, thinking of the blond and her penchant for teasing me. Alissa moved behind me. \n\n\"Mr. Duncan, we have some business involving Miss Collier...\" She trailed off, then resumed, \"...that I think you should consider before you, er, before you...\" \n\n\"Fuck me.\" The woman before me finished, finally letting her eyes meet mine and hold. \n\nAlissa rustled behind me and I heard what I was sure her bending over her broad desk. \"Yes,\" she grunted, \"fuck me.\" \n\nI nodded and turned away from Miss Collier. The meaning of the exchange clear and rather than do what the woman seemed to be suggesting, I moved behind Alissa who was laying on her desk. I smelled her arousal. The lurid aroma seemed to fill the room. As I positioned myself behind her, I noticed Miss Collier crinkling her nose. \n\nI peeled Alissa open and touched my cock to her bulging pussy lips. \n\n\"Oh my god, finally.\" Alissa heaved, her voice thick with salubrious glee. I entered her and she hissed. I shoved deep and her body seized me and resisted. I pulled back and shafted back into her. She shuddered, her hands left the near edge of the desk and shot out over her head, questing but not reaching the far rim. I sank further into the black woman. Alissa groaned aloud. It felt like it was for effect and perhaps it was. I no longer cared. Her body was slick with fluid, soft and yielding. I sought a rhythm but the sluicing feel of her body made me go very slowly, stroking into her gently and carefully so that my cock would garner every sensation it could from being inside of her once more. \n\n\"Holy house plants!\" Miss Collier whispered. \n\nI almost laughed but Alissa rocked back on her heels, pressing her plush ass against me and I lost the urge. Instead my hands took firm hold of her hips, just below her waist and began to hammer into her. She rocked forward and back as I did, colliding with me so that I rammed deep into her as our bodies smacked together. \n\n\"Oh, oh, oh!\" Alissa grunted as I fucked her. I looked down the black woman's back, sheathed in white satin, then at the white girl, watching us. \n\nI had thought I would be in Alissa for a while since I had taken the edge off in my sister but I felt the distant roar of a coming erotic cataclysm. I had a flash of Georgia and Alissa, the contrast of Nova's full white body with Alissa's full black body and the knowledge that I likely had the full ability to put those two women in the same bed flushed through me. Then I roared into the present, pouring cum into Alissa's rocking body. \n\n\"Oh god, fill me up!\" Alissa growled but she did not seem to be close to orgasm. \n\nI regretted the brevity of the encounter but the regret was quickly overlaid by delight and the pleasure of my orgasm. I grunted and humped against the bent attorney, ramming at her from behind. She sighed when I stopped and moaned when I pulled free of her. She reached for tissues immediately and I wiped off my dripping, smeared cock. The room smelled of sex. For a moment I thought my eyes were going to start watering. \n\nI shuffled back and pulled up my pants. The pixie on the couch watched my every movement. \n\nAlissa had her skirt back in place and her blouse tucked in by the time I got my pants back into place. A moment later, Mrs. Honeywell was back in her seat. She sat for a moment, sniffed and turned around to open one of the windows behind her desk. The damp air flooded in, chilly but crisp. \"Mr. Duncan, would you care to have a seat so I can outline what happens next?\" \n\nI did as she suggested, a foot in both the world of our master-slave relationship and consultant-client relationship. \n\n\"Miss Collier, if you have any doubt about this, I will bring in Clara. She will suck Mr. Duncan's cock if you wish, just to reassure you that Mr. Bickerstaff will be compliant with the instructions I am about to give you.\" \n\nThe girl looked at me, her eyes glistened with lust. Even I could see it. If I had asked her to fuck me, my ears would have popped with the speed of her compliance. \"No. I don't think that is necessary. If, if this gets me out from under Mr. Bickerstaff and I can keep my job, I'll fuck the kid, er Mr. Duncan all week long and twice on Sunday.\" She gave me the smallest smile possible, tentative and a bit frightened. \n\n\"You have an assignation scheduled with Mr. Bickerstaff today, if I am not mistaken?\" Alissa asked. \n\nMiss Collier looked suitably shocked. \"Yes. Yes, I am supposed to meet him about three.\"\n\n\"Not lunch then? So we have time. You usually go earlier, though, don't you? Usually about an hour?\"\n\nEllen nodded. \"I like to be alone there for a while. Just to prepare, to get into the mood.\" \n\n\"You get off a time or two, before you let him in the door.\" \n\nI wondered where Alissa was going with this. \n\nEllen nodded, blushing up into her hair. \n\n\"Not today. I want your keys. To the apartment.\" Alissa spoke steadily. \n\nEllen stared at her for a moment but then waved behind her. \"They, they are in my desk.\" \n\n\"Get them.\" Alissa responded. \n\nThe little woman left the office, unlocking the door to open it and returned a minute later. I sat silently, floating along on the current of these events over which I had no control. My cock, however, had the sure conviction I was soon going to experience this little woman, mounting her and fucking her and there was no little eagerness in the pit of my stomach. Ellen returned, closed and locked the door and dropped the keys on Alissa's desk. \n\nAlissa picked them up and sorted through them to match one to a little impression she held in one hand. She nodded. \"Do you need these other keys?\" \n\nThe woman shook her head. \"They are for the rest of the apartment, the security door, the bar, the balcony, the mail box. It is a complete set.\" \n\nAlissa nodded. \"You won't need them any longer. Today is the last time, the last time you will ever be at his beck and call. From now on, you work for me. Understand, you will fuck to keep your job. You are a woman who fucks to get ahead, you are a prostitute, not an attorney and after today, you will be my prostitute, not Bickerstaff's. If you have an objection, go now. Get out and don't come back because I assure you, he is done protecting you. Do you understand me?\"\n\nI listened to Alissa and to tell you the truth, the bitch scared me and she was not even talking to me. I expected little Miss Ellen to fold up like a paper doll but she stood there looking between Alissa and me and then she smiled. \n\n\"So? You will use me, as your hooker?\" Ellen asked, her face a smug smirk. \n\nAlissa does not blush but I could tell watching her, the changes in her eyes, the set of her chin as it lifted up a bit, the line of her full lips as they thinned with the tension in her...I knew she was angry. \"You are the one fucking to keep your job, Miss Collier.\" Alissa said. \n\nI knew that was the wrong thing to say even before the last word rattled past my ears like a crossbow bolt. \n\n\"Oh really? And how are you keeping your job, Mrs. Honeywell? Fucking, I say. You have managed to get someone between your legs and it has gotten you a bigger office.\" Ellen glanced at me. She sniffed but not at me this time. \"This is the one? The one who fucks you when he likes so you can be a partner and order the rest of us around?\" \n\nAlissa leaned across the wide desk and with a great sweep of her strong arm, slapped the little woman across the face. Hard. \n\nEllen bucked under the blow and then smiled. \"You are just like him. Brutal and unwilling to face the truth. We are all whores, all on our knees with a cock jammed past our teeth. The difference between you and me is that I don't care and you like to act like you won't fuck to get what you want!\" \n\nAlissa hit her again. \n\nI have to admit I sort of liked this confrontation. Alissa Honeywell was furious. She was about to backhand the woman which would surely have left an ugly mark, one no one could miss so I stepped behind Ellen, slipping an arm around her slender waist and pulled her out of harm's way. Alissa stopped her blow and glared at the woman. Her eyes shifted to me and as suddenly as the anger had blown up in her, it vanished. \n\nEllen was panting. Her body was tense against me, her slim hips pressed back against me and the motion in her body, grinding her ass up at my crotch aroused me so in a moment, she felt my cock harden against her ass and the small of her lean back. She groaned and tipped back against me. \n\n\"I think you owe Mrs. Honeywell an apology.\" I said softly. \n\nEllen shivered. \"Why? Because I spoke truth to power?\"\n\n\"Why is not your concern. Do you want Bickerstaff mounting you for the rest of your professional career here? Or at least till he tires of you and leaves you on your own?\" \n\nA silence followed then, \"I apologize.\" The woman pressed against my cock whispered. She adjusted fast. \n\n\"No. I don't mean words. Mrs. Honeywell, please remove your skirt and panties. I think Ellen here would like to eat you to a very nice orgasm.\" I felt lightheaded, knowing I was playing in a whole different neighborhood, far beyond a covey of MILF's lusting for young gun cock. This demand was an obtrusive gamble. \n\nFor a moment, Alissa stared at me but then she seemed to become aware of the situation. Ellen had described it perfectly. Slowly, deliberately, the black woman unzipped her skirt and shimmied it off her hips and down her legs. Her panties followed. \"Where.\" She asked, her voice raspy and low. \n\n\"The desk.\" I said. \"Ellen, dear, have you eaten a woman to orgasm before?\" \n\nShe twisted against my restraining arm to look at me, succeeding in turning to look me in the eye. \"Of course.\" She had the good grace to blush then. She twisted back to face Alissa who had hitched her rump onto the desk and was laying back onto it. The black woman's legs parted and she was still waiting. I released Ellen. \n\n\"Make her come.\" I said. \n\nEllen did not move. \"Or what?\" She asked, without turning to face me. \n\n\"Or I won't ever fuck you.\" I said, intoxicated by the power of this moment, the control I had over this woman because I controlled Alissa. \"I'll be you and Bickerstaff till...\" I stalled. I had a fleeting flash of D. Debra and understood that I could try to gain that control of her but had the curious thought that I liked her remoteness, her distance and our relationship just as it was. Using her, I could discover so much about how women like Laura and Alissa and, apparently, this little pixie Ellen liked to be used. ",
        "I waited. Ellen did not move. I instinctively knew that if I spoke again I would lose her. So I waited. Alissa, to her credit, lay supine on the desk, her legs open, her body heaving from the passion rushing through her. \n\nFinally, after what seemed like an eternity, Ellen moved. She went between Alissa's legs and licked extravagantly up the black woman's cleft, making Alissa groan and writhe. Then the little woman fastened her mouth to Alissa's pussy and with one small hand stimulated her clit. Alissa moaned and her back arched, pressing her pussy against the little woman. Ellen rose up as the black woman's hips surged up at her and then Alissa grunted and bucked, grunted and bucked. The orgasm arrived in a violent flash, wracking Alissa as Ellen licked and sucked and kissed her pussy. Alissa moaned and her head turned far to her right, pressing her cheek against the desk while her body responded to the woman. \n\nI think Ellen would have eaten Alissa till one or the other of them fainted but I put my hands on her hips and pulled her backwards. She resisted but finally surrendered and she let me pull her from between Alissa's legs. Alissa exhaled with a deep groan and lay draped across her desk, twitching. \n\n\"That's enough, Ms. Collier.\" I whispered. \"I think that is enough.\" \n\nThe little woman straightened and then turned to face me, leaving my hands on her waist. Her face was smeared, glistening with the fluid she had extracted from Alissa. She just watched me, waiting. She licked her lips, slathering them with her tongue, tasting the last of Alissa on her lips. I moved carefully around her and picked up Alissa's panties. I held them before Ellen. \n\n\"Clean off your face. Call Bickerstaff and tell him that you left your keys in the office and have him meet you in...is there a cafe or restaurant near the condo where he usually takes you?\" \n\nEllen nodded. \"The Narrow Avenue\" she said. \n\n\"Fine, the Narrow Avenue then. Call him at about two-thirty. Be there but be sure he does not leave and you do not leave before I arrive. If you comply I think I can extract you from his clutches,\" I hesitated, \"if, if that is what you want.\" I was not asking exactly but I did want confirmation. \n\nEllen nodded, her serious eyes locked with mine. \n\nI nodded nearly in concert with her. \"You understand that you...you have established that you are willing to fuck to get what you want, right?\"\n\n\"So has she.\" Ellen muttered, her eyes flicking behind me to Alissa still languidly laying on the desk. \n\n\"Not your concern. My point is that to escape, you will need to accommodate someone else.\" \n\n\"Like you, boy?\" She spat. \n\nI felt Alissa rouse, like a change in air pressure on my back. I nodded. \"Of course. Did you think this was not about that? But in the long run, it may be someone else, someone I surrender you to.\" I could see that did not sit well with the little woman. She flinched but bit her lip once and then nodded. \n\n\"You aren't as fat as Bickerstaff.\"\n\nI waited. Behind me I heard Alissa rustling as she roused and sat up, finally standing behind me and putting her hands on my shoulders. \n\n\"Thank you.\" She whispered. \n\nI could not tell if she was talking to me or Ms. Collier. Ellen's eyes flicked past me and then back to me. \"Can I go now?\" She asked. \"I need to change. I have a school girl outfit...\"\n\n\"No. Dress like a woman, like the professional woman you are...whatever profession that turns out to be.\"\n\nEllen's cheeks flushed scarlet and her full lips tightened into two tight lines. She said nothing but turned to leave the office. \n\nI put a hand out and grasped her slender shoulder. \"Wait. When you go to the, what was it? The Narrow Avenue? Sit towards the back with your back to the door, make sure he is facing the door and stay there till I arrive.\"\n\nEllen did not face me but spoke facing the door. \"How am I supposed to do that?\"\n\n\"How do you get him to do anything else?\"\n\n\"Do you really want to know?\" \n\n\"Use that, that skill.\" I chuckled. \"I am sure you are more capable of getting that man to do what you want than the rest of us are.\" My hand was tingling with the contact with her body, as though she vibrated under my light touch. It was like I felt her clear up to my elbow, an electric presence that caught my breath and made it hurt to speak. \n\nShe left us. \n\nAlissa slipped her arms around me and hugged her lush body against my back. \"That was wonderful, Sonny. God, it was so exciting having you...you do me with her watching. It was like I felt her eyes on me, stroking my body while you were inside me.\" She shuddered. \"It has been too long. I missed you, Sonny. I, I like...\" she stuttered to a stop. \"I like how you treat me.\" She said finally. Her hands splayed on my chest, her fingers spread wide. She pulled me back against her chest, rubbing her breasts against my back.\n\nI liked it. A lot. But I had something else on my mind. \"So what is the situation with the Bickerstaff Missus? Has her role in her husband's professional future been outlined for her?\" \n\nAlissa released me and moved back to her office chair. I turned to face her and then sat down, waiting for her reply.\n\n\"What do you have in mind, Sonny?\" \n\n\"Does she know? That her husband has to offer her up, you know, to be fucked, in order to keep his partnership?\" \n\n\"It isn't exactly like that...\" Alissa began but I lifted a hand and silenced her. Her eyes glittered darkly, something liquid and intense in them.\n\n\"Isn't it? I thought Sid was completely clear...\"\n\n\"He was. He was.\"\n\n\"Can you get her here? Now?\" I had another thought. \"You promise she is...fuckable? I mean, she is not some ugly croon?\" \n\n\"No. Like Kline she is a second wife and younger, much younger than Bickerstaff. A classic trophy wife.\"\n\n\"Is that your opinion or does she have the T-shirt?\" I asked. \n\nAlissa almost smiled but my meaning apparently overlaid the humor. \"She knows the score. We have the prenupt on file. It is generous enough to suggest she is not stupid or blindly in love with the man.\" \n\nI nodded. \"Get her.\" \n\nAlissa dialed her desk phone and left it on speaker. \n\n\"Hello, this is Dannielle?\" The sultry voice had an accent, eastern European perhaps. \n\n\"Mrs. Bickerstaff, this is Alissa Honeywell, at Peppers, Bickerstaff and Kline.\" \n\n\"Yes. I know who you are, Alissa. So nice to hear from you. Happy Holidays. What can I do for you?\" \n\nAlissa glanced over at me but I did not respond to the look. \"Do you think you could come to the office?\"\n\n\"What? Now?\" \n\n\"If it would not be too much trouble?\"\n\n\"I, well, I was in the middle of something but I could...I suppose.\" \n\n\"I would very much appreciate it. I think you would find it to your benefit.\"\n\n\"Is something wrong?\" The woman asked, her voice shivering. \n\n\"Not yet. Not really but there is something worth discussing, just to clear up a confusion we have encountered here. I don't mean to alarm you but I have some questions about your prenuptial agreement with Raymond. He is not here and not likely to return so I thought...this might be a nice time for you and I to talk.\" \n\nSilence. \n\nAlissa glanced at me, her eyes somber. She licked her lips. \n\n\"Yes. Okay. I'll be there in twenty minutes or shortly thereafter. Will, will this take long?\" \n\nAlissa raised her eyebrows at me. I nodded several times.\n\n\"Mrs. Bickerstaff, I think the time you devote to this matter would be time well spent.\" \n\n\"I see. Yes, okay. I'll be there directly.\" She clicked off. \n\n\"What do you have in mind, Sonny?\" \n\n\"She better be worth a fuck or two, Alissa, or it will be summer before you fuck again. I'll lock you in a chastity belt myself.\" I almost grinned but decided this was no time to be funning around. This was serious shit. Someone tapped on the door. \n\n\"Yes?\" Alissa said. \n\nThe door and the blond abundance that was Clara Swearington appeared, squeezing into the room. Her breasts made the room seem much smaller. God, what a woman!\n\n\"Oh, my. Mr. Duncan. I did not know you were here.\" Clara twittered, on hand smoothing down her side, hip and thigh as though drying it off on the baby-blue and white knit dress while the other touched her bleached-blond hair, moving it around without purpose. \n\n\"Ms. Swearington.\" I said. \n\n\"That will be all Clara. Is everyone else gone?\" \n\nThe blond nodded. Her eyes never left my crotch. She kept licking her ruby lips, her pink tongue appearing and disappearing over and over again, like she was tasting the air around us. \n\nMy cock stirred and rose up to greet her and, uncomfortable as it was, I let it. \n\nClara's eyes glittered and she smiled widely, fully aware of the little compliment I was paying her presence. \n\n\"You can go, Clara. Lock up and turn off all the lights but leave one of the front doors open. I am expecting someone.\" \n\n\"Looks to me like someone is already here.\" Clara said, a devilish smile on her scarlet lips. \n\n\"That will be all, Ms. Swearington.\" \n\n\"Toodleloo, Sonny.\" The blond said and then sauntered out of the office. \n\nI looked at Alissa and thought I caught the merest swish of jealously in her expression but it was gone in a flash. \n\n\"What do you have in mind?\" \n\nI just nodded and left her office in search of the toilet. I wandered the dim halls of the office, finding Kline's office. He had a bar in it but the door was locked, I could see it through the side glass. I got the keys from Alissa. I told her to ignore me when Mrs. Bickerstaff arrived. She was to explain the \"agreement\" between Bickerstaff and the firm. I explicitly suggested that Alissa should outline, in detail her association and connection to Mr. Kingston and how she came by that connection. \n\nand fixed three stout drinks. I was puzzling over how to carry them when I hear the front door open. I carried two of the bourbon rocks back to Alissa's office. She was not there. I set them on her desk and returned for the other. I could hear her voice in the front office, approaching as I skirted them, going around the other direction to Kline's office. I got my drink and closed and locked the door, intentionally leaving the cap off the bourbon. What's his was apparently mine to share.\n\nAlissa's door was closed and when I opened it, both women turned to see who was arriving. Mrs. Bickerstaff was a striking woman of with brown hair, curled into a 1960's flip. Her lips were generously smeared with bright red lipstick. Her skin was translucently white. Her eyes were walnut brown. They had a blunted look, like she was once whole and complete but now spent her time seeking for some long lost part of herself. Or maybe that was ol' melodramatic me, anticipating the rest of her afternoon for her. \n\nI pushed open the door and stepped into the room, clicking the door closed behind me. Mrs. Bickerstaff regarded me as though she were sitting alone on a barstool, drink in hand, her lidded eyes resting on me like butterflies. The tumbler showed a generous smear of her lipstick and had barely any of the dark amber liquid in it. Alissa's was untouched. I moved behind her to take a seat against the far wall so I could see both women at once. I sat and crossed my legs in the classic indolent male pose. I took a pull on the bourbon and felt the flame in my empty stomach. The woman was a vision and the concept that I was going to be between her full legs fired me more than the warmth the bourbon ignited in me. My whole body quivered with sexual adrenaline. This woman had the appearance that made me want her. That vulnerable look in her eyes and the hesitant manner assured me that I could have her. It felt like confidence but perhaps it was just the thrill of being in the presence of a new fantasy. \n\n\"As I was saying, Mrs. Bickerstaff, I understand you have a prenupt and I thought I should explain some changes to the situation.\" Alissa continued, regarding the woman's turned head till it turned back to face her. The woman's eyes on me seemed sensuous with surrender; utterly pliant to my presence. Alissa proceeded to sketch the basics of the agreement. \n\nPart of the prenuptial agreement apparently involved a valuation of Bickerstaff's partnership at the law firm. Alissa explained that he had come under some scrutiny and that valuation was about to change, in danger of changing due to his misappropriation of funds from the firm. \n\nAlissa then detoured into her truncated and spindled account of how she came to be so valuable to the firm, sanitizing it. Midway through it I cleared my throat and she hesitated. She glanced at me then proceeded and I cleared my throat again. She stopped entirely, looking over at me, her face a beautiful vision of a woman caught in flagrante delicto and vulnerable because of it. \n\n\"I think what Mrs. Honeywell means to say, Mrs. Bickerstaff, is that she would have fucked Mr. Kingston but then she would not have been eligible for doing business with him. He never does business with women because, usually, they do not have anyone for him to fuck, as a sign of good faith in the agreement. He is hung like a horse and it involves quite a commitment to fuck him. One some women would gladly endeavor to do. I, I had a woman of my acquaintance, a MILF, if you will, who proved both eager and able to take his cock and at my behest, and who did, for Mrs. Honeywell's sake. On the strength of that fuck, Mr. Kingston agreed to provide Mrs. Honeywell with a sizable commitment and professional advantage, one she would never have been party to had it not been for my, uh, considerable contribution to the situation. Isn't that right, Alissa?\" \n\nAlissa immediately nodded. \"Of course, Sonny.\" She turned her eyes to Mrs. Bickerstaff. \"Dannielle, you must understand that this arrangement is worth millions of dollars to the firm. Your husband is part of that.\"\n\n\"You are aware that Mr. Kline has been boning Ms. Swearington?\" I asked casually.\n\n\"Mrs. Swearington?\" The woman turned to look at me. She squeezed her eyes closed and opened them, as though wondering if I would disappear if she did. \n\nI nodded. \"The blond receptionist?\" Noting that Mrs. Bickerstaff apparently thought the blond receptionist was married and wondered if I knew differently correctly.\n\n\"Oh, of course.\" She smiled weakly. \"She is very nice.\" \n\n\"Indeed she is. Now, now she is mine and Kline must not touch her any longer. I am afraid your husband is in much the same situation.\"\n\nHer eyes opened wide and she looked very oriental despite her white skin. \"You mean...?\" \n\nI nodded. \"Yes, Raymond has been fucking around on you. Did you know that?\" \n\nDannielle turned back to face Alissa, she bowed her head. \"Does it matter?\" \n\n\"As a matter of fact it does,\" Alissa began. She looked over at me and I gave her no reaction so she continued. \"After your husband and that worm Kline tried to snake the Kingston business out from under me, they were instructed that they were to leave off their mistresses, and to provide several women for Mr. Duncan here, to have at his leisure as he wished.\"\n\n\"Excuse me?\" The woman turned her head, keeping her body rigidly facing Alissa, and looked at me. \n\nI nodded. \"They were instructed that I was to fuck their women three or four each, in order to secure their position in the firm and further, they were not to touch any of said women. Has your husband been fucking you?\" \n\nThe woman swallowed, hard. She shook her head. \n\n\"If he is indeed continuing with his mistress, then he puts the value of this prenuptial agreement into serious jeopardy. That means that it would become nearly worthless to you, since it is heavily dependent on his position in this firm.\" \n\nMrs. Bickerstaff turned back to Alissa. \"What do you mean?\" \n\nAlissa smiled. \"Peppers may be old as dirt and on oxygen but his mind is clear as yours or mine. If it comes to losing the Kingston business or dumping your husband or Kline, which do you think he will do?\" \n\nThe woman gulped hard again. \"I see. What do I have to do?\" \n\n\"Mr. Duncan here, he owns me and he wants you.\" Alissa said, unable to keep a teeny tiny little sneer out of her voice. \"What he wants with you, I cannot say but, whatever it is, it is part of the price your husband must pay to retain his position in this firm and thus, the value of your claims on him. I must report to Mr. Kingston on the payment of this debt by Bickerstaff and Kline.\" \n\nDannielle turned now to face me, pointing one breast at me. She was one of those woman who was too small in her torso to correctly carry the large breasts mounted there. One pointed to each side but where both healthy and finely shaped, if the bra was any indication. As I watched, something passed over her face and she shook her head violently. \n\n\"I cannot accept this.\" She turned to Mrs. Honeywell. \"Alissa, I don't know what you are about but I don't believe you. My husband has no mistresses and no one would dare to use sex in this fashion. I do not believe you or that this, this boy has any claim on you whatsoever!\" Her voice quivered but her eyes glistened as though she were about to weep. \"I think Raymond put you up to this to humiliate me. Where is he?\" When she went silent, her perfect lips worked as though she were trying to speak but had lost all the words. \n\nI stood up immediately. I went to the door and locked it. I saw a flash of sky blue and wondered what I was seeing. I turned back. Locking the door was a dramatic gesture and nothing more. \"Stand up, Alissa. I believe this woman has called into question our account of the circumstances.\" \n\nAlissa stood up immediately and unzipped both sides of her skirt again. As she pulled it down off her hips she muttered, \"This is the third time I have been out of this skirt today. I should have just left it off.\" \n\nI almost laughed but she was standing up. The garters were still in placed. Her pussy glistened, dewy and full. \"The jacket and blouse. I want you totally nude, this time.\" I said softly. \n\nAlissa visibly shivered. \n\n\"Oh God, Alissa, no. Please, don't do this. No.\" Mrs. Bickerstaff gripped the arms of the office chair she was sitting in, in a pose that made her appear about ready to stand and flee. She did not. \n\nAlissa did not say anything but picked up her skirt and lay it on her office chair. The jacket followed. She unbuttoned the white blouse, her dark skin appearing stark and black against the white. When she shrugged out of it, her great breasts waving before her, Dannielle Bickerstaff moaned. The woman cocked her head back and looked up at me, her eyes still glassy. \n\n\"Please, don't do this.\" She whispered. \"Don't humiliate her.\" Her voice whispered unconvincingly. \n\n\"Your husband has agreed to provide you to me.\" I said, feeling strangely energized by this woman's presence. Her eyes blinked but she kept them on me. \"I will not take what is not freely offered but if you do not believe the substance of what Mrs. Honeywell has discussed with you, I think a demonstration would be persuasive where mere words have been insufficient.\" \n\nDannielle shuddered then. I turned to look at the black woman. Alissa's bra fell off her shoulders and she deposited it on the pile of clothing on her chair. She was nude but for the garter belt and stockings. She thought I approved of her leaving them in place and she was right. \n\nDannielle responded to my eyes on Alissa by turning to look at the black woman. She squeaked when she saw Alissa' breasts billowing before her. \"What are you going to do to her?\" She asked. When I did not answer, she turned back to look at me. \"What are you going to do to her?\" She asked, her lips trembling. \n\n\"What am I going to do to her?\" I repeated, not moving but fixing my eyes on her. \n\nHer big eyes blinked. Her lips pursed. She was breathing heavily in the closeness of the office. \"You won't, hurt her will you?\" Her voice was peculiar, strident and pleading at the same time. ",
        "I saw something in her eyes or heard something in her voice and she groaned as though she were exposed and knew it. I moved around her and knelt before her. She wore a conservative gray coat, a long brown skirt and a fine-weave sweater of some sort, that clung to her breasts. The coat was off her shoulders as though she wanted to show us her tits. She succeeded. She wore flats. I put a hand on her knee and ran it gently down her calf. She shivered as my hand ran down her hose encased leg. At her foot, I lifted her leg and carefully removed the flat shoe. \n\n\"Oh god.\" Alissa said. \n\nAlissa always seemed to know what I was doing. She turned and lay down, face down on the desk. She put her hands behind her and unhooked the garter straps on each side of her ass, leaving two of each set of six dangling down her thighs. Then she stretched and arched her ass. \"I am ready, Mr. Duncan.\" Her voice rattled in her throat, like ice covered twigs on a window pane. \n\nI stood and slapped the shoe hard against my palm. The sole was soft leather. The sound made Mrs. Bickerstaff flinch, as though I had struck her and not my own hand. She looked up at me. \n\n\"What are going to to do to her?\" \n\nI reached out and with my left hand smoothed the backs my fingers across her delicate cheek. \"Not your concern, Mrs. Bickerstaff. Just sit and watch. Mrs. Honeywell enjoys an audience, don't you Mrs. Honeywell?\" \n\nAlissa lifted her head and looked at me from over her outstretched arm. \"I am yours, Sonny.\" Her voice rattled again. Her face disappeared between her elbows. \n\nWhat a perfect response. Then I had a terrible flash of D. Debra Hamilton and I felt like I left my own body. For a moment, I felt the useful man in her capable control even while I stepped behind Alissa's bent form. Once again I felt the sensation of being both the hammer and the nail. It instructed me as to how to use Alissa to create her greatest pleasure. \n\nI struck Alissa's ass with real force. The groan from her was heartfelt and deep, like a cracking oak after a horrible storm. The second stroke was louder and harder. Her flesh shook under the shoe. \n\n\"Oh my god.\" Dannielle whispered. \"Please, no more. I cannot bear to see this.\" Her objection was flimsy and weak, her glistening brown eyes were transfixed on the prone woman stretched on the desk before her. \"Please, I, I will do whatever you want.\" \n\nI struck Alissa again and again. \"Anything? Really, Mrs. Bickerstaff?\" I struck Alissa's ass again, hard. It lifted and dropped, pulsing while I struck her several more times. Alissa was panting now, her breath wheezing as nearly the only sound in the room. Two or three more blows and she lifted her head and moaned. \n\n\"Oh god, Sonny, oh my loving lord!\" She grunted as the shoe fell again. \n\n\"Oh please, don't, don't make me watch this.\" Mrs. Bickerstaff whispered. She jerked as her shoe hit the black ass again. Alissa's body shifted and her hips rose then hammered down in the perfect impression of copulation. \n\nMrs. Bickerstaff's gaze remained tangled in the scene unfolding within her arm's reach, even while her torso craned backwards as though trying to focus bi-focals she did not wear. \"Oh, my goodness! Oh, she, she...I...\" \n\nI struck Alissa again and the black woman keened and her hips began to rise and fall steadily now. Several more strokes and she was whining and her body was shaking. I struck her twice more on each cheek and casually held the shoe before the white woman's face. She stared at it as though it were a strange artifact of unknown value. \n\nI did not move. Dannielle finally looked from her shoe before her face up to me. \n\n\"Take it.\" I said. \n\nShe did, licking her lips as she did, holding it with both hands and clutching it to her shoulder, like it was a doll. I slowly unbuckled my belt and let my trousers open, all the while holding her gaze with mine. I pulled down my briefs, my hard cock appeared, stark and ready. Mrs. Bickerstaff licked her lips but her eyes did not move, though they welled and a tear ran down one, plumb cheek. \n\nI moved in behind Alissa. The black woman arched her back and her ass lifted and parted. I entered her hard and fast, slamming hard and deep in one violent stroke. \n\nAlissa screamed as I bottomed out in her smooth, very fluid pussy. Her body bucked and she screamed again but it throttled down into a gurgling. I pulled back and hammered into her, grinding deep into her till her ass cheeks were bunched between us. I gripped her by the waist and proceeded to pummel her. Each stroke rammed her forward onto the desk so as I pulled out of her squelching body, I had to pulled her back or risking damaging her on the edge of the desk. After a dozen or so strokes, Alissa bucked through another small orgasm, then as I pulled free of her clasping body, she moaned, pleading. \n\n\"Oh Sonny, no, no.\" \n\n\"Stand.\" I hissed. My breath ragged and tight in my chest. Something about this woman watching us wrenched me tense. \n\nAlissa struggled to unfold herself from the desk. She turned. I helped her sit on the desk. She tipped back onto her hands, her still sheathed legs rose and bent, widening to welcome me back into her body. I put my hands under her knees and pulled her open and wide. I bent my knees till my cock touched her pussy and then I rammed her full once more. \n\n\"Oh sweet Christ! Oh my fucking god, Sonny. Fuck me!\" Alissa growled as I penetrated her body once more. I lifted her legs and she tipped back further, her head fell backwards over her shoulders, exposing her neck and projecting her great breasts up towards me. Holding her by the thighs, my arms underneath her knees, I resumed fucking her. I pounded into her pussy till she groaned and her hips pulsed up at me. She tried to lay back but I grabbed her shoulders to keep her upright. This lifted her legs much higher, resting on my arms as I held her upright by the shoulders. I widened my arms and rammed her with my cock. \n\nAlissa screamed and bucked into an incredible orgasm, her arms planted behind her, her legs high, close to her shoulders. I lowered my hands to her ass, letting her legs down. I pulled her to the edge of the desk. She struggled to lean into me, pressing her tits against me. I cinched us together and held us tightly. She was coming constantly now, her body finally responding fully to my usage of her till now. Or perhaps the brown eyes watching us affected her like it was affecting me. I wanted dear Mrs. Bickerstaff and I felt this to be my interview. \n\nWhen Alissa was calm, I backed my cock out of her. Her legs lowered to the floor and she sat with her shoulders hunched and her eyes on the floor between us or on my cock. \n\n\"I think,\" I panted, \"Clara stayed. Go get her. I want Mrs. Bickerstaff to know for certain what we have said is the truth.\" \n\nAlissa stood and staggered to the door, yanking twice on it before her brain grasped that it was locked. She twisted the lock and staggered out, nearly nude, into the chilly outer office. \n\nI turned to look at Mrs. Bickerstaff. Now, my pants were around my ankles, my cock was shiny with Honeywell cum and my heart hammered in my chest. I love cardio. \n\nMrs Bickerstaff stared at my cock. \n\n\"Mrs. Bickerstaff,\" I began but waited till her eyes shifted, with some apparent effort, up to meet mine, \"we are going to go meet your husband. I have sent someone to find him and arrange it. To satisfy my understanding with Mr. Kingston, he must agree to surrender you to me. It will be completely up to him. If you go with me, you agree to whatever he decides to do with you. This is your chance to protect your investment in him. If you ignore it, ignore me, he will be out, out of this firm and likely disbarred and he, he will have less money than I have. Embezzling funds is a charge he would never recover from in his profession. So...\" I heard the clack, clack, clack of Clara Swearington's five inch heels somewhere out in the office and then the sounds disappeared. I knew she was coming and I would be soon. I was so ready. \n\n\"By the time I come, you need to decide, go with me and have some expectation of keeping the lifestyle you have or skip it and risk losing everything.\" I had an idea but I did not know if it would work. I was curious to try it. \n\nThe door opened behind me. \n\n\"You called, Mr. Duncan?\" Clara Swearington's voice chirped behind me. \n\nI turned and showed her my cock. I was so gratified that she did not hesitate. The blond woman got immediately to her knees and opened her mouth. Alissa's state of undress surely tipped her off that we were not shuffling papers and she would not be taking dictation. I moved closer and bent a little to touch my cock head to her lips. Out came her long tongue and she licked my cock clean, no hands. She then sucked on the end and rose up, taking me deep into her mouth and then into her throat. \n\nI was right. I was ready. The orgasm boiled up out of me as soon as her lips closed on my cock. She grunted and swallowed over and over again, the action massaging my cock as I pumped over and over into her mouth. Her hands never touched me. \n\nAlissa was trapped behind her, watching her suck me empty. \n\n\"Oh my eyes.\" Dannielle whispered. \"I have never seen a woman, a man, a woman do that, like that.\" Her voice was tremulous. \n\nI pulled my cock free of Clara's mouth, she slurped the whole length and smacked her lips ostentatiously as they left the end of my cock. \"That is how you suck cock, Mrs. Bickerstaff. Do that and Raymond will quit catting around on you, I promise.\" Clara tittered behind her words, pleased with herself for some reason.\n\nI looked at Mrs. Bickerstaff but I don't think the words penetrated the daze she was in. Her eyes were not clear, shimmering with the liquid in them. I pulled up my briefs and covered my nice, clean cock. The image of this woman, nude, kept my cock hard so I pulled up my pants up very carefully, zipping them up with caution. Clara remained kneeling on the floor, sitting on her feet, her heels laying beside her. \n\n\"What time is it?\" I asked no one in particular. \n\n\"Almost two.\" Alissa said. She stepped around Clara, went behind her desk and began to dress. \n\nWhen I was all tucked up, I picked up my coat. \"Happy New Year.\" I said. Clara looked up at me, her eyes glittering, all hope and invitation. \"Mrs. Bickerstaff?\" \n\n\"Where are we going?\" She asked unsteadily. Her voice was thick but strong. \n\nI had my answer. I left Ms. Swearington on the floor, disappointed and Alissa half-dressed. Neither spoke as I left with Dannielle Bickerstaff close behind. She had taken a taxi so she rode with me. I actually had to ask directions from her and she helped orient me but I eventually found parking in the light traffic. She was not familiar with The Narrow Avenue so we searched for it together. I could have used my phone but the woman's anxiety infused me and numbed my brain\u2014that's my story and I'm sticking to it. The idea of declothing this woman tantalized and disturbed me. We found the place and on the sidewalk she took my hand. \n\n\"What are you going to do?\" She asked, her eyes still limpid though the cold likely caused it now. \n\n\"I am going to give your husband an option.\" I said. \"You have made your choice. Now it is up to him.\" \n\nShe licked her lips, staring intently into my eyes. \"Kiss me. I want him to see my lipstick is smeared.\" Her voice was steady, assured. \n\nI did, touching her lips with mine. When I straightened and opened my eyes, she shook her head. \n\n\"No. Not like that. Like you want me.\" \n\nShe seemed unaware that I did want her. I decided to clarify her status. I dropped her hand, slipped an arm around her lily wasp waist and gripped her shapely ass, splaying my fingers over its arch. With the other hand I cupped the back of her head and kissed her like I wanted her. Her whole body responded. The light flow of people swirled around us, like we were a reef in the ocean. When the kiss ended, my cock was reborn and she was panting. \"Like that?\" I asked. Her mouth had not opened so it was just the feel of her lips on mine that remained in my mind. She nodded slightly, wiping the back of her hands against her mouth. The lipstick was well smeared. With my arm still about her waist, I walked us into The Narrow Avenue. \n\nIt was a narrow room with a bar before the door and a line of tables against the opposite wall. Beyond the bar was space for a couple tables and two booths. In the farthest booth, I glimpsed Raymond Bickerstaff just before he saw his wife, my arm securely around her. He was so startled the look on his face had not changed by the time we arrived at the booth. I released Dannielle and scooted in next to Ellen Collier. Dannielle stood beside the table staring at Ellen. \n\nI gestured to the other seat, \"Sit down, Mrs. Bickerstaff.\" I said softly. That snapped her out of the reverie and she did, with Raymond scuttling over to the other end of the bench seat. She looked back and forth between Ellen and me. \n\n\"Who is this?\" Dannielle said, fixing her eyes finally on Ellen. \n\nI looked at Bickerstaff. \"Care to make introductions?\" His expression did not change and he said nothing. \"No? Mrs. Bickerstaff, this is Ellen Collier, one of Raymond's mistresses, isn't that right, Mr. Bickerstaff?\" \n\nHis eyes blinked several times and then he nodded, one sharp motion. \n\nA waitress appeared and I ordered spinach dip, then thought better of the garlic and just got a soda. I was hungry though so I added fries. When the waitress was gone I looked at Bickerstaff. \"Well, isn't this cozy? Bickerstaff, you have gotten yourself into a bit of a bind.\" I pulled the keys I had gotten from Ellen from my pocket and dropped then onto the table with a rattle. \"See? They know about the apartment you and Kline have been using to screw your other women. Oh, if you want out of this with your skin, you need to keep Kline out of the loop or he will get your second chance and you, well, you'll just be toast, right? Right?\" I knocked on the table. \"Hello? Am I getting through? Are you reading me Major Tom?\" \n\nFinally the black man nodded. \"I hear you.\" His voice was high, tinny and tense as a virgin sow. \n\n\"So. We are all here. I have discussed the situation with your wife here, and so I think all we need is your buy in and we can put this matter to rest.\"\n\n\"My buy in?\" Bickerstaff mumbled. \n\n\"You, well, not you but Kline volunteered you to agree to the terms of getting the Kingston business. That was that you would provide me with your personal women. Well, not me exactly but Mr. Kingston and I am his representative in this situation. In exchange, Alissa Honeywell would not get rid of you and Peppers would get the Kingston business, right? So here we are with two of your women.\" I grinned with as much charm as I could with the knot in my throat. \"So? Which will it be? Ellen or Dannielle? One of these must be fucked today, in your apartment. I have not been there yet but I expect it is nice. You strike me as having very good taste, if Ellen is any indication. So? What will it be?\" \n\n\"What will what be?\" Bickerstaff's voice was a little stronger. \n\n\"Which of these two women is going to leave with me? You know, to try out your toy box and what not, in the apartment I mean? I hear you have handcuffs and the like. I think Mrs. Bickerstaff would be very attractive, nude and cuffed on a bed, waiting to be fucked.\" \n\n\"You would not dare...!\" Bickerstaff growled. \n\nI nodded. \"You are right, not unless you tell her to. It must be your choice. You have to decide. These are both women you are a, having relations with. Am I being too crude for your delicate sensibilities?\" I barely hesitated. \"One of them is going to introduce me to your apartment. Oh, by the way, I need your keys.\" I rattled the keys on the table \"Fraud or maybe its actually embezzlement? You're the lawyer, I bet you know which. Anyway, if you ever use that apartment again, you will be indicted. I am pretty sure Alissa has all she needs to put you behind bars or at least off the bar and no one would question forfeiting your whole share of the practice in exchange for staying out of jail.\" I shrugged and then I did stall, turning my eyes to check Dannielle's reaction to my words. After a few moments I resumed. \"It is up to you, if you want to keep the keys, we can have the locks changed after you are arrested.\" I rattled the keys again. \n\nBickerstaff was glaring at me. He was not a pretty man and for the life of me I could not imagine why women would...oh, right. Money and power are just as sexy as a pretty face, aren't they? What was I thinking? \n\nBickerstaff tipped over like a falling tower and fished keys out of his pocket and tossed them onto the table. I nodded and pocketed them. \"This the only set? No, I am sure Kline has a few. Be sure to let Kline know the charade is up and he needs to bring us all his keys, I mean Alissa by 'we', there. Second thought, I think we'll handled the introduction of Mr. Kline to his new circumstances and I don't just mean a new office. I think Alissa will want some details so you can sign the apartment over to her, not the firm mind you, her. Part of the settlement to keep you out of jail and to get her on as senior partner. She'll work out the details but you will need to get her those details before the end of the year, which is, oh pretty soon. Sunday night, right?\" \n\nI was enjoying myself entirely too much. \n\n\"So the last thing is to decide which woman you want me to fuck now. Wife or mistress?\" I waited but not long. \"Speak up, Raymond. We are all waiting and I have to tell you, the tension is killing me.\" \n\nBickerstaff mumbled something. \n\n\"I beg your pardon? I did not hear.\" \n\n\"Take her. Ellen.\" \n\nI nodded with a grim smile and took hold of Ellen's hand and pulled her a little closer. I detected no small eagerness in her as she shifted her lithe body against mine. If this worked out right, she'd be a shit load happier even than now. \"Ellen it is.\" \n\n\"Fuck this. I have to pee.\" Ellen said. She looked up at me and waited, expecting me to stand up and let her out. I did not move. \"I'll come back. I'll fuck you.\" \n\n\"I know you will.\" I returned. \"Take off your panties, Ms. Collier. I think you need to demonstrate your willingness to fulfill your part of this arrangement.\"\n\n\"My part? What are you talking about. Forget about it. I have to pee.\" She stood up and without any difficulty clambered over me. She took particular care to press her ass into my face as she walked over me, stepping on the bench seat of the booth to get out. People stared. \n\nWhen she was gone, I looked at Mrs. Bickerstaff. \"Too bad, Dannielle, I was looking forward to seeing you in the raw and having a bit of you on my tongue. I think you would have enjoyed this whole thing, since your husband has been catting around behind your back, or I guess it was.\" \n\nAt that moment, Dannielle shook her head. \"No. I knew, well, suspected, assumed he was, uh, being with other women. What could I do?\" \n\nI pursed my lips. \"A valid point. Well, I think we are done here. Well, one last thing.\" Bickerstaff's face tightened, more. I grinned. \"You are not to touch any other woman but this one without her permission. You will renegotiate the prenuptial agreement to the effect that any philandering on your part will give grounds for her to liquidate your holdings and convert them to her ownership, separate and distinct from you. And I mean all of them. Alissa, Mrs. Honeywell will represent your wife in this manner which I know must be unusual but you will have to work with that and by 'work with that' I mean you need to avoid turning this situation antagonistic, if you want to stay out of jail, that is. Now, if you want any woman and she agrees and the woman fucks you, that is fine. Of course, Raymond, that makes you somewhat vulnerable if she changes her mind. So your dick is now under her administration. If she wants to fuck you, she will fuck you and you will see she enjoys it. Otherwise the best you can hope for is poverty and the worst is the drive-in, non-stop shopping for a bunch of butt-fucking men you do not know on a first name basis in a penitentiary.\" I grinned a little evilly. \"Mr. Bickerstaff, you and Kline really should not have fucked with Mr. Kingston. He absolutely does not like either of you right now and until I have fucked enough of your women, that is not likely to change.\" The prospect gladdened me and my smile widened. \"So glad you have such good taste in women. ",
        "I turned my attention to Danielle. \"Ma'am, I do not know what the conditions of your marriage to this man were but they have changed. Mr. Kingston and Mr. Peppers are willing to retain him in a diminished capacity, with less authority but they will leave his financial holdings in place, for your sake. And, if the truth be known, for the sake of his ex-wife and daughter, or is it daughters? Whatever. Raymond is now going to reap what he has sown and understand that all plowing is not created equal. Sometimes the furrow will yield a return on investment and sometimes it will turn out to be a net loss.\" I was so proud, using terms from one of my accounting classes. I almost laughed, wondering if my professor would be proud of me, if he would give me extra credit. \n\n\"We really do not want to inconvenience you, or even Raymond for that matter but his behavior is a threat to the firm and potentially embarrassing to Mr. Kingston. And that is an unacceptable risk. If you have not had a say in your life with Raymond, now is your chance. If you don't want it, that is not our concern.\" I turned my eyes to Raymond Bickerstaff. \"If this woman even breathes the slightest hint that she is unhappy with her treatment at your hand, regardless of which one you choose, all of this equanimity is subject to renegotiation. Got it?\" \n\nBickerstaff nodded. \"I get it. I do.\" He turned to Dannielle, \"Honey...\" he began but Ellen interrupted, reappearing beside our table. Bickerstaff fell silent when she arrived. \n\nShe looked at me and I looked at her. Neither of us moved. \n\n\"Are you going to let me in?\" She asked, a tinge of exasperation in her voice. \n\n\"Your panties?\" I responded. \n\nShe looked suddenly frightened. \"I forgot.\" She said. \n\nI grinned rapaciously. She had spirit and this was the moment I bent her to my will or lost her. \"Take them off, Ellen. I asked gently before and you had the chance to comply on your own terms. That moment is gone. Take them off and lay them on the table.\" \n\nShe glared at me, but then her eyes changed. Her chin dropped. It was like I could see her mind toiling over her new condition, finally arriving at the place I had laid out for her. She tossed her little purse over me into the corner. She reached under her little skirt and pulled her panties down her thighs, thence to her knees and then to her ankles. She balanced on one foot and removed them from that free foot and then shifted. When she had them dangling from one hand, gazing defiantly, she held them out over the table. When I did not react, she dropped them in the middle of the table, between Bickerstaff and his wide-eyed wife. \n\n\"Happy?\" She groused. \"You going to let me in or what?\" \n\nI looked passed her at the other people in the diner, the few who had noticed her action. Ellen waited, her eyes remained fixed on mine even while I looked past her at the auditors around us. \n\nFinally she shrugged, her little shoulders seeming to rock her. She tried to stand up and walk over me as before, her ass against my face, which she gave a deliberate bump. I moved her foot to the other side of my legs and then pushed it towards the floor. She slipped astride my lap. I looped an arm around her and pulled her back against my very hard cock. She grunted and leaned forward, trying to move off of my body. I held her in place. With one hand I unbuckled my belt, a loud sound to me but lost in the grumble and clash of the restaurant, I think. I got my cock free and pulled my pants out of the way. Ellen felt it and lifted her ass and moved over my cock. She reached down between her legs and found my cock. She positioned herself over it and settled down onto me. Her body seized and she groaned but then screwed herself harder down onto my cock. As I entered her body I closed my eyes and groaned. With an arm around her still, I could lift her and I did, several times. Each time she released more and more. More of my cock slipped deeper and deeper into her till she was completely pierced and I was rooted in her little body. She sat forward and leaned onto her elbows, grinding her hips down on me, stirring her pussy with my cock. \n\nI situated her skirt so she was covered. I peered out from behind her head. She rolled her hips and I thought I would explode. \"Hold still.\" I grunted. \"You'll get yours.\" I moved my mouth to her ear. \"If you don't make me come inside of you, I promise to eat you till you come.\" \n\nEllen went completely still, staring down at the table, her little shoulders hunched. \n\nI looked at Mr. Bickerstaff. \"You were saying?\" \n\n\"Jesus H. Christ. Really?\" He said, his face tight. \n\n\"Jealous?\" I said equally tightly. The feel of Ellen's body planted on me like this was unbelievably erotic to say nothing of the public situation. Just at that perfect moment, a waitress appeared. \n\n\"Oh my.\" The woman said. \n\nEllen looked up at her, just twisting her head. \"Don't get your panties in a bunch. Lost a bet. We'll go in five minutes. Just bring us a ticket and give it to him.\" She indicated Bickerstaff. \n\nThe waitress nodded and scampered away, leaving the soda and fries. I tried one. They were great. \n\nBickerstaff looked at his wife. \"I choose you, Danny. I want you.\" His voice was a tinny whine. \n\nShe looked at him and before she could speak, I interrupted. Raymond was fucking it up. \n\n\"Dannielle, did you marry this guy just for his money? No one is perfect. The best thing you can do is forgive him and go on. He is going to clean up his act. I can virtually assure you of that.\" I shifted a little in my seat and Ellen groaned. \n\n\"Stop that. I have never been good at tantric sex.\" She lifted her head and\u2014I don't know if she knew something I didn't or if I am just fucking lucky\u2014she looked Dannielle right in the eyes. \"He is inside of me. If he moves, I am going to come and I come loud.\" She slowly bowed her head again, bending impossibly till the top of her head was on the table. Her hips shifted and I thought she was about to get my special delivery but she went still. Then her inner muscles flexed and I again thought I was going to come. My god, but the woman had incredible internal strength and control. \n\nI pulled back and dodged around Ellen's bent back to fix my gaze on Bickerstaff, Raymond. \"You will not ever touch this woman...no wait a minute. Let me do it like this. Ellen, if this man asks you to do something sexual again, anything, you have to call Mrs. Bickerstaff. If it is okay with her, then do whatever you like. Mr. Bickerstaff, can I call you Raymond? Raymond, you absolutely must understand that if this woman squeaks harrassment, you will be done so fast you'll lose everything including your blackness. You'll be white when we're done. Got that? You will no longer manage the associates or anyone including the secretarial staff unless they are bulky guys will cocks the size of rolling pins. Do I make myself clear?\" My voice came out a lot rougher, then I intended but Ellen began massaging my cock with her pussy and it ruined my vocal control. I did not intend to be harsh and cruel to him but I feared anything less and he would mistake mercy for weakness. Honestly, I was free lancing and hoping that Alissa was quick enough on the uptake to go with it when the time came. She'd get a hell of a bonus if she did but she'd have to figure out how to make it legal and keep her own nose clean. \n\nIn the end, it was a great idea. \n\nI looked at Raymond. \"No more fucking the associates. No more mistresses. Nothing. Today, you have touched Ellen for the last time. If anyone fucks Ellen it is going to be me.\" I spoke through gritted teeth. Neither I nor Ellen wanted her full of cum just now. I wanted and unadulterated taste of her. \"Understood?\" \n\nBickerstaff glared for a moment but then finally, nodded his big head.\n\nI gripped Ellen by the waist and lifted her and dropped her down the length of my cock again. She groaned, her head still on the table. \"You.\" I said. \"Are you ready to finish this?\"\n\nShe lifted her head. I could not see her face and I wished I had. Her voice came out liquid passion. \"Yes, oh god, if I don't come soon I am going to rape you right here.\" She sounded serious. \n\n\"What about me? You said, you said you were going to take me!\" Dannielle whispered, her voice still tight. \"You cannot do this!\" \n\nI moved around Ellen's back to look at Dannielle. Something was going on here. I stared at her. She was beautiful in a sensual sort of way, with her long, bare neck and the breasts that pointed out from each other like bristling AA guns. I imagined her nude. \"Your husband chose you. You should be happy.\" \n\nShe looked at Raymond and then back at me. \"He has been fucking around on me and I should be happy?\" Her voice was small and curious. \n\n\"When you put it like that...\" I said. \"I could be wrong.\" I still had an arm looped around Ellen's little body. She was standing on her tiptoes trying to release some of the pressure of my cock inside of her but then she slipped, I guess her legs tired, and she slipped down, crunching her body onto my cock all over again. \n\n\"Oh fuck.\" Ellen grated, her voice ragged with passion. \"Can we, can we move, move this along?\" \n\n\"Go home, Mr. and Mrs. Bickerstaff. Have a Happy New Year. Put this all behind you and start over on Monday. It is a new year. Make a good start.\" I patted Ellen's thigh. \"Up we go.\" I said softly and helped her lift her body off me. Her legs were just about too short to do the job but we finally go her off my cock and my cock out of her. She shuddered, crawling out of the booth to stand shaking beside me. I tucked and buttoned and buckled myself back into shape. \n\n\"Hand me my coat.\" Ellen hissed and I did, with her little purse. I got up and we walked towards the door. Before we got there, Mrs. Bickerstaff grabbed me from behind. \n\n\"Mr. Duncan, please, you can't do this!\" She cried, looking up into my eyes. \n\n\"Do what?\" I asked, looking past her at Bickerstaff. He was glaring at us like a bear answering the door in January. \n\n\"Don't leave me like this. Take me with you. You can do anything you want to me. I want,\" her voice caught and then nearly vanished from hearing, \"I want what you did with Mrs. Honeywell!\" Her eyes were somber. \"I swear, I want it all. Let me.\" \n\n\"What'd you do to Mrs. Honeywell?\" Ellen asked. \n\nI regarded Dannielle and finally shrugged. \"Might just as well be now, I guess. He would have to turn you over to me eventually anyway. I was going to fuck you later but if you don't mind the company, come along. Get your coat, we'll wait.\" \n\nDannielle stared at me and then looked suddenly terrified, like she just realized what she promised, what she wanted, what I was going to do to her. Then her face shifted and she walked back to the booth. She got her coat and followed Ellen and I out into the winter cold. \n\n\"What did you do to Mrs. Honeywell?\" Ellen asked again. \"Don't tell me you fucked her again?\" \n\nI did not respond. We walked together for a block towards my car. I had an arm around each woman. \n\n\"Come on,\" Ellen said again. \"I just fucked you in a restaurant. The least you can do is tell...\"\n\n\"I spanked her till she came.\" I said softly, leaning into Ellen's ear. \"And Mrs. Bickerstaff here wants the same. Think you could be of help?\" I waited, we were at a crosswalk. \n\nEllen twisted in the crook of my arm and looked at me. \"Fuck yes.\" She breathed. \n\nI knew right then I had gotten things right again. What a life! \n\nWe were a block away from my car when I finally realized I did not know where I was taking us. I reached into my pocket and yes, I had two sets of keys to a million and a half dollar apartment. What was I thinking? The light turned and I held onto the two women and they both looked at me. I looked down at Ellen. \"Where's this apartment, exactly.\"\n\nShe grinned. \"I wondered where we were going. It's back there.\"\n\n\"Apartment?\" Mrs. Bickerstaff asked, her eyes wide with the reality of what she had committed to doing. \n\nI felt a shiver go through her lithe body. These two women were opposites; Ellen with nipple tits, slight of frame and short with short hair and a bully attitude. Mrs. Bickerstaff was her opposite with great big tits, wide hips, narrow waist, her sixties flip and the perfect 'take me' attitude. \n\n\"Where you husband took his women.\" I said, turning us, like a marching band maneuver. \n\n\"Women?\"\n\nWe walked. \"Did you think Ellen here was the only woman Raymond was fucking behind your back? Did you even think you were the only one when he was married to Caroline.\" \n\n\"Caroline?\" Dannielle shivered again. \"Oh, yes, the last Mrs. Bickerstaff. No, I am sure I was the only one.\"\n\nEllen snorted. We walked in silence to the entrance to a fifteen or twenty story building, a huge baroque gate filled with glass and a doorman. Ellen spoke to him and he opened the door for her, while eying me and undressing Dannielle like he had never seen her before. Perhaps. She seemed to know the way though; perhaps he was a recent hire compared to the last time she was here. Lots of speculation rifled through my mind but it all stopped when I saw Bickerstaff standing in the foyer waiting for us. \n\nI tensed for a confrontation but, refusing to hesitate, I walked the three of us right up to him. \n\n\"Don't do this Danny. I picked you. You don't have to do this. I love you. I am...\" he choked \"...I am so sorry. I never meant to hurt you.\" \n\nDannielle shrugged out of my arm and moved to stand before her husband. She lay her hand on the side of his face. \n\nI noticed how white her hand was against his black face, sprinkled with freckles and a couple large moles. Her hand was large and made his large black head seem smaller. The contrast of colors and the optical illusions of size made me want to giggle. I am such a putz sometimes. \n\n\"Raymond, don't. You know I have to. If not now, then sometime and the longer I wait, the worse it will be. You have talked about Kingston and even I know how much you have wanted Mrs. Honeywell. She explained the situation to me in detail.\" She kissed him on the lips, rising on her toes to touch her lips to his. \"Go home, Raymond. After all the lust you have satisfied here, it is my turn. I deserve this and I must do it...to keep your partnership safe...for both of us.\" She kissed him lightly again.\n\nHis eyes closed and remained closed after she stepped back away from him. He opened them and looked at me, the expression a mixture of hurt, anger, angst and despair. \"Here. You'll need this.\" He held out a green and gold card. \"The access card for the elevator. It works on the front door too, if the doorman is gone from his post.\" \n\nI looked at it, realizing I did not know such a thing was needed. I took it from his hand and he immediately shouldered past me. We three turned and watched him go, each of us in our own unique silence. I figured out that the card was keyed to the single floor for the elevator and used to call it. Inside, there were no buttons. For such a short building, it had opposite banks of elevators two facing two. I put the card in the slot and the elevator hummed to life. It took us up to the seventeenth floor. The doors opened and we stepped out into the plush green and gold decor. The two women did not move after stepping off the elevator and I had no idea where we were going so I did not move either. \n\nJust as the opposite car arrived, Ellen realized she had to lead and took my hand and tugged me to the right. The doors opposite opened and I glimpsed something impossible. I wanted to stay and see if my eyes were seeing correctly but we were walking to the right corridor. At the turn, I twisted around to look and see if I was hallucinating. \n\nThe man had stepped out into the foyer and was staring at me. I turned away quickly, following the two women who apparently knew where we were going. The man looked exactly like Sam Honeywell! I staggered behind them, stunned. This was before I gained a sure hold on my skepticism about coincidences. The door was at the end of the corridor and the two women stood staring at the door. \n\nI, for my part, looked down the crossing hall and saw the man arrive. He turned and looked at me and for a moment we both stared. The blond with him was startlingly beautiful, with a tight shimmering lam\u0113 dress and a wash of long, platinum blond hair with very black roots. I stared, first at her\u2014I'm not a complete idiot\u2014and then at him. I saw recognition in his face. Sam Honeywell had the look of the proverbial deer in the headlights. I don't know why but I waved at him, just a little flourish of my left hand and then I turned to the door. Neither woman had seen this little exchange. I opened the door and shambled inside. They seemed at home, shedding their coats and both went immediately to the bar. \n\nEllen pour two shots of bourbon into tumblers without even getting ice. They both drank. Dannielle's hand shook. She sat down the glass and turned to face me, her hands on the edge of the bar, her body sagging back against it so that her arms were akimbo at her sides, elbows up and out. \n\n\"I have never done anything like this.\" She blushed then. \"Raymond, he was my first. I was twenty-two when I was here last. It's, it's been six years.\" Her brow knit, \"not here, but one like it. I don't remember this apartment but one here. I remember the first time I came here with him, to this building.\" She shivered. \n\nEllen poured both glasses half full again. She drank from hers. The little woman stood facing the bar and after drinking, she looked sidelong at Dannielle. \n\nI saw the look on her face and glimpsed something of what she was feeling. Her expression showed a mixture of fear and lust. \n\nI do not claim that I understood all of what was swirling around us. I was about to dive into this still, dark pool of sexual confusion but the doorbell chimed. It was a delicate notice, like a triangle in an orchestra. Then a clanging buzzing replaced it. I had noticed two buttons by the door and figured out the one was for the service and the other one was for more insistent ringing. \n\nEllen turned around, her face a mask of shock that matched the fear on Dannielle's face. \n\n\"I'll get it.\" I said bravely. I felt curiously lightheaded and disoriented. The ten steps to the door were accompanied by a swirl of D. Debra's smell, the feel of being between my sister's legs, inside Alissa and my arms around these two women...all of which filled my senses dizzying and distracting me. I opened the door. \n\n\"Jesus Christ! It is you!\" Of course. It was Sam Honeywell. He peered past me at the two women staring at him. \n\nI twisted to look at them and they both turned and walked out of our sight, each in a different direction. \n\n\"Sonny, isn't it?\" He grinned. \"I never would have thought...what the heck are you doing here?\" He gestured behind me, towards the two women who were now out of sight. \"With them, I mean? That's Mrs. Bickerstaff, isn't it? This is his apartment still, right?\"\n\n\"And Kline's.\" I said automatically, always eager to be accurate. I felt inane. \n\nSam sobered. \"So you know about them?\" He asked. \n\n\"So you know them?\" I responded, always the original one. I did not know whether to invite him into the apartment or push us out into the hall. I still had the keys in my hand. Over his shoulder I saw the door to \"his\" apartment and in that moment, saw the woman waft by deep in the place, drifting past my eyes like an apparition, a ghost I could not explain, the dress glittered like she was divine. \n\nSam bowed his head and then chuckled. \"Oh yes, I know them. They have both been trying to make my wife from the moment she joined the firm. They tried to talk me into handing her over...\" he looked up. If he had been white I expect he would have been blushing but I was uncertain how to tell, I thought I heard it in his tone and marked it in his hesitation. Sam was a handsome man, reminding me of a movie star. When I was young, I remembered him with a casual, medium 'fro which he had cut down as time went along. He now had a goatee and mustache. He did look debonair. \"Listen, it is Sonny, right?\"",
        "I extended my hand. \"Sonny Duncan, yes sir. Good to see you.\" \n\nHe looked at my hand. I turned the palm up. \n\nHe grinned and shook it. \"Shocked to see you. I have to confess.\" He shook his head. \"You're Sammy's friend. You're my son's age and that, well, that has given me a bit of a shock.\" He shook his head again, running a hand over his face, wiping at sweat that was not there. He said, \"Listen, what if we talked. I think we need an understanding. You know, about this...this situation.\" \n\nI shrugged. What was I going to say? \n\n\"I cannot think that your mother would approve of this.\" \n\nOh. That was what he was thinking? We'd trade silence. Keep each other's secret. I almost said she was in China fucking a hog leg but bit off the comment before I blew it out. I had no need to include Sam Honeywell in all my business. But I did need to explain my presence in this apartment. People have a way of jumping to conclusions of their own invention that often have nothing to do with reality. In the future, I would find this was incredibly dangerous but here, I was just lucky. \n\nI shook my head, then nodded. \"No, you're right.\" I glanced back into the apartment. \"I expect this looks odd to you.\"\n\nSam grinned and nodded. \"No odder than she must look to you. Mrs. Honeywell and I, well, I think we need to discuss this. There is a club restaurant on the third floor. Why don't we meet there in say, twenty minutes?\" \n\nI shrugged. \"Okay. Sure.\" My brain was bubbling and I had a very, very, very interesting thought. It was so good my stomach turned over. Suddenly I wanted to have a conversation with him, in the worst way. This would be so fun! My mind was full of possibilities but one in particular. It would was not going to be easy but, but it could be fucking awesome if I could figure it out. \"Twenty minutes.\" \n\nBehind him the blond apparition appeared peering out of the door, the lam\u0113 dress was gone and she stood in the door way, semi-nude, bra and garters, the black stockings highlighting her pale white skin. Her lips were so red they seemed to shine in the gloom. The corridor was green carpet with gold and green wall paper and bright white molding. Miniature chandeliers with little bitty bulbs lit the hall but not well. Daylight from the far apartment illuminated the hall better than the dull little lights; shining around the woman's body like an aura. It made her glow and me stare. I was trying to see her pussy clearly and failed. \n\nSam turned to look where I was staring. \"She's gorgeous, isn't she? And she does love bedplay.\"\n\n\"Sammy!\" She called. \"What are you doing?\" \n\n\"Nothing, go back in but don't shut the door. You are showing yourself off again. Don't shut the door, I don't have the keys.\" \n\nShe backed up and slammed the door shut. \n\nSammy? You cannot imagine how that screwed with my brain. Sammy did look like his dad but that moment, her screeching voice saying that name, that was the first time I noticed, the first time I registered how much they resembled each other. Not just in body but in disposition. Sam was a great kidder and Sammy definitely never got his sense of humor, no, his silliness from his mother. Alissa smiled under protest, utterly involuntarily. \n\n\"That broad is nothing but trouble.\" Sam grinned again. \"I like a little crazy though. Just like you, apparently. That other gal, isn't she an associate at the law firm? She works for Bickerstaff right?\" \n\nI did not want to think about that just now because my brain was grinding and it was sending attractive ideas down to my cock for consideration. My cock approved what I was thinking. I shuddered. \n\n\"Twenty minutes.\" I said and tried to close the door. \n\nSam put his hand on the door. \"You wouldn't just push me out the door and then leave me hanging like that would you? We are clearly two men of the same sort.\" \n\n\"No, Mr. Honeywell, I'll be there. Honest.\" \n\nSam stared hard at me for a moment and then nodded. He was a bit shorter than me but stouter. If he was any indication, Sammy still had some way to go before he was done filling out. \"Okay. Fine. You know where it is? The dining room?\"\n\n\"No. Third floor? How do I get there. There are no buttons.\"\n\n\"Take the one with the star on the call button. It is the only one that has a floor register on it. You have to use the card.\" He hesitated for a moment, took out his phone and handed it to me. \"Call your phone. Just so there is no misunderstanding, right?\" \n\nI stared at him for a moment but shrugged again and called my own phone. It buzzed in my pocket. I clicked Sam's off. \"Trusting, aren't you?\" \n\nHe grinned. \"Married an attorney, trust is a luxury I avoid. It's addictive. See you in twenty.\" He backed out of the door and turned away. He was still dressed in brown slacks and a white turtle neck. I closed the door. I walked to the center of the living room and gazed around. A kitchen adjoined the bar and two doors, closed, were in the opposite walls, left and right. Ellen had gone left while Dannielle went right. \n\nOnce again I was in deep water wearing army boots. Twenty minutes? What was I going to do with twenty minutes? The last thing I wanted to do was to go down to the restaurant before Sam arrived. I dreaded the awkwardness of not knowing how anything worked, plus, I wanted him to pay for lunch. I was hungry. With those two thoughts I felt incredibly young, naive and inexperienced. I walked to the left bedroom door and opened it. \n\nThe shower was running and then it wasn't. A moment later Ellen appeared, nude, beaded with water. She padded the water off of her lean body with a fluffy towel, making no attempt to hide herself. Her eyes remained on me till she dropped the towel onto the floor. Without a word, she went to the giant bed and lay down, stretching like a cat, arching her back so extremely that what tits she had disappeared, becoming simple little moles on her chest while she bridged on the bed, touching only at the shoulders and the ass. \n\nShe relaxed and looked over at me. She opened her legs, the lithe legs that dangled off the edge of the bed. One hand trailed down her body to her crotch where she stroked herself. Her eyes fluttered and she moaned a little before withdrawing her hand. She turned her head to look down the length of the bed at me. \"You promised. Remember?\" She purred. \n\nI shrugged. I had twenty minutes. Time for a taste, I supposed. \n\nI moved around the bed till I was facing the nude little woman. Her legs were open and I could see her pussy gaping between them. She had scarlet moss above her cleft, glistening, straight, and fine. She closed her eyes and flung her arms wide and became still, her legs bent at the knees over the edge of the bed. I knelt, placed a hand on each knee. \n\nEllen sighed. \n\nI pulled her ass to the edge of the bed. She was lighter even than she looked. \n\nEllen squeaked and wriggled in my grasp. \n\nI bent and breathed in her aroma. She smelled spicy. Her hips clinched and her pussy closed and opened beneath my eyes. \n\nTwenty minutes. I looked around for a clock and saw none. \n\n\"You promised.\" Ellen whispered. \n\nI had promised. I stuck out my tongue and touched one side of her pussy. \n\n\"Oh Christ.\" Ellen said. \n\nI moved the tip of my tongue up and down the ridge of her pussy, keeping to the outer side and then at the top, changed sides and licked down the other. \n\nEllen lifted her knees and opened her legs wider, laying her knees out beside her body like wings. She pressed them flat to the mattress. Small and flexible! Her pussy seemed to exhale and I inhaled her aroma. I flattened my tongue and licked from the lower end of her pussy up to the top. \n\n\"Oh sweet Christ, eat me, Sonny!\" Ellen's voice twanged with lust. Her whole body was coiled and tense. \n\nI compiled. My tongue swiped up and down several times, searching for her clit but it was no where to be found. Daunted and a little embarrassed\u2014how do you ask a woman where she keeps her clit? I stiffened my tongue and pushed it into her; seemed like a good option if the only option. The woman seemed to validate my choice, lost clit notwithstanding. Ellen bucked as I penetrated her. She shook and groaned but she did not change or adjust her pose. She lay still quaking, crystallized into a woman primed for pleasure. She wanted it, she expected it, she demanded it but without words. Had she spoken her demand, I would have left her wanting but her willingness to be in such need and speak nothing of it left me eager to satisfy her. \n\nMy tongue wiggled into her body. She was tight! She lay so flat, her legs were pressed full to the mattress, I dared not put my arms under her legs but lay my forearms along her thighs, feeling the cord of her groin muscles pulled taut by her pose, little lines against my cheeks. I covered her pussy with my mouth and sucked. Ellen gasped. I felt around the top of it with my fingers, looking for a clit. There was no sign of it. \n\nMy tongue swirled through her body but it resisted at every twist, tight and pressurized with her excitement. Her pussy was tense, small and mysterious. I pushed hard into her and began to probe deep into her, just trying to figure out the puzzle of her little body. Then I touched it and she screamed, the little spot at the top of her entrance, the rough little patch of flesh. Ellen exploded. After an afternoon punctuated with unrequited sexuality, she was indeed primed for the stimulation. She bucked under my mouth, her whole body convulsing with a violent orgasm. The knees and legs pressed against the bed and that lifted her pussy mound, tipping it up against my mouth as I swirled my tongue inside of her. Her voice warbled with exultation, high and keening and then it cut off as she gulped for air. \n\n\"Oh Christ and the chickens!\" She guttered. \n\nI was vaguely aware of the sound of an opening door in the distance. Then Ellen's hips jerked up at me, pounding against my forehead and cheeks. I lost contact with her g-spot and became adrift in the now liquid contours of her pussy. I sucked at her and found her fluid acrid and dank. I was so aroused, I sucked it in, slurping loudly and with gusto for her benefit. She found her voice and shrieked again. Suddenly there was a clit. It appeared under my fingers as if by magic and when I tweaked it, Ellen contorted, her upper torso turning and twisting as she came. Her legs remained pressed flat against the bed, like bat wings beside us. \n\n\"Oh my goodness!\" \n\nThe voice penetrated my awareness. For a moment I was confused by the words because I was sure Ellen was still gurgling with orgasm. Then I figured it out, of course, it was Dannielle, summoned by the screams to come and watch me eating the other woman. \n\nUnder my mouth, Ellen's hips were tensing and shaking while I kissed and licked her flowing, flowering pussy. She was not shaved but her hair was fine and straight, the classic red cunt hair of engineering lore, the RCH that is the finest measure of size or length in the lexicon. Her abdomen was not flat, it was concave, so lank was her frame. My nose rubbed against her pubic bone. I opened my eyes, turning my head as I penetrated her deeply with my tongue once more. I saw her hand knotted in the bedspread, twisting and pulling at it. \n\nI confess, I felt that old satisfaction that comes from knowing a woman is in the throes of pleasure I was causing directly and intentionally. Her body responded to me as though we were fated to join in this way. I certainly had visions\u2014or whatever\u2014of putting my cock where my tongue was at that moment. This woman was tight and small but she seemed incredibly expressive and compellingly so with her pussy. The way it surged and responded to me, fucking her took on incredible attraction. My mind had mostly been on Dannielle and her tits and ass but this little woman, she was teaching me the genius of the female body that was nothing but pussy surrounded by need and infused with lust. \n\nI licked up and down her gurgling furrow. She crooned. I sucked on her and tasted her sharp spice. She grunted. Her hands found the back of my head. I moved my hands under her legs and to her little ass. She hunched up at me. I grunted and plunged my tongue deep into her. Ellen shrieked again but it was short lived, replaced by gasping. She panted and sucked air, trying to breathe around another consuming orgasm. I felt it wracking her. Evil little twin that I am, I lifted my head and then lifted her thrashing body, moving her to the center of the bed in once great lunge. Bent over the edge of the bed, my elbows planted under her legs and my hands clasping her clinching ass, I resumed eating her. \n\nEllen bucked into another orgasm; they were coming in waves now, like a relentless ocean on a perfect beach. Ellen thrashed and squirmed both trying to escape the sensations and to intensify them. She shook and quaked and shook. She was so small I could hold her still and eat her with some precision, even while her climaxes wracked her and she thrashed and jerked. I got my shoulders positioned so she could not lift her legs and with a firm grip on her ass, I continued to eat her. My tongue found her clit and Ellen screamed, her voice ragged with passion, jagged and gasping. She stopped several times to swallow and reset herself in the hollow moments between the flowing orgasms. \n\nSuddenly I had to wonder what time it was, how long I had been eating Ellen. She was nude. Suddenly I wanted to kiss her, to penetrate her with my cock but I knew there was no time but I thought it would be cool to meet Sam with the smell of Ellen all over me. \n\nI suddenly released her, extracting myself from her body. I peeled down my trousers and released my cock. I crawled half onto the bed, between Ellen's splayed legs, my pants around my ankles. She shivered and her little hands found my cock. I bent to her mouth and she kissed me hard, passionately, with a violent need that gratified me. Her taste swam between us, coating her lips and greeting her tongue. I bent down to take one nipple into my mouth and found she was sensitive beyond reason. Her voice assaulted me as her body bucked and she pulled my cock towards her pussy. I relented and let her direct the head of my cock to her entrance. I sank part way into her lean body. The pleasure welled up in me and I pulled away, fighting off the instant orgasm contact with her inner body summoned. She held my waist with her little hands, her body arching to recapture the retreating cock. I fought free of her, having given her a taste and then retreating held a sort of vicious attraction for me. \n\n\"What? What are you doing?\" Ellen gasped when I was finally free of her, standing beside the bed, pulling up my slacks, hiding my cock. \n\n\"I have to go meet someone. I'll be back. You two can get acquainted while I am gone.\" I turned to the frightened woman leaning against the door jamb. Dannielle's face was fixed in a gasp, eyes fixed and staring. She blinked several times, noticing my eyes on her. I moved to her and kissed her carefully on the lips. She licked them, tasting Ellen for the first but certainly not the last. \"Can you both stay the night? Perhaps tomorrow night? I think we should make a day or two of it don't you? Do it up right?\" I did not wait for their reactions but left them, Dannielle staring at Ellen's naked body and Ellen writhing with a new but mature passion. \n\nI was certainly still into it but once I separated from Ellen, that is, got my tongue out of her, my brain was afire with what I was going to try to accomplish downstairs using Sam's ignorance and his guilt. My cock remained hard all the way to the elevator. I had no idea if I was late or by how much. On the ride down, I had time to realize that I needed to assess Sam's ignorance before I preceded forward. The elevator smelled of Ellen's pussy, or maybe I was just my upper lip. My cock was rubber hard when I got to the door of The Secret Cove, a white-cloth restaurant that, as it turned out, specialized in private room service for The Dominion, as the apartment building was called. \n\nI spied Sam immediately as I stepped inside the entrance. A dignified waitress looked askance at me and no wonder. The late afternoon clientele was a mixture of older men with glitzy young women and older women with slick young men with even a smattering of bromances and two couples of women tittering to each other. This establishment did not cater to family values and stable, equal relationships. \n\nSam sat alone reading a newspaper. I felt like I had walked into a room from thirty years ago. I approached and he put down the paper and grinned, signaling to the waitstaff. I arrived as the waiter did, a man older than me but slimmer and much prettier. \n\n\"Bourbon, Sonny?\" Sam inquired as I came to a stop. \n\n\"That would be good.\" I said and took a chair once the waiter left us, across from Sam, my back to the door, which made it itch. \n\nWe regarded each other for a few seconds, each waiting for the other to speak. \n\n\"I suppose you are wondering why I asked you here?\" Sam finally said. \n\nI shook my head. \"No. Not really. You want to know if you can convince me not to mention your mistress there to Sammy because you know he never met a secret he did not tell to someone. I gather your dear wife is unaware of your, shall we say, dalliances? Or the apartment itself, for that matter. I have the impression she thinks you are out of town when, apparently, you are shacked up here with, with, whoever.\" \n\nSam's smile faded. He looked up as the drinks arrived and then stared into his, finally picking it up, swirling it to make the ice cubes clink and then taking a sip. \"Ah, that hits the spot.\" He gestured with his glass. \"Cheers. What shall we drink to?\" His bonhomie had faded, dampened by my words, perhaps the reminder of the sexy woman he was stepping out on. \n\nI lifted my glass and dipped it in his direction. \"Cheers. To willing pussy,\" I said, just to let him know I at least approved of pussy if not actually his actions. On the other hand, I guess I missed the twisted irony of my own words. After all, I had his wife on a leash. \n\nSam grinned, no small amount of relief in his eyes. \n\nWe drank. \n\n\"I am curious, Sam, how does it happen that you are installed in an apartment that, if I understand it properly, is worth in the neighborhood of one and a half million dollars?\" \n\nSam looked at me, a measuring stare. \"That's how it is going to be?\" His voice was not friendly.\n\n\"Aren't you going to ask me how I happen to have the keys to Bickerstaff and Kline's little love nest? I thought I would go first. It seems way too much of a coincidence to meet you here. Father of one of my best friends, husband of a partner whose apartment is down the hall, you have to admit, that stretches credulity. That cannot be unrelated.\"\n\nHe shrugged. I felt right at home. \"So?\" He asked, discomfort rife in his posture. \"Want to eat something?\" \n\nI nodded gratefully, Sam was old school. He signaled the wait staff. This time a middle-aged woman appeared, rail thin but beautiful in a western sort of way with muddy blond curls and corded neck. I was so horny I wanted to bite her, well, all that goes with biting her, actually. I had a brief sprite of impatience but regarded my presence here as part of the MILF package. I had resolved early on never to dodge the effects of my behavior. I was here to tally up some of that cost or find out if I could keep a secret. I ordered a chef salad and he ordered a porterhouse steak. I hoped it was clear who was paying but decided I would if I had to. My stash was not inexhaustible...but then realized I had money from the law firm for future services rendered. I had no recollection of what I did with the cashier's check Alissa had given me. That thought added to the buzz from the drink. Pussy made me forget about money and that, my friends, says it all. The limit and the vista of my ambition expressed in one telling phrase. I do love pussy!",
        "\"Alright.\" Sam said with a sigh. He drained his drink and signaled for another round. \"When Alissa was ready to change jobs, she was looking and was going to move us to California. I had no wish to leave here. I have a lot of customers who depend on me for investing advice and starting over in a new town is difficult, if not impossible. So I nudged her to find something here, with Peppers et. al. I met them and asked if she could at least get an interview. Kline knew her. He was eager to make a deal. He wanted inside investment information, I mean to use it, information he got in his business and if I would trade for him, he would recommend Alissa be hired as an associate. That was five years ago.\"\n\nThe drinks came. I finished mine and let the woman take my glass.\n\n\"Alissa was thrilled, they offered her a front row in the line to partnership. They came to me after a year or two and insisted that if she would lay with them, she could get the partnership. They needed a woman and Alissa is a great attorney. She still handles all my legal work for my firm, my friends, everyone. But nothing like this Kingston deal.\" \n\nI nodded, like I knew what he was talking about; I did, after all, at least in part. \n\n\"I told them I would make it work for them, get her to, you know, have relations with them, they would see she got her partnership. I told them they had to go first because I knew all about the panties promise that gets forgotten once they come down. Where does she go if they renege? What court is going to grant her damages after they have her and then she gets nothing. She had been jousting with them since she started and was about fed up with them and was back on the California thing. But that all went out the window when this Kingston deal came along.\"\n\n\"The apartment?\" I prodded. \n\nSam nodded. \"About seven years ago, right as the real estate business was collapsing, I had a friend, well, a client who got into trouble. She, ah, she had helped herself to the capital in an account at the charity where she worked to invest in the proverbial 'sure thing' and got caught with her panties down. She owned this apartment but, of course, had no way to unload it For two years there, this sort of real estate was unsaleable. She was cash poor but had assets. She needed cash to get out of trouble and I helped her out but with a lien on her apartment to cover myself. She defaulted and signed the apartment over to me.\" \n\nI nodded, not really understanding or caring. \"And the proximity to Kline and Bickerstaff?\" \n\nHe grinned. \"That was a sweet deal. I had another friend, she got into a similar situation. Cash poor, I mean, not the other. I could not cover her losses myself so I agreed to try and sell her apartment for her. That was not an easy deal but I happened to know that Kline and Bickerstaff had some cash they needed to deposit somewhere out of sight. I offered them the apartment after...after letting them use mine a few times, for their liaisons. This was before either of them got divorced. They were both stepping out on their wives and my apartment became a convenient place to uh carry on. By the time I offered them the apartment, they were both scheduling times at my place and it was easy. Everyone was happy.\" He shook his head and grinned. \"She, the owner, she had to do them both and I gathered from their...ah...veiled references, she accommodated them fairly regularly there for a while. Then they got bored and we finally settled the deal.\" \n\n\"And you made a profit, too, I suppose.\" I said, guessing.\n\nSam closed his eyes and then nodded. \"I had them. They neither one wanted anyone to know they were looking for real estate or that they had the cash they had or where it came from. That I could broker the deal and hide their cash and take care of Missus, er, my friend, that was convenient and good for everyone. I took a good commission on the deal and got their promise that Alissa could get her partnership without needing to accommodate them in any other way.\"\n\n\"But you told them if she did, if they got her to...ah spread her legs for them,\" I was puzzled by Sam's apparent desire to use polite language. It inspired me to desalinate mine. It was hard. \"You told them you would not care?\" I was guessing again but Sam's eyes snapped up to meet my gaze. \n\n\"Sharp kid.\" He nodded. \"Part of the deal was that I would not bother them about her but I got off the hook because I was not accountable to bending her to their will in the matter. They were on their own with her and she could tell them to pound sand or not without fear of reprisals. I made crystal clear if she complained of coercion, I would make them hurt. The whole deal had to be played above board.\" He drank and looked at me. \"My apartment makes sense. You having the keys to Bickerstaff's place and towing his wife inside makes none. Your turn.\" \n\nI drank too and wished I had eaten something. I was dizzy. \"I can tell you this, they have been unsuccessful with Alissa.\" The waiter arrived with our food but Sam's eyes remained fixed on me, askance and quizzical. I could not determine if it was because I claimed to know they were unsuccessful or because I used his wife's given name. Both, most likely. When the waiter departed, we started to eat in a gentle silence. The booze dulled my nerves. In the back of my mind I knew I was going to tell him I had had his wife, I just could not quite see how to do it yet, so I chewed it over with my salad. Neither was very filling. \n\n\"So? Go on. Your turn.\" Sam said around a chaw of steak. \n\nI nodded and finished chewing. I took some of his bread to soak up the booze. \"What do you know of the Kingston deal?\" \n\nSam shrugged and said he knew nothing, just that it got Alissa her partnership.\n\nI nodded. \"No idea how that happened? How she managed to engage the richest man in the area and sign him to a retainer worth several million dollars?\" \n\nSam shook his head, chewing. He wiped his mouth with his napkin. \"I wondered but honestly, Alissa and I have not been talking much lately. That does seem awfully lucky now that you mention it.\" \n\n\"Well, she got it because of me.\" I said and took a bite of salad. \n\nSam's eyes sharpened and he studied me intently. \"Go on.\" He said softly. \n\n\"Do you know Sid Kingston?\" \n\nSam shook his head. \"Never met him.\" \n\n\"Or his wife, Anne?\" I replaced my diminutive for her with a more formal name. Anne sounds more prudish than Annie; to me at least but what do I know? \n\nSam shook his head again. \n\n\"I have been having an affair with her for several months. A few weeks ago, before Thanksgiving actually, I got caught.\" \n\nSam gaped in surprise. \"And you are still alive?\" \n\nI grinned now, seeing the path through my mangrove of truth to the explanation I needed here. \"I am still alive and in fact, I am doing some work for Mr. Kingston. That explains generally what I am doing here. Perhaps you know, or can guess that Sid is out of the country a lot. His wife is here alone, in a strange country, on her own. She's Chinese, did you know? She has some friends but she has not converted to the American culture very well. So, when I had the chance to seduce her, she was sufficiently isolated and lonely that it was relatively easy. Sid came home early and caught me balls deep in his wife. She was tied on the bed and blindfolded...I would leave her like that and go to class or whatever. It always made her hot as a firecracker. I'd come back and ram it into her and she'd, she'd come unglued.\" \n\nSam grinned, into my story now. I was sure I had him.\n\n\"Well, when he caught us, caught me, he gave me a choice. He said I had to give him someone, someone for him to fuck or he would have to have me killed. I'd,\" I swallowed hard, \"I'd just disappear and no one would know I was the meat in some chopped suey in Chongqing. No one would miss me. Needless to say, I believed him.\" I took a bite and then a long pull on the bourbon and realized I was getting hammered. I poured it full of water to dampen the drinking reflex and took another piece of bread. Sam watched me, waiting. \n\n\"Well, I got home from...from being with Anne and I have to tell you, I was shook, really scared. My mother was home alone working over a bottle of wine. She could tell something was the matter and she finally pried it out of me.\"\n\n\"You are shitting me.\" Sam muttered. \"No way. Don't tell me she volunteered to, to...\" Sam stalled, searching for the right words. I helped out. \n\n\"She volunteered to fuck him, for my life.\" I nodded vigorously. \"Who else could I ask? I have no wife or girlfriend and he made it clear to me that buying some hooker to lay down would not do it. It had to be someone who mattered to me...to balance the scales, he said. To balance me doing his wife. She had to matter to me.\"\n\nSam nodded. \"Makes sense.\" \n\n\"So. I went over to their house the next day and we sat down to discuss my situation. I decided to negotiate and try to find some way that did not include whoring out my own mother. Nothing else I suggested worked. Finally I looked him in the eye and told him he could have my mother. The guy looked over at his wife and grinned. He knew Mom by sight, she and Anne were friends of a sort, the type that would have coffee together from time to time. You know, shopping partners and the like, that was actually how I ended up boning her, but that is another story. Anyway, he nodded and said that would do just fine. But Mrs. Kingston spoke up and said 'not fair' in her accented English.\" I chuckled. \"You should have seen Sid's face. He looked like she'd just bonked him with a rolling pen while he was brushing his teeth and he swallowed the brush. He said 'What?' and Anne stood up and stamped a foot and said, not fair. She said, man's mother worth three wives, five wives, not fair trade. \n\n\"Well, Sid looked like, he was shocked. He looked at Anne and then he grinned and he asked her if she wanted to keep seeing me. I was terrified she was going to say yes and get me killed. Sure enough, she came over and stood beside me, she pulled my arm around her waist and told Sid if she had to stay in America, I had to keep uh, she could keep on with me.\" \n\n\"You're shit...kidding me!\" Sam gurgled. He almost laughed but then took another bite of steak and gestured with his fork for me to continue. \n\n\"Needless to say, I was scared, shocked, and a little relieved. Here I was negotiating for my life with a man and his wife was insisting that, should I get to live on, she wanted me to continue...continue with our affair. Sid did something then that shocked the crap out of me. He looked at me and smiled and reached over and patted me on the shoulder. He told me he was pleased that I was pleasing his wife but that I had to pay for the privilege since she was such a great piece of ass...begging your pardon. Then he nodded at Anne and rumbled...have you heard his voice? Sid Kingston has a voice that sounds like a cross between thunder and cannon fire. He said he agreed with Anne since she insisted, that a wife for a mother was not really a fair trade. I squeaked up that I was going to get to live, so it sounded fair to me, not in much mood to negotiate. \n\n\"Sid nodded but said, if I could provide him a night with my own mother, and if she was ah, pleasing enough, he would grant me a favor. I could ask him something till it was something he could or would do. He'd do me one favor and one favor only. He made it clear there was no obligation implied but merely that he would take my calls. He said that I was right, other guys who had gotten seduced by his wife were far from this lucky but it had caused him lots of trouble and he preferred this less complicated solution.\"\n\n\"My gracious.\" Sam mumbled. \"Did she do it?\" \n\nI nodded, finishing up the last of my salad. \"She came home from a weekend with him and went straight to bed. Truthfully, I have not seen her that happy tired in my life. A few days later, Mom comes into my room and sits down on my bed and tells me that I have to introduce Alissa to Mr. Kingston. She says I have to ask him to let her be his representation, domestically. It seems that Alissa told her that Peppers et. al. was on the list, on Sid's list. He had to switch law firms for some reason. I don't know crap about his business.\" I felt so clever, using Sid's name like that and seeing Sam's reaction. \"Alissa and Mom, well, sometimes they talk and Mom had apparently told Alissa about our little arrangement, about me getting myself into a crack. When your wife,\" I switched back from 'Alissa', preparing him for what I was about to tell him, \"told Mom, begged her to have me recommend her to Sid, Mom was shocked. She asked Alissa if she really wanted a client that did business that way? You know what Alissa said?\"\n\nSam smirked. \"She is an attorney, and sharp as they come, so I can imagine. Something suitably immoral, I would think.\" \n\nI almost called him on that remark but let it alone. He hardly seemed to have deed to much moral high ground in the dick and pussy business. Of course neither did I so I left it alone, keeping my own moral indignation as a private thought. I was lying through my teeth after all, not to mention the fact I had fucked his wife at least twice that day. \"She told Mom that having a client with things to hide was the best situation. They were the least likely to change representation and much more likely to listen to good advice. So Mom comes home and virtually demands that since she saved my skinny\u2014I think she said stupid\u2014little ass, I could do that for her. \n\n\"So I called Sid and asked him about representation. He told me later that he was horribly surprised when I made that my request, particularly since it was on his list of things to do anyway. I came clean with him and told him about Mom wanting me to do it and who Alissa was. Part of what persuaded me was her story to Mom about being close to leaving because she still did not have her promised partnership.\"\n\nSam nodded. \"They told me, or made sure I understood that unless Alissa let them have her, she would get no partnership. I figured that was unlikely. I was out of it, they all had to work it out themselves. I wanted nothing to do with it. It was a shortcut for Liss but, truthfully, it would not have hurt us any but I doubted it would work out. I was getting ready to use some leverage though, I had no wish to leave here. Fortunately, they were bluffing. I assured her that she would not have to give into them, that that would not happen but as usual, she ignored me, assuming I knew nothing about the deal. I could hardly explain my expertise in the situation so I had to just let her think I am stupid and small minded. If she only knew...\" He shook his head, the plaintive tone did not fit him and it seemed to make him uncomfortable. \n\nI continued. \"Well, Sid told me to bring over 'this Mrs. Honeywell' and he would discuss it with her. So I did. We went over to his house and he talked it over with Alissa. They got to a point where he thought it was a good match and that was when he zigzagged. He looked at Alissa and told her he thought it would work but he always fucked, er had sex with someone close to anyone he had business with. He claims that people relax a little when they know he has had their wife or mistress or someone. Alissa posed a problem being a woman\u2014he generally does business with men, he says. She did not have anyone he wanted\u2014husband and son were disqualified.\" \n\nI chuckled. \"You should have seen Alissa, so close only to find that she was the wrong gender. She was in despair when my mother chimed in and suggested that she could uh have sex with Mr. Kingston for Alissa. She volunteered, just like that.\"\n\n\"Your mother was there?\" \n\nI nodded. \"She insisted. She did not want Alissa running off to California and taking Sammy away from me. She thinks Sammy keeps me out of trouble. I wish she was right. Anyway, Sid looked at Mom and I swear his face rippled with lust. Apparently, Mom had treated him as good as he treated her. They were apparently a good match. He was immediately into it but then he looked at Alissa and said she had to make it right with me, since I was expending my favor from him by giving her what she wanted. Alissa just stared. That was when, surprisingly enough, Anne spoke up.\"\n\n\"My gosh. What did she say?\" Sam asked. \n\n\"She looked your wife in the eyes and said she had to become my slave. No, she said Alissa had to be my sex slave.\" I stopped speaking. I wanted to grin. \"Mrs. Kingston, it turned out, has a bit of a thing for watching and she saw this as a way to get to see me and your wife, you know, doing it.\" \n\nSam's face looked like he had stuck it outside of a jet plane. His eyes got really wide and his broad nostrils flared and his lips got really thin. \"Oh for heaven's sake.\" He groaned. \"Alissa? What did she say?\" \n\nI had to strain not to laugh. \"She hesitated but then looked at me, then at Anne, then at my mother. She asked in a little voice if she could think about it. Sid was leering at my mom but he nodded and gave her two days to think it over. Then he looked at his wife and grinned. 'I think we need to balance everything better. Mrs. Honeywell, you have a son, don't you? I think my wife should make herself available to him as well, since she has surrendered some of her claim on Mr. Duncan here.\" Here I did laugh. \"You should have seen Alissa. In fact, she looked a lot like you do now.\" \n\nSam clapped his mouth shut with a loud click.\n\n\"Two days later Sid called and told me it was a done deal.\" I grinned because I could not help myself. \"He told me had sweetened the deal a little. He said, it turns out that in vetting Alissa it turns out she has a younger sister and he has secured Alissa's agreement that she would do her best to turn her sister over to me for a weekend of intercourse.\" \n\n\"Jesus Christ!\" Sam said and then got a pained look on his face. \"I mean, good gosh, Melissa? Really?\" \n\nI nodded, honestly eager now. \"She arrived the next weekend and I did her and Alissa together. First, though I did Anne while they watched. They got so hot when I got around to them...well, you can probably imagine.\" \n\n\"Melissa Crawford? You, you had intercourse with Alissa's sister?\" Sam seemed to have missed the fact that I had fucked his wife. I felt no little relief at his oversight. \n\nI nodded, grinning. \"Messy Melissa. She loves the cock. I assure you and, Sam, she told me something that is worth something to you.\" \n\nSam groaned and covered his face with his hands. \"Messy Melissa? My...oh my great Caesar's ghost!\" \n\nI reached across the table and pulled his hands away from his face, forcing him to look at me. \"Melissa, she told me she has wanted you forever but that was not all. She said that now, now that Sammy is over eighteen, her favorite sex fantasy is you and Sammy doing her together. You know, the father-son fantasy? Front and back? Can you imagine?\" By the furtive look in Sam's eyes, I could see the hook was well and truly set. If he had not thought of it, he certainly was now. The fact that I had mastered his wife seemed to have vanished in the flush of this revelation. I presumed he'd notice eventually. \n\n\"Oh no, please, don't say that to me.\" Sam groaned again, covering his face. \n\nI waited and after a time, he raised his face and looked at me again. \"How do you happen to be in Bickerstaff's apartment with his associate and his wife?\" He asked, shifting to the present seemed to stabilize him somewhat. \n\n\"Kline tried to snake the account out from under Alissa and Sid caught him. He told him that if he was a shit again, he would have to surrender his women to him, to Mr. Kingston.\"\n\n\"But you...?\" \n\n\"Sid is out of the country, my mother is with him.\" Fuck me if all the pieces did not fit perfectly. I had a vision of Messy Melissa pinned between father and son, coming like a locomotive. My cock got hard. Just the idea of fulfilling Messy's fantasy excited me beyond telling. My chest got tight and it hurt to breathe. \"He, Sid has assigned me to the job of collecting from Bickerstaff and Kline. That was part of the original deal. They had to supply some treasured pussy to the deal and I was Sid's proxy, collecting that pussy for him. He liked the idea of including me since I was giving away a very valuable favor. It seemed to please him to make me whole that way. He told them both I was going to fuck wives, ex-wives, daughters, sisters, in-laws. The whole family tree. Here at the end of the year, he wanted me to collect a down payment pussy, just so B&K did not think he'd forgotten. Speaking of which, Mrs. Bickerstaff is waiting upstairs, on her back, for me to collect. I think she is looking forward to someone smaller than Bickerstaff between her legs.\" I grinned. "
    ],
    "authorname": "Contrasting",
    "tags": [
        "double teamed",
        "threesome",
        "group sex",
        "anal",
        "box lunch",
        "pussy eater"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/extending-the-milf-list-ch-04"
}