{
    "title": "The Azure Rider Ch. 08",
    "pages": [
        "Finthalion visited them two days after this, with fervent apologies for leaving Agatha in the human land while he attended to the matter of King Olbrecht's hearing with the Elven Guards. Finthalion and Illimitar had flown back to Ost-in-Edhil in two days, a feat that would have been nearly impossible for Elpis, but their haste was necessitated by the urgency of the matter at hand. The Elven Guards had been alerted to the nature of the misdemeanor conducted by King Olbrecht, and they had flown to Regstone soon afterwards under the leadership of Elnaril Miralamin, the Rider of the Malachite Dragon and the chief of the Elven Guards. King Olbrecht had been escorted away to Ost-in-Edhil, with little resistance from the Dragon Council of Regstone (by Finthalion's account, one of them had directed the Elven Guards to the underground chamber King Olbrecht had barricaded himself in) and after a short, albeit tense trial in the High Court in Thorondell he had received the death penalty.\n\nThey met and conversed on the yard in front of Orion's house. Finthalion was accompanied by a stunning woman who rode an Azure Dragon and introduced herself as Lyriel. Agatha immediately presumed that the tall, willowy woman with waist length silver hair (which stayed surprisingly unruffled despite the long ride she had just undertaken) must be Finthalion's wife or partner, until Lyriel stepped in front of Orion and drew him into an intimate embrace.\n\n\"It is so nice to see you again, Orion,\" she said in a rich, husky voice that made Agatha reconsider her preference for men for a few heartbeats. \"You look better now. Happier.\"\n\nAgatha was taken aback by the relief that flooded through her when Orion returned her embrace only customarily, drawing away after a hasty pat on her back.\n\n\"Will you come with us this time?\" Lyriel asked, holding on to one of his hands with both of hers. Orion shook his head and said, \"I have engagements here, I'm afraid.\"\n\n\"I wish you all the happiness in your life then,\" she smiled gently, then kissing the back of his hand, stepped back to take her place beside Finthalion.\n\n\"We don't have much time, onya,\" Finthalion pronounced, turning towards Agatha. \"Summon your Dragon, we must be on our way.\"\n\nAgatha tucked a loose lock of hair behind her ear and stated, \"I am indebted to you for freeing Elpis, Finthalion. I would love to visit the fabled Land of the Fair Folk someday. But for now, I would like to return to Rubenstraad.\"\n\nFinthalion was temporarily rendered speechless with surprise.\n\n\"You want to return to Rubenstraad? To the people who have treated you with nothing but disdain and disrespect? To the land that's riddled with poverty and famines and diseases? Why?\"\n\n\"It's my home,\" Agatha responded. \"And... I do have some responsibilities towards them, now that Elpis has claimed me. Besides... Meister Erwan is growing old, he needs someone to help him out in physician duties now more than ever. I cannot escape from my responsibilities, Finthalion.\"\n\nFinthalion stared dumbfoundedly at her for a few moments, then raised his eyes to meet Orion's in a steely glare. \"Well, you seem to have been keeping busy. You were supposed to keep her safe while I attended to the matters of the Elven Council, not poison her against me. My commendations, Orion. You've done nothing but reinforce my opinion about you humans. I was a fool to trust you after what you did, it seems.\"\n\nOrion raised his hands in front of him, taken aback by this sudden apportionment of blame.\n\n\"I did not say anything to her in this regard,\" he explained truthfully, \"this is her choice, and hers alone.\"\n\n\"Really?\" Finthalion said coldly, his silver hair floating about his face in the gusty north wind, \"so you mentioned nothing about Estrilda, about how she had honorably decided to stay back for her people instead of coming with me? No heroic tales spun by the fireside with the intent to mold an easily malleable young mind?\"\n\n\"Agatha had decided on returning to Rubenstraad long before I mentioned that. And I told her the bare truth without glorifying anyone's actions. Perhaps your anger is misdirected, Fin. Perhaps you blame yourself for Estrilda's death, and you are simply worried that a similar fate will befall your daughter if she stays behind.\"\n\n\"Do not presume to understand me, Orion,\" Finthalion thundered, his fair face beginning to turn pink at an alarming rate. \"You know nothing of the grief of losing a loved one. Estrilda was ravished by the very humans she wanted to protect! Where is your justice in that? Where is the grand balance of scales that weighs out every sin with a swift retribution? What happened to the men who had tried to ravage my daughter when you met her? Did you punish them? No! You let them leave with minor castigation. How do you convince yourself to fight for men like that, Orion? And how, with a clear conscience, could you ask my daughter to risk her life for these worthless vermin?\"\n\n\"Once again, you prove yourself incapable of comprehending what I have been telling you for decades, Fin. Injustice and retribution is not as linearly related as you might think. I would never be so bold as to presume that the weight of judging every delinquency falls upon my shoulder: I do not have the moral uprightness required to do it, and in my humble opinion, no one person should have that kind of power. I'm also surprised that you presumed that I have been privileged enough in my encounters with grief to afford this degree of callousness. I'm an immortal in a land of mortals, I have lost my wife to grave injustice and I have a son at death's door. Would it be so preposterous to assume that I know a fair bit about grief?\"\n\n\"If you loved her so, then why didn't you take her away from Rubenstraad, Orion? You knew that her position was a precarious one in the Castle. Have you considered that it might be your fault that she is dead? And have you considered that this is why I cannot trust you with Esmeralda's security?\"\n\nOrion's face went white for a few moments. However, when he spoke, his voice was as calm as ever.\n\n\"Penelope was a witch with exceptional command on healing spells, but she was still a weak, defenseless woman. Agatha is not. She has Elpis and hardly needs my protection. But that,\" he continued, turning towards Agatha, \"will not be enough security for you if you do return to Rubenstraad. Sir Alexander suspects you of your capabilities, and I dare say he is not the only one. However, while the rest of the men will remain silent on their suspicions on account of their loyalty and reverence towards you, Sir Alexander will invariably threaten to expose you to gain your favour or to establish his dominance over you. But I can assure you that it will be all bark and no bite because he is no fool and he understands the necessity of another Dragon Rider as well as I do. If you do return to Rubenstraad, Agatha, you will be expected to play your part in strengthening our defences. You will be trained for battle, expected to join the Council and travel to other lands as an ambassador for Lohenstraad. It is not an easy life that awaits you back there. I hope you will make your decision based on this information.\"\n\n\"I may be a witch, but I am also half Elven,\" Agatha answered slowly, voicing the argument that she had prepared for a while now. \"And mortals aren't sufficiently acquainted with the way of the Elves to know the differences between the two kinds of magic. My magic can be because of my Elven lineage. The Fair Folk is regarded with superhuman reverence amongst mortals, and this will not be contested.\"\n\nOrion nodded. \"That is true.\"\n\n\"Beautiful,\" Finthalion sneered, \"so you will do nothing to convince her to return to the place where she rightfully belongs simply because it is convenient for you?\"\n\n\"I have meddled in her life for long enough,\" Orion said, never taking his eyes off Agatha's. \"She can make her own choices.\"\n\nFinthalion gave him a withering look. Agatha stepped forward between them and laid a hand on Finthalion's chest. \"Finthalion!\" she called out, and when that did not elicit a response out of him, \"Father!\"\n\nFinthalion's eyes softened as he looked down at her. \"Yes, onya?\"\n\n\"He is not lying. I had decided to stay behind long before I learnt of Estrilda. I cannot desert my people in a bid to chase my own happiness, not when the threat of war is still upon us.\" When Finthalion opened his mouth to argue, she spoke over him, raising her voice. \"The Elves did not come to our aid when Malthus Vuldrethe started murdering the Azure Riders. Nor did they come when the consumption epidemic struck, or when the famine arrived. I will be forever grateful to you for freeing Elpis, and am eager to visit the Land of the Fair Folk, but I cannot live a life so cruelly aloof, father. I cannot turn my back upon humans. They are not all bad. And the good ones are worth fighting for.\" She thought of Siegel and his father as she said this, of Lyla, and of Sir Blaxton, and Kane and Rowan and Meister Erwan and Fred and Alice Webster and little Kabuta from the kitchen.\n\nAnd though she did not want to, she thought of Orion.\n\n***\n\nAfter Finthalion and Lyriel departed, Agatha resumed her task of chopping firewood in front of the shed. The ground was hard and the axe had been sharpened to a fine edge by Orion the day before, so her work was easier than usual and consequently, her mind wandered unfettered. She had tried to sound brave and decided in front of Finthalion and Lyriel, but in truth she was still inundated by doubt and uncertainty regarding her decision to stay behind in Rubenstraad. She did not consider herself a brave person even though she had been nothing but all her life, and in this one instance she had dearly wanted to choose the route of escape. In the end, she had not been able to. It did not occur to her that courage was often not the absence of fear, that often the bravest of men were plagued by terror and indecision as acutely as she was, but like her and her mother, the brave men in the ballads were often able to look past their selfish desires and make choices that would serve the collective.\n\nAgatha was so deeply immersed in her musings that she did not notice Orion standing behind her. He had emerged from the house to inform her that lunch was ready, but for now he was standing at the edge of her vision, and as much a slave to his baser instincts as all mortal men around him, was discreetly admiring the supple, graceful movements of his woman while she split a wide chunk of log into narrower pieces. Agatha noticed him when she straightened to wipe a bead of sweat from her brows.\n\n\"How long do we have to stay here?\" she queried, resting the head of her axe on top of the wood.\n\n\"Not long now, I was thinking that we should return tomorrow. We will fly into Rubenstraad separately, of course. You can tell them that you are returning from Ost-in-Edhil, and I will be only too happy to finally leave my tower and resume my responsibilities in court.\"\n\nAgatha nodded.\n\n\"You don't fool me, you know,\" she said as she returned to the log.\n\n\"Would you be kind enough to elaborate on that statement?\" Orion asked, approaching her.\n\n\"I know that you've been so graciously accommodating towards my decision to return because it would benefit the crown and the army. Finthalion was not entirely wrong when he accused you of manipulating me. Had I wanted to travel to Ost-in-Edhil, you would have persuaded me to stay, possibly in a manner that would have escaped my notice.\"\n\nOrion crossed his arms over his chest and smiled faintly at her.\n\n\"Since you are so persuaded of my disingenuous nature I suppose it would be fruitless to try to convince you otherwise.\"\n\n\"I did not arrive at this conclusion in a day, Orion. You lie and manipulate as and when it serves your purpose and you believe that the end justifies the means. I was a fool not to have seen it earlier.\"\n\n\"One day, when you have put a few years behind you, you'll grow to realize that not every human is worthy of your confidence.\"\n\nAgatha stared at him speculatively and asked, \"did you offer to marry me to ensure my return to Rubenstraad?\"\n\nOrion pursed his lips in amused disapproval. \"I presumed that on account of your cleverness, you would be able to discern why a man usually wants to marry a woman, but in the light of the ludicrous conjectures that you have been spawning these last two days, clearly, your imagination outstrips your intelligence.\"\n\nAgatha coloured slightly at this statement and vented her frustration by attacking the log with renewed vigour.\n\n\"One day,\" Orion continued quietly, \"when you are ready to hear it, I will tell you exactly why I want to marry you. But not today, and certainly not when you are wielding an axe. Now, would you like to come inside for lunch?\"\n\n***\n\nOrion received two letters by birds soon afterwards. Agatha abandoned her task of washing the plates and approached him, eager to know about their contents. Orion did not acknowledge her presence but continued to read rapidly down the first scroll from his perch at the edge of the table in the kitchen. When he was finished, he raised his eyes and stared at Agatha with a crease between his eyes, an uncharacteristic flicker of displeasure colouring his countenance.\n\n\"I thought I asked you to leave him alive,\" Orion remarked, resting the scroll on the table behind him. Agatha crossed her arms over her chest, mirroring his stance, and waited for him to elaborate on the contents of the missive. \"That was from Princess Sira. Fredenand died yesterday after an unexpected bout of consumption. Now she is the natural heir to the throne but she is facing resistance from the members of the Ministerial Council, many of whom were loyal to Fredenand or King Olbrecht and do not consider her to be a competent contender for the crown. So she has sent for me, asking for the support of the Lohenstraad Army to secure what is rightfully hers. She assures us that she will abide by the terms of the Treaty for the rest of her natural lifespan if we assist in her ascent to the throne.\"\n\n\"She will be a far better ruler than Fredenand,\" Agatha declared.\n\n\"I do not contest that. What... disappoints and... alarms me is that, you had secured Fredenand's favour, you were aware that you would be extracted from that life soon afterwards, yet you chose to kill him. Castor, William Alden, Walter Abelardo and the page back in the camp in the Disputed Corridor, were all killed in self defence. This is, unfortunately, cold and premeditated murder, and it worries me.\"\n\n\"His death ensures that we will have peace. I fail to see your point, Orion.\"\n\n\"But that was not the reason you killed him. You killed him because in your mind, he had done something worthy of receiving the death penalty and you hastily meted out justice to him.\"\n\n\"Orion, that man raped me for days on end, forced me to do things that I cannot speak of, how can you possibly take his side this time? Was he competent in some obscure vocation that I am not aware of, like Sir Alexander, which immediately absolves him of his crimes?\" Contempt dripped from her voice at this point.\n\n\"I couldn't care less about Fredenand, Agatha. It is the matter of your soul that concerns me. Fredenand was killed in a bid to exact revenge, not for self defence, not as a farsighted move to prevent the war from restarting. You must not travel down that path, Agatha. Take it from someone who has been repeatedly lured by the dark pull of revenge - it is not worth selling out your soul for. The intoxicating rush that you possibly received from taking another life can quickly become addictive, until you will start killing without reason, or for imagined or minor infractions. It is more likely in your case because you are equipped with the power to do it, and stronger witches than you have given in to the temptation of necromancy. Do you know the story of why Malthus Vuldrethe started to kill the Azure Riders?\"\n\n\"No.\"\n\n\"The woman that he loved spurned his affections and married an Azure Rider. It may sound like a ludicrous reason now, but for Malthus Vuldrethe, it was enough to kill thirty two Azure Riders, and by extension, their Dragons. The reason that we are told, is unfortunately, the feather that broke the camel's back. He had struggled with poverty, a sick father, bullies in his social circle nearly all of his life. This was the last straw that made him embrace dark magic.\"\n\nAgatha swallowed, the terror that bubbled constantly inside her rising to the surface. Orion was voicing some of her deepest, darkest worries, and dread choked her airways the longer she stood in front of him. When she spoke, her voice sounded petulant and defensive even to her own ears.\n\n\"Do not worry, Orion, I will not go over to the dark side. Perhaps your informers failed to notify you of the details of the circumstances of Walter Abelardo's death, but I believe it was, in your own words, cold and premeditated murder as well. Since I haven't yet given in to the seductive lure of necromancy, I believe it is safe to presume that it will never happen. No man violates me and walks away unscathed.\"\n\nOrion looked troubled as he asked, \"how did you kill him?\"\n\n\"Nightshade. I built my tolerance to it over time, so that when I offered him the drink, he did not suspect poisoning. I drank it with him, you see.\"\n\nOrion's face was studiously blank as he inspected her defiant, troubled expression. \"Pardon me, but that seems like too elaborate and circumspect a plan to have been devised by someone as impatient as you.\"\n\nAgatha blushed furiously at his shrewd perceptiveness.\n\n\"Was it Siegel's idea?\" Orion hypothesized. Agatha did not answer. \"Was he the one who convinced you that it is a sign of strength of character to play for judge, jury and executioner?\" When Agatha did not respond, he muttered, \"Perhaps I have been worried about the wrong witch.\"\n\n\"What else was I supposed to do, Orion?\" Agatha snapped, \"let Walter rape me for days?\"\n\nOrion shook his head. When he spoke, his voice was gentle. \"I do not fault you for killing him, because there was no other way that you could have escaped his clutches. My concern is with the method employed: it is a little worrisome that a fourteen year old boy came up with such a cold blooded plan to kill someone. I would give Siegel the benefit of doubt in this instance and assume that his love for you skewed his judgement a little. That being said, I still do not condone Fredenand's murder - not for the reason it was committed anyway.\"\n\n\"Is it not a bit hypocritical, coming from a man who orchestrated the assassination of Prince Elrond?\"\n\n\"Elrond was not killed for revenge. It was either his life or my son's. Besides, my soul is beyond salvation, Agatha. Yours is not.\"\n\nAgatha could neither understand his convoluted reasoning nor did she want to, and she persuaded herself that the nagging guilt that she felt for killing Fredenand was simply because she had grown sympathetic to him.\n\nOrion picked up the second scroll from the table, unravelled it and started reading.\n\n\"This is from Sir Alexander,\" he volunteered without her having to ask. \"He wants me to join his men as soon as possible. Sira has sent him a similar missive and he has set out for Vandan with his men immediately after dispatching this letter.\" Orion smiled a little, staring at the parchment. \"He never fails to impress with his choice of words. 'If you have finished canoodling your pet witch, please join us, we will be marching alongside the Isiya river.'\"\n\n\"You should go,\" Agatha said.\n\nOrion spent the better part of the afternoon explaining her due course of action for the subsequent days. She was to wait for another day, then travel on Elpis' back to Rubenstraad. When asked about her whereabouts for these past few days, she must maintain that she had been residing with the Elves all this while. Then he drew out a map of Lohenstraad on a piece of parchment and instructed her on the direction that she must take, landmarks she must watch out for to ensure that she was in the right direction.",
        "\"If you lose your way, touchdown in any of the villages or towns that you pass by and ask the people to direct you towards Rubenstraad. Your status as a Dragon Rider will protect you from all harm. People in Lohenstraad treat Dragon Riders with nearly superhuman reverence. Also, I shall need my ward back.\"\n\nThen he scrawled out a quick letter to Siegel, instructing him to do away with the apparition of Ice and flew to a nearby town to dispatch it. He left early the next day, before Agatha had woken up.\n\n***\n\nAgatha decided to hike up to the top of the hill behind the cottage that morning, because the rooms felt empty without Orion's presence. He had somehow filled the place with his quiet, assured occupation with some tasks or other; in fact, Agatha could not remember ever seeing him sit still in one place for long. Even now, the kitchen looked neatly organized, the table-top cleared and polished to a shine, his bed in front of the hearth neatly made without a single crease on the sheets. It was the meticulous arrangement of spices on the shelves that made her laugh, for she had never seen a man so scrupulous in housework or so attentive to details; once stripped off the mail and the sword, Orion was certainly a walking conundrum amongst his sex.\n\nOnce Agatha reached the top of the hill, she sat on a fallen, moss-covered, toadstool-spotted log for a while, staring vacantly at the grey skies that threatened snow. Solitude often turned her mind towards the unpleasant duties that lay ahead of her, the foremost of them involving talking to Siegel. A faint rustling amongst the trees alerted her to the presence of a living creature behind her, and not entirely alarmed, Agatha turned around to find herself facing the strangest creature she had ever seen.\n\nShe had a young girl's torso and head set atop the legs and haunches of a goat. Little horns jutted out of a dense cloud of sleek, auburn hair. The girl (or goat?) looked younger than her, barely of age and she wore a strip of fur wrapped around her torso, cinched with a string around her midsection; her shoulders were bare despite the cold.\n\n\"Who are you?\" Agatha enquired tentatively, uncertain whether she understood her, but persuaded that it would have been terrible manners to ask, \"What are you?\"\n\n\"My mother said that you are the Rider from the prophecy,\" she declared, stepping out of the trees and towards her. Agatha noticed that she had a woven basket in one of her hands, made from pine needles. It was filled to the brim with pinecones.\n\n\"I suppose so,\" Agatha agreed cautiously. \"Where do you live?\"\n\n\"We used to live in the Ancient Forest, but mother said that it is now safe to migrate southwards, now that the Great War has ended.\" She paused for a while and added, \"I thought you would be a man.\" Then as an afterthought, \"you are pretty.\"\n\nAgatha remembered a fragment of a conversation with Orion a few days ago. He had said that the Ancient Forest was teeming with magical creatures. \"Thank you,\" she smiled, \"I think you are very pretty too.\"\n\n\"The night is long in the Ancient Forest. And it gets very cold. I am really happy that we could come here.\"\n\n\"I am happy to hear that too. Would you like to sit down?\" Agatha nodded towards the empty spot on the log beside her. \"I would love to hear all about the Ancient Forest.\"\n\nThe little faun fidgeted and said, \"no, I have to go. My mother is expecting me.\"\n\n\"At least tell me your name.\"\n\n\"Ciera,\" she blurted, then turned around and trotted away into the trees. Agatha shook her head absent mindedly and smiled a little, feeling hopeful after what felt like years.\n\n***\n\nAgatha had intended to sneak away into her own chamber in the Keep after landing on top of one of the many turrets that frequented that part of the Castle of Rubenstraad, but it was not to be; Cecilia from the harem met her on one of the hallways, screeched like a banshee and promptly fainted. Her shouts brought men and women from the surrounding wings (a few of whom swooned as well) including Lyla, who ran towards her and threw herself into Agatha's arms, sobbing hysterically. Agatha ran a soothing hand over her back until Lyla's sobs subsided, and led her through the crowd into her bedchamber by the infirmary. Before she had managed to exchange more than a few commonplace niceties with her, Sir Blaxton appeared at the doorway, surprise and shock written over his young face. He was swiftly followed by Henry Baldric, who wanted to know all about the circumstances of her escape from Regstone. And Agatha narrated her experiences like a well-groomed parakeet, telling them all about Finthalion and about her short sojourn with the Elves.\n\n\"We must inform Orion of this,\" Henry Baldric declared at once to Sir Blaxton, who informed him that Orion had joined Sir Alexander in his journey to Vandan to provide support to Princess Sira.\n\n\"Oh, so has he decided to leave his tower then?\" Henry Baldric sounded surprised.\n\n\"Apparently so,\" Sir Blaxton shrugged. Agatha kept her face carefully inscrutable and played along with the charade.\n\nTwo handmaids were unleashed upon her shortly afterwards, who scrubbed the grime off from her person and dressed her in the full ensemble of a chemise, corset, dress and a stiff ornamental cloak and she was produced before the court soon afterwards. Archibald Mannering and Algernon Rhynster were called upon to verify her identity and then it was swiftly decided that she would sit for lunch with the royal family. Over lunch, Queen Avelina asked her whether she would like to marry Prince Tristan Constantine. Agatha, who had a premonition that this would happen, set her silverware down on her plate and with all the firm graciousness expected of Princess Esmeralda De Clare, told her that she was overcome with happiness at a proposal like that, but for the time being, she intended to remain unwed. To her great surprise, Prince Tristan himself came to her rescue, reprimanding his mother for pestering a woman who had been widowed but a day ago. To add to her amazement, the Prince turned towards her and winked, and later, when his parents were engrossed in conversation with Henry Baldric, he leaned towards her and whispered, \"do not mind me, madam, I am in love with a nobleman's daughter, and simply do not care for another woman. I assure you that you are quite beautiful and any man would be indeed fortunate to have you as his wife, but I only have eyes for Catelina.\"\n\nAgatha smiled at him and said, \"I wish you success in wooing her over, then.\"\n\n\"Oh, it is not so much a matter of wooing her over than convincing my parents about her. You see, she is not of a high birth.\"\n\n\"Let me know if I may be of assistance in your endeavour to win over His Highness.\"\n\n\"Of course,\" Tristan flashed her a smile, \"I hope we can be friends.\"\n\n***\n\nAgatha settled into her new life fairly quickly following that. Unfortunately, the marriage proposal from Tristan Constantine was not the only one that came her way, he was quickly followed by Archibald Mannering, Lyon Rhynster and a score of other lords she was not previously familiar with. Agatha turned them all down graciously, and internally heaved a sigh of relief as her refusal was taken in stride every time. Her status as a Dragon Rider ensured that she was possibly the only human woman to have ever existed in recent times whose free will was respected. Nonetheless, Archibald Mannering turned out to be fairly persistent, and every evening, Agatha returned to her newly allotted wing to find an ostentatious bouquet of flowers left by him. She did not broach the subject in front of Lyla but she learnt about it soon enough, after noticing the ever-increasing floral arrangements in her visitors' hall and enquiring persistently about it. Lyla laughed disdainfully when Agatha told her about Archibald Mannering, and warned her not to fall for his entreaties. Agatha assured her that she would not.\n\nLyla was not as tactful as Agatha had been when it came to enquiring her of a traumatic past, and when Agatha displayed a reluctance to talk about the particulars of her time with Fredenand, Lyla frowned at her and argued, \"I think you are forgetting that I have been through that too.\" Agatha could not come up with a rational objection to this statement, and for a few nights the two friends lay side by side on the sprawling bed in Agatha's chamber, with one of them talking and the other one listening faithfully. Agatha discovered that talking about her ordeals of the past month eased some of the pressure from her chest, and the purgation brought some relief to the constant terror that dogged her steps nowadays. Lyla held her in her bosom and wept profusely, Agatha breathed methodically through her nose, her eyes dry and her outlook placid, and wondered if she would ever feel anything ever again.\n\nTo keep herself occupied, Agatha resumed her infirmary duties under Meister Erwan, who, she was pleased to find, remained as irascible as ever, and treated her exactly the same as before. He called her 'Agatha' instead of 'Princess Esmeralda,' ordered her about and called her a blithering idiot or an ignorant buffoon whenever she failed in the decidedly easy task of reading his intentions clairvoyantly and carrying them out before he had a chance to utter them. Surprisingly, this offered her a modicum of consolation, and she found herself looking forward to his effusive criticism when she woke up in the morning. Lyla, who now worked alongside her in the infirmary, often took offense at his behaviour towards the two of them, and subsequently, it fell upon Agatha to stop them from shouting at each other.\n\nBesides her infirmary duties, Agatha was now included in the King's Council and was expected to appear in their meetings whenever they convened, which was nearly every day in the light of the turbulence regarding the coronation of Princess Sira. Agatha received a firsthand account of the proceedings in Regstone from Orion, who faithfully sent her a missive every day, recounting the proceedings of the court. Agatha appreciated his conscious effort to treat her as a confidant instead of a subordinate but it was still not enough to earn her forgiveness.\n\nSiegel came looking for her as soon as she was settled into her new quarters, and he swept her into a wordless embrace once he walked into her visitors' hall. Kane and Rowan, who had been assigned as her personal guards by Henry Baldric ever since her arrival to Rubenstraad, started at this intimate initiation by one they thought was a complete stranger, and made to move him away from the premises, but Agatha stopped them, assured them that all was well, and led Siegel into the privacy of her bedchamber.\n\n\"How are you doing?\" he inquired, gathering her face in his hands. Agatha stared at his familiar brown eyes and kind face and felt a strange regret wash through her; the eyes were the wrong colour, the kindness undeserved. Nonetheless, she commanded her countenance and answered that she was doing well, and she was pleased to hear of Siegel's new occupation as the Chief Wardmaker of the Castle.\n\n\"What did he do to you?\" Siegel asked, smoothing his hand over her hair. Agatha was confused for a moment as to who he was talking about, then realised that she was expected to recount her experiences with Fredenand once again.\n\n\"He was only a little bit worse than Walter,\" Agatha volunteered a wan smile, then removed Siegel's hands from her face. \"There are some things that you need to know, Siegel. Would you please sit down?\"\n\n\"Yes, of course,\" he assumed a seat by the entrance of her bedchamber, gazing up at her with an alacrity and tenderness that broke her heart.\n\n\"I have not been faithful to you,\" Agatha confessed, clasping her hands in front of her. \"I...\" she hesitated, then started speaking very fast, laying bare all of her misdemeanors in front of him, awaiting his judgement. Siegel listened quietly, his expression changing from open and cheerful to disappointed and finally, angry.\n\n\"I am going to kill him,\" he said quietly after Agatha had finished.\n\n\"No, please, don't,\" she begged. \"If you kill him, Ice will die, and then there will be earthquakes and storms all over again like the last time. Please try to understand.\"\n\n\"Do you love him?\" Siegel asked bluntly.\n\nAgatha shook her head. \"I thought I did,\" she murmured, \"but it was the childlike infatuation of a naive woman. I did not know any better.\"\n\n\"Do you love me?\"\n\nAgatha took longer to answer this, and she could tell by the flicker of pain behind his eyes that he too, understood the weight of the word that she was struggling to utter.\n\n\"No,\" she finally whispered, hating herself as his face twisted in pain and he looked away from her, closing his eyes for a few moments and pursing his lips.\n\n\"What I fail to understand,\" Siegel spat, \"is why you have left him alive after all of this. Did you like it when you lay helplessly under him? Did you want him to ravage you against your will?\"\n\n\"I don't know!\" Agatha cried out in distress. \"He never hurt me, Siegel!\"\n\n\"I see. So you will let anyone have their way with you as long as they do not hurt you?\" His face showed the disgust that he clearly felt.\n\n\"No!\" Agatha cried in anguish, \"I liked it!\" and then she subsided into an unnatural silence, terrified and mortified by her admission.\n\n\"Of course. Did you like it when Fredenand raped you, too? When Walter took you every night and turned you out of his bed when he was finished with you? Did you perhaps grow a taste for perversion after Walter?\"\n\n\"No!\" Agatha repeated, tears springing to her eyes. Siegel rose from his chair and stepped in front of her, their noses nearly touching.\n\n\"But you like it when he does it,\" he sneered. \"Even after everything he has done, given the opportunity, you would climb into his bed and let him have his way with you.\" Agatha shook her head frantically at this. Siegel continued mercilessly, \"if it had not been for me, you would have grown up into a whore, passed from one man to another in the Academy. But now, it seems like I intervened a bit too late.\"\n\nAnd with that proclamation, he turned around and left. Agatha swayed slightly and seized an ornate pole of her four-poster bed, registering bleakly that Siegel had been the only man who had not hurt her...until she had denied him.\n\n***\n\nFortunately, she did not have much time to ponder over Siegel's words. Sir Blaxton enrolled her into horse riding, running and sword fighting lessons soon afterwards, this time under the tutelage of a middle aged knight called Sir Bartelemi. It was finally during her sword fighting lessons that some of the more desirable side effects of being a Dragon Rider became clearer to her; her reflexes were improved tenfold, her hearing was enhanced, her side vision was nearly as accurate as her front, her movements were faster, her limbs more coordinated. Agatha had always been physically strong for a woman, but this was different. A week into her sword fighting lessons, she could knock the sword out of any page's hands; after two months she was seen sparring with Kane and Rowan simultaneously in front of the Armoury, dodging both men with the easy grace of a feral animal while Sir Bartelemi watched and hollered instructions from the sidelines. After about ten minutes of dodging and feinting she knocked the sword out of Kane's hand, but then relinquished victory over to Rowan by slipping on ice and falling promptly, ruefully recognizing that even Dragon Riders were not immune to the elements.\n\n\"Not bad,\" she heard a voice from behind her and turned around to see Orion walking towards them. \"Isn't that sword a little too unbalanced for her?\" he enquired of Sir Bartelemi, who scratched his head and answered that he had been looking for a lighter, shorter sword for the past month.\n\n\"You're back early,\" Agatha said, sliding the sword into the scabbard that hung from her belt. Sira had successfully secured the fealty of all the members of the Ministerial Council and had been crowned a week before.\n\n\"We had better weather than expected,\" Orion shrugged, then nodded to Kane and Rowan. \"How about,\" he turned to Agatha, \"we travel to the Forgers' Realm and find a sword for you? I daresay they would be ecstatic to be able to help you.\"\n\n\"Er -\" Agatha glanced at Sir Bartelemi, who at once thought that this was a spectacular idea.\n\nAccordingly they flew out on dragon back the following day, flying over the hamlets and towns they had so painstakingly crossed on horseback a few months ago. They reached the Forgers' Mountains in two hours, and Orion insisted on walking from the point where the red sandstone rock formations started, citing the reason that it was considered rude manners to touch down in front of someone's door on dragon's back. Agatha did not mind the walking, though the frozen tracks impeded their progress a little. By nightfall, they had reached the entrance to the Forgers' Realm.\n\nKing Thozomir Copperbuckle himself came out this time to invite them inside, and when asked whether the Forgers would be able to build a sword for Agatha, agreed with the alacrity of a person determined to return a favour. Their stay at the Forgers' Realm passed without much incident, at the end of which Agatha came away with a one handed double-edged sword forged from Isiyan steel, a virtually indestructible, light, black metal mined from the banks of Isiya river where it flowed through the rhyolitic lava flows in the Forgers' Mountains. The sword was exclusively customized to her arm length, stature and strength, and when she held it in her hand, it felt perfectly balanced. The Forgers named it Lazarus and offered her a simple leather scabbard to store it. After Agatha returned, she discovered that she was able to beat both Kane and Rowan in a surprisingly short time when she wielded Lazaraus.\n\nSiegel caught up with her in the infirmary late one evening shortly after her return from the Forgers' Mountain. He apologized firmly and sincerely for his outburst a few weeks before and begged for her forgiveness and a renewal of their friendship. Agatha found herself unable to decline his apology on account of their history and graciously amended that she could be friends with him. Siegel lounged about in the infirmary afterwards, enquiring about her day while Agatha attended to the handful of overnight patients before retiring for the day. When she bade goodnight to Siegel an hour later, she felt reasonably cheerful, and allowed herself to hope for the renewal of a friendship that had been her only source of happiness at one time.\n\nAs the days passed on in a mix of hail and snowstorms, Agatha found herself becoming increasingly embroiled in the affairs of the Council, often requiring all of her self restraint to keep from voicing her frustrations with the men who insisted on putting their conceit above all else. Orion, Fred Webster and Henry Baldric were the only men in the Council who had a scrap of sense about them, Leowfin Vulfoliac, the court treasurer simply did not care, Algernon Rhynster was a blithering idiot, to quote Meister Erwan, and Vladimir Evanoff seemed wilfully intent on sabotaging every agreeable policy that was produced on the table. King Egbert, unfortunately, seemed to possess a fair share of conceit in addition to a simple mind: a dangerous and an unfortunately commonplace combination, and Queen Avelina was close to Leowfin Vulfoliac with her nonchalance. In this instance, Orion was trying to create a ninth position in the Council to include a representative from Luteri to reduce the chances of an uprising in future, and his proposition was met with all kinds of ludicrous objections. After observing the proceedings of the Council for about a fortnight, Agatha had to grudgingly admit that she could take a leaf out of Orion's book as far as exercising self command was concerned.",
        "In the meantime, Grandmeister Eustace's condition declined steadily, and all of Agatha's herbs, brews and spells could not keep him from flailing about in pain at night. Agatha was unable to leave his bedside when he went into a delirious slumber, and sat nearby, silently shouldering the burden of his pain and terror like any physician devoted to her calling feels impelled to. Towards the end, when he started mistaking her for his mother, Orion laid a gentle hand on her shoulder and asked her if she wanted to leave. Agatha raised her eyes to meet his tired gaze and said that she would see him through the end, and she stuck to her promise, falling asleep on the ground by the foot of his bed, her wrist trapped in Eustace's vice grip. She woke up the next morning to find her cloak wrapped around her shoulders and her hand relinquished by her patient. When she stumbled to a standing position, she found Orion sitting on the other end of the bed.\n\n\"He's gone,\" he mumbled, staring at her with a helplessness that she had never witnessed in his eyes. Agatha walked over to him and seated herself on the armrest of his chair and pulled his head into her chest. Orion clung to her like a lost child, and for a long while, none of them spoke.\n\nSpring arrived with erratic, misty showers and a deluge of colourful arrays of blossoms on the trees lining the outer bailey of the Keep. The snow thawed and the Central Marketplace was suddenly teeming with hawkers and gamblers, pickpockets and fashionably dressed ladies, fortune tellers and pyromancers, all palpably happy to be free of the confines of their homes after a long winter. Agatha was kept busy by a sudden outbreak of cough and cold and runny noses amongst the younglings. Alice Webster gave birth to a beautiful, healthy girl in the maternity wing of the infirmary, and Fred Webster bawled like a little child when he held her in his arms.\n\nSiegel caught up with Agatha as she was hurrying from the kitchen to the infirmary one evening, and asked her if she wanted to accompany him to the spring dance that was to be held that year in the Great Hall. Agatha, who had been aware of such an event but had no plans of attending, declined graciously and continued walking. Meister Erwan was in one of his famously foul moods that morning and she did not want to give him another reason to yell at her.\n\n\"I had nearly forgotten how exquisitely breathtaking you look in a dress,\" Siegel smiled, catching up with her stride and nodding towards the silk gown on her person. \"Those breeches make you look like a young Page.\"\n\n\"I am supposed to meet Queen Avelina later this evening for tea,\" Agatha groaned, a little bit of her exasperation at the meaningless traditions of high society surfacing through her otherwise placid demeanor. Meister Erwan had not been happy when she had asked for the evening off.\n\n\"You look very beautiful in this dress, so I cannot complain too much about that,\" Siegel laughed. \"That colour becomes you.\"\n\n\"Thank you,\" Agatha responded, then revealed, \"Jonathan gave this to me a long time ago.\"\n\nThere was a short pause during which Siegel processed this information. \"Jonathan? So you mean Orion gave you this?\"\n\n\"No,\" Agatha declared, instantly regretting her decision to speak about the origin of her dress. \"Orion had nothing to contribute to this.\"\n\n\"I cannot believe that after everything he has done to you, you are still wearing this,\" Siegel reproached. \"Not only this, you also wear the dresses that Archibald Mannering sends you. You should not lead on men like that, Agatha.\"\n\nAgatha halted in the middle of the hallway and turned to face Siegel. \"I am a practical woman, Siegel. If wearing dresses sent by a gratuitous suitor enables me to spend my limited allowance on items that matter to me, then that is what I shall do.\"\n\n\"I am sure Orion or Lord Mannering will not understand that rationale,\" Siegel persisted. \"The woman I knew had too much honour to do this.\"\n\n\"The woman you knew was a child,\" Agatha snapped, feeling ill tempered.\n\n\"Is it really true that he took you against your will or is that a fabrication you conjured to spare my feelings?\" Siegel asked suddenly.\n\n\"I will leave it to you to decide that. In the meantime, please never talk to me again,\" Agatha asserted coldly and walked away, vowing never to speak to Siegel again.\n\n***\n\nAgatha received the first indication of Lyla and Sir Blaxton's romantic partnership when the latter paid her an impromptu visit to the infirmary. He talked at length about what an asinine person Sir Alexander was, and how Orion had made a grave mistake by relinquishing the post of Generalship to him, (Orion had meekly started serving in the post of Lieutenant General alongside Sir Blaxton after his return from Regstone.) and how there was virtually no difference between how things were run formerly and now (\"I mean, Orion is still doing all of the work and Sir Alexander is still doing all of the talking, only he talks louder than before\") and how he could not understand why Orion or men in general often grew lovesick. He ended this effusive monologue with the enquiry: \"Pray, have you seen Lyla?\"\n\nAgatha informed him that Lyla had gone to her herb garden to secure some of the dried herbs from the shed. Sir Blaxton left the infirmary as far as his legs would carry him. Lyla returned quite late, and her face was flushed and her countenance wildly happy for someone who had simply gathered a few herbs from a garden. This was all the proof Agatha needed, but she stayed silent and did not prod her friend, sincerely believing that Lyla would volunteer the details of their affair when she felt comfortable. She felt exceedingly happy for her, and privately wished her all the happiness in the world.\n\nAgatha wrote to Sira shortly after this, enquiring after her mother's books in the Queen Regent's wing, and when she had nearly given up on a response from her, a carriage drew up in front of the Castle Keep, laden with all the books that Georgina had told her about, with a short but sweet message from Sira, inviting her to visit Regstone whenever she had the opportunity. Agatha was found sitting cross legged on the grass in her garden one afternoon a few days later, with a chunk of graphite in her hand and planks of wood and sheets of glass piled in front of her, squinting furiously at the moth eaten, yellowed pages of one such book.\n\n\"You look like that book has offended you personally.\"\n\nAgatha glanced up, startled by the sudden approach, and found Orion standing by the fenced entrance to her little patch. Agatha scratched her neck, realizing that she would have to ask for his help.\n\n\"I am trying to build a glass house for my plants. According to this book, glass houses preserve the temperature and keep plants alive during winter months. I secured the raw materials but unfortunately it seems like there is a page missing from the instructions.\"\n\n\"Mind if I take a look?\" Orion raised an eyebrow.\n\n\"Of course not,\" Agatha feigned nonchalance even though she was secretly thrilled.\n\nOver the next few days Orion took charge of her little project, teaching Agatha what she needed to know to help him. He did not talk much, neither did he seem to expect any conversation from her end, and she grew comfortable with the silence, allowing her mind to drift off while she worked. It did not help that her thoughts, as always, increasingly turned towards him, and a few days later, her curiosity got the better of her and she asked him about Lyriel. Orion smiled a little as he hammered a nail into the wood, and Agatha was certain that he would not respond or would tease her dreadfully. To her surprise, he did neither and after a few moments of silence, divulged, \"she was my lover during the time I stayed with the Elves. We parted on amicable terms when I left.\"\n\n\"So why did you leave?\" Agatha prodded.\n\n\"I did not belong there,\" Orion shrugged. He did not volunteer any more information about Lyriel and Agatha's dignity would not allow her to probe and they continued working in silence after that, a silence that was coloured with a hint of amusement from Orion's side and frustration from Agatha's.\n\nA few days later, when the glass house was nearing its finish, Agatha was found in a foul mood as she hammered nails into wood with uncharacteristic violence.\n\n\"I feel sorry for that piece of wood,\" Orion said mildly.\n\nAgatha eased the intensity of her strikes and grimaced in response.\n\n\"What is it?\" Orion persisted.\n\n\"I sent Kabuta to Central Market to buy me a nightshade sapling from a dealer I had corresponded with beforehand. Nightshade is not easily available in our climes, and I had plans to put it in the glass house. Unfortunately the dealer charged a hefty price and gave him a plant riddled with mealybugs. I would love to go to him and give him a piece of my mind, but his place is close to the brothel and I don't want a reiteration of my last experience there.\"\n\n\"Who are you planning to kill now?\" Orion asked suspiciously.\n\n\"Nightshade is not just for killing, you know,\" Agatha said with a touch of asperity. \"It is frequently used in sleep potions.\"\n\n\"Are you still having nightmares?\" Orion asked with a crease between his brows.\n\n\"It's not for me,\" Agatha mumbled, though that was not entirely true. Despite wearing herself out faithfully with running, horse-riding and sword fighting, she still woke up in cold sweat at times, her heart hammering and her body shivering, her airways choking from an unnamed terror. She tried to count her breaths like Orion had taught her back in the farm house, and that usually helped, but Agatha was becoming tired of waking up in the middle of the night.\n\nThe next day, Agatha found three perfectly healthy nightshade plants in terra-cotta pots by the entrance of her garden. She thanked Orion when she saw him next, a strange, unfamiliar emotion seeping its way into her ribs. Her glass house was finished the next day and Orion helped her in moving her plants into it, and transplanting the new saplings into raised beds inside it. Unfortunately the nightshade saplings were still too young to bear fruit, and Agatha was found sitting in the infirmary late at night a few days later, terrified of going to bed only to wake up afterwards.\n\nMeister Erwan found her there when he walked in a little while later, and asked her why she wasn't in bed. Agatha mumbled her predicament to him.\n\n\"Well, have you tried valerian?\" he demanded.\n\n\"Have I tried what?\" Agatha asked.\n\n\"Valerian, you blithering idiot,\" he snapped, then padded away to the back of the infirmary, looking for dried valerian roots and muttering things like, \"this is what happens when you rely too much on spells\", \"young people nowadays\" and \"ignorant imbecile.\" He set a pot of water to boil and a little while later, offered her a cup of murky tea.\n\n\"What you have is a case of excited nerves. Valerian has been used to treat conditions like yours for centuries. Drink this every night before going to bed. Don't you have valerian in your garden?\"\n\n\"I do,\" Agatha said, feeling humbled. Valerian grew like weed all around her garden, dying off with the first frost and regenerating themselves every spring. The tea calmed her down almost immediately and a little while later, her eyelids began to droop, the exhaustion of the day finally catching up with her.\n\n\"What are you doing here late at night?\" she asked.\n\n\"I am old, I don't need much sleep. Now off you go,\" he snapped, shooing her away.\n\nAgatha laid down the empty cup on top of a counter and left. For the first time in half a year, she slept uninterruptedly that night, and when she woke up the next day, she felt more refreshed than she had in a long time.\n\nSummer arrived, bringing an uninterrupted stretch of stunning blue skies and gloriously warm weather. Fauns and pixies started to raid fruit orchards and vegetable gardens across Lohenstraad, and farmers puzzled over how to tackle this entirely new and different type of problem. Agatha spent most of her free time outdoors, riding on horseback or on Elpis, bonding with her Dragon over long flights through the wispy white clouds. She learnt that Elpis was still a baby in Dragon years, and Ice merely an adolescent. It explained why Finthalion's Azure Dragon had been so much larger in stature than Ice, and it also explained why Elpis was still unable to breathe fire.\n\n'Are you sure you will be breathing fire and not ice like the Azure Dragons?' Agatha asked for the hundredth time.\n\n'I am not entirely sure. Father says I might be able to do both, but it will still be half a century before that happens.'\n\nOn one such balmy morning, while Agatha was hurrying towards the infirmary after an hour long ride with Elpis, Siegel accosted her in one of the hallways of the Castle Keep. They had been staunchly ignoring each other all this while, choosing to avert eye contact whenever they passed by each other on hallways, but this time he had sought her out to apologise. Agatha listened to him wearily, his fervent apologies beginning to sound all too familiar, and amended, \"I will think about it.\" Unfortunately, Siegel continued to beg, and out of a desire to be rid of him than anything else, Agatha acquiesced to give their friendship another chance.\n\nLyla opened up to her about her engagement with Sir Blaxton soon afterwards. Agatha, who had known about it for a while, expressed every appearance of joy, and asked them when they were planning to marry. To this, Lyla blushed furiously and declared, \"before this winter.\" Then after a pause, she asked whether Agatha would be her Maid of Honor. Agatha was only too happy to accept.\n\nA few days after this, Agatha received an unpleasant surprise as she woke up in the middle of the night to find Siegel's arms around her.\n\n\"What are you doing here?\" she hissed, moving the covers and scrambling out of the bed. Siegel tried to hold on to her but she was much stronger than him now.\n\n\"I cannot sleep, I miss you so, Agatha,\" he sighed, sitting up on his haunches.\n\n\"How did Kane and Rowan let you in?\" Agatha asked suspiciously. Then she rushed out of her bedchamber in her chemise to look for her guards, only to find them sleeping unnaturally soundly by the double doors to her wing.\n\n\"What did you do to them?\" Agatha demanded, turning towards Siegel, who had followed her all the way from her bedchamber.\n\n\"Nothing,\" he clarified hastily, \"just a Sleeping Spell.\"\n\n\"Release them at once,\" Agatha commanded. Siegel did so dutifully, then left, leaving a general sadness in his wake. Agatha was never a hard-hearted creature and she was almost tempted to call him back on account of pity, but she steeled her heart and reminded herself that she had been with him for the wrong reasons for long enough.\n\nDespite the turmoil in her personal life, Agatha seemed to carry on with all outward appearances of happiness. Ballads were written about the lovely Thistle Rider, whose beauty surpassed that of all women in the nation, and who had gained the favour of both the Elves and the Forgers, and carried their Cloak and Sword respectively as a mark of their favour. (And that was how she had learnt that the cloak Orion had given her was of Elven origin.) Agatha listened to these poems with growing weariness in court and gracefully offered her thanks, her only source of entertainment being an exchange of an exasperated glance afterwards with Orion, who seemed to find the poems and the songs as amusing as she found them annoying. In moving about her day, Agatha noticed that she seemed to cross paths with Siegel more often than before, but she dismissed the thought from her mind. She was too busy preparing for Lyla's wedding, and cared little about ballads or Siegel or for that matter, Orion.\n\nOne day, after a particularly unctuous (and inaccurate) song about her beauty, Orion decided to tease Agatha a little after court proceedings were over. They were walking along a hallway, both going towards the Armoury for different reasons.\n\n\"Stop,\" Agatha insisted, trying to rein in a smirk as he quoted a particularly honeyed line from the poem.\n\n\"I would, but an Elfling of a frail, delicate disposition with glorious auburn hair seems to have caught my eye,\" Orion snorted.\n\n\"That is a very inaccurate description,\" Agatha snapped, tucking a lock of her raven hair behind her ear.\n\n\"Don't blame him, he probably wrote the song with his own lady love in mind, then put your name in it,\" Orion explained unhelpfully. \"According to one ballad, Penelope could sing like a nightingale. Suffice to say, if she ever attempted to sing, I usually left the chamber.\"\n\nAgatha laughed at this, then realized that Siegel was walking down the hallway from the opposite direction, fixing the two of them with a baleful glare. He accosted her later in the infirmary, when Lyla was not present.\n\n\"I thought you said that you didn't love him?\"\n\n\"Who?\" Agatha asked, momentarily confused by the direction of the conversation as she was trying to measure out dried chamomile into a cup.\n\n\"Orion makes you laugh,\" Siegel stated. \"I have never seen you laugh otherwise.\"\n\nAgatha set the cup down on a counter and turned to Siegel. \"That is because he says the most asinine things!\" Agatha exclaimed. \"And no, I don't love him.\" On the contrary, this time, talking about Orion did not raise the storm of conflicting emotions in her chest, and Agatha reflected with some happiness that she no longer fixated on him. Her anger with him had dissipated over the last few months, and his betrayal did not rankle anymore, now that she was able to see the effect of acquiring the Disputed Corridor on the society and the economy. Agatha had always been too rational to hold on to prolonged anger, and as her nightmares had eased away with the valerian, so had her bitterness.\n\n\"I am simply happy with my own life, Siegel,\" Agatha asserted quietly. \"If you cannot comprehend that, then we have nothing more to discuss.\" More than happy, she was busy with the infirmary, council duties, potion making, her personal training, and now, Lyla's wedding. Between all of that, she had no inclination to bestow her affections on men she clearly now considered undeserving of it.\n\nSiegel did not seem to understand her rationale, nor did he seem to care, for he turned around and left. The next day, his chambers were empty and he was nowhere to be seen in and around the castle. He had taken most of his personal belongings with him.\n\nOrion was not happy. \"Did I just lose my best Wardmaker over a lovers' spat?\" he enquired, rubbing his jaw.\n\n\"It wasn't exactly that,\" Agatha clarified, \"but I apologize for playing any part in it.\"\n\n\"Not to worry,\" he reassured her, \"I will find another one.\" Agatha could not help but notice that despite the effort to appear nonchalant, Orion looked distinctly worried.\n\n***\n\nThe days leading up to Lyla's wedding passed in a flurry of silks, floral arrangements, menu and venue selection, finalizing the guest list, frustrations over missed deliveries and other obstacles. Agatha barely slept in the week preceding the wedding, haggling with Leowfin Vulfoliac over expenses, determined that her friend have the best of all, and one evening, Lyla walked into the infirmary to find Agatha standing by a countertop and penning down a well worded letter to the wedding band, confirming the date with them for the fifth time and feeling distinctly grumpy about it.\n\nLyla reached out and laid a hand on her forearm and gently called her name.\n\n\"Yes, I'll be done in a minute, can you please give Laurenti his pain medication?\" Agatha said distractedly, jerking a thumb behind her shoulder towards the patient in question. Lyla acquiesced but returned to Agatha's side as soon as she was done.\n\n\"When was the last time you sat down?\" she enquired, laying a hand on her back.",
        "\"Er... I don't remember,\" Agatha confessed, glancing up from the letter, then immersed herself in the writing again.\n\n\"I do not care much for the band, but I will feel a little sad if my best friend falls asleep during the wedding. Come with me, I have the nicest liquor you will ever find in Lohenstraad.\" Lyla raised the bottle in her hand to show it to Agatha.\n\nAgatha laid down her quill and followed Lyla to their favourite corner of the infirmary, where they sat side by side. Lyla poured out the mulberry gin into two crystals and handed one to Agatha. She took a sip and grimaced. It was quite strong, and she was certain that Lyla, petite as she was, would be unconscious before the evening was over.\n\nThey talked about frivolous things, things that didn't remind either of them about the time that they had left behind, and despite the mountain of responsibilities looming at the edge of her consciousness, Agatha felt happy and mellowed under the influence of the gin.\n\n\"You know, I never got around to asking you,\" Agatha ventured, her barriers of propriety pulled down by liquor, \"what made you realize that you wanted to spend the rest of your life with him?\"\n\n\"He made me laugh at a time when I had given up on happiness,\" Lyla answered with a languid smile.\n\nAgatha stared uneasily at Lyla, the happy oblivion from the liquor ebbing away, and reluctantly remembered a conversation with Siegel a few days ago.\n\n***\n\nThe day of the wedding dawned bright and chilly and Agatha spent the better part of the morning rushing about, ensuring that every apparatus and arrangement were laid out to perfection. An army of handmaids readied the blushing bride and it was not before noon that Agatha had the opportunity to sit down for her own handmaid. Anabella, a petite woman who had been in charge of dolling her up for court proceedings for the past months, laid out an ostentatious, jewel-encrusted gown that Agatha dismissed almost immediately. Instead, she insisted on wearing a moss green muslin dress that she had bought with her coin a while ago. She asked Anabella to fetch it from her closet, pinching the braid that Anabella was working on so that it did not unravel. Anabella complied and brought it out, then hesitated, \"Miss, are you sure you want to wear something so plain?\"\n\nAgatha stared at the dress held up by Anabella in her mirror and responded, \"it is my best friend's wedding, Ana. I want all eyes to be on her tonight.\"\n\nAnabella sighed, \"as you wish, Miss,\" clearly disapproving of her choice. Agatha smiled a little, thinking of how Georgina would have reacted in an identical situation. She would have probably told Agatha that her livelihood depended on the Princess turning up fashionably, so it would behoove her to follow her orders.\n\nAnabella compensated for the dress by wrapping her in a whalebone corset that left her midsection disproportionately tiny and nearly faint from lack of air and braiding her thick, long hair into two elaborate buns on the top of her head and embellishing them in jewel encrusted pins. She tried to follow this with a flamboyant choker for her neck but Agatha declined it firmly.\n\nThe wedding celebrations were to take place in the Great Hall, and even the royal family decided to grace it with their presence. Lyla looked radiant in a white silk dress and Sir Blaxton could not stop grinning like a fool. The wedding band arrived on time and started playing, and food and wine flowed thick and fast from the scullery. Agatha stood in one corner of the Hall, happy to have arrived at that point without any major disruptions.\n\n\"Now, now, Sir Blaxton is more intelligent than I gave him credit for, don't you think?\" A terribly familiar drawl rang out from her side and Agatha turned to stare into the clouded eyes of Sir Alexander. He was nursing a crystal of mead and already seemed under the influence of liquor. \"When he realized that he did not stand a chance with you, he moved on to your friend admirably quickly,\" he continued.\n\nAgatha chose not to grace his comment with a response. Unperturbed, Sir Alexander continued, \"I could not help but notice that Orion is not as taken in by you as he used to be, either. Not to worry... men often grow tired of seeing the same hole every day... It's quite natural. Now, if it's men in high ranks that you are after.... allow me to remind you that I am the General now.\"\n\nAgatha was tempted to offer him a scathing reply about his manhood, but she exercised self command and turned her face away dignifiedly.\n\n\"I know you are a witch, you know,\" Sir Alexander whispered, staring at her. \"If you refuse me, who knows, I might decide to speak about it.\"\n\nAgatha leaned towards him and placed her lips by his ear. When she spoke, her voice could be mistaken as seductive.\n\n\"I am also half Elven, and you will not be the first man to slander a woman he has been repeatedly rejected by. By all means, please try to find someone who will believe you.\"\n\nSir Alexander stared at her uncomprehendingly, then ambled over to a nearby chair and collapsed into it. Within a few minutes, he was snoring.\n\n\"What did you do to him?\" Orion asked suspiciously, approaching her from the other side.\n\n\"It never fails to surprise me that you inevitably look at me for apportioning blame whenever an untoward incident occurs,\" Agatha replied.\n\n\"You do have a history of assaulting him with a mason jar,\" Orion reminded her matter-of-factly.\n\n\"If my memory serves me correctly, I was assaulted first on that occasion. Do not worry, Orion, your precious General is in no danger from a frail woman half his size.\"\n\n\"You seem to be eager to embrace this purported frailty as and when it serves your purpose. It is a touch hypocritical, considering that you claimed it as an inaccurate description so vehemently only a few days ago.\"\n\n\"You can hardly blame a woman for employing deception as one of her weapons.\"\n\n\"Of course not. It's only reprehensible when a man does it, isn't it?\" Orion said pleasantly, then extended a hand towards her. \"Would your frail disposition allow you to dance with me?\"\n\nAgatha considered him for a few moments, then placed her gloved hand in his. A dance could not hurt.\n\nOrion led her out onto the dance floor. It was a slow song, and he drew her in close, not enough to cross the boundaries of propriety, but enough to make her want for more. He twirled her around, taking control of the dance like everything else in his life.\n\n\"You look lovely today,\" he commented, \"especially for someone who clearly hasn't slept for the past week and is gasping for air.\"\n\nAgatha smiled ruefully. \"Everything turned out rather fine, don't you think?\"\n\nOrion nodded. \"I think Lyla should be thankful to have a friend like you,\" he said gravely, all traces of humour gone from his face. \"Leowfin Vulfoliac is not too happy from what I hear, though,\" he added flippantly.\n\n\"Don't remind me of him,\" Agatha muttered, suppressing a strong desire to strangle the parsimonious Court Treasurer.\n\n\"Have you heard from Siegel since?\" Orion asked. Agatha shook her head, feeling a little guilty about the part she had possibly played in driving him away. She concentrated on the familiar smell of pinewood coming from Orion and chose not to focus on Siegel. A little while later, she realized that Orion was drawing soothing circles over her exposed upper back, staring down at her with a faint crease between his brows.\n\n\"Don't,\" Agatha scowled, hating how that simple gesture made her feel. He moved his hand to her waist immediately and drew her closer.\n\n\"It's not your fault,\" he reminded her.\n\n\"I know,\" Agatha said, fixing his eyes with a resolute stare.\n\n***\n\nWinter passed them by in a haze of snowstorms and freezing rain. The window panes rattled from the incessant attack of hailstones and thick, large droplets of rain; the cruel north wind whistled down the chimneys for days on end. On one white, cold, blustery morning, Meister Erwan was found dead in his bed. He had passed away in his sleep and had a slight frown etched across his wrinkled face, as though even in the moment of departure, he had found fault with the grim reaper who had come to harvest his soul. Agatha stood in front of his bed and stared uncomprehendingly at her erstwhile mentor's waspish face while men and women moved about her, talking in unintelligible sentences. When two men from the scullery made to haul him out of his bed, she stopped them and knelt by his side, putting a finger on his pulse.\n\n\"My Lady,\" one of them called out hesitantly. \"Please, we have to move him.\"\n\n\"No,\" Agatha stressed, searching for his wrist under the covers, averting the grim eventuality staring at her in the face.\n\n\"Princess, he's dead,\" Kikoma's voice called out from behind her. When that did not elicit a response out of her, she called, \"Agatha!\"\n\nFaintly, she heard Orion's voice from the entryway to Meister Erwan's bedchamber, asking the men to move. A little while later, a warm, calloused hand seized her wrist and attempted to pull her away from the bed.\n\n\"No, you don't understand,\" Agatha argued obstinately, staring up at Orion's limpid blue eyes. \"I talked with him last night. He was fine. He... we are making a mistake here.\" She tried to kneel down by the bed and slap her mentor into consciousness. Orion pulled her away from the bed, more forcefully this time.\n\n\"Please... please don't let them take him away,\" Agatha begged, \"He is fine. He must be fine. I must be making a mistake...\" her voice drifted away into uncertainty as two men raised the frail body of Meister Erwan and carried him out. Agatha struggled fruitlessly against the strong arm wrapped around her chest.\n\n\"Let me go, Orion!\" she screeched as the assembled men began to trickle out of the room. He said something in response but she could not hear, nor did she care; a blinding, uncharacteristic rage was building at the back of her mind, and she scratched at the hand holding her prisoner, and tried to stomp on his legs. \"Let me go!\" she screamed. Orion released the death bind around her chest, but wrapped his fingers around her upper arm and led her away from the chamber.\n\n\"Where are you taking me?\" Agatha asked as he led her away from the congregation that was carrying Meister Erwan. \"Orion!\"\n\n\"We will take your cloak and join them at the burial ground,\" Orion answered. Agatha noticed two rapidly healing scratches on his forearm but she felt quite remorseless; she wanted to claw at his calm, composed face until she drew blood, until he, too, felt a morsel of the dreadful emptiness growing inside her. But she didn't, and allowed Orion to lead her into her bedchamber and wrap her cloak around her shoulders. When they left, Rowan followed them at a respectable distance, always on alert lest any harm befall the princess.\n\nMeister Erwan had no living relations and was buried at the public burial ground on the eastern flank of Rubenstraad, by the broad Isiya river that flowed sluggishly and inexorably under a treacherous sheet of ice. Agatha stood still with dry eyes as a priest read the rites for the safe passage of Meister Erwan's soul to heaven, and a soft snow started to fall as he was lowered into the ground. Despite Orion's entreaties, Agatha did not move from her place while the snow accumulated steadily in her hair, nor would she permit him to raise the hood of her cloak. Orion conceded defeat and stood by her, silently sharing the burden of her grief just as she had shared his not so long ago.\n\nThe tears came later that afternoon, when she was sitting in front of the fire in her bedchamber. Orion had divested her of her sodden outer clothes and had wrapped her in a blanket upon their return, and after ensuring that she finished the bowl of thick, creamy stew that he placed in front of her, presently sat beside her with the languid ease of a man who had not a single commitment in the world. Agatha had importuned him to leave multiple times, but every time he had shrugged and said that he had nothing better to do. And thus, they had sat in silence while Agatha's hair dried from the heat of the fire and her shivers abated. After about an hour of this, Agatha decided that she wanted to talk.\n\n\"When he learnt that I was a witch, he said: I do not care how you have healed patients in the past, in my infirmary, we will rely on brews, potions and salts. If I ever see you using a spell on one of my patients you will be carted back to your Academy instantly.\"\n\n\"I'm glad he said that,\" Orion offered quietly. \"It ensured your safety.\"\n\n\"I don't know what to do,\" Agatha sobbed. \"He always told me what to do. I don't know how to look after the patients without his help.\"\n\n\"You have looked after patients outside of his supervision in the past,\" Orion reminded her.\n\n\"I should have known that something was wrong with him, Orion. He would sit in the infirmary late at night, unable to go to sleep. He said it was due to old age and I did not contest it. I could have bought him time.\"\n\n\"Perhaps it was his choice to leave on his own terms.\"\n\n\"But...\" Agatha could not explain to him that Meister Erwan was her last link to a life that had a semblance of normalcy about it, and that she grieved for her old, mortal life as much as she grieved for him. Lyla had not come to visit her and Agatha wondered if she had heard the news. She did not begrudge her old friend's flight to freedom, but a part of her wished for what Lyla had, what Siegel had promised to her so many years ago: a family, children and a mortal life, untainted by the certain, terrifying eventuality of outliving every last loved one.\n\n\"It gets easier,\" Orion said softly, as though he had read her mind. For some reason, it only made her cry harder.\n\n***\n\nLeowfin Vulfoliac approached her soon afterwards and asked her if she wanted the role of the court physician. Agatha agreed, and quickly sent out a notice for an apprentice to the Academy of Magical Sciences. Isabella Everleigh, a young girl and an old acquaintance of Agatha's from the Academy, turned up at the Keep a few days later to fill her erstwhile position.\n\nLyla was soon busy enjoying the bliss that marital life brought and Orion brazenly supplanted the vacuum left behind by her and Siegel and Meister Erwan. He lounged about in the infirmary in the evenings, helping Agatha out with her duties. Isabella appeared to be particularly taken in by Orion - the young girl dropped whatever she was holding whenever he talked to her. Agatha smiled internally whenever she noticed an exchange like that; Isabella's rapturous devotion towards Orion reminded her of her own past fixation with him. With some happiness, she reflected that she had travelled a long way from the starry eyed girl that had left the Keep for the Forgers' Realm two years ago.\n\nWhen spring arrived, Orion built a high fence around her garden to keep out the fauns. The pixies were still an unresolved problem; they visited her garden in flocks and flopped unconscious on the grass after drinking their fill of valerian sap, and every morning Agatha had to resort to plucking them out of the grass by hand lest she stepped on them. When the fence was finished, he kept visiting her with the excuse to paint over it, and when that was over, he simply came by and helped out with the more physical aspects of gardening.\n\nAt first, Agatha conversed with him out of civility, but he wore away at the defenses she mounted slowly and inexorably, making her laugh on days happiness was nowhere to be found. On account of her existing bias for him, she did not really stand a chance against his unapologetically persistent attempts to weave himself into her life. Unlike Siegel, he made no show of possessiveness, and unlike Archibald Mannering, he did not try to woo her with flowers or dresses, he knew her well enough to understand that none of those methods would work, but by the time fall came around, Agatha had the sturdiest raised beds in all of Rubenstraad, and an enviable collection of exotic medicinal herbs in her glass house. One day, after Orion had procured a particularly rare herb for her, Agatha asked him whether he was trying to bribe her into marrying him. Orion shrugged with all outward appearance of nonchalance and said, \"if you wish to flatter yourself I won't stop you.\" Then, struggling to contain a smile, he reached for the plant and said, \"if you don't need it I can always return it to the seller.\" Agatha snatched the pot out of his way and did not speak to him for the rest of the day.\n\nShe fell in love with him slowly and silently, the way a fine, misty spring rain seeps insidiously into grey, leafless old-growth forests. It happened over arguments across the oval table in Council meetings, during long rides on their Dragons' backs across the length and breadth of Lohenstraad, over sparring with each other in the practice arena in front of the Armoury, and for a very long time Agatha battled with her heart with the last shred of willpower left in her conscious mind.\n\nOne day, out of the blue, Agatha said, \"Finthalion wasn't right, you know.\"\n\n\"About what?\" Orion asked in a preoccupied manner as they chose their blades for a practice session in the Armoury.\n\n\"It wasn't your fault that she died.\"\n\nOrion stiffened, then turned to stare at her with an inscrutable face.\n\n\"The weight of the world is not on your shoulders,\" Agatha said quietly, picking out a spear.\n\nOrion looked like he wanted to kiss her, but he restrained himself and walked out into the practice arena.\n\nLife moved on at a reasonably happy pace in Lohenstraad. Trade flourished and the economy showed promising signs of recovery, now that the Great War was finally over. The vampire population remained under control and their feeding habits were strictly monitored by the Night Guards. Vladimir Evanoff was as obnoxious as ever and it was often a source of great personal amusement to Agatha to watch Henry Baldric argue with the man in the Council meetings. Orion usually refrained from intervening until the two men came close to exchanging blows. Not every news was a happy one, however, the farmers continued to suffer some losses from the forays of fauns and pixies. Across Lohenstraad and Vandan, witches and wizards condemned to death were mysteriously disappearing from burning pyres. On the bright side, Lyla gave birth to a beautiful boy about a year after her marriage and Sir Blaxton wept profusely when he held him in his arms. By the time winter rolled in, Agatha decided that she had been at war with herself for long enough.\n\nAnd thus, she was found plodding across the thick snow over the Castle grounds one grey, overcast evening, making her way towards the Azure Tower. Jonathan opened the double doors after a knock and beckoned her in with a toothless grin.\n\n\"Is he upstairs?\" Agatha asked. Jonathan nodded. She unclasped the Elven Cloak and hung it from the cloak rack beside the door, tapped the soles of her riding boots over the rug on the entryway to rid herself of the worst of the snow and mud, and climbed up the spiral staircase with her heart thudding in her chest.\n\nOrion raised his eyebrows in surprise when he saw her, but he opened the door to his bedchamber and shifted to one side wordlessly, allowing her to enter. Agatha noticed that though he was dressed in a sleeping robe, he had been writing missives on his desk; his fingers were stained with ink.\n\n\"More disappearances?\" Agatha asked, nodding towards the scrolls piled atop the work surface.\n\n\"Unfortunately, yes,\" Orion nodded. \"I planted some of my men in those ceremonies, and according to nearly every account, they all felt curiously dizzy for a while, then the stake was suddenly empty of whoever it was they were trying to set alight.\"\n\nAgatha scratched the back of her neck and said, \"oh.\" She had not meant to walk in on him at a busy hour.",
        "\"So, what brings you here?\" Orion enquired, folding his arms squarely across his chest and staring at her.\n\n\"Nothing, I should probably go,\" she mumbled, \"you seem busy.\" Without waiting for his response she turned around and made her way towards the door, but she had barely grasped the brass eagle-headed doorknob when Orion laid a hand on hers. Her small hand disappeared under his larger one. He lowered his face so that his lips nearly touched her ear, and repeated: \"what do you want, Agatha?\"\n\nAgatha turned around and found herself caged against the wall by his large form. Orion trapped both of her hands in his, held them against the wall and repeated his question. Agatha raised her eyes at him and paused for a while, trying to read his inscrutable face. When she spoke, she sounded braver than she felt.\n\n\"I want you.\"\n\nOrion held her gaze with the same unfathomable expression. Then he whispered, \"I have only one condition, and you know what that is.\"\n\nAgatha sighed in frustration and closed her eyes. \"I cannot marry you, Orion,\" she said.\n\n\"And why not?\"\n\n\"I don't want to have children,\" she whispered, mortified and desperate in her admission. \"I saw how you felt when Eustace died. I don't want to feel that.\"\n\nOrion nodded and asked, \"is that your only concern?\"\n\n\"Yes.\"\n\n\"You don't have to bear children if you don't want to.\"\n\nAgatha's eyes snapped open. She had not expected him to acquiesce so easily. Orion laughed at her dumbfounded expression. \"I've gone through that experience already, Agatha. I've fed them, cleaned after them, educated them, watched them grow, killed for them, and finally, watched them die. It's not an experience I'm eager to relive, either.\"\n\n\"Then...I suppose I can marry you,\" Agatha said cautiously.\n\nOrion cupped a hand around her neck and pressed her chin upwards with a gentle push of his thumb. Then he lowered his head to kiss her lips, and this time, his lips were apologetically gentle. Agatha parted her lips under his, eager for his forceful claiming, and somewhat dissatisfied when it didn't come. When Orion drew away, she scowled at him. \"Are you going to be gallantly agreeable until we are married?\"\n\n\"I might be, why?\" Orion twinkled at her.\n\nAgatha pursed her lips in dissatisfaction.\n\n\"What do you want me to do?\" He grinned at her.\n\nBeyond shame, Agatha said, \"I want you to take me.\"\n\nThat was all the encouragement he needed. Orion entwined his hands in her hair and pulled her in for a kiss, then he picked her up in his arms so that he did not have to lean anymore, and cradled her weight with a hand under her hips. His lips were warm and passionate, and Agatha wrapped her legs around his waist even as she was pinned against the wall. Her hands sought his torso, her fingers exploring the planes of his chest, her shame and diffidence evaporating faster than water in the desert sun. And despite her entreaties, his movements were different this time, less forceful, more reverent, and in that moment Agatha understood: he found no gratification in wrenching her submission from her by forcing her to cave under pleasure, he wanted it of her own volition, and contrary to what she had presumed two years ago, he did not simply want her for his pleasure, but because, despite all that he had done to her out of necessity, he was desperate to have her as a friend and a confidant in the terrifying, isolated life that immortality had brought him. This epiphany stilled her lips and Orion withdrew instantly, cautiously searching her face.\n\n\"What?\" he asked.\n\nAgatha pushed his wavy chestnut hair out of his eyebrows and cradled his face in her hands. \"Do you love me?\"\n\n\"Of course not, that's preposterous,\" Orion responded with an impressively blank face. \"I want to marry you because I need a body to warm my bed, as you had so cleverly conjectured two years ago.\"\n\nAgatha smiled a little and kissed him lightly on his lips. \"I think you love me,\" she whispered.\n\n\"Allow me to help you make up your mind. I knew nothing about plants before meeting you, nor did I care. Now I know all about valerian, feverfew, snakeroot, milk thistle, goat weed, chamomile, nightshade, red mallow, breadroot and ashwagandha.\"\n\n\"I am impressed,\" Agatha laughed breathlessly and kissed him deeply, beyond a care in the world. Orion carried her to his bed and sunk into it with her underneath him and moved his hands to unbutton her shirt. A familiar tingle started to spread over her skin as he ran his fingers along the exposed side of her torso. Agatha lowered her hand from the back of his head and tugged at his sleeping robe, her fingers clumsy and weak from desire. Orion ignored her wordless entreaty and divested her of her breast band, boots and breeches in quick succession, leaving her naked and shivering on top of the furs while he knelt on the bed between her legs.\n\n\"Hurry, I'm cold,\" Agatha complained, staring up at him with hooded eyes. Orion took off his robe and pitched it unceremoniously aside and caged her lithe, small frame with his larger one. He collected her hands in one of his, trapped them above her head and whispered, \"you will keep your hands up here unless I say otherwise, is that clear?\"\n\n\"Why?\" Agatha asked suspiciously.\n\n\"Behave, Agatha, or I'll tie them to the headboard,\" he said idly, skimming his nose down her jaw and neck. A thrill of pleasure ran through her at this ominous proclamation. Perhaps Siegel had been right, perhaps she simply liked submitting to Orion's wishes. Then Orion took one of her nipples in his mouth and rolled about the hardened tip with his tongue and she discovered that she did not care very much about Siegel.\n\nWith his free hand he squeezed her other breast, gently at first, then lewdly. Pausing his fingers by her nipple, he raised his head and said, \"tell me when it hurts,\" then without warning, pinched the tip between his forefinger and thumb. Agatha hissed in pain and he released it immediately, then caressed the reddened flesh with his warm, calloused hand. As the pain ebbed away, it left a curious tingle of pleasure behind it, and Orion seemed to understand, because he asked, \"did you like that?\"\n\n\"Y-yes,\" Agatha stammered, confused and burning with need.\n\nOrion nodded in approval and skimmed his nose down her stomach and settled his face between her legs. He ran his fingers in repetitive strokes down the inside of her thigh, never quite touching her there, but amplifying the burning hot lust in her into a trembling crescendo.\n\n\"Orion,\" Agatha protested softly, knowing what was about to come and terrified of it. When Orion flicked his tongue out and ran it along her opening, she reached down with her hands and tried to pull him up by his hair. \"Please don't do that,\" she pleaded.\n\nOrion yielded to the gentle pull of her hands and settled himself over her body, his brow furrowed in confusion. \"I don't understand. You used to like that.\"\n\nAgatha shook her frantically. \"It's demeaning to you. Please don't.\"\n\n\"But I want to do it, Agatha,\" Orion said in a low voice, then, when she continued to shake her head, stared at her with dawning comprehension.\n\n\"You think that you will be asked to reciprocate if I pleasure you,\" he said slowly. \"And you don't want to do it.\" Agatha's silence was confirmation enough. Fredenand's frequent demands for fellatio had ensured that she never wanted to do it again.\n\n\"You will never again have to do anything that you don't want to, Agatha,\" he said quietly. \"Now, I thought I asked you to keep your hands above your head.\" Purposefully, he reached for the belt of his sleeping gown and tested its strength by tugging it between his hands. He stared at her for a few moments, then, when she did not offer any resistance, looped it around her wrists and tied the end to the bulwark of the wooden headboard above them. Then he trailed a blazing string of kisses down her stomach and settled himself between her legs again. This time, Agatha did not resist as his tongue and lips worked in unison, unleashing attention on the tiny bundle of nerves above her quim. Soon, all thoughts of Fredenand were erased from her mind as a familiar tingling pressure built up inside her midsection, and she careened towards her climax like a twig caught in a tumbling rapid. Orion clamped her nub between his lips as her pleasure hit, prolonging the peak until she started whimpering. When he relinquished her from her peak and raised his head, her body was limp and face was flushed and sweaty.\n\n\"Orion,\" she uttered softly, helplessly, her hands stretched into the bond and her dark hair spread out in a halo around her head. Orion stood on his knees between her legs and wiped the proof of her arousal from his chin. \"Yes?\" He asked.\n\n\"Take me,\" Agatha begged shamelessly, spreading her legs further apart. Orion considered her with an unfathomable expression as his eyes darkened visibly with desire. He reached down and stroked his hardened shaft once, trailing his thumb delicately over the blunt head. Inexplicably, the sight of him touching himself sent her over the edge. \"Please,\" she begged.\n\nOrion lowered himself above her, and with his weight on one of his hands, positioned the head of his shaft against her core with the other. Agatha winced slightly as he stretched her painfully on his way in; abstinence had made her tight. Orion noticed and withdrew slightly, starting with short, shallow thrusts. The motion set off residual tendrils of pleasure from her last climax and Agatha moaned without thought, her propriety and modesty hurled out of the window into the gently falling snow.\n\n\"Eyes open,\" Orion reminded her, and she followed his command obediently, staring up at the darker flecks of blue in his pale eyes that reminded her of a fleeting pattern from a kaleidoscope held against the sun. Orion tucked one of her legs over his shoulder, opening her up for a deeper penetration, and once he started thrusting, Agatha had no control over the sounds that she made anymore. He knew her inside out, her darkest fears and desires as well as her most intimate responses. He had always known how to pull down the fortifications she had repeatedly armoured herself with; at first he had done it with pleasure, then with his constancy. He unleashed his attention on her like he wielded a chisel and a hammer on a piece of wood, carving out whatever responses he wanted out of her with unapologetic finesse.\n\nAgatha raised her hands and cradled his face. This time, Orion did not reprimand her as her eyes rolled back into her head and her body went rigid with her second climax. He reached forward with his free hand and pressed down on her clitoris when it arrived, and Agatha covered her mouth to muffle her screams. Orion removed her hand from her mouth.\n\n\"I want you to scream,\" he commanded, savagely stabbing into her pulsing heat, drawing out her pleasure. He returned to worrying the bundle of nerves above her entrance, thrusting deeply and mercilessly. \"Show me that you belong with me, Agatha.\" He turned his face slightly and planted a chaste kiss on the leg tucked atop his shoulder, but Agatha was too far gone to care about it, too consumed by the pleasure coursing through her body to see the openly affectionate countenance that proved his devotion to her beyond a shadow of a doubt.\n\nOrion slowed down as she tumbled down from her peak wearing a dazed expression, her hair clinging to her face with perspiration. He released the leg tucked over his shoulder and it drifted limply down his side. He was not done with her.\n\n\"Orion,\" Agatha whined in protest as he withdrew and turned her on her stomach. He raised her torso from the bed with one arm tucked under her pelvis, then gently pushed down on her lower back to open her up to him. Agatha adjusted her weight on her elbows while her wrists remained firmly tethered to the headboard.\n\n\"Tell me if this hurts,\" he cautioned, and entered her from behind in one swift stroke. Agatha whimpered with pleasure as his cock hit a different spot inside her channel. Orion held her waist as he pounded into her, his pelvis slapping against her hips. Agatha could tell that he was trying to be gentle, trying to restrain himself, but he could not, and his thrusts grew rougher and deeper. She gasped his name again, whether in protest or encouragement she did not know, for pain and pleasure blurred into one another at that moment, and she wanted him to thrust deeper, harder, and take her with merciless abandon. This time, her climax hit her without warning. Her shoulders collapsed into her arms and her body went limp in his arms, and distantly, she could hear his grunt as he picked up his pace and came with her, his seed spurting inside her channel. Agatha slumped on the bed as he withdrew from her, his seed dribbling down the inside of her thighs. Orion untied her hands, massaged her wrists and shoulders, then he brought a rag and cleaned her up, but Agatha could not move of her own accord; her limbs seemed to have turned into useless lumps of jelly. Orion drew her into his chest and pulled the covers over them, and a little while later, she realized that he was asking her if she was hurt.\n\n\"No,\" she answered, pleased to find that her voice still functioned even though her limbs refused to. Orion seemed to sense her predicament because he laughed a little.\n\n\"How do you feel?\" he chortled.\n\n\"Like a cloud. Weightless.\"\n\n\"Good,\" he said, tracing careless circles over her back.\n\n\"Orion?\" Agatha murmured.\n\n\"Yes?\"\n\n\"Please don't give me away again.\"\n\nThere was a pause during which Orion pulled her more securely against his chest. Then he wrapped a heavy leg around her and said quietly, \"you have no reason to forgive me or trust me after what I did. But hereafter, I promise to protect you no matter what happens.\" He snared her wrist in his hand and whispered, \"you're mine, and nothing will change that.\"\n\nAgatha smiled languidly and said, \"this is where I'll argue that the proprietary nature of your regard is demeaning towards me. I am a strong, independent human and I do not belong to anyone.\"\n\nOrion laughed. \"I have waited for you to come to me, Agatha, and that is where my chivalry ends, I am afraid. You're mine, and I can prove it to you ten times over before dawn. Let's not fight a battle that we both know you'll lose.\" His hand left her wrist and cupped her breasts as he said this, his thumb stroking her nipples threateningly with this statement. Quite shamelessly, they hardened under his touch.\n\n\"You've made your point,\" Agatha grumbled, an aching need building up in her midsection with his light caresses.\n\n\"Have I?\" Orion murmured, edging down along her back so that his lips lined up alongside her neck. He shifted her hair out of the way and softly bit the tender skin at the base of her skull. \"I think you need some persuasion.\"\n\nAgatha laughed breathlessly as his nose skimmed over a sensitive spot on her neck. \"Stop, that tickles!\" she squealed, and tried to wiggle out of his embrace. Inadvertently, her hips rubbed against his shaft with her frantic struggles and it soon stood hard and proud against her entrance.\n\n\"You can't win every argument like this, Orion!\" Agatha sighed as his hand slid down her stomach and slipped between her legs. He slid another arm underneath her and secured her against his chest while he rolled over onto his back, taking her with him. His legs opened hers lewdly and his fingers slipped inside her, massaging the tiny bundle of nerves above her entrance.\n\n\"You'll soon find that I can,\" Orion kissed the top of her head, then wrapped a steel arm across her torso, his fingers fondling her breasts and playing with her nipples. \"I'll be gentle this time,\" he whispered, and though his shaft stood hard against her entrance, he did not enter her. Agatha closed her eyes and relaxed against his hard chest and asked, \"what are you waiting for?\"\n\nOrion entered her slowly, his fingers keeping up the slow, torturous massage over her clitoris. He started pumping in and out with short, shallow thrusts, never relinquishing his hold around her chest. \"Admit it,\" he whispered, \"you like this. You like submitting to me.\"\n\nAgatha did not answer, merely arched her back to allow him a deeper penetration. \"And that is why you continue to return to me,\" Orion continued, taking advantage of the opening she offered and thrusting deeper. \"You want to belong to me. You're mine, Agatha. This. Belongs. To. Me.\" He punctuated every word of that last sentence with a thrust, uncharacteristically arrogant in his assertion.\n\n\"I'm not,\" Agatha panted.\n\n\"Yes, you are. Now, you'll come for me,\" he whispered huskily against her ear, picking up the pace of his thrusts. \"Because I am asking you.\"\n\n\"I won't,\" Agatha insisted, fighting the familiar pressure building up in her midsection, simply for the sake of winning the argument. Orion pinched her nipple lightly, then caressed it with his finger. When that did not work, he increased the pressure over her clitoris. Agatha did not stand a chance after that.\n\nHer pleasure hit her in rolling, pulsing waves, and Orion did not last long either. He pumped his seed into her pulsating channel and they collapsed sideways into the bed afterwards. Agatha whimpered a little as Orion pulled himself out of her.\n\n\"This is what happens when you argue with me,\" Orion declared, and kissed the top of her head.\n\n\"You're a terrible person,\" Agatha rebuked him contentedly.\n\n\"Agreed.\"\n\n\"You've stopped calling me Princess,\" Agatha realized, smiling a little at the welcome change.\n\n\"My memory might be a little hazy on account of age,\" Orion quipped, tracing his hand over the curve of her hips, \"but I was under the impression that you did not like it.\"\n\nAgatha's eyes snapped open as a sudden unease weaved its way into her midsection.\n\n\"Say that again.\"\n\n\"I said that you didn't like being called-\"\n\n\"No, the part before that,\" she turned to meet his eyes, the post-coital bliss evaporating rapidly.\n\n\"My memory is hazy on account of-?\"\n\n\"Haze!\" Agatha exclaimed, raising herself up on an elbow, comprehension and horror clouding the relaxed expression on her face. \"You said that all of your informers are reporting that they are feeling unnaturally dizzy for a while before the pyre is suddenly empty of the witch or wizard that was sentenced to death. Feeling dizzy is a side effect of the Haze! Someone - a very powerful someone - is casting a Haze on the assembled audience and is retrieving the wizard from the pyre. And it has to be an exceedingly powerful witch or wizard who can cast a Haze that affects so many non magical people at once.\"\n\nShe stared at Orion with dumbfounded terror, fighting the premonition unfurling inexorably at the back of her mind. She could not help but notice that Orion was surprisingly composed despite the enormity of the revelation.\n\n\"Unfortunately we both know a very powerful wizard who is capable of doing this and has reason to,\" Orion grimaced.\n\n\"Siegel,\" Agatha realized, her voice sounding hollow.\n\nOrion nodded grimly.\n\nThen he seemed to hesitate a little before uttering the sentence that would shatter the happy bliss that Agatha found herself shrouded in. But he said it anyway, on account of an unspoken promise to treat her as an equal.\n\n\"It appears that he's building an army.\"\n\n~~End of Part 1~~"
    ],
    "authorname": "Ava_fern",
    "tags": [
        "fantasy",
        "dragons",
        "elves",
        "dominant male"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-azure-rider-ch-08"
}