{
    "title": "UCLA to Big D Ch. 12",
    "pages": [
        "In this chapter, Chief Steve Jones continues with his 48-hour captivation of his wife's best friend. Jones himself is friends with Jenna's husband Ryan Nielsen, but those relationships only contribute to his satisfaction of taking her spectacular body and the humiliation he enjoys from putting her through the process. \n\nAs has been the case in previous chapters, this one will make more sense if you read the story from the beginning (or at least chapter 11), but also like previous chapters, it is not a necessity and you'll enjoy it as a standalone story too. \n\nAny references to celebrities or real-life people or places are purely fictional. Any and all sexual situations regarding these individuals are consensual. \n\nThis chapter starts off as Jones carries Jenna Nielsen back from the jail cell where the sexy hooker Tiffany had just enjoyed sex with the gorgeous blonde wife. \n\n***** \n\nChief Jones carried Jenna Nielsen's naked body into the office and set her in a rolling desk chair, \"Jenna, I have to put you in this room for a few minutes while I have a serious talk with the captain. I'll get something to cut loose your bound hands and bring you something to wear. Do you want something to drink?\" He asked as he hungrily eyed her magnificent body. \n\nJenna squeezed her legs together trying to obscure her pussy from the chief's view, her fantastic tits were on full display, \"Some water would be great Steve, thank you so much.\" \n\nShe watched through the soundproof glass as Pacific Palisades Police Chief Steve Jones rummaged through one of the desks pretending to look for scissors. Eventually he gave up and retrieved a cup of water from the cooler. He brought it back and ogled her amazing tits again. His cock was semi-hard as he played back Jenna's hot sixty-nine sex with the hooker Tiffany in his mind, \"This gorgeous married bitch loves to eat pussy...who'd a thunk it?\" \n\n\"Jenna, I'm sorry but I can't find anything in this place. Captain Sayers should be back in a few minutes, I promise to get something to free your hands and for you to wear when he does. I'm so sorry this happened; I can assure you I will initiate an investigation; I'm not sure why they brought you to this shithole in the first place.\" As he held the water cup to her lips he admired Jenna's naked body more thoroughly, \"God, the things I'm going to do her over the next couple of days...\" \n\nSayers walked back into the office. \n\n\"Excuse me Jenna, the captain and I are going to have a heart to heart!\" He stormed out and yanked the soundproof door closed behind him. \n\nJenna watched as her friend Chief Jones berated the captain. His arms were flailing and the veins in his neck were bulging as he laid into the defenseless cop. Jenna was glad to see he was scolding the subordinate officer for the blatant mistreatment she'd endured. \n\nAs their conversation reached an obvious fevered pitch, Jenna was amazed to see the captain apparently fighting back; he was screaming back at Jones. Jenna thought to herself \"What could he possibly be saying to defend himself?\" \n\nUnbeknownst to the gorgeous naked blonde, if she heard what was being argued on the other side of the glass, it would have sounded like this: \"Can you believe the way that horny bitch ate that hookers' pussy captain?\" Jones yelled as he pointed accusingly at Sayers. \n\n\"No she clearly loves mowing box. I think we should put her back in there so we can watch some more!\" Sayers fired back as he spread his arms as if he was innocent. \n\n\"As tempting as that is, I'm going to get her out of here so I can get started with my plans for her!\" Jones responded his arms flailing in the air. \n\n\"You're a lucky man chief; deposit a load for me would you!\" Sayers screamed as he pounded the desk. \n\n\"You bet I will captain, lord knows I'm going to shoot plenty for myself!\" Jones yelled back at him. \n\nBoth men were doing everything they could to keep a straight face. \n\nJones pointed at her and shouted, \"Look at those big tits Randy have you ever seen better?\" \n\n\"Fuck no...she's incredible. I'm so jealous you're going to be sucking those things all weekend long!\" The captain responded as he angrily pointed at her. \"Wasn't that great when that whore snorted that line from between them?\" \n\n\"Yes, that move gave me a great idea for later tonight. Okay enough of this shit, I'm horny as hell. Give me some fucking scissors and go get that outfit we have for her!\" Jones yelled as he pointed to the other room. \n\nSayers returned a few minutes later holding a short-length leopard-skin coat and matching knee high boots with 5\" heels and a pair of scissors. \n\nJones immediately threw up his hands and made some type of incredulous gesture at the coat and boots, \"Holy shit Randy, this coat is perfect. I really like the furry bands around the wrists. Did you remove the buttons as I instructed?\" He yelled.  \n\n\"Yes, when I got your call earlier I had one of the lieutenants do it. Her tits will be hanging out as you requested chief!\" Sayers fired back defensively as he shrugged his shoulders. \n\nJones took the stuff from Sayers and faked his dissatisfaction. He slowly walked back into the soundproof room and said apologetically to Jenna, \"You aren't going to believe this, but these are the only clothing items they have in this entire building. Just yesterday they donated everything else they had to the homeless shelter. This worthless fucker doesn't even have a blanket to wrap you up in. I'd give you the shirt off my back Jenna, but I could get severely reprimanded for being out of uniform and I didn't wear my coat today due to the weather. I'm going to get you out of this shithole, but you'll have to make do with this stuff during the transport.\" \n\n\"Thanks Steve, it's better than nothing I guess.\" Jenna replied acceptingly. \n\nJones reached down and cut her bound wrists. Jenna breathed a sigh of relief as she flexed her hands and rubbed her stiff wrists before attempting to cover her breasts with her hands. \n\n\"Unfortunately Jenna, I'm going to have to re-cuff you for the ride as you are still in custody. I will use some of the temporary Velcro cuffs we use for large demonstration arrests, they are much more comfortable. Take the next few minutes to let the blood flow back into your wrists and hands before I have to re-cuff you.\" \n\nHe handed her the coat. \n\nJenna looked at with disdain. Its previous owner was almost assuredly a street-walker. \n\nSteve turned around and said, \"I'll give you a little privacy while you put it on.\" \n\nJenna stood and slipped the cheap knockoff long-sleeved coat on and tried to pull it closed in the front. The slutty jacket was clearly not made for cover up. With her arms holding it closed, it covered about half her full tits and stomach. It was too short to provide any coverage for her pussy mound or ass. \n\nWith his back still turned, he encouraged her to put the boots on as he lied and told her the asphalt walkway to the car was very rough and covered in rocks and broken glass. Cole had told him she wore a 7 \u00bd\" shoe and luckily Sayers had that size in his \"inventory\". The slutty sexy boots fit her to perfection. \n\nJones turned around and almost shit himself. His wife's gorgeous best friend stood in front of him in a slutty leopard skinned coat with one of her arms pathetically trying to hold it closed over her big half-exposed tits with her other hand covering her heart shaped pussy mound. Her long tanned legs couldn't have looked sexier in the over-the-knee leopard patterned high-heeled boots. \n\nHe stole a last glance before he looked away and lied again, \"Jenna, we'll get you some real clothes when we get there; it's not too long a ride.\" \n\nJones led her out of the glass room and said to Sayers, \"Captain this is a disgrace that she has to travel dressed like this, it'll be one more thing I put in my report. Get me a pair of the demonstrator cuffs.\" \n\n\"Chief, protocol says you can't transport a single detainee in those cuffs.\" \n\n\"After what she's been through here captain, how dare you patronize me about protocol, get me the fucking cuffs now!\" \n\nSayers reached into his desk and pulled out the Velcro cuffs and handed them to Jones. \"Jenna, sorry again for making you wear these, but I am bound by my obligation to do so. Please put your wrists behind your back. Jenna hesitated before removing her hands from her tits and pussy. Both men got the hint and looked away as she put them behind her. Jones walked around in back of her and checked out her scrumptious ass as he put on the cuffs. \n\n\"Jenna I'm taking you to an offsite location to get you dressed and arraigned before we go to the county jail. It's much less crazy there than county and we'll have a chance to talk in private about your situation and options before I have to take you to lock-up. It's possible we can work something out that won't require you to go to county at all.\" \n\n\"Oh my God Steve, that would be fantastic!\" \n\n\"The only caveat is that this place is a private meeting place for LA County police executives, so I'm going to have to blindfold you as to keep its whereabouts a secret. Of course I trust you would keep it to yourself, but I took an oath when I became chief to keep its location private.\" Jones was making this up as he went along. \n\n\"I understand Steve; I appreciate everything you are doing for me. I'll happily wear the blindfold for you.\" \n\nHe thought to himself, \"You bet you will bitch!\" \n\nThe chief pulled the black band from his pocket and went behind her again. He slipped it around her head and over her eyes before tying it tightly in the back. Jenna's vision went completely black. She wasn't sure why, but she immediately thought back to a couple of nights earlier when Cole blindfolded her before he took her in the ass. \n\n\"Jenna are you sure you can't see anything, I can get in big trouble if you learn the whereabouts of the executive location.\" Jones questioned. \n\n\"I'm blind as a bat Steve.\" Jenna assured. \n\nSayers approached and made a fake slapping gesture at her face. She didn't flinch. The men looked at each other and grinned. Jenna looked like a two-bit hooker as she stood there in the sluttish outfit blind and half-naked. \n\nSayers immediately pulled out his phone and started snapping pictures of her. Jenna's D-cups were completely exposed as the folds of the jacket had slipped off when Jones handcuffed her. The aroused cop leaned in close and got several good shots of her nipples and heart shaped pussy mound. \n\nHe stepped back away from her, \"Chief, don't forget you have to sign the transfer paperwork,\" Sayers said as he reached over and shuffled some phony papers on his desk before taking several more photos. \n\n\"That's right captain, what did I do with my pen?\" Jones replied before he put his face down in front of Jenna's tits as Sayers snapped a half dozen shots with his tongue extended and his lips puckered in front of Jenna's big nipples. He dropped to his knees and did the same in front of her sexy pussy. He stood, unbuttoned his pants and pulled out his big cock, \"Oh here it is. I don't know how I always misplace this thing, it's oversized for God sakes! Where is that paperwork?\" Jones held his cock aimed at her pussy mound with a big grin on his face as Sayers snapped a handful of additional shots. \n\nJones pulled up his pants and moved a few feet from her, \"Captain this won't be the last you hear about this escapade, my report is going to be scathing, I can tell you that right now!\" He said with a raised voice as he smiled at Sayers. \n\nThe cops looked at each other proudly. \n\n\"Jenna I will lead you to the car.\" Jones said as he reached out and held her upper arm with his left hand and reached back with his right behind her beautiful ass with his middle finger extended near her asshole. Randy knew what the chief had in mind and moved behind them; he snapped several more photos. Jones was looking back at him grinning from ear to ear. \n\nChief Jones led her out of the building into the parking garage. The car was right outside but he paraded her around to make her feel it was a longer walk than it really was. Jenna was unsteady in the high-heeled boots so he held her arm tightly and watched her gorgeous tits jiggle heavily, \"God I can't wait to suck those fucking things...\" \n\nHe finally brought her to the car and unlocked it with his electronic key. He opened the front passenger door and helped her inside, \"Jenna you are going to need to lean forward or your wrists will begin to ache.\" She sat down and did as he instructed. Her full breasts hovered beautifully over her flat stomach as she leaned forward and arched her back. He quickly ran around and hopped in on the driver's side. He said, \"I'm going to need to reach across and get your seatbelt, okay Jenna?\" \n\n\"Yes Steve, go ahead.\" \n\nHe leaned across her body and brushed against her tits as he grabbed the buckle and pulled it back across her torso. He couldn't believe how firm they felt against his wrist. The strap parted her breasts flawlessly and accentuated their fullness. The chief stared in disbelief at their perfection. Before he turned on the ignition, Jones set the AC as cold as it could go and turned the fan on full blast on her side only. He wanted to see her nipples hard. \n\nJenna sat nervously in the passenger seat with her legs squeezed tightly together. She knew her pussy was exposed and hoped that she could cover most of it up by keeping her legs closed tightly. Her strategy only worked to hide her slit, Steve could still plainly see her heart shaped blonde pubic mound. He stared at it hungrily. \n\nIt was hot in the car but Jenna felt relieved as Jones turned it on and the air blew on her. Jones pulled out of the garage and onto the street. The air temperature cooled quickly and before long Jenna began to get uncomfortable from the cold air blowing on her, \"Steve do you mind turning the air down, I'm kind of cold.\" \n\nHe looked over, her big nipples were rock hard and pointing up towards the windshield even as she was leaning slightly forward. \n\n\"Damn Jenna I'm sorry. The fan and temperature gage in this car are broken, I can't adjust the air conditioner at all...your tax dollars hard at work I'm afraid,\" he lied with a big grin on his face. He then unbuttoned his pants and pulled out his cock. He slowly stroked it as he ogled her phenomenal body, being made all the sexier by the slutty animal skinned coat and sexy hot boots. \n\nNeither he nor Jenna had any idea they were being followed by an unmarked sedan. \n\nThe first few minutes of the ride, neither of them spoke as Jones studied every inch of the body he'd fantasized about so many times before. \n\nFinally Jenna asked sheepishly, \"Steve, obviously I'm kind of exposed, can people in passing cars see in?\" \n\nJones smiled slyly, \"No Jenna, don't be concerned about that, these windows are darkly tinted, no one can see in.\" He lied as he made eye-contact with a couple of college-aged wide-smiled kids in a convertible Mustang riding next to them. They had obviously spotted Jenna in her state of undress and were doing everything possible to stay next to Jones' car as he weaved through traffic. \n\nJones had borrowed this unmarked car for this very purpose. Unlike his dark-tinted Chrysler 300, this piece of shit had un-tinted windows all the way around. As they made their way along the crowded Southern California freeway, at least 5 sets of cars jockeyed for position next to them in an attempt to check out Jenna's amazing tits. Jones smiled proudly at all the gawking onlookers as he continued rubbing his own cock. \n\nThe two men in the dark colored sedan watched the scene unfold from several cars back. \n\nFinally Jones said to her, \"Jenna, I came as fast as I could when I heard you had been arrested. Cole Steele's security guy sent me an email with a video of you allegedly stealing $10,000 from Cole's house. The woman in the video looked a lot like you, are these allegations true?\" \n\nJenna began to cry. \"Yes Steve, I did accidently take the money, but it wasn't $10,000 it was $1,200 and I returned it all to him within a few days.\" \n\n\"Why would you do such a thing Jenna, are you and Ryan having money problems?\" \n\n\"No Steve, I was really drunk and there was a combination of things happening...but basically I just made a horrible mistake!\" She responded between tears, thankful that he apparently hadn't seen the original video. \n\nShe wasn't aware, but he had in fact seen both videos and knew that the \"combination of things\" as she referred to it, was actually her masturbating while fantasizing about Cole Steele's big black cock. \n\n\"What were you doing in Cole Steele's bathroom Jenna? Are you and that football player having an affair?\" \n\n\"No Steve, you know how much I love Ryan! We were at a party at Cole's house and I went up to his bathroom because I broke a nail.\" \n\n\"And that caused you to steal $10,000 from him?\" \n\n\"I told you it wasn't $10,000, it was $1,200. And there were some...'extenuating circumstances' that led to me taking the money. But I assure you it was an accident! You have to believe me Steve,\" Jenna pleaded. \n\n\"Masturbating about big black cock is 'extenuating circumstances' huh?\" \n\n\"Jenna, this is a serious offense. I've yet to hear from Mr. Steele himself, but if he chooses to press charges, you could be looking at 3-5 years in the state penitentiary.\" Jones said sternly while continuing to ogle her tits and stroke his big cock. He admired her big rock-hard nipples and the hundreds of goosebumps on her perfectly sized aereolas. \n\nJenna sobbed loudly, \"Steve I don't want to go to prison, there must be something I can do to get Cole to drop the charges or for the judge to give me leniency for a first time offense.\" \n\n\"Jenna, the judge's hands will be tied, the law says he is forced to apply a minimum of 3 to 5 for an offense like this. You're only hope is for Cole to drop the charges.\" \n\nJenna cried more hysterically. Jones got a big smile on his face, \"Jenna please calm down, we need to talk through your options. Tell me, why did Cole just turn you in today, this happened a couple weeks ago, did it not?\" Jones already knew the whole story, but wanted to hear how she would spin it. \n\nJenna did her best to regain her composure, \"Ryan and I made a deal with Cole that if I worked as his personal servant for the next three weeks, he would agree to drop the charges. Part of the deal required that I wasn't to have any contact with the outside world including Ryan. Unfortunately today, I used a house phone to secretly call Ryan. That security guy Carl Swenson found out and called the cops. I don't even know if Cole knows I'm gone yet as he went on a fishing trip or something.\" She whimpered before sobbing again. \n\n\"Jenna, I might have some pull with Mr. Steele, but I need more details. You said you were working as a servant? What do you mean?\" \n\nShe hesitated before lying, \"You know like a maid...cooking, cleaning, and stuff like that.\" \n\n\"Cooking and cleaning was all he required of you to let you out of this?\" Jones was having fun messing with her. He was very well aware that Cole had been ball-deep in her married pussy since Tuesday night. \n\n\"Yes, I've had to do a few other things, but that's basically it,\" she said without a lot of conviction. \n\nHe thought to himself \"She's a lousy liar.\" \n\n\"Pardon my directness, but how could you fuck that up Jenna?\" \n\nJenna cried more urgently, \"I was just missing Ryan and thought a quick phone call would be okay. I took the phone in the closet and talked quietly, I'm not sure how they even knew I called him.\" \n\n\"Do you know if Cole has been satisfied with the work you have been doing for him? You haven't been lazy or defiant have you?\" Jones asked. ",
        "\"Oh, I would suspect he has been satisfied; he's gotten everything he's wanted and more. I haven't slept much and he's been 'working me to the bone' as he likes to say.\" \n\nJones nearly laughed out loud, \"I bet he has!\" He thought to himself before asking, \"How about from your perspective Jenna, has paying back your debt been rewarding?\" \n\n\"It's been unbeliev...uh, I mean somewhat satisfying...you know...paying back my debt and all.\" \n\n\"Unbelievable...that's a strong word to describe cleaning toilets and pushing a vacuum around.\" \n\n\"Yeah, I didn't really mean that...this whole situation just has me a little flustered.\" She backpedaled. \n\nJones knew what she really meant. \n\n\"So you really want to go back to Mr. Steele? I might be able to make that happen as I've helped him out of several jambs since I've been chief. He owes me a favor or two. I might even be able to get him to drop the charges in exchange for your recommitment to embrace his punishment.\" \n\n\"Are you serious Steve, you think you could do that? I would be indebted to you forever if you could arrange that. I would embrace his punishment with more enthusiasm than anything I've ever done. Thank you! I would give you a kiss right now if I didn't have this silly blindfold on.\" \n\n\"From what I've heard, you've been embracing the hell out of his punishment for the past several days bitch. And don't worry; you'll be giving me a lot more than kisses very soon.\" \n\n\"That's what friends are for Jenna.\" He said as he hungrily eyed her spectacular tits as he stroked his big cock. \n\nThe drive had lasted nearly an hour, but to Steve Jones it felt like no time at all...ogling Jenna's nearly naked body while playing with himself had made the time pass quickly for him. To Jenna it felt like it took forever as she dreaded what might be her destiny at the other end. She was freezing cold and felt extremely exposed in her current state of undress. However, the past few minutes had given her a new sense of hope as her friend Steve Jones seemed confident he could get her out of this mess. \n\nThey pulled up to the gate and Jones entered the key code. The large steel gate slowly opened to the right. He drove through and watched in his rearview mirror as it closed behind them. \n\nThe guys in the unmarked sedan watched from across the street as the gate closed. \n\nJones drove inside the compound for another 500 feet before they came to a large rollup door. Again Steve entered the code and the door clanked and rolled up more quickly than the gate. He drove inside and parked, \"I'm going to come around to your side and help you out, okay Jenna. I have to keep the blindfold on for a few more minutes.\" \n\n\"Sure, thanks Steve.\" He excitedly helped her from the passenger seat and led her across the massive garage to a set of doors. They walked rather slowly as Jenna was still uncomfortable in the heeled boots. Jones was uncomfortable from the huge boner in his pants. \n\nWhen they finally made their way across, there was a Latino man standing there to greet them. As they approached, Steve and Carlos Juarez exchanged huge smiles. \n\nCarlos checked out Steve's detainee in great detail as she approached wearing an open leopard skinned jacket and matching over-the-knee go-go boots with 5\" heels with her hands bound behind her back and a black blindfold over her eyes. Jenna's tits jiggled sexily as Jones made a Vanna White type gesture with his arm as if to say, \"Here she is!\" Juarez made an open mouthed circle with his lips, raised his hand with his fingers spread and shook it as if to say, \"Too fucking hot!!\" \n\nSteve nodded with a shit eating grin on his face, he reached down and wiggled his extended middle finger in front of her pussy mound. Both men almost laughed out loud. \n\nJenna then heard a man with a Spanish accent say, \"Mr. Jones, the room is ready for you...we've set it up how you requested. We hope your detainee does not give you too much defiance, you know how to reach us if you need any assistance.\" Juarez said with a huge grin. \n\n\"Oh I suspect she won't give me any problems, in fact I'm confident she will be extremely obedient. As for additional assistance, I think I have things completely under control on my own! Jones said as he fist-bumped Juarez and mouthed the words, \"Thank you...its pussy time!\" \n\nThe door opened automatically and Jones led her inside. \n\nJenna didn't know why but something about this place made her uncomfortable. \n\nThey walked a good distance before Jones stopped and said, \"I'm going to remove your handcuffs now Jenna.\" His voice was echoey in the room. \n\n\"Great, thanks Steve.\" \n\nThe chief went around behind her and disconnected the band that bound her wrist cuffs together. As she started to breathe a sigh of relief she suddenly felt the coat being yanked from her shoulders and down her arms. Just as she felt the sleeves slide off her wrists Jones grabbed her left wrist and pulled it around in front of her. He quickly reached around and grabbed the other one. Before she knew what was happening, he reconnected the band and clicked it to a cable that was hanging down from above. Her hands were now locked together in front of her with the cable dangling down. \n\n\"Steve, what's happening? I'm scared!\" Jenna whimpered. \n\nSlowly she felt a steady upward pull on her wrists. \"Steve, what are you doing? This doesn't feel right. Please tell me what's happening!\" \n\nThe hydraulic cable pulled her bound wrists upward. She fought against the restraints, but to no avail. She began to cry as small screams came from her lips. \n\nHer arms were now almost fully extended as she began to panic, concerned that she would be lifted off the ground by her aching wrists. Finally she heard a loud clank and the upward pull came to a stop. \n\n\"Steve, what is going on? Why are you doing this? Are you still here?\" Jenna cried. \n\nJones wasn't far away. He was quickly removing his clothes as he ogled Jenna's spectacular naked body. He came forward, unzipped her boots to the ankle and removed them one at a time. She was now completely naked. \n\n\"Holy fuck she's hot!\" He thought as he stared at her flawless body. \n\nSuddenly Jenna was showered with ice cold water from a hose he held. The hose hung from the ceiling like the cable; it had a garden hose type sprayer on the end. Jones controlled the pressure and temperature with knobs on the handle. \n\nJenna screamed loudly as the nearly freezing water pelted her shoulders, tits, and stomach. Jenna's big nipples were hard as stone within seconds. Her areolas were covered in goose bumps. Jones continued to spray as he walked around behind her and soaked her back and luscious ass. Jenna was crying and begging him to stop. \n\nFinally after about a minute he turned off the water. \n\n\"Why are you doing this Steve? Jenna sobbed. \n\nSuddenly she felt the blindfold being yanked off her head. \n\nIt took her eyes a few seconds to focus in the dimly lit room. Finally her vision returned and she saw Steve Jones standing in front of her naked sporting a raging hard on. He was holding a hose nozzle and eyeing her hungrily. \n\nFinally he spoke, \"So you don't want to go to prison huh Jenna? What are you willing to do to avoid it?\" \n\n\"What do you mean Steve?\" Jenna cried frantically as she continued to shiver in the cool room. \n\n\"I mean what are you willing to do for me to get Cole to drop the charges?\" \n\n\"Steve, for God sakes we are friends, why are you doing this?\" Jenna practically yelled. \n\nJones walked up and grabbed her by the hair and threatened, \"Don't you yell at me bitch! If you want me to help you out with your problem, I expect a lot in return. I think you have a pretty good idea what I'm talking about! Unlike that pansy-ass housekeeping deal Steele gave you to work off your debt to him, my deal comes with much greater expectations!\" \n\n\"But Steve, your wife and I are best friends and you and Ryan play golf and tennis together!\" Jenna pleaded as she thought to herself \"At least he thinks I'm only doing housekeeping for Cole. I'm glad he doesn't know I've been fucking him.\" \n\n\"I don't give a shit about either of them and besides this will be our secret anyway. But it all starts with you drying up the tears and enthusiastically committing to becoming my toy. Once you've fulfilled your part by excitedly fucking my brains out, then and only then will I contact Cole about dropping the charges and taking you back! Otherwise I'll just have my way with you before dropping you off at the jail for arraignment.\" Jones said menacingly. \n\n\"Steve, it just doesn't make sense, what about your three beautiful kids?\" \n\n\"Fuck those little brats, and this has nothing to do with them anyway. This is only about me and you! I've wanted to get in your pants since that first night I met you and Ryan at the club and now my big cock is your only ticket to freedom. You're going to suck and fuck this thing like no other dick you've ever had if you don't want to go to jail.\" He held it out for her to see. \"And by the way I've seen your husband's dick in the shower at the club; it won't be long before you're begging me for more real man's cock anyway!\" \n\nJenna began to sob more urgently, \"There must be something else I can do...\" \n\n\"There will be plenty of other things you'll do for me, but they will all include my cock and one of your sexy holes! You fucked up royally when you stole that money from Steele, now you're going to learn what the consequences are for breaking the law. You can either learn them from me for the next 2 days or you can learn them from the lesbo bitches in the big house over the next 2 years. Trust me, the \"girls\" on the inside will take turns with a sex kitten like you morning, noon, and night. That shit the bull dykes put you through earlier will be like Sunday school compared to your life in the joint! What's it going to be Jenna?\" \n\nShe couldn't believe her best friend's husband was threatening her like this. And was it actually possible she was being blackmailed for the same crime twice? \"How has my life come to this?\" \n\nAnd while she felt a strong sense of guilt for submitting to Cole Steele, the idea of giving herself to Steve Jones was almost incomprehensible. But as was the case with her first bout of infidelity, she realized she didn't have any choice. Prison was not an option, and two days of submission to a vile pig like him, while repulsive, was nowhere close to the pain and humiliation of 2-3 years in prison. \n\n\"Are you sure you can get Cole to drop the charges?\" Jenna asked with trepidation. \n\n\"I don't really know bitch, but the price to find out is 48 hours of complete submission to everything I tell you to do. You better suck, lick, spit, swallow, squeeze, massage, rub, beg, whimper, and scream to please me. You're going to tell me how good it feels and how much you love being my whore as I fuck, lick, spank, and squirt on you. Look around this room right now, the two of us will wear out everything in here!\" \n\nJenna had been only focused on him since he removed her blindfold. She was now fully aware that she was bound by a long cable that hung from the darkened ceiling and the two of them were standing in the middle of the room on a tiled floor with a large drain under her feet. \n\nShe now began to gaze around the cavernous room. The space was filled with odd looking contraptions hanging from the ceiling as well as couches, bean bag chairs, brass poles, and wedge shaped pillows in all shapes and sizes. Jenna could also see a huge bed with satin sheets and mirrors above on one side of the room and what looked like a waterbed with a disco-ball hanging above it on the other. \n\nThe walls were covered with whips, chains, dildos, vibrators, leather hoods, and countless restraint systems. \n\n\"What is this place Steve?\" Jenna asked fearfully. \n\n\"It's where you're going to spend the next 2 days enjoying more ecstasy than anywhere you've ever been Jenna. And all the while, you'll be submitting and giving me more pleasure than I've ever felt. Are you ready to start paying your debt Jenna? Are you ready to show me what a fucking slut you are?\" \n\nMuch like the situation with Cole, Jenna knew she didn't have a choice. The only chance she had at avoiding jail was giving herself to Steve Jones. \n\n\"I'm not a slut, but I guess I don't have a choice.\" Jenna replied quietly. \n\nHe got a big smile on his face as he came up close to her. \"We'll see about that. Oh, and one last thing before we get started, you will call me 'chief' when you address me and you'll use my name each time you talk to me. You got it?\" \n\n\"Yes chief...\" \n\nHe pressed a button and a spotlight shown down on her. \n\n\"Are you sure about that?\" He asked deviously before he turned the freezing cold water back on and sprayed her defenseless body. \n\n\"Chief please stop, it's so cold!\" \n\n\"Do you want something warmer instead?\" He yelled. \n\n\"Yes, anything chief!\" She begged. \n\nHe pushed another button and warm massage oil began spewing from the nozzle. Jenna breathed a huge sigh of relief, \"That's so much better chief. Thank you.\" \n\nJones doused her gorgeous body with the slippery oil before turning the nozzle on himself and coating his body before letting the hose fall to the floor. He circled her hungrily like an animal stocking its prey. Her stunning body shimmered with the shininess created by the warm oil and spotlight. He couldn't hold back any longer...suddenly he was on her, groping and fondling her well oiled attributes. His hands made their way to the spectacular breasts that he'd fantasized about since first seeing her at the club many months before. He couldn't believe the fullness and the weight of each globe as he roughly squeezed and played with her nipples. \n\nHis hips thrust against her ass as he mauled every inch of her slippery voluptuous body. His hands and arms moved quickly around from her tits to her stomach and all the way up through her hair. Suddenly his thrusting rock hard cock pressed against her asshole and popped inside. \n\nJenna screamed. \n\nThis hadn't been his original plan, but Jones certainly wasn't going to look a gift horse in the mouth. She was going to get his cock in her ass at some point tonight; \"It might as well be right now\" he reasoned. He shoved several more inches into her tight hole and she gasped out loud again. \n\nHe squeezed her incredible tits with one hand as he reached down and played with her pussy with the other. Jenna's asshole was tight, but Jones didn't think this was the first time she'd had a cock in it. \n\nJones continued to thrust his pelvis upward as inch after inch of his thick cock bayoneted its way inside. He reached down with both hands and grabbed her butt cheeks and spread them to help accommodate his thrusts. \n\n\"This definitely isn't her first time having anal\" he confirmed. \"I bet that big nigger spent time in this heavenly place.\" \n\nHe grabbed her by the hair, \"You better start responding. Either way I'm going to keep fucking you in the ass, but if you don't show me you want more, I'll gladly take your ass to jail when I'm done with it!\" \n\n\"But Steve, I'm scared. Please take it out.\" She whimpered. \n\n\"What did you call me slut?\" He shouted. \n\n\"I mean chief...Chief Jones please!\" \n\nJenna's emotions were all over the place. She hated him for this, but she knew she had to get over it and give him what he wanted. Still her mind was blocking her ability to do so. \n\nThen her body took over. \n\nJenna tried her best not to respond to Jones' constant upward thrusting. She wasn't attracted to him, but as he groped her tits and played with her pussy, she began to feel that familiar feeling in her loins. She hated that her body would take control of her mind when it came to sex. And while Jones' big dick was nowhere near the length of Cole's monster cock, it could hold its own in the girth. The oversized head plunged the sides of her tight asshole. And as had always been her kryptonite, his large balls were swinging back and forth and slapping against her from behind. \n\nJones noticed as Jenna subtly spread her legs and bent forward as far as her arm restraints would let her. The new position allowed his balls to slap against her clit. \n\n\"That's right Jenna, spread those legs and give my balls a line to that clit.\" He laughed. \"Okay now were getting somewhere,\" as he picked up the pace and fucked her harder. His hands were everywhere on her slippery body, groping her tits, shoulders, hips, arms, and pussy mound. He grabbed a handful of her thick hair and yanked her head back as he talked dirty to her. Jenna's breath was getting shorter as the feelings in her lower body were growing more intense. Jones could sense the change in her demeanor as the pleasure he was providing was making it impossible for her to resist. \n\nHe was in heaven, amazed that this was actually happening. Jones pounded away knowing he wasn't going to hold out much longer. \n\nSuddenly Jenna's body tensed up and her hips started to shake. \n\n\"Holy shit she's actually going to cum!\" He couldn't believe it. \n\nThat realization was all he needed to put him over the edge as he increased the pace ensuring his balls slapped harder on her clit. He thrust so hard that her feet lifted off the ground as Jenna grunted loudly and juice squirted from her pussy and down her legs. Jones erupted in her ass as he held and squeezed her tits. \n\nHe stayed buried in her sweet butt as he massaged her slippery breasts as they both struggled to regain their breath. Finally he pulled out and watched as his seed bubbled out of her asshole and leaked down toward her pussy. \n\nHe walked around in front of her and said, \"You liked that didn't you?\" \n\nShe dropped her eyes in shame that she'd actually cum while he raped her ass. \n\n\"Look at me!\" \n\nShe slowly looked back up at him. \"You better lose the doldrums Jenna; I swear I'll take your sweet ass to the pen if you don't start getting more enthusiastic about this. Obviously you loved it, as of this moment you better start showing it! Do you get that,\" he threatened. \n\nJenna realized quickly that she had too much at risk to not make him as happy as possible. \"Chief it did feel good!\" She said with a sheepish look on her face. \n\n\"That's more like it. Yes I will give you what you want again, but we have other things to do before I fuck your sweet butt again.\" He reached up and un-clicked her cuffs from the cable. She breathed a sigh of relief as she lowered her aching arms. He led her over to a wet bar along the far wall. Jenna looked around in amazement at all the sexual equipment and kinky accessories that filled every square foot of the walls of the large room. Jones saw her gazing around and said, \"Yes we'll putt much of this stuff to use over the next couple of days. You'll think you've died and gone to heaven!\" \n\nWhen they reached the bar, Jones reached into the freezer and pulled out a chilled bottle of 1942 Don Julio Tequila. \"Ryan's told me before this stuff makes you horny Jenna, it's time for you to get more aroused than my big cock has already gotten you!\" He poured 2 shots and handed her one. He toasted their glasses together and said, \"Here's to the greatest 48 hours of your life slut!\" \n\nAfter they downed the shots he reached for a high-ball glass. He filled it an inch deep with more tequila and told her to get down on her knees. \"Grab my cock and stir the drink with it.\" He held the glass down as she grasped his semi-limp dick with her bound hands and guided it into the expensive liquor. \"Stir it around!\" He ordered. \n\nShe submerged about half of the big head in the alcohol before swirling it around. It filled up most of the glass; and as a result she couldn't move it around much. \"Okay, pull it out and lick and suck on it. Get a good dose of the tequila and taste your ass on my cock!\" ",
        "Jenna did as she was told. Jones watched intently with a grin on his face before he closed his eyes and rolled his head backwards as Jenna's full lips and tongue engulfed the head. \"Fuck that feels good...how's your ass taste?\" \n\n\"Um...um...\" She responded with his dick head still in her mouth. \n\n\"Okay now do it again!\" \n\nShe dunked his cock back into the glass and swirled it around. \"Okay suck it off!\" \n\nHe made her do this three more times before he said, \"Good, now finish the drink.\" It was a huge shot, but after pulling his head from between her lips, Jenna was able to get it down in two large gulps. She could taste sex in the drink. \n\n\"Okay, now you're going to do something that will make your night unforgettable Jenna. Grab that little package on the counter.\" She reached over with both hands and picked up the single wrapped 100Mg dose of Viagra. \"As you carefully tear it open, I want you to tell me why you want me to have it right now!\" \n\nShe understood what he wanted her to say. She carefully tore it open with her bound hands and held it between her fingers. Ryan never had trouble getting a hard-on, so they had never used this stuff themselves. \n\n\"Chief, please take this Viagra so you can stay hard.\" \n\nJones got a huge smile on his face, \"Why do you want me to stay hard slut?\" \n\nShe looked away before she took a deep breath and stared back up at him. \"I want it hard so we can have sex chief.\" \n\n\"Don't give me that shit Jenna, we can have sex right now without it. Why do you really want me to take it?\" \n\nShe knew what he wanted her to say so she finally broke down and did so. \"I want you to take it so we can fuck all night long chief.\" \n\n\"Ah now we are getting somewhere. Your starving little pussy clearly wants 9 inches of thick dick for hours on end. Tell me you want it again!\" \n\nShe stared at him with a blank look before responding, \"Yes, please take it; I want your big cock chief!\" \n\nJones ran his hands through Jenna's hair and said, \"I can see you really need it, okay I'll take the pill for you slut. Stick your tongue out and set it on it.\" \n\nJenna extended her long tongue and carefully placed the pill on the tip. Jones moved in close and sucked her entire tongue into his mouth. He licked and swirled it around before swallowing the pill. He kept kissing her aggressively. Somehow letting him fuck her in the ass didn't seem as bad as kissing him on the mouth. She hated him for raping her, but she knew she had no choice but to please him. Their tongues intertwined and they were soon fully kissing. \n\n\"You've wanted this for a long time haven't you Jenna?\" He asked cockily as he pulled away. \n\nShe hesitated again and swallowed, \"Yeah chief, I'm glad we are finally doing this.\" She lied. \n\nJones led her over to the bean bag area. He lay backward into one of the chairs and told her to get down on her hands and knees between his legs, \"It's time for you to suck me off until the Viagra kicks in and I get rock hard. Then you're going to get to feel what it feels like to get fucked by a real cock! You want that don't you?\" \n\nJenna's head sunk down before she looked back up at him, \"Yes chief, let me suck it and get it hard. I've never had sex with someone as well-hung as you!\" She lied. \n\nHe was well aware that she'd been getting lots of black dick for the last several days, but he had no idea if Cole Steele could compare to him. Either way he liked that she was playing along. He held it up and said, \"Come get this thing Jenna!\" \n\nShe moved in close and slowly kissed around the head. Jones was in heaven seeing his club buddy's naked wife kissing his dick with her wet lips. He'd dreamed about this countless times and now it was actually happening. Jenna extended her tongue and swirled it around the big head; she then opened her mouth wide and took it inside. \n\nJones groaned. \n\nHer tongue continued to flutter on it in her mouth. She pulled it out and spit on it before using her bound hands to stroke the shaft as her tongue danced around the tip. \n\n\"That a girl, get it nice and wet!\" Jones said as he ran his fingers through her thick blonde hair. \n\nJenna could feel him hardening. \n\nShe licked her way down the shaft to his balls; the cop spread his legs to give her better access. His huge nuts sat resting on the bean bag chair. Jenna thought to herself that while they didn't hang down as far, they were \u00be the size of Cole's...in other words, still pretty fucking big. She squeezed them softly and fondled them with her fingers. \n\n\"Play with those big nuts Jenna, that's real good!\" \n\nHis wife's best friend lowered her head and sucked on one of them as she continued to stroke his cock. Jenna licked and kissed all around his ball sack before sucking the other one into her mouth. She went back and forth and within minutes his cock was hard as a rock. \n\nJones reached down and grabbed his dick and told her to stick out her tongue. He guided the big head along her tongue and lips and around her beautiful face, \"Open your mouth.\" As she did so he pushed the head inside, \"Suck on it, make me feel good!\" \n\nJenna took him more deeply and soon had nearly 6 inches in her mouth. Jones closed his eyes as his head rolled back, \"Fuck she gives good head!\" He couldn't wait to blow a big load in her mouth, but he then remembered what he'd planned to do since he'd seen the hooker snort coke off Jenna's beautiful body earlier. \n\n\"Okay you can finish this blowjob in a bit, but first I have something else for you to do. Take that towel and wipe my cock clean and dry.\" \n\nShe had no idea why he wanted her to stop, but she wasn't about to argue with him. Jenna wiped her saliva and his pre-cum from his wet dick and balls with the towel. \n\nJones told her to get up and retrieve a brown vile from over on the wet bar. He eyed her gorgeous ass as she went to get it. The cop stood up, instructed her to get down on her knees and pour some of the contents onto his rigid dick. Jenna nervously uncapped the bottle as Jones held his cockhead to ensure that it remained level as she poured the white powder onto his big dick. \n\nJenna wasn't exactly sure what this was or what he expected her to do, but she suspected it was cocaine. \"That's it dump more of it on there, yeah just like that.\" She emptied about 1/4 of the contents onto his stiff cock. He handed her a hotel room key and told her to line it up. With her hands shaking, it took her a few minutes to get the hang of it, but she soon had a reasonably straight thick line of coke running the length from the base to near the rim. \n\nJenna had always distrusted Steve Jones, but the thought of him having illegal drugs while being the chief of police cemented her feelings more deeply. She doubted very seriously if his wife Sandra had any idea. But then she considered the current circumstances and thought there were probably lots of things that Sandra Jones didn't know about her husband. \n\n\"Hold my dick steady and flutter your tongue on the tip, taste my pre-cum!\" Jenna again did as he instructed. \"Oooh, that feels good slut.\" He handed her a short straw and told her to snort the coke from his cock. \n\n\"Chief, you know that neither Ryan nor I do drugs.\" Jenna pleaded. \n\n\"You do now Jenna! I don't give a fuck about Ryan, but you and I are going to get fucked up and fuck like rabbits; you're going to be my little Energizer Bunny! This coke's going to get you charged-up for our fuckfest, snort that thing right now!\" \n\n\"Two days ago I'd never snorted coke in my life, and now here I am snorting it off my best friend's husbands' dick.\" She got a very guilty feeling as she thought about Sandra and the kids. \n\nJenna took the straw from Jones and awkwardly snorted about half the line up the right side of her nose. There were a few starts and stops as she navigated over and around a couple of big purple-green veins that zig-zagged across the top. After a short break to process the first half, Jenna finished the rest using her other nostril. \n\nJones was thinking, \"She says she's never done drugs, but she didn't do that like an amateur...\" He wasn't aware that the football player had only recently introduced them to her. \n\nJenna was zooming quickly as this was some of Carlos Juarez' best stuff. It was much purer than even the expensive blow that Paul Washington had given her the previous night. \n\n\"How'd you like that Mrs. Nielsen? I can see it made your nipples hard! Now it's time for you to finish what you started before; take this thing deep in your throat and clean off the residue.\" Jenna reached up and slowly took his hard dick in her bound hands. \n\n\"Hurry up bitch before I go soft!\" He demanded as he grabbed her hair and pulled her head forward. \n\nJenna got the hint and swirled her tongue around the head before swallowing it in her wet mouth. She quickly took most of his long dick down her throat. \n\nJones was impressed at her cock sucking talents. He had anticipated that her skills in bed couldn't possibly live up to her gorgeous looks. But now after fucking her in the ass and experiencing her first blowjob, he quickly realized that Jenna's talents in the sack were impressive. \n\n\"This is going to be a fucking amazing 48 hours.\" \n\nJenna felt a similar numbness in her mouth like she'd experienced the night before as she licked and sucked the coke from Jones' dick. She picked back up where she'd left off and he was soon thrusting his hips towards her face as he held her head in his hands. She was taking him nearly all the way to the base. He told her to open her eyes and look up at him with it stuffed between her lips. \n\nJones looked into her piercing blue eyes and said, \"I bet you've never had a dick that big in your mouth, have you Jenna?\" \n\nShe shook her head slightly while staring up at him. \n\n\"You like it big don't you Jenna?\" He asked cockily. \n\nShe pulled it out and lied, \"Yes, I can't believe how huge it is chief.\" \n\nActually she was surprised how big it was compared to Ryan's. \n\n\"You sure seem comfortable taking this big thing deep in your throat. Are you sure you haven't been cheating on your husband all these years? You certainly didn't learn that technique sucking on his prick!\" Jones was enjoying teasing her about bigger cocks, knowing that she'd been getting fucked by the black linebacker for the past week. \n\n\"Bring those sweet tits up and rub them around my cock!\" Jenna's wrists were still bound so she held one at a time and took turns rubbing her hard nipples up and down his wet slippery shaft. He reached down and roughly squeezed them and held them together around his dick. \n\n\"Slide them up and down on that hot meat slut.\" He tweaked her nipples and watched as his fat head played hide and seek between her soft mounds. \"I'm going to fuck your gorgeous tits so much, rivers of my cum are going to be flowing off of them. You'll love that won't you Jenna?\" \n\n\"...yes chief, I love having cum on my tits.\" Jenna responded dutifully. \n\nFinally he released them and she leaned down and sucked the head back into her mouth. She swirled her tongue several times before pulling it from between her lips and stroking it as she lowered her mouth and sucked on his balls. \n\n\"That a girl, take good care of those nuts too! Uh huh, just like that.\" Jones said as he flipped Jenna's hair aside so he could watch her pleasure him. He couldn't have been more turned on. Seeing his friend's beautiful wife down on her knees with his balls popping in and out of her sweet lips was mesmerizing. She seemed to be getting into it as her saliva was practically dripping from his sack. \n\nJones had no previous knowledge of Jenna's affinity for testicles. But after feeling her mouth and tongue frolicking on his sack for the next 5 minutes, he quickly figured it out. \"You like those big balls don't you Jenna...yeah that feels good when they pop from your mouth! Keep doing that and you'll get the special treat you were asking for before. I'm going to fill your mouth and you're going to swallow it all, ain't that right, Jenna?\" \n\nJenna nodded as she sucked for several more minutes before licking her way back up his shaft and swallowing the head. She felt his cock hardening as she stroked it frantically with the head in her mouth. \n\n\"Oh my God Jenna...suck that thing! Get ready, here it comes slut!\" He exclaimed before he grunted loudly as his hips lifted off the bean bag. Jenna's mouth was quickly filled with Jones' hot load. She swallowed as fast as she could as she stroked his cock quickly. His volume far exceeded her husband's but wasn't in Cole's league. It was a challenge but she eventually got it all down. She continued to lick and clean around his cock as he ran his hands through her hair. \"Incredible\" he thought to himself. \n\n\"Yeah...not bad Jenna. I might have to have you give Sandra a dick sucking lesson one of these days.\" He watched in complete satisfaction as she licked, nibbled and cleaned him off. \n\nJones lay there contented as he basked in his post-cum satisfaction. He couldn't believe he had just shot his load in Jenna Nielsen's gorgeous mouth. He thought about all the times he'd dreamed of doing exactly that, but had never really believed it would actually happen. Now he knew it would happen several more times over the next two days. \n\nAfter a couple of minutes, he took her back over to the wet bar and they both did another tequila shot before he lined up two more big lines of coke. As she leaned over to do hers first, he came up from behind and guided his still hard dick between her upper thighs along her swollen pussy lips. He leaned over her back and reached around and groped her heavy tits. \n\n\"Snort that coke and get yourself worked up, we have a long night ahead of us slut!\" He said menacingly. Jenna was still amped up from the big line she'd snorted from his dick. This one sent her pulse racing like nothing she'd felt before. \n\nJones spun her around and grabbed her amazing tits. She gasped as he handled them roughly. \n\nHe lowered his head and aggressively licked and sucked her nipples. He ran his teeth over them and bit just hard enough for Jenna to yelp in pain. \"You like that don't you slut, you want me to bite them some more don't you!\" He asked menacingly. \"I'm going to spend so much time enjoying your tits! I can't wait to titty fuck you and spray my big load on your face. You'd love that wouldn't you slut?\" \n\n\"Yes chief.\" \n\nJones did his line and then led her over to a rope and knot apparatus that hung from the ceiling. He disconnected her wrists before reattaching each of them to separate restraints that dangled from the rope assembly. He told her to spread her legs as he knelt down and connected separate stirrup-like straps to each of her ankles. He snapped several connectors from the primary harness around her waist, thighs, and shoulders. A contoured backboard fit tightly against her from just below her shoulders to the small of her back. \n\n\"Chief I'm scared, what is this?\" \n\n\"Don't be scared, trust me you're going to love this. With all that crazy yoga shit you do, you'll be perfect in this thing!\" \n\nCarlos Juarez had purchased this \"Air Fuck Chair\" on one of his visits to Singapore the previous year. Jones had used it a few times since and was amazed at all the things it could do. He reached for the remote control and quickly dimmed the lights in the large room. Rave music blared from the surround sound system as he looked at the unclothed babe with a devious grin on his face. \n\nJones clicked the remote again and Jenna suddenly felt the restraints tighten as the harness gripped her gorgeous naked body. Jenna shrieked as she was quickly lifted off the ground. The hydraulic wenches, cables and ropes easily contorted her body into numerous positions as Jones got reacquainted with the controls. Finally he brought her into a jumping jack position about 3 feet off the ground. Her arms and legs were spread wide. He walked up and ran his fingers through her pubes as she looked down at him nervously. He then pulled roughly on her patch of girl fur; she yelped. \n\nJones was in absolute control and loved it. He took a few steps back and admired the heavenly creature that was on full nude display for him. He could only imagine how humiliating this must be for her and that only added to his enjoyment. He drank in every perfect curve of her incredible body. Jones stared at her full tits and admired their roundness as he looked up at them from below. The horny cop loved the way they hung so sexily above her flat stomach. \n\nJones walked behind her and again admired her long legs and firm round heart-shaped ass. He walked over and took a paddle off the wall. Jones re-approached and gripped one of her ass cheeks with his free hand. He ran his hand over the smooth surface and let his fingers slide forward and tickle her hanging pussy lips. Then he suddenly spanked Jenna's ass hard with the wooden object. She let out a loud shrill. He spanked her aggressively a half-dozen times. Tears were streaming down her face as her ass cheeks turned a bright shade of red. \n\n\"Please stop chief, it hurts so much!\" Jenna pleaded. \n\nThe devilish grin never left his face. \n\n\"Okay, you did do a pretty good job of sucking my cock, so I'll stop for now, but any other disobedience or lack of enthusiasm will be result in many more spankings! You got it slut?\" \n\n\"Yes chief, I understand. Thank you!\" \n\nJones reached for the remote and pushed a sequence of buttons. \n\nThe cable restraints quickly leveled Jenna's naked body and raised her up about 6 feet off the ground. The harness easily supported her body in such a way as to put no undo pressure on her torso or back. In spite of her fear, Jenna was amazed as it felt like she was floating on air. The stinging sensation on her ass cheeks began to subside. \n\nJones readjusted the controls again and Jenna's body was soon bent at the waist with her toes pointing up towards the ceiling as her back remained parallel to the ground. Jones stood fully upright as he moved within inches of Jenna's swollen pussy lips. He took a deep whiff of her sex. He eyed her cunt hungrily as he checked out the folds and contours of her thick puffy lips, \"She's got some junk down there...I like that.\" \n\nJones still couldn't believe this was happening. He'd fantasized so many times about simply fucking Jenna Nielsen, but now he had the incredible good fortune of having her as his slave in Carlos Juarez' sex palace. Her body was even more spectacular than he'd imagined and she clearly had sexual talents that far exceeded what he'd dreamed about even in his lustful fantasies. \n\nNow her gorgeous pussy was staring him in the face. \n\nJones moved forward and sniffed and nuzzled around it. Jenna could feel his heavy breathe as he exhaled on her sensitive lips. Suddenly she felt his tongue softly sliding over its swollen contours. Her own breath quickened as he nuzzled her sex and the cocaine pulsed through her veins. She could only imagine how erotic this situation would be if it were Cole doing this to her right now. For some reason Ryan never crossed her mind... \n\nShe certainly was not attracted to Jones, but her body didn't seem to care as the soft caresses from his tongue made her tingle all over. She didn't want it to feel good coming from him, but her mind was quickly losing the battle to her loins once again. \n\nJones hit the remote again and sensual videos of wet genitalia engaging in deep penetration filled the dark ceiling above her. Jenna couldn't take her eyes off it as close-up black and white images of big veiny cocks knifing roughly into sopping wet pussies shown hugely against the darkened background. \n\nJones reached over and picked a sleek 7\" vibrator off the wall and flipped it on. He brought it to Jenna's moistening pussy lips as his tongue sought out her clit stud. He flicked it repeatedly as he brought the toy to her inviting hole. He rubbed the pulsing joystick up and down her slit as he brought his lips over her love button and sucked it hard between them. Jenna moaned and closed her eyes. ",
        "When she re-opened them, video images of copious amounts of semen pouring out of gaped young pussies shown on short-clip black and white videos above her. She was mesmerized as she watched scene after scene and was immediately reminded of recent experiences where she'd watched Cole's hot cum pour similarly from her own gaped opening. \n\nJones pressed a button on the remote and Jenna's legs were suddenly pulled apart at the ankles. He held the button until her legs were spread at a 45 degree angle. This obviously gave him better access to her (not so) private parts, \"Beg me for my tongue and the vibrator again slut!\" \n\nThe drugs, booze, and erotic environment had conspired to rob her of her ability to resist, \"Chief, I want to cum again, but please don't make me beg.\" \n\n\"She doesn't even realize she is already doing it...\" \n\n\"Do it now. Beg!\" \n\nJenna couldn't help herself, \"Yes chief, I want it...please give it to me.\" \n\nJones laughed loudly as he flipped the vibrator on again and slid it along her now soaked lips. He did this several times before he sunk it deeply inside her. \n\n\"Oomph...oh.\" Jenna moaned. Jones pleasured her with his tongue and the toy and listened as she gasped and grunted her approval. He pushed another button on the remote and Jenna's tilt angle adjusted as her head sunk slightly and her hips raised a few inches. He pushed and held the previous button again and her legs were spread almost into a full side to side split position. Her asshole was now right in front of his face. \n\nJones left the pulsing vibrator buried in her pussy as he set the remote on the nearby ledge. He grabbed both of her firm butt cheeks and pulled them apart and licked around her purple starfish. \n\n\"Uhn...Oh God...\" slipped from Jenna's mouth. He knew she was no longer simply saying what he wanted to hear. She couldn't contain her responses as her body writhed in pleasure. He buried his tongue deeper in and around her asshole as the vibrator buzzed away in her dripping slit. \n\nJones knew Jenna was only minutes from another climax. He kept up her asshole tonguefest as she whimpered and moaned. Jenna seemed to forget who was pleasuring her; she was quickly approaching a major orgasm and knew this one was going to be a wet one. \n\n\"Oh fuck I'm going to cum...uhn.\" \n\nSuddenly Jones pulled away and reached for the remote. Jenna cried out, \"Oh no, please don't stop.\" He quickly maneuvered her body down where her pussy was now at the perfect height to receive his rock hard cock. She was bent at a 45 degree angle with her head raised above her pelvis and her legs still spread wide. \"Beg me for my cock slut!\" He yelled as he yanked the vibrator from between her legs. \n\nJenna's hips continued to quiver like a dog in heat. \"We...can't chief!\" She whined pathetically. \n\n\"Tell me now slut!\" Jones demanded, knowing she couldn't help herself. \n\nFinally after several seconds, Jenna whimpered, \"Yes chief please put it in...\" \n\nHe brought the big head to her slit and rubbed it up and down as he watched her writhe urgently in frustration. \"Don't tease me chief...please.\" \n\nJones grabbed her hips as she sat suspended in the air with her legs spread wide and shoved his huge cock deeply in her pussy. \"Oh GAWD...!\" She screamed as her pussy spasmed and her hips shook violently. Suddenly her juices erupted around his cock and splattered everywhere. He pulled his dick from between her legs and watched in amazement as 2 or 3 more gushes shot from her pussy. \n\n\"That a girl, way to cum all over that cop cock slut!\" He reached forward and massaged some of her love juice that had splattered onto her stomach, further up onto her tits. Jenna lowered her head in embarrassment. Tears filled her eyes. \n\n\"Don't feel guilty Jenna, yours isn't the first pussy that's climaxed all over my big cock!\" \n\nOn top of fucking this incredible woman, he was really enjoying humiliating her. \n\nJones adjusted the fuck chair and brought her face to his as he kept roughly squeezing her tits, \"Kiss me Mrs. Nielsen...now!\" He leaned in and buried his tongue between her lips. She did her best to fake it as his tongue aggressively swirled around in her mouth. Eventually he pulled away and said, \"I'm sure glad you suck dick better than you kiss!\" \n\nHe finally brought her down until her feet were touching the floor. He systematically detached the restraints until only her wrists were attached. He disconnected them from the web and quickly reconnected them back together. Jenna's legs were wobbly as she supported her weight for the first time in over an hour. He led her back over to the wet bar. \n\nJones pulled out a device that had a small funnel attached to a tube. To Jenna it looked like an undersized beer bong which she remembered from college parties. She suspected however that it was something sexual that he was going to use on her. \n\nHer first inclination was actually correct. \n\nJones handed it to her and told her to hold it as he reached into a nearby refrigerator and pulled out a pitcher of dark pink liquid. He told her to get down on her knees as he took the device and covered the tube end with his thumb. He handed her the pitcher and told her to fill the funnel as he held that side in his other hand and leveled the tube end with the top of the funnel. \n\nJenna was shaking as she poured the pink liquid into the funnel. When it was finally full he told her to set the pitcher on the bar. She knew he intended for her to drink the pink mixture. \"Chief, what is that stuff? I don't want to drink it...I'll do another shot if you want but I'm pretty messed up already.\" \n\n\"Shut the fuck up and take this tube in your mouth, you know I'm not going to give you anything that's going to hurt you!\" Jenna took the tube in her bound hands and sucked it between her lips. \"Get ready I'm sure you've done one of these things before Jenna.\" He quickly lifted the funnel end and the sweet pink liquid gushed into Jenna's throat. She did her best to swallow it all and actually got most of it down before some spilled down her chin and onto her tits. \n\nThe \"everclear\" punch quickly made its way into Jenna's stomach. Jones tossed the booze bong aside and poured a small glass of the punch for himself and drank it down. He grabbed the vile of coke off the counter and stood back in front of her and held his dick in front of her mouth, \"Clean all your cum off my cock!\" \n\nJenna proceeded to lick and suck his cock clean. He handed her the towel again and told her to dry it. After she had done so he handed her the vile and said, \"You know the drill, line it up.\" \n\nJones again held his cock level as she poured the powdery contents onto it; when she was done he handed her the straw. In spite of her fucked up condition, the buzz was addictive and Jenna found herself looking forward to the coke. She snorted this one like a pro before licking the remnants from his cock. She was now really fucked up from the booze while incredibly amped from the drugs. \n\nJones led her over to the waterbed. He told her to remain standing next to it as he climbed on. He moved up near the headboard and propped a bunch of pillows behind him until he was sitting up. He grabbed the remote and darkened all the lights in the room before turning on the disco ball. Jenna immediately thought back to Tuesday night when Cole had done something similar on his balcony. \n\n\"Dance for me and play with your pussy!\" Jones ordered. \n\nJenna had been down this path and again was really fucked up as she danced for him. \n\nShe sexily swayed to the music as she reached down and ran her fingers through her blonde patch. Jenna brought two fingers into her mouth before lowering her hands and sliding them down around her pussy. \"That's it spread your cunt lips and show me your clit ring...oh look at that thing sparkle...slide your clit between your fingers...wow you're wet again slut. Stick a couple of fingers in your wet hole...yeah nice and deep; get that pussy ready for my big cock again!\" \n\n\"Okay, go grab a toy from the wall and come show me how you like to masturbate Jenna. And don't try to tell me you don't know what to do. That lustful pussy of yours clearly likes to be played with.\" \n\nJenna was now really hammered and didn't argue. She walked over and quickly perused the large selection of dildos and vibrators. \"Get one that has a clit teaser on it slut!\" Jones barked. \n\nJenna knew exactly what he was talking about. She actually owned a vibrating dildo that was about the size of Ryan's dick that had a secondary clit massager. Ryan loved to watch her use the toy to pleasure herself. Jenna loved the clit massager and it never failed to make her orgasm when she used it. \n\nJenna found herself aroused as she looked at all the pleasure devices. \n\nShe reached for a very similar sized toy to the 6 inch one she had at home. But before she grabbed it, she hesitated and moved to her right and chose a device that was closer to 7 \u00bd inches in length and much thicker than her husband's cock. \n\n\"There you go Mrs. Nielsen, get one that is more size appropriate for my big cock than the one I'm sure you use at home! Come back over here and show me how you play with yourself.\" \n\nJones instructed her to stroke a handful of lube onto the dildo and wipe the rest along her swollen pussy lips. \"Now use your tongue and flick it around the clit massager,\" he said, \"Show me how you like your clit licked.\" \n\nJenna didn't want to show him her tongue prowess so she awkwardly licked the clit massager. Jones had watched her eat Tiffany's pussy earlier and knew she could do much better, but he didn't necessarily want her to know that he'd organized the lesbian rape encounter with the hooker, so he remained quiet. \n\n\"Put one of your feet up on the edge of the bed and spread your pussy Jenna! Okay, now take your fingers and spread the hood and show me your horny clit. That's nice, look at how engorged that thing is. Okay now turn that dildo on and rub it along your swollen lips. Good, now push that head in there and let me hear it slop around in your slutty pussy.\" Jones laughed as he could hear it make suction noises in her hole. \"Shove it all the way in and bring that massager to your clit!\" \n\nJones was in heaven watching Jenna impale herself on the fuck toy while the lights from the disco ball flashed across her stunning body. He stroked his cock and wished this night would never end. \n\nThe big pulsing dildo felt so good in her pussy as Jenna stood with one foot on the bed. She loved her similar toy, but the added length and thickness were touching nerve endings that hers (in spite of her best efforts) had never achieved. Now she brought the massaging tip to her clit and moaned as it made contact with her aching nub. \n\nJones watched in amazement as Jenna seemed oblivious to her surroundings as her eyes closed and her head fell backwards. He could tell she was concentrating the massaging tip on her obviously sensitive love button. Little moans and gasps were coming from her mouth as she increased the pace and slid the dildo in and out of its new found home. \n\n\"How's that feel?\" \n\n\"Ugh...good chief...really good, uhn.\" \n\nJones could tell that Jenna was really fucked up and completely lost in the throes of ecstasy. He could never have imagined this scene in his wildest dreams. \n\n\"Okay slut, before you cum on that thing, pull it out and climb up on this bed, I got something bigger and stiffer for you to get off on.\" \n\nJenna's shoulders slumped as she obviously didn't want to stop. She reluctantly pulled the dildo from her pussy and again it made a suction noise as the head popped from between her lips. \n\n\"Get up here and mount this rock hard pole Mrs. Nielsen, I want you to squirt some more of that hot cum on it!\" \n\nJenna reluctantly dropped the amazing toy and leaned forward onto the waterbed. Unfortunately she miscalculated the depth of the liquid and her weight shift combined with her fucked-up condition and bound wrists caused her to lose her balance and faceplant on the smooth surface. \n\nJones laughed out loud as his wife's best friend laid sprawled awkwardly below him on the waterbed. \"Style points don't mean shit as long as you climb up and show me something on this big cock Mrs. Nielsen!\" Jones teased laughingly. \n\nJenna drunkenly crawled up the shifting surface to between his legs. \n\n\"Spit on it before you ride it Jenna!\" Jones commanded. \n\nShe stroked his rock hard cock and let a saliva stream spill onto the big head. She smeared her spit around the dome and up and down the long shaft. \n\n\"Hurry up and climb up on it! I want to be inside that wet hole now!\" He barked. \n\nJenna positioned herself above it and brought the head to her swollen lips. She started to press down before he grabbed her hips and roughly shoved upward deeply into her wet pussy. \n\nJenna gasped loudly as the purple head plowed inside. \n\n\"Yeah bitch, that's what a real man's dick feels like.\" Jones reached up and disconnected her wrists. \"Play with your tits as you ride it and tell me how much better it feels than your husband's cock!\" \n\nJenna was glad to have the restraints removed and figured he'd be less likely to put them back on if she performed for him. She set about rubbing, squeezing, and tweaking her nipples for his enjoyment. She didn't mind the sensation either. Meanwhile, Jones held her hips and fucked her hard from below. \"Yeah show me how you like those big tits played with and tell me how good my big cock feels!\" \n\n\"Oh chief, your cock is so deep, his dick could never reach those places!\" Jenna cried in an attempt to stroke his already bursting ego. \n\nJenna was trying her best not to contribute to the action as his loins slapped against her, but she was quickly losing her ability to resist as his cock plunged deeply and rubbed roughly on her G-spot. \"Oh fuck...I hate this asshole but his cock does feel good...\" It wasn't long before her hips were thrusting forward and back in an attempt to maximize her own pleasure. She was tweaking her nipples and her breath was getting short. \n\nJones could tell she could no longer control herself. He knew his friends' stunning wife would be climaxing on his cock again soon. \n\n\"Play with your clit, cum all over my rigid cock again slut!\" \n\nJenna instinctively reached down and hurriedly frigged her engorged nub. Jones clicked the voice recorder on his nearby phone. \n\n\"Uhn...uhn...uhn...oh God,\" escaped from Jenna's lips as she threw her head back and closed her eyes. \"Oh fuck chief!\" Jenna moaned heavily between breaths. Jones reached up and grabbed her heaving tits as Jenna impaled herself on his pistoning dick. Within minutes she climaxed loudly and he felt her juices spill onto his balls. \n\nIt was now 1:00 a.m. \n\nJones had Jenna tear open another package, feed him another Viagra, and beg him to fuck her again. Jones took advantage of what the kinky room had to offer as he teased, taunted, and tortured her. \n\nOver the next five hours they fucked every way imaginable. He kept her amped up on coke as he led her through a decathlon of sex. He made her dance on a brass pole and talk dirty to him as he stroked his cock on the leather couch. Nipple clamps, anal beads, leather whips, feathers, hot oils, wedge pillows, vibrators, and wooden paddles were all part of his onslaught on Jenna's spectacular body as the night went on. \n\nJones had developed strong staying power from all the sex he'd had with Juarez' girls, but it took everything in his power to not blow his nut every time Jenna climaxed. He couldn't believe how many times he brought her to orgasm in spite of the fact he was \"taking her against her will\". \n\nJones quickly realized that her sexy body was conflicted with her mind. Perhaps it was the drugs and alcohol, but regardless of her mental resistance, her pussy and asshole couldn't defend against his thick cock. As she failed to control herself, he considered the unimaginable thought...\"Could a woman this hot actually be a nymphomaniac?\" \n\nHe paraded her around the kink room and fucked her relentlessly. He laid her over one of those huge rubber blow-up workout balls and took her in the ass and watched as her juiced flowed down the sides. \n\nJones put his uniform back on and had her dress up in sexy jailbird lingerie and beg for freedom. He told her if she gave him the best blowjob of his life he might consider it. He then made her strip off his clothes and massage his entire body and beg to suck his dick. Jones finally told her to get down on her knees and pleasure him; she proceeded to give him a world-class blowjob. He was amazed that she was able to take his long dick so far down her throat. \"That nigger must have taught her how to do that!\" \n\nWhen it came time for him to blow his nut, he ripped off her sexy outfit and spooged all over her face and tits. \n\nJones then denied her freedom request. \n\nThe unforgiving cop threw her over his knees and spanked her sweet ass repeatedly for even requesting her release, \"Why would you want me to let you go? Your horny pussy certainly wouldn't agree based on the number of times it's squirted on my dick!\" \n\nJones led her back to the shower in the center of the room and washed his spunk and their combined juices from her body. He massaged and groped her tits and ass as he washed her. \n\nAfter drying her off, he dressed her in a sexy leather harness and lifted her up against a Velcro wall. He ravaged her amazing tits as he lifted her legs and bent her knees and pressed her legs back against the wall. Her pussy was stretched wide as he brought his cock to her hole and thrust deeply and roughly into her. Jones kissed her and sucked her tits as his cock pistoned away. He then watched in complete satisfaction as her breathing got short and her face gave away the fact she was approaching climax once again. \n\n\"This slut's going to cum on my cock again!\" \n\nJones took her to the edge several times before she whimpered and whined for her orgasm. He loved holding the control over her. \"You need to tell me what you want slut!\" \n\nJenna whimpered pathetically, \"...fuck me with your big cock and make me cum again chief...please don't tease me anymore.\" \n\n\"That's more like it Mrs. Nielsen, now I know what you really want.\" He proceeded to pound her hard until she screamed out loud and her cum puddled at the bottom of the wall. \n\nJones led her over to the big bed and maneuvered her limber body into countless sexual positions as he used the toys and other devices to drive her wild. Eventually he attached her arms and legs to the 4 corners of the bed posts, propped some pillows under her ass and ate her pussy for nearly an hour. He then gave her one last long deep fuck before emptying his balls in her very tender pussy. \n\nIt was now 6:00 a.m. \n\nJones slowly got up from the bed and nearly fell down as his wobbly legs could barely support his weight as he crossed the room and threw on some jeans, a tee-shirt and a baseball cap. He could feel the effects from the booze and blow as he walked back over to the bed. Jenna remained spread-eagle with her arms and legs bound to the 4 bed posts. He could see his cum oozing from her gaped pussy. \n\nJones released her limbs and told her to \"Get some sleep, you're going to need your energy for later today, I'll be back in a while. Don't try to leave this room; I can assure you the security system is impenetrable.\" He pointed out where the bathroom was before he kissed her on the lips and walked out the door and locked it behind him. \n\nJenna lay in the wet sheets with tears in her eyes as she processed the situation. \"I can't believe this is happening to me, it's a fucking nightmare.\" She thought about Ryan, Sandra, and the kids and was quickly overcome with guilt, \"How am I ever going to look any of them in the eyes again?\" ",
        "Jenna slid out of bed and walked gingerly to the bathroom. She could feel the chief's semen dribbling down her legs. When she emerged, she found a light switch and turned the lights on. The brightness hurt her sensitive eyes and pounding head. She dimmed them but not so much as to not be able to see her way around. Jenna slowly walked over to the door and checked the lock; it was bolted from the other side. \n\nJenna turned back around and stared in amazement at the large sex room. Jones had fucked her in nearly every corner of the kinky place. She could see all of the toys and other sex devices that he'd used to tease, taunt, and pleasure her scattered about the room...\"OMG.\" \n\nShe figured out how to turn on the hose nozzle and washed herself with hot water as she tried to clean away his smell from her body. \n\nFinally after drying off, she stripped the wet sheets, laid down, and passed out. \n\nJones drove back to Pasadena with an amazing sense of accomplishment coursing through his mind as he did his best to replay all the details of the nights' events. He had scripted the night in his mind earlier in the day, but every aspect of it exceeded his expectations. \n\nJenna had been everything he'd fantasized about and more. Even in his wildest dreams, he couldn't have envisioned the mind-blowing sex that he enjoyed with his wife's gorgeous best friend. The fact that she couldn't control her own sexual desires and climaxed time after time as he took her endlessly in the sex chamber was incomprehensible. \n\nAnd while he hadn't slept a wink, he was still on an adrenaline high as he drove to the Nielsen's house. Earlier in the night when Jenna lay naked over his lap as he spanked her tight ass, he made her tell him the key code to their garage door and the access number to her cell phone. He told her he was going to stop by and take one of her pairs of panties as a keepsake to remember this night. \n\nNow as he pulled into the Nielsen's driveway, he could see the keypad mounted on the right side of the door. He knew that Ryan wouldn't be there as he always went to the gym on Saturday mornings ahead of their standing 7:30 a.m. match. Jones got out of the car and failed to notice the unmarked sedan that had followed him from the Juarez compound. He opened the garage door and went inside. \n\nJones actually wanted to rummage around in Jenna's private bedroom things, but he didn't have a lot of time, so he searched for her purse and luckily found it next to her night stand. He reached in and searched for her car keys. He found the keychain near the bottom and pulled it out, \"Bingo\" he said as he found a FOB for Ryan's BMW on her chain. \n\nJones then pulled Jenna's phone from the junk filled purse. Ryan had put it back when he returned from Cole's house on Tuesday night. Jones turned it on and pulled his pants down and took several pictures of his cock and balls with a wedding picture of Jenna and Ryan as the backdrop on her nightstand. \n\n\"This will give her something to remember our weekend fuckfest after Cole sends her back home,\" he thought to himself before turning it off and putting it back in her purse. \n\nHe exited the bedroom and went to Ryan's wet bar. He found a half-empty bottle of vodka; he slipped it into a grocery bag and took it with him. \n\nWhen he arrived at the club he parked a couple of spaces from Ryan's car and unlocked the BMW with the electronic device. As usual Ryan parked his car in reverse with the trunk up against a big hedge that divided the parking lot from the road. \"Perfect\" Jones said quietly to himself. He opened the front passenger door of the BMW and slipped the bottle of vodka between the seat and the door and closed it carefully. \n\nJones then popped the trunk and went around to the back. He looked around to make sure no one was watching before he quickly accessed the rear passenger tail light assembly, reached in and shattered the bulb. He put the assembly back in place and looked around again before closing the trunk. \n\nThe two men in the unmarked sedan watched from a couple of hundred feet away and wondered what he was doing in the trunk of someone else's car. After Jones went into the club, one of them walked across the parking lot and wrote down the license plate. Once back in the car, they ran the plate on their FBI database and learned that it was registered to a Ryan S. Nielsen of 971 Laguna Rd., Pasadena, CA. \n\n\"Hey that's the same residence we just followed him to,\" one of the agents observed. \n\nAs Jones walked from his car across the parking lot several minutes earlier, he viewed his phone app that showed real-time video images from Juarez' sex room. Jenna lay naked on her side as she slept. He zoomed in on her gorgeous ass and admired her protruding pussy lips, \"I can't wait to get back in that sweet fucking hole...\" \n\nIn addition to their Friday golf tee-time, Steve Jones and Ryan Nielsen had a standing match every Saturday morning at the club. They would alternate between golf, tennis and racquetball. The two of them were very evenly matched when it came to golf and tennis, but Jones held a decided advantage over Ryan in racquetball. Today was a racquetball day. Jones had never lost to him and liked to rub it in as they relaxed over drinks following their match. \n\nBoth men were extremely competitive and Ryan despised losing to him. Not only did he hate the way that Jones would needle him during the match, but Steve was a braggadocios winner during post game drinks. \n\nThis day would be different. \n\nRyan had been working hard on his game and he was confident today would be the day he would finally beat the chief. Ryan also obviously didn't know that Jones had been up all night and was still feeling the effects from the booze and drugs and his legs were like Jello as he stepped onto the court. The only reason Jones was here at all was the asshole cop liked the idea of defeating his friend again after he'd had his way with his gorgeous wife all night long. \n\nRyan noticed quickly that Steve wasn't moving as well as he normally did. He was a step slow and seemed to be gasping for air more than he could remember previously. Ryan won the first game relatively easily. The second game was close but Jones pulled it out at the end. The third and deciding game wasn't a game at all; Ryan destroyed him as Jones was completely out of gas. \n\nRyan Nielsen couldn't have been more proud of himself. With all of the stress that he was feeling in his personal life, beating Jones for the first time was very uplifting. \n\nAs was their ritual following Saturday matches they went in the sauna before showering and heading to the lounge. As they sat naked in the sauna, Jones looked down and saw evidence in his pubic hair of he and Jenna's combined dried juices. Sitting only a few feet from her husband with Jenna's cum remnants around his dick made Jones smile. \n\n\"What's so funny,\" Ryan asked \n\n\"Oh nothing, I was just thinking about something from last night.\" Jones smirked. \n\nJones also couldn't help but compare the size of his dick with Ryan's. He thought about how many times Jenna had climaxed on his rigid pole and how she seemed to get off on the length and thickness, \"This guy has no idea how much his lustful wife loved my big cock last night!\" Eventually he had to cover up with a towel as he started getting hard thinking about getting back to the Juarez palace. \n\nAfter getting cleaned up, Ryan went straight to the bar and ordered two shots of tequila. The bartender said he would have them delivered to their table. He and Steve found a table on the patio and sat down. Ryan couldn't wipe the grin from his face as Jones finally complained, \"Fuck you Nielsen even a blind squirrel finds an acorn once in a while.\" \n\n\"Don't act like it doesn't bother you Steve, last month you told me I was never going to beat you at racquetball...'never' only lasted a month!\" Ryan replied with a big laugh. \n\n\"Fuck you...\" Jones responded with a disgusted look on his face. \n\n\"Hey guys, what are we celebrating?\" They both turned to see the hot new redheaded waitress walking up carrying a tray with two large shots of tequila. \n\n\"Hey Dana, we are celebrating me beating Steve here for the first time ever in racquetball!\" Ryan responded with a big grin. \n\n\"He got lucky...\" Steve said dryly. \n\n\"We aren't being a poor sport are we chief?\" Dana needled him with a smile. \n\n\"Yes...maybe a little.\" Jones answered with a glum look before laughing himself. \n\nShe handed each of them a shot. \"Well, congratulations Ryan...bottoms up!\" She said as she turned and flipped her ass upwardly and looked over her shoulder at them flirtatiously as she walked away. \n\nThey pounded the huge shots. \n\nWith pained expressions on their faces, they watched as she strolled back towards the kitchen. \"Fuck, I wouldn't mind getting a piece of that!\" Ryan said as he recovered from the large shot. \n\n\"Wow, Jenna hasn't been gone a week and you already want to get in the new girls' pants. Your right hand isn't getting the job done with the wife out of town, huh Nielsen?\" \n\n\"Dude, don't tell me you wouldn't hit that...you certainly aren't Mr. Faithful!\" Ryan responded. \n\n\"Guilty as charged! Speaking of that man, you should have seen this blonde I boned last night. Great rack, tight fucking ass and she sucked a really mean dick!\" \n\n\"You are terrible Steve; you have a wonderful, beautiful wife. Why do you fuck around on her so much?\" \n\n\"Don't bring her up; and certainly don't lecture me Nielsen. I like to share my big cock with lots of women...I can't help it if they want to fuck me. This chick I fucked last night is married and I guess her husband doesn't satisfy her cuz she couldn't get enough of it. Have you ever fucked a squirter before Ryan?\" \n\n\"Squirter?\" Ryan played dumb as he certainly wasn't going to share with Jones that his wife was one. \n\nJones laughed, \"You know, one whose pussy squirts when she cums. This chick last night was like a fountain.\" Jones reveled in the conversation as Ryan denied knowing what a squirter was. The fact that his wife had uncontrollably showered him made the conversation all the more satisfying for Jones. \n\nJust then Dana came back carrying more drinks. \"They told me you guys have Bloody Mary's every Saturday morning. I'm learning to pour drinks, don't hate me if you don't like them.\" Dana said cutely as she pleaded for their understanding. \n\nRoger Cargile had gotten her a fake 23-year-old California driver's license. The servers at the club were allowed to make drinks when the bartender's were busy as long as they were 21. One of the bartenders had \"conveniently\" called in sick this morning, so Dana took the opportunity to doctor Ryan's drink as she'd been instructed by Roger. \n\nThe cute redhead basically poured him the equivalent of a triple vodka Bloody Mary. She spiced it up significantly to disguise the heavy booze content. Ryan took a big drink and had to swallow roughly to get it down. He didn't want her to know that it wasn't close to as good as Larry's (the usual bartender), so he lied and told her it was awesome. Nothing, not even a bad cocktail, was going to kill his satisfaction for finally beating Jones...not to mention, it was hard to be too critical of the sexy server. \n\nAfter she walked away, Ryan said \"She should probably stick to serving and not bartending.\" They both laughed. \n\nRyan and Steve talked about the Rams upcoming second season in LA and the Dodger's recent series sweep against the Giants. Ryan felt himself getting pretty buzzed, but suspected it was because he hadn't eaten anything yet this morning. Luckily Jenna had stocked the shelves the previous weekend, so he planned to make a big breakfast when he got back home. \n\nJones was thinking about eating something else. \n\n\"Are you feeling this drink as much as me?\" Ryan asked. \n\n\"What do you mean?\" \n\n\"I feel like I'm getting really buzzed from it.\" Ryan replied. \n\n\"No, not anymore than Larry's.\" Steve answered. \"I had a tasty breakfast before I came and I'm going to have an early lunch.\" His thoughts turned to Jenna's pussy again. As he sat there talking to Ryan, he accessed the remote camera app again and checked out Jenna's naked body. He clicked between the camera images and panned in on her gorgeous tits as she slept. His cock stiffened in his shorts as he couldn't wait to get back to Juarez' house. \n\n\"Yeah, I probably just need some food.\" Ryan said. \n\n\"How is Jenna's friend doing?\" Jones asked. \n\n\"Uh...um...pretty good\" Ryan responded as the question caught him off guard. \n\n\"It's got to be tough having her away for so long. If my wife was gone for that long, I'd worry she'd miss my dick so much she might be tempted to fuck around.\" \n\n\"Your wife? No way Steve, I can't see her cheating on you.\" \n\n\"Thanks for saying that. Do you worry about yours Ryan; Jenna must get propositioned a lot.\" \n\n\"No, I completely trust her. I'm not sure why I'm telling you this, but she was a virgin when we met...she's never had sex with another man.\" \n\n\"Are you shitting me Nielsen? Never...that's awesome!\" He quickly got a vision of Jenna hanging in the fuck chair as her pussy juice erupted on his dick only a few hours previously. \"Never fucked another man huh...?\" \n\n\"You're a lucky man Ryan Nielsen! A wife that looks like yours who's never tasted another man's cream, that's incredible! I'll drink to that.\" Jones raised his glass for a toast. The comment was awkward for Ryan but he went along and toasted anyway. \n\n\"I gotta drive home, no more for me.\" Ryan said as he put his glass back on the table. \n\nJust then Dana returned carrying a tray with three more tequila shots. \"I decided to join you for one more celebratory round Ryan. It sounds like beating Steve is a big accomplishment!\" \n\nJones said with a laugh, \"Why are we making such a big deal out of this. One lucky match doesn't mean shit. Besides I have an excuse...I didn't get much sleep last night!\" \n\n\"Excuses...excuses\" Dana said as she smiled at them both. \n\nRyan was really attracted to this cute bubbly redhead with the smoking body. He'd always had a thing for redheads and she liked to flirt. He was also getting really buzzed. Under normal circumstances he would never have had a third drink and drove, but Jenna wasn't around to pick him up and he didn't want Dana to think he was a wimp. The three of them clanked their glasses together and downed the shots. \n\nShe said, \"Don't tell your beautiful wife I bought you a drink, I don't want her to think I was hitting on you!\" \n\n\"His wife's out of town for several weeks.\" Jones interjected. \n\n\"Out of town for several weeks, you poor guy. Your wife is so pretty, I can't imagine how much you must miss her. I know I would!\" \n\nThe comment hung in the air for a moment as Ryan and the chief contemplated what she had just said. \"Did she suggest she was attracted to Jenna?\" \n\n\"I'll get by,\" Ryan finally replied, \"She'll be back before I know it!\" \n\n\"I'm sure she will Ryan.\" Dana said as she winked and smiled at him one last time before going back to the kitchen. \n\n\"Shit Nielsen, I think our new server wants to do you...and your wife!\" Jones said with a laugh. \n\n\"Shut the fuck up Steve.\" Ryan denied as he pondered the same thought himself. \n\nJones begrudgingly congratulated him on the racquetball victory as they grabbed their stuff and prepared to leave. Just as they were getting up, Jones stealthily pressed the audio playback button from the voice recorder on his phone. He had made sure the volume was turned up. \"Uhn...uhn...uhn...oh God,\" played loudly from the speaker. Jones acted as if he was in a panic as he reached for his phone, but not before, \"Oh fuck chief!\" and several heavy moans blurted out. \n\nJones finally turned it off before looking embarrassingly at Ryan and the people at the adjacent table. The Underhill's looked up at Jones with disdain. After giving him the evil eye they went back to their meal. They were sharing a delicious steak sandwich. \n\n\"Oops, sorry about that.\" Jones said sheepishly. \n\nRyan just shook his head and thought, \"Why do I hang around with this guy? He has absolutely no class whatsoever.\" While the moaning voice that played from Jones' phone sounded familiar, it never crossed Ryan Nielsen's mind that he had just listened to his beautiful wife climaxing on the chief's big cock. \n\nThey shook hands in the parking lot. \n\nAs Ryan tossed his gym bag in the back seat of his BMW, he suddenly realized how strong a buzz he was feeling. In the 9 years since he and Jenna had been married, he could count on one hand the number of times that'd he'd driven after having more than two drinks. He and Jenna had promised each other that neither of them would ever drink and drive. \n\nRyan felt more fucked up than he thought he should with only three drinks in his system, but he was still confident he was under the legal limit. He rationalized the way he was feeling up to exercise and alcohol on an empty stomach. Nonetheless, he reminded himself to be extra careful driving the 4 miles back to his house. \n\nAs Ryan pulled out of the parking spot he waved at Jones who was sitting in his car looking at his phone. The chief nodded to him as he stared at the hot naked body of Ryan's wife as she slept. He rubbed his dick and said quietly, \"You're big chief will be there in a bit slut!\" \n\nJones clicked out of the video app and dialed a local number. After one ring a voice on the other line responded, \"Yes chief?\" \n\n\"He just pulled out; he should be coming past you in 2 minutes. Take him to the North County lockup. Captain Sayers will take over once you get him there.\" \n\n\"10-4 chief.\" Click. \n\nJones pulled out of the parking lot and put his lights and siren on. He couldn't wait to get back to Pacific Palisades. \n\nAs Ryan drove carefully home he nervously glanced around, keeping an eye out for cops. After about a mile, he couldn't believe it when a police car suddenly pulled out from a side street and moved in behind him. Ryan's pulse raced as he watched the cop in his rearview mirror. \n\nThe white Camaro police car followed Ryan for several blocks. They passed through a couple of stop signs. Ryan was very careful to come to a complete stop each time. He was less than a mile from his house when the blue flashing lights came on behind him. \"Oh Shit!\" Ryan said out loud. \n\nRyan pulled over and the cop stopped behind him. \n\nAfter what seemed like an eternity, the cop exited his car and came around to the passenger side window. Ryan had already pulled out his driver's license and insurance card. \n\n\"Good morning sir, do you know why I pulled you over?\" \n\n\"No I don't, I know I wasn't speeding.\" \n\n\"You have a brake light out on the passenger side, were you aware of that?\" \n\n\"No, I had no idea.\" \n\nThe cop studied Ryan Nielsen's facial features and listened closely to his responses. \"Can I see your license and registration sir?\" \n\n\"Sure, here you go. I'll go get that brake light fixed this morning ossifer, I mean officer.\" Ryan stuttered. \n\nThe cop looked at him again before taking the documents and walking back to his car. He spent the next few minutes acting as if he was putting Ryan's information through his computer. \n\nRyan's heart was beating fast as he chided himself for the pronunciation fuck-up. \n\nThe cop came back to the passenger window and said, \"Okay, Mr. Nielsen I've written you a fix-it ticket, please get the light repaired asap.\" As he started to hand the license back he clumsily dropped it onto the passenger seat. As he reached to retrieve it, he spotted the vodka bottle between the seat and the door where Jones had told him it would be. \n\n\"Excuse me, what do we have here?\" He reached down and pulled the half-empty vodka bottle from its resting place. ",
        "Ryan's eyes got huge. \"I have no idea how that got there officer!\" \n\n\"Please step out of the vehicle Mr. Nielsen.\" \n\n\"But, it's not mine...\" \n\n\"Please step out now sir!\" \n\nRyan got out of the car and the cop walked him back between the cars. \"Have you been drinking Mr. Nielsen?\" \n\n\"Yes I had a couple of drinks after my racquetball match at the club, but I'm certainly not drunk!\" \n\nThe cop put him through a field sobriety test before having him blow into a breathalyzer. The results showed a blood alcohol content of .11. Unbeknownst to Ryan, the sobriety measurement tool had been rigged to show .11 regardless of Ryan's actual condition. \"Mr. Nielsen, do you know what the blood alcohol content level for drunk driving in the state of California is?\" \n\n\"Yes, I recently took my written driver's test, it is .08.\" Ryan responded. \n\n\"You are correct and now you know why I am placing you under arrest for driving under the influence of alcohol.\" He showed Ryan the breathalyzer display that showed .11. \"I will also be citing you for having an open alcoholic container in your vehicle. Please lean over the front of this hood and put your left arm behind your back.\" \n\n\"This can't be happening!\" Ryan complained as he did what the cop asked. \n\nThe officer cuffed his left wrist before doing the same with the right one. He placed Ryan in the back of the cop car and headed towards the North County jail. \n\n***** \n\nMeanwhile, Jones drove at a high rate of speed back to Pacific Palisades. When he exited the highway he turned off his lights and siren. Ten minutes later he pulled into the Juarez compound. He again pulled the car into the garage through the roll-up door. Juarez was waiting for him when he got out of the car. \n\n\"The cavalry has arrived!\" Juarez announced as Jones walked towards him with a big smile on his face. \"I trust everything is going well with your plan Steve?\" Juarez asked. \n\n\"Beyond belief Carlos! The kink room got its money's worth last night my friend. I don't know how to thank you enough!\" \n\n\"I could never repay the value you have brought to my business chief, it is yours to use anytime you wish! And as we discussed, everything is in order for tonight's festivities, the special chamber will be ready when you are Steve! Need I ask what's on your agenda for today?\" Juarez asked curiously. \n\n\"I haven't slept a wink, so we'll be doing that for awhile. Then I'm going to introduce her to the only thing she didn't experience last night!\" Jones said with a grin. \n\nCarlos looked at him devilishly as he quickly figured out what the chief was referring to, \"You mean to tell me you held off on...the Sybian?\" \n\n\"That room is like Disneyland for adults...I was having so much fun doing everything else; I decided to save it for today!\" \n\n\"Just remember, you have a big night in front of you chief. Can she handle it?\" Juarez asked. \n\n\"Oh I think her horny pussy can manage. I'm not entirely sure, but I think she's a fucking nympho. As much as she wanted to object, she couldn't get enough of it last night! Her squirting pussy was on overdrive.\" \n\n\"You're a lucky man chief...let me know if you need anything!\" \n\n\"I think I have everything under control Carlos...\" Chief Jones responded with a confident grin before he disappeared through the door."
    ],
    "authorname": "FifthEstate",
    "tags": [
        "jenna",
        "chief jones",
        "hooker",
        "cocaine",
        "air fuck chair",
        "everclear punch",
        "squirter",
        "underhill",
        "dana",
        "ryan"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/ucla-to-big-d-ch-12"
}