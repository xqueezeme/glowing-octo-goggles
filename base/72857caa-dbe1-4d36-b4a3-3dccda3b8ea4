{
    "title": "How Girls Night Changed My Life Ch. 03",
    "pages": [
        "I didn't think the day could get any better after the ultimate fantasy of having my dick in Lexi's ass happened. But the rest of the day was defiantly not a let down. We replenished all the energy we exerted that morning with a good lunch. \n\nAfter eating I said, \"Want to go for a swim and relax?\" \n\n\"Yes! My body needs to relax and recover from what you did to me.\" Lexi said. \n\nNeither of us wanted to put any close on so we lay out and swam naked. The pool was very relaxing. That did not stop us from being all each other. Something about skinny-dipping makes any situation even more sexual. After swimming and frolicking in the water for a while, we made our way to the shallow end. I swam behind Lexi. Picked her up in my arms. Our bodies were pushed together. My hard dick poked her ass cheek. I kissed her neck and then her ear. Lexi loved the ear, one of her favorite spots to be kiss. \n\n\"Sit on the top step.\" Lexi told me. \n\nI was in about eight inches of water. The water was just high enough to run over my legs and only my hard cock was left protruding from the water. Lexi took me in her mouth, coating my dick in her saliva. Lexi then lowered her pussy on my wet cock. After changing positions a few times we ended in my favorite of the afternoon which was me standing to my stomach in the water. Lexi's legs were wrapped around my waist as she bounced on my cock. The combination of the extra buoyancy from the water and the splashing was great. \n\nWe finished the fuck in the lounge chairs. It's a good thing we have a big secluded backyard. Privacy is not a problem. Even though no one can see in our backyard, they can still hear. We were fine till Lexi got quite vocal. Some of our neighbors might have gotten an ear full. \n\nAfter lying out for a couple more hours we made our way inside and had some dinner. Our dinner conversation was mostly normal until Lexi said, \"Once we finish how would you feel about watching some porn?\" \n\nTo the best of my knowledge Lexi had never really seen porn other than the picture of me and her or me with Kim. Unless just recently she had been viewing some. Nothing should really surprise me at this point but the thought of watching porn with my wife was hot. \n\nI said, \"That kind of sounds fine. Where did you get this idea?\" \n\n\"I got so turned on from our pictures and even more turned on by you with Kim, I thought it could be fun to watch some people fucking with you.\" Lexi said. \n\n\"That's a good enough reason for me. Lets do it.\" I said. \n\n\"Great! What really turned me on was seeing you with Kim. Knowing it was your dick inside Kim was so hot but I think watching some porn could be really fun too. It just seems naughty to be watching it together.\" Lexi said. \n\n\"I need to get better video equipment. Then we can make better quality videos of our own, maybe a few with Kim too. For now what do you want to watch?\" I said. \n\n\"I love that plan. I'm excited to see what we can make. Porn wise I don't really know what I want to watch. Can we click through some to find what we want?\" Lexi said \n\n\"Yeah I think so. Let me get it setup and see what we can find.\" I said. I linked our tablet to the TV so we could have a good screen. I found a site and we sat on the couch and started going through videos. \n\nAfter a couple videos and caressing each other Lexi asked, \"You want to try a little masturbation?\" \n\n\"What do you mean honey?\" I asked. \n\n\"You play with yourself and I play with me. It was such a turn on when you jerked off all over me in the shower this morning. I want to watch you stroke your dick some more.\" Lexi said. \n\n\"Alright sounds good to me. Can you get my dick nice and wet for me?\" I asked \n\n\"With pleasure.\" Lexi said as she leaned over and took my dick into her mouth. She left plenty of moisture on the shaft for me to stroke with. \n\n\"I want you to sit facing me with your legs spread wide so I can see everything.\" I said. \n\nLexi turned and leaned back against the arm of the couch. She put one leg up on the back of the couch behind my head and the other across my legs. Her legs were wide open giving me a wide-open view of her sex. Looking back and forth from the porn and Lexi was a great stimulator. \n\nLexi brought her hand to her pussy. Slowly she rubbed from her clit to her ass. The moisture from her open slit was very noticeable as her ass and pussy began to shine. I could not take my eyes off of her and the porn became secondary. She then inserted a couple fingers into her pussy and started fucking herself. I wanted to reach out and touch to help but I kept working myself because Lexi's eyes never left my dick. \n\n\"Fuck Steve. Watching you stroke that dick is making me so hot. I could cum any second.\" Lexi said. \"When your ready I want you to shoot your cum all over me.\" \n\n\"OK baby. I'm trying to last as long as I can but you are so fucking sexy. I only have a couple more minutes.\" I said. \n\n\"I want you to straddle me Steve. I want that dick closer to me.\" Lexi said. \n\nI moved and straddled her right under her tits. \n\n\"Holy fuck babe. Fuck you look good. I can't wait to have your cum all over me.\" Lexi said. \n\n\"Give me some more lube Lexi.\" I said and leaned forward to shove my dick down her throat. Then back in my hand. \n\n\"I'm cumming Steve. Shit I'm cumming.\" Lexi said. I could not see her hand in action but her arm was moving fast and her body was tensed as her orgasm continued. \"Shoot your jizz all over me Steve.\" Lexi yelled. \n\nThat was all the encouragement I needed. She was coming off her high as mine started. The first shot plastered her face and missed her open mouth. I didn't care about aim. I just wanted to see her coated in my sperm. Next few shots found her chin and lips. The last couple and less power and landed on her tits. \n\nI fell back on the couch and looked at my cum-covered wife with a huge smile on her face. She then spread her legs wide, scooped up the cum from her tits in one hand. Lexi brought the hand to her pussy and massaged my cream onto her pussy. Lexi's other hand was pushed any cum on her face to her mouth. She really was a cum lover now. \n\n\"You look so sexy honey.\" I said. \n\n\"Thank you. Your cum is so hot and tasty. I love it.\" Lexi said as she continued to work her pussy with her cum soaked hand. \"I think I have one last orgasm left me. You up for watching one more?\" Lexi asked. \n\n\"Of course honey, I could watch you all day.\" I said. I laid back and enjoyed to show. She alternated from fucking herself with her fingers to rubbing her clit. Lexi's other hand playing with her tits and pinching her nipples. \n\n\"Can I video you? You look so fucking good and I know I want to watch this moment again.\" I said. \n\n\"Yeah honey, it's a little weird by myself. You were in all the other ones we took but I think it could be hot.\" Lexi said. \n\nI grabbed my phone and started the video. \"You look so good just close your eyes and enjoy yourself.\" I said. \n\nIt only took a few seconds for her to let herself go and forget about the camera. She continued to fuck and rub herself for about ten minutes. She would take herself right to the edge of orgasm by finger fucking her pussy hard or by rubbing her clit. Once while she was on the verge she stopped and slowly rubbed up and down her pussy and crack. I was going crazy watching her and was amazed by her control. \n\n\"Let me see you cum baby. Let it go this time\" I said, never moving the camera from her. \n\nLexi took her hand from her tits and put it under her ass. Her fingers touched her little asshole. The cum soaked pussy hand fingered her canal. Both hand on their respective holes. Lexi slowed the hand rubbed her ass and started to push just the tip of her finger into her ass. She pushed till the second knuckle disappeared. Lexi fucked her ass slow as the other hand worked feverously on her clit. \n\nA few seconds later, Lexi was deep into the pleasure of an orgasm. It was more than a normal orgasm. It was strong and hit her hard. All the teasing she gave herself compounded and turned into something she had never experienced. \n\n\"What the fuck is happening. Oh shit Steve. Am I squirting right now? Lexi said. \n\nI didn't know what to say. I was shocked to see her squirt. I sat quiet not saying anything. \n\n\"Fuck it feels good. I can't believe I am squirting. Fuck!\" Lexi said \"Oh my gosh. That was a good orgasm. I don't know what came over me.\" \n\n\"That was absolutely amazing honey. I can't believe you squirted. I am going to be watching this video a few times a day.\" I said. \n\n\"I think the fact of you watching me, finger in my ass and masturbating on camera took me over the top and my pussy responded.\" Lexi said \"Can you grab me a towel so we can wipe this up. Then lets take a shower and take care of you one last time.\" \n\nI cleaned her up and wiped off the couch. Glad we had leather for an easy cleanup. Then we headed to the shower to finish our day. \n\nOnce we were both clean Lexi said, \"The last fuck of the day Steve. Maybe after this your dick will finally go soft.\" \n\n\"Not with you naked. Now come here and make love to me.\" I said. \n\nThe day was full of crazy sex, hard fucking and new experiences but to end the night I wanted passion and love. I wanted to make love to my beautiful wife. I wanted to make sure that she knew I loved her. \n\nI pulled her into a kiss. The kiss was passionate and loving. Our hands roamed each other's bodies. My hands found her ass and I picked her up off the ground. We were now looking eye to eye. She wrapped her legs around my waist. I pushed her against the shower wall. I moved to kiss her neck and nibble on her ear knowing she loved both. Then I lifted her higher so my face was at her breast. I gave each breast and nipple ample attention. Lexi was so turned on that I could feel the heat of her pussy on my stomach. \n\n\"I need him in me Steve and please let pleasure you honey. You treat me wonderful and I want to show you how much I love you.\" Lexi said. \n\nI lowered her down and kissed her again then said, \"I love you Lexi\" \n\n\"I love you too.\" Lexi said. \n\nLexi reach down to find my dick. She pointed him up to find her waiting pussy lips. The tip pierced her slit and I slowly lowered her down the entire shaft. From there it was a passionate fuck. Our lips were lock and hot water was streaming down out bodies. The steady pace kept us going for a good fifteen minutes. \n\n\"I want you to cum deep inside me Steve.\" Lexi said. \n\nI increased the pace just a little and I moved back to kissing the side of her neck. \n\n\"Oh Steve, I'm cumming again. Oh don't stop baby! Keep going\" Lexi said. \n\nOnce Lexi was done she said, \"Ok now it's your turn. Cum in me baby. Fill me up.\" \n\nLexi picked up the pace and focused on my neck and ear. Lexi softly nibbled on my ear and whispered her love in my ear. Her pussy clung to my dick like it was trying to milk the cum out of me. I could not last any longer. My dick erupted in her pussy. The feeling of dumping my seed deep inside my wife was always amazing. It was a perfect way to celebrate a great day. \n\nWe finally got in bed still naked. Not wanting the day to end since we had to go to work in the morning. We reminisced about the day and our new life. I shifted how I was laying and my hard dick bumped into her leg. Lexi looked down at my hard dick. \n\n\"Is he really still hard. How is that possible? I think I am going to be sore for days after what you have done to me.\" Lexi said. \n\n\"I don't know. It's just being with you and how amazing you make me feel. Plus, today has been so special. Thinking about everything is just too hard to control.\" \n\n\"That's nice to hear. I'm glad you like me.\" Lexi said with a coy smile, \"I don't think my pussy can take any more.\" \n\n\"I really don't need anything honey. He's just a product of your sexiness and you have done more than enough.\" I said. \n\n\"Well I can't leave him like that. Maybe just one more blowjob.\" Lexi said. \n\n\"You really don't have to.\" I said. \n\nLexi ignored my last comment and move between my legs to start the blowjob. I think she learned and improved from each blowjob she has given me. She could take me deeper with not as much effort. Her hand motion with each stroke became more rhythmic with her blowing. Inside her mouth her tongue danced around my cock in continual licking and caressing. Fortunately from my many orgasms throughout the day I felt like I could control my excitement and when I would cum. I let her do the work and I enjoyed the show. \n\nLexi's small mouth stretched around my shaft each time she lowered herself down my nine-inch cock. I could feel my cock enter her throat with each bobbing motion. She would remove my cock from her mouth and turn her attention to my balls. Lexi tenderly licked, kissed and loved each one of them all while jacking me off. She continued to switch back from my testicles to deep throating my cock. \n\nAfter about 10 minutes of this routine I said, \"Not to much longer baby, I am almost there.\" \n\nWith those words Lexi changed her plan of attack. She placed both hands on my shaft and starting jacking me much faster than her previous motion. Her head lowered to my cock but only to take the mushroom tip into her mouth. She treated the tip like it was a lollypop. Circling her tongue around and around while sucking with a good amount of pressure. My sensitive tip could only handle so much and with the two-handed hand job I was ready to spew. \n\n\"Its almost here. Keep sucking me like that. Jack me faster.\" I said, \"Oh shit I'm cumming. Fuck that feels good.\" \n\nLexi continued to jack and suck me till she got every last drop of cum out of my dick and I turn too sensitive to her touch. \n\n\"That was fun.\" Lexi said. \n\n\"It was amazing.\" I said. \n\n\"I love you Steve. I guess the blowjob didn't help that much.\" Lexi said. \n\n\" I love you too. Now lets go to bed. I think were both exhausted.\" I said. \n\nWe fell asleep spooning and her hand wrapped around my still hard cock. Seriously if he didn't go down I thought I might need medical attention like the Viagra commercials that say if you have an erection lasting longer than 4 hour seek medical help. My erection lasted all day but it felt great. \n\nThe next day was hectic. Both of us slept late. We rushed out the door to get to work. We barely had time to kiss each other goodbye. Work was plenty busy but I still had time to watch Lexi's video a few times. Lexi was in the same state of mind because she kept sexting me and sending naughty pictures of herself throughout the day. We both were ready to see each other by the end to the day. I got home just after Lexi and when I walked in the door she had already shed her work close for her birthday suit. \n\n\"I need to come home to a naked wife everyday.\" I said. \n\n\"Hurry up and get your cloths off. I have been wet all day. But we have to be really soft. I am so sore from yesterday. I don't know if my pussy can take your dick.\" Lexi said. \n\n\"Don't worry honey. How about a little 69 action and I will be really soft.\" I said. \n\n\"I could go for some of that.\" Lexi said. \n\n\"Good, lets both have a good orgasm then I want to take you out for a nice dinner and shopping.\" I said. \n\n\"Sounds like a wonderful night. You really know how to treat me right; orgasms, food and shopping are the perfect way to my heart.\" Lexi said. \n\nI took her to our bed. Lexi lowered her perfectly smooth pussy down to my face. I licked the entire slit and ass to get a good taste of her sweet nectar. \n\n\"Wow, pleasure and pain. My pussy is so sore. Your big dick really worked me over yesterday. I'm so sorry but I don't think we can fuck today. Fuck! I'm so mad. I was looking forward to this all day. I can call Kim to see if she can come fuck you.\" Lexi said. \n\nLexi's willingness to please was such a turn on and the thought of fucking Kim again was enticing but I said, \"No honey. I just want to spend time with you. Just being next to your naked body is enough. Plus your blowjobs are great. I will be soft and I know I will get you off.\" \n\n\"Are you sure baby?\" Lexi said. \n\n\"Yes I am positive. Now get ready for a good orgasm.\" I said. \n\nI did not want to give her any pain so I focused on her clit while she turned her attention to my waiting cock. Not much later we were both basking in the euphoria of orgasm. \n\n\"That was pretty good, wasn't it?\" Lexi said. \n\n\"I could lick your pussy for days. I love everything about your pussy, the perfect shape of your lips, the taste, and how smooth it is. She really is perfect.\" I said. \n\n\"Oh Steve stop it, your making me blush. My pussy doesn't compare to your dick. Your dick is just...\" Lexi said. \n\n\"Wait let me stop you right there. Nothing about me compares to you. The female body is art compared to a male body. How about we go get dressed and head to dinner. Even though I just ate I am still starving. I guess pussy just doesn't fill me up.\" I said and we both laughed. \n\n\"Sounds great but what should I wear?\" Lexi asked. \n\n\"I was hoping you would say something like that because I actually bought you something today. Can I pick out your underwear too?\" I said knowing she wanted to start dressing sexier. \n\n\"Sure honey. Let me see what you bought. I feel like all my cloths are not that sexy and with my new mindset I feel so much more comfortable in my body I want to show a little more.\" Lexi said. \n\n\"I know you were feeling that way so I went shopping. I just hope the cloths fit.\" I said as I pulled out a pair of cut off jean shorts that looked tiny in my hands and a classy white tank top that on the store manikin showed a lot of cleavage. \n\n\"They look cute and small. I don't think I have ever worn anything so revealing in public. I'm a little nervous. Let me put them on but first I need some underwear.\" Lexi said. \n\n\"Oh yeah, I almost forgot.\" I said as I ran into the closet. \"You pick out a bra. Those things confuse me.\" I found what I was looking for in a drawer that Lexi kept all the lingerie and gifts she had gotten way back from her bachelorette party. I had forgotten they existed till I was thinking about tonight. One of her friends bought her a super sexy pair of crotch less thong panties. Lexi never dared try them on so they sat unused for years until tonight. I came out of the closet holding them for her to see. \n\n\"Oh shit, I can't wear those in public.\" Lexi said as her old conservative mindset was returning. \n\n\"You can and you will. You already said I could pick out your panties.\" I said. \n\n\"Ok fine. Let me have them so I can get dressed.\" Lexi said. \n\nFirst she pulled on the panties and the hole in the panties perfectly outlined her clean pussy. They looked perfect on her. Then came the push up bra and the tank top, which fit her great. Her cleavage was just the right about to look good and not like a total slut. Lastly she pulled on the shorts. At first I thought I bought a size to small as she struggled to pull them over her firm ass. Until at last they were all the way up. They could have been painted on they looked so tight. She made the shorts look good. The shorts showed off her beautiful legs and ended right below the crease of her ass. \n\n\"You look amazing. Those might not be the best for trying on clothes but you look great.\" I said. \n\nLexi grabbed some heals and I got dressed and we were out the door. It felt like a sports car type of night so I could drive with the top down and show off my wife. We made it to the restaurant that was a great steakhouse next to the mall. \n\n\"What stores are you wanting to go to after dinner?\" I asked. \n\n\"I pretty much want a whole new wardrobe. Everything I have is the old me. I need to update almost everything.\" Lexi said. \n\n\"I think we will be shopping all week then.\" I said. \n\n\"Sex and shopping every night seems pretty good to me.\" Lexi said. \n\n\"As long as I get a fashion show of everything. I will buy you anything you want.\" I said. ",
        "\"Sounds great. I have one other idea for this upcoming weekend. Since Friday is a holiday I was thinking of having a pool party with all of our friends. I feel like we have been so busy. We have not been able to see everybody in so long.\" Lexi said. \n\n\"That sounds like fun. We better try on swimsuits first then.\" I said with a smile. \n\n\"I know what your thinking but nothing too crazy for this party. This will be all of our friends and some of them have kids.\" Lexi said. \n\n\"Oh I thought it was going to be a clothing optional nude pool party orgy the whole time.\" I said jokingly. \"We will find something nice and classy for that and then a few slutty ones for later.\" \n\nWe finished eating talking about clothes and the upcoming party. We made it to the mall. I was ready to see the new sexy Lexi trying on clothes. She deserved to show off her body and to be treated like a queen. Anything and everything she wanted she got. We started in one of the big department stores where she found skirts, dresses, swimsuits, shorts, shirts and shoes. \n\nWhile she was shopping I ran to an electronics store and a computer store. If I wanted to keep making movies and pictures of Lexi I thought I should update my equipment. A bunch of money later I had a nice photography camera, a couple of those small action video cameras and a new computer. \n\nOnce I finished I found Lexi in Victoria secrets updating her underwear and lingerie clothing. After a couple bags from there Lexi had two more stores she wanted to try tonight. One was a small lingerie store that was much dirtier than Victoria Secrets and the swimsuit store. \n\n\"No! You can go to the swimsuit store and wait for me. Your not allowed in here.\" Lexi said. \n\n\"Why this is the best store yet.\" I said. \n\n\"I want to surprise you Steve. Go start picking out swimsuits for me.\" Lexi said \n\n\"Fine\" was all I said, sulking as I walked away thinking of the slutty lingerie she would be trying on. \n\nI made it to the swimsuit store and I was the only one there except for the store employee. The mall was pretty dead being a Monday and getting closer to closing. The store attendant was a young and really pretty girl. She could not of been more that 20 years old. She was wearing small shorts and a tight tank that ended just above her naval and showed her tan tight stomach. \n\n\"Hi sir, my name is Holly. Is there anything I can help you find?\" Holly said. \n\n\"Yes. I am a little lost. I want some new swimsuits for me but that part is easy. The hard part is I want to pick out some new bikinis for my wife and don't know where to start. Also please no calling me sir, you can call me Steve.\" I said. I would much rather have a cute girl helping me than do it on my own. \n\nWe talked for a few minutes and I got the feeling Holly was flirting with me. Then Holly asked, \"So what are you looking for and what size is she?\" \n\n\"Well, I don't really know her size exactly. I hope this is not inappropriate to say but her body looks very similar to you. So whatever you would wear is probably the right size.\" I said. \n\n\"Ok great that makes it a little easier. What about her chest size?\" Holly asked. \n\n\"I don't know B, C or D. I really don't know.\" I said. \n\n\"OK that doesn't help us at all. I guess compare her to me again.\" Holly said, as she stood up straighter and poked out her chest more. \n\nI laughed and tried to act embarrassed then said, \"I'm sorry. It's a little awkward that you are inviting me to check out your chest but I guess I can't turn down looking at a beautiful girls chest.\" \n\n\"Thank you and don't worry about it. I mostly deal with teenagers and stuck up women. Having a handsome older guy here is really nice. Plus I kind of like being checked out by you. My job is to help the customer any way I can.\" Holly said, as we were full on flirting. \n\n\"Ok here I go.\" I said as I looked down at her chest. \"I better make sure I get good analysis. I don't want to get this wrong.\" \n\n\"So what do you think?\" Holly asked. \n\n\"I don't know. I think I could better decide if I could get a better look. Wait. I'm sorry that sounded far less creepy in my head. Plus the fact we are talking about my wife. Let me start over by saying. First you have been a great help and you are beautiful. Secondly, I am sorry again. Back to the swimsuit, I think you might be a little bigger. Is it weird to ask your size? I promise I am not some totally creep.\" I rambled after my embarrassing comments. \n\n\"Seriously don't worry about it Steve. If you would have asked a little nicer I might of shown you.\" Holly laughed, \"I knew you were kidding and you seem like a great guy so don't worry at all. My size is a C to a D. I fall in the middle so it depends on where I shop.\" \n\n\"C sounds right for my wife. To be sure I will try asking nicer. Holly will you pretty please show me your breasts? Nope, that was still really creepy. Sorry.\" I said. \n\n\"No, that was almost really good. We want to make sure we get it right.\" Holly said as she pulled down the top of her tank top leaving her bare tits exposed to me. \n\nI don't know how long I stood and just stared. Once I finally snapped out of it I said, \"Holy shit, I didn't think you were serious. I thought we were just messing around. You have absolutely beautiful breast. Seriously, those are some of the best I have ever seen.\" Holly's breasts were so perky and perfectly round. They looked natural and being so young they had barely any sag. Only a tiny crease under her tits and her nipples were bigger than Lexi. Each nipple was probably about a half dollar size pink circles and fit her breast nicely. \n\n\"Thank you Steve!\" Holly said as she reached out and squeezed my arm. \"I can't believe I am doing this either but now tell me how does your wife compare.\" \n\nLooking back at her boobs I said, \"You are defiantly a little bigger but the overall shape and perkiness is very similar.\" \n\n\"Great I am glad we got that settled. I better put these away before somebody walks in.\" Pulling her top back over her boobs. \"Lets go pick some bikinis out.\" Holly said. \n\n\"Great. Is boob size that big of a deal?\" I asked. \n\n\"No not really, only with certain types of tops and big differences between boob size. So what type of suit does your wife want?\" Holly said nonchalantly. \n\n\"Basically what you just told me means you didn't need to flash me, but I want to sincerely thank you anyways.\" I said. \n\n\"That might be a true statement but I wanted to be sure I could properly assist you.\" Holly said with a smile \n\n\"It's always good to be thorough. For my wife's style she wants probably a wide range. She has recently embraced her sexiness and is trying to be a little more free so I want to get her a range of bikinis from classy and fun to scandalous and wild.\" I said \n\n\"So how many are you looking for?\" Holly asked. \n\n\"I don't know, probably five to ten right now. I want to give her options. How about you pick out your favorites.\" I said. \n\nHolly started pulling swimsuits from the racks. Some of the bikinis were string some were not. Most looked good but I wanted a few that were much more wild. \n\n\"How about some that show a little more skin too. Do you have any bikinis that are thongs?\" I asked, \"There I go sounding creepy again.\" \n\n\"Yes most of those are on the back wall. My favorites are back there.\" Holly said \n\nThese were the swimsuits I wanted. The tops were all tiny and would barely cover the nipple leaving plenty of side and under boob exposed. On some the material was so thin I was sure they would become semi-transparent when wet. The bottoms were just as good with thongs and G-strings and booty shorts. A couple looked like they would only cover the pussy slit. I grabbed the wildest ones and had Holly pick a few more. \n\n\"I can't wait to see what these look like on. I think they will look amazing.\" I said. \n\n\"I could model a couple if you would like. I want to make sure you are satisfied.\" Holly said. \n\n\"I can't turn that down.\" I said. I thought to myself that I had never met a person so open and willing. It was like I was in an alternate universe or something. \n\n\"Great this will be fun. Let me go close down the store so no one walks in. Pick out the bikinis that you want to see and I will be back to try them on.\" Holly said. \n\nI sent Lexi a quick text to tell her not to come to the store and to call me in about twenty-five minutes. She responded quickly with 'What are you up to?' I responded that I might have a good story to tell her. Lexi sent back, 'cant wait to hear. I will be in the car.' \n\nHolly returned to the back of the store where I was waiting. I pick out three swimsuits and they were all from the back wall section: one booty short suit, one thong and one barely anything-there suit. \n\n\"How did I know you would pick this one? I'll save that for last.\" Holly said as she held the barely anything-there suit. \n\n\"That's my favorite one. Now get in there and try those on.\" I said. \n\nHolly disappeared into the changing room. After a few minutes she stepped out in booty short bikini. Holly looked super sexy. The suit was brightly colored and looked great against her tan skin. \n\n\"What do you think?\" Holly asked. \n\n\"You look amazing. That suit is a keeper. Could you do a spin for me?\" I said. \n\n\"You mean like this?\" Holly said as she gave me a super slow sexy turn. The booty shorts showed her curvy ass nicely. The shorts cut across her ass cheeks a few inches above her bottom ass crease. Holly's ass was between Lexi's firm round ass and Kim's bigger curvier ass. The skin looked soft and smooth to the touch. I wanted to reach out and grab her but I knew I had to take this slow. \n\n\"Your body is gorgeous Holly. I don't know how to thank you for this.\" I said. \n\n\"You have made my night awesome. I was so bored before you walked in the store. You ready for the next one?\" Holly said. \n\n\"Yeah I can't wait.\" I said. Back in the changing room she went and my growing bulge was becoming more noticeable in my shorts. \n\n\"I really like this one.\" Holly said and she opened the door. \n\n\"Holy shit Holly. You look so hot. Honestly I think you should be a bikini model.\" I said as I admired her body in the white thong bikini. The material was thin and hugged her body. I could see a hint of her nipple showing through the material. The thong pressed tight against her skin. There was no evidence of pubic hair since the thin material cupped her pussy lips in a perfect camel toe and looked completely smooth. \n\n\"Now the spin.\" I said. I had to sit forward in my seat getting a closer view of her body. I was a couple feet from her ass and it looked incredible. The thong framed her ass and showed off the round globes. My cock continued to grow as my mind wondered to thoughts of spreading her cheeks and licking her puckered hole and then shoving my dick between in her ass. I was lost in thought. Before I realized what I was doing I had reached out and touched her ass. \n\n\"Your hands are so soft. That feels great.\" Holly said in a pleasing tone. \n\nShe wasn't mad but I should have known that she wouldn't be. Holly offered to try on the swimsuits. She willingly showed me her breast. She was totally into this. \n\n\"'I could not resist touching you. Your ass feels so nice Holly.\" I said as my touch turned more into grabbing and squeezing. \n\n\"I'm going to guess you want this suit as well.\" Holly said. \n\n\"Defiantly.\" I said. \n\n\"One more lefts.\" Holly said. \n\n\"Oh yeah, I got distracted by your beautiful body. What do you think of just changing right here and not using the dressing room?\" I said. \n\n\"Are you just trying to get me naked?\" Holly said. \n\n\"Yes that is exactly what I am trying to do. I need to see your amazing breast again.\" I said. \n\n\"All you needed to do was ask.\" Holly said as she pulled the bikini top to the side exposing her tits. \n\n\"You are full of surprises.\" I said. \n\n\"Let me go grab the suit.\" Holly said. \n\n\"No, no you stay here. I will get it for you.\" I said as I stood up. My dick was rock hard. The tent in my shorts was big and really noticeable. Holly's eyes were looking directly at my cock as I walked to the dressing room. \n\nI returned with the suit. She had replaced the bikini top over her nipples again. I placed the suit on the couch where I had been sitting on and stood behind her. \n\n\"Can I help you out of your bikini?\" I said. \n\n\"I would really appreciate that.\" Holly said. \n\nI untied the string at her back. Then I reach around her body and placed my hands at the top of her breast right where the small triangles started for the bikini top. Slowly I slid my hands down her tits. I could feel her hard nipples through the material in the palm of my hands. I softly held her breast in each hand. With my touch and my arms around her she had backed into me. My hard dick was now pushing into her back just above her ass. Eventually I raised the bikini top over her head leaving her topless. \n\nNow for the bottoms but before I could reach for them she turned, pressing her breast into and said, \"I can take these down. Why don't you take a seat?\" Holly said. \n\nA little disappointed I returned to my seat. Holly stood maybe two feet in front of me moving her hips and playing with the sides of her thong. Almost like she was in a strip club. Holly turned her ass towards me and continued to sway. \n\nHolly stopped, spread her feet a little wider and hooked the sides of the thong with her thumbs. Keeping her legs straight the entire time she slowly pushed the thong down. The material gradually was pulled from between her cheeks and down to her thigh's. Only bending at the waist she lowered the thong to the floor and left her bare ass pointing right at me. \n\nI reached out and took a cheek in each hand and caressed her ass as she continued to stay bent over and looking over her shoulder back at me. I could see her asshole and pussy slit but I need a better view. I squeezed and spread her ass open exposing the best asshole I have ever seen. It was tan and clean. By clean I mean it matched all of her other skin perfectly. With Lexi hers was just a darker shade of pink but was different from the rest of her skin. Kim had creamier white skin so her pink little ass stood out quite a bit. Holly on the other hand had the same color skin running into her puckered hole. It was amazing. \n\n\"Your ass is perfection Holly. You have the best and cutest asshole I have ever seen. Now that was creepy but I don't care.\" I said. \n\n\"Thank you Steve. I actually love my ass and take a lot of pride in it.\" Holly said. \n\n\"You should. Your hole is perfect.\" I said. \n\n\"Want to know my secret.\" Holly said. \n\n\"Yes, whatever it is I need my wife to do it.\" I said. \n\n\"Well I actually just finished having it bleached a couple of months ago.\" Holly said. \n\n\"I've heard of that. I didn't know it was real. It looks amazing and makes me want to do some really bad things to you.\" I said. \n\n\"If that's the case I like bad things.\" Holly said. \n\nThat was the go ahead I needed. I got on my knees behind her so my face was even with her ass. First I kissed her cheeks as I caressed them with my hands. Slowly I made my way towards the center. Once close I took one long lick from the bottom of her pussy and down her whole crack. Holly jumped in excitement as my tongue traced over her ass. \n\n\"Fuck that feels good Steve, lick my ass.\" Holly said. \n\nAfter a few more licks I focused on her asshole. I let go of one cheek and grabbed her hand. I placed her hand on the cheek that I let go of. Holly knew what I wanted as she pulled that cheek. That gave me a free hand to fondle her. I first went to her tits and played with her nipples and then down to her pussy. After a couple minutes I really wanted to get her to orgasm before Lexi called so I pulled away and had her sit in the chair and spread her legs wide. \n\n\"Fuck your pussy is amazing too.\" I said. This was the first time I saw her pussy from the front. It was completely bare. Her pussy looked tight and fresh like any twenty year old should. \n\nI pushed her legs back to her head and got back to work. This time I spent time on her ass and pussy but mostly her ass. One hand worked her clit as I tried pushing my tongue into her ass. After a little persuasion my tongue pushed in and I started thrusting it in and out. After only a few thrusts she was in the throws of an orgasm. \n\n\"I'm cumming Steve. Oh fuck! Keep tongue fucking my ass. Fuck this is amazing.\" Holly said. \n\nOnce she calmed down I said, \" That was great and you are delicious.\" \n\n\"No that was un-fucking-believable. I have never cum from someone licking me there. How did I get so lucky to meet you tonight?\" Holly said as she pulled me into a kiss. \n\n\"Your wife is one lucky girl.\" Holly said. After we broke our kiss and I stood up. \"Do I get to meet this thing that has been making this huge bulge in your pants.\" Her hand was now grabbing my prick through my shorts. \n\nRight then my phone rang and we both were surprised. It was Lexi. I answered and told her I would be right out. The timing was great because there was no way I would actually fuck another girl without talking to Lexi first. \n\n\"Your wife is here?\" Holly said shockingly. \n\n\"Yes, she is waiting for me in the car.\" I said. \n\n\"Weren't you worried about getting caught?\" Holly said. \n\nI didn't want to give Holly the whole back-story but something to keep her interested. \n\n\"Maybe a little but I think she would have really liked to watch.\" I said. \n\n\"Really? That is really hot.\" Holly said. \n\n\"I better buy all these swimsuits and get out to the car. Thanks for the great night.\" I said. \n\n\"OK, but I am a little disappointed I didn't get to play with him.\" Holly said about my dick she was still holding. \n\n\"Maybe tomorrow night. You do still have to try on that last bikini for me. I will have to see that tomorrow.\" I said. \n\n\"True, I want to make sure you are satisfied with all the swimsuits.\" Holly said. \n\nHolly rung me up and we said our goodbyes. She never even bothered putting her clothes back on. Once out of the store I could not wait to get back to Lexi and tell her everything. \n\n\"Where have you been mister?\" Lexi said with a straight face as I opened the door, \"And why do you have a raging hard-on?\" \n\n\"You won't believe me. It was crazy.\" I said. \n\n\"Did you fuck somebody?\" Lexi said. \n\n\"No I did not fuck her. I would only have sex with somebody if you were totally ok with it and the person.\" I said. \n\n\"Ok good answer,\" Lexi said with a smile, \"and to be honest Steve I totally trust you so in the future you can make the decision. The thought of you fucking some random person is really turns me on. I am completely yours but if you have a good opportunity I want you to take it. Have fun and I know you have the stamina to always take care of me.\" Lexi said. \n\n\"You are amazing honey. I will never do anything to harm our marriage and what we have. If I do ever have any opportunities you will be the first to know. I will never hide anything from you. I'm still shocked by what happened tonight anyways. I'm sure it will not be a common occurrence.\" I said. \n\n\"So what did you do with this girl? Tell me the story.\" Lexi said. \n\n\"I am so hard right now. Would you mind playing with him as I told you?\" I said. \n\n\"The answer to that question is always a yes.\" Lexi said. \n\nI undid my shorts and pulled out my cock right in the center of the parking lot in our convertible. There were only a couple cars in the whole lot and I didn't see anybody so we were pretty safe. \n\nLexi wrapped her hand around my cock and stroked me. \"Lets hear it.\" Lexi said. \n\nI started from the beginning and walking into the store. When I got to the first good part with the flirting and Holly flashing me Lexi would stroke faster. I could tell she was getting super turned on. ",
        "\"I need these shorts off Steve. I need you to play with my clit.\" Lexi said. She pulled off her shorts but left her crotch-less panties on. \n\nAs I rubbed her clit I got back to the story with picking out swimsuits and eventually making it to the back wall suits. I told her about all the different scandalous bikinis had and how sexy she was going to look in them. Then I continued to the part where Holly offered to try them on for me. This sent Lexi into orgasm. \n\n\"Fuck I am so turned on.\" Lexi said, \"Keep rubbing my clit Steve. Fuck!\" \n\nLexi then got on her knees in the passenger seat and leaned over into my lap to take my cock into her mouth. 'Fuck I love my life and my wife' I thought to myself. \n\nI went on to tell her about the first bikini. I described every part of Holly's body and how it looked in the bikini. I told her how Holly's spin and shapely ass were turning me on. Lexi got more and more aggressive the farther the story went. I had not gotten to the good part and her pussy was dripping wet. Lexi was on the verge of another orgasm. Now onto the thong bikini and where things got good. Once again I described everything to the bikini to her nipples be visible through the material and her camel toe. \n\n\"You asked her to change right there?\" Lexi came off my dick asked surprised, \"that's hot.\" \n\n\"Yeah honey. Holly was fun about the whole thing. I could tell she was excited.\" I said and Lexi went back to sucking. \n\nI told her how I stood behind Holly and helped her undress. How I felt her tits in my hands and Holly's body pushed back against my hard cock. I continued to her dropping her thong and how Holly wanted me to do bad things to her. Another orgasm started for Lexi but I did not stop telling her the story of me grabbing and kissing her ass. Lexi's orgasm continued through me telling her I licked Holly's asshole. \n\n\"Oh fuck Steve. Tell me you got her off.\" Lexi said. I explained every detail of me tongue fucking her and the orgasm. Lexi's sucking was very intense and reliving the story made me cum. I erupted, shot after shot into Lexi. She swallowed every bit. \n\n\"The end.\" I said. \n\n\"Oh my gosh that was hot. I can't believe you didn't fuck her. I want you to run back in there and ram your dick into her ass. Fuck that was amazing.\" Lexi said. \n\n\"I'm glad you liked my story. I had a feeling you would. I think everything is locked by now and I wanted to check with you first.\" I said. \n\n\"Thank you but next time if you are in a situation like that, fuck her brains out. You have to go back tomorrow night. I can't wait to her what she feels like.\" Lexi said \n\n\"I guess if you really want me to I will go fuck Holly.\" I said. \n\n\"Hell yes. I am going to have to go to the store first without you so I can have a better mental image of her.\" Lexi said. She sounded just as excited as I was and that makes the whole experience even better. \n\n\"Sounds like a plan. Lets get home and see what you got.\" I said. \n\nWe got back home and carried all of Lexi and my bags into the house. It was getting a little late but I still wanted to see some of the clothes Lexi picked out. \n\n\"What did you end of buying?\" Lexi asked. \n\n\"Well I wanted to upgrade some of our technology so I got a few video cameras which you can guess why I wanted those. Then a new computer to edit any videos we may make. Then lastly you know I was really interested in photography back in college so I bought myself a really nice camera. The camera is really a professional one and I thought I could start practicing taking pictures. I know a little from the classes I took a long time ago so for now it will be a hobby. I think it could be fun. Enough about my stuff I bought. How about you pick a few things to try on and model for me. I can start my photography business now but I can only pay you in love, dick and orgasms.\" I said. \n\n\"I guess that payment will work. Let me pick out a few sexy things.\" Lexi said as she disappeared into our bedroom as I waited downstairs on the couch. I got my camera ready. \n\nLexi reappeared down the steps in a skintight skirt that ended just a few inches below her pussy. Her top was a collar around her neck that swept down her chest and then wrapping around her back. Showing a little side-boob and stopped just above her navel leaving a few inches of her tight stomach exposed. I wasted no time getting my camera pointed on her. \n\n\"That looks great honey. Stay on the steps and let me get a few pictures.\" I said. Lexi then started posing. She was a natural and I only had to give a few directions when I wanted to get a little sexier. \n\n\"Lexi, I want to see you get a little wild. Spread your feet a little wider and play with the bottom of your skirt.\" I said. Bright red silk panties showed from under her skirt. \"Pull up the skirt more and then shows me more stomach.\" It was really nice to give direction to my wife. She was comfortable and sexy. \n\n\"Lexi you look so good. I think you might have missed your calling in life.\" I said. \n\n\"Well thank you. Being your model is really fun and I feel so naughty taking these pictures.\" Lexi said. \n\n\"I know I am really liking this. I think I could really get into being a photographer. Lets do one more outfit. Make it a good one.\" I said and she ran back to our room to change. \n\nLexi did not disappoint. She returned back down the step in some lingerie that she must of bought in the store I was not allowed in. Lexi came down the steps in a black lace teddy. The best parts were it was partially transparent that her tight pussy slit was peeking through the fabric and it was cup-less. Black straps formed a triangle around each breast. \n\n\"How in the world do I not get to fuck you tonight when you come out wearing that.\" I said. \n\n\"I know honey. I am dripping wet but your dick was too much for me yesterday. Never have we fucked that many times in a week, let alone in one day. Hopefully I'm ready in a day or so. I can't wait to have him back inside me.\" Lexi said. \n\n\"Can I have another blowjobs later? I am so turned on by you.\" I asked. \n\n\"Of course. Do you really have to ask? Lets take some more pictures.\" Lexi said. \n\n\"Yeah, lets go in the living room.\" I said. \n\n\"Sounds great. Would you mind getting naked so I can watch your hard cock while I pose. Seeing you hard will help me get in a sexier mood.\" Lexi said. \n\n\"You are something else now. I would not change it for anything.\" I said. \n\nI took off my clothes and directed Lexi to the formal sofa. Lexi sat right on the edge of the cushion and started conservative with her knees tight together and her hands covering her tits. It progressed quickly to being naughty with her playing with her tits and nipples. Her knees parted giving me a great view of the thin fabric disguising her pussy and disappearing into her crack. \n\n\"Get on your knees and show me your ass.\" I said. Lexi kept striking sexy poses. \"You look so sexy honey. Bend over and pull your thong to the side. I want to see that asshole.\" \n\nLexi did everything I asked and more by putting her own spin on things. Her asshole looked so good. \n\n\"I just want to lick your little hole. It looks so good through the camera.\" I said. \n\n\"Maybe you should get over here and lick it.\" Lexi said. \n\n\"I won't turn that down.\" I said. \n\n\"Be soft honey. Its still a little sore.\" Lexi said. \n\nHer thong slipped back into her crack so I pulled it to the side and gazed at her puckered star. \n\n\"Have you ever heard of anal bleaching?\" I asked. \n\n\"Yeah honey but only recently. I remembered some big Hollywood movie talked about it but I didn't know or care about it back then. Ever since our whole anal experience started I remembered that movie so I actually research it a little bit. Why do you not like my asshole?\" Lexi sarcastically said. \n\n\"No way honey. You know I fantasized about your asshole for years. I was just curious because Holly said she bleached hers so I was just wondering.\" I said. \n\n\"Personally I don't look at my asshole very often so I don't know what the difference would really be.\" Lexi said. \n\n\"I don't really know that's why I was asking. Sorry for the distraction. Can I get back to licking your perfect asshole?\" I said. \n\n\"Well, now I am curious. You just took some picture of my ass. Did you get any close ups?\" Lexi said. \n\nFortunately and maybe a little embarrassing is that many of the pictures of her ass were close ups. I said, \"Yeah I got a few.\" \n\n\"Great, I want to see. Then you can get me off.\" Lexi said as we sat on the couch and I pulled up the pictures on the digital screen on the camera. I found a good one that the entire picture was just her asshole and the skin circling it. \n\n\"Wow, that is a close up. So how did Holly's asshole look?\" Lexi said. \n\n\"Holly's asshole was all the same color as the rest of her skin. See how yours is different. Hers is all uniform.\" I said. \n\n\"Yeah I see what you mean. I think I want to bleach mine. I want to talk with Holly and have her tell me all about it. I probably shouldn't walk into the store and ask her about her anal bleaching. I think I should meet her and get to know her a little before that conversation.\" Lexi said. \n\n\"I don't know it might work. I mean she let me lick her ass within an hour of meeting her but getting to know her is probably a better idea. Also, you only bleach it if you want to. I think you are perfect so it's your call.\" I said. \n\n\"Those are all good points plus I don't want to mess up the opportunity for you to fuck her. We'll figure that out later. Where were we before you brought that all up?\" Lexi said. \n\nI got down on my knees in front of her and pushed her legs back and moved the thong to the side. \"I was about the eat your amazing ass.\" I said, \"This is the same position I had Holly in and she came so hard.\" \n\n\"Oh yeah Steve. Lick me like you licked that little slut. Make me cum on your face.\" Lexi said. \n\nI repeated almost the same oral I performed on Lexi as I did on Holly. I played with her clit and worshiped her ass. Only after a couple minutes she was cumming. \n\n\"That was quick. It gets me so fucking hot thinking of you licking Holly's ass.\" Lexi said. \n\n\"Let me blow you and then I want to plan out your night tomorrow. Just think tomorrow night you will have that little twenty year old holding your cock like I am and then slipping it into her mouth. Hopefully she will know what to do with a cock this big. Don't hurt her with your monster.\" Lexi said. \n\nHearing Lexi talk about another women blowing me was so sexy and made me only last a little longer than she did. It was getting late and we where both ready for bed. Lexi planned the whole night from her going shopping after at the store after work. To what positions I should use. Lexi seemed more excited than I was and I don't know if that's possible. Lexi figured since she would be super horny while I was gone she would go to a sex store after checking out Holly. Find some more toys to try and then masturbate all night. \n\nThe next morning we woke up on time so we didn't have to rush out the door. I thought I would join Lexi in the shower in hopes she was back to normal and have a good quickie. I stepped in the shower with my morning-wood sticking straight out. \n\n\"What do you think you are doing mister?\" Lexi said. \n\n\"I need a shower before work and maybe some good pussy to start the day off right. How does she feel?\" I asked. \n\n\"She feels great but you are not getting any. You have to save everything for Holly. I want you at full strength.\" Lexi said. \n\n\"Are you serious? You know all to well I don't have a problem keeping him hard.\" \n\n\"Oh I know but I want you to give Holly the best fuck she will ever have. I want you to be able to give her some big loads. So I am making you wait and be patient for tonight.\" Lexi said. \n\n\"This is going to be a long day. Hopefully this thing will go down before I get to work or my employees will really get an eyeful.\" I said. \n\n\"That's fine. All the females will want it and the males will be jealous.\" Lexi said. \n\nI knew that was not the case and said. \"Your crazy. My employees would be thinking why the fuck does my boss have a hard on.\" \n\n\"Yeah that's probably true but you're still not getting any and don't even think about rubbing one out.\" Lexi said. \n\n\"Fine but if I get blue-balls I'm blaming you.\" I said. \n\n\"Oh poor baby. Your WIFE is only letting you go fuck another girl. I think you will survive.\" Lexi said. \n\n\"Very true. Have I ever told you how amazing you are?\" I said as I pulled her in for a kiss. \n\nWe ended the shower, got dressed and both headed out the door. We both had pretty serious jobs and at this point in our careers Lexi probably had more stress than me. Lexi was a VP for a big marketing firm. Being so high up in the company came with a lot of responsibility and discretion so I knew our new lifestyle could not become public knowledge outside of people we trusted and I guess one young swimsuit store worker. Me on the other hand was the owner and president of my own company I started a few years back. The company started with just me and now has grown to over fifty employees. We do business across the country and it continues to grow. \n\nI knew I would be useless at work today so I decided to take half the day off and go to the country club. I figured a little golf and working out could take my mind off of that nights activities. It turned out to not work that well. I played terrible and lost my money to some old regulars at the club. Working out felt good because I could transfer my sexual frustration into the weights. \n\nFinally it was early evening and I got a text from Lexi that said, \"Holly is cuter that I imagined. I hope everything goes perfect tonight because I really want you to fuck her.\" \n\nI sent back, \"Me too. Come to the club right now for dinner.\" \n\nI was nervous about everything going good that night. I hoped Holly would still be interested and not be second guessing any of the previous nights activities. I could not believe how nervous I was. I felt like I was single again and back dating people. Lexi showed up to dinner we ate and then she wanted to get me home to prepare for that night. Finally I wasted away the whole day. All I had to do was go home shower and change. Once again I tried to get Lexi in the shower with me but she refused but when I got out she was sitting on the bed with the clothes she had picked out for me. Lexi chose my tightest jeans I owned, a t-shirt and some leather boots. \n\n\"You forgot my underwear.\" I said. \n\n\"No I didn't.\" Lexi said \n\n\"My dick will be really no.ticeable in these pants without something holding him down. Especially in my current state.\" I said. I had a semi hard cock, which was consistent throughout the day. \n\n\"I know I think Holly will like it.\" Lexi said. \n\n\"I'm more worried about my walk through the mall too the store.\" I said. \n\n\"Relax, it will be fun. Now I am off to the sex store. Do you want me to get anything particular?\" Lexi said. \n\n\"Whatever looks good to you honey. Have fun.\" I said. \n\n\"Not as much fun as you. Bye.\" Lexi said. \n\nA little while later I left for the mall. I showed up to the mall about fifteen minutes before closing. The mall was dead and I only passed a few people on my walk to the swimsuit store. Holly was standing towards the back of the store and look gorgeous. Unfortunately she was not alone. Holly was helping two women with their swimsuit selections. I browsed the board shorts for a few minutes hoping the shoppers would leave soon. Holly noticed my arrival after about five minutes. We made eye contact and her smile relieved all my nerves. I heard her tell the ladies the store was closing soon and that she needed to help the gentleman on the other side of the store. Holly had a bounce in her step, as she skipped over to me in excitement. Her boobs bounced in her loose fitting tank top and her tan toned legs looked great in the tight little cotton skirt she had on. \n\n\"Oh my gosh Steve. I was getting so worried you were not coming.\" Holly said as she hugged me, \"I have been looking forward to seeing you all day.\" \n\n\"Me too. I have been thinking of you all day and how amazing last night was.\" I said and slipped my hand down to her ass. The skirt was so thin and I did not feel any underwear so I was almost certain she was going commando. \n\n\"I don't want to stop holding you but it looks like the shoppers are done and now are looking at us a little weird. Let me go ring them up so I can lock up.\" Lexi said. The shoppers were looking our way with a questioning look but they could only see us from the chest up with the clothing and displays blocking their few so my hand on Holly's ass went unnoticed. The girls walked out of the store. Holly locked the door and rolled down one of those metal gates that covered the whole front of the store. \n\nWe were now alone and nobody could possibly bother us. Holly ran across the store, jumped in my arm, wrapping her legs around my waist and kissed me. I slid my hands up her thighs and under her skirt and onto her ass. \n\n\"No underwear?\" I said. \n\n\"Nope\" Holly said as I grabbed her luscious ass. \"I have been so horny all day that I couldn't have anything touching my pussy.\" \n\n\"Oh my gosh. You are so fucking sexy. I don't think I can wait any more.\" I said. \n\n\"I still have to try on that last swimsuit for you.\" Holly said. \n\n\"True but hurry. I am ready to get you naked.\" I said. \n\n\"I know, me too. Just be patient. Let me go change. I have a few blankets in the backroom. Could you grab those and lay them out in front of the couch.\" Holly said. \n\n\"Sure, I like that you came prepared.\" I said. \n\n\"Great! I will be back in a minute.\" Holly said. \n\nI laid out the blankets and then sat on the couch waiting for her return. A couple minutes later Holly returned in the smallest bikini I have ever seen on a person. The triangles on the top could not cover her whole nipple. The sides of the areolas were exposed and the thin fabric showed her hard nips clearly. The bottoms consisted of tiny stings that came together at a little piece of fabric maybe an inch wide. Her pussy lips were barely contained. \n\n\"You look amazing. Holy shit! Your body is perfect for that suit.\" I said. \n\n\"Why thank you. I don't think I would wear it to the beach but I will put it on for you anytime.\" Holly said. \n\n\"Get over here so I can have a closer look.\" I said. \n\nHolly stood directly in front of me. I let me hands roam her body and she slowly turned in a circle. I rubbed from her legs to her tits and everything in between. I tried to take in everything. \n\n\"Steve you have treated me so good from last night and all the amazing things you are telling me that now it's your turn for me to treat you. How about you stand up and let me show you my appreciation.\" Holly said. \n\nHolly then took the bottom of my t-shirt and raised it above my head. Standing without my shirt she got on her tiptoes to kiss me on the lips. As she lowered her kisses went to my neck to my chest. Kissing each nipple and down my abs to my belly button. At this point she had taken my seat on the couch. \n\n\"I can't wait to see your cock Steve. Touching it last night made me so curious to see what was hiding behind your shorts. It felt so big. Bigger than any cock I have felt before.\" Holly said as she undid my belt and buttons to my pants. Holly spread open my jeans showing my crotch and the top of my ridged shaft. The rest was down my pant leg. \"I see no underwear for you either. I love how clean you look.\" Holly said as she ran her fingers over where my pubic hair should be. \n\n\"Thanks. I'm glad you like it.\" I said. \n\nHolly reached down my pant leg and grabbed hold of my shaft. She pulled my cock free. Gasping as she held my bare cock. \"I don't know what to say. You are huge.\" She kept moving my cock in all directions as if she was inspecting it. \"I was not expecting it to look like this. I knew you felt big but not this big. I think we will have a good night.\" Holly said with a big smile. ",
        "She stopped inspecting me and started to play. Jacking me slowly from the tip to the base. Gently stroking all nine and a half inches of me. Her hands were soft and smooth. \n\n\"Can I put your cock in my mouth?\" Holly asked. \n\n\"Absolutely!\" I said. \n\nHolly started with light kisses on the head and then the shaft. She then licked up and down my shaft, covering every part with a thin layer of saliva. Both of Holly's hands wrapped around my shaft and jacked me. Her hand moved up to the tip and back down with small circular motions with each stroke. The tip of my cock was then placed at the entrance of her mouth. Holly's lips parted as she took me into her mouth. Her tongue swirled around the tip as she sucked. Holly took a couple more inches into her mouth and then started to pick up speed. She pumped my shaft quicker and moved my dick in and out of her mouth much faster. No more than a few inches would travel into her mouth and she made no attempt to go deeper. What she lacked in deep throating skills she made up for in enthusiasm. Holly was energetic and gave her all. She would get me close to cumming but never pushed me over the edge. I needed her tight young pussy to get my release. \n\nI untied the two ties holding the bikini top on and then stepped back and made her release my cock. \n\nHolly was surprised by my movement and then said, \"This is by far the best cock I have ever seen, touched or suck. I don't know how long I was blowing you. I was so distracted by getting to suck on something so nice.\" \n\n\"You were doing so great Holly. It felt amazing but now I think he needs to explore you little pussy.\" I said. \n\nThe blowjob was good but out of the three people to blow me Holly was at the bottom. I could not wait to get inside her pussy and maybe her ass to. \n\n\"That sounds great. Lay down Steve.\" Holly said. \n\nI lay on the blankets I had put out. Holly stood from the couch. I watched her lower the tiny bikini bottoms to the floor and step out of them. Her bare pussy looked wet and willing. Holly straddled me. Took hold of my cock and lowered herself. \n\n\"Let me take it slow Steve. I have never had a dick this big.\" Holly said. \n\n\"Take as much time as you need.\" I said. \n\nHolly continued down. The tip pushed her lips apart. Holly's pussy was drenched and my shaft slowly entered her canal. About half of me was inside of her pussy when she stopped forcing herself down on my cock. \n\n\"Fuck you are big. It feels so good. I have never been stretched this good.\" Holly said, \"Let me fuck you till I get used to you.\" \n\nHolly raised herself back up to the tip and then back down fucking me. With each motion more of my shaft disappeared into her. After a few minutes of methodical fucking and her getting adjusted to my size I was finally completely inside of her pussy. \n\n\"Fuck, you feel so good inside of me. Sorry it took a little while to get your whole dick in me.\" Holly said. \n\n\"I'm not sorry I could watch you fuck me for hours.\" I said. \n\n\"Good! Now that I can handle you, I want you to fuck me good.\" Holly said as she climbed off my dick and got on her hands and knees. \"Fuck me from behind.\" \n\nI got behind her, grabbed her ass and admired the view for a few moments. Her puckered ass and waiting wet slit looked perfect. \n\n\"What are you doing back there?\" Holly said. \n\n\"I got distracted by how beautiful and sexy you are.\" I said. \n\nI lined up my cock with her pussy and pushed myself into her. Holly's pussy walls stretched around my shaft as I buried myself to the hilt. \n\n\"Please fuck me Steve.\" Holly said. \n\nNo more encouragement was needed. I slid in and out of her pussy at steady pace, much quicker than earlier. Holly could handle the pace. Her love box had accepted my cock and was ready for a good fuck. It was not long before Holly's breathing became much heavier and pussy even wetter. Holly also became much more vocal. \n\n\"Fuck Steve. Fuck me. Fuck me harder.\" Holly said. She continued to let me know her pleasure throughout my fucking. \n\nI could not help but enjoy the view of her ass hole. It had filled my thoughts for the last day and my ultimate goal was to get my dick in her ass. I was concerned that she would be to tight after she struggled with my dick in her pussy and as far as I knew the ass would be tighter than the pussy. That fact was not going to stop me from trying. I placed my thumb onto Holly's hole and rubbed. \n\n\"Keep playing with my ass Steve. Push your finger in me.\" Holly said. \n\nHolly was ready and willing for ass play. I could feel her excitement as I started playing with her ass. I spit on her ass and worked my finger into her ass. My continual fucking sent her into her first orgasm. \n\n\"I'm cumming. Keep fucking me. Oh shit. Oh fuck this feels amazing. Fuck!\" Holly said. \n\nI never slowed or let her recover. I kept on fucking her and pushing my thumb deeper in her ass. I was surprised to find her ass so inviting. It accepted my thumb with ease. Soon I replaced my thumb with two fingers. With not much effort they slid into her ass entirely. By this point I was getting close to cumming so I took my fingers from her ass and grabbed her by the hips. I pumped in and out of her as fast as I could. \n\n\"I am going to cum soon. Where do you want it?\" I said. \n\n\"Cum in me Steve. I want to feel you shoot deep in my pussy.\" Holly said. \n\n\"Are you sure Holly?\" I said with a little concern. I never had to be concerned with my wife or with Kim. Holly on the other hand I did not know her preferred method of birth control and I defiantly did not need a nine-month accident. \n\nShe sensed my concern and said, \"Don't worry Steve. I am clean and protected so shoot that sperm deep inside me.\" \n\nI did not have any response. I returned to fucking her hard and fast. Holly reached back and played with her asshole. She pushed two fingers into her ass and fucked herself. Holly pumping her own ass sent me over the edge. I pumped my seed into her. This triggered another orgasm for her. We both finished at the same time and collapsed on the ground. \n\n\"By far the best fuck I have ever had. Seriously Steve, that was amazing.\" Holly said as she rubbed and fingered her pussy. Then licking her fingers clean of our combined cum. \"Taste great too.\" \n\n\"That was great but were not done yet.\" I said. \n\n\"You can go again so soon?\" Holly asked not knowing my stamina \n\n\"Defiantly, we have only begun.\" I said, \"Let me play with your ass a little and let's see if I can fit in there.\" \n\n\"Sounds wonderful. If you can't tell by last night and tonight, I really like anal activities. This might help a little.\" Holly said as she pulled out a bottle of lube. I don't know where it was hiding but I knew it would help. \n\n\"Me too, we really are a good match.\" I said. \n\nHolly lay with her back towards me. I put so lube onto my fingers and worked them in her crack. I found her hole and immediately pushed my two fingers back in. I finger fucked her for a few minutes and her ass became more accepting. Then I pushed a third finger in. Holly handled everything great, with no discomfort at all, only pleasure. Her ass was stretched and ready for dick. My dick was bigger than any finger combo but was ready to be truly fucked. \n\n\"Are you ready to get ass fucked?\" I asked. \n\n\"I can't wait Steve. I want to feel you big cock in my ass.\" Holly said. \n\nI spooned Holly with my dick pressed against her ass. I started rubbing my cock back and forth her crack, rubbing the asshole with each pass. \n\n\"Stop teasing me Steve. Put him in me.\" Holly said. \n\nI put some more lube on and then guided the tip of my dick to her willing hole. With little effort the head disappeared. Her ass was much more accepting then Kim's had been. With the lube and her accepting ass my shaft continued to slid inside her. \n\n\"Keep pushing. Fuck you feel big but keep going till you're all the way in.\" Holly said with about half my dick up her ass. \n\n\"You want all of it? You want my big dick buried in you ass?\" I said. \n\n\"Hell yeah! You feel so good Steve. Bury you dick in me and then fuck me hard.\" Holly said. \n\nI kept pushing as every inch of me was in her ass. She was tight but took me pretty easy. I was in ecstasy with my dick buried in a little college girl's ass. My sex life was reaching new heights and I still had the rest of the night to enjoy her ass. Slowly I pulled almost every inch of me out of her and then slowly pushed back in. I fucked her slow and let my hands roam from her breast to her clit. She was soaking wet. \n\nHolly turned her upper body so her back was flat on the ground and her face turned towards mine. She stared into my eyes as I fucked her and played with her nipples. Her face displayed a look of pleasure and care. More than just a crazy fuck. Almost like she was falling for me. It was a look that you get at the beginning of a relationship where you realize you really like the person. We barely knew each other but her emotions were showing her feelings. I kissed her. The kiss was passionate and loving. More dramatic than any of our previous make outs. \n\nWe broke our kiss and I picked up more speed. The whole time she never broke eye contact with me. A few moments later Holly was hit with another orgasm. She moaned and her body tightened in pleasure. \n\n\"I can't believe I just came again.\" Holly said. \n\n\"I think I can get you to go a few more times.\" I said. \n\n\"Really!\" Holly said. \n\n\"Yeah. I think I have it in me as long as you are up for it.\" I said. \n\n\"Of course. Guys my age last a few minutes and it's all about them. I have never been treated so good.\" Holly said. \n\n\"You deserve to be treated good. You want to try another position.\" I said. \n\n\"Yeah that sounds good. I am up for almost anything so whatever you want to do to me, just do it. I trust your judgments and skills.\" Holly said. \n\nI thought to myself about my skills. A month ago I was a novice, now I have skills. It made me feel good to know I was good at sex. Holly was only my third partner so compared to most people I was a rookie but I had learned a lot in the last month. \n\nI got up from the floor and sat on the couch. Holly straddled my waist and was face to face with me. I directed my cock to her ass. Once the tip found her asshole she started to lower down my shaft. Holly rocked her hips back and forth as my cock slid in and out of her ass. I held her tights as our tongues danced in and out of each other's mouths. Her pace started to quicken and I had to break out embrace to give her more freedom to move. Holly sat up more and I lean back into the couch. She started bouncing with good speed on my dick. To help I moved my hip a little to match her pace. My dick was being pounded in an out of her and our skin slapped with each motion. Holly's hand was now feverously working her clit as she fucked me. \n\n\"I am going to cum again. Keep fucking my ass Steve. Fuck me hard.\" Holly said. \n\nI stopped her bouncing at the top of her motion and held her hips still. Then I fucked her hard. I pumped in and out of her ass as fast as my hips could move. Her orgasm hit and her ass tighten around my cock. I didn't slow but the increased pressure was pushing me over the edge. \n\n\"Oh fuck this is to much for me Holly. I am about to cum.\" I said. \n\n\"Shoot it in my ass. Cum in me.\" Holly said as I let loose in her ass. My cream was shooting deep inside her bowels. I finally stopped fucking her once the orgasm subsided. \n\n\"That was amazing. I love your ass.\" I said as we both caught our breath. \n\n\"Thank you. I love your dick in my ass. I have never cum so hard or this many times during sex.\" Holly said. \n\n\"I have only had anal a couple times and you took me so easy. After how tight your pussy was, I thought it would be a lot harder to get in there. I am truly amazed by your ass.\" I said. \n\n\"Well, I do have a reason for that.\" Holly said. \n\n\"Now I am intrigued. Please tell me all about your ass.\" I said, \"That kind of sounds funny to say but I am very interested.\" \n\n\"Ok, I have never really told anyone the story but an man I have only met a couple times seems normal to open up to.\" Holly said jokingly, \"However your dick is still in my ass so it does feel more natural to be open with you about my ass. Its crazy how comfortable I am with you and what we just did has been a total fantasy of mine.\" \n\n\"I'm glad you feel so comfortable. I feel the same way. Everything so far has been so easy between us.\" \n\n\"Now for story but first do you want to lay down and get comfortable first.\" Holly said \n\n\"Yeah that sounds great.\" I said. \n\nHolly rose off of my lap and my still hard cock slid from her ass. Once off she took hold of my cock and stroked him a few times. Then without saying a word she dropped to her knees and took my dick in her mouth. Cleaning my cock of the excess cum. \n\nAfter a few minutes of sucking Holly said, \"Sorry I got distracted from seeing your cock and how hard you still are. You ready for story time?\" \n\n\"The blowjob was great but I'm excited to hear where this anal passion comes from.\" I said. \n\nWe cuddled together on the floor and she began to tell me her sex history from the beginning. After getting through losing her virginity and personally experimenting with herself she got to the part I was interested in. The ass. \n\nHolly continued saying, \"It was the summer after my senior year of high school. One weekend my parents were out of town and I invited my boyfriend over to my house. One thing led to another and we did what any teenagers would do. We started fooling around. We had sex a couple times before that point so we thought we knew what we were doing. He was defiantly only average in the man department but I was young and he was only the second guy I had been with so I didn't know any different.\" \n\n\"We started fooling around. He went down on me. He was really low and licked my asshole. It was only a quick graze but it made my whole body jump in pleasure. He kept returning to my ass and would linger a little longer each time. I tried to hide my excitement because the idea of being turned on by my asshole was completely foreign. Towards the end his focus was more on my ass and not my pussy.\" \n\n\"Finally I asked what he was doing. He was embarrassed but then told me about anal he had seen in some porn and how he really wanted to try it. Me being na\u00efve and turned on said we could try it. He was super excited that he stopped pleasuring and tried to put it in me. We didn't know what the hell we were doing so with just a little spit he tried to push it in me. To be honest it hurt pretty badly. Before his dick could push into my ass he blew his load. That was it, he was done and I was left unsatisfied with cum in my butt crack.\" \n\n\"We broke up a few days later and never tried it again. I was worried about the pain but the pleasures out weight any negatives. My new obsession was born. I researched everything I could on it from books, to porn or forums online. The porn was great. I realized it was not realistic for someone new to anal. The online forums and books were much more useful. I learned proper cleaning and prep, which is almost a daily thing for me now.\" \n\n\"I learn how I would need to gradually work up to getting a dick in my ass. I started small with my fingers when I would masturbate. Whenever I masturbated and played with my ass I would have my hardest orgasms. I continued to push myself. I moved up to small anal toys. Those were great but I wanted bigger so I increased the size of the toys. Once I was comfortable with those I went to small dildos and would fuck myself. I kept increasing the size until I was comfortable with a large dildo. I was like the girls in porn who could take a dick with little trouble at all.\" \n\n\"Unfortunately opportunities with real dicks did not arise. The first guy I dated in college I asked if he ever thought about anal told me no and thought it was dirty. That relationship ended fast. Towards the end of my freshman year I started dating another guy. After a couple months I asked him if he had ever thought about anal sex. He not only thought about anal but also had experience. I couldn't believe it and asked if he wanted to try it with me. He was ecstatic and so was I. I finally would have a real cock in my ass. With all my preparations I took his six-inch dick easy. I came so hard and from that point I was completely hooked. We did it a few more times before we left for summer. Our relationship didn't last.\" \n\n\"That summer I had anal with one of my high school friends a couple times and that was my last time till now. It's been about a year since I have been fucked in the ass with a real dick so when you licked my ass last night I got so excited. Then you blew my mind tonight, it has been unbelievable.\" Holly said \n\n\"Unbelievable. I am so glad you told me. This has been one of the best nights I have had.\" I said. \n\n\"Of course I pick a married guy to have the best sexual experience of my life with. Will I get to see you again Steve or is this a one time affair for you?\" Holly asked. \n\n\"I defiantly want to see you again and this has not been an affair. Personally I would like to get to know you better a lot better outside of this store. What do you have in mind for whatever this is we have?\" \n\n\"I want to get to know you better too but I know we can't have a real relationship with you being married. Now for the question I might regret. What about your wife? We are both guilty in fucking each other but I also don't want to be a home wreaker.\" Holly said. \n\n\"First off neither of us is guilty of anything. We didn't have an affair.\" I said. \n\n\"What do you mean? Your married and we had sex. That is the very definition of an affair.\" Holly said. \n\n\"I don't think it counts as an affair if I have permission from my wife to be here with you.\" I said. \n\n\"Wait! Are you serious your wife knows?\" Holly questioned. \n\n\"Yes, my wife knows everything I don't keep anything from her. She gave me permission to come here tonight. You actually met her today. You helped her in the store today and she said you were beautiful and very sweet.\" I said \n\n\"That's very nice but so weird. Are you serious about all this?\" Holly asked with a concerned face. \n\n\"Let me explain. We're a normal couple who have just recently become sexually enlightened. To be completely honest, you are only the third person I have ever been with in my entire life.\" I said and then went on to tell her the whole story. She became a lot less concerned and more turned on as she returned to cuddle with me towards the end of the story. \n\n\"Your story is way better than mine. Your wife does seem really nice, caring and sexy. It caught me off guard to think that a husband and wife conspired some story to fuck me. After hearing everything I don't feel that way at all. This has all been wonderful.\" Holly said. \n\n\"I am glad you are ok with everything. It really is a lot to take in and I hope I didn't scare you off.\" I said. \n\n\"At first maybe, but after hearing you and your wife's experience I am turned on and fascinated by the whole thing. Plus I am going to need to fuck you a lot more.\" Holly said. \n\n\"That sounds great to me. I think you would really like my wife and I think you need to meet her formally. We are having a pool party on Friday and I think you should come. We can get to know each other better and it would be a really relaxed atmosphere for you to meet my wife. It will be a normal pool party, very casual with friend, coworkers and their kids. You could bring a friend to if you would like to be more comfortable.\" \n\n\"That sounds great. I would really like to meet her and hang out with you guys.\" Holly said. \n\n\"Great I am excited.\" I said \n\n\"I know I can tell. You're still hard. Does he need to get in my ass one more time?\" \n\n\"Fuck yeah.\" I said. \n\nHolly took my dick in her mouth to get me wet and then turned to spoon me. I lined up my dick with her still wet hole. ",
        "\"Wait. Sorry I was just thinking about the pool party. How are you going to explain me being at the party with all your friends? No one will know who I am and we cant really tell them the truth.\" Holly said. \n\n\"That's true. I had not thought about that. We might have to come up with some story. People might get the wrong impression if I say I met her at the mall, ate her ass and then fucked her.\" I said. \n\n\"I don't think we should lead with that. We'll come up with something. Now put that dick back in me.\" Holly said."
    ],
    "authorname": "teninchhammer10",
    "tags": [
        "ass",
        "wife",
        "anal",
        "friends",
        "pussy",
        "sharing",
        "fucking",
        "assfucking",
        "big dick",
        "married"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/how-girls-night-changed-my-life-ch-03"
}