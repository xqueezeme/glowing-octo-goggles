{
    "title": "Saving the Company Ch. 05",
    "pages": [
        "\"Son of a bitch!\"\n\nI was sitting up in bed, suddenly wide-awake as those words left my mouth. The lights were out. I couldn't see anything, but I could hear my heart beating loudly in my chest.\n\n\"That old bastard!\" I said with a shake of my head. I reached over to the phone by the side of my bed and started dialing. The numbers were lit and the brightness actually hurt my eyes until they adjusted. The phone rang three times before it was picked up.\n\n\"Hello?\" I heard Bethany ask. She sounded more than a little groggy, but there was also a hint of fear. I quickly looked over at my alarm clock and saw that it was four o'clock in the morning. I silently cursed myself for my stupidity.\n\n\"Bethany, I'm so sorry I called this early!\" I said as I reached for the light on the night table next to my bed.\n\n\"Joe?\" she asked tentatively, but then continued before I could answer. \"What's wrong?\"\n\n\"Nothing,\" I quickly replied. \"Or at least nothing major. I didn't realize the time. I should have waited until the morning to call you.\"\n\n\"Well, I'm up now,\" Bethany said after a slight pause. \"You might as well tell me what's on your mind. I probably won't be able to go back to sleep anyway.\"\n\n\"I really am sorry,\" I said, pausing a moment longer before explaining the reason for my call. \"I was just so angry when I realized that we'd been set up. My first thought was to call you and let you know.\"\n\n\"Pardon?\" Bethany asked in confusion.\n\n\"Brad set us up,\" I explained. \"He knows exactly what's going on! We've both been so busy with the craziness at work, that we bought into the whole silly thing.\" I expected to have to explain further, but instead I heard Bethany groan over the line.\n\n\"You're right,\" she said slowly as the truth sunk in. \"I accepted at face value that us quitting and his fight with Karl were enough to make Brad go on vacation for two weeks, but that would be so unlike him. It just sounded so plausible coming from Cherie.\"\n\n\"She has to be in on it,\" I said with a shake of my head.\n\n\"Her? What about Bradley junior and Judy? You know that they have to be part of this as well!\" Bethany snorted. \"Damn! The whole company probably knows and is laughing themselves silly.\"\n\n\"No, I doubt anyone at the company other than Bradley and Judy are involved,\" I said. \"Although some of them might suspect.\" I suddenly caught myself smiling. The whole thing was asinine, but I couldn't help myself.\n\n\"What are we going to do?\" Bethany asked, still sounding annoyed.\n\n\"I was thinking about toilet papering Brad's front yard and soaping their windows,\" I joked. \"It's been years since I've done that to someone.\" \n\n\"Joe...\" Bethany said, but I cut her off.\n\n\"Oh come on, Bethany. There really is nothing we can do,\" I laughed. \"Unless of course you want to quit again?\"\n\n\"No,\" Bethany quickly replied, and the added more slowly, \"On the positive side, at least it looks like we both won't be looking for work next week.\"\n\n\"Yeah,\" I said in agreement. \"But it still burns me that we got taken.\"\n\n\"Me too,\" Bethany said. \"But there's not a lot we can do about it.\"\n\n\"We could get married and retire to Hawaii?\" I offered. \"That would show them!\" I could almost see Bethany rolling her eyes on the other side of the line.\n\n\"Retirement?\" Bethany said in disbelief. \"We'd be climbing the walls in a matter of days.\" I noticed that she didn't comment on the getting married part. I decided to let it go for now.\n\n\"Please,\" I laughed. \"I quit Monday morning and by Tuesday I was ready to pull my hair out!\"\n\n\"Hey!\" Bethany put in, laughing now too. \"I was the one who came up with the ridiculous 'hostile take over of our old jobs' idea!\" \n\nI got out of bed and stretched as we talked. It was Sunday morning and that was normally the one day a week I let myself sleep in, but it wasn't happening today. I went to the kitchen and put on a pot of coffee as we spoke for a couple more minutes. We spent most of that time joking.\n\n\"So, are you planning on going to the office later?\" Bethany eventually asked.\n\n\"Nope, it looks like it's going to be a nasty, rainy day,\" I sighed. \"I'll probably just go back to bed and mellow out. Maybe watch a good movie.\"\n\n\"Oh,\" Bethany said, sounding hesitant. \"I was going to suggest we get together later, but I can understand if you want to...\"\n\n\"I'll be there in twenty minutes!\" I interjected. \"You pick a good movie.\"\n\n\"Slow down sailor!\" Bethany stalled, trying together her thoughts. \"How do you know I just don't want to talk about work?\"\n\n\"I know you,\" I replied. \"You wouldn't have hesitated if it was work you wanted to discuss.\"\n\n\"You're right,\" Bethany admitted, and then sighed and added pointedly, \"Actually, I really don't want to talk about anything right now.\"\n\n\"Oh baby!\" I crowed, taking her hint about not wanting to discuss our relationship and twisting it something else entirely. \n\nBethany laughed despite herself, but then ignored my comment and continued, \"I thought we might just spend some time together.\" I was tempted to joke again, but I caught myself. This obviously wasn't easy for Bethany.\n\n\"That sounds wonderful,\" I said seriously. \"What time is good for you?\"\n\n\"I'm up now, so why not come over?\" she said. \"Maybe we can watch that movie you mentioned from the comfort of my couch. It really is a nasty day.\"\n\n\"Okay,\" I agreed. It was a start. \"I'll bring a couple of my favorite DVDs, just in case we decide to be couch potatoes all day today.\"\n\n\"That sounds perfect,\" Bethany sighed. \"I'll throw some breakfast on for us.\"\n\n\"I'll see you in a little bit,\" I said, hanging up. \n\nI took a shower, shaved and brushed my teeth as quickly as possible. Afterward, I threw on some comfortable clothes and jumped into my car. I thought about stopping to pick up something, but I decided against it because Bethany had promised breakfast and I wanted to eat it before it became cold. I was hoping for another of her omelets! \n\nIt turned out to be a good decision on my part because I had forgotten the time. It would have been all but impossible to find a store open at five o'clock in the morning. The roads were pretty empty. I only passed a handful of cars on my way to Bethany's.\n\n\"Hello again!\" I smiled as she opened the door.\n\n\"Good morning,\" Bethany said, leaning forward and giving me a kiss. I hugged her until she broke the kiss and added, \"Breakfast will be ready in a few minutes.\" She was freshly showered and smelled wonderful! It was a fight to make myself let go.\n\nA couple of hours later we lay side by side on the couch watching the credits from one of my favorite movies.\n\n\"That was a good choice,\" Bethany said.\n\n\"Thanks,\" I smiled. \"It's your turn to choose.\"\n\n\"I'm too tired to get up and pick,\" she sighed. \"Let's see what's on cable.\" We found a movie that we both were willing to watch. It was not nearly as good as we hoped. I'm pretty sure we were both asleep before it was halfway done. I certainly did.\n\n***\n\n\"Wasn't last night enough?\" Judy asked with a smile as Bradley appeared and hugged her from behind, caressing her breasts through the towel she was wrapped in. He also leaned forward and kissed Judy's neck. She was drying her hair in front of the mirror in the bathroom.\n\n\"I'll never get enough of you!\" Bradley replied, nuzzling her neck.\n\n\"Later,\" Judy promised. \"I just showered.\"\n\n\"I know,\" Bradley said. \"And I'm a little disappointed you didn't invite me.\"\n\n\"You were sound asleep,\" Judy laughed.\n\n\"Well, I'm up now,\" he said suggestively.\n\n\"I can feel that!\" Judy snorted, taking a moment to reach behind herself and lightly squeeze his cock.\n\n\"Tease!\"\n\n\"Not really,\" Judy said with a sexy smile as she turned off the hair dryer, stood and faced Bradley. She pulled him into a kiss. They were both panting when they finally broke apart.\n\n\"Wow!\" Bradley said as Judy smiled. \"What do I have to do to get you to drop that towel?\"\n\n\"Just pull,\" Judy replied with a sexy smile as she raised her arms over her head. Brad pulled and the towel dropped. Judy's smile grew even larger at Bradley's expression.\n\n\"You like what you see?\" she asked, already knowing the answer. Bradley lifted her and placed her on the counter in answer. Judy wrapped her arms and legs around him as they kissed once more. Bradley starting leaving a trail of kisses down the length of her body. He paused at her breasts long enough to make both nipples wet and hard before continuing lower.\n\nJudy gasped when his lips brushed her inner thigh. She could feel herself getting excited as he continued to lick her inner thigh for a few moments. She grabbed his head with both hands and tried to force his tongue to her center. Bradley had a firm grip on her thighs and refused to be moved.\n\n\"Soon,\" he promised.\n\n\"Now who is the tease?\" Judy asked. Bradley laughed softly, but still refused to be rushed. \n\nHe waited until his senses were overwhelmed by her excitement. Judy cried out when he finally let his tongue touch her pussy. She was once again holding his head with both hands, but no longer trying to direct his actions. Bradley already knew what she liked.\n\nIt wasn't long before Judy came. Bradley was so busy enjoying the taste of her that he almost didn't catch her when she accidentally slipped from the edge of the counter. They both ended up sprawled across the bathroom floor. They lay in each other's arms laughing until Judy caught her breath.\n\n\"Come with me,\" she said. Judy took Bradley by the hand and led him back to the bedroom. She lay on the bed on one side with her top leg bent. She beckoned Bradley with one finger and a smile that promised him satisfaction. Judy directed him to straddle her leg on the bottom. The other remained bent and out of the way.\n\n\"This is different,\" Bradley smiled. His tone was calm, but Judy could see the excitement in his eyes.\n\n\"Just take your time at first,\" she said. \"This is an entirely different angle and will take some getting used to it.\" Bradley buried his face between her legs once more.\n\n\"No need for that!\" she half laughed. \"I'm still pretty wet from before.\"\n\n\"What makes you think that's why I'm doing this?\" Bradley asked. \"Maybe I just had to taste you once more!\"\n\n\"You've tasted me enough!\" Judy insisted. \"Now come up here. I don't want to wait any longer!\"\n\nBradley went back to straddling her leg. He moved forward until his cock head touched her opening. The first inch went in and she gasped. Bradley bent forward and kissed her. It was much easier to do with her on her side as opposed to her stomach and he still had a great view of her ass. It didn't take him long to work his thin cock into her.\n\n\"That feels wonderful!\" Judy moaned once he was all the way in. \"You can pick up the speed now. I'm ready.\"\n\nBradley had only pushed in and out a few times before he groaned and said, \"I like this new position!\"\n\n\"I'll let my sister know,\" Judy grinned, confusing Bradley. She took pity on him and explained. \"She told me about it after her second child. She says it a great way to make love when you're well into your pregnancy.\"\n\n\"What else did she tell you?\" Bradley asked.\n\n\"She did give some other helpful little hints about making love when you're pregnant,\" Judy answered with a smile. \"But those will just have to wait until we need them.\" Her words obviously excited Bradley. He slammed into her harder and picked up the pace.\n\n\"Hopefully we'll be able to use them soon!\" Bradley gasped, surprising Judy. Yet, his words also excited her. She always wanted children. Judy suddenly had a vision of what her and Bradley child might look like. She smiled a moment before Bradley's actions caused her passion to overwhelm her thoughts. \n\nHe was now holding her free leg with one hand and driving into her. His other hand rested on her hip. Judy took it and brought one of his fingers to her mouth. She sucked it in and Bradley looked startled at first, but it was soon obvious that he liked how it felt.\n\nHe was soon slamming into her with everything he had. Judy gasped. Bradley was still just a little too long for her! It hurt when he got this excited, but in a good way. Judy came first. Her orgasm was so strong that she pulled his finger from her mouth because she was afraid she'd lose control and bite it! Bradley grabbed hold of her waist with his now free hand and slammed into her one last time. He came so hard that he couldn't see for a few moments.\n\n\"I think we could both use a shower now,\" Judy said.\n\n\"You go ahead,\" Bradley said. \"If I go with you we'll never get out of your apartment today.\"\n\n\"Would that be so bad?\" Judy asked with a raised eyebrow.\n\n\"No,\" Bradley smiled. \"But you do realize that much more of this and I won't be able to go to work tomorrow?\"\n\n\"That's okay,\" Judy grinned, and then joked, \"Joe and Bethany will cover for us.\" Bradley frowned at the mention of the couple.\n\n\"I was supposed to call him today, wasn't I?\" he said, remembering the message Bethany gave Judy for him the day before.\n\n\"It didn't sound urgent, but you probably should call,\" Judy sighed as she stood and made her way to the shower for the second time. Bradley nodded and reached for the phone.\n\nHe didn't get an answer at the office. That was surprising enough, but when he got no answer on Joe's cell he lay there and frowned. That wasn't like Joe. He finally got up when he could no longer hear the shower and went into the bathroom. He explained that Joe hadn't answered.\n\n\"Well,\" Judy shrugged, once again wrapped in a towel. \"It is a rather ugly day out. Maybe he decided to sleep in?\"\n\n\"Joe?\" Bradley asked in disbelief.\n\n\"Even he needs a day off every once in a while!\" Judy laughed. Bradley turned the shower back on and regulated it to his liking. Judy noticed that it was far hotter than she enjoyed.\n\n\"Do you think maybe he's with Bethany?\" Bradley asked.\n\n\"Probably,\" Judy answered. \"Although she's still so frightened of relationships that I'm not sure what they're doing.\"\n\n\"So, you don't think they're doing the same as us?\" Bradley asked as he climbed into the shower.\n\n\"If by 'same as us' you mean having sex, then I'd say no,\" Judy sighed. \"Bethany not ready yet.\"\n\n\"But she does love him, right?\" Bradley called from the shower.\n\n\"Definitely!\" Judy called back, and then said lower so that he couldn't hear, \"Probably almost as much as I love you.\" Her words didn't really surprise her, but they were still odd to hear aloud.\n\nJudy left the bathroom and got dressed. She'd have to use the hair dryer once the bathroom cooled off. Bradley liked a steamy shower. It would have been pointless for her to attempt to do her hair while he was showering. The phone rang as she was just finishing putting on clothes.\n\n\"Hello,\" she said as she answered the phone.\n\n\"Hello,\" Joe's voice replied. He sounded confused. \"Is Brad there? I just missed his call.\" Three lies popped into Judy's head, but she shook her head and decided to tell the truth. It would be easier in the long run.\n\n\"He's in the shower,\" she said, and then because of a rather pregnant pause on Joe's side of the conversion, she added, \"He should be out in a few minutes.\"\n\n\"Oh,\" Joe said, and then added, \"Sorry, I just woke up for a pretty dead sleep.\" That explained his hesitation. Joe might or might not have been shocked at how fast Judy and Bradley's relationship had grown, but he was normally pretty quick on the uptake. He wouldn't have shown his surprise.\n\n\"Can I have him call you back?\" Judy asked.\n\n\"No, that's okay,\" Joe replied. \"It can wait until the morning.\"\n\n\"Okay,\" Judy said. \"We'll see you then.\"\n\n\"Hold on,\" Joe said and then must have placed the phone against his chest while he talked to someone. Judy couldn't make out the words and didn't bother trying. She could pretty much guess who it was anyway. Joe finally got back on the phone and said, \"Bethany would like a word. Do you have the time?\"\n\n\"Sure,\" Judy replied. \"Bradley seems to be taking his time in the shower.\" She said it to see if she could get a reaction out of Joe again, but it was a wasted effort.\n\n\"See you tomorrow,\" Joe said.\n\n\"Goodbye,\" Judy replied as she waited for Bethany to take the phone.\n\n\"So,\" Bethany's voice came across the line. \"Did you use any of that stuff you bought yesterday?\"\n\n\"The blue teddy,\" Judy laughed. \"But I don't think it was on long enough for Bradley to even notice the color.\"\n\n\"Men!\" Bethany said, laughing along.\n\n\"How about you?\" Judy asked. \"Did you use that green item you picked up?\"\n\n\"Not yet,\" Bethany replied hesitantly.\n\n\"That's okay,\" Judy said confidently. \"You'll know when it's time.\"\n\n\"I hope so,\" Bethany said softly, but then her voice became more normal as she added, \"I really just wanted to thank you for talking to me last night. It helped.\"\n\n\"Not a problem,\" Judy said, really meaning it. She always respected Bethany, but after their conversation the day before she found herself thinking that they might actually become friends. They said their goodbyes and Judy hung up. She thought about Bethany for a couple of minutes and suddenly started laughing.\n\n\"What so funny?\" Bradley asked as he exited the shower. His skin was pink from the hot water and his hair was still dripping. He was wrapped in a towel of his own.\n\n\"Remember the conversation yesterday about how Bethany intimidated you?\" she asked, referring to their conversation from the day before where they both opened up about themselves. Bradley had discussed his irrational jealousy of Bethany at one point. Thankfully, it sounded like he finally resolved it. Now it was Judy's turn. Bradley nodded and she continued, \"I just realized that I was as intimidated by Bethany as you were in my own way.\"\n\n\"Was?\" Bradley asked with a tilt of his head.\n\n\"Did I tell you that we went out shopping last night because she needed to talk?\" Judy asked, waiting until he nodded before going on. \"We talked about personal things and it made her more human to me. I've worked with Bethany for years, but until that conversation we were never really friends. I was too intimidated by her professionalism and drive to let myself get too close.\"\n\n\"What exactly did you talk about?\" Bradley asked with a frown, changing the subject.\n\n\"Men!\" Judy said with a roll of her eyes. \"Now what kind of confidante would I be if I told you that?\" Bradley waited until he realized she wasn't going to say anything else.\n\n\"You're really not going to tell me?\" he asked in surprise.\n\n\"No,\" she replied with a shrug. \"I love you, but that doesn't mean I'm going to break a trust.\" \n\n\"How about after we're married?\"\n\n\"Don't hold your breath,\" Judy replied, not backing down. Bradley continued to look at her. She looked right back.\n\n\"Good,\" he finally said. \"That means I can trust you with my secrets.\"\n\n\"What secrets?\" Judy asked with a raised eyebrow.\n\n\"In time,\" Bradley smiled.\n\n\"Jerk!\" Judy snapped, causing him to laugh. She then added, \"I know how to get you to tell me whatever secrets you have?\"\n\n\"How?\" Bradley asked in amusement. Judy smiled and walked toward him. Bradley quickly added, \"I thought you wanted to get out of here?\"\n\nJudy ignored him and dropped to her knees in front of him. He closed his eyes as she pulled his towel loose. She grabbed his cock and left a trail of kisses down the shaft. Judy didn't stop there. Her tongue touched places that shocked and enflamed Bradley! \n\nThankfully, he didn't really have any dire secrets. She couldn't force him to tell a secret that didn't exist, although it would be fun to watch her try!\n\n\"Are you ready to talk yet?\" Judy asked.\n\n\"Not on your life!\" Bradley replied and then fell back on the bed as she redoubled her efforts. He groaned loudly at what she did next. He couldn't hold off any longer! Bradley's orgasm hit and continued for longer than he thought possible.\n\nIt took him a while to regain control of himself. When he finally did, he realized that Judy hadn't stopped what she was doing. He watched her for a few moments. She noticed and met his eyes, smiling seductively. ",
        "\"So, tell me your secrets,\" Judy demanded.\n\n\"I don't have any,\" Bradley finally admitted as he found himself once again responding to her.\n\n\"Sure you don't,\" Judy said with a roll of her eyes. She then stood and took off her clothes that she had put on only moments earlier. Jody straddled his hips and sank down on his cock. She leaned forward and bit her bottom lip as her nipples brushed back and forth across Bradley's lips. He opened his mouth and let his tongue graze just the very tips. \n\n'Maybe I'll have to make up some secrets,' he thought to himself. 'Either that or chance dying from pleasure!' Bradley really wasn't sure which he was going to choose in the end. \n\nJudy looked down at Bradley and smiled. She knew he didn't have any secrets. Bradley wasn't the type. She on the other hand had quite a few, yet most of them revolved around her perversity in sex. Thankfully, every time she shared another one with Bradley he seemed to enjoy it almost as much as she did!\n\n***\n\nI walked out of the bathroom and made my way back to the couch. Bethany was standing next to it and stretching. She had no idea how sexy she looked doing that! It was too much for me to resist. I pulled her into a kiss. Instead of stiffening as I feared she might, she relaxed into the kiss. I'm not sure how we ended up back on the couch but when the kiss finally broke I realized we were both sitting.\n\n\"Wow!\" Bethany said.\n\n\"You're telling me!\" I replied, reaching for her again. Bethany pushed my hands away and quickly stood. I sighed.\n\n\"Let's get something to eat,\" she said. I nodded and stood, trying to regain control. It wasn't easy.\n\nWe went to a local restaurant for lunch. It was nothing special, but the food was good and we talked about a lot of things. Eventually the conversation turned to work.\n\n\"So, do you think we're ready for tomorrow?\" Bethany asked. \n\n\"Not quite,\" I smiled as I once again thought about what I decided to do not long after I realized Brad and the others were playing us.\n\n\"What?\" she asked, knowing something was up from my expression.\n\n\"Well, remember that we were just going to come up with a plan of what Brad should do when he returned?\" I asked. Bethany nodded and I continued, \"I think instead we'll just make the changes.\"\n\n\"Are you sure?\" she asked.\n\n\"Why shouldn't we?\" I shrugged. \"If Brad wants to play games, we might as well make it exciting for him.\"\n\n\"What are you planning?\" Bethany said, slowly smiling. She knew me pretty well.\n\n\"Do you think it's fair to assume that Brad isn't going to fire us when he returns?\" I asked.\n\n\"Yes, I think that's fair,\" she said carefully.\n\n\"So, if he isn't going to fire us, then I guess he still plans on making me the CEO eventually,\" I said. \n\n\"I expect so,\" Bethany said in agreement.\n\n\"Well, in that case,\" I grinned. \"I'm going to make all of the changes I've been wanting to for months!\"\n\n\"All of them?\" Bethany asked carefully. She and I already had a rough plan of what I was going to suggest to Brad when he returned. We discussed quite a few more changes than were in that plan. Some were discarded as unrealistic, but others I chose not to include because I didn't think they would fit Brad's style.\n\n\"Maybe not all,\" I finally conceded. \"But a lot more than what the currently plan states.\"\n\n\"For instance?\" she asked.\n\n\"Well, for one thing, I'm going to do a bit more shifting of personal,\" I smiled. \"I want the people I trust and know to get involved in the other areas of the company. I may shift some of them back once I get control, but then again, I may not.\"\n\n\"Who?\" Bethany frowned.\n\n\"Well, quite a few people actually,\" I said. \"But the most obvious is you.\"\n\n\"Pardon?\" Bethany asked in surprise. I laughed.\n\n\"Bethany it's time for you to come out from behind the curtain,\" I said. \"You're far more than a personal assistant to Brad and everyone in the place knows it.\"\n\n\"Yes, but...\" she began. I cut her off with a loud sigh.\n\n\"I'm going to promote you to some position in the next week, so you might as well pick one you like. I don't need an assistant, but I do need help. Pick an area and let's talk about it,\" I said, and then smiled as I added, \"Every position is open for discussion except CEO.\"\n\n\"I'm not qualified for everything!\" she snorted.\n\n\"I know,\" I grinned. \"But I'm not expecting you to choose being a lead tech or system designer.\"\n\n\"Joe, are you sure?\" she asked. \"After all, there is our...\"\n\n\"I'm going to walk out if you bring up our relationship right now as a possible reason not to promote you!\" I interrupted. I was serious and she saw it in my face.\n\n\"I could take over accounting,\" she said finally, thinking out loud. \"But although I like numbers, I also like working with people.\"\n\n\"You've already got that area organized,\" I said. \"Besides, Brad's been telling me that you and he are working toward Gary taking over accounting.\"\n\n\"You're right,\" Bethany nodded. \"But I'm really not sure what else I'm qualified to do.\"\n\n\"Think about it and let me know,\" I said. \"I'm willing to wait a couple of days.\"\n\n\"Only a couple?\" Bethany said in surprise.\n\n\"Maybe a couple,\" I replied pointedly. \"We have a lot to do in the next week.\" Bethany shook her and then changed the subject slightly.\n\n\"You wrong about one thing,\" she said. \n\n\"What?\" I asked with as frown.\n\n\"You do need an assistant,\" she smiled. I rolled my eyes.\n\n\"We'll deal with that later,\" I said as I paid the check and stood. \"What do you want to do now?\"\n\n\"Laundry,\" Bethany answered succinctly. \"It's been a crazy week and next week isn't looking any better. I'm going to go home, do laundry and go to sleep early. Someone woke me up in the middle of the night.\"\n\n\"I'll drop you at your place,\" I said, holding in a sigh. Bethany's answer came too quickly for her not to have had it planned out. \n\n'I did promise to give her time,' I thought to myself. Besides, I had laundry of my own to deal with and a full night of sleep sounded like a good idea. This week was going to be crazy.\n\n***\n\n\"Where are the love birds?\" I asked Bethany as I entered her office. She rolled her eyes at my choice of words.\n\n\"You just missed them,\" she replied. \"Bradley and Judy are going to see a show tonight.\" I opened my mouth to speak, but Bethany cut me off and added pointedly, \"It is six thirty.\"\n\n\"I wasn't going to say anything about them leaving,\" I said. \"I was just wondering if they took their cell phones with them.\"\n\n\"Let them be for one night,\" Bethany said with a shake of her head. \"You've already made so many changes people are walking around stunned and it's only Tuesday!\"\n\n\"Fine,\" I sighed, not really happy, but realizing Bethany was probably right. \"What are you doing for dinner?\"\n\n\"Absolutely nothing,\" she said firmly. \"I'm going home and going to soak in a hot bath and then go to sleep.\"\n\n\"I do have a hot tub,\" I offered, trying one last time.\n\n\"No, thank you,\" she said. I frowned.\n\n\"You are...\" I began, but she interrupted me again.\n\n\"Yes, I'm still thinking about us and our possible future,\" she replied quickly. \"I still need a little more time.\"\n\n\"Why?\" I asked. \"You know we're meant to be together.\"\n\n\"Joe,\" she said with a shake of her head. \"We're both so busy these days that it's hard to concentrate on anything else. Lets talk about this at the end of the week.\"\n\n\"Friday?\" I pushed, not really all that gently. Instead of being mad, Bethany smiled. That was a good sign.\n\n\"Saturday,\" she replied.\n\n\"Saturday morning, early,\" I said. Bethany paused, but then nodded.\n\n\"You just want me to make you another omelet!\" she grinned. There was a knock on the door before I could reply. My back was to the door, but Bethany saw who it was immediately.\n\n\"What's up Helen?\" she asked.\n\nI turned and added, \"How do you like your new job?\"\n\n\"That's what I wanted to talk to you about,\" the small redhead frowned.\n\n\"Tim or Sara-Jane giving you problems?\" I asked.\n\n\"Neither is happy to have me or any of the other people you transferred in under them, but I pretty much expected that. They'll get over it,\" Helen shrugged.\n\n\"Then what's bothering you?\" Bethany asked. Helen paused for a moment to gather her thoughts. That was interesting in itself because normally Helen just said whatever came to mind. She was a great analyst and a good system designer, but she wasn't someone you wanted in front of the clients unless they knew what to expect.\n\n\"I can't put my finger on it exactly,\" she finally said. \"It's just a lot of little things. Key paperwork is missing and getting answers to simple questions is so much harder than it should be.\"\n\n\"Why not give it a few days and let's see if it gets any better?\" Bethany asked. Helen nodded, but I could also see her frown. I decided to take a different tact.\n\n\"While you're here, why don't you tell me your initial thoughts on Tim and Sara-Jane?\" I asked. Bethany and I met with them both individually the day before, but I wanted to hear Helen's opinion. Her bluntness sometimes helped me clarify my own thoughts. Besides, her answers might help her to understand what was bothering her.\n\n\"It's only been a day and a half,\" Helen said, but then continued when I waited without comment. \"Tim is pretty bad. He's got a big power trip going and he is not thrilled with the changes you're making.\"\n\n\"I figured as much,\" I sighed, but Helen wasn't done.\n\n\"I think he's probably a pretty decent designer based on some of the specs I've seen of his, but he makes my management skill look spectacular.\"\n\n\"Oh, I'm sure yours aren't bad,\" Bethany put in kindly.\n\n\"Actually, Helen is a good workflow manager,\" I said honestly.\n\n\"It's the people part I don't do well with,\" Helen grinned. \"I'm not the most patient person and I don't deal well with overly sensitive people.\"\n\n\"We were talking about Tim,\" I said pointedly.\n\n\"Like I said, it's still too early to be certain,\" Helen replied. \"But from what I saw and what I overheard some of my new coworkers saying, he's pretty much lives by the old 'Squeaky wheel gets the oil.' saying. He's also not good under pressure, especially from clients.\"\n\n\"How about Sara-Jane?\" Bethany asked.\n\n\"She's much better,\" Helen replied, however something in her tone wasn't right.\n\n\"But?\" I prompted. Helen shrugged.\n\n\"I don't like her,\" she said, and then smirking added, \"But then again, it's not like I'm best friends with all of my coworkers anyway.\" I frowned. Helen might not be friends with everyone, but on the other hand, there were very few people she didn't like. She was actually a pretty good judge of character. It was more of an instinctual ability than a thought out one. \n\n\"Talk to me,\" I said. \"You wouldn't have brought up your dislike if it was simply personality.\" Helen looked at me for a moment before nodding.\n\n\"I'm not sure where to start,\" the slightly built woman sighed. \"Sara-Jane tends to favor specific clients, but she does a decent job of balancing.\"\n\n\"That's not so unusual,\" Bethany offered.\n\n\"I know,\" Helen sighed, and then took a moment to think before adding, \"I can't really explain it. She doesn't come across as insecure, but getting information out of her is damn near impossible! It's almost as if...\" She stopped speaking suddenly. Something had obviously hit her.\n\n\"What is it?\" I asked. Helen shook her head and refused to answer at first, so I prompted her again, \"Helen, tell me what your thinking.\"\n\n\"Okay, but you're not going to like it,\" she sighed. \"I hope I'm wrong, but the way Sara-Jane is acting reminds me of how Marlin acted toward the end.\"\n\n\"Who is Marlin?\" Bethany asked in confusion.\n\n\"I hope you're wrong!\" I groaned to Helen, ignoring Bethany for the moment. \"If you're not, then this could get ugly very quickly.\"\n\n\"Who's Marlin?\" Bethany asked again, her confusion turning to annoyance. \"What are you two talking about?\"\n\n\"Marlin was one of the guys involved with embezzling from our old company,\" I replied, watching Bethany face as what I said sunk in.\n\n\"Oh my!\" she said with raised eyebrows.\n\n\"Let's not jump to conclusions,\" I sighed. \"I don't want Sally the rumor queen to get hold of this! The three of us will just have to keep our eyes open and see if we can find anything else incriminating.\"\n\n\"Um Joe,\" Bethany said carefully. \"It may have nothing to do with anything else, but Barry came by earlier. He was supposed to pull Karl's old computer, save whatever was on it just in case, and then wipe it.\"\n\n\"And?\" I asked, afraid of the answer.\n\n\"He says someone already reformatted the drive,\" Bethany answered. I groaned again.\n\n\"It couldn't have been Karl,\" Helen put in. \"He never made it back to his desk after Brad fired him.\" The three of us looked at each other.\n\n\"It may be premature,\" I finally sighed. \"But I think it's time to bring Gerty in on this.\"\n\n\"Oh no!\" Helen cried. \"I was afraid you were going to say that?\"\n\n\"Who's Gerty?\" Bethany asked, looking surprised by Helen's reaction.\n\n\"She and her partner Tom run a small company that specialized in this type of situation,\" I explained. \"She was involved with the review of what went on at our last company. She's very good.\" I watched Bethany turn to Helen. I knew what the small redhead was going to say. I also knew that it was true, but we needed Gerty if what we feared was true.\n\n\"Probably one of the best in the country. Certainly the best in our area,\" Helen added, not sounding happy. \"She also happens to be one of the most off the wall characters you'll ever meet.\"\n\n\"Gerty is a bit of an oddity, but she's harmless enough,\" I added.\n\n\"Sure!\" Helen snorted. \"All the guys say that!\"\n\n\"Well, it's true,\" I shrugged.\n\n\"Oh come on!\" Helen cried. \"If she were a guy, she'd be up on sexual harassment charges every day!\"\n\n\"She's not that bad!\" I insisted. I liked Gerty, but then seeing Helen expression I sighed and admitted the truth. \"Okay, maybe she is that bad, but we need her.\"\n\n\"I know,\" Helen said with a shake of her head. \"I just hope she finally got over wearing those low cut blouses of hers! A woman with breasts like hers doesn't need to flaunt it quite so much!\"\n\n\"They are rather indecent,\" I said, and then seeing the expression on both women's faces quickly added, \"I meant the blouses!\" Bethany frowned and I fought hard not to laugh. I could just picture Gerty and Bethany meeting! Gerty was the biggest flirt I ever met and Bethany was...well Bethany.\n\n\"Are you sure we need to get her involved?\" Bethany asked.\n\n\"If Karl took part in something illegal, then the sooner the better. That's especially true since we're guessing that there is at least one more accomplice still working here.\"\n\n\"If we're not overreacting to shadows,\" Bethany reminded us. I nodded, but I still had a bad feeling about what was going on.\n\n\"I'll give her a call right now,\" I said. \"The sooner she comes and proves to us that we're overacting the better.\"\n\n\"Amen!\" Helen agreed. Bethany still didn't look thrilled, but she didn't disagree.\n\n***\n\n\"Joe!\" I heard someone call from the doorway. It could only be Gerty. No one else would sound so chipper five o'clock in the morning.\n\n\"Hello, Gerty,\" I smiled, taking one more drink of my coffee before standing. Gerty came in and hugged me close. Her large breasts seemed even bigger than I remembered.\n\n\"It is so good to see you again!\" Gerty smiled. \"It's not often I get a chance to visit a handsome, single man near my age who can appreciate my abilities.\"\n\n\"I see your still just as demur as always,\" Helen said sarcastically with a shake of her head. She and Bethany were the only others in the room.\n\n\"You like my blouse? I picked it up in Paris last month?\" Gerty grinned. It just barely covered her nipples.\n\nThe call the night before with Gerty went well, but I was surprised when she agreed to come the very next morning. Okay, surprised and dismayed. I was exhausted. Bethany and Helen didn't look much better. Gerty's first visit was always when the employees weren't at work. Gerty's team would probably already be out on the floor copying hard drives. They didn't have passwords, but that didn't matter.\n\n\"Gerty, this is Bethany,\" I said in introduction. Gerty looked at Bethany and then back at me before raising one eyebrow.\n\n\"I see that I may have been mistaken about you still being single?\" she asked me. Gerty never ceased to amaze me.\n\n\"I'm not sure,\" I answered honestly. Gerty frowned and turned back to Bethany.\n\n\"You can't possibly be thinking about not marrying him?\" Gerty asked.\n\n\"Pardon?\" Bethany said, obviously stunned.\n\n\"Oh dear,\" Gerty said with a loud sigh. \"You're one of those.\"\n\n\"What's that supposed to mean?\" Bethany asked, her confusion turning to annoyance. \n\n\"Do you have any idea how many women would kill for a man like Joe to look at them the way he looks at you?\" Gerty asked, ignoring Bethany question. \"If he looked at me that way, I'd...\"\n\n\"My relationship with Joe is none of your business!\" Bethany snapped, interrupting Gerty.\n\n\"Of course it is,\" Gerty insisted. \"I was planning on inviting him to dinner tonight and possibly to something even better after dinner. Now I'll have to eat alone.\"\n\n\"Joe is free to do whatever he likes,\" Bethany replied tartly.\n\n\"Very good,\" Gerty said, and then turned toward me and asked, \"Would you care to go out to dinner?\" I was pretty much stunned by the whole conversation.\n\n\"Aren't you and Tom partners?\" I asked, and then quickly added, \"I mean more than just business partners.\"\n\n\"Actually,\" Gerty sighed. \"Tom and I broke up a few months ago.\"\n\n\"I'm sorry to hear,\" I said. \"What are you going to do with the company?\"\n\n\"Why, split it of course,\" Gerty shrugged. \"It should all be finalized next month.\"\n\n\"Are you going to be okay?\" I asked.\n\n\"But of course,\" Gerty said, smiling once more. \"Now about dinner?\"\n\n\"Well, I don't have any plans,\" I said, looking at Bethany. She refused to meet my eyes. \"But maybe another time. It's been a crazy week or so.\"\n\n\"Perhaps next week?\" Gerty asked.\n\n\"Actually, next week may be good,\" I said. Bethany finally faced me as I added pointedly, \"I'll let you know on Saturday.\" Okay, maybe it was juvenile, but it also felt good. I was tired of waiting.\n\n\"Fine,\" Gerty said. \"Let me go check on my people and then we'll meet and go over the plan.\"\n\n\"I'll go with you to make sure your people don't miss a computer somewhere,\" Helen said.\n\n\"You aren't serious about going out with that tramp?\" Bethany asked as soon as they were gone.\n\n\"Jealous?\" I teased. It was definitely the wrong thing to say based on Bethany's reaction.\n\n\"I'm sorry I asked!\" Bethany snapped and turned to leave. I grabbed her shoulder and pulled her back around. Her eyes were flashing angrily, but that was okay because so were mine.\n\nI kissed her hard enough to bruise our lips. She fought at first but I ignored it and thrust my tongue into her mouth. A moment later Bethany stopped fighting and was kissing me back just as passionately. I moved one hand to her breast and squeezed. Bethany moaned into my mouth. I brushed her nipple with my thumb before finally breaking the kiss.\n\n\"Bethany, you are the woman for me,\" I said, still angry. \"I've told you it! Everyone in the office knows it and even Gerty's recognized it the first time she saw us together!\"\n\n\"But she...\" Bethany began. I cut her off.\n\n\"She's Gerty,\" I snapped. \"She's a flirt and a tease, but she's also a very smart woman. She didn't ask me out because she wants to date me! She asked me out so that you'd have to face the possibility.\"\n\n\"Maybe,\" Bethany said grudgingly. \"But I think she would have been happy if you agreed.\"\n\n\"And I may,\" I said in annoyance. \"If you decide to give up on us.\"\n\n\"I knew it!\" Bethany cried angrily.\n\n\"Be angry,\" I sighed, letting my own anger go. \"Just be sure to know why you're angry.\"",
        "\"What's that supposed to mean?\"\n\n\"You figure out!\" I sighed and turned to leave. I stopped just before the door and added, \"I love you, but I'm not willing to let it stand at that. I want more. I want you. I want to wake up with you in the morning and go to sleep with you every night.\"\n\n\"Can't we just...\" she began, but I cut her off again.\n\n\"No, we can't,\" I said succinctly. \"We'll talk on Saturday.\"\n\n***\n\n\"So, how was your night?\" Bethany asked Judy as they both stood in front of the coffee pot waiting for the machine to finish brewing. It was Friday and Bethany hadn't slept well the night before at all, but she still forced herself to get up early. This was the last day before Brad returned and there was still so much to do.\n\n\"Great!\" Judy grinned. \"I finally got Bradley to use the camera! I even took a couple pictures of him. Want to see?\"\n\n\"You are so bad!\" Bethany laughed. She also blushed slightly. She didn't think of herself as a prude, but compared to some of the stories Judy told her, Bethany might as well have been a nun! \n\nOver the last week the two had become good friends. So good in fact, that Bethany was surprised. It helped that they had Bradley and Joe to talk about. Judy was just as in love with Bradley as she was with Joe, but the younger woman seemed to have no problem with the relationship being so serious.\n\n\"So, when is the wedding?\" Bethany teased her friend.\n\n\"Oh, he's going to ask me right after you and Joe finally figure things out,\" Judy replied seriously.\n\n\"Plan on waiting that long, do you?\" Bethany asked in reply, trying to keep the mood light.\n\n\"Not too long,\" Judy replied. \"After all, you only have one more day to decide.\"\n\n\"I know,\" Bethany sighed, no longer feeling like joking. \"I had problems sleeping last night because I couldn't stop thinking about it.\"\n\n\"Well, that was a waste of time,\" Judy said with a shake of her head.\n\n\"Pardon?\" Bethany asked in surprise.\n\n\"Bethany, you've already thought about this as much as humanly possible,\" Judy replied. \"It's not about understanding. It's about faith.\"\n\n\"Faith?\" Bethany asked, sounding confused.\n\n\"Not faith in God,\" Judy explained. \"Faith in Joe. You have to trust him and you haven't trusted a man in so long that it scares you to death.\"\n\n\"I think...\" Bethany began, but Judy cut her off.\n\n\"You think too much!\" she said, smiling to take the sting out of her words. \"Don't tell me what you think. Tell me what you feel!\" Bethany looked at her friend silently for a moment.\n\n\"I love him,\" she finally sighed.\n\n\"Enough to trust him with your heart?\" Judy asked.\n\n\"Yes! No! Maybe,\" Bethany said, surprising herself as the tears started to well up in her eyes.\n\n\"That's the crux of this,\" Judy sighed. Bethany confusion and fear were so obvious that Judy almost felt sorry for her friend, but that wouldn't help Bethany face what she had to do. \"You have to decide to trust Joe or not.\"\n\n\"I'm trying,\" Bethany mumbled.\n\n\"Trying isn't enough,\" Judy said unmercifully, but she knew it was for Bethany's own good. \"You have to give him your heart and trust him. If you do, he'll give you his. That's no easy feat for Joe.\"\n\n\"I know,\" Bethany said softly.\n\n\"But if you really can't give him your whole heart, then you have to let him go,\" Judy said sadly.\n\n\"I know that too,\" Bethany replied, even softer. A single tear fell down her cheek.\n\n\"There you are!\" Helen said as she walked into the kitchen. \"Joe's been looking for you. He wants to talk to us ASAP.\"\n\n\"Tell him she'll be there in a minute,\" Judy said. Helen frowned as she realized she interrupted something. Bethany turned her back toward the redhead. Helen raised an eyebrow pointedly at Judy. She liked Bethany and hoped the woman was okay. They'd worked closely together this past week and it turned out to be a better experience than Helen expected. \n\n\"We're just waiting for our morning coffee,\" Judy added with a look of her own. Helen nodded in acceptance if not understanding.\n\n\"I'll let him know,\" she said and left. She went back to Joe's office. He was sitting at his desk, thumbing through papers.\n\n\"Bethany is getting a cup of coffee. She'll be right in,\" Helen said.\n\n\"Good,\" Joe said, without even looking up. \"I need to talk to you both. I'd like to do it before Gerty drops by this morning.\"\n\n\"She's not done with her investigation already?\" Helen asked in surprise.\n\n\"No, but she has some preliminary details she wants to share with us,\" Joe replied. \n\nHelen sat down at one of the chairs and started jotting down notes while they waited for Bethany. She was working on a new specification template for the product development area. Joe had given her and Bethany the task of reviewing all of the specification templates. The two women spent a few hours the day before meeting with the designers in each area and getting their input. It was interesting. Helen liked the way Bethany kept the conversation moving during the meeting. She didn't let anyone get too bogged done in details. \n\nThey decided that Bethany would handle the business portion of the layout while Helen took care of the technical. They realized after the meetings that all of the different areas couldn't have identical layouts, but they were trying to keep them as uniform as possible. \n\n\"Sorry I took so long,\" Bethany said as she walked in. \"But I bumped into Ms. Hannon in the lobby.\"\n\nHelen saw Gerty follow Bethany into the room and smiled. The two women did not like each other. That was obvious. Everyone called Gerty by her first name, everyone but Bethany.\n\n\"Yes, and Bett was kind enough to escort me here,\" Gerty replied. Helen saw Bethany flinch slightly at the name. Trust Gerty to find a way of retaliating for Bethany's forced professionalism. Bethany obviously hated the nickname Bett, yet she refused to say anything about Gerty's use of it.\n\n\"Good morning,\" Joe said to both women.\n\n\"Sorry about having to meet so early, but this is the only time I have all day. I have a meeting across town in an hour,\" Gerty said, obviously sounding rushed.\n\n\"That's okay Gerty,\" Joe replied. \"Why not just tell us what you've found so far and we can set up a longer meeting next week. I want you to meet Brad anyway. He should be back from vacation.\"\n\n\"Oh good!\" Gerty smiled. \"I've always wanted to meet him. We go to the same club. He has a very good reputation as a businessman and an equally good one as a golfer. I hope I can get him to play a round with me.\" As always with Gerty, it sounded like she meant more than just golf. \n\n\"Over Cherie's dead body,\" Bethany mumbled just loud enough for Helen to hear. The small woman fought hard to suppress a laugh. \n\nJoe hadn't heard what Bethany said, but he exchanged a look with her and they both smiled. Gerty was something else, but even she would be hard pressed to deal with Cherie. Joe thought that from Bethany expression she was thinking something similar, only in her case, she was probably hoping to witness the encounter.\n\n\"So, what have you found out so far?\" Joe asked Gerty. \"And nothing would be a very satisfactory response.\"\n\n\"Come now, Joe. You don't think I'd come by this early if my people found nothing?\" Gerty asked.\n\n\"No,\" Joe sighed. \"But I was hoping.\"\n\n\"Well, one of your employee's if having an affair with her brother in law, while another is wrestling with the fact that he's probably gay. A third is working hard on a novel during lunch, but I wouldn't worry about loosing her. My people say that it's not very good.\"\n\n\"Gerty!\" Joe said in exasperation. The big-breasted woman laughed causing her chest to shake enough that her blouse had problems containing everything. Helen shook her head. It was definitely a sight to see. Bethany shook her head and looked away. Joe did his best to do the same, but he was a man after all.\n\n\"Okay,\" Gerty finally said between laughs. \"I just love what people will do and say on their computers. You tell them that they're company property and can only be used for company business, but they never listen.\"\n\n\"So, tell me about Sara-Jane and Tim,\" Joe asked.\n\n\"So far, other than staying late one day and logging onto a porn sight, Tim is clean,\" Gerty replied. \"In fact, I'm not even sure he did that on purpose.\"\n\n\"That's good news,\" Joe replied, and it was. Of course, that didn't help with the fact that Tim was just so inept. Gerty saw his expression and decided to give him a little more information on Tim. It wasn't something she normally did, but she liked Joe and he obviously already knew he had a problem with Tim.\n\n\"We don't normally comment on the actual business of our clients, but one of my people suggests that you get someone involved with the Anderson project. Tim is close to making some agreements that you might want to review.\"\n\n\"We're supposed to be meeting on it with him at ten this morning,\" Bethany sighed. \"Helen and I have already reviewed most of his projects. You're going to have to do something about him soon.\"\n\n\"Not me,\" Joe replied. \"You.\"\n\n\"Pardon?\" Bethany asked. Joe sighed.\n\n\"That's what I wanted to talk to you and Helen about earlier,\" he said. It should probably wait until Gerty was done, but now seemed like a good time to tell them.\n\n\"I've decided to make you the vice president in charge of customer support,\" he said to Bethany, and then turned to Helen and added, \"And you'll be the assistant vice-president under her.\" The two women looked at each other.\n\n\"You're serious,\" Bethany said with a shake of her head.\n\n\"Of course,\" Joe shrugged. \"I told you I was going to promote you. You haven't come up with an area you'd like to run and this is where I need you most.\"\n\n\"It might just work,\" Bethany said grudgingly. \"I can deal with the business people and paperwork while Helen keeps the technical area moving in the right direction.\"\n\n\"That's what I thought,\" Joe nodded. \"I put you together this week to see if you were compatible. You seem to work well as far as I can see. Do either of you have any issues with each other?\" Bethany shook her head.\n\n\"I think that's a great idea!\" she said enthusiastically, but then she looked back at Joe and added, \"I do have one question.\"\n\n\"Helen, we'll talk money after Gerty is done,\" Joe said with as grin.\n\n\"Okay, two things,\" Helen laughed. \"Does product development fall under our control?\"\n\n\"In the long run, no,\" Joe said. \"But for now you'll have to help out. You are the only two I trust to put in place right now. You'll have to put your heads together to help me decide if we need to hire from outside the company or promote someone else.\"\n\n\"I like to promote from within,\" Bethany frowned.\n\n\"Not Tim!\" Helen said emphatically.\n\n\"I don't think you have to worry about that,\" Bethany smiled, but then she grew more serious and added, \"In fact, we may have to fire him if he doesn't shape up.\"\n\n\"Agreed,\" Helen sighed, and then she forced herself to ask, \"How about Sara-Jane?\"\n\n\"Not likely,\" Bethany sighed. \"She's good, but I agree with you initial assessment of her. She not particularly likable and I don't trust her.\"\n\n\"That's a good thing,\" Gerty put in, drawing the other three's attention back to her. \"Because it looks very likely that this Sara-Jane has some crooked deals going with a couple of your clients. Kickbacks and such.\"\n\n\"Shit,\" Joe sighed. He knew it was coming, but he had hoped. \"Was Karl involved?\"\n\n\"In the kickbacks? No,\" Gerty replied. \"However, he was aware of what was going on.\"\n\n\"What?\" Joe asked in confusion. \"If he knew what didn't he say something?\"\n\n\"Were they screwing each other?\" Helen asked with her normal bluntness. Gerty shook her head.\n\n\"Blackmail,\" Bethany said. It was the only explanation left.\n\n\"Exactly,\" Gerty smiled. \"Karl spent half his day in the office working on his privately owned website.\"\n\n\"What kind of website?\" Bethany asked.\n\n\"About what you'd expect,\" Gerty shrugged.\n\n\"A sex website?\" Bethany asked.\n\n\"Right again,\" Gerty laughed. \"Some of the stuff is actually pretty good, but then again some of it isn't.\"\n\n\"What's that supposed to mean?\" Helen asked.\n\n\"Let's just say that I'm not sure of the ages of some of his models,\" Gerty replied, no longer laughing. \"In one or two cases, I'd be willing to bet a decent amount of money that the models are underage by quite a margin.\"\n\n\"That bastard!\" Joe growled. \"We have to do something!\"\n\n\"Already done,\" Gerty said seriously. \"I turned over what I found on his computer to the police last night. Karl should be getting a visit sometime today.\"\n\n\"I thought his hard drive was reformatted?\" Bethany asked in confusion.\n\n\"It was,\" Gerty replied. \"But whoever did it, and I'm guessing it was Sara-Jane, was in a rush. They did a quick format instead of a full format. It was ridiculously simple for my people to access the data.\"\n\n\"What do we do about Sara-Jane?\" Helen asked.\n\n\"Why fire her of course,\" Gerty shrugged. \"It will take a while for us to complete our investigation, but we already have enough for her to need a very good lawyer, if it comes to that.\"\n\n\"If it comes to that?\" Bethany asked. Gerty didn't answer. Instead she turned toward Joe. He was frowning.\n\n\"I think we'll press charges, but I want to talk to Brad first. Our clients are already aware of the changes that are happening. Judy says that some of her sales calls are as well. I don't know if it makes sense to add another lawsuit,\" he sighed, but then he smiled and added, \"Although the news about Karl's blackmail will give us the leverage we need to get him to drop his lawsuit.\"\n\n\"More than that,\" Gerty smiled.\n\n\"Maybe,\" Joe said, but he nodded in agreement.\n\n\"Well, that's all I have as of right now,\" Gerty said, standing. \"Unless of course you want to hear about the guy who orders a lot of women's clothes in his rather large size or the woman whose has fun on one of the more well known dating services?\"\n\n\"Gerty, I'll set something up with your secretary for next week,\" Joe sighed. Gerty laughed and said her good byes.\n\n\"How do you want to handle this?\" Bethany asked Joe once Gerty left.\n\n\"Can I be there when you fire Sara-Jane?\" Helen asked before Joe answered.\n\n\"You really don't like her!\" Joe laughed. Helen shrugged. It was the truth.\n\n\"Have you talked to Bradley about our promotions?\" Bethany asked.\n\n\"I told him about it last night,\" Joe replied. \"He didn't have a problem with it, but we should probably meet with him before we let everyone else know.\"\n\n\"We need to tell Judy and Clark as well,\" Bethany said.\n\n\"Actually they're both getting promotions of their own,\" Joe smiled. \"Judy is going to be made a senior vice president and Clark a vice president.\"\n\n\"When?\" Bethany asked.\n\n\"This morning,\" Joe replied. \"Bradley and I will meet with Judy, after which I will leave them to their mushy youthful behavior and go let Clark know.\"\n\n\"They're not that bad!\" Bethany laughed.\n\n\"Of course they are,\" Helen grinned. \"But there is nothing wrong with that!\"\n\n\"Afterward,\" Joe said, growing serious. \"It's probably time to deal with Sara-Jane and then have a staff meeting.\"\n\n\"Makes sense,\" Bethany sighed. \"Just make sure to have security there with you.\"\n\n\"And me!\" Helen cried.\n\n\"Helen, you know that you can't be part of this,\" Joe said with a shake of his head.\n\n\"Okay,\" she sighed. \"But you don't mind if I hover behind the security guards?\"\n\n\"Hover away,\" Joe laughed.\n\n\"You shouldn't do this alone,\" Bethany frowned. \"I'll sit in with you. I've done it before as the human resources representative.\"\n\n\"Thanks,\" Joe replied. Bethany nodded, remembering the lack of sleep from the night before. It was going to be another long day. Yet, instead of feeling tired and stressed, she found herself smiling.\n\n\"Okay, now that you've got that settled,\" Helen grinned. \"About my raise.\" Joe and Bethany exchanged a look. This was going to be interesting.\n\n***\n\n\"Okay, I know that by now, all of you have heard that Sara-Jane is no longer with us,\" I said. The room was packed and there were a lot of concerned faces.\n\n\"It's been a crazy couple of weeks, but things should start settling down after today.\"\n\n\"So, we're not going to have layoffs anytime soon?\" someone called from the back.\n\n\"Layoffs?\" I asked in surprise. \"Is that what you guys think is going to happen?\"\n\n\"It's a rumor that going around,\" the same person said. I looked at Sally.\n\n\"I didn't start this one!\" she said defensively. This caused quite a few people to laugh.\n\n\"Well, there are no planned layoff at this time,\" I said. \"In fact, we are planning to hire a couple of new people in the next month or two.\" This seemed to satisfy more than just the speaker.\n\n\"Why did you fire Sara-Jane?\" a woman asked.\n\n\"I'm not at liberty to say,\" I replied, and then quickly added, \"But what I can say is that there are a few other changes that need to be announced. I hope these will be greeted positively.\"\n\n\"First off, Judy has been promoted to senior vice president of Sales and Marketing,\" I said and there was some polite clapping. \"Also, I recently promoted Clark to Director of Implementation. This week I restructured the department and that role no longer exists. Instead, he now has the title of vice-president of Implementations.\" Again, there was polite clapping. So far, the changes I made were really in title only. The next one should be interesting.\n\n\"I've also promoted Bethany to vice president of Customer Service with Helen as her assistant vice president,\" I said. There was a stunned silence for a moment, and then just about every one in the room clapped.\n\n\"It's about time!\" Sally joked. \"She's been half running the company for years already.\" There was laughter as Bethany blushed. I did notice that Tim didn't look particularly happy, but he was Bethany's problem now.\n\n\"What about product development?\" someone asked.\n\n\"Well, the management team already met on this issue Wednesday,\" I answered. \"There have been changes and a lot more of them will be coming soon. We're shifting the focus quite a bit, but I think you'll like what we're going to do with it.\"\n\n\"To begin with, we are going to focus the next two months on correcting all of the known bugs,\" I continued. There were smiles on people's faces from both Sales and Marketing and Implementation areas. They were both tired of dealing with the problems left over from product development. Of course, the people from product development didn't look particularly happy.\n\n\"After that, we're going to focus on finishing the next release by the end of the year,\" I added. \"Some of you may think that that leaves us plenty of time, but we have quite a list from the Sales and Marking area and the Implementation area that we want to add to the next release.\"\n\n\"Anything interesting?\" Simon, one of the lead designers in the product development area asked.\n\n\"Oh, there's one or two that you'll find interesting,\" Judy put in with a grin. \"In fact, some of them you and I have had conversations on a couple of times over the years. One particularly comes to mind.\"\n\n\"Not...\" Simon began, but Judy cut him off.\n\n\"Yes!\" she laughed.\n\n\"Halleluiah!\" Simon cried. I laughed. I didn't know him very well, but Judy had positive things to say about Simon. He was one of the people I had in mind for vice president of Product Development, but I needed to see how he was with people. The next couple of months would tell.\n\n\"So, who is going to be in charge of product development?\" someone else in the area asked.\n\n\"I don't know yet,\" I answered honestly. \"I'll handle it now with help from the rest of the management team, but eventually I do want to put someone in the role.\"\n\n\"One of the new hires?\" the same person asked.\n\n\"Maybe,\" I shrugged. \"Although all of the management team seems to be in agreement that we'd prefer to promote from within.\"\n\n\"Look, this company is growing. There are going to be plenty of opportunities for career advancement for those of you who have the interest and the ability. For instance, I expect that by the end of the year, Helen will not be the only assistant vice president.\"",
        "\"You can be sure of that,\" Judy put in. I smiled. Her first assistant vice president would probably be named in a month or so. There were two possibilities. She was leaning toward one, but wasn't ready to commit yet. \n\n\"Okay, so we've talked about promotions and career opportunities,\" I said with a smile. \"Now let's talk about the current state of the company.\"\n\nI spent the next half hour telling everyone our current status and the direction I planned to move us over the next couple of years. I took questions for another half hour. I normally didn't like to make the staff meetings long, but this one was too important to rush. I needed them to buy into my vision. That's always the first and most important step in leading. Give your employees a vision they buy into and can commit to.\n\nI thought it went pretty well. The management team came back to my office to meet briefly afterward.\n\n\"That went well,\" Bradley said. He was at the meeting, but refused to have any part in it.\n\n\"Thank you,\" I smiled. \"I tried to be as honest as I could.\"\n\n\"I was sold,\" Clark smiled. \"I'm already trying o figure out who should be assistance vice president in my area.\"\n\n\"Take your time. You're still settling into the position,\" I sighed. \"Besides, you've got new people I transferred from product development and customer service to get to know. One of them may be who you're looking for to fill the job.\" Clark nodded in agreement.\n\n\"Let's get together in a couple of hours. After we have a chance to meet with our people,\" I said. Everyone nodded and left. The next few hours flew by and they were all back in my office almost before I realized it. \n\n\"So, how are people reacting?\" I asked.\n\n\"Good,\" Judy said. \n\n\"There is one concern that was brought to my attention,\" Clark said. \"You know, we've all been so busy that we forgot the fact that we're not even sure if Joe and Bethany will still be here next week. Brad is due back on Monday and he may not rehire you both.\"\n\n\"Oh shit!\" Helen put in. \"I totally forgot about that possibility!\"\n\n\"Don't worry about it,\" I said. \"Brad already knows what's going on. He'll take Bethany and I back.\"\n\n\"He'd better,\" Bethany grinned. \"Or Cherie will kill him!\" Judy and Bradley exchanged a look. Judy shrugged and Bradley nodded.\n\n\"So, I guess you two figured it out,\" Judy grinned.\n\n\"Please!\" I laughed. \"I can't believe it took me as long as it did!\"\n\n\"Over the weekend, right?\" Bradley asked. I nodded and he laughed. \"I knew it! You came in on Monday like a madman. You made so many changes I could hardly keep them straight!\"\n\n\"How did your father take them?\" I grinned, knowing that Bradley must have been on the phone with Brad.\n\n\"At first he was so crazy that I'm guessing that mother had to threaten him with divorce to keep him from cutting the vacation short!\" Bradley laughed. \"But eventually he calmed down and listened enough to see what you were doing. Some of the things you occasionally did after that set him off again, but he seems to like what you're doing in general.\"\n\n\"Of course, he doesn't know about the promotions,\" Bradley added. \"I'm leaving that for you to tell him on Monday.\"\n\n\"You're going to lie to him?\" Bethany asked in surprise.\n\n\"Of course not!\" Bradley grinned. \"I'm just not going to answer the phone. It will drive him mad!\"\n\n\"Bradley's pushed back his return to school until the middle of next week so that he can be here to see how his father reacts,\" Judy smiled.\n\n\"Oh, and I suppose it has nothing to do with the fact that you're flying out in that direction for a sales call?\" Bethany asked.\n\n\"It might,\" Judy said, laughing.\n\n\"Clark, do you ever get the feeling that you're missing something?\" Helen asked pointedly.\n\n\"Not me,\" Clark answered with a grin. \"I make sure to touch base with Sally at least once a day.\" This caused the whole group to laugh.\n\n\"You know, we are going to have to do something about the 'Queen' of the rumor mill eventually. She's good at what she does, but we can't have her spreading these crazy rumors,\" I sighed.\n\n\"Oh, I've already got that figured out,\" Bethany smiled. \"She's going to be your new assistant.\"\n\n\"What?\" I cried in surprise. \"Are you crazy?\"\n\n\"Actually, Sally is probably a good fit,\" Judy put in, still smiling.\n\n\"You're both insane!\" I cried.\n\n\"Okay, I can see this is going to take a little convincing,\" Bethany frowned and then turned to Helen and asked, \"Can you please go get Sally?\" The redhead nodded and left.\n\n\"First of all, I do not need an assistant,\" I snapped. \"And second of all, if I did, it wouldn't be Sally.\"\n\n\"Of course it will be,\" Bethany smiled. \"A CEO's assistant needs two important skills out side of intelligence. First she needs to be extremely organized.\"\n\n\"And you can't argue that Sally isn't that,\" Clark put in, although he didn't look anymore convinced of Bethany choice for my assistant than I was.\n\n\"Fine, she's organized,\" I growled. \"But...\"\n\n\"And the second thing she needs,\" Bethany said, overriding me. \"Is the ability to know the pulse of a company. She needs to be aware of what's going on so that she can keep the CEO informed. You have no idea how many times over the years I've had to sit Brad down and reconnect him with the people under him. Sometimes you high and mighty CEO types lose the forest for the trees.\"\n\nI wanted to argue the point, but in this area, Bethany was actually more qualified than me. There was no arguing that she was an exceptional assistant. Better than I'd ever met before. If she said that these things were important, then they were. Yet, there were other things that had to be important as well.\n\n\"Maybe you're right,\" I said grudgingly. \"But what about loyalty and not letting sensitive details about what I'm working on getting out?\"\n\n\"If Sally wasn't the loyal type, I wouldn't have picked her,\" Bethany shrugged. \"And she's too smart to spread rumors about those types of things you're worried about. In fact, I know for a fact that she frequently does her best to squelch rumors that shouldn't be spread or are simply untrue.\" I opened my mouth to argue some more, but Helen returned with Sally.\n\n\"Hello Sally,\" Bethany said, taking the lead.\n\n\"Hello,\" the woman replied.\n\n\"Tell me, how do you think the meeting went?\" Bethany asked.\n\n\"Pretty good,\" Sally replied. \"People like the vision Joe set out for them.\"\n\n\"Any problems we should know about?\" Clark asked.\n\n\"It's too early to tell,\" Sally shrugged. \"Although I'm betting you'll have some problem with Tim. More than one person mentioned his attitude after the meeting. In fact, I'm guessing he'll be in either this office or Bethany's as soon as he works up the nerve.\"\n\n\"He'd better hope he goes to Bethany,\" I said with a shake of my head. \"First of all he reports to her now.\"\n\n\"And second of all, I don't have the time to deal with someone as inept as him. If he comes to me I'll probably fire him. We've got too many changes going on to let him screw things up!\"\n\n\"Do me a favor Sally. Make sure he comes to me,\" Bethany sighed. \"I'd like to give him a chance. He's been with the company a lot of years.\"\n\n\"It's your call, but I'd get rid of him,\" I shrugged. Bethany nodded. She had hoped to deal with Tim on Monday, but he obviously wasn't going to wait. \n\n\"In fact, after we leave here, let him know I want to see him,\" she told Sally.\n\n\"Sure,\" Sally answered.\n\n\"So what are the odds on who takes over product development?\" Helen asked, deciding to help Bethany out. \n\n\"Well, again, it's pretty early,\" Sally laughed. \"But right now it's about a thirty-three percent chance that we'll have to hire outside of the company, a thirty-three percent chance that Simon will get it and the final thirty-three percent is that someone else internal will get the job. Actually Helen, you're the next closest to Simon.\"\n\n\"I don't want the job!\" Helen frowned. \n\n\"I know,\" Sally laughed. \"And I think that's why you're not the favorite, but some people still think it's likely.\"\n\n\"Well, it's not!\" Helen snapped. Sally just shrugged.\n\n\"And who is favored to take over Bethany's role as the CEO's assistant?\" Judy asked. Sally frowned.\n\n\"That's actually a hard one to figure out,\" she said.\n\n\"What's the early money in the pool say?\" Clark grinned.\n\n\"Well, I'm the favorite by quite a margin,\" she said. \"But I think Bethany picking me in the pool has a lot to do with that.\"\n\n\"You took part in a pool?\" I asked Bethany. She shrugged at first, but then answered.\n\n\"I'm always willing to bet on a sure thing,\" she grinned.\n\n\"But...\" I began, but cut myself short. After all, Sally was right in front of me.\n\n\"It's okay,\" Sally shrugged. \"I figured that you wouldn't want me. That's what makes this hard.\"\n\n\"It's not you,\" I said carefully. \"I don't want an assistant at all.\"\n\n\"That's just silly,\" Sally said bluntly. \"You'll need an assistant.\"\n\n\"Is there a pool and odds for that?\" I asked, a little sarcastically.\n\n\"No,\" Sally snorted. \"That's just common sense. But if you want odds, then I'd say that there is less than one percent change of you not having an assistant by month's end.\"\n\n\"Am I talking to a potential assistant or a bookie?\" I grumbled. Sally laughed.\n\n\"I'm not a bookie,\" she answered between laughed. \"I don't take a percentage.\"\n\n\"So, you just run the office pool for kicks?\" I frowned.\n\n\"Sure,\" she said, slowly stopping her laughter. \"That and moral. You'd be amazed how something as simple as a pool for when someone will have a baby affects people.\"\n\n\"Do you want the job?\" I asked, surprising myself.\n\n\"I'm not sure,\" she answered, surprising me.\n\n\"Why?\" I asked.\n\n\"Well, for starters, I like running the company pools,\" she grinned. \"If I take the job I'll have to hand it off to someone else.\"\n\n\"Who?\" Helen asked, obviously curious. \n\n\"Probably Claire,\" Sally replied. I shook my head.\n\n\"Back to your reasons why you're not sure you want the job,\" I said pointedly. Sally smiled.\n\n\"It's a lot of responsibility,\" she said, but her tone didn't make it seem like she was really worried about that.\n\n\"Bull,\" I said succinctly. Instead of being offended, Sally laughed.\n\n\"Okay, I guess the truth is that I'm still not sure if we complement each other,\" she answered.\n\n\"You do,\" Bethany said.\n\n\"What you mean to say is that we should,\" Sally said. \"But sometimes should and do aren't the same.\"\n\nI looked at Sally carefully. She really wasn't what I expected as an assistant, but I suddenly realized that she was qualified for the job. She was impressing me during the conversation and she already had Bethany's, not to mention the other managers' approval. \n\n\"How about a trial period?\" I found myself asking. \"You'll take the job for two months and afterward, if we both agree, you'll be promoted. If not, you go back to your old job with no hard feelings.\"\n\n\"A month should be long enough,\" Sally replied. \"We'll probably both figure it out quickly enough.\"\n\n\"Deal,\" I said, surprising myself. \"You'll start on Monday.\"\n\n\"I'll start today,\" she replied. \"I'll need this weekend to get organized. Just let me go back to my desk and get someone to fill in and I'll be back. I'll want to meet with you and Bethany when it's convenient.\" I watched Sally leave and then turned to the others with a raised eyebrow.\n\n\"This should be fun to watch,\" Judy grinned.\n\n\"I'm regretting my decision already,\" I groaned.\n\n\"Enjoy the feeling while it lasts,\" Bethany put in. \"I'm willing to bet she'll be indispensable to you within a week!\"\n\n***\n\nBethany grinned as she made her way back to her office. Sally was going to work out well. Joe would be happy once he got used to her. Bethany barely sat in her chair when Tim walked in. He didn't bother to knock. Bethany took a deep breath. This wasn't going to be fun, but it was part of the new job.\n\n\"What can I do for you Tim?\" she asked calmly.\n\n\"I want to be an assistant vice president,\" he said without preamble.\n\n\"Okay, I'll take it under advisement,\" Bethany said, hoping to push off a confrontation. She figured it was impossible based on Tim's body language. He was leaning aggressively over her desk. \n\n\"You'll need to do more than that!\" Tim snapped.\n\n\"Pardon?\" Bethany said, feeling a sharp spike of anger. She promised herself that would not loose her temper the first day as a vice president. She could handle Tim without going there.\n\n\"Karl is gone and so is Sara-Jane!\" he continued. \"You're nothing more than a gloried secretary! You need me! I'm the only thing holding this department together!\"\n\n\"Tim,\" Bethany said carefully. \"I know it's been a couple of difficult weeks for you, so I'm going to give you the benefit of the doubt.\"\n\n\"What is that supposed to mean?\" he asked angrily.\n\n\"I'm going to give you a chance to leave now and I'll forget what you just said. If you do, I'll set up a meeting for Monday morning and we can discuss your roll in the future of the company.\"\n\n\"You don't seem to understand,\" Tim said with a roll of his eyes. He was treating her as if Bethany was stupid. It bothered her, but Bethany was confident enough in her intelligence not to let it drive her to do or say something stupid. Tim didn't seem to be able to do the same. \"Either you promote me or I leave you with that psycho Helen to handle the department by yourselves!\"\n\n\"If that's what you think is best,\" Bethany said smiling sweetly.\n\n\"I'm not kidding!\" he growled.\n\n\"I'm aware of that,\" Bethany sighed.\n\n\"You won't last a month without me to keep things going!\" Tim snapped. Bethany took a moment to look at Tim carefully. She was amazed to see that he really thought what he was saying was true. Here she was trying to find a way of saving his job for him and he was threatening her! She started to get angry, but instead found herself fighting against laughing.\n\n\"Is everything okay in here?\" Sally asked from the doorway. Tim's voice was pretty loud.\n\n\"Yes, we're fine,\" Bethany replied. \"Do me a favor and close the door on the way out.\"\n\n\"Sure,\" Sally said, but then she looked at Tim pointedly and added to Bethany, \"Just call me if you need me to do anything, like call security.\"\n\n\"We'll be fine,\" I smiled. Sally nodded and left, but not without giving Tim one more meaningful look. Tim calmed slightly.\n\n\"Tim, this glorified secretary is now in charge of the area,\" Bethany began in a no nonsense tone of voice. \"And since you think you've had enough time to judge me as a boss, then I think it only fair that I give you my initial opinion of you and your work habits.\"\n\n\"You are a solid analyst and a reasonable good system designer. If you left we'd miss you,\" she continued, confusing Tim by her kind words. That confusion only lasted until Bethany next words. \"However, you are a poor manager and rather inept at setting priorities. I doubt you'll ever develop into a manager of any sort, much less an assistant vice president. Although, I'm certain willing to consider it in the future if you find a way of changing my opinion.\"\n\n\"That's your opinion!\" Tim said, but he didn't sound as confident as he had before. \"I'll just have to talk to someone else!\" He suddenly realized that glorified secretary or not, she held his career in her hands. She needed him, but she obviously didn't realize it, and crazy or not, if she fired him, he was out of a job.\n\n\"Actually, it's pretty much the opinion of the entire management team,\" Bethany said serious. \"However, mine is the only one that matters in this case. Whether you like it or not, I'm your new boss. Accept it or move on. If it were up to Joe, you'd already be out the door.\"\n\n\"I'll think about it,\" Tim said obviously warring within himself. \n\n\"Good,\" Bethany replied. \"You're done for the day. Go home and try and figure out what you want. Come back on Monday and let me know.\"\n\nTim started to open his mouth, but something in Bethany's expression must have warned him. He stood and made his way toward the door.\n\n\"Tim, one more thing,\" Bethany said as he reached for the knob. \"If you do come back I expect you to apologize to Helen and I for your unprofessional words and behavior.\"\n\nTim left without a word and only slammed the door enough to rattle the hinges, not rip the door off of them, but it was a close thing. Helen knocked and entered a few moments later.\n\n\"Sally says that Tim made an ass out of himself,\" she began without preamble.\n\n\"I expect we'd better start planning on losing him,\" Bethany sighed. \"I gave him a choice, but I doubt he'll last very long even if he comes back on Monday. He seems to have a problem working for a glorified secretary.\"\n\n\"He didn't say that?\" Helen asked in amazement.\n\n\"That wasn't really half bad. He called you 'psycho' Helen,\" Bethany grinned. Helen looked at her only long enough to realize she was telling the truth and then burst out laughing.\n\n\"I hope he does come back!\" she laughed. \"I have a couple of project he'll just love!\" Helen continued to laugh as she added, \"Better yet! Maybe we should transfer him to product development? He'll love all of the bug work they have planned for the next couple of months.\"\n\n\"It wouldn't really be a punishment for Tim. He's so delusional that he'd only end up convincing himself that he was transferred to be groomed for the vice president job there,\" Bethany replied, joining Helen in her laughter. They were interrupted by the phone. Bethany picked it up and answered.\n\n\"Hello,\" she said, not bothering to give her name since it was an internal call. She listened for a moment before nodding and saying, \"Okay, I'll be right there.\"\n\n\"What's up?\" Helen asked as Bethany hung up.\n\n\"Nothing really,\" Bethany shrugged. \"Sally found someone to cover the phones. She wants to meet with Joe and me now.\"\n\n\"Well then,\" Helen grinned. \"You'd better hop to it! You don't want to keep Sally waiting.\" Bethany rolled her eyes.\n\n\"I'll see you in a little while,\" Bethany said. \"We need to figure out how to handle the possibility of losing Tim. We may need to have someone else shifted into the area. Either that or hire someone new.\"\n\n\"I'll think about it while you're gone,\" Helen replied, and then changed the subject. \"By the way, did Judy talked to you about going out for drinks tonight?\"\n\n\"Not yet,\" Bethany frowned.\n\n\"She will,\" Helen replied. \"She is trying to get us ladies to go out for a celebratory drink for our promotions.\"\n\n\"That's not very fair to poor Clark,\" Bethany said.\n\n\"She asked him first,\" Helen replied. \"But you know Clark. One of his kids has some sport or another they're playing. Besides, I think he'd rather celebrate with his wife.\"\n\n\"What about Judy? I would think she'll wants to celebrate with Bradley,\" Bethany asked.\n\n\"She probably will later, but she wants to go out for drinks first,\" Helen shrugged. \"You should probably invite Sally while your meeting with Joe and her. She got promoted as well.\"\n\nBethany nodded and made her way to Joe's office. Sally was already there. They had started without her. Good! She joined in and an hour later they were still talking when Judy popped her head in.\n\n\"Let's go ladies,\" she grinned. \"I'm buying the first round!\"\n\n\"Where are you going?\" Joe asked with a frown.\n\n\"For a celebratory drink,\" Judy said. \"Sorry Joe, ladies only. Besides, it's for only those of us who received promotions today. You never did mention any change in your own position.\"\n\n\"Hey that's true!\" Sally laughed.\n\n\"You do realize that in theory at least, you work for Clark?\" Bethany asked with a grin. \"After all, a vice president of Implementation is a higher ranking title than Director of Implementation. He's an officer of the company. You're not.\"\n\n\"Have your fun now ladies,\" Joe smiled. \"But next week Brad returns and you'd better hope he decides to promote me as well, otherwise your promotions might be short lived. In fact, as director of implementations, I didn't have the authority to give you those promotions in the first place!\"",
        "\"Is he trying to take back our promotions?\" Helen asked with a grin as she joined them.\n\n\"No, he's just miffed because we aren't inviting him,\" Judy teased.\n\n\"Where's Clark?\" Joe asked. \"I'm feeling a bit outnumbered.\" The ladies laughed and exited Joe's office. He watched them go with a smile and stopped Bethany only long enough to say, \"I'll see you in the morning.\" She nodded and quickly followed the others.\n\nThey went to a local bar and Judy ordered them a round of drinks. They talked about work for a while and their promotions. Bethany described her encounter with Tim in some detail as she ordered the next round. Sally added her own observations and they all ended up laughing again.\n\n\"So, do you guys want to hear what the latest company pool is?\" Sally asked.\n\n\"I don't know, do we?\" Judy asked with a raised eyebrow.\n\n\"Probably not,\" Sally laughed, but then proceeded to tell them anyway. \"It's who is going to get married first, you and Bradley or Joe and Bethany.\" Judy rolled her eyes while Bethany groaned.\n\n\"Bradley and I are waiting for Bethany and Joe to resolve their little issue before making anything formal,\" Judy said. \"Although, at the rate they're going, I make no promises.\"\n\n\"So, what is up with you and Joe?\" Helen asked, ordering another round.\n\n\"Depends on who you talk to,\" Bethany sighed, taking another sip of her drink.\n\n\"Joe says that I just need to overcome my fear of relationships,\" she explained. \"Judy thinks I need to have faith and trust.\" Bethany paused with a frown and then remembering, added, \"Oh yeah! She also says I need to stop thinking so much!\"\n\n\"True,\" Judy shrugged.\n\n\"Well, I think you should quit while you're ahead!\" Helen put in. She sounded a tad bit drunk already. Her small size probably had something to do with it. That and the fact that she threw down her first two drinks.\n\n\"Helen!\" Sally cried.\n\n\"Okay, okay,\" Helen said with a roll of her eyes. \"Maybe I'm not the best person to talk to at this time. I'm still pretty pissed at my ex!\"\n\n\"I don't much like my ex either,\" Sally confided.\n\n\"See!\" Bethany cried. \"The whole idea of marriage is...\"\n\n\"Not really the issue,\" Judy interjected. \"It's not marriage that's the problem, it's marriage to the wrong man.\"\n\n\"Amen to that!\" Sally added. \"I said I didn't like my ex, but I love my current husband. He's a good man. I'm lucky to have him.\"\n\n\"And the guy I lived with for a couple of years was a jerk, but Bradley is something different altogether,\" Judy said. Bethany glanced at her three friends.\n\n\"Don't look at me,\" Helen shrugged. \"Every guy I've met so far is a looser! Especially my ex!\"\n\n\"That's just because you haven't met the right guy yet,\" Sally said knowingly.\n\n\"The question you have to ask yourself,\" Judy said to Bethany. \"Is whether Joe is the right guy for you?\"\n\n\"He's the only guy for me, but...\" Bethany began.\n\n\"There can be no buts,\" Sally said. Judy nodded in agreement. \"Either he is or he isn't the right guy for you. It's really that simply.\"\n\n\"But how do you know?\" Bethany asked.\n\n\"Oh I give up!\" Judy snapped, but Sally wasn't so quick to surrender.\n\n\"Close your eyes and picture yourself in twenty years,\" she said.\n\n\"I'll be lucking to be alive in twenty years!\" Bethany snorted.\n\n\"Shush!\" Sally snapped. \"You're not that old!\"\n\n\"Okay, I'm picturing it,\" Bethany said with a loud sigh.\n\n\"Describe what you see,\" Sally demanded.\n\n\"I see a large house overlooking a lake,\" Bethany said. She always liked lakes. \"I'm sitting is a brightly colored room facing east. The sun is rising and I'm eating a freshly made omelet.\"\n\n\"What else do you see?\" Sally asked. Judy and Helen were watching in silence.\n\n\"What do you mean?\" Bethany asked, still keeping her eyes closed. Judy and Helen exchanged a look, but Sally kept them quiet with a gesture.\n\n\"Look down at the table,\" Sally said softly. \"Tell me what you see.\"\n\n\"I see my omelet,\" Bethany said with a frown.\n\n\"Is that all that's on the table?\"\n\n\"No,\" Bethany said. \"There is another place setting and another omelet on the table as well.\" Sally looked at the other women and winked. She was smiling now.\n\n\"Whose omelet is it?\"\n\n\"How should I know?\" Bethany asked in annoyance.\n\n\"Look over and see who is sitting next to you, silly.\"\n\n\"Oh my!\" Bethany said as her eyes snapped open.\n\n\"Whoever you saw is the man for you,\" Sally said confidently.\n\n\"I hope it wasn't your ex,\" Helen said with a snort.\n\n\"It wasn't,\" Bethany said, smiling tentatively.\n\n\"Finally!\" Judy cried reaching for her drink. She accidentally brushed her breast against the bar and flinched.\n\n\"What's wrong?\" Bethany asked.\n\n\"Nothing,\" Judy sighed, but when Bethany continued to look at her she added, \"My breasts just seem more sensitive lately.\"\n\n\"Um, Judy,\" Bethany said, remembering the one and only time her own breasts became so sensitive. \"This is a bit personal, but are you and Bradley using protection?\"\n\n\"No,\" Judy said after a moment's hesitation.\n\n\"Isn't that a little risky?\" Helen asked.\n\n\"Not really,\" Judy replied. \"We both want kids.\"\n\n\"Well, it's probably too early to tell,\" Bethany sighed. \"But there's a good chance you'll both get your wish.\"\n\n\"You mean...\" Just said, but then she cut herself off suddenly and faced Sally. \"If this hits the company rumor mill I'll kill you!\"\n\n\"I'm willing to hold off on the pool until you're certain you're really pregnant,\" Sally smiled.\n\n\"And she tells Bradley,\" Bethany put in. Sally nodded good-naturedly.\n\n\"I don't know if I want you to be right or wrong!\" Judy cried. \"I've know Bradley's parents and all, but I have no idea how they'll react!\"\n\n\"I wouldn't worry about Brad,\" Bethany grinned. \"But I'm a bit curious as to how Cherie will react myself.\"\n\n\"Thanks!\" Judy said sarcastically.\n\n\"Just forget it for now,\" Helen said. \"Bethany could be wrong and there is no point in getting your hopes up, or fears for that matter.\"\n\n\"She's right,\" Sally put in.\n\n\"Easy for you all to say!\" Judy sighed, putting down her drink. \"I guess I'd better stop drinking just in case.\"\n\nThe four spent another half hour talking, but the conversation pretty much relied heavily on Sally and Helen. Judy and Bethany were deep in their own thoughts.\n\n\"I've got to go!\" Just said suddenly. \"I think it's time Bradley asks me to marry him again. I'm not willing to wait any longer for you and Joe to figure things out!\"\n\n\"I wouldn't worry about that,\" Bethany smiled. \"You go and find Bradley. I need to get ready to visit Joe in the morning.\"\n\n\"Why don't I give you a ride home?\" Sally asked Helen. The slightly built woman was the only one who seemed a bit tipsy.\n\n\"That's not nec...\" Helen began as she tried to stand. She had some difficultly. Helen laughed and added, \"I guess maybe it is!\"\n\n\"You know, my husband has a brother that would be just right for you,\" Sally said as she took Helen's arm and led her toward the door.\n\n\"Is he cute?\" Helen asked.\n\n\"Why don't you come to my house for dinner on Sunday and see?\"\n\n***\n\n\"Oh, this is just pointless!\" I growled, putting down the book I'd been trying to read for nearly an hour. I looked at the clock and saw that it was nearly midnight. I got up, stretched and decided to at least try and go to sleep. I needed minimally a few hours of sack time before seeing what Bethany had to say in the morning.\n\nI washed my face and brushed my teeth after cleaning up the kitchen. It all didn't take very long. I was about to shut the lights when there was a knock on the front door. I went to it and threw it open. I wasn't really surprised to see Bethany standing there. Who else would be at my front door at midnight?\n\n\"Aren't we supposed to be meeting tomorrow morning?\" I asked with a shake of my head.\n\n\"We agreed to meet Saturday morning,\" Bethany said, looking at her watch. \"It's after midnight, so technically it's Saturday morning.\"\n\n\"In a rush to break the bad news to me?\" I asked, holding my breath.\n\n\"Not really,\" she smiled and I let out my breath.\n\n\"So, trying to avoid having to make me an omelet?\" I joked nervously as I escorted her into my house. Instead of rolling her eyes or laughing, Bethany surprised me by smiling warmly and kissing me.\n\n\"Promise me we'll buy a house by a lake when we retire?\" she asked.\n\n\"Why wait until then?\" I asked, not sure why she was asking, but realizing it meant something special to her. \"We could always buy a summer home by a lake now.\"\n\n\"I'd like that,\" Bethany said, a single tear rolling down her cheek.\n\n\"What's wrong?\" I asked, worried about why she was crying.\n\n\"Absolutely nothing,\" Bethany smiled, wiping her tears. \"Why don't you get us both a drink? We could probably both use it!\"\n\nI went to the bar and made two drinks. Slowly the realization that Bethany had really consented to be mine hit me. I downed one of the glasses and refilled it without thought. I then walked to Bethany and handed her the other glass.\n\n\"Wait here!\" I said, suddenly remembering. Bethany's arriving early had thrown me. I nearly ran into my bedroom to find what I was looking for. I returned with a smile and walked up to Bethany and knelt down on one knee. She blushed happily, obviously aware of what was coming next.\n\n\"I think we should make it official,\" I smiled.\n\n\"It's probably a good idea,\" she agreed.\n\n\"Bethany will you consent to be my wife?\" I asked holding open a jewelry box with an engagement ring. Bethany ignored the ring for the moment and looked directly into my eyes.\n\n\"Yes,\" she said simply, and it was enough. I stood and kissed her briefly before removing the ring from its box and placing it on her finger.\n\n\"It's beautiful!\" she said, looking at the ring for the first time. It was rather large, but Bethany thought she could get used to it. \"How did you know I would like a pear shaped diamond?\"\n\n\"The same way I knew the correct size,\" I replied. Bethany looked up into my eyes and then nodded in understanding.\n\n\"Jennie,\" she said. That was one of the things I loved best about Bethany. She was so damn smart!\n\n\"Your daughter was a big help,\" I smiled. \"God knows what you would have ended up with if not for her!\"\n\n\"You didn't enlist the help of my granddaughter as well?\" Bethany asked.\n\n\"No,\" I replied honestly. \"I would have if I was sure you were going to say yes, but...\"\n\n\"I didn't make it easy for you, did I?\" Bethany asked with a gentle laugh.\n\n\"No, but it was worth it!\" I smiled in reply. It was at that moment that I noticed that Bethany was still wearing her coat, so I asked, \"Can I take your coat?\"\n\n\"I thought you'd never ask!\" Bethany said in exasperation. I frowned in confusion until Bethany removed her coat. I was faced with another thing I loved about Bethany. She had a great body!\n\n\"Oh wow!\" I said, staring at the green camisole Bethany was wearing. She looked amazing!\n\n\"You like it?\" Bethany asked with a sexy grin.\n\n\"Yes, but I like what's under it more!\" I growled, pulling her into a kiss. She kissed me back and I lifted her into my arms.\n\n\"I guess it was worth the chance of getting in a car accident and having to explain to the hospital why I was wearing nothing but this under my coat!\" she giggled as I carried her to my bedroom.\n\nI placed Bethany on the bed and looked down at her. She lay there sexily and seeing my expression, said, \"I'm all yours!\"\n\n\"Reading my mind already?\" I joked.\n\n\"Come here,\" she said, holding out her arms. I moved between her arms and kissed her deeply. This time the kiss lasted minutes, not seconds, and with each passing second the kiss grew more and more passionate until Bethany couldn't take it any longer! She broke our kiss only long enough to say, \"I want to feel you inside of me!\"\n\nThe camisole disappeared. So did my clothes. I lay on top of her within moments. I smiled when our eyes met. She smiled as well as she reached out and directed my cock to her pussy. It was already hot and steamy. Her pussy was ready and so was I. Bethany gasped as she took the entire length of my cock in.\n\n\"Oh Joe!\" she cried. I leaned forward and kissed her. Bethany grabbed my ass and pulled me deep. It only took a handful of strokes before she locked up in orgasm. I was close, but not quite there yet. I waited until Bethany's orgasm subsided.\n\nShe rolled over and moved me onto my back. Bethany climbed between my legs and wrapped her breasts around my cock. Her eyes never left mine as she used her tits to stroke my cock.\n\n\"I want you to come on my tits and in my mouth!\" Bethany said, surprising me. It was silly really. Bethany was great in bed, but she always acted so prim and proper outside of the bedroom that I forgot how wild she could be.\n\n\"Soon!\" I gasped out. Bethany opened her mouth wide and let the tip of her tongue touch the head of my cock. That's all it took! I started cumming instantly! She sucked my cock in for the first few jets of cum, but then pulled away and directed the rest onto her breasts. Never once did her eyes break contact with mine, not even when I was done and she started rubbing my cum into her breasts.\n\n\"I'm too spent to move,\" I sighed. \"Climb up here and let me return the favor.\" Bethany smiled and did just that. She placed her thighs on either side of my head and held onto the headboard for support. I drove my tongue up into her and Bethany groaned.\n\n\"I love your tongue! It's wicked!\" she said. In answer I flicked it against her clit. \"Oh yes!\"\n\nBethany rode my face until she came and then tried to move away. I didn't let her. It wasn't long before she neared another orgasm.\n\n\"I'm cumming!\" she cried. \"Again!\" I nibbled gently on her clit as she came. Bethany cried out and continued to orgasm for some time. My face was drenched by the time she was finally done!\n\nI moved out from under her, but Bethany remained in the same position. Instead of making her move I got behind her and rubbed my cock between her legs. Bethany spread her legs a little wider, granting me better access to her pussy. \n\nI pushed in with one stroke. Bethany groaned and fell against the headboard. She didn't look comfortable, so I moved down enough for her to lie on the bed. Her ass was high in the air. I grabbed hold of her hips and started fucking into her as hard as I could. It wasn't long before my balls were slapping her clit.\n\nI looked over Bethany's shoulder and saw her lying with one check against the sheet. Her mouth was slightly open and her tongue kept darting out to wet her lips. Bethany had her eyes closed as she enjoyed what I was doing. I reached over and brushed her lips with one of my fingers. Her eyes snapped open and she sucked my finger into her mouth. I picked up the pace in response.\n\n\"I'm going to cum!\" I finally cried.\n\n\"Yes!\" she replied. I started cumming a moment later. Bethany joined me after a couple more strokes. We fell into each other's arms once we were both done.\n\n\"That was amazing!\" Bethany sighed.\n\n\"We can rest a few minutes and go again?\" I offered. Bethany shook her head.\n\n\"We're going to spend the rest of our lives together. Let's get some sleep and wait for tomorrow.\"\n\n\"Sounds good to me,\" I smiled. \"Although, if we keep this up every night then you take the chance of becoming a widow! I'm not a young man.\"\n\n\"Don't even joke about that!\" she snapped. \"I have plans for us in ten or twenty years.\"\n\n\"Do they involve a lake house?\" I asked, remember her earlier request.\n\n\"Yes,\" she said, smiling once more as she closed her eyes and started to drift off to sleep. \"Tomorrow we'll have to talk about your diet and exercise habits.\" I looked at her and shook my head.\n\n\"Not even married yet and you're already trying to change me!\" I teased.\n\n\"I'm not trying to change you,\" she yawned. \"I just want you to live long enough for us to enjoy our retirement.\" Bethany cuddled into me and stopped talking. I was pretty sure she was already asleep. \n\nI was exhausted myself. I took a deep breath, once again memorizing the scent of her. I felt my eyes grow heavy. I hugged Bethany one last time. It felt good to be sleeping next to the woman of my dreams! The best part was that this was only the first of many such nights. I smiled, closed my eyes and drifting off to sleep.\n\n***\n\nI awoke the next morning to the phone ringing.\n\n\"Who could be calling at this time of the day?\" Bethany groaned, obviously wanting to stay asleep.\n\n\"I don't know,\" I shrugged, and then grinning added, \"Normally only you call at this time.\"\n\n\"I've never called you this early in the morning!\" Bethany joked back. \"I only visit at this time of day.\" We both laughed.\n\n\"Are you going to answer it?\" Bethany asked when I didn't reach for the phone.\n\n\"No,\" I replied with a grin. \n\n\"Grow up!\" Bethany said with a roll of her eyes and reached for the phone. \"Hello, who's this?\" I watched as Bethany sat silently listening to whoever was talking on the other side of the line.\n\n\"You can't be serious!\" she cried suddenly. There was another pause as she listened, and then she added, \"Of course we'll be there!\" She then hung up the phone and jumped out of bed.\n\n\"Let's go!\" she cried. \"We have to shower and be ready in half an hour!\"\n\n\"What for!\" I grumbled.\n\n\"No time to explain now!\" Bethany replied. \"I'll explain on the way!\"\n\n\"But...\" I began to say, but stopped when I realized that Bethany was already in the bathroom taking a shower. I grabbed my towel and went to the other bathroom. I wasn't sure what was going on, but I was pretty sure it wasn't anything bad. If it were, Bethany would have taken the time to explain.\n\n***\n\n\"I leave this place for two weeks and it all goes to hell!\" Brad cried angrily.\n\n\"Oh stop yelling!\" Cherie said with a loud sigh. First her son calls and leaves a message that he won't be in town over the weekend and that he left his cell phone at home, and now they arrive at the office directly from the airport to find it empty. Okay, empty was a bit unfair, but there was no sign of their son, Joe, Judy or Bethany.\n\n\"And where is Sally?\" Brad growled.\n\n\"I'm right here,\" Sally said with a forced smile as she made her way down the hall.\n\n\"Why aren't you at your desk?\" Brad snapped.\n\n\"I was,\" Sally sighed. \"There have been some changes since you left.\"\n\n\"So who's manning the phones?\" he asked.\n\n\"Isn't a more important question, where is our son and the others?\" Cherie interjected.\n\n\"A temp should be arriving in the next few minutes to handle the phones, and your son, Joe, Judy and Bethany will be in at around ten,\" Sally said, answering both questions. \"And before you ask, I don't know where they are or why they're late.\" This seemed to calm Cherie, but Brad didn't seem any less agitated.\n\n\"Tell me what's been going on since I left!\" he demanded.\n\n\"I think that should wait for Joe and your son to explain,\" Sally said. The promotions and changes were only part of the story. Helen had come to dinner on Sunday to meet her husband's brother. While she was there she explained about Gerty and what she found. Sally was a little miffed that Joe and Bethany hadn't bothered to tell her this on Friday, but they'd only met for an hour or so and they had a lot to go over.\n\n\"Why don't we go out to breakfast and return at ten?\" Cherie asked in a tone that wasn't really a question.\n\n\"I want to wait here,\" Brad said stubbornly. Sally groaned to herself as she picture Brad grilling every employee that passed by the lobby.\n\n\"Brad, we caught a red eye at your insistence and I'm tired and hungry,\" Cherie said. \"Sally says that Bradley is okay, and in that case we can certainly wait a couple of hours to see what's going on without frightening the employees.\" Brad looked ready to argue, but he sighed instead and nodded in agreement. They left for a nearby diner.\n\nOf course, they were back precisely at ten. Bradley and the other didn't arrive for another twelve minutes. Sally was counting. During that time Helen took one look at Brad's face and smartly retreated to her office. Clark didn't even bother to take a look. Neither was willing to face Brad and Sally couldn't blame them.",
        "\"There you are!\" Brad cried as the four excited the elevator.\n\n\"Hi dad! Mom!\" Bradley said with a smile. Cherie smiled despite herself. Bradley looked extremely happy.\n\n\"Where have you been!\" Brad cried.\n\n\"Why don't we take this into a conference room?\" Joe suggested. \"Otherwise we're going to draw a crowd.\"\n\n\"That sounds wonderful!\" Sally put in, and then asked Joe, \"Do you want me to get the others?\"\n\n\"Yes,\" Joe grinned. \"Have Clark and Helen come meet us at the conference room. You might as well come too.\" Sally nodded and disappeared. She arrived with Helen and Clark only a few moments after the others settled in.\n\n\"So, now will you tell me what's going on since I left?\" Brad asked, sounding a little calmer, but just a little.\n\n\"Who wants to start?\" Joe asked.\n\n\"Why don't you take it?\" Bradley grinned.\n\n\"Gee thanks!\" Joe grumbled.\n\n\"Just start talking!\" Brad growled in annoyance.\n\n\"Calm down dear,\" Cherie said, still watching her son's face. He was happier than she remembered seeing him in a long time. That was great to see, but there had to be a reason. She knew about his budding relationship with Judy, but it couldn't be the cause of this large of a change. Could it?\n\n\"Let's see,\" Joe began. \"Why don't we start with business first? I think it's pretty obvious that Bethany and I figured out what you were up to?\"\n\n\"Hostile take over of your old jobs! Preposterous!\" Brad grumbled, but nodded in understanding. Bethany blushed, but everyone ignored it.\n\n\"Since you left I've done some restructuring. First off, the people you see in this room are the new management team,\" Joe continued.\n\n\"New management team?\" Brad asked. Joe nodded.\n\n\"Judy's been promoted to senior vice president in charge of Sales and Marketing,\" Joe continued. \"I made Clark the vice president of Customer implementation.\"\n\n\"No surprises there,\" Brad shrugged, but then he asked in curiosity, \"What Sally's new role?\" \n\n\"Oh, she's going to be my assistant,\" Joe replied. \"Assuming you still plan on making me the new CEO?\"\n\n\"That's a done deal,\" Brad said offhandedly, yet it still made Joe smile in relief. \"That is, assuming you and Bethany have worked out your differences. And speaking of Bethany, if Sally is going to be your assistant, then what's Bethany going to do?\"\n\n\"She's the new vice president of Customer support. She has Helen as her assistant vice president to help deal with the technical issues,\" Joe explained. Brad's eyebrows rose for a moment, but then he nodded.\n\n\"Makes sense,\" he said. \"She can handle it easily enough.\" Bethany smiled and blushed again. Brad confidence in her was so very satisfying.\n\n\"What about the other areas?\" Brad asked, growing calmer as he finally started hearing about the changes.\n\n\"Well, accounting has seen the least amount of changes,\" Joe replied. \"I've started meeting with Gary and he seems knowledgeable enough. I'd like to wait a few more months to be sure, but he'll probably head up the area as you and Bethany planned.\"\n\n\"The new vice president of product development is still up in the air, but we've already changed their focus. We're hoping to promote someone inside the company, but if necessary I can start looking on the market.\"\n\n\"Who's the favorite?\" Brad asked Sally, causing a few people in the room to smile.\n\n\"Simon,\" she replied. \"He's at about forty percent now.\" Brad nodded and waved for Joe to continue.\n\n\"We've also shifted a bunch of staff between the areas. Sally will get you an org chart after the meeting,\" Joe said. Sally handed over a document to Brad.\n\n\"Way to stay on top of things!\" Bethany smiled. \n\n\"It was pretty easy to figure out Brad would need to see an org chart,\" Sally shrugged, slightly embarrassed.\n\n\"Maybe,\" Joe smiled. \"But you had to be thinking ahead to have it ready.\"\n\n\"I don't see Tim or Sara-Jane on this org chart,\" Brad said suddenly, refocusing the conversation.\n\n\"Well, removing Tim may have been a little premature,\" Bethany began. \"After reviewing the area in some detail it became obvious that he's a pretty bad manager. I gave him a choice of continuing to be a designer or finding another job.\"\n\n\"He didn't come in this morning,\" Sally put in. \"He called in sick.\" Bethany rolled her eyes.\n\n\"Then again, maybe not having him on the org chart wasn't premature,\" she said. \"Sally, if he doesn't come in tomorrow we'll need to send him a registered letter letting him know he was let go.\"\n\n\"I'll handle it,\" Sally said.\n\n\"No, you just need to make sure I follow up,\" Bethany explained. \"You'll have enough work without volunteering for more. You only do tasks that Joe assigns you. That and make sure that people follow up with what they tell Joe they're going to do.\"\n\n\"Got it,\" Sally replied. Joe nodded to himself. He liked Sally's style. She was doing far better than he expected despite the on the job training Bethany was giving her, but he knew he shouldn't be surprised. After all, Bethany had suggested her. Okay, maybe suggested was too weak a word.\n\n\"And Sara-Jane?\" Brad asked. Everyone fell silent for a moment, but eventually Joe took the lead again.\n\n\"We have a meeting with Gerty Hannon tomorrow,\" Joe said carefully. \n\n\"That hussy!\" Cherie cried. \n\n\"I told you so!\" Bethany said pointedly to Joe.\n\n\"On damn!\" Brad snapped, knowing what getting Gerty involved meant. \"How bad is it?\"\n\n\"So far, the worst of it is Sara-Jane and kickbacks,\" Joe explained. \"She was also blackmailing Karl.\"\n\n\"With what?\" Brad asked.\n\n\"He was working on an underage porn site while on company time,\" Helen snorted. \n\n\"Bastard!\" Brad growled. Bradley just shook his head. \n\n\"He spent at least one night last week in jail,\" Joe continued. \"I'm not sure of the full extent of the charges. I'm sure Gerty will let us know tomorrow.\"\n\n\"Okay, is there anything else I need to know about the company?\" Brad asked.\n\n\"Not at this time,\" Joe replied for them all.\n\n\"Good, now tell me what's going on with you and Bethany,\" Brad demanded.\n\n\"We're engaged to be married,\" Joe grinned.\n\n\"I'm planning the wedding for early June,\" Bethany said with a wink at Sally. She then turned to Brad and asked, \"If you wouldn't mind, I'd like you to walk me down the aisle? My father's been gone for many years and it's no secret that you've been like a second father to me.\"\n\n\"I'd be honored,\" Brad said with a smile.\n\n\"If he's been a father to you, I guess that makes you my older sister,\" Bradley grinned. \"Sibling rivalry would explain a lot.\" Brad smiled at his son's teasing. It looked like Bradley and Bethany had finally decided to become friends. It was about time!\n\n\"Okay, baby brother,\" Bethany teased back. \"Don't you have some news for your father and mother?\"\n\n\"You and Judy are engaged!\" Cherie guessed excitedly.\n\n\"Well, actually,\" Bradley said nervously. \"We're married.\"\n\n\"And there is a chance that I may be pregnant,\" Judy put in. \n\n\"Oh my!\" Cherie said.\n\n\"Congratulation,\" Brad said with a smile. His son wasn't the type of man who fell in and out of love every other day. He loved Judy and they would be good together. The thought of a possible grandchild didn't hurt, especially if it was a boy and they named it Bradley.\n\n\"Mom, are you okay?\" Bradley asked. Cherie nodded slowly.\n\n\"I'm not particularly happy about missing the wedding, but under the circumstances, I guess I understand,\" Cherie said calmly. \"Of course, that's assuming you let me throw the baby shower?\"\n\n\"Of course,\" Judy said with a smile. \"But keep in mind, I may not even be pregnant.\"\n\n\"Sure you are,\" Cherie said, looking at what she thought was the early stage of a pregnant woman's glow on Judy's face. \"But if not, then so be it. In that case, I'll want to set up a full blown wedding reception for all our friends.\"\n\n\"Okay,\" Judy said, less enthusiastically.\n\n\"Don't worry, we'll keep busy so that you'll have to be pregnant before mother can set up the reception!\" Bradley grinned.\n\n\"Bradley!\" Cherie cried. \n\n\"So, I guess it's time for me to go back into retirement,\" Brad said glumly, changing the subject.\n\n\"No, it's not,\" Cherie said, and then smiled and added, \"You've been happier since you took back over the company. Joe can be the CEO, but you're still the Chairman of the Board. It will be your job to go into the office once or twice a week and drive poor Joe and his management team crazy.\"\n\n\"I don't think that would be fair,\" Brad said with a frown.\n\n\"Fair?\" Joe said excitedly. \"Are you kidding? I'd love to have you around for a few more years.\"\n\n\"Only once or twice a week!\" Cherie cried, making sure her terms were understood.\n\n\"What would I do?\" Brad asked.\n\n\"Well, for starters,\" Joe smiled. \"I have a small list of clients who Sara-Jane made deals with. I don't know all of these clients well enough to figure out who to talk to so that I can get this issue resolved.\"\n\n\"Also, I'm still not sure whether to press charges against Sara-Jane and what to do with the information about Karl that Gerty's going to give me.\"\n\n\"I could use your help too,\" Bethany said. \"I'm new to this type of job and I'll need a mentor. Joe will be my boss and that's fine, but he'll also be my husband. I could use someone to be a sounding board so that I know if and when my personal life is interfering with my professional life.\"\n\n\"He's only to come into the office once or twice a week!\" Cherie cried again.\n\n\"That's fair,\" Joe smiled. Brad nodded, but there was something in his expression that caused Cherie to shake her head.\n\n\"It is,\" Brad said with a smile to his wife. \"I'm assuming I still get my Saturday morning golf games? I need to show poor Joe here how to golf once my wrist heals.\"\n\n\"We take a week once every two months to travel, and we take a month during the summer,\" Cherie said with a calculating look.\n\n\"Deal,\" Brad said, bending down and kissing his wife.\n\n\"Starting tomorrow,\" Cherie added. Brad frowned, but then nodded in agreement again.\n\n\"It has been a long night,\" he sighed. \"Why don't we go home and get some rest?\"\n\n\"Bradley, we'll see you and Judy at dinner?\" Cherie asked.\n\n\"Yes mother,\" Bradley said after taking a moment to check with Judy. Brad and Cherie left the room.\n\n\"Wow!\" Clark said once they were gone.\n\n\"Mother and father do taking some getting used to,\" Bradley said with a laugh as he slapped Clark on the back. \n\nBethany smiled as she heard Helen and Sally planning Helen's date with Sally's husband's brother as they left. The poor man would never know what hit him! The room quickly emptied until only Joe and Bethany remained.\n\n\"You know, everyone keep making fun of your concept of a hostile take over of our old jobs, but no one seems to comment on the fact that it worked,\" Joe said with a grin.\n\n\"True genius is frequently not recognized until years later,\" Bethany joked back. Joe laughed and pulled her into a quick kiss.\n\n\"I guess its time we get back to work,\" Bethany sighed.\n\n\"Yes, but tonight we'll sleep at my place again,\" Joe said.\n\n\"Why?\" Bethany asked, not really disagreeing. She was just curious. \n\n\"We still haven't broken in my hot tub correctly.\"\n\n\"You and that damned hot tub!\" Bethany sighed. \"Tonight we're going to spent so much time in it, that you'll never bring it up again!\"\n\n\"I can hardly wait!\" Joe laughed. \"What about tomorrow night?\"\n\n\"We'll think of something else to do,\" Bethany smiled sexily. \n\nJoe's heart skipped a beat. He was not a young man and he'd done poorly in picking his first wife, but he had a feeling that Bethany was going to make up for all those years of loneliness. He couldn't wait to get started!\n\nBethany saw the look in his eyes and felt his love surround her. At that moment she knew that she made the right choice. Whatever her luck with men in the past, Joe was the one for her. She trusted him implicitly. It should have scared her, but Bethany decided to take Judy's advice and not think about it. Instead, she took a moment to let Joe's love wash over her. It felt amazing!"
    ],
    "authorname": "JoeDreamer",
    "tags": [
        "romance"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/saving-the-company-ch-05"
}